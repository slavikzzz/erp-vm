////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы "Внеоборотные активы".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Формирует представление количества месяцев в виде строки "Х лет Х месяцев".
//
// Параметры:
//  КоличествоМесяцев	- Число		- Количество месяцев.
//  ЗаключитьВСкобки	- Булево	- Истина, если срок нужно заключить в скобки.
// 
// Возвращаемое значение:
//  Строка - расшифровка срока полезного использования в годах и месяцах.
//
Функция ПредставлениеКоличестваМесяцевСтрокой(КоличествоМесяцев, ЗаключитьВСкобки = Истина) Экспорт

	Если НЕ ЗначениеЗаполнено(КоличествоМесяцев) Тогда
		Возврат "";
	КонецЕсли;
	
	ЧислоЛет = Цел(КоличествоМесяцев / 12);
	ЧислоМесяцев = (КоличествоМесяцев % 12);
	
	РасшифровкаСрокаПолезногоИспользования = "";
	
	Если ЧислоЛет <> 0 Тогда
		РасшифровкаСрокаПолезногоИспользования =
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(НСтр("ru = ';%1 год;;%1 года;%1 лет;%1 года';
																			|en = ';%1 year;;%1 years;%1 years;%1 years'"), ЧислоЛет);
	КонецЕсли;
	
	Если ЧислоМесяцев <> 0 Тогда
		РасшифровкаСрокаПолезногоИспользования =
			РасшифровкаСрокаПолезногоИспользования
			+ ?(ЧислоЛет <> 0, " ", "")
			+ СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(НСтр("ru = ';%1 месяц;;%1 месяца;%1 месяцев;%1 месяца';
																			|en = ';%1 month;;%1 month;%1 months;%1 months'"), ЧислоМесяцев);
	КонецЕсли;
	
	Если ЗаключитьВСкобки Тогда
		РасшифровкаСрокаПолезногоИспользования = "(" + РасшифровкаСрокаПолезногоИспользования + ")";
	КонецЕсли;
		
	Возврат РасшифровкаСрокаПолезногоИспользования;
	
КонецФункции

// Формирует представление срока в виде строки "Х лет Х месяцев Х дней".
// 
// Параметры:
// 	КоличествоЛет - Число -
// 	КоличествоМесяцев - Число -
// 	КоличествоДней - Число -
// Возвращаемое значение:
// 	Строка - 
Функция ПредставлениеСрокаСтрокой(Знач КоличествоЛет, Знач КоличествоМесяцев, Знач КоличествоДней) Экспорт

	Если КоличествоЛет + КоличествоМесяцев + КоличествоДней = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	РасшифровкаСрокаПолезногоИспользования =
		?(КоличествоЛет <> 0, СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(НСтр("ru = ';%1 год;;%1 года;%1 лет;%1 года';
																							|en = ';%1 year;;%1 years;%1 years;%1 years'"), КоличествоЛет), "")
		+ ?(КоличествоЛет <> 0 И КоличествоМесяцев <> 0, " ", "")
		+ ?(КоличествоМесяцев <> 0, СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(НСтр("ru = ';%1 месяц;;%1 месяца;%1 месяцев;%1 месяца';
																									|en = ';%1 month;;%1 month;%1 months;%1 months'"), КоличествоМесяцев), "")
		+ ?(КоличествоЛет + КоличествоМесяцев <> 0 И КоличествоДней <> 0, " ", "")
		+ ?(КоличествоДней <> 0, СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(НСтр("ru = ';%1 день;;%1 дня;%1 дней;%1 дня';
																								|en = ';%1 day;;%1 day;%1 days;%1 day'"), КоличествоДней), "");
	
	Возврат РасшифровкаСрокаПолезногоИспользования;

КонецФункции

// Формирует представление срока в виде строки "с 01.01.2020 по 31.12.2020 (Х лет Х месяцев Х дней)".
// 
// Параметры:
// 	КоличествоЛет - Число -
// 	КоличествоМесяцев - Число -
// 	КоличествоДней - Число -
// 	ДатаНачала - Дата -
// 	ТолькоПросмотр - Булево - 
// Возвращаемое значение:
// 	ФорматированнаяСтрока - 
Функция ПредставлениеСрокаФорматированнойСтрокой(Знач КоличествоЛет, Знач КоличествоМесяцев, Знач КоличествоДней, Знач ДатаНачала, Знач ТолькоПросмотр) Экспорт
	
	СтрокиЗаголовкаСрока = Новый Массив;
	
	Если КоличествоЛет + КоличествоМесяцев + КоличествоДней = 0
		И НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
		
		СтрокиЗаголовкаСрока.Добавить(НСтр("ru = '<не указан>';
											|en = '<not specified>'"));
	
	ИначеЕсли КоличествоЛет + КоличествоМесяцев + КоличествоДней > 0 Тогда
		
		ДатаОкончания = ДатаОкончанияПоСроку(ДатаНачала, КоличествоЛет, КоличествоМесяцев, КоличествоДней);
					 
		ТекстЗаголовка = СтрШаблон(НСтр("ru = 'с %1 по %2';
										|en = 'from %1 to %2'"), Формат(ДатаНачала, "ДЛФ=D;"), Формат(ДатаОкончания, "ДЛФ=D;"));
		СтрокиЗаголовкаСрока.Добавить(ТекстЗаголовка);
				
		ТекстЗаголовка = ПредставлениеСрокаСтрокой(
							КоличествоЛет,
							КоличествоМесяцев,
							КоличествоДней);
							
		СтрокиЗаголовкаСрока.Добавить(" (");
		СтрокиЗаголовкаСрока.Добавить(ТекстЗаголовка);
		СтрокиЗаголовкаСрока.Добавить(")");
			
	Иначе
		
		ТекстЗаголовка = СтрШаблон(НСтр("ru = 'с %1';
										|en = 'from %1'"), Формат(ДатаНачала, "ДЛФ=D;"));
		СтрокиЗаголовкаСрока.Добавить(ТекстЗаголовка);
		
	КонецЕсли;
	
	ТекстСсылки = ?(НЕ ТолькоПросмотр, "#Редактировать", "");
	
	Возврат  Новый ФорматированнаяСтрока(СтрокиЗаголовкаСрока,,,, ТекстСсылки);
	
КонецФункции

// Расчитывает дату окончания по сроку.
// 
// Параметры:
// 	ДатаНачала - Дата - 
// 	СрокЛет - Число - 
// 	СрокМес - Число - 
// 	СрокДней - Число - 
// 	ПроверитьСрок - Булево -
// 	
// Возвращаемое значение:
// 	Дата - Дата окончания.
Функция ДатаОкончанияПоСроку(ДатаНачала, СрокЛет, СрокМес, СрокДней, ПроверитьСрок = Ложь) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДатаНачала)
		ИЛИ ПроверитьСрок И СрокЛет = 0 И СрокМес = 0 И СрокДней = 0 Тогда
		Возврат '000101010000';
	КонецЕсли;
	
	ДатаОкончания = НачалоДня(ДатаНачала);
	
	Если СрокЛет <> 0 Тогда
		ДатаОкончания = ДобавитьМесяц(ДатаНачала, СрокЛет * 12);
		Если ДатаНачала = КонецМесяца(ДатаНачала) Тогда
			ДатаОкончания = КонецМесяца(ДатаОкончания);
		КонецЕсли;
	КонецЕсли;
	
	Если СрокМес <> 0 Тогда
		ДатаОкончания = ДобавитьМесяц(ДатаОкончания, СрокМес);
		Если ДатаНачала = КонецМесяца(ДатаНачала) Тогда
			ДатаОкончания = КонецМесяца(ДатаОкончания);
		КонецЕсли;
	КонецЕсли;
	
	Если СрокДней <> 0 Тогда
		ДатаОкончания = ДатаОкончания + 86400 * СрокДней;
	КонецЕсли;
	
	ДатаОкончания = Макс(ДатаОкончания - 86400, ДатаНачала);
	
	Возврат ДатаОкончания;
	
КонецФункции

// Рассчитывает срок по периоду.
// Считается, что между 01.01.2021 и 02.01.2021 срок равен двум дням.
// 
// Параметры:
// 	ДатаНачала - Дата - 
// 	ДатаОкончания - Дата - 
// 	СрокЛет - Число - 
// 	СрокМес - Число - 
// 	СрокДней - Число -
// 
Процедура РассчитатьСрокПоПериоду(ДатаНачала, ДатаОкончания, СрокЛет, СрокМес, СрокДней) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДатаНачала) 
		ИЛИ НЕ ЗначениеЗаполнено(ДатаОкончания)
		ИЛИ ДатаНачала > ДатаОкончания Тогда
		Возврат;
	КонецЕсли;
	
	СрокЛет = 0;
	НачалоСледующейДаты = ДобавитьМесяц(ДатаНачала, 12) - 86400;
	Пока НачалоСледующейДаты <= ДатаОкончания Цикл
		СрокЛет = СрокЛет + 1;
		НачалоСледующейДаты = ДобавитьМесяц(НачалоСледующейДаты, 12);
	КонецЦикла;
	
	СрокМес = 0;
	НачалоСледующейДаты = ДобавитьМесяц(ДатаНачала, 12 * СрокЛет + 1) - 86400;
	ЭтоКонецМесяца = (КонецДня(НачалоСледующейДаты) = КонецМесяца(НачалоСледующейДаты));
	Пока НачалоСледующейДаты <= ДатаОкончания Цикл
		СрокМес = СрокМес + 1;
		НачалоСледующейДаты = ДобавитьМесяц(НачалоСледующейДаты, 1);
		Если ЭтоКонецМесяца Тогда
			НачалоСледующейДаты = НачалоДня(КонецМесяца(НачалоСледующейДаты));
		КонецЕсли;
	КонецЦикла;
	
	СрокДней = 0;
	НачалоСледующейДаты = ДобавитьМесяц(ДатаНачала, 12 * СрокЛет + СрокМес);
	Пока НачалоСледующейДаты <= ДатаОкончания Цикл
		СрокДней = СрокДней + 1;
		НачалоСледующейДаты = НачалоСледующейДаты + 86400;
	КонецЦикла;
	
КонецПроцедуры

// Форматирует строку в соответствии с заданным шаблоном.
// Возможные значения тегов в шаблоне:
// - <b> Строка </b> - выделяет строку жирным шрифтом.
// - <a href = "Ссылка"> Строка </a> - добавляет гиперссылку.
// Например, "Минимальная версия программы <b>1.1</b>. <a href = "Обновление">Обновите</a> программу.".
//
// Параметры:
//  СтрокаСТегами - Строка - строка, содержащая теги форматирования.
//
// Возвращаемое значение:
//  ФорматированнаяСтрока - преобразованная строка.
//
Функция ФорматированнаяСтрока(Знач СтрокаСТегами) Экспорт
	
	НаборСтрок = Новый Массив;
	
	ТекущийШрифт  = Неопределено;
	ТекущийЦвет   = Неопределено;
	ТекущийФон    = Неопределено;
	ТекущаяСсылка = Неопределено;
	
	ФрагментыСтроки = СтрРазделить(СтрокаСТегами, "<", Истина);
	Для каждого Фрагмент Из ФрагментыСтроки Цикл
		
		ТелоСтроки = "";
		ПозицияТэг = СтрНайти(Фрагмент, ">");
		
		Если ПозицияТэг = 0 Тогда
			ТелоСтроки = Фрагмент;
			
		ИначеЕсли СтрНачинаетсяС(Фрагмент, "/") Тогда
			ТелоСтроки = Сред(Фрагмент, ПозицияТэг + 1);
			
			ТекущийШрифт  = Неопределено;
			ТекущийЦвет   = Неопределено;
			ТекущийФон    = Неопределено;
			ТекущаяСсылка = Неопределено;
			
		Иначе
			
			ОписаниеТэга = Лев(Фрагмент, ПозицияТэг - 1);
			ПервыйПробел = СтрНайти(ОписаниеТэга, " ");
			
			Если ПервыйПробел > 0 Тогда
				ИмяТега = СокрЛП(Лев(ОписаниеТэга, ПервыйПробел));
				
				ОписаниеАтрибутов = Сред(ОписаниеТэга, ПервыйПробел + 1);
				ОписаниеАтрибутов = СтрЗаменить(ОписаниеАтрибутов , """", "'");
				
				ПозицияРавно = СтрНайти(ОписаниеАтрибутов, "=");
				Пока ПозицияРавно > 0 Цикл
					
					ИмяАтрибута = СокрЛП(Лев(ОписаниеАтрибутов, ПозицияРавно - 1));
					ПозицияПерваяКавычка = СтрНайти(ОписаниеАтрибутов, "'",, ПозицияРавно + 1);
					Если ПозицияПерваяКавычка = 0 Тогда
						ПозицияПерваяКавычка = ПозицияРавно;
					КонецЕсли;
					ПозицияВтораяКавычка = СтрНайти(ОписаниеАтрибутов, "'",, ПозицияПерваяКавычка + 1);
					Если ПозицияВтораяКавычка = 0 Тогда
						ПозицияВтораяКавычка = СтрДлина(ОписаниеАтрибутов) + 1;
					КонецЕсли;
					ЗначениеАтрибута  = СокрЛП(Сред(ОписаниеАтрибутов, ПозицияПерваяКавычка + 1,  ПозицияВтораяКавычка - ПозицияПерваяКавычка - 1));
					
					Если СтрСравнить(ИмяАтрибута, "href") = 0 И СтрСравнить(ИмяТега, "a") = 0 Тогда
						ТекущаяСсылка = ЗначениеАтрибута;
					ИначеЕсли СтрСравнить(ИмяАтрибута, "src") = 0 И СтрСравнить(ИмяТега, "img") = 0 Тогда
						НаборСтрок.Добавить(Новый ФорматированнаяСтрока(БиблиотекаКартинок[ЗначениеАтрибута], ТекущийШрифт, ТекущийЦвет, ТекущийФон, ТекущаяСсылка));
					КонецЕсли;
					
					ОписаниеАтрибутов = Сред(ОписаниеАтрибутов, ПозицияВтораяКавычка + 1);
					ПозицияРавно = СтрНайти(ОписаниеАтрибутов, "=");
					
				КонецЦикла;
			Иначе
				ИмяТега = ОписаниеТэга;
			КонецЕсли;
			
			Если ИмяТега = "b" Тогда
				ТекущийШрифт = Новый Шрифт(,, Истина,,,,);
			КонецЕсли;
			
			ТелоСтроки = Сред(Фрагмент, ПозицияТэг + 1);
			
		КонецЕсли;
		
		ТелоСтроки = СтрЗаменить(ТелоСтроки, "&lt;", "<");
		Если СтрДлина(ТелоСтроки) > 0 Тогда
			НаборСтрок.Добавить(Новый ФорматированнаяСтрока(ТелоСтроки, ТекущийШрифт, ТекущийЦвет, ТекущийФон, ТекущаяСсылка));
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Новый ФорматированнаяСтрока(НаборСтрок);
	
КонецФункции

// Определяет доступные варианты распределения расходов на основании порядка учета.
// 
// Параметры:
//  ПорядокУчета - ПеречислениеСсылка.ПорядокПогашенияСтоимостиОС,
//  			ПеречислениеСсылка.ПорядокУчетаСтоимостиВнеоборотныхАктивов	 - Порядок учета.
// 
// Возвращаемое значение:
//  Массив из ПеречислениеСсылка.ВариантыРаспределенияРасходов - Доступные варианты распределения расходов
Функция ДоступныеВариантыРаспределенияРасходов(ПорядокУчета) Экспорт
	
	ПорядокСписания = Новый Массив;
	ПорядокСписания.Добавить(ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НеПриниматьКУчетуВключитьВРасходы"));
	ПорядокСписания.Добавить(ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету"));
	ПорядокСписания.Добавить(ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету"));
	ПорядокСписания.Добавить(ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету"));
	ПорядокСписания.Добавить(ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету"));
	ПорядокСписания.Добавить(ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы"));
	
	//++ Локализация
	ПорядокСписания.Добавить(ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету"));
	ПорядокСписания.Добавить(ПредопределенноеЗначение("Перечисление.ПорядокСписанияНИОКРНУ.ПриПринятииКУчету"));
	//-- Локализация
	
	ВариантыРаспределенияРасходов = Новый Массив;
	
	Если ПорядокСписания.Найти(ПорядокУчета) <> Неопределено Тогда
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
			ВариантыРаспределенияРасходов,
			ДоступныеВариантыРаспределенияРасходовПриСписании());
		
	КонецЕсли; 
	
	Возврат ВариантыРаспределенияРасходов;
	
КонецФункции

// Доступные варианты распределения расходов при списании.
// 
// Возвращаемое значение:
//  Массив из ПеречислениеСсылка.ВариантыРаспределенияРасходов -  Доступные варианты распределения расходов при списании
Функция ДоступныеВариантыРаспределенияРасходовПриСписании() Экспорт
	
	ВариантыРаспределенияРасходов = Новый Массив;
	
	ВариантыРаспределенияРасходов.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности"));
	ВариантыРаспределенияРасходов.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НеРаспределять"));
	ВариантыРаспределенияРасходов.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы"));
	
	Возврат ВариантыРаспределенияРасходов;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Заполняет заголовок элемента или скрывает элемент, если заголовок пустой.
// 
// Параметры:
// 	ЭлементФормы - ДекорацияФормы - Элемент формы.
// 	ЗаголовокЭлемента - Массив, Неопределено - Массив строк для формирования заголовка элемента.
Процедура ЗаполнитьСведенияЭлемента(ЭлементФормы, ЗаголовокЭлемента) Экспорт

	Если ЗаголовокЭлемента <> Неопределено И ЗаголовокЭлемента.Количество() <> 0 Тогда
		ЭлементФормы.Заголовок = Новый ФорматированнаяСтрока(ЗаголовокЭлемента);
		ЭлементФормы.Видимость = Истина;
	Иначе
		ЭлементФормы.Видимость = Ложь;
	КонецЕсли; 

КонецПроцедуры

// Добавляет в табличную часть выбранные ОС / НМА.
//
// Параметры:
//  ТабличнаяЧасть		 - ДанныеФормыКоллекция	 - Табличная часть основных средств.
//  ИмяРеквизита		 - Строка				 - Имя реквизита табличной части.
//  ВыбранноеЗначение	 - Массив				 - Выбранные основные средства (параметр события ОбработкаВыбора).
// 
// Возвращаемое значение:
//  Массив - Список добавленных строк.
//
Функция ОбработкаВыбораЭлемента(ТабличнаяЧасть, ИмяРеквизита, ВыбранноеЗначение) Экспорт

	Если ВыбранноеЗначение.Количество() = 0 Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	ДобавленныеСтроки = Новый Массив;
	Для Каждого ЭлементМассива Из ВыбранноеЗначение Цикл
		СтруктураПоиска = Новый Структура(ИмяРеквизита, ЭлементМассива);
		СписокСтрок = ТабличнаяЧасть.НайтиСтроки(СтруктураПоиска);
		Если СписокСтрок.Количество() = 0 Тогда
			НоваяСтрока = ТабличнаяЧасть.Добавить();
			НоваяСтрока[ИмяРеквизита] = ЭлементМассива;
			ДобавленныеСтроки.Добавить(НоваяСтрока);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДобавленныеСтроки;

КонецФункции

Функция ЗначениеСвойстваРеквизитаОбъекта(ИмяРеквизита, Свойство, ПараметрыРеквизитовОбъекта) Экспорт

	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		Если ПараметрыРеквизита.ИмяРеквизита = ИмяРеквизита И ПараметрыРеквизита.Свойство = Свойство Тогда
			Возврат ПараметрыРеквизита.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

// Добавляет или удаляет из списка значение.
// 
// Параметры:
// 	СписокВыбора - СписокЗначений из Произвольный - Свойство "СписокВыбора" элемента формы.
// 	Видимость - Булево - Истина, если значение должно быть видно.
// 	Значение - Произвольный - Значение списка, которое нужно показать или скрыть.
// 	Представление - Строка - Представление значения.
// 	Позиция - Число, Неопределено - Позиция в списке выбора.
Процедура УстановитьВидимостьЗначенияСпискаВыбора(СписокВыбора, Видимость, Значение, Представление= "", Позиция = Неопределено) Экспорт

	ЭлементСписка = СписокВыбора.НайтиПоЗначению(Значение);
	
	Если Видимость Тогда
		
		Если ЭлементСписка = Неопределено Тогда
			Если Позиция <> Неопределено Тогда
				СписокВыбора.Вставить(Позиция, Значение, Представление);
			Иначе
				СписокВыбора.Добавить(Значение, Представление);
			КонецЕсли;
		Иначе
			ЭлементСписка.Представление = Представление;
		КонецЕсли;
		 
	ИначеЕсли ЭлементСписка <> Неопределено Тогда
		
		СписокВыбора.Удалить(ЭлементСписка);
		
	КонецЕсли; 

КонецПроцедуры

Процедура УстановитьПредставлениеЗначенияСпискаВыбора(СписокВыбора, ЗначениеЭлемента, ПредставлениеЭлемента) Экспорт
	
	ЭлементСписка = СписокВыбора.НайтиПоЗначению(ЗначениеЭлемента);
	Если ЭлементСписка <> Неопределено Тогда
		ЭлементСписка.Представление = ПредставлениеЭлемента;
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыПринятияКУчетуОС(Объект, ВспомогательныеРеквизиты) Экспорт

	ПараметрыПринятияКУчетуОС = ПараметрыПринятияКУчетуОСИВводаОстатков(Объект, ВспомогательныеРеквизиты);	

	//
	ФактическаяСтоимость =
		Объект.ЧастичныйВводВЭксплуатацию 
		ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
		ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена")
		ИЛИ НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости
		ИЛИ ПринятиеКУчетуОСКлиентСерверЛокализация.ПрименяетсяФактическаяСтоимость(Объект);

	//
	СтоимостьБУДоступна = Объект.ОтражатьВРеглУчете;
	
	//
	СтоимостьУУДоступна = 
		Объект.ОтражатьВУпрУчете 
		И (ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
			
	//
	ПараметрыПринятияКУчетуОС.Вставить("ФактическаяСтоимость", ФактическаяСтоимость);
	ПараметрыПринятияКУчетуОС.Вставить("СтоимостьУУДоступна", СтоимостьУУДоступна);
	ПараметрыПринятияКУчетуОС.Вставить("СтоимостьБУДоступна", СтоимостьБУДоступна);
	
	ПринятиеКУчетуОСКлиентСерверЛокализация.ДополнитьПараметрыПринятияКУчетуОС(
		Объект, ВспомогательныеРеквизиты, ПараметрыПринятияКУчетуОС);
	
	Возврат ПараметрыПринятияКУчетуОС;
	
КонецФункции

Функция ПараметрыПринятияКУчетуУзловКомпонентовАмортизации(Объект, ВспомогательныеРеквизиты) Экспорт
	
	ДоступныПараметрыАмортизацииБУ = 
		(Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.ПустаяСсылка"))
		И ВспомогательныеРеквизиты.ОтражатьВБУ
		И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо;
		
	ДоступныПараметрыАмортизацииУУ = 
		(Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
				ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена")
				ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"))
			И ВспомогательныеРеквизиты.ОтражатьВУпрУчете;
	
	ДоступноОтражениеРасходовУУ = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете
		И (Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету"));
			
	АмортизацияБУДоступна = 
		Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации")
		И ВспомогательныеРеквизиты.ОтражатьВБУ
		И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо;
		
	АмортизацияУУДоступна = 
		(Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
				ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету"))
			И ВспомогательныеРеквизиты.ОтражатьВУпрУчете;
	
	ПоНаработке = 
		Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
		ИЛИ Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции");
		
	ПараметрыПринятияКУчету = Новый Структура;
	ПараметрыПринятияКУчету.Вставить("ДоступныПараметрыАмортизацииБУ", ДоступныПараметрыАмортизацииБУ);
	ПараметрыПринятияКУчету.Вставить("ДоступныПараметрыАмортизацииУУ", ДоступныПараметрыАмортизацииУУ);
	ПараметрыПринятияКУчету.Вставить("ДоступноОтражениеРасходовУУ", ДоступноОтражениеРасходовУУ);
	ПараметрыПринятияКУчету.Вставить("АмортизацияУУДоступна", АмортизацияУУДоступна);
	ПараметрыПринятияКУчету.Вставить("АмортизацияБУДоступна", АмортизацияБУДоступна);
	ПараметрыПринятияКУчету.Вставить("ПоНаработке", ПоНаработке);
	
	СтоимостьБУДоступна = Объект.ОтражатьВРеглУчете;

	СтоимостьУУДоступна = 
		Объект.ОтражатьВУпрУчете 
		И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
			
	ПараметрыПринятияКУчету.Вставить("СтоимостьУУДоступна", СтоимостьУУДоступна);
	ПараметрыПринятияКУчету.Вставить("СтоимостьБУДоступна", СтоимостьБУДоступна);
	
	Возврат ПараметрыПринятияКУчету;
	
КонецФункции

Функция ПараметрыПринятияКУчетуНМА(Объект, ВспомогательныеРеквизиты) Экспорт

	ДоступныПараметрыАмортизацииБУ = 
		ВспомогательныеРеквизиты.ОтражатьВБУ
		И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
		И (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"));
		
	ДоступныПараметрыАмортизацииУУ = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете
		И (Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"));
									
	ДоступноОтражениеРасходовБУ = 
		ВспомогательныеРеквизиты.ОтражатьВБУ
		И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
		И (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"));
	
	ДоступноОтражениеРасходовУУ = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете
		И (Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы")
			ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"));
									
	ПоНаработке = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции")
		ИЛИ ВспомогательныеРеквизиты.ОтражатьВБУ
			И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции");
				
	АмортизацияБУДоступна = 
		ВспомогательныеРеквизиты.ОтражатьВБУ
		И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
		И (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"));
			
	СтатьяРасходовУУОбязательна = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете 
		И (НЕ ДоступноОтражениеРасходовБУ
			ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы"));
					
	ПараметрыПринятияКУчетуНМА = Новый Структура;
	ПараметрыПринятияКУчетуНМА.Вставить("ДоступныПараметрыАмортизацииБУ", ДоступныПараметрыАмортизацииБУ);
	ПараметрыПринятияКУчетуНМА.Вставить("ДоступныПараметрыАмортизацииУУ", ДоступныПараметрыАмортизацииУУ);
	ПараметрыПринятияКУчетуНМА.Вставить("ДоступноОтражениеРасходовБУ", ДоступноОтражениеРасходовБУ);
	ПараметрыПринятияКУчетуНМА.Вставить("ДоступноОтражениеРасходовУУ", ДоступноОтражениеРасходовУУ);
	ПараметрыПринятияКУчетуНМА.Вставить("АмортизацияБУДоступна", АмортизацияБУДоступна);
	ПараметрыПринятияКУчетуНМА.Вставить("СтатьяРасходовУУОбязательна", СтатьяРасходовУУОбязательна);
	ПараметрыПринятияКУчетуНМА.Вставить("ПоНаработке", ПоНаработке);
	ПараметрыПринятияКУчетуНМА.Вставить("ПоИнвентаризации", Ложь);
	ПараметрыПринятияКУчетуНМА.Вставить("НаправлениеДеятельностиОбязательно", Ложь);
	
	ПринятиеКУчетуНМАКлиентСерверЛокализация.ДополнитьПараметрыПринятияКУчетуНМА(Объект, ВспомогательныеРеквизиты, ПараметрыПринятияКУчетуНМА);
	
	Возврат ПараметрыПринятияКУчетуНМА;

КонецФункции

Функция ПараметрыВводаОстатковОС(Объект, ВспомогательныеРеквизиты) Экспорт

	ПараметрыВводаОстатковОС = ПараметрыПринятияКУчетуОСИВводаОстатков(Объект, ВспомогательныеРеквизиты);
	
	ПараметрыВводаОстатковОС.Вставить("ДоступныПараметрыУчета", ВспомогательныеРеквизиты.ОтражатьВОперативномУчете);
	ПараметрыВводаОстатковОС.Вставить("ДействуетНачислениеИзноса", Ложь);
	
	ВводОстатковВнеоборотныхАктивовКлиентСерверЛокализация.ДополнитьПараметрыВводаОстатковОС(
		Объект, ВспомогательныеРеквизиты, ПараметрыВводаОстатковОС);

	Возврат ПараметрыВводаОстатковОС;

КонецФункции

Функция ПараметрыВводаОстатковНМА(Объект, ВспомогательныеРеквизиты) Экспорт
	
	ПараметрыВводаОстатковНМА = ПараметрыПринятияКУчетуНМА(Объект, ВспомогательныеРеквизиты);
	
	ВводОстатковВнеоборотныхАктивовКлиентСерверЛокализация.ДополнитьПараметрыВводаОстатковНМА(
		Объект, ВспомогательныеРеквизиты, ПараметрыВводаОстатковНМА);
	
	Возврат ПараметрыВводаОстатковНМА;

КонецФункции

Функция ПараметрыОбъединенияОС(Объект, ВспомогательныеРеквизиты) Экспорт

	ПараметрыОбъединенияОС = ПараметрыПринятияКУчетуОСИВводаОстатков(Объект, ВспомогательныеРеквизиты);	
	
	Возврат ПараметрыОбъединенияОС;
	
КонецФункции

Функция ЗаполнитьРеквизитыВЗависимостиОтСвойств_ОбъединениеОС(Объект, ПараметрыРеквизитовОбъекта) Экспорт

	ИзмененныеРеквизиты = Новый Массив;
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		
		Если НЕ ЗначениеЗаполнено(ПараметрыРеквизита.ИмяРеквизита)
			ИЛИ СтрРазделить(ПараметрыРеквизита.ИмяРеквизита, ".").ВГраница() <> 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Действие = ОчиститьИлиЗаполнить(Объект, ПараметрыРеквизита);
		
		Если НЕ ЗначениеЗаполнено(Действие) Тогда
			Продолжить;
		КонецЕсли;
		
		#Область СтраницаУчет
		
		Если ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюУУ" Тогда
			Объект[ПараметрыРеквизита.ИмяРеквизита] = ?(Действие = "Заполнить", Истина, Ложь);
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаУУ"
			И Действие = "Заполнить" Тогда
			Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииУУ"
			И Действие = "Заполнить" Тогда
			Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный");
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли;
		
		#КонецОбласти
		
		#Область СтраницаОтражениеРасходов
		
		Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовУУ" Тогда
			Если Действие = "Очистить" Тогда
				Объект.СтатьяРасходовУУ = Неопределено;
				Объект.АналитикаРасходовУУ = Неопределено;
				ИзмененныеРеквизиты.Добавить("СтатьяРасходовУУ");
				ИзмененныеРеквизиты.Добавить("АналитикаРасходовУУ");
			КонецЕсли;
		КонецЕсли;
		
		#КонецОбласти
		
		ВнеоборотныеАктивыКлиентСерверЛокализация.ЗаполнитьРеквизитыВЗависимостиОтСвойств_ОбъединениеОС(
			Объект, ПараметрыРеквизита, Действие, ИзмененныеРеквизиты);
		
	КонецЦикла; 
	
	Возврат СтрСоединить(ИзмененныеРеквизиты, ",");
	
КонецФункции

// Устанавливает видимость элемента.
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - 
// 	ИмяЭлемента - Строка -
// 	ИменаРеквизитовДанныеФлаг - Структура -
// 	ИмяТЧ - Строка -
// 	СтруктураИзмененныхРеквизитов- Структура - 
Процедура УстановитьВидимостьТекущегоЗначенияПараметраПриИзмененииПараметров(Форма, ИмяЭлемента, ИменаРеквизитовДанныеФлаг, ИмяТЧ, СтруктураИзмененныхРеквизитов) Экспорт

	Если СтруктураИзмененныхРеквизитов.Количество() = 0 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПоказатьТекущиеЗначения") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство(ИменаРеквизитовДанныеФлаг.ИмяРеквизитаФлаг) Тогда
			
		ЭлементФормы = Форма.Элементы[?(ИмяЭлемента = Неопределено, ИмяТЧ + ИменаРеквизитовДанныеФлаг.ИмяРеквизита, ИмяЭлемента)];
		ЭлементФормы.Видимость = Форма.Объект[ИменаРеквизитовДанныеФлаг.ИмяРеквизитаФлаг] И Форма.ПоказатьТекущиеЗначения;
			
	КонецЕсли;

КонецПроцедуры

Функция ИменаРеквизитовДанныеФлаг(ИмяРеквизита, ИмяРеквизитаФлаг) Экспорт
	
	ИментаРеквизитовДанныеФлаг = Новый Структура;
	ИментаРеквизитовДанныеФлаг.Вставить("ИмяРеквизита", ИмяРеквизита);
	ИментаРеквизитовДанныеФлаг.Вставить("ИмяРеквизитаФлаг", ИмяРеквизитаФлаг);
	
	Возврат ИментаРеквизитовДанныеФлаг; 
	
КонецФункции

#Область ОпределениеСвойствЗависимыхРеквизитовОбъекта

// 
// Параметры:
//  Объект - ДокументОбъект.ПринятиеКУчетуОС2_4 - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	ПараметрыПринятияКУчетуОС = ПараметрыПринятияКУчетуОС(Объект, ВспомогательныеРеквизиты);
	
	ПринятиеКУчетуОСКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов(
		Объект, ВспомогательныеРеквизиты, ПараметрыПринятияКУчетуОС, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	#Область Основное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС")
			И ВспомогательныеРеквизиты.ИспользоватьОбъектыСтроительства;
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВидАналитикиКапитализацииРасходов", 
			"ВидАналитикиРасходовОсновныеСредства", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВидАналитикиКапитализацииРасходов", 
			"ВидАналитикиРасходовОбъектыСтроительства", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъектСтроительства", 
			"ОбъектСтроительства", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЧастичныйВводВЭксплуатацию", 
			"ЧастичныйВводВЭксплуатацию", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		//
		ЗначениеСвойства = 
			Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды");
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Договор", 
			"Договор", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
		//
		ЗначениеСвойства = 
			(Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
				ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды"));
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументОснование", 
			"ДокументОснование", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументНаОсновании", 
			"ДокументНаОсновании", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидАналитикиКапитализацииРасходов")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС")
			ИЛИ Объект.ВидАналитикиКапитализацииРасходов <> ПредопределенноеЗначение("Перечисление.ВидыАналитикиКапитализацииРасходов.ОбъектСтроительства");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЧастичныйВводВЭксплуатацию", 
			"ЧастичныйВводВЭксплуатацию", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидАналитикиКапитализацииРасходов")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВидАналитикиКапитализацииРасходов <> ПредопределенноеЗначение("Перечисление.ВидыАналитикиКапитализацииРасходов.ОбъектСтроительства");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъектСтроительства", 
			"ОбъектСтроительства", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"АвтоОтметкаНезаполненного", 
			ПараметрыПринятияКУчетуОС.НаправлениеДеятельностиОбязательно, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПринятиеКУчетуПрошлойДатой")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ПринятиеКУчетуПрошлойДатой;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДоначислитьАмортизациюЗаПрошлыйПериод", 
			"ДоначислитьАмортизациюЗаПрошлыйПериод", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = НЕ Объект.ПринятиеКУчетуПрошлойДатой;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПринятияКУчету", 
			"ДатаПринятияКУчету", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	#КонецОбласти
	
	#Область ОС
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыПринятияКУчетуОС.СтоимостьБУДоступна;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьБУ", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ЛиквидационнаяСтоимостьРегл", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = ПараметрыПринятияКУчетуОС.СтоимостьУУДоступна;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьУУ", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ЛиквидационнаяСтоимость", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
				
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ПоказательНаработки", 
			"ОСПоказательНаработки", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ПоНаработке, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСПоказательНаработкиЕдиницаИзмерения", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ПоНаработке, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ОбъемНаработки", 
			"ОСОбъемНаработки", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ПоНаработке, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУчета
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияБУРасшифровка", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУ", 
			"НачислятьАмортизациюБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ,
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВБУ 
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВБУ 
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И (Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"));
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ",
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			Объект.ОтражатьВБУ 
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И (Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
				И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ", 
			"КоэффициентУскоренияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаУУ", 
			"ПорядокУчетаУУ", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияУУРасшифровка", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюУУ", 
			"НачислятьАмортизациюУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", 
			"МетодНачисленияАмортизацииУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ
							И (Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
								ИЛИ Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка"));
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ
							И Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка"));
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", 
			"КоэффициентУскоренияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
		
	#КонецОбласти
	
	#Область ОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НеПриниматьКУчетуВключитьВРасходы");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовУУ
			ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовУУ", 
			"АналитикаРасходовУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"АвтоОтметкаНезаполненного", 
			ПараметрыПринятияКУчетуОС.СтатьяРасходовУУОбязательна, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
		
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.ПринятиеКУчетуУзловКомпонентовАмортизации, ДанныеФормыСтруктура - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуУзловКомпонентовАмортизации(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	ПараметрыПринятияКУчету = ПараметрыПринятияКУчетуУзловКомпонентовАмортизации(Объект, ВспомогательныеРеквизиты);
	
	Если ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"АвтоОтметкаНезаполненного", 
			Ложь, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 

	#Область КомпонентыАмортизации
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КомпонентыАмортизации.СтоимостьБУ", 
			"", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыПринятияКУчету.СтоимостьУУДоступна;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КомпонентыАмортизации.СтоимостьУУ", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = НЕ ВспомогательныеРеквизиты.ВалютыСовпадают;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"КомпонентыАмортизацииЛиквидационнаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
				
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КомпонентыАмортизации.ПоказательНаработки", 
			"КомпонентыАмортизацииПоказательНаработки", 
			"Видимость", 
			ПараметрыПринятияКУчету.ПоНаработке, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"КомпонентыАмортизацииПоказательНаработкиЕдиницаИзмерения", 
			"Видимость", 
			ПараметрыПринятияКУчету.ПоНаработке, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КомпонентыАмортизации.ОбъемНаработки", 
			"КомпонентыАмортизацииОбъемНаработки", 
			"Видимость", 
			ПараметрыПринятияКУчету.ПоНаработке, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУчетаБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыПринятияКУчету.ДоступныПараметрыАмортизацииБУ;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияБУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУ", 
			"НачислятьАмортизациюБУ", 
			"Видимость", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
				И ПараметрыПринятияКУчету.ДоступныПараметрыАмортизацииБУ);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ", 
			"КоэффициентУскоренияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И (Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"));
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ",
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУчетаУУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаУУ", 
			"ПорядокУчетаУУ", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыПринятияКУчету.ДоступныПараметрыАмортизацииУУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияУУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюУУ", 
			"НачислятьАмортизациюУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", 
			"МетодНачисленияАмортизацииУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыПринятияКУчету.ДоступныПараметрыАмортизацииУУ
			И (Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
				ИЛИ Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка"));
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыПринятияКУчету.ДоступныПараметрыАмортизацииУУ
			И Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка");
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", 
			"КоэффициентУскоренияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
		
	#КонецОбласти
	
	ВнеоборотныеАктивыКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуУзловКомпонентовАмортизации(
		Объект, ВспомогательныеРеквизиты, ПараметрыПринятияКУчету, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_СписаниеОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходов")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("АналитикаСоответствуетСписываемомуОС")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			Объект.АналитикаСоответствуетСписываемомуОС;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходов", 
			"АналитикаРасходов", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходов")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			ТипЗнч(Объект.СтатьяРасходов) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов")
			И ЗначениеЗаполнено(Объект.СтатьяРасходов);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаСоответствуетСписываемомуОС", 
			"АналитикаСоответствуетСписываемомуОС", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаСписанияБУ", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете 
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное")
			И (ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаСписанияУУ", 
			"ОССуммаСписанияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОС.Количество() > 1;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПриходуемыеМЦОсновноеСредство", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПриходуемыеМЦ.ОсновноеСредство", 
			"ПриходуемыеМЦОсновноеСредство", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ЛиквидационнаяСтоимостьРегл", 
			"ОСЛиквидационнаяСтоимостьРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное")
			И (ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ЛиквидационнаяСтоимость", 
			"ОСЛиквидационнаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СписаниеСПрошлойДаты", 
			"СписаниеСПрошлойДаты", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаСписания", 
			"ДатаСписания", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СписаниеСПрошлойДаты")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.СписаниеСПрошлойДаты;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаСписания", 
			"ДатаСписания", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	ВнеоборотныеАктивыКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_СписаниеОС(
		Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровОС2_4, ДанныеФормыСтруктура - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_ИзменениеПараметровОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	#Область Основное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПараметрыДействуютСПрошлойДаты")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ПараметрыДействуютСПрошлойДаты;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачалоДействия", 
			"НачалоДействия", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
		
	#Область УчетБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВБУ 
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУ", 
			"НачислятьАмортизациюБУ", 
			"Видимость", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУФлаг", 
			"НачислятьАмортизациюБУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУФлаг", 
			"МетодНачисленияАмортизацииБУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУФлаг", 
			"СрокИспользованияБУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"СрокИспользованияБУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"УказанОстаточныйСрокБУ", 
			"УказанОстаточныйСрокБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ", 
			"КоэффициентУскоренияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУФлаг", 
			"КоэффициентУскоренияБУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюБУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУ", 
			"НачислятьАмортизациюБУ",
			"ТолькоПросмотр", 
			НЕ Объект.НачислятьАмортизациюБУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ",
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.МетодНачисленияАмортизацииБУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("КоэффициентУскоренияБУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ", 
			"КоэффициентУскоренияБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.КоэффициентУскоренияБУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.СрокИспользованияБУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"УказанОстаточныйСрокБУ", 
			"УказанОстаточныйСрокБУ", 
			"ТолькоПросмотр", 
			НЕ Объект.СрокИспользованияБУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	#КонецОбласти
	
	#Область УчетУУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюУУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюУУ", 
			"НачислятьАмортизациюУУ", 
			"ТолькоПросмотр", 
			НЕ Объект.НачислятьАмортизациюУУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюУУ", 
			"НачислятьАмортизациюУУ", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюУУФлаг",
			"НачислятьАмортизациюУУФлаг",
			"Видимость",
			Объект.ОтражатьВУпрУчете,
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", 
			"МетодНачисленияАмортизацииУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.МетодНачисленияАмортизацииУУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", 
			"МетодНачисленияАмортизацииУУ", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУФлаг", 
			"МетодНачисленияАмортизацииУУФлаг", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияУУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.СрокИспользованияУУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУФлаг", 
			"СрокИспользованияУУФлаг", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияУУРасшифровка", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"УказанОстаточныйСрокУУ", 
			"УказанОстаточныйСрокУУ", 
			"ТолькоПросмотр", 
			НЕ Объект.СрокИспользованияУУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"УказанОстаточныйСрокУУ", 
			"УказанОстаточныйСрокУУ", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("КоэффициентУскоренияУУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", 
			"КоэффициентУскоренияУУ", 
			"ТолькоПросмотр", 
			НЕ Объект.КоэффициентУскоренияУУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", 
			"КоэффициентУскоренияУУ", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУФлаг", 
			"КоэффициентУскоренияУУФлаг", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВУпрУчете ИЛИ Объект.ОтражатьВБУ И Объект.ОтражатьВНУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГруппаФинансовогоУчета", 
			"ГруппаФинансовогоУчета", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГруппаФинансовогоУчетаФлаг", 
			"ГруппаФинансовогоУчетаФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельностиФлаг", 
			"НаправлениеДеятельностиФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = Объект.ОтражатьВУпрУчете ИЛИ Объект.ОтражатьВБУ;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПоказательНаработки", 
			"ПоказательНаработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПоказательНаработкиФлаг", 
			"ПоказательНаработкиФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработки", 
			"ОбъемНаработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработкиФлаг", 
			"ОбъемНаработкиФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаФинансовогоУчетаФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГруппаФинансовогоУчета", 
			"ГруппаФинансовогоУчета", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ГруппаФинансовогоУчетаФлаг, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НаправлениеДеятельностиФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности",
			"НаправлениеДеятельности",
			"ТолькоПросмотр", 
			НЕ Объект.НаправлениеДеятельностиФлаг,
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПоказательНаработкиФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПоказательНаработки",
			"ПоказательНаработки",
			"ТолькоПросмотрБезОтметкиНезаполненного",
			НЕ Объект.ПоказательНаработкиФлаг,
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОбъемНаработкиФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработки",
			"ОбъемНаработки",
			"ТолькоПросмотрБезОтметкиНезаполненного",
			НЕ Объект.ОбъемНаработкиФлаг, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	// При изменении параметров только в налоговом учете, изменение ЕГДС не имеет смысла.
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Если (Объект.ОтражатьВБУ = Ложь И Объект.ОтражатьВУпрУчете = Ложь)
			И (Объект.ОтражатьВНУ И Объект.ОтражатьВРеглУчете) Тогда // Изменение параметров только в налоговом учете.
			ВидимостьЕГДС = Ложь;
		Иначе 														// Все прочие варианты изменения параметров.
			ВидимостьЕГДС = Истина;
		КонецЕсли;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕГДС",
			"ЕГДС",
			"Видимость",
			ВидимостьЕГДС,
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕГДСФлаг",
			"ЕГДСФлаг",
			"Видимость",
			ВидимостьЕГДС,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область УчетОбщее
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И (ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимость", 
			"ЛиквидационнаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимостьФлаг", 
			"ЛиквидационнаяСтоимостьФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЛиквидационнаяСтоимостьФлаг") 
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимость", 
			"ЛиквидационнаяСтоимость", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ЛиквидационнаяСтоимостьФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВБУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимостьРегл", 
			"ЛиквидационнаяСтоимостьРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимостьРеглФлаг", 
			"ЛиквидационнаяСтоимостьРеглФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЛиквидационнаяСтоимостьРеглФлаг") 
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимостьРегл", 
			"ЛиквидационнаяСтоимостьРегл", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ЛиквидационнаяСтоимостьРеглФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Амортизация
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражениеАмортизационныхРасходовФлаг")
		ИЛИ ОбновитьВсе Тогда
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Амортизация",
			"Амортизация",
			"ТолькоПросмотрБезОтметкиНезаполненного",
			НЕ Объект.ОтражениеАмортизационныхРасходовФлаг, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
		
	ВнеоборотныеАктивыКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_ИзменениеПараметровОС(
		Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;

КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.МодернизацияОС2_4, ДанныеФормыСтруктура - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_МодернизацияОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	#Область Основное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидАналитикиКапитализацииРасходов")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВидАналитикиКапитализацииРасходов <> ПредопределенноеЗначение("Перечисление.ВидыАналитикиКапитализацииРасходов.ОбъектСтроительства"));
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъектСтроительства", 
			"ОбъектСтроительства", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЧастичнаяМодернизация", 
			"ЧастичнаяМодернизация", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ИспользоватьОбъектыСтроительства;
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВидАналитикиКапитализацииРасходов", 
			"ВидАналитикиРасходовОсновныеСредства", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВидАналитикиКапитализацииРасходов", 
			"ВидАналитикиРасходовОбъектыСтроительства", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъектСтроительства", 
			"ОбъектСтроительства", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЧастичнаяМодернизация", 
			"ЧастичнаяМодернизация", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"Видимость", 
			ВспомогательныеРеквизиты.НаправлениеДеятельностиОбязательно, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	#КонецОбласти
	
	#Область ОС
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьУУ", 
			"ОССтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	ВнеоборотныеАктивыКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_МодернизацияОС(
		Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;

КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.ПереоценкаОС2_4, ДанныеФормыСтруктура - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_ПереоценкаОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьУУ", 
			"ОССтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	ВнеоборотныеАктивыКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_ПереоценкаОС(
		Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.РазукомплектацияОС, ДанныеФормыСтруктура - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_РазукомплектацияОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	#Область ПараметрыБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьБУ", 
			"СтоимостьБУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизации", 
			"ГрафикАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации")
			И (Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
				ИЛИ Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка"));
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияБУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации")
			И Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка");
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ",
			"КоэффициентУскоренияБУ",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете 
			И (ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьУУ", 
			"СтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", 
			"МетодНачисленияАмортизацииУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации")
			И (Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
				ИЛИ Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка"));
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияУУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации")
			И Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка");
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ",
			"КоэффициентУскоренияУУ",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;

	#КонецОбласти
	
	#Область ОбщиеПараметры
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = НЕ ВспомогательныеРеквизиты.ВалютыСовпадают И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			Или ВспомогательныеРеквизиты.ОтражатьВУпрУчете И Не ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЛиквидационнаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			Или ВспомогательныеРеквизиты.ОтражатьВРеглУчете И Не ВспомогательныеРеквизиты.ОтражатьВУпрУчете;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЛиквидационнаяСтоимостьРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
			ИЛИ Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
			И ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПоказательНаработки", 
			"ПоказательНаработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработки", 
			"ОбъемНаработки", 
			"Видимость", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации");
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГруппаФинансовогоУчета",
			"ГруппаФинансовогоУчета",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	#КонецОбласти

	ВнеоборотныеАктивыКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_РазукомплектацияОС(
		Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4, ДанныеФормыСтруктура - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_ВводОстатков(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	ПараметрыРеквизитовОбъекта = Неопределено;
	
	Если ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств")
		ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
		ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе")
		ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе") Тогда
		
		ПараметрыРеквизитовОбъекта = ЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_ОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты);
		
	ИначеЕсли ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР") Тогда
		
		ПараметрыРеквизитовОбъекта = ЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_НМА(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты);
		
	ИначеЕсли ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды") Тогда
		
		ПараметрыРеквизитовОбъекта = ЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_РасчетыПоАренде(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты);
		
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.ПринятиеКУчетуНМА2_4 - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуНМА(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	ПараметрыПринятияКУчетуНМА = ПараметрыПринятияКУчетуНМА(Объект, ВспомогательныеРеквизиты);
		
	#Область Основное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьБУ", 
			"ПервоначальнаяСтоимостьБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимостьРегл", 
			"ЛиквидационнаяСтоимостьРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И (ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьУУ", 
			"ПервоначальнаяСтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимость", 
			"ЛиквидационнаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования") 
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"АвтоОтметкаНезаполненного", 
			ПараметрыПринятияКУчетуНМА.НаправлениеДеятельностиОбязательно, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУчетаБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВБУ 
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВБУ
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияБУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВБУ
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И (Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка"));
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ",
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВБУ
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентБУ", 
			"КоэффициентБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУчетаУУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВУпрУчете;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаУУ", 
			"ПорядокУчетаУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", 
			"МетодНачисленияАмортизацииУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияУУРасшифровка", 
			"Видимость", 
			ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииУУ
			И (Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный")
				ИЛИ Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка"));
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
		//
		ЗначениеСвойства = Объект.ОтражатьВУпрУчете
			И Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И Объект.МетодНачисленияАмортизацииУУ =
				ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", 
			"КоэффициентУскоренияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		Или СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		Или СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		Или СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработки", 
			"ОбъемНаработки", 
			"Видимость", 
			ПараметрыПринятияКУчетуНМА.ПоНаработке, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОтражениеРасходовБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВБУ 
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И ПараметрыПринятияКУчетуНМА.ДоступноОтражениеРасходовБУ;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОтражениеРасходовУУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуНМА.ДоступноОтражениеРасходовУУ, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовУУ", 
			"АналитикаРасходовУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуНМА.ДоступноОтражениеРасходовУУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете 
			И ПараметрыПринятияКУчетуНМА.СтатьяРасходовУУОбязательна;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	ВнеоборотныеАктивыКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуНМА(
		Объект, ПараметрыПринятияКУчетуНМА, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.СписаниеНМА2_4 - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_СписаниеНМА(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходов")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("АналитикаСоответствуетСписываемомуНМА")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			Объект.АналитикаСоответствуетСписываемомуНМА;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходов", 
			"АналитикаРасходов", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходов")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			ТипЗнч(Объект.СтатьяРасходов) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов")
			И ЗначениеЗаполнено(Объект.СтатьяРасходов);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаСоответствуетСписываемомуНМА", 
			"АналитикаСоответствуетСписываемомуНМА", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		Или СтруктураИзмененныхРеквизитов.Свойство("Организация")
		Или СтруктураИзмененныхРеквизитов.Свойство("Дата")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете 
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеНМАЧастичное")
			И (ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СуммаСписанияУУ", 
			"НМАСуммаСписанияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.ЛиквидационнаяСтоимость", 
			"НМАЛиквидационнаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеНМАЧастичное");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СуммаСписанияБУ", 
			"НМАСуммаСписанияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.ЛиквидационнаяСтоимостьРегл", 
			"НМАЛиквидационнаяСтоимостьРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	ВнеоборотныеАктивыКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_СписаниеНМА(
		Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.ПереоценкаНМА2_4, ДанныеФормыСтруктура - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_ПереоценкаНМА(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СтоимостьУУ", 
			"НМАСтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СтоимостьБУ", 
			"НМАСтоимостьБУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.ПеремещениеНМА2_4, ДанныеФормыСтруктура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_ПеремещениеНМА(Объект, ИзмененныеРеквизиты = "") Экспорт
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	ВнеоборотныеАктивыКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_ПеремещениеНМА(
		Объект, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_ИзменениеПараметровНМА(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	#Область СтраницаОсновное
	
	Если ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументОснование", 
			"ДокументОснование", 
			"Видимость", 
			ЗначениеЗаполнено(Объект.ДокументОснование), 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		Или СтруктураИзмененныхРеквизитов.Свойство("Организация")
		Или СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВБУ 
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо;
		
		// ПорядокУчетаБУ
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУФлаг", 
			"ПорядокУчетаБУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		// МетодНачисленияАмортизацииБУ
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУФлаг", 
			"МетодНачисленияАмортизацииБУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		// СрокИспользованияБУ
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУФлаг", 
			"СрокИспользованияБУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияБУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		// КоэффициентБУ
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентБУ", 
			"КоэффициентБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентБУФлаг", 
			"КоэффициентБУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУФлаг")
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ПорядокУчетаБУФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУФлаг")
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.МетодНачисленияАмортизацииБУФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУФлаг")
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.СрокИспользованияБУФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("КоэффициентБУФлаг")
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентБУ", 
			"КоэффициентБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.КоэффициентБУФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаУУ", 
			"ПорядокУчетаУУ", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаУУФлаг", 
			"ПорядокУчетаУУФлаг", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУФлаг") 
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаУУ", 
			"ПорядокУчетаУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ПорядокУчетаУУФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", 
			"МетодНачисленияАмортизацииУУ", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУФлаг", 
			"МетодНачисленияАмортизацииУУФлаг", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУФлаг") 
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", 
			"МетодНачисленияАмортизацииУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.МетодНачисленияАмортизацииУУФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		Или ОбновитьВсе Тогда

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУФлаг", 
			"СрокИспользованияУУФлаг", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияУУРасшифровка", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияУУФлаг") 
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.СрокИспользованияУУФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		Или ОбновитьВсе Тогда

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", 
			"КоэффициентУскоренияУУ", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУФлаг", 
			"КоэффициентУскоренияУУФлаг", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("КоэффициентУскоренияУУФлаг") 
		Или ОбновитьВсе Тогда

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", 
			"КоэффициентУскоренияУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.КоэффициентУскоренияУУФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОбщиеПараметры
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		Или СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВУпрУчете ИЛИ Объект.ОтражатьВБУ И Объект.ОтражатьВНУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГруппаФинансовогоУчета", 
			"ГруппаФинансовогоУчета", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГруппаФинансовогоУчетаФлаг", 
			"ГруппаФинансовогоУчетаФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельностиФлаг", 
			"НаправлениеДеятельностиФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
		//
		ЗначениеСвойства = Объект.ОтражатьВУпрУчете ИЛИ Объект.ОтражатьВБУ;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработки", 
			"ОбъемНаработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработкиФлаг", 
			"ОбъемНаработкиФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаФинансовогоУчетаФлаг")
		Или ОбновитьВсе Тогда

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГруппаФинансовогоУчета",
			"ГруппаФинансовогоУчета",
			"ТолькоПросмотрБезОтметкиНезаполненного",
			НЕ Объект.ГруппаФинансовогоУчетаФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОбъемНаработкиФлаг")
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработки",
			"ОбъемНаработки",
			"ТолькоПросмотрБезОтметкиНезаполненного",
			НЕ Объект.ОбъемНаработкиФлаг,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НаправлениеДеятельностиФлаг")
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности",
			"НаправлениеДеятельности",
			"ТолькоПросмотр",
			НЕ Объект.НаправлениеДеятельностиФлаг,
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И (ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимость", 
			"ЛиквидационнаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимостьФлаг", 
			"ЛиквидационнаяСтоимостьФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЛиквидационнаяСтоимостьФлаг") 
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимость", 
			"ЛиквидационнаяСтоимость", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ЛиквидационнаяСтоимостьФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВБУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимостьРегл", 
			"ЛиквидационнаяСтоимостьРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимостьРеглФлаг", 
			"ЛиквидационнаяСтоимостьРеглФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЛиквидационнаяСтоимостьРеглФлаг") 
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимостьРегл", 
			"ЛиквидационнаяСтоимостьРегл", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ЛиквидационнаяСтоимостьРеглФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	// При изменении параметров только в налоговом учете, изменение ЕГДС не имеет смысла.
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Если (Объект.ОтражатьВБУ = Ложь И Объект.ОтражатьВУпрУчете = Ложь)
			 И (Объект.ОтражатьВНУ И Объект.ОтражатьВРеглУчете) Тогда // Изменение параметров только в налоговом учете.
			 	ВидимостьЕГДС = Ложь;
		Иначе 														// Все прочие варианты изменения параметров.
				ВидимостьЕГДС = Истина;
		КонецЕсли;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕГДС",
			"ЕГДС",
			"Видимость",
			ВидимостьЕГДС,
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕГДСФлаг",
			"ЕГДСФлаг",
			"Видимость",
			ВидимостьЕГДС,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Амортизация
	
	Если СтруктураИзмененныхРеквизитов.Свойство("АмортизационныеРасходыФлаг")
		ИЛИ ОбновитьВсе Тогда
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационныеРасходы", 
			"АмортизационныеРасходы", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.АмортизационныеРасходыФлаг, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	ВнеоборотныеАктивыКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_ИзменениеПараметровНМА(
		Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
		
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.РеализацияУслугПрочихАктивов, ДанныеФормыСтруктура - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_РеализацияУслугПрочихАктивов(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	ВнеоборотныеАктивыКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_РеализацияУслугПрочихАктивов(
		Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
		
	//++ НЕ УТ
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация 
								= ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияУслугПоАренде"));
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Доходы.АрендныйКомпонентДоговора", 
			"ДоходыАрендныйКомпонентДоговора", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Доходы.ПредметАренды", 
			"ДоходыПредметАренды", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	КонецЕсли;
	//-- НЕ УТ
		
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.ОбъединениеОС, ДанныеФормыСтруктура - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_ОбъединениеОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	ПараметрыОбъединенияОС = ПараметрыОбъединенияОС(Объект, ВспомогательныеРеквизиты);
	
	#Область Основное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС"));
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъединениеОднотипныхОС", 
			"ОбъединениеОднотипныхОС", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУчетаБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо 
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА 
			И НЕ Объект.ОбъединениеОднотипныхОС;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо 
			И ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииБУ
			И НЕ Объект.ОбъединениеОднотипныхОС;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияБУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУ", 
			"НачислятьАмортизациюБУ", 
			"Видимость", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо 
			И НЕ Объект.ОбъединениеОднотипныхОС 
			И (Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"));
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ",
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства =
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо 
			И Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
			И ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииБУ
			И НЕ Объект.ОбъединениеОднотипныхОС;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ", 
			"КоэффициентУскоренияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ ОбновитьВсе Тогда
		    
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС")
			И (НЕ Объект.ОбъединениеОднотипныхОС 
					И ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииБУ
					И (Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
						ИЛИ Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"))
				ИЛИ Объект.ОбъединениеОднотипныхОС
					И НЕ ВспомогательныеРеквизиты.ПоНаработкеБУ
					И ВспомогательныеРеквизиты.ДоступныПараметрыАмортизацииБУ);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияОстаточныйБУ",
			"",
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
	    //
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС")
			И НЕ Объект.ОбъединениеОднотипныхОС 
			И ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииБУ
			И (Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
					ИЛИ Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"));
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"СрокИспользованияОстаточныйБУ",
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"СрокИспользованияОстаточныйБУРасшифровка",
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
	
	    //
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС")
			И Объект.ОбъединениеОднотипныхОС 
			И ВспомогательныеРеквизиты.ДоступныПараметрыАмортизацииБУ
			И НЕ ВспомогательныеРеквизиты.ПоНаработкеБУ
			И ВспомогательныеРеквизиты.ДоступныПараметрыАмортизацииБУ;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"СрокИспользованияОстаточныйБУ_ОбъединениеОднотипныхОС",
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"СрокИспользованияОстаточныйБУРасшифровка_ОбъединениеОднотипныхОС",
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУчетаУУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете 
			И НЕ Объект.ОбъединениеОднотипныхОС;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаУУ", 
			"ПорядокУчетаУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииУУ 
			И НЕ Объект.ОбъединениеОднотипныхОС;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияУУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюУУ", 
			"НачислятьАмортизациюУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", 
			"МетодНачисленияАмортизацииУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииУУ
							И НЕ Объект.ОбъединениеОднотипныхОС
							И (Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
								ИЛИ Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка"));
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииУУ
							И НЕ Объект.ОбъединениеОднотипныхОС
							И Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка");
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", 
			"КоэффициентУскоренияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ ОбновитьВсе Тогда
		    
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС")
			И (НЕ Объект.ОбъединениеОднотипныхОС 
					И ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииУУ
					И Объект.МетодНачисленияАмортизацииУУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
				ИЛИ Объект.ОбъединениеОднотипныхОС
					И НЕ ВспомогательныеРеквизиты.ПоНаработкеУУ
					И ВспомогательныеРеквизиты.ДоступныПараметрыАмортизацииУУ);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияОстаточныйУУ",
			"",
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС")
			И НЕ Объект.ОбъединениеОднотипныхОС 
			И ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииУУ
			И Объект.МетодНачисленияАмортизацииУУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"СрокИспользованияОстаточныйУУ",
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"СрокИспользованияОстаточныйУУРасшифровка",
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС")
			И Объект.ОбъединениеОднотипныхОС 
			И ВспомогательныеРеквизиты.ДоступныПараметрыАмортизацииУУ
			И НЕ ВспомогательныеРеквизиты.ПоНаработкеУУ;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"СрокИспользованияОстаточныйУУ_ОбъединениеОднотипныхОС",
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"СрокИспользованияОстаточныйУУРасшифровка_ОбъединениеОднотипныхОС",
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУчетаОбщие
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС") 
			И НЕ Объект.ОбъединениеОднотипныхОС;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГруппаФинансовогоУчета", 
			"ГруппаФинансовогоУчета", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС")
			И НЕ Объект.ОбъединениеОднотипныхОС
			И НЕ ВспомогательныеРеквизиты.ВалютыСовпадают;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЛиквидационнаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЛиквидационнаяСтоимостьВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства =
			Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС") 
			И НЕ Объект.ОбъединениеОднотипныхОС;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимостьРегл", 
			"ЛиквидационнаяСтоимостьРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЛиквидационнаяСтоимостьРеглВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС")
			И (НЕ Объект.ОбъединениеОднотипныхОС 
					И ПараметрыОбъединенияОС.ПоНаработке
					И (ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииУУ ИЛИ ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииБУ)
				ИЛИ Объект.ОбъединениеОднотипныхОС
					И (ВспомогательныеРеквизиты.ДоступныПараметрыАмортизацииУУ ИЛИ ВспомогательныеРеквизиты.ДоступныПараметрыАмортизацииБУ)
					И (ВспомогательныеРеквизиты.ПоНаработкеУУ ИЛИ ВспомогательныеРеквизиты.ПоНаработкеБУ));
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработкиОстаточный",
			"",
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
	
		//
		ЗначениеСвойства = 
			Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС")
			И НЕ Объект.ОбъединениеОднотипныхОС 
			И (ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииУУ ИЛИ ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииБУ)
			И ПараметрыОбъединенияОС.ПоНаработке;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"ОбъемНаработкиОстаточный",
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
	
		//
		ЗначениеСвойства = 
			Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС")
			И Объект.ОбъединениеОднотипныхОС 
			И (ВспомогательныеРеквизиты.ДоступныПараметрыАмортизацииУУ ИЛИ ВспомогательныеРеквизиты.ДоступныПараметрыАмортизацииБУ)
			И (ВспомогательныеРеквизиты.ПоНаработкеУУ ИЛИ ВспомогательныеРеквизиты.ПоНаработкеБУ);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"ОбъемНаработкиОстаточный_ОбъединениеОднотипныхОС",
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыОбъединенияОС.ПоНаработке
							И НЕ Объект.ОбъединениеОднотипныхОС;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПоказательНаработки", 
			"ПоказательНаработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПоказательНаработкиЕдиницаИзмерения", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработки", 
			"ОбъемНаработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"Видимость", 
			НЕ Объект.ОбъединениеОднотипныхОС, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	Если ОбновитьВсе Тогда
		
		Если НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
			ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
				"НаправлениеДеятельности", 
				"НаправлениеДеятельности", 
				"АвтоотметкаНезаполненного", 
				Ложь, 
				ПараметрыРеквизитовОбъекта);
		КонецЕсли; 
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо 
			И НЕ Объект.ОбъединениеОднотипныхОС
			И (ПараметрыОбъединенияОС.ДоступноОтражениеРасходовБУ 
				ИЛИ ПараметрыОбъединенияОС.ДоступноОтражениеРасходовНУ);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			Объект.ОтражатьВУпрУчете 
			И ПараметрыОбъединенияОС.ДоступноОтражениеРасходовУУ
			И НЕ Объект.ОбъединениеОднотипныхОС;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовУУ", 
			"АналитикаРасходовУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыОбъединенияОС.СтатьяРасходовУУОбязательна
			И НЕ Объект.ОбъединениеОднотипныхОС;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС")
			И ВспомогательныеРеквизиты.ИспользуетсяЦФ;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"СтатьяДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"АналитикаДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	ВнеоборотныеАктивыКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_ОбъединениеОС(
		Объект, ВспомогательныеРеквизиты, ПараметрыОбъединенияОС, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_КорректировкаСтоимостиИАмортизацииОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если Объект.ПараметрыЗаПериод.Количество() <> 0 Тогда
		МетодНачисленияАмортизацииУУ = Объект.ПараметрыЗаПериод[0].МетодНачисленияАмортизацииУУ;
	Иначе
		МетодНачисленияАмортизацииУУ = Неопределено;
	КонецЕсли;
	
	ДоступныПараметрыЗаПериод = 
		Объект.КорректировкаСПрошлойДаты
		И Объект.ВидИмущества <> ПредопределенноеЗначение("Перечисление.ВидыИмущества.Арендованное");
	
	ДоступнаСуммаУпр =
		ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают;
			
	ДоступнаСуммаРегл =
		НЕ ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо_ЗаПериод
		ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
	КорректировкаСтоимостиБУ = 
		Объект.ОтражатьВРеглУчете
		И Объект.КорректировкаСтоимости
		И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное");
		
	КорректировкаСтоимостиУУ =
		Объект.ОтражатьВУпрУчете
		И Объект.КорректировкаСтоимости
		И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное");
	
	КорректировкаАмортизацииБУ =
		Объект.ОтражатьВРеглУчете
		И Объект.КорректировкаАмортизации
		И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное");
	
	КорректировкаАмортизацииУУ =
		Объект.ОтражатьВУпрУчете
		И Объект.КорректировкаАмортизации
		И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное")
		И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				И НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
	
	КорректировкаПервоначальнойСтоимостиБУ = 
		Объект.ОтражатьВРеглУчете
		И Объект.КорректировкаПервоначальнойСтоимости
		И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное");
		
	КорректировкаПервоначальнойСтоимостиУУ = 
		Объект.ОтражатьВУпрУчете
		И Объект.КорректировкаПервоначальнойСтоимости
		И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное");
		
	КорректировкаПараметровРасчетаАмортизацииБУ = 
		Объект.ОтражатьВРеглУчете
		И Объект.КорректировкаПараметровРасчетаАмортизации
		И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное");
		
	КорректировкаПараметровРасчетаАмортизацииУУ = 
		Объект.ОтражатьВУпрУчете
		И Объект.КорректировкаПараметровРасчетаАмортизации
		И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное");
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ПараметрыЗаПериод")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НачалоПериода")
		ИЛИ ОбновитьВсе Тогда
		
		ЕстьМетодЛинейныйБУ = Ложь;
		ЕстьМетодПропорциональноОбъемуБУ = Ложь;
		ЕстьМетодУменьшаемогоОстаткаБУ = Ложь;
		
		Для Каждого ДанныеСтроки Из Объект.ПараметрыЗаПериодБУ Цикл
			
			Если ДанныеСтроки.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный") Тогда
				ЕстьМетодЛинейныйБУ = Истина;
			ИначеЕсли ДанныеСтроки.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции") Тогда
				ЕстьМетодПропорциональноОбъемуБУ = Истина;
			ИначеЕсли ДанныеСтроки.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка") Тогда
				ЕстьМетодУменьшаемогоОстаткаБУ = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
		
	#Область СтраницаОсновное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное")
			И (КонецДня(Объект.Дата) = КонецГода(Объект.Дата)
				ИЛИ Объект.КорректировкаВСвязиСИзменениемУчетнойПолитики);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КорректировкаВСвязиСИзменениемУчетнойПолитики", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ДокументОснование")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументОснование", 
			"ДокументОснование", 
			"Видимость", 
			ЗначениеЗаполнено(Объект.ДокументОснование), 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВидИмущества <> ПредопределенноеЗначение("Перечисление.ВидыИмущества.Арендованное");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КорректировкаСПрошлойДаты", 
			"КорректировкаСПрошлойДаты", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачалоПериода", 
			"НачалоПериода", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачалоПериода", 
			"НачалоПериода", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.КорректировкаСПрошлойДаты, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
		
	#Область СтраницаОС
	
	#Область БУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСтоимости")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаПервоначальнойСтоимости")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаАмортизации")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаПараметровРасчетаАмортизации")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьБУ", 
			"", 
			"Видимость", 
			КорректировкаСтоимостиБУ, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.АмортизацияБУ", 
			"", 
			"Видимость", 
			КорректировкаАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ПервоначальнаяСтоимостьБУ", 
			"", 
			"Видимость", 
			КорректировкаПервоначальнойСтоимостиБУ, 
			ПараметрыРеквизитовОбъекта);
			
		ПоказатьПолеОтдельно = 
			НЕ ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			ИЛИ ВспомогательныеРеквизиты.ПрименяетсяФСБУ6;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьДляВычисленияАмортизацииБУ", 
			"", 
			"Видимость", 
			КорректировкаПараметровРасчетаАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОССтоимостьДляВычисленияАмортизацииБУ", 
			"Видимость", 
			КорректировкаПараметровРасчетаАмортизацииБУ И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОССтоимостьДляВычисленияАмортизацииБУ_Отдельно", 
			"Видимость", 
			КорректировкаПараметровРасчетаАмортизацииБУ И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОССтоимостьБУ", 
			"ОтметкаНезаполненного", 
			НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА И КорректировкаСтоимостиБУ, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ПоказатьПолеОтдельно = 
			НЕ ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОССтоимостьБУ", 
			"Видимость", 
			КорректировкаСтоимостиБУ И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСАмортизацияБУ", 
			"Видимость", 
			КорректировкаАмортизацииБУ И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСПервоначальнаяСтоимостьБУ", 
			"Видимость", 
			КорректировкаПервоначальнойСтоимостиБУ И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОССтоимостьБУ_Отдельно", 
			"Видимость", 
			КорректировкаСтоимостиБУ И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСАмортизацияБУ_Отдельно", 
			"Видимость", 
			КорректировкаАмортизацииБУ И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСПервоначальнаяСтоимостьБУ_Отдельно", 
			"Видимость", 
			КорректировкаПервоначальнойСтоимостиБУ И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОССтоимостьБУ", 
			"ОтметкаНезаполненного", 
			НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА И КорректировкаСтоимостиБУ, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	#КонецОбласти
	
	#Область УУ
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСтоимости")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаПервоначальнойСтоимости")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаАмортизации")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаПараметровРасчетаАмортизации")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьУУ", 
			"", 
			"Видимость", 
			КорректировкаСтоимостиУУ, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.АмортизацияУУ", 
			"", 
			"Видимость", 
			КорректировкаАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ПервоначальнаяСтоимостьУУ", 
			"", 
			"Видимость", 
			КорректировкаПервоначальнойСтоимостиУУ, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ПоказатьПолеОтдельно = 
			НЕ Объект.ОтражатьВРеглУчете
			ИЛИ НЕ ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОССтоимостьУУ", 
			"Видимость", 
			КорректировкаСтоимостиУУ И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСАмортизацияУУ", 
			"Видимость", 
			КорректировкаАмортизацииУУ И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСПервоначальнаяСтоимостьУУ", 
			"Видимость", 
			КорректировкаПервоначальнойСтоимостиУУ И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОССтоимостьУУ_Отдельно", 
			"Видимость", 
			КорректировкаСтоимостиУУ И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСАмортизацияУУ_Отдельно", 
			"Видимость", 
			КорректировкаАмортизацииУУ И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСПервоначальнаяСтоимостьУУ_Отдельно", 
			"Видимость", 
			КорректировкаПервоначальнойСтоимостиУУ И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			КорректировкаПараметровРасчетаАмортизацииУУ 
			И ВспомогательныеРеквизиты.ПорядокУчетаВНА = ПредопределенноеЗначение("Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл")
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьДляВычисленияАмортизацииУУ", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			КорректировкаПараметровРасчетаАмортизацииУУ
			И ВспомогательныеРеквизиты.ПорядокУчетаВНА = ПредопределенноеЗначение("Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл")
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОССтоимостьДляВычисленияАмортизацииУУ", 
			"Видимость", 
			ЗначениеСвойства И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОССтоимостьДляВычисленияАмортизацииУУ_Отдельно", 
			"Видимость", 
			ЗначениеСвойства И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	#КонецОбласти
		
	#КонецОбласти

	#Область ПараметрыБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо_ЗаПериод
			И ДоступныПараметрыЗаПериод;
					
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьБУВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПараметрыЗаПериодБУ", 
			"ПараметрыЗаПериодБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияДляВычисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияБУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И ДоступныПараметрыЗаПериод;
					
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияДляВычисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияБУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НачислятьАмортизациюБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ДатаВводаВЭксплуатациюБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ДоступныПараметрыЗаПериод
			И Объект.ПрименениеЦелевогоФинансирования;
					
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияЦФНаНачалоПериода", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияЦФНаНачалоПериодаВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияПРЦФНаНачалоПериода", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияПРЦФНаНачалоПериодаВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУАмортизацияЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУСтоимостьЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУСтоимостьПРЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУАмортизацияЦФИзменение", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУАмортизацияПРЦФИзменение", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НачалоПериода")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ДоступныПараметрыЗаПериод
			И НЕ ВспомогательныеРеквизиты.ПрименяетсяФСБУ6_ЗаПериод;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"СтоимостьДляВычисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьДляВычисленияАмортизацииБУВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУСтоимостьДляВычисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУПРДляВычисленияАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ДоступныПараметрыЗаПериод
			И ВспомогательныеРеквизиты.ПрименяетсяФСБУ6_ЗаПериод;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЛиквидационнаяСтоимостьБУ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЛиквидационнаяСтоимостьБУВалюта", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"ПараметрыЗаПериодБУЛиквидационнаяСтоимость", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"ПараметрыЗаПериодБУДатаИзмененияПараметровБУ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ДоступныПараметрыЗаПериод
			И Объект.ПараметрыЗаПериодБУ.Количество() <> 0
			И Объект.ПараметрыЗаПериодБУ[0].МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"КоэффициентУскоренияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ДоступныПараметрыЗаПериод
			И Объект.ПараметрыЗаПериодБУ.Количество() <> 0
			И (Объект.ПараметрыЗаПериодБУ[0].МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ")
				ИЛИ Объект.ПараметрыЗаПериодБУ[0].МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"));
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ГодоваяНормаАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ДоступныПараметрыЗаПериод
			И Объект.ПараметрыЗаПериодБУ.Количество() <> 0
			И Объект.ПараметрыЗаПериодБУ[0].МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
			И Объект.ПараметрыЗаПериодБУ[0].МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега");
				
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ГрафикАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПараметрыЗаПериод")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НачалоПериода")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ДоступныПараметрыЗаПериод
			И ЕстьМетодУменьшаемогоОстаткаБУ;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУКоэффициентУскоренияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ДоступныПараметрыЗаПериод
			И ЕстьМетодПропорциональноОбъемуБУ;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУОбъемВыработкиНаНачалоМесяца", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУОбъемВыработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУОбъемПродукцииРаботДляВычисленияАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУПоказательНаработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	#КонецОбласти
		
	#Область ПараметрыУУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И ДоступныПараметрыЗаПериод;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПараметрыЗаПериод", 
			"ПараметрыЗаПериод", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияДляВычисленияАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияУУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НачислятьАмортизациюУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"МетодНачисленияАмортизацииУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ДатаВводаВЭксплуатациюУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И ДоступныПараметрыЗаПериод
			И ДоступнаСуммаУпр;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьУУВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияНаНачалоПериода", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияНаНачалоПериодаВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЛиквидационнаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЛиквидационнаяСтоимостьВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодЛиквидационнаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И ДоступныПараметрыЗаПериод
			И ДоступнаСуммаРегл;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьРеглУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьРеглУУВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодСтоимостьРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЛиквидационнаяСтоимостьРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЛиквидационнаяСтоимостьРеглВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодЛиквидационнаяСтоимостьРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И ДоступныПараметрыЗаПериод
			И ДоступнаСуммаУпр
			И ВспомогательныеРеквизиты.ПорядокУчетаВНА = ПредопределенноеЗначение("Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьДляВычисленияАмортизацииУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьДляВычисленияАмортизацииУУВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодСтоимостьДляВычисленияАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И ДоступныПараметрыЗаПериод
			И ДоступнаСуммаРегл
			И ВспомогательныеРеквизиты.ПорядокУчетаВНА = ПредопределенноеЗначение("Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьДляВычисленияАмортизацииУУРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьДляВычисленияАмортизацииУУРеглВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодСтоимостьДляВычисленияАмортизацииРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
			И ДоступныПараметрыЗаПериод
			И ВспомогательныеРеквизиты.ПорядокУчетаВНА = ПредопределенноеЗначение("Перечисление.ПорядокУчетаВНА.ПоСтандартамМУ");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодДатаИзмененияПараметровУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПараметрыЗаПериод")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
			И Объект.ОтражатьВУпрУчете
			И ДоступныПараметрыЗаПериод;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"КоэффициентУскорения", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПараметрыЗаПериод")
		ИЛИ ОбновитьВсе Тогда
		
		ЕстьМетодУменьшаемогоОстаткаБУ = Ложь;
		ЕстьМетодПоНаработке = Ложь;
		Для Каждого ДанныеСтроки Из Объект.ПараметрыЗаПериод Цикл
			
			Если ДанныеСтроки.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка") Тогда
				ЕстьМетодУменьшаемогоОстаткаБУ = Истина;
			КонецЕсли;
			
			Если ДанныеСтроки.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции") Тогда
				ЕстьМетодПоНаработке = Истина;
			КонецЕсли;

			Если ЕстьМетодУменьшаемогоОстаткаБУ И ЕстьМетодПоНаработке Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		ЗначениеСвойства = 
			ЕстьМетодУменьшаемогоОстаткаБУ
			И ДоступныПараметрыЗаПериод;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодКоэффициентУскорения", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			ЕстьМетодУменьшаемогоОстаткаБУ
			И ВспомогательныеРеквизиты.ПорядокУчетаВНА = ПредопределенноеЗначение("Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл")
			И ДоступныПараметрыЗаПериод
			И ДоступнаСуммаРегл;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьРеглНаНачалоГодаУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьРеглНаНачалоГодаУУВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияРеглНаНачалоГодаУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияРеглНаНачалоГодаУУВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		//
		ЗначениеСвойства = 
			ЕстьМетодУменьшаемогоОстаткаБУ
			И ВспомогательныеРеквизиты.ПорядокУчетаВНА = ПредопределенноеЗначение("Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл") 
			И ДоступныПараметрыЗаПериод
			И ДоступнаСуммаУпр;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьНаНачалоГодаУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьНаНачалоГодаУУВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияНаНачалоГодаУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияНаНачалоГодаУУВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = ЕстьМетодПоНаработке;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодОбъемВыработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодОбъемВыработкиНаНачалоМесяца", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодОбъемПродукцииРаботДляВычисленияАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодПоказательНаработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если ОбновитьВсе Тогда
		
		ЗначениеСвойства = ДоступнаСуммаРегл;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодАмортизацияРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодАмортизацияРеглИзменение", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = ДоступнаСуммаУпр;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодАмортизация", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодАмортизацияИзменение", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область АмортизацияНаНачалоПериода
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = ДоступныПараметрыЗаПериод;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияРеглНаНачалоПериода", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияРеглНаНачалоПериодаВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства =
			Объект.ОтражатьВУпрУчете 
			И ДоступныПараметрыЗаПериод
			И ДоступнаСуммаУпр;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияНаНачалоПериода", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияНаНачалоПериодаВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
			
	КонецЕсли;
	
	#КонецОбласти
		
	КорректировкаСтоимостиИАмортизацииОСКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов(
		Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;

КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииНМА - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_КорректировкаСтоимостиИАмортизацииНМА(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	ЭтоНМА = (Объект.ВидОбъектовУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив"));
	
	#Область СтраницаОсновное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ДокументОснование")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументОснование", 
			"ДокументОснование", 
			"Видимость", 
			ЗначениеЗаполнено(Объект.ДокументОснование), 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектовУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВидОбъектовУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КорректировкаАмортизации", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектовУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВидОбъектовУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив")
			И (КонецДня(Объект.Дата) = КонецГода(Объект.Дата)
				ИЛИ Объект.КорректировкаВСвязиСИзменениемУчетнойПолитики);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КорректировкаВСвязиСИзменениемУчетнойПолитики", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
		
	#Область СтраницаНМА
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектовУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСтоимости")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаПервоначальнойСтоимости")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаАмортизации")
		ИЛИ ОбновитьВсе Тогда
		
		#Область УУ
		
		ЗначениеСвойства = 
			Объект.КорректировкаСтоимости 
			И Объект.ОтражатьВУпрУчете 
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
					И НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
		
		ПоказатьПолеОтдельно = 
			НЕ Объект.ОтражатьВРеглУчете
			ИЛИ НЕ ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СтоимостьУУ", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НМАСтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НМАСтоимостьУУ_Отдельно", 
			"Видимость", 
			ЗначениеСвойства И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			Объект.КорректировкаПервоначальнойСтоимости 
			И Объект.ОтражатьВУпрУчете 
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
					И НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.ПервоначальнаяСтоимостьУУ", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НМАПервоначальнаяСтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
					
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НМАПервоначальнаяСтоимостьУУ_Отдельно", 
			"Видимость", 
			ЗначениеСвойства И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.КорректировкаАмортизации
			И ЭтоНМА 
			И Объект.ОтражатьВУпрУчете 
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
					И НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.АмортизацияУУ", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НМААмортизацияУУ", 
			"Видимость", 
			ЗначениеСвойства И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НМААмортизацияУУ_Отдельно", 
			"Видимость", 
			ЗначениеСвойства И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		#КонецОбласти
		
		#Область БУ
		
		ПоказатьПолеОтдельно = 
			НЕ ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		ЗначениеСвойства = 
			Объект.КорректировкаСтоимости
			И Объект.ОтражатьВРеглУчете;
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СтоимостьБУ", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НМАСтоимостьБУ", 
			"ОтметкаНезаполненного", 
			НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА И ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НМАСтоимостьБУ", 
			"Видимость", 
			ЗначениеСвойства И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НМАСтоимостьБУ_Отдельно", 
			"Видимость", 
			ЗначениеСвойства И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.КорректировкаПервоначальнойСтоимости
			И Объект.ОтражатьВРеглУчете;
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.ПервоначальнаяСтоимостьБУ", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НМАПервоначальнаяСтоимостьБУ", 
			"Видимость", 
			ЗначениеСвойства И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НМАПервоначальнаяСтоимостьБУ_Отдельно", 
			"Видимость", 
			ЗначениеСвойства И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.КорректировкаАмортизации
			И ЭтоНМА
			И Объект.ОтражатьВРеглУчете;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.АмортизацияБУ", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НМААмортизацияБУ", 
			"Видимость", 
			ЗначениеСвойства И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НМААмортизацияБУ_Отдельно", 
			"Видимость", 
			ЗначениеСвойства И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
			
		#КонецОбласти
			
	КонецЕсли;
	
	#КонецОбласти
		
	КорректировкаСтоимостиИАмортизацииНМАКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов(
		Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;

КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.ПередачаОСВАренду2_4, ДанныеФормыСтруктура - 
// 	ВспомогательныеРеквизиты - Структура - содержит свойства:
// 			* ИспользуетсяУчетАрендыПоФСБУ25_2018 - Булево -
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_ПередачаОСВАренду(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018;
		 
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РасчетыМеждуОрганизациямиАрендатор", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И НЕ ВспомогательныеРеквизиты.ПередачаВАрендуПоФСБУ25 ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислениеАмортизацииБУ", 
			"НачислениеАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
				
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("РасчетыМеждуОрганизациямиАрендатор") 
		ИЛИ ОбновитьВсе Тогда
		
		АрендаторОрганизация = 
			Объект.РасчетыМеждуОрганизациямиАрендатор
			И НЕ ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018;
		
		ТипСсылкаКонтрагенты = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
		ТипСсылкаОрганизации = Новый ОписаниеТипов("СправочникСсылка.Организации");
		ТипАрендатора = ?(АрендаторОрганизация, ТипСсылкаОрганизации, ТипСсылкаКонтрагенты);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Арендатор", 
			"Арендатор", 
			"ОграничениеТипа", 
			ТипАрендатора, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПодразделениеАрендатора", 
			"ПодразделениеАрендатора", 
			"Видимость", 
			АрендаторОрганизация, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МОЛАрендатора", 
			"МОЛАрендатора", 
			"Видимость", 
			АрендаторОрганизация, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АдресМестонахождения", 
			"АдресМестонахождения", 
			"Видимость", 
			АрендаторОрганизация, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислениеАмортизацииБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		Если НЕ ВспомогательныеРеквизиты.ПередачаВАрендуПоФСБУ25 Тогда
			
			ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
				"СтатьяРасходовБУ", 
				"СтатьяРасходовБУ", 
				"ТолькоПросмотрБезОтметкиНезаполненного", 
				Объект.НачислениеАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.ВариантыИзмененияНачисленияАмортизации.Действует"), 
				ПараметрыРеквизитовОбъекта);
			
			ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
				"АналитикаРасходовБУ", 
				"АналитикаРасходовБУ", 
				"ТолькоПросмотрБезОтметкиНезаполненного", 
				Объект.НачислениеАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.ВариантыИзмененияНачисленияАмортизации.Действует"), 
				ПараметрыРеквизитовОбъекта);
		
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислениеАмортизацииУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			Объект.НачислениеАмортизацииУУ <> ПредопределенноеЗначение("Перечисление.ВариантыИзмененияНачисленияАмортизации.Действует"), 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовУУ", 
			"АналитикаРасходовУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			Объект.НачислениеАмортизацииУУ <> ПредопределенноеЗначение("Перечисление.ВариантыИзмененияНачисленияАмортизации.Действует"), 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = НЕ ВспомогательныеРеквизиты.ПередачаВАрендуПоФСБУ25;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ЗалоговаяСтоимость", 
			"ОСЗалоговаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислениеАмортизацииУУ", 
			"НачислениеАмортизацииУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовУУ", 
			"АналитикаРасходовУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикОплатУслуг", 
			"", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикНачисленияУслуг", 
			"", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ЗначениеСвойства = ВспомогательныеРеквизиты.ПередачаВАрендуПоФСБУ25;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходов", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходов", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"СтатьяДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"АналитикаДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаАвансовыхПлатежей", 
			"СуммаАвансовыхПлатежей", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЗаполнитьСуммуАвансовыхПлатежей", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СправедливаяСтоимостьРегл", 
			"ОССправедливаяСтоимостьРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СправедливаяСтоимостьУпр", 
			"ОССправедливаяСтоимостьУпр", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.НГЛСРегл", 
			"ОСНГЛСРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.НГЛСУпр", 
			"ОСНГЛСУпр", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.АрендныеПлатежи", 
			"ОСАрендныеПлатежи", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтавкаДоходности", 
			"ОССтавкаДоходности", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ГрафикСсылка", 
			"ОСГрафикСсылка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСЗаполнитьГрафики", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСРассчитатьСтавкуДоходности", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОССправкаРасчетНачисленияПроцентов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ЗначениеСвойства = 
			Не ВспомогательныеРеквизиты.ДоговорВВалютеРеглУчета
			И ВспомогательныеРеквизиты.ПередачаВАрендуПоФСБУ25;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СуммаАвансовыхПлатежейРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОССправедливаяСтоимостьРегл")
		Или СтруктураИзмененныхРеквизитов.Свойство("ОССправедливаяСтоимостьУпр")
		Или ОбновитьВсе Тогда
			
		ЗначениеСвойства = Объект.ОС.Итог("СправедливаяСтоимостьРегл") > 0 
							Или Объект.ОС.Итог("СправедливаяСтоимостьУпр") > 0;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"СтатьяДоходов", 
			"Доступность", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходов", 
			"Доступность", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"АналитикаДоходов", 
			"Доступность", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходов", 
			"Доступность", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			Не ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			Не ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
			
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.ВозвратОСИзАренды2_4, ДанныеФормыСтруктура - 
// 	ВспомогательныеРеквизиты - Структура - содержит свойства:
// 			* ИспользуетсяУчетАрендыПоФСБУ25_2018 - Булево -
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_ВозвратОСИзАренды(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018;
		 
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РасчетыМеждуОрганизациямиАрендатор", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И НЕ ВспомогательныеРеквизиты.ВозвратИзФинаренды;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НачислениеАмортизацииБУ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтатьяРасходовБУ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АналитикаРасходовБУ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("РасчетыМеждуОрганизациямиАрендатор")
		ИЛИ ОбновитьВсе Тогда
		
		АрендаторОрганизация = Объект.РасчетыМеждуОрганизациямиАрендатор;
		
		ТипСсылкаКонтрагенты = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
		ТипСсылкаОрганизации = Новый ОписаниеТипов("СправочникСсылка.Организации");
		ТипАрендатора = ?(АрендаторОрганизация, ТипСсылкаОрганизации, ТипСсылкаКонтрагенты);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Арендатор", 
			"Арендатор", 
			"ОграничениеТипа", 
			ТипАрендатора, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Договор", 
			"Договор", 
			"ВидимостьЭлемента", 
			Не АрендаторОрганизация,
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислениеАмортизацииБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.НачислениеАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.ВариантыИзмененияНачисленияАмортизации.Действует");
		
		Если НЕ ВспомогательныеРеквизиты.ВозвратИзФинаренды Тогда
			
			ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
				"СтатьяРасходовБУ", 
				"СтатьяРасходовБУ", 
				"ТолькоПросмотрБезОтметкиНезаполненного", 
				ЗначениеСвойства, 
				ПараметрыРеквизитовОбъекта);
			
			ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
				"АналитикаРасходовБУ", 
				"АналитикаРасходовБУ", 
				"ТолькоПросмотрБезОтметкиНезаполненного", 
				ЗначениеСвойства, 
				ПараметрыРеквизитовОбъекта);
			
		КонецЕсли;
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислениеАмортизацииУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.НачислениеАмортизацииУУ <> ПредопределенноеЗначение("Перечисление.ВариантыИзмененияНачисленияАмортизации.Действует");
		
		Если НЕ ВспомогательныеРеквизиты.ВозвратИзФинаренды Тогда
			
			ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
				"СтатьяРасходовУУ", 
				"СтатьяРасходовУУ", 
				"ТолькоПросмотрБезОтметкиНезаполненного", 
				ЗначениеСвойства, 
				ПараметрыРеквизитовОбъекта);
			
			ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
				"АналитикаРасходовУУ", 
				"АналитикаРасходовУУ", 
				"ТолькоПросмотрБезОтметкиНезаполненного", 
				ЗначениеСвойства, 
				ПараметрыРеквизитовОбъекта);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = НЕ ВспомогательныеРеквизиты.ВозвратИзФинаренды;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислениеАмортизацииУУ", 
			"НачислениеАмортизацииУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовУУ", 
			"АналитикаРасходовУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислениеАмортизацииБУ", 
			"НачислениеАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ЗначениеСвойства = ВспомогательныеРеквизиты.ВозвратИзФинаренды;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСГруппаНаправленияВыбытия", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

Функция ЗначенияСвойствЗависимыхРеквизитов_ПоступлениеАрендованныхОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СчетУчета", 
			"СчетУчета", 
			"Видимость", 
			НЕ ВспомогательныеРеквизиты.ИспользуетсяУчетВНА_2_4, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГруппаФинансовогоУчета", 
			"ГруппаФинансовогоУчета", 
			"Видимость", 
			ВспомогательныеРеквизиты.ИспользуетсяУчетВНА_2_4, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МОЛ", 
			"МОЛ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ИспользуетсяУчетВНА_2_4, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Договор", 
			"Договор", 
			"Видимость", 
			ВспомогательныеРеквизиты.ИспользуетсяУчетВНА_2_4, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

Функция ЗаполнитьРеквизитыВЗависимостиОтСвойств_ИзменениеПараметровОС(Объект, ПараметрыРеквизитовОбъекта) Экспорт

	ИзмененныеРеквизиты = Новый Массив;
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		
		Если ПараметрыРеквизита.Свойство = "Видимость" И ПараметрыРеквизита.Значение = Ложь
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотр" И ПараметрыРеквизита.Значение = Истина
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного" И ПараметрыРеквизита.Значение = Истина Тогда
			Действие = "Очистить";
		ИначеЕсли ПараметрыРеквизита.Свойство = "Видимость" И ПараметрыРеквизита.Значение = Истина
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотр" И ПараметрыРеквизита.Значение = Ложь
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного" И ПараметрыРеквизита.Значение = Ложь Тогда
			Действие = "Заполнить";
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ОтражениеАмортизационныхРасходовФлаг" Тогда
			Если Действие = "Очистить" Тогда
				Объект.Амортизация.Очистить();
				ИзмененныеРеквизиты.Добавить("Амортизация");
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ОтражениеАмортизационнойПремииФлаг" Тогда
			Если Действие = "Очистить" Тогда
				Объект.АмортизационнаяПремия.Очистить();
				ИзмененныеРеквизиты.Добавить("АмортизационнаяПремия");
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ОтражениеИмущественныхНалоговФлаг" Тогда
			Если Действие = "Очистить" Тогда
				Объект.ИмущественныеНалоги.Очистить();
				ИзмененныеРеквизиты.Добавить("ИмущественныеНалоги");
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтрСоединить(ИзмененныеРеквизиты, ",");

КонецФункции

Функция ЗаполнитьРеквизитыВЗависимостиОтСвойств_МодернизацияОС(Объект, ПараметрыРеквизитовОбъекта) Экспорт

	ИзмененныеРеквизиты = Новый Массив;
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		
		Если ПараметрыРеквизита.Свойство = "Видимость" И ПараметрыРеквизита.Значение = Ложь
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотр" И ПараметрыРеквизита.Значение = Истина
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного" И ПараметрыРеквизита.Значение = Истина Тогда
			Действие = "Очистить";
		ИначеЕсли ПараметрыРеквизита.Свойство = "Видимость" И ПараметрыРеквизита.Значение = Истина
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотр" И ПараметрыРеквизита.Значение = Ложь
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного" И ПараметрыРеквизита.Значение = Ложь Тогда
			Действие = "Заполнить";
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "НаправлениеДеятельности" Тогда
			Если Действие = "Очистить" Тогда
				Объект[ПараметрыРеквизита.ИмяРеквизита] = Неопределено;
				ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
			КонецЕсли;
		КонецЕсли; 
		
	КонецЦикла;
	
	Возврат СтрСоединить(ИзмененныеРеквизиты, ",");

КонецФункции

// 
// Параметры:
// 	Объект - СправочникОбъект.ОбъектыЭксплуатации - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - 
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_ОбъектыЭксплуатации(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	ВнеоборотныеАктивыКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_ОбъектыЭксплуатации(
		Объект, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ТипОС")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = 
			Объект.ТипОС = ПредопределенноеЗначение("Перечисление.ТипыОС.ОбъектЭксплуатации");

		ЗначениеСвойстваРасширенное = 
			Объект.ТипОС = ПредопределенноеЗначение("Перечисление.ТипыОС.ОбъектЭксплуатации")
			Или Объект.ТипОС = ПредопределенноеЗначение("Перечисление.ТипыОС.Узел");
			
		ЗначениеСвойстваНеГрупповойОС = 
			Объект.ТипОС = ПредопределенноеЗначение("Перечисление.ТипыОС.ОбъектЭксплуатации")
			Или Объект.ТипОС = ПредопределенноеЗначение("Перечисление.ТипыОС.Узел")
			Или Объект.ТипОС = ПредопределенноеЗначение("Перечисление.ТипыОС.КомпонентАмортизации");

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаВыпуска", 
			"ДатаВыпуска", 
			"Видимость", 
			ЗначениеСвойстваРасширенное, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаСведений", 
			"ДатаСведений", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЗаводскойНомер", 
			"ЗаводскойНомер", 
			"Видимость", 
			ЗначениеСвойстваРасширенное, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Изготовитель", 
			"Изготовитель", 
			"Видимость", 
			ЗначениеСвойстваРасширенное, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ИнвентарныйНомер", 
			"ИнвентарныйНомер", 
			"Видимость", 
			ЗначениеСвойстваНеГрупповойОС, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Класс", 
			"Класс", 
			"Видимость", 
			ЗначениеСвойстваРасширенное, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КодПоОКОФ", 
			"КодПоОКОФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Модель", 
			"Модель", 
			"Видимость", 
			ЗначениеСвойстваРасширенное, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НомерПаспорта", 
			"НомерПаспорта", 
			"Видимость", 
			ЗначениеСвойстваРасширенное, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Расположение", 
			"Расположение", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЭксплуатирующееПодразделение", 
			"ЭксплуатирующееПодразделение", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РемонтирующееПодразделение", 
			"РемонтирующееПодразделение", 
			"Видимость", 
			ЗначениеСвойстваРасширенное, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СерийныйНомер", 
			"СерийныйНомер", 
			"Видимость", 
			ЗначениеСвойстваРасширенное, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпособОтраженияЗарплаты", 
			"СпособОтраженияЗарплаты", 
			"Видимость", 
			ЗначениеСвойстваРасширенное, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходов", 
			"СтатьяРасходов", 
			"Видимость", 
			ЗначениеСвойстваРасширенное, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ШифрПоЕНАОФ", 
			"ШифрПоЕНАОФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ТипОС = ПредопределенноеЗначение("Перечисление.ТипыОС.ОбъектЭксплуатации")
			И ВспомогательныеРеквизиты.ИспользоватьУчетДрагоценныхМатериалов;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДрагоценныеМатериалы", 
			"ДрагоценныеМатериалы", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);		
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"КлассификацияДМ4", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);		
		
		//
		ЗначениеСвойства = 
			(Объект.ТипОС = ПредопределенноеЗначение("Перечисление.ТипыОС.ОбъектЭксплуатации")
			Или Объект.ТипОС = ПредопределенноеЗначение("Перечисление.ТипыОС.Узел"))
			И ВспомогательныеРеквизиты.ИспользоватьУправлениеРемонтами;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Статус", 
			"Статус", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);		
		
		//
		ЗначениеСвойства = 
			Объект.ТипОС = ПредопределенноеЗначение("Перечисление.ТипыОС.ОбъектЭксплуатации")
			И ВспомогательныеРеквизиты.ИспользоватьУправлениеРемонтами
			И ВспомогательныеРеквизиты.ИспользоватьПроизводство;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РабочиеЦентры", 
			"РабочиеЦентры", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Класс")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТипОС")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = 
			Объект.ТипОС = ПредопределенноеЗначение("Перечисление.ТипыОС.ОбъектЭксплуатации")
			И ВспомогательныеРеквизиты.ИспользуютсяПодклассы;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Подкласс", 
			"Подкласс", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// 
// Параметры:
// 	Объект - ДокументОбъект.УлучшениеНМА - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - 
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта 
Функция ЗначенияСвойствЗависимыхРеквизитов_УлучшениеНМА(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СтоимостьБУ", 
			"НМАСтоимостьБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВУпрУчете;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СтоимостьУУ", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = Объект.ОтражатьВУпрУчете
			И (ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НМАСтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

#КонецОбласти

#Область Налоги

Функция МинимальнаяДатаРегистрации(Объект) Экспорт

	ДатаРегистрации = '000101010000';
	
	Для каждого ДанныеСтроки Из Объект.ОС Цикл
		Если ДанныеСтроки.ДатаРегистрации = '000101010000' Тогда
			ДатаРегистрации = ?(ДатаРегистрации <> '000101010000', Мин(Объект.Дата, ДатаРегистрации), Объект.Дата);
		Иначе
			ДатаРегистрации = ?(ДатаРегистрации <> '000101010000', Мин(ДанныеСтроки.ДатаРегистрации, ДатаРегистрации), ДанныеСтроки.ДатаРегистрации);
		КонецЕсли;
	КонецЦикла; 
	
	Если ДатаРегистрации = '000101010000' Тогда
		ДатаРегистрации = Объект.Дата;
	КонецЕсли; 

	Возврат ДатаРегистрации;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ДействияВыполняемыеПриИзмененииРеквизитов

Процедура ПриИзмененииРеквизитов_ПринятиеКУчетуОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты) Экспорт

	Если НЕ ЗначениеЗаполнено(ИзмененныеРеквизиты) Тогда
		Возврат; 
	КонецЕсли; 
	
	СписокРеквизитов = СтрРазделить(ИзмененныеРеквизиты, ",");
	
	// ВАЖНО: Порядок имеет значение!
	
	Если СписокРеквизитов.Найти("Организация") <> Неопределено Тогда
		Если НЕ ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо Тогда
			Объект.ОтражатьВРеглУчете = Истина;
			Объект.ОтражатьВУпрУчете = Истина;
			СписокРеквизитов.Добавить("ОтражатьВРеглУчете");
			СписокРеквизитов.Добавить("ОтражатьВУпрУчете");
		КонецЕсли;
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ХозяйственнаяОперация") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("ВидАналитикиКапитализацииРасходов") <> Неопределено Тогда
	
		Если Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС")
			ИЛИ Объект.ВидАналитикиКапитализацииРасходов <> ПредопределенноеЗначение("Перечисление.ВидыАналитикиКапитализацииРасходов.ОбъектСтроительства") Тогда
			Объект.ЧастичныйВводВЭксплуатацию = Ложь;
			СписокРеквизитов.Добавить("ЧастичныйВводВЭксплуатацию");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ХозяйственнаяОперация") <> Неопределено Тогда
		
		Если Объект.ЧастичныйВводВЭксплуатацию
			И (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
				ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды")) Тогда
			Объект.ЧастичныйВводВЭксплуатацию = Ложь;
			СписокРеквизитов.Добавить("ЧастичныйВводВЭксплуатацию");
		КонецЕсли;
		
		Если Объект.ВидАналитикиКапитализацииРасходов = ПредопределенноеЗначение("Перечисление.ВидыАналитикиКапитализацииРасходов.ОбъектСтроительства")
			И (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
				ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды")) Тогда
			Объект.ВидАналитикиКапитализацииРасходов = ПредопределенноеЗначение("Перечисление.ВидыАналитикиКапитализацииРасходов.ОсновныеСредства");
			СписокРеквизитов.Добавить("ВидАналитикиКапитализацииРасходов");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ОтражатьВРеглУчете") <> Неопределено
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
		
		Объект.НачислятьАмортизациюБУ = Объект.ОтражатьВРеглУчете;
		Объект.НачислятьАмортизациюНУ = Объект.ОтражатьВРеглУчете;
		СписокРеквизитов.Добавить("НачислятьАмортизациюБУ");
		СписокРеквизитов.Добавить("НачислятьАмортизациюНУ");
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ОтражатьВУпрУчете") <> Неопределено Тогда
		Объект.НачислятьАмортизациюУУ = Объект.ОтражатьВУпрУчете;
		СписокРеквизитов.Добавить("НачислятьАмортизациюУУ");
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ОтражатьВРеглУчете") <> Неопределено И НЕ Объект.ОтражатьВРеглУчете
		ИЛИ СписокРеквизитов.Найти("ОтражатьВУпрУчете") <> Неопределено И НЕ Объект.ОтражатьВУпрУчете Тогда
		
		Для каждого СтрокаТаблицы Из Объект.ОС Цикл
			Если НЕ Объект.ОтражатьВРеглУчете Тогда
				СтрокаТаблицы.СтоимостьБУ = 0;
				СтрокаТаблицы.СтоимостьНУ = 0;
				СтрокаТаблицы.СтоимостьПР = 0;
				СтрокаТаблицы.СтоимостьВР = 0;
			КонецЕсли; 
			Если НЕ Объект.ОтражатьВУпрУчете Тогда
				СтрокаТаблицы.СтоимостьУУ = 0;
				СтрокаТаблицы.ЛиквидационнаяСтоимость = 0;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	ПринятиеКУчетуОСКлиентСерверЛокализация.ПриИзмененииРеквизитов(Объект, ВспомогательныеРеквизиты, СписокРеквизитов);
	
	ИзмененныеРеквизиты = СтрСоединить(СписокРеквизитов, ",");
	
КонецПроцедуры

Процедура ПриИзмененииРеквизитов_ПринятиеКУчетуУзловКомпонентовАмортизации(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты) Экспорт

	Если НЕ ЗначениеЗаполнено(ИзмененныеРеквизиты) Тогда
		Возврат; 
	КонецЕсли; 
	
	СписокРеквизитов = СтрРазделить(ИзмененныеРеквизиты, ",");
	
	// ВАЖНО: Порядок имеет значение!
	
	Если СписокРеквизитов.Найти("ОтражатьВРеглУчете") <> Неопределено
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
		
		Объект.НачислятьАмортизациюБУ = Объект.ОтражатьВРеглУчете;
		СписокРеквизитов.Добавить("НачислятьАмортизациюБУ");
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ОтражатьВУпрУчете") <> Неопределено Тогда
		Объект.НачислятьАмортизациюУУ = Объект.ОтражатьВУпрУчете;
		СписокРеквизитов.Добавить("НачислятьАмортизациюУУ");
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ОтражатьВРеглУчете") <> Неопределено И НЕ Объект.ОтражатьВРеглУчете
		ИЛИ СписокРеквизитов.Найти("ОтражатьВУпрУчете") <> Неопределено И НЕ Объект.ОтражатьВУпрУчете Тогда
		
		Для каждого СтрокаТаблицы Из Объект.КомпонентыАмортизации Цикл
			Если НЕ Объект.ОтражатьВРеглУчете Тогда
				СтрокаТаблицы.СтоимостьБУ = 0;
			КонецЕсли; 
			Если НЕ Объект.ОтражатьВУпрУчете Тогда
				СтрокаТаблицы.СтоимостьУУ = 0;
				СтрокаТаблицы.ЛиквидационнаяСтоимость = 0;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	ИзмененныеРеквизиты = СтрСоединить(СписокРеквизитов, ",");
	
КонецПроцедуры

Процедура ПриИзмененииРеквизитов_МодернизацияОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты) Экспорт

	Если НЕ ЗначениеЗаполнено(ИзмененныеРеквизиты) Тогда
		Возврат; 
	КонецЕсли; 
	
	СписокРеквизитов = СтрРазделить(ИзмененныеРеквизиты, ",");
	
	ВнеоборотныеАктивыКлиентСерверЛокализация.ПриИзмененииРеквизитов_МодернизацияОС(Объект, ВспомогательныеРеквизиты, СписокРеквизитов);
	
	ИзмененныеРеквизиты = СтрСоединить(СписокРеквизитов, ",");
	
КонецПроцедуры

Процедура ПриИзмененииРеквизитов_ОбъединениеОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты) Экспорт

	Если НЕ ЗначениеЗаполнено(ИзмененныеРеквизиты) Тогда
		Возврат; 
	КонецЕсли; 
	
	СписокРеквизитов = СтрРазделить(ИзмененныеРеквизиты, ",");
	
	// ВАЖНО: Порядок имеет значение!
	
	Если СписокРеквизитов.Найти("ХозяйственнаяОперация") <> Неопределено Тогда
	
		Если Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПрисоединениеОС") Тогда
			Объект.ОбъединениеОднотипныхОС = Истина;
			СписокРеквизитов.Добавить("ОбъединениеОднотипныхОС");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ОтражатьВРеглУчете") <> Неопределено
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
		
		Объект.НачислятьАмортизациюБУ = Объект.ОтражатьВРеглУчете;
		Объект.НачислятьАмортизациюНУ = Объект.ОтражатьВРеглУчете;
		СписокРеквизитов.Добавить("НачислятьАмортизациюБУ");
		СписокРеквизитов.Добавить("НачислятьАмортизациюНУ");
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ОтражатьВУпрУчете") <> Неопределено Тогда
		Объект.НачислятьАмортизациюУУ = Объект.ОтражатьВУпрУчете;
		СписокРеквизитов.Добавить("НачислятьАмортизациюУУ");
	КонецЕсли;
	
	ОбъединениеОСКлиентСерверЛокализация.ПриИзмененииРеквизитов(Объект, ВспомогательныеРеквизиты, СписокРеквизитов);
	
	ИзмененныеРеквизиты = СтрСоединить(СписокРеквизитов, ",");
	
КонецПроцедуры

Процедура ПриИзмененииРеквизитов_КорректировкаСтоимостиИАмортизацииОС(Форма, ВспомогательныеРеквизиты, ИзмененныеРеквизиты) Экспорт

	Если НЕ ЗначениеЗаполнено(ИзмененныеРеквизиты) Тогда
		Возврат; 
	КонецЕсли;
	
	Объект = Форма.Объект;

	СписокРеквизитов = СтрРазделить(ИзмененныеРеквизиты, ",");
	
	Если СписокРеквизитов.Найти("ОтражатьВРеглУчете") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("ОтражатьВУпрУчете") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("ВидИмущества") <> Неопределено Тогда
	
		Если Объект.ОтражатьВРеглУчете
			И НЕ Объект.ОтражатьВУпрУчете Тогда
			
			Форма.ТекущиеПараметры = "БУ";
			СписокРеквизитов.Добавить("ТекущиеПараметры");
			
		ИначеЕсли Объект.ОтражатьВУпрУчете
			И НЕ Объект.ОтражатьВРеглУчете Тогда
				
			Форма.ТекущиеПараметры = "УУ";
			СписокРеквизитов.Добавить("ТекущиеПараметры");
			
		КонецЕсли;
		
	КонецЕсли;
	
	КорректировкаСтоимостиИАмортизацииОСКлиентСерверЛокализация.ПриИзмененииРеквизитов(Форма, ВспомогательныеРеквизиты, СписокРеквизитов);
	
	ИзмененныеРеквизиты = СтрСоединить(СписокРеквизитов, ",");
	
КонецПроцедуры
 
Функция ЗаполнитьРеквизитыВЗависимостиОтСвойств_ВводОстатков(Объект, ПараметрыРеквизитовОбъекта) Экспорт

	ИзмененныеРеквизиты = Новый Массив;
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		
		Действие = ОчиститьИлиЗаполнить(Объект, ПараметрыРеквизита);
		
		Если НЕ ЗначениеЗаполнено(Действие) Тогда
			Продолжить;
		КонецЕсли;
		
		#Область СтраницаАмортизация
		
		Если ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюБУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюНУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюУУ" Тогда
				Объект[ПараметрыРеквизита.ИмяРеквизита] = ?(Действие = "Заполнить", Истина, Ложь);
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ГрафикАмортизации" Тогда
			Если Действие = "Очистить" Тогда
				Объект[ПараметрыРеквизита.ИмяРеквизита] = Неопределено;
				ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
			КонецЕсли; 
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ВключитьАмортизационнуюПремиюВСоставРасходов" Тогда
			Если Действие = "Очистить" Тогда
				Объект.ВключитьАмортизационнуюПремиюВСоставРасходов = Ложь;
				Объект.СуммаКапитальныхВложенийВключаемыхВРасходыНУ = 0;
				ИзмененныеРеквизиты.Добавить("ВключитьАмортизационнуюПремиюВСоставРасходов");
				ИзмененныеРеквизиты.Добавить("СуммаКапитальныхВложенийВключаемыхВРасходыНУ");
			КонецЕсли; 
		КонецЕсли;
		
		#КонецОбласти
		
		#Область СтраницаСтоимость
		Если Действие = "Очистить" 
			И (ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьБУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьНУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьПР"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьВР"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьУУ"
			
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьБУЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьНУЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьПРЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьВРЦФ"
				
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияБУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияВР"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияПР"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияУУ"
				
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияБУЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияПРЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияВРЦФ") Тогда

			Объект[ПараметрыРеквизита.ИмяРеквизита] = 0;
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);

		КонецЕсли;
		
		#КонецОбласти
		
		#Область СтраницаОтражениеРасходов
		
		Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовБУ" Тогда
			Если Действие = "Очистить" Тогда
				Объект.СтатьяРасходовБУ = Неопределено;
				Объект.АналитикаРасходовБУ = Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовУУ" Тогда
			Если Действие = "Очистить" Тогда
				Объект.СтатьяРасходовУУ = Неопределено;
				Объект.АналитикаРасходовУУ = Неопределено;
				ИзмененныеРеквизиты.Добавить("СтатьяРасходовУУ");
				ИзмененныеРеквизиты.Добавить("АналитикаРасходовУУ");
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовНалог" Тогда
			Если Действие = "Очистить" Тогда
				Объект.СтатьяРасходовНалог = Неопределено;
				Объект.АналитикаРасходовНалог = Неопределено;
				ИзмененныеРеквизиты.Добавить("СтатьяРасходовНалог");
				ИзмененныеРеквизиты.Добавить("АналитикаРасходовНалог");
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяДоходов" Тогда
			Если Действие = "Очистить" Тогда
				Объект.СтатьяДоходов = Неопределено;
				Объект.АналитикаДоходов = Неопределено;
				ИзмененныеРеквизиты.Добавить("СтатьяДоходов");
				ИзмененныеРеквизиты.Добавить("АналитикаДоходов");
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовАмортизационнойПремии" Тогда
			Если Действие = "Очистить" Тогда
				Объект.СтатьяРасходовАмортизационнойПремии = Неопределено;
				Объект.АналитикаРасходовАмортизационнойПремии = Неопределено;
				ИзмененныеРеквизиты.Добавить("СтатьяРасходовАмортизационнойПремии");
				ИзмененныеРеквизиты.Добавить("АналитикаРасходовАмортизационнойПремии");
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ПередаватьРасходыВДругуюОрганизацию" Тогда
			Если Действие = "Очистить" Тогда
				Объект.ПередаватьРасходыВДругуюОрганизацию = Ложь;
				Объект.ОрганизацияПолучательРасходов = Неопределено;
				ИзмененныеРеквизиты.Добавить("ПередаватьРасходыВДругуюОрганизацию");
				ИзмененныеРеквизиты.Добавить("ОрганизацияПолучательРасходов");
			КонецЕсли;
		КонецЕсли;
		
		#КонецОбласти
		
	КонецЦикла; 
	
	Возврат СтрСоединить(ИзмененныеРеквизиты, ",");
	
КонецФункции

Функция ОчиститьИлиЗаполнить(Объект, ПараметрыРеквизита) Экспорт

	Если НЕ ЗначениеЗаполнено(ПараметрыРеквизита.ИмяРеквизита) Тогда
		Возврат "";
	КонецЕсли;
	
	ЭтоБулево = ТипЗнч(Объект[ПараметрыРеквизита.ИмяРеквизита]) = Тип("Булево");
	
	Действие = "";
	
	Если ((ПараметрыРеквизита.Свойство = "Видимость" ИЛИ ПараметрыРеквизита.Свойство = "ВидимостьЭлемента") И ПараметрыРеквизита.Значение = Ложь
			ИЛИ (ПараметрыРеквизита.Свойство = "ТолькоПросмотр" ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного")
					И ПараметрыРеквизита.Значение = Истина)
		И (НЕ ЭтоБулево И ЗначениеЗаполнено(Объект[ПараметрыРеквизита.ИмяРеквизита]) 
			ИЛИ ЭтоБулево И Объект[ПараметрыРеквизита.ИмяРеквизита] = Истина) Тогда
		
		Действие = "Очистить";
	ИначеЕсли ((ПараметрыРеквизита.Свойство = "Видимость" ИЛИ ПараметрыРеквизита.Свойство = "ВидимостьЭлемента") И ПараметрыРеквизита.Значение = Истина
				ИЛИ (ПараметрыРеквизита.Свойство = "ТолькоПросмотр" ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного")
						И ПараметрыРеквизита.Значение = Ложь)
			И (НЕ ЭтоБулево И НЕ ЗначениеЗаполнено(Объект[ПараметрыРеквизита.ИмяРеквизита])
				ИЛИ ЭтоБулево И Объект[ПараметрыРеквизита.ИмяРеквизита] = Ложь) Тогда
			
		Действие = "Заполнить";
	КонецЕсли;

	Возврат Действие;
	
КонецФункции

Функция ПриИзмененииПорядкаУчетаБУ_ОС(Объект, СлужебныеПараметрыФормы = Неопределено, ЕстьПорядокУчетаНУ = Истина) Экспорт

	ИзмененныеРеквизиты = "ПорядокУчетаБУ";
	
	Если Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации") Тогда
		
		Если НЕ ЗначениеЗаполнено(Объект.МетодНачисленияАмортизацииБУ) Тогда
			Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный");
			ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",МетодНачисленияАмортизацииБУ";
		КонецЕсли;
		 
	КонецЕсли; 
	
	Если Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена") 
		И Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена") Тогда
			
		Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",ПорядокУчетаУУ";
	
	ИначеЕсли Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена") 
		И Объект.ПорядокУчетаУУ <> ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена") Тогда
			
		Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена");
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",ПорядокУчетаУУ";
	КонецЕсли;
	
	ИзмененныеРеквизиты = 
		ИзмененныеРеквизиты
		+ ВнеоборотныеАктивыКлиентСерверЛокализация.ПриИзмененииПорядкаУчетаБУ_ОС(Объект, СлужебныеПараметрыФормы, ЕстьПорядокУчетаНУ);
	
	Возврат ИзмененныеРеквизиты;
	
КонецФункции

Функция ПриИзмененииПорядкаУчетаУУ_ОС(Объект, СлужебныеПараметрыФормы = Неопределено, ЕстьПорядокУчетаНУ = Истина) Экспорт

	ИзмененныеРеквизиты = "";
	
	Если Объект.ПорядокУчетаУУ <> ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена") 
		И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена") Тогда
			
		Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации");
		ИзмененныеРеквизиты = ПриИзмененииПорядкаУчетаБУ_ОС(Объект, СлужебныеПараметрыФормы, ЕстьПорядокУчетаНУ) + "," + ИзмененныеРеквизиты;
		
	ИначеЕсли Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена") 
		И Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена") Тогда
			
		Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена");
		ИзмененныеРеквизиты = ПриИзмененииПорядкаУчетаБУ_ОС(Объект, СлужебныеПараметрыФормы, ЕстьПорядокУчетаНУ) + "," + ИзмененныеРеквизиты;
		
	КонецЕсли;
	
	Возврат ИзмененныеРеквизиты;
	
КонецФункции
 
Функция ПриИзмененииПорядкаУчетаБУ_НМА(Объект, СлужебныеПараметрыФормы = Неопределено, ЕстьПорядокУчетаНУ = Истина) Экспорт

	ИзмененныеРеквизиты = "ПорядокУчетаБУ";
	
	Если Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию") Тогда
		
		Если НЕ ЗначениеЗаполнено(Объект.МетодНачисленияАмортизацииБУ) Тогда
			Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный");
			ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",МетодНачисленияАмортизацииБУ";
		КонецЕсли;
		 
	КонецЕсли; 
	
	Возврат ИзмененныеРеквизиты;
	
КонецФункции

Функция ПриИзмененииПорядкаУчетаУУ_НМА(Объект, СлужебныеПараметрыФормы = Неопределено, ЕстьПорядокУчетаНУ = Истина) Экспорт

	ИзмененныеРеквизиты = "ПорядокУчетаУУ";
	
	Если Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию") Тогда
		
		Если НЕ ЗначениеЗаполнено(Объект.МетодНачисленияАмортизацииБУ) Тогда
			Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный");
			ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",МетодНачисленияАмортизацииУУ";
		КонецЕсли;
		 
	КонецЕсли; 
	
	Возврат ИзмененныеРеквизиты;
	
КонецФункции

#КонецОбласти

#Область ОпределениеСвойствЗависимыхРеквизитовОбъекта

Функция ЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_ОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "")

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	ПараметрыВводаОстатковОС = ПараметрыВводаОстатковОС(Объект, ВспомогательныеРеквизиты);
	
	ПоНаработкеУУ = (Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции"));
	
	ТипыДоговоровПоФСБУ25 = УчетАрендованныхОСКлиентСервер.ТипыДоговоровДоходнойАренды();
	ПереданоВФинАренду = (ТипыДоговоровПоФСБУ25.Найти(ВспомогательныеРеквизиты.ТипДоговораПередачиВАренду) <> Неопределено);
	
	СтоимостьБУДоступна = (Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету"));

	ЭтоАренда =	
		ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе")
		ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе");
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") Тогда
		СтруктураИзмененныхРеквизитов.Вставить("ДоступныПараметрыУчета");
	КонецЕсли;
	
	#Область ПараметрыУчета
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("РасчетыМеждуОрганизациямиАрендатор")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
				ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе"))
			И ВспомогательныеРеквизиты.РасчетыМеждуОрганизациямиАрендатор
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПодразделениеАрендатора", 
			"ПодразделениеАрендатора", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МОЛАрендатора", 
			"МОЛАрендатора", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("РасчетыМеждуОрганизациямиАрендатор")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
								ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе"))
							И (ВспомогательныеРеквизиты.РасчетыМеждуОрганизациямиАрендатор
								ИЛИ ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета);
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЗалоговаяСтоимость", 
			"ЗалоговаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//	
		ЗначениеСвойства = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
								ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе"))
							И ВспомогательныеРеквизиты.РасчетыМеждуОрганизациямиАрендатор
							И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЗалоговаяСтоимость", 
			"ЗалоговаяСтоимость", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		// Для поддержки переноса данных
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета
			И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитикиНастройкиУчетаНДС <> Неопределено
			И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитикиНастройкиУчетаНДС.РаздельныйУчетВНАПоНалогообложениюНДС;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантРаздельногоУчетаНДС", 
			"", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитикиНастройкиУчетаНДС <> Неопределено
			И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитикиНастройкиУчетаНДС.РаздельныйУчетВНАПоНалогообложениюНДС;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантРаздельногоУчетаНДС", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВБУ
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПринятияКУчетуБУ", 
			"ДатаПринятияКУчетуБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаУУ", 
			"ПорядокУчетаУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПринятияКУчетуУУ", 
			"ДатаПринятияКУчетуУУ", 
			"Видимость", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
				
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЛиквидационнаяСтоимостьРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		//
		ЗначениеСвойства =
			ПараметрыВводаОстатковОС.ДоступныПараметрыУчета 
			И (ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
				
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЛиквидационнаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МОЛ", 
			"МОЛ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АдресМестонахождения", 
			"АдресМестонахождения", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если ОбновитьВсе Тогда
		
		Если НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
			
			ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
				"НаправлениеДеятельности", 
				"НаправлениеДеятельности", 
				"АвтоОтметкаНезаполненного", 
				Ложь, 
				ПараметрыРеквизитовОбъекта);
				
		КонецЕсли; 
		
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ЭтоАренда
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Договор", 
			"Договор", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
				ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе");
				
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Подразделение", 
			"Подразделение", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Стоимость
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоговорПередачиВАренду")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства =
			(ПереданоВФинАренду ИЛИ НЕ СтоимостьБУДоступна)
			И (ВспомогательныеРеквизиты.ОтражатьВБУ
				ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУ", 
			"ТекущаяСтоимостьБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУ", 
			"НакопленнаяАмортизацияБУ", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства =
			ПереданоВФинАренду
			И ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
				
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьУУ", 
			"ТекущаяСтоимостьУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияУУ", 
			"НакопленнаяАмортизацияУУ", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВБУ
			ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУ", 
			"ТекущаяСтоимостьБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.ОтражатьВБУ
				ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьБУ", 
			"ПервоначальнаяСтоимостьБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьУУ", 
			"ТекущаяСтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьУУ", 
			"ПервоначальнаяСтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И НЕ ПереданоВФинАренду
			И (ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета)
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьУУ", 
			"ТекущаяСтоимостьУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияУУ", 
			"НакопленнаяАмортизацияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВБУ;
						
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУ", 
			"НакопленнаяАмортизацияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьОтличается", 
			"ПервоначальнаяСтоимостьОтличается", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьОтличается")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ПервоначальнаяСтоимостьОтличается;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьУУ", 
			"ПервоначальнаяСтоимостьУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненногоБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьБУ", 
			"ПервоначальнаяСтоимостьБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненногоБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьОтличается")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПервоначальнаяСтоимостьОтличается
			И ВспомогательныеРеквизиты.ОтражатьВУпрУчете 
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьУУ", 
			"ПервоначальнаяСтоимостьУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область События
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И НЕ ПереданоВФинАренду;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьИзменениеПараметровАмортизацииБУ", 
			"ЕстьИзменениеПараметровАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаИзмененияПараметровБУ", 
			"ДатаИзмененияПараметровБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ЕстьИзменениеПараметровАмортизацииБУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаИзмененияПараметровБУ", 
			"ДатаИзмененияПараметровБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И НЕ ПереданоВФинАренду;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьИзменениеПараметровАмортизацииУУ", 
			"ЕстьИзменениеПараметровАмортизацииУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаИзмененияПараметровУУ", 
			"ДатаИзмененияПараметровУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			Объект.ЕстьИзменениеПараметровАмортизацииУУ 
			И ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И ВспомогательныеРеквизиты.ПорядокУчетаВНА = ПредопределенноеЗначение("Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл")
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьДляВычисленияАмортизацииУУ", 
			"СтоимостьДляВычисленияАмортизацииУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ЕстьИзменениеПараметровАмортизацииУУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаИзмененияПараметровУУ", 
			"ДатаИзмененияПараметровУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВБУ
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И НЕ ПереданоВФинАренду;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьРезервПереоценкиРегл", 
			"ЕстьРезервПереоценкиРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиАмортизацииРегл", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиСтоимостиРегл", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			НЕ ПереданоВФинАренду
			И (ВспомогательныеРеквизиты.ОтражатьВУпрУчете
					И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
				ИЛИ НЕ ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
					И ВспомогательныеРеквизиты.ОтражатьВУУ);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьРезервПереоценки", 
			"ЕстьРезервПереоценки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РезервПереоценкиЗнак", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиАмортизации", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиСтоимости", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументВводаВЭксплуатациюУУ", 
			"ДокументВводаВЭксплуатациюУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			НЕ Объект.ЕстьИзменениеПараметровАмортизацииБУ
			И НЕ Объект.ЕстьИзменениеПараметровАмортизацииУУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СобытиеМодернизация", 
			"СобытиеМодернизация", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СобытиеПринятиеКУчету", 
			"СобытиеПринятиеКУчету", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СобытиеМодернизация", 
			"СобытиеМодернизация", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область АмортизацияБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииБУ 
				ИЛИ ПараметрыВводаОстатковОС.ДействуетНачислениеИзноса);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И Не ПараметрыВводаОстатковОС.ПоНаработке
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУОстаточный", 
			"СрокИспользованияБУОстаточный", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//	
		ЗначениеСвойства = 
			Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ПараметрыВводаОстатковОС.ПоНаработке
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработкиОстаточныйБУ", 
			"ОбъемНаработкиОстаточныйБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//	
		ЗначениеСвойства = 
			Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ПараметрыВводаОстатковОС.ПоНаработке
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработкиОстаточныйБУ", 
			"ОбъемНаработкиОстаточныйБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииБУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУ", 
			"НачислятьАмортизациюБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
			И ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииБУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
				
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ", 
			"КоэффициентУскоренияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
		 	ВспомогательныеРеквизиты.ОтражатьВБУ
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И (Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"))
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
				
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область АмортизацияУУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииУУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииУУ 
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И Объект.ЕстьИзменениеПараметровАмортизацииУУ 
			И НЕ ПоНаработкеУУ;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУОстаточный", 
			"СрокИспользованияУУОстаточный", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства =
			ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииУУ 
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И Объект.ЕстьИзменениеПараметровАмортизацииУУ 
			И ПоНаработкеУУ
			И ВспомогательныеРеквизиты.ПорядокУчетаВНА = ПредопределенноеЗначение("Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработкиОстаточныйУУ", 
			"ОбъемНаработкиОстаточныйУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииУУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
					ИЛИ Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка"));
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииУУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюУУ", 
			"НачислятьАмортизациюУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", 
			"МетодНачисленияАмортизацииУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииУУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка");
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", 
			"КоэффициентУскоренияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
	#КонецОбласти
	
	#Область АмортизацияОбщие
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ПоНаработке
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПоказательНаработки", 
			"ПоказательНаработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработки", 
			"ОбъемНаработки", 
			"Видимость", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовБУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовБУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовУУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовУУ", 
			"АналитикаРасходовУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.СтатьяРасходовУУОбязательна
			И (ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета)
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	ВводОстатковВнеоборотныхАктивовКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_ОС(
		Объект, ВспомогательныеРеквизиты, ПараметрыВводаОстатковОС, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

Функция ЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_НМА(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "")

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	ПараметрыВводаОстатковНМА = ПараметрыВводаОстатковНМА(Объект, ВспомогательныеРеквизиты);
	ПараметрыВводаОстатковНМА.Вставить("ДоступныПараметрыУчета", ВспомогательныеРеквизиты.ОтражатьВОперативномУчете);
	
	АмортизацияУУДоступна = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете
		И (Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"));
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") Тогда
		СтруктураИзмененныхРеквизитов.Вставить("ДоступныПараметрыУчета");
	КонецЕсли;

	#Область ПараметрыУчетаБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВБУ
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПринятияКУчетуБУ", 
			"ДатаПринятияКУчетуБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	#КонецОбласти
				
	#Область ПараметрыУчетаУУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПринятияКУчетуУУ", 
			"ДатаПринятияКУчетуУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаУУ", 
			"ПорядокУчетаУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;

	#КонецОбласти

	#Область ПараметрыУчетаОбщие
	
	Если ОбновитьВсе Тогда
		
		Если НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
			
			ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
				"НаправлениеДеятельности", 
				"НаправлениеДеятельности", 
				"АвтоОтметкаНезаполненного", 
				Ложь, 
				ПараметрыРеквизитовОбъекта);
				
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПриобретения", 
			"ДатаПриобретения", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//	
		ЗначениеСвойства = ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимостьРегл", 
			"ЛиквидационнаяСтоимостьРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//	
		ЗначениеСвойства =
			ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета 
			И (ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимость", 
			"ЛиквидационнаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
										
	#Область Стоимость
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВБУ
			ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУ", 
			"ТекущаяСтоимостьБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//	
		ЗначениеСвойства = 
			ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.ОтражатьВБУ
				ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьБУ", 
			"ПервоначальнаяСтоимостьБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьУУ", 
			"ТекущаяСтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//	
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьУУ", 
			"ПервоначальнаяСтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА 
					И ПараметрыВводаОстатковНМА.АмортизацияБУДоступна
				ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА 
					И АмортизацияУУДоступна);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУ", 
			"НакопленнаяАмортизацияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
					И АмортизацияУУДоступна
				ИЛИ НЕ ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета
					И ВспомогательныеРеквизиты.ОтражатьВУпрУчете)
			И (ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ВспомогательныеРеквизиты.ВалютыСовпадают);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияУУ", 
			"НакопленнаяАмортизацияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьОтличается")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьУУ", 
			"ПервоначальнаяСтоимостьУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ПервоначальнаяСтоимостьОтличается, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьБУ", 
			"ПервоначальнаяСтоимостьБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ПервоначальнаяСтоимостьОтличается, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУ", 
			"ТекущаяСтоимостьБУ", 
			"АвтоОтметкаНезаполненного", 
			НЕ Объект.ПервоначальнаяСтоимостьОтличается И НЕ Объект.ПрименениеЦелевогоФинансирования, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьОтличается")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства =
			НЕ Объект.ПервоначальнаяСтоимостьОтличается
			И ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
				
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьУУ", 
			"ТекущаяСтоимостьУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства =
			Объект.ПервоначальнаяСтоимостьОтличается
			И ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьУУ", 
			"ПервоначальнаяСтоимостьУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьОтличается", 
			"ПервоначальнаяСтоимостьОтличается", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СобытияБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВБУ 
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР");
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьУлучшениеНМАБУ", 
			"ЕстьУлучшениеНМАБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПоследнегоУлучшенияБУ", 
			"ДатаПоследнегоУлучшенияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьРезервПереоценкиРегл", 
			"ЕстьРезервПереоценкиРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РезервПереоценкиРеглЗнак", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РезервПереоценкиСтоимостиРеглСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РезервПереоценкиАмортизацииРеглСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//	
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВБУ 
			И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
			И Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиАмортизацииРегл", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиСтоимостиРегл", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьУлучшениеНМАБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ЕстьУлучшениеНМАБУ;
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПоследнегоУлучшенияБУ", 
			"ДатаПоследнегоУлучшенияБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	КонецЕсли;

	#КонецОбласти
	
	#Область СобытияУУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
			И ВспомогательныеРеквизиты.ОтражатьВУпрУчете;
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьУлучшениеНМАУУ", 
			"ЕстьУлучшениеНМАУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПоследнегоУлучшенияУУ", 
			"ДатаПоследнегоУлучшенияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьРезервПереоценки", 
			"ЕстьРезервПереоценки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиАмортизации", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиСтоимости", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументПринятияКУчетуУУ", 
			"ДокументПринятияКУчетуУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьУлучшениеНМАУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ЕстьУлучшениеНМАУУ;
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПоследнегоУлучшенияУУ", 
			"ДатаПоследнегоУлучшенияУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область АмортизацияБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковНМА.ДоступныПараметрыАмортизацииБУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьУлучшениеНМАБУ") 
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = 
			ПараметрыВводаОстатковНМА.ДоступныПараметрыАмортизацииБУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета
			И Объект.ЕстьУлучшениеНМАБУ;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУОстаточный", 
			"СрокИспользованияБУОстаточный", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка"));
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ",
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка")
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыАмортизацииБУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентБУ", 
			"КоэффициентБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область АмортизацияУУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковНМА.ДоступныПараметрыАмортизацииУУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", 
			"МетодНачисленияАмортизацииУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьУлучшениеНМАУУ") 
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = 
			ПараметрыВводаОстатковНМА.ДоступныПараметрыАмортизацииБУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета
			И Объект.ЕстьУлучшениеНМАУУ;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУОстаточный", 
			"СрокИспользованияУУОстаточный", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыВводаОстатковНМА.ДоступныПараметрыАмортизацииУУ
							И (Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный")
								ИЛИ Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка"));
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка")
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыАмортизацииУУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", 
			"КоэффициентУскоренияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область АмортизацияПрочее
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковНМА.ПоНаработке
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработки", 
			"ОбъемНаработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	#КонецОбласти
	
	#Область ОтражениеДоходовИРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковНМА.ДоступноОтражениеРасходовБУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		// Для поддержки переноса данных
		ЗначениеСвойства = 
			ПараметрыВводаОстатковНМА.ДоступноОтражениеРасходовБУ
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства = 
			ПараметрыВводаОстатковНМА.ДоступныПараметрыАмортизацииУУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовУУ", 
			"АналитикаРасходовУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете 
			И ПараметрыВводаОстатковНМА.СтатьяРасходовУУОбязательна;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	#КонецОбласти
	
	ВводОстатковВнеоборотныхАктивовКлиентСерверЛокализация.ДополнитьЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_НМА(
		Объект, ВспомогательныеРеквизиты, ПараметрыВводаОстатковНМА, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;

КонецФункции

Функция ЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_РасчетыПоАренде(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "")

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	РеквизитыДоговора = ВспомогательныеРеквизиты.РеквизитыДоговора;
	
	УчетНаБалансе = 
		ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018
		ИЛИ РеквизитыДоговора.Балансодержатель = ПредопределенноеЗначение("Перечисление.БалансодержательПредметовАренды.Арендатор")
		ИЛИ НЕ ЗначениеЗаполнено(Объект.Договор);
	
	#Область СтраницаОстаткиРасчетов
	
	#Область АрендныеОбязательства
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			УчетНаБалансе
			И (ВспомогательныеРеквизиты.ОтражатьВБУиНУ
				ИЛИ ВспомогательныеРеквизиты.ОтражатьВОперативномУчете);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АрендныеОбязательстваОстаток", 
			"АрендныеОбязательстваОстаток", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АрендныеОбязательстваОстатокРегл", 
			"АрендныеОбязательстваОстатокРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			УчетНаБалансе
			И (ВспомогательныеРеквизиты.ОтражатьВУУ 
				ИЛИ ВспомогательныеРеквизиты.ОтражатьВОперативномУчете);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АрендныеОбязательстваОстатокУпр", 
			"АрендныеОбязательстваОстатокУпр", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область УслугиПоАренде
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") 
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства = 
			(ВспомогательныеРеквизиты.ОтражатьВБУиНУ 
				ИЛИ ВспомогательныеРеквизиты.ОтражатьВОперативномУчете);
				
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"УслугаПоАрендеОстаток", 
			"УслугаПоАрендеОстаток", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"УслугаПоАрендеОстатокРегл", 
			"УслугаПоАрендеОстатокРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			(ВспомогательныеРеквизиты.ОтражатьВУУ 
				ИЛИ ВспомогательныеРеквизиты.ОтражатьВОперативномУчете);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"УслугаПоАрендеОстатокУпр", 
			"УслугаПоАрендеОстатокУпр", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	#КонецОбласти
	
	#Область ВыкупнаяСтоимость
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			УчетНаБалансе
			И РеквизитыДоговора.ЕстьВыкупПредметовАренды
			И (ВспомогательныеРеквизиты.ОтражатьВБУиНУ 
				ИЛИ ВспомогательныеРеквизиты.ОтражатьВОперативномУчете);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВыкупнаяСтоимостьОстаток", 
			"ВыкупнаяСтоимостьОстаток", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВыкупнаяСтоимостьОстатокРегл", 
			"ВыкупнаяСтоимостьОстатокРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			УчетНаБалансе
			И РеквизитыДоговора.ЕстьВыкупПредметовАренды
			И (ВспомогательныеРеквизиты.ОтражатьВУУ 
				ИЛИ ВспомогательныеРеквизиты.ОтражатьВОперативномУчете);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВыкупнаяСтоимостьОстатокУпр", 
			"ВыкупнаяСтоимостьОстатокУпр", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	#КонецОбласти

	#Область НДС
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = 
			УчетНаБалансе
			И (ВспомогательныеРеквизиты.ОтражатьВБУиНУ 
				ИЛИ ВспомогательныеРеквизиты.ОтражатьВОперативномУчете);
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НДСОстаток", 
			"НДСОстаток", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НДСОстатокРегл", 
			"НДСОстатокРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			УчетНаБалансе
			И (ВспомогательныеРеквизиты.ОтражатьВУУ 
				ИЛИ ВспомогательныеРеквизиты.ОтражатьВОперативномУчете);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НДСОстатокУпр", 
			"НДСОстатокУпр", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	#КонецОбласти
	
	#Область Проценты
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018
			И (ВспомогательныеРеквизиты.ОтражатьВБУиНУ 
				ИЛИ ВспомогательныеРеквизиты.ОтражатьВОперативномУчете);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПроцентыОстаток", 
			"ПроцентыОстаток", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПроцентыОстатокРегл", 
			"ПроцентыОстатокРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018
			И (ВспомогательныеРеквизиты.ОтражатьВУУ 
				ИЛИ ВспомогательныеРеквизиты.ОтражатьВОперативномУчете);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПроцентыОстатокУпр", 
			"ПроцентыОстатокУпр", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	#КонецОбласти
	
	#КонецОбласти
	
	#Область СтраницаРасчетыПоДоговору
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") 
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВОперативномУчете;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаУслугПоАренде", 
			"СуммаУслугПоАренде", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаНДС", 
			"СуммаНДС", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПервогоПлатежа", 
			"ДатаПервогоПлатежа", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтавкаНДС", 
			"СтавкаНДС", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПериодичностьОплат", 
			"ПериодичностьОплат", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПериодичностьНачислений", 
			"ПериодичностьНачислений", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СуммаУслугПоАрендеВалюта", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СуммаНДСВалюта", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокАренды", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВОперативномУчете
			И ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаНачалаАренды", 
			"", 
			"ОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВОперативномУчете
			И ВспомогательныеРеквизиты.РеквизитыДоговора.ЕстьОбеспечительныйПлатеж;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаОбеспечительногоПлатежа", 
			"СуммаОбеспечительногоПлатежа", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПервогоОбеспечительногоПлатежа", 
			"ДатаПервогоОбеспечительногоПлатежа", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СуммаОбеспечительногоПлатежаВалюта", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВОперативномУчете
			И ВспомогательныеРеквизиты.РеквизитыДоговора.ЕстьВыкупПредметовАренды;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаВыкупаПредметовАренды", 
			"СуммаВыкупаПредметовАренды", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаВыкупа", 
			"ДатаВыкупа", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СуммаВыкупаПредметовАрендыВалюта", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПериодичностьОплат") 
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВОперативномУчете
			И Объект.ПериодичностьОплат <> ПредопределенноеЗначение("Перечисление.ПериодичностьГрафика.Произвольная");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОплатаУслугиПоАренде", 
			"ОплатаУслугиПоАренде", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОплатаУслугиПоАрендеВалюта", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПериодичностьНачислений") 
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВОперативномУчете
			И Объект.ПериодичностьНачислений <> ПредопределенноеЗначение("Перечисление.ПериодичностьГрафика.Произвольная");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислениеУслугиПоАренде", 
			"НачислениеУслугиПоАренде", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НачислениеУслугиПоАрендеВалюта", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") 
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВОперативномУчете
			И ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаУслугПоАренде", 
			"СуммаУслугПоАренде", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПервогоПлатежа", 
			"ДатаПервогоПлатежа", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтавкаНДС", 
			"СтавкаНДС", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикОплатУслуг", 
			"ГрафикОплатУслуг", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ГрафикНачисленияУслуг", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаПроцентов", 
			"СуммаПроцентов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ГрафикНачисленияПроцентов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьПредметовАренды", 
			"СтоимостьПредметовАренды", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПроцентнаяСтавка", 
			"ПроцентнаяСтавка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВОперативномУчете
			И ВспомогательныеРеквизиты.РеквизитыДоговора.ЕстьОбеспечительныйПлатеж
			И ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаОбеспечительногоПлатежа", 
			"СуммаОбеспечительногоПлатежа", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПервогоОбеспечительногоПлатежа", 
			"ДатаПервогоОбеспечительногоПлатежа", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВОперативномУчете
			И ВспомогательныеРеквизиты.РеквизитыДоговора.ЕстьВыкупПредметовАренды
			И ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаВыкупаПредметовАренды", 
			"СуммаВыкупаПредметовАренды", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаВыкупа", 
			"ДатаВыкупа", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПериодичностьОплат") 
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВОперативномУчете
			И Объект.ПериодичностьОплат <> ПредопределенноеЗначение("Перечисление.ПериодичностьГрафика.Произвольная")
			И ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОплатаУслугиПоАренде", 
			"ОплатаУслугиПоАренде", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НачислениеУслугиПоАренде") 
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВОперативномУчете
			И Объект.НачислениеУслугиПоАренде <> ПредопределенноеЗначение("Перечисление.ПериодичностьГрафика.Произвольная")
			И ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислениеУслугиПоАренде", 
			"НачислениеУслугиПоАренде", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
		
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ПараметрыПринятияКУчетуОСИВводаОстатков(Объект, ВспомогательныеРеквизиты)

	ДоступныПараметрыАмортизацииБУ = 
		(Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.ПустаяСсылка"))
		И ВспомогательныеРеквизиты.ОтражатьВБУ
		И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо;
		
	//
	ДоступныПараметрыАмортизацииУУ = 
		(Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
				ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена")
				ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"))
			И ВспомогательныеРеквизиты.ОтражатьВУпрУчете;
	//								
	ДоступноОтражениеРасходовБУ = 
		ВспомогательныеРеквизиты.ОтражатьВБУ
		И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо
		И (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.ПустаяСсылка"));
			
	//		
	ДоступноОтражениеРасходовУУ = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете
		И (Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету")
			ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"));
			
	//
	АмортизацияУУДоступна = 
		(Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
				ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету"))
			И ВспомогательныеРеквизиты.ОтражатьВУпрУчете;
							
	//		
	АмортизацияБУДоступна = 
		(Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету"))
		И ВспомогательныеРеквизиты.ОтражатьВБУ
		И ВспомогательныеРеквизиты.РеглУчетВНАВедетсяНезависимо;
	
	//
	ПоНаработке = 
		Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
		ИЛИ Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
		ИЛИ Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега");
		
	//
	СтатьяРасходовУУОбязательна = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете 
		И (НЕ ДоступноОтражениеРасходовБУ 
			ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы"));
		
	//
	ПараметрыПринятияКУчетуОС = Новый Структура;
	ПараметрыПринятияКУчетуОС.Вставить("ДоступныПараметрыАмортизацииБУ", ДоступныПараметрыАмортизацииБУ);
	ПараметрыПринятияКУчетуОС.Вставить("ДоступныПараметрыАмортизацииУУ", ДоступныПараметрыАмортизацииУУ);
	ПараметрыПринятияКУчетуОС.Вставить("ДоступноОтражениеРасходовБУ", ДоступноОтражениеРасходовБУ);
	ПараметрыПринятияКУчетуОС.Вставить("ДоступноОтражениеРасходовУУ", ДоступноОтражениеРасходовУУ);
	ПараметрыПринятияКУчетуОС.Вставить("ДоступноОтражениеРасходовНУ", Ложь);
	ПараметрыПринятияКУчетуОС.Вставить("АмортизацияУУДоступна", АмортизацияУУДоступна);
	ПараметрыПринятияКУчетуОС.Вставить("АмортизацияБУДоступна", АмортизацияБУДоступна);
	ПараметрыПринятияКУчетуОС.Вставить("ПоНаработке", ПоНаработке);
	ПараметрыПринятияКУчетуОС.Вставить("НаправлениеДеятельностиОбязательно", Ложь);
	ПараметрыПринятияКУчетуОС.Вставить("СтатьяРасходовУУОбязательна", СтатьяРасходовУУОбязательна);
	
	ВнеоборотныеАктивыКлиентСерверЛокализация.ДополнитьПараметрыПринятияКУчетуОСИВводаОстатков(
		Объект, ВспомогательныеРеквизиты, ПараметрыПринятияКУчетуОС);
	
	Возврат ПараметрыПринятияКУчетуОС;

КонецФункции

// Добавляет описание ошибки.
// 
// Параметры:
//  СписокОшибок - Массив из Структура - Список ошибок
//  ТекстСообщения - Строка - Текст сообщения
//  Поле - Строка - Поле
//  ПутьКДанным - Строка - Путь к данным
//	ЕстьОшибки - Булево -
Процедура ДобавитьОписаниеОшибки(СписокОшибок, ТекстСообщения, Поле = Неопределено, ПутьКДанным = Неопределено, ЕстьОшибки = Ложь) Экспорт
	
	ЕстьОшибки = Истина;
	
	ОписаниеОшибки = Новый Структура;
	ОписаниеОшибки.Вставить("ТекстСообщения", ТекстСообщения);
	ОписаниеОшибки.Вставить("Поле", Поле);
	ОписаниеОшибки.Вставить("ПутьКДанным", ПутьКДанным);

	СписокОшибок.Добавить(ОписаниеОшибки);
	
КонецПроцедуры

Процедура ПриИзмененииВариантаОтраженияВУчете(Объект, ВариантОтраженияВУчете, ЕстьБУНУ = Ложь) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ВариантОтраженияВУчете) Тогда
		ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомУчете");
	КонецЕсли; 
	
	Объект.ОтражатьВУпрУчете = 
		(ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомУчете")
			ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИРегламентированномУчетах")
			ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИБухгалтерскомУчете")
			ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИНалоговомУчете"));
			
	Объект.ОтражатьВРеглУчете = 
		(ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.РегламентированномУчете")
			ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИРегламентированномУчетах")
			ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.БухгалтерскомУчете")
			ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.НалоговомУчете")
			ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИБухгалтерскомУчете")
			ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИНалоговомУчете"));
			
	Если ЕстьБУНУ Тогда
		
		Объект.ОтражатьВБУ = 
			(ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИРегламентированномУчетах")
				ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.РегламентированномУчете")
				ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.БухгалтерскомУчете")
				ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИБухгалтерскомУчете"));
				
		Объект.ОтражатьВНУ = 
			(ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИРегламентированномУчетах")
				ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.РегламентированномУчете")
				ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.НалоговомУчете")
				ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИНалоговомУчете"));
			
	КонецЕсли;
	
КонецПроцедуры

Функция ВариантОтраженияВУчете(Объект, ЕстьБУНУ = Ложь) Экспорт

	ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.ПустаяСсылка");
	
	Если Объект.ОтражатьВУпрУчете Тогда 
		
		Если ЕстьБУНУ 
			И Объект.ОтражатьВБУ 
			И Объект.ОтражатьВНУ Тогда
			
			ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИРегламентированномУчетах");
			
		ИначеЕсли ЕстьБУНУ 
			И Объект.ОтражатьВУпрУчете 
			И Объект.ОтражатьВБУ Тогда
			
			ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИБухгалтерскомУчете");
			
		ИначеЕсли ЕстьБУНУ 
			И Объект.ОтражатьВУпрУчете 
			И Объект.ОтражатьВНУ Тогда
			
			ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИНалоговомУчете");
			
		ИначеЕсли НЕ ЕстьБУНУ 
			И Объект.ОтражатьВРеглУчете Тогда
			
			ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИРегламентированномУчетах");
			
		Иначе
			
			ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомУчете");
			
		КонецЕсли;
		
	ИначеЕсли ЕстьБУНУ 
			И Объект.ОтражатьВБУ 
			И Объект.ОтражатьВНУ
		ИЛИ НЕ ЕстьБУНУ
			И Объект.ОтражатьВРеглУчете Тогда
		
		ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.РегламентированномУчете");
		
	ИначеЕсли ЕстьБУНУ 
		И Объект.ОтражатьВБУ Тогда
		
		ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.БухгалтерскомУчете");
		
	ИначеЕсли ЕстьБУНУ 
		И Объект.ОтражатьВНУ Тогда
		
		ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.НалоговомУчете");
		
	КонецЕсли; 
	
	Возврат ВариантОтраженияВУчете;
	
КонецФункции

// Добавляет к строке наименование валюты.
// 
// Параметры:
// 	ИсходнаяСтрока - Строка -
// 	ПредставлениеВалюты - Строка -
// 	
// Возвращаемое значение:
// 	Строка - Строка с валютой.
Функция ДобавитьКСтрокеВалюту(ИсходнаяСтрока, ПредставлениеВалюты) Экспорт
	Возврат ?(ЗначениеЗаполнено(ПредставлениеВалюты), СтрШаблон(ИсходнаяСтрока + " (%1)", ПредставлениеВалюты), ИсходнаяСтрока);
КонецФункции

// Представление поля с валютой.
// 
// Параметры:
//  ПредставлениеБезУчета - Строка - Представление без названия учета
//  Представление - Строка - Представление
//  СлужебныеПараметрыФормы - Структура - Служебные параметры формы
//  ПредставлениеВалюты - Строка - Представление валюты
// 
// Возвращаемое значение:
//  Строка - Представление поля с валютой
Функция ПредставлениеПоляСВалютой(ПредставлениеБезУчета, Представление, СлужебныеПараметрыФормы, ПредставлениеВалюты) Экспорт
	
	Если НЕ СлужебныеПараметрыФормы.РеглУчетВНАВедетсяНезависимо
		И СлужебныеПараметрыФормы.ВалютыСовпадают Тогда
			
		ПредставлениеПоляСВалютой = ПредставлениеБезУчета;
		
	Иначе
		
		ПредставлениеПоляСВалютой = ДобавитьКСтрокеВалюту(Представление, ПредставлениеВалюты);
			
	КонецЕсли; 
	
	Возврат ПредставлениеПоляСВалютой;
	
КонецФункции

#КонецОбласти

#КонецОбласти
