#Область ПрограммныйИнтерфейс

//++ НЕ УТ

// Метод возвращает ссылку на элемент справочника КодыОперацийПрослеживаемости по коду
// 
// Параметры:
//  КодОперации - Строка - Код операции
// 
// Возвращаемое значение:
//  СправочникСсылка.КодыОперацийПрослеживаемости - Операция прослеживаемости
//
Функция ОперацияПрослеживаемости(КодОперации = "") Экспорт
	
	КОП = Справочники.КодыОперацийПрослеживаемости;
	
	Если КодОперации = "01" Тогда
		Операция = КОП.ПередачаВПроизводство;
	ИначеЕсли КодОперации = "02" Тогда
		Операция = КОП.ЗахоронениеОбезвреживаниеУтилизацияТовара;
	ИначеЕсли КодОперации = "03" Тогда
		Операция = КОП.УничтожениеУтратаВследствиеДействияНепреодолимойСилы;
	ИначеЕсли КодОперации = "04" Тогда
		Операция = КОП.РеализацияРозничная;
	ИначеЕсли КодОперации = "05" Тогда
		Операция = КОП.ВывозТовараЗаПределыРФ;
	ИначеЕсли КодОперации = "06" Тогда
		Операция = КОП.БезвозмезднаяПередачаТовараФизическимЛицам;
	ИначеЕсли КодОперации = "07" Тогда
		Операция = КОП.КонфискацияГосударством;
	ИначеЕсли КодОперации = "08" Тогда
		Операция = КОП.РеализацияТовараДипломатическимИКонсульскимУчрежденям;
	ИначеЕсли КодОперации = "09" Тогда
		Операция = КОП.НедостачаВыявленнаяВХодеИнвентаризации;
	ИначеЕсли КодОперации = "10" Тогда
		Операция = КОП.ВозвратРанееУтраченногоТовара;
	ИначеЕсли КодОперации = "11" Тогда
		Операция = КОП.ВозвратОтРозничногоПокупателя;
	ИначеЕсли КодОперации = "12" Тогда
		Операция = КОП.ВозвратИзПроизводства;
	ИначеЕсли КодОперации = "13" Тогда
		Операция = КОП.ПередачаНеСвязаннаяСРеализацией;
	ИначеЕсли КодОперации = "14" Тогда
		Операция = КОП.ПолучениеНеСвязанноеСРеализацией;
	ИначеЕсли КодОперации = "15" Тогда
		Операция = КОП.Реализация;
	ИначеЕсли КодОперации = "16" Тогда
		Операция = КОП.БезвозмезднаяПередача;
	ИначеЕсли КодОперации = "17" Тогда
		Операция = КОП.Приобретение;
	ИначеЕсли КодОперации = "18" Тогда
		Операция = КОП.БезвозмездноеПолучение;
	ИначеЕсли КодОперации = "19" Тогда
		Операция = КОП.УКДНаУменьшениеВыданный;
	ИначеЕсли КодОперации = "20" Тогда
		Операция = КОП.УКДНаУвеличениеВыданный;
	ИначеЕсли КодОперации = "21" Тогда
		Операция = КОП.УКДНаУменьшениеПолученный;
	ИначеЕсли КодОперации = "22" Тогда
		Операция = КОП.УКДНаУвеличениеПолученный;
	ИначеЕсли КодОперации = "23" Тогда
		Операция = КОП.РеализацияТовараКомитента;
	ИначеЕсли КодОперации = "24" Тогда
		Операция = КОП.ПередачаСведенийОРеализацииКомитенту;
	ИначеЕсли КодОперации = "25" Тогда
		Операция = КОП.ПолучениеКомитентомСведенийОРеализацииТовараКомиссионером;
	ИначеЕсли КодОперации = "26" Тогда
		Операция = КОП.ПриобретениеТовараДляКомитента;
	ИначеЕсли КодОперации = "27" Тогда
		Операция = КОП.ПередачаСведенийОЗакупкеКомитенту;
	ИначеЕсли КодОперации = "28" Тогда
		Операция = КОП.ПолучениеКомитентомСведенийОПриобретенииТовараКомиссионером;
	ИначеЕсли КодОперации = "29" Тогда
		Операция = КОП.СоставлениеКомиссионеромКорректировкиНаУменьшение;
	ИначеЕсли КодОперации = "30" Тогда
		Операция = КОП.ПередачаКомиссионеромКомитентуСведенийОВозвратеТовара;
	ИначеЕсли КодОперации = "31" Тогда
		Операция = КОП.ПолучениеКомитентомСведенийОВозвратеТовараКомиссионеру;
	ИначеЕсли КодОперации = "32" Тогда
		Операция = КОП.ПолучениеКомитентомКорректировкиНаУменьшение;
	ИначеЕсли КодОперации = "33" Тогда
		Операция = КОП.ОтражениеКомиссионеромПоЗакупкеВозвратаКомитентомТоваров;
	ИначеЕсли КодОперации = "34" Тогда
		Операция = КОП.ПолучениеКомиссионеромКорректировкиВСторонуУменьшения;
	ИначеЕсли КодОперации = "35" Тогда
		Операция = КОП.ОтражениеКомитентомВозвратаТовараПриобретенногоКомиссионером;
	ИначеЕсли КодОперации = "36" Тогда
		Операция = КОП.ПередачаСведенийОРозничнойРеализацииКомитенту;
	ИначеЕсли КодОперации = "37" Тогда
		Операция = КОП.ПолучениеКомитентомСведенийОРозничнойРеализацииТовараКомиссионером;
	ИначеЕсли КодОперации = "38" Тогда
		Операция = КОП.ПередачаКомиссионеромКомитентуСведенийОРозничномВозвратеТовара;
	ИначеЕсли КодОперации = "39" Тогда
		Операция = КОП.ПолучениеКомитентомСведенийОРозничномВозвратеТовараКомиссионеру;
	Иначе
		Операция = КОП.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Операция;
	
КонецФункции

// Применяется освобождение от уплаты НДС.
// 
// Параметры:
//  Организация - СправочникСсылка.Организации
//  Дата - Дата
// 
// Возвращаемое значение:
//  Булево - Применяется освобождение от уплаты НДС
Функция ПрименяетсяОсвобождениеОтУплатыНДС(Организация, Дата)  Экспорт         

	НастройкиУчетаНДС = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
	"НастройкиУчетаНДС", Организация, Дата);
	
	Если НЕ НастройкиУчетаНДС = Неопределено И ТипЗнч(НастройкиУчетаНДС) = Тип("Структура") Тогда
		ПрименяетсяОсвобождениеОтУплатыНДС = НастройкиУчетаНДС.Свойство("ПрименяетсяОсвобождениеОтУплатыНДС") И НастройкиУчетаНДС.ПрименяетсяОсвобождениеОтУплатыНДС;
	Иначе
		ПрименяетсяОсвобождениеОтУплатыНДС = Ложь;
	КонецЕсли;
		
	Возврат ПрименяетсяОсвобождениеОтУплатыНДС;
		
КонецФункции

// Метод подписки на событие, отслеживающий изменение регистров товары организаций и товары переданных на комиссию.
// 
// Параметры:
//  Источник - РегистрНакопленияНаборЗаписей.ТоварыОрганизаций, РегистрНакопленияНаборЗаписей.ТоварыПереданныеНаКомиссию - набор записей регистра накоплений
//  Отказ - Булево - Отказ
//  Замещение - Булево - Замещение
//
Процедура ОтразитьОперацииСПрослеживаемымиТоварами(Источник, Отказ, Замещение) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("НеОтражатьОперацииСПрослеживаемымиТоварами") И 
			Источник.ДополнительныеСвойства.НеОтражатьОперацииСПрослеживаемымиТоварами Тогда
			Возврат;
	КонецЕсли;
	
	Регистратор = Источник.Отбор.Регистратор.Значение;
	Если Не ДокументТребуетсяОтразитьВЖурнале(Регистратор) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоПроведениеДокумента =
		Источник.ДополнительныеСвойства.Свойство("СвойстваДокумента")
		И Источник.ДополнительныеСвойства.СвойстваДокумента.Свойство("РежимЗаписи")
		И Источник.ДополнительныеСвойства.СвойстваДокумента.РежимЗаписи = РежимЗаписиДокумента.Проведение;
	ЭтоОтменаРучногоРедактирования =
		Источник.ДополнительныеСвойства.Свойство("ОтменаРучногоРедактирования")
			И Источник.ДополнительныеСвойства.ОтменаРучногоРедактирования;
	
	Если ЭтоПроведениеДокумента ИЛИ ЭтоОтменаРучногоРедактирования Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Регистратор", Регистратор);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Операции.Период КАК Период,
		|	Операции.Организация КАК Организация,
		|	Операции.ТипЗапасов КАК ТипЗапасов,
		|	Операции.КодОперации КАК КодОперации,
		|	Операции.Контрагент КАК Контрагент,
		|	Операции.ТипДокументаВПрослеживаемости КАК ТипДокументаВПрослеживаемости,
		|	Операции.ОтражениеВОтчетности КАК ОтражениеВОтчетности
		|ИЗ
		|	РегистрСведений.ОперацииСПрослеживаемымиТоварами КАК Операции
		|ГДЕ
		|	Операции.Регистратор = &Регистратор
		|	И Операции.РучноеРедактирование";
		
		Блокировка = Новый БлокировкаДанных;

		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ОперацииСПрослеживаемымиТоварами.НаборЗаписей");
		ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
		Блокировка.Заблокировать();
		
		ТаблицаОпераций = Запрос.Выполнить().Выгрузить();
		Если ЭтоОтменаРучногоРедактирования Тогда
			ТаблицаОпераций.Очистить();
		ИначеЕсли ЗначениеЗаполнено(ТаблицаОпераций) Тогда
			// Если таблица операций не пустая, значит есть ручные корректировки
			// в этом случае операцию отражать не нужно
			Возврат;
		КонецЕсли;
		
		ПрослеживаемыеТоварыВСоставеОС = ТипЗнч(Источник) = Тип("РегистрНакопленияНаборЗаписей.ПрослеживаемыеТоварыВСоставеОС");
		ОперацииПрослеживаемости = ОперацииПрослеживаемости(Регистратор, Источник.Выгрузить(), ПрослеживаемыеТоварыВСоставеОС);
		
		Для Каждого СвойстваОперации Из ОперацииПрослеживаемости Цикл
			
			НоваяОперация = ТаблицаОпераций.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяОперация, СвойстваОперации, "Организация, ТипЗапасов, Контрагент");
			
			НоваяОперация.КодОперации = КодПрослеживаемойОперации(СвойстваОперации);
			НоваяОперация.ОтражениеВОтчетности = ОтчетПрослеживаемойОперации(СвойстваОперации);
			НоваяОперация.ТипДокументаВПрослеживаемости = ТипДокументаПрослеживаемойОперации(СвойстваОперации);
			
		КонецЦикла;
		
		ТаблицаОпераций.Свернуть(
			"Период, Организация, ТипЗапасов, Контрагент,
			|КодОперации, ТипДокументаВПрослеживаемости, ОтражениеВОтчетности");
		ТаблицаОпераций.ЗаполнитьЗначения(Регистратор.Дата, "Период");
		
	Иначе
		
		ТаблицаОпераций = Новый ТаблицаЗначений;
		
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ОперацииСПрослеживаемымиТоварами.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
	НаборЗаписей.Загрузить(ТаблицаОпераций);
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Выполняет отмену ручных корректировок в регистре операций с прослеживаемыми товарами.
// 
// Параметры:
//  СписокДокументов - Массив - Список документов
//
Процедура ОтменитьРучныеКорректировкиОпераций(СписокДокументов) Экспорт
	
	НачатьТранзакцию();
	
	Попытка
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Регистраторы", СписокДокументов);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Операции.Регистратор КАК Документ,
		|	""ТоварыОрганизаций"" КАК ИмяРегистра
		|ИЗ
		|	РегистрСведений.ОперацииСПрослеживаемымиТоварами КАК Операции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
		|		ПО Операции.Регистратор = ТоварыОрганизаций.Регистратор
		|ГДЕ
		|	Операции.Регистратор В (&Регистраторы)
		|	И Операции.РучноеРедактирование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Операции.Регистратор КАК Документ,
		|	""ТоварыПереданныеНаКомиссию"" КАК ИмяРегистра
		|ИЗ
		|	РегистрСведений.ОперацииСПрослеживаемымиТоварами КАК Операции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ТоварыПереданныеНаКомиссию
		|		ПО Операции.Регистратор = ТоварыПереданныеНаКомиссию.Регистратор
		|ГДЕ
		|	Операции.Регистратор В (&Регистраторы)
		|	И Операции.РучноеРедактирование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Операции.Регистратор КАК Документ,
		|	""ОперацииСПрослеживаемымиТоварамиРасширенный"" КАК ИмяРегистра
		|ИЗ
		|	РегистрСведений.ОперацииСПрослеживаемымиТоварамиРасширенный КАК Операции
		|ГДЕ
		|	Операции.Регистратор В (&Регистраторы)
		|	И Операции.РучноеРедактирование";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
						
			ИмяРегистра = Выборка.ИмяРегистра;
			 
			ИмяРасширенногоРегистра = Метаданные.РегистрыСведений.ОперацииСПрослеживаемымиТоварамиРасширенный.Имя;
			
			Если ИмяРегистра = ИмяРасширенногоРегистра Тогда
			
				ОтменитьРучныеКорректировкиОперацийРасширенногоРегистра(Выборка.Документ);
							
			Иначе	
			
				НаборЗаписей = РегистрыНакопления[Выборка.ИмяРегистра].СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Документ);
				НаборЗаписей.Прочитать();
				
				НаборЗаписей.ДополнительныеСвойства.Вставить("ОтменаРучногоРедактирования", Истина);
				
				ОтразитьОперацииСПрослеживаемымиТоварами(НаборЗаписей, Ложь, Истина);

			КонецЕсли;
						
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

// Проверяет, есть ли необходимость в расширенных движениях прослеживаемых товаров. Записываем в расширенный регистр данные,
// если есть строки с различным отражением в отчетности, или если заполнены идентификаторы строк - в этом случае пишем все данные в расширенный регистр
// 
// Параметры:
//  ТаблицаДвижений - ТаблицаЗначений - Движения в Регистр Накопления Операции с ПТ расширенный
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//
// Возвращаемое значение:
//  Булево
//
Функция ПроверитьНеобходимостьРасширенныхДвиженийПрослеживаемыхТоваров(ТаблицаДвижений, Движения) Экспорт
	
	Если ТаблицаДвижений.Количество() = 0 Тогда
		Возврат Ложь;
	ИначеЕсли ЕстьСвойствоЗаписыватьРасширенныеДвижения(Движения) Тогда
		Возврат ЗаписыватьРасширенныеДвижения(Движения);
	ИначеЕсли ТаблицаДвижений[0].ИдентификаторСтроки <> "" Тогда
		Возврат Истина;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ВЫРАЗИТЬ(ТаблицаДвижений.ВидЗапасов КАК Справочник.ВидыЗапасов) КАК ВидЗапасов,
	|	ТаблицаДвижений.КодОперации КАК КодОперации,
	|	ТаблицаДвижений.ОтражениеВОтчетности КАК ОтражениеВОтчетности
	|ПОМЕСТИТЬ ВтПроверочнаяТаблица
	|ИЗ
	|	&ТаблицаДвижений КАК ТаблицаДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтПроверочнаяТаблица.Организация КАК Организация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтПроверочнаяТаблица.ОтражениеВОтчетности) КАК ОтражениеВОтчетности,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|		КОГДА
	|			ВтПроверочнаяТаблица.ОтражениеВОтчетности = ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
	|			ТОГДА ВтПроверочнаяТаблица.КодОперации
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
	|	КОНЕЦ) КАК КодОперации,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов
	|ИЗ
	|	ВтПроверочнаяТаблица КАК ВтПроверочнаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ВтПроверочнаяТаблица.ВидЗапасов = ВидыЗапасов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтПроверочнаяТаблица.Организация,
	|	ВидыЗапасов.ТипЗапасов";
	Запрос.УстановитьПараметр("ТаблицаДвижений", ТаблицаДвижений);
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ОтражениеВОтчетности > 1 
			ИЛИ Выборка.КодОперации > 1 Тогда
			Возврат Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции // ПроверитьНеобходимостьРасширенныхДвиженийПрослеживаемыхТоваров()

// Возвращает имя свойства записи расширенных движений прослеживаемых товаров
// 
// Возвращаемое значение:
//  Строка
//
Функция СвойствоЗаписыватьВРасширенныйРегистр() Экспорт
	
	Возврат "ЗаписыватьВРасширенныйРегистрПрослеживаемости";
	
КонецФункции

// Добавляет свойство записи расширенных движений прослеживаемых товаров
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - Записываемый документ
//  ЗначениеСвойства - Булево - Признак необходимости записи движений в расширенный регистр
//
Процедура ДобавитьСвойствоЗаписыватьВРасширенныйРегистр(ДокументОбъект, Знач ЗначениеСвойства = Истина) Экспорт

	Свойство = СвойствоЗаписыватьВРасширенныйРегистр();
	
	ДокументОбъект.Движения.ОперацииСПрослеживаемымиТоварамиРасширенный.ДополнительныеСвойства.Вставить(Свойство, ЗначениеСвойства);	
	
КонецПроцедуры

// Выполняет подготовку и заполнение данных для регламентированного отчета.
// 
// Параметры:
//  ПараметрыОтчета - Структура - Параметры отчета
//  Контейнер - Структура - Контейнер
//
Процедура ЗаполнитьОтчетОбОперацияхФормаОтчета2021Кв3(ПараметрыОтчета, Контейнер) Экспорт
	
	ПараметрыОтчета.Вставить("ПравилаЗаполнения", "2021Кв3");
	ЗаполнитьОтчетОбОперациях(ПараметрыОтчета, Контейнер);
	
КонецПроцедуры

// Выполняет подготовку и заполнение данных для регламентированного отчета.
// 
// Параметры:
//  ПараметрыОтчета - Структура - Параметры отчета
//  Контейнер - Структура - Контейнер
//
Процедура ЗаполнитьОтчетОбОперацияхФормаОтчета2023Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	ПараметрыОтчета.Вставить("ПравилаЗаполнения", "2023Кв4");
	ЗаполнитьОтчетОбОперациях(ПараметрыОтчета, Контейнер);
	
КонецПроцедуры

// Выполняет сбор данные по РНПТ.
// 
// Параметры:
//  СтруктураПараметров - Структура
//
Процедура ПолучитьДанныеРНПТ(СтруктураПараметров) Экспорт

	ЗаполнитьДополнительныеПараметрыЗапросаРНПТ(СтруктураПараметров);
		
	ПолучитьОсновныеДанныеРНПТ(СтруктураПараметров);
	
	ПолучитьДанныеРНПТКорректировкиПриобретения(СтруктураПараметров);
	
	ПолучитьДанныеРНПТКорректировкиРеализации(СтруктураПараметров);
	
	ПолучитьДанныеРНПТвОС(СтруктураПараметров);
	
	ПолучитьДанныеРНПТТМЦВЭксплуатации(СтруктураПараметров);
	
	ПолучитьДанныеРНПТЗаписиКнигиПродаж(СтруктураПараметров); 
	
	ПолучитьДанныеРНПТОтчетаКомитентуОПродажах(СтруктураПараметров);
	
	ПолучитьИтоговыеДанныеРНПТ(СтруктураПараметров);
	
	УдалитьВременныеТаблицы(СтруктураПараметров);

КонецПроцедуры // ()

// Выполняет установку параметра ТипыСобственныхТоваров
// 
// Параметры:
//  Запрос - Запрос
//
Процедура УстановитьПараметрыЗапросаТипыСобственныхТоваров(Запрос) Экспорт
	
	Если Запрос.Параметры.Свойство("ТипыСобственныхТоваров") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТипыСобственныхТоваров", ТипыСобственныхТоваров());

КонецПроцедуры

//-- НЕ УТ

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Заполняет реквизиты объекта значениями, полученными в структуре ДанныхЗаполнения.
//	Заполнение возможно только в случае, когда в качестве ДанныхЗаполнения получена структура.
//	Заполнены будут только те реквизиты, для которых в метаданных установлен флаг "ЗаполнятьИзДанныхЗаполнения".
//
//
// Параметры:
//  <Объект>  - <СправочникОбъект>, <ДокументОбъект> и т.д. - Заполняемый объект.
//  <ДанныеЗаполнения>  - <произвольный тип> - параметр, полученный в ОбработкеЗаполнения объекта.
//  <МетаданныеОбъекта>  - <Метаданные>.
//
//
Процедура ЗаполнитьПоСтруктуре(Объект, ДанныеЗаполнения, МетаданныеОбъекта = Неопределено)	Экспорт

	Если Объект = Неопределено
		ИЛИ ТипЗнч(ДанныеЗаполнения) <> Тип("Структура")
		ИЛИ ДанныеЗаполнения.Количество() = 0 Тогда

		Возврат;

	КонецЕсли;

	Если МетаданныеОбъекта = Неопределено Тогда
		МетаданныеОбъекта = Объект.Метаданные();
	КонецЕсли;
	Если  Метаданные.Справочники.Содержит(МетаданныеОбъекта)
		ИЛИ Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеОбъекта) Тогда
		РазличатьГруппыИЭлементы = МетаданныеОбъекта.Иерархический;
	Иначе
		РазличатьГруппыИЭлементы = Ложь;
	КонецЕсли;

	СтруктураЗаполнения = Новый Структура;
	Для Каждого Реквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		Если Реквизит.ЗаполнятьИзДанныхЗаполнения
			И ДанныеЗаполнения.Свойство(Реквизит.Имя) Тогда
			СтруктураЗаполнения.Вставить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		Если Реквизит.ЗаполнятьИзДанныхЗаполнения
			И ДанныеЗаполнения.Свойство(Реквизит.Имя) Тогда
			Если РазличатьГруппыИЭлементы Тогда
				Если (Объект.ЭтоГруппа И Реквизит.Использование <> Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента)
					ИЛИ (НЕ Объект.ЭтоГруппа И Реквизит.Использование <> Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы) Тогда
					СтруктураЗаполнения.Вставить(Реквизит.Имя);
				КонецЕсли;
			Иначе
				СтруктураЗаполнения.Вставить(Реквизит.Имя);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ЗаполняемыйЭлемент Из СтруктураЗаполнения Цикл
		ЗначениеЗаполнения = ДанныеЗаполнения[ЗаполняемыйЭлемент.Ключ];
		Если ТипЗнч(ЗначениеЗаполнения) = Тип("Массив")
			ИЛИ ТипЗнч(ЗначениеЗаполнения) = Тип("ФиксированныйМассив") Тогда
			СтруктураЗаполнения[ЗаполняемыйЭлемент.Ключ] = ЗначениеЗаполнения[0];
		Иначе
			СтруктураЗаполнения[ЗаполняемыйЭлемент.Ключ] = ЗначениеЗаполнения;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(Объект, СтруктураЗаполнения);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ НЕ УТ


// Выполняет подготовку и заполнение данных для регламентированного отчета.
// 
// Параметры:
//  ПараметрыОтчета - Структура - Параметры отчета
//  Контейнер - Структура - Контейнер
//
Процедура ЗаполнитьОтчетОбОперациях(ПараметрыОтчета, Контейнер) 
	
	Если ПараметрыОтчета.Свойство("ДатаНачалаРасширенногоПериодаОтчета") Тогда
		НачалоПериодаОтчета = ПараметрыОтчета.ДатаНачалаРасширенногоПериодаОтчета;
	Иначе
		НачалоПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	МассивОрганизаций = Новый ФиксированныйМассив(БухгалтерскийУчетПереопределяемый.ВсяОрганизация(ПараметрыОтчета.Организация));
	Запрос.УстановитьПараметр("Организация", МассивОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоКвартала(НачалоПериодаОтчета));
	Запрос.УстановитьПараметр("КонецПериода", КонецКвартала(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаПодписи", КонецДня(Макс(ПараметрыОтчета.ДатаПодписи, ПараметрыОтчета.мДатаКонцаПериодаОтчета)));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Операции.Период КАК ДатаОперации,
	|	Операции.Организация КАК Организация,
	|	Операции.Регистратор КАК ДокументОперации,
	|	Операции.ТипЗапасов КАК ТипЗапасов,
	|	Операции.КодОперации КАК КодОперации,
	|	Операции.Контрагент КАК Контрагент,
	|	Операции.ТипДокументаВПрослеживаемости КАК ТипДокумента
	|ПОМЕСТИТЬ ПрослеживаемыеОперации
	|ИЗ
	|	РегистрСведений.ОперацииСПрослеживаемымиТоварами КАК Операции
	|ГДЕ
	|	Операции.ОтражениеВОтчетности = ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
	|	И Операции.Период >= &НачалоПериода
	|	И Операции.Период <= &КонецПериода
	|	И Операции.Организация В(&Организация)
	|	И Операции.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операции.Период,
	|	Операции.Организация,
	|	Операции.Регистратор,
	|	Операции.ВидЗапасов.ТипЗапасов,
	|	Операции.КодОперации,
	|	Операции.Контрагент,
	|	Операции.ТипДокументаВПрослеживаемости
	|ИЗ
	|	РегистрСведений.ОперацииСПрослеживаемымиТоварамиРасширенный КАК Операции
	|ГДЕ
	|	Операции.ОтражениеВОтчетности = ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
	|	И Операции.Период >= &НачалоПериода
	|	И Операции.Период <= &КонецПериода
	|	И Операции.Организация В(&Организация)
	|	И Операции.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсправлениеДокументов.ИсправляемыйДокумент КАК ИсправляемыйДокумент,
	|	ИсправлениеДокументов.СторнированИсправляемыйДокумент КАК СторнированДокумент,
	|	ИсправлениеДокументов.ПоследнийДокументЦепочки КАК АктуальныйДокумент
	|ПОМЕСТИТЬ АктуальныеДокументы
	|ИЗ
	|	РегистрСведений.ИсправленияДокументов.СрезПоследних(
	|			&ДатаПодписи,
	|			ИсправляемыйДокумент В
	|				(ВЫБРАТЬ
	|					Т.ДокументОперации
	|				ИЗ
	|					ПрослеживаемыеОперации КАК Т)) КАК ИсправлениеДокументов
	|ГДЕ
	|	НЕ(ИсправлениеДокументов.ПоследнийДокументЦепочки = НЕОПРЕДЕЛЕНО
	|				И ИсправлениеДокументов.СторнированИсправляемыйДокумент = ЛОЖЬ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИсправляемыйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеОперации.ДокументОперации КАК ДокументОперации
	|ПОМЕСТИТЬ ПрослеживаемыеОперацииБезИсправлений
	|ИЗ
	|	ПрослеживаемыеОперации КАК ПрослеживаемыеОперации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсправленияДокументов КАК ИсправлениеДокументов
	|		ПО ПрослеживаемыеОперации.ДокументОперации = ИсправлениеДокументов.Регистратор
	|			И (ИсправлениеДокументов.Период <= &ДатаПодписи)
	|			И (ИсправлениеДокументов.Активность)
	|ГДЕ
	|	ИсправлениеДокументов.Регистратор ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА НЕ АктуальныеДокументы.ИсправляемыйДокумент ЕСТЬ NULL
	|			ТОГДА АктуальныеДокументы.АктуальныйДокумент
	|		ИНАЧЕ ПрослеживаемыеОперацииБезИсправлений.ДокументОперации
	|	КОНЕЦ КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ АктуальныеДокументы.ИсправляемыйДокумент ЕСТЬ NULL
	|			ТОГДА АктуальныеДокументы.ИсправляемыйДокумент
	|		ИНАЧЕ ПрослеживаемыеОперацииБезИсправлений.ДокументОперации
	|	КОНЕЦ КАК ИсправляемыйДокумент
	|ПОМЕСТИТЬ ВТ_СписокДокументов
	|ИЗ
	|	ПрослеживаемыеОперацииБезИсправлений КАК ПрослеживаемыеОперацииБезИсправлений
	|		ЛЕВОЕ СОЕДИНЕНИЕ АктуальныеДокументы КАК АктуальныеДокументы
	|		ПО ПрослеживаемыеОперацииБезИсправлений.ДокументОперации = АктуальныеДокументы.ИсправляемыйДокумент
	|ГДЕ
	|	ЕСТЬNULL(АктуальныеДокументы.СторнированДокумент, ЛОЖЬ) = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	АктуальныеДокументы.АктуальныйДокумент,
	|   АктуальныеДокументы.ИсправляемыйДокумент
	|ИЗ
	|	АктуальныеДокументы КАК АктуальныеДокументы
	|ГДЕ
	|	НЕ АктуальныеДокументы.СторнированДокумент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|   ИсправляемыйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПрослеживаемыеОперацииБезИсправлений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПрослеживаемыеОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ АктуальныеДокументы";
	
	УстановитьПривилегированныйРежим(Истина);	
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	СтруктураПараметров.Вставить("СписокОрганизаций", МассивОрганизаций);
	СтруктураПараметров.Вставить("ПорядокОтраженияВОтчетностиПоПрослеживаемости", Перечисления.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях);
	
	ПолучитьДанныеРНПТ(СтруктураПараметров);
	
	ОперацииСНаименованиемТовара = Новый Массив;
	ОперацииСНаименованиемТовара.Добавить(Справочники.КодыОперацийПрослеживаемости.ПередачаВПроизводство);                                // "01"
	ОперацииСНаименованиемТовара.Добавить(Справочники.КодыОперацийПрослеживаемости.ЗахоронениеОбезвреживаниеУтилизацияТовара);            // "02"
	ОперацииСНаименованиемТовара.Добавить(Справочники.КодыОперацийПрослеживаемости.УничтожениеУтратаВследствиеДействияНепреодолимойСилы); // "03"
	ОперацииСНаименованиемТовара.Добавить(Справочники.КодыОперацийПрослеживаемости.КонфискацияГосударством);                              // "07"
	ОперацииСНаименованиемТовара.Добавить(Справочники.КодыОперацийПрослеживаемости.НедостачаВыявленнаяВХодеИнвентаризации);               // "09"
	ОперацииСНаименованиемТовара.Добавить(Справочники.КодыОперацийПрослеживаемости.ВозвратРанееУтраченногоТовара);                        // "10"
	ОперацииСНаименованиемТовара.Добавить(Справочники.КодыОперацийПрослеживаемости.ВозвратИзПроизводства);                                // "12"
	ОперацииСНаименованиемТовара.Добавить(Справочники.КодыОперацийПрослеживаемости.ПередачаНеСвязаннаяСРеализацией);                      // "13"
	ОперацииСНаименованиемТовара.Добавить(Справочники.КодыОперацийПрослеживаемости.ПолучениеНеСвязанноеСРеализацией);                     // "14"
	Запрос.УстановитьПараметр("ОперацииСНаименованиемТовара", ОперацииСНаименованиемТовара);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеРНПТ.Документ КАК ДокументОперации,
	|	СписокДокументов.ИсправляемыйДокумент КАК ИсправляемыйДокумент,
	|	ДанныеРНПТ.Организация КАК Организация,
	|	ДанныеРНПТ.ТипЗапасов КАК ТипЗапасов,
	|	ДанныеРНПТ.КодОперации КАК КодОперации,
	|	ДанныеРНПТ.ДатаОперации КАК ДатаОперации,
	|	ВЫБОР ДанныеРНПТ.ТипДокумента
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.СчетФактура)
	|			ТОГДА 1
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.КорректировочныйСчетФактура)
	|			ТОГДА 2
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.УПД)
	|			ТОГДА 3
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.УКД)
	|			ТОГДА 4
	|		ИНАЧЕ 5
	|	КОНЕЦ КАК КодТипаДокумента,
	|	ДанныеРНПТ.Контрагент КАК Контрагент,
	|	ДанныеРНПТ.Контрагент.ИНН КАК ИНН,
	|	ДанныеРНПТ.Контрагент.КПП КАК КПП,
	|	ДанныеРНПТ.Контрагент.НаименованиеПолное КАК НаименованиеКонтрагента,
	|	ДанныеРНПТ.РНПТ КАК РНПТ,
	|	ДанныеРНПТ.ОКЕИ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДанныеРНПТ.КодОперации В (&ОперацииСНаименованиемТовара)
	|			ТОГДА ДанныеРНПТ.НаименованиеТовара
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НаименованиеТовара,
	|	СУММА(ДанныеРНПТ.КоличествоРНПТ) КАК Количество,
	|	СУММА(ДанныеРНПТ.СуммаБезНДС) КАК СуммаБезНДС
	|ПОМЕСТИТЬ ИтоговыеДанныеРНПТ
	|ИЗ
	|	ДанныеРНПТ КАК ДанныеРНПТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокДокументов КАК СписокДокументов
	|		ПО ДанныеРНПТ.Документ = СписокДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРНПТ.Документ,
	|	ДанныеРНПТ.Организация,
	|	СписокДокументов.ИсправляемыйДокумент,
	|	ДанныеРНПТ.ТипЗапасов,
	|	ДанныеРНПТ.КодОперации,
	|	ДанныеРНПТ.ДатаОперации,
	|	ВЫБОР ДанныеРНПТ.ТипДокумента
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.СчетФактура)
	|			ТОГДА 1
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.КорректировочныйСчетФактура)
	|			ТОГДА 2
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.УПД)
	|			ТОГДА 3
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.УКД)
	|			ТОГДА 4
	|		ИНАЧЕ 5
	|	КОНЕЦ,
	|	ДанныеРНПТ.Контрагент,
	|	ДанныеРНПТ.Контрагент.ИНН,
	|	ДанныеРНПТ.Контрагент.КПП,
	|	ДанныеРНПТ.Контрагент.НаименованиеПолное,
	|	ДанныеРНПТ.РНПТ,
	|	ДанныеРНПТ.ОКЕИ,
	|	ВЫБОР
	|		КОГДА ДанныеРНПТ.КодОперации В (&ОперацииСНаименованиемТовара)
	|			ТОГДА ДанныеРНПТ.НаименованиеТовара
	|		ИНАЧЕ """"
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ИсправляемыйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговыеДанныеРНПТ.ДокументОперации КАК ДокументОперации,
	|	ИтоговыеДанныеРНПТ.ТипЗапасов КАК ТипЗапасов,
	|	ИтоговыеДанныеРНПТ.КодОперации КАК КодОперации,
	|	ДанныеПервичныхДокументов.ДатаРегистратора КАК ДатаОперации,
	|	ИтоговыеДанныеРНПТ.КодТипаДокумента КАК КодТипаДокумента,
	|	ДанныеПервичныхДокументов.Номер КАК НомерДокумента,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаДокумента,
	|	ИтоговыеДанныеРНПТ.Контрагент КАК Контрагент,
	|	ИтоговыеДанныеРНПТ.ИНН КАК ИНН,
	|	ИтоговыеДанныеРНПТ.КПП КАК КПП,
	|	ИтоговыеДанныеРНПТ.НаименованиеКонтрагента КАК НаименованиеКонтрагента,
	|	ИтоговыеДанныеРНПТ.РНПТ КАК РНПТ,
	|	ИтоговыеДанныеРНПТ.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ИтоговыеДанныеРНПТ.НаименованиеТовара КАК НаименованиеТовара,
	|	ИтоговыеДанныеРНПТ.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ИтоговыеДанныеРНПТ.СуммаБезНДС КАК ЧИСЛО(15,0)) КАК СуммаБезНДС
	|ИЗ
	|	ИтоговыеДанныеРНПТ КАК ИтоговыеДанныеРНПТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ИтоговыеДанныеРНПТ.Организация = ДанныеПервичныхДокументов.Организация
	|			И ИтоговыеДанныеРНПТ.ИсправляемыйДокумент = ДанныеПервичныхДокументов.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОперации,
	|	ИтоговыеДанныеРНПТ.ДокументОперации,
	|	КодОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИтоговыеДанныеРНПТ";
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Реестр = Контейнер.Реестр;
		Реестр.Строки.Очистить();
		НоваяСтраница = Реестр.Строки.Добавить();
		
		НоваяСтраница.Данные = Новый Структура("СтоимостьИтого", 0);
		НоваяСтраница.ДанныеМногострочныхЧастей = Новый Структура("П10000", ДеревоЗначенийОтчетОбОперациях());
		Сч = 1;
		
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("ДокументОперации") Цикл
			Пока Выборка.СледующийПоЗначениюПоля("КодОперации") Цикл
				
				Если Сч > ПараметрыОтчета.МаксКолСтрокНаСтранице Тогда
					
					НоваяСтраница = Реестр.Строки.Добавить();
					НоваяСтраница.Данные = Новый Структура("СтоимостьИтого", 0);
					НоваяСтраница.ДанныеМногострочныхЧастей = Новый Структура("П10000", ДеревоЗначенийОтчетОбОперациях());
					
					Сч = 1;
					
				КонецЕсли;
				
				НоваяСтрокаОперации = НоваяСтраница.ДанныеМногострочныхЧастей.П10000.Строки.Добавить();
				СтруктураДанныхОперации = Новый Структура;
				СтруктураДанныхОперации.Вставить("П1000001", 0);
				СтруктураДанныхОперации.Вставить("П1000002", Выборка.ДатаОперации);
				СтруктураДанныхОперации.Вставить("П1000003", Выборка.КодОперации);
				СтруктураДанныхОперации.Вставить("П1000004", Выборка.КодТипаДокумента);
				СтруктураДанныхОперации.Вставить("П1000005", Выборка.НомерДокумента);
				СтруктураДанныхОперации.Вставить("П1000006", Выборка.ДатаДокумента);
				СтруктураДанныхОперации.Вставить("П1000007", Выборка.НаименованиеКонтрагента);
				СтруктураДанныхОперации.Вставить("П1000008", Выборка.ИНН);
				СтруктураДанныхОперации.Вставить("П1000009", Выборка.КПП);
				
				НоваяСтрокаОперации.Данные = СтруктураДанныхОперации;
				НоваяСтрокаОперации.ДанныеМногострочныхЧастей = Новый Структура("П11000", ДеревоЗначенийОтчетОбОперациях());
				
				Пока Выборка.СледующийПоЗначениюПоля("РНПТ") Цикл 
					Пока Выборка.СледующийПоЗначениюПоля("НаименованиеТовара") Цикл	
						НовыйРНПТ = НоваяСтрокаОперации.ДанныеМногострочныхЧастей.П11000.Строки.Добавить();
						Если ПараметрыОтчета.ПравилаЗаполнения = "2021Кв3" Тогда 
							НовыйРНПТ.Данные = Новый Структура;
							НовыйРНПТ.Данные.Вставить("П1100010", Выборка.РНПТ);
							НовыйРНПТ.Данные.Вставить("П1100011", Выборка.ЕдиницаИзмерения);
							НовыйРНПТ.Данные.Вставить("П1100012", Выборка.Количество);
							НовыйРНПТ.Данные.Вставить("П1100013", Выборка.СуммаБезНДС); 
						Иначе
							// C 01.10.2023, начиная с формы "2023Кв4" по строке заполняется наименование товара.
							НовыйРНПТ.Данные = Новый Структура;  
							НовыйРНПТ.Данные.Вставить("П1100010", Выборка.НаименованиеТовара); 
							НовыйРНПТ.Данные.Вставить("П1100011", Выборка.РНПТ);
							НовыйРНПТ.Данные.Вставить("П1100012", Выборка.ЕдиницаИзмерения);
							НовыйРНПТ.Данные.Вставить("П1100013", Выборка.Количество);
							НовыйРНПТ.Данные.Вставить("П1100014", Выборка.СуммаБезНДС);  
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДеревоЗначенийОтчетОбОперациях()
	
	НовоеДеревоЗначений = Новый ДеревоЗначений();
	НовоеДеревоЗначений.Колонки.Добавить("Данные");
	НовоеДеревоЗначений.Колонки.Добавить("ДанныеМногострочныхЧастей");
	НовоеДеревоЗначений.Колонки.Добавить("АдресТабличногоДокумента");
	
	Возврат НовоеДеревоЗначений;
	
КонецФункции

Процедура ОтменитьРучныеКорректировкиОперацийРасширенногоРегистра(Знач Документ)
	
	УстановитьПривилегированныйРежим(Истина);

	ИмяРасширенногоРегистра = Метаданные.РегистрыСведений.ОперацииСПрослеживаемымиТоварамиРасширенный.Имя;

	НаборЗаписей = РегистрыСведений[ИмяРасширенногоРегистра].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Документ);
		
	ТаблицыДляДвижений = ПроведениеДокументов.ДанныеДокументаДляПроведения(
		Документ, ИмяРасширенногоРегистра);
		
	ТаблицаДанных = ТаблицыДляДвижений["Таблица" + ИмяРасширенногоРегистра];
	
	НаборЗаписей.Загрузить(ТаблицаДанных);
	НаборЗаписей.Записать();
	
КонецПроцедуры

Функция ДокументТребуетсяОтразитьВЖурнале(Регистратор)
	
	МетаданныеДокумента = Регистратор.Метаданные();
	
	Если МетаданныеДокумента = Метаданные.Документы.ВводОстатков
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ВводОстатковДенежныхСредств
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ВводОстатковНДСПредъявленного
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ВводОстатковОПродажахЗаПрошлыеПериоды
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ВводОстатковПоФинансовымИнструментам
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ВводОстатковПрочиеРасходы
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ВводОстатковПрочихАктивовПассивов
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ВводОстатковРасходовПриУСН
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ВводОстатковРасчетовПоЭквайрингу
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ВводОстатковСПодотчетниками
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ВводОстатковТМЦВЭксплуатации
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ВводОстатковТоваров
		ИЛИ МетаданныеДокумента = Метаданные.Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров
		ИЛИ МетаданныеДокумента = Метаданные.Документы.УведомлениеОВвозеПрослеживаемыхТоваров
		ИЛИ МетаданныеДокумента = Метаданные.Документы.УведомлениеОПеремещенииПрослеживаемыхТоваров
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ОбъединениеОС
		//++ НЕ УТКА
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ОтчетДавальцуМеждуОрганизациями
		//-- НЕ УТКА
		ИЛИ МетаданныеДокумента = Метаданные.Документы.РазукомплектацияОС
		ИЛИ МетаданныеДокумента = Метаданные.Документы.СборкаТоваров
		ИЛИ МетаданныеДокумента = Метаданные.Документы.КорректировкаРегистров
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ОприходованиеТМЦВЭксплуатации
		ИЛИ МетаданныеДокумента = Метаданные.Документы.ПеремещениеВЭксплуатации Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Если МетаданныеДокумента = Метаданные.Документы.ПрочееОприходованиеТоваров Тогда
		
		ХозОперация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Регистратор, "ХозяйственнаяОперация");
		Если ХозОперация = Перечисления.ХозяйственныеОперации.ВозвратИзЭксплуатации
			ИЛИ ХозОперация = Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы Тогда
		Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ МетаданныеДокумента.Движения.Содержит(
		Метаданные.РегистрыСведений.ОперацииСПрослеживаемымиТоварами) Тогда
		ВызватьИсключение НСтр("ru = 'Документ не является регистратором для регистра сведений ""Операции с прослеживаемыми товарами""';
								|en = 'The document is not a recorder for the ""Operations with traceable goods"" information register'");
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура СформироватьТаблицуКонтрагентовДокумента(МенеджерВременныхТаблиц, Регистратор)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеестрДокументов.Организация КАК Организация,
	|	КлючиРеестра.Ключ КАК Контрагент
	|ПОМЕСТИТЬ КонтрагентыДокумента
	|ИЗ
	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиРеестраДокументов КАК КлючиРеестра
	|	ПО РеестрДокументов.Контрагент = КлючиРеестра.Ссылка
	|		И (КлючиРеестра.Ключ ССЫЛКА Справочник.Контрагенты
	|			ИЛИ КлючиРеестра.Ключ ССЫЛКА Справочник.Организации)
	|
	|ГДЕ
	|	РеестрДокументов.Ссылка = &Регистратор
	|	И НЕ РеестрДокументов.Ссылка ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|	И НЕ РеестрДокументов.Ссылка ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|	И НЕ КлючиРеестра.Ключ В (
	|		ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|	И НЕ(РеестрДокументов.Ссылка ССЫЛКА Документ.РеализацияТоваровУслуг
	|				И ВЫРАЗИТЬ(РеестрДокументов.Ссылка КАК Документ.РеализацияТоваровУслуг).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионера))
	|	И НЕ(РеестрДокументов.Ссылка ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|				И ВЫРАЗИТЬ(РеестрДокументов.Ссылка КАК Документ.ВозвратТоваровОтКлиента).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.КлиентКонтрагент
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Регистратор
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионера)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.КлиентКонтрагент
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Регистратор
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.ОрганизацияПолучатель,
	|	ДанныеДокумента.Организация
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.ОрганизацияПолучатель,
	|	ДанныеДокумента.Организация
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Регистратор";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТекстЗапросаДвиженияПрослеживаемогоТовара(ЕстьКолонкаРНПТ = Ложь)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Движения.ВидДвижения КАК ВидДвижения,
	|	Движения.Организация КАК Организация,
	|	Движения.ВидЗапасов КАК ВидЗапасов,
	|	Движения.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Движения.НомерГТД КАК НомерГТД,
	|	Движения.КоличествоПоРНПТ
	|ПОМЕСТИТЬ ДвиженияДокумента
	|ИЗ
	|	&ТаблицаДвижений КАК Движения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Движения.Организация,
	|	ЕСТЬNULL(Контрагенты.Контрагент, НЕОПРЕДЕЛЕНО) КАК Контрагент,
	|	ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК ТипЗапасов,
	|	Движения.ХозяйственнаяОперация,
	|	Движения.НомерГТД КАК РНПТ,
	|	ВЫБОР Движения.ВидДвижения
	|		КОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА Движения.КоличествоПоРНПТ
	|		ИНАЧЕ -Движения.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	Движения.КоличествоПоРНПТ < 0  КАК СторноКоличества
	|ПОМЕСТИТЬ ДвижениеПрослеживаемыхТоваров
	|ИЗ
	|	ДвиженияДокумента КАК Движения
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
	|		ПО Движения.НомерГТД = НомераГТД.Ссылка
	|			И НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО Движения.ВидЗапасов = ВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ КонтрагентыДокумента КАК Контрагенты
	|		ПО Движения.Организация = Контрагенты.Организация
	|;
	|
	|ВЫБРАТЬ
	|	ДвижениеТоваров.Организация КАК Организация,
	|	ДвижениеТоваров.Контрагент КАК Контрагент,
	|	ДвижениеТоваров.ТипЗапасов КАК ТипЗапасов,
	|	ДвижениеТоваров.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА СУММА(ДвижениеТоваров.КоличествоПоРНПТ) >= 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Поступление,
	|	ВЫБОР
	|		КОГДА СУММА(ДвижениеТоваров.КоличествоПоРНПТ) < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Выбытие,
	|	МАКСИМУМ(ДвижениеТоваров.СторноКоличества) КАК Сторно
	|ИЗ
	|	ДвижениеПрослеживаемыхТоваров КАК ДвижениеТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвижениеТоваров.Организация,
	|	ДвижениеТоваров.Контрагент,
	|	ДвижениеТоваров.ТипЗапасов,
	|	ДвижениеТоваров.ХозяйственнаяОперация
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДвижениеТоваров.КоличествоПоРНПТ) <> 0 ИЛИ &ПрослеживаемыеТоварыВСоставеОС";
	
	Если ЕстьКолонкаРНПТ Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Движения.НомерГТД КАК НомерГТД", "Движения.РНПТ КАК НомерГТД");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТипыСобственныхТоваров()
	
	ТипыСобственногоТовара = Новый Массив;
	ТипыСобственногоТовара.Добавить(Перечисления.ТипыЗапасов.Товар);
	ТипыСобственногоТовара.Добавить(Перечисления.ТипыЗапасов.УдалитьТоварПереданный);
	ТипыСобственногоТовара.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварВПути);
	ТипыСобственногоТовара.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке);
		
	Возврат ТипыСобственногоТовара;
	
КонецФункции

Функция СобственныйТовар(ТипЗапасов) 
	
	ТипыСобственногоТовара = ТипыСобственныхТоваров();
	
	Возврат ТипыСобственногоТовара.Найти(ТипЗапасов) <> Неопределено; 

КонецФункции

Функция ЕстьСвойствоЗаписыватьРасширенныеДвижения(Движения)
	
	ЕстьСвойство = Ложь;
	
	Свойство = СвойствоЗаписыватьВРасширенныйРегистр();
	
	Если Движения.Найти("ОперацииСПрослеживаемымиТоварамиРасширенный") = Неопределено Тогда
		Возврат ЕстьСвойство;
	ИначеЕсли НЕ Движения.ОперацииСПрослеживаемымиТоварамиРасширенный.ДополнительныеСвойства.Свойство(Свойство) Тогда
		Возврат ЕстьСвойство;
	КонецЕсли;
	
	ЕстьСвойство = Истина;

	Возврат ЕстьСвойство;	
	
КонецФункции

Функция ЗаписыватьРасширенныеДвижения(Движения)
	
	Свойство = СвойствоЗаписыватьВРасширенныйРегистр();
		
	Возврат Движения.ОперацииСПрослеживаемымиТоварамиРасширенный.ДополнительныеСвойства[Свойство];
	
КонецФункции

Функция ОперацииПрослеживаемости(Регистратор, ТаблицаДвижений, ПрослеживаемыеТоварыВСоставеОС)
	
	Операции = Новый Массив;
	
	СвойстваРегистратора = ПолучитьСвойстваРегистратора(Регистратор, ТаблицаДвижений);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СформироватьТаблицуКонтрагентовДокумента(МенеджерВременныхТаблиц, Регистратор);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДвижений", ТаблицаДвижений);
	Запрос.УстановитьПараметр("ПрослеживаемыеТоварыВСоставеОС", ПрослеживаемыеТоварыВСоставеОС);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ТаблицаДвижений.Колонки.Найти("ВидЗапасов") = Неопределено Тогда
		ТаблицаДвижений.Колонки.Добавить("ВидЗапасов", Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	КонецЕсли;
	Если ТаблицаДвижений.Колонки.Найти("ХозяйственнаяОперация") = Неопределено Тогда
		ТаблицаДвижений.Колонки.Добавить("ХозяйственнаяОперация", Новый ОписаниеТипов("ПеречислениеСсылка.ХозяйственныеОперации"));
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапросаДвиженияПрослеживаемогоТовара(ТаблицаДвижений.Колонки.Найти("РНПТ") <> Неопределено);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
		
		СвойстваОрганизации = ПолучитьСвойстваОрганизации(Выборка.Организация, Регистратор.Дата);
		
		Пока Выборка.Следующий() Цикл
			
			СвойстваОперации = НоваяСтруктураСвойствОперации();
			ЗаполнитьЗначенияСвойств(СвойстваОперации, Выборка);
			ЗаполнитьЗначенияСвойств(СвойстваОперации, СвойстваОрганизации);
			ЗаполнитьЗначенияСвойств(СвойстваОперации, СвойстваРегистратора);
			
			Если СвойстваОрганизации.ПлательщикНДС Тогда
				СвойстваОперации.ОблагаетсяНДС = НЕ СвойстваРегистратора.Свойство("НалогообложениеНДС")
					ИЛИ СвойстваРегистратора.НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
			КонецЕсли;
			
			Если ОперациюТребуетсяОтразитьВЖурнале(СвойстваОперации) Тогда
				Операции.Добавить(СвойстваОперации);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Операции;
	
КонецФункции

Функция НоваяСтруктураСвойствОперации()
	
	Свойства = Новый Структура;
	
	Свойства.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Свойства.Вставить("Контрагент", Неопределено);
	
	Свойства.Вставить("ТипРегистратора", Неопределено);
	Свойства.Вставить("ТипЗапасов", Перечисления.ТипыЗапасов.ПустаяСсылка());
	Свойства.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПустаяСсылка());
	Свойства.Вставить("ХозОперацияВнутреннееПотребление", Перечисления.ХозяйственныеОперации.ПустаяСсылка());
	Свойства.Вставить("ВнутреннееПотреблениеТипРасходовВНА", Ложь);
	Свойства.Вставить("КодОперацииВыбытия", Справочники.КодыОперацийПрослеживаемости.ПустаяСсылка());
	Свойства.Вставить("ОтражатьВОтчетеОбОперациях", Ложь);
	Свойства.Вставить("ОблагаетсяНДС", Ложь);
	Свойства.Вставить("Поступление", Ложь);
	Свойства.Вставить("Исправление", Ложь);
	Свойства.Вставить("Выбытие", Ложь);
	Свойства.Вставить("Сторно", Ложь);
	
	Возврат Свойства;
	
КонецФункции

Функция ПолучитьСвойстваРегистратора(Регистратор, ТаблицаДвижений)
	
	Свойства = Новый Структура;
	Свойства.Вставить("ТипРегистратора", ТипЗнч(Регистратор));
	
	Если Свойства.ТипРегистратора = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") 
		ИЛИ Свойства.ТипРегистратора = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") 
		ИЛИ Свойства.ТипРегистратора = Тип("ДокументСсылка.ВозвратТоваровПоставщику")  Тогда
		
		Свойства.Вставить("НалогообложениеНДС", Регистратор.НалогообложениеНДС);
		
	ИначеЕсли Свойства.ТипРегистратора = Тип("ДокументСсылка.ВнутреннееПотребление") Тогда
		
		Свойства.Вставить("ХозОперацияВнутреннееПотребление", Регистратор.ХозяйственнаяОперация);
		Свойства.Вставить("ВнутреннееПотреблениеТипРасходовВНА", ПолучитьТипРасходовВНА(ТаблицаДвижений));
		
	ИначеЕсли Свойства.ТипРегистратора = Тип("ДокументСсылка.СписаниеОС2_4") И Регистратор.ПрослеживаемыеТовары.Количество() > 0 Тогда
		
		 Свойства.Вставить("КодОперацииВыбытия", Регистратор.ПрослеживаемыеТовары[0].КодОперацииВыбытия);
		
	//Если исправительная корректировка реализации, то отражаем в книге продаж
	//Если исправительная корректировка приобретения - в книге покупок. Не смотрим на
	//поступление-выбытие товаров
	ИначеЕсли Свойства.ТипРегистратора = Тип("ДокументСсылка.КорректировкаРеализации") 
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Регистратор, "ВидКорректировки") = Перечисления.ХозяйственныеОперации.ИсправлениеОшибок Тогда
		
		Свойства.Вставить("Выбытие", Истина);
		Свойства.Вставить("Поступление", Ложь);
		
	ИначеЕсли Свойства.ТипРегистратора = Тип("ДокументСсылка.КорректировкаПриобретения") Тогда    

		Если  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Регистратор, "ВидКорректировки") = Перечисления.ХозяйственныеОперации.ИсправлениеОшибок Тогда
			Свойства.Вставить("Выбытие", Ложь);
			Свойства.Вставить("Поступление", Истина);
			Свойства.Вставить("Исправление", Истина);  
		Иначе
			Свойства.Вставить("Исправление", Ложь); 
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат Свойства;
	
КонецФункции

Функция ПолучитьТипРасходовВНА(ТаблицаДвижений)
	
	Если ТаблицаДвижений.Колонки.Найти("СтатьяРасходов") = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДвижений.НомерГТД КАК НомерГТД,
	|	ТаблицаДвижений.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаДвижений.АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ ВТ_ТаблицаДвижений
	|ИЗ
	|	&ТаблицаДвижений КАК ТаблицаДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДвижений.СтатьяРасходов КАК СтатьяРасходов
	|ИЗ
	|	ВТ_ТаблицаДвижений КАК ВТ_ТаблицаДвижений
	|ГДЕ
	|	(ВТ_ТаблицаДвижений.НомерГТД.ТипНомераГТД = ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ)
	|				ИЛИ ВТ_ТаблицаДвижений.НомерГТД.ТипНомераГТД = ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|	И ВТ_ТаблицаДвижений.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|	И ТИПЗНАЧЕНИЯ(ВТ_ТаблицаДвижений.АналитикаРасходов) = ТИП(Справочник.ОбъектыЭксплуатации)";
	Запрос.УстановитьПараметр("ТаблицаДвижений", ТаблицаДвижений);
	
	Возврат НЕ Запрос.Выполнить().Пустой();

КонецФункции

Функция ПолучитьСвойстваОрганизации(Организация, Дата)
	
	Свойства = Новый Структура;
	Свойства.Вставить("Организация", Организация);
	Свойства.Вставить("ПлательщикНДС", Ложь);
	Свойства.Вставить("ОтражатьВОтчетеОбОперациях", УчетНДСЛокализация.ПрименяетсяЛьготноеНалогообложениеНДС(Организация,Дата));
	
	НастройкиУчетаНДС = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
		"НастройкиУчетаНДС", Организация, Дата, Ложь);
	
	Если НЕ НастройкиУчетаНДС = Неопределено И ТипЗнч(НастройкиУчетаНДС) = Тип("Структура") Тогда
		Свойства.ПлательщикНДС =
			НастройкиУчетаНДС.Свойство("ПлательщикНДС") И НастройкиУчетаНДС.ПлательщикНДС
			И НЕ (НастройкиУчетаНДС.Свойство("ПрименяетсяОсвобождениеОтУплатыНДС") И НастройкиУчетаНДС.ПрименяетсяОсвобождениеОтУплатыНДС);
	КонецЕсли;
	
	Возврат Свойства;
	
КонецФункции

Функция ОперациюТребуетсяОтразитьВЖурнале(СвойстваОперации)
	
	Если СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.РеализацияТоваровУслуг")
		И СвойстваОперации.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ОтчетПрослеживаемойОперации(СвойстваОперации)
	
	ОтражатьВОтчете = Перечисления.ПорядокОтраженияВОтчетностиПоПрослеживаемости;
	
	Если НЕ ОтражатьВОтчетахПрослеживаемости(СвойстваОперации.ТипРегистратора) Тогда
		
		Возврат ОтражатьВОтчете.ПустаяСсылка();
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.Сторно")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВнутреннееПотребление") 
		И (СвойстваОперации.ВнутреннееПотреблениеТипРасходовВНА 
			ИЛИ СвойстваОперации.ХозОперацияВнутреннееПотребление = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию) Тогда
		
		Возврат ОтражатьВОтчете.НеОтражаетсяВОтчетности;
		
	ИначеЕсли НЕ ЭтоТорговыйДокумент(СвойстваОперации.ТипРегистратора) Тогда
		
		Возврат ОтражатьВОтчете.ОтчетОбОперациях;
		
	ИначеЕсли НЕ СобственныйТовар(СвойстваОперации.ТипЗапасов) Тогда
		
		Возврат ОтражатьВОтчете.ЖурналСФ;
		
	ИначеЕсли НЕ СвойстваОперации.ОблагаетсяНДС
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.СписаниеОС2_4") Тогда
		
		Возврат ОтражатьВОтчете.ОтчетОбОперациях;
		
	ИначеЕсли СвойстваОперации.Поступление Тогда
		
		Если СвойстваОперации.ОтражатьВОтчетеОбОперациях 
			И НЕ (СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВозвратТоваровОтКлиента")  
			ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.КорректировкаРеализации")
			ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями")) Тогда
		
			Возврат ОтражатьВОтчете.ОтчетОбОперациях; 
			
		Иначе
			
			Возврат ОтражатьВОтчете.КнигаПокупок;
			
		КонецЕсли;
		
	ИначеЕсли СвойстваОперации.Выбытие Тогда 
		
		Если СвойстваОперации.ОтражатьВОтчетеОбОперациях 
			И (СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВозвратТоваровПоставщику") 
			ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями")) Тогда
			
			Возврат ОтражатьВОтчете.ОтчетОбОперациях; 
			
		Иначе
			
			Возврат ОтражатьВОтчете.КнигаПродаж; 
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

Функция КодПрослеживаемойОперации(СвойстваОперации)
	
	КодОперации = ОперацияПрослеживаемости();
	
	Если НЕ ОтражатьВОтчетахПрослеживаемости(СвойстваОперации.ТипРегистратора) Тогда
		Возврат КодОперации;
	КонецЕсли;
	
	ХозОперации = Перечисления.ХозяйственныеОперации;
	
	Если СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВнутреннееПотребление")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВыпускПродукции")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ДвижениеПродукцииИМатериалов")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОтчетКомиссионераОСписании")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациямиОСписании")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ПередачаМатериаловВПроизводство")
		//++ Устарело_Переработка24
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ПередачаСырьяПереработчику")
		//-- Устарело_Переработка24
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ПроизводствоБезЗаказа")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.РаспределениеВозвратныхОтходов")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.РаспределениеПроизводственныхЗатрат")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.СборкаТоваров")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОтчетОСписанииТоваровУХранителя") Тогда
		
		КодОперации = ОперацияПрослеживаемости("01");
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		КодОперации = ОперацияПрослеживаемости("04");
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.СписаниеНедостачТоваров") Тогда
		
		КодОперации = ОперацияПрослеживаемости("09");
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ПрочееОприходованиеТоваров")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров") Тогда
			
		КодОперации = ОперацияПрослеживаемости("10");
		
	//++ Устарело_Переработка24
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВозвратСырьяОтПереработчика")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВозвратМатериаловИзПроизводства") Тогда
		
		КодОперации = ОперацияПрослеживаемости("12");
	//-- Устарело_Переработка24
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		
		Если СвойстваОперации.ХозяйственнаяОперация = ХозОперации.ВозвратОтРозничногоПокупателя Тогда
			КодОперации = ОперацияПрослеживаемости("11");
		Иначе
			КодОперации = ОперацияПрослеживаемости("19");
		КонецЕсли;
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВыкупТоваровХранителем")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОтгрузкаТоваровСХранения")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда
		
		КодОперации = ОперацияПрослеживаемости("15");
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВыкупПринятыхНаХранениеТоваров")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ПриобретениеУслугПрочихАктивов")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт") Тогда
		
		КодОперации = ОперацияПрослеживаемости("17");
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		
		Если СвойстваОперации.ХозяйственнаяОперация = ХозОперации.ПриемНаКомиссию Тогда
		Иначе 
			КодОперации = ОперацияПрослеживаемости("17");
		КонецЕсли;
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		Если СвойстваОперации.ХозяйственнаяОперация = ХозОперации.ПередачаНаКомиссию Тогда
			
		ИначеЕсли СобственныйТовар(СвойстваОперации.ТипЗапасов) Тогда
			КодОперации = ОперацияПрослеживаемости("15");
		КонецЕсли;
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		
		Если СвойстваОперации.ХозяйственнаяОперация = ХозОперации.РеализацияТоваровВДругуюОрганизацию Тогда
			Если СвойстваОперации.Поступление Тогда
				КодОперации = ОперацияПрослеживаемости("17");
			ИначеЕсли СобственныйТовар(СвойстваОперации.ТипЗапасов) Тогда
				КодОперации = ОперацияПрослеживаемости("15");
			Иначе
				// Реализация комиссионных товаров
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
		
		Если СвойстваОперации.ХозяйственнаяОперация = ХозОперации.ВозвратТоваровМеждуОрганизациями Тогда
			Если СвойстваОперации.Сторно Тогда
				КодОперации = ОперацияПрослеживаемости("19");
			Иначе
				КодОперации = ОперацияПрослеживаемости("21");
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		КодОперации = ОперацияПрослеживаемости("21");
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		
		Если СвойстваОперации.Выбытие Тогда
			КодОперации = ОперацияПрослеживаемости("20");
		Иначе
			КодОперации = ОперацияПрослеживаемости("19");
		КонецЕсли;
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.СписаниеОС2_4") Тогда
		
		КодОперации = СвойстваОперации.КодОперацииВыбытия;
	
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.СписаниеИзЭксплуатации") Тогда
		
		КодОперации = ОперацияПрослеживаемости("02");
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.КорректировкаПриобретения") Тогда
		
		Если СвойстваОперации.Исправление Тогда
		     КодОперации = ОперацияПрослеживаемости("17");  
		ИначеЕсли СвойстваОперации.Выбытие Тогда
			 КодОперации = ОперацияПрослеживаемости("21");
		Иначе
			 КодОперации = ОперацияПрослеживаемости("22");
		КонецЕсли;
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ИсправлениеРазвернутогоСальдоТоваровОрганизаций") Тогда
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.КорректировкаВидаДеятельностиНДС") Тогда
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.КорректировкаНазначенияТоваров") Тогда
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.КорректировкаНалогообложенияНДСПартийТоваров") Тогда
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.КорректировкаОбособленногоУчетаЗапасов") Тогда
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.МаркировкаТоваровГИСМ") Тогда
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОтчетКомиссионера") Тогда
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями") Тогда
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ПеремаркировкаТоваровГИСМ") Тогда
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.Сторно") Тогда
//++ НЕ УТКА
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
//-- НЕ УТКА
	КонецЕсли;
	
	Возврат КодОперации;
	
КонецФункции

Функция ТипДокументаПрослеживаемойОперации(СвойстваОперации)
	
	// Согласно правилам заполнения отчета об операциях требуется выделять следующие типы документов: 
	//   1 – счет-фактура
	//   2 – корректировочный счет-фактура
	//   3 – универсальный передаточный документ
	//   4 – универсальный корректировочный документ
	//
	// Во всех остальных случаях указывается код:
	//   5 – иной первичный учетный документ
	
	ТипДокумента = Справочники.ТипыДокументов.ПустаяСсылка();
	
	Если СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		ТипДокумента = Справочники.ТипыДокументов.ОтчетОРозничныхПродажах
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОтчетКомитенту")
		//++ НЕ УТКА

		//++ Устарело_Переработка24
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОтчетДавальцу")
		//-- Устарело_Переработка24
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОтчетДавальцу2_5")
		//-- НЕ УТКА
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВозвратТоваровОтКлиента")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.АктВыполненныхРабот") 
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.СписаниеИзЭксплуатации") Тогда
		
		ТипДокумента = Справочники.ТипыДокументов.Акт;
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.РеализацияТоваровУслуг")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОтчетКомиссионера")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.КорректировкаРеализации")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВозвратТоваровПоставщику")
		ИЛИ СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
			
		ТипДокумента = Справочники.ТипыДокументов.Накладная;
			
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		
		Если СвойстваОперации.ОблагаетсяНДС И НЕ СвойстваОперации.ОтражатьВОтчетеОбОперациях Тогда
			ТипДокумента = Справочники.ТипыДокументов.СчетФактура;
		Иначе
			ТипДокумента = Справочники.ТипыДокументов.УПД;
		КонецЕсли;
		
	ИначеЕсли СвойстваОперации.ТипРегистратора = Тип("ДокументСсылка.КорректировкаПриобретения") Тогда
		
		Если СвойстваОперации.ОблагаетсяНДС И НЕ СвойстваОперации.ОтражатьВОтчетеОбОперациях Тогда
			ТипДокумента = Справочники.ТипыДокументов.КорректировочныйСчетФактура;
		Иначе
			ТипДокумента = Справочники.ТипыДокументов.УКД;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТипДокумента;
	
КонецФункции

Функция ЭтоТорговыйДокумент(ТипДокумента)
	
	Возврат ТипДокумента = Тип("ДокументСсылка.ПриобретениеТоваровУслуг")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.КорректировкаПриобретения")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.КорректировкаРеализации")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровПоставщику")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровОтКлиента")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ОтчетКомиссионера")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ОтчетОРозничныхПродажах")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ОтгрузкаТоваровСХранения")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ВыкупПринятыхНаХранениеТоваров")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ВыкупТоваровХранителем")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ВыкупТоваровХранителем")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ПриобретениеУслугПрочихАктивов")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ВыкупАрендованныхОС")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.СписаниеОС2_4")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов");
	
КонецФункции

Функция ОтражатьВОтчетахПрослеживаемости(ТипДокумента)
	
	Возврат НЕ (ТипДокумента = Тип("ДокументСсылка.ПорчаТоваров")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ПеремещениеТоваров")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ПересортицаТоваров")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ПередачаТоваровХранителю")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ПриемкаТоваровНаХранение")
		//++ Устарело_Переработка24
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ПоступлениеОтПереработчика")
		//-- Устарело_Переработка24
		
		//++ НЕ УТКА
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ОтчетДавальцуМеждуОрганизациями")
		//++ Устарело_Переработка24
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ПоступлениеСырьяОтДавальца")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ВозвратСырьяДавальцу")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ПередачаДавальцу")
		//-- Устарело_Переработка24

		//-- НЕ УТКА
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровНаСклад")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровОтХранителя")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ОтчетОСписанииТоваровСХранения"));
	
КонецФункции

Процедура ПолучитьОсновныеДанныеРНПТ(СтруктураПараметров)
	
	Запрос = СтруктураПараметров.Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокДокументов.Документ КАК Документ,
	|	Операции.ТипЗапасов КАК ТипЗапасов,
	|	Операции.Период КАК ДатаОперации,
	|	Операции.ТипДокументаВПрослеживаемости КАК ТипДокумента,
	|	Операции.Контрагент КАК Контрагент,
	|	Операции.Организация КАК Организация,
	|	ТоварыОрганизаций.НомерГТД КАК РегНомПросл,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код КАК ОКЕИ,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	СУММА(ТоварыОрганизаций.КоличествоПоРНПТ) КАК Количество,
	|	Операции.КодОперации КАК КодОперации,
	|	0 КАК СтоимостьПоРНПТ
	|ПОМЕСТИТЬ ВТ_ПрослеживаемыеОперации
	|ИЗ
	|	РегистрСведений.ОперацииСПрослеживаемымиТоварами КАК Операции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокДокументов КАК СписокДокументов
	|		ПО Операции.Регистратор = СписокДокументов.Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ПО Операции.Регистратор = ТоварыОрганизаций.Регистратор
	|			И Операции.Организация = ТоварыОрганизаций.Организация
	|			И Операции.ТипЗапасов = ТоварыОрганизаций.ВидЗапасов.ТипЗапасов
	|			И (ТоварыОрганизаций.НомерГТД.ТипНомераГТД В (ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ), ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта)))
	|ГДЕ
	|	Операции.ОтражениеВОтчетности = &ОтражениеВОтчетности
	|	И НЕ ТИПЗНАЧЕНИЯ(СписокДокументов.Документ) = ТИП(Документ.КорректировкаПриобретения) 
	|	И НЕ ТИПЗНАЧЕНИЯ(СписокДокументов.Документ) = ТИП(Документ.КорректировкаРеализации)
	|	И Операции.Организация В(&Организация)
	|	И Операции.Активность
	|	И НЕ ТоварыОрганизаций.Сторно
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокДокументов.Документ,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	Операции.Период,
	|	Операции.ТипДокументаВПрослеживаемости,
	|	Операции.Контрагент,
	|	Операции.КодОперации,
	|	Операции.Организация,
	|	ТоварыОрганизаций.НомерГТД,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код,
	|	Операции.ТипЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокДокументов.Документ,
	|	Операции.ТипЗапасов,
	|	Операции.Период,
	|	Операции.ТипДокументаВПрослеживаемости,
	|	Операции.Контрагент,
	|	Операции.Организация,
	|	ТоварыПереданныеНаКомиссию.НомерГТД,
	|	ТоварыПереданныеНаКомиссию.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код,
	|	ТоварыПереданныеНаКомиссию.АналитикаУчетаНоменклатуры,
	|	ТоварыПереданныеНаКомиссию.ВидЗапасов,
	|	СУММА(ТоварыПереданныеНаКомиссию.КоличествоПоРНПТ),
	|	Операции.КодОперации,
	|	0
	|ИЗ
	|	РегистрСведений.ОперацииСПрослеживаемымиТоварами КАК Операции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокДокументов КАК СписокДокументов
	|		ПО Операции.Регистратор = СписокДокументов.Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ТоварыПереданныеНаКомиссию
	|		ПО Операции.Регистратор = ТоварыПереданныеНаКомиссию.Регистратор
	|			И Операции.Организация = ТоварыПереданныеНаКомиссию.Организация
	|			И Операции.ТипЗапасов = ТоварыПереданныеНаКомиссию.ВидЗапасов.ТипЗапасов
	|			И (ТоварыПереданныеНаКомиссию.НомерГТД.ТипНомераГТД В (ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ), ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта)))
	|ГДЕ
	|	Операции.ОтражениеВОтчетности = &ОтражениеВОтчетности
	|	И НЕ ТИПЗНАЧЕНИЯ(СписокДокументов.Документ) = ТИП(Документ.КорректировкаПриобретения)
	|	И НЕ ТИПЗНАЧЕНИЯ(СписокДокументов.Документ) = ТИП(Документ.КорректировкаРеализации)
	|	И Операции.Организация В(&Организация)
	|	И Операции.Активность
	|	И ТоварыПереданныеНаКомиссию.Активность
	|	И НЕ ТоварыПереданныеНаКомиссию.Сторно
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокДокументов.Документ,
	|	ТоварыПереданныеНаКомиссию.АналитикаУчетаНоменклатуры,
	|	ТоварыПереданныеНаКомиссию.ВидЗапасов,
	|	Операции.Период,
	|	Операции.ТипДокументаВПрослеживаемости,
	|	Операции.Контрагент,
	|	Операции.Организация,
	|	Операции.КодОперации,
	|	ТоварыПереданныеНаКомиссию.НомерГТД,
	|	ТоварыПереданныеНаКомиссию.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код,
	|	Операции.ТипЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокДокументов.Документ,
	|	Операции.ВидЗапасов.ТипЗапасов,
	|	Операции.Период,
	|	Операции.ТипДокументаВПрослеживаемости,
	|	Операции.Контрагент,
	|	Операции.Организация,
	|	Операции.РНПТ,
	|	Операции.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код,
	|	Операции.АналитикаУчетаНоменклатуры,
	|	Операции.ВидЗапасов,
	|	СУММА(Операции.КоличествоПоРНПТ),
	|	Операции.КодОперации,
	|	Операции.СтоимостьПоРНПТ
	|ИЗ
	|	РегистрСведений.ОперацииСПрослеживаемымиТоварамиРасширенный КАК Операции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокДокументов КАК СписокДокументов
	|		ПО Операции.Регистратор = СписокДокументов.Документ
	|ГДЕ
	|	Операции.ОтражениеВОтчетности = &ОтражениеВОтчетности
	|	И НЕ (ТИПЗНАЧЕНИЯ(Операции.Регистратор) = ТИП(Документ.КорректировкаПриобретения) 
	|        И ВЫРАЗИТЬ(Операции.Регистратор КАК Документ.КорректировкаПриобретения).ВидКорректировки = Значение(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|	И НЕ ТИПЗНАЧЕНИЯ(СписокДокументов.Документ) = ТИП(Документ.КорректировкаРеализации)
	|	И Операции.Организация В(&Организация)
	|	И Операции.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокДокументов.Документ,
	|	Операции.АналитикаУчетаНоменклатуры,
	|	Операции.ВидЗапасов,
	|	Операции.Период,
	|	Операции.ТипДокументаВПрослеживаемости,
	|	Операции.Контрагент,
	|	Операции.Организация,
	|	Операции.РНПТ,
	|	Операции.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код,
	|	Операции.ВидЗапасов.ТипЗапасов,
	|	Операции.КодОперации,
	|	Операции.ИдентификаторСтроки,
	|	Операции.СтоимостьПоРНПТ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьТоваров.Регистратор КАК Регистратор,
	|	СебестоимостьТоваров.Организация КАК Организация,
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.ВидЗапасов КАК ВидЗапасов,
	|	СУММА(СебестоимостьТоваров.СтоимостьРегл) КАК СтоимостьРегл
	|ПОМЕСТИТЬ ВТ_СебестоимостьТоваров
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
	|ГДЕ
	|	СебестоимостьТоваров.Активность
	|	И НЕ СебестоимостьТоваров.Сторно
	|	И (СебестоимостьТоваров.Регистратор, СебестоимостьТоваров.Организация, СебестоимостьТоваров.АналитикаУчетаНоменклатуры, СебестоимостьТоваров.ВидЗапасов) В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ВТ_ПрослеживаемыеОперации.Документ,
	|				ВТ_ПрослеживаемыеОперации.Организация,
	|				ВТ_ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры,
	|				ВТ_ПрослеживаемыеОперации.ВидЗапасов
	|			ИЗ
	|				ВТ_ПрослеживаемыеОперации)
	|
	|СГРУППИРОВАТЬ ПО
	|	СебестоимостьТоваров.Регистратор,
	|	СебестоимостьТоваров.Организация,
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.ВидЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СебестоимостьТоваров.Регистратор,
	|	СебестоимостьТоваров.Организация,
	|	ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры,
	|	ПрослеживаемыеОперации.ВидЗапасов,
	|	СУММА(СебестоимостьТоваров.СтоимостьРегл)
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПрослеживаемыеОперации КАК ПрослеживаемыеОперации
	|		ПО СебестоимостьТоваров.Регистратор = ПрослеживаемыеОперации.Документ
	|			И СебестоимостьТоваров.Организация = ПрослеживаемыеОперации.Организация
	|			И СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура = ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры.Номенклатура
	|			И (СебестоимостьТоваров.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварВПути)
	|				ИЛИ СебестоимостьТоваров.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке))
	|
	|СГРУППИРОВАТЬ ПО
	|	СебестоимостьТоваров.Регистратор,
	|	СебестоимостьТоваров.Организация,
	|	ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры,
	|	ПрослеживаемыеОперации.ВидЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыручкаИСебестоимостьПродаж.Регистратор КАК Регистратор,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВыручкаИСебестоимостьПродаж.ВидЗапасов КАК ВидЗапасов,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл) КАК СуммаВыручкиРегл
	|ПОМЕСТИТЬ ВТ_ВыручкаИСебестоимостьПродаж
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|ГДЕ
	|	ВыручкаИСебестоимостьПродаж.Активность
	|	И (ВыручкаИСебестоимостьПродаж.Регистратор, ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры, ВыручкаИСебестоимостьПродаж.ВидЗапасов) В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ВТ_ПрослеживаемыеОперации.Документ,
	|				ВТ_ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры,
	|				ВТ_ПрослеживаемыеОперации.ВидЗапасов
	|			ИЗ
	|				ВТ_ПрослеживаемыеОперации)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимостьПродаж.Регистратор,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры,
	|	ВыручкаИСебестоимостьПродаж.ВидЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлениюДокументовИмпорта.Регистратор КАК Регистратор,
	|	ТоварыКОформлениюДокументовИмпорта.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыКОформлениюДокументовИмпорта.ВидЗапасов КАК ВидЗапасов,
	|	СУММА(ТоварыКОформлениюДокументовИмпорта.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ТоварыКОформлениюДокументовИмпорта
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюДокументовИмпорта КАК ТоварыКОформлениюДокументовИмпорта
	|ГДЕ
	|	ТоварыКОформлениюДокументовИмпорта.Активность
	|	И (ТоварыКОформлениюДокументовИмпорта.Регистратор, ТоварыКОформлениюДокументовИмпорта.АналитикаУчетаНоменклатуры, ТоварыКОформлениюДокументовИмпорта.ВидЗапасов) В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ВТ_ПрослеживаемыеОперации.Документ,
	|				ВТ_ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры,
	|				ВТ_ПрослеживаемыеОперации.ВидЗапасов
	|			ИЗ
	|				ВТ_ПрослеживаемыеОперации)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлениюДокументовИмпорта.Регистратор,
	|	ТоварыКОформлениюДокументовИмпорта.АналитикаУчетаНоменклатуры,
	|	ТоварыКОформлениюДокументовИмпорта.ВидЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПрослеживаемыеОперации.Документ КАК Документ,
	|	ВТ_ПрослеживаемыеОперации.Организация КАК Организация,
	|	ВТ_ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТ_ПрослеживаемыеОперации.ВидЗапасов КАК ВидЗапасов,
	|	СУММА(ВТ_ПрослеживаемыеОперации.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_КоличествоТоваров
	|ИЗ
	|	ВТ_ПрослеживаемыеОперации КАК ВТ_ПрослеживаемыеОперации
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПрослеживаемыеОперации.Документ,
	|	ВТ_ПрослеживаемыеОперации.Организация,
	|	ВТ_ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры,
	|	ВТ_ПрослеживаемыеОперации.ВидЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеОперации.Документ КАК Документ,
	|	ПрослеживаемыеОперации.ТипЗапасов КАК ТипЗапасов,
	|	ПрослеживаемыеОперации.ДатаОперации КАК ДатаОперации,
	|	ПрослеживаемыеОперации.ТипДокумента КАК ТипДокумента,
	|	ПрослеживаемыеОперации.Контрагент КАК Контрагент,
	|	ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ПрослеживаемыеОперации.Организация КАК Организация,
	|	ПрослеживаемыеОперации.РегНомПросл КАК РегНомПросл,
	|	ПрослеживаемыеОперации.ОКЕИ КАК ОКЕИ,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеОперации.Количество >= 0
	|			ТОГДА ПрослеживаемыеОперации.Количество
	|		ИНАЧЕ -ПрослеживаемыеОперации.Количество
	|	КОНЕЦ КАК КолТовПросл,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеОперации.КодОперации В (&КодыЗакупки)
	|				И НомераГТД.СуммаПоРНПТ <> 0
	|			ТОГДА НомераГТД.СуммаПоРНПТ * ПрослеживаемыеОперации.Количество 
	|       КОГДА ПрослеживаемыеОперации.СтоимостьПоРНПТ<>0 
	|	        ТОГДА ПрослеживаемыеОперации.СтоимостьПоРНПТ
    |		КОГДА ВТ_КоличествоТоваров.Количество = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл, ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРегл, 0)) >= 0
	|			ТОГДА ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл, ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРегл, 0)) / ВТ_КоличествоТоваров.Количество * ПрослеживаемыеОперации.Количество
	|		ИНАЧЕ -ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл, ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРегл, 0)) / ВТ_КоличествоТоваров.Количество * ПрослеживаемыеОперации.Количество
	|	КОНЕЦ КАК СтоимТовПросл,
	|	ПрослеживаемыеОперации.КодОперации КАК КодОперации
	|ПОМЕСТИТЬ вт_ПокупкиПродажи
	|ИЗ
	|	ВТ_ПрослеживаемыеОперации КАК ПрослеживаемыеОперации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СебестоимостьТоваров КАК СебестоимостьТоваров
	|		ПО ПрослеживаемыеОперации.Документ = СебестоимостьТоваров.Регистратор
	|			И ПрослеживаемыеОперации.Организация = СебестоимостьТоваров.Организация
	|			И ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры = СебестоимостьТоваров.АналитикаУчетаНоменклатуры
	|			И ПрослеживаемыеОперации.ВидЗапасов = СебестоимостьТоваров.ВидЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ПО ПрослеживаемыеОперации.Документ = ВыручкаИСебестоимостьПродаж.Регистратор
	|			И ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры = ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры
	|			И ПрослеживаемыеОперации.ВидЗапасов = ВыручкаИСебестоимостьПродаж.ВидЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоТоваров КАК ВТ_КоличествоТоваров
	|		ПО ПрослеживаемыеОперации.Документ = ВТ_КоличествоТоваров.Документ
	|			И ПрослеживаемыеОперации.Организация = ВТ_КоличествоТоваров.Организация
	|			И ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры = ВТ_КоличествоТоваров.АналитикаУчетаНоменклатуры
	|			И ПрослеживаемыеОперации.ВидЗапасов = ВТ_КоличествоТоваров.ВидЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
	|		ПО ПрослеживаемыеОперации.РегНомПросл = НомераГТД.Ссылка
	|ГДЕ
	|	НЕ ТИПЗНАЧЕНИЯ(ПрослеживаемыеОперации.Документ) = ТИП(Документ.ТаможеннаяДекларацияИмпорт)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрослеживаемыеОперации.Документ,
	|	ПрослеживаемыеОперации.ТипЗапасов, 
	|	ПрослеживаемыеОперации.ДатаОперации КАК ДатаОперации,
	|	ПрослеживаемыеОперации.ТипДокумента КАК ТипДокумента,
	|	ПрослеживаемыеОперации.Контрагент КАК Контрагент,
	|	ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ПрослеживаемыеОперации.Организация,
	|	ПрослеживаемыеОперации.РегНомПросл,
	|	ПрослеживаемыеОперации.ОКЕИ,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеОперации.Количество >= 0
	|			ТОГДА ПрослеживаемыеОперации.Количество
	|		ИНАЧЕ -ПрослеживаемыеОперации.Количество
	|	КОНЕЦ,
	|	ВЫБОР 
	|		КОГДА НомераГТД.СуммаПоРНПТ <> 0
	|			ТОГДА НомераГТД.СуммаПоРНПТ * ПрослеживаемыеОперации.Количество
	|		КОГДА ВТ_КоличествоТоваров.Количество = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ВТ_ТоварыКОформлениюДокументовИмпорта.Сумма, 0) >= 0
	|			ТОГДА ЕСТЬNULL(ВТ_ТоварыКОформлениюДокументовИмпорта.Сумма, 0) / ВТ_КоличествоТоваров.Количество * ПрослеживаемыеОперации.Количество
	|		ИНАЧЕ -ВТ_ТоварыКОформлениюДокументовИмпорта.Сумма / ВТ_КоличествоТоваров.Количество * ПрослеживаемыеОперации.Количество
	|	КОНЕЦ,
	|	NULL
	|ИЗ
	|	ВТ_ПрослеживаемыеОперации КАК ПрослеживаемыеОперации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыКОформлениюДокументовИмпорта КАК ВТ_ТоварыКОформлениюДокументовИмпорта
	|		ПО ПрослеживаемыеОперации.Документ = ВТ_ТоварыКОформлениюДокументовИмпорта.Регистратор
	|			И ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры = ВТ_ТоварыКОформлениюДокументовИмпорта.АналитикаУчетаНоменклатуры
	|			И ПрослеживаемыеОперации.ВидЗапасов = ВТ_ТоварыКОформлениюДокументовИмпорта.ВидЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоТоваров КАК ВТ_КоличествоТоваров
	|		ПО ПрослеживаемыеОперации.Документ = ВТ_КоличествоТоваров.Документ
	|			И ПрослеживаемыеОперации.Организация = ВТ_КоличествоТоваров.Организация
	|			И ПрослеживаемыеОперации.АналитикаУчетаНоменклатуры = ВТ_КоличествоТоваров.АналитикаУчетаНоменклатуры
	|			И ПрослеживаемыеОперации.ВидЗапасов = ВТ_КоличествоТоваров.ВидЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
	|		ПО ПрослеживаемыеОперации.РегНомПросл = НомераГТД.Ссылка
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ПрослеживаемыеОперации.Документ) = ТИП(Документ.ТаможеннаяДекларацияИмпорт)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ПрослеживаемыеОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СебестоимостьТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВыручкаИСебестоимостьПродаж
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТоварыКОформлениюДокументовИмпорта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_КоличествоТоваров";
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();

КонецПроцедуры // ПолучитьОсновныеДанныеРНПТ()

Процедура ПолучитьДанныеРНПТКорректировкиПриобретения(СтруктураПараметров)
	
	Если НЕ СтруктураПараметров.ЕстьКорректировкиПриобретения Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = СтруктураПараметров.Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаБазовыхВалют.Организация КАК Организация,
	|	ТаблицаБазовыхВалют.БазоваяВалюта КАК БазоваяВалюта
	|ПОМЕСТИТЬ ВТ_БазовыеВалюты
	|ИЗ
	|	&ТаблицаБазовыхВалют КАК ТаблицаБазовыхВалют
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СписокДокументов.Документ КАК Документ,
	|	Операции.ТипЗапасов КАК ТипЗапасов,
	|	Операции.Период КАК ДатаОперации,
	|	Операции.ТипДокументаВПрослеживаемости КАК ТипДокумента,
	|	Операции.Контрагент КАК Контрагент,
	|	Операции.Организация КАК Организация,
	|	МАКСИМУМ(КурсыВалют.Период) КАК Период,
	|	КорректировкаПриобретения.Валюта КАК Валюта,
	|	ВТ_БазовыеВалюты.БазоваяВалюта КАК БазоваяВалюта,
	|	КурсыВалют.БазоваяВалюта КАК БазоваяВалютаРегистра,
	|	Операции.КодОперации КАК КодОперации,
	|	NULL КАК Номенклатура,
	|	NULL КАК РНПТ,
	|	NULL КАК ИдентификаторСтроки,
	|	0 КАК СтоимостьПоРНПТ,
	|	0 КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВТ_КорректировкиПриобретения_Предварительная
	|ИЗ
	|	РегистрСведений.ОперацииСПрослеживаемымиТоварами КАК Операции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокДокументов КАК ВТ_СписокДокументов
	|		ПО Операции.Регистратор = ВТ_СписокДокументов.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазовыеВалюты КАК ВТ_БазовыеВалюты
	|			ПО КорректировкаПриобретения.Организация = ВТ_БазовыеВалюты.Организация
	|		ПО (ВТ_СписокДокументов.Документ = КорректировкаПриобретения.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|		ПО (КурсыВалют.Валюта = КорректировкаПриобретения.Валюта)
	|			И (КурсыВалют.Период < КорректировкаПриобретения.ДокументОснование.Дата)
	|ГДЕ
	|	Операции.ОтражениеВОтчетности = &ОтражениеВОтчетности
	|	И Операции.Организация В(&Организация)
	|	И Операции.Активность
	|	И ТИПЗНАЧЕНИЯ(ВТ_СписокДокументов.Документ) = ТИП(Документ.КорректировкаПриобретения)
	|	И (КурсыВалют.БазоваяВалюта = ВТ_БазовыеВалюты.БазоваяВалюта
	|			ИЛИ КурсыВалют.БазоваяВалюта ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СписокДокументов.Документ,
	|	Операции.ТипЗапасов,
	|	Операции.КодОперации,
	|	Операции.Период,
	|	Операции.ТипДокументаВПрослеживаемости,
	|	Операции.Контрагент,
	|	Операции.Организация,
	|	КорректировкаПриобретения.Валюта,
	|	ВТ_БазовыеВалюты.БазоваяВалюта,
	|	КурсыВалют.БазоваяВалюта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_СписокДокументов.Документ,
	|	Операции.ВидЗапасов.ТипЗапасов,
	|	Операции.Период,
	|	Операции.ТипДокументаВПрослеживаемости,
	|	Операции.Контрагент,
	|	Операции.Организация,
	|	МАКСИМУМ(КурсыВалют.Период),
	|	КорректировкаПриобретения.Валюта,
	|	ВТ_БазовыеВалюты.БазоваяВалюта,
	|	КурсыВалют.БазоваяВалюта,
	|	Операции.КодОперации,
	|	Операции.АналитикаУчетаНоменклатуры.Номенклатура,
	|	Операции.РНПТ,
	|	Операции.ИдентификаторСтроки,
	|	Операции.СтоимостьПоРНПТ,
	|	Операции.КоличествоПоРНПТ
	|ИЗ
	|	РегистрСведений.ОперацииСПрослеживаемымиТоварамиРасширенный КАК Операции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокДокументов КАК ВТ_СписокДокументов
	|		ПО Операции.Регистратор = ВТ_СписокДокументов.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазовыеВалюты КАК ВТ_БазовыеВалюты
	|			ПО КорректировкаПриобретения.Организация = ВТ_БазовыеВалюты.Организация
	|		ПО (ВТ_СписокДокументов.Документ = КорректировкаПриобретения.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|		ПО (КурсыВалют.Валюта = КорректировкаПриобретения.Валюта)
	|			И (КурсыВалют.Период < КорректировкаПриобретения.ДокументОснование.Дата)
	|ГДЕ
	|	Операции.ОтражениеВОтчетности = &ОтражениеВОтчетности
	|	И Операции.Организация В(&Организация)
	|	И Операции.Активность
	|	И ТИПЗНАЧЕНИЯ(ВТ_СписокДокументов.Документ) = ТИП(Документ.КорректировкаПриобретения)
	|	И (КурсыВалют.БазоваяВалюта = ВТ_БазовыеВалюты.БазоваяВалюта
	|			ИЛИ КурсыВалют.БазоваяВалюта ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СписокДокументов.Документ,
	|	Операции.ВидЗапасов.ТипЗапасов,
	|	Операции.Период,
	|	Операции.ТипДокументаВПрослеживаемости,
	|	Операции.Контрагент,
	|	Операции.Организация,
	|	КорректировкаПриобретения.Валюта,
	|	ВТ_БазовыеВалюты.БазоваяВалюта,
	|	КурсыВалют.БазоваяВалюта,
	|	Операции.КодОперации,
	|	Операции.АналитикаУчетаНоменклатуры.Номенклатура,
	|	Операции.РНПТ,
	|	Операции.ИдентификаторСтроки,
	|	Операции.СтоимостьПоРНПТ,
	|	Операции.КоличествоПоРНПТ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КорректировкиПриобретения_Предварительная.Документ КАК Документ,
	|	ВТ_КорректировкиПриобретения_Предварительная.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_КорректировкиПриобретения_Предварительная.ДатаОперации КАК ДатаОперации,
	|	ВТ_КорректировкиПриобретения_Предварительная.ТипДокумента КАК ТипДокумента,
	|	ВТ_КорректировкиПриобретения_Предварительная.Контрагент КАК Контрагент,
	|	ВТ_КорректировкиПриобретения_Предварительная.Организация КАК Организация,
	|	КорректировкаПриобретенияТовары.НомерГТД КАК РегНомПросл,
	|   ВЫБОР 
	|       КОГДА  КорректировкаПриобретенияТовары.Номенклатура = Значение(Справочник.Номенклатура.ПустаяСсылка) 
	|           ТОГДА КорректировкаПриобретенияТовары.КодТНВЭД.ЕдиницаИзмерения.Код 
	|       ИНАЧЕ КорректировкаПриобретенияТовары.Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код
	|   КОНЕЦ КАК ОКЕИ,
	|	ВЫБОР
	|		КОГДА КорректировкаПриобретенияТовары.КоличествоПоРНПТ < 0
	|			ТОГДА -КорректировкаПриобретенияТовары.КоличествоПоРНПТ
	|		ИНАЧЕ КорректировкаПриобретенияТовары.КоличествоПоРНПТ
	|	КОНЕЦ КАК КолТовПросл,
	|	ВЫБОР
	|		КОГДА КорректировкаПриобретенияТовары.НомерГТД.СуммаПоРНПТ <> 0
	|			ТОГДА КорректировкаПриобретенияТовары.НомерГТД.СуммаПоРНПТ
	|		ИНАЧЕ КорректировкаПриобретенияТовары.Цена * ЕСТЬNULL(КурсыВалют.КурсЧислитель, 0) * ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 0)
	|	КОНЕЦ * ВЫБОР
	|		КОГДА КорректировкаПриобретенияТовары.КоличествоПоРНПТ < 0
	|			ТОГДА -КорректировкаПриобретенияТовары.КоличествоПоРНПТ
	|		ИНАЧЕ КорректировкаПриобретенияТовары.КоличествоПоРНПТ
	|	КОНЕЦ КАК СтоимТовПросл,
	|	ВТ_КорректировкиПриобретения_Предварительная.КодОперации КАК КодОперации
	|ПОМЕСТИТЬ ВТ_КорректировкиПриобретения
	|ИЗ
	|	ВТ_КорректировкиПриобретения_Предварительная КАК ВТ_КорректировкиПриобретения_Предварительная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения.Товары КАК КорректировкаПриобретенияТовары
	|		ПО ВТ_КорректировкиПриобретения_Предварительная.Документ = КорректировкаПриобретенияТовары.Ссылка
	|			И (КорректировкаПриобретенияТовары.НомерГТД.ТипНомераГТД В (ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ), ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта)))
	|			И (ВТ_КорректировкиПриобретения_Предварительная.Номенклатура ЕСТЬ NULL
	|				ИЛИ ВТ_КорректировкиПриобретения_Предварительная.Номенклатура = КорректировкаПриобретенияТовары.Номенклатура
	|					И ВТ_КорректировкиПриобретения_Предварительная.РНПТ = КорректировкаПриобретенияТовары.НомерГТД)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|		ПО ВТ_КорректировкиПриобретения_Предварительная.Период = КурсыВалют.Период
	|			И ВТ_КорректировкиПриобретения_Предварительная.Валюта = КурсыВалют.Валюта
	|			И ВТ_КорректировкиПриобретения_Предварительная.БазоваяВалютаРегистра = КурсыВалют.БазоваяВалюта
	|ГДЕ
	|	КорректировкаПриобретенияТовары.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок)
	|	И КорректировкаПриобретенияТовары.Ссылка.ДокументОснование ССЫЛКА Документ.ПриобретениеУслугПрочихАктивов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_КорректировкиПриобретения_Предварительная.Документ,
	|	ВТ_КорректировкиПриобретения_Предварительная.ТипЗапасов,
	|	ВТ_КорректировкиПриобретения_Предварительная.ДатаОперации,
	|	ВТ_КорректировкиПриобретения_Предварительная.ТипДокумента,
	|	ВТ_КорректировкиПриобретения_Предварительная.Контрагент,
	|	ВТ_КорректировкиПриобретения_Предварительная.Организация,
	|	ЕСТЬNULL(ВТ_КорректировкиПриобретения_Предварительная.РНПТ, КорректировкаПриобретенияРасхождения.НомерГТД),
	|   ВЫБОР 
	|       КОГДА  КорректировкаПриобретенияРасхождения.Номенклатура = Значение(Справочник.Номенклатура.ПустаяСсылка) 
	|           ТОГДА КорректировкаПриобретенияРасхождения.КодТНВЭД.ЕдиницаИзмерения.Код 
	|       ИНАЧЕ КорректировкаПриобретенияРасхождения.Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код
	|   КОНЕЦ КАК ОКЕИ,
	|	ВЫБОР
	|		КОГДА ВТ_КорректировкиПриобретения_Предварительная.КоличествоПоРНПТ <> 0
	|			ТОГДА ВТ_КорректировкиПриобретения_Предварительная.КоличествоПоРНПТ
	|		КОГДА КорректировкаПриобретенияРасхождения.КоличествоПоРНПТ < 0
	|			ТОГДА -КорректировкаПриобретенияРасхождения.КоличествоПоРНПТ
	|		ИНАЧЕ КорректировкаПриобретенияРасхождения.КоличествоПоРНПТ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_КорректировкиПриобретения_Предварительная.СтоимостьПоРНПТ <> 0
	|			ТОГДА ВТ_КорректировкиПриобретения_Предварительная.СтоимостьПоРНПТ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СуммыДокументовВВалютахУчета.СуммаБезНДСРегл < 0
	|					ТОГДА -СуммыДокументовВВалютахУчета.СуммаБезНДСРегл
	|				ИНАЧЕ СуммыДокументовВВалютахУчета.СуммаБезНДСРегл
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВТ_КорректировкиПриобретения_Предварительная.КодОперации
	|ИЗ
	|	ВТ_КорректировкиПриобретения_Предварительная КАК ВТ_КорректировкиПриобретения_Предварительная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения.Расхождения КАК КорректировкаПриобретенияРасхождения
	|		ПО ВТ_КорректировкиПриобретения_Предварительная.Документ = КорректировкаПриобретенияРасхождения.Ссылка
	|			И (КорректировкаПриобретенияРасхождения.НомерГТД.ТипНомераГТД В (ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ), ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта)))
	|			И (ВТ_КорректировкиПриобретения_Предварительная.ИдентификаторСтроки = КорректировкаПриобретенияРасхождения.ИдентификаторСтроки
	|				ИЛИ ВТ_КорректировкиПриобретения_Предварительная.ИдентификаторСтроки ЕСТЬ NULL)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|		ПО (СуммыДокументовВВалютахУчета.Регистратор = ВТ_КорректировкиПриобретения_Предварительная.Документ)
	|			И (СуммыДокументовВВалютахУчета.ИдентификаторСтроки = КорректировкаПриобретенияРасхождения.ИдентификаторСтроки)
	|ГДЕ
	|	КорректировкаПриобретенияРасхождения.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_КорректировкиПриобретения_Предварительная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_БазовыеВалюты";
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	
КонецПроцедуры 

Процедура ПолучитьДанныеРНПТКорректировкиРеализации(СтруктураПараметров)
	
	Если НЕ СтруктураПараметров.ЕстьКорректировкиРеализации Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = СтруктураПараметров.Запрос;
	
	Если СтруктураПараметров.МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_СопоставлениеСФОснований") = Неопределено Тогда
	
		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	ВТ_СписокДокументов.Документ КАК Документ,
		|	Операции.ВидЗапасов.ТипЗапасов КАК ТипЗапасов, 
		|	Операции.Период КАК ДатаОперации,
	    |	Операции.ТипДокументаВПрослеживаемости КАК ТипДокумента,
	    |	Операции.Контрагент КАК Контрагент,
		|	Операции.Организация КАК Организация,
		|	Операции.РНПТ КАК РегНомПросл,
		|	Операции.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код КАК ОКЕИ,
		|	СУММА(Операции.КоличествоПоРНПТ) КАК КолТовПросл,
		|	СУММА(ВЫБОР     
		|			КОГДА Операции.СтоимостьПоРНПТ <> 0 
		|				ТОГДА Операции.СтоимостьПоРНПТ 
		|			ИНАЧЕ СуммыДокументовВВалютахУчета.СуммаБезНДСРегл
		|		КОНЕЦ) КАК СтоимТовПросл, 
		|	МАКСИМУМ(Операции.КодОперации) КАК КодОперации 
		|ПОМЕСТИТЬ ВТ_КорректировкиРеализации
		|ИЗ
		|	РегистрСведений.ОперацииСПрослеживаемымиТоварамиРасширенный КАК Операции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокДокументов КАК ВТ_СписокДокументов
		|		ПО Операции.Регистратор = ВТ_СписокДокументов.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
		|		ПО (СуммыДокументовВВалютахУчета.Регистратор = Операции.Регистратор)
		|			И (СуммыДокументовВВалютахУчета.ИдентификаторСтроки = Операции.ИдентификаторСтроки)
		|ГДЕ
		|	Операции.ОтражениеВОтчетности = &ОтражениеВОтчетности
		|	И Операции.Организация В(&Организация)
		|	И Операции.Активность
		|	И ТИПЗНАЧЕНИЯ(ВТ_СписокДокументов.Документ) = ТИП(Документ.КорректировкаРеализации)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_СписокДокументов.Документ,
		|	Операции.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код,
		|	Операции.Организация,
		|	Операции.ВидЗапасов.ТипЗапасов,
		|	Операции.Период,
	    |	Операции.ТипДокументаВПрослеживаемости,
	    |	Операции.Контрагент,
		|	Операции.РНПТ";
	
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_СопоставлениеСФОснований.ДокументДляСвязи КАК Документ,
		|	ВТ_СопоставлениеСФОснований.СчетФактура КАК СчетФактура,
		|	ВТ_СопоставлениеСФОснований.Исправление КАК Исправление,
		|	ВТ_СопоставлениеСФОснований.Корректировочный КАК Корректировочный,
		|	Операции.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
		|	Операции.Период КАК ДатаОперации,
	    |	Операции.ТипДокументаВПрослеживаемости КАК ТипДокумента,
	    |	Операции.Контрагент КАК Контрагент,
		|	Операции.Организация КАК Организация,
		|	Операции.РНПТ КАК РНПТ,
		|	Операции.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	Операции.КодОперации КАК КодОперации
		|ПОМЕСТИТЬ ВТ_КорректировкиРеализации_Предварительная
		|ИЗ
		|	РегистрСведений.ОперацииСПрослеживаемымиТоварамиРасширенный КАК Операции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СопоставлениеСФОснований КАК ВТ_СопоставлениеСФОснований
		|		ПО Операции.Регистратор = ВТ_СопоставлениеСФОснований.Документ
		|			И (ВТ_СопоставлениеСФОснований.Документ ССЫЛКА Документ.КорректировкаРеализации)
		|ГДЕ
		|	Операции.ОтражениеВОтчетности = &ОтражениеВОтчетности
		|	И Операции.Организация В(&Организация)
		|	И Операции.Активность
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетФактура,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СопоставлениеСФОснований.ДокументДляСвязи КАК Документ,
		|	Операции.ТипЗапасов КАК ТипЗапасов,
		|	Операции.Организация КАК Организация,      
		|	Операции.Период КАК ДатаОперации,
	    |	Операции.ТипДокументаВПрослеживаемости КАК ТипДокумента,
	    |	Операции.Контрагент КАК Контрагент,
		|	СчетФактураВыданныйТовары.НомерГТД КАК РегНомПросл,
		|	СчетФактураВыданныйТовары.Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код КАК ОКЕИ,
		|	ВЫБОР
		|		КОГДА ВТ_СопоставлениеСФОснований.Исправление И НЕ ВТ_СопоставлениеСФОснований.Корректировочный
		|		    ТОГДА СчетФактураВыданныйТовары.КоличествоПоРНПТ   
		|		КОГДА &ОтражениеВОтчетности = Значение(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
		|			ТОГДА СчетФактураВыданныйТовары.КоличествоПоРНПТУвеличение 
		|		ИНАЧЕ СчетФактураВыданныйТовары.КоличествоПоРНПТУменьшение
		|	КОНЕЦ КАК КолТовПросл,
		|   ВЫБОР 
		|		КОГДА ВТ_СопоставлениеСФОснований.Исправление И НЕ ВТ_СопоставлениеСФОснований.Корректировочный
		|		    ТОГДА СчетФактураВыданныйТовары.Сумма - СчетФактураВыданныйТовары.СуммаНДС
		|		КОГДА &ОтражениеВОтчетности = Значение(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
		|	        ТОГДА СчетФактураВыданныйТовары.СуммаУвеличение - СчетФактураВыданныйТовары.СуммаНДСУвеличение 
		|     ИНАЧЕ СчетФактураВыданныйТовары.СуммаУменьшение - СчетФактураВыданныйТовары.СуммаНДСУменьшение
		|   КОНЕЦ КАК СтоимТовПросл,
		|	Операции.КодОперации КАК КодОперации
		|ПОМЕСТИТЬ ВТ_КорректировкиРеализации
		|ИЗ
		|	РегистрСведений.ОперацииСПрослеживаемымиТоварами КАК Операции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СопоставлениеСФОснований КАК ВТ_СопоставлениеСФОснований
		|		ПО Операции.Регистратор = ВТ_СопоставлениеСФОснований.Документ
		|			И (ВТ_СопоставлениеСФОснований.Исправление ИЛИ (ВТ_СопоставлениеСФОснований.Документ ССЫЛКА Документ.КорректировкаРеализации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
		|		ПО (ВТ_СопоставлениеСФОснований.СчетФактура = СчетФактураВыданныйТовары.Ссылка)
		|			И Операции.ТипЗапасов = СчетФактураВыданныйТовары.ТипЗапасов
		|			И (СчетФактураВыданныйТовары.НомерГТД.ТипНомераГТД В (ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ), ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта)))
		|ГДЕ
		|	Операции.ОтражениеВОтчетности = &ОтражениеВОтчетности
		|	И Операции.Организация В(&Организация)
		|	И Операции.Активность
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Операции.Документ,
		|	Операции.ТипЗапасов,
		|	Операции.Организация, 
		|	Операции.ДатаОперации КАК ДатаОперации,
	    |	Операции.ТипДокумента КАК ТипДокумента,
	    |	Операции.Контрагент КАК Контрагент,
		|	СчетФактураВыданныйТовары.НомерГТД,
		|	СчетФактураВыданныйТовары.Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код,
		|	ВЫБОР
		|		КОГДА Операции.Исправление И НЕ Операции.Корректировочный 
		|		    ТОГДА СчетФактураВыданныйТовары.КоличествоПоРНПТ   
		|		КОГДА &ОтражениеВОтчетности = Значение(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
		|			ТОГДА СчетФактураВыданныйТовары.КоличествоПоРНПТУвеличение 
		|		ИНАЧЕ СчетФактураВыданныйТовары.КоличествоПоРНПТУменьшение
		|	КОНЕЦ,
		|   ВЫБОР 
		|     КОГДА Операции.Исправление И НЕ Операции.Корректировочный
		|		    ТОГДА СчетФактураВыданныйТовары.Сумма - СчетФактураВыданныйТовары.СуммаНДС
		|		КОГДА &ОтражениеВОтчетности = Значение(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
		|	        ТОГДА СчетФактураВыданныйТовары.СуммаУвеличение - СчетФактураВыданныйТовары.СуммаНДСУвеличение 
		|     ИНАЧЕ СчетФактураВыданныйТовары.СуммаУменьшение - СчетФактураВыданныйТовары.СуммаНДСУменьшение
		|   КОНЕЦ,
		|	Операции.КодОперации
		|ИЗ
		|	ВТ_КорректировкиРеализации_Предварительная КАК Операции
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
		|		ПО Операции.СчетФактура = СчетФактураВыданныйТовары.Ссылка
		|			И Операции.Номенклатура = СчетФактураВыданныйТовары.Номенклатура
		|			И Операции.РНПТ = СчетФактураВыданныйТовары.НомерГТД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_КорректировкиРеализации_Предварительная";
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьДанныеРНПТвОС(СтруктураПараметров)
	
	Если НЕ СтруктураПараметров.ЕстьРУиПА
		И НЕ СтруктураПараметров.ЕстьПУиПА
		И НЕ СтруктураПараметров.ЕстьВыкупАрендованныхОС
		И НЕ СтруктураПараметров.ЕстьСписанияОС Тогда
		Возврат;
	КонецЕсли;
	
	Разделитель = "
	|;
	|/////////////////////////////////////////////////////////////
	|";
	
	Запрос = СтруктураПараметров.Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_СписокДокументов.Документ КАК Документ,
	|	Операции.ТипЗапасов КАК ТипЗапасов, 
	|	Операции.Период КАК ДатаОперации, 
	|	Операции.КодОперации КАК КодОперации,
	|	Операции.ТипДокументаВПрослеживаемости КАК ТипДокумента,
	|	Операции.Контрагент КАК Контрагент,
	|	Операции.Организация КАК Организация,
	|	ПрослеживаемыеТоварыВСоставеОС.РНПТ КАК РегНомПросл,
	|	ПрослеживаемыеТоварыВСоставеОС.КодТНВЭД.ЕдиницаИзмерения.Код КАК ОКЕИ,
	|	ПрослеживаемыеТоварыВСоставеОС.ОсновноеСредство КАК ОсновноеСредство, 
	|	СУММА(ПрослеживаемыеТоварыВСоставеОС.КоличествоПоРНПТ) КАК Количество
	|ПОМЕСТИТЬ ВТ_РНПТвОС
	|ИЗ
	|	РегистрСведений.ОперацииСПрослеживаемымиТоварами КАК Операции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокДокументов КАК ВТ_СписокДокументов
	|		ПО Операции.Регистратор = ВТ_СписокДокументов.Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТоварыВСоставеОС КАК ПрослеживаемыеТоварыВСоставеОС
	|		ПО Операции.Регистратор = ПрослеживаемыеТоварыВСоставеОС.Регистратор
	|			И Операции.Организация = ПрослеживаемыеТоварыВСоставеОС.Организация
	|ГДЕ
	|	Операции.ОтражениеВОтчетности = &ОтражениеВОтчетности
	|	И Операции.Организация В(&Организация)
	|	И Операции.Активность
	|	И ПрослеживаемыеТоварыВСоставеОС.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СписокДокументов.Документ,
	|	Операции.ТипЗапасов,
	|	Операции.КодОперации,
	|	Операции.Период,
	|	Операции.ТипДокументаВПрослеживаемости,
	|	Операции.Контрагент,
	|	Операции.Организация,
	|	ПрослеживаемыеТоварыВСоставеОС.РНПТ,
	|	ПрослеживаемыеТоварыВСоставеОС.КодТНВЭД.ЕдиницаИзмерения.Код,
	|	ПрослеживаемыеТоварыВСоставеОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	РНПТ";
	
	Если СтруктураПараметров.ЕстьРУиПА Тогда
		
		Запрос.Текст = Запрос.Текст + Разделитель + 
		"ВЫБРАТЬ
		|	ВТ_РНПТвОС.Документ КАК Документ,
		|	ВТ_РНПТвОС.Организация КАК Организация,
		|	ВТ_РНПТвОС.КодОперации КАК КодОперации,
		|	ВТ_РНПТвОС.ТипЗапасов КАК ТипЗапасов,
		|	ВТ_РНПТвОС.ДатаОперации КАК ДатаОперации,
	    |	ВТ_РНПТвОС.ТипДокумента КАК ТипДокумента,
	    |	ВТ_РНПТвОС.Контрагент КАК Контрагент,
		|	ВТ_РНПТвОС.РегНомПросл КАК РегНомПросл,
		|	ВТ_РНПТвОС.ОКЕИ КАК ОКЕИ,
		|	ВТ_РНПТвОС.Количество КАК Количество,
		|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.ОсновноеСредство КАК ОсновноеСредство, 
		|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.СуммаПоРНПТ КАК СуммаПоРНПТПродажи,
		|	РеализацияУслугПрочихАктивовДоходы.Сумма КАК Сумма
		|ПОМЕСТИТЬ ВТ_РУиПА_Предварительная
		|ИЗ
		|	ВТ_РНПТвОС КАК ВТ_РНПТвОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.ПрослеживаемыеТовары КАК РеализацияУслугПрочихАктивовПрослеживаемыеТовары
		|		ПО ВТ_РНПТвОС.Документ = РеализацияУслугПрочихАктивовПрослеживаемыеТовары.Ссылка
		|			И ВТ_РНПТвОС.РегНомПросл = РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД
		|			И ВТ_РНПТвОС.ОсновноеСредство = РеализацияУслугПрочихАктивовПрослеживаемыеТовары.ОсновноеСредство
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Доходы КАК РеализацияУслугПрочихАктивовДоходы
		|		ПО (РеализацияУслугПрочихАктивовПрослеживаемыеТовары.Ссылка = РеализацияУслугПрочихАктивовДоходы.Ссылка)
		|			И (РеализацияУслугПрочихАктивовПрослеживаемыеТовары.ОсновноеСредство = РеализацияУслугПрочихАктивовДоходы.АналитикаДоходов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_РУиПА_Предварительная.Документ КАК Документ,
		|	ВТ_РУиПА_Предварительная.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(ВТ_РУиПА_Предварительная.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТ_РУиПА_БазаРаспределения
		|ИЗ
		|	ВТ_РУиПА_Предварительная КАК ВТ_РУиПА_Предварительная
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_РУиПА_Предварительная.Документ,
		|	ВТ_РУиПА_Предварительная.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_РУиПА_Предварительная.Документ КАК Документ,
		|	ВТ_РУиПА_Предварительная.Организация КАК Организация,
		|	ВТ_РУиПА_Предварительная.КодОперации КАК КодОперации,
		|	ВТ_РУиПА_Предварительная.ТипЗапасов КАК ТипЗапасов,  
		|	ВТ_РУиПА_Предварительная.ДатаОперации КАК ДатаОперации,
	    |	ВТ_РУиПА_Предварительная.ТипДокумента КАК ТипДокумента,
	    |	ВТ_РУиПА_Предварительная.Контрагент КАК Контрагент,
		|	ВТ_РУиПА_Предварительная.РегНомПросл КАК РегНомПросл,   
		|	ВТ_РУиПА_Предварительная.ОКЕИ КАК ОКЕИ,
		|	ВТ_РУиПА_Предварительная.Количество КАК КолТовПросл,
        |	ВЫБОР
		|		КОГДА ВТ_РУиПА_Предварительная.СуммаПоРНПТПродажи <> 0    
		|			ТОГДА ВТ_РУиПА_Предварительная.СуммаПоРНПТПродажи
		|		КОГДА ВТ_РУиПА_БазаРаспределения.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВТ_РУиПА_Предварительная.Сумма / ВТ_РУиПА_БазаРаспределения.Количество * ВТ_РУиПА_Предварительная.Количество
		|	КОНЕЦ КАК СтоимТовПросл		
		|ПОМЕСТИТЬ ВТ_РУиПА
		|ИЗ
		|	ВТ_РУиПА_Предварительная КАК ВТ_РУиПА_Предварительная
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РУиПА_БазаРаспределения КАК ВТ_РУиПА_БазаРаспределения
		|		ПО ВТ_РУиПА_Предварительная.Документ = ВТ_РУиПА_БазаРаспределения.Документ
		|			И ВТ_РУиПА_Предварительная.ОсновноеСредство = ВТ_РУиПА_БазаРаспределения.ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_РУиПА_Предварительная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_РУиПА_БазаРаспределения";
			
	КонецЕсли;
	
	Если СтруктураПараметров.ЕстьПУиПА Тогда
	
		Запрос.Текст = Запрос.Текст + Разделитель +
		"ВЫБРАТЬ
		|	ВТ_РНПТвОС.Документ КАК Документ,
		|	ВТ_РНПТвОС.Организация КАК Организация, 
		|	ВТ_РНПТвОС.КодОперации КАК КодОперации, 
		|	ВТ_РНПТвОС.ТипЗапасов КАК ТипЗапасов,
		|	ВТ_РНПТвОС.ДатаОперации КАК ДатаОперации,
	    |	ВТ_РНПТвОС.ТипДокумента КАК ТипДокумента,
	    |	ВТ_РНПТвОС.Контрагент КАК Контрагент,
		|	ВТ_РНПТвОС.РегНомПросл КАК РегНомПросл,
		|	ВТ_РНПТвОС.ОКЕИ КАК ОКЕИ,
		|	ВТ_РНПТвОС.Количество КАК КолТовПросл, 
		|	ВЫБОР
		|		КОГДА ВТ_РНПТвОС.РегНомПросл.СуммаПоРНПТ <> 0 
		|			ТОГДА ВТ_РНПТвОС.РегНомПросл.СуммаПоРНПТ * ВТ_РНПТвОС.Количество
		|		ИНАЧЕ СуммыДокументовВВалютахУчета.СуммаБезНДСРегл
		|	КОНЕЦ КАК СтоимТовПросл
		|ПОМЕСТИТЬ ВТ_ПУиПА
		|ИЗ
		|	ВТ_РНПТвОС КАК ВТ_РНПТвОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК ПриобретениеУслугПрочихАктивовРасходы
		|		ПО ВТ_РНПТвОС.Документ = ПриобретениеУслугПрочихАктивовРасходы.Ссылка
		|			И ВТ_РНПТвОС.РегНомПросл = ПриобретениеУслугПрочихАктивовРасходы.НомерГТД
		|			И ВТ_РНПТвОС.ОсновноеСредство = ПриобретениеУслугПрочихАктивовРасходы.АналитикаРасходов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
		|		ПО (ПриобретениеУслугПрочихАктивовРасходы.Ссылка = СуммыДокументовВВалютахУчета.Регистратор)
		|			И (ПриобретениеУслугПрочихАктивовРасходы.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки)";
	
	КонецЕсли;
	
	Если СтруктураПараметров.ЕстьВыкупАрендованныхОС Тогда
		
		Запрос.Текст = Запрос.Текст + Разделитель + 
		"ВЫБРАТЬ
		|	ВТ_РНПТвОС.Документ КАК Документ,
		|	ВТ_РНПТвОС.Организация КАК Организация,
		|	ВТ_РНПТвОС.ТипЗапасов КАК ТипЗапасов, 
		|	ВТ_РНПТвОС.ДатаОперации КАК ДатаОперации,
	    |	ВТ_РНПТвОС.ТипДокумента КАК ТипДокумента,
	    |	ВТ_РНПТвОС.КодОперации КАК КодОперации,
	    |	ВТ_РНПТвОС.Контрагент КАК Контрагент,
		|	ВТ_РНПТвОС.РегНомПросл КАК РегНомПросл,
		|	ВТ_РНПТвОС.ОКЕИ КАК ОКЕИ,
		|	ВТ_РНПТвОС.Количество КАК Количество,
		|	ВыкупАрендованныхОСПрослеживаемыеТовары.ОсновноеСредство КАК ОсновноеСредство,
		|	ВТ_РНПТвОС.РегНомПросл.СуммаПоРНПТ КАК СтоимТовПросл, 
		|	СуммыДокументовВВалютахУчета.СуммаБезНДСРегл КАК Сумма
		|ПОМЕСТИТЬ ВТ_ВыкупАрендованныхОС_Предварительная
		|ИЗ
		|	ВТ_РНПТвОС КАК ВТ_РНПТвОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыкупАрендованныхОС.ПрослеживаемыеТовары КАК ВыкупАрендованныхОСПрослеживаемыеТовары
		|		ПО ВТ_РНПТвОС.Документ = ВыкупАрендованныхОСПрослеживаемыеТовары.Ссылка
		|			И ВТ_РНПТвОС.РегНомПросл = ВыкупАрендованныхОСПрослеживаемыеТовары.НомерГТД
		|			И ВТ_РНПТвОС.ОсновноеСредство = ВыкупАрендованныхОСПрослеживаемыеТовары.ОсновноеСредство
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыкупАрендованныхОС.ОС КАК ВыкупАрендованныхОСОС
		|		ПО (ВыкупАрендованныхОСПрослеживаемыеТовары.Ссылка = ВыкупАрендованныхОСОС.Ссылка)
		|			И (ВыкупАрендованныхОСПрослеживаемыеТовары.ОсновноеСредство = ВыкупАрендованныхОСОС.ОсновноеСредство) 
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
		|		ПО (ВыкупАрендованныхОСОС.Ссылка = СуммыДокументовВВалютахУчета.Регистратор)
		|			И (ВыкупАрендованныхОСОС.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВыкупАрендованныхОС_Предварительная.Документ КАК Документ,
		|	ВТ_ВыкупАрендованныхОС_Предварительная.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(ВТ_ВыкупАрендованныхОС_Предварительная.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТ_ВыкупАрендованныхОС_БазаРаспределения
		|ИЗ
		|	ВТ_ВыкупАрендованныхОС_Предварительная КАК ВТ_ВыкупАрендованныхОС_Предварительная
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВыкупАрендованныхОС_Предварительная.Документ,
		|	ВТ_ВыкупАрендованныхОС_Предварительная.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВыкупАрендованныхОС_Предварительная.Документ КАК Документ,
		|	ВТ_ВыкупАрендованныхОС_Предварительная.КодОперации КАК КодОперации,
		|	ВТ_ВыкупАрендованныхОС_Предварительная.Организация КАК Организация,
		|	ВТ_ВыкупАрендованныхОС_Предварительная.ТипЗапасов КАК ТипЗапасов, 
		|	ВТ_ВыкупАрендованныхОС_Предварительная.ДатаОперации КАК ДатаОперации,
	    |	ВТ_ВыкупАрендованныхОС_Предварительная.ТипДокумента КАК ТипДокумента,
	    |	ВТ_ВыкупАрендованныхОС_Предварительная.Контрагент КАК Контрагент,
		|	ВТ_ВыкупАрендованныхОС_Предварительная.РегНомПросл КАК РегНомПросл,
		|	ВТ_ВыкупАрендованныхОС_Предварительная.ОКЕИ КАК ОКЕИ,
		|	ВТ_ВыкупАрендованныхОС_Предварительная.Количество КАК КолТовПросл,
		|	ВЫБОР  
		|		КОГДА ВТ_ВыкупАрендованныхОС_Предварительная.СтоимТовПросл <> 0
		|			ТОГДА ВТ_ВыкупАрендованныхОС_Предварительная.СтоимТовПросл
		|		КОГДА ВТ_ВыкупАрендованныхОС_БазаРаспределения.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВТ_ВыкупАрендованныхОС_Предварительная.Сумма / ВТ_ВыкупАрендованныхОС_БазаРаспределения.Количество * ВТ_ВыкупАрендованныхОС_Предварительная.Количество
		|	КОНЕЦ КАК СтоимТовПросл
		|ПОМЕСТИТЬ ВТ_ВыкупАрендованныхОС
		|ИЗ
		|	ВТ_ВыкупАрендованныхОС_Предварительная КАК ВТ_ВыкупАрендованныхОС_Предварительная
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыкупАрендованныхОС_БазаРаспределения КАК ВТ_ВыкупАрендованныхОС_БазаРаспределения
		|		ПО ВТ_ВыкупАрендованныхОС_Предварительная.Документ = ВТ_ВыкупАрендованныхОС_БазаРаспределения.Документ
		|			И ВТ_ВыкупАрендованныхОС_Предварительная.ОсновноеСредство = ВТ_ВыкупАрендованныхОС_БазаРаспределения.ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ВыкупАрендованныхОС_Предварительная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ВыкупАрендованныхОС_БазаРаспределения";
	КонецЕсли; 
	
	Если СтруктураПараметров.ЕстьСписанияОС Тогда
		
		Запрос.Текст = Запрос.Текст + Разделитель + 
		"ВЫБРАТЬ
		|	ВТ_РНПТвОС.Документ КАК Документ,
		|	ВТ_РНПТвОС.Организация КАК Организация,
		|	ВТ_РНПТвОС.ТипЗапасов КАК ТипЗапасов,
		|	ВТ_РНПТвОС.ДатаОперации КАК ДатаОперации, 
		|	ВТ_РНПТвОС.КодОперации КАК КодОперации,
		|	ВТ_РНПТвОС.ТипДокумента КАК ТипДокумента,
		|	ВТ_РНПТвОС.Контрагент КАК Контрагент,
		|	ВТ_РНПТвОС.РегНомПросл КАК РегНомПросл,
		|	ВТ_РНПТвОС.ОКЕИ КАК ОКЕИ,
		|	ВТ_РНПТвОС.Количество КАК Количество,
		|	СписаниеОСПрослеживаемыеТовары.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(ВЫБОР
		|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -ЕСТЬNULL(ПрочиеРасходы.СуммаРегл, 0)
		|			ИНАЧЕ ЕСТЬNULL(ПрочиеРасходы.СуммаРегл, 0)
		|		КОНЕЦ) КАК Сумма
		|ПОМЕСТИТЬ ВТ_СписаниеОС_Предварительная
		|ИЗ
		|	ВТ_РНПТвОС КАК ВТ_РНПТвОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4.ПрослеживаемыеТовары КАК СписаниеОСПрослеживаемыеТовары
		|		ПО ВТ_РНПТвОС.Документ = СписаниеОСПрослеживаемыеТовары.Ссылка
		|			И ВТ_РНПТвОС.РегНомПросл = СписаниеОСПрослеживаемыеТовары.НомерГТД
		|			И ВТ_РНПТвОС.ОсновноеСредство = СписаниеОСПрослеживаемыеТовары.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
		|		ПО (СписаниеОСПрослеживаемыеТовары.Ссылка = ПрочиеРасходы.Регистратор)
		|			И (СписаниеОСПрослеживаемыеТовары.ОсновноеСредство = ПрочиеРасходы.АналитикаРасходов)
		|			И (ПрочиеРасходы.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС))
		|			И (ПрочиеРасходы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиОС)
		|				ИЛИ ПрочиеРасходы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеАмортизацииОС))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_РНПТвОС.Количество,
		|	ВТ_РНПТвОС.ДатаОперации, 
		|	ВТ_РНПТвОС.КодОперации,
		|	ВТ_РНПТвОС.РегНомПросл.СуммаПоРНПТ,
		|	ВТ_РНПТвОС.Организация,
		|	ВТ_РНПТвОС.Контрагент,
		|	ВТ_РНПТвОС.РегНомПросл,
		|	ВТ_РНПТвОС.ТипЗапасов,
		|	СписаниеОСПрослеживаемыеТовары.ОсновноеСредство,
		|	ВТ_РНПТвОС.ОКЕИ,
		|	ВТ_РНПТвОС.ТипДокумента,
		|	ВТ_РНПТвОС.Документ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СписаниеОС_Предварительная.Документ КАК Документ,
		|	ВТ_СписаниеОС_Предварительная.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(ВТ_СписаниеОС_Предварительная.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТ_СписаниеОС_БазаРаспределения
		|ИЗ
		|	ВТ_СписаниеОС_Предварительная КАК ВТ_СписаниеОС_Предварительная
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_СписаниеОС_Предварительная.Документ,
		|	ВТ_СписаниеОС_Предварительная.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_СписаниеОС_Предварительная.Документ КАК Документ,
		|	ВТ_СписаниеОС_Предварительная.Организация КАК Организация,
		|	ВТ_СписаниеОС_Предварительная.ТипЗапасов КАК ТипЗапасов,
		|	ВТ_СписаниеОС_Предварительная.ДатаОперации КАК ДатаОперации,
		|	ВТ_СписаниеОС_Предварительная.ТипДокумента КАК ТипДокумента,
		|	ВТ_СписаниеОС_Предварительная.Контрагент КАК Контрагент,
		|	ВТ_СписаниеОС_Предварительная.РегНомПросл КАК РегНомПросл,
		|	ВТ_СписаниеОС_Предварительная.ОКЕИ КАК ОКЕИ,  
		|	ВТ_СписаниеОС_Предварительная.КодОперации КАК КодОперации,
		|	ВТ_СписаниеОС_Предварительная.Количество КАК КолТовПросл,
		|	ВЫБОР
		|		КОГДА НЕ ВЫРАЗИТЬ(ВТ_СписаниеОС_Предварительная.РегНомПросл КАК Справочник.НомераГТД).НаименованиеТовара = """"
		|			ТОГДА ВЫРАЗИТЬ(ВТ_СписаниеОС_Предварительная.РегНомПросл КАК Справочник.НомераГТД).НаименованиеТовара
		|		ИНАЧЕ ВТ_СписаниеОС_Предварительная.ОсновноеСредство.Наименование
		|	КОНЕЦ КАК НаименованиеТовара,
		|	ВЫБОР
		|		КОГДА ВТ_СписаниеОС_БазаРаспределения.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВТ_СписаниеОС_Предварительная.Сумма / ВТ_СписаниеОС_БазаРаспределения.Количество * ВТ_СписаниеОС_Предварительная.Количество
		|	КОНЕЦ КАК СтоимТовПросл
		|ПОМЕСТИТЬ ВТ_СписаниеОС
		|ИЗ
		|	ВТ_СписаниеОС_Предварительная КАК ВТ_СписаниеОС_Предварительная
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СписаниеОС_БазаРаспределения КАК ВТ_СписаниеОС_БазаРаспределения
		|		ПО ВТ_СписаниеОС_Предварительная.Документ = ВТ_СписаниеОС_БазаРаспределения.Документ
		|			И ВТ_СписаниеОС_Предварительная.ОсновноеСредство = ВТ_СписаниеОС_БазаРаспределения.ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_СписаниеОС_Предварительная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_СписаниеОС_БазаРаспределения";
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПолучитьДанныеРНПТТМЦВЭксплуатации(СтруктураПараметров)
	
	Если НЕ СтруктураПараметров.ЕстьСписанияИзЭксплуатации Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = СтруктураПараметров.Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокДокументов.Документ КАК Документ,
	|	Операции.ТипЗапасов КАК ТипЗапасов,
	|	Операции.Период КАК ДатаОперации,
	|	Операции.КодОперации КАК КодОперации,
	|	Операции.ТипДокументаВПрослеживаемости КАК ТипДокумента,
	|	Операции.Контрагент КАК Контрагент,
	|	Операции.Организация КАК Организация,
	|	ТМЦВЭксплуатации.НомерГТД КАК РегНомПросл,
	|	ТМЦВЭксплуатации.Номенклатура КАК Номенклатура,
	|	ТМЦВЭксплуатации.Характеристика КАК Характеристика,
	|	ТМЦВЭксплуатации.Серия КАК Серия,
	|	ТМЦВЭксплуатации.Партия КАК Партия,
	|	ТМЦВЭксплуатации.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	СУММА(ТМЦВЭксплуатации.КоличествоПоРНПТ) КАК КолТовПросл
	|ПОМЕСТИТЬ ВТ_ТМЦВЭксплуатации_Предварительная
	|ИЗ
	|	РегистрСведений.ОперацииСПрослеживаемымиТоварами КАК Операции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокДокументов КАК СписокДокументов
	|		ПО Операции.Регистратор = СписокДокументов.Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТМЦВЭксплуатации КАК ТМЦВЭксплуатации
	|		ПО Операции.Регистратор = ТМЦВЭксплуатации.Регистратор
	|			И Операции.Организация = ТМЦВЭксплуатации.Организация
	|			И (ТМЦВЭксплуатации.НомерГТД.ТипНомераГТД В (ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ), ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта)))
	|ГДЕ
	|	Операции.ОтражениеВОтчетности = &ОтражениеВОтчетности
	|	И Операции.Организация В(&Организация)
	|	И Операции.Активность
	|	И ТМЦВЭксплуатации.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокДокументов.Документ,
	|	Операции.Организация,
	|	Операции.КодОперации,
	|	ТМЦВЭксплуатации.НомерГТД,
	|	Операции.ТипЗапасов,
	|	Операции.Период,
	|	Операции.ТипДокументаВПрослеживаемости,
	|	Операции.Контрагент,
	|	ТМЦВЭксплуатации.Номенклатура,
	|	ТМЦВЭксплуатации.Характеристика,
	|	ТМЦВЭксплуатации.Серия,
	|	ТМЦВЭксплуатации.Партия,
	|	ТМЦВЭксплуатации.ИнвентарныйНомер
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	ИнвентарныйНомер,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьТМЦ.Организация КАК Организация,
	|	СтоимостьТМЦ.Номенклатура КАК Номенклатура,
	|	СтоимостьТМЦ.Характеристика КАК Характеристика,
	|	СтоимостьТМЦ.Серия КАК Серия,
	|	СтоимостьТМЦ.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	СтоимостьТМЦ.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА СУММА(СтоимостьТМЦ.Количество) <> 0
	|			ТОГДА СУММА(СтоимостьТМЦ.СтоимостьРегл) / СУММА(СтоимостьТМЦ.Количество)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЦенаРегл
	|ПОМЕСТИТЬ СтоимостьТМЦ
	|ИЗ
	|	РегистрСведений.СтоимостьТМЦВЭксплуатации КАК СтоимостьТМЦ
	|ГДЕ
	|	СтоимостьТМЦ.Активность
	|	И (СтоимостьТМЦ.Организация, СтоимостьТМЦ.Номенклатура, СтоимостьТМЦ.Характеристика, СтоимостьТМЦ.Серия, СтоимостьТМЦ.ИнвентарныйНомер, СтоимостьТМЦ.Партия) В
	|			(ВЫБРАТЬ
	|				ТМЦВЭксплуатации.Организация,
	|				ТМЦВЭксплуатации.Номенклатура,
	|				ТМЦВЭксплуатации.Характеристика,
	|				ТМЦВЭксплуатации.Серия,
	|				ТМЦВЭксплуатации.ИнвентарныйНомер,
	|				ТМЦВЭксплуатации.Партия
	|			ИЗ
	|				ВТ_ТМЦВЭксплуатации_Предварительная КАК ТМЦВЭксплуатации)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьТМЦ.Организация,
	|	СтоимостьТМЦ.Номенклатура,
	|	СтоимостьТМЦ.Характеристика,
	|	СтоимостьТМЦ.Серия,
	|	СтоимостьТМЦ.ИнвентарныйНомер,
	|	СтоимостьТМЦ.Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	ИнвентарныйНомер,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТМЦВЭксплуатации_Предварительная.Документ КАК Документ,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.КодОперации КАК КодОперации,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.Номенклатура КАК Номенклатура,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.ДатаОперации КАК ДатаОперации,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.ТипДокумента КАК ТипДокумента,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.Контрагент КАК Контрагент,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.Организация КАК Организация,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.РегНомПросл КАК РегНомПросл,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код КАК ОКЕИ,
	|	СУММА(ВТ_ТМЦВЭксплуатации_Предварительная.КолТовПросл) КАК КолТовПросл,
	|	СУММА(ВТ_ТМЦВЭксплуатации_Предварительная.КолТовПросл * ЕСТЬNULL(СтоимостьТМЦ.ЦенаРегл, 0)) КАК СтоимТовПросл
	|ПОМЕСТИТЬ ВТ_ТМЦВЭксплуатации
	|ИЗ
	|	ВТ_ТМЦВЭксплуатации_Предварительная КАК ВТ_ТМЦВЭксплуатации_Предварительная
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьТМЦ КАК СтоимостьТМЦ
	|		ПО ВТ_ТМЦВЭксплуатации_Предварительная.Организация = СтоимостьТМЦ.Организация
	|			И ВТ_ТМЦВЭксплуатации_Предварительная.Номенклатура = СтоимостьТМЦ.Номенклатура
	|			И ВТ_ТМЦВЭксплуатации_Предварительная.Характеристика = СтоимостьТМЦ.Характеристика
	|			И ВТ_ТМЦВЭксплуатации_Предварительная.Серия = СтоимостьТМЦ.Серия
	|			И ВТ_ТМЦВЭксплуатации_Предварительная.ИнвентарныйНомер = СтоимостьТМЦ.ИнвентарныйНомер
	|			И ВТ_ТМЦВЭксплуатации_Предварительная.Партия = СтоимостьТМЦ.Партия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТМЦВЭксплуатации_Предварительная.Документ,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.КодОперации,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.ТипЗапасов,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.Номенклатура,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.ДатаОперации,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.ТипДокумента,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.Контрагент,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.Организация,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.РегНомПросл,
	|	ВТ_ТМЦВЭксплуатации_Предварительная.Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТМЦВЭксплуатации_Предварительная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СтоимостьТМЦ";
		
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПолучитьДанныеРНПТЗаписиКнигиПродаж(СтруктураПараметров)
	
	Если НЕ СтруктураПараметров.ЕстьЗаписиКнигиПродаж Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = СтруктураПараметров.Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокДокументов.Документ КАК Документ,
	|	Операции.ТипЗапасов КАК ТипЗапасов,
	|	Операции.Организация КАК Организация,
	|	Операции.Период КАК ДатаОперации,
	|	Операции.ТипДокументаВПрослеживаемости КАК ТипДокумента,
	|	Операции.Контрагент КАК Контрагент,
	|	ЗаписьКнигиПродажЦенности.НомерГТД КАК РегНомПросл,
	|	ЗаписьКнигиПродажЦенности.КодТНВЭД.ЕдиницаИзмерения.Код КАК ОКЕИ,
	|	ЗаписьКнигиПродажЦенности.КоличествоПоРНПТ КАК КолТовПросл,
	|	ВЫБОР
	|		КОГДА СуммыДокументовВВалютахУчета.СуммаБезНДСРегл < 0
	|			ТОГДА -СуммыДокументовВВалютахУчета.СуммаБезНДСРегл
	|		ИНАЧЕ СуммыДокументовВВалютахУчета.СуммаБезНДСРегл
	|	КОНЕЦ КАК СтоимТовПросл,
	|	Операции.КодОперации КАК КодОперации
	|ПОМЕСТИТЬ ВТ_ЗаписиКнигиПродаж
	|ИЗ
	|	РегистрСведений.ОперацииСПрослеживаемымиТоварами КАК Операции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокДокументов КАК СписокДокументов
	|		ПО Операции.Регистратор = СписокДокументов.Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаписьКнигиПродаж.Ценности КАК ЗаписьКнигиПродажЦенности
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|			ПО ЗаписьКнигиПродажЦенности.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
	|				И ЗаписьКнигиПродажЦенности.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|		ПО Операции.Регистратор = ЗаписьКнигиПродажЦенности.Ссылка
	|			И (ЗаписьКнигиПродажЦенности.НомерГТД.ТипНомераГТД В (ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ), ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта)))
	|ГДЕ
	|	Операции.ОтражениеВОтчетности = &ОтражениеВОтчетности
	|	И Операции.Организация В(&Организация)
	|	И Операции.Активность";
		
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();

КонецПроцедуры 

Процедура ПолучитьДанныеРНПТОтчетаКомитентуОПродажах(СтруктураПараметров)
	
	Если НЕ СтруктураПараметров.ЕстьОтчетКомитентуОЗакупках Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = СтруктураПараметров.Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокДокументов.Документ КАК Документ,
	|	СчетФактураВыданный.Организация КАК Организация,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО КАК ДатаОперации,
	|	НЕОПРЕДЕЛЕНО КАК ТипДокумента,
	|	СчетФактураВыданный.Контрагент КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК ТипЗапасов,
	|	СУММА(ТаблицаТовары.КоличествоПоРНПТ) КАК КолТовПросл,
	|	""27"" КАК КодОперации,
	|	ТаблицаТовары.ЕдиницаИзмерения.Код КАК ОКЕИ,
	|	ТаблицаТовары.НомерГТД КАК РегНомПросл,
	|	ТаблицаТовары.КодТНВЭД КАК КодТНВЭД,
	|	СУММА(ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС) КАК СтоимТовПросл
	|ПОМЕСТИТЬ ВТ_ОтчетКомитентуОЗакупках
	|ИЗ
	|	Документ.СчетФактураВыданный.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ПО ТаблицаТовары.Ссылка = СчетФактураВыданный.Ссылка 
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокДокументов КАК СписокДокументов
	|		ПО СчетФактураВыданный.ДокументОснование = СписокДокументов.Документ
	|ГДЕ
	|	СчетФактураВыданный.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СчетФактураВыданный.Организация В(&Организация)
	|	И СчетФактураВыданный.Проведен
	|	И СчетФактураВыданный.Перевыставленный
	|	И ТаблицаТовары.НомерГТД.ТипНомераГТД В (ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ), 
	|                            ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.НомерГТД,
	|	СчетФактураВыданный.Контрагент,
	|	СписокДокументов.Документ,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.КодТНВЭД,
	|	СчетФактураВыданный.Организация";
		
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПолучитьИтоговыеДанныеРНПТ(СтруктураПараметров)
	
	Запрос = СтруктураПараметров.Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	вт_ПокупкиПродажи.Документ КАК Документ,
	|	вт_ПокупкиПродажи.ТипЗапасов КАК ТипЗапасов,
	|	вт_ПокупкиПродажи.ДатаОперации КАК ДатаОперации,
	|	вт_ПокупкиПродажи.ТипДокумента КАК ТипДокумента,
	|	вт_ПокупкиПродажи.Контрагент КАК Контрагент,
	|	вт_ПокупкиПродажи.Организация КАК Организация,
	|	вт_ПокупкиПродажи.Номенклатура.НаименованиеПолное КАК НаименованиеТовара,
	|	вт_ПокупкиПродажи.РегНомПросл КАК РНПТ,
	|	вт_ПокупкиПродажи.ОКЕИ КАК ОКЕИ,
	|	вт_ПокупкиПродажи.КолТовПросл КАК КоличествоРНПТ,
	|	ВЫРАЗИТЬ(вт_ПокупкиПродажи.СтоимТовПросл КАК ЧИСЛО(15, 0)) КАК СуммаБезНДС,
	|	вт_ПокупкиПродажи.КодОперации
	|ПОМЕСТИТЬ ДанныеРНПТ_Предварительная
	|ИЗ
	|	вт_ПокупкиПродажи КАК вт_ПокупкиПродажи";
	
	Если СтруктураПараметров.ЕстьКорректировкиПриобретения Тогда
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_КорректировкиПриобретения.Документ,
		|	ВТ_КорректировкиПриобретения.ТипЗапасов, 
		|	ВТ_КорректировкиПриобретения.ДатаОперации,
	    |	ВТ_КорректировкиПриобретения.ТипДокумента,
	    |	ВТ_КорректировкиПриобретения.Контрагент,
		|	ВТ_КорректировкиПриобретения.Организация,
		|	"""" КАК НаименованиеТовара, 
		|	ВТ_КорректировкиПриобретения.РегНомПросл,
		|	ВТ_КорректировкиПриобретения.ОКЕИ,
		|	ВТ_КорректировкиПриобретения.КолТовПросл,
		|	ВЫРАЗИТЬ(ВТ_КорректировкиПриобретения.СтоимТовПросл КАК ЧИСЛО(15, 0)),
		|	ВТ_КорректировкиПриобретения.КодОперации
		|ИЗ
		|	ВТ_КорректировкиПриобретения КАК ВТ_КорректировкиПриобретения";
	КонецЕсли;
	
	Если СтруктураПараметров.ЕстьКорректировкиРеализации Тогда
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_КорректировкиРеализации.Документ,
		|	ВТ_КорректировкиРеализации.ТипЗапасов,  
		|	ВТ_КорректировкиРеализации.ДатаОперации,
	    |	ВТ_КорректировкиРеализации.ТипДокумента,
	    |	ВТ_КорректировкиРеализации.Контрагент,
		|	ВТ_КорректировкиРеализации.Организация,
		|	"""" КАК НаименованиеТовара, 
		|	ВТ_КорректировкиРеализации.РегНомПросл,
		|	ВТ_КорректировкиРеализации.ОКЕИ,
		|	ВТ_КорректировкиРеализации.КолТовПросл,
		|	ВЫБОР 
		|      КОГДА ВТ_КорректировкиРеализации.СтоимТовПросл < 0
		|	       ТОГДА  ВЫРАЗИТЬ(-ВТ_КорректировкиРеализации.СтоимТовПросл КАК ЧИСЛО(15, 0)) 
		|	   ИНАЧЕ ВЫРАЗИТЬ(ВТ_КорректировкиРеализации.СтоимТовПросл КАК ЧИСЛО(15, 0))	   
        |   КОНЕЦ,
		|	ВТ_КорректировкиРеализации.КодОперации
		|ИЗ
		|	ВТ_КорректировкиРеализации КАК ВТ_КорректировкиРеализации
		|ГДЕ
		|   ВТ_КорректировкиРеализации.КолТовПросл <> 0 ИЛИ ВЫРАЗИТЬ(ВТ_КорректировкиРеализации.СтоимТовПросл КАК ЧИСЛО(15, 0)) <> 0";
	КонецЕсли;
	
	Если СтруктураПараметров.ЕстьРУиПА Тогда
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_РУиПА.Документ,
		|	ВТ_РУиПА.ТипЗапасов,  
		|	ВТ_РУиПА.ДатаОперации,
	    |	ВТ_РУиПА.ТипДокумента,
	    |	ВТ_РУиПА.Контрагент,
		|	ВТ_РУиПА.Организация, 
		|	"""" КАК НаименованиеТовара, 
		|	ВТ_РУиПА.РегНомПросл,
		|	ВТ_РУиПА.ОКЕИ,
		|	ВТ_РУиПА.КолТовПросл,
		|	ВЫРАЗИТЬ(ВТ_РУиПА.СтоимТовПросл КАК ЧИСЛО(15, 0)),
		|   ВТ_РУиПА.КодОперации
		|ИЗ
		|	ВТ_РУиПА КАК ВТ_РУиПА";
	КонецЕсли;
	
	Если СтруктураПараметров.ЕстьПУиПА Тогда
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ПУиПА.Документ, 
		|	ВТ_ПУиПА.ТипЗапасов, 
		|	ВТ_ПУиПА.ДатаОперации,
	    |	ВТ_ПУиПА.ТипДокумента,
	    |	ВТ_ПУиПА.Контрагент,
		|	ВТ_ПУиПА.Организация,
		|	"""" КАК НаименованиеТовара, 
		|	ВТ_ПУиПА.РегНомПросл,
		|	ВТ_ПУиПА.ОКЕИ,
		|	ВТ_ПУиПА.КолТовПросл,
		|	ВЫРАЗИТЬ(ВТ_ПУиПА.СтоимТовПросл КАК ЧИСЛО(15, 0)),
		|	ВТ_ПУиПА.КодОперации
		|ИЗ
		|	ВТ_ПУиПА КАК ВТ_ПУиПА";
	КонецЕсли;
	
	Если СтруктураПараметров.ЕстьВыкупАрендованныхОС Тогда
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ВыкупАрендованныхОС.Документ,
		|	ВТ_ВыкупАрендованныхОС.ТипЗапасов,
		|	ВТ_ВыкупАрендованныхОС.ДатаОперации,
	    |	ВТ_ВыкупАрендованныхОС.ТипДокумента,
	    |	ВТ_ВыкупАрендованныхОС.Контрагент,
		|	ВТ_ВыкупАрендованныхОС.Организация, 
		|	"""" КАК НаименованиеТовара, 
		|	ВТ_ВыкупАрендованныхОС.РегНомПросл,
		|	ВТ_ВыкупАрендованныхОС.ОКЕИ,
		|	ВТ_ВыкупАрендованныхОС.КолТовПросл,
		|	ВЫРАЗИТЬ(ВТ_ВыкупАрендованныхОС.СтоимТовПросл КАК ЧИСЛО(15, 0)),
		|	ВТ_ВыкупАрендованныхОС.КодОперации
		|ИЗ
		|	ВТ_ВыкупАрендованныхОС КАК ВТ_ВыкупАрендованныхОС";
	КонецЕсли; 
	
	Если СтруктураПараметров.ЕстьСписанияОС Тогда
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_СписаниеОС.Документ,
		|	ВТ_СписаниеОС.ТипЗапасов,
		|	ВТ_СписаниеОС.ДатаОперации,
	    |	ВТ_СписаниеОС.ТипДокумента,
	    |	ВТ_СписаниеОС.Контрагент,
		|	ВТ_СписаниеОС.Организация,
		|	ВТ_СписаниеОС.НаименованиеТовара,
		|	ВТ_СписаниеОС.РегНомПросл,
		|	ВТ_СписаниеОС.ОКЕИ,
		|	ВТ_СписаниеОС.КолТовПросл,
		|	ВЫРАЗИТЬ(ВТ_СписаниеОС.СтоимТовПросл КАК ЧИСЛО(15, 0)),
		|	ВТ_СписаниеОС.КодОперации
		|ИЗ
		|	ВТ_СписаниеОС КАК ВТ_СписаниеОС";
	КонецЕсли;
	
	Если СтруктураПараметров.ЕстьСписанияИзЭксплуатации Тогда
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ТМЦВЭксплуатации.Документ,
		|	ВТ_ТМЦВЭксплуатации.ТипЗапасов, 
		|	ВТ_ТМЦВЭксплуатации.ДатаОперации,
	    |	ВТ_ТМЦВЭксплуатации.ТипДокумента,
	    |	ВТ_ТМЦВЭксплуатации.Контрагент,
		|	ВТ_ТМЦВЭксплуатации.Организация, 
		|	ВТ_ТМЦВЭксплуатации.Номенклатура.НаименованиеПолное, 
		|	ВТ_ТМЦВЭксплуатации.РегНомПросл,
		|	ВТ_ТМЦВЭксплуатации.ОКЕИ,
		|	ВТ_ТМЦВЭксплуатации.КолТовПросл,
		|	ВЫРАЗИТЬ(ВТ_ТМЦВЭксплуатации.СтоимТовПросл КАК ЧИСЛО(15, 0)),
		|	ВТ_ТМЦВЭксплуатации.КодОперации
		|ИЗ
		|	ВТ_ТМЦВЭксплуатации КАК ВТ_ТМЦВЭксплуатации";
	КонецЕсли;
	
	Если СтруктураПараметров.ЕстьЗаписиКнигиПродаж Тогда
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ЗаписиКнигиПродаж.Документ,
		|	ВТ_ЗаписиКнигиПродаж.ТипЗапасов,
		|	ВТ_ЗаписиКнигиПродаж.ДатаОперации,
	    |	ВТ_ЗаписиКнигиПродаж.ТипДокумента,
	    |	ВТ_ЗаписиКнигиПродаж.Контрагент,
		|	ВТ_ЗаписиКнигиПродаж.Организация,
		|	"""" КАК НаименованиеТовара, 
		|	ВТ_ЗаписиКнигиПродаж.РегНомПросл,
		|	ВТ_ЗаписиКнигиПродаж.ОКЕИ,
		|	ВТ_ЗаписиКнигиПродаж.КолТовПросл,
		|	ВЫРАЗИТЬ(ВТ_ЗаписиКнигиПродаж.СтоимТовПросл КАК ЧИСЛО(15, 0)),
		|	NULL
		|ИЗ
		|	ВТ_ЗаписиКнигиПродаж КАК ВТ_ЗаписиКнигиПродаж";
	КонецЕсли;  
	
	Если СтруктураПараметров.ЕстьОтчетКомитентуОЗакупках Тогда
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ОтчетКомитентуОЗакупках.Документ,
		|	ВТ_ОтчетКомитентуОЗакупках.ТипЗапасов,
		|	ВТ_ОтчетКомитентуОЗакупках.ДатаОперации,
	    |	ВТ_ОтчетКомитентуОЗакупках.ТипДокумента,
	    |	ВТ_ОтчетКомитентуОЗакупках.Контрагент,
		|	ВТ_ОтчетКомитентуОЗакупках.Организация,
		|	"""" КАК НаименованиеТовара, 
		|	ВТ_ОтчетКомитентуОЗакупках.РегНомПросл,
		|	ВТ_ОтчетКомитентуОЗакупках.ОКЕИ,
		|	ВТ_ОтчетКомитентуОЗакупках.КолТовПросл,
		|	ВЫРАЗИТЬ(ВТ_ОтчетКомитентуОЗакупках.СтоимТовПросл КАК ЧИСЛО(15, 0)),
		|	NULL
		|ИЗ
		|	ВТ_ОтчетКомитентуОЗакупках КАК ВТ_ОтчетКомитентуОЗакупках";
	КонецЕсли;
	
	
	Запрос.Текст = Запрос.Текст + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РНПТ;
	|
	|/////////////////////////////////////////////////////////////
	|";
	
	Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ
	|	ДанныеРНПТ_Предварительная.Документ КАК Документ,
	|	ЕСТЬNULL(ДанныеРНПТ_Предварительная.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК ТипЗапасов,
	|	ДанныеРНПТ_Предварительная.Организация КАК Организация,
	|	ДанныеРНПТ_Предварительная.РНПТ КАК РНПТ,
	|	ДанныеРНПТ_Предварительная.КодОперации КАК КодОперации,
	|	ДанныеРНПТ_Предварительная.РНПТ.СуммаПоРНПТ КАК СуммаПоРНПТ,
	|	СУММА(НомераГТДПрослеживаемыеКомплектующие.КоличествоПоРНПТ) КАК КоличествоРНПТ
	|ПОМЕСТИТЬ СгруппированныеДанныеРНПТ
	|ИЗ
	|	ДанныеРНПТ_Предварительная КАК ДанныеРНПТ_Предварительная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераГТД.ПрослеживаемыеКомплектующие КАК НомераГТДПрослеживаемыеКомплектующие
	|		ПО ДанныеРНПТ_Предварительная.РНПТ = НомераГТДПрослеживаемыеКомплектующие.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРНПТ_Предварительная.Документ,
	|	ЕСТЬNULL(ДанныеРНПТ_Предварительная.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)),
	|	ДанныеРНПТ_Предварительная.Организация,
	|	ДанныеРНПТ_Предварительная.РНПТ,
	|	ДанныеРНПТ_Предварительная.РНПТ.СуммаПоРНПТ,
	|	ДанныеРНПТ_Предварительная.КодОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРНПТ_Предварительная.Документ КАК Документ,
	|	ЕСТЬNULL(ДанныеРНПТ_Предварительная.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК ТипЗапасов, 
	|	ДанныеРНПТ_Предварительная.ДатаОперации КАК ДатаОперации,
	|	ДанныеРНПТ_Предварительная.ТипДокумента КАК ТипДокумента,
	|	ДанныеРНПТ_Предварительная.Контрагент КАК Контрагент,
	|	ДанныеРНПТ_Предварительная.Организация КАК Организация,
	|	ДанныеРНПТ_Предварительная.НаименованиеТовара,
	|	ДанныеРНПТ_Предварительная.РНПТ КАК РНПТ,
	|	ДанныеРНПТ_Предварительная.КодОперации КАК КодОперации,
	|	ДанныеРНПТ_Предварительная.ОКЕИ КАК ОКЕИ,
	|	ВЫБОР 
	|      КОГДА ДанныеРНПТ_Предварительная.КоличествоРНПТ < 0 
	|            ТОГДА - ДанныеРНПТ_Предварительная.КоличествоРНПТ 
    |      ИНАЧЕ ДанныеРНПТ_Предварительная.КоличествоРНПТ 
	|   КОНЕЦ КАК КоличествоРНПТ,
	|	ДанныеРНПТ_Предварительная.СуммаБезНДС КАК СуммаБезНДС
	|ПОМЕСТИТЬ ДанныеРНПТ
	|ИЗ
	|	ДанныеРНПТ_Предварительная КАК ДанныеРНПТ_Предварительная
	|ГДЕ
	|	ДанныеРНПТ_Предварительная.РНПТ.ТипНомераГТД = ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРНПТ_Предварительная.Документ,
	|	СгруппированныеДанныеРНПТ.ТипЗапасов, 
	|	ДанныеРНПТ_Предварительная.ДатаОперации,
	|	ДанныеРНПТ_Предварительная.ТипДокумента,
	|	ДанныеРНПТ_Предварительная.Контрагент,
	|	ДанныеРНПТ_Предварительная.Организация,   
	|	ДанныеРНПТ_Предварительная.НаименованиеТовара,
	|	НомераГТДПрослеживаемыеКомплектующие.НомерРНПТ,
	|	ДанныеРНПТ_Предварительная.КодОперации,
	|	НомераГТДПрослеживаемыеКомплектующие.ЕдиницаИзмеренияТНВЭД.Код,
	|	ВЫБОР 
	|      КОГДА ДанныеРНПТ_Предварительная.КоличествоРНПТ < 0 
	|            ТОГДА - ДанныеРНПТ_Предварительная.КоличествоРНПТ 
    |      ИНАЧЕ ДанныеРНПТ_Предварительная.КоличествоРНПТ 
	|   КОНЕЦ * НомераГТДПрослеживаемыеКомплектующие.КоличествоПоРНПТ,
	|	ВЫБОР 
	|	    КОГДА ДанныеРНПТ_Предварительная.КодОперации В (&КодыЗакупки)
	|             И НомераГТДПрослеживаемыеКомплектующие.СуммаПоРНПТ <> 0 
	|           ТОГДА  НомераГТДПрослеживаемыеКомплектующие.СуммаПоРНПТ * ДанныеРНПТ_Предварительная.КоличествоРНПТ 
	|		КОГДА СгруппированныеДанныеРНПТ.КоличествоРНПТ = 0
	|			ТОГДА 0
	|       КОГДА НомераГТДПрослеживаемыеКомплектующие.СуммаПоРНПТ > 0 Тогда 
	|		   ВЫРАЗИТЬ(НомераГТДПрослеживаемыеКомплектующие.СуммаПоРНПТ * ДанныеРНПТ_Предварительная.СуммаБезНДС / СгруппированныеДанныеРНПТ.СуммаПоРНПТ КАК ЧИСЛО(15,0))
	|		ИНАЧЕ ВЫРАЗИТЬ(НомераГТДПрослеживаемыеКомплектующие.КоличествоПоРНПТ * ДанныеРНПТ_Предварительная.СуммаБезНДС / СгруппированныеДанныеРНПТ.КоличествоРНПТ КАК ЧИСЛО(15,0))
	|	КОНЕЦ
	|ИЗ
	|	ДанныеРНПТ_Предварительная КАК ДанныеРНПТ_Предварительная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераГТД.ПрослеживаемыеКомплектующие КАК НомераГТДПрослеживаемыеКомплектующие
	|		ПО ДанныеРНПТ_Предварительная.РНПТ = НомераГТДПрослеживаемыеКомплектующие.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированныеДанныеРНПТ КАК СгруппированныеДанныеРНПТ
	|		ПО ДанныеРНПТ_Предварительная.РНПТ = СгруппированныеДанныеРНПТ.РНПТ
	|			И ДанныеРНПТ_Предварительная.Документ = СгруппированныеДанныеРНПТ.Документ
	|			И ЕСТЬNULL(ДанныеРНПТ_Предварительная.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) = СгруппированныеДанныеРНПТ.ТипЗапасов
	|			И ДанныеРНПТ_Предварительная.Организация = СгруппированныеДанныеРНПТ.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДанныеРНПТ_Предварительная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СгруппированныеДанныеРНПТ";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаполнитьДополнительныеПараметрыЗапросаРНПТ(СтруктураПараметров)

	ТаблицаБазовыхВалют = Новый ТаблицаЗначений;
	ТаблицаБазовыхВалют.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаБазовыхВалют.Колонки.Добавить("БазоваяВалюта", Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	
	Для каждого ЭлементОрганизация Из СтруктураПараметров.СписокОрганизаций Цикл
		Организация = ЭлементОрганизация;
		Если ТипЗнч(ЭлементОрганизация) = Тип("ЭлементСпискаЗначений") Тогда
			Организация = ЭлементОрганизация.Значение;
		КонецЕсли;
		СтрокаТаблицы = ТаблицаБазовыхВалют.Добавить();
		СтрокаТаблицы.Организация = Организация;
		СтрокаТаблицы.БазоваяВалюта = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
	КонецЦикла;
	
	СтруктураПараметров.Вставить("ТаблицаБазовыхВалют", ТаблицаБазовыхВалют);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураПараметров.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТаблицаБазовыхВалют",  СтруктураПараметров.ТаблицаБазовыхВалют);
	Запрос.УстановитьПараметр("ОтражениеВОтчетности", СтруктураПараметров.ПорядокОтраженияВОтчетностиПоПрослеживаемости);
	Запрос.УстановитьПараметр("Организация",          СтруктураПараметров.СписокОрганизаций);
	
	Если СтруктураПараметров.ПорядокОтраженияВОтчетностиПоПрослеживаемости = Перечисления.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ЖурналСФ Тогда
	     Запрос.УстановитьПараметр("НачалоПериода", НачалоКвартала(СтруктураПараметров.НалоговыйПериод));
	     Запрос.УстановитьПараметр("КонецПериода",  КонецКвартала(СтруктураПараметров.НалоговыйПериод));
	КонецЕсли;
	КодыЗакупки = Новый СписокЗначений();
	КодыЗакупки.Добавить(Справочники.КодыОперацийПрослеживаемости.Приобретение); //17
	Запрос.УстановитьПараметр("КодыЗакупки",  КодыЗакупки);
	
	СтруктураПараметров.Вставить("Запрос", Запрос);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТипыДокументов.ТипДокумента КАК ТипДокумента
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТИПЗНАЧЕНИЯ(ВТ_СписокДокументов.Документ) КАК ТипДокумента
	|	ИЗ
	|		ВТ_СписокДокументов КАК ВТ_СписокДокументов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОперацииСПрослеживаемымиТоварами КАК Операции
	|			ПО ВТ_СписокДокументов.Документ = Операции.Регистратор
	|	ГДЕ
	|		Операции.ОтражениеВОтчетности = &ОтражениеВОтчетности
	|		И Операции.Организация В(&Организация)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТИПЗНАЧЕНИЯ(ВТ_СписокДокументов.Документ)
	|	ИЗ
	|		ВТ_СписокДокументов КАК ВТ_СписокДокументов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОперацииСПрослеживаемымиТоварамиРасширенный КАК Операции
	|			ПО ВТ_СписокДокументов.Документ = Операции.Регистратор
	|	ГДЕ
	|		Операции.ОтражениеВОтчетности = &ОтражениеВОтчетности
	|		И Операции.Организация В(&Организация)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТИПЗНАЧЕНИЯ(ВТ_СписокДокументов.Документ)
	|	ИЗ
	|		ВТ_СписокДокументов КАК ВТ_СписокДокументов
	|	ГДЕ
	|		&ОтражениеВОтчетности = Значение(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ЖурналСФ)
	|		И ВТ_СписокДокументов.Документ Ссылка Документ.ОтчетКомитентуОЗакупках) КАК ТипыДокументов";
	
	МассивТипов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ТипДокумента");
	
	СтруктураПараметров.Вставить("ЕстьКорректировкиПриобретения",	НЕ МассивТипов.Найти(Тип("ДокументСсылка.КорректировкаПриобретения"))		= Неопределено);
	СтруктураПараметров.Вставить("ЕстьКорректировкиРеализации", 	НЕ МассивТипов.Найти(Тип("ДокументСсылка.КорректировкаРеализации")) 		= Неопределено);
	СтруктураПараметров.Вставить("ЕстьРУиПА", 						НЕ МассивТипов.Найти(Тип("ДокументСсылка.РеализацияУслугПрочихАктивов")) 	= Неопределено);
	СтруктураПараметров.Вставить("ЕстьПУиПА", 						НЕ МассивТипов.Найти(Тип("ДокументСсылка.ПриобретениеУслугПрочихАктивов")) 	= Неопределено);
	СтруктураПараметров.Вставить("ЕстьВыкупАрендованныхОС", 		НЕ МассивТипов.Найти(Тип("ДокументСсылка.ВыкупАрендованныхОС")) 			= Неопределено);
	СтруктураПараметров.Вставить("ЕстьСписанияОС", 					НЕ МассивТипов.Найти(Тип("ДокументСсылка.СписаниеОС2_4")) 					= Неопределено);
	СтруктураПараметров.Вставить("ЕстьСписанияИзЭксплуатации", 		НЕ МассивТипов.Найти(Тип("ДокументСсылка.СписаниеИзЭксплуатации")) 			= Неопределено);
	СтруктураПараметров.Вставить("ЕстьЗаписиКнигиПродаж",	 		НЕ МассивТипов.Найти(Тип("ДокументСсылка.ЗаписьКнигиПродаж")) 				= Неопределено); 
	СтруктураПараметров.Вставить("ЕстьОтчетКомитентуОЗакупках",	 	НЕ МассивТипов.Найти(Тип("ДокументСсылка.ОтчетКомитентуОЗакупках")) 	    = Неопределено
																	И СтруктураПараметров.ПорядокОтраженияВОтчетностиПоПрослеживаемости = Перечисления.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ЖурналСФ);

	Если СтруктураПараметров.МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_СопоставлениеСФОснований") <> Неопределено Тогда
		Запрос.Текст = 
	          "ВЫБРАТЬ ПЕРВЫЕ 1
	          |	ВТ_СопоставлениеСФОснований.Документ
	          |ИЗ
	          |	ВТ_СопоставлениеСФОснований КАК ВТ_СопоставлениеСФОснований
	          |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОперацииСПрослеживаемымиТоварами КАК Операции
	          |		ПО ВТ_СопоставлениеСФОснований.Документ = Операции.Регистратор
	          |ГДЕ
	          |	ВТ_СопоставлениеСФОснований.Исправление";
	     
	     Результат = Запрос.Выполнить();
	     Если НЕ Результат.Пустой() Тогда
	     	  СтруктураПараметров.ЕстьКорректировкиРеализации = Истина;
	     КонецЕсли;	     
    КонецЕсли;	
 
КонецПроцедуры

Процедура УдалитьВременныеТаблицы(СтруктураПараметров)

	Запрос = СтруктураПараметров.Запрос;
	Запрос.Текст = 
	"УНИЧТОЖИТЬ вт_ПокупкиПродажи";
	
	Разделитель = "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
		
	Если СтруктураПараметров.ЕстьКорректировкиПриобретения Тогда
		Запрос.Текст = Запрос.Текст + Разделитель + "
		|УНИЧТОЖИТЬ ВТ_КорректировкиПриобретения";
	КонецЕсли;
	
	Если СтруктураПараметров.ЕстьКорректировкиРеализации Тогда
		Запрос.Текст = Запрос.Текст + Разделитель + "
		|УНИЧТОЖИТЬ ВТ_КорректировкиРеализации";
	КонецЕсли;
	
	ЕстьРНПТвОС = Ложь;
	
	Если СтруктураПараметров.ЕстьРУиПА Тогда
		Запрос.Текст = Запрос.Текст + Разделитель + "
		|УНИЧТОЖИТЬ ВТ_РУиПА"; 
		ЕстьРНПТвОС = Истина;
	КонецЕсли; 
	
	Если СтруктураПараметров.ЕстьПУиПА Тогда
		Запрос.Текст = Запрос.Текст + Разделитель + "
		|УНИЧТОЖИТЬ ВТ_ПУиПА";
		ЕстьРНПТвОС = Истина;
	КонецЕсли;
	
	Если СтруктураПараметров.ЕстьВыкупАрендованныхОС Тогда
		Запрос.Текст = Запрос.Текст + Разделитель + "
		|УНИЧТОЖИТЬ ВТ_ВыкупАрендованныхОС"; 
		ЕстьРНПТвОС = Истина;
	КонецЕсли;
	
	Если СтруктураПараметров.ЕстьСписанияОС Тогда
		Запрос.Текст = Запрос.Текст + Разделитель + "
		|УНИЧТОЖИТЬ ВТ_СписаниеОС"; 
		ЕстьРНПТвОС = Истина;
	КонецЕсли;
	
	Если ЕстьРНПТвОС Тогда
		Запрос.Текст = Запрос.Текст + Разделитель + "
		|УНИЧТОЖИТЬ ВТ_РНПТвОС"; 
	КонецЕсли;
	
	Если СтруктураПараметров.ЕстьСписанияИзЭксплуатации Тогда
		Запрос.Текст = Запрос.Текст + Разделитель + "
		|УНИЧТОЖИТЬ ВТ_ТМЦВЭксплуатации"; 
	КонецЕсли;
	
	Если СтруктураПараметров.ЕстьЗаписиКнигиПродаж Тогда
		Запрос.Текст = Запрос.Текст + Разделитель + "
		|УНИЧТОЖИТЬ ВТ_ЗаписиКнигиПродаж"; 
	КонецЕсли; 
	
	Если СтруктураПараметров.ЕстьОтчетКомитентуОЗакупках Тогда
		Запрос.Текст = Запрос.Текст + Разделитель + "
		|УНИЧТОЖИТЬ ВТ_ОтчетКомитентуОЗакупках"; 
	КонецЕсли; 
	
	Запрос.Выполнить();
	
	СтруктураПараметров.Удалить("Запрос");

КонецПроцедуры

//-- НЕ УТ

#КонецОбласти
