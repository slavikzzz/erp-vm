
#Область СлужебныеПроцедурыИФункции

#Область Серии

// Добавляет в табличную часть формы колонки дополнительных реквизитов и выводит их в связанную таблицу.
//
// Параметры:
//	НастройкиИспользованияСерий - см. Справочники.ВидыНоменклатуры.НастройкиИспользованияСерий.
//	Форма - ФормаКлиентскогоПриложения - форма, содержащая табличную часть, в которую необходимо добавить дополнительные реквизиты:
//		* Элементы - ВсеЭлементыФормы - элементы формы.
//	РеквизитТаблица - Строка - путь к данным таблицы, в которую добавляются колонки дополнительных реквизитов.
//	ЭлементТаблица - Строка - имя элемента таблицы формы, в которую добавляются колонки дополнительных реквизитов.
//	ВставитьПередЭлементом - Строка - имя элемента колонки таблицы формы, перед которой будут добавлены колонки
//										дополнительных реквизитов.
//	ТолькоПросмотр - Булево - признак возможности/невозможности редактирования, добавляемых колонок дополнительных
//								реквизитов.
//
Процедура ДобавитьКолонкиДополнительныхРеквизитов(НастройкиИспользованияСерий, Форма, РеквизитТаблица, ЭлементТаблица, ВставитьПередЭлементом = "", ТолькоПросмотр = Ложь) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		Возврат;
	КонецЕсли;
	
	ПустойОбъектСерии = Справочники.СерииНоменклатуры.ПустойОбъект(НастройкиИспользованияСерий.ВладелецСерий);
	
	ПриведенноеИмяТаблицы = СтрЗаменить(РеквизитТаблица,".","_");
	ИмяОписания = ПриведенноеИмяТаблицы + "Свойства_ОписаниеДополнительныхРеквизитов";
	ИмяНаборов  = ПриведенноеИмяТаблицы + "Свойства_НаборыДополнительныхРеквизитовОбъекта";
	
	Переинициализация = ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, ИмяОписания); 
	
	НаборыСвойствОбъектаТаблица = УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(ПустойОбъектСерии, Неопределено);
	НаборыСвойствОбъектаСписок = Новый СписокЗначений;
	
	Для каждого Строка Из НаборыСвойствОбъектаТаблица Цикл
		Если УправлениеСвойствамиСлужебный.ВидыСвойствНабора(Строка.Набор).ДополнительныеРеквизиты Тогда
			НаборыСвойствОбъектаСписок.Добавить(Строка.Набор, Строка.Заголовок);
		КонецЕсли;
	КонецЦикла;
	
	Если Переинициализация Тогда
		Если ОбщегоНазначенияКлиентСервер.СпискиЗначенийИдентичны(НаборыСвойствОбъектаСписок,
																Форма[ИмяНаборов]) Тогда
			// Уже все инициализировано
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	УдаляемыеРеквизитыКолонки = Новый Массив;
	
	Если Не Переинициализация Тогда
		Реквизиты = Новый Массив;
		
		// Создание служебных реквизитов формы
		// Добавление реквизита содержащего используемые наборы дополнительных реквизитов.
		Реквизиты.Добавить(Новый РеквизитФормы(
		ИмяНаборов, Новый ОписаниеТипов("СписокЗначений")));
		
		
		// Добавление реквизита описания создаваемых реквизитов и элементов формы.
		Реквизиты.Добавить(Новый РеквизитФормы(
		ИмяОписания, Новый ОписаниеТипов("ТаблицаЗначений")));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
		"ИмяРеквизитаЗначение", Новый ОписаниеТипов("Строка"), ИмяОписания));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
		"Свойство", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения"),
		ИмяОписания));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
		"ТипЗначения", Новый ОписаниеТипов("ОписаниеТипов"), ИмяОписания));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
		"МногострочноеПолеВвода", Новый ОписаниеТипов("Число"), ИмяОписания));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
		"Удалено", Новый ОписаниеТипов("Булево"), ИмяОписания));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
		"ЗаполнятьОбязательно", Новый ОписаниеТипов("Булево"), ИмяОписания));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
		"Наименование", Новый ОписаниеТипов("Строка"), ИмяОписания));
			
		Форма.ИзменитьРеквизиты(Реквизиты);
		
	Иначе
		
		ОписаниеСвойств = ЗначенияСвойств(
			ПустойОбъектСерии.ДополнительныеРеквизиты.Выгрузить(),
			Форма[ИмяНаборов],
			Ложь);
			
		Для каждого ОписаниеСвойства Из ОписаниеСвойств Цикл
			ИмяРеквизитаЗначение = ПриведенноеИмяТаблицы +
			    "ДополнительныйРеквизитЗначение_"+
				СтрЗаменить(ВРег(Строка(ОписаниеСвойства.Набор.УникальныйИдентификатор())), "-", "x")
				+ "_"
				+ СтрЗаменить(ВРег(Строка(ОписаниеСвойства.Свойство.УникальныйИдентификатор())), "-", "x");			
			
			УдаляемыеРеквизитыКолонки.Добавить(РеквизитТаблица + "." + ИмяРеквизитаЗначение);	
			Форма.Элементы.Удалить(Форма.Элементы[ИмяРеквизитаЗначение]);
			
		КонецЦикла;
		
	КонецЕсли;
		
	// Сформируем колонки
	Форма[ИмяНаборов] = НаборыСвойствОбъектаСписок;
		
	ОписаниеСвойств = ЗначенияСвойств(
		ПустойОбъектСерии.ДополнительныеРеквизиты.Выгрузить(),
		Форма[ИмяНаборов],
		Ложь);
	ОписаниеСвойств.Колонки.Добавить("ИмяРеквизитаЗначение");
	ОписаниеСвойств.Колонки.Добавить("ИмяУникальнаяЧасть");
	ОписаниеСвойств.Колонки.Добавить("ДополнительноеЗначение");
	ОписаниеСвойств.Колонки.Добавить("Булево");
	
	ОбязательныеДопРеквизитыСерий = НастройкиИспользованияСерий.ОбязательныеДопРеквизиты;
	
	ДобавляемыеРеквизиты = Новый Массив();
	Для каждого ОписаниеСвойства Из ОписаниеСвойств Цикл
		
		ТипЗначенияСвойства = Новый ОписаниеТипов(ОписаниеСвойства.ТипЗначения,
			,,, Новый КвалификаторыСтроки(1024));
		
		// Поддержка строк неограниченной длины.
		ИспользоватьНеограниченнуюСтроку = УправлениеСвойствамиСлужебный.ИспользоватьНеограниченнуюСтроку(
			ТипЗначенияСвойства, ОписаниеСвойства.МногострочноеПолеВвода);
		
		Если ИспользоватьНеограниченнуюСтроку Тогда
			ТипЗначенияСвойства = Новый ОписаниеТипов("Строка");
		КонецЕсли;
		
		ОписаниеСвойства.ИмяУникальнаяЧасть = 
			СтрЗаменить(ВРег(Строка(ОписаниеСвойства.Набор.УникальныйИдентификатор())), "-", "x")
			+ "_"
			+ СтрЗаменить(ВРег(Строка(ОписаниеСвойства.Свойство.УникальныйИдентификатор())), "-", "x");
		
		ОписаниеСвойства.ИмяРеквизитаЗначение =
			ПриведенноеИмяТаблицы + "ДополнительныйРеквизитЗначение_" + ОписаниеСвойства.ИмяУникальнаяЧасть;
		
		Если ОписаниеСвойства.Удалено Тогда
			ТипЗначенияСвойства = Новый ОписаниеТипов("Строка");
		КонецЕсли;
																									
		ОписаниеСвойства.ДополнительноеЗначение =
			УправлениеСвойствамиСлужебный.ТипЗначенияСодержитЗначенияСвойств(ТипЗначенияСвойства);
		
		ОписаниеСвойства.Булево = ОбщегоНазначения.ОписаниеТипаСостоитИзТипа(ТипЗначенияСвойства, Тип("Булево"));
		
		ИндексУдаляемого = УдаляемыеРеквизитыКолонки.Найти(РеквизитТаблица + "." + ОписаниеСвойства.ИмяРеквизитаЗначение);
		
		Если ИндексУдаляемого <> Неопределено Тогда
			УдаляемыеРеквизитыКолонки.Удалить(ИндексУдаляемого);
		Иначе
			Реквизит = Новый РеквизитФормы(ОписаниеСвойства.ИмяРеквизитаЗначение, ТипЗначенияСвойства, РеквизитТаблица, ОписаниеСвойства.Наименование, Истина);
			ДобавляемыеРеквизиты.Добавить(Реквизит);
		КонецЕсли;
		
	КонецЦикла;
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты,УдаляемыеРеквизитыКолонки);
	
	// Создание элементов формы.
	ИмяЭлементаДляРазмещения = ЭлементТаблица;
	ЭлементРазмещения = Форма.Элементы[ИмяЭлементаДляРазмещения];
	
	Форма[ИмяОписания].Очистить();
	
	Для Каждого ОписаниеСвойства Из ОписаниеСвойств Цикл
		
		НоваяСтрокаОписания = Форма[ИмяОписания].Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаОписания, ОписаниеСвойства);
		
		НоваяСтрокаОписания.ЗаполнятьОбязательно = (ОбязательныеДопРеквизитыСерий.Найти(НоваяСтрокаОписания.Свойство) <> Неопределено);
		
		Если Не ПустаяСтрока(ВставитьПередЭлементом) Тогда
			Элемент = Форма.Элементы.Вставить(ОписаниеСвойства.ИмяРеквизитаЗначение, Тип("ПолеФормы"), ЭлементРазмещения, Форма.Элементы[ВставитьПередЭлементом]); // ПолеФормы -
		Иначе
			Элемент = Форма.Элементы.Добавить(ОписаниеСвойства.ИмяРеквизитаЗначение, Тип("ПолеФормы"), ЭлементРазмещения); // ПолеФормы -
		КонецЕсли;
		
		Если ОписаниеСвойства.Булево И ПустаяСтрока(ОписаниеСвойства.ФорматСвойства) Тогда
			Элемент.Вид = ВидПоляФормы.ПолеФлажка;;
		Иначе
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.АвтоОтметкаНезаполненного = НоваяСтрокаОписания.ЗаполнятьОбязательно И НЕ ОписаниеСвойства.Удалено;
		КонецЕсли;
		
		Элемент.ПутьКДанным    = РеквизитТаблица + "." + ОписаниеСвойства.ИмяРеквизитаЗначение;
		Элемент.Подсказка      = ОписаниеСвойства.Свойство.Подсказка;
		Элемент.ТолькоПросмотр = ТолькоПросмотр;
		
		Если ОписаниеСвойства.Свойство.МногострочноеПолеВвода > 0 Тогда
			Элемент.МногострочныйРежим = Истина;
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ОписаниеСвойства.ФорматСвойства) Тогда
			ФорматнаяСтрока = "";
			Массив = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
				ОписаниеСвойства.ФорматСвойства, ";");
			
			Для каждого Подстрока Из Массив Цикл
				Если СтрНайти(Подстрока, "ДП=") > 0 ИЛИ СтрНайти(Подстрока, "DE=") > 0 Тогда
					Продолжить;
				КонецЕсли;
				Если СтрНайти(Подстрока, "ЧН=") > 0 ИЛИ СтрНайти(Подстрока, "NZ=") > 0 Тогда
					Продолжить;
				КонецЕсли;
				Если СтрНайти(Подстрока, "ДФ=") > 0 ИЛИ СтрНайти(Подстрока, "DF=") > 0 Тогда
					Если СтрНайти(Подстрока, "ддд") > 0 ИЛИ СтрНайти(Подстрока, "ddd") > 0 Тогда
						Подстрока = СтрЗаменить(Подстрока, "ддд", "дд");
						Подстрока = СтрЗаменить(Подстрока, "ddd", "dd");
					КонецЕсли;
					Если СтрНайти(Подстрока, "дддд") > 0 ИЛИ СтрНайти(Подстрока, "dddd") > 0 Тогда
						Подстрока = СтрЗаменить(Подстрока, "дддд", "дд");
						Подстрока = СтрЗаменить(Подстрока, "dddd", "dd");
					КонецЕсли;
					Если СтрНайти(Подстрока, "МММ") > 0 ИЛИ СтрНайти(Подстрока, "MMM") > 0 Тогда
						Подстрока = СтрЗаменить(Подстрока, "МММ", "ММ");
						Подстрока = СтрЗаменить(Подстрока, "MMM", "MM");
					КонецЕсли;
					Если СтрНайти(Подстрока, "ММММ") > 0 ИЛИ СтрНайти(Подстрока, "MMMM") > 0 Тогда
						Подстрока = СтрЗаменить(Подстрока, "ММММ", "ММ");
						Подстрока = СтрЗаменить(Подстрока, "MMMM", "MM");
					КонецЕсли;
				КонецЕсли;
				Если СтрНайти(Подстрока, "ДЛФ=") > 0 ИЛИ СтрНайти(Подстрока, "DLF=") > 0 Тогда
					Если СтрНайти(Подстрока, "ДД") > 0 ИЛИ СтрНайти(Подстрока, "DD") > 0 Тогда
						Подстрока = СтрЗаменить(Подстрока, "ДД", "Д");
						Подстрока = СтрЗаменить(Подстрока, "DD", "D");
					КонецЕсли;
				КонецЕсли;
				ФорматнаяСтрока = ФорматнаяСтрока + ?(ФорматнаяСтрока = "", "", ";") + Подстрока;
			КонецЦикла;
			
			Элемент.Формат = ФорматнаяСтрока;
			Элемент.ФорматРедактирования = ФорматнаяСтрока;
		КонецЕсли;
		
		ТипыДополнительныхЗначений = Новый Соответствие;
		ТипыДополнительныхЗначений.Вставить(Тип("СправочникСсылка.ЗначенияСвойствОбъектов"), Истина);
		ТипыДополнительныхЗначений.Вставить(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия"), Истина);
		
		ИспользуетсяТипДополнительныхЗначений = Истина;
		Для Каждого Тип Из ОписаниеСвойства.ТипЗначения.Типы() Цикл
			Если ТипыДополнительныхЗначений.Получить(Тип) = Неопределено Тогда
				ИспользуетсяТипДополнительныхЗначений = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ИспользуетсяТипДополнительныхЗначений Тогда
			Элемент.КнопкаОткрытия = Ложь;
		КонецЕсли;
		
		Если ОписаниеСвойства.ДополнительноеЗначение Тогда
			ПараметрыВыбора = Новый Массив;
			ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец",
				?(ЗначениеЗаполнено(ОписаниеСвойства.ВладелецДополнительныхЗначений),
					ОписаниеСвойства.ВладелецДополнительныхЗначений, ОписаниеСвойства.Свойство)));
			Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКолонкиДополнительныхРеквизитов(Форма, РеквизитТаблица, КолонкаВладельцаСвойств) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		Возврат;
	КонецЕсли;
	
	Таблица = ТаблицаПоИмени(Форма, РеквизитТаблица);
	ПриведенноеИмяТаблицы = СтрЗаменить(РеквизитТаблица, ".", "_");
	
	МассивВладельцев = Таблица.Выгрузить(,КолонкаВладельцаСвойств).ВыгрузитьКолонку(КолонкаВладельцаСвойств);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СерииНоменклатурыДополнительныеРеквизиты.Ссылка КАК Серия,
	|	СерииНоменклатурыДополнительныеРеквизиты.Свойство,
	|	СерииНоменклатурыДополнительныеРеквизиты.Значение,
	|	СерииНоменклатурыДополнительныеРеквизиты.ТекстоваяСтрока
	|ИЗ
	|	Справочник.СерииНоменклатуры.ДополнительныеРеквизиты КАК СерииНоменклатурыДополнительныеРеквизиты
	|ГДЕ
	|	СерииНоменклатурыДополнительныеРеквизиты.Ссылка В(&Серии)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Серия
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Серии", МассивВладельцев);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТекущаяСерия = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		СтрокиСвойств = Форма[ПриведенноеИмяТаблицы + "Свойства_ОписаниеДополнительныхРеквизитов"].НайтиСтроки(Новый Структура("Свойство", Выборка.Свойство));
		Если СтрокиСвойств.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Выборка.Серия <> ТекущаяСерия Тогда
			СтрокиСерий = Таблица.НайтиСтроки(Новый Структура(КолонкаВладельцаСвойств, Выборка.Серия));
		КонецЕсли;
		РеквизитЗначение = ?(СтрокиСвойств[0].МногострочноеПолеВвода > 0, Выборка.ТекстоваяСтрока, Выборка.Значение);
		Для Каждого СтрокаСерии Из СтрокиСерий Цикл
			СтрокаСерии[СтрокиСвойств[0].ИмяРеквизитаЗначение] = РеквизитЗначение;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция ПроверитьЗаполнениеДополнительныхРеквизитов(Форма, РеквизитТаблица) Экспорт
	
	ЕстьОшибки = Ложь;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		Возврат Истина;
	КонецЕсли;
	
	Таблица = ТаблицаПоИмени(Форма, РеквизитТаблица);
	ПриведенноеИмяТаблицы = СтрЗаменить(РеквизитТаблица, ".", "_");
	
	СтруктураПроверяемыхРеквизитов = Новый Структура;
	Для Каждого ТекСтр Из Форма[ПриведенноеИмяТаблицы + "Свойства_ОписаниеДополнительныхРеквизитов"] Цикл
		Если ТекСтр.ЗаполнятьОбязательно И НЕ ТекСтр.Удалено Тогда
			СтруктураПроверяемыхРеквизитов.Вставить(ТекСтр.ИмяРеквизитаЗначение);
		КонецЕсли;
	КонецЦикла;
	
	Если СтруктураПроверяемыхРеквизитов.Количество() = 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	Для Каждого ТекСтр Из Таблица Цикл
		Для Каждого Реквизит Из СтруктураПроверяемыхРеквизитов Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтр[Реквизит.Ключ]) Тогда
				ЕстьОшибки = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если ЕстьОшибки Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнены обязательные доп. реквизиты серий.';
				|en = 'Required addit. batch attributes are not filled in.'"));
		
	КонецЕсли;
	
	Возврат НЕ ЕстьОшибки;
	
КонецФункции

Процедура ПеренестиДополнительныеРеквизитыИзФормыВОбъект(Объект, Форма, СтрокаТаблицы, РеквизитТаблица) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ДополнительныеРеквизиты.Очистить();
	
	ПриведенноеИмяТаблицы = СтрЗаменить(РеквизитТаблица, ".", "_");
	
	Для Каждого ТекСтр Из Форма[ПриведенноеИмяТаблицы + "Свойства_ОписаниеДополнительныхРеквизитов"] Цикл
		
		НовСтр = Объект.ДополнительныеРеквизиты.Добавить();
		НовСтр.Свойство = ТекСтр.Свойство;
		
		Если ТекСтр.МногострочноеПолеВвода > 0 Тогда
			НовСтр.ТекстоваяСтрока = СтрокаТаблицы[ТекСтр.ИмяРеквизитаЗначение];
		Иначе
			НовСтр.Значение = СтрокаТаблицы[ТекСтр.ИмяРеквизитаЗначение];
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Функция - Есть доп.реквизиты в таблице
//  Анализирует наличие доп.реквизитов в таблице реквизитов.
// Параметры:
//  Форма			 - ФормаКлиентскогоПриложения - Проверяемая форма
//  РеквизитТаблица	 - Строка - Путь к таблице формы с доп.реквизитами
// 
// Возвращаемое значение:
//  Булево - Признак наличия доп.реквизитов в таблице
//
Функция ЕстьДопРеквизитыВТаблице(Форма, РеквизитТаблица) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПриведенноеИмяТаблицы = СтрЗаменить(РеквизитТаблица,".","_");
	ИмяОписания = ПриведенноеИмяТаблицы + "Свойства_ОписаниеДополнительныхРеквизитов";
	
	Если Не ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, ИмяОписания) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ТаблицаПоИмени(Форма, ИмяОписания).Количество() > 0;
	
	
КонецФункции

Функция ПрочитатьДопРеквизитыСерии(Форма, РеквизитТаблица, Серия) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения")
	 ИЛИ Не ЗначениеЗаполнено(Серия) Тогда
		Возврат Новый ФиксированнаяСтруктура;
	КонецЕсли;
	
	ПриведенноеИмяТаблицы = СтрЗаменить(РеквизитТаблица,".","_");
	ИмяОписания = ПриведенноеИмяТаблицы + "Свойства_ОписаниеДополнительныхРеквизитов";
	ТаблицаОписания = ТаблицаПоИмени(Форма, ИмяОписания);
	
	СтруктураДопРеквизитов = Новый Структура;
	Для Каждого ТекСтр Из ТаблицаОписания Цикл
		СтруктураДопРеквизитов.Вставить(ТекСтр.ИмяРеквизитаЗначение, "");
	КонецЦикла;
	
	Для Каждого ТекСтр Из Серия.ДополнительныеРеквизиты Цикл
		
		СтрокиСвойств = ТаблицаОписания.НайтиСтроки(Новый Структура("Свойство", ТекСтр.Свойство));
		Если СтрокиСвойств.Количество() > 0 Тогда
			СтруктураДопРеквизитов.Вставить(
				СтрокиСвойств[0].ИмяРеквизитаЗначение,
				?(СтрокиСвойств[0].МногострочноеПолеВвода > 0, ТекСтр.ТекстоваяСтрока, ТекСтр.Значение));
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Новый ФиксированнаяСтруктура(СтруктураДопРеквизитов);
	
КонецФункции

// Установить отметку незаполненных свойств.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения
//  ВладелецСвойств - СправочникОбъект.СерииНоменклатуры - Владелец свойств
Процедура УстановитьОтметкуНезаполненныхСвойств(Форма, ВладелецСвойств) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, "Свойства_ОписаниеДополнительныхРеквизитов") Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСвойств = Форма.Свойства_ОписаниеДополнительныхРеквизитов;
	
	ОбязательныеДопРеквизиты = Новый Массив;
	
	ДополнительныеРеквизитыВладельца = УправлениеСвойствами.СвойстваОбъекта(ВладелецСвойств.Ссылка);
	Для Каждого ЭлементОбязательныйРеквизит Из ДополнительныеРеквизитыВладельца Цикл
		
		Если ЭлементОбязательныйРеквизит.ЗаполнятьОбязательно Тогда
			ОбязательныеДопРеквизиты.Добавить(ЭлементОбязательныйРеквизит);
		КонецЕсли;
		
	КонецЦикла;
	
	ОбязательныеДопРеквизитыВидаНоменклатуры = Справочники.ВидыНоменклатуры.НастройкиИспользованияСерий(ВладелецСвойств.ВидНоменклатуры).ОбязательныеДопРеквизиты;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОбязательныеДопРеквизиты, ОбязательныеДопРеквизитыВидаНоменклатуры, Истина);
	
	Для Каждого ТекСвойство Из ТаблицаСвойств Цикл
		
		Если Не ТекСвойство.ЭлементФормыДобавлен
			Или Форма.Элементы[ТекСвойство.ИмяРеквизитаЗначение].Вид <> ВидПоляФормы.ПолеВвода Тогда
			Продолжить;
		КонецЕсли;
		
		ТекСвойство.ЗаполнятьОбязательно = ОбязательныеДопРеквизиты.Найти(ТекСвойство.Свойство) <> Неопределено;
		
		Форма.Элементы[ТекСвойство.ИмяРеквизитаЗначение].АвтоОтметкаНезаполненного =
			ТекСвойство.ЗаполнятьОбязательно
			И Не ТекСвойство.Удалено;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТаблицаПоИмени(Форма, РеквизитТаблица)
	
	ПозицияТочки = СтрНайти(РеквизитТаблица, ".");
	
	Если ПозицияТочки = 0 Тогда
		Таблица = Форма[РеквизитТаблица];
	Иначе
		МассивИмен = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РеквизитТаблица,".");
		Таблица = Форма[МассивИмен[0]][МассивИмен[1]];
	КонецЕсли;
	
	Возврат Таблица;
КонецФункции

#КонецОбласти

#Область ВидыНоменклатуры

Процедура ВыполнитьДействияПередЗаписьюДополнительногоРеквизитаПередЗаписью(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ЭтоДополнительноеСведение
	 ИЛИ Источник.ДополнительныеСвойства.Свойство("НеОбновлятьШаблоныНаименований") Тогда
		Возврат;
	КонецЕсли;
	
	СтароеНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.Ссылка, "Наименование");
	
	Если Источник.Наименование <> СтароеНаименование Тогда
		Источник.ДополнительныеСвойства.Вставить("СтароеНаименование", СтароеНаименование);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьДействияПриЗаписиДополнительногоРеквизитаПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Источник.ДополнительныеСвойства.Свойство("СтароеНаименование") Тогда
		Возврат;
	КонецЕсли;
	
	СтароеНаименование = "[" + Источник.ДополнительныеСвойства.СтароеНаименование + "]";
	НовоеНаименование  = "[" + Источник.Наименование + "]";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыНоменклатуры.Ссылка,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.НаборСвойствХарактеристик = &НаборСвойств
	|			ТОГДА ""Характеристики""
	|		КОГДА ВидыНоменклатуры.НаборСвойствСерий = &НаборСвойств
	|			ТОГДА ""Серии""
	|		ИНАЧЕ ""Номенклатуры""
	|	КОНЕЦ КАК ИмяШаблона,
	|	ВидыНоменклатуры.ШаблонНаименованияДляПечатиНоменклатуры,
	|	ВидыНоменклатуры.ШаблонНаименованияДляПечатиХарактеристики,
	|	"""" КАК ШаблонНаименованияДляПечатиСерии,
	|	ВидыНоменклатуры.ШаблонРабочегоНаименованияНоменклатуры,
	|	ВидыНоменклатуры.ШаблонРабочегоНаименованияХарактеристики,
	|	ВидыНоменклатуры.ШаблонРабочегоНаименованияСерии
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	(ВидыНоменклатуры.НаборСвойств = &НаборСвойств
	|			ИЛИ ВидыНоменклатуры.НаборСвойствСерий = &НаборСвойств
	|			ИЛИ ВидыНоменклатуры.НаборСвойствХарактеристик = &НаборСвойств)";
	
	Запрос.УстановитьПараметр("НаборСвойств", Источник.НаборСвойств);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если НЕ Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыШаблонов = Новый Структура;
	РеквизитыШаблонов.Вставить("ШаблонНаименованияДляПечати" + Выборка.ИмяШаблона, "");
	РеквизитыШаблонов.Вставить("ШаблонРабочегоНаименования"  + Выборка.ИмяШаблона, "");
	
	ЗаполнитьЗначенияСвойств(РеквизитыШаблонов, Выборка);
	
	ИзмененныеНаименования = Новый Соответствие;
	ИзмененныеНаименования.Вставить(СтароеНаименование, НовоеНаименование);
	
	ЗаменитьНаименованияВШаблонах(Выборка.Ссылка, РеквизитыШаблонов, ИзмененныеНаименования);
	
КонецПроцедуры

// Адаптированный вариант УправлениеСвойствами.ПередЗаписьюВидаОбъекта()
//
// Параметры:
//  ВидНоменклатуры - СправочникОбъект.ВидыНоменклатуры
//  ИмяОбъектаСоСвойствами - Строка - Имя объекта со свойствами
//  ИмяРеквизитаНабораСвойств - Строка - Имя реквизита набора свойств
//  ОкончаниеНаименования - Строка - Окончание наименования
//  НуженНаборСвойств - Булево - Нужен набор свойств
Процедура ОбновитьПоляДополнительныхСвойств(ВидНоменклатуры,
                                  ИмяОбъектаСоСвойствами,
                                  ИмяРеквизитаНабораСвойств = "НаборСвойств",
								  ОкончаниеНаименования = "",
								  НуженНаборСвойств = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборСвойств   = ВидНоменклатуры[ИмяРеквизитаНабораСвойств];
	РодительНабора = УправлениеСвойствами.НаборСвойствПоИмени(ИмяОбъектаСоСвойствами);
	
	// Обновлений наименований набора свойств
	Если ЗначениеЗаполнено(НаборСвойств) Тогда
		
		СтарыеСвойстваНабора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			НаборСвойств, "Наименование, Родитель, ПометкаУдаления");
		
		Если СтарыеСвойстваНабора.Наименование    = ВидНоменклатуры.Наименование + ОкончаниеНаименования
		   И СтарыеСвойстваНабора.ПометкаУдаления = ВидНоменклатуры.ПометкаУдаления
		   И СтарыеСвойстваНабора.Родитель        = РодительНабора Тогда
			
			Возврат;
		КонецЕсли;
		
		Если СтарыеСвойстваНабора.Родитель = РодительНабора Тогда
			ЗаблокироватьДанныеДляРедактирования(НаборСвойств);
			НаборСвойствОбъект = НаборСвойств.ПолучитьОбъект();
		Иначе
			НаборСвойствОбъект = НаборСвойств.Скопировать();
		КонецЕсли;
		
	ИначеЕсли НуженНаборСвойств Тогда
		НаборСвойствОбъект = Справочники.НаборыДополнительныхРеквизитовИСведений.СоздатьЭлемент();
		НаборСвойствОбъект.Используется = Истина;
	Иначе
		НаборСвойствОбъект = Неопределено;
	КонецЕсли;
	
	Если НаборСвойствОбъект <> Неопределено Тогда 
		НаборСвойствОбъект.Наименование    = ВидНоменклатуры.Наименование + ОкончаниеНаименования;
		НаборСвойствОбъект.ПометкаУдаления = ?(НуженНаборСвойств, ВидНоменклатуры.ПометкаУдаления, Истина);;
		НаборСвойствОбъект.Родитель        = РодительНабора;
		НаборСвойствОбъект.Записать();
	КонецЕсли;
	
	ВидНоменклатуры[ИмяРеквизитаНабораСвойств] = ?(НуженНаборСвойств, НаборСвойствОбъект.Ссылка, Неопределено);
	
	// Обновление наименований необщих дополнительных реквизитов и сведений.
	Если Не ЗначениеЗаполнено(НаборСвойств) Тогда
		Возврат;
	КонецЕсли;
	
	ИзмененныеНаименования = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаборСвойств", НаборСвойств);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Свойства.Ссылка КАК Ссылка,
	|	Свойства.НаборСвойств.Наименование КАК НаименованиеНабора,
	|	Свойства.НаборСвойств.ПометкаУдаления КАК ПометкаУдаленияНабора,
	|	Свойства.ЭтоДополнительноеСведение
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Свойства
	|ГДЕ
	|	Свойства.НаборСвойств = &НаборСвойств
	|	И ВЫБОР
	|			КОГДА Свойства.Наименование <> Свойства.Заголовок + "" ("" + Свойства.НаборСвойств.Наименование + "")""
	|				ТОГДА ИСТИНА
	|			КОГДА Свойства.ПометкаУдаления <> Свойства.НаборСвойств.ПометкаУдаления
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	
	ВыборкаСвойств = Запрос.Выполнить().Выбрать();
	Пока ВыборкаСвойств.Следующий() Цикл
		
		ЗаблокироватьДанныеДляРедактирования(ВыборкаСвойств.Ссылка);
		
		Объект = ВыборкаСвойств.Ссылка.ПолучитьОбъект(); // ПланВидовХарактеристикОбъект.ДополнительныеРеквизитыИСведения
		
		СтароеНаименование = Объект.Наименование;
		Объект.Наименование = Объект.Заголовок + " (" + Строка(ВыборкаСвойств.НаименованиеНабора) + ")";
		Объект.ПометкаУдаления = ВыборкаСвойств.ПометкаУдаленияНабора;
		
		Объект.ДополнительныеСвойства.Вставить("НеОбновлятьШаблоныНаименований");
		Объект.Записать();
		
		Если НЕ ВыборкаСвойств.ЭтоДополнительноеСведение Тогда
			ИзмененныеНаименования.Вставить(
				"[" + СтароеНаименование + "]", "[" + Объект.Наименование + "]");
		КонецЕсли;
		
	КонецЦикла;
	
	// Переименование в шаблонах наименований
	Если ИзмененныеНаименования.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыШаблонов = Новый Структура;
	
	Если ИмяРеквизитаНабораСвойств = "НаборСвойствХарактеристик" Тогда
		РеквизитыШаблонов.Вставить("ШаблонНаименованияДляПечатиХарактеристики");
		РеквизитыШаблонов.Вставить("ШаблонРабочегоНаименованияХарактеристики");
	ИначеЕсли ИмяРеквизитаНабораСвойств = "НаборСвойствСерий" Тогда
		РеквизитыШаблонов.Вставить("ШаблонРабочегоНаименованияСерии");
	Иначе
		РеквизитыШаблонов.Вставить("ШаблонНаименованияДляПечатиНоменклатуры");
		РеквизитыШаблонов.Вставить("ШаблонРабочегоНаименованияНоменклатуры");
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(РеквизитыШаблонов, ВидНоменклатуры);
	
	ЗаменитьНаименованияВШаблонах(ВидНоменклатуры, РеквизитыШаблонов, ИзмененныеНаименования);
	
КонецПроцедуры

Функция ЗаменитьНаименованияВШаблонах(ОбъектИлиСсылка, РеквизитыШаблонов, ИзмененныеНаименования)
	
	ИзмененныеРеквизитыШаблонов = Новый Структура;
	
	Для Каждого КлючИЗначение Из РеквизитыШаблонов Цикл
		
		ИзмененныйШаблон = КлючИЗначение.Значение;
		
		Для Каждого Наименования Из ИзмененныеНаименования Цикл
			ИзмененныйШаблон = СтрЗаменить(ИзмененныйШаблон, Наименования.Ключ, Наименования.Значение);
		КонецЦикла;
		
		Если ИзмененныйШаблон <> КлючИЗначение.Значение Тогда
			ИзмененныеРеквизитыШаблонов.Вставить(КлючИЗначение.Ключ, ИзмененныйШаблон);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ИзмененныеРеквизитыШаблонов.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ТипЗнч(ОбъектИлиСсылка) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда
		
		Попытка
			ЗаблокироватьДанныеДляРедактирования(ОбъектИлиСсылка);
		Исключение
			
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать вид номенклатуры ""%1"" для изменения шаблонов наименований.
				|Необходимо вручную изменить имя дополнительного реквизита в шаблонах.';
				|en = 'Cannot lock item kind ""%1"" for changing name templates. 
				|Manually change the additional attribute name in the templates.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СокрЛП(ОбъектИлиСсылка));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			Возврат Ложь;
			
		КонецПопытки;
		
		Объект = ОбъектИлиСсылка.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(Объект, ИзмененныеРеквизитыШаблонов);
		Объект.Записать();
		
	Иначе
		
		ЗаполнитьЗначенияСвойств(ОбъектИлиСсылка, ИзмененныеРеквизитыШаблонов);
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область Прочее

// Возвращает заполненную таблицу значений свойств объекта.
// 
// Параметры:
//  ДополнительныеСвойстваОбъекта - ТаблицаЗначений - Дополнительные свойства объекта
// 	Наборы - ДанныеФормыКоллекция
// 	ЭтоДополнительноеСведение - Булево
// 	
// Возвращаемое значение:
//	ТаблицаЗначений
Функция ЗначенияСвойств(ДополнительныеСвойстваОбъекта, Наборы, ЭтоДополнительноеСведение) Экспорт
	
	Если ДополнительныеСвойстваОбъекта.Количество() = 0 Тогда
		// Предварительная быстрая проверка использования дополнительных свойств.
		СвойстваНеНайдены = ДополнительныеРеквизитыИСведенияНеНайдены(Наборы, ЭтоДополнительноеСведение);
		
		Если СвойстваНеНайдены Тогда
			ОписаниеСвойств = Новый ТаблицаЗначений;
			ОписаниеСвойств.Колонки.Добавить("Набор");
			ОписаниеСвойств.Колонки.Добавить("Свойство");
			ОписаниеСвойств.Колонки.Добавить("ВладелецДополнительныхЗначений");
			ОписаниеСвойств.Колонки.Добавить("ЗаполнятьОбязательно");
			ОписаниеСвойств.Колонки.Добавить("Наименование");
			ОписаниеСвойств.Колонки.Добавить("ТипЗначения");
			ОписаниеСвойств.Колонки.Добавить("ФорматСвойства");
			ОписаниеСвойств.Колонки.Добавить("МногострочноеПолеВвода");
			ОписаниеСвойств.Колонки.Добавить("Удалено");
			ОписаниеСвойств.Колонки.Добавить("Значение");
			Возврат ОписаниеСвойств;
		КонецЕсли;
	КонецЕсли;
	
	Свойства = ДополнительныеСвойстваОбъекта.ВыгрузитьКолонку("Свойство");
	
	НаборыСвойств = Новый ТаблицаЗначений;
	
	НаборыСвойств.Колонки.Добавить(
		"Набор", Новый ОписаниеТипов("СправочникСсылка.НаборыДополнительныхРеквизитовИСведений"));
	
	НаборыСвойств.Колонки.Добавить(
		"ПорядокНабора", Новый ОписаниеТипов("Число"));
	
	Для каждого ЭлементСписка Из Наборы Цикл
		НоваяСтрока = НаборыСвойств.Добавить();
		НоваяСтрока.Набор         = ЭлементСписка.Значение;
		НоваяСтрока.ПорядокНабора = Наборы.Индекс(ЭлементСписка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Свойства",      Свойства);
	Запрос.УстановитьПараметр("НаборыСвойств", НаборыСвойств);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НаборыСвойств.Набор,
	|	НаборыСвойств.ПорядокНабора
	|ПОМЕСТИТЬ НаборыСвойств
	|ИЗ
	|	&НаборыСвойств КАК НаборыСвойств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НаборыСвойств.Набор,
	|	НаборыСвойств.ПорядокНабора,
	|	СвойстваНаборов.Свойство,
	|	СвойстваНаборов.ПометкаУдаления,
	|	СвойстваНаборов.НомерСтроки КАК ПорядокСвойства
	|ПОМЕСТИТЬ СвойстваНаборов
	|ИЗ
	|	НаборыСвойств КАК НаборыСвойств
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК СвойстваНаборов
	|		ПО (СвойстваНаборов.Ссылка = НаборыСвойств.Набор)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Свойства
	|		ПО (СвойстваНаборов.Свойство = Свойства.Ссылка)
	|ГДЕ
	|	НЕ СвойстваНаборов.ПометкаУдаления
	|	И НЕ Свойства.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Свойства.Ссылка КАК Свойство
	|ПОМЕСТИТЬ ЗаполненныеСвойства
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Свойства
	|ГДЕ
	|	Свойства.Ссылка В(&Свойства)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвойстваНаборов.Набор,
	|	СвойстваНаборов.ПорядокНабора,
	|	СвойстваНаборов.Свойство,
	|	СвойстваНаборов.ПорядокСвойства,
	|	СвойстваНаборов.ПометкаУдаления КАК Удалено
	|ПОМЕСТИТЬ ВсеСвойства
	|ИЗ
	|	СвойстваНаборов КАК СвойстваНаборов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка),
	|	0,
	|	ЗаполненныеСвойства.Свойство,
	|	0,
	|	ИСТИНА
	|ИЗ
	|	ЗаполненныеСвойства КАК ЗаполненныеСвойства
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвойстваНаборов КАК СвойстваНаборов
	|		ПО ЗаполненныеСвойства.Свойство = СвойстваНаборов.Свойство
	|ГДЕ
	|	СвойстваНаборов.Свойство ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВсеСвойства.Набор,
	|	ВсеСвойства.Свойство,
	|	ДополнительныеРеквизитыИСведения.ВладелецДополнительныхЗначений,
	|	ДополнительныеРеквизитыИСведения.ЗаполнятьОбязательно,
	|	ДополнительныеРеквизитыИСведения.Заголовок КАК Наименование,
	|	ДополнительныеРеквизитыИСведения.ТипЗначения,
	|	ДополнительныеРеквизитыИСведения.ФорматСвойства,
	|	ДополнительныеРеквизитыИСведения.МногострочноеПолеВвода,
	|	ВсеСвойства.Удалено КАК Удалено,
	|	ДополнительныеРеквизитыИСведения.Доступен,
	|	ДополнительныеРеквизитыИСведения.Виден,
	|	ДополнительныеРеквизитыИСведения.ЗависимостиДополнительныхРеквизитов.(
	|		ЗависимоеСвойство,
	|		Реквизит,
	|		Условие,
	|		Значение
	|	)
	|ИЗ
	|	ВсеСвойства КАК ВсеСвойства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|		ПО ВсеСвойства.Свойство = ДополнительныеРеквизитыИСведения.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Удалено,
	|	ВсеСвойства.ПорядокНабора,
	|	ВсеСвойства.ПорядокСвойства";
	
	Если ЭтоДополнительноеСведение Тогда
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст,
			"Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты",
			"Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения");
	КонецЕсли;
	
	ОписаниеСвойств = Запрос.Выполнить().Выгрузить();
	ОписаниеСвойств.Индексы.Добавить("Свойство");
	ОписаниеСвойств.Колонки.Добавить("Значение");
	
	// Удаление дублей свойств в нижестоящих наборах свойств.
	Индекс = ОписаниеСвойств.Количество()-1;
	
	Пока Индекс >= 0 Цикл
		Строка = ОписаниеСвойств[Индекс];
		НайденнаяСтрока = ОписаниеСвойств.Найти(Строка.Свойство);
		
		Если НайденнаяСтрока <> Неопределено
		   И НайденнаяСтрока <> Строка Тогда
			
			ОписаниеСвойств.Удалить(Индекс);
		КонецЕсли;
		
		Индекс = Индекс-1;
	КонецЦикла;
	
	// Заполнение значений свойств.
	Для Каждого Строка Из ДополнительныеСвойстваОбъекта Цикл
		ОписаниеСвойства = ОписаниеСвойств.Найти(Строка.Свойство, "Свойство");
		Если ОписаниеСвойства <> Неопределено Тогда
			// Поддержка строк неограниченной длины.
			Если НЕ ЭтоДополнительноеСведение
			   И ИспользоватьНеограниченнуюСтроку(
			         ОписаниеСвойства.ТипЗначения, ОписаниеСвойства.МногострочноеПолеВвода)
			   И НЕ ПустаяСтрока(Строка.ТекстоваяСтрока) Тогда 
				
				ОписаниеСвойства.Значение = Строка.ТекстоваяСтрока;
			Иначе
				ОписаниеСвойства.Значение = Строка.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОписаниеСвойств;
	
КонецФункции

// Дополнительные реквизиты и сведения не найдены (только для внутреннего использования).
// 
// Параметры:
//  Наборы - ДанныеФормыКоллекция - Наборы
//  ЭтоДополнительноеСведение - Булево - Это дополнительное сведение
//  ОтложеннаяИнициализация - Булево - Отложенная инициализация
// 
// Возвращаемое значение:
//  Булево - Дополнительные реквизиты и сведения не найдены
Функция ДополнительныеРеквизитыИСведенияНеНайдены(Наборы, ЭтоДополнительноеСведение, ОтложеннаяИнициализация = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаборыСвойств", Наборы.ВыгрузитьЗначения());
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СвойстваНаборов.Свойство КАК Свойство
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК СвойстваНаборов
	|ГДЕ
	|	СвойстваНаборов.Ссылка В(&НаборыСвойств)
	|	И НЕ СвойстваНаборов.ПометкаУдаления";
	
	Если ЭтоДополнительноеСведение Тогда
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст,
			"Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты",
			"Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	СвойстваНеНайдены = Запрос.Выполнить().Пустой();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат СвойстваНеНайдены;
КонецФункции

// Проверяет возможность использования для свойства строки неограниченный длины.
// 
// Параметры:
//  ТипЗначенияСвойства - Произвольный - Тип значения свойства
//  МногострочноеПолеВвода - Произвольный - Многострочное поле ввода
// 
// Возвращаемое значение:
//  Булево - Использовать неограниченную строку
Функция ИспользоватьНеограниченнуюСтроку(ТипЗначенияСвойства, МногострочноеПолеВвода) Экспорт
	
	Если ТипЗначенияСвойства.СодержитТип(Тип("Строка"))
	   И ТипЗначенияСвойства.Типы().Количество() = 1
	   И МногострочноеПолеВвода > 1 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Получает описание предопределенных наборов свойств.
//
// Параметры:
//  Наборы - ДеревоЗначений - с колонками:
//     * Имя           - Строка - Имя набора свойств. Формируется из полного имени объекта
//                       метаданных заменой символа "." на "_".
//                       Например, "Документ_ЗаказПокупателя".
//     * Идентификатор - УникальныйИдентификатор - Идентификатор ссылки предопределенного элемента.
//     * Используется  - Неопределено, Булево - Признак того, что набор свойств используется.
//                       Например, можно использовать для скрытия набора по функциональным опциям.
//                       Значение по умолчанию - Неопределено, соответствует значению Истина.
//     * ЭтоГруппа     - Булево - Истина, если набор свойств является группой.
//
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт
	
	ТМЦВЭксплуатацииСервер.ПриПолученииПредопределенныхНаборовСвойств(Наборы);
	
	//++ НЕ УТ
	ВнеоборотныеАктивы.ПриПолученииПредопределенныхНаборовСвойств(Наборы);
	//-- НЕ УТ
	
	//++ НЕ УТКА
	УправлениеРемонтами.ПриПолученииПредопределенныхНаборовСвойств(Наборы);
	//-- НЕ УТКА
	
	Если НЕ ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПодсистемы") Тогда
		
		Набор = Наборы.Строки.Добавить();
		Набор.Имя = "Справочник_СтруктураПредприятия";
		Набор.Идентификатор = Новый УникальныйИдентификатор("c091b4fd-9802-11e9-80cd-4cedfb43b11a");
		
		Набор = Наборы.Строки.Добавить();
		Набор.Имя = "Справочник_ФизическиеЛица";
		Набор.Идентификатор = Новый УникальныйИдентификатор("c091b4e3-9802-11e9-80cd-4cedfb43b11a");
		
		Набор = Наборы.Строки.Добавить();
		Набор.Имя = "Справочник_ВидыДокументовФизическихЛиц";
		Набор.Идентификатор = Новый УникальныйИдентификатор("d42dbf6a-9802-11e9-80cd-4cedfb43b11a");
		
		Набор = Наборы.Строки.Добавить();
		Набор.Имя = "Документ_ПодтверждениеЗачисленияЗарплаты";
		Набор.Идентификатор = Новый УникальныйИдентификатор("c091b4ce-9802-11e9-80cd-4cedfb43b11a");
		
	КонецЕсли;
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_СверкаНачальныхОстатковПоСкладу";
	Набор.Идентификатор = Новый УникальныйИдентификатор("de562360-2ddb-41d4-affa-1d1bcab44b64");
	
	//++ НЕ УТ
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ОтражениеЗарплатыВФинансовомУчете2_5";
	Набор.Идентификатор = Новый УникальныйИдентификатор("f6751afd-bf23-492f-a2b6-3d87df8751b3");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_ВидыНачисленийУдержаний";
	Набор.Идентификатор = Новый УникальныйИдентификатор("8b46e704-739f-4bf4-bff1-f6739989eaa6");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_ОбъектыВозникновенияЗатрат";
	Набор.Идентификатор = Новый УникальныйИдентификатор("10afff39-4ca9-11ea-a3f0-4cedfb68273f");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ОбесценениеВНА";
	Набор.Идентификатор = Новый УникальныйИдентификатор("109b6a0d-f0c4-46a3-9061-405f492c9d24");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_ЕдиницыГенерирующиеДенежныеСредства";
	Набор.Идентификатор = Новый УникальныйИдентификатор("831d97ce-b357-46b9-82c7-240d0af76eb1");
	//-- НЕ УТ
	
	//++ НЕ УТКА
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_НачальныеОстаткиНЗППоПартиямПроизводства";
	Набор.Идентификатор = Новый УникальныйИдентификатор("eb27c57c-ed52-47ae-950c-294984db1c1b");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_НачальныеОстаткиНЗППоПодразделениям";
	Набор.Идентификатор = Новый УникальныйИдентификатор("68cc0222-1b01-4928-99de-80806db631ac");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_УстановкаНормативовПроизводственныхРасходов";
	Набор.Идентификатор = Новый УникальныйИдентификатор("fd6879f9-2e4e-43cb-b6a6-7b53e78efe51");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ПлановаяКалькуляция2_2";
	Набор.Идентификатор = Новый УникальныйИдентификатор("4c45141f-31b1-4823-8a1c-bb8369e082ea");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_ТехнологическиеПроцессы";
	Набор.Идентификатор = Новый УникальныйИдентификатор("5d7e6c76-44f4-4234-89b5-a911ee94f167");
	Набор.Используется  = ПолучитьФункциональнуюОпцию("ИспользоватьТехнологическиеПроцессы");
	
	//-- НЕ УТКА
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_ДоговорыЭквайринга";
	Набор.Идентификатор = Новый УникальныйИдентификатор("73aa43ee-cabb-472d-b2ba-b191fa820620");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_Бронирование";
	Набор.Идентификатор = Новый УникальныйИдентификатор("b9b299f9-f870-44c7-bbea-b00f8b7b1ae0");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ЗаявкаНаКомандировку";
	Набор.Идентификатор = Новый УникальныйИдентификатор("5c35575c-3121-44bc-8039-14c4d49983e0");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_ЦеновыеГруппы";
	Набор.Идентификатор = Новый УникальныйИдентификатор("32b8b176-f9b6-11ea-80f0-1831bf523deb");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_КорректировкаНазначенияТоваров";
	Набор.Идентификатор = Новый УникальныйИдентификатор("b3a20385-a6ab-41c5-b92d-791290d34f5a");
	
	//Описание групп

	//++ НЕ УТКА
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ПроизводственнаяОперация2_2";
	Набор.Идентификатор = Новый УникальныйИдентификатор("32542057-ad69-4117-812f-beeb230e5f06");
	Набор.ЭтоГруппа = Истина;
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Документ_ПроизводственнаяОперация2_2_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("b657e8cf-b14b-4742-8049-286da4ed58f9");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_УзлыОбъектовЭксплуатации";
	Набор.Идентификатор = Новый УникальныйИдентификатор("4db038ec-08e6-4764-a271-e7e7a0f07839");
	Набор.ЭтоГруппа = Истина;
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_УзлыОбъектовЭксплуатации_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("14b16392-2c48-424a-92af-416c00c28dfc");
	//-- НЕ УТКА
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_Номенклатура";
	Набор.Идентификатор = Новый УникальныйИдентификатор("556f79a2-3f82-4c97-9969-9b389945b3e3");
	Набор.ЭтоГруппа = Истина;
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_Номенклатура_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("b03509f2-680f-459b-ac16-d5a7c34ebfc6");
	
	//++ НЕ УТ
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_ОбъектыЭксплуатации";
	Набор.Идентификатор = Новый УникальныйИдентификатор("28ff3dfe-b65d-48f0-af5f-4962cea026ea");
	Набор.ЭтоГруппа = Истина;
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_ОбъектыЭксплуатации_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("e9a88d39-aeb9-4892-b319-a984ad275132");
	//-- НЕ УТ
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_Партнеры";
	Набор.Идентификатор = Новый УникальныйИдентификатор("4e3b8c92-3da9-4fe3-9256-c63d89407653");
	Набор.ЭтоГруппа = Истина;
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_Партнеры_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("4b07bb18-b2d4-46f6-b228-c378a280def1");
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_Партнеры_Клиенты";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("6a51863a-02a2-49ca-983f-78eb94939a94");
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_Партнеры_Конкуренты";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("7038e549-e6d2-4e0c-aa5e-e24045053505");
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_Партнеры_Поставщики";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("f54ac927-da38-4dbe-826b-1b457678d952");
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_Партнеры_Прочие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("75311ade-943a-4914-9e5b-c657c5a9899b");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_СерииНоменклатуры";
	Набор.Идентификатор = Новый УникальныйИдентификатор("a47538d3-e375-45f8-8325-b5948ca9575a");
	Набор.ЭтоГруппа = Истина;
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_СерииНоменклатуры_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("d9f45df2-85b2-4da1-a1ae-e4c6c44f08bc");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_ХарактеристикиНоменклатуры";
	Набор.Идентификатор = Новый УникальныйИдентификатор("35ae0ba3-fac6-45f2-a8da-35205563d746");
	Набор.ЭтоГруппа = Истина;
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_ХарактеристикиНоменклатуры_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("7c8a1529-810e-4f5a-b5ff-bde9861c75d2");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_Инциденты";
	Набор.Идентификатор = Новый УникальныйИдентификатор("006d165e-67d7-4813-95f7-30aa2f5dd72a");
	Набор.ЭтоГруппа = Истина;
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_Инциденты_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("f19ed12e-d5cd-4b1b-b57d-b6d9d0139844");
	
	ЗарегистрироватьНаборСвойств(Наборы, "801f514d-6181-4b90-858d-9162a37587ee", "Документ_АвансовыйОтчет");
	ЗарегистрироватьНаборСвойств(Наборы, "69506c38-be24-4674-a051-f6c376c09785", "Документ_АктВыполненныхРабот");
	ЗарегистрироватьНаборСвойств(Наборы, "ba4c6ae8-37fb-40fb-9da7-d9ac1ababd9f", "Документ_АктОРасхожденияхПослеОтгрузки");
	ЗарегистрироватьНаборСвойств(Наборы, "c1cab76f-caab-4fe3-9e88-8bc81f921d7f", "Документ_АктОРасхожденияхПослеПеремещения");
	ЗарегистрироватьНаборСвойств(Наборы, "9c639181-871f-4c71-b22c-51c099c3086b", "Документ_АктОРасхожденияхПослеПриемки");
	ЗарегистрироватьНаборСвойств(Наборы, "9c5df4e2-4291-46b0-a8ec-d76f8928b905", "Документ_АннулированиеПодарочныхСертификатов");
	ЗарегистрироватьНаборСвойств(Наборы, "64afc2f5-3111-4526-9125-41148861eadb", "Документ_ВводОстатков");
	ЗарегистрироватьНаборСвойств(Наборы, "f92f4b5b-4d75-4ba7-9e5e-d928d4582278", "Документ_ВводОстатковВзаиморасчетов");
	ЗарегистрироватьНаборСвойств(Наборы, "107bd5db-91f6-4cc8-8810-2349e91eb948", "Документ_ВводОстатковДенежныхСредств");
	ЗарегистрироватьНаборСвойств(Наборы, "18589708-cddf-4dba-b816-948afc1fc655", "Документ_ВводОстатковОПродажахЗаПрошлыеПериоды");
	ЗарегистрироватьНаборСвойств(Наборы, "6686df75-1d21-450f-8dd4-b33907ee4d6b", "Документ_ВводОстатковПоФинансовымИнструментам");
	ЗарегистрироватьНаборСвойств(Наборы, "de2acb0b-0893-4ea6-8f0f-2c5e14856961", "Документ_ВводОстатковПрочиеРасходы");
	ЗарегистрироватьНаборСвойств(Наборы, "6ae3cdb3-3831-44c2-9fea-b87154818ff9", "Документ_ВводОстатковПрочихАктивовПассивов");
	ЗарегистрироватьНаборСвойств(Наборы, "fb910346-f64d-4b89-9d4b-dd4426bc64a8", "Документ_ВводОстатковРасчетовПоЭквайрингу");
	ЗарегистрироватьНаборСвойств(Наборы, "12e68b85-c228-4bea-837d-df9122a2b4f7", "Документ_ВводОстатковСПодотчетниками");
	ЗарегистрироватьНаборСвойств(Наборы, "b4a699ac-aa0d-42c4-b451-ae3d27f23422", "Документ_ВводОстатковТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "a5b7c017-106e-4373-ac52-fc63f06e1c62", "Документ_ВзаимозачетЗадолженности");
	ЗарегистрироватьНаборСвойств(Наборы, "418fab75-e201-4dc6-abac-8f2aa6c8a8a6", "Документ_ВнесениеДенежныхСредствВКассуККМ");
	ЗарегистрироватьНаборСвойств(Наборы, "39594b94-13bb-44eb-bcc3-6c3c03f38380", "Документ_ВнутреннееПотребление");
	ЗарегистрироватьНаборСвойств(Наборы, "bfdfd72c-5524-4bea-b2d2-bf46d127d224", "Документ_ВозвратТоваровМеждуОрганизациями");
	ЗарегистрироватьНаборСвойств(Наборы, "60bcfb69-ab90-4d19-b35b-f542da756f07", "Документ_ВозвратТоваровОтКлиента");
	ЗарегистрироватьНаборСвойств(Наборы, "ea84fc70-303e-486d-b07c-41fa4b2ddd0a", "Документ_ВозвратТоваровПоставщику");
	ЗарегистрироватьНаборСвойств(Наборы, "7293ce55-1397-45cb-8951-de6fad85a001", "Документ_ВыемкаДенежныхСредствИзКассыККМ");
	ЗарегистрироватьНаборСвойств(Наборы, "5a5cc4ba-7ac4-4b29-ae6c-ba1b7fb46d9a", "Документ_ВыкупВозвратнойТарыКлиентом");
	ЗарегистрироватьНаборСвойств(Наборы, "a7d515df-add9-450c-a332-916a6790303f", "Документ_ВыкупВозвратнойТарыУПоставщика");
	ЗарегистрироватьНаборСвойств(Наборы, "63fdb30c-5b2f-4dad-b4b9-e1dd907d30e8", "Документ_ВыкупПринятыхНаХранениеТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "8a8bd71e-7dba-4e2c-ac68-4a54c23d6a0b", "Документ_ВыкупТоваровХранителем");
	ЗарегистрироватьНаборСвойств(Наборы, "2b4670d0-c81c-4939-9e8d-4de3cca5f43f", "Документ_ДвижениеПрочихАктивовПассивов");
	ЗарегистрироватьНаборСвойств(Наборы, "95848746-ee8c-459b-b52c-ec376c88b51a", "Документ_ДоверенностьВыданная");
	ЗарегистрироватьНаборСвойств(Наборы, "1536e0a2-1247-4057-b129-662f18baabbf", "Документ_ЗаданиеНаПеревозку");
	ЗарегистрироватьНаборСвойств(Наборы, "60ef6213-9b62-46c9-8484-110edab7dc1d", "Документ_ЗаданиеТорговомуПредставителю");
	ЗарегистрироватьНаборСвойств(Наборы, "03dd5357-8b34-4da5-a195-8798e22640a3", "Документ_ЗаказКлиента");
	ЗарегистрироватьНаборСвойств(Наборы, "9d859cfe-35a8-4239-a26b-39afc8da2d24", "Документ_ЗаказНаВнутреннееПотребление");
	ЗарегистрироватьНаборСвойств(Наборы, "2c31eee1-7175-4dda-bbd7-f55f0a4c3f42", "Документ_ЗаказНаПеремещение");
	ЗарегистрироватьНаборСвойств(Наборы, "4c278a13-c0bb-407f-8bb3-6428eebc2d61", "Документ_ЗаказНаСборку");
	ЗарегистрироватьНаборСвойств(Наборы, "33eedfd9-352b-4d54-88ae-739511f8e846", "Документ_ЗаказПоставщику");
	ЗарегистрироватьНаборСвойств(Наборы, "4342fadf-1cdd-4d59-b2e3-05d19be6ade5", "Документ_ЗаявкаНаВозвратТоваровОтКлиента");
	ЗарегистрироватьНаборСвойств(Наборы, "7b4d5dbb-b0a9-4d4f-b245-46d2709dad8a", "Документ_ЗаявкаНаРасходованиеДенежныхСредств");
	ЗарегистрироватьНаборСвойств(Наборы, "2917737a-b940-4157-bb6f-2f43049f3efa", "Документ_ЗаявлениеОВвозеТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "66bbaa92-0c69-4ea8-8dc7-2d03e85b0980", "Документ_ИзменениеАссортимента");
	ЗарегистрироватьНаборСвойств(Наборы, "ed4dc447-ec20-46ec-b121-44d738325b89", "Документ_ИнвентаризационнаяОпись");
	ЗарегистрироватьНаборСвойств(Наборы, "ffe2909c-7dbe-47c0-b880-1c31f34f007d", "Документ_ИнвентаризацияНаличныхДенежныхСредств");
	ЗарегистрироватьНаборСвойств(Наборы, "efefe76a-2f6a-43be-a4d2-72ff08a6618f", "Документ_КоммерческоеПредложениеКлиенту");
	ЗарегистрироватьНаборСвойств(Наборы, "0f4f8e3b-a8c8-48e4-90df-6dcc152e68fa", "Документ_КорректировкаПлановыхПотребностей");
	ЗарегистрироватьНаборСвойств(Наборы, "ff1efb04-feed-495b-8b39-8e7da0cb097f", "Документ_КорректировкаПриобретения");
	ЗарегистрироватьНаборСвойств(Наборы, "14fd2e36-20f8-4b9f-883f-28676d24993e", "Документ_КорректировкаРеализации");
	ЗарегистрироватьНаборСвойств(Наборы, "5e071822-b125-446d-8785-8369f551153d", "Документ_КорректировкаРегистров");
	ЗарегистрироватьНаборСвойств(Наборы, "9d37be73-5f56-44ed-b443-6debbd0c1c00", "Документ_НачислениеРеверсивногоНДС");
	ЗарегистрироватьНаборСвойств(Наборы, "5614c32b-f2ca-4a87-99f1-b59c6e669cd4", "Документ_НачислениеИСписаниеБонусныхБаллов");
	ЗарегистрироватьНаборСвойств(Наборы, "fe22e6fd-0818-4dd3-87b2-400d60777c16", "Документ_НормативРаспределенияПлановПродажПоКатегориям");
	ЗарегистрироватьНаборСвойств(Наборы, "66c0227a-8d36-40fe-85f6-18ff19fccbb5", "Документ_ОжидаемоеПоступлениеДенежныхСредств");
	ЗарегистрироватьНаборСвойств(Наборы, "53523743-007a-4cb4-b4c8-fbf16c2af464", "Документ_ОперацияПоПлатежнойКарте");
	ЗарегистрироватьНаборСвойств(Наборы, "f3940a0a-9396-402d-a823-85a709757c62", "Документ_ОприходованиеИзлишковТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "46f35046-5db1-4da9-83f6-b4cd9f83905b", "Документ_ОприходованиеИзлишковТоваровУХранителя");
	ЗарегистрироватьНаборСвойств(Наборы, "616278ec-2a6f-41a8-bc6d-25f24b3a536a", "Документ_ОрдерНаОтражениеИзлишковТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "5c000661-739b-4b1c-bbc4-b6d09a67a5d5", "Документ_ОрдерНаОтражениеНедостачТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "bfa5aba5-2304-4ea6-bef5-191adb786e6a", "Документ_ОрдерНаОтражениеПересортицыТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "fdbb8c46-6fd4-4ee9-a6e4-802b20491a31", "Документ_ОрдерНаОтражениеПорчиТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "234b1bcf-7f61-481a-8cc6-00fe315d25d9", "Документ_ОрдерНаПеремещениеТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "75841b9d-7294-44f4-9d25-d978fd71bf2e", "Документ_ОтборРазмещениеТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "a3b6b141-52ea-479b-aa08-eb5e89cba5e9", "Документ_ОтгрузкаТоваровСХранения");
	ЗарегистрироватьНаборСвойств(Наборы, "e2352c1d-e5f2-4bb3-a054-db4b8cd70fbc", "Документ_ОтражениеРасхожденийПриИнкассацииДенежныхСредств");
	ЗарегистрироватьНаборСвойств(Наборы, "01f2e38d-a7be-4b85-8149-e86a6f8ccb25", "Документ_ОтчетБанкаПоОперациямЭквайринга");
	ЗарегистрироватьНаборСвойств(Наборы, "f56976e3-473e-4a42-8505-d9c0f09ccd8c", "Документ_ОтчетКомиссионера");
	ЗарегистрироватьНаборСвойств(Наборы, "c5f01e92-cd38-4fdd-bb4f-dc35947f60e8", "Документ_ОтчетКомиссионераОСписании");
	ЗарегистрироватьНаборСвойств(Наборы, "98063dee-6c0a-44bf-b171-db4c80a01f43", "Документ_ОтчетКомитенту");
	ЗарегистрироватьНаборСвойств(Наборы, "b415714a-0fac-4ed8-ac1d-2d9acb3d5486", "Документ_ОтчетКомитентуОЗакупках");
	ЗарегистрироватьНаборСвойств(Наборы, "645176c8-de13-49ba-a171-daadf684a1df", "Документ_ОтчетКомитентуОСписании");
	ЗарегистрироватьНаборСвойств(Наборы, "87408fa0-fcbe-aeb4-88a2-d6778ccdae67", "Документ_ОтчетОРозничныхВозвратах");	
	ЗарегистрироватьНаборСвойств(Наборы, "84708af0-bfce-4aeb-8a28-e7687cdcae76", "Документ_ОтчетОРозничныхПродажах");
	ЗарегистрироватьНаборСвойств(Наборы, "02214fff-b37e-4819-a630-691a9197cd68", "Документ_ОтчетОСписанииТоваровУХранителя");
	ЗарегистрироватьНаборСвойств(Наборы, "c8c8e810-dad6-4bca-8acc-e1649a0814a0", "Документ_ОтчетПоКомиссииМеждуОрганизациями");
	ЗарегистрироватьНаборСвойств(Наборы, "04325bfb-d094-4560-9806-2065b07f979f", "Документ_ОтчетПоКомиссииМеждуОрганизациямиОСписании");
	ЗарегистрироватьНаборСвойств(Наборы, "348b9fd2-2329-474f-82a9-801314db98d0", "Документ_ПередачаТоваровМеждуОрганизациями");
	ЗарегистрироватьНаборСвойств(Наборы, "d1c2fbba-bdc4-4132-9bde-06277de9fc58", "Документ_ПередачаТоваровХранителю");
	ЗарегистрироватьНаборСвойств(Наборы, "e9017c23-1928-40d1-96ac-abdd536071b2", "Документ_ПеремещениеТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "a102a711-55fe-4252-8c97-70dd11e9b77d", "Документ_ПересортицаТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "7ba77144-f8a4-48d4-8de4-8636e134ebc4", "Документ_ПересортицаТоваровУХранителя");
	ЗарегистрироватьНаборСвойств(Наборы, "53061e7a-7187-460d-97b3-3b78c328a839", "Документ_ПересчетТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "82333b2a-3cbf-4891-8032-a8d37f312576", "Документ_ПланВнутреннихПотреблений");
	ЗарегистрироватьНаборСвойств(Наборы, "8ef37129-a607-401b-8ab6-b437402a7e03", "Документ_ПланЗакупок");
	ЗарегистрироватьНаборСвойств(Наборы, "413d6ed2-8438-4142-8cf9-1ba6b7e906ff", "Документ_ПланОстатков");
	ЗарегистрироватьНаборСвойств(Наборы, "6cfc9e82-d818-4f58-a56a-d2ddeaf180f4", "Документ_ПланПродаж");
	ЗарегистрироватьНаборСвойств(Наборы, "18e96531-e429-459a-bd3c-32fb78e8b467", "Документ_ПланПродажПоКатегориям");
	ЗарегистрироватьНаборСвойств(Наборы, "e375b2b8-f36b-4131-b358-2e210a6f4ec2", "Документ_ПланСборкиРазборки");
	ЗарегистрироватьНаборСвойств(Наборы, "4fce3a52-74d5-4abc-9c82-437107cc2a9d", "Документ_ПоручениеЭкспедитору");
	ЗарегистрироватьНаборСвойств(Наборы, "6468b535-c213-4b70-b39b-2275a88674a3", "Документ_ПорчаТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "a4ddba45-9418-444c-b828-61d6002f30e8", "Документ_ПорчаТоваровУХранителя");
	ЗарегистрироватьНаборСвойств(Наборы, "06f31d96-e21c-45fb-963d-f5f0c2fd1700", "Документ_ПоступлениеБезналичныхДенежныхСредств");
	ЗарегистрироватьНаборСвойств(Наборы, "3d1f393c-1f47-473a-b3af-310d3fc8301d", "Документ_ПоступлениеТоваровНаСклад");
	ЗарегистрироватьНаборСвойств(Наборы, "289dcab0-792f-45b0-8846-50814d5800d2", "Документ_ПоступлениеТоваровОтХранителя");
	ЗарегистрироватьНаборСвойств(Наборы, "cb8baba2-d302-4d6f-a886-9cfea6d8677c", "Документ_ПоступлениеУслугВПодразделение");
	ЗарегистрироватьНаборСвойств(Наборы, "368e8cc5-3ebf-41dd-a547-9af7effa1271", "Документ_ПриемкаТоваровНаХранение");
	ЗарегистрироватьНаборСвойств(Наборы, "36a77c62-862d-40a1-88d6-0cc59b6d6a6a", "Документ_ПриобретениеТоваровУслуг");
	ЗарегистрироватьНаборСвойств(Наборы, "411484b4-1c7e-4ca7-9cae-f74165efd1c8", "Документ_ПриобретениеУслугПрочихАктивов");
	ЗарегистрироватьНаборСвойств(Наборы, "8a4a8161-ea9a-4803-80f7-b12cede75b86", "Документ_ПриходныйКассовыйОрдер");
	ЗарегистрироватьНаборСвойств(Наборы, "327fa038-96fd-4955-b518-ab5804ca6997", "Документ_ПриходныйОрдерНаТовары");
	ЗарегистрироватьНаборСвойств(Наборы, "400c7d9a-0329-4355-b194-d9ee777be42d", "Документ_ПрочееОприходованиеТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "ef88ae64-5759-45c1-b936-eafb1ec2f68e", "Документ_ПрочиеДоходыРасходы");
	ЗарегистрироватьНаборСвойств(Наборы, "f33caa42-29bf-46da-8ce8-24d276aa5605", "Документ_РаспоряжениеНаПеремещениеДенежныхСредств");
	ЗарегистрироватьНаборСвойств(Наборы, "5d2fee21-0aad-4e7d-bcf3-227ed455b2dd", "Документ_РаспределениеДоходовПоНаправлениямДеятельности");
	ЗарегистрироватьНаборСвойств(Наборы, "4f0d1f0d-4d18-4c12-9b06-2539cad45d7c", "Документ_РаспределениеПрочихЗатрат");
	ЗарегистрироватьНаборСвойств(Наборы, "64af17e6-b93c-4ec4-9f77-e9ec1f0cc608", "Документ_РаспределениеРасходовБудущихПериодов");
	ЗарегистрироватьНаборСвойств(Наборы, "30a04b84-de56-491d-87c1-9be488409178", "Документ_РасходныйКассовыйОрдер");
	ЗарегистрироватьНаборСвойств(Наборы, "46490293-a9be-4da7-8133-f439c546298e", "Документ_РасходныйОрдерНаТовары");
	ЗарегистрироватьНаборСвойств(Наборы, "30345ec6-cfd9-4f28-8da1-32596d600b32", "Документ_РеализацияТоваровУслуг");
	ЗарегистрироватьНаборСвойств(Наборы, "fc704a91-efe3-4d1d-bdcf-60b7d2573232", "Документ_РеализацияУслугПрочихАктивов");
	ЗарегистрироватьНаборСвойств(Наборы, "d341322b-84c7-45fa-a57d-5c62fe26824f", "Документ_РегистрацияЦенНоменклатурыПоставщика");
	ЗарегистрироватьНаборСвойств(Наборы, "b5bfb826-6e0f-4278-8105-ed1ad27939f7", "Документ_СборкаТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "a66116af-cda2-4a92-ae9f-c9c4c82acf7e", "Документ_СверкаВзаиморасчетов");
	ЗарегистрироватьНаборСвойств(Наборы, "793d65f3-6cae-40be-b9ef-f6dab8a45e78", "Документ_СверкаВзаиморасчетов2_5_11");
	ЗарегистрироватьНаборСвойств(Наборы, "321a9487-1049-4326-9473-294c9df1150b", "Документ_СписаниеБезналичныхДенежныхСредств");
	ЗарегистрироватьНаборСвойств(Наборы, "f1f8032c-b58c-45d9-a053-626d80baa016", "Документ_СписаниеРасхожденийПоступлениеПриобретение");
	ЗарегистрироватьНаборСвойств(Наборы, "08c14b9b-0e3a-4dbb-85a8-0f13fe3eed24", "Документ_КорректировкаЗадолженности");
	ЗарегистрироватьНаборСвойств(Наборы, "8bb7fae3-b885-4b0c-bd01-c4dbf52c0998", "Документ_СписаниеНедостачТоваров");
	ЗарегистрироватьНаборСвойств(Наборы, "4785cc91-2f39-43c6-8426-12fc56b471a9", "Документ_ОтчетОСписанииТоваровСХранения");
	ЗарегистрироватьНаборСвойств(Наборы, "a1dd40d8-1959-4d7e-a08f-0847804865bd", "Документ_СчетНаОплатуКлиенту");
	ЗарегистрироватьНаборСвойств(Наборы, "8a5574f1-c64b-42b9-8c4a-88352d921694", "Документ_ТаможеннаяДекларацияИмпорт");
	ЗарегистрироватьНаборСвойств(Наборы, "65668eeb-1f44-41bb-8f01-695caaf88cba", "Документ_УпаковочныйЛист");
	ЗарегистрироватьНаборСвойств(Наборы, "aa777918-c7b7-46da-8b91-9769691115dc", "Документ_УстановкаБлокировокЯчеек");
	ЗарегистрироватьНаборСвойств(Наборы, "ff884028-ef80-4bb9-8be3-5b4bf94620c3", "Документ_УстановкаКвотАссортимента");
	ЗарегистрироватьНаборСвойств(Наборы, "da4604d7-6cba-4bfd-afdc-5ae5c693e533", "Документ_УстановкаЦенНоменклатуры");
	ЗарегистрироватьНаборСвойств(Наборы, "822c566d-f23f-4a8f-b4d5-5d0903a6dd27", "ПланВидовХарактеристик_КаналыРекламныхВоздействий");
	ЗарегистрироватьНаборСвойств(Наборы, "7b41e8e0-bbe7-4943-a859-c9705218896b", "ПланВидовХарактеристик_СтатьиАктивовПассивов");
	ЗарегистрироватьНаборСвойств(Наборы, "cfb5df13-8137-4eae-b1e8-b769f09116fd", "ПланВидовХарактеристик_СтатьиДоходов");
	ЗарегистрироватьНаборСвойств(Наборы, "c9c3ca99-a1c6-46f5-960c-d494dee30b80", "ПланВидовХарактеристик_СтатьиРасходов");
	ЗарегистрироватьНаборСвойств(Наборы, "fa532757-da27-4e26-ac5f-c32550213cb1", "Справочник_БанковскиеСчетаКонтрагентов");
	ЗарегистрироватьНаборСвойств(Наборы, "f6d04f12-8796-458a-8c35-223f917b6794", "Справочник_БанковскиеСчетаОрганизаций");
	ЗарегистрироватьНаборСвойств(Наборы, "fa6b1e95-38c5-4ba5-85d3-9263dc8bf5f1", "Справочник_БизнесРегионы");
	ЗарегистрироватьНаборСвойств(Наборы, "99130094-d0dd-406f-8068-68b71ba6acb5", "Справочник_БонусныеПрограммыЛояльности");
	ЗарегистрироватьНаборСвойств(Наборы, "6a89b3b1-87ee-4d87-a502-0f9cfe3d67fd", "Справочник_ВариантыКомплектацииНоменклатуры");
	ЗарегистрироватьНаборСвойств(Наборы, "900ac571-f985-405c-a50e-c9c6edfbae4c", "Справочник_ВидыКартЛояльности");
	ЗарегистрироватьНаборСвойств(Наборы, "058d7e98-beea-4834-b7cb-1ab05d63c8f3", "Справочник_ВидыНоменклатуры");
	ЗарегистрироватьНаборСвойств(Наборы, "34177601-7a1d-4283-9b22-a8cb0e58bb42", "Справочник_ВидыПодарочныхСертификатов");
	ЗарегистрироватьНаборСвойств(Наборы, "f9dd70bb-e697-42ae-99c4-aaa62abdbf27", "Справочник_ВидыЦен");
	ЗарегистрироватьНаборСвойств(Наборы, "f0dc7108-4df0-4065-ae1f-cc20e167678c", "Справочник_ВидыЦенПоставщиков");
	ЗарегистрироватьНаборСвойств(Наборы, "7ec7394d-a2bc-4493-a01f-83bb1c5730e4", "Справочник_ГруппыФинансовогоУчетаНоменклатуры");
	ЗарегистрироватьНаборСвойств(Наборы, "d23b5f4f-061a-4c28-9cc7-f7ede71c8ab7", "Справочник_ДоговорыКонтрагентов");
	ЗарегистрироватьНаборСвойств(Наборы, "ebdaa4c6-750c-47cf-b4e1-d1fbb281bfe5", "Справочник_ДоговорыКредитовИДепозитов");
	ЗарегистрироватьНаборСвойств(Наборы, "132b5b62-b81a-47cb-897b-c5280b32b52f", "Справочник_ДоговорыМеждуОрганизациями");
	ЗарегистрироватьНаборСвойств(Наборы, "9623d53e-672d-4b56-b054-3ff1c5d1437e", "УдалитьСправочник_ДополнительныеОтчетыИОбработки");
	ЗарегистрироватьНаборСвойств(Наборы, "03239253-36af-4b77-95fd-a62e4f1bdebc", "Справочник_ЗадачиПроектов");
	ЗарегистрироватьНаборСвойств(Наборы, "5204eeef-8b8e-4169-8b12-b33a5badaaa6", "Справочник_ИсточникиДанныхПланирования");
	ЗарегистрироватьНаборСвойств(Наборы, "6cc28cb7-986c-4f23-a8a7-14ca2a48f3de", "Справочник_КартыЛояльности");
	ЗарегистрироватьНаборСвойств(Наборы, "dbde3b0f-2cb1-44f6-9b8a-30ea7f389a20", "Справочник_Кассы");
	ЗарегистрироватьНаборСвойств(Наборы, "350d3a26-98e4-4232-a0df-e555f1482afb", "Справочник_КассыККМ");
	ЗарегистрироватьНаборСвойств(Наборы, "243e323f-965d-4767-9008-fb633876c63e", "Справочник_КоллекцииНоменклатуры");
	ЗарегистрироватьНаборСвойств(Наборы, "5321769f-c1aa-47de-b029-0a31f3d2c67a", "Справочник_КонтактныеЛицаПартнеров");
	ЗарегистрироватьНаборСвойств(Наборы, "312bf0ee-35a3-4cd1-b84e-1e54fd5d3e4f", "Справочник_Контрагенты");
	ЗарегистрироватьНаборСвойств(Наборы, "b820665e-f743-4072-bc2b-804e020aefe6", "Справочник_МаркетинговыеМероприятия");
	ЗарегистрироватьНаборСвойств(Наборы, "e8967082-7e2b-48ec-add2-c756ffeed0cf", "Справочник_НаправленияДеятельности");
	ЗарегистрироватьНаборСвойств(Наборы, "a8dc8cd3-db32-4280-9b2a-05ce095e6610", "Справочник_ОбластиХранения");
	ЗарегистрироватьНаборСвойств(Наборы, "83c464a3-259d-49f9-8eda-5cd69322550a", "Справочник_Организации");
	ЗарегистрироватьНаборСвойств(Наборы, "687e3458-4629-4682-bca7-675c6806dfd2", "Справочник_ПодарочныеСертификаты");
	ЗарегистрироватьНаборСвойств(Наборы, "a26d2637-fc50-4397-99be-2b7eabc7ce86", "Справочник_ПодключаемоеОборудование");
	ЗарегистрироватьНаборСвойств(Наборы, "c6087fe9-09d7-491b-a2d2-2860fc7ac555", "Справочник_ПравилаНачисленияИСписанияБонусныхБаллов");
	ЗарегистрироватьНаборСвойств(Наборы, "f864b090-942a-4cdd-8dd3-0fdc34d7aafc", "Справочник_ПравилаОбменаСПодключаемымОборудованиемOffline");
	ЗарегистрироватьНаборСвойств(Наборы, "1a291c8e-09ed-4531-b1d6-d0ebbe5b34f4", "Справочник_Претензии");
	ЗарегистрироватьНаборСвойств(Наборы, "f36c7c4a-dded-47c0-8283-b526aefaf3a3", "Справочник_Проекты");
	ЗарегистрироватьНаборСвойств(Наборы, "dd99c581-5039-424c-b290-26ba21dba251", "Справочник_ПрочиеАктивыПассивы");
	ЗарегистрироватьНаборСвойств(Наборы, "a1c33d61-5466-4b90-81f3-d6cac7747dee", "Справочник_ПрочиеРасходы");
	ЗарегистрироватьНаборСвойств(Наборы, "c5fa4373-8702-4588-b5e8-37e93967be71", "Справочник_РейтингиПродажНоменклатуры");
	ЗарегистрироватьНаборСвойств(Наборы, "8e2d44d3-f80d-490e-b008-8d3e5469ee56", "Справочник_СделкиСКлиентами");
	ЗарегистрироватьНаборСвойств(Наборы, "fbf5065c-426e-40b3-a9fb-e46aa9d7c2e1", "Справочник_СегментыНоменклатуры");
	ЗарегистрироватьНаборСвойств(Наборы, "78ab2475-b2fd-4817-be7b-00aa6a2b7658", "Справочник_СегментыПартнеров");
	ЗарегистрироватьНаборСвойств(Наборы, "345d0b95-60ff-4d5b-bfa0-4e77504dd435", "Справочник_СертификатыНоменклатуры");
	ЗарегистрироватьНаборСвойств(Наборы, "48d065fe-21ed-43df-b919-5882ef9674b2", "Справочник_СкидкиНаценки");
	ЗарегистрироватьНаборСвойств(Наборы, "39d0e77b-2346-4099-a680-7d47fe57fe9d", "Справочник_СкладскиеПомещения");
	ЗарегистрироватьНаборСвойств(Наборы, "d0b6fee9-4117-4091-827a-5dab0a776a48", "Справочник_СкладскиеЯчейки");
	ЗарегистрироватьНаборСвойств(Наборы, "a9e936e8-0b20-4a5e-937d-adbb4348cba7", "Справочник_Склады");
	ЗарегистрироватьНаборСвойств(Наборы, "d47427af-b1d4-41cd-b69a-ba0cd46f89d0", "Справочник_СоглашенияСКлиентами");
	ЗарегистрироватьНаборСвойств(Наборы, "e8723370-89b4-4f7e-92e5-1671f5b13047", "Справочник_СоглашенияСПоставщиками");
	ЗарегистрироватьНаборСвойств(Наборы, "faf07d23-941f-411b-be46-79b72c161cc7", "Справочник_СтатьиДвиженияДенежныхСредств");
	ЗарегистрироватьНаборСвойств(Наборы, "ed9e0081-196a-48cb-8bbf-f75b9a560b69", "Справочник_СтруктураЦелей");
	ЗарегистрироватьНаборСвойств(Наборы, "7c296fff-4787-4529-beba-120360654bdc", "Справочник_СценарииОбменовДанными");
	ЗарегистрироватьНаборСвойств(Наборы, "4458ad39-53b9-4004-abbb-6c5c6bd47685", "Справочник_ТоварныеКатегории");
	ЗарегистрироватьНаборСвойств(Наборы, "53c4705f-3adf-4550-b431-cd52097c7ce2", "Справочник_ФорматыМагазинов");
	ЗарегистрироватьНаборСвойств(Наборы, "a502c8cb-85e9-48b0-9c93-e9c5e025cae4", "Справочник_ШаблоныЭтикетокИЦенников");
	ЗарегистрироватьНаборСвойств(Наборы, "950dc173-da97-4ff2-bed0-47059cfb2120", "Справочник_ЭквайринговыеТерминалы");
	
	//++ Локализация
	ЗарегистрироватьНаборСвойств(Наборы, "6fee8bbc-79a0-4248-bb7e-f4a715a75414", "Документ_ВводОстатковНДСПредъявленного");
	ЗарегистрироватьНаборСвойств(Наборы, "f1415606-97c3-4b30-bfc0-c75c67f1459c", "Документ_ЗапросКоммерческихПредложенийПоставщиков");
	ЗарегистрироватьНаборСвойств(Наборы, "d9efdf8a-55bc-457a-9382-5d0fe5b0d6cc", "Документ_ЗапросКоммерческогоПредложенияОтКлиента");
	ЗарегистрироватьНаборСвойств(Наборы, "9c62d702-ee85-4e5f-8792-4e361a368a7a", "Документ_ИнойДокументПодтвержденияНДС");
	ЗарегистрироватьНаборСвойств(Наборы, "8d80b13e-6833-4e16-b559-e73d1d25a9ac", "Документ_КоммерческоеПредложениеПоставщика");
	ЗарегистрироватьНаборСвойств(Наборы, "0df8936f-3fee-43cf-8ece-12a3345cb866", "Документ_КорректировкаОбособленногоУчетаЗапасов");
	ЗарегистрироватьНаборСвойств(Наборы, "2f4e1003-2cf1-46b2-9e1e-eda085abd12c", "Документ_ЛистКассовойКниги");
	ЗарегистрироватьНаборСвойств(Наборы, "ad20e9f7-372b-40ea-bb2d-73581dd66b78", "Документ_МаркировкаТоваровГИСМ");
	ЗарегистрироватьНаборСвойств(Наборы, "4fc85bd2-618e-43bb-a12e-4d77532b1c05", "Документ_ОперацияПоЯндексКассе");
	ЗарегистрироватьНаборСвойств(Наборы, "a9717b3d-a562-4349-b83c-c9ea304d1b6d", "Документ_ПеремаркировкаТоваровГИСМ");
	ЗарегистрироватьНаборСвойств(Наборы, "14f232a2-9c8e-4491-9c50-5f5e31673b6b", "Документ_СправкаОПодтверждающихДокументах");
	ЗарегистрироватьНаборСвойств(Наборы, "db7f173f-009a-4f6e-a757-e8863eaf6931", "Документ_СчетФактураВыданный");
	ЗарегистрироватьНаборСвойств(Наборы, "24268a7c-74e9-4b1b-9f8c-0b3939c9045b", "Документ_СчетФактураКомиссионеру");
	ЗарегистрироватьНаборСвойств(Наборы, "2e23caf2-99f6-4df8-a4b2-a945199501eb", "Документ_СчетФактураКомитента");
	ЗарегистрироватьНаборСвойств(Наборы, "2ab96d23-540b-4106-8ead-676cd856f1fb", "Документ_СчетФактураНалоговыйАгент");
	ЗарегистрироватьНаборСвойств(Наборы, "8a4ed2f0-41bd-4645-a992-a48fa4e43d0d", "Документ_СчетФактураНаНеподтвержденнуюРеализацию0");
	ЗарегистрироватьНаборСвойств(Наборы, "f3129f3c-679b-45da-8da6-cb8b94e48fa9", "Документ_СчетФактураПолученный");
	ЗарегистрироватьНаборСвойств(Наборы, "2fff6528-8534-4ed5-a1c4-005856749157", "Документ_СчетФактураПолученныйНалоговыйАгент");
	ЗарегистрироватьНаборСвойств(Наборы, "7e9e8180-9cb9-4d04-8bd8-fd8666ce7ea9", "Справочник_Патенты");
	ЗарегистрироватьНаборСвойств(Наборы, "7274b1d5-5e39-4c79-b3b0-4e767f1d81bb", "Справочник_УдалитьУчетныеПолитикиОрганизаций");
	ЗарегистрироватьНаборСвойств(Наборы, "5e2a2a97-c7f4-4a57-806d-b714855e80f1", "Справочник_ГосударственныеКонтракты");
	//-- Локализация
	
	//++ НЕ УТ

	//++ Локализация
	ЗарегистрироватьНаборСвойств(Наборы, "195c5e5f-fb22-11e4-92f1-0050568b35ac", "Документ_ВводДанныхПоНалогуНаПрибыль");
	ЗарегистрироватьНаборСвойств(Наборы, "1f9d880d-7919-4a87-b042-043ca1fa10fd", "Документ_ВводОстатковРасходовПриУСН");
	ЗарегистрироватьНаборСвойств(Наборы, "ed020a91-b625-414b-b0ef-8b765f41cec5", "Документ_ВозвратМатериаловИзПроизводства");
	ЗарегистрироватьНаборСвойств(Наборы, "bd50e748-4f7c-4d69-bd49-47368c381736", "Документ_ВосстановлениеНДСПоОбъектамНедвижимости");
	ЗарегистрироватьНаборСвойств(Наборы, "99de7b42-97f9-4bd1-a2bc-e50e31ccb0d3", "Документ_ВыбытиеДенежныхДокументов");
	ЗарегистрироватьНаборСвойств(Наборы, "b857404e-ccf5-422f-975c-fcd02df3c7f1", "Документ_ВыпускПродукции");
	ЗарегистрироватьНаборСвойств(Наборы, "12839455-2f48-4041-811e-9eb74a7a57f6", "Документ_ДепонированиеЗарплаты");
	ЗарегистрироватьНаборСвойств(Наборы, "b78ceff7-6b08-460e-8ef3-8f105cb0d4b8", "Документ_ИзделияИЗатратыНЗП");
	ЗарегистрироватьНаборСвойств(Наборы, "17c178cc-d648-4983-a132-37640d36ce8d", "Документ_ИзменениеПараметровНМА");
	ЗарегистрироватьНаборСвойств(Наборы, "175d9356-c005-4746-9a44-b3afd291e202", "Документ_ИзменениеПараметровОС");
	ЗарегистрироватьНаборСвойств(Наборы, "01332e91-6f4c-405e-8ba2-dc209c8e2b6b", "Документ_ИзменениеСостоянияОС");
	ЗарегистрироватьНаборСвойств(Наборы, "582e5ba1-d12e-48a3-96d7-2c76b42a6258", "Документ_ИнвентаризацияНМА");
	ЗарегистрироватьНаборСвойств(Наборы, "9b3ee5e0-96f3-48f4-93fb-ec2958733d98", "Документ_ИнвентаризацияОС");
	ЗарегистрироватьНаборСвойств(Наборы, "db13d771-a799-44ed-a630-edb0f38827db", "Документ_ИнвентаризацияРасчетов");
	ЗарегистрироватьНаборСвойств(Наборы, "6b071a57-a9a3-4b3f-b71b-7e0cb5078c1f", "Документ_МодернизацияОС");
	ЗарегистрироватьНаборСвойств(Наборы, "3d14e89b-9cdc-42ef-aabd-83a29094c2b4", "Документ_НачислениеДивидендов");
	ЗарегистрироватьНаборСвойств(Наборы, "64be5aa0-8fe2-47e7-857b-550a01afaa7a", "Документ_НачислениеЕНП");
	ЗарегистрироватьНаборСвойств(Наборы, "8350a657-8f54-4bb2-a2dd-7a026afe04d0", "Документ_ОперацияБух");
	ЗарегистрироватьНаборСвойств(Наборы, "900eadd1-2e93-4bab-b12c-42082708df9e", "Документ_ОтчетОператораСистемыПлатон");
	ЗарегистрироватьНаборСвойств(Наборы, "c35a46fb-b563-498c-9efe-324dd5d19656", "Документ_ПередачаМатериаловВПроизводство");
	ЗарегистрироватьНаборСвойств(Наборы, "350fcb68-dd4b-4467-ae42-f10dea286ec3", "Документ_ПеремещениеМатериаловВПроизводстве");
	ЗарегистрироватьНаборСвойств(Наборы, "15e434c7-2183-4647-9906-104889976440", "Документ_ПеремещениеОС");
	ЗарегистрироватьНаборСвойств(Наборы, "3714dc92-2f6f-4a6b-9aed-1bfddb723162", "Документ_ПодготовкаКПередачеОС");
	ЗарегистрироватьНаборСвойств(Наборы, "ff9aa909-3d5e-4f0f-8422-9195ab41b976", "Документ_ПоступлениеДенежныхДокументов");
	ЗарегистрироватьНаборСвойств(Наборы, "727f7468-b723-4d9d-9b47-da4199b80b1d", "Документ_ПринятиеКУчетуНМА");
	ЗарегистрироватьНаборСвойств(Наборы, "db22e853-21ad-40d9-8b9e-5773bccf6bf4", "Документ_ПринятиеКУчетуОС");
	ЗарегистрироватьНаборСвойств(Наборы, "ed28bbe2-efa9-4a8e-892c-64572a416570", "Документ_СписаниеЗатратНаВыпуск");
	ЗарегистрироватьНаборСвойств(Наборы, "b64834ae-d986-428b-ab15-613855418d2c", "Документ_СписаниеНМА");
	ЗарегистрироватьНаборСвойств(Наборы, "26f74d35-4a92-4238-9198-687ccb498a21", "Документ_СписаниеОС");
	ЗарегистрироватьНаборСвойств(Наборы, "00f5da31-04b6-409e-86ba-03b1b931683f", "Документ_ТаможеннаяДекларацияЭкспорт");
	//-- Локализация
	
	ЗарегистрироватьНаборСвойств(Наборы, "114c5fc9-39cd-4d46-a72b-a2b88cc112eb", "Документ_АктВыполненныхВнутреннихРабот");
	//++ Устарело_Переработка24
	ЗарегистрироватьНаборСвойств(Наборы, "cb04745a-05cc-405e-a74a-dda44c532047", "Документ_ВозвратСырьяОтПереработчика");
	//-- Устарело_Переработка24
	ЗарегистрироватьНаборСвойств(Наборы, "bb9ae340-7b48-461c-b96b-a03ddef16415", "Документ_ВыкупАрендованныхОС");
	ЗарегистрироватьНаборСвойств(Наборы, "88eb2a4f-1f03-4efa-bcd2-ac68b24cebf4", "Документ_ВыработкаНМА");
	ЗарегистрироватьНаборСвойств(Наборы, "89824a09-4486-4485-a771-e92f090e20d2", "Документ_ВыработкаСотрудников");
	ЗарегистрироватьНаборСвойств(Наборы, "59e93f0b-738c-4576-b5c4-b68b67ea8f85", "Документ_ДвижениеПродукцииИМатериалов");
	ЗарегистрироватьНаборСвойств(Наборы, "a10b4f33-0225-4717-827f-0821a4fc9ac5", "Документ_ЗаказМатериаловВПроизводство");
	//++ Устарело_Переработка24
	ЗарегистрироватьНаборСвойств(Наборы, "e250eb08-1ffc-4470-837a-2e258861b51b", "Документ_ЗаказПереработчику");
	//-- Устарело_Переработка24
	ЗарегистрироватьНаборСвойств(Наборы, "627424a6-eb85-4b56-be26-11faf80f9d9d", "Документ_ЗаказПереработчику2_5");
	ЗарегистрироватьНаборСвойств(Наборы, "498bfb4b-2638-4975-8a9d-fb50e0b84c7c", "Документ_ЗаключениеДоговораАренды");
	ЗарегистрироватьНаборСвойств(Наборы, "834a7cc0-094d-40da-860a-b00aa10e8cab", "Документ_ИзменениеПараметровНМА2_4");
	ЗарегистрироватьНаборСвойств(Наборы, "a54bd05c-a4a9-40b9-b0e3-975314db71aa", "Документ_ИзменениеПараметровОС2_4");
	ЗарегистрироватьНаборСвойств(Наборы, "13cced4a-ddfe-4aa5-9052-4b0651b66c6e", "Документ_ИзменениеУсловийДоговораАренды");
	ЗарегистрироватьНаборСвойств(Наборы, "8b6f7237-1f75-465b-835a-296b42517bac", "Документ_ИзменениеУсловийПередачиВАренду");
	ЗарегистрироватьНаборСвойств(Наборы, "458eb5bd-ad91-425e-9b2d-740d238a2af2", "Документ_КорректировкаСтоимостиИАмортизацииНМА");
	ЗарегистрироватьНаборСвойств(Наборы, "c44e8926-8c2d-4d2a-82d1-5fbbfc33ef56", "Документ_КорректировкаСтоимостиИАмортизацииОС");
	ЗарегистрироватьНаборСвойств(Наборы, "eb1ae85f-0ff9-4943-bd1c-26ff4cc4ccc7", "Документ_МодернизацияОС2_4");
	ЗарегистрироватьНаборСвойств(Наборы, "92e3a550-9e20-4937-967f-38fcd8d8e0e4", "Документ_ОбъединениеОС");
	//++ Устарело_Переработка24
	ЗарегистрироватьНаборСвойств(Наборы, "3df128f7-a4cd-4c31-aa18-b88a891e3f06", "Документ_ОтчетПереработчика");
	//-- Устарело_Переработка24
	ЗарегистрироватьНаборСвойств(Наборы, "76741a5f-9dff-42cc-aabc-1e34d3885b72", "Документ_ОтчетПереработчика2_5");
	//++ Устарело_Переработка24
	ЗарегистрироватьНаборСвойств(Наборы, "1d55c963-af88-4d7b-993c-494a5e1f0445", "Документ_ПередачаСырьяПереработчику");
	//-- Устарело_Переработка24
	ЗарегистрироватьНаборСвойств(Наборы, "e3a78434-82f7-4d6d-a342-3fbefbefd069", "Документ_ПеремещениеОС2_4");
	ЗарегистрироватьНаборСвойств(Наборы, "ae919624-9533-4775-bc0c-ac5019059399", "Документ_ПланПроизводства");
	ЗарегистрироватьНаборСвойств(Наборы, "1d2705d6-f523-4b07-a638-190c77b8b002", "Документ_ПодготовкаКПередачеОС2_4");
	//++ Устарело_Переработка24
	ЗарегистрироватьНаборСвойств(Наборы, "60ca4916-eff9-45ad-af01-6f503d32372c", "Документ_ПоступлениеОтПереработчика");
	//-- Устарело_Переработка24
	ЗарегистрироватьНаборСвойств(Наборы, "c8f306e8-4c81-4eec-9be4-5456cc4756bf", "Документ_ПоступлениеУслугПоАренде");
	ЗарегистрироватьНаборСвойств(Наборы, "66855b6a-dc14-4ba2-beb1-92fdf8d41818", "Документ_ПрекращениеДоговораАренды");
	ЗарегистрироватьНаборСвойств(Наборы, "b8cf2d72-6c64-4ba9-89ad-9f6d8e8b7713", "Документ_ПризнаниеРасходовПоИсследованиямИРазработкам");
	ЗарегистрироватьНаборСвойств(Наборы, "80a5c6e3-0281-4424-b62e-3ea2ab7e6fd9", "Документ_ПринятиеКУчетуНМА2_4");
	ЗарегистрироватьНаборСвойств(Наборы, "2e960f2e-bf5d-4f4e-8f3e-24c6a818ae3b", "Документ_ПринятиеКУчетуОС2_4");
	ЗарегистрироватьНаборСвойств(Наборы, "280a6172-d24e-4cb2-a492-1eb3fb32da8d", "Документ_ПринятиеКУчетуУзловКомпонентовАмортизации");
	ЗарегистрироватьНаборСвойств(Наборы, "9365622e-b582-4329-971d-dffd928eb5ec", "Документ_ПроизводствоБезЗаказа");
	ЗарегистрироватьНаборСвойств(Наборы, "23b4a057-b965-49eb-8b2f-de2a0d26abe2", "Документ_РазукомплектацияОС");
	ЗарегистрироватьНаборСвойств(Наборы, "ff767172-5efa-4b5c-ae58-dd3cb60cb169", "Документ_РаспределениеВозвратныхОтходов");
	ЗарегистрироватьНаборСвойств(Наборы, "5d382cc7-0c8c-4e7d-8f7f-ada5dc0edff9", "Документ_РаспределениеПроизводственныхЗатрат");
	ЗарегистрироватьНаборСвойств(Наборы, "c8b8cbf7-634b-43c6-bbb2-087497ad2a2b", "Документ_СписаниеНМА2_4");
	ЗарегистрироватьНаборСвойств(Наборы, "58e7a2b2-7810-4bad-9a39-056fd8aff917", "Документ_СписаниеОС2_4");
	ЗарегистрироватьНаборСвойств(Наборы, "66f0a8af-c93d-433e-8d02-837f7877cb55", "Документ_УлучшениеНМА");
	ЗарегистрироватьНаборСвойств(Наборы, "1b46fd46-d88e-43ab-a77f-b8fdc23c6045", "Документ_ЭкземплярБюджета");
	ЗарегистрироватьНаборСвойств(Наборы, "bd297921-d608-4512-8c3e-2ec7439f0936", "Справочник_Бригады");
	ЗарегистрироватьНаборСвойств(Наборы, "294076d5-784c-405f-b5ff-cbb1363472c9", "Справочник_ВидыРаботСотрудников");
	ЗарегистрироватьНаборСвойств(Наборы, "1e77da49-a7f4-43e0-8aa0-f999bafcb1c7", "Справочник_ДоговорыАренды");
	ЗарегистрироватьНаборСвойств(Наборы, "9a376657-e800-49cc-822c-12f73cb43b5d", "Справочник_НематериальныеАктивы");
	ЗарегистрироватьНаборСвойств(Наборы, "e8235a22-2752-4e84-96c1-74512da4ae79", "Справочник_ОбъектыСтроительства");
	ЗарегистрироватьНаборСвойств(Наборы, "d4ec47fc-c373-4e3e-8ebc-367b5bb292ec", "Справочник_ОбъектыУчетаРезервовПредстоящихРасходов");
	ЗарегистрироватьНаборСвойств(Наборы, "0b493c2f-1432-4bc5-b94a-8257cbfbe6eb", "Справочник_ПартииПроизводства");
	ЗарегистрироватьНаборСвойств(Наборы, "7d340d32-0863-4e7d-a2b5-5bb8450c6f6b", "Справочник_Резервы");
	ЗарегистрироватьНаборСвойств(Наборы, "4f1f948d-a242-4086-a0bc-7a2819813979", "Справочник_РесурсныеСпецификации");
	ЗарегистрироватьНаборСвойств(Наборы, "5bdbbb97-9f58-4e0d-9515-53a408082ede", "Справочник_СтатьиКалькуляции");
	ЗарегистрироватьНаборСвойств(Наборы, "2c0bfb5b-12e7-4b58-95f9-87b6707611fb", "Справочник_ТемыЭтапыИсследованийИРазработок");
	ЗарегистрироватьНаборСвойств(Наборы, "dae5dd83-1274-4f37-a9ca-8604bb97c3da", "Справочник_ЭтапыПроизводства");
	
	
	//++ НЕ УТКА

	//++ Локализация
	ЗарегистрироватьНаборСвойств(Наборы, "1b289e3c-376b-4907-bcb7-168d39650a74", "Документ_ЗаказНаПроизводство");
	ЗарегистрироватьНаборСвойств(Наборы, "9c55efd4-52e2-4c07-bdaa-acd6fa5c647b", "Документ_МаршрутныйЛистПроизводства");
	ЗарегистрироватьНаборСвойств(Наборы, "80959ec1-ba5e-4e27-92b1-0e9ab057d724", "Документ_ПлановаяКалькуляция");
	ЗарегистрироватьНаборСвойств(Наборы, "9a99dac9-8608-4e6b-ace2-e98a83dfd426", "Документ_ПорядокПризнанияРасходовНДДПоОбъектуВНА");
	ЗарегистрироватьНаборСвойств(Наборы, "4cc7ba1a-9ed7-458c-891a-f9a87e3c7f42", "Документ_ПорядокПризнанияРасходовНДДПоТемеЭтапу");
	ЗарегистрироватьНаборСвойств(Наборы, "36d6cd9d-f2d3-48e1-b74f-484947c48f14", "Документ_ПризнаниеАвансаВРасходахНДДПоАмортизируемомуИмуществу");
	ЗарегистрироватьНаборСвойств(Наборы, "56f6bd20-7ca4-403c-b05a-52a6177a29c3", "Документ_КорректировкаФактическихРасходовНДДПоАмортизируемомуИмуществу");
	//-- Локализация
	
	ЗарегистрироватьНаборСвойств(Наборы, "d6b0f9c2-16b7-40c6-ae8a-8ce7d89d71a2", "Документ_ЗаказДавальца2_5");
	ЗарегистрироватьНаборСвойств(Наборы, "2033a0f9-4544-4fd7-b9f0-39576d4436b2", "Документ_ЗаказНаПроизводство2_2");
	ЗарегистрироватьНаборСвойств(Наборы, "c814d3bb-6c98-4c47-9c58-b382d8dbde4d", "Документ_ЗаказНаРемонт");
	ЗарегистрироватьНаборСвойств(Наборы, "21f43da9-1947-4e04-94e5-08a3a192c925", "Документ_ОтчетДавальцу2_5");
	ЗарегистрироватьНаборСвойств(Наборы, "8002a98a-623d-4822-bdcf-54561124514c", "Документ_ОтчетДавальцуМеждуОрганизациями");
	//++ Устарело_Переработка24
	ЗарегистрироватьНаборСвойств(Наборы, "b6831ae6-e0c7-4b35-be6a-6b9ec7d4e11b", "Документ_ВозвратСырьяДавальцу");
	ЗарегистрироватьНаборСвойств(Наборы, "df86a80c-383c-43e8-b7ae-170e3fd1f230", "Документ_ЗаказДавальца");
	ЗарегистрироватьНаборСвойств(Наборы, "edf76781-9392-4f9a-abfd-b84b13b7501a", "Документ_ОтчетДавальцу");
	ЗарегистрироватьНаборСвойств(Наборы, "dbbe1537-894a-4d99-a0b5-a587a512875a", "Документ_ПередачаДавальцу");
	ЗарегистрироватьНаборСвойств(Наборы, "7f8f9d7a-7c04-4e31-81ba-14a2affd127f", "Документ_ПоступлениеСырьяОтДавальца");
	//-- Устарело_Переработка24
	ЗарегистрироватьНаборСвойств(Наборы, "ee594808-3f12-454a-8e83-d2bde4e43e23", "Документ_РазрешениеНаЗаменуМатериалов");
	ЗарегистрироватьНаборСвойств(Наборы, "ca69dd34-efe1-4768-86f0-0fb4a6292cc0", "Документ_СменноеЗадание");
	ЗарегистрироватьНаборСвойств(Наборы, "92d08fd3-4d0a-4922-887a-86ef4e313706", "Документ_ЭтапПроизводства2_2");
	ЗарегистрироватьНаборСвойств(Наборы, "a070ee7e-3dca-471b-a0d4-a49bfed42c83", "Справочник_ВидыРабочихЦентров");
	ЗарегистрироватьНаборСвойств(Наборы, "7d45c880-b9e6-46da-a6cb-a558f14f6bde", "Справочник_МаршрутныеКарты");
	ЗарегистрироватьНаборСвойств(Наборы, "525c0f81-2e46-4946-83b4-dfff5fdd417b", "Справочник_ПроизводственныеУчастки");
	ЗарегистрироватьНаборСвойств(Наборы, "1b8687a8-d9eb-48d2-b32c-4a0b906f0457", "Справочник_РабочиеЦентры");
	ЗарегистрироватьНаборСвойств(Наборы, "4866c0e3-b01b-4b40-a78e-a7af83da2f79", "Справочник_ТехнологическиеОперации");
	//-- НЕ УТКА

	//-- НЕ УТ
	
КонецПроцедуры

// Регистрирует набор дополнительных реквизитов и сведений.
//
// Параметры:
//  Наборы - ДеревоЗначений - См. описание 1го параметра процедуры
//      УправлениеСвойствамиПереопределяемый.ПриПолученииПредопределенныхНаборовСвойств().
//  Идентификатор - Строка - Уникальный идентификатор набора.
//  ИмяНабора - Строка - Владелец набора.
//
Процедура ЗарегистрироватьНаборСвойств(Наборы, Идентификатор, ИмяНабора)
	Набор = Наборы.Строки.Добавить();
	Набор.Идентификатор = Новый УникальныйИдентификатор(Идентификатор);
	Набор.Имя = ИмяНабора;
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	УстаревшийНабор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПолучитьСсылку(
			Новый УникальныйИдентификатор("9623d53e-672d-4b56-b054-3ff1c5d1437e"));
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Истина
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК
		|		НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения
		|ГДЕ
		|	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", УстаревшийНабор);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, УстаревшийНабор);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьНаборыСвойствДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПредопределенныеНаборыСвойств = УправлениеСвойствамиПовтИсп.ПредопределенныеНаборыСвойств();
	ДанныеДляОбработки = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, "Справочник.НаборыДополнительныхРеквизитовИСведений");
	ПроблемныхОбъектов = 0;
	
	Пока ДанныеДляОбработки.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			ОбновляемыйНабор = ДанныеДляОбработки.Ссылка.ПолучитьОбъект();
			Если ОбновляемыйНабор = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ДанныеДляОбработки.Ссылка);
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ИмяНабора = "Справочник_ДополнительныеОтчетыИОбработки";
			ОписаниеНовогоНабора = ПредопределенныеНаборыСвойств.Получить(ИмяНабора); // см. Справочники.НаборыДополнительныхРеквизитовИСведений.СвойстваНабора
			Если ОписаниеНовогоНабора = Неопределено Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли;
			НовыйНабор = ОписаниеНовогоНабора.Ссылка;
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Справочник.НаборыДополнительныхРеквизитовИСведений");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", НовыйНабор);
			Блокировка.Заблокировать();
			
			// Заполнение нового набора.
			НовыйНаборОбъект = НовыйНабор.ПолучитьОбъект();

			Для Каждого СтрокаСведение Из ОбновляемыйНабор.ДополнительныеСведения Цикл
				НоваяСтрокаСведения = НовыйНаборОбъект.ДополнительныеСведения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСведения, СтрокаСведение);
				НоваяСтрокаСведения.ИмяПредопределенногоНабора = НовыйНаборОбъект.ИмяПредопределенногоНабора;
			КонецЦикла;
			
			КоличествоСведений   = НовыйНаборОбъект.ДополнительныеСведения.НайтиСтроки(
				Новый Структура("ПометкаУдаления", Ложь)).Количество();
			
			НовыйНаборОбъект.КоличествоСведений   = Формат(КоличествоСведений, "ЧГ=");
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(НовыйНаборОбъект);
			
			// Очистка старого набора.
			ОбновляемыйНабор.ДополнительныеРеквизиты.Очистить();
			ОбновляемыйНабор.ДополнительныеСведения.Очистить();
			ОбновляемыйНабор.Используется = Ложь;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОбновляемыйНабор);
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать набор свойств %1 по причине:
					|%2';
					|en = 'Couldn''t process the ""%1"" property set. Reason:
					|%2'"), 
					ОбновляемыйНабор.Ссылка, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Справочники.НаборыДополнительныхРеквизитовИСведений, ОбновляемыйНабор.Ссылка, ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	Если ПроблемныхОбъектов <> 0 Тогда
		ТекстСообщения = НСтр("ru = 'Процедура %1 завершилась с ошибкой. Не все наборы свойств удалось обновить.';
								|en = 'Procedure %1 was completed with an error. Some property sets were not updated.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, "ОбработатьНаборыСвойствДляПереходаНаНовуюВерсию");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
