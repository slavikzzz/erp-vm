////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Выбытие арендованных ОС (забалансовый учет)".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

// Процедура дополняет тексты запросов проведения документа.
// 
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	
	ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры);

	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПервоначальныеСведенияОС() Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка        КАК Регистратор,
	|	ДанныеДокумента.Период        КАК Период,
	|	ДанныеДокумента.Организация   КАК Организация,
	|	ТаблицаОС.ОсновноеСредство    КАК ОсновноеСредство,
	|
	|	ПервоначальныеСведенияОС.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
	|	ДанныеДокумента.Ссылка КАК ДокументСнятияСУчетаБУ,
	|	ДанныеДокумента.Ссылка КАК ДокументСнятияСУчетаУУ
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ПервоначальныеСведенияОС.Ссылка = ТаблицаОС.Ссылка
	|			И ПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|";

	//-- Локализация

	Возврат ТекстЗапроса;
		
КонецФункции

Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	//++ Локализация

	ПроведениеДокументов.ОчиститьДвиженияДокумента(Объект, "Хозрасчетный");
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Объект.Дата) Тогда
		ТаблицаРеквизитов = ТаблицаРеквизитовДокумента(Объект);
		УчетОСВызовСервера.ПроверитьЗаполнениеСчетаЗабалансовогоУчетаОС(Объект.ОС.Выгрузить(), ТаблицаРеквизитов, Отказ);
	КонецЕсли;
	
	Если Не Отказ И НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Объект.Дата) Тогда
		РеглУчетПроведениеСервер.ОтразитьДокумент(Объект);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеПоРеглУчету

Функция ТекстОтраженияВРеглУчете() Экспорт
		
	ТекстЗапроса = "";
	
	//++ Локализация
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выбытие с забалансового учета арендуемых ОС (Дт ---:: Кт СчетЗабалансовогоУчета)
	|ВЫБРАТЬ
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ОстаткиПоСчетуУчета.СуммаОстатокДт КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ПорядокУчетаОС.СчетЗабалансовогоУчета КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	Операция.Контрагент КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Выбытие с забалансового учета арендуемых ОС"" КАК Содержание
	|ИЗ
	|	Документ.ВыбытиеАрендованныхОС КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыбытиеАрендованныхОС.ОС КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО Строки.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиПоСчетуУчета КАК ОстаткиПоСчетуУчета
	|		ПО ОстаткиПоСчетуУчета.ОсновноеСредство = Строки.ОсновноеСредство
	|			И ОстаткиПоСчетуУчета.Счет = ПорядокУчетаОС.СчетЗабалансовогоУчета 
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И ОстаткиПоСчетуУчета.СуммаОстатокДт <> 0
	|	И (НЕ &ИспользоватьВнеоборотныеАктивы2_4 ИЛИ Операция.Дата < &ДатаНачалаУчетаВнеоборотныхАктивов2_4)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выбытие с забалансового учета арендуемых ОС (Дт ---:: Кт СчетЗабалансовогоУчета)
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ЗалоговаяСтоимость КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	Операция.Контрагент КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Выбытие с забалансового учета арендуемых ОС"" КАК Содержание
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК Строки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыбытиеАрендованныхОС КАК Операция
	|		ПО Строки.Регистратор = Операция.Ссылка
	|
	|ГДЕ
	|	Строки.Регистратор = &Ссылка
	|	И (&ИспользоватьВнеоборотныеАктивы2_4 И Строки.Период >= &ДатаНачалаУчетаВнеоборотныхАктивов2_4)
	|";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Т.Ссылка.Организация КАК Организация,
	|	Т.Ссылка.Подразделение КАК Подразделение,
	|	Т.Ссылка.Контрагент КАК Контрагент,
	|	Т.ОсновноеСредство КАК ОсновноеСредство
	|
	|ПОМЕСТИТЬ втТаблицаОС
	|
	|ИЗ
	|	Документ.ВыбытиеАрендованныхОС.ОС КАК Т
	|
	|ГДЕ 
	|	Т.Ссылка = &Ссылка
	|	И &ИспользоватьВнеоборотныеАктивы2_2
	| 	И (&Дата < &ДатаНачалаУчетаВнеоборотныхАктивов2_4
	|		ИЛИ НЕ &ИспользоватьВнеоборотныеАктивы2_4)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация,
	|	Подразделение,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.СчетЗабалансовогоУчета КАК СчетЗабалансовогоУчета
	| 
	|ПОМЕСТИТЬ втПорядокУчетаОС
	|
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|		&Дата,
	|		&ИспользоватьВнеоборотныеАктивы2_2
	|		И ОсновноеСредство В
	|			(ВЫБРАТЬ
	|				ТаблицаОС.ОсновноеСредство
	|			ИЗ
	|				втТаблицаОС КАК ТаблицаОС)) КАК ПорядокУчетаОС
	|ГДЕ
	|	&ИспользоватьВнеоборотныеАктивы2_2
	| 	И (&Дата < &ДатаНачалаУчетаВнеоборотныхАктивов2_4
	|		ИЛИ НЕ &ИспользоватьВнеоборотныеАктивы2_4)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетЗабалансовогоУчета,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоСчетуУчета.Субконто2 КАК ОсновноеСредство,
	|	ОстаткиПоСчетуУчета.Счет КАК Счет,
	|	ОстаткиПоСчетуУчета.СуммаОстатокДт КАК СуммаОстатокДт
	|
	|ПОМЕСТИТЬ втОстаткиПоСчетуУчета
	|
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Дата,
	|			&ИспользоватьВнеоборотныеАктивы2_2
	|			И Счет В 
	|				(ВЫБРАТЬ 
	|					ПорядокУчетаОС.СчетЗабалансовогоУчета
	|				ИЗ 
	|					втПорядокУчетаОС КАК ПорядокУчетаОС),,
	|			(Организация, Подразделение, Субконто1, Субконто2) В
	|				(ВЫБРАТЬ
	|					ТаблицаОС.Организация, ТаблицаОС.Подразделение, ТаблицаОС.Контрагент, ТаблицаОС.ОсновноеСредство
	|				ИЗ
	|					втТаблицаОС КАК ТаблицаОС)
	|			) КАК ОстаткиПоСчетуУчета
	|
	|ГДЕ
	|	&ИспользоватьВнеоборотныеАктивы2_2
	| 	И (&Дата < &ДатаНачалаУчетаВнеоборотныхАктивов2_4
	|		ИЛИ НЕ &ИспользоватьВнеоборотныеАктивы2_4)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет";
	СписокЗапросов.Добавить(ТекстЗапроса);
		
	СписокЗапросов.Добавить(Символы.ПС);

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Прочее

Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ТипДанныхЗаполнения = Тип("Структура") И ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
		ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения.ДокументОснование);
	КонецЕсли;
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		ЗаполнитьНаОснованииИнвентаризации(Объект, ДанныеЗаполнения);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ВыбытиеАрендованныхОС КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ДокументНаОсновании
	|	И ДанныеДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ИнвентаризацияОС.ПустаяСсылка)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

//++ Локализация

#Область Локализация

Процедура ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСБУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка        КАК Регистратор,
	|	ДанныеДокумента.Период        КАК Период,
	|	ДанныеДокумента.Организация   КАК Организация,
	|	ТаблицаОС.ОсновноеСредство    КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета) КАК СостояниеБУ
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка      КАК Регистратор,
	|	ДанныеДокумента.Период      КАК Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство  КАК ОсновноеСредство,
	|	&НазваниеДокумента          КАК НазваниеДокумента,
	|	ДанныеДокумента.Номер       КАК НомерДокумента
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТаблицаРеквизитовДокумента(Объект)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	&Ссылка КАК Регистратор,
		|	&Дата КАК Период,
		|	НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) КАК ДатаРасчета,
		|	&Номер,
		|	&Организация,
		|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету) КАК СостояниеОС,
		|	""ОС"" КАК ИмяСписка,
		|	ИСТИНА КАК ВыдаватьСообщения,
		|	НЕОПРЕДЕЛЕНО КАК МОЛ");
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Номер", Объект.Номер);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ЗаполнитьНаОснованииИнвентаризации(Знач Объект, Знач ДанныеЗаполнения)
	
	Объект.ДокументОснование = Неопределено;
	МассивНомеровСтрок = Неопределено;
	СообщатьОбОшибках = Истина;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Объект.ДокументОснование = ДанныеЗаполнения.ДокументОснование;
		МассивНомеровСтрок = ДанныеЗаполнения.МассивНомеровСтрок;
		СообщатьОбОшибках = ДанныеЗаполнения.СообщатьОбОшибках;
	Иначе
		Объект.ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	РезультатЗапроса = Документы.ИнвентаризацияОС.ДанныеЗаполненияНаОснованииИнвентаризации22(Объект.ДокументОснование, "ВыбытиеАрендованныхОС", МассивНомеровСтрок);
	Если РезультатЗапроса.ТабличнаяЧасть = Неопределено 
		Или РезультатЗапроса.ТабличнаяЧасть.Пустой() Тогда
		
		Если СообщатьОбОшибках Тогда
			ТекстОшибки = НСтр("ru = 'В документе %1 отсутствуют строки требующие заполнения выбытия арендованных ОС';
								|en = 'The document %1 contains no lines requiring the filling in the leased fixed assets disposal'");
			ТекстОшибки = СтрШаблон(ТекстОшибки, Объект.ДокументОснование);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Объект.ДокументОснование");
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Реквизиты.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(Объект, Выборка);
	
	Выборка = РезультатЗапроса.ТабличнаяЧасть.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Объект.Контрагент = Выборка.Контрагент 
			И Объект.Договор = Выборка.Договор Тогда
				
			НоваяСтрока = Объект.ОС.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

//-- Локализация

#КонецОбласти
