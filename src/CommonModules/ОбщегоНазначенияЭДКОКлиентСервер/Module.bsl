////////////////////////////////////////////////////////////////////////////////
// Подсистема "Базовая функциональность 
//             электронного документооборота с контролирующими органами". 
////////////////////////////////////////////////////////////////////////////////


#Область ПрограммныйИнтерфейс

Функция ТекстовоеПредставлениеРазмераФайла(РазмерВБайтах, Разрядность = 0) Экспорт
	
	Размер = 0;
	РазмерВКилобайтах = Окр(РазмерВБайтах / 1024, Разрядность);
	Если РазмерВБайтах < 1024 Тогда
		Размер = РазмерВБайтах;
		Шаблон = НСтр("ru = '%1 Б';
						|en = '%1 Б'");
	ИначеЕсли РазмерВКилобайтах < 1000 Тогда
		Размер = РазмерВКилобайтах;
		Шаблон = НСтр("ru = '%1 КБ';
						|en = '%1 КБ'");
	Иначе
		Размер = Окр(РазмерВКилобайтах / 1024, Разрядность);
		Шаблон = НСтр("ru = '%1 МБ';
						|en = '%1 МБ'");
	КонецЕсли;
	
	Возврат СтрШаблон(Шаблон, Размер);
	
КонецФункции

Функция ЗаменитьНечитаемыеСимволы(ИсходнаяСтрока, ЗаменятьНа = "_") Экспорт
	
	Возврат ОбщегоНазначенияЭДКОКлиентСерверПовтИсп.ЗаменитьНечитаемыеСимволы(ИсходнаяСтрока, ЗаменятьНа);
	
КонецФункции

Функция ЗаменитьЗапрещенныеСимволыВИмениФайла(ИсходнаяСтрока, ЗаменятьНа = "_") Экспорт
	
	Возврат ОбщегоНазначенияЭДКОКлиентСерверПовтИсп.ЗаменитьЗапрещенныеСимволыВИмениФайла(ИсходнаяСтрока, ЗаменятьНа);
	
КонецФункции

Функция НовыйИдентификатор() Экспорт
	
	Возврат НРег(СтрЗаменить(Новый УникальныйИдентификатор, "-", ""));
	
КонецФункции

Функция УникальнаяСтрока(ИсходнаяУникальнаяСтрока, МаксимальнаяДлина) Экспорт
	
	Результат = ЗаменитьЗапрещенныеСимволыВИмениФайла(ИсходнаяУникальнаяСтрока);
	
	Если СтрДлина(Результат) > МаксимальнаяДлина Тогда
		ЗавершающийИдентификатор = НовыйИдентификатор();
		ДлинаИдентификатора = СтрДлина(ЗавершающийИдентификатор);
		Возврат Лев(Результат, МаксимальнаяДлина - ДлинаИдентификатора) + ЗавершающийИдентификатор;
	Иначе
		Возврат Результат;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьИнформациюОбОшибке(ИнформацияОбОшибке) Экспорт
	
	Результат = ИнформацияОбОшибке;
	Если ИнформацияОбОшибке <> Неопределено Тогда
		Если ИнформацияОбОшибке.Причина <> Неопределено Тогда
			Результат = ПолучитьИнформациюОбОшибке(ИнформацияОбОшибке.Причина);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПриведеннаяВерсия(ПолнаяВерсия, КоличествоРазрядовВерсии) Экспорт
	
	Результат = "";
	КоличествоРазрядовРезультата = 0;
	
	РазрядыВерсии = СтрРазделить(ПолнаяВерсия, ".");
	Для каждого РазрядВерсии Из РазрядыВерсии Цикл
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(РазрядВерсии) Тогда
			Результат = Результат + ?(ЗначениеЗаполнено(Результат), ".", "") + РазрядВерсии;
			КоличествоРазрядовРезультата = КоличествоРазрядовРезультата + 1;
			Если КоличествоРазрядовРезультата >= КоличествоРазрядовВерсии Тогда
				Прервать;
			КонецЕсли;
			
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Результат) Тогда
		Пока КоличествоРазрядовРезультата < КоличествоРазрядовВерсии Цикл
			Результат = Результат + ".0";
			КоличествоРазрядовРезультата = КоличествоРазрядовРезультата + 1;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПростоеСклонение(Знач Числ, Форма1, Форма2, Форма3) Экспорт
	
	Числ = ?(Числ < 0, -Числ, Числ) % 100;
	Числ1 = Числ % 10;
	Если (Числ > 10) И (Числ < 20) Тогда
		Возврат Форма3;
	КонецЕсли;
	Если (Числ1 > 1) И (Числ1 < 5) Тогда
		Возврат Форма2;
	КонецЕсли;
	Если (Числ1 = 1) Тогда 
		Возврат Форма1;
	КонецЕсли;
	
	Возврат Форма3;
	
КонецФункции

Функция ЭтоВерсия(СтрокаВерсии, КоличествоРазрядов = 4) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СтрокаВерсии) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЧастиВерсии = СтрРазделить(СтрокаВерсии, ".");
	Если ЧастиВерсии.Количество() <> КоличествоРазрядов Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для каждого ЧастьВерсии Из ЧастиВерсии Цикл
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ЧастьВерсии) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Процедура СообщитьПользователю(ТекстСообщения, КлючДанных = Неопределено, Поле = "", ПутьКДанным = "") Экспорт
	
	#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
		СчетчикЗапоминаниеОшибок = ДокументооборотСКОВызовСервера.ЗапоминаниеОшибок(,, Истина);
	#Иначе
		СчетчикЗапоминаниеОшибок = ДокументооборотСКОКлиент.ЗапоминаниеОшибок(,, Истина);
	#КонецЕсли
	
	Если СчетчикЗапоминаниеОшибок <> 0 Тогда
		ДлительнаяОтправкаКлиентСервер.ВывестиОшибку(ТекстСообщения);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле, ПутьКДанным);
	КонецЕсли;
	
КонецПроцедуры

Функция ВставитьВОбъект(ОбъектДляВставки, КлючИлиИндекс, Значение) Экспорт
	
	ОбъектДляВставки.Вставить(КлючИлиИндекс, Значение);
	Возврат ОбъектДляВставки;
	
КонецФункции

Функция ПервыйОбъект(ОбъектИлиОбъекты) Экспорт
	
	Возврат ?(ТипЗнч(ОбъектИлиОбъекты) = Тип("СписокXDTO") ИЛИ ТипЗнч(ОбъектИлиОбъекты) = Тип("Массив")
		ИЛИ ТипЗнч(ОбъектИлиОбъекты) = Тип("ФиксированныйМассив"), ОбъектИлиОбъекты[0], ОбъектИлиОбъекты);
	
КонецФункции

#КонецОбласти