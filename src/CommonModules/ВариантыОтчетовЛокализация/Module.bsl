#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Настройки размещения отчетов
// см. ВариантыОтчетовПереопределяемый.ОпределитьРазделыСВариантамиОтчетов
//
Процедура ОпределитьРазделыСВариантамиОтчетов(Разделы) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	Разделы.Добавить(Метаданные.Подсистемы.РегламентированныйУчет,
		НСтр("ru = 'Отчеты по регламентированному учету';
			|en = 'Local accounting reports'"));
		
	Разделы.Добавить(Метаданные.Подсистемы.РегламентированныйУчет.Подсистемы.СтандартныеОтчеты, 
		НСтр("ru = 'Стандартные бухгалтерские отчеты';
			|en = 'General ledger reports'"));
		
	ЗарплатаКадрыПереопределяемый.ОпределитьРазделыСВариантамиОтчетов(Разделы);
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Настройки команд отчетов
// см. ВариантыОтчетовПереопределяемый.ОпределитьОбъектыСКомандамиОтчетов
//
Процедура ОпределитьОбъектыСКомандамиОтчетов(Объекты) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	ИмущественныеНалоги.ОпределитьОбъектыСКомандамиОтчетов(Объекты);
	//-- НЕ УТ
	
	
	Объекты.Добавить(Метаданные.Документы.ЗапросКоммерческогоПредложенияОтКлиента);
	Объекты.Добавить(Метаданные.Документы.ЗапросКоммерческихПредложенийПоставщиков);
	Объекты.Добавить(Метаданные.Документы.КоммерческоеПредложениеПоставщика);
	Объекты.Добавить(Метаданные.Документы.КоммерческоеПредложениеКлиенту);
	Объекты.Добавить(Метаданные.Документы.ЛистКассовойКниги);
	Объекты.Добавить(Метаданные.Документы.ОперацияПоЯндексКассе);
	Объекты.Добавить(Метаданные.Документы.СправкаОПодтверждающихДокументах);
	Объекты.Добавить(Метаданные.Документы.ТранспортнаяНакладная);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОЗачисленииВалюты);
	Объекты.Добавить(Метаданные.Документы.КорректировкаОбособленногоУчетаЗапасов);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОЗачисленииВалюты);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковНДСПредъявленного);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОВвозеПрослеживаемыхТоваров);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров);
	
	//++ НЕ УТКА
	Объекты.Добавить(Метаданные.Документы.ЗаказНаПроизводство);
	Объекты.Добавить(Метаданные.Документы.КорректировкаЗаказаМатериаловВПроизводство);
	Объекты.Добавить(Метаданные.Документы.МаршрутныйЛистПроизводства);
	Объекты.Добавить(Метаданные.Документы.ПлановаяКалькуляция);
	//-- НЕ УТКА
	
	//++ НЕ УТ
	Объекты.Добавить(Метаданные.Документы.ВводДанныхПоНалогуНаПрибыль);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковРасходовПриУСН);
	Объекты.Добавить(Метаданные.Документы.ВозвратМатериаловИзПроизводства);
	Объекты.Добавить(Метаданные.Документы.ВыбытиеДенежныхДокументов);
	Объекты.Добавить(Метаданные.Документы.ВыпускПродукции);
	Объекты.Добавить(Метаданные.Документы.ДепонированиеЗарплаты);
	Объекты.Добавить(Метаданные.Документы.ИзделияИЗатратыНЗП);
	Объекты.Добавить(Метаданные.Документы.ПередачаМатериаловВПроизводство);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеМатериаловВПроизводстве);
	Объекты.Добавить(Метаданные.Документы.ПоступлениеДенежныхДокументов);
	Объекты.Добавить(Метаданные.Документы.СписаниеЗатратНаВыпуск);
	Объекты.Добавить(Метаданные.Документы.СтатистикаПерсонала);
	
	// ЗарплатаКадрыПодсистемы
	ЗарплатаКадры.ОпределитьОбъектыСКомандамиОтчетов(Объекты);
	// Конец ЗарплатаКадрыПодсистемы
	
	// ЗарплатаКадрыПриложения.ОтражениеВФинансовомУчете
	Объекты.Добавить(Метаданные.Документы.ОтражениеЗарплатыВФинансовомУчете);
	// Конец ЗарплатаКадрыПриложения.ОтражениеВФинансовомУчете
	
	//-- НЕ УТ
	
	// ИнтеграцияГИСМ
	Объекты.Добавить(Метаданные.Документы.ЗаявкаНаВыпускКиЗГИСМ);
	Объекты.Добавить(Метаданные.Документы.МаркировкаТоваровГИСМ);
	Объекты.Добавить(Метаданные.Документы.ЗапросАкцизныхМарокЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ПеремаркировкаТоваровГИСМ);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОбИмпортеМаркированныхТоваровГИСМ);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОПоступленииМаркированныхТоваровГИСМ);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОСписанииКиЗГИСМ);
	// Конец ИнтеграцияГИСМ
	
	// ИнтеграцияЕГАИС
	Объекты.Добавить(Метаданные.Документы.АктПостановкиНаБалансЕГАИС);
	Объекты.Добавить(Метаданные.Документы.АктСписанияЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ВозвратИзРегистра2ЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ОстаткиЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ПередачаВРегистр2ЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ТТНВходящаяЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ТТНИсходящаяЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ЧекЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ЧекЕГАИСВозврат);
	Объекты.Добавить(Метаданные.Документы.ОтчетЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ТранспортнаяНакладнаяЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ОтчетОбИмпортеЕГАИС);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОПланируемомИмпортеЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ОтчетОПроизводствеЕГАИС);
	// Конец ИнтеграцияЕГАИС
	
	// ИнтеграцияВЕТИС
	Объекты.Добавить(Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС);
	Объекты.Добавить(Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС);
	Объекты.Добавить(Метаданные.Документы.ЗапросСкладскогоЖурналаВЕТИС);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС);
	Объекты.Добавить(Метаданные.Документы.ПроизводственнаяОперацияВЕТИС);
	// Конец ИнтеграцияВЕТИС
	
	// ИнтеграцияИСМП
	Объекты.Добавить(Метаданные.Документы.МаркировкаТоваровИСМП);
	Объекты.Добавить(Метаданные.Документы.ВыводИзОборотаИСМП);
	Объекты.Добавить(Метаданные.Документы.ВозвратВОборотИСМП);
	Объекты.Добавить(Метаданные.Документы.ЗаказНаЭмиссиюКодовМаркировкиСУЗ);
	Объекты.Добавить(Метаданные.Документы.ПеремаркировкаТоваровИСМП);
	Объекты.Добавить(Метаданные.Документы.СписаниеКодовМаркировкиИСМП);
	Объекты.Добавить(Метаданные.Документы.ОтгрузкаТоваровИСМП);
	Объекты.Добавить(Метаданные.Документы.ПриемкаТоваровИСМП);
	Объекты.Добавить(Метаданные.Документы.УточнениеСведенийОКодахМаркировкиИСМП);
	Объекты.Добавить(Метаданные.Документы.ОтчетИСМП);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеМеждуМОДИСМП);
	Объекты.Добавить(Метаданные.Документы.РазрешениеНаОтгрузкуИСМП);
	Объекты.Добавить(Метаданные.Справочники.ШтрихкодыУпаковокТоваров);
	// Конец ИнтеграцияИСМП
	
	//Начало ИнтеграцияЗЕРНО
	Объекты.Добавить(Метаданные.Справочники.АктыОтбораПробЗЕРНО);
	Объекты.Добавить(Метаданные.Справочники.ДоговорыХраненияПартийЗЕРНО);
	Объекты.Добавить(Метаданные.Справочники.РеестрМестФормированияПартийЗЕРНО);
	Объекты.Добавить(Метаданные.Справочники.РеестрПартийЗЕРНО);
	Объекты.Добавить(Метаданные.Справочники.РезультатыИсследованийЗЕРНО);
	Объекты.Добавить(Метаданные.Справочники.СДИЗЗЕРНО);
	Объекты.Добавить(Метаданные.Документы.ВнесениеСведенийОСобранномУрожаеЗЕРНО);
	Объекты.Добавить(Метаданные.Документы.ЗапросОстатковПартийЗЕРНО);
	Объекты.Добавить(Метаданные.Документы.ОформлениеСДИЗЗЕРНО);
	Объекты.Добавить(Метаданные.Документы.ПогашениеСДИЗЗЕРНО);
	Объекты.Добавить(Метаданные.Документы.СписаниеПартийЗЕРНО);
	Объекты.Добавить(Метаданные.Документы.ФормированиеПартийЗЕРНО);
	Объекты.Добавить(Метаданные.Документы.ФормированиеПартийИзДругихПартийЗЕРНО);
	Объекты.Добавить(Метаданные.Документы.ФормированиеПартийПриПроизводствеЗЕРНО);
	//Конец ИнтеграцияЗЕРНО
	
	//Начало ИнтеграцияСАТУРН
	Объекты.Добавить(Метаданные.Документы.АктИнвентаризацииСАТУРН);
	Объекты.Добавить(Метаданные.Документы.АктПримененияСАТУРН);
	Объекты.Добавить(Метаданные.Документы.ЗапросОстатковПартийСАТУРН);
	Объекты.Добавить(Метаданные.Документы.ИмпортПродукцииСАТУРН);
	Объекты.Добавить(Метаданные.Документы.НакладнаяСАТУРН);
	Объекты.Добавить(Метаданные.Документы.ПланПримененияСАТУРН);
	Объекты.Добавить(Метаданные.Документы.ПроизводственнаяОперацияСАТУРН);
	//Конец ИнтеграцияСАТУРН
	
	УчетПрослеживаемыхТоваровЛокализация.ОпределитьОбъектыСКомандамиОтчетов(Объекты);
	//++ НЕ УТ
	РеглУчетСервер.ОпределитьОбъектыСКомандамиОтчетов(Объекты);
	//-- НЕ УТ
	
	// 275-ФЗ
	Объекты.Добавить(Метаданные.Справочники.ГосударственныеКонтракты);

	//-- Локализация

КонецПроцедуры

// Задает настройки, применяемые как стандартные для объектов подсистемы.
// см. ВариантыОтчетовПереопределяемый.ПриОпределенииНастроек
// 
Процедура ПриОпределенииНастроек(Настройки) Экспорт
	
	//++ Локализация
	Настройки.Вставить("ОписаниеМобильногоПриложения",  ИнформацияОМобильномПриложении());
	//-- Локализация
	
КонецПроцедуры

// Задает настройки размещения вариантов отчетов в панели отчетов.
// см. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов
// 
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	//++ Локализация
	ВыводитьВариантыОтчетов = Ложь;
	
	//++ НЕ УТ
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.ДанныеДляБазыРаспределенияРасходов);
	//-- НЕ УТ
	
	// ИнтернетПоддержкаПользователей
	ИнтеграцияПодсистемБИП.ПриНастройкеВариантовОтчетов(Настройки);
	// Конец ИнтернетПоддержкаПользователей
	
	ТМЦВЭксплуатацииСервер.НастроитьВариантыОтчетов(Настройки);
	
	
	//++ НЕ УТ
	#Область ДенежныеДокументы
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоДенежнымДокументам);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоДенежнымДокументам");
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие денежные документы есть на предприятии?';
									|en = 'What financial documents are there in the enterprise?'");
	#КонецОбласти
	//-- НЕ УТ
	
	#Область ДосьеКонтрагента
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДосьеКонтрагента);
	ОписаниеОтчета.Включен = Ложь;	
	#КонецОбласти
	
	
	#Область ЖурналУчетаРозничнойПродажиАлкогольнойПродукции
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЖурналУчетаРозничнойПродажиАлкогольнойПродукции);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Журнал учета объема розничной продажи алкогольной
		|и спиртосодержащей продукции.';
		|en = 'Journal of alcoholic
		|and alcohol-containing products retail sale volume.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru = 'Журнал учета объема розничной продажи алкогольной и спиртосодержащей продукции
		|Организация
		|Подразделение';
		|en = 'Journal of alcoholic and alcohol-containing products retail sale volume
		|Company
		|Business unit'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru = 'Период
		|Организация
		|Склад';
		|en = 'Period
		|Company
		|Warehouse '");
	#КонецОбласти
	
	
	#Область ЖурналУчетаТМЦСданныхНаХранение
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЖурналУчетаТМЦСданныхНаХранение);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru = 'Форма по ОКУД 0335003
		|Организация
		|Организация-хранитель
		|Поклажедатель
		|Поклажедержатель
		|Структурное подразделение
		|ОКПО
		|ОКДП
		|Материально-ответственное лицо
		|МОЛ';
		|en = 'Form by RNCMD 0335003
		|Company
		|Custodian company
		|Depositor
		|Depository
		|Business unit
		|NCBO
		|RNCTEAPS
		|Financially liable person
		|IC'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru = 'Период
		|Организация';
		|en = 'Period
		|Company'");
	ОписаниеВарианта.Описание = НСтр("ru = 'Печать унифицированных форм МХ-1, МХ-2, МХ-3 по организации-хранителю за период';
									|en = 'Print unified forms MH-1, MH-2, MH-3 of the custodian company for the period'");
	#КонецОбласти
	
	
	#Область ЖурналФискальныхОпераций
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЖурналФискальныхОпераций);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Журнал учета документов, выданных покупателю при расчетах.';
									|en = 'Register of documents issued to the customer upon settlements.'");
	#КонецОбласти
	
	//++ НЕ УТ
	#Область ВедомостьПрослеживаемыхТоваровВСоставеОС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПрослеживаемыхТоваровВСоставеОС);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Отчет предназначен для учета остатков прослеживаемых товаров в составе ОС';
									|en = 'The report is for accounting of traceable goods balance in fixed assets'");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьУчетПрослеживаемыхИмпортныхТоваров");
	ОписаниеВарианта.Размещение.Вставить(Метаданные.Подсистемы.ВнеоборотныеАктивы.Подсистемы.ОсновныеСредства);
	#КонецОбласти
	
	#Область ОстаткиПрослеживаемыхТоваровВСоставеОСНепринятыхКУчету
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОстаткиПрослеживаемыхТоваровВСоставеОСНепринятыхКУчету);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Отчет предназначен для учета остатков прослеживаемых товаров в составе ОС, не принятых к учету';
									|en = 'The report is for accounting of traceable goods balance in fixed assets which are not recognized'");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьУчетПрослеживаемыхИмпортныхТоваров");
	ОписаниеВарианта.Размещение.Вставить(Метаданные.Подсистемы.ВнеоборотныеАктивы.Подсистемы.ОсновныеСредства);
	#КонецОбласти
	//-- НЕ УТ
	
	#Область ИндексыСПАРКРиски
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИндексыСПАРКРиски);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Просмотр индексов 1СПАРК Риски по контрагентам.';
									|en = 'View 1C-SPARK Risks indexes by counterparties.'");
	#КонецОбласти
	
	
	#Область ИмпортныеТоварыКОформлению
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИмпортныеТоварыКОформлению);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИмпортныеТоварыКОформлению");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьИмпортныеЗакупки");
	ОписаниеВарианта.Описание = НСтр("ru = 'По каким товарам не оформлены таможенные декларации?';
									|en = 'For which goods customs declarations are not registered?'");	
	#КонецОбласти
	
	#Область КартаПродаж
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КартаПродаж);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Анализ объемов продаж с помощью географической карты.';
									|en = 'Sales volume analysis using a map.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьБизнесРегионы");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КартаПродаж");
	ОписаниеВарианта.Описание = НСтр("ru = 'Анализ объемов продаж с помощью географической карты.';
									|en = 'Sales volume analysis using a map.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьБизнесРегионы");
	#КонецОбласти
	
	#Область КарточкаПартииПоВидамНалогообложения
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаПартииПоВидамНалогообложения);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);	
	#КонецОбласти
	
	
	#Область НастройкаСписка
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.НастройкаСписка);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти

	#Область ПересеченияШтрихкодовНоменклатурыСоСпецКодами 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПересеченияШтрихкодовНоменклатурыСоСпецКодами);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;	
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);	
	#КонецОбласти	
	
	#Область РеестрТорговыхДокументов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РеестрТорговыхДокументов);
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ВариантыОтчетовУТПереопределяемый.УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "СмТакже");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru = 'Список всех торговых документов';
									|en = 'List of all trade documents'");
	#КонецОбласти
	
	#Область СверкаДанныхПартионногоУчетаИСебестоимости 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СверкаДанныхПартионногоУчетаИСебестоимости);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СверкаДанныхПартионногоУчетаИСебестоимости");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьПартионныйУчет");
	ОписаниеВарианта.Описание = НСтр("ru = 'Сверка движений по регистрам партионного учета и движений по регистру себестоимости.';
									|en = 'Reconciliation of records in batch accounting registers and records in cost register.'");
	#КонецОбласти
	
	#Область СобытияМониторингаСПАРКРиски
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СобытияМониторингаСПАРКРиски);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Просмотра событий мониторинга 1СПАРК Риски. Показываются события за последние 15 дней.';
									|en = 'View 1C-SPARK Risks monitoring events. Events are shown over the last 15 days.'");
	#КонецОбласти
	
	
	#Область ТоварныйОтчетТОРГ29
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварныйОтчетТОРГ29);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru = 'Форма по ОКУД 330229
		|Организация
		|Структурное подразделение
		|ОКПО
		|ОКДП
		|Материально-ответственное лицо
		|МОЛ';
		|en = 'Form by RNCMD 330229
		|Company
		|Business unit
		|NCBO
		|RNCTEAPS
		|Financially liable person
		|IC'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru = 'Период
		|Организация
		|Склад
		|Номер отчета';
		|en = 'Period
		|Company
		|Warehouse
		|Report number'");
	ОписаниеВарианта.Описание =  НСтр("ru = 'Товарный отчет для анализа розничных продаж. Отчет формируется по регламентированной форме Торг-29';
										|en = 'Goods report for retail sales analysis. The report is generated according to the local form TORG-29'");
	#КонецОбласти
		
	#Область СверкаДанныхПартионногоУчетаИСебестоимости 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СверкаДанныхПартионногоУчетаИСебестоимости);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СверкаДанныхПартионногоУчетаИСебестоимости");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьПартионныйУчет");
	ОписаниеВарианта.Описание = НСтр("ru = 'Сверка движений по регистрам партионного учета и движений по регистру себестоимости.';
									|en = 'Reconciliation of records in batch accounting registers and records in cost register.'");
	#КонецОбласти
	
	//++ НЕ УТ
	#Область АнализЗатрат
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализЗатрат);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Каковы затраты подразделений за период?';
									|en = 'What are the costs of business units for the period?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализПроизводственныхЗатрат");
	ОписаниеВарианта.Описание = НСтр("ru = 'Каковы затраты подразделений за период?
		|Какова структура затрат за период и остаток незавершенного производства?';
		|en = 'What are the costs of business units for the period?
		|What is the cost structure for the period and the balance of unfinished production?'");
	#КонецОбласти
					
	#Область ДвижениеМатериаловПолуфабрикатовРаботВПроизводстве
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДвижениеМатериаловПолуфабрикатовРаботВПроизводстве);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвижениеМатериаловПолуфабрикатовРаботВПроизводстве");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользуетсяТолькоУправлениеПроизводством21");
	ОписаниеВарианта.Описание = НСтр("ru = 'Каковы затраты производства по материалам, полуфабрикатам и работам?
										|Куда распределены затраты производства?
										|Каковы остатки материалов, полуфабрикатов в производстве?';
										|en = 'What are production costs for materials, semi-finished products and works?
										|How the production costs are allocated?
										|How many materials and semi-finished products are there in production?'");
	
	ОтключитьВариант = Ложь;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвижениеМатериаловПолуфабрикатовРаботВПроизводстве21");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользуетсяУправлениеПроизводством21и22");
	ОписаниеВарианта.Описание = НСтр("ru = 'Каковы затраты производства по материалам, полуфабрикатам и работам?
										 |Куда распределены затраты производства?
										 |Каковы остатки материалов, полуфабрикатов в производстве?';
										 |en = 'What are production costs for materials, semi-finished products and works?
										 |How the production costs are allocated?
										 |How many materials and semi-finished products are there in production?'");
	
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ДвижениеМатериаловПолуфабрикатовРаботВПроизводствеКонтекст");
	#КонецОбласти
	
	
	#Область ЗарплатаКадры
	// Для всех отчетов разделов "Зарплата" и "Кадры" устанавливаем вывод отчетов вместо вариантов.
	ВыводитьВариантыОтчетов = Ложь;
	КоллекцияОтчетов = Метаданные.Отчеты;
	Для Каждого Отчет Из КоллекцияОтчетов Цикл
		Если ЗарплатаКадры.ОбъектМетаданныхВключенВПодсистемы(Отчет.ПолноеИмя(), "ЗарплатаКадрыПодсистемы,ЗарплатаКадрыРасширеннаяПодсистемы,ЗарплатаКадрыПриложения") Тогда
			ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Отчет);
			ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
		КонецЕсли;
	КонецЦикла;
	
	ЗарплатаКадрыОтчеты.НастроитьВариантыОтчетов(Настройки);
	ЗарплатаКадрыКомандныйИнтерфейс.НастроитьВариантыОтчетов(Настройки);
	
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.КнигаУчетаДепонентов);
	#КонецОбласти
	
	
	#Область МатериалыВПроизводствеПоСрокамГодности
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.МатериалыВПроизводствеПоСрокамГодности);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'По каким материалам скоро истекает срок годности?';
									|en = 'Which materials will expire soon?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОстаткиТоваровПоСрокамГодности");
	ОписаниеВарианта.Описание = НСтр("ru = 'По каким материалам скоро истекает срок годности?
		|Сколько таких материалов и в каких они подразделениях?';
		|en = 'Which materials are expiring soon?
		|How much of such materials are there and in which business units?'");
	#КонецОбласти		
		
	
	#Область ПроблемыПроверкиКонтрагентов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПроблемыПроверкиКонтрагентов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Проблемы, выявленные при проверке контрагентов сервисом ФНС.';
									|en = 'Issues detected during counterparty check by FTS.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru = 'Контрагент
		|Документ
		|ИНН
		|КПП
		|Проблема';
		|en = 'Counterparty
		|Document
		|TIN
		|CRTR
		|Issue'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru = 'Период
		|Контрагенты
		|Документы';
		|en = 'Period
		|Counterparties
		|Documents'");
	#КонецОбласти
	
	#Область ПроизводственныеЗатраты
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПроизводственныеЗатраты);
	ОписаниеОтчета.Описание = НСтр("ru = 'Сводная информация о затратах (материалах, выполненных видах работ и постатейных расходах), партиях производства и выпущенной продукции в разрезе организаций.';
									|en = 'Summary information about costs (materials, kinds of activity performed, and itemized expenses), production lots, and released products by companies.'");
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвижениеТМЦиПроизводственныеЗатратыПоПредприятию");
	ОписаниеВарианта.Описание = НСтр("ru = 'Сводная информация о затратах (материалах, выполненных видах работ и постатейных расходах), партиях производства и выпущенной продукции по предприятию.';
									|en = 'Summary information about costs (materials, kinds of activity performed, and itemized expenses), production lots, and released products of the enterprise.'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ВариантыОтчетовУТПереопределяемый.УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	#КонецОбласти
	
	#Область РасшифровкаПоступлениеМатериаловВПроизводство
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасшифровкаПоступлениеМатериаловВПроизводство));
	#КонецОбласти
	
	
	#Область РасшифровкаРасходовНаПроизводство
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасшифровкаРасходовНаПроизводство));
	#КонецОбласти

	#Область СправкаРасчетПереоценкиВалютныхСредствНУ
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетПереоценкиВалютныхСредствНУ);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта.Описание = НСтр("ru = 'Откуда возникают курсовые разницы?
		|Почему требуется переоценка?';
		|en = 'Check where exchange differences come from.
		|Find out why revaluation is required.'");
	#КонецОбласти
	
	//-- НЕ УТ
	
	//++ НЕ УТКА
	#Область МеждународныйУчет
	#Область КарточкаНМАМеждународныйУчет
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаНМАМеждународныйУчет);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область КарточкаОСМеждународныйУчет
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаОСМеждународныйУчет);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	#Область СравнениеНМА
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СравнениеНМА);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область СравнениеОС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СравнениеОС);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	#КонецОбласти
	
	
	#Область Производство21
	#Область АнализВыполненияМаршрутныхЛистов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализВыполненияМаршрутныхЛистов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Какова длительность выполнения маршрутных листов?';
									|en = 'How long does it take to execute the route sheets?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВыполнениеМаршрутныхЛистовБезЗадержек");
	ОписаниеВарианта.Описание = НСтр("ru = 'По каким этапам производства можно уменьшить длительность выполнения?';
									|en = 'For which production stages performance duration can be reduced?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВыполнениеМаршрутныхЛистовСЗадержками");
	ОписаниеВарианта.Описание = НСтр("ru = 'По каким маршрутным картам и по какой продукции возникают задержки при производстве.';
									|en = 'Which operations sheets and products cause delays during the manufacturing?'");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СведенияОВыполненииМаршрутныхЛистовКонтекст");
	#КонецОбласти
	
	
	#Область АнализПоОперационногоРасписания
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПоОперационногоРасписания); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти	
	
	
	#Область АнализПричинЗадержекВыполненияМаршрутныхЛистов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПричинЗадержекВыполненияМаршрутныхЛистов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПричиныЗадержек");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	ОписаниеВарианта.Описание = НСтр("ru = 'Показывает на диаграмме соотношение
		|причин задержек выполнения маршрутных листов.';
		|en = 'Shows ratio 
		|between route sheet completion delay reasons on the chart.'");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПричиныЗадержекКонтекст");
	#КонецОбласти
	
	
	#Область АнализСуточнойЗагрузки
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализСуточнойЗагрузки);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти

	
	#Область ГрафикПроизводстваПродукции
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ГрафикПроизводстваПродукции);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Просмотр графика производства продукции.';
									|en = 'View the production schedule.'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ГрафикПроизводстваПродукцииПоЗаказам");
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие даты выпуска/запуска продукции?
										|Когда будут выполнены заказы?
										|Какой объем выпуска запланирован в подразделении?
										|Какие этапы необходимо выполнить в подразделении за период?';
										|en = 'Check product release/launch dates.
										|Verify when the orders will be fulfilled.
										|Track the planned output volume in the business unit.
										|Analyze which steps must be performed in the business unit over a period.'");
										
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ГрафикПроизводстваПродукцииБезЗаказов");
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие даты выпуска/запуска продукции?
										|Какой объем выпуска запланирован в подразделении?
										|Какие этапы необходимо выполнить в подразделении за период?';
										|en = 'What are product release/launch dates?
										|What is the planned release volume in the business unit?
										|Which steps should be performed in the business unit for a period?'");
	#КонецОбласти
	
	
	#Область ДиаграммаПоОперационногоРасписания
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДиаграммаПоОперационногоРасписания);
	ОписаниеОтчета.Описание = НСтр("ru = 'Просмотр и анализ пооперационного расписания производства в виде диаграммы Ганта.';
									|en = 'View and analysis of operation production timetable as a Gantt chart.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru = 'РабочийЦентр';
																|en = 'РабочийЦентр'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru = 'Период
		|Подразделение
		|Маршрутный лист
		|Распоряжение';
		|en = 'Period
		|Business unit
		|Route sheet
		|Reference'");
	#КонецОбласти
	
	
	#Область ЗагрузкаРабочихЦентров
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЗагрузкаРабочихЦентров);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Анализ загрузки рабочих центров по данным расписания работы ключевых РЦ и данным пооперационного планирования.';
									|en = 'Analysis of load of work center types by schedule data of key work centers and operation planning data.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗагрузкаРабочихЦентров");
	ОписаниеВарианта.Описание = НСтр("ru = 'Какова степень загрузки рабочих центров?
										|Предельная или частичная?';
										|en = 'What is the load level of work centers?
										|Maximum or partial?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗанятостьРабочихЦентров");
	ОписаниеВарианта.Описание = НСтр("ru = 'В каких подразделениях заняты рабочие центры?
										|Для производства какой продукции заняты рабочие центры?';
										|en = 'In which business units work centers are occupied?
										|For manufacturing of which products work centers are occupied?'");	
	#КонецОбласти
	
	
	#Область ОтклонениеЗаказаФактаОтКалькуляции
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОтклонениеЗаказаФактаОтКалькуляции);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОтклонениеЗаказаФактаОтКалькуляции");
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие нормы расходов установлены спецификацией заказа?
		|Каковы отклонения от плановой калькуляции?
		|Каковы отклонения по результатам выполнения этапов?';
		|en = 'What consumption standards are set in the order BOM? 
		|Are there any variances from the planned calculation?
		|Are there variances after the stage execution?  '");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализОтклоненийПоПодразделениям");
	ОписаниеВарианта.Описание = НСтр("ru = 'В каких подразделениях произошли отклонения от нормативов?
		|При производстве каких полуфабрикатов произошли отклонения?';
		|en = 'In which business units variance from the standard occurred?
		|For production of which semi-finished products variance occurred?'");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОтклонениеСпецификацииЗаказаОтКалькуляции");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОтклонениеФактаОтСпецификацииЗаказа");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОтклонениеФактаОтКалькуляции");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗаказКонтекст");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОтклонениеФактаОтСпецификацииЗаказаБезПрогноза");
	#КонецОбласти
	
	
	#Область ОтклоненияВыпускаПродукцииОтГрафика
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОтклоненияВыпускаПродукцииОтГрафика);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьПроизводство");
	ОписаниеВарианта.Описание = НСтр("ru = 'Оценка отклонений при выпуске продукции.';
									|en = 'Evaluation of variances while releasing products.'");
											
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОтклоненияВыпуска");
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие отклонения при выпуске продукции?
											|На какую продукцию еще не оформлен выпуск?';
											|en = 'Are there any variances on product release?
											|Which products do not have registered release?'");	
	#КонецОбласти
	
	
	#Область ПередачаМатериаловПоЗаказу
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПередачаМатериаловПоЗаказу);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);	
	#КонецОбласти
	
	
	#Область ПлановаяИФактическаяСебестоимостьВыпущеннойПродукции
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПлановаяИФактическаяСебестоимостьВыпущеннойПродукции);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПлановаяИФактическая");
	ОписаниеВарианта.Описание = НСтр("ru = 'Какова плановые и фактические затраты по выпущенной продукции?
		|По каким объектам и статьям калькуляции произошли отклонения?';
		|en = 'What are planned and actual costs for the issued products?
		|Which objects and items of calculation have variances?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Отклонения");
	ОписаниеВарианта.Описание = НСтр("ru = 'Каковы отклонения себестоимости от плановых показателей?';
									|en = 'What is the cost variance from the planned indicators?'");
	
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПлановаяИФактическаяРасшифровка");
	#КонецОбласти
	
	
	#Область ПланФактныйАнализМатериаловРаботВСебестоимостиВыпущеннойПродукции
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПланФактныйАнализМатериаловРаботВСебестоимостиВыпущеннойПродукции);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область СостояниеВыполненияЗаказовНаПроизводство
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СостояниеВыполненияЗаказовНаПроизводство);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область СравнениеКалькуляцииИРесурснойСпецификации
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СравнениеКалькуляцииИРесурснойСпецификации);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти

	#Область СтоимостьМатериаловИРаботСпецификации
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СтоимостьМатериаловИРаботСпецификации);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти

	#КонецОбласти
	//-- НЕ УТКА
	
	//++ НЕ УТКА
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.ДинамикаОбновленияЧерезКопию);
	//-- НЕ УТКА
	
	ИнтеграцияИС.НастроитьВариантыОтчетов(Настройки);
	
	//++ НЕ УТ
	РеглУчетСервер.НастроитьВариантыОтчетов(Настройки);
	//-- НЕ УТ
	
	//-- Локализация
		
КонецПроцедуры

// Содержит описания изменений имен вариантов отчетов. Используется
// при обновлении информационной базы, в целях контроля ссылочной целостности
// и для сохранения настроек варианта, сделанных администратором.
// см. ВариантыОтчетовПереопределяемый.ЗарегистрироватьИзмененияКлючейВариантовОтчетов
// 
Процедура ЗарегистрироватьИзмененияКлючейВариантовОтчетов(Изменения) Экспорт
	
	//++ Локализация
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьИзменениеКлючей(Изменения, "УправленческийБаланс", "ПоОрганизациям", "УправленческийБаланс");
	
	//-- Локализация
	
КонецПроцедуры

// Возвращает имя и параметры формы с информацией о мобильном приложении для отображения в отчетах
//
// Возвращаемое значение:
// 	Структура - Ключи:
// 		* ИмяФормы - Строка - Имя общей формы
// 		* ПараметрыФормы - Структура - Содержит поля:
// 			** ИмяМакетаОписания - Строка - Имя общего макета с информацией о мобильном приложении
// 			** НазваниеПриложения - Строка - Название приложения
Функция ИнформацияОМобильномПриложении() Экспорт
	
	Описание = Новый Структура;
	Описание.Вставить("ИмяФормы", "");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИмяМакетаОписания", "");
	ПараметрыФормы.Вставить("НазваниеПриложения", "");
	Описание.Вставить("ПараметрыФормы", ПараметрыФормы);
	
	//++ Локализация
	Описание.ИмяФормы = "ОбщаяФорма.ОписаниеМобильногоПриложения"; 
	Описание.ПараметрыФормы.ИмяМакетаОписания= "ОписаниеМобильногоПриложенияЗаказы";
	Описание.ПараметрыФормы.НазваниеПриложения= НСтр("ru = '1С:Заказы';
													|en = '1C:Orders'");
	//-- Локализация
	
	Возврат Описание;
	
КонецФункции

#Область ДосьеКонтрагента

// Добавляет команду отчета в список команд.
// 
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
// Возвращаемое значение:
//   См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
Функция ДобавитьКомандуДосьеКонтрагента(КомандыОтчетов) Экспорт
	
	//++ Локализация
	Если ПравоДоступа("Просмотр", Метаданные.Отчеты.ДосьеКонтрагента) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		
		КомандаОтчет.Менеджер = Метаданные.Отчеты.ДосьеКонтрагента.ПолноеИмя();
		
		ИспользоватьПартнеровКакКонтрагентов = ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов");
		Представление = ?(ИспользоватьПартнеровКакКонтрагентов, НСтр("ru = 'Досье контрагента по данным сервиса 1С:Контрагент';
																	|en = 'Customer profile according to 1C:Counterparty service data'"), НСтр("ru = 'Досье контрагента';
																																		|en = 'Counterparty profile'"));
		
		КомандаОтчет.Представление = Представление;
		КомандаОтчет.Обработчик = "ПартнерыИКонтрагентыЛокализацияКлиент.ДосьеКонтрагента";
		
		КомандаОтчет.МножественныйВыбор = Истина;
		КомандаОтчет.Важность = "Важное";
		
		Возврат КомандаОтчет;
		
	КонецЕсли;
	//-- Локализация
	
	Возврат Неопределено;
КонецФункции

#КонецОбласти

#КонецОбласти
