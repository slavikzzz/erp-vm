////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы "Внеоборотные активы", предназначенные для локализации.
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область ФормаОбъектаЭксплуатации

Процедура НастроитьЗависимыеЭлементыФормы_ОбъектыЭксплуатации(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ГруппаОС.СписокВыбора,
			Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.КапитальныеВложенияВАрендованноеИмущество"),
			ПредопределенноеЗначение("Перечисление.ГруппыОС.КапитальныеВложенияВАрендованноеИмущество"),,
			11);
	
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ОбъектыЭксплуатации(Объект, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТипОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ТранспортныеСредства")
				ИЛИ Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.МашиныИОборудование"))
			И Объект.ТипОС = ПредопределенноеЗначение("Перечисление.ТипыОС.ОбъектЭксплуатации");
				
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЗарегистрированоВРеестреСистемыПлатон", 
			"ЗарегистрированоВРеестреСистемыПлатон", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.ПустаяСсылка")
			И Объект.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.РабочийСкот")
			И Объект.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.ПродуктивныйСкот")
			И Объект.ТипОС = ПредопределенноеЗначение("Перечисление.ТипыОС.ОбъектЭксплуатации");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НедвижимоеИмущество", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ДекорацияОтступНедвижимоеИмущество", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаСпискаОбъектаЭксплуатации

Процедура ЗаполнитьСведенияВФормеСпискаОС(Форма, Сведения2_4, Сведения2_2) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если Форма.ИспользоватьУчет2_4 Тогда
		
		ПредставлениеСведений = Сведения2_4.ПредставлениеСведений;
		
		Если ПредставлениеСведений <> Неопределено Тогда
			
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияПринятКУчету2, ПредставлениеСведений.СведенияПринятКУчету2);
				
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияГруппаОС, Сведения2_4.СведенияГруппаОС);
				
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияКодПоОКОФ, Сведения2_4.СведенияКодПоОКОФ);
				
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияАмортизационнаяГруппа, Сведения2_4.СведенияАмортизационнаяГруппа);
				
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияСрокИспользования2, ПредставлениеСведений.СведенияСрокИспользования2);
				
		Иначе
			
			Элементы.СведенияПринятКУчету2.Видимость = Ложь;
			Элементы.СведенияГруппаОС.Видимость = Ложь;
			Элементы.СведенияКодПоОКОФ.Видимость = Ложь;
			Элементы.СведенияАмортизационнаяГруппа.Видимость = Ложь;
			Элементы.СведенияСрокИспользования3.Видимость = Ложь;
			
		КонецЕсли; 
		
	Иначе
		
		Элементы.СтраницыСведения.ТекущаяСтраница = Элементы.СтраницаСведения2_2;
		
		Форма.СведенияТаблицаСумм.Очистить();
		
		Для Каждого ЭлМассива Из Сведения2_2 Цикл
			ЗаполнитьЗначенияСвойств(Форма.СведенияТаблицаСумм.Добавить(), ЭлМассива);
		КонецЦикла;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура УстановитьОтборыВФормеСпискаОС(Форма) Экспорт

	//++ Локализация
	
	Список = Форма.Список;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"АмортизационнаяГруппа",
		Форма.ОтборАмортизационнаяГруппа,
		ВидСравненияКомпоновкиДанных.Равно,,
		ЗначениеЗаполнено(Форма.ОтборАмортизационнаяГруппа));
		
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаНематериальныеАктивы

Процедура НастроитьЗависимыеЭлементыФормы_НематериальныеАктивы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЭтоНМА = Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив");
		
		Элементы.ВидНМА.Видимость = ЭтоНМА;
		Элементы.АмортизационнаяГруппа.Видимость = ЭтоНМА;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаСпискаНМА

Процедура ЗаполнитьСведенияВФормеСпискаНМА(Форма, Сведения2_4, Сведения2_2) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если Форма.ИспользоватьУчет2_4 Тогда
		
		ПредставлениеСведений = Сведения2_4.ПредставлениеСведений;
		
		Если ПредставлениеСведений <> Неопределено Тогда
			
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияПринятКУчету2, ПредставлениеСведений.СведенияПринятКУчету2);
				
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияАмортизационнаяГруппа, Сведения2_4.СведенияАмортизационнаяГруппа);
			
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияСрокИспользования2, ПредставлениеСведений.СведенияСрокИспользования2);
				
		Иначе
			
			Элементы.ОбщаяКомандаДокументыПоНематериальномуАктиву.Видимость = Ложь;
			Элементы.СведенияПринятКУчету2.Видимость = Ложь;
			Элементы.СведенияАмортизационнаяГруппа.Видимость = Ложь;
			Элементы.СведенияСрокИспользования2.Видимость = Ложь;
			
		КонецЕсли;
		
	Иначе	
		
		Форма.СведенияТаблицаСумм.Очистить();
		Для Каждого Эл Из Сведения2_2 Цикл
			ЗаполнитьЗначенияСвойств(Форма.СведенияТаблицаСумм.Добавить(), Эл);
		КонецЦикла;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПринятиеКУчетуУзловКомпонентовАмортизации

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуУзловКомпонентовАмортизации(Объект, ВспомогательныеРеквизиты, ПараметрыПринятияКУчетуКомпонентовАмортизации, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	#Область ПараметрыУчета
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
			И Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега")
			И ПараметрыПринятияКУчетуКомпонентовАмортизации.ДоступныПараметрыАмортизацииБУ
			И НЕ ВспомогательныеРеквизиты.ПрименяетсяФСБУ6;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизации", 
			"ГрафикАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПеремещениеНМА

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ПеремещениеНМА(Объект, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Ложь;
		
		//++ Локализация
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПеремещениеНМАвПодразделениеВыделенноеНаБаланс"));
		//-- Локализация
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Организация", 
			"ОрганизацияСдатчик", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	//++ Локализация
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ХозяйственнаяОперация =
			ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПеремещениеНМАвПодразделениеВыделенноеНаБаланс");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Организация", 
			"Организация", 
			"ВидимостьЭлемента", 
			Не ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучатель", 
			"ОрганизацияПолучатель", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область МодернизацияОС

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_МодернизацияОС(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	ДоступнаАмортизационнаяПремия = 
		Объект.ОтражатьВРеглУчете
		И Объект.ВключитьАмортизационнуюПремиюВСоставРасходов
		И Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
		И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
		И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.СтоимостьНеВключаетсяВРасходы")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка")
			ИЛИ НЕ ВспомогательныеРеквизиты.ЕстьОбъектыСписанныеПриПринятииКУчету);
			
	#Область СтраницаОсновное
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И ВспомогательныеРеквизиты.ЕстьУчетСебестоимости;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантПримененияЦелевогоФинансирования", 
			"ВариантПримененияЦелевогоФинансирования", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
					ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.СтоимостьНеВключаетсяВРасходы")
					ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка")
					ИЛИ НЕ ВспомогательныеРеквизиты.ЕстьОбъектыСписанныеПриПринятииКУчету);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("АмортизационнаяПремияУказанаВПроцентах")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовАмортизационнойПремии")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СпособВводаАмортизационнойПремии_ВПроцентах", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СпособВводаАмортизационнойПремии_ФиксированнаяСумма", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовАмортизационнойПремии", 
			"СтатьяРасходовАмортизационнойПремии", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовАмортизационнойПремии", 
			"АналитикаРасходовАмортизационнойПремии", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия, 
			ПараметрыРеквизитовОбъекта);
	КонецЕсли;
	#КонецОбласти
	
	#Область СтраницаОсновныеСредства
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("АмортизационнаяПремияУказанаВПроцентах")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовАмортизационнойПремии")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ОСПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия И Объект.АмортизационнаяПремияУказанаВПроцентах, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ОССуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия И НЕ Объект.АмортизационнаяПремияУказанаВПроцентах, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьБУ", 
			"", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);

		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости;
					
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьНУ", 
			"ОССтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОССтоимостьБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСГруппаСтоимостьРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И (НЕ ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
				ИЛИ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости);
					
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОССтоимостьБУ_Отдельно", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ПоддержкаПБУ18
			И НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости;
					
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьПР", 
			"ОССтоимостьПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
					
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьВР", 
			"ОССтоимостьВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	#КонецОбласти
	
	#Область СтраницаУчет
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ЕстьОбъектыСписанныеПриПринятииКУчету;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
			И ВспомогательныеРеквизиты.ЕстьОбъектыСписанныеПриПринятииКУчету;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияНУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ЕстьОбъектыСписанныеПриПринятииКУчету
			И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
				ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету"));
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНУ", 
			"СтатьяРасходовНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНУ", 
			"АналитикаРасходовНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	#КонецОбласти
	
	#Область СтраницаЦелевоеФинансирование
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
				ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное"));
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", "СтатьяДоходов", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", "АналитикаДоходов", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование", "ЦелевоеФинансирование", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование.Сумма", 
			"ЦелевоеФинансированиеСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты_МодернизацияОС(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль);
	ВспомогательныеРеквизиты.Вставить("ПоддержкаПБУ18", Форма.СлужебныеПараметрыФормы.ПоддержкаПБУ18);
	ВспомогательныеРеквизиты.Вставить("ЕстьОбъектыСписанныеПриПринятииКУчету", Форма.СлужебныеПараметрыФормы.ЕстьОбъектыСписанныеПриПринятииКУчету);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", Форма.СлужебныеПараметрыФормы.ПрименяетсяУСНДоходыМинусРасходы);
	
	ВспомогательныеРеквизиты.НаправлениеДеятельностиОбязательно = 
			ЗначениеЗаполнено(Объект.ВариантПримененияЦелевогоФинансирования)
				И (Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется"));
	
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы_МодернизацияОС(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("АмортизационнаяПремияУказанаВПроцентах")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.АмортизационнаяПремияУказанаВПроцентах Тогда
			ТекстПодсказки = НСтр("ru = 'Процент амортизационной премии указывается в табличном поле ""Основные средства""
			|индивидуально для каждого основного средства.';
			|en = 'Bonus depreciation percentage is specified in the ""Fixed assets"" table field,
			|separately for each fixed asset.'");
		Иначе
			ТекстПодсказки = НСтр("ru = 'Сумма амортизационной премии указывается в табличном поле ""Основные средства""
			|индивидуально для каждого основного средства.';
			|en = 'Bonus depreciation amount is specified in the ""Fixed assets"" table field
			|separately for each fixed asset.'")
		КонецЕсли; 
		
		Элементы.ВключитьАмортизационнуюПремиюВСоставРасходов.Подсказка = ТекстПодсказки;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(
													Объект.СрокИспользованияНУ);
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаОтражениеРасходовПоАмортизацииНУ.Заголовок = 
			?(Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету"),
				НСтр("ru = 'Включение в расходы (налоговый учет)';
					|en = 'Inclusion in expenses (tax accounting)'"),
				НСтр("ru = 'Амортизация (налоговый учет)';
					|en = 'Depreciation (tax accounting)'"));
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Элементы.ПорядокУчетаНУ.Видимость Тогда
			
			СписокВыбораНУ = Элементы.ПорядокУчетаНУ.СписокВыбора;
			
			ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
				СписокВыбораНУ, 
				Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль, 
				ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации"),, 
				0);
				
			ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
				СписокВыбораНУ, 
				Форма.СлужебныеПараметрыФормы.ПрименяетсяУСНДоходыМинусРасходы, 
				ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества"),, 
				0);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") Тогда
		
		Если Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль 
			И НЕ Форма.СлужебныеПараметрыФормы.ЕстьУчетСебестоимости Тогда
				
			Для Каждого ДанныеСтроки Из Объект.ОС Цикл
				Если ДанныеСтроки.СтоимостьНУ = 0
					И ДанныеСтроки.СтоимостьПР = 0
					И ДанныеСтроки.СтоимостьВР = 0 Тогда
					ДанныеСтроки.СтоимостьНУ = ДанныеСтроки.СтоимостьБУ;
				КонецЕсли;
			КонецЦикла;
		
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПриИзмененииРеквизитов_МодернизацияОС(Объект, ВспомогательныеРеквизиты, СписокРеквизитов) Экспорт

	//++ Локализация
	
	Если СписокРеквизитов.Найти("Дата") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("Организация") <> Неопределено 
		ИЛИ СписокРеквизитов.Найти("ОтражатьВРеглУчете") <> Неопределено 
		ИЛИ СписокРеквизитов.Найти("ОсновноеСредство") <> Неопределено 
		ИЛИ СписокРеквизитов.Найти("ОС") <> Неопределено Тогда
		
		Если ВспомогательныеРеквизиты.ЕстьОбъектыСписанныеПриПринятииКУчету Тогда
			
			Если ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы
				И Объект.ОтражатьВРеглУчете
				И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
					ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка")) Тогда
				
				Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества");
				СписокРеквизитов.Добавить("ПорядокУчетаНУ");
				
			ИначеЕсли НЕ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы
				И Объект.ОтражатьВРеглУчете
				И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества")
					ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка")) Тогда
				
				Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
				СписокРеквизитов.Добавить("ПорядокУчетаНУ");
				
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПринятиеКУчетуНМА

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуНМА(Объект, ПараметрыПринятияКУчетуНМА, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт
	
	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	#Область Основное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив")
			И Объект.ОтражатьВРеглУчете;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпособПоступления", 
			"СпособПоступления", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		Или СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И НЕ ПараметрыПринятияКУчетуНМА.ПоИнвентаризации
			И Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы")
			И ВспомогательныеРеквизиты.ЕстьУчетСебестоимости
			И ВспомогательныеРеквизиты.ИспользоватьУчетПоНаправлениямДеятельности;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантПримененияЦелевогоФинансирования", 
			"ВариантПримененияЦелевогоФинансирования", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		Или СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И (ПараметрыПринятияКУчетуНМА.ПоИнвентаризации 
					ИЛИ НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости)
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И (ПараметрыПринятияКУчетуНМА.ПоИнвентаризации 
					ИЛИ НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости)
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьПР", 
			"ПервоначальнаяСтоимостьПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьВР", 
			"ПервоначальнаяСтоимостьВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		Или СтруктураИзмененныхРеквизитов.Свойство("Дата")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.РаздельныйУчетВНАПоНалогообложениюНДС;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантРаздельногоУчетаНДС", 
			"ВариантРаздельногоУчетаНДС", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСРаспределяется", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ДекорацияРаздельныйУчет", 
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДС")
		Или СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСРаспределяется")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВариантРаздельногоУчетаНДС =
			ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"ТолькоПросмотр", 
			Не ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = Объект.ВариантРаздельногоУчетаНДС =
			ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента")
			И ВспомогательныеРеквизиты.РаздельныйУчетВНАПоНалогообложениюНДС;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДС")
		Или СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСРаспределяется")
		Или СтруктураИзмененныхРеквизитов.Свойство("НалогообложениеНДС")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВариантРаздельногоУчетаНДС =
			ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента")
			И Не ЗначениеЗаполнено(Объект.НалогообложениеНДС);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"ОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументНаОсновании", 
			"ДокументНаОсновании",
			"Видимость", 
			ПараметрыПринятияКУчетуНМА.ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументОснование", 
			"ДокументОснование",
			"Видимость", 
			ПараметрыПринятияКУчетуНМА.ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВидОбъектаУчета",
			"ВидимостьЭлемента", 
			НЕ ПараметрыПринятияКУчетуНМА.ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУчетаНУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВНУ
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВНУ 
			И Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив")
			И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
				ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы")) 
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВНУ
			И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
				ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы"));
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияНУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВНУ
			И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
				ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы"))
			И Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	#КонецОбласти
	
	#Область ОтражениеРасходовНУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВНУ 
			И ПараметрыПринятияКУчетуНМА.ДоступноОтражениеРасходовНУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНУ", 
			"СтатьяРасходовНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНУ", 
			"АналитикаРасходовНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВНУ
			И ПараметрыПринятияКУчетуНМА.СтатьяРасходовНУОбязательна;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНУ", 
			"СтатьяРасходовНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	#КонецОбласти
	
	#Область ОтражениеРасходовПрочее
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПередаватьРасходыВДругуюОрганизацию") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ПередаватьРасходыВДругуюОрганизацию;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"Доступность", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"ТолькоПросмотр", 
			Не ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПередаватьРасходыВДругуюОрганизацию", 
			"ПередаватьРасходыВДругуюОрганизацию",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтатьяДоходовПоИнвентаризации",
			"Видимость", 
			ПараметрыПринятияКУчетуНМА.ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АналитикаДоходовПоИнвентаризации",
			"Видимость", 
			ПараметрыПринятияКУчетуНМА.ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
			ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
			ИЛИ ПараметрыПринятияКУчетуНМА.ПоИнвентаризации;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ЦелевоеФинансирование
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
			И НЕ ПараметрыПринятияКУчетуНМА.ПоИнвентаризации
			И Объект.ОтражатьВРеглУчете;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование.Сумма", 
			"ЦелевоеФинансированиеСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
							ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное"));
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтатьяДоходовЦФ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АналитикаДоходовЦФ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование", 
			"ЦелевоеФинансирование", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ИзменениеПараметровОС

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ИзменениеПараметровОС(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	#Область Учет
	
	Если СтруктураИзмененныхРеквизитов.Свойство("КоэффициентАмортизацииБУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентАмортизацииБУ",
			"КоэффициентАмортизацииБУ", 
			"ТолькоПросмотр", 
			НЕ Объект.КоэффициентАмортизацииБУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентАмортизацииБУ", 
			"КоэффициентАмортизацииБУ", 
			"Видимость", 
			Объект.ОтражатьВБУ, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентАмортизацииБУФлаг", 
			"КоэффициентАмортизацииБУФлаг", 
			"Видимость", 
			Объект.ОтражатьВБУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГрафикАмортизацииФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизации", 
			"ГрафикАмортизации", 
			"ТолькоПросмотр", 
			НЕ Объект.ГрафикАмортизацииФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ГрафикАмортизацииФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			Объект.ОтражатьВБУ
			И НЕ ВспомогательныеРеквизиты.ПрименяетсяФСБУ6;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизации", 
			"ГрафикАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизацииФлаг", 
			"ГрафикАмортизацииФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюНУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"ТолькоПросмотр", 
			НЕ Объект.НачислятьАмортизациюНУФлаг, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВНУ 
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУФлаг", 
			"НачислятьАмортизациюНУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.СрокИспользованияНУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВНУ 
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
						
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУФлаг", 
			"СрокИспользованияНУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияНУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СпециальныйКоэффициентНУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"ТолькоПросмотр", 
			НЕ Объект.СпециальныйКоэффициентНУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВНУ 
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
						
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУФлаг", 
			"СпециальныйКоэффициентНУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("АмортизационнаяГруппаФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационнаяГруппа", 
			"АмортизационнаяГруппа",
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.АмортизационнаяГруппаФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационнаяГруппа", 
			"АмортизационнаяГруппа", 
			"Видимость", 
			Объект.ОтражатьВБУ И ВспомогательныеРеквизиты.ИспользоватьРеглУчет,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационнаяГруппаФлаг", 
			"АмортизационнаяГруппаФлаг", 
			"Видимость", 
			Объект.ОтражатьВБУ И ВспомогательныеРеквизиты.ИспользоватьРеглУчет, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НедвижимоеИмуществоФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НедвижимоеИмущество", 
			"НедвижимоеИмущество",
			"ТолькоПросмотр", 
			НЕ Объект.НедвижимоеИмуществоФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НедвижимоеИмущество", 
			"НедвижимоеИмущество", 
			"Видимость", 
			Объект.ОтражатьВБУ И ВспомогательныеРеквизиты.ИспользоватьРеглУчет,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НедвижимоеИмуществоФлаг", 
			"НедвижимоеИмуществоФлаг", 
			"Видимость", 
			Объект.ОтражатьВБУ И ВспомогательныеРеквизиты.ИспользоватьРеглУчет, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область АмортизационнаяПремия
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражениеАмортизационнойПремииФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационнаяПремия", 
			"АмортизационнаяПремия", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ОтражениеАмортизационнойПремииФлаг, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры
 
Процедура ДополнитьВспомогательныеРеквизиты_ИзменениеПараметровОС(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	ВспомогательныеРеквизиты.Вставить("ЕстьСвязанныеОрганизации", Форма.ЕстьСвязанныеОрганизации);
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.ПлательщикНалогаНаПрибыль);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяФСБУ6", Форма.СлужебныеПараметрыФормы.ПрименяетсяФСБУ6);
	
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы_ИзменениеПараметровОС(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	СлужебныеПараметрыФормы = Форма.СлужебныеПараметрыФормы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	#Область Учет
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюНУФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.НачислятьАмортизациюНУФлаг Тогда
			Элементы.НачислятьАмортизациюНУ.ФорматРедактирования = НСтр("ru = 'БЛ=Остановлено; БИ=Действует';
																		|en = 'BF=Stopped; BT=Valid'");
		Иначе
			Элементы.НачислятьАмортизациюНУ.ФорматРедактирования = НСтр("ru = 'БЛ=; БИ=Действует';
																		|en = 'BF=; BT=Valid'");
		КонецЕсли; 
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГрафикАмортизацииФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ГрафикАмортизацииФлаг Тогда
			Элементы.ГрафикАмортизации.ПодсказкаВвода = НСтр("ru = '<без графика>';
															|en = '<without schedule>'");
		Иначе
			Элементы.ГрафикАмортизации.ПодсказкаВвода = "";
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(
			Объект.СрокИспользованияНУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеВидно = НЕ СлужебныеПараметрыФормы.ПрименяетсяФСБУ6;
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"));
			
	КонецЕсли;
	
	#КонецОбласти
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ДокументОснование")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.АмортизационнаяПремия.Видимость = Форма.ВключитьАмортизационнуюПремиюВСоставРасходов;
		Элементы.ОтражениеАмортизационнойПремииФлаг.Видимость = Форма.ВключитьАмортизационнуюПремиюВСоставРасходов;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура УстановитьВидимостьТекущихЗначений_ИзменениеПараметровОС(Форма, КоличествоИзмененныхСвойств, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	СвойстваБУ = Новый Массив;
	СвойстваБУ.Добавить(ВнеоборотныеАктивыКлиентСервер.ИменаРеквизитовДанныеФлаг("ГрафикАмортизации", "ГрафикАмортизацииФлаг"));
	СвойстваБУ.Добавить(ВнеоборотныеАктивыКлиентСервер.ИменаРеквизитовДанныеФлаг("КоэффициентАмортизацииБУ", "КоэффициентАмортизацииБУФлаг"));
	СвойстваБУ.Добавить(ВнеоборотныеАктивыКлиентСервер.ИменаРеквизитовДанныеФлаг("АмортизационнаяГруппа", "АмортизационнаяГруппаФлаг"));
	СвойстваБУ.Добавить(ВнеоборотныеАктивыКлиентСервер.ИменаРеквизитовДанныеФлаг("НедвижимоеИмущество", "НедвижимоеИмуществоФлаг"));
	
	СвойстваНУ = Новый Массив;
	СвойстваНУ.Добавить(ВнеоборотныеАктивыКлиентСервер.ИменаРеквизитовДанныеФлаг("СпециальныйКоэффициентНУ", "СпециальныйКоэффициентНУФлаг"));
	СвойстваНУ.Добавить(ВнеоборотныеАктивыКлиентСервер.ИменаРеквизитовДанныеФлаг("СрокИспользованияНУ", "СрокИспользованияНУФлаг"));
	СвойстваНУ.Добавить(ВнеоборотныеАктивыКлиентСервер.ИменаРеквизитовДанныеФлаг("НачислятьАмортизациюНУ", "НачислятьАмортизациюНУФлаг"));
	
	СвойстваПрочее  = Новый Структура;
	СвойстваПрочее.Вставить("ОССрокИспользованияДляВычисленияАмортизацииБУ", 
	                        ВнеоборотныеАктивыКлиентСервер.ИменаРеквизитовДанныеФлаг("СрокИспользованияБУ", "СрокИспользованияБУФлаг"));
		
	Для каждого ЭлементМассива Из СвойстваБУ Цикл
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьТекущегоЗначенияПараметраПриИзмененииПараметров(
			Форма, Неопределено, ЭлементМассива, "ОС", СтруктураИзмененныхРеквизитов);
			
		КоличествоИзмененныхСвойств = КоличествоИзмененныхСвойств + ?(Объект[ЭлементМассива.ИмяРеквизитаФлаг], 1, 0);
		
	КонецЦикла;
	
	Для каждого ЭлементМассива Из СвойстваНУ Цикл
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьТекущегоЗначенияПараметраПриИзмененииПараметров(
			Форма, Неопределено, ЭлементМассива, "ОС", СтруктураИзмененныхРеквизитов);
			
		КоличествоИзмененныхСвойств = КоличествоИзмененныхСвойств + ?(Объект[ЭлементМассива.ИмяРеквизитаФлаг], 1, 0);
		
	КонецЦикла;
	
	Для каждого КлючИЗначение Из СвойстваПрочее Цикл
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьТекущегоЗначенияПараметраПриИзмененииПараметров(
			Форма, КлючИЗначение.Ключ, КлючИЗначение.Значение, "ОС", СтруктураИзмененныхРеквизитов);
			
	КонецЦикла;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ИзменениеПараметровНМА

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ИзменениеПараметровНМА(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт
	
	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	#Область ПараметрыНУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВНУ;
		
		// НачислятьАмортизациюНУ
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУФлаг", 
			"НачислятьАмортизациюНУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		// СрокИспользованияНУ
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУФлаг", 
			"СрокИспользованияНУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияНУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		// СпециальныйКоэффициентНУ
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУФлаг", 
			"СпециальныйКоэффициентНУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюНУФлаг")
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.НачислятьАмортизациюНУФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУФлаг")
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.СрокИспользованияНУФлаг, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СпециальныйКоэффициентНУФлаг")
		Или ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.СпециальныйКоэффициентНУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы_ИзменениеПараметровНМА(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		Элементы.ГруппаНУ.ОтображатьЗаголовок = Объект.ОтражатьВУпрУчете ИЛИ Объект.ОтражатьВБУ;
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(
			Объект.СрокИспользованияНУ);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюНУФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.НачислятьАмортизациюНУФлаг Тогда
			Элементы.НачислятьАмортизациюНУ.ФорматРедактирования = НСтр("ru = 'БЛ=Остановлено; БИ=Действует';
																		|en = 'BF=Stopped; BT=Valid'");
		Иначе
			Элементы.НачислятьАмортизациюНУ.ФорматРедактирования = НСтр("ru = 'БЛ=; БИ=Действует';
																		|en = 'BF=; BT=Valid'")
		КонецЕсли; 
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура УстановитьВидимостьТекущихЗначений_ИзменениеПараметровНМА(Форма, КоличествоСвойствУУ, КоличествоСвойствОбщ, КоличествоСвойствЛокализация, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	СвойстваНУ  = Новый Массив;
	СвойстваНУ.Добавить(ВнеоборотныеАктивыКлиентСервер.ИменаРеквизитовДанныеФлаг("СпециальныйКоэффициентНУ",   "СпециальныйКоэффициентНУФлаг"));
	СвойстваНУ.Добавить(ВнеоборотныеАктивыКлиентСервер.ИменаРеквизитовДанныеФлаг("СрокИспользованияНУ",        "СрокИспользованияНУФлаг"));
	СвойстваНУ.Добавить(ВнеоборотныеАктивыКлиентСервер.ИменаРеквизитовДанныеФлаг("НачислятьАмортизациюНУ",     "НачислятьАмортизациюНУФлаг"));
					
	КоличествоСвойствНУ = 0;
	
	Для каждого ЭлементМассива Из СвойстваНУ Цикл
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьТекущегоЗначенияПараметраПриИзмененииПараметров(
			Форма, Неопределено, ЭлементМассива, "НМА", СтруктураИзмененныхРеквизитов);
			
		КоличествоСвойствНУ = КоличествоСвойствНУ + ?(Объект[ЭлементМассива.ИмяРеквизитаФлаг], 1, 0);
		
	КонецЦикла;

	Если Форма.ПоказатьТекущиеЗначения Тогда
		
		ОтображатьВШапке = 
			КоличествоСвойствНУ <> 0
			ИЛИ КоличествоСвойствУУ <> 0
			ИЛИ КоличествоСвойствОбщ <> 0;
			
		Если Элементы.НМАГруппаБУ.ОтображатьВШапке <> ОтображатьВШапке Тогда
			Элементы.НМАГруппаБУ.ОтображатьВШапке = ОтображатьВШапке;
		КонецЕсли;
		
		ОтображатьВШапке = 
			КоличествоСвойствУУ <> 0
			ИЛИ КоличествоСвойствОбщ <> 0;
			
		Если Элементы.НМАГруппаНУ.ОтображатьВШапке <> ОтображатьВШапке Тогда
			Элементы.НМАГруппаНУ.ОтображатьВШапке = ОтображатьВШапке;
		КонецЕсли;
		
	КонецЕсли;
	
	КоличествоСвойствЛокализация = КоличествоСвойствНУ;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СписаниеОС

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_СписаниеОС(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаСписанияНУ", 
			"ОССуммаСписанияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаСписанияПР", 
			"ОССуммаСписанияПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаСписанияВР", 
			"ОССуммаСписанияВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты_СписаниеОС(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.ПлательщикНалогаНаПрибыль);
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы_СписаниеОС(Форма, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = (СтруктураИзмененныхРеквизитов.Количество() = 0);
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ОСГруппаЧастичнойЛиквидации.Видимость = 
			Объект.ОтражатьВРеглУчете 
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное");
		
		Если НЕ Объект.ОтражатьВРеглУчете 
			ИЛИ Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное") Тогда
			
			Элементы.ОССуммаСписанияБУ.Видимость = Ложь;
			Элементы.ОССуммаСписанияБУ_Расширенная.Видимость = Ложь;
			
		ИначеЕсли ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль Тогда
			
			Элементы.ОССуммаСписанияБУ.Видимость = Ложь;
			Элементы.ОССуммаСписанияБУ_Расширенная.Видимость = Истина;
			
		Иначе
			
			Элементы.ОССуммаСписанияБУ.Видимость = Истина;
			Элементы.ОССуммаСписанияБУ_Расширенная.Видимость = Ложь;
			
		КонецЕсли; 
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СписаниеНМА

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_СписаниеНМА(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеНМАЧастичное");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СуммаСписанияНУ", 
			"НМАСуммаСписанияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СуммаСписанияПР", 
			"НМАСуммаСписанияПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СуммаСписанияВР", 
			"НМАСуммаСписанияВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты_СписаниеНМА(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.ПлательщикНалогаНаПрибыль);
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы_СписаниеНМА(Форма, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = (СтруктураИзмененныхРеквизитов.Количество() = 0);
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаРеглУчет.Видимость = 
			Объект.ОтражатьВРеглУчете 
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеНМАЧастичное");
		
		Если НЕ Объект.ОтражатьВРеглУчете 
			ИЛИ Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеНМАЧастичное") Тогда
			
			Элементы.НМАСуммаСписанияБУ.Видимость = Ложь;
			Элементы.НМАСуммаСписанияБУ_Расширенная.Видимость = Ложь;
			
		ИначеЕсли ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль Тогда
			
			Элементы.НМАСуммаСписанияБУ.Видимость = Ложь;
			Элементы.НМАСуммаСписанияБУ_Расширенная.Видимость = Истина;
			
		Иначе
			
			Элементы.НМАСуммаСписанияБУ.Видимость = Истина;
			Элементы.НМАСуммаСписанияБУ_Расширенная.Видимость = Ложь;
			
		КонецЕсли; 
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбъединениеОС

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ОбъединениеОС(Объект, ВспомогательныеРеквизиты, ПараметрыОбъединенияОС, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	#Область Основное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.РаздельныйУчетВНАПоНалогообложениюНДС
							И НЕ Объект.ОбъединениеОднотипныхОС;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантРаздельногоУчетаНДС", 
			"", 
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСИзДокумента", 
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСРаспределяется", 
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НалогообложениеНДС", 
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСИзДокумента")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСРаспределяется")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВариантРаздельногоУчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУчетаБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
				НЕ Объект.ОбъединениеОднотипныхОС
				И Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
				И Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега")
				И ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииБУ
				И НЕ ВспомогательныеРеквизиты.ПрименяетсяФСБУ6;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизации", 
			"ГрафикАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
				НЕ Объект.ОбъединениеОднотипныхОС
				И (Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ")
					Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"))
				И ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииБУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГодоваяНормаАмортизацииБУ", 
			"ГодоваяНормаАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС")
			И НЕ Объект.ОбъединениеОднотипныхОС;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационнаяГруппа", 
			"АмортизационнаяГруппа", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки") 
			И Объект.ОтражатьВРеглУчете;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационнаяГруппа", 
			"АмортизационнаяГруппа", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	#КонецОбласти
	
	#Область ПараметрыУчетаНУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыОбъединенияОС.ДоступныПараметрыАмортизацииНУ
			И НЕ Объект.ОбъединениеОднотипныхОС;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияНУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
				И НЕ Объект.ОбъединениеОднотипныхОС
				И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
					ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
					
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыОбъединенияОС.ПредопределенныйПорядокУчетаНУ
			И НЕ Объект.ОбъединениеОднотипныхОС;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"ТолькоПросмотрБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОбъединениеОС")
			И НЕ Объект.ОбъединениеОднотипныхОС
			И ВспомогательныеРеквизиты.ИспользуетсяЦФ;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"АвтоотметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("АмортизационнаяГруппа")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И НЕ Объект.ОбъединениеОднотипныхОС
			И ВспомогательныеРеквизиты.ИспользоватьРеглУчет
			И (ВспомогательныеРеквизиты.ТребуетсяНастройкаОтраженияРасходовПоНалогам
				ИЛИ (Объект.Дата >= '201901010000'
						И (ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки")
							ИЛИ ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ОбъектыПриродопользования")
							ИЛИ ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ТранспортныеСредства")
							ИЛИ ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.МашиныИОборудование"))));
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНалог", 
			"СтатьяРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНалог", 
			"АналитикаРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации 
							И НЕ Объект.ОбъединениеОднотипныхОС
							И (ПараметрыОбъединенияОС.ДоступноОтражениеРасходовБУ 
								ИЛИ ПараметрыОбъединенияОС.ДоступноОтражениеРасходовНУ
								ИЛИ ПараметрыОбъединенияОС.ДоступноОтражениеРасходовУУ);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПередаватьРасходыВДругуюОрганизацию",
			"ПередаватьРасходыВДругуюОрганизацию", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПередаватьРасходыВДругуюОрганизацию") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ПередаватьРасходыВДругуюОрганизацию 
							И НЕ Объект.ОбъединениеОднотипныхОС;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов",
			"ОрганизацияПолучательРасходов", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры
 
Процедура ЗаполнитьРеквизитыВЗависимостиОтСвойств_ОбъединениеОС(Объект, ПараметрыРеквизита, Действие, ИзмененныеРеквизиты) Экспорт

	//++ Локализация
	
	#Область СтраницаОсновное
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ВариантРаздельногоУчетаНДС"
		И Действие = "Заполнить" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "НалогообложениеНДС"
		И Действие = "Заполнить" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаУчет
	
	Если ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюБУ"
		ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюНУ" Тогда
		
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ?(Действие = "Заполнить", Истина, Ложь);
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	//
	Если ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаБУ"
		И Действие = "Заполнить" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	Если ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаНУ"
		И Действие = "Заполнить" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	//
	Если ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииБУ"
		И Действие = "Заполнить" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область РазукомплектацияОС

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_РазукомплектацияОС(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьНУ", 
			"СтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц
			И ВспомогательныеРеквизиты.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации");
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьПР", 
			"СтоимостьПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьВР", 
			"СтоимостьВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ")
			ИЛИ Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега")
			И ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГодоваяНормаАмортизацииБУ",
			"КоэффициентАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область РеализацияУслугПрочихАктивов

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_РеализацияУслугПрочихАктивов(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Соглашение")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов")
								ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав"))
							И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РеализацияВзаимозависимомуЛицу", 
			"РеализацияВзаимозависимомуЛицу", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("РеализацияВзаимозависимомуЛицу")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Партнер")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Контрагент")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Соглашение")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов")
								ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав"))
							И Объект.РеализацияВзаимозависимомуЛицу;
								
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Расходы.ВосстановитьАмортизационнуюПремию", 
			"РасходыВосстановитьАмортизационнуюПремию", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Расходы.СуммаАмортизационнойПремии", 
			"РасходыСуммаАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Расходы.СтатьяДоходов", 
			"РасходыСтатьяДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Расходы.АналитикаДоходов", 
			"РасходыАналитикаДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты_РеализацияУслугПрочихАктивов(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.ПлательщикНалогаНаПрибыль);
	//-- Локализация
	
КонецПроцедуры
 
Процедура ПриИзмененииРеквизитов_РеализацияУслугПрочихАктивов(Форма, ИзмененныеРеквизиты) Экспорт
	
	//++ Локализация
	
	Объект = Форма.Объект;
	
	Если Объект.РеализацияВзаимозависимомуЛицу
		И (НЕ Форма.ПлательщикНалогаНаПрибыль 
		ИЛИ Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов")
		И Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав")) Тогда
		
		Объект.РеализацияВзаимозависимомуЛицу = Ложь;
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",РеализацияВзаимозависимомуЛицу";
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы_РеализацияУслугПрочихАктивов(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("РеализацияВзаимозависимомуЛицу")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Партнер")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Контрагент")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Соглашение")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов")
								ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав"))
							И Объект.РеализацияВзаимозависимомуЛицу;
							
		Элементы.РасходыЗаполнитьВосстановлениеАмортизационнойПремии.Видимость = ЗначениеСвойства;
		Элементы.РасходыЗаполнитьСтатьюАмортизационнойПремии.Видимость = ЗначениеСвойства;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ПереоценкаОС

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ПереоценкаОС(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьБУ", 
			"ОССтоимостьБУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ИзменениеУсловийДоговораАренды

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ИзменениеУсловийДоговораАренды(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт
	
	//++ Локализация
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	РеквизитыДоговора = ВспомогательныеРеквизиты.РеквизитыДоговора;
	БалансодержательАрендатор = 
		(РеквизитыДоговора.Балансодержатель = ПредопределенноеЗначение("Перечисление.БалансодержательПредметовАренды.Арендатор"));
		
	#Область СтраницаОС
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			НЕ ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018
				И БалансодержательАрендатор
			ИЛИ ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018
				И РеквизитыДоговора.УчитыватьПредметыАрендыВРеглУчете;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СрокИспользованияБУ", 
			"ОССрокИспользованияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			БалансодержательАрендатор
			И РеквизитыДоговора.УчитыватьПредметыАрендыВРеглУчете;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СрокИспользованияНУ", 
			"ОССрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ВыкупАрендованныхОС

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ВыкупАрендованныхОС(Объект, ВспомогательныеРеквизиты, ПараметрыВыкупаОС, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ИмуществоНаБалансе = (ВспомогательныеРеквизиты.Балансодержатель 
							= ПредопределенноеЗначение("Перечисление.БалансодержательПредметовАренды.Арендатор"));

	#Область СтраницаОС
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства =
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьНУ", 
			"ОССтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	#КонецОбласти

	#Область СтраницаУчет
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства = НЕ ИмуществоНаБалансе;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационнаяГруппа", 
			"АмортизационнаяГруппа", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства = 
			ПараметрыВыкупаОС.ДоступноОтражениеРасходовНУ
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
			И НЕ ИмуществоНаБалансе;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов") 
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства = НЕ Объект.ВключитьАмортизационнуюПремиюВСоставРасходов;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыВыкупаОС.ДоступноОтражениеРасходовНУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНУ", 
			"СтатьяРасходовНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНУ", 
			"АналитикаРасходовНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = НЕ ИмуществоНаБалансе;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНалог", 
			"СтатьяРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНалог", 
			"АналитикаРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВыкупаОС.ДоступноОтражениеРасходовНУ
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
			И НЕ ИмуществоНаБалансе
			И Объект.ВключитьАмортизационнуюПремиюВСоставРасходов;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовАмортизационнойПремии", 
			"СтатьяРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовАмортизационнойПремии", 
			"АналитикаРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНУ", 
			"СтатьяРасходовНУ", 
			"АвтоОтметкаНезаполненного", 
			ПараметрыВыкупаОС.СтатьяРасходовНУОбязательна, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПараметрыВыкупаОС(Объект, ВспомогательныеРеквизиты, ПараметрыВыкупаОС) Экспорт
	
	//++ Локализация

	ДоступныПараметрыАмортизацииНУ = ДоступныПараметрыАмортизацииНУ(Объект, ВспомогательныеРеквизиты);
	ДоступноОтражениеРасходовНУ = ДоступноОтражениеРасходовНУ(Объект, ВспомогательныеРеквизиты);
	
	СтатьяРасходовНУОбязательна = ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
	
	ПараметрыВыкупаОС.Вставить("ДоступныПараметрыАмортизацииНУ", ДоступныПараметрыАмортизацииНУ);
	ПараметрыВыкупаОС.Вставить("ДоступноОтражениеРасходовНУ",    ДоступноОтражениеРасходовНУ);
	ПараметрыВыкупаОС.Вставить("СтатьяРасходовНУОбязательна",    СтатьяРасходовНУОбязательна);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты_ВыкупАрендованныхОС(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", Форма.СлужебныеПараметрыФормы.ПрименяетсяУСНДоходыМинусРасходы);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВБУ", Истина);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВНУ", Истина);
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы_ВыкупАрендованныхОС(Форма, СтруктураИзмененныхРеквизитов) Экспорт
	
	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;

	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда

		Если Элементы.ПорядокУчетаНУ.Видимость Тогда
				
			СписокВыбораНУ = Элементы.ПорядокУчетаНУ.СписокВыбора;
			
			ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
				СписокВыбораНУ, 
				Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль, 
				ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации"),, 
				0);

			//
			ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
				СписокВыбораНУ, 
				Форма.СлужебныеПараметрыФормы.ПрименяетсяУСНДоходыМинусРасходы, 
				ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества"),, 
				0);
		
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда

		Элементы.СрокИспользованияНУРасшифровка.Видимость = Элементы.СрокИспользованияНУ.Видимость;
		
		Если Элементы.ПорядокУчетаНУ.Видимость
			И НЕ ЗначениеЗаполнено(Объект.ПорядокУчетаНУ)
			И НЕ ОбновитьВсе Тогда
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
			Объект.НачислятьАмортизациюНУ = Истина; 
		КонецЕсли;
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаОтражениеРасходовПоАмортизацииНУ.Заголовок = 
			?(Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету"),
				НСтр("ru = 'Включение в расходы (налоговый учет)';
					|en = 'Inclusion in expenses (tax accounting)'"),
				НСтр("ru = 'Амортизация (налоговый учет)';
					|en = 'Depreciation (tax accounting)'"));
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(
			Объект.СрокИспользованияНУ);
			
	КонецЕсли;
	
	//-- Локализация

КонецПроцедуры

#КонецОбласти

#Область ВводОстатковВзаиморасчетовПоАренде

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ВводОстатковВзаиморасчетовПоАренде(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты, ПараметрыРеквизитовОбъекта) Экспорт
	
	//++ Локализация
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	Если ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ИспользоватьРеглУчет;
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОтражатьВБУиНУ", 
			"ОтражатьВБУиНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ИспользоватьРеглУчет
			И ВспомогательныеРеквизиты.ВестиУУНаПланеСчетовХозрасчетный;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОтражатьВУУ", 
			"ОтражатьВУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.ОтражатьВБУиНУ ИЛИ Объект.ОтражатьВУУ)
			И НЕ Объект.ОтражатьВОперативномУчете;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЗаполнитьПоДаннымОУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// 
// Параметры:
//  Приемник - Структура - Приемник
//  ПараметрыУП - Структура - Параметры УП
Процедура ДополнитьПараметрамиУчетнойПолитики(Приемник, ПараметрыУП) Экспорт
	
	//++ Локализация
	
	Если ПараметрыУП.Свойство("ПрименяетсяФСБУ6") Тогда
		Приемник.Вставить("ПрименяетсяФСБУ6", ПараметрыУП.ПрименяетсяФСБУ6);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПараметрыПринятияКУчетуОСИВводаОстатков(Объект, ВспомогательныеРеквизиты, ПараметрыПринятияКУчетуОС) Экспорт

	//++ Локализация
									
	//
	ДоступныПараметрыАмортизацииНУ = ДоступныПараметрыАмортизацииНУ(Объект, ВспомогательныеРеквизиты);
									
	//								
	АмортизацияНУДоступна = 
		(Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизацииИлиСписаниеНаРасходы"))
		И ВспомогательныеРеквизиты.ОтражатьВНУ;
							
	ДоступноОтражениеРасходовНУ = ДоступноОтражениеРасходовНУ(Объект, ВспомогательныеРеквизиты);
	
	//
	ПредопределенныйПорядокУчетаНУ = 
		(Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СтоимостьНеПогашается")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена"));
							
	СтатьяРасходовНУОбязательна = 
		ВспомогательныеРеквизиты.ОтражатьВНУ 
		И (НЕ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НеПриниматьКУчетуВключитьВРасходы")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизацииИлиСписаниеНаРасходы"));
	
	//	
	СтатьяРасходовУУОбязательна = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете 
		И (НЕ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ 
				И НЕ ДоступноОтражениеРасходовНУ
			ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы"));
			
	//
	НаправлениеДеятельностиОбязательно =
		(НЕ ВспомогательныеРеквизиты.Свойство("ХозяйственнаяОперация")
			ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств")
				И ВспомогательныеРеквизиты.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
				И ВспомогательныеРеквизиты.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе")
				И ВспомогательныеРеквизиты.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе"))
		И ВспомогательныеРеквизиты.Свойство("ВариантПримененияЦелевогоФинансирования")
		И ЗначениеЗаполнено(ВспомогательныеРеквизиты.ВариантПримененияЦелевогоФинансирования)
		И ВспомогательныеРеквизиты.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется");
					
			
	//
	ПараметрыПринятияКУчетуОС.Вставить("ДоступныПараметрыАмортизацииНУ", ДоступныПараметрыАмортизацииНУ);
	ПараметрыПринятияКУчетуОС.Вставить("ДоступноОтражениеРасходовНУ", ДоступноОтражениеРасходовНУ);
	ПараметрыПринятияКУчетуОС.Вставить("ПредопределенныйПорядокУчетаНУ", ПредопределенныйПорядокУчетаНУ);
	ПараметрыПринятияКУчетуОС.Вставить("АмортизацияНУДоступна", АмортизацияНУДоступна);
	ПараметрыПринятияКУчетуОС.Вставить("СтатьяРасходовНУОбязательна", СтатьяРасходовНУОбязательна);
	ПараметрыПринятияКУчетуОС.Вставить("СтатьяРасходовУУОбязательна", СтатьяРасходовУУОбязательна);
	ПараметрыПринятияКУчетуОС.Вставить("НаправлениеДеятельностиОбязательно", НаправлениеДеятельностиОбязательно);
	
	//-- Локализация
	
КонецПроцедуры

Функция ПриИзмененииПорядкаУчетаБУ_ОС(Объект, СлужебныеПараметрыФормы = Неопределено, ЕстьПорядокУчетаНУ = Истина) Экспорт

	ИзмененныеРеквизиты = "";
	
	//++ Локализация
	
	Если Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации") Тогда
		
		Если ЕстьПорядокУчетаНУ Тогда
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
			ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",ПорядокУчетаНУ";
		КонецЕсли;
		
	ИначеЕсли Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СтоимостьНеПогашается")
		И ЕстьПорядокУчетаНУ Тогда
		
		Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.СтоимостьНеВключаетсяВРасходы");
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",ПорядокУчетаНУ";
		
	ИначеЕсли Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
		И ЕстьПорядокУчетаНУ Тогда
		
		Если СлужебныеПараметрыФормы <> Неопределено
			И СлужебныеПараметрыФормы.ПрименяетсяУСНДоходыМинусРасходы Тогда
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества");
		Иначе
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена");
		КонецЕсли; 
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",ПорядокУчетаНУ";
		
	ИначеЕсли Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
		И ЕстьПорядокУчетаНУ Тогда
		
		Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.СтоимостьНеВключаетсяВРасходы");
		Объект.ПрименениеЦелевогоФинансирования = Ложь;
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",ПорядокУчетаНУ,ПрименениеЦелевогоФинансирования";
		
	ИначеЕсли Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету")
		И ЕстьПорядокУчетаНУ Тогда
		
		Если Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена") Тогда
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
			ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",ПорядокУчетаНУ";
		КонецЕсли; 
		
	КонецЕсли; 
	
	//-- Локализация
	
	Возврат ИзмененныеРеквизиты;
	
КонецФункции

#КонецОбласти

//++ Локализация

#Область Инвентаризация

Функция ЗначенияСвойствЗависимыхРеквизитов_ИнвентаризацияОС(Объект, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ИнвентаризацияОС");
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МОЛ", 
			"МОЛ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.МОЛ", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.Действие", 
			"ОСДействие", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МОЛ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ИнвентаризацияОС")
			И НЕ ЗначениеЗаполнено(Объект.МОЛ);
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСМОЛ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Возврат ПараметрыРеквизитовОбъекта;

КонецФункции

Процедура ЗаполнитьДействиеНаОснованииИнвентаризацииОС(ДанныеСтроки, Организация, Подразделение, МОЛ, ИспользуетсяВНА24) Экспорт
	
	ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ПустаяСсылка");

	Если ДанныеСтроки.НаличиеПоДаннымУчета 
		И НЕ ДанныеСтроки.НаличиеФактическое
		И ДанныеСтроки.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОС.ПринятоКУчету")
		И НЕ ДанныеСтроки.ПолученоВАренду Тогда
		
		ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Списание");
		
	ИначеЕсли ДанныеСтроки.НаличиеПоДаннымУчета 
		И НЕ ДанныеСтроки.НаличиеФактическое
		И ДанныеСтроки.ПолученоВАренду Тогда
		
		Если ТипЗнч(ДанныеСтроки.Договор) = Тип("СправочникСсылка.ДоговорыАренды") Тогда
			ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ПрекращениеДоговораАренды");
		Иначе
			ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ВыбытиеАрендованныхОС");
		КонецЕсли;
		
	ИначеЕсли ДанныеСтроки.НаличиеПоДаннымУчета 
		И ДанныеСтроки.НаличиеФактическое
		И ДанныеСтроки.СтоимостьПоДаннымУчета <> ДанныеСтроки.СтоимостьФактическая
		И ДанныеСтроки.СтоимостьФактическая <> 0
		И НЕ ДанныеСтроки.ПолученоВАренду Тогда
		
		ДанныеСтроки.Действие = ?(ИспользуетсяВНА24, 
								ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Переоценка"),
								ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Списание"));
		
	ИначеЕсли НЕ ДанныеСтроки.НаличиеПоДаннымУчета Тогда
		
		Если ДанныеСтроки.НаличиеФактическое
			И (ДанныеСтроки.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОС.НеПринятоКУчету")
				ИЛИ ДанныеСтроки.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОС.СнятоСУчета")
				ИЛИ НЕ ЗначениеЗаполнено(ДанныеСтроки.Состояние)) Тогда
			
			ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ПринятиеКУчету");
			
		ИначеЕсли ДанныеСтроки.НаличиеФактическое
			И ДанныеСтроки.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОС.ПринятоКУчету")
			И (ДанныеСтроки.ОрганизацияПоДаннымУчета <> Организация
				ИЛИ ДанныеСтроки.ПодразделениеПоДаннымУчета <> Подразделение
				ИЛИ НЕ ЗначениеЗаполнено(МОЛ)
					И ДанныеСтроки.МОЛПоДаннымУчета <> ДанныеСтроки.МОЛ
					И ЗначениеЗаполнено(ДанныеСтроки.МОЛ)
				ИЛИ ЗначениеЗаполнено(МОЛ)
					И ДанныеСтроки.МОЛПоДаннымУчета <> МОЛ) Тогда
			
			ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Перемещение");
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьДанныеУчетаВСтрокеИнвентаризацииОС(ДанныеСтроки, ДанныеУчета, ПараметрыИнвентаризации, ЭтоЧтениеОбъекта, ЗаполнитьСлужебныеРеквизиты, ИспользуетсяУправлениеВНА_2_4) Экспорт

	Если ДанныеУчета <> Неопределено Тогда
		
		Если НЕ ЭтоЧтениеОбъекта Тогда
			
			Если ДанныеУчета.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ИнвентаризацияНезавершенногоСтроительства") Тогда
				ДанныеСтроки.НаличиеПоДаннымУчета = Истина;
			ИначеЕсли ДанныеУчета.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ИнвентаризацияВложенийВОС") Тогда
				ДанныеСтроки.НаличиеПоДаннымУчета = Истина;
			Иначе
				ДанныеСтроки.НаличиеПоДаннымУчета = 
					(ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОС.ПринятоКУчету")
						ИЛИ ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету"))
					И ДанныеУчета.ОрганизацияПоДаннымУчета = ПараметрыИнвентаризации.Организация
					И ДанныеУчета.ПодразделениеПоДаннымУчета = ПараметрыИнвентаризации.Подразделение
					И (НЕ ЗначениеЗаполнено(ПараметрыИнвентаризации.МОЛ)
							И (ДанныеУчета.МОЛПоДаннымУчета = ДанныеСтроки.МОЛ
								ИЛИ НЕ ЗначениеЗаполнено(ДанныеСтроки.МОЛ))
						ИЛИ ЗначениеЗаполнено(ПараметрыИнвентаризации.МОЛ)
							И ДанныеУчета.МОЛПоДаннымУчета = ПараметрыИнвентаризации.МОЛ);
			КонецЕсли; 
			
			Если ДанныеСтроки.НаличиеПоДаннымУчета Тогда
				ДанныеСтроки.СтоимостьПоДаннымУчета = ДанныеУчета.СтоимостьПоДаннымУчета;
			Иначе
				ДанныеСтроки.СтоимостьПоДаннымУчета = 0;
			КонецЕсли;
			
			ЗаполнитьРассчитываемыеПоляИнвентаризации(ДанныеСтроки);
			
		КонецЕсли; 
		
		Если ЗаполнитьСлужебныеРеквизиты Тогда
			ДанныеСтроки.ОрганизацияПоДаннымУчета = ДанныеУчета.ОрганизацияПоДаннымУчета;
			ДанныеСтроки.ПодразделениеПоДаннымУчета = ДанныеУчета.ПодразделениеПоДаннымУчета;
			ДанныеСтроки.МОЛПоДаннымУчета = ДанныеУчета.МОЛПоДаннымУчета;
			ДанныеСтроки.ОрганизацииВзаимосвязаны = ДанныеУчета.ОрганизацииВзаимосвязаны;
			ДанныеСтроки.ПолученоВАренду = ДанныеУчета.ПолученоВАренду;
			ДанныеСтроки.Договор = ДанныеУчета.Договор;
			ДанныеСтроки.Состояние = ДанныеУчета.Состояние;
			ДанныеСтроки.ИнвентарныйНомер = ДанныеУчета.ИнвентарныйНомер;
			ДанныеСтроки.Код = ДанныеУчета.Код;
		КонецЕсли; 
		
	Иначе
		
		Если НЕ ЭтоЧтениеОбъекта Тогда
			ДанныеСтроки.НаличиеПоДаннымУчета = Ложь;
			ДанныеСтроки.СтоимостьПоДаннымУчета = 0;
		КонецЕсли; 
		
		Если ЗаполнитьСлужебныеРеквизиты Тогда
			ДанныеСтроки.ОрганизацияПоДаннымУчета = Неопределено;
			ДанныеСтроки.ПодразделениеПоДаннымУчета = Неопределено;
			ДанныеСтроки.МОЛПоДаннымУчета = Неопределено;
			ДанныеСтроки.ОрганизацииВзаимосвязаны = Ложь;
			ДанныеСтроки.ПолученоВАренду = Ложь;
			ДанныеСтроки.Договор = Неопределено;
			ДанныеСтроки.Состояние = Неопределено;
			ДанныеСтроки.ИнвентарныйНомер = "";
			ДанныеСтроки.Код = "";
		КонецЕсли; 
		
	КонецЕсли; 
	
	Если НЕ ЭтоЧтениеОбъекта Тогда
		
		ЗаполнитьДействиеНаОснованииИнвентаризацииОС(
			ДанныеСтроки, 
			ПараметрыИнвентаризации.Организация, 
			ПараметрыИнвентаризации.Подразделение,
			ПараметрыИнвентаризации.МОЛ,
			ИспользуетсяУправлениеВНА_2_4);
			
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьДействиеНаОснованииИнвентаризацииНМА(ДанныеСтроки, ДанныеУчета, Организация, Подразделение) Экспорт
	
	ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ПустаяСсылка");

	Если ДанныеУчета = Неопределено Тогда
		
		ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ПустаяСсылка");
		
	ИначеЕсли ДанныеСтроки.НаличиеПоДаннымУчета 
		И НЕ ДанныеСтроки.НаличиеФактическое
		И ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияНМА.ПринятКУчету") Тогда
		
		ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Списание");
		
	ИначеЕсли НЕ ДанныеСтроки.НаличиеПоДаннымУчета Тогда
		
		Если ДанныеСтроки.НаличиеФактическое
			И (ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияНМА.НеПринятКУчету")
				ИЛИ ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияНМА.Списан")) Тогда
			
			ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ПринятиеКУчету");
			
		ИначеЕсли ДанныеСтроки.НаличиеФактическое
			И ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияНМА.ПринятКУчету")
			И (ДанныеУчета.Организация <> Организация
				ИЛИ ДанныеУчета.Подразделение <> Подразделение) Тогда
			
			ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Перемещение");
			
		КонецЕсли;
		
	ИначеЕсли ДанныеСтроки.НаличиеПоДаннымУчета
		И ДанныеСтроки.НаличиеФактическое
		И ДанныеСтроки.СтоимостьПоДаннымУчета <> ДанныеСтроки.СтоимостьФактическая Тогда
		
		ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Переоценка");
		
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьСтрокуИнвентаризацииНМАПоДаннымУчета(ДанныеСтроки, ДанныеУчета) Экспорт

	Если ДанныеУчета <> Неопределено Тогда
		
		ДанныеСтроки.НаличиеПоДаннымУчета = ДанныеУчета.НаличиеПоДаннымУчета;
		Если ДанныеСтроки.НаличиеПоДаннымУчета Тогда
			ДанныеСтроки.СтоимостьПоДаннымУчета = ДанныеУчета.СтоимостьПоДаннымУчета;
		Иначе
			ДанныеСтроки.СтоимостьПоДаннымУчета = 0;
		КонецЕсли;
		
	Иначе
		ДанныеСтроки.НаличиеПоДаннымУчета = Ложь;
		ДанныеСтроки.СтоимостьПоДаннымУчета = 0;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьРассчитываемыеПоляИнвентаризации(ДанныеСтроки) Экспорт
	
	РазницаПоСтоимости = ДанныеСтроки.СтоимостьФактическая - ДанныеСтроки.СтоимостьПоДаннымУчета;

	ДанныеСтроки.ИзлишекСумма = ?(РазницаПоСтоимости > 0, РазницаПоСтоимости, 0);
	ДанныеСтроки.НедостачаСумма = ?(РазницаПоСтоимости < 0, -РазницаПоСтоимости, 0);

КонецПроцедуры

#КонецОбласти

#Область ПерерасчетИмущественныхНалогов

Функция ЗначенияСвойствЗависимыхРеквизитов_ПерерасчетИмущественныхНалогов(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;

	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = НЕ ВспомогательныеРеквизиты.ВалютыСовпадают;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаКорректировкиУпр",
			"СуммаКорректировкиУпр",
			"ВидимостьЭлемента",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПерерасчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВариантПерерасчета <> ПредопределенноеЗначение("Перечисление.ВариантыПерерасчетаИмущественныхНалогов.Возместить");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантВозмещения",
			"ВариантВозмещения",
			"ТолькоПросмотрБезОтметкиНезаполненного",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		ВидимостьАналитикиРасходов = Ложь;
		ВидимостьАналитикиДоходов = Ложь;
		
		Если Объект.ВариантПерерасчета = ПредопределенноеЗначение("Перечисление.ВариантыПерерасчетаИмущественныхНалогов.Доначислить") 
			Или Объект.ВариантПерерасчета = ПредопределенноеЗначение("Перечисление.ВариантыПерерасчетаИмущественныхНалогов.ПустаяСсылка") Тогда
			ВидимостьАналитикиРасходов = Истина;
		ИначеЕсли Объект.ВариантПерерасчета = ПредопределенноеЗначение("Перечисление.ВариантыПерерасчетаИмущественныхНалогов.Возместить") Тогда
			ВидимостьАналитикиДоходов = Истина;
		КонецЕсли;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОтражениеДоходовРасходов.АналитикаРасходов",
			"ОтражениеДоходовРасходовАналитикаРасходов",
			"Видимость",
			ВидимостьАналитикиРасходов,
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОтражениеДоходовРасходов.АналитикаДоходов",
			"ОтражениеДоходовРасходовАналитикаДоходов",
			"Видимость",
			ВидимостьАналитикиДоходов,
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
		
КонецФункции

#КонецОбласти

#Область Прочее

Функция ДоступныПараметрыАмортизацииНУ(Объект, ВспомогательныеРеквизиты) Экспорт
	
	ДоступныПараметрыАмортизацииНУ = 
		ВспомогательныеРеквизиты.ОтражатьВНУ
		И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
			ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы)
		И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизацииИлиСписаниеНаРасходы")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка"));
	
	Возврат ДоступныПараметрыАмортизацииНУ;
	
КонецФункции

Функция ДоступноОтражениеРасходовНУ(Объект, ВспомогательныеРеквизиты) Экспорт
	
	ДоступноОтражениеРасходовНУ = 
		ВспомогательныеРеквизиты.ОтражатьВНУ
		И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
		И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизацииИлиСписаниеНаРасходы")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка"))
		И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
	
	Возврат ДоступноОтражениеРасходовНУ;
	
КонецФункции

// Возвращает список групп, которые относятся к недвижимому имуществу.
// 
// Возвращаемое значение:
//  Массив - Список групп, которые относятся к недвижимому имуществу.
//
Функция ГруппыНедвижимогоИмущества() Экспорт

	СписокГрупп = Новый Массив;
	СписокГрупп.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.Здания"));
	СписокГрупп.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.Сооружения"));
	СписокГрупп.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.МноголетниеНасаждения"));
	СписокГрупп.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации"));
	СписокГрупп.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.ОбъектыПриродопользования"));
	СписокГрупп.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки"));
	
	Возврат СписокГрупп;
	
КонецФункции

#КонецОбласти

//-- Локализация

#Область Прочее

Процедура ДополнитьИзменяемыеРеквизиты_ИзменениеПараметровНМА(ИзменяемыеРеквизиты) Экспорт

	//++ Локализация
	
	ИзменяемыеРеквизитыЛокализация = Новый Структура("НачислятьАмортизациюНУ,СпециальныйКоэффициентНУ");
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ИзменяемыеРеквизиты, ИзменяемыеРеквизитыЛокализация, Истина);
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
