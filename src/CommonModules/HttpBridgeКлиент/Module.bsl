///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Асинх Функция ПодключитьHTTPКлиентАсинх() Экспорт
	
	ОписаниеКомпонентыПодключения = ОписаниеКомпоненты();
	ИмяОбъекта = ОписаниеКомпонентыПодключения.ИмяОбъекта;
	ПолноеИмяМакета = ОписаниеКомпонентыПодключения.ПолноеИмяМакета;
	
	Результат = ВнешниеКомпонентыБПОКлиент.РезультатПодключения();
	
	ОбъектКомпоненты = МенеджерОборудованияКлиент.ОбъектДрайвераИзКэша(ИмяОбъекта);
	Если ОбъектКомпоненты <> Неопределено Тогда   
		Результат.Подключено = Истина;
		Результат.ПодключаемыйМодуль = ОбъектКомпоненты;   
		Возврат Результат;
	КонецЕсли;
	
	РезультатПодключения = Ждать ВнешниеКомпонентыБПОКлиент.ПодключитьКомпонентуИзМакетаАсинх(ИмяОбъекта, ПолноеИмяМакета);
	Если Не РезультатПодключения.Подключено Тогда
		
		РезультатУстановки = Ждать ВнешниеКомпонентыБПОКлиент.УстановитьКомпонентуИзМакетаАсинх(ПолноеИмяМакета);
		Если Не РезультатУстановки.Установлено Тогда
			Результат.Подключено = Ложь;
			Результат.ОписаниеОшибки = СтрШаблон(НСтр("ru = 'Ошибка установки компоненты %1: %2';
														|en = 'Ошибка установки компоненты %1: %2'"), ИмяОбъекта, РезультатУстановки.ОписаниеОшибки);
			Возврат Результат;
		КонецЕсли;
		
		РезультатПодключения = Ждать ВнешниеКомпонентыБПОКлиент.ПодключитьКомпонентуИзМакетаАсинх(ИмяОбъекта, ПолноеИмяМакета);
		Если Не РезультатПодключения.Подключено Тогда
			Результат.Подключено = Ложь;
			Результат.ОписаниеОшибки = СтрШаблон(НСтр("ru = 'Ошибка подключения компоненты %1: %2';
														|en = 'Ошибка подключения компоненты %1: %2'"), ИмяОбъекта, РезультатПодключения.ОписаниеОшибки);
			Возврат Результат;
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Результат, РезультатПодключения);
	
	МенеджерОборудованияКлиент.ДобавитьДрайверВКэш(ИмяОбъекта, РезультатПодключения.ПодключаемыйМодуль); 
	
	Возврат Результат; 
	
КонецФункции

Асинх Функция ВерсияАсинх() Экспорт
	
	РезультатПодключения = Ждать ПодключитьHTTPКлиентАсинх();
	Если Не РезультатПодключения.Подключено Тогда
		Возврат ОшибкаПодключенияКомпоненты(РезультатПодключения.ОписаниеОшибки);
	КонецЕсли;
	
	ОбъектДрайвера = РезультатПодключения.ПодключаемыйМодуль;
	Попытка
		РезультатВызова = Ждать ОбъектДрайвера.ВерсияАсинх();    
		РезультатОперации = РезультатОперации();
		РезультатОперации.Вставить("Версия", РезультатВызова.Значение);  
	Исключение           
		РезультатОперации = ОшибкаВызоваМетодаКомпоненты("Версия");
	КонецПопытки;
	
	Возврат РезультатОперации;
	
КонецФункции     

Асинх Функция GetАсинх(URL, Заголовки = Неопределено) Экспорт
	
	РезультатПодключения = Ждать ПодключитьHTTPКлиентАсинх();
	Если Не РезультатПодключения.Подключено Тогда
		Возврат ОшибкаПодключенияКомпоненты(РезультатПодключения.ОписаниеОшибки);
	КонецЕсли;
	
	ОбъектДрайвера = РезультатПодключения.ПодключаемыйМодуль;
	НастрокаПодключенияJSON = НастройкиПодключенияJSON(URL);
	ЗаголовкиJSON = ЗаголовкиJSON(Заголовки);
	Попытка
		СтрокаОтвет = "";
		РезультатВызова = Ждать ОбъектДрайвера.GetАсинх(НастрокаПодключенияJSON, ЗаголовкиJSON, СтрокаОтвет);
		РезультатОперации = РезультатОперации();
		РезультатОперации.КодОтвета = РезультатВызова.Значение;
		РезультатОперации.Ответ = РезультатВызова.Параметры[2];
		Если РезультатОперации.КодОтвета = -1 Тогда
			Ждать ЗаполнитьИнформациюОбОшибке(ОбъектДрайвера, РезультатОперации);
		КонецЕсли;
	Исключение
		РезультатОперации = ОшибкаВызоваМетодаКомпоненты("Get");
	КонецПопытки;
	
	Возврат РезультатОперации;
	
КонецФункции

Асинх Функция PostАсинх(URL, Тело, Заголовки = Неопределено) Экспорт
	
	РезультатПодключения = Ждать ПодключитьHTTPКлиентАсинх();
	Если Не РезультатПодключения.Подключено Тогда
		Возврат ОшибкаПодключенияКомпоненты(РезультатПодключения.ОписаниеОшибки);
	КонецЕсли;
	
	ОбъектДрайвера = РезультатПодключения.ПодключаемыйМодуль;
	НастрокаПодключенияJSON = НастройкиПодключенияJSON(URL);
	ЗаголовкиJSON = ЗаголовкиJSON(Заголовки);
	Попытка
		СтрокаОтвет = "";
		РезультатВызова = Ждать ОбъектДрайвера.PostАсинх(НастрокаПодключенияJSON, ЗаголовкиJSON, Тело, СтрокаОтвет);
		РезультатОперации = РезультатОперации();
		РезультатОперации.КодОтвета = РезультатВызова.Значение;
		РезультатОперации.Ответ = РезультатВызова.Параметры[3];
		Если РезультатОперации.КодОтвета = -1 Тогда
			Ждать ЗаполнитьИнформациюОбОшибке(ОбъектДрайвера, РезультатОперации);
		КонецЕсли;
	Исключение           
		РезультатОперации = ОшибкаВызоваМетодаКомпоненты("Post");
	КонецПопытки;
	
	Возврат РезультатОперации;
	
КонецФункции

Асинх Функция DeleteАсинх(URL, Заголовки = Неопределено) Экспорт
	
	РезультатПодключения = Ждать ПодключитьHTTPКлиентАсинх();
	Если Не РезультатПодключения.Подключено Тогда
		Возврат ОшибкаПодключенияКомпоненты(РезультатПодключения.ОписаниеОшибки);
	КонецЕсли;
	
	ОбъектДрайвера = РезультатПодключения.ПодключаемыйМодуль;
	НастрокаПодключенияJSON = НастройкиПодключенияJSON(URL);
	ЗаголовкиJSON = ЗаголовкиJSON(Заголовки);
	Попытка
		СтрокаОтвет = "";
		РезультатВызова = Ждать ОбъектДрайвера.DeleteАсинх(НастрокаПодключенияJSON, ЗаголовкиJSON, СтрокаОтвет);
		РезультатОперации = РезультатОперации();
		РезультатОперации.КодОтвета = РезультатВызова.Значение;
		РезультатОперации.Ответ = РезультатВызова.Параметры[2];
		Если РезультатОперации.КодОтвета = -1 Тогда
			Ждать ЗаполнитьИнформациюОбОшибке(ОбъектДрайвера, РезультатОперации);
		КонецЕсли;
	Исключение           
		РезультатОперации = ОшибкаВызоваМетодаКомпоненты("Delete");
	КонецПопытки;
	
	Возврат РезультатОперации;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОписаниеКомпоненты()
	
	Параметры = Новый Структура;
	Параметры.Вставить("ИмяОбъекта", "HttpBridge");
	Параметры.Вставить("ПолноеИмяМакета", "ОбщийМакет.КомпонентаHttpBridge");
	Возврат Параметры;               
	
КонецФункции

// Результат выполнения операции
// Параметры:
//   Результат - Булево.
//   ОписаниеОшибки - Строка.
//
// Возвращаемое значение:
//   Структура:
//   * Результат - Булево.
//   * ОписаниеОшибки - Строка.
//
Функция РезультатОперации()
	
	РезультатОперации = Новый Структура;
	РезультатОперации.Вставить("Результат", Истина);
	РезультатОперации.Вставить("ОписаниеОшибки", "");
	РезультатОперации.Вставить("КодОтвета", "");  
	РезультатОперации.Вставить("Ответ", "");
	Возврат РезультатОперации;
	
КонецФункции

Асинх Функция ЗаполнитьИнформациюОбОшибке(ОбъектДрайвера, РезультатОперации)
	
	РезультатВызова = Ждать ОбъектДрайвера.ПолучитьОшибкуАсинх(""); // Структура
	РезультатОперации.Результат = Ложь;
	РезультатОперации.ОписаниеОшибки = РезультатВызова.Параметры[0];
	
КонецФункции

Функция ОшибкаВызоваМетодаКомпоненты(Метод)
	
	ОписаниеОшибки = НСтр("ru = 'Ошибка вызова метода драйвера <%1>.:%2';
							|en = 'Ошибка вызова метода драйвера <%1>.:%2'");
	ОписаниеОшибки = СтрШаблон(
		ОписаниеОшибки, 
		Метод, 
		ОбработкаОшибок.СообщениеОбОшибкеДляПользователя(ИнформацияОбОшибке()));
	
	РезультатОперации = РезультатОперации();
	РезультатОперации.Результат = Ложь;
	РезультатОперации.ОписаниеОшибки = ОписаниеОшибки;
	Возврат РезультатОперации;
	
КонецФункции  

Функция ОшибкаПодключенияКомпоненты(ОписаниеОшибки)
	
	РезультатОперации = РезультатОперации();
	РезультатОперации.Результат = Ложь;
	РезультатОперации.ОписаниеОшибки = ОписаниеОшибки;
	Возврат РезультатОперации;
	
КонецФункции  

Функция НастройкиПодключенияJSON(URL)
	
	РазобранныйURL = РазобратьURL(URL);
	
	НастрокаПодключения = Новый Структура;
	НастрокаПодключения.Вставить("Host", РазобранныйURL.Хост);
	НастрокаПодключения.Вставить("Url", URL);
	Возврат ЗаписатьЗначениеJSON(НастрокаПодключения);
	
КонецФункции

Функция ЗаголовкиJSON(Заголовки)
	
	Результат = "";
	Если ЗначениеЗаполнено(Заголовки) Тогда
		Результат = "{";
		Для Каждого КлючЗначение Из Заголовки Цикл
			Результат = Результат + """"+КлючЗначение.Ключ+""":"""+Строка(КлючЗначение.Значение)+""",";
		КонецЦикла;
		Если СтрЗаканчиваетсяНа(Результат,",") Тогда
			Результат = Лев(Результат, СтрДлина(Результат)-1);
		КонецЕсли;
		Результат = Результат + "}";
		Возврат Результат;
	КонецЕсли;
	Возврат "{}";
	
КонецФункции

Функция РазобратьURL(Знач URL)
	
	Протокол = "";
	Позиция = СтрНайти(URL, "://");
	Если Позиция > 0 Тогда
		Протокол = Лев(URL, Позиция - 1);
		URL = Сред(URL, Позиция + 3);
	КонецЕсли;
	
	Сервер = "";
	Позиция = СтрНайти(URL, "/");
	Если Позиция > 0 Тогда
		Сервер = Лев(URL, Позиция - 1);
		URL = Сред(URL, Позиция);
	Иначе
		Сервер = URL;
		URL = "";
	КонецЕсли;
	
	АдресРесурса = URL;
	
	Результат = Новый Структура;
	Результат.Вставить("Хост", ?(ЗначениеЗаполнено(Протокол), Протокол + "://"+Сервер, Сервер));
	Результат.Вставить("Протокол", Протокол);
	Результат.Вставить("Сервер", Сервер);
	Результат.Вставить("АдресРесурса", АдресРесурса);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
