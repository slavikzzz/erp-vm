////////////////////////////////////////////////////////////////////////////////
// Процедуры, связанные с операцией "Закрытие расходов от выбытия ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ОбработчикиЭтаповЗакрытияМесяца

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап(ТаблицаЭтапов, ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ЗакрытиеРасходовОтВыбытияОС);
		
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам);
	
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Выполнить';
										|en = 'Calculate'");
	
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ЗакрытиеРасходовОтВыбытияОС.ОпределитьСтатусОперации");
		
	НоваяСтрока.ДействиеВыполнить = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"ЗакрытиеРасходовОтВыбытияОС.ВыполнитьОперациюЗакрытияМесяца");
		
КонецПроцедуры

// Определяет статус операции "Использование_ЗакрытиеРасходовОтВыбытияОС".
// 
// Параметры:
//  ПараметрыОбработчика - см. ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыОбработчикаЭтапаЗакрытияМесяцаДляПроверки
Процедура ОпределитьСтатусОперации(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, 1);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ПараметрыОбработчика.ПараметрыРасчета.Период) Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеОтключено(
			ПараметрыОбработчика,
			НСтр("ru = 'Учет внеоборотных активов отключен.';
				|en = 'Accounting of fixed assets disabled.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
		Возврат;
		
	КонецЕсли;
	
	Если ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Документ.СписаниеОС2_4 КАК СписаниеОС
	|ГДЕ
	|	СписаниеОС.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СписаниеОС.Организация В (&МассивОрганизаций)
	|	И СписаниеОС.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК РеализацияОС
	|ГДЕ
	|	(РеализацияОС.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|		ИЛИ РеализацияОС.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &КонецПериода)
	|
	|	И РеализацияОС.Организация В (&МассивОрганизаций)
	|	И РеализацияОС.Проведен
	|
	|	И РеализацияОС.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда

		ТекстПояснения = СтрШаблон(
			НСтр("ru = 'За период %1 нет заданий для расчета данной операции.';
				|en = 'No jobs to calculate this operation for the %1 period.'", ОбщегоНазначения.КодОсновногоЯзыка()),
			РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации));
			
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(ПараметрыОбработчика, ТекстПояснения);
			
	КонецЕсли;
		
КонецПроцедуры

// Выполняет операцию "ЗакрытьРасходыОтВыбытияОС".
// 
// Параметры:
//  ПараметрыОбработчика - см. Обработки.ОперацииЗакрытияМесяца.ИнициализироватьПараметрыОбработчикаЭтапа
Процедура ВыполнитьОперациюЗакрытияМесяца(ПараметрыОбработчика) Экспорт

	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
			
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ЗакрытиеМесяца.ЗакрытиеРасходовОтВыбытияОС");
	
	НомерДоРасчета = РегистрыСведений.ЗаданияКЗакрытиюМесяца.УвеличитьНомерЗадания();
	
	ЗаданияКРасчету = ЗаданияКРасчету(ПараметрыРасчета, НомерДоРасчета);
	
	Результат = ВыполнитьОперацию(
		ЗаданияКРасчету.НачалоПериода, 
		КонецМесяца(ПараметрыРасчета.Период), 
		ЗаданияКРасчету.СписокОрганизаций,
		НомерДоРасчета,
		Истина,
		ЗаданияКРасчету.МенеджерВременныхТаблиц,
		"ЗаданияКЗакрытиюМесяца",
		ПараметрыОбработчика.ИдентификаторРасчета);
		
	Если Результат.ЕстьОшибки Тогда
		
		Для Каждого Организация Из ЗаданияКРасчету.СписокОрганизаций Цикл
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				Перечисления.ОперацииЗакрытияМесяца.ЗакрытиеРасходовОтВыбытияОС, 
				ПараметрыРасчета.Период,
				Организация,
				Результат.ТекстОшибки);
		
		КонецЦикла;
		
	КонецЕсли;
		
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, Результат.КоличествоДанных);
			
КонецПроцедуры

#КонецОбласти

#Область ВыполнениеОперации

// Закрывает расходы, связанные с выбытием ОС.
// 
// Параметры:
//  НачалоПериода - Дата - Период с которого требуется выполнить операцию
//  КонецПериода - Дата - Период по который требуется выполнить операцию
//  СписокОрганизаций - Массив из СправочникСсылка.Организации - Список организаций
//  НомерДоРасчета - Число - Номер заданий
//  БезОтбораОС - Булево - Истина, если нет отбора по ОС
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Содержит список объектов
//  ИмяРегистраЗаданий - Строка - Имя регистра заданий
//  ИдентификаторРасчета - УникальныйИдентификатор - Идентификатор расчета
//  УдалитьЗадания - Булево - Истина, если нужно удалить задания
// 
// Возвращаемое значение:
//  Структура - результат формирования движений:
// 		* ЕстьОшибки - Булево - Истина, если были зарегистрированы ошибки во время выполнения
// 		* ТекстОшибки - Строка - Текст ошибки
// 		* КоличествоДанных - Число - Количество объектов, по которым сформированы движения
//
Функция ВыполнитьОперацию(НачалоПериода, КонецПериода, СписокОрганизаций, НомерДоРасчета, БезОтбораОС, МенеджерВременныхТаблиц, ИмяРегистраЗаданий, ИдентификаторРасчета, УдалитьЗадания = Истина) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ЕстьОшибки", Ложь);
	Результат.Вставить("ТекстОшибки", "");
	Результат.Вставить("КоличествоДанных", 0);

	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(КонецПериода) Тогда
		Возврат Результат;
	КонецЕсли; 
	
	ОчередьЗаданийКРасчету = СоздатьОчередьЗаданий(
			НачалоПериода, 
			КонецПериода, 
			СписокОрганизаций, 
			НомерДоРасчета, 
			БезОтбораОС, 
			МенеджерВременныхТаблиц, 
			ИмяРегистраЗаданий, 
			УдалитьЗадания);

	Если ОчередьЗаданийКРасчету.Количество() = 0 Тогда
		
		Если УдалитьЗадания Тогда
			
			ПараметрыВыполнения = ПараметрыВыполнения();
			ПараметрыВыполнения.КонецПериода = КонецМесяца(КонецПериода);
			ПараметрыВыполнения.СписокОрганизаций = СписокОрганизаций;
			ПараметрыВыполнения.ВыполнитьПроверку = Истина;
			ПараметрыВыполнения.НомерДоРасчета = НомерДоРасчета;
			ПараметрыВыполнения.ИмяРегистраЗаданий = ИмяРегистраЗаданий;
			ПараметрыВыполнения.УдалитьЗадания = УдалитьЗадания;
			
			УдалитьЗаданияПоДату(ПараметрыВыполнения);
			
		КонецЕсли;
			
		Возврат Результат;
		
	КонецЕсли;

	РезультатВыполнения = ВнеоборотныеАктивы.ВыполнитьОчередьЗаданий(ОчередьЗаданийКРасчету, 1, ИдентификаторРасчета);
	
	Результат.ЕстьОшибки = РезультатВыполнения.ЕстьОшибки;
	Результат.ТекстОшибки = РезультатВыполнения.ТекстОшибки;
	Результат.КоличествоДанных = РезультатВыполнения.КоличествоДанных;
	
	Возврат Результат;
	
КонецФункции

// Формирует движения по документам, в которых есть указанные объекты.
// 
// Параметры:
//  ПараметрыВыполнения - см. ПараметрыВыполнения
// 
// Возвращаемое значение:
//  Число - Количество объектов, по которым сформированы движения
Функция ВыполнитьОперациюПоОбъектам(ПараметрыВыполнения) Экспорт
	
	Если ПараметрыВыполнения.СписокОбъектов.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ЗакрытиеРасходовОтВыбытияОС.ВыполнитьОперациюПоОбъектам");
	
	УстановитьПривилегированныйРежим(Истина);

	Если ПараметрыВыполнения.МенеджерВременныхТаблиц = Неопределено Тогда
		ПараметрыВыполнения.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ПараметрыВыполнения.МенеджерВременныхТаблиц);
	ИспользуемыеВТ.Добавить("СписокОбъектов");
	ИспользуемыеВТ.Добавить("ВтВсеДанныеКРасчету");
	ИспользуемыеВТ.Добавить("ОбработанныеДанные");

	НачалоПериода = СформироватьСписокОбъектовИПолучитьНачалоПериода(ПараметрыВыполнения);
	
	СформироватьТаблицуВтВсеДанныеКРасчету(
		НачалоПериода, 
		ПараметрыВыполнения.КонецПериода, 
		ПараметрыВыполнения.СписокОрганизаций, 
		ПараметрыВыполнения.МенеджерВременныхТаблиц);
		
	// @skip-check query-in-loop
	// Проверка отключена т.к. обработка выполняется порциями для оптимизации
	Пока НачалоПериода <= ПараметрыВыполнения.КонецПериода Цикл
		
		Пока ПолучитьПорциюДанныхКРасчету(НачалоПериода, ПараметрыВыполнения) Цикл
			
			СформироватьДвиженияПоДокументам(НачалоПериода, ПараметрыВыполнения);
			ЗапомнитьОбработанныеДанные(ПараметрыВыполнения);
	
			ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыВыполнения.МенеджерВременныхТаблиц,, ИспользуемыеВТ);
			
		КонецЦикла;

		НачалоПериода = КонецМесяца(НачалоПериода) + 1;
		
	КонецЦикла;
	
	УдалитьЗаданияПоДату(ПараметрыВыполнения);

	ИспользуемыеВТ.Удалить(ИспользуемыеВТ.Найти("СписокОбъектов"));
	ИспользуемыеВТ.Удалить(ИспользуемыеВТ.Найти("ВтВсеДанныеКРасчету"));
	ИспользуемыеВТ.Удалить(ИспользуемыеВТ.Найти("ОбработанныеДанные"));
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыВыполнения.МенеджерВременныхТаблиц,, ИспользуемыеВТ);

	УстановитьПривилегированныйРежим(Ложь);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, ПараметрыВыполнения.КоличествоДанных);
	
	Возврат ПараметрыВыполнения.КоличествоДанных;
	
КонецФункции

// Формирует движения по документам.
//
// Параметры:
//  СписокДокументов - Массив из ДокументСсылка - Список документов, по которым требуется сформировать движения.
//
Процедура ВыполнитьОперациюПоДокументам(СписокДокументов) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат;
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеДокументы.Ссылка КАК Ссылка,
	|	ВсеДокументы.Дата КАК Дата,
	|	ВсеДокументы.Организация КАК Организация,
	|	ВЫРАЗИТЬ(ВсеДокументы.Организация КАК Справочник.Организации).ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВсеДокументы.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	ВсеДокументы.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|	ВсеДокументы.ОбъектУчета КАК ОбъектУчета,
	|	1 КАК Приоритет
	|
	|ПОМЕСТИТЬ ЗаданияКРасчету
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка,
	|		ДанныеДокумента.Организация КАК Организация,
	|		НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) КАК Дата,
	|		ДанныеДокумента.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|		ДанныеДокумента.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|		ТаблицаОС.ОсновноеСредство КАК ОбъектУчета
	|
	|	ИЗ
	|		Документ.СписаниеОС2_4 КАК ДанныеДокумента
	|		
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|			ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ГДЕ
	|		ДанныеДокумента.Ссылка В (&СписокДокументов)
	|		И ДанныеДокумента.Проведен
	|
	|		И НЕ (ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1 
	|				ИСТИНА 
	|			ИЗ 
	|				РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы 
	|			ГДЕ 
	|				ПрочиеРасходы.Регистратор = ДанныеДокумента.Ссылка
	|				И ПрочиеРасходы.ХозяйственнаяОперация В (&СписокХО)))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка,
	|		ДанныеДокумента.Организация КАК Организация,
	|		НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) КАК Дата,
	|		ИСТИНА КАК ОтражатьВРеглУчете,
	|		ИСТИНА КАК ОтражатьВУпрУчете,
	|		ТаблицаОС.ВнеоборотныйАктив КАК ОбъектУчета
	|
	|	ИЗ
	|		Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокумента
	|		
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаОС
	|			ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|				И ТаблицаОС.ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|
	|	ГДЕ
	|		ДанныеДокумента.Ссылка В (&СписокДокументов)
	|		И ДанныеДокумента.Проведен
	|		И ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
	|
	|		И НЕ (ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1 
	|				ИСТИНА 
	|			ИЗ 
	|				РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы 
	|			ГДЕ 
	|				ПрочиеРасходы.Регистратор = ДанныеДокумента.Ссылка
	|				И ПрочиеРасходы.ХозяйственнаяОперация В (&СписокХО)))
	|
	|	) КАК ВсеДокументы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ЗаданияКРасчету.Дата, МЕСЯЦ) КАК Месяц
	|ИЗ
	|	ЗаданияКРасчету КАК ЗаданияКРасчету
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц
	|";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	ИспользуемыеВТ = Новый Массив;
	ИспользуемыеВТ.Добавить("ЗаданияКРасчету");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	
	СписокХО = Новый Массив;
	СписокХО.Добавить(Перечисления.ХозяйственныеОперации.ЗакрытиеРасходовОтСписанияОС);
	СписокХО.Добавить(Перечисления.ХозяйственныеОперации.ЗакрытиеРасходовОтРеализацииОС);
	СписокХО.Добавить(Перечисления.ХозяйственныеОперации.ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав);
	СписокХО.Добавить(Перечисления.ХозяйственныеОперации.КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС);
	СписокХО.Добавить(Перечисления.ХозяйственныеОперации.КорректировкаРасходовОтВыбытияОС);
	Запрос.УстановитьПараметр("СписокХО", СписокХО);

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	// Проверка отключена т.к. обработка должна выполняться порциями
	//@skip-check query-in-loop
	Пока Выборка.Следующий() Цикл
	
		ТекстЗапроса =	
		"ВЫБРАТЬ 
		|	ЗаданияКРасчету.Ссылка КАК Ссылка,
		|	ЗаданияКРасчету.Дата КАК Дата,
		|	ЗаданияКРасчету.Организация КАК Организация,
		|	ЗаданияКРасчету.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ЗаданияКРасчету.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
		|	ЗаданияКРасчету.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
		|	ЗаданияКРасчету.ОбъектУчета КАК ОбъектУчета,
		|
		|	ЗаданияКРасчету.Приоритет КАК Приоритет
		|
		|ПОМЕСТИТЬ ВтПорцияДанныхКРасчету
		|
		|ИЗ
		|	ЗаданияКРасчету КАК ЗаданияКРасчету
		|
		|ГДЕ
		|	ЗаданияКРасчету.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
		|";
			
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Выборка.Месяц));
		Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Выборка.Месяц));
		Запрос.Выполнить();
		
		ПараметрыПроцедуры = ПараметрыВыполнения();
		ПараметрыПроцедуры.КонецПериода = КонецМесяца(Выборка.Месяц);
		ПараметрыПроцедуры.ВернутьДокументыКОтражению = Ложь;
		ПараметрыПроцедуры.СформироватьЗадания = Ложь;
		ПараметрыПроцедуры.УдалитьЗадания = Ложь;
		ПараметрыПроцедуры.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		СформироватьДвиженияПоДокументам(Выборка.Месяц, ПараметрыПроцедуры);

		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВТ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаданияКЗакрытиюМесяца

// Определяет период, начиная с которого требуется выполнить операцию "ЗакрытиеРасходовОтВыбытияОС".
//
// Параметры:
//  Организация   - СправочникСсылка.Организации - 
//  НачалоПериода - Дата - Проверяемый период.
// 
// Возвращаемое значение:
//  Дата - Дата, начиная с которой требуется расчет.
//
Функция СледующийПериодОперации(Организация, НачалоПериода) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаДокументов.Период) КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписаниеОС.Дата КАК Период
	|	ИЗ
	|		Документ.СписаниеОС2_4 КАК СписаниеОС
	|	ГДЕ
	|		СписаниеОС.Дата >= &НачалоПериода
	|		И СписаниеОС.Организация В (&Организация)
	|		И СписаниеОС.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПрочееОприходование.Дата КАК Период
	|	ИЗ
	|		Документ.ПрочееОприходованиеТоваров КАК ПрочееОприходование
	|	ГДЕ
	|		ПрочееОприходование.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПриВыбытииОС)
	|		И ПрочееОприходование.Дата >= &НачалоПериода
	|		И ПрочееОприходование.Организация В (&Организация)
	|		И ПрочееОприходование.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА РеализацияОС.Дата >= &НачалоПериода
	|				ТОГДА РеализацияОС.Дата
	|			ИНАЧЕ РеализацияОС.ДатаПереходаПраваСобственности 
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		Документ.РеализацияУслугПрочихАктивов КАК РеализацияОС
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаОС
	|			ПО ТаблицаОС.Ссылка = РеализацияОС.Ссылка
	|				И ТаблицаОС.ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|
	|	ГДЕ
	|		РеализацияОС.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
	|
	|		И (РеализацияОС.Дата >= &НачалоПериода
	|			ИЛИ РеализацияОС.ДатаПереходаПраваСобственности >= &НачалоПериода)
	|
	|		И РеализацияОС.Организация В (&Организация)
	|		И РеализацияОС.Проведен
	|
	|	) КАК ТаблицаДокументов";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(НачалоПериода));
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат ?(ЗначениеЗаполнено(Выборка.Период), НачалоМесяца(Выборка.Период), '000101010000');
	КонецЕсли;

	Возврат '000101010000';
	
КонецФункции

// Формирует задания к выполнению операции при изменении исходных данных.
// 
// Параметры:
//  Документ - ДокументОбъект - Документ.
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Данные таблиц.
Процедура СформироватьЗадания(Документ, МенеджерВременныхТаблиц) Экспорт
	
	Если ДвиженияЗаписываютсяПриВыполненииОперации(Документ) Тогда
		Возврат;
	КонецЕсли;
	
	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
	
	// Операции, которые выполняются после текущей операции
	ДвиженияФормируютсяПриЗакрытииМесяца = 
		РасчетСтоимостиВНА.ДвиженияЗаписываютсяПриВыполненииОперации(Документ)
		ИЛИ РасчетСтоимостиВНА.ДвиженияЗаписываютсяПриАктуализацияДвиженийПоВНА(Документ);

	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("ПрочиеРасходы_ЗаданияКЗакрытиюРасходовОтВыбытияОС");
	СписокТаблиц.Добавить("РеализацияУслугПрочихАктивов");

	ОпределитьИзмененияДляФормированияЗаданий(МенеджерВременныхТаблиц);

	ТекстОбъединенияДанных = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, МенеджерВременныхТаблиц);
	
	ИзменилосьТолькоСостояниеПереходаПраваСобственности = 
		ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов")
		И Документ.ДополнительныеСвойства.Свойство("ИзменилосьТолькоСостояниеПереходаПраваСобственности")
		И Документ.ДополнительныеСвойства.ИзменилосьТолькоСостояниеПереходаПраваСобственности;
		
	// Документы регистрируются всегда, т.к. при проведении удаляются отложенные движения.
	ЗарегистрироватьДокумент = 
		НЕ ДвиженияФормируютсяПриЗакрытииМесяца
		И (ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.СписаниеОС2_4")
			ИЛИ ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.ПрочееОприходованиеТоваров")
			ИЛИ ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов")
				И ИзменилосьТолькоСостояниеПереходаПраваСобственности);
	
	Если ЗарегистрироватьДокумент Тогда
		
		СписокЗапросовОбъединение = Новый Массив;
		
		Если ТекстОбъединенияДанных <> "" Тогда
			СписокЗапросовОбъединение.Добавить(ТекстОбъединенияДанных);
		КонецЕсли; 
			
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(РеализацияОС.ХозяйственнаяОперация, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
		|				И &ИзменилосьТолькоСостояниеПереходаПраваСобственности
		|				И РеализацияОС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
		|			ТОГДА РеализацияОС.ДатаПереходаПраваСобственности
		|		ИНАЧЕ ИзмененныеДанные.ДатаДокументаИБ 
		|	КОНЕЦ КАК Период,
		|
		|	ИзмененныеДанные.Организация КАК Организация,
		|	ИзмененныеДанные.Ссылка КАК Документ,
		|	"""" КАК ИмяТаблицы
		|ИЗ
		|	РегистрСведений.РеестрДокументов КАК ИзмененныеДанные
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК РеализацияОС
		|		ПО РеализацияОС.Ссылка = ИзмененныеДанные.Ссылка
		|
		|ГДЕ
		|	ИзмененныеДанные.Ссылка = &Ссылка
		|	И ИзмененныеДанные.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОС),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПриВыбытииОС),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИзмененныеДанные.ДатаПереходаПраваСобственности КАК Период,
		|
		|	ИзмененныеДанные.Организация КАК Организация,
		|	ИзмененныеДанные.Ссылка КАК Документ,
		|	"""" КАК ИмяТаблицы
		|ИЗ
		|	Документ.РеализацияУслугПрочихАктивов КАК ИзмененныеДанные
		|
		|ГДЕ
		|	ИзмененныеДанные.Ссылка = &Ссылка
		|	И ИзмененныеДанные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
		|	И НЕ &ИзменилосьТолькоСостояниеПереходаПраваСобственности
		|	И ИзмененныеДанные.ДатаПереходаПраваСобственности <> ДАТАВРЕМЯ(1,1,1)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&СтараяДатаПереходаПраваСобственности КАК Период,
		|
		|	ИзмененныеДанные.Организация КАК Организация,
		|	ИзмененныеДанные.Ссылка КАК Документ,
		|	"""" КАК ИмяТаблицы
		|ИЗ
		|	Документ.РеализацияУслугПрочихАктивов КАК ИзмененныеДанные
		|
		|ГДЕ
		|	ИзмененныеДанные.Ссылка = &Ссылка
		|	И ИзмененныеДанные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
		|	И &ИзменилосьТолькоСостояниеПереходаПраваСобственности
		|	И &СтараяДатаПереходаПраваСобственности <> ДАТАВРЕМЯ(1,1,1)
		|";
		
		СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
		
		ТекстОбъединенияДанных = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
	КонецЕсли; 
	
	Если ТекстОбъединенияДанных = "" Тогда
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
		Возврат;
	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ЗакрытиеРасходовОтВыбытияОС) КАК Операция,
	|	ИзмененныеДанные.Организация КАК Организация,
	|	ИзмененныеДанные.Документ КАК Документ,
	|
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ИзмененныеДанные.Период < &ДатаНачалаУчета24
	|					ТОГДА &ДатаНачалаУчета24
	|				КОГДА НЕ ВводОстатков.Дата ЕСТЬ NULL
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВводОстатков.Дата, МЕСЯЦ), МЕСЯЦ, 1)
	|				КОГДА &ДвиженияФормируютсяПриЗакрытииМесяца
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1)
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ) КАК Месяц
	|ИЗ
	|	&ТекстОбъединенияДанных КАК ИзмененныеДанные
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковПрочиеРасходы КАК ВводОстатков
	|		ПО ВводОстатков.Ссылка = ИзмененныеДанные.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОбъединенияДанных", "(" + ТекстОбъединенияДанных + ")");

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачалаУчета24", ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	Запрос.УстановитьПараметр("ИзменилосьТолькоСостояниеПереходаПраваСобственности", ИзменилосьТолькоСостояниеПереходаПраваСобственности);
	Запрос.УстановитьПараметр("ДвиженияФормируютсяПриЗакрытииМесяца", ДвиженияФормируютсяПриЗакрытииМесяца);

	Если ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов")
		И Документ.ДополнительныеСвойства.Свойство("СтараяДатаПереходаПраваСобственности") Тогда
						
		Запрос.УстановитьПараметр(
			"СтараяДатаПереходаПраваСобственности", 
			Документ.ДополнительныеСвойства.СтараяДатаПереходаПраваСобственности);
	Иначе
		Запрос.УстановитьПараметр("СтараяДатаПереходаПраваСобственности", '000101010000');
	КонецЕсли;
					
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
	
КонецПроцедуры

// Определяет записываются ли движений при выполнении операции.
// 
// Параметры:
//  Документ - ДокументОбъект -
// 
// Возвращаемое значение:
//  Булево
Функция ДвиженияЗаписываютсяПриВыполненииОперации(Документ) Экспорт

	Возврат Документ <> Неопределено
			И Документ.ДополнительныеСвойства.Свойство(ИмяОперации());
	
КонецФункции

#КонецОбласти

#Область ФормированиеТаблицДляПроведения

// Формирует текст запроса для таблицы регистра "Прочие расходы".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса) Экспорт
	
	ДопПоля = "ИдентификаторСтроки";
	
	СписокЗапросовОбъединение = Новый Массив;
	СписокЗапросовОбъединение.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы(ДопПоля));
	
	#Область СписаниеРасходов // - Кт 01.09
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписаниеРасходов.Период                         КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	СписаниеРасходов.Организация                    КАК Организация,
	|	СписаниеРасходов.Подразделение                  КАК Подразделение,
	|	СписаниеРасходов.СтатьяРасходов                 КАК СтатьяРасходов,
	|	СписаниеРасходов.АналитикаРасходов              КАК АналитикаРасходов,
	|	СписаниеРасходов.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	СписаниеРасходов.Сумма                          КАК СуммаСНДС,
	|	СписаниеРасходов.СуммаБезНДС                    КАК СуммаБезНДС,
	|	СписаниеРасходов.СуммаУпр                       КАК СуммаБезНДСУпр,
	|	СписаниеРасходов.СуммаРегл                      КАК СуммаСНДСРегл,
	|	СписаниеРасходов.СуммаРегл                      КАК СуммаБезНДСРегл,
	|	СписаниеРасходов.ПостояннаяРазница              КАК ПостояннаяРазница,
	|
	|	СписаниеРасходов.СуммаРегл 
	|		- СписаниеРасходов.СуммаНУ 
	|		- СписаниеРасходов.ПостояннаяРазница        КАК ВременнаяРазница,
	|
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|			ТОГДА &ХО_ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав
	|		КОГДА СписаниеРасходов.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС)
	|			ТОГДА &ХО_ЗакрытиеРасходовОтРеализацииОС
	|		ИНАЧЕ &ХО_ЗакрытиеРасходовОтСписанияОС
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|	
	|	СписаниеРасходов.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|			ТОГДА &НастройкаХО_ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав
	|		КОГДА СписаниеРасходов.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС)
	|			ТОГДА &НастройкаХО_ЗакрытиеРасходовОтРеализацииОС
	|		ИНАЧЕ &НастройкаХО_ЗакрытиеРасходовОтСписанияОС
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации,
	|
	|	СписаниеРасходов.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаСтоимостиТМЦ.Период                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	КорректировкаСтоимостиТМЦ.Организация           КАК Организация,
	|	КорректировкаСтоимостиТМЦ.Подразделение         КАК Подразделение,
	|	КорректировкаСтоимостиТМЦ.СтатьяРасходов        КАК СтатьяРасходов,
	|	КорректировкаСтоимостиТМЦ.АналитикаРасходов     КАК АналитикаРасходов,
	|	КорректировкаСтоимостиТМЦ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	-КорректировкаСтоимостиТМЦ.Сумма                КАК СуммаСНДС,
	|	-КорректировкаСтоимостиТМЦ.СуммаБезНДС          КАК СуммаБезНДС,
	|	-КорректировкаСтоимостиТМЦ.СуммаУпр             КАК СуммаБезНДСУпр,
	|	-КорректировкаСтоимостиТМЦ.СуммаРегл            КАК СуммаСНДСРегл,
	|	-КорректировкаСтоимостиТМЦ.СуммаРегл            КАК СуммаБезНДСРегл,
	|	0                                               КАК ПостояннаяРазница,
	|
	|	-КорректировкаСтоимостиТМЦ.СуммаРегл            КАК ВременнаяРазница,
	|
	|	&ХО_КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|	
	|	КорректировкаСтоимостиТМЦ.ИдентификаторСтроки   КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС КАК НастройкаХозяйственнойОперации,
	|
	|	КорректировкаСтоимостиТМЦ.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ИЗ
	|	КорректировкаСтоимостиТМЦ КАК КорректировкаСтоимостиТМЦ
	|
	|ГДЕ
	|	КорректировкаСтоимостиТМЦ.Регистратор = &Ссылка";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ЗакрытиеРасходовОтРеализацииОС // Дт 91 - 
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписаниеРасходов.Период                         КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	СписаниеРасходов.Организация                    КАК Организация,
	|	СписаниеРасходов.Подразделение                  КАК Подразделение,
	|	СписаниеРасходов.КорСтатьяРасходов              КАК СтатьяРасходов,
	|	СписаниеРасходов.КорАналитикаРасходов           КАК АналитикаРасходов,
	|	СписаниеРасходов.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	СписаниеРасходов.Сумма                          КАК СуммаСНДС,
	|	СписаниеРасходов.СуммаБезНДС                    КАК СуммаБезНДС,
	|	СписаниеРасходов.СуммаУпр                       КАК СуммаБезНДСУпр,
	|	СписаниеРасходов.СуммаРегл                      КАК СуммаСНДСРегл,
	|	СписаниеРасходов.СуммаРегл                      КАК СуммаБезНДСРегл,
	|	СписаниеРасходов.ПостояннаяРазница              КАК ПостояннаяРазница,
	|
	|	СписаниеРасходов.СуммаРегл 
	|		- СписаниеРасходов.СуммаНУ 
	|		- СписаниеРасходов.ПостояннаяРазница        КАК ВременнаяРазница,
	|
	|	ВЫБОР
	|		КОГДА СписаниеРасходов.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС)
	|			ТОГДА &ХО_ЗакрытиеРасходовОтРеализацииОС
	|		ИНАЧЕ &ХО_ЗакрытиеРасходовОтСписанияОС
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|	
	|	СписаниеРасходов.ИдентификаторСтроки            КАК ИдентификаторФинЗаписи,
	|
	|	ВЫБОР
	|		КОГДА СписаниеРасходов.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС)
	|			ТОГДА &НастройкаХО_ЗакрытиеРасходовОтРеализацииОС
	|		ИНАЧЕ &НастройкаХО_ЗакрытиеРасходовОтСписанияОС
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации,
	|
	|	СписаниеРасходов.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(СписаниеРасходов.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
		
	#Область ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав // Дт 91 - 
	ТекстЗапроса =
	// До перехода прав (только в НУ для недвижимого имущества)
	"ВЫБРАТЬ
	|	ПереданныеОбъекты.Период                         КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	ПереданныеОбъекты.Организация                    КАК Организация,
	|	ПереданныеОбъекты.Подразделение                  КАК Подразделение,
	|	ПереданныеОбъекты.КорСтатьяРасходов              КАК СтатьяРасходов,
	|	ПереданныеОбъекты.КорАналитикаРасходов           КАК АналитикаРасходов,
	|	ПереданныеОбъекты.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                     КАК ВидДеятельностиНДС,
	|	
	|	0                                                КАК СуммаСНДС,
	|	0                                                КАК СуммаБезНДС,
	|	0                                                КАК СуммаБезНДСУпр,
	|	0                                                КАК СуммаСНДСРегл,
	|	0                                                КАК СуммаБезНДСРегл,
	|
	|	ПереданныеОбъекты.ПостояннаяРазница              КАК ПостояннаяРазница,
	|
	|	- ПереданныеОбъекты.СуммаНУ 
	|		- ПереданныеОбъекты.ПостояннаяРазница        КАК ВременнаяРазница,
	|
	|	&ХО_ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав КАК ХозяйственнаяОперация,
	|
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаНоменклатуры,
	|	
	|	&ИдентификаторНеиспользуемойФинЗаписи            КАК ИдентификаторФинЗаписи,
	|
	|	&НастройкаХО_ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав КАК НастройкаХозяйственнойОперации,
	|
	|	ПереданныеОбъекты.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ИЗ
	|	ПереданныеОбъекты КАК ПереданныеОбъекты
	|
	|ГДЕ
	|	ПереданныеОбъекты.Регистратор = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(ПереданныеОбъекты.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	И ПереданныеОбъекты.НедвижимоеИмущество
	|	И (ПереданныеОбъекты.СуммаНУ <> 0
	|		ИЛИ ПереданныеОбъекты.СуммаНУ = 0
	|			И ПереданныеОбъекты.ПостояннаяРазница <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// После перехода прав (в УУ, БУ для любого имущества и в НУ для движимого имущества)
	|ВЫБРАТЬ
	|	ПереданныеОбъекты.ДатаПереходаПрав               КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	ПереданныеОбъекты.Организация                    КАК Организация,
	|	ПереданныеОбъекты.Подразделение                  КАК Подразделение,
	|	ПереданныеОбъекты.КорСтатьяРасходов              КАК СтатьяРасходов,
	|	ПереданныеОбъекты.КорАналитикаРасходов           КАК АналитикаРасходов,
	|	ПереданныеОбъекты.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                     КАК ВидДеятельностиНДС,
	|	
	|	ПереданныеОбъекты.Сумма                          КАК СуммаСНДС,
	|	ПереданныеОбъекты.СуммаБезНДС                    КАК СуммаБезНДС,
	|	ПереданныеОбъекты.СуммаУпр                       КАК СуммаБезНДСУпр,
	|	ПереданныеОбъекты.СуммаРегл                      КАК СуммаСНДСРегл,
	|	ПереданныеОбъекты.СуммаРегл                      КАК СуммаБезНДСРегл,
	|
	|	ВЫБОР
	|		КОГДА ПереданныеОбъекты.НедвижимоеИмущество
	|			ТОГДА 0
	|		ИНАЧЕ ПереданныеОбъекты.ПостояннаяРазница 
	|	КОНЕЦ КАК ПостояннаяРазница,
	|
	|	ВЫБОР
	|		КОГДА ПереданныеОбъекты.НедвижимоеИмущество
	|			ТОГДА ПереданныеОбъекты.СуммаРегл
	|		ИНАЧЕ ПереданныеОбъекты.СуммаРегл 
	|				- ПереданныеОбъекты.СуммаНУ 
	|				- ПереданныеОбъекты.ПостояннаяРазница 
	|	КОНЕЦ КАК ВременнаяРазница,
	|
	|	&ХО_ЗакрытиеРасходовОтРеализацииОСПослеПереходаПрав КАК ХозяйственнаяОперация,
	|
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|	
	|	ПереданныеОбъекты.ИдентификаторСтроки           КАК ИдентификаторФинЗаписи,
	|
	|	&НастройкаХО_ЗакрытиеРасходовОтРеализацииОСПослеПереходаПрав КАК НастройкаХозяйственнойОперации,
	|
	|	ПереданныеОбъекты.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ИЗ
	|	ПереданныеОбъекты КАК ПереданныеОбъекты
	|
	|ГДЕ
	|	ПереданныеОбъекты.Регистратор = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(ПереданныеОбъекты.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	И ПереданныеОбъекты.ПраваПерешли
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВтИсходныеПрочиеРасходы");
	
	ТекстыЗапроса.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы(ДопПоля), "ВтПрочиеРасходы");
	ТекстыЗапроса.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы(ДопПоля), "ПрочиеРасходы", Истина);
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "Прочие доходы".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаПрочиеДоходы(ТекстыЗапроса) Экспорт
	
	#Область КорректировкаРасходов // Дт 01.09 - Кт 91
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	КорректировкаРасходов.Период КАК Период,
	|	
	|	КорректировкаРасходов.Организация КАК Организация,
	|	КорректировкаРасходов.Подразделение КАК Подразделение,
	|	КорректировкаРасходов.СтатьяДоходов КАК СтатьяДоходов,
	|	КорректировкаРасходов.АналитикаДоходов КАК АналитикаДоходов,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУпр,
	|	0 КАК СуммаРегл,
	|	
	|	&ХО_КорректировкаРасходовОтВыбытияОС КАК ХозяйственнаяОперация,
	|	КорректировкаРасходов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	
	|	КорректировкаРасходов.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_КорректировкаРасходовОтВыбытияОС КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	КорректировкаРасходов КАК КорректировкаРасходов
	|ГДЕ
	|	КорректировкаРасходов.Регистратор = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ПрочиеДоходы", Истина);
	#КонецОбласти
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "ПартииПрочихРасходов".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаПартииПрочихРасходов(ТекстыЗапроса) Экспорт
	
	СписокЗапросовОбъединение = Новый Массив;
	СписокЗапросовОбъединение.Добавить(РегистрыНакопления.ПартииПрочихРасходов.ТекстОписаниеВтИсходныеПартииПрочихРасходов());
	
	#Область ОтражениеСписанияРасходовОтВыбытияВРасходах
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписаниеРасходов.Период                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|
	|	СписаниеРасходов.Организация                КАК Организация,
	|	СписаниеРасходов.Подразделение              КАК Подразделение,
	|	СписаниеРасходов.КорСтатьяРасходов          КАК СтатьяРасходов,
	|	СписаниеРасходов.КорАналитикаРасходов       КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаАктивовПассивов,
	|	&Ссылка                                     КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	СписаниеРасходов.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                КАК ВидДеятельностиНДС,
	|
	|	СписаниеРасходов.СуммаУпр                   КАК Стоимость,
	|	СписаниеРасходов.СуммаБезНДС                КАК СтоимостьБезНДС,
	|	0                                           КАК НДСУпр,
	|	СписаниеРасходов.СуммаРегл                  КАК СтоимостьРегл,
	|	0                                           КАК НДСРегл,
	|	СписаниеРасходов.ПостояннаяРазница          КАК ПостояннаяРазница,
	|
	|	СписаниеРасходов.СуммаРегл 
	|		- СписаниеРасходов.СуммаНУ 
	|		- СписаниеРасходов.ПостояннаяРазница    КАК ВременнаяРазница,
	|
	|	&ХО_ЗакрытиеРасходовОтСписанияОС             КАК ХозяйственнаяОперация,
	|	
	|	СписаниеРасходов.ИдентификаторСтроки        КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_ЗакрытиеРасходовОтСписанияОС    КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(СписаниеРасходов.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВтИсходныеПартииПрочихРасходов");

	ТекстыЗапроса.Добавить(РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов(), "ВтПартииПрочихРасходов");
	ТекстыЗапроса.Добавить(РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов(), "ПартииПрочихРасходов", Истина);
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "ПрочиеАктивыПассивы".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаПрочиеАктивыПассивы(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	СписаниеРасходов.Период                      КАК Период,
	|	&ХО_ЗакрытиеРасходовОтСписанияОС              КАК ХозяйственнаяОперация,
	|	СписаниеРасходов.Организация                 КАК Организация,
	|	СписаниеРасходов.Подразделение               КАК Подразделение,
	|	СписаниеРасходов.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|
	|	СписаниеРасходов.КорСтатьяРасходов           КАК Статья,
	|	СписаниеРасходов.КорАналитикаАктивовПассивов КАК Аналитика,
	|
	|	СписаниеРасходов.СуммаУпр                    КАК Сумма
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|	И СписаниеРасходов.СуммаУпр <> 0
	|	И ТИПЗНАЧЕНИЯ(СписаниеРасходов.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ПрочиеАктивыПассивы", Истина);
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "ДвиженияПоПрочимАктивамПассивам".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СписаниеРасходов.Период                   КАК Период,
	|	СписаниеРасходов.Организация              КАК Организация,
	|	СписаниеРасходов.Подразделение            КАК Подразделение,
	|	СписаниеРасходов.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	СписаниеРасходов.КорСтатьяРасходов        КАК Статья,
	|	СписаниеРасходов.КорАналитикаРасходов     КАК Аналитика,
	|	СписаниеРасходов.КорНастройкаСчетовУчета  КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	СписаниеРасходов.СуммаУпр                 КАК СуммаУпр,
	|	СписаниеРасходов.СуммаУпр                 КАК СуммаСНДС,
	|	СписаниеРасходов.СуммаБезНДС              КАК СуммаБезНДС,
	|
	|	СписаниеРасходов.СуммаРегл                КАК СуммаРегл,
	|	СписаниеРасходов.ПостояннаяРазница        КАК ПостояннаяРазница,
	|
	|	СписаниеРасходов.СуммаРегл 
	|		- СписаниеРасходов.СуммаНУ 
	|		- СписаниеРасходов.ПостояннаяРазница  КАК ВременнаяРазница,
	|
	|	СписаниеРасходов.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_ЗакрытиеРасходовОтСписанияОС КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(СписаниеРасходов.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписаниеРасходов.Период                   КАК Период,
	|	СписаниеРасходов.Организация              КАК Организация,
	|	СписаниеРасходов.Подразделение            КАК Подразделение,
	|	СписаниеРасходов.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РеализацияОСБезПереходаПраваСобственности) КАК Статья,
	|	СписаниеРасходов.ОсновноеСредство         КАК Аналитика,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиСчетовУчетаПрочихОпераций.ПустаяСсылка) КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	СписаниеРасходов.СуммаУпр                 КАК СуммаУпр,
	|	СписаниеРасходов.СуммаУпр                 КАК СуммаСНДС,
	|	СписаниеРасходов.СуммаБезНДС              КАК СуммаБезНДС,
	|
	|	СписаниеРасходов.СуммаРегл                КАК СуммаРегл,
	|	СписаниеРасходов.ПостояннаяРазница        КАК ПостояннаяРазница,
	|
	|	СписаниеРасходов.СуммаРегл 
	|		- СписаниеРасходов.СуммаНУ 
	|		- СписаниеРасходов.ПостояннаяРазница  КАК ВременнаяРазница,
	|
	|	СписаниеРасходов.ИдентификаторСтроки      КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПереданныеОбъекты.ДатаПереходаПрав        КАК Период,
	|	ПереданныеОбъекты.Организация             КАК Организация,
	|	ПереданныеОбъекты.Подразделение           КАК Подразделение,
	|	ПереданныеОбъекты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РеализацияОСБезПереходаПраваСобственности) КАК Статья,
	|	ПереданныеОбъекты.ОсновноеСредство        КАК Аналитика,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиСчетовУчетаПрочихОпераций.ПустаяСсылка) КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	ПереданныеОбъекты.СуммаУпр                КАК СуммаУпр,
	|	ПереданныеОбъекты.СуммаУпр                КАК СуммаСНДС,
	|	ПереданныеОбъекты.СуммаБезНДС             КАК СуммаБезНДС,
	|
	|	ПереданныеОбъекты.СуммаРегл               КАК СуммаРегл,
	|	ПереданныеОбъекты.ПостояннаяРазница       КАК ПостояннаяРазница,
	|
	|	ПереданныеОбъекты.СуммаРегл 
	|		- ПереданныеОбъекты.СуммаНУ 
	|		- ПереданныеОбъекты.ПостояннаяРазница КАК ВременнаяРазница,
	|
	|	ПереданныеОбъекты.ИдентификаторСтроки     КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_ЗакрытиеРасходовОтРеализацииОСПослеПереходаПрав КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ПереданныеОбъекты КАК ПереданныеОбъекты
	|
	|ГДЕ
	|	ПереданныеОбъекты.Регистратор = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(ПереданныеОбъекты.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	И ПереданныеОбъекты.ПраваПерешли
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ДвиженияПоПрочимАктивамПассивам", Истина);
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "ДвиженияДоходыРасходыПрочиеАктивыПассивы".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса) Экспорт
	
	СписокЗапросовОбъединение = Новый Массив;
	
	#Область СписаниеРасходов_НаСтатьюЗатрат // Дт <затраты> - Кт 01.09
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписаниеРасходов.Период                      КАК Период,
	|
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|			ТОГДА &ХО_ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав
	|		ИНАЧЕ &ХО_ЗакрытиеРасходовОтСписанияОС
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|
	|	СписаниеРасходов.Организация                 КАК Организация,
	|
	|	СписаниеРасходов.Подразделение               КАК Подразделение,
	|	СписаниеРасходов.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	СписаниеРасходов.СтатьяРасходов              КАК Статья,
	|	СписаниеРасходов.АналитикаРасходов           КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаАктивовПассивов,
	|
	|	СписаниеРасходов.Подразделение               КАК КорПодразделение,
	|	СписаниеРасходов.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	СписаниеРасходов.КорСтатьяРасходов           КАК КорСтатья,
	|	СписаниеРасходов.КорАналитикаРасходов        КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаАктивовПассивов,
	|
	|	СписаниеРасходов.Сумма                       КАК Сумма,
	|	СписаниеРасходов.СуммаУпр                    КАК СуммаУпр,
	|	СписаниеРасходов.СуммаРегл                   КАК СуммаРегл
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(СписаниеРасходов.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СписаниеРасходов_НаСтатьюАктивов // Дт <затраты> - Кт 01.09
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписаниеРасходов.Период                      КАК Период,
	|
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|			ТОГДА &ХО_ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав
	|		ИНАЧЕ &ХО_ЗакрытиеРасходовОтСписанияОС
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|
	|	СписаниеРасходов.Организация                 КАК Организация,
	|
	|	СписаниеРасходов.Подразделение               КАК Подразделение,
	|	СписаниеРасходов.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	СписаниеРасходов.СтатьяРасходов              КАК Статья,
	|	СписаниеРасходов.АналитикаРасходов           КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаАктивовПассивов,
	|
	|	СписаниеРасходов.Подразделение               КАК КорПодразделение,
	|	СписаниеРасходов.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	СписаниеРасходов.КорСтатьяРасходов           КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаРасходов,
	|	СписаниеРасходов.КорАналитикаАктивовПассивов КАК КорАналитикаАктивовПассивов,
	|
	|	СписаниеРасходов.Сумма                       КАК Сумма,
	|	СписаниеРасходов.СуммаУпр                    КАК СуммаУпр,
	|	СписаниеРасходов.СуммаРегл                   КАК СуммаРегл
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(СписаниеРасходов.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ДвиженияДоходыРасходыПрочиеАктивыПассивы", Истина);
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "ДвиженияНоменклатураДоходыРасходы".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаДвиженияНоменклатураДоходыРасходы(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КорректировкаСтоимостиТМЦ.Период                  КАК Период,
	|	&ХО_КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС КАК ХозяйственнаяОперация,
	|	КорректировкаСтоимостиТМЦ.Организация             КАК Организация,
	|	КорректировкаСтоимостиТМЦ.КорПодразделение        КАК Подразделение,
	|
	|	ВЫБОР 
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА КорректировкаСтоимостиТМЦ.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаБезНазначения.КлючАналитики
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|
	|	КорректировкаСтоимостиТМЦ.Склад                   КАК Склад,
	|	КорректировкаСтоимостиТМЦ.ВидЗапасов.ТипЗапасов   КАК ТипЗапасов,
	|	КорректировкаСтоимостиТМЦ.ВидЗапасов              КАК ВидЗапасов,
	|
	|	КорректировкаСтоимостиТМЦ.СтатьяРасходов          КАК СтатьяДоходовРасходов,
	|	КорректировкаСтоимостиТМЦ.АналитикаРасходов       КАК АналитикаРасходов,
	|
	|	-КорректировкаСтоимостиТМЦ.СуммаУпр               КАК Стоимость,
	|	-КорректировкаСтоимостиТМЦ.СуммаУпр               КАК СтоимостьБезНДС,
	|	-КорректировкаСтоимостиТМЦ.СуммаРегл              КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА КорректировкаСтоимостиТМЦ.ВидЗапасов
	|		ИНАЧЕ КорректировкаСтоимостиТМЦ.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|
	|	КорректировкаСтоимостиТМЦ.КорНаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	КорректировкаСтоимостиТМЦ.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры
	|
	|ИЗ
	|	КорректировкаСтоимостиТМЦ КАК КорректировкаСтоимостиТМЦ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО КорректировкаСтоимостиТМЦ.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|		ПО Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|			И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|			И Аналитика.Серия = АналитикаБезНазначения.Серия
	|			И Аналитика.МестоХранения = АналитикаБезНазначения.МестоХранения
	|			И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаБезНазначения.СтатьяКалькуляции
	|ГДЕ
	|	КорректировкаСтоимостиТМЦ.Регистратор = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ДвиженияНоменклатураДоходыРасходы", Истина);
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "ДвиженияНоменклатураДоходыРасходы".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ 
	|	СписаниеРасходов.Регистратор КАК Документ,
	|	СписаниеРасходов.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(СписаниеРасходов.Период, ДЕНЬ) КАК ДатаОтражения
	|
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	КорректировкаСтоимостиТМЦ.Регистратор КАК Документ,
	|	КорректировкаСтоимостиТМЦ.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(КорректировкаСтоимостиТМЦ.Период, ДЕНЬ) КАК ДатаОтражения
	|
	|ИЗ
	|	КорректировкаСтоимостиТМЦ КАК КорректировкаСтоимостиТМЦ
	|
	|ГДЕ
	|	КорректировкаСтоимостиТМЦ.Регистратор = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ПереданныеОбъекты.Регистратор КАК Документ,
	|	ПереданныеОбъекты.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(ПереданныеОбъекты.Период, ДЕНЬ) КАК ДатаОтражения
	|
	|ИЗ
	|	ПереданныеОбъекты КАК ПереданныеОбъекты
	|
	|ГДЕ
	|	ПереданныеОбъекты.Регистратор = &Ссылка
	|	И ПереданныеОбъекты.НедвижимоеИмущество
	|	И (ПереданныеОбъекты.СуммаНУ <> 0
	|		ИЛИ ПереданныеОбъекты.СуммаНУ = 0
	|			И ПереданныеОбъекты.ПостояннаяРазница <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ПереданныеОбъекты.Регистратор КАК Документ,
	|	ПереданныеОбъекты.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(ПереданныеОбъекты.ДатаПереходаПрав, ДЕНЬ) КАК ДатаОтражения
	|
	|ИЗ
	|	ПереданныеОбъекты КАК ПереданныеОбъекты
	|
	|ГДЕ
	|	ПереданныеОбъекты.Регистратор = &Ссылка
	|	И ПереданныеОбъекты.ПраваПерешли
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ОтражениеДокументовВРеглУчете", Истина);
	
КонецПроцедуры

// Устанавливает параметры запроса, которые используются при выполнении операции.
// 
// Параметры:
//  Запрос - Запрос - Запрос
Процедура УстановитьПараметрыЗапроса(Запрос) Экспорт
	
	Запрос.УстановитьПараметр(
		"ХО_ЗакрытиеРасходовОтСписанияОС",
		Перечисления.ХозяйственныеОперации.ЗакрытиеРасходовОтСписанияОС);
	
	Запрос.УстановитьПараметр(
		"НастройкаХО_ЗакрытиеРасходовОтСписанияОС", 
		Справочники.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтСписанияОС);
	
	Запрос.УстановитьПараметр(
		"ХО_ЗакрытиеРасходовОтРеализацииОС", 
		Перечисления.ХозяйственныеОперации.ЗакрытиеРасходовОтРеализацииОС);
		
	Запрос.УстановитьПараметр(
		"НастройкаХО_ЗакрытиеРасходовОтРеализацииОС", 
		Справочники.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтРеализацииОС);
	
	Запрос.УстановитьПараметр(
		"ХО_ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав", 
		Перечисления.ХозяйственныеОперации.ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав);
	
	Запрос.УстановитьПараметр(
		"НастройкаХО_ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав", 
		Справочники.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав);
	
	Запрос.УстановитьПараметр(
		"ХО_ЗакрытиеРасходовОтРеализацииОСПослеПереходаПрав", 
		Перечисления.ХозяйственныеОперации.ЗакрытиеРасходовОтРеализацииОСПослеПереходаПрав);
	
	Запрос.УстановитьПараметр(
		"НастройкаХО_ЗакрытиеРасходовОтРеализацииОСПослеПереходаПрав", 
		Справочники.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтРеализацииОСПослеПереходаПрав);
	
	Запрос.УстановитьПараметр(
		"ХО_КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС", 
		Перечисления.ХозяйственныеОперации.КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС);
	
	Запрос.УстановитьПараметр(
		"НастройкаХО_КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС", 
		Справочники.НастройкиХозяйственныхОпераций.КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС);
	
	Запрос.УстановитьПараметр(
		"ХО_КорректировкаРасходовОтВыбытияОС", 
		Перечисления.ХозяйственныеОперации.КорректировкаРасходовОтВыбытияОС);
	
	Запрос.УстановитьПараметр(
		"НастройкаХО_КорректировкаРасходовОтВыбытияОС", 
		Справочники.НастройкиХозяйственныхОпераций.КорректировкаРасходовОтВыбытияОС);
	
	Запрос.УстановитьПараметр(
		"ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", 
		ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Запрос.УстановитьПараметр(
		"ИдентификаторНеиспользуемойФинЗаписи", 
		ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ВыполнениеОперации

Функция СформироватьСписокОбъектовИПолучитьНачалоПериода(ПараметрыВыполнения)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СписокОбъектов.ОбъектУчета КАК ОбъектУчета,
	|	СписокОбъектов.НачалоПериода КАК НачалоПериода
	|
	|ПОМЕСТИТЬ СписокОбъектов
	|
	|ИЗ
	|	&СписокОбъектов КАК СписокОбъектов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(СписокОбъектов.НачалоПериода), ДАТАВРЕМЯ(1,1,1)) КАК НачалоПериода
	|ИЗ
	|	СписокОбъектов КАК СписокОбъектов
	|
	|ГДЕ
	|	СписокОбъектов.НачалоПериода <> ДАТАВРЕМЯ(1,1,1)
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокОбъектов", ПараметрыВыполнения.СписокОбъектов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат ?(Выборка.НачалоПериода <> '000101010000', Выборка.НачалоПериода, ПараметрыВыполнения.КонецПериода);
	
КонецФункции

Процедура СформироватьТаблицуВтВсеДанныеКРасчету(НачалоПериода, КонецПериода, СписокОрганизаций, МенеджерВременныхТаблиц)

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеДокументы.Ссылка КАК Ссылка,
	|	ВсеДокументы.Дата КАК Дата,
	|	ВсеДокументы.Организация КАК Организация,
	|	ВЫРАЗИТЬ(ВсеДокументы.Организация КАК Справочник.Организации).ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВсеДокументы.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	ВсеДокументы.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|	ВсеДокументы.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВсеДокументы.ОбъектУчета КАК ОбъектУчета,
	|	1 КАК Приоритет
	|
	|ПОМЕСТИТЬ ВтВсеДанныеКРасчету
	|
	|ИЗ	
	|	(ВЫБРАТЬ
	|		ТекущиеДокументы.Ссылка КАК Ссылка,
	|		ТекущиеДокументы.Дата КАК Дата,
	|		ТекущиеДокументы.Организация КАК Организация,
	|		ТекущиеДокументы.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|		ТекущиеДокументы.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|		ТекущиеДокументы.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ТаблицаОС.ОсновноеСредство КАК ОбъектУчета
	|
	|	ИЗ
	|		Документ.СписаниеОС2_4 КАК ТекущиеДокументы
	|		
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|			ПО ТаблицаОС.Ссылка = ТекущиеДокументы.Ссылка
	|
	|	ГДЕ
	|		ТекущиеДокументы.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ТекущиеДокументы.Организация В (&СписокОрганизаций)
	|		И ТекущиеДокументы.Проведен
	|
	|		И ТаблицаОС.ОсновноеСредство В (
	|				ВЫБРАТЬ
	|					СписокОбъектов.ОбъектУчета
	|				ИЗ
	|					СписокОбъектов КАК СписокОбъектов)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТекущиеДокументы.Ссылка КАК Ссылка,
	|		ТекущиеДокументы.Дата КАК Дата,
	|		ТекущиеДокументы.Организация КАК Организация,
	|		ИСТИНА КАК ОтражатьВРеглУчете,
	|		ИСТИНА КАК ОтражатьВУпрУчете,
	|		ТекущиеДокументы.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ТаблицаОС.ВнеоборотныйАктив КАК ОбъектУчета
	|
	|	ИЗ
	|		Документ.РеализацияУслугПрочихАктивов КАК ТекущиеДокументы
	|		
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаОС
	|			ПО ТаблицаОС.Ссылка = ТекущиеДокументы.Ссылка
	|				И ТаблицаОС.ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|
	|	ГДЕ
	|		(ТекущиеДокументы.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|			ИЛИ ТекущиеДокументы.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &КонецПериода)
	|
	|		И ТекущиеДокументы.Организация В (&СписокОрганизаций)
	|		И ТекущиеДокументы.Проведен
	|
	|		И ТекущиеДокументы.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
	|
	|		И ТаблицаОС.ВнеоборотныйАктив В (
	|				ВЫБРАТЬ
	|					СписокОбъектов.ОбъектУчета
	|				ИЗ
	|					СписокОбъектов КАК СписокОбъектов)
	|
	|	) КАК ВсеДокументы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьДвиженияПоДокументам(Период, ПараметрыВыполнения)
	
	ПодготовитьВременныеТаблицы(Период, ПараметрыВыполнения);
	ВыбратьДокументыИЗаписатьДвижения(Период, ПараметрыВыполнения);
	
КонецПроцедуры

Процедура ПодготовитьВременныеТаблицы(Период, ПараметрыВыполнения)
	
	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ПараметрыВыполнения.МенеджерВременныхТаблиц);
	ИспользуемыеВТ.Добавить("СписаниеРасходов");
	ИспользуемыеВТ.Добавить("КорректировкаСтоимостиТМЦ");
	ИспользуемыеВТ.Добавить("КорректировкаРасходов");
	ИспользуемыеВТ.Добавить("ПереданныеОбъекты");

	ВнеоборотныеАктивы.СформироватьТаблицуВтДанныеКРасчету(ПараметрыВыполнения.МенеджерВременныхТаблиц);
	
	СписокЗапросов = Новый Массив;
	
	#Область ВыбытияИОстатки
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СписаниеОС.Ссылка КАК Ссылка,
	|	СписаниеОС.Дата КАК Дата,
	|	СписаниеОС.Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОС) КАК ОперацияВыбытия,
	|
	|	ЛОЖЬ КАК ПраваПерешли,
	|	СписаниеОС.Дата КАК ДатаПереходаПрав,
	|
	|	СписаниеОС.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	СписаниеОС.СтатьяРасходов КАК СтатьяРасходов,
	|	СписаниеОС.АналитикаРасходов КАК АналитикаРасходов,
	|	СписаниеОС.АналитикаСоответствуетСписываемомуОС КАК АналитикаСоответствуетСписываемомуОбъекту,
	|
	|	СписаниеОС.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	СписаниеОС.НастройкаСчетовУчета КАК НастройкаСчетовУчета,
	|
	|	ТаблицаОС.СуммаСписанияУУ КАК СуммаСписанияУУ,
	|	ТаблицаОС.СуммаСписанияБУ КАК СуммаСписанияБУ,
	|	ТаблицаОС.СуммаСписанияНУ КАК СуммаСписанияНУ,
	|	ТаблицаОС.СуммаСписанияПР КАК СуммаСписанияПР
	|
	|ПОМЕСТИТЬ ВыбытиеОС
	|
	|ИЗ
	|	Документ.СписаниеОС2_4 КАК СписаниеОС
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = СписаниеОС.Ссылка
	|
	|ГДЕ
	|	СписаниеОС.Ссылка В
	|		(ВЫБРАТЬ
	|			ВтДанныеКРасчету.Ссылка
	|		ИЗ
	|			ВтДанныеКРасчету КАК ВтДанныеКРасчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияОС.Ссылка КАК Ссылка,
	|	РеализацияОС.Дата КАК Дата,
	|	РеализацияОС.Организация КАК Организация,
	|	ТаблицаОС.ВнеоборотныйАктив КАК ОсновноеСредство,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов) КАК ОперацияВыбытия,
	|
	|	РеализацияОС.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|		И РеализацияОС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено) КАК ПраваПерешли,
	|
	|	РеализацияОС.ДатаПереходаПраваСобственности КАК ДатаПереходаПрав,
	|
	|	РеализацияОС.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаОС.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходов КАК АналитикаРасходов,
	|	ЛОЖЬ КАК АналитикаСоответствуетСписываемомуОбъекту,
	|
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаСчетовУчета,
	|
	|	0 КАК СуммаСписанияУУ,
	|	0 КАК СуммаСписанияБУ,
	|	0 КАК СуммаСписанияНУ,
	|	0 КАК СуммаСписанияПР
	|
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК РеализацияОС
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = РеализацияОС.Ссылка
	|			И ТаблицаОС.ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|
	|ГДЕ
	|	РеализацияОС.Ссылка В
	|		(ВЫБРАТЬ
	|			ВтДанныеКРасчету.Ссылка
	|		ИЗ
	|			ВтДанныеКРасчету КАК ВтДанныеКРасчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация КАК Организация,
	|	ПрочиеРасходы.Подразделение КАК Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОС)
	|	КОНЕЦ КАК ОперацияВыбытия,
	|
	|	СУММА(ПрочиеРасходы.Сумма) КАК Сумма,
	|	СУММА(ПрочиеРасходы.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ПрочиеРасходы.СуммаУпр) КАК СуммаУпр,
	|
	|	СУММА(ПрочиеРасходы.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ПрочиеРасходы.СуммаРегл - ПрочиеРасходы.ПостояннаяРазница - ПрочиеРасходы.ВременнаяРазница) КАК СуммаНУ,
	|	СУММА(ПрочиеРасходы.ПостояннаяРазница) КАК ПостояннаяРазница
	|
	|ПОМЕСТИТЬ РасходыПриСписанииОС
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПрочиеРасходы.Организация КАК Организация,
	|		ПрочиеРасходы.Подразделение КАК Подразделение,
	|		ПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|		ПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|
	|		ПрочиеРасходы.СуммаОстаток КАК Сумма,
	|		ПрочиеРасходы.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|		ПрочиеРасходы.СуммаУпрОстаток КАК СуммаУпр,
	|
	|		ПрочиеРасходы.СуммаРеглОстаток КАК СуммаРегл,
	|		ПрочиеРасходы.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|		ПрочиеРасходы.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы.Остатки(
	|			&НачалоСледующегоПериода,
	|			 СтатьяРасходов В (&СтатьяВыбытиеОС)
	|				И (Организация, АналитикаРасходов) В (
	|					ВЫБРАТЬ
	|						ВыбытиеОС.Организация,
	|						ВыбытиеОС.ОсновноеСредство
	|					ИЗ
	|						ВыбытиеОС КАК ВыбытиеОС)
	|		) КАК ПрочиеРасходы
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПрочиеРасходы.Организация КАК Организация,
	|		ПрочиеРасходы.Подразделение КАК Подразделение,
	|		ПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|		ПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.Сумма
	|			ИНАЧЕ -ПрочиеРасходы.Сумма
	|		КОНЕЦ КАК Сумма,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.СуммаБезНДС
	|			ИНАЧЕ -ПрочиеРасходы.СуммаБезНДС
	|		КОНЕЦ КАК СуммаБезНДС,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.СуммаУпр
	|			ИНАЧЕ -ПрочиеРасходы.СуммаУпр
	|		КОНЕЦ КАК СуммаУпр,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.СуммаРегл
	|			ИНАЧЕ -ПрочиеРасходы.СуммаРегл
	|		КОНЕЦ КАК СуммаРегл,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.ПостояннаяРазница
	|			ИНАЧЕ -ПрочиеРасходы.ПостояннаяРазница
	|		КОНЕЦ КАК ПостояннаяРазница,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.ВременнаяРазница
	|			ИНАЧЕ -ПрочиеРасходы.ВременнаяРазница
	|		КОНЕЦ КАК ВременнаяРазница
	|
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|	ГДЕ
	|		ПрочиеРасходы.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ПрочиеРасходы.СтатьяРасходов В (&СтатьяВыбытиеОС)
	|		И ПрочиеРасходы.ВидИсточника = ЗНАЧЕНИЕ(Перечисление.ВидыИсточниковДвижений.ЗакрытиеРасходовОтВыбытияОС)
	|		И (ПрочиеРасходы.Организация, ПрочиеРасходы.АналитикаРасходов) В (
	|				ВЫБРАТЬ
	|					ВыбытиеОС.Организация,
	|					ВыбытиеОС.ОсновноеСредство
	|				ИЗ
	|					ВыбытиеОС КАК ВыбытиеОС)
	|
	|		) КАК ПрочиеРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОС)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаРасходов";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВспомогательныеДанные
	ПодготовитьВспомогательныеДанные(СписокЗапросов);
	#КонецОбласти
	
	#Область ВыбытиеОС_Распределение
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВыбытиеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВыбытиеОС.ОперацияВыбытия КАК ОперацияВыбытия,
	|
	|	СУММА(ВыбытиеОС.СуммаСписанияУУ) КАК СуммаБазыУУ,
	|	СУММА(ВыбытиеОС.СуммаСписанияБУ) КАК СуммаБазыБУ,
	|	СУММА(ВыбытиеОС.СуммаСписанияНУ) КАК СуммаБазыНУ,
	|	СУММА(ВыбытиеОС.СуммаСписанияПР) КАК СуммаБазыПР
	|
	|ПОМЕСТИТЬ ВыбытиеОС_СуммаБазы
	|ИЗ
	|	ВыбытиеОС КАК ВыбытиеОС
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыбытиеОС.ОсновноеСредство,
	|	ВыбытиеОС.ОперацияВыбытия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыбытиеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВыбытиеОС.ОперацияВыбытия КАК ОперацияВыбытия,
	|
	|	СУММА(ЕСТЬNULL(ВыбытиеОС_Предыдущие.СуммаСписанияУУ, 0)) КАК БазаНакопленнаяУУ,
	|	СУММА(ЕСТЬNULL(ВыбытиеОС_Предыдущие.СуммаСписанияБУ, 0)) КАК БазаНакопленнаяБУ,
	|	СУММА(ЕСТЬNULL(ВыбытиеОС_Предыдущие.СуммаСписанияНУ, 0)) КАК БазаНакопленнаяНУ,
	|	СУММА(ЕСТЬNULL(ВыбытиеОС_Предыдущие.СуммаСписанияПР, 0)) КАК БазаНакопленнаяПР
	|	
	|ПОМЕСТИТЬ ВыбытиеОС_БазаНакопленная
	|ИЗ
	|	ВыбытиеОС КАК ВыбытиеОС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыбытиеОС КАК ВыбытиеОС_Предыдущие
	|		ПО ВыбытиеОС_Предыдущие.ОсновноеСредство = ВыбытиеОС.ОсновноеСредство
	|			И ВыбытиеОС_Предыдущие.ОперацияВыбытия = ВыбытиеОС.ОперацияВыбытия
	|			И ВыбытиеОС_Предыдущие.Ссылка < ВыбытиеОС.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыбытиеОС.ОсновноеСредство,
	|	ВыбытиеОС.ОперацияВыбытия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыбытиеОС.Ссылка КАК Ссылка,
	|	ВыбытиеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВыбытиеОС.ОперацияВыбытия КАК ОперацияВыбытия,
	|
	|	1 КАК БазаУУ,
	|	0 КАК БазаНакопленнаяУУ,
	|	1 КАК СуммаБазыУУ,
	|
	|	1 КАК БазаБУ,
	|	0 КАК БазаНакопленнаяБУ,
	|	1 КАК СуммаБазыБУ,
	|
	|	1 КАК БазаНУ,
	|	0 КАК БазаНакопленнаяНУ,
	|	1 КАК СуммаБазыНУ,
	|
	|	1 КАК БазаПР,
	|	0 КАК БазаНакопленнаяПР,
	|	1 КАК СуммаБазыПР
	|
	|ПОМЕСТИТЬ ВыбытиеОС_Распределение
	| 
	|ИЗ
	|	ВыбытиеОС КАК ВыбытиеОС
	|ГДЕ
	|	ВыбытиеОС.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеУзловКомпонентовАмортизации),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыбытиеОС.Ссылка КАК Ссылка,
	|	ВыбытиеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВыбытиеОС.ОперацияВыбытия КАК ОперацияВыбытия,
	|
	|	ВыбытиеОС.СуммаСписанияУУ КАК БазаУУ,
	|	ВыбытиеОС_БазаНакопленная.БазаНакопленнаяУУ КАК БазаНакопленнаяУУ,
	|	ВыбытиеОС_СуммаБазы.СуммаБазыУУ КАК СуммаБазыУУ,
	|
	|	ВыбытиеОС.СуммаСписанияБУ КАК БазаБУ,
	|	ВыбытиеОС_БазаНакопленная.БазаНакопленнаяБУ КАК БазаНакопленнаяБУ,
	|	ВыбытиеОС_СуммаБазы.СуммаБазыБУ КАК СуммаБазыБУ,
	|
	|	ВыбытиеОС.СуммаСписанияНУ КАК БазаНУ,
	|	ВыбытиеОС_БазаНакопленная.БазаНакопленнаяНУ КАК БазаНакопленнаяНУ,
	|	ВыбытиеОС_СуммаБазы.СуммаБазыНУ КАК СуммаБазыНУ,
	|	
	|	ВыбытиеОС.СуммаСписанияПР КАК БазаПР,
	|	ВыбытиеОС_БазаНакопленная.БазаНакопленнаяПР КАК БазаНакопленнаяПР,
	|	ВыбытиеОС_СуммаБазы.СуммаБазыПР КАК СуммаБазыПР
	|
	|ИЗ
	|	ВыбытиеОС КАК ВыбытиеОС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыбытиеОС_СуммаБазы КАК ВыбытиеОС_СуммаБазы
	|		ПО ВыбытиеОС_СуммаБазы.ОсновноеСредство = ВыбытиеОС.ОсновноеСредство
	|			И ВыбытиеОС_СуммаБазы.ОперацияВыбытия = ВыбытиеОС.ОперацияВыбытия
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыбытиеОС_БазаНакопленная КАК ВыбытиеОС_БазаНакопленная
	|		ПО ВыбытиеОС_БазаНакопленная.ОсновноеСредство = ВыбытиеОС.ОсновноеСредство
	|			И ВыбытиеОС_БазаНакопленная.ОперацияВыбытия = ВыбытиеОС.ОперацияВыбытия
	|
	|ГДЕ
	|	ВыбытиеОС.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|	И НЕ ВыбытиеОС.ОсновноеСредство В (
	|			ВЫБРАТЬ
	|				ПолноеВыбытиеОС.ОсновноеСредство
	|			ИЗ
	|				ВыбытиеОС КАК ПолноеВыбытиеОС
	|			ГДЕ
	|				ПолноеВыбытиеОС.ОсновноеСредство = ВыбытиеОС.ОсновноеСредство
	|				И ПолноеВыбытиеОС.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеУзловКомпонентовАмортизации),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОС)))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Ссылка";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ЗакрытиеПоложительногоОстатка
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВыбытиеОС.Ссылка                                  КАК Регистратор,
	|	ВыбытиеОС_Распределение.Период                    КАК Период,
	|
	|	ВыбытиеОС.ИдентификаторСтроки                     КАК ИдентификаторСтроки,
	|
	|	ВыбытиеОС.СтатьяРасходов                          КАК КорСтатьяРасходов,
	|
	|	ВЫБОР
	|		КОГДА ВыбытиеОС.АналитикаСоответствуетСписываемомуОбъекту
	|			ТОГДА ВыбытиеОС.ОсновноеСредство
	|		ИНАЧЕ ВыбытиеОС.АналитикаРасходов
	|	КОНЕЦ КАК КорАналитикаРасходов,
	|
	|	ВыбытиеОС.АналитикаАктивовПассивов                КАК КорАналитикаАктивовПассивов,
	|	ВыбытиеОС.НастройкаСчетовУчета                    КАК КорНастройкаСчетовУчета,
	|	ВыбытиеОС.ХозяйственнаяОперация                   КАК ХозяйственнаяОперация,
	|	ВыбытиеОС.ОсновноеСредство                        КАК ОсновноеСредство,
	|
	|	ВыбытиеОС_Распределение.Организация               КАК Организация,
	|	ВыбытиеОС_Распределение.Подразделение             КАК Подразделение,
	|	ВыбытиеОС_Распределение.СтатьяРасходов            КАК СтатьяРасходов,
	|	ВыбытиеОС_Распределение.АналитикаРасходов         КАК АналитикаРасходов,
	|	ВыбытиеОС_Распределение.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|
	|	ЕСТЬNULL(ВспомогательныеДанные.НедвижимоеИмущество, ЛОЖЬ) КАК НедвижимоеИмущество,
	|	ВыбытиеОС.ПраваПерешли КАК ПраваПерешли,
	|	ВыбытиеОС.ДатаПереходаПрав КАК ДатаПереходаПрав,
	|
	|	СУММА(ВыбытиеОС_Распределение.Сумма) КАК Сумма,
	|	СУММА(ВыбытиеОС_Распределение.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ВыбытиеОС_Распределение.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ВыбытиеОС_Распределение.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ВыбытиеОС_Распределение.СуммаНУ) КАК СуммаНУ,
	|	СУММА(ВыбытиеОС_Распределение.ПостояннаяРазница) КАК ПостояннаяРазница
	|
	|ПОМЕСТИТЬ СписаниеРасходов
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыбытиеОС_Распределение.Ссылка                    КАК Ссылка,
	|		ВыбытиеОС_Распределение.ОсновноеСредство          КАК ОсновноеСредство,
	|		ВыбытиеОС_Распределение.ОперацияВыбытия           КАК ОперацияВыбытия,
	|		ВыбытиеОС.Дата                                    КАК Период,
	|		РасходыПриСписанииОС.Организация                  КАК Организация,
	|		РасходыПриСписанииОС.Подразделение                КАК Подразделение,
	|		РасходыПриСписанииОС.СтатьяРасходов               КАК СтатьяРасходов,
	|		РасходыПриСписанииОС.АналитикаРасходов            КАК АналитикаРасходов,
	|		РасходыПриСписанииОС.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|
	|		ВЫБОР
	|			КОГДА РасходыПриСписанииОС.СуммаУпр > 0
	|				ТОГДА &Сумма_Распределение
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Сумма,
	|
	|		ВЫБОР
	|			КОГДА РасходыПриСписанииОС.СуммаУпр > 0
	|				ТОГДА &СуммаБезНДС_Распределение
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС,
	|
	|		ВЫБОР
	|			КОГДА РасходыПриСписанииОС.СуммаУпр > 0
	|				ТОГДА &СуммаУпр_Распределение
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаУпр,
	|
	|		ВЫБОР
	|			КОГДА РасходыПриСписанииОС.СуммаРегл > 0
	|				ТОГДА &СуммаРегл_Распределение
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаРегл,
	|
	|		ВЫБОР
	|			КОГДА РасходыПриСписанииОС.СуммаНУ > 0
	|					ИЛИ РасходыПриСписанииОС.СуммаНУ = 0
	|						И РасходыПриСписанииОС.ПостояннаяРазница <> 0
	|				ТОГДА &СуммаНУ_Распределение
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаНУ,
	|
	|		ВЫБОР
	|			КОГДА РасходыПриСписанииОС.СуммаНУ > 0
	|					ИЛИ РасходыПриСписанииОС.СуммаНУ = 0
	|						И РасходыПриСписанииОС.ПостояннаяРазница <> 0
	|				ТОГДА &ПостояннаяРазница_Распределение
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПостояннаяРазница
	| 
	|	ИЗ
	|		РасходыПриСписанииОС КАК РасходыПриСписанииОС
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыбытиеОС_Распределение КАК ВыбытиеОС_Распределение
	|			ПО ВыбытиеОС_Распределение.ОсновноеСредство = РасходыПриСписанииОС.АналитикаРасходов
	|				И ВыбытиеОС_Распределение.ОперацияВыбытия = РасходыПриСписанииОС.ОперацияВыбытия
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыбытиеОС КАК ВыбытиеОС
	|			ПО ВыбытиеОС.Ссылка = ВыбытиеОС_Распределение.Ссылка
	|				И ВыбытиеОС.ОсновноеСредство = ВыбытиеОС_Распределение.ОсновноеСредство
	|				И ВыбытиеОС.ОперацияВыбытия = ВыбытиеОС_Распределение.ОперацияВыбытия
	|
	|	ГДЕ
	|		(РасходыПриСписанииОС.СуммаУпр > 0
	|			ИЛИ РасходыПриСписанииОС.СуммаРегл > 0
	|			ИЛИ РасходыПриСписанииОС.СуммаНУ > 0
	|			ИЛИ РасходыПриСписанииОС.СуммаНУ = 0
	|				И РасходыПриСписанииОС.ПостояннаяРазница <> 0)
	|
	|		И ВыбытиеОС.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|	) КАК ВыбытиеОС_Распределение
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыбытиеОС КАК ВыбытиеОС
	|		ПО ВыбытиеОС.Ссылка = ВыбытиеОС_Распределение.Ссылка
	|			И ВыбытиеОС.ОсновноеСредство = ВыбытиеОС_Распределение.ОсновноеСредство
	|			И ВыбытиеОС.ОперацияВыбытия = ВыбытиеОС_Распределение.ОперацияВыбытия
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВспомогательныеДанные КАК ВспомогательныеДанные
	|		ПО ВспомогательныеДанные.Организация = ВыбытиеОС.Организация
	|			И ВспомогательныеДанные.ОсновноеСредство = ВыбытиеОС.ОсновноеСредство
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыбытиеОС.Ссылка,
	|	ВыбытиеОС_Распределение.Период,
	|	ВыбытиеОС.ИдентификаторСтроки,
	|	ВыбытиеОС.СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ВыбытиеОС.АналитикаСоответствуетСписываемомуОбъекту
	|			ТОГДА ВыбытиеОС.ОсновноеСредство
	|		ИНАЧЕ ВыбытиеОС.АналитикаРасходов
	|	КОНЕЦ,
	|	ВыбытиеОС.АналитикаАктивовПассивов,
	|	ВыбытиеОС.НастройкаСчетовУчета,
	|	ВыбытиеОС.ХозяйственнаяОперация,
	|	ВыбытиеОС.ОсновноеСредство,
	|	ВыбытиеОС_Распределение.Организация,
	|	ВыбытиеОС_Распределение.Подразделение,
	|	ВыбытиеОС_Распределение.СтатьяРасходов,
	|	ВыбытиеОС_Распределение.АналитикаРасходов,
	|	ВыбытиеОС_Распределение.НаправлениеДеятельности,
	|	ЕСТЬNULL(ВспомогательныеДанные.НедвижимоеИмущество, ЛОЖЬ),
	|	ВыбытиеОС.ПраваПерешли,
	|	ВыбытиеОС.ДатаПереходаПрав
	|";
	
	ТекстРаспределенияСуммы = ОбщегоНазначенияУТ.ТекстРаспределенияСуммы(
		"РасходыПриСписанииОС.Сумма",
		"ВыбытиеОС_Распределение.БазаУУ",
		"ВыбытиеОС_Распределение.БазаНакопленнаяУУ",
		"ВыбытиеОС_Распределение.СуммаБазыУУ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Сумма_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ОбщегоНазначенияУТ.ТекстРаспределенияСуммы(
		"РасходыПриСписанииОС.СуммаБезНДС",
		"ВыбытиеОС_Распределение.БазаУУ",
		"ВыбытиеОС_Распределение.БазаНакопленнаяУУ",
		"ВыбытиеОС_Распределение.СуммаБазыУУ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаБезНДС_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ОбщегоНазначенияУТ.ТекстРаспределенияСуммы(
		"РасходыПриСписанииОС.СуммаУпр",
		"ВыбытиеОС_Распределение.БазаУУ",
		"ВыбытиеОС_Распределение.БазаНакопленнаяУУ",
		"ВыбытиеОС_Распределение.СуммаБазыУУ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаУпр_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ОбщегоНазначенияУТ.ТекстРаспределенияСуммы(
		"РасходыПриСписанииОС.СуммаРегл",
		"ВыбытиеОС_Распределение.БазаБУ",
		"ВыбытиеОС_Распределение.БазаНакопленнаяБУ",
		"ВыбытиеОС_Распределение.СуммаБазыБУ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаРегл_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ОбщегоНазначенияУТ.ТекстРаспределенияСуммы(
		"РасходыПриСписанииОС.СуммаНУ",
		"ВыбытиеОС_Распределение.БазаНУ",
		"ВыбытиеОС_Распределение.БазаНакопленнаяНУ",
		"ВыбытиеОС_Распределение.СуммаБазыНУ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаНУ_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ОбщегоНазначенияУТ.ТекстРаспределенияСуммы(
		"РасходыПриСписанииОС.ПостояннаяРазница",
		"ВыбытиеОС_Распределение.БазаПР",
		"ВыбытиеОС_Распределение.БазаНакопленнаяПР",
		"ВыбытиеОС_Распределение.СуммаБазыПР");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПостояннаяРазница_Распределение", ТекстРаспределенияСуммы);
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ЗакрытиеОтрицательногоОстатка
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПрочееОприходование.Ссылка КАК Ссылка,
	|	ПрочееОприходование.Дата КАК Дата,
	|
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.СтатьяРасходовДоходов КАК СтатьяДоходов,
	|	ТаблицаТовары.АналитикаДоходов КАК АналитикаДоходов,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ПрочееОприходование.Склад КАК Склад,
	|	ПрочееОприходование.Подразделение КАК Подразделение,
	|
	|	ТаблицаТовары.Сумма КАК Сумма
	|	
	|ПОМЕСТИТЬ ПрочееОприходование
	|
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров КАК ПрочееОприходование
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|		ПО ТаблицаТовары.Ссылка = ПрочееОприходование.Ссылка
	|ГДЕ
	|	ПрочееОприходование.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПриВыбытииОС)
	|	И ПрочееОприходование.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПрочееОприходование.Проведен
	|
	|	И ТаблицаТовары.ОсновноеСредство В (
	|			ВЫБРАТЬ
	|				РасходыПриСписанииОС.АналитикаРасходов
	|			ИЗ
	|				РасходыПриСписанииОС КАК РасходыПриСписанииОС
	|			ГДЕ
	|				(РасходыПриСписанииОС.СуммаУпр < 0
	|					ИЛИ РасходыПриСписанииОС.СуммаРегл < 0))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочееОприходование.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ПрочееОприходование.Сумма) КАК СуммаБазы
	|
	|ПОМЕСТИТЬ ПрочееОприходование_СуммаБазы
	|ИЗ
	|	ПрочееОприходование КАК ПрочееОприходование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочееОприходование.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочееОприходование.ОсновноеСредство КАК ОсновноеСредство,
	|	ПрочееОприходование.Ссылка КАК Ссылка,
	|	ПрочееОприходование.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СУММА(ЕСТЬNULL(ПрочееОприходование_Предыдущие.Сумма, 0)) КАК БазаНакопленная
	|	
	|ПОМЕСТИТЬ ПрочееОприходование_БазаНакопленная
	|ИЗ
	|	ПрочееОприходование КАК ПрочееОприходование
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПрочееОприходование КАК ПрочееОприходование_Предыдущие
	|		ПО ПрочееОприходование_Предыдущие.ОсновноеСредство = ПрочееОприходование.ОсновноеСредство
	|			И (ПрочееОприходование_Предыдущие.Ссылка < ПрочееОприходование.Ссылка
	|				ИЛИ ПрочееОприходование_Предыдущие.Ссылка = ПрочееОприходование.Ссылка
	|					И ПрочееОприходование_Предыдущие.НомерСтроки < ПрочееОприходование.НомерСтроки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочееОприходование.ОсновноеСредство,
	|	ПрочееОприходование.Ссылка,
	|	ПрочееОприходование.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочееОприходование.Ссылка КАК Ссылка,
	|	ПрочееОприходование.ОсновноеСредство КАК ОсновноеСредство,
	|	ПрочееОприходование.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|
	|	ПрочееОприходование.Сумма КАК База,
	|	ПрочееОприходование_БазаНакопленная.БазаНакопленная КАК БазаНакопленная,
	|	ПрочееОприходование_СуммаБазы.СуммаБазы КАК СуммаБазы
	|
	|ПОМЕСТИТЬ ПрочееОприходование_Распределение
	|	
	|ИЗ
	|	ПрочееОприходование КАК ПрочееОприходование
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПрочееОприходование_СуммаБазы КАК ПрочееОприходование_СуммаБазы
	|		ПО ПрочееОприходование_СуммаБазы.ОсновноеСредство = ПрочееОприходование.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПрочееОприходование_БазаНакопленная КАК ПрочееОприходование_БазаНакопленная
	|		ПО ПрочееОприходование_БазаНакопленная.ОсновноеСредство = ПрочееОприходование.ОсновноеСредство
	|			И ПрочееОприходование_БазаНакопленная.Ссылка = ПрочееОприходование.Ссылка
	|			И ПрочееОприходование_БазаНакопленная.ИдентификаторСтроки = ПрочееОприходование.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочееОприходование.Ссылка                        КАК Регистратор,
	|	ПрочееОприходование.Дата                          КАК Период,
	|
	|	ПрочееОприходование.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ПрочееОприходование.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ПрочееОприходование.Склад                         КАК Склад,
	|	ПрочееОприходование.ВидЗапасов                    КАК ВидЗапасов,
	|	ПрочееОприходование.Номенклатура                  КАК Номенклатура,
	|	ПрочееОприходование.Подразделение                 КАК КорПодразделение,
	|	ПрочееОприходование.НаправлениеДеятельности       КАК КорНаправлениеДеятельности,
	|	ПрочееОприходование.Назначение                    КАК Назначение,
	|
	|	РасходыПриСписанииОС.Организация                  КАК Организация,
	|	РасходыПриСписанииОС.Подразделение                КАК Подразделение,
	|	РасходыПриСписанииОС.СтатьяРасходов               КАК СтатьяРасходов,
	|	РасходыПриСписанииОС.АналитикаРасходов            КАК АналитикаРасходов,
	|	РасходыПриСписанииОС.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА РасходыПриСписанииОС.СуммаУпр < 0
	|			ТОГДА &Сумма_Распределение
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА РасходыПриСписанииОС.СуммаУпр < 0
	|			ТОГДА &СуммаБезНДС_Распределение
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДС,
	|
	|	ВЫБОР
	|		КОГДА РасходыПриСписанииОС.СуммаУпр < 0
	|			ТОГДА &СуммаУпр_Распределение
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА РасходыПриСписанииОС.СуммаРегл < 0
	|			ТОГДА &СуммаРегл_Распределение
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл
	|
	|ПОМЕСТИТЬ КорректировкаСтоимостиТМЦ
	| 
	|ИЗ
	|	РасходыПриСписанииОС КАК РасходыПриСписанииОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрочееОприходование_Распределение КАК ПрочееОприходование_Распределение
	|		ПО ПрочееОприходование_Распределение.ОсновноеСредство = РасходыПриСписанииОС.АналитикаРасходов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрочееОприходование КАК ПрочееОприходование
	|		ПО ПрочееОприходование.Ссылка = ПрочееОприходование_Распределение.Ссылка
	|			И ПрочееОприходование.ИдентификаторСтроки = ПрочееОприходование_Распределение.ИдентификаторСтроки
	|
	|ГДЕ
	|	(РасходыПриСписанииОС.СуммаУпр < 0
	|		ИЛИ РасходыПриСписанииОС.СуммаРегл < 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочееОприходование.Ссылка                        КАК Регистратор,
	|	ПрочееОприходование.Дата                          КАК Период,
	|
	|	ПрочееОприходование.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ПрочееОприходование.СтатьяДоходов                 КАК СтатьяДоходов,
	|	ПрочееОприходование.АналитикаДоходов              КАК АналитикаДоходов,
	|
	|	РасходыПриСписанииОС.Организация                  КАК Организация,
	|	РасходыПриСписанииОС.Подразделение                КАК Подразделение,
	|	РасходыПриСписанииОС.СтатьяРасходов               КАК СтатьяРасходов,
	|	РасходыПриСписанииОС.АналитикаРасходов            КАК АналитикаРасходов,
	|	РасходыПриСписанииОС.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|
	|	&СуммаНУ_Распределение КАК СуммаНУ,
	|
	|	&ПостояннаяРазница_Распределение КАК ПостояннаяРазница
	|
	|ПОМЕСТИТЬ КорректировкаРасходов
	| 
	|ИЗ
	|	РасходыПриСписанииОС КАК РасходыПриСписанииОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрочееОприходование_Распределение КАК ПрочееОприходование_Распределение
	|		ПО ПрочееОприходование_Распределение.ОсновноеСредство = РасходыПриСписанииОС.АналитикаРасходов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрочееОприходование КАК ПрочееОприходование
	|		ПО ПрочееОприходование.Ссылка = ПрочееОприходование_Распределение.Ссылка
	|			И ПрочееОприходование.ИдентификаторСтроки = ПрочееОприходование_Распределение.ИдентификаторСтроки
	|
	|ГДЕ
	|	(РасходыПриСписанииОС.СуммаНУ < 0)";
	
	ТекстРаспределенияСуммы = ОбщегоНазначенияУТ.ТекстРаспределенияСуммы(
		"-РасходыПриСписанииОС.Сумма",
		"ПрочееОприходование_Распределение.База",
		"ПрочееОприходование_Распределение.БазаНакопленная",
		"ПрочееОприходование_Распределение.СуммаБазы");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Сумма_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ОбщегоНазначенияУТ.ТекстРаспределенияСуммы(
		"-РасходыПриСписанииОС.СуммаБезНДС",
		"ПрочееОприходование_Распределение.База",
		"ПрочееОприходование_Распределение.БазаНакопленная",
		"ПрочееОприходование_Распределение.СуммаБазы");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаБезНДС_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ОбщегоНазначенияУТ.ТекстРаспределенияСуммы(
		"-РасходыПриСписанииОС.СуммаУпр",
		"ПрочееОприходование_Распределение.База",
		"ПрочееОприходование_Распределение.БазаНакопленная",
		"ПрочееОприходование_Распределение.СуммаБазы");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаУпр_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ОбщегоНазначенияУТ.ТекстРаспределенияСуммы(
		"-РасходыПриСписанииОС.СуммаРегл",
		"ПрочееОприходование_Распределение.База",
		"ПрочееОприходование_Распределение.БазаНакопленная",
		"ПрочееОприходование_Распределение.СуммаБазы");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаРегл_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ОбщегоНазначенияУТ.ТекстРаспределенияСуммы(
		"-РасходыПриСписанииОС.СуммаНУ",
		"ПрочееОприходование_Распределение.База",
		"ПрочееОприходование_Распределение.БазаНакопленная",
		"ПрочееОприходование_Распределение.СуммаБазы");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаНУ_Распределение", ТекстРаспределенияСуммы);

	ТекстРаспределенияСуммы = ОбщегоНазначенияУТ.ТекстРаспределенияСуммы(
		"-РасходыПриСписанииОС.ПостояннаяРазница",
		"ПрочееОприходование_Распределение.База",
		"ПрочееОприходование_Распределение.БазаНакопленная",
		"ПрочееОприходование_Распределение.СуммаБазы");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПостояннаяРазница_Распределение", ТекстРаспределенияСуммы);
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	// Эмуляция остатка на счете 45 на момент выполнения операции
	#Область ПереданныеОбъекты
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПереданныеОбъекты.Регистратор               КАК Регистратор,
	|	ПереданныеОбъекты.Период                    КАК Период,
	|
	|	ПереданныеОбъекты.ИдентификаторСтроки       КАК ИдентификаторСтроки,
	|
	|	ПереданныеОбъекты.КорСтатьяРасходов         КАК КорСтатьяРасходов,
	|	ПереданныеОбъекты.КорАналитикаРасходов      КАК КорАналитикаРасходов,
	|	ВыбытиеОС.ОсновноеСредство                  КАК ОсновноеСредство,
	|
	|	ПереданныеОбъекты.Организация               КАК Организация,
	|	ПереданныеОбъекты.Подразделение             КАК Подразделение,
	|	ПереданныеОбъекты.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|
	|	ЕСТЬNULL(ВспомогательныеДанные.НедвижимоеИмущество, ЛОЖЬ) КАК НедвижимоеИмущество,
	|	ВыбытиеОС.ПраваПерешли КАК ПраваПерешли,
	|	ВыбытиеОС.ДатаПереходаПрав КАК ДатаПереходаПрав,
	|
	|	СУММА(ПереданныеОбъекты.Сумма)                     КАК Сумма,
	|	СУММА(ПереданныеОбъекты.СуммаБезНДС)               КАК СуммаБезНДС,
	|	СУММА(ПереданныеОбъекты.СуммаУпр)                  КАК СуммаУпр,
	|	СУММА(ПереданныеОбъекты.СуммаРегл)                 КАК СуммаРегл,
	|	СУММА(ПереданныеОбъекты.СуммаНУ)                   КАК СуммаНУ,
	|	СУММА(ПереданныеОбъекты.ПостояннаяРазница)         КАК ПостояннаяРазница
	|
	|ПОМЕСТИТЬ ПереданныеОбъекты
	|
	|ИЗ
	|	(
		// Движения которые формируются при проведении (их еще нет в прочих расходах) Дт 45 - Кт 01.09
	|	ВЫБРАТЬ
	|		СписаниеРасходов.Регистратор               КАК Регистратор,
	|		СписаниеРасходов.Период                    КАК Период,
	|
	|		СписаниеРасходов.ИдентификаторСтроки       КАК ИдентификаторСтроки,
	|
	|		СписаниеРасходов.КорСтатьяРасходов         КАК КорСтатьяРасходов,
	|		СписаниеРасходов.КорАналитикаРасходов      КАК КорАналитикаРасходов,
	|
	|		СписаниеРасходов.Организация               КАК Организация,
	|		СписаниеРасходов.Подразделение             КАК Подразделение,
	|		СписаниеРасходов.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|
	|		СписаниеРасходов.Сумма                     КАК Сумма,
	|		СписаниеРасходов.СуммаБезНДС               КАК СуммаБезНДС,
	|		СписаниеРасходов.СуммаУпр                  КАК СуммаУпр,
	|		СписаниеРасходов.СуммаРегл                 КАК СуммаРегл,
	|
	|		СписаниеРасходов.СуммаНУ                   КАК СуммаНУ,
	|		СписаниеРасходов.ПостояннаяРазница         КАК ПостояннаяРазница
	|	ИЗ
	|		СписаниеРасходов КАК СписаниеРасходов
	| 
	|	ГДЕ
	|		СписаниеРасходов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
		// Движения сформированные в прочих расходах Дт 45 - Кт 01.09
	|	ВЫБРАТЬ
	|		ВыбытиеОС.Ссылка                           КАК Регистратор,
	|		ВыбытиеОС.Дата                             КАК Период,
	|
	|		ВыбытиеОС.ИдентификаторСтроки              КАК ИдентификаторСтроки,
	|
	|		ВыбытиеОС.СтатьяРасходов                   КАК КорСтатьяРасходов,
	|		ВыбытиеОС.АналитикаРасходов                КАК КорАналитикаРасходов,
	|
	|		ВыбытиеОС.Организация                      КАК Организация,
	|		ПрочиеРасходы.Подразделение                КАК Подразделение,
	|		ПрочиеРасходы.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|
	|		ПрочиеРасходы.Сумма                        КАК Сумма,
	|		ПрочиеРасходы.СуммаБезНДС                  КАК СуммаБезНДС,
	|		ПрочиеРасходы.СуммаУпр                     КАК СуммаУпр,
	|		ПрочиеРасходы.СуммаРегл                    КАК СуммаРегл,
	|
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ВспомогательныеДанные.НедвижимоеИмущество, ЛОЖЬ)
	|				ТОГДА 0
	|			ИНАЧЕ ПрочиеРасходы.СуммаРегл
	|					- ПрочиеРасходы.ПостояннаяРазница
	|					- ПрочиеРасходы.ПостояннаяРазница
	|		КОНЕЦ КАК СуммаНУ,
	|
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ВспомогательныеДанные.НедвижимоеИмущество, ЛОЖЬ)
	|				ТОГДА 0
	|			ИНАЧЕ ПрочиеРасходы.ПостояннаяРазница
	|		КОНЕЦ КАК ПостояннаяРазница
	|
	|	ИЗ
	|		ВыбытиеОС КАК ВыбытиеОС
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВспомогательныеДанные КАК ВспомогательныеДанные
	|			ПО ВспомогательныеДанные.Организация = ВыбытиеОС.Организация
	|				И ВспомогательныеДанные.ОсновноеСредство = ВыбытиеОС.ОсновноеСредство
	|	
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|			ПО ПрочиеРасходы.Регистратор = ВыбытиеОС.Ссылка
	|				И ПрочиеРасходы.АналитикаРасходов = ВыбытиеОС.ОсновноеСредство
	|				И ПрочиеРасходы.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав)
	|				И ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И ПрочиеРасходы.Активность
	|
	|	ГДЕ
	|		ВыбытиеОС.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|		И ВыбытиеОС.ПраваПерешли
	|		И ВыбытиеОС.ДатаПереходаПрав > КОНЕЦПЕРИОДА(ВыбытиеОС.Дата, МЕСЯЦ)
	|		И ВыбытиеОС.ДатаПереходаПрав МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|	) КАК ПереданныеОбъекты
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыбытиеОС КАК ВыбытиеОС
	|		ПО ВыбытиеОС.Ссылка = ПереданныеОбъекты.Регистратор
	|			И ВыбытиеОС.ИдентификаторСтроки = ПереданныеОбъекты.ИдентификаторСтроки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВспомогательныеДанные КАК ВспомогательныеДанные
	|		ПО ВспомогательныеДанные.Организация = ВыбытиеОС.Организация
	|			И ВспомогательныеДанные.ОсновноеСредство = ВыбытиеОС.ОсновноеСредство
	|
	|СГРУППИРОВАТЬ ПО
	|	ПереданныеОбъекты.Регистратор,
	|	ПереданныеОбъекты.Период,
	|	ПереданныеОбъекты.ИдентификаторСтроки,
	|	ПереданныеОбъекты.КорСтатьяРасходов,
	|	ПереданныеОбъекты.КорАналитикаРасходов,
	|	ВыбытиеОС.ОсновноеСредство,
	|	ПереданныеОбъекты.Организация,
	|	ПереданныеОбъекты.Подразделение,
	|	ПереданныеОбъекты.НаправлениеДеятельности,
	|	ЕСТЬNULL(ВспомогательныеДанные.НедвижимоеИмущество, ЛОЖЬ),
	|	ВыбытиеОС.ПраваПерешли,
	|	ВыбытиеОС.ДатаПереходаПрав
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокОрганизаций", ПараметрыВыполнения.СписокОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Период));
	Запрос.УстановитьПараметр("НачалоСледующегоПериода", КонецМесяца(Период) + 1);
	
	СтатьяВыбытиеОС = Новый Массив;
	СтатьяВыбытиеОС.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС);
	СтатьяВыбытиеОС.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС);
	Запрос.УстановитьПараметр("СтатьяВыбытиеОС", СтатьяВыбытиеОС);
	
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыВыполнения.МенеджерВременныхТаблиц,, ИспользуемыеВТ);
	
КонецПроцедуры

Процедура ВыбратьДокументыИЗаписатьДвижения(Период, ПараметрыВыполнения)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокДокументов.Ссылка КАК Ссылка,
	|	СписокДокументов.Период КАК Период,
	|	СписокДокументов.Организация КАК Организация
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписаниеРасходов.Регистратор КАК Ссылка,
	|		СписаниеРасходов.Период КАК Период,
	|		СписаниеРасходов.Организация КАК Организация
	|	ИЗ
	|		СписаниеРасходов КАК СписаниеРасходов
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		КорректировкаСтоимостиТМЦ.Регистратор КАК Ссылка,
	|		КорректировкаСтоимостиТМЦ.Период КАК Период,
	|		КорректировкаСтоимостиТМЦ.Организация КАК Организация
	|	ИЗ
	|		КорректировкаСтоимостиТМЦ КАК КорректировкаСтоимостиТМЦ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		КорректировкаРасходов.Регистратор КАК Ссылка,
	|		КорректировкаРасходов.Период КАК Период,
	|		КорректировкаРасходов.Организация КАК Организация
	|	ИЗ
	|		КорректировкаРасходов КАК КорректировкаРасходов
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПереданныеОбъекты.Регистратор КАК Ссылка,
	|		ПереданныеОбъекты.Период КАК Период,
	|		ПереданныеОбъекты.Организация КАК Организация
	|	ИЗ
	|		ПереданныеОбъекты КАК ПереданныеОбъекты
	|
	|	) КАК СписокДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Организация,
	|	Ссылка";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ПараметрыВыполнения.МенеджерВременныхТаблиц);
	
	Пока Выборка.Следующий() Цикл
	
		НачатьТранзакцию();
		Попытка
			
			ТаблицыПроведения = ПодготовитьТаблицыДвиженийДокумента(ПараметрыВыполнения.МенеджерВременныхТаблиц, Выборка);
			
			ДокументОбъект = ПроведениеДокументов.ЭмуляцияДокумента(Выборка.Ссылка, Выборка.Период);
			
			УстановитьПризнакВыполненияОперации(ДокументОбъект);
		
			ВнеоборотныеАктивыСлужебный.ЗаписатьТаблицыДвижений(
				ТаблицыПроведения, 
				ДокументОбъект, 
				ПараметрыВыполнения.МенеджерВременныхТаблиц,
				Ложь, 
				ИмяОперации(), 
				Перечисления.ВидыИсточниковДвижений.ЗакрытиеРасходовОтВыбытияОС,
				Период);
		
			ВнеоборотныеАктивыСлужебный.ОбновитьДвиженияАктивовПассивов(Выборка.Ссылка);
			
			Если ПараметрыВыполнения.СформироватьЗадания Тогда
				ПроведениеДокументов.СформироватьЗаданияНаОтложенныеДвижения(ДокументОбъект, ПараметрыВыполнения.МенеджерВременныхТаблиц);
			КонецЕсли;
			
			Если ПараметрыВыполнения.ВернутьДокументыКОтражению Тогда
				ВнеоборотныеАктивыСлужебный.ВернутьДокументыКОтражению(
					Выборка.Ссылка, Выборка.Организация, Выборка.Период, ТаблицыПроведения);
			КонецЕсли;
			
			ПараметрыВыполнения.КоличествоДанных = ПараметрыВыполнения.КоличествоДанных + 1;
			
			ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыВыполнения.МенеджерВременныхТаблиц,, ИспользуемыеВТ);
		
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = НСтр("ru = 'Не удалось сформировать движения по документу %1, по причине:
                                |%2';
                                |en = 'Cannot generate register records for document %1. Reason:
                                |%2'");
                                
			ТекстОшибки = СтрШаблон(ТекстОшибки, 
				Строка(Выборка.Ссылка),
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение ТекстОшибки;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьТаблицыДвиженийДокумента(МенеджерВременныхТаблиц, Выборка)
	
	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);

	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Выборка.Ссылка);
	ТаблицыПроведения = МенеджерОбъекта.ТаблицыДвиженийПриЗакрытииРасходовОтВыбытияОС(Выборка.Ссылка, МенеджерВременныхТаблиц);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВТ);
	
	Возврат ТаблицыПроведения;
	
КонецФункции

Процедура ЗапомнитьОбработанныеДанные(ПараметрыВыполнения)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВтПорцияДанныхКРасчету.Ссылка КАК Ссылка,
	|	ВтПорцияДанныхКРасчету.ОбъектУчета КАК ОбъектУчета,
	|	ЛОЖЬ ЕстьОшибки
	|
	|ПОМЕСТИТЬ ОбработанныеДанные_Временная
	|
	|ИЗ
	|	ВтПорцияДанныхКРасчету КАК ВтПорцияДанныхКРасчету
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбработанныеДанные.Ссылка КАК Ссылка,
	|	ОбработанныеДанные.ОбъектУчета КАК ОбъектУчета,
	|	ОбработанныеДанные.ЕстьОшибки КАК ЕстьОшибки
	|ИЗ
	|	ОбработанныеДанные КАК ОбработанныеДанные
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОбработанныеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбработанныеДанные.Ссылка КАК Ссылка,
	|	ОбработанныеДанные.ОбъектУчета КАК ОбъектУчета,
	|	ОбработанныеДанные.ЕстьОшибки КАК ЕстьОшибки
	|
	|ПОМЕСТИТЬ ОбработанныеДанные
	|
	|ИЗ
	|	ОбработанныеДанные_Временная КАК ОбработанныеДанные
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОбработанныеДанные_Временная
	|";
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ЗаданияКРасчету(ПараметрыРасчета, НомерДоРасчета)
	
	ДоступныеОрганизации = ЗакрытиеМесяцаСервер.ДоступныеДляРасчетаОрганизации(
		ПараметрыРасчета.Период, ПараметрыРасчета.МассивОрганизаций);
	
	ТекстЗапроса =
	"ВЫБРАТЬ 
	|	НАЧАЛОПЕРИОДА(Задания.Месяц, МЕСЯЦ) КАК НачалоПериода,
	|	КОНЕЦПЕРИОДА(Задания.Месяц, МЕСЯЦ) КАК ОкончаниеПериода,
	|	Задания.Организация КАК Организация
	|
	|ПОМЕСТИТЬ Задания
	|
	|ИЗ
	|	РегистрСведений.ЗаданияКЗакрытиюМесяца КАК Задания
	|
	|ГДЕ
	|	Задания.Операция = &Операция
	|	И (Задания.Месяц <= &ОкончаниеПериода
	|		ИЛИ &ОкончаниеПериода = ДАТАВРЕМЯ(1,1,1))
	|
	|	И Задания.НомерЗадания <= &НомерЗадания
	|	И (Задания.Организация В (&Организации)
	|			ИЛИ &ПоВсемОрганизациям)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НачалоПериода,
	|	ОкончаниеПериода,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.НачалоПериода       КАК Месяц,
	|	Задания.Организация         КАК Организация,
	|	ТаблицаОС.ОсновноеСредство  КАК ОбъектУчета
	|
	|ПОМЕСТИТЬ ЗаданияКРасчету
	|
	|ИЗ
	|	Задания КАК Задания
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4 КАК ТекущиеДокументы
	|		ПО ТекущиеДокументы.Организация = Задания.Организация
	|			И ТекущиеДокументы.Дата >= Задания.НачалоПериода
	|			И ТекущиеДокументы.Дата <= &ОкончаниеПериода
	|			И ТекущиеДокументы.Проведен
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ТекущиеДокументы.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.НачалоПериода       КАК Месяц,
	|	Задания.Организация         КАК Организация,
	|	ТаблицаОС.ВнеоборотныйАктив КАК ОбъектУчета
	|
	|ИЗ
	|	Задания КАК Задания
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК ТекущиеДокументы
	|		ПО ТекущиеДокументы.Организация = Задания.Организация
	|			И (ТекущиеДокументы.Дата >= Задания.НачалоПериода
	|					И ТекущиеДокументы.Дата <= &ОкончаниеПериода
	|				ИЛИ ТекущиеДокументы.ДатаПереходаПраваСобственности >= Задания.НачалоПериода
	|					И ТекущиеДокументы.ДатаПереходаПраваСобственности <= &ОкончаниеПериода)
	|			И ТекущиеДокументы.Проведен
	|			И ТекущиеДокументы.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ТекущиеДокументы.Ссылка
	|			И ТаблицаОС.ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(ЗаданияКРасчету.Месяц), ДАТАВРЕМЯ(1,1,1)) КАК НачалоПериода
	|ИЗ
	|	ЗаданияКРасчету КАК ЗаданияКРасчету
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация
	|ИЗ
	|	Задания КАК Задания
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Операция", Перечисления.ОперацииЗакрытияМесяца.ЗакрытиеРасходовОтВыбытияОС);
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(ПараметрыРасчета.Период));
	Запрос.УстановитьПараметр("НомерЗадания", НомерДоРасчета);
	Запрос.УстановитьПараметр("Организации", ДоступныеОрганизации);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(ДоступныеОрганизации));
	
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка = Результат[Результат.ВГраница()-1].Выбрать();
	Если Выборка.Следующий() Тогда
		НачалоПериодаЗаданий = Выборка.НачалоПериода;
	Иначе
		НачалоПериодаЗаданий = '000101010000';
	КонецЕсли;
	
	ЗаданияКРасчету = Новый Структура;
	ЗаданияКРасчету.Вставить("СписокОрганизаций", Результат[Результат.ВГраница()].Выгрузить().ВыгрузитьКолонку("Организация"));
	ЗаданияКРасчету.Вставить("НачалоПериода", НачалоПериодаЗаданий);
	ЗаданияКРасчету.Вставить("МенеджерВременныхТаблиц", Запрос.МенеджерВременныхТаблиц);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(Запрос.МенеджерВременныхТаблиц,, "ЗаданияКРасчету");

	Возврат ЗаданияКРасчету;
			
КонецФункции

Процедура УдалитьЗаданияПоДату(ПараметрыВыполнения)
	
	Если НЕ ПараметрыВыполнения.УдалитьЗадания Тогда
		Возврат;
	КонецЕсли;

	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ЗакрытиеРасходовОтВыбытияОС.УдалитьЗаданияПоДату");

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Месяц КАК Месяц,
	|	Задания.Организация КАК Организация,
	|	Задания.Операция КАК Операция,
	|	Задания.НомерЗадания КАК НомерЗадания
	|
	|ИЗ
	|	РегистрСведений.ЗаданияКЗакрытиюМесяца КАК Задания
	|
	|ГДЕ
	|	Задания.Месяц <= &ОкончаниеПериода
	|	И Задания.НомерЗадания <= &НомерЗадания
	|	И Задания.Организация В (&СписокОрганизаций)
	|	И Задания.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ЗакрытиеРасходовОтВыбытияОС)
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ОкончаниеПериода", ПараметрыВыполнения.КонецПериода);
	Запрос.УстановитьПараметр("СписокОрганизаций", ПараметрыВыполнения.СписокОрганизаций);
	Запрос.УстановитьПараметр("НомерЗадания", ПараметрыВыполнения.НомерДоРасчета);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Набор = РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьНаборЗаписей();
		Набор.Отбор.Месяц.Установить(Выборка.Месяц);
		Набор.Отбор.Организация.Установить(Выборка.Организация);
		Набор.Отбор.Операция.Установить(Выборка.Операция);
		Набор.Отбор.НомерЗадания.Установить(Выборка.НомерЗадания);
		Набор.Записать(); 
		
	КонецЦикла;
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, 1);
	
КонецПроцедуры

Функция СоздатьОчередьЗаданий(НачалоПериода, КонецПериода, СписокОрганизаций, НомерДоРасчета, БезОтбораОС, МенеджерВременныхТаблиц, ИмяРегистраЗаданий, УдалитьЗадания)

	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);

	МаксимальноеКоличествоЗаданий = МаксимальноеКоличествоЗаданий();

	ОчередьЗаданийКРасчету = ВнеоборотныеАктивы.ОчередьЗаданийКРасчету();
	
	СформироватьТаблицуВтСписокДокументов(НачалоПериода, КонецПериода, СписокОрганизаций, БезОтбораОС, МенеджерВременныхТаблиц);

	ОчередьОбъектов = ВнеоборотныеАктивы.ОчередьОбъектовСЛУ(
		НачалоПериода, 
		КонецПериода, 
		СписокОрганизаций, 
		МаксимальноеКоличествоЗаданий, 
		МенеджерВременныхТаблиц);
	
	МаксимальныйНомерОчереди = 1;
	Для Каждого Выборка Из ОчередьОбъектов Цикл
		МаксимальныйНомерОчереди = Макс(Выборка.НомерОчереди, МаксимальныйНомерОчереди);
	КонецЦикла;
	
	Для Каждого Выборка Из ОчередьОбъектов Цикл
		
		Если ОчередьЗаданийКРасчету.Количество() < Выборка.НомерОчереди Тогда
			
			ДанныеЗадания = ОчередьЗаданийКРасчету.Добавить();
			ДанныеЗадания.ПроцедураРасчета = "ЗакрытиеРасходовОтВыбытияОС.ВыполнитьОперациюПоОбъектам";
			ДанныеЗадания.НаименованиеФоновогоЗадания = НСтр("ru = 'Закрытие расходов от выбытия ОС';
															|en = 'Close fixed asset retirement expenses'"); 

			ПараметрыВыполнения = ПараметрыВыполнения();
			ПараметрыВыполнения.КонецПериода = КонецМесяца(КонецПериода);
			ПараметрыВыполнения.СписокОрганизаций = СписокОрганизаций;
			ПараметрыВыполнения.ВыполнитьПроверку = Истина;
			ПараметрыВыполнения.НомерДоРасчета = НомерДоРасчета;
			ПараметрыВыполнения.ИмяРегистраЗаданий = ИмяРегистраЗаданий;
			ПараметрыВыполнения.УдалитьЗадания = УдалитьЗадания;
			
			ДанныеЗадания.ПараметрыЗадания = ПараметрыВыполнения;
			
		Иначе
			ДанныеЗадания = ОчередьЗаданийКРасчету[Выборка.НомерОчереди - 1];
		КонецЕсли;
		
		ПараметрыОбъекта = ДанныеЗадания.ПараметрыЗадания.СписокОбъектов.Добавить();
		ПараметрыОбъекта.ОбъектУчета = Выборка.ОбъектУчета;
		ПараметрыОбъекта.НачалоПериода = НачалоМесяца(Выборка.Месяц);
		
	КонецЦикла;

	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВТ);
	
	Возврат ОчередьЗаданийКРасчету;
	
КонецФункции

Процедура СформироватьТаблицуВтСписокДокументов(НачалоПериода, КонецПериода, СписокОрганизаций, БезОтбораОС, МенеджерВременныхТаблиц)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТекущиеДокументы.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ ВтСписокДокументов
	|
	|ИЗ
	|	Документ.СписаниеОС2_4 КАК ТекущиеДокументы
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ТекущиеДокументы.Ссылка
	|
	|ГДЕ
	|	ТекущиеДокументы.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТекущиеДокументы.Организация В (&СписокОрганизаций)
	|	И ТекущиеДокументы.Проведен
	|
	|	И (&БезОтбораОС
	|		ИЛИ ТаблицаОС.ОсновноеСредство В (
	|			ВЫБРАТЬ
	|				ЗаданияКРасчету.ОбъектУчета
	|			ИЗ
	|				ЗаданияКРасчету КАК ЗаданияКРасчету))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТекущиеДокументы.Ссылка КАК Ссылка
	|
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ТекущиеДокументы
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ТекущиеДокументы.Ссылка
	|			И ТаблицаОС.ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|
	|ГДЕ
	|	(ТекущиеДокументы.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|		ИЛИ ТекущиеДокументы.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &КонецПериода)
	|
	|	И ТекущиеДокументы.Организация В (&СписокОрганизаций)
	|	И ТекущиеДокументы.Проведен
	|
	|	И ТекущиеДокументы.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
	|
	|	И (&БезОтбораОС
	|		ИЛИ ТаблицаОС.ВнеоборотныйАктив В (
	|			ВЫБРАТЬ
	|				ЗаданияКРасчету.ОбъектУчета
	|			ИЗ
	|				ЗаданияКРасчету КАК ЗаданияКРасчету))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("БезОтбораОС", БезОтбораОС);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ПолучитьПорциюДанныхКРасчету(НачалоПериода, ПараметрыВыполнения)
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ЗакрытиеРасходовОтВыбытияОС.ПолучитьПорциюДанныхКРасчету");
	
	КоличествоДанных = ВнеоборотныеАктивы.СформироватьТаблицуВтПорцияДанныхКРасчету(
		НачалоПериода, 
		ПараметрыВыполнения.МенеджерВременныхТаблиц,
		РазмерПорцииДанных());
	
	ПараметрыВыполнения.КоличествоДанных = ПараметрыВыполнения.КоличествоДанных + КоличествоДанных;
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоДанных);
	
	Возврат (КоличествоДанных <> 0);
	
КонецФункции

Функция ПараметрыВыполнения()

	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("КонецПериода", '000101010000');
	ПараметрыВыполнения.Вставить("СписокОрганизаций", Новый Массив);
	ПараметрыВыполнения.Вставить("ВернутьДокументыКОтражению", Истина);
	ПараметрыВыполнения.Вставить("СформироватьЗадания", Истина);
	ПараметрыВыполнения.Вставить("УдалитьЗадания", Истина);
	ПараметрыВыполнения.Вставить("ИмяРегистраЗаданий", Неопределено);
	ПараметрыВыполнения.Вставить("НомерДоРасчета", 0);
	ПараметрыВыполнения.Вставить("ВыполнитьПроверку", Ложь);
	ПараметрыВыполнения.Вставить("МенеджерВременныхТаблиц", Неопределено);
	ПараметрыВыполнения.Вставить("КоличествоДанных", 0);

	СписокОбъектов = Новый ТаблицаЗначений();
	СписокОбъектов.Колонки.Добавить("ОбъектУчета", Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
	СписокОбъектов.Колонки.Добавить("НачалоПериода", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ПараметрыВыполнения.Вставить("СписокОбъектов", СписокОбъектов);

	Возврат ПараметрыВыполнения;
	
КонецФункции

#КонецОбласти

#Область Прочее

Процедура ОпределитьИзмененияДляФормированияЗаданий(МенеджерВременныхТаблиц)
	
	СписокЗапросов = Новый Массив;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ТаблицаИзмененийПрочиеРасходы") <> Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Период            КАК Период,
		|	Таблица.Организация       КАК Организация,
		|	Таблица.Регистратор       КАК Документ
		|ПОМЕСТИТЬ ПрочиеРасходы_ЗаданияКЗакрытиюРасходовОтВыбытияОСИзменение
		|ИЗ
		|	ТаблицаИзмененийПрочиеРасходы КАК Таблица
		|ГДЕ
		|	Таблица.СтатьяРасходов В (
		|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС),
		|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС))
		|	И НЕ Таблица.Регистратор ССЫЛКА Документ.ПередачаОСВАренду2_4";
	
		СписокЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли;

	Если СписокЗапросов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов,  ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПодготовитьВспомогательныеДанные(СписокЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 0
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОсновноеСредство,
	|	ЛОЖЬ КАК НедвижимоеИмущество
	|
	|ПОМЕСТИТЬ ВспомогательныеДанные";
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество КАК НедвижимоеИмущество
	|
	|ПОМЕСТИТЬ ВспомогательныеДанные
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&КонецПериода,
	|			Организация В (&СписокОрганизаций)
	|				И ОсновноеСредство В (
	|					ВЫБРАТЬ
	|						ВыбытиеОС.ОсновноеСредство
	|					ИЗ
	|						ВыбытиеОС КАК ВыбытиеОС)) КАК ПорядокУчетаОСБУ
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство";
	
	//-- Локализация

	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура УстановитьПризнакВыполненияОперации(ДокументОбъект) Экспорт
	
	ДокументОбъект.ДополнительныеСвойства.Вставить(ИмяОперации(), Истина);
	
КонецПроцедуры

Функция МаксимальноеКоличествоЗаданий()

	Возврат 1;

КонецФункции

Функция РазмерПорцииДанных()
	
	Возврат 100;
	
КонецФункции

Функция ИмяОперации()
	Возврат "ЗакрытиеРасходовОтВыбытияОС";
КонецФункции

#КонецОбласти

#КонецОбласти
