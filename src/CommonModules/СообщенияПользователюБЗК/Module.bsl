#Область СлужебныйПрограммныйИнтерфейс

// АПК:299-выкл Использование методов служебного API не контролируется
// АПК:581-выкл

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать одноименный метод в модуле СообщенияБЗК.
// Сообщает об ошибке заполнения в реквизите объекта и включает флажок Отказ.
//
// Параметры:
//   Отказ        - Булево        - Флажок отказа, который включается в данной процедуре.
//   Объект       - ЛюбаяСсылка,
//                  ЛюбойОбъект   - Объект, в котором обнаружена ошибка.
//   ИмяРеквизита - Строка        - Имя реквизита, в котором обнаружена ошибка.
//   Текст        - Строка        - Текст ошибки.
//
Процедура СообщитьОбОшибкеВОбъекте(Отказ, Объект, ИмяРеквизита, Текст) Экспорт
	Отказ = Истина;
	СообщениеОбъекта(Текст, Объект, ИмяРеквизита).Сообщить();
КонецПроцедуры

// Устарела. Следует использовать одноименный метод в модуле СообщенияБЗК.
// Сообщает об ошибке заполнения в реквизите объекта и включает флажок Отказ.
//
// Параметры:
//   Отказ        - Булево                 - Флажок отказа, который включается в данной процедуре.
//   Объект       - ЛюбаяСсылка,
//                  ЛюбойОбъект            - Объект, в котором обнаружена ошибка.
//   ИмяТаблицы   - Строка                 - Имя табличной части.
//   Строка       - Строка табличной части - Строка табличной части.
//   ИмяРеквизита - Строка                 - Имя реквизита строки табличной части.
//   Текст        - Строка                 - Текст ошибки. Если не указан, то будет сформирован стандартный текст ошибки.
//
Процедура СообщитьОбОшибкеВСтрокеТаблицы(Отказ, Объект, ИмяТаблицы, Строка, ИмяРеквизита, Текст) Экспорт
	Отказ = Истина;
	ПутьКРеквизиту = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТаблицы, Строка.НомерСтроки, ИмяРеквизита);
	СообщениеОбъекта(Текст, Объект, ПутьКРеквизиту).Сообщить();
КонецПроцедуры

// Устарела. Следует использовать одноименный метод в модуле ПроверкиБЗК.
// Проверяет заполнение реквизита, в случае незаполненности включает флажок Отказ и сообщает об ошибке пользователю.
//
// Параметры:
//   Отказ        - Булево      - Флажок отказа, который включается в случае незаполненности реквизита.
//   Объект       - ЛюбойОбъект - Проверяемый объект.
//   ИмяРеквизита - Строка      - Проверяемый реквизит.
//   Текст        - Строка      - Текст ошибки. Если не указан, то будет сформирован стандартный текст ошибки.
//
Процедура ПроверитьЗаполнениеРеквизитаОбъекта(Отказ, Объект, ИмяРеквизита, Знач Текст = "") Экспорт
	Если Не ЗначениеЗаполнено(Объект[ИмяРеквизита]) Тогда
		Если Текст = "" Тогда
			Текст = СтрШаблон(
				НСтр("ru = 'Не заполнено поле ""%1"".';
					|en = 'Field %1 is required.'"),
				Объект.Метаданные().Реквизиты[ИмяРеквизита].Представление());
		КонецЕсли;
		СообщитьОбОшибкеВОбъекте(Отказ, Объект, ИмяРеквизита, Текст);
	КонецЕсли;
КонецПроцедуры

// Устарела. Следует использовать одноименный метод в модуле ПроверкиБЗК.
// Проверяет заполнение реквизита, в случае незаполненности включает флажок Отказ и сообщает об ошибке пользователю.
//
// Параметры:
//   Отказ        - Булево      - Флажок отказа, который включается в случае незаполненности реквизита.
//   Объект       - ЛюбойОбъект - Проверяемый объект.
//   ИмяРеквизита - Строка      - Проверяемый реквизит типа "Адрес электронной почты".
//
Процедура ПроверитьЗаполнениеЭлектроннойПочтыОбъекта(Отказ, Объект, ИмяРеквизита) Экспорт
	Если Не ЗначениеЗаполнено(Объект[ИмяРеквизита]) Тогда
		Текст = СтрШаблон(
			НСтр("ru = 'Не заполнен %1.';
				|en = '%1 is required.'"),
			Объект.Метаданные().Реквизиты[ИмяРеквизита].Представление());
		СообщитьОбОшибкеВОбъекте(Отказ, Объект, ИмяРеквизита, Текст);
	ИначеЕсли Не ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Объект[ИмяРеквизита], Истина) Тогда
		Текст = СтрШаблон(
			НСтр("ru = '%1 заполнен неверно.';
				|en = '%1 is incorrectly filled in.'"),
			Объект.Метаданные().Реквизиты[ИмяРеквизита].Представление());
		СообщитьОбОшибкеВОбъекте(Отказ, Объект, ИмяРеквизита, Текст);
	КонецЕсли;
КонецПроцедуры

// Устарела. Следует использовать одноименный метод в модуле ПроверкиБЗК.
// Проверяет заполнение реквизита, в случае незаполненности включает флажок Отказ и сообщает об ошибке пользователю.
//
// Параметры:
//   Отказ        - Булево      - Флажок отказа, который включается в случае незаполненности реквизита.
//   Объект       - ЛюбойОбъект            - Проверяемый объект.
//   Строка       - Строка табличной части - Проверяемая строка табличной части.
//   ИмяТаблицы   - Строка                 - Имя табличной части.
//   Строка       - Строка табличной части - Строка табличной части.
//   ИмяРеквизита - Строка                 - Имя реквизита строки табличной части.
//   Текст        - Строка                 - Текст ошибки. Если не указан, то будет сформирован стандартный текст ошибки.
//
Процедура ПроверитьЗаполнениеРеквизитаСтрокиТаблицы(Отказ, Объект, ИмяТаблицы, Строка, ИмяРеквизита, Знач Текст = "") Экспорт
	Если Не ЗначениеЗаполнено(Строка[ИмяРеквизита]) Тогда
		Если Текст = "" Тогда
			Текст = СтрШаблон(
				НСтр("ru = 'Не заполнено поле ""%1"".';
					|en = 'Field %1 is required.'"),
				Объект.Метаданные().ТабличныеЧасти[ИмяТаблицы].Реквизиты[ИмяРеквизита].Представление());
		КонецЕсли;
		СообщитьОбОшибкеВСтрокеТаблицы(Отказ, Объект, ИмяТаблицы, Строка, ИмяРеквизита, Текст);
	КонецЕсли;
КонецПроцедуры

// Устарела. Следует использовать СообщенияБЗК.СообщитьОПроблеме.
// Возвращает сообщение об ошибке заполнения в реквизите объекта.
//
// Параметры:
//   Текст  - Строка      - Текст сообщения.
//   Объект - ЛюбаяСсылка,
//            ЛюбойОбъект - Объект, в котором обнаружена ошибка.
//   Поле   - Строка      - Полное имя реквизита, в котором обнаружена ошибка.
//
// Возвращаемое значение:
//   СообщениеПользователю - Сообщение об ошибке.
//
Функция СообщениеОбъекта(Текст, Объект, Поле = "") Экспорт
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = Текст;
	Сообщение.Поле = Поле;
	
	Если СериализацияБЗК.ЭтоТипОбъекта(XMLТипЗнч(Объект)) Тогда
		Сообщение.УстановитьДанные(Объект);
	Иначе
		Сообщение.КлючДанных = Объект;
	КонецЕсли;
	
	Возврат Сообщение;
КонецФункции

// Устарела. Следует использовать одноименный метод в модуле ПроверкиБЗК.
// Проверяет корректность заполнения начала и окончание периода в строке таблицы.
//
// Параметры:
//   Отказ - Булево - Флажок отказа, который будет включен в случае ошибки.
//   Объект - ЛюбаяСсылка, ЛюбойОбъект - Проверяемый объект.
//   ИмяТаблицы - Строка - Имя табличной части.
//   Строка - Строка табличной части - Строка таблицы.
//   ИмяПоляДатыНачала - Строка - Имя реквизита строки табличной части, в котором хранится дата начала периода.
//   ИмяПоляДатыОкончания - Строка - Имя реквизита строки табличной части, в котором хранится дата окончания.
//   ПредставлениеВРодительномПадеже - Строка - Представление (заголовок) периода в родительном падеже.
//
// Возвращаемое значение:
//   Булево - Признак того, что поля успешно прошли проверку.
//       Возвращает Ложь если была выявлена ошибка.
//
Функция ПроверитьПериодВСтрокеТаблицы(Отказ, Объект, ИмяТаблицы, Строка, ИмяПоляДатыНачала, ИмяПоляДатыОкончания, ПредставлениеВРодительномПадеже) Экспорт
	Дата1 = Строка[ИмяПоляДатыНачала];
	Дата2 = Строка[ИмяПоляДатыОкончания];
	Если Не ЗначениеЗаполнено(Дата1) Тогда
		Текст = СтрШаблон(НСтр("ru = 'Не заполнена дата начала %1.';
								|en = 'Start date %1 is empty.'"), ПредставлениеВРодительномПадеже);
		СообщитьОбОшибкеВСтрокеТаблицы(Отказ, Объект, ИмяТаблицы, Строка, ИмяПоляДатыНачала, Текст);
		Возврат Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(Дата2) Тогда
		Текст = СтрШаблон(НСтр("ru = 'Не заполнена дата окончания %1.';
								|en = 'End date %1 is not filled in.'"), ПредставлениеВРодительномПадеже);
		СообщитьОбОшибкеВСтрокеТаблицы(Отказ, Объект, ИмяТаблицы, Строка, ИмяПоляДатыОкончания, Текст);
		Возврат Ложь;
	ИначеЕсли Дата1 > Дата2 Тогда
		Текст = СтрШаблон(НСтр("ru = 'Дата начала %1 больше даты окончания.';
								|en = 'Start date %1 is greater than the end date.'"), ПредставлениеВРодительномПадеже);
		СообщитьОбОшибкеВСтрокеТаблицы(Отказ, Объект, ИмяТаблицы, Строка, ИмяПоляДатыНачала, Текст);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

// Устарела. Следует использовать СообщенияБЗК.СообщитьОПроблеме.
// Выводит сообщение пользователю.
//
// Параметры:
//   Текст - Строка - Текст сообщения.
//
Процедура СообщитьПользователю(Текст) Экспорт
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = Текст;
	Сообщение.Сообщить();
КонецПроцедуры

#КонецОбласти

// АПК:581-вкл
// АПК:299-вкл

#КонецОбласти

