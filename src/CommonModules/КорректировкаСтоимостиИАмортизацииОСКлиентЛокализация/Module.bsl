////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Корректировка стоимости и амортизации ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область ФормаДокумента

// 
// Параметры:
// 	Элемент - ПолеФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ПриИзмененииРеквизита(Элемент, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьИзменениеРеквизита = Истина;
	
	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если Элемент = Элементы.ВидИмущества
		ИЛИ Элемент = Элементы.СрокИспользованияДляВычисленияАмортизацииБУ
		ИЛИ Элемент = Элементы.СрокПолезногоИспользованияНУ 
		ИЛИ Элемент = Элементы.ФактическийСрокИспользованияДо2009 Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", Элемент.Имя);
		
	ИначеЕсли Элемент = Элементы.ПараметрыЗаПериодНУ Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "ПараметрыЗаПериод");
	
	КонецЕсли;
	
	//-- Локализация
	
	Если ПродолжитьИзменениеРеквизита Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
			Форма, 
			Элемент.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
	
	КонецЕсли;
	
КонецПроцедуры

// 
// Параметры:
// 	Команда - КомандаФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ПриВыполненииКоманды(Команда, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьВыполнениеКоманды = Истина;
	Объект = Форма.Объект;
	
	//++ Локализация
	
	Если Команда.Имя = Форма.Команды.ЗаполнитьПараметрыНУ.Имя Тогда
	
		ПродолжитьВыполнениеКоманды = Ложь;
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("Форма", Форма);
		ДополнительныеПараметры.Вставить("ИмяКоманды", Команда.Имя);
		
		ТекстВопроса = НСтр("ru = 'Перезаполнить параметры и рассчитать амортизацию?';
							|en = 'Refill financial details and calculate depreciation?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПараметрыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
	ИначеЕсли Команда.Имя = Форма.Команды.КопироватьЗначенияПараметровНУ.Имя Тогда
	
		ПродолжитьВыполнениеКоманды = Ложь;
		КопироватьЗначенияПараметров(Форма, "ПараметрыЗаПериодНУ", "КопироватьЗначенияПараметровНУ");
		
	ИначеЕсли Команда.Имя = Форма.Команды.РассчитатьАмортизациюНУ.Имя Тогда

		ПродолжитьВыполнениеКоманды = Ложь;
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("Форма", Форма);
		ДополнительныеПараметры.Вставить("ИмяКоманды", Команда.Имя);
	
		ТекстВопроса = НСтр("ru = 'Рассчитать амортизацию за весь период?';
							|en = 'Calculate depreciation for the whole period?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("РассчитатьАмортизациюЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли Команда.Имя = Форма.Команды.ОткрытьИсправления.Имя Тогда

		ПродолжитьВыполнениеКоманды = Ложь;
		
		СписокОС = Новый Массив;
		Для Каждого ДанныеСтроки Из Объект.ОС Цикл
			СписокОС.Добавить(ДанныеСтроки.ОсновноеСредство);
		КонецЦикла;
		
		ВнеоборотныеАктивыКлиентЛокализация.ОткрытьВзаимозависимыеИсправленияИмущественныхНалогов(
			Объект.Организация, 
			Объект.НачалоПериода, 
			Объект.Дата, 
			СписокОС);
			
	КонецЕсли; 
	
	//-- Локализация
	
	Если ПродолжитьВыполнениеКоманды Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			Форма, 
			Команда.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
			
	КонецЕсли; 
	
КонецПроцедуры

Процедура ТабличноеПолеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Если Поле = Элементы.ПараметрыЗаПериодНУНеРассчитыватьАмортизациюНУ
		И НЕ Форма.ТолькоПросмотр Тогда

		ДанныеСтроки = Объект.ПараметрыЗаПериодНУ.НайтиПоИдентификатору(ВыбраннаяСтрока);
		ДанныеСтроки.НеРассчитыватьАмортизациюНУ = НЕ ДанныеСтроки.НеРассчитыватьАмортизациюНУ;
		
		Форма.Модифицированность = Истина;
		
	КонецЕсли;
			
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

Процедура ЗаполнитьПараметрыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
			
	ПараметрыОбработки = Новый Структура();
	ПараметрыОбработки.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "ПараметрыЗаПериод");
	
	ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
		ДополнительныеПараметры.Форма, 
		ДополнительныеПараметры.ИмяКоманды, 
		Истина,
		ПараметрыОбработки);
		
КонецПроцедуры

Процедура РассчитатьАмортизациюЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			ДополнительныеПараметры.Форма, 
			ДополнительныеПараметры.ИмяКоманды, 
			Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура КопироватьЗначенияПараметров(Форма, ИмяТаблицы, ИмяКоманды)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ТекущиеДанные = Элементы.ПараметрыЗаПериодНУ.ТекущиеДанные;
	ПараметрыЗаПериод = Объект.ПараметрыЗаПериодНУ;
	
	Если ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать строку, параметры которой, нужно скопировать';
										|en = 'Select the line whose parameters you need to copy'"));
		Возврат;
	КонецЕсли;
	
	СписокДат = Новый Массив;
	Для Каждого ДанныеСтроки Из ПараметрыЗаПериод Цикл
		Если ДанныеСтроки.Дата <> ТекущиеДанные.Дата Тогда
			СписокДат.Добавить(ДанныеСтроки.Дата);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокДат", СписокДат);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", Форма);
	ДополнительныеПараметры.Вставить("ИмяТаблицы", ИмяТаблицы);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КопироватьЗначенияПараметровЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Документ.КорректировкаСтоимостиИАмортизацииОС.Форма.ВыборСтрокПараметры", ПараметрыФормы,,,,, ОписаниеОповещения);
	
КонецПроцедуры

Процедура КопироватьЗначенияПараметровЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Элементы = ДополнительныеПараметры.Форма.Элементы;
	Объект = ДополнительныеПараметры.Форма.Объект;

	ТекущиеДанные = Элементы.ПараметрыЗаПериодНУ.ТекущиеДанные;
	ПараметрыЗаПериод = Объект.ПараметрыЗаПериодНУ;
	НеЗаполняемыеПоля = "Дата,АмортизацияНУ";
	
	Если Результат = Неопределено ИЛИ ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ДанныеСтроки Из ПараметрыЗаПериод Цикл
		Если Результат.Найти(ДанныеСтроки.Дата) <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, ТекущиеДанные,, НеЗаполняемыеПоля);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "ПараметрыЗаПериод");
	
	ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
		ДополнительныеПараметры.Форма, 
		ДополнительныеПараметры.ИмяТаблицы, 
		Ложь,
		ПараметрыОбработки);
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти