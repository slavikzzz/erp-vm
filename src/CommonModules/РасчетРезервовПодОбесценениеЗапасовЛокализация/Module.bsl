
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.РаспределениеПрочихЗатрат - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Регистрирует документ к отражению в регламентированном учете.
// 
// Параметры:
//	Документ - ДокументСсылка.РасчетРезервовПодОбесценениеЗапасов - документ к отражению.
//
Процедура ЗарегистрироватьОтражениеДокумента(Документ) Экспорт
	
	//++ Локализация
	РеглУчетПроведениеСервер.ЗарегистрироватьОтражениеДокумента(Документ,
		Перечисления.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете);
	//-- Локализация
				
КонецПроцедуры

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстыОтражения = Новый Массив;
	
	//++ Локализация
	
	#Область ФормированиеВыбытиеВосстановлениеРезервов // Формирование / выбытие / восстановление резервов (Дт <90, 91> :: Кт 14)

	ТекстЗапроса =
	"ВЫБРАТЬ //// Формирование / выбытие / восстановление резервов (Дт <90, 91> :: Кт 14)
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	-Строки.РезервПодОбесценениеРегл КАК Сумма,
	|	-Строки.РезервПодОбесценениеУпр КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА Строки.ВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаПоПатенту))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажЕНВД)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.ГруппаФинансовогоУчета КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	ЕСТЬNULL(ТаблицаНалогообложенияПрибыли.ВариантНалогообложенияПрибыли, НЕОПРЕДЕЛЕНО) КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.РезервПодОбесценениеРегл КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПодОбесценениеПроизводства)
	|		КОГДА Строки.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПодОбесценениеПереданные)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПодОбесценениеТМЦ)
	|	КОНЕЦ КАК ВидСчетаКт,
	|
	|	ВЫБОР
	|		КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ТОГДА Строки.ГруппаПродукции
	|		ИНАЧЕ Строки.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	ВЫБОР
	|		КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ТОГДА Строки.ПодразделениеАналитики
	|		КОГДА Строки.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику))
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Строки.Склад
	|	КОНЕЦ КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.ПодразделениеАналитики КАК ПодразделениеКт,
	|	ЕСТЬNULL(Строки.НаправлениеДеятельностиНазначения,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА Строки.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
	|		ТОГДА Строки.ГруппаПродукции
	|		ИНАЧЕ Строки.Склад
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА Строки.РазделУчета В (
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику),
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути),
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию),
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам),
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути))
	|		ТОГДА Строки.Контрагент
	|		ИНАЧЕ Строки.ТипЗатрат
	|	КОНЕЦ КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.РезервПодОбесценениеРегл КАК СуммаВРКт,
	|	
	|	""Формирование резервов под обесценение запасов"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТСебестоимостьТоваров КАК Строки
	|	ПО
	|		ДокументыКОтражению.Ссылка = Строки.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РаздельныйУчет_НастройкиНалогообложенияПрибыли КАК ТаблицаНалогообложенияПрибыли
	|	ПО 
	|		ТаблицаНалогообложенияПрибыли.Период = Строки.Период
	|		И ТаблицаНалогообложенияПрибыли.Организация = Строки.Организация
	|		И ТаблицаНалогообложенияПрибыли.Подразделение = Строки.Подразделение
	|		И ТаблицаНалогообложенияПрибыли.ОбъектУчета = Строки.Номенклатура
	|		И ТаблицаНалогообложенияПрибыли.НаправлениеДеятельности = Строки.НаправлениеДеятельности";
	
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти

	//-- Локализация
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	ТекстыОтражения = Новый Массив;
	
	//++ Локализация
	
	#Область ВТСебестоимостьТоваров
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Строки.Регистратор КАК Регистратор,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	Строки.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Строки.РазделУчета КАК РазделУчета,
	|	Строки.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА ЕСТЬNULL(Строки.ВидЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЕСТЬNULL(Аналитика.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|		ТОГДА Аналитика.Договор.Подразделение
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|		ТОГДА Аналитика.Подразделение
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|		ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПодразделениеАналитики,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.Партия) = ТИП(Справочник.ПартииПроизводства)
	|		ТОГДА ВЫРАЗИТЬ(Строки.Партия КАК Справочник.ПартииПроизводства).НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	Назначения.НаправлениеДеятельности КАК НаправлениеДеятельностиНазначения,
	|	Аналитика.СкладскаяТерритория КАК Склад,
	|	Строки.АналитикаФинансовогоУчета КАК ГруппаПродукции,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА Аналитика.ТипМестаХранения В (ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер))
	|		ТОГДА Аналитика.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА Строки.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	КОНЕЦ КАК ТипЗатрат,
	|	Строки.РезервПодОбесценениеРегл КАК РезервПодОбесценениеРегл,
	|	Строки.РезервПодОбесценениеУпр КАК РезервПодОбесценениеУпр
	|ПОМЕСТИТЬ ВТСебестоимостьТоваров
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.СебестоимостьТоваров КАК Строки
	|	ПО ДокументыКОтражению.Ссылка = Строки.Регистратор
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.Активность
	|		И Строки.РасчетСебестоимости
	|		И НЕ Строки.РасчетПартий
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеРезерваПодОбесценениеЗапасов)
	|		И Строки.Количество = 0
	|		И (Строки.РезервПодОбесценениеРегл < 0
	|		ИЛИ Строки.РезервПодОбесценениеУпр < 0)
	|		И НЕ Строки.Сторно
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО Строки.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.Назначения КАК Назначения
	|	ПО Аналитика.Назначение = Назначения.Ссылка";

	ТекстыОтражения.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВТПолученияНалогообложенияПрибыли
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	Строки.Подразделение КАК Подразделение,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Строки.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТПолученияНалогообложенияПрибыли
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТСебестоимостьТоваров КАК Строки
	|	ПО
	|		ДокументыКОтражению.Ссылка = Строки.Регистратор
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО 
	|		УчетнаяПолитикаОрганизаций.Ссылка = Строки.Регистратор
	|		И УчетнаяПолитикаОрганизаций.Организация = Строки.Организация
	|		И УчетнаяПолитикаОрганизаций.Период = Строки.Период
	|		И УчетнаяПолитикаОрганизаций.РаздельныйУчетПоНалогуНаПрибыль";

	ТекстыОтражения.Добавить(ТекстЗапроса);

	#КонецОбласти
	
	#Область РаздельныйУчет_НастройкиНалогообложенияПрибыли

	ПараметрыПолученияНалогообложенияПрибыли = РаздельныйУчетПоНалогуНаПрибыль.НовыйПараметрыПолученияТаблицыНастроекНалогообложенияПрибыли();
	ПараметрыПолученияНалогообложенияПрибыли.ИмяТаблицы = "ВТПолученияНалогообложенияПрибыли";
	ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_Период = "Период";
	ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_Организация = "Организация";
	ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_Подразделение = "Подразделение";
	ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_НаправлениеДеятельности = "НаправлениеДеятельности";
	ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_ОбъектУчета = "Номенклатура";
	ТекстыОтражения.Добавить(РаздельныйУчетПоНалогуНаПрибыль.ТекстЗапроса_НастройкиНалогообложенияПрибыли(ПараметрыПолученияНалогообложенияПрибыли));
	ТекстыОтражения.Добавить("УНИЧТОЖИТЬ ВТПолученияНалогообложенияПрибыли");

	#КонецОбласти

	// Добавим пустой запрос, для того чтобы последний запрос тоже заканчивался на разделитель пакета запросов:
	ТекстыОтражения.Добавить("");
	//-- Локализация
	ТекстЗапроса = СтрСоединить(ТекстыОтражения, ОбщегоНазначения.РазделительПакетаЗапросов());
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ НЕ УТ

	//++ Локализация
	РеглУчетПроведениеСервер.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- Локализация

	//-- НЕ УТ
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
