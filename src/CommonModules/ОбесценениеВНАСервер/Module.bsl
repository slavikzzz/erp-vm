#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ.
//  Свойства - См. ПроведениеДокументов.СвойстваДокумента.
//
// Возвращаемое значение:
//  Структура - См. ПроведениеДокументов.ПараметрыУчетногоМеханизма.
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ОбесценениеВНА);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.СоставЕГДС);
	
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.ОбесценениеВНА);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыСведений.СоставЕГДС);
		
	КонецЕсли;
	
	// Контроль даты запрета
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		Параметры.КонтрольныеРегистрыДатаЗапрета.Добавить(Метаданные.РегистрыНакопления.ОбесценениеВНА);
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Возвращает тексты запросов для сторнирования движений при исправлении документов.
// 
// Параметры:
// 	МетаданныеДокумента - ОбъектМетаданныхДокумент - Метаданные документа, который проводится.
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение - Соответствие полного имени регистра тексту запроса сторнирования:
//   * Ключ - Строка - имя таблицы;
//   * Значение - Строка - текст запроса
//
Функция ТекстыЗапросовСторнирования(МетаданныеДокумента) Экспорт
	
	ТекстыЗапросов = Новый Соответствие();
	
	Возврат ТекстыЗапросов;
	
КонецФункции


// Процедура формирования движений по подчиненным регистрам Обесценения ВНА.
//
// Параметры:
//   ТаблицыДляДвижений - Структура - таблицы данных документа.
//   Движения - КоллекцияДвижений - коллекция наборов записей движений документа.
//   Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, Метаданные.РегистрыНакопления.ОбесценениеВНА.Имя);
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, Метаданные.РегистрыСведений.СоставЕГДС.Имя);
	
КонецПроцедуры

// Процедура формирования движений по независимым регистрам основных средств.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа.
//	Документ - ДокументСсылка - ссылка на документ.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц документа.
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ЗаписатьДанные(ТаблицыДляДвижений, Документ, МенеджерВременныхТаблиц, Отказ) Экспорт

	Возврат;
	
КонецПроцедуры

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение - соответствие имен таблиц изменения регистров и текстов запросов:
//   * Ключ - Строка - имя таблицы;
//   * Значение - Строка - текст запроса
//
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	СоответствиеТекстовЗапросов.Вставить("ОбесценениеВНАИзменение", 
										  РегистрыНакопления.ОбесценениеВНА.ТекстЗапросаКонтрольДатыЗапрета(Запрос));
	
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

#Область ТекстыЗапросовЗаданийКЗакрытиюМесяца

// Дополняет текст запроса механизма формирования заданий закрытия месяца.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 	ТекстЗапроса - Строка - строка с текстом запроса.
// 	ТекстЗапросаВременныхТаблиц - Строка - строка с текстом запроса временных таблиц.
// 	ИменаВременныхТаблиц - Строка - массив имен создаваемых временных таблиц для последующего уничтожения.
//	Документ - ДокументСсылка, Структура -
Процедура ДополнитьТекстЗапросаЗаданийКЗакрытиюМесяца(Запрос, ТекстЗапроса, ТекстЗапросаВременныхТаблиц, ИменаВременныхТаблиц, Документ) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьОбесценениеВНА") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТипЗнч(Документ) = Тип("Структура") 
		ИЛИ Документ.Свойство("Дата") И ЗначениеЗаполнено(Документ.Дата) Тогда
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Документ.Дата));
	Иначе
		Возврат;
	КонецЕсли;
	
	СоответствиеЗапросов = СоответствиеЗапросовКонтрольнымРегистрам(Запрос);
	
	Для Каждого ЭлементСоответствия Из СоответствиеЗапросов Цикл
		ЗакрытиеМесяцаСервер.ДополнитьНазванияТаблицДляЗаданий(Запрос, ЭлементСоответствия.Ключ);
		ЗакрытиеМесяцаСервер.ДополнитьТекстЗапросаЗаданий(ЭлементСоответствия.Ключ,
			ЭлементСоответствия.Значение,
			Запрос.МенеджерВременныхТаблиц.Таблицы,
			ТекстЗапроса,
			ТекстЗапросаВременныхТаблиц,
			ИменаВременныхТаблиц);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

// Формирует задания к закрытию месяца по регистрам ЗаданияКРасчетуАмортизацииОС,
// 													ЗаданияКРасчетуАмортизацииНМА,
// 													ЗаданияКФормированиюДвиженийПоВНА.
// 
// Параметры:
// 	Документ - ДокументОбъект -
// 	ДанныеТаблиц - см. ПроведениеДокументов.ДанныеТаблицСтаройСтруктуры.
Процедура СформироватьЗаданияКЗакрытиюМесяцаПоОСНМА(Документ, ДанныеТаблиц) Экспорт
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ТаблицаИзмененийОбесценениеВНА") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос =  Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Период", НачалоМесяца(ДобавитьМесяц(Документ.Дата, 1)));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Месяц,
	|	ТаблицаВНА.Организация,
	|	ЕСТЬNULL(ПакетыАмортизацииОС.НомерПакета, 0) КАК НомерПакета
	|ИЗ
	|	ТаблицаИзмененийОбесценениеВНА КАК ТаблицаВНА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ПО ТаблицаВНА.ВнеоборотныйАктив = ОбъектыЭксплуатации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизацииОС
	|		ПО ТаблицаВНА.ВнеоборотныйАктив = ПакетыАмортизацииОС.ОсновноеСредство
	|		И ТаблицаВНА.Организация = ПакетыАмортизацииОС.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Месяц,
	|	ТаблицаВНА.Организация КАК Организация,
	|	ЕСТЬNULL(ПакетыАмортизацииНМА.НомерПакета, 0) КАК НомерПакета
	|ИЗ
	|	ТаблицаИзмененийОбесценениеВНА КАК ТаблицаВНА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|		ПО ТаблицаВНА.ВнеоборотныйАктив = НематериальныеАктивы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизацииНМА
	|		ПО ТаблицаВНА.ВнеоборотныйАктив = ПакетыАмортизацииНМА.НематериальныйАктив
	|		И ТаблицаВНА.Организация = ПакетыАмортизацииНМА.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК Месяц,
	|	ТаблицаВНА.Организация КАК Организация,
	|	ТаблицаВНА.ВнеоборотныйАктив КАК ОбъектУчета
	|ИЗ
	|	ТаблицаИзмененийОбесценениеВНА КАК ТаблицаВНА
	|";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РегистрыСведений.ЗаданияКРасчетуАмортизацииОС.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса[0].Выбрать());
	РегистрыСведений.ЗаданияКРасчетуАмортизацииНМА.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса[1].Выбрать());
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоВНА.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса[2].Выбрать());
	
КонецПроцедуры

#КонецОбласти

#Область ЗакрытиеМесяца

#Область СозданиеЭтаповЗакрытияМесяца

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// Вызывается из ЗакрытиеМесяцаСервер.ЗаполнитьОписаниеЭтаповЗакрытияМесяца(ТаблицаЭтапов).
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца).
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_ФормированиеДвиженийПоОбесценениюВНА(ТаблицаЭтапов, ТекущийРодитель) Экспорт

	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов,
															ТекущийРодитель,
															Перечисления.ОперацииЗакрытияМесяца.ОбесценениеВНА);
	
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Сформировать';
										|en = 'Generate'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ОбесценениеВНАСервер.Использование_ФормированиеДвиженийПоОбесценениюВНА");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"ОбесценениеВНАСервер.Выполнить_ФормированиеДвиженийПоОбесценениюВНА");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭтаповЗакрытияМесяца

#Область Этап_ФормированиеДвиженийПоОбесценениюВНА

// Определяет статус операции "ФормированиеДвиженийПоОбесценениюВНА".
// 
// Параметры:
//  ПараметрыОбработчика - Структура - Параметры обработчика
Процедура Использование_ФормированиеДвиженийПоОбесценениюВНА(ПараметрыОбработчика) Экспорт

	// При отключенном использовании ВНА операция не имеет смысла.
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеОтключено(
			ПараметрыОбработчика,
			НСтр("ru = 'Учет внеоборотных активов отключен.';
				|en = 'Accounting of fixed assets disabled.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
		Возврат;
		
	КонецЕсли;
		
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьОбесценениеВНА") Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеОтключено(
			ПараметрыОбработчика,
			НСтр("ru = 'Учет обесценения внеоборотных активов отключен.';
				|en = 'Accounting of fixed asset impairment is disabled.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
		Возврат;
		
	КонецЕсли;
		
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика, Истина);
	
КонецПроцедуры

// Выполняет операцию "ФормированиеДвиженийПоОбесценениюВНА".
// 
// Параметры:
//  ПараметрыОбработчика - Структура - Параметры обработчика
Процедура Выполнить_ФормированиеДвиженийПоОбесценениюВНА(ПараметрыОбработчика) Экспорт
		
	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	
 	НачалоПериода = ЗакрытиеМесяцаСервер.НачалоРасчета(ПараметрыОбработчика.ДанныеЭтапа.Код, ПараметрыРасчета.КонецПериода,,
		ПараметрыРасчета.МассивОрганизаций);
		
	ЕстьОшибки = Ложь;
	
	ЗамерУдельный = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
					"ОбщийМодуль.ОбесценениеВНАСервер.ОбесценениеОбъектовВНА");
	ПолноеКоличествоДанных = 0;
	
	ЗамерПодокументно = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
	"ОбщийМодуль.ОбесценениеВНАСервер.ЗакрытиеМесяцаПодокументно");
	КоличествоДокументов = 0;
	
	Пока НачалоПериода <= ПараметрыРасчета.КонецПериода Цикл
		
		ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ЗакрытиеМесяца." 
			+ ОбщегоНазначения.ИмяЗначенияПеречисления(ПараметрыОбработчика.ДанныеЭтапа.Код));
		
		ОкончаниеПериода = КонецМесяца(НачалоПериода);
		ДоступныеОрганизации = ЗакрытиеМесяцаСервер.ДоступныеДляРасчетаОрганизации(НачалоПериода, ПараметрыРасчета.МассивОрганизаций);
		НомерЗаданияДоРасчета = ЗакрытиеМесяцаСервер.УвеличитьНомерЗадания();
		
		// Этап 1. Подготовка работы с заданиями.
		
		НачатьТранзакцию();
		
		Попытка
			ЗакрытиеМесяцаСервер.ЗаблокироватьРегистрЗаданий(НомерЗаданияДоРасчета, ДоступныеОрганизации,
				ПараметрыОбработчика.ДанныеЭтапа.Код);
			ДанныеКРасчетуЗаМесяц = ЗакрытиеМесяцаСервер.ЗаданияКРасчетуЗаМесяц(НачалоПериода, ОкончаниеПериода, НомерЗаданияДоРасчета,
				ДоступныеОрганизации, ПараметрыОбработчика.ДанныеЭтапа.Код);
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр(
					"ru = 'При выполнении расчета за период %1 произошла ошибка:
					|%2';
					|en = 'An error occurred when calculating for the %1 period:
					|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
				РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(НачалоПериода),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗакрытиеМесяцаСервер.ЗафиксироватьНаличиеПроблемыПриВыполненииРасчета(ПараметрыОбработчика, ТекстОшибки,
				ДоступныеОрганизации, НачалоПериода);
		КонецПопытки;
		
		// Этап 2. Расчет по организациям и периоду.
		
		НачатьТранзакцию();
		
		Попытка
			
			Запрос = Новый Запрос();
			Запрос.МенеджерВременныхТаблиц = ДанныеКРасчетуЗаМесяц.ВременныеТаблицы;
			Запрос.Текст = 
			"ВЫБРАТЬ 
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КэшГраниц.Документ) КАК Количество
			|ИЗ КэшГраниц КАК КэшГраниц
			|";
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				КоличествоДанных = Выборка.Количество;
				КоличествоДокументов = КоличествоДокументов + Выборка.Количество;
			КонецЕсли;
			
			ВыполнитьРеклассификациюОбесценения(ДанныеКРасчетуЗаМесяц);
				
			ЗафиксироватьТранзакцию();
			
			Запрос.Текст = "ВЫБРАТЬ
			|	КОЛИЧЕСТВО(ОбесценениеВНА.ВнеоборотныйАктив) КАК ПолноеКоличествоДанных
			|ИЗ
			|	КэшГраниц КАК КэшГраниц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА КАК ОбесценениеВНА
			|		ПО КэшГраниц.Документ = ОбесценениеВНА.Регистратор";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ПолноеКоличествоДанных = ПолноеКоличествоДанных + Выборка.ПолноеКоличествоДанных;
			КонецЕсли;
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ЕстьОшибки = Истина;
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр(
					"ru = 'Выполнение обесценения ВНА за период %1 завершилось с ошибкой:
					|%2';
					|en = 'Fixed asset impairment for the %1 period is completed with an error:
					|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
				РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(НачалоПериода),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			ЗакрытиеМесяцаСервер.ЗафиксироватьНаличиеПроблемыПриВыполненииРасчета(ПараметрыОбработчика, ТекстОшибки,
				ДанныеКРасчетуЗаМесяц.Организация, НачалоПериода);
		КонецПопытки;
		
		
		Если ЕстьОшибки Тогда
			Прервать;
		КонецЕсли;
		
		// Этап 3. Завершение работы с заданиями.
		
		ЗакрытиеМесяцаСервер.УдалитьЗаданияКРасчетуЗаТекущийПериод(ПараметрыОбработчика, ДанныеКРасчетуЗаМесяц);
		
		НачалоПериода = ОкончаниеПериода + 1;
		
		ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоДанных/10);
			
	КонецЦикла;
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ЗамерУдельный, ПолноеКоличествоДанных);
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ЗамерПодокументно, КоличествоДокументов);
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти


#Область УправлениеИнтерфейсом

// Установить параметры выбора ЕГДС.
// Используется в документах ПеремещениеОС2_4 и ПеремещениеВНА2_4 для установки отбора владельца ЕГДС.
// 
// Параметры:
//  ЕГДС - ПолеФормы - ЕГДС.
//  Объект - ДокументОбъект.ПеремещениеОС2_4 - Документ.
Процедура УстановитьПараметрыВыбораЕГДС(ЕГДС, Объект) Экспорт
	
	Если ЗначениеЗаполнено(Объект.ОрганизацияПолучатель) Тогда
		ПутьКДанным = "Объект.ОрганизацияПолучатель";
	Иначе
		ПутьКДанным = "Объект.Организация";
	КонецЕсли;

	ОтборПоОрганизации = Новый Массив();
	ЭлементОтбораПоОрганизации = Новый СвязьПараметраВыбора("Отбор.Владелец", 
															 ПутьКДанным, 
															 РежимИзмененияСвязанногоЗначения.Очищать);
															 
	ОтборПоОрганизации.Добавить(ЭлементОтбораПоОрганизации);
	
	ЕГДС.СвязиПараметровВыбора = Новый ФиксированныйМассив(ОтборПоОрганизации);
	
КонецПроцедуры


// Получить ЕГДС ВНА на дату.
// 
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация.
//  ВнеоборотныйАктив - СправочникСсылка.ОбъектыЭксплуатации, СправочникСсылка.НематериальныеАктивы - Внеоборотный актив.
//  Дата - Дата
// 
// Возвращаемое значение:
//  СправочникСсылка.ЕдиницыГенерирующиеДенежныеСредства - ЕГДС ВНА на указанную дату.
Функция ПолучитьЕГДСВНАНаДату(Организация, ВнеоборотныйАктив, Дата) Экспорт
	
	ЕГДС = Справочники.ЕдиницыГенерирующиеДенежныеСредства.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоставЕГДССрезПоследних.ЕГДС КАК ЕГДС
	|ИЗ
	|	РегистрСведений.СоставЕГДС.СрезПоследних(&Дата, ВнеоборотныйАктив = &ВнеоборотныйАктив
	|	И Организация = &Организация) КАК СоставЕГДССрезПоследних";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ВнеоборотныйАктив", ВнеоборотныйАктив);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		Возврат ЕГДС;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.ЕГДС;
	КонецЦикла;

КонецФункции


// Установить видимость данных обесценения в отчете.
// При отключенной функциональной опции ИспользоватьОбесценениеВНА
// удаляет из отчета колонки с именами начинающимися на Обесценение.
// 
// Параметры:
//  НастройкиОсновнойСхемы - НастройкиКомпоновкиДанных - . 
Процедура УстановитьВидимостьДанныхОбесцененияВОтчете(НастройкиОсновнойСхемы) Экспорт
	
	Для Каждого ВеткаДереваНастроек Из НастройкиОсновнойСхемы.Выбор.Элементы Цикл

		ИспользоватьОбесценениеВНА = ПолучитьФункциональнуюОпцию("ИспользоватьОбесценениеВНА");

		Если ПолучитьФункциональнуюОпцию("ИспользоватьОбесценениеВНА") = Неопределено Тогда
			ИспользоватьОбесценениеВНА = Ложь;
		КонецЕсли;

		ОтключитьИспользованиеОбесценения(ВеткаДереваНастроек, ИспользоватьОбесценениеВНА);

	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаданияКЗакрытиюМесяца

Функция СоответствиеЗапросовКонтрольнымРегистрам(Запрос)
	
	СоответствиеТекстовЗапросов = Новый Соответствие();
	СоответствиеТекстовЗапросов.Вставить("СтоимостьОСИзменение", ТекстЗапросаСтоимостьОС(Запрос));
	СоответствиеТекстовЗапросов.Вставить("СтоимостьНМАИзменение", ТекстЗапросаСтоимостьНМА(Запрос));
	СоответствиеТекстовЗапросов.Вставить("АмортизацияОСИзменение", ТекстЗапросаАмортизацияОС(Запрос));
	СоответствиеТекстовЗапросов.Вставить("АмортизацияНМАИзменение", ТекстЗапросаАмортизацияНМА(Запрос));
	СоответствиеТекстовЗапросов.Вставить("ТаблицаИзмененийОбесценениеВНА", ТекстЗапросаОбесценениеВНАЗадания(Запрос));
	СоответствиеТекстовЗапросов.Вставить("СоставЕГДСИзменение", ТекстЗапросаСоставЕГДСИзменение(Запрос));
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

Функция ТекстЗапросаСтоимостьОС(Запрос)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ДокументыОбесценения.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ОбесценениеВНА) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	ДокументыОбесценения.Регистратор КАК Документ
	|ИЗ
	|	СтоимостьОСИзменение КАК Таблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА КАК ДокументыОбесценения
	|		ПО ДокументыОбесценения.Организация = Таблица.Организация
	|		И ДокументыОбесценения.ВнеоборотныйАктив = Таблица.ОсновноеСредство
	|		И ДокументыОбесценения.Период >= &НачалоПериода
	|		И ДокументыОбесценения.Активность
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ОбесценениеВНА) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ
	|ИЗ
	|	СтоимостьОСИзменение КАК Таблица 
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА.Остатки(&НачалоПериода, (Организация, ВнеоборотныйАктив) В
	|		(ВЫБРАТЬ
	|			ТаблицаОС.Организация,
	|			ТаблицаОС.ОсновноеСредство
	|		ИЗ
	|			СтоимостьОСИзменение КАК ТаблицаОС)) КАК ОбесценениеВНАОстатки
	|		ПО Таблица.Организация = ОбесценениеВНАОстатки.Организация
	|		И Таблица.ОсновноеСредство = ОбесценениеВНАОстатки.ВнеоборотныйАктив
	|	";

	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	Возврат СтруктураТекстовЗапросов
	
КонецФункции

Функция ТекстЗапросаСтоимостьНМА(Запрос)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ДокументыОбесценения.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ОбесценениеВНА) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	ДокументыОбесценения.Регистратор КАК Документ
	|ИЗ
	|	СтоимостьНМАИзменение КАК Таблица
	|	 ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА КАК ДокументыОбесценения
	|			ПО 	ДокументыОбесценения.Организация = Таблица.Организация
	|				И ДокументыОбесценения.ВнеоборотныйАктив = Таблица.НематериальныйАктив
	|				И ДокументыОбесценения.Период >= &НачалоПериода
	|				И ДокументыОбесценения.Активность
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ОбесценениеВНА) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ
	|ИЗ
	|	СтоимостьНМАИзменение КАК Таблица 
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА.Остатки(&НачалоПериода, (Организация, ВнеоборотныйАктив) В
	|		(ВЫБРАТЬ
	|			ТаблицаНМА.Организация,
	|			ТаблицаНМА.НематериальныйАктив
	|		ИЗ
	|			СтоимостьНМАИзменение КАК ТаблицаНМА)) КАК ОбесценениеВНАОстатки
	|		ПО Таблица.Организация = ОбесценениеВНАОстатки.Организация
	|		И Таблица.НематериальныйАктив = ОбесценениеВНАОстатки.ВнеоборотныйАктив
	|";

	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	Возврат СтруктураТекстовЗапросов
	
КонецФункции

Функция ТекстЗапросаАмортизацияОС(Запрос)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ДокументыОбесценения.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ОбесценениеВНА) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	ДокументыОбесценения.Регистратор КАК Документ
	|ИЗ
	|	АмортизацияОСИзменение КАК Таблица
	|	 ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА КАК ДокументыОбесценения
	|			ПО 	ДокументыОбесценения.Организация = Таблица.Организация
	|				И ДокументыОбесценения.ВнеоборотныйАктив = Таблица.ОсновноеСредство
	|				И ДокументыОбесценения.Период >= &НачалоПериода
	|				И ДокументыОбесценения.Активность
	|		
	|";

	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	Возврат СтруктураТекстовЗапросов
	
КонецФункции

Функция ТекстЗапросаАмортизацияНМА(Запрос)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ДокументыОбесценения.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ОбесценениеВНА) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	ДокументыОбесценения.Регистратор КАК Документ
	|ИЗ
	|	АмортизацияНМАИзменение КАК Таблица
	|	 ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА КАК ДокументыОбесценения
	|			ПО 	ДокументыОбесценения.Организация = Таблица.Организация
	|				И ДокументыОбесценения.ВнеоборотныйАктив = Таблица.НематериальныйАктив
	|				И ДокументыОбесценения.Период >= &НачалоПериода
	|				И ДокументыОбесценения.Активность
	|";

	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	Возврат СтруктураТекстовЗапросов
	
КонецФункции

Функция ТекстЗапросаОбесценениеВНАЗадания(Запрос)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ОбесценениеВНА.Ссылка.Дата, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ОбесценениеВНА) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	ОбесценениеВНА.Ссылка КАК Документ
	|ИЗ
	|	ТаблицаИзмененийОбесценениеВНА КАК Таблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА.ЕдиницыГенерирующиеДенежныеСредства КАК ОбесценениеВНА
	|		ПО ОбесценениеВНА.ЕГДС = Таблица.ЕГДС
	|		И ОбесценениеВНА.Ссылка.Проведен
	|		И РАЗНОСТЬДАТ(&НачалоПериода, ОбесценениеВНА.Ссылка.Дата, МЕСЯЦ) > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ОбесценениеВНА.Ссылка.Дата, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ОбесценениеВНА) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	ОбесценениеВНА.Ссылка КАК Документ
	|ИЗ
	|	ТаблицаИзмененийОбесценениеВНА КАК Таблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА.ОсновныеСредства КАК ОбесценениеВНА
	|		ПО ОбесценениеВНА.ОсновноеСредство = Таблица.ВнеоборотныйАктив
	|		И ОбесценениеВНА.Ссылка.Проведен
	|		И РАЗНОСТЬДАТ(&НачалоПериода, ОбесценениеВНА.Ссылка.Дата, МЕСЯЦ) > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ОбесценениеВНА.Ссылка.Дата, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ОбесценениеВНА) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	ОбесценениеВНА.Ссылка КАК Документ
	|ИЗ
	|	ТаблицаИзмененийОбесценениеВНА КАК Таблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА.НематериальныеАктивы КАК ОбесценениеВНА
	|		ПО ОбесценениеВНА.НематериальныйАктив = Таблица.ВнеоборотныйАктив
	|		И ОбесценениеВНА.Ссылка.Проведен
	|		И РАЗНОСТЬДАТ(&НачалоПериода, ОбесценениеВНА.Ссылка.Дата, МЕСЯЦ) > 0
	|";

	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	Возврат СтруктураТекстовЗапросов
	
КонецФункции

Функция ТекстЗапросаСоставЕГДСИзменение(Запрос)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ОбесценениеВНА) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|
	|	// При переносе документа в прошлый период формируется задание в исходном периоде с пустым документом
	|	// и задание в новом периоде со ссылкой на документ.
	|	// При переносе документа в будущий период формируется 2 задания со ссылкой на документ.
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) > НАЧАЛОПЕРИОДА(Таблица.Документ.Дата, МЕСЯЦ)
	|			ТОГДА Неопределено 
	|			ИНАЧЕ Таблица.Документ
	|		КОНЕЦ  КАК Документ
	|		
	|ИЗ
	|	СоставЕГДСИзменение КАК Таблица
	|";

	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	Возврат СтруктураТекстовЗапросов
	
КонецФункции

#КонецОбласти

// 
// Параметры:
//  СписокЗапросов - Массив - Список запросов
//  ИспользуемыеВТ - Массив - Используемые временные таблицы
Процедура ДополнитьПараметрыОтложенногоФормированияДвижений(СписокЗапросов, ИспользуемыеВТ) Экспорт
	
	ИспользуемыеВТ.Добавить("ВТ_ОбесценениеВНА");
	
	#Область ВТ_ОбесценениеВНА
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбесценениеВНА.Организация КАК Организация,
	|	ОбесценениеВНА.ВнеоборотныйАктив КАК ОбъектУчета,
	|	-ОбесценениеВНА.ОбесценениеУпрОстаток КАК ОбесценениеУпр,
	|	-ОбесценениеВНА.ОбесценениеРеглОстаток КАК ОбесценениеРегл,
	|	ОбесценениеВНА.ЕГДС КАК ЕГДС
	|ПОМЕСТИТЬ ОбесценениеВНА_Остатки
	|ИЗ
	|	РегистрНакопления.ОбесценениеВНА.Остатки(&НачалоМесяца, (Организация, ВнеоборотныйАктив) В
	|		(ВЫБРАТЬ
	|			ДанныеКРасчету.Организация,
	|			ДанныеКРасчету.ОбъектУчета
	|		ИЗ
	|			ВтДанныеКРасчету КАК ДанныеКРасчету)) КАК ОбесценениеВНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбесценениеВНА.Период КАК Период,
	|	ОбесценениеВНА.Регистратор КАК Регистратор,
	|	ОбесценениеВНА.Организация КАК Организация,
	|	ОбесценениеВНА.ВнеоборотныйАктив КАК ОбъектУчета,
	|	ОбесценениеВНА.ЕГДС КАК ЕГДС,
	|
	|	ВЫБОР
	|		КОГДА ОбесценениеВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ОбесценениеВНА.ОбесценениеУпр
	|		ИНАЧЕ -ОбесценениеВНА.ОбесценениеУпр
	|	КОНЕЦ КАК ОбесценениеУпр,
	|
	|	ВЫБОР
	|		КОГДА ОбесценениеВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ОбесценениеВНА.ОбесценениеРегл
	|		ИНАЧЕ -ОбесценениеВНА.ОбесценениеРегл
	|	КОНЕЦ КАК ОбесценениеРегл
	|
	|ПОМЕСТИТЬ ОбесценениеВНА_Движения
	|
	|ИЗ
	|	РегистрНакопления.ОбесценениеВНА КАК ОбесценениеВНА
	|
	|ГДЕ
	|	ОбесценениеВНА.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ОбесценениеВНА.Активность
	|
	|	И (ОбесценениеВНА.Организация, ОбесценениеВНА.ВнеоборотныйАктив) В
	|		(ВЫБРАТЬ
	|			ДанныеКРасчету.Организация,
	|			ДанныеКРасчету.ОбъектУчета
	|		ИЗ
	|			ВтДанныеКРасчету КАК ДанныеКРасчету)
	|
	|	И НЕ ОбесценениеВНА.Регистратор В
	|		(ВЫБРАТЬ
	|			ДанныеКРасчету.Ссылка
	|		ИЗ
	|			ВтДанныеКРасчету КАК ДанныеКРасчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКРасчету.Ссылка КАК Ссылка,
	|	ДанныеКРасчету.Дата,
	|	ДанныеКРасчету.Организация КАК Организация,
	|	ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета,
	|
	|	МАКСИМУМ(ДанныеКРасчету.ЕГДС) КАК ЕГДС,
	|
	|	СУММА(ДанныеКРасчету.ОбесценениеУпр) КАК ОбесценениеУпр,
	|	СУММА(ДанныеКРасчету.ОбесценениеРегл) КАК ОбесценениеРегл
	|
	|ПОМЕСТИТЬ ВТ_ОбесценениеВНА
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеКРасчету.Ссылка КАК Ссылка,
	|		ДанныеКРасчету.Дата КАК Дата,
	|		ДанныеКРасчету.Организация КАК Организация,
	|		ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета,
	|		ОбесценениеВНА.ЕГДС КАК ЕГДС,
	|		ЕСТЬNULL(ОбесценениеВНА.ОбесценениеУпр, 0) КАК ОбесценениеУпр,
	|		ЕСТЬNULL(ОбесценениеВНА.ОбесценениеРегл, 0) КАК ОбесценениеРегл
	|	ИЗ
	|		ВтДанныеКРасчету КАК ДанныеКРасчету
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ОбесценениеВНА_Остатки КАК ОбесценениеВНА
	|			ПО (ОбесценениеВНА.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|				И (ОбесценениеВНА.Организация = ДанныеКРасчету.Организация)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеКРасчету.Ссылка,
	|		ДанныеКРасчету.Дата,
	|		ДанныеКРасчету.Организация,
	|		ДанныеКРасчету.ОбъектУчета,
	|		ОбесценениеВНА.ЕГДС КАК ЕГДС,
	|		ЕСТЬNULL(ОбесценениеВНА.ОбесценениеУпр, 0) КАК ОбесценениеУпр,
	|		ЕСТЬNULL(ОбесценениеВНА.ОбесценениеРегл, 0) КАК ОбесценениеРегл
	|	ИЗ
	|		ВтДанныеКРасчету КАК ДанныеКРасчету
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ОбесценениеВНА_Движения КАК ОбесценениеВНА
	|			ПО (ОбесценениеВНА.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|				И (ОбесценениеВНА.Организация = ДанныеКРасчету.Организация)
	|				И (ОбесценениеВНА.Регистратор <> ДанныеКРасчету.Ссылка)
	|				И (ТИПЗНАЧЕНИЯ(ОбесценениеВНА.Регистратор) <> ТИП(Документ.КорректировкаРегистров)
	|						ИЛИ ОбесценениеВНА.Период <= ДанныеКРасчету.Дата)
	|
	|	) КАК ДанныеКРасчету
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеКРасчету.Ссылка,
	|	ДанныеКРасчету.Дата,
	|	ДанныеКРасчету.Организация,
	|	ДанныеКРасчету.ОбъектУчета
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДанныеКРасчету.ОбесценениеУпр) <> 0
	|	ИЛИ СУММА(ДанныеКРасчету.ОбесценениеРегл) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОбъектУчета,
	|	Организация";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ВыполнитьРеклассификациюОбесценения(ДанныеКРасчетуЗаМесяц)
	
	МенеджерВременныхТаблиц = ДанныеКРасчетуЗаМесяц.ВременныеТаблицы;
	ПараметрыВыполнения = Новый Структура("ВернутьДокументыКОтражению,СформироватьЗадания", Истина, Истина);
	
	ЗапросДокументов = Новый Запрос();
	ЗапросДокументов.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросДокументов.Текст = 
	"// Приоритет 1 текущие документы.
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыПоОС.ОсновноеСредство КАК ВнеоборотныйАктив,
	|	КэшГраниц.Документ             КАК Ссылка,
	|	1                              КАК Приоритет,
	|	ДокументыПоОС.Организация      КАК Организация,
	|	ДокументыПоОС.Дата             КАК Дата
	|
	|ПОМЕСТИТЬ ОбъектыВНА_Предварительная
	|
	|ИЗ
	|	РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КэшГраниц КАК КэшГраниц
	|		ПО ДокументыПоОС.Ссылка = КэшГраниц.Документ
	|		И ДокументыПоОС.Проведен
	|		И НЕ ДокументыПоОС.Ссылка ССЫЛКА Документ.ОбесценениеВНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыПоНМА.НематериальныйАктив  КАК ВнеоборотныйАктив,
	|	КэшГраниц.Документ                  КАК Ссылка,
	|	1                                   КАК Приоритет,
	|	ДокументыПоНМА.Организация          КАК Организация,
	|	ДокументыПоНМА.Дата                 КАК Дата
	|ИЗ
	|	РегистрСведений.ДокументыПоНМА КАК ДокументыПоНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КэшГраниц КАК КэшГраниц
	|		ПО ДокументыПоНМА.Ссылка = КэшГраниц.Документ
	|		И ДокументыПоНМА.Проведен
	|		И НЕ ДокументыПоНМА.Ссылка ССЫЛКА Документ.ОбесценениеВНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Приоритет 2 документы Обесценение ВНА.
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыПоОС.ОсновноеСредство  КАК ВнеоборотныйАктив,
	|	КэшГраниц.Документ              КАК Ссылка,
	|	2                               КАК Приоритет,
	|	ОбесценениеВНА.Организация      КАК Организация,
	|	ОбесценениеВНА.Дата             КАК Дата
	|ИЗ
	|	КэшГраниц КАК КэшГраниц   
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА КАК ОбесценениеВНА
	|		ПО (ОбесценениеВНА.Ссылка = КэшГраниц.Документ)
	|		И (ОбесценениеВНА.Проведен) 
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
	|		ПО ОбесценениеВНА.Ссылка = ДокументыПоОС.Ссылка
	|		И (ОбесценениеВНА.Проведен)
	|
	|ГДЕ
	|	ДокументыПоОС.ОсновноеСредство ЕСТЬ НЕ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыПоНМА.НематериальныйАктив   КАК ВнеоборотныйАктив,
	|	КэшГраниц.Документ                   КАК Ссылка,
	|	2                                    КАК Приоритет,
	|	ОбесценениеВНА.Организация           КАК Организация,
	|	ОбесценениеВНА.Дата                  КАК Дата
	|ИЗ
	|	КэшГраниц КАК КэшГраниц 
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА КАК ОбесценениеВНА
	|		ПО (ОбесценениеВНА.Ссылка = КэшГраниц.Документ)
	|		И (ОбесценениеВНА.Проведен) 
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыПоНМА КАК ДокументыПоНМА
	|		ПО (ОбесценениеВНА.Ссылка = ДокументыПоНМА.Ссылка)
	|		И (ОбесценениеВНА.Проведен)
	|
	|ГДЕ
	|	ДокументыПоНМА.НематериальныйАктив ЕСТЬ НЕ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УзлыКомпоненты.УзелКомпонент КАК УзелКомпонент
	|ПОМЕСТИТЬ УзлыОсновныхСредств
	|ИЗ
	|	РегистрСведений.УзлыКомпонентыАмортизации КАК УзлыКомпоненты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъектыВНА_Предварительная КАК ОбъектыВНА
	|		ПО УзлыКомпоненты.ОсновноеСредство = ОбъектыВНА.ВнеоборотныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	УзелКомпонент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыВНА.Ссылка КАК Ссылка,
	|	МАКСИМУМ(УзлыКомпонентыАмортизации.Период) КАК Период,
	|	УзлыКомпонентыАмортизации.УзелКомпонент КАК УзелКомпонент
	|ПОМЕСТИТЬ МаксимумыУзловКомпонентов
	|ИЗ
	|	РегистрСведений.УзлыКомпонентыАмортизации КАК УзлыКомпонентыАмортизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыОсновныхСредств КАК УзлыОсновныхСредств
	|		ПО УзлыКомпонентыАмортизации.УзелКомпонент = УзлыОсновныхСредств.УзелКомпонент
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъектыВНА_Предварительная КАК ОбъектыВНА
	|		ПО УзлыКомпонентыАмортизации.Период <= ОбъектыВНА.Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбъектыВНА.Ссылка,
	|	УзлыКомпонентыАмортизации.УзелКомпонент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	УзелКомпонент
	|;
	|
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УзлыОсновныхСредств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыВНА.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ОбъектыВНА.Ссылка КАК Ссылка,
	|	ОбъектыВНА.Приоритет КАК Приоритет,
	|	ОбъектыВНА.Организация КАК Организация,
	|	ОбъектыВНА.Дата КАК Дата
	|ПОМЕСТИТЬ ОбъектыВНА
	|ИЗ
	|	ОбъектыВНА_Предварительная КАК ОбъектыВНА
	|ГДЕ
	|	ОбъектыВНА.ВнеоборотныйАктив <> НЕОПРЕДЕЛЕНО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКомпонентыАмортизации.УзелКомпонент КАК ВнеоборотныйАктив,
	|	ОбъектыВНА.Ссылка КАК Ссылка,
	|	ОбъектыВНА.Приоритет КАК Приоритет,
	|	ОбъектыВНА.Организация КАК Организация,
	|	ОбъектыВНА.Дата КАК Дата
	|ИЗ
	|	ОбъектыВНА_Предварительная КАК ОбъектыВНА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксимумыУзловКомпонентов КАК МаксимумыУзловКомпонентов
	|		ПО ОбъектыВНА.Ссылка = МаксимумыУзловКомпонентов.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УзлыКомпонентыАмортизации КАК УзлыКомпонентыАмортизации
	|		ПО МаксимумыУзловКомпонентов.Период = УзлыКомпонентыАмортизации.Период
	|		И МаксимумыУзловКомпонентов.УзелКомпонент = УзлыКомпонентыАмортизации.УзелКомпонент
	|		И ОбъектыВНА.ВнеоборотныйАктив = УзлыКомпонентыАмортизации.ОсновноеСредство
	|ГДЕ
	|	ОбъектыВНА.ВнеоборотныйАктив <> НЕОПРЕДЕЛЕНО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ВнеоборотныйАктив
	|;
	|
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОбъектыВНА_Предварительная
	|;
	|
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МаксимумыУзловКомпонентов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбъектыВНА.Приоритет,
	|	ОбъектыВНА.Ссылка,
	|	ОбъектыВНА.Дата
	|ИЗ
	|	ОбъектыВНА КАК ОбъектыВНА
	|ГДЕ
	|	НЕ ТИПЗНАЧЕНИЯ(ОбъектыВНА.Ссылка) В (ТИП(Документ.ПодготовкаКПередачеНМА2_4),
	|										ТИП(Документ.ПодготовкаКПередачеОС2_4),
	|										ТИП(Документ.СписаниеНМА2_4),
	|										ТИП(Документ.СписаниеОС2_4),
	|										ТИП(Документ.РазукомплектацияОС),
	|										ТИП(Документ.ОбъединениеОС),
	|										ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4))
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет,
	|	Дата,
	|	Ссылка";
	
	Выборка = ЗапросДокументов.Выполнить().Выбрать();
	
	ИспользуемыеВТ = "КэшГраниц,ОбъектыВНА";
	
	Пока Выборка.Следующий() Цикл
		
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВТ);
		
		// Отсеиваем документы, которые не являются регистраторами обесценения.
		ПустойНаборЗаписей = РегистрыНакопления.ОбесценениеВНА.СоздатьНаборЗаписей();	
		ТипыРегистраторов = ПустойНаборЗаписей.Отбор.Регистратор.ТипЗначения.Типы(); // Массив типов. 
		Если ТипыРегистраторов.Найти(ТипЗнч(Выборка.Ссылка)) = Неопределено Тогда
			Продолжить;
		КонецЕсли;	

		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Ссылка", Выборка.Ссылка);
		Запрос.УстановитьПараметр("Организация", Выборка.Ссылка.Организация);
		Запрос.УстановитьПараметр("Период", ?(Выборка.Приоритет = 1, Выборка.Дата,КонецМесяца(Выборка.Дата)));
		
		// Остатки обесценения берем на момент времени перед документом.
		Запрос.УстановитьПараметр("ГраницаОстатков", Новый Граница(Выборка.Ссылка.МоментВремени(),ВидГраницы.Исключая));
		
		// Состав ЕГДС берем на момент времени перед документом.
		Запрос.УстановитьПараметр("ГраницаДокумента", Новый Граница(Выборка.Ссылка.МоментВремени(),ВидГраницы.Исключая));
		
		// Значения новых аналитик учета берем на момент времени после документа.
		Запрос.УстановитьПараметр("ГраницаАналитики", Новый Граница(Выборка.Ссылка.МоментВремени(),ВидГраницы.Включая));
		
		ТекстыЗапроса = Новый СписокЗначений;
		ТекстЗапросаВтНоваяАналитикаВНА(ТекстыЗапроса);
		ТекстЗапросаВтНовыеЕГДС(ТекстыЗапроса);
		ТекстЗапросаВтСтарыеЕГДС(ТекстыЗапроса);
		ТекстЗапросаВтОтражениеДоходовРасходов(ТекстыЗапроса);
		ТекстЗапросаОбесценениеВНА(Запрос, ТекстыЗапроса);
		ТекстЗапросаПрочиеРасходы(Запрос, ТекстыЗапроса);
		ТекстЗапросаПрочиеДоходы(Запрос, ТекстыЗапроса);
		ТекстЗапросаДвиженияДоходыРасходыПрочиеАктивыПассивы(Запрос, ТекстыЗапроса);
		
		ТаблицыДляДвижений = ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос,
																								ТекстыЗапроса,
																								Неопределено);
		
		ДокументОбъект = ПроведениеДокументов.ЭмуляцияДокумента(Выборка.Ссылка, Выборка.Дата);
		ОтложенноеФормированиеДвиженийВНА.УстановитьПризнакВыполненияОперации(ДокументОбъект);
		
		ВнеоборотныеАктивыСлужебный.ЗаписатьТаблицыДвижений(ТаблицыДляДвижений, ДокументОбъект, МенеджерВременныхТаблиц, Ложь);

		УправленческийУчетПроведениеСервер.ОбновитьДвиженияАктивовПассивов(Выборка.Ссылка, Выборка.Ссылка.ПолучитьОбъект().Движения);
		ВнеоборотныеАктивыСлужебный.ОбновитьДвиженияАктивовПассивов(Выборка.Ссылка);
		
		Если ПараметрыВыполнения.СформироватьЗадания Тогда
			ПроведениеДокументов.СформироватьЗаданияНаОтложенныеДвижения(ДокументОбъект, МенеджерВременныхТаблиц);
		КонецЕсли;
		
		Если ПараметрыВыполнения.ВернутьДокументыКОтражению Тогда
			ВнеоборотныеАктивыСлужебный.ВернутьДокументыКОтражению(
				Выборка.Ссылка, Выборка.Ссылка.Организация, Выборка.Дата, ТаблицыДляДвижений);
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

// Отключить использование обесценения.
// 
// Параметры:
//  ВеткаДереваНастроек - ГруппаВыбранныхПолейКомпоновкиДанных, ВыбранноеПолеКомпоновкиДанных, АвтоВыбранноеПолеКомпоновкиДанных - Ветка дерева настроек.
Процедура ОтключитьИспользованиеОбесценения(ВеткаДереваНастроек, ИспользоватьОбесценениеВНА)
	
	// Пользователь может вручную отключать поля обесценения в отчете.
	// Поэтому, будем вычислять режим использования поля через Мин(Текущий режим использования поля, ИспользоватьОбесценениеВНА).
	
	СтрокаПоискаОбесценения = НСтр("ru = 'Обесценение';
									|en = 'Impairment'");

	Если Найти(ВеткаДереваНастроек.Заголовок, СтрокаПоискаОбесценения) <> 0 Тогда
		ВеткаДереваНастроек.Использование = Мин(ВеткаДереваНастроек.Использование, ИспользоватьОбесценениеВНА);
	КонецЕсли;

	Если ТипЗнч(ВеткаДереваНастроек) = Тип("ВыбранноеПолеКомпоновкиДанных") Тогда

		Если ВеткаДереваНастроек.Поле <> Неопределено И Найти(ВеткаДереваНастроек.Поле, СтрокаПоискаОбесценения) <> 0 Тогда
			ВеткаДереваНастроек.Использование = Мин(ВеткаДереваНастроек.Использование, ИспользоватьОбесценениеВНА);
		КонецЕсли;

		Возврат; // Это конечный элемент дерева
	КонецЕсли;
	
	Для Каждого ЭлементВетки Из ВеткаДереваНастроек.Элементы Цикл
		Если ТипЗнч(ЭлементВетки) = Тип("ВыбранноеПолеКомпоновкиДанных") Тогда
			// Это конечный элемент ветки дерева настроек
			
			// По заголовку
			Если Найти(ЭлементВетки.Заголовок, СтрокаПоискаОбесценения) <> 0 Тогда
				ЭлементВетки.Использование = Мин(ЭлементВетки.Использование, ИспользоватьОбесценениеВНА);
			КонецЕсли;
			
			// По полю
			Если ЭлементВетки.Поле <> Неопределено И Найти(ЭлементВетки.Поле, СтрокаПоискаОбесценения) <> 0 Тогда
				ВеткаДереваНастроек.Использование = Мин(ВеткаДереваНастроек.Использование, ИспользоватьОбесценениеВНА);
			КонецЕсли;

		Иначе
			// Это ветка дерева настроек
			// По заголовку
			Если Найти(ЭлементВетки.Заголовок, СтрокаПоискаОбесценения) <> 0 Тогда
				ЭлементВетки.Использование = Мин(ЭлементВетки.Использование, ИспользоватьОбесценениеВНА);
			КонецЕсли;
			
			Если ЭлементВетки.Элементы.Количество() > 0 Тогда
				Для Каждого Элемент Из ЭлементВетки.Элементы Цикл
					ОтключитьИспользованиеОбесценения(Элемент, ИспользоватьОбесценениеВНА); // Рекурсивный вызов.
				КонецЦикла;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Процедура ИнициализироватьВтОстаткиДляРеклассификации(Запрос, ТекстыЗапроса)

	Если Запрос.Параметры.Свойство("ВтОстаткиДляРеклассификацииИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросОстаткиОбесценения = Новый Запрос;
	ЗапросОстаткиОбесценения.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	ЗапросОстаткиОбесценения.УстановитьПараметр("ГраницаДокумента", Запрос.Параметры.ГраницаДокумента);
	ЗапросОстаткиОбесценения.УстановитьПараметр("Ссылка",           Запрос.Параметры.Ссылка);
	ЗапросОстаткиОбесценения.УстановитьПараметр("Период",           Запрос.Параметры.Период);
	ЗапросОстаткиОбесценения.УстановитьПараметр("Организация",      Запрос.Параметры.Организация);
	
	ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитикПовтИсп.НастройкиУчетаВнеоборотныхАктивов(
									Запрос.Параметры.Организация,
									Запрос.Параметры.Период); 
									
	// Берем порядок начисления по ОС и НМА раздельно.
	ПорядокНачисленияАмортизацииОСУпр =  ПараметрыУчетнойПолитики.ПорядокНачисленияАмортизацииОС;
	ПорядокНачисленияАмортизацииОСРегл = ПараметрыУчетнойПолитики.ПорядокНачисленияАмортизацииОСРегл; 
	ПорядокНачисленияАмортизацииНМАУпр =  ПараметрыУчетнойПолитики.ПорядокНачисленияАмортизацииНМА;
	ПорядокНачисленияАмортизацииНМАРегл = ПараметрыУчетнойПолитики.ПорядокНачисленияАмортизацииНМАРегл;
	
	ЗапросОстаткиОбесценения.УстановитьПараметр("ПорядокНачисленияАмортизацииОСУпр", ПорядокНачисленияАмортизацииОСУпр);
	ЗапросОстаткиОбесценения.УстановитьПараметр("ПорядокНачисленияАмортизацииОСРегл",ПорядокНачисленияАмортизацииОСРегл);
	ЗапросОстаткиОбесценения.УстановитьПараметр("ПорядокНачисленияАмортизацииНМАУпр", ПорядокНачисленияАмортизацииНМАУпр);
	ЗапросОстаткиОбесценения.УстановитьПараметр("ПорядокНачисленияАмортизацииНМАРегл",ПорядокНачисленияАмортизацииНМАРегл);
	
	ЗапросОстаткиОбесценения.Текст =
	" // При начислении амортизации с 1го числа следующего месяца обесценение проводим по
	| // первому документу в месяце, т.к. амортизация начисляется по измерениям по состоянию на
	| // начало месяца.
	|
	| // Для учетной политики Амортизировать стоимость ВНА с учетом обесценения и доначислять корректировку обесценения.
	|ВЫБРАТЬ
	|	ОбесценениеВНА.Организация КАК Организация,
	|	ОбесценениеВНА.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ОбесценениеВНА.ЕГДС КАК ЕГДС,
	|	ОбесценениеВНА.Подразделение КАК Подразделение,
	|	ОбесценениеВНА.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ОбесценениеВНА.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА &ПорядокНачисленияАмортизацииОСРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|			ТОГДА ОбесценениеВНА.ОбесценениеРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбесценениеРегл,
	|	ВЫБОР
	|		КОГДА &ПорядокНачисленияАмортизацииОСУпр = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|			ТОГДА ОбесценениеВНА.ОбесценениеУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбесценениеУпр
	|ПОМЕСТИТЬ ОбесценениеПриАмортизации
	|ИЗ
	|	РегистрНакопления.ОбесценениеВНА КАК ОбесценениеВНА
	|ГДЕ
	|	(ОбесценениеВНА.Регистратор ССЫЛКА Документ.АмортизацияОС2_4
	|			ИЛИ ОбесценениеВНА.Регистратор ССЫЛКА Документ.АмортизацияНМА2_4)
	|	И ОбесценениеВНА.Период = КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|	И ОбесценениеВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ОбесценениеВНА.Организация = &Организация
	|	И ОбесценениеВНА.ВнеоборотныйАктив Ссылка Справочник.ОбъектыЭксплуатации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбесценениеВНА.Организация КАК Организация,
	|	ОбесценениеВНА.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ОбесценениеВНА.ЕГДС КАК ЕГДС,
	|	ОбесценениеВНА.Подразделение КАК Подразделение,
	|	ОбесценениеВНА.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ОбесценениеВНА.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА &ПорядокНачисленияАмортизацииНМАРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|			ТОГДА ОбесценениеВНА.ОбесценениеРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбесценениеРегл,
	|	ВЫБОР
	|		КОГДА &ПорядокНачисленияАмортизацииНМАУпр = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|			ТОГДА ОбесценениеВНА.ОбесценениеУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбесценениеУпр
	|ИЗ
	|	РегистрНакопления.ОбесценениеВНА КАК ОбесценениеВНА
	|ГДЕ
	|	(ОбесценениеВНА.Регистратор ССЫЛКА Документ.АмортизацияОС2_4
	|			ИЛИ ОбесценениеВНА.Регистратор ССЫЛКА Документ.АмортизацияНМА2_4)
	|	И ОбесценениеВНА.Период = КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|	И ОбесценениеВНА.Организация = &Организация
	|	И ОбесценениеВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ОбесценениеВНА.ВнеоборотныйАктив Ссылка Справочник.НематериальныеАктивы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	| // Для учетной политики Амортизоровать полную стоимость ВНА и сторнировать корректировку обесценения.
	|ВЫБРАТЬ
	|	ОбесценениеВНА.Организация КАК Организация,
	|	ОбесценениеВНА.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ОбесценениеВНА.ЕГДС КАК ЕГДС,
	|	ОбесценениеВНА.Подразделение КАК Подразделение,
	|	ОбесценениеВНА.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ОбесценениеВНА.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА &ПорядокНачисленияАмортизацииОСРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|			ТОГДА -ОбесценениеВНА.ОбесценениеРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбесценениеРегл,
	|	ВЫБОР
	|		КОГДА &ПорядокНачисленияАмортизацииОСУпр = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|			ТОГДА -ОбесценениеВНА.ОбесценениеУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбесценениеУпр
	|ИЗ
	|	РегистрНакопления.ОбесценениеВНА КАК ОбесценениеВНА
	|ГДЕ
	|	(ОбесценениеВНА.Регистратор ССЫЛКА Документ.АмортизацияОС2_4
	|			ИЛИ ОбесценениеВНА.Регистратор ССЫЛКА Документ.АмортизацияНМА2_4)
	|	И ОбесценениеВНА.Период = КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|	И ОбесценениеВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ОбесценениеВНА.Организация = &Организация
	|	И ОбесценениеВНА.ВнеоборотныйАктив Ссылка Справочник.ОбъектыЭксплуатации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбесценениеВНА.Организация КАК Организация,
	|	ОбесценениеВНА.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ОбесценениеВНА.ЕГДС КАК ЕГДС,
	|	ОбесценениеВНА.Подразделение КАК Подразделение,
	|	ОбесценениеВНА.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ОбесценениеВНА.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА &ПорядокНачисленияАмортизацииНМАРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|			ТОГДА -ОбесценениеВНА.ОбесценениеРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбесценениеРегл,
	|	ВЫБОР
	|		КОГДА &ПорядокНачисленияАмортизацииНМАУпр = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|			ТОГДА -ОбесценениеВНА.ОбесценениеУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбесценениеУпр
	|ИЗ
	|	РегистрНакопления.ОбесценениеВНА КАК ОбесценениеВНА
	|ГДЕ
	|	(ОбесценениеВНА.Регистратор ССЫЛКА Документ.АмортизацияОС2_4
	|			ИЛИ ОбесценениеВНА.Регистратор ССЫЛКА Документ.АмортизацияНМА2_4)
	|	И ОбесценениеВНА.Период = КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|	И ОбесценениеВНА.Организация = &Организация
	|	И ОбесценениеВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ОбесценениеВНА.ВнеоборотныйАктив Ссылка Справочник.НематериальныеАктивы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ВнеоборотныйАктив,
	|	ЕГДС,
	|	Подразделение,
	|	НаправлениеДеятельности,
	|	ГруппаФинансовогоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбесценениеВНАОстатки.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ОбесценениеВНАОстатки.ЕГДС КАК ЕГДС,
	|	ОбесценениеВНАОстатки.Организация КАК Организация,
	|	ОбесценениеВНАОстатки.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ОбесценениеВНАОстатки.Подразделение КАК Подразделение,
	|	ОбесценениеВНАОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ОбесценениеВНАОстатки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|
	|	-ОбесценениеВНАОстатки.ОбесценениеРеглОстаток -
	|				ЕСТЬNULL(ОбесценениеПриАмортизации.ОбесценениеРегл, 0) КАК ОбесценениеРегл,
	|
	|	-ОбесценениеВНАОстатки.ОбесценениеУпрОстаток -
	|				ЕСТЬNULL(ОбесценениеПриАмортизации.ОбесценениеУпр, 0) КАК ОбесценениеУпр
	|
	|ИЗ
	|	РегистрНакопления.ОбесценениеВНА.Остатки(
	|			&ГраницаДокумента,
	|			ВнеоборотныйАктив В
	|				(ВЫБРАТЬ
	|					Т.ВнеоборотныйАктив
	|				ИЗ
	|					ОбъектыВНА КАК Т
	|				ГДЕ
	|					Т.Ссылка = &Ссылка)) КАК ОбесценениеВНАОстатки 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбесценениеПриАмортизации КАК ОбесценениеПриАмортизации
	|		ПО ОбесценениеВНАОстатки.Организация = ОбесценениеПриАмортизации.Организация
	|			И ОбесценениеВНАОстатки.ВнеоборотныйАктив = ОбесценениеПриАмортизации.ВнеоборотныйАктив
	|			И ОбесценениеВНАОстатки.ЕГДС = ОбесценениеПриАмортизации.ЕГДС
	|			И ОбесценениеВНАОстатки.Подразделение = ОбесценениеПриАмортизации.Подразделение
	|			И ОбесценениеВНАОстатки.НаправлениеДеятельности = ОбесценениеПриАмортизации.НаправлениеДеятельности
	|			И ОбесценениеВНАОстатки.ГруппаФинансовогоУчета = ОбесценениеПриАмортизации.ГруппаФинансовогоУчета
	|";
	
	ОстаткиОбесценения = ЗапросОстаткиОбесценения.Выполнить().Выгрузить();
	
	ОбщегоНазначенияУТ.ДобавитьИдентификаторСтрокВТаблицу(ОстаткиОбесценения, "ИдентификаторФинЗаписи", "Строка");
	
	ЗапросОстаткиОбесценения.УстановитьПараметр("ОстаткиОбесценения", ОстаткиОбесценения);
	
	ЗапросОстаткиОбесценения.Текст =
	"
	|ВЫБРАТЬ
	|	ОстаткиОбесценения.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ОстаткиОбесценения.Организация КАК Организация,
	|	ОстаткиОбесценения.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ОстаткиОбесценения.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ОстаткиОбесценения.Подразделение КАК Подразделение,
	|	ОстаткиОбесценения.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ОстаткиОбесценения.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ОстаткиОбесценения.ЕГДС КАК ЕГДС,
	|	ОстаткиОбесценения.ОбесценениеРегл КАК ОбесценениеРегл,
	|	ОстаткиОбесценения.ОбесценениеУпр КАК ОбесценениеУпр
	|ПОМЕСТИТЬ ВтОстаткиДляРеклассификации
	|ИЗ
	|	&ОстаткиОбесценения КАК ОстаткиОбесценения
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|";
	ЗапросОстаткиОбесценения.Выполнить();
	
	Запрос.УстановитьПараметр("ВтОстаткиДляРеклассификацииИнициализирована", Истина);
	
КонецПроцедуры

Процедура ИнициализироватьВтОстаткиДляВосстановления(Запрос, ТекстыЗапроса)

	Если Запрос.Параметры.Свойство("ВтОстаткиДляВосстановленияИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросОстаткиОбесценения = Новый Запрос;
	ЗапросОстаткиОбесценения.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	ЗапросОстаткиОбесценения.УстановитьПараметр("ГраницаОстатков", Запрос.Параметры.ГраницаОстатков);
	ЗапросОстаткиОбесценения.УстановитьПараметр("Ссылка",          Запрос.Параметры.Ссылка);
	
	ЗапросОстаткиОбесценения.Текст = 
	"ВЫБРАТЬ
	|	ОбесценениеВНАОстатки.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ОбесценениеВНАОстатки.ЕГДС,
	|	ОбесценениеВНАОстатки.Организация КАК Организация,
	|	ОбесценениеВНАОстатки.Подразделение,
	|	ОбесценениеВНАОстатки.НаправлениеДеятельности,
	|	ОбесценениеВНАОстатки.ГруппаФинансовогоУчета,
	|	-ОбесценениеВНАОстатки.ОбесценениеРеглОстаток КАК ОбесценениеРегл,
	|	-ОбесценениеВНАОстатки.ОбесценениеУпрОстаток КАК ОбесценениеУпр
	|ИЗ
	|	РегистрНакопления.ОбесценениеВНА.Остатки(&ГраницаОстатков, ВнеоборотныйАктив В
	|		(ВЫБРАТЬ
	|			Т.ВнеоборотныйАктив
	|		ИЗ
	|			ОбъектыВНА КАК Т
	|		ГДЕ
	|			Т.Ссылка = &Ссылка)
	|	) КАК ОбесценениеВНАОстатки
	|";
	
	ОстаткиОбесценения = ЗапросОстаткиОбесценения.Выполнить().Выгрузить();
	
	ОбщегоНазначенияУТ.ДобавитьИдентификаторСтрокВТаблицу(ОстаткиОбесценения, "ИдентификаторФинЗаписи", "Строка");
	
	ЗапросОстаткиОбесценения.УстановитьПараметр("ОстаткиОбесценения", ОстаткиОбесценения);
	
	ЗапросОстаткиОбесценения.Текст =
	"
	|ВЫБРАТЬ
	|	ОстаткиОбесценения.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ОстаткиОбесценения.Организация КАК Организация,
	|	ОстаткиОбесценения.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ОстаткиОбесценения.Подразделение КАК Подразделение,
	|	ОстаткиОбесценения.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ОстаткиОбесценения.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ОстаткиОбесценения.ЕГДС КАК ЕГДС,
	|	ОстаткиОбесценения.ОбесценениеРегл КАК ОбесценениеРегл,
	|	ОстаткиОбесценения.ОбесценениеУпр КАК ОбесценениеУпр
	|ПОМЕСТИТЬ ВтОстаткиДляВосстановления
	|ИЗ
	|	&ОстаткиОбесценения КАК ОстаткиОбесценения
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|";
	ЗапросОстаткиОбесценения.Выполнить();
	
	Запрос.УстановитьПараметр("ВтОстаткиДляВосстановленияИнициализирована", Истина);
	
КонецПроцедуры

Процедура ИнициализироватьВтНачисленияВосстановления(Запрос, ТекстыЗапроса)
	
	Если Запрос.Параметры.Свойство("ВтНачисленияВосстановленияИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	Начисления = РегистрыНакопления.ОбесценениеВНА.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	Начисления.Колонки.Удалить("Активность");
	Восстановления = Начисления.Скопировать();
	
	ЗапросНачисленияВосстановления = Новый Запрос;
	ЗапросНачисленияВосстановления.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	ЗапросНачисленияВосстановления.УстановитьПараметр("Организация",      Запрос.Параметры.Организация);
	ЗапросНачисленияВосстановления.УстановитьПараметр("ГраницаОстатков",  Запрос.Параметры.ГраницаОстатков);
	ЗапросНачисленияВосстановления.УстановитьПараметр("ГраницаДокумента", Запрос.Параметры.ГраницаДокумента);
	ЗапросНачисленияВосстановления.УстановитьПараметр("ГраницаАналитики", Запрос.Параметры.ГраницаАналитики);
	ЗапросНачисленияВосстановления.УстановитьПараметр("Период",           Запрос.Параметры.Период);
	ЗапросНачисленияВосстановления.УстановитьПараметр("Ссылка",           Запрос.Параметры.Ссылка);
	
	ЗапросНачисленияВосстановления.Текст = 
	"ВЫБРАТЬ
	|	ОбесценениеВНА.ЕГДС                     КАК ВнеоборотныйАктив,
	|	ОбесценениеВНА.ВозмещаемаяСтоимостьРегл КАК ВозмещаемаяСтоимостьРегл,
	|	ОбесценениеВНА.ВозмещаемаяСтоимостьУпр  КАК ВозмещаемаяСтоимостьУпр
	|
	|ПОМЕСТИТЬ втВозмещаемаяСтоимость
	|
	|ИЗ
	|	Документ.ОбесценениеВНА.ЕдиницыГенерирующиеДенежныеСредства КАК ОбесценениеВНА
	|ГДЕ
	|	ОбесценениеВНА.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбесценениеВНА.ОсновноеСредство           КАК ВнеоборотныйАктив,
	|	ОбесценениеВНА.ВозмещаемаяСтоимостьРегл   КАК ВозмещаемаяСтоимостьРегл,
	|	ОбесценениеВНА.ВозмещаемаяСтоимостьУпр    КАК ВозмещаемаяСтоимостьУпр
	|ИЗ
	|	Документ.ОбесценениеВНА.ОсновныеСредства КАК ОбесценениеВНА
	|ГДЕ
	|	ОбесценениеВНА.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбесценениеВНА.НематериальныйАктив        КАК ВнеоборотныйАктив,
	|	ОбесценениеВНА.ВозмещаемаяСтоимостьРегл   КАК ВозмещаемаяСтоимостьРегл,
	|	ОбесценениеВНА.ВозмещаемаяСтоимостьУпр    КАК ВозмещаемаяСтоимостьУпр
	|ИЗ
	|	Документ.ОбесценениеВНА.НематериальныеАктивы КАК ОбесценениеВНА
	|ГДЕ
	|	ОбесценениеВНА.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставЕГДС.ВнеоборотныйАктив                КАК ВнеоборотныйАктив,
	|	втВозмещаемаяСтоимость.ВнеоборотныйАктив    КАК ЕГДС
	|	
	|ПОМЕСТИТЬ ОбесцениваемыеВНА_Предварительная
	|
	|ИЗ
	|	втВозмещаемаяСтоимость КАК втВозмещаемаяСтоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставЕГДС.СрезПоследних(
	|										&ГраницаДокумента, 
	|										Организация = &Организация) КАК СоставЕГДС
	|		ПО (СоставЕГДС.ЕГДС = втВозмещаемаяСтоимость.ВнеоборотныйАктив)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВозмещаемаяСтоимость КАК ОбъектыВНА
	|		ПО (СоставЕГДС.ВнеоборотныйАктив = ОбъектыВНА.ВнеоборотныйАктив)
	|ГДЕ
	|	ОбъектыВНА.ВнеоборотныйАктив ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втВозмещаемаяСтоимость.ВнеоборотныйАктив                              КАК ВнеоборотныйАктив,
	|	ЗНАЧЕНИЕ(Справочник.ЕдиницыГенерирующиеДенежныеСредства.ПустаяСсылка) КАК ЕГДС
	|ИЗ
	|	втВозмещаемаяСтоимость КАК втВозмещаемаяСтоимость
	|ГДЕ
	|	НЕ втВозмещаемаяСтоимость.ВнеоборотныйАктив ССЫЛКА Справочник.ЕдиницыГенерирующиеДенежныеСредства
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УзлыКомпоненты.УзелКомпонент КАК УзелКомпонент
	|	
	|ПОМЕСТИТЬ УзлыОсновныхСредств
	|
	|ИЗ
	|	РегистрСведений.УзлыКомпонентыАмортизации КАК УзлыКомпоненты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбесцениваемыеВНА_Предварительная КАК ОбесцениваемыеВНА
	|		ПО УзлыКомпоненты.ОсновноеСредство = ОбесцениваемыеВНА.ВнеоборотныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	УзелКомпонент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбесцениваемыеВНА.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ОбесцениваемыеВНА.ЕГДС              КАК ЕГДС
	|	
	|ПОМЕСТИТЬ ОбесцениваемыеВНА
	|
	|ИЗ
	|	ОбесцениваемыеВНА_Предварительная КАК ОбесцениваемыеВНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УзлыКомпоненты.УзелКомпонент        КАК ВнеоборотныйАктив,
	|	ОбесцениваемыеВНА.ЕГДС              КАК ЕГДС
	|ИЗ
	|	ОбесцениваемыеВНА_Предварительная КАК ОбесцениваемыеВНА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УзлыКомпонентыАмортизации.СрезПоследних(
	|				&Период,
	|				УзелКомпонент В
	|					(ВЫБРАТЬ
	|						ТаблицаУзлов.УзелКомпонент КАК УзелКомпонент
	|					ИЗ
	|						УзлыОсновныхСредств КАК ТаблицаУзлов)) КАК УзлыКомпоненты
	|		ПО ОбесцениваемыеВНА.ВнеоборотныйАктив = УзлыКомпоненты.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УзлыОсновныхСредств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОбесцениваемыеВНА_Предварительная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(БалансоваяСтоимость.Организация)             КАК Организация,
	|	БалансоваяСтоимость.ВнеоборотныйАктив                 КАК ВнеоборотныйАктив,
	|	МАКСИМУМ(БалансоваяСтоимость.Подразделение)           КАК Подразделение,
	|	МАКСИМУМ(БалансоваяСтоимость.ГруппаФинансовогоУчета)  КАК ГруппаФинансовогоУчета,
	|	МАКСИМУМ(БалансоваяСтоимость.НаправлениеДеятельности) КАК НаправлениеДеятельности,
	|	СУММА(БалансоваяСтоимость.СтоимостьРегл)              КАК СтоимостьРегл,
	|	СУММА(БалансоваяСтоимость.СтоимостьУпр)               КАК СтоимостьУпр,
	|	СУММА(БалансоваяСтоимость.ОбесценениеРегл)            КАК ОбесценениеРегл,
	|	СУММА(БалансоваяСтоимость.ОбесценениеУпр)             КАК ОбесценениеУпр
	|	
	|ПОМЕСТИТЬ втБалансоваяСтоимость
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтоимостьОСОстатки.Организация                КАК Организация,
	|		СтоимостьОСОстатки.ОсновноеСредство           КАК ВнеоборотныйАктив,
	|		СтоимостьОСОстатки.Подразделение              КАК Подразделение,
	|		СтоимостьОСОстатки.ГруппаФинансовогоУчета     КАК ГруппаФинансовогоУчета,
	|		СтоимостьОСОстатки.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|		
	|		СтоимостьОСОстатки.СтоимостьРеглОстаток + 
	|				СтоимостьОСОстатки.СтоимостьЦФОстаток КАК СтоимостьРегл,
	|				
	|		СтоимостьОСОстатки.СтоимостьОстаток           КАК СтоимостьУпр,
	|		0                                             КАК ОбесценениеРегл,
	|		0                                             КАК ОбесценениеУпр
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС.Остатки(
	|				&ГраницаОстатков,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						Т.ВнеоборотныйАктив
	|					ИЗ
	|						ОбесцениваемыеВНА КАК Т)) КАК СтоимостьОСОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АмортизацияОСОстатки.Организация,
	|		АмортизацияОСОстатки.ОсновноеСредство,
	|		АмортизацияОСОстатки.Подразделение,
	|		АмортизацияОСОстатки.ГруппаФинансовогоУчета,
	|		АмортизацияОСОстатки.НаправлениеДеятельности,
	|		
	|		АмортизацияОСОстатки.АмортизацияРеглОстаток + 
	|				АмортизацияОСОстатки.АмортизацияЦФОстаток,
	|				
	|		АмортизацияОСОстатки.АмортизацияОстаток,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.АмортизацияОС.Остатки(
	|				&ГраницаОстатков,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						Т.ВнеоборотныйАктив
	|					ИЗ
	|						ОбесцениваемыеВНА КАК Т)) КАК АмортизацияОСОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьНМАОстатки.Организация,
	|		СтоимостьНМАОстатки.НематериальныйАктив,
	|		СтоимостьНМАОстатки.Подразделение,
	|		СтоимостьНМАОстатки.ГруппаФинансовогоУчета,
	|		СтоимостьНМАОстатки.НаправлениеДеятельности,
	|		
	|		СтоимостьНМАОстатки.СтоимостьРеглОстаток +
	|				СтоимостьНМАОстатки.СтоимостьЦФОстаток,
	|				
	|		СтоимостьНМАОстатки.СтоимостьОстаток,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.СтоимостьНМА.Остатки(
	|				&ГраницаОстатков,
	|				НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						Т.ВнеоборотныйАктив
	|					ИЗ
	|						ОбесцениваемыеВНА КАК Т)) КАК СтоимостьНМАОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АмортизацияНМАОстатки.Организация,
	|		АмортизацияНМАОстатки.НематериальныйАктив,
	|		АмортизацияНМАОстатки.Подразделение,
	|		АмортизацияНМАОстатки.ГруппаФинансовогоУчета,
	|		АмортизацияНМАОстатки.НаправлениеДеятельности,
	|		
	|		АмортизацияНМАОстатки.АмортизацияРеглОстаток + 
	|				АмортизацияНМАОстатки.АмортизацияЦФОстаток,
	|				
	|		АмортизацияНМАОстатки.АмортизацияОстаток,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.АмортизацияНМА.Остатки(
	|				&ГраницаОстатков,
	|				НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						Т.ВнеоборотныйАктив
	|					ИЗ
	|						ОбесцениваемыеВНА КАК Т)) КАК АмортизацияНМАОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОбесценениеВНАОстатки.Организация,
	|		ОбесценениеВНАОстатки.ВнеоборотныйАктив,
	|		ОбесценениеВНАОстатки.Подразделение,
	|		ОбесценениеВНАОстатки.ГруппаФинансовогоУчета,
	|		ОбесценениеВНАОстатки.НаправлениеДеятельности,
	|		0,
	|		0,
	|		-ОбесценениеВНАОстатки.ОбесценениеРеглОстаток,
	|		-ОбесценениеВНАОстатки.ОбесценениеУпрОстаток
	|	ИЗ
	|		РегистрНакопления.ОбесценениеВНА.Остатки(
	|				&ГраницаАналитики,
	|				ВнеоборотныйАктив В
	|					(ВЫБРАТЬ
	|						Т.ВнеоборотныйАктив
	|					ИЗ
	|						ОбесцениваемыеВНА КАК Т)) КАК ОбесценениеВНАОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОбесценениеДвижения.Организация,
	|		ОбесценениеДвижения.ВнеоборотныйАктив,
	|		ОбесценениеДвижения.Подразделение,
	|		ОбесценениеДвижения.ГруппаФинансовогоУчета,
	|		ОбесценениеДвижения.НаправлениеДеятельности,
	|		0,
	|		0,
	|		
	|		ВЫБОР
	|			КОГДА ОбесценениеДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ОбесценениеДвижения.ОбесценениеРегл
	|			ИНАЧЕ -ОбесценениеДвижения.ОбесценениеРегл
	|		КОНЕЦ,
	|		
	|		ВЫБОР
	|			КОГДА ОбесценениеДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ОбесценениеДвижения.ОбесценениеУпр
	|			ИНАЧЕ -ОбесценениеДвижения.ОбесценениеУпр
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ОбесценениеВНА КАК ОбесценениеДвижения
	|	ГДЕ
	|		ОбесценениеДвижения.Регистратор = &Ссылка
	|		И ОбесценениеДвижения.Активность
	|		И ОбесценениеДвижения.ВнеоборотныйАктив В
	|				(ВЫБРАТЬ
	|					Т.ВнеоборотныйАктив
	|				ИЗ
	|					ОбесцениваемыеВНА КАК Т)) КАК БалансоваяСтоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	БалансоваяСтоимость.ВнеоборотныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втБалансоваяСтоимость.Организация               КАК Организация,
	|	втБалансоваяСтоимость.ВнеоборотныйАктив         КАК ВнеоборотныйАктив,
	|	втБалансоваяСтоимость.Подразделение             КАК Подразделение,
	|	втБалансоваяСтоимость.ГруппаФинансовогоУчета    КАК ГруппаФинансовогоУчета,
	|	втБалансоваяСтоимость.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	втВозмещаемаяСтоимость.ВозмещаемаяСтоимостьРегл КАК ВозмещаемаяСтоимостьРегл,
	|	втВозмещаемаяСтоимость.ВозмещаемаяСтоимостьУпр  КАК ВозмещаемаяСтоимостьУпр,
	|	втБалансоваяСтоимость.СтоимостьРегл             КАК СтоимостьРегл,
	|	втБалансоваяСтоимость.СтоимостьУпр              КАК СтоимостьУпр,
	|	втБалансоваяСтоимость.ОбесценениеРегл           КАК ОбесценениеРегл,
	|	втБалансоваяСтоимость.ОбесценениеУпр            КАК ОбесценениеУпр,
	|	
	|	ЗНАЧЕНИЕ(Справочник.ЕдиницыГенерирующиеДенежныеСредства.ПустаяСсылка) КАК ЕГДС
	|ИЗ
	|	втБалансоваяСтоимость КАК втБалансоваяСтоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВозмещаемаяСтоимость КАК втВозмещаемаяСтоимость
	|		ПО (втВозмещаемаяСтоимость.ВнеоборотныйАктив = втБалансоваяСтоимость.ВнеоборотныйАктив)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыВНА.ВнеоборотныйАктив                  КАК ВнеоборотныйАктив,
	|	СУММА(ПараметрыВНА.ЛиквидационнаяСтоимостьРегл) КАК ЛиквидационнаяСтоимостьРегл,
	|	СУММА(ПараметрыВНА.ЛиквидационнаяСтоимостьУпр)  КАК ЛиквидационнаяСтоимостьУпр
	|	
	|ПОМЕСТИТЬ втЛиквидационнаяСтоимость
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПараметрыВНА.НематериальныйАктив         КАК ВнеоборотныйАктив,
	|		ПараметрыВНА.ЛиквидационнаяСтоимостьРегл КАК ЛиквидационнаяСтоимостьРегл,
	|		0                                        КАК ЛиквидационнаяСтоимостьУпр
	|	ИЗ
	|		РегистрСведений.ПараметрыАмортизацииНМАУУ.СрезПоследних(
	|				&ГраницаОстатков,
	|				НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						Т.ВнеоборотныйАктив
	|					ИЗ
	|						ОбесцениваемыеВНА КАК Т)) КАК ПараметрыВНА
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПараметрыВНА.НематериальныйАктив     КАК ВнеоборотныйАктив,
	|		0                                    КАК ЛиквидационнаяСтоимостьРегл,
	|		ПараметрыВНА.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимостьУпр
	|	ИЗ
	|		РегистрСведений.ПараметрыАмортизацииНМАУУ.СрезПоследних(
	|				&ГраницаОстатков,
	|				НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						Т.ВнеоборотныйАктив
	|					ИЗ
	|						ОбесцениваемыеВНА КАК Т)) КАК ПараметрыВНА
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПараметрыВНА.ОсновноеСредство        КАК ВнеоборотныйАктив,
	|		ПараметрыВНА.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимостьРегл,
	|		0                                    КАК ЛиквидационнаяСтоимостьУпр
	|	ИЗ
	|		РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|				&ГраницаОстатков,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						Т.ВнеоборотныйАктив
	|					ИЗ
	|						ОбесцениваемыеВНА КАК Т)) КАК ПараметрыВНА
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПараметрыВНА.ОсновноеСредство        КАК ВнеоборотныйАктив,
	|		0                                    КАК ЛиквидационнаяСтоимостьРегл,
	|		ПараметрыВНА.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимостьУпр
	|	ИЗ
	|		РегистрСведений.ПараметрыАмортизацииОСУУ.СрезПоследних(
	|				&ГраницаОстатков,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						Т.ВнеоборотныйАктив
	|					ИЗ
	|						ОбесцениваемыеВНА КАК Т)) КАК ПараметрыВНА) КАК ПараметрыВНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыВНА.ВнеоборотныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втБалансоваяСтоимость.Организация               КАК Организация,
	|	втБалансоваяСтоимость.ВнеоборотныйАктив         КАК ВнеоборотныйАктив,
	|	втБалансоваяСтоимость.Подразделение             КАК Подразделение,
	|	втБалансоваяСтоимость.ГруппаФинансовогоУчета    КАК ГруппаФинансовогоУчета,
	|	втБалансоваяСтоимость.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	втВозмещаемаяСтоимость.ВозмещаемаяСтоимостьРегл КАК ВозмещаемаяСтоимостьРегл,
	|	втВозмещаемаяСтоимость.ВозмещаемаяСтоимостьУпр  КАК ВозмещаемаяСтоимостьУпр,
	|	втБалансоваяСтоимость.СтоимостьРегл             КАК СтоимостьРегл,
	|	втБалансоваяСтоимость.СтоимостьУпр              КАК СтоимостьУпр,
	|	
	|	ВЫБОР
	|		КОГДА втБалансоваяСтоимость.СтоимостьРегл - ЕСТЬNULL(втЛиквидационнаяСтоимость.ЛиквидационнаяСтоимостьРегл, 0) > 0
	|			ТОГДА втБалансоваяСтоимость.СтоимостьРегл - ЕСТЬNULL(втЛиквидационнаяСтоимость.ЛиквидационнаяСтоимостьРегл, 0)
	|		ИНАЧЕ втБалансоваяСтоимость.СтоимостьРегл
	|	КОНЕЦ КАК БазаРаспределенияРегл,
	|	
	|	ВЫБОР
	|		КОГДА втБалансоваяСтоимость.СтоимостьУпр - ЕСТЬNULL(втЛиквидационнаяСтоимость.ЛиквидационнаяСтоимостьУпр, 0) > 0
	|			ТОГДА втБалансоваяСтоимость.СтоимостьУпр - ЕСТЬNULL(втЛиквидационнаяСтоимость.ЛиквидационнаяСтоимостьУпр, 0)
	|		ИНАЧЕ втБалансоваяСтоимость.СтоимостьУпр
	|	КОНЕЦ КАК БазаРаспределенияУпр,
	|	
	|	втБалансоваяСтоимость.ОбесценениеРегл           КАК ОбесценениеРегл,
	|	втБалансоваяСтоимость.ОбесценениеУпр            КАК ОбесценениеУпр,
	|	втВозмещаемаяСтоимость.ВнеоборотныйАктив        КАК ЕГДС
	|ИЗ
	|	втВозмещаемаяСтоимость КАК втВозмещаемаяСтоимость
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбесцениваемыеВНА КАК ОбесцениваемыеЕГДС
	|		ПО (ОбесцениваемыеЕГДС.ЕГДС = втВозмещаемаяСтоимость.ВнеоборотныйАктив)
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втБалансоваяСтоимость КАК втБалансоваяСтоимость
	|		ПО (ОбесцениваемыеЕГДС.ВнеоборотныйАктив = втБалансоваяСтоимость.ВнеоборотныйАктив)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЛиквидационнаяСтоимость КАК втЛиквидационнаяСтоимость
	|		ПО (ОбесцениваемыеЕГДС.ВнеоборотныйАктив = втЛиквидационнаяСтоимость.ВнеоборотныйАктив)";
	
	Результат = ЗапросНачисленияВосстановления.ВыполнитьПакет();
	
	ДанныеПоОСНМА = Результат[7].Выгрузить(); // ТаблицаЗначений - 
	Для Каждого СтрокаОСНМА Из ДанныеПоОСНМА Цикл
		
		СуммаНачисленияРегл = 0;
		СуммаНачисленияУпр = 0;
		СуммаВосстановленияРегл = 0;
		СуммаВосстановленияУпр = 0;
		
		Если СтрокаОСНМА.ВозмещаемаяСтоимостьРегл <> 0 
			И СтрокаОСНМА.ВозмещаемаяСтоимостьРегл < СтрокаОСНМА.СтоимостьРегл - СтрокаОСНМА.ОбесценениеРегл Тогда
			// Обесцениваем в регл.
			СуммаНачисленияРегл = СтрокаОСНМА.СтоимостьРегл - СтрокаОСНМА.ВозмещаемаяСтоимостьРегл - СтрокаОСНМА.ОбесценениеРегл;
		КонецЕсли;
		
		Если СтрокаОСНМА.ВозмещаемаяСтоимостьРегл = 0 Тогда
			СуммаВосстановленияРегл = СтрокаОСНМА.ОбесценениеРегл;
		ИначеЕсли СтрокаОСНМА.ВозмещаемаяСтоимостьРегл > СтрокаОСНМА.СтоимостьРегл - СтрокаОСНМА.ОбесценениеРегл Тогда
			// Восстанавливаем в пределах остатка обесценения регл.
			СуммаВосстановленияРегл = 
				Мин(СтрокаОСНМА.ВозмещаемаяСтоимостьРегл - СтрокаОСНМА.СтоимостьРегл + СтрокаОСНМА.ОбесценениеРегл, СтрокаОСНМА.ОбесценениеРегл);
		КонецЕсли;
		
		Если СтрокаОСНМА.ВозмещаемаяСтоимостьУпр <> 0
			И СтрокаОСНМА.ВозмещаемаяСтоимостьУпр < СтрокаОСНМА.СтоимостьУпр - СтрокаОСНМА.ОбесценениеУпр Тогда
			// Обесцениваем в упр.
			СуммаНачисленияУпр = СтрокаОСНМА.СтоимостьУпр - СтрокаОСНМА.ВозмещаемаяСтоимостьУпр - СтрокаОСНМА.ОбесценениеУпр;
		КонецЕсли;
		
		Если СтрокаОСНМА.ВозмещаемаяСтоимостьУпр = 0 Тогда
			СуммаВосстановленияУпр = СтрокаОСНМА.ОбесценениеУпр;
		ИначеЕсли СтрокаОСНМА.ВозмещаемаяСтоимостьУпр > СтрокаОСНМА.СтоимостьУпр - СтрокаОСНМА.ОбесценениеУпр Тогда
			// Восстанавливаем в пределах остатка обесценения Упр.
			СуммаВосстановленияУпр = 
				Мин(СтрокаОСНМА.ВозмещаемаяСтоимостьУпр - СтрокаОСНМА.СтоимостьУпр + СтрокаОСНМА.ОбесценениеУпр, СтрокаОСНМА.ОбесценениеУпр);
		КонецЕсли;
		
		СтрокаНачисления = Начисления.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаНачисления, СтрокаОСНМА);
		СтрокаНачисления.ОбесценениеРегл = СуммаНачисленияРегл;
		СтрокаНачисления.ОбесценениеУпр = СуммаНачисленияУпр;
		
		СтрокаВосстановления = Восстановления.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаВосстановления, СтрокаОСНМА);
		СтрокаВосстановления.ОбесценениеРегл = СуммаВосстановленияРегл;
		СтрокаВосстановления.ОбесценениеУпр = СуммаВосстановленияУпр;
	КонецЦикла;
	
	ДанныеПоЕГДС = Результат[9].Выгрузить(); // ТаблицаЗначений - 
	ТаблицаЕГДС = ДанныеПоЕГДС.Скопировать(, "ЕГДС,ВозмещаемаяСтоимостьРегл,ВозмещаемаяСтоимостьУпр");
	ТаблицаЕГДС.Свернуть("ЕГДС,ВозмещаемаяСтоимостьРегл,ВозмещаемаяСтоимостьУпр");
	Для Каждого СтрокаЕГДС Из ТаблицаЕГДС Цикл
		
		СтруктураОтбора = Новый Структура("ЕГДС", СтрокаЕГДС.ЕГДС);
		СтрокиВНА = ДанныеПоЕГДС.НайтиСтроки(СтруктураОтбора);
		ТаблицаОбесцененияЕГДС = ДанныеПоЕГДС.Скопировать(СтрокиВНА,);
		
		СтоимостьРегл = ТаблицаОбесцененияЕГДС.Итог("СтоимостьРегл");
		СтоимостьУпр = ТаблицаОбесцененияЕГДС.Итог("СтоимостьУпр");
		
		// Заново рассчитываем новую сумму обесценения ЕГДС, распределяем по ВНА и по каждому ВНА 
		// начисляем/восстанавливаем в зависимости от того, уменьшилась сумма или увеличилась.
		Если СтрокаЕГДС.ВозмещаемаяСтоимостьРегл <> 0 
			И СтрокаЕГДС.ВозмещаемаяСтоимостьРегл < СтоимостьРегл Тогда
			СуммаОбесцененияРегл = СтоимостьРегл - СтрокаЕГДС.ВозмещаемаяСтоимостьРегл;
		Иначе
			СуммаОбесцененияРегл = 0;
		КонецЕсли;
		
		Если СтрокаЕГДС.ВозмещаемаяСтоимостьУпр <> 0
			И СтрокаЕГДС.ВозмещаемаяСтоимостьУпр < СтоимостьУпр Тогда
			СуммаОбесцененияУпр = СтоимостьУпр - СтрокаЕГДС.ВозмещаемаяСтоимостьУпр;
		Иначе
			СуммаОбесцененияУпр = 0;
		КонецЕсли;
		
		НачисленияРегл = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(
			СуммаОбесцененияРегл,
			ТаблицаОбесцененияЕГДС.ВыгрузитьКолонку("БазаРаспределенияРегл"));
		НачисленияУпр = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(
			СуммаОбесцененияУпр,
			ТаблицаОбесцененияЕГДС.ВыгрузитьКолонку("БазаРаспределенияУпр"));
			
		Для Каждого СтрокаВНА Из ТаблицаОбесцененияЕГДС Цикл
			Индекс = ТаблицаОбесцененияЕГДС.Индекс(СтрокаВНА);
			
			Если НачисленияРегл <> Неопределено Тогда
				Если НачисленияРегл[Индекс] > СтрокаВНА.ОбесценениеРегл Тогда //начисляем
					СтрокаДвижения = Начисления.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДвижения, СтрокаВНА);
					СтрокаДвижения.ОбесценениеРегл = НачисленияРегл[Индекс] - СтрокаВНА.ОбесценениеРегл;
					
					СтрокаДвижения.ОбесценениеУпр = 0;
					
				ИначеЕсли СтрокаВНА.ОбесценениеРегл > НачисленияРегл[Индекс] Тогда //восстанавливаем
					СтрокаДвижения = Восстановления.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДвижения, СтрокаВНА);
					СтрокаДвижения.ОбесценениеРегл = СтрокаВНА.ОбесценениеРегл - НачисленияРегл[Индекс];
					
					СтрокаДвижения.ОбесценениеУпр = 0;
					
				КонецЕсли;
			Иначе
				Если СтрокаВНА.ОбесценениеРегл > 0 Тогда //восстанавливаем полностью
					СтрокаДвижения = Восстановления.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДвижения, СтрокаВНА);
					СтрокаДвижения.ОбесценениеРегл = СтрокаВНА.ОбесценениеРегл;
					
					СтрокаДвижения.ОбесценениеУпр = 0;
					
				КонецЕсли;
			КонецЕсли;
			
			Если НачисленияУпр <> Неопределено Тогда
				Если НачисленияУпр[Индекс] > СтрокаВНА.ОбесценениеУпр Тогда //Начисляем.
					СтрокаДвижения = Начисления.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДвижения, СтрокаВНА);
					СтрокаДвижения.ОбесценениеУпр = НачисленияУпр[Индекс] - СтрокаВНА.ОбесценениеУпр;
					
					СтрокаДвижения.ОбесценениеРегл = 0;
					
					
				ИначеЕсли СтрокаВНА.ОбесценениеУпр > НачисленияУпр[Индекс] Тогда //Восстанавливаем.
					СтрокаДвижения = Восстановления.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДвижения, СтрокаВНА);
					СтрокаДвижения.ОбесценениеУпр = СтрокаВНА.ОбесценениеУпр - НачисленияУпр[Индекс];
					
					СтрокаДвижения.ОбесценениеРегл = 0;
					
				КонецЕсли;
			Иначе
				Если СтрокаВНА.ОбесценениеУпр > 0 Тогда // Восстанавливаем полностью.
					СтрокаДвижения = Восстановления.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДвижения, СтрокаВНА);
					СтрокаДвижения.ОбесценениеУпр = СтрокаВНА.ОбесценениеУпр;
					
					СтрокаДвижения.ОбесценениеРегл = 0;
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Свернем таблицы Начисления и Восстановления.
	СписокКолонокСвертки = "";
	Для Каждого Колонка Из Начисления.Колонки Цикл
		Если Найти(Колонка.Имя, "Обесценение") = 0 Тогда
			СписокКолонокСвертки = СтрШаблон("%1%2,", СписокКолонокСвертки, Колонка.Имя);
		КонецЕсли;
	КонецЦикла;
	
	СписокКолонокСвертки = Лев(СписокКолонокСвертки, СтрДлина(СписокКолонокСвертки) - 1);

	Начисления.Свернуть(СписокКолонокСвертки,"ОбесценениеРегл,ОбесценениеУпр");
	Восстановления.Свернуть(СписокКолонокСвертки,"ОбесценениеРегл,ОбесценениеУпр");

	ОбщегоНазначенияУТ.ДобавитьИдентификаторСтрокВТаблицу(Начисления, "ИдентификаторФинЗаписи", "Строка");
	ОбщегоНазначенияУТ.ДобавитьИдентификаторСтрокВТаблицу(Восстановления, "ИдентификаторФинЗаписи", "Строка");
	
	ЗапросНачисленияВосстановления.УстановитьПараметр("Начисления", Начисления);
	ЗапросНачисленияВосстановления.УстановитьПараметр("Восстановления", Восстановления);
	
	ЗапросНачисленияВосстановления.Текст =
	"
	|ВЫБРАТЬ
	|	Начисления.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Начисления.Организация КАК Организация,
	|	Начисления.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	Начисления.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Начисления.ЕГДС КАК ЕГДС,
	|	Начисления.ОбесценениеРегл КАК ОбесценениеРегл,
	|	Начисления.ОбесценениеУпр КАК ОбесценениеУпр
	|ПОМЕСТИТЬ втНачисления
	|ИЗ
	|	&Начисления КАК Начисления
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|ВЫБРАТЬ
	|	Восстановления.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Восстановления.Организация КАК Организация,
	|	Восстановления.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	Восстановления.Подразделение КАК Подразделение,
	|	Восстановления.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	Восстановления.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Восстановления.ЕГДС КАК ЕГДС,
	|	Восстановления.ОбесценениеРегл КАК ОбесценениеРегл,
	|	Восстановления.ОбесценениеУпр КАК ОбесценениеУпр
	|ПОМЕСТИТЬ втВосстановления
	|ИЗ
	|	&Восстановления КАК Восстановления
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|";
	ЗапросНачисленияВосстановления.выполнить();
	
	Запрос.УстановитьПараметр("ВтНачисленияВосстановленияИнициализирована", Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаВтНоваяАналитикаВНА(ТекстыЗапроса)

	ИмяТаблицы = "ВтНоваяАналитикаВНА";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОС.ВнеоборотныйАктив                 КАК ВнеоборотныйАктив,
	|	ПорядокУчета.ГруппаФинансовогоУчета         КАК ГруппаФинансовогоУчета,
	|	ПорядокУчета.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Организация               КАК Организация,
	|	МестонахождениеОС.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	МестонахождениеОС.Местонахождение           КАК Подразделение,
	|	ЕСТЬNULL(ПервоначальныеСведения.ДатаВводаВЭксплуатациюБУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВРеглУчете,
	|	ЕСТЬNULL(ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВУпрУчете
	|	
	|ПОМЕСТИТЬ ВтНоваяАналитикаВНА
	|ИЗ
	|	ОбъектыВНА КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&ГраницаАналитики,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ВнеоборотныйАктив
	|					ИЗ
	|						ОбъектыВНА КАК СписокОС
	|					ГДЕ
	|						СписокОС.Ссылка = &Ссылка)
	|		) КАК ПервоначальныеСведения
	|		ПО ТаблицаОС.ВнеоборотныйАктив = ПервоначальныеСведения.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&ГраницаАналитики,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ВнеоборотныйАктив
	|					ИЗ
	|						ОбъектыВНА КАК СписокОС
	|					ГДЕ
	|						СписокОС.Ссылка = &Ссылка)
	|		) КАК ПорядокУчета
	|		ПО ТаблицаОС.ВнеоборотныйАктив = ПорядокУчета.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&ГраницаАналитики,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ВнеоборотныйАктив
	|					ИЗ
	|						ОбъектыВНА КАК СписокОС
	|					ГДЕ
	|						СписокОС.Ссылка = &Ссылка)
	|		) КАК МестонахождениеОС
	|		ПО ТаблицаОС.ВнеоборотныйАктив = МестонахождениеОС.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И НЕ МестонахождениеОС.Организация ЕСТЬ NULL
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНМА.ВнеоборотныйАктив                КАК НематериальныйАктив,
	|	ПорядокУчета.ГруппаФинансовогоУчета         КАК ГруппаФинансовогоУчета,
	|	ПорядокУчета.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	МестоУчета.Организация                      КАК Организация,
	|	МестоУчета.Организация.ГоловнаяОрганизация  КАК ГоловнаяОрганизация,
	|	МестоУчета.Подразделение                    КАК Подразделение,
	|	ЕСТЬNULL(ПервоначальныеСведения.ДатаПринятияКУчетуБУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВРеглУчете,
	|	ЕСТЬNULL(ПервоначальныеСведения.ДатаПринятияКУчетуУУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВУпрУчете
	|	
	|ИЗ
	|	ОбъектыВНА КАК ТаблицаНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|				&ГраницаАналитики,
	|				Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМА.ВнеоборотныйАктив
	|					ИЗ
	|						ОбъектыВНА КАК СписокНМА
	|					ГДЕ
	|						СписокНМА.Ссылка = &Ссылка)
	|		) КАК ПервоначальныеСведения
	|		ПО ТаблицаНМА.ВнеоборотныйАктив = ПервоначальныеСведения.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|				&ГраницаАналитики,
	|				Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМА.ВнеоборотныйАктив
	|					ИЗ
	|						ОбъектыВНА КАК СписокНМА
	|					ГДЕ
	|						СписокНМА.Ссылка = &Ссылка)
	|		) КАК ПорядокУчета
	|		ПО ТаблицаНМА.ВнеоборотныйАктив = ПорядокУчета.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестоУчетаНМА.СрезПоследних(
	|				&ГраницаАналитики,
	|				Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМА.ВнеоборотныйАктив
	|					ИЗ
	|						ОбъектыВНА КАК СписокНМА
	|					ГДЕ
	|						СписокНМА.Ссылка = &Ссылка)
	|		) КАК МестоУчета
	|		ПО ТаблицаНМА.ВнеоборотныйАктив = МестоУчета.НематериальныйАктив
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Ссылка
	|	И НЕ МестоУчета.Организация ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтНовыеЕГДС(ТекстыЗапроса)

		ИмяТаблицы = "втНовыеЕГДС";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СоставЕГДССрезПоследних.Организация       КАК Организация,
	|	СоставЕГДССрезПоследних.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	СоставЕГДССрезПоследних.ЕГДС              КАК ЕГДС
	|ПОМЕСТИТЬ втНовыеЕГДС
	|ИЗ
	|	РегистрСведений.СоставЕГДС.СрезПоследних(
	|			&ГраницаАналитики,
	|				ВнеоборотныйАктив В
	|					(ВЫБРАТЬ
	|						СписокОС.ВнеоборотныйАктив
	|					ИЗ
	|						ОбъектыВНА КАК СписокОС
	|					ГДЕ
	|						СписокОС.Ссылка = &Ссылка)
	|		) КАК СоставЕГДССрезПоследних 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ВнеоборотныйАктив,
	|	ЕГДС
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтСтарыеЕГДС(ТекстыЗапроса)

	ИмяТаблицы = "втСтарыеЕГДС";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СоставЕГДССрезПоследних.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	СоставЕГДССрезПоследних.ЕГДС
	|ПОМЕСТИТЬ втСтарыеЕГДС
	|ИЗ
	|	РегистрСведений.СоставЕГДС.СрезПоследних(
	|			&ГраницаДокумента,
	|			Организация = &Организация
	|				И ВнеоборотныйАктив В
	|					(ВЫБРАТЬ
	|						СписокОС.ВнеоборотныйАктив
	|					ИЗ
	|						ОбъектыВНА КАК СписокОС
	|					ГДЕ
	|						СписокОС.Ссылка = &Ссылка)
	|		) КАК СоставЕГДССрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив,
	|	ЕГДС
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтОтражениеДоходовРасходов(ТекстыЗапроса)

	ИмяТаблицы = "ВтОтражениеДоходовРасходов";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПоследниеДокументы.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	МАКСИМУМ(ОбесценениеВНА.СтатьяРасходов) КАК СтатьяРасходов,
	|	МАКСИМУМ(ОбесценениеВНА.АналитикаРасходов) КАК АналитикаРасходов,
	|	МАКСИМУМ(ОбесценениеВНА.СтатьяДоходов) КАК СтатьяДоходов,
	|	МАКСИМУМ(ОбесценениеВНА.АналитикаДоходов) КАК АналитикаДоходов
	|ПОМЕСТИТЬ ВтОтражениеДоходовРасходов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокументыОбесценения.ВнеоборотныйАктив,
	|		МАКСИМУМ(ДокументыОбесценения.Дата) КАК Дата
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ОбесценениеВНА.Ссылка.Дата КАК Дата,
	|			Таблица.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|			ОбесценениеВНА.Ссылка КАК Документ
	|		ИЗ
	|			ОбъектыВНА КАК Таблица
	|				ЛЕВОЕ СОЕДИНЕНИЕ втСтарыеЕГДС КАК втСтарыеЕГДС
	|				ПО втСтарыеЕГДС.ВнеоборотныйАктив = Таблица.ВнеоборотныйАктив
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА.ЕдиницыГенерирующиеДенежныеСредства КАК ОбесценениеВНА
	|				ПО ОбесценениеВНА.ЕГДС = втСтарыеЕГДС.ЕГДС
	|				И ОбесценениеВНА.Ссылка.Организация = Таблица.Организация
	|				И ОбесценениеВНА.Ссылка.Проведен
	|				И ОбесценениеВНА.Ссылка.Дата <= &Период
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ
	|			ОбесценениеВНА.Ссылка.Дата КАК Дата,
	|			Таблица.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|			ОбесценениеВНА.Ссылка КАК Документ
	|		ИЗ
	|			ОбъектыВНА КАК Таблица
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА.ОсновныеСредства КАК ОбесценениеВНА
	|				ПО ОбесценениеВНА.ОсновноеСредство = Таблица.ВнеоборотныйАктив
	|				И ОбесценениеВНА.Ссылка.Организация = Таблица.Организация
	|				И ОбесценениеВНА.Ссылка.Проведен
	|				И ОбесценениеВНА.Ссылка.Дата <= &Период
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ОбесценениеВНА.Ссылка.Дата КАК Дата,
	|			Таблица.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|			ОбесценениеВНА.Ссылка КАК Документ
	|		ИЗ
	|			ОбъектыВНА КАК Таблица
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА.НематериальныеАктивы КАК ОбесценениеВНА
	|				ПО ОбесценениеВНА.НематериальныйАктив = Таблица.ВнеоборотныйАктив
	|				И ОбесценениеВНА.Ссылка.Организация = Таблица.Организация
	|				И ОбесценениеВНА.Ссылка.Проведен
	|				И ОбесценениеВНА.Ссылка.Дата <= &Период) КАК ДокументыОбесценения
	|	СГРУППИРОВАТЬ ПО
	|		ДокументыОбесценения.ВнеоборотныйАктив) КАК ПоследниеДокументы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА КАК ОбесценениеВНА
	|		ПО ОбесценениеВНА.Дата = ПоследниеДокументы.Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоследниеДокументы.ВнеоборотныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаОбесценениеВНА(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ОбесценениеВНА";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьВтОстаткиДляРеклассификации(Запрос, ТекстыЗапроса);
	ИнициализироватьВтОстаткиДляВосстановления(Запрос, ТекстыЗапроса);
	ИнициализироватьВтНачисленияВосстановления(Запрос, ТекстыЗапроса);

	ТекстЗапроса = 
	"// Реклассификация аналитики. 
	|// Перемещение ОС/НМА, изменение параметров учета ОС/НМА.
	|// Восстановление обесценения по старому набору аналитики.
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	втОстаткиОбесценения.ВнеоборотныйАктив,
	|	втОстаткиОбесценения.ЕГДС,
	|	втОстаткиОбесценения.Организация,
	|	втОстаткиОбесценения.Подразделение,
	|	втОстаткиОбесценения.НаправлениеДеятельности,
	|	втОстаткиОбесценения.ГруппаФинансовогоУчета,
	|	втОстаткиОбесценения.ОбесценениеРегл,
	|	втОстаткиОбесценения.ОбесценениеУпр,
	|	ВЫБОР
	|		КОГДА втОстаткиОбесценения.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РеклассификацияОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РеклассификацияНМА)
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации,
	|	втОстаткиОбесценения.ИдентификаторФинЗаписи,
	|	1 КАК ИД // Реклассификация аналитики обесценения, старый набор измерений
	|ИЗ
	|	ВтОстаткиДляРеклассификации КАК втОстаткиОбесценения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтНоваяАналитикаВНА КАК ВтНоваяАналитикаВНА
	|		ПО ВтНоваяАналитикаВНА.ВнеоборотныйАктив = втОстаткиОбесценения.ВнеоборотныйАктив 
	|
	|ГДЕ
	|	(ВтНоваяАналитикаВНА.ГруппаФинансовогоУчета <> втОстаткиОбесценения.ГруппаФинансовогоУчета
	|	ИЛИ ВтНоваяАналитикаВНА.НаправлениеДеятельности <> втОстаткиОбесценения.НаправлениеДеятельности
	|	ИЛИ ВтНоваяАналитикаВНА.Подразделение <> втОстаткиОбесценения.Подразделение
	|	
	|	// Полное совпадение аналитики, перемещение внутри организации с филиалами.
	|	ИЛИ (втОстаткиОбесценения.ГоловнаяОрганизация = ВтНоваяАналитикаВНА.ГоловнаяОрганизация
	|			И втОстаткиОбесценения.Организация <> ВтНоваяАналитикаВНА.Организация) 
	|)
	|	И (ВтНоваяАналитикаВНА.ОтражатьВРеглУчете
	|	ИЛИ ВтНоваяАналитикаВНА.ОтражатьВУпрУчете)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Реклассификация аналитики. 
	|// Перемещение ОС/НМА, изменение параметров учета ОС/НМА.
	|// Начисление обесценения по новому набору аналитики.
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	втОстаткиОбесценения.ВнеоборотныйАктив,
	|	ЕСТЬNULL(ВтНовыеЕГДС.ЕГДС, ЗНАЧЕНИЕ(Справочник.ЕдиницыГенерирующиеДенежныеСредства.ПустаяСсылка)) КАК ЕГДС,
	|	ВтНоваяАналитикаВНА.Организация,  // При перемещении в другую организацию - ОрганизацияПолучатель
	|	ВтНоваяАналитикаВНА.Подразделение,
	|	ВтНоваяАналитикаВНА.НаправлениеДеятельности,
	|	ВтНоваяАналитикаВНА.ГруппаФинансовогоУчета,
	|	втОстаткиОбесценения.ОбесценениеРегл,
	|	втОстаткиОбесценения.ОбесценениеУпр,
	|	ВЫБОР
	|		КОГДА втОстаткиОбесценения.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РеклассификацияОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РеклассификацияНМА)
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации,
	|	втОстаткиОбесценения.ИдентификаторФинЗаписи,
	|	2 КАК ИД // Реклассификация аналитики обесценения, новый набор измерений
	|ИЗ
	|	ВтОстаткиДляРеклассификации КАК втОстаткиОбесценения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтНоваяАналитикаВНА КАК ВтНоваяАналитикаВНА
	|		ПО ВтНоваяАналитикаВНА.ВнеоборотныйАктив = втОстаткиОбесценения.ВнеоборотныйАктив 
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтНовыеЕГДС КАК ВтНовыеЕГДС
	|		ПО ВтНовыеЕГДС.ВнеоборотныйАктив = ВтНоваяАналитикаВНА.ВнеоборотныйАктив
	|			И ВтНовыеЕГДС.Организация = ВтНоваяАналитикаВНА.Организация
	|ГДЕ
	|	(ВтНоваяАналитикаВНА.ГруппаФинансовогоУчета <> втОстаткиОбесценения.ГруппаФинансовогоУчета
	|	ИЛИ ВтНоваяАналитикаВНА.НаправлениеДеятельности <> втОстаткиОбесценения.НаправлениеДеятельности
	|	ИЛИ ВтНоваяАналитикаВНА.Подразделение <> втОстаткиОбесценения.Подразделение
	|	
	|	// Полное совпадение аналитики, перемещение внутри организации с филиалами.
	|	ИЛИ (втОстаткиОбесценения.ГоловнаяОрганизация = ВтНоваяАналитикаВНА.ГоловнаяОрганизация
	|			И втОстаткиОбесценения.Организация <> ВтНоваяАналитикаВНА.Организация) 
	|)
	|	И (ВтНоваяАналитикаВНА.ОтражатьВРеглУчете
	|	ИЛИ ВтНоваяАналитикаВНА.ОтражатьВУпрУчете) 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Восстановление при выбытии из состава ЕГДС.
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	втОстаткиОбесценения.ВнеоборотныйАктив,
	|	втОстаткиОбесценения.ЕГДС,
	|	втОстаткиОбесценения.Организация,
	|	втОстаткиОбесценения.Подразделение,
	|	втОстаткиОбесценения.НаправлениеДеятельности,
	|	втОстаткиОбесценения.ГруппаФинансовогоУчета,
	|	втОстаткиОбесценения.ОбесценениеРегл,
	|	втОстаткиОбесценения.ОбесценениеУпр,
	|	ВЫБОР
	|		КОГДА втОстаткиОбесценения.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеОбесцененияОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеОбесцененияНМА)
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации,
	|	втОстаткиОбесценения.ИдентификаторФинЗаписи,
	|	3 КАК ИД // Восстановление при выбытии из состава ЕГДС
	|ИЗ
	|	ВтОстаткиДляВосстановления КАК втОстаткиОбесценения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтНовыеЕГДС КАК ВтНовыеЕГДС
	|		ПО ВтНовыеЕГДС.ВнеоборотныйАктив = втОстаткиОбесценения.ВнеоборотныйАктив
	|			И ВтНовыеЕГДС.ЕГДС = втОстаткиОбесценения.ЕГДС
	|			И ВтНовыеЕГДС.Организация = втОстаткиОбесценения.Организация
	|ГДЕ
	|	ВтНовыеЕГДС.ВнеоборотныйАктив ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Восстановление после указания новой возмещаемой стоимости.
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	втВосстановления.ВнеоборотныйАктив,
	|	втВосстановления.ЕГДС,
	|	втВосстановления.Организация,
	|	втВосстановления.Подразделение,
	|	втВосстановления.НаправлениеДеятельности,
	|	втВосстановления.ГруппаФинансовогоУчета,
	|	втВосстановления.ОбесценениеРегл,
	|	втВосстановления.ОбесценениеУпр,
	|	ВЫБОР
	|		КОГДА втВосстановления.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеОбесцененияОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеОбесцененияНМА)
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации,
	|	втВосстановления.ИдентификаторФинЗаписи,
	|	4 КАК ИД // Восстановление после указания новой возмещаемой стоимости
	|ИЗ
	|	втВосстановления КАК втВосстановления
	|ГДЕ
	|	втВосстановления.ОбесценениеРегл <> 0 
	|	ИЛИ втВосстановления.ОбесценениеУпр <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Начисление после указания новой возмещаемой стоимости.
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	втНачисления.ВнеоборотныйАктив,
	|	втНачисления.ЕГДС,
	|	втНачисления.Организация,
	|	втНачисления.Подразделение,
	|	втНачисления.НаправлениеДеятельности,
	|	втНачисления.ГруппаФинансовогоУчета,
	|	втНачисления.ОбесценениеРегл,
	|	втНачисления.ОбесценениеУпр,
	|	ВЫБОР
	|		КОГДА втНачисления.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОбесценениеОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОбесценениеНМА)
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации,
	|	втНачисления.ИдентификаторФинЗаписи,
	|	5 КАК ИД // Начисление после указания новой возмещаемой стоимости
	|ИЗ
	|	втНачисления КАК втНачисления
	|ГДЕ
	|	втНачисления.ОбесценениеРегл <> 0 
	|	ИЛИ втНачисления.ОбесценениеУпр <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Ложь);

КонецПроцедуры

Процедура ТекстЗапросаПрочиеРасходы(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ПрочиеРасходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьВтНачисленияВосстановления(Запрос, ТекстыЗапроса);

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.ВидДвижения КАК ВидДвижения,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	ПрочиеРасходы.СуммаРегл КАК СуммаРегл,
	|	ПрочиеРасходы.Сумма КАК Сумма,
	|	ПрочиеРасходы.СуммаУпр КАК СуммаУпр,
	|	ПрочиеРасходы.СуммаБезНДС КАК СуммаБезНДС,
	|	ПрочиеРасходы.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ПрочиеРасходы.ИдентификаторФинЗаписи,
	|	ПрочиеРасходы.ХозяйственнаяОперация,
	|	ПрочиеРасходы.ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазница,
	|	ПрочиеРасходы.АналитикаУчетаНоменклатуры,
	|	ПрочиеРасходы.СчетКт,
	|	ПрочиеРасходы.СуммаПрочихАктивов,
	|	ПрочиеРасходы.РегистрацияВНалоговомОргане,
	|	ПрочиеРасходы.ДокументДвижения,
	|	ПрочиеРасходы.КорСтатьяРасходов,
	|	ПрочиеРасходы.КорОрганизация,
	|	ПрочиеРасходы.ДоляСтоимости,
	|	ПрочиеРасходы.КорПодразделение,
	|	ПрочиеРасходы.КорАналитикаРасходов,
	|	ПрочиеРасходы.ГруппаПродукции,
	|	ПрочиеРасходы.КорСтатьяКалькуляции,
	|	ПрочиеРасходы.РасчетСебестоимости,
	|	ПрочиеРасходы.РасчетПартий,
	|	ПрочиеРасходы.ИдентификаторСтроки,
	|	ПрочиеРасходы.КорНаправлениеДеятельности,
	|	ПрочиеРасходы.КорОбъектУчетаРезервов,
	|	ПрочиеРасходы.КорВидРезервов,
	|	ПрочиеРасходы.ВидИсточника,
	|	ПрочиеРасходы.Сторно,
	|	ПрочиеРасходы.ДокументРасчета,
	|	ПрочиеРасходы.РежимЗакрытияМесяца
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|ГДЕ
	|	ПрочиеРасходы.Регистратор = &Ссылка
	|	И НЕ ПрочиеРасходы.НастройкаХозяйственнойОперации В
	|	(ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОбесценениеОС),
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОбесценениеНМА))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	втНачисления.Организация,
	|	втНачисления.Подразделение,
	|	втНачисления.НаправлениеДеятельности,
	|	ЕСТЬNULL(ОбесценениеВНА.СтатьяРасходов, ВтОтражениеДоходовРасходов.СтатьяРасходов),
	|	ЕСТЬNULL(ОбесценениеВНА.АналитикаРасходов, ВтОтражениеДоходовРасходов.АналитикаРасходов),
	|	втНачисления.ОбесценениеРегл,
	|	втНачисления.ОбесценениеУпр,
	|	втНачисления.ОбесценениеУпр,
	|	втНачисления.ОбесценениеУпр,
	|	ВЫБОР
	|		КОГДА втНачисления.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОбесценениеОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОбесценениеНМА)
	|	КОНЕЦ,
	|	втНачисления.ИдентификаторФинЗаписи,
	|	ВЫБОР
	|		КОГДА втНачисления.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОбесценениеОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОбесценениеНМА)
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	втНачисления КАК втНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОтражениеДоходовРасходов КАК ВтОтражениеДоходовРасходов
	|		ПО ВтОтражениеДоходовРасходов.ВнеоборотныйАктив = втНачисления.ВнеоборотныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА КАК ОбесценениеВНА
	|		ПО ОбесценениеВНА.Ссылка = &Ссылка
	|ГДЕ
	|	втНачисления.ОбесценениеРегл <> 0
	|	ИЛИ втНачисления.ОбесценениеУпр <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаПрочиеДоходы(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ПрочиеДоходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьВтОстаткиДляВосстановления(Запрос, ТекстыЗапроса);
	ИнициализироватьВтНачисленияВосстановления(Запрос, ТекстыЗапроса);

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПрочиеДоходы.Период КАК Период,
	|	ПрочиеДоходы.ВидДвижения КАК ВидДвижения,
	|	ПрочиеДоходы.Организация КАК Организация,
	|	ПрочиеДоходы.Подразделение КАК Подразделение,
	|	ПрочиеДоходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеДоходы.СтатьяДоходов КАК СтатьяДоходов,
	|	ПрочиеДоходы.АналитикаДоходов КАК АналитикаДоходов,
	|	ПрочиеДоходы.СуммаРегл КАК СуммаРегл,
	|	ПрочиеДоходы.Сумма КАК Сумма,
	|	ПрочиеДоходы.СуммаУпр КАК СуммаУпр,
	|	ПрочиеДоходы.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ПрочиеДоходы.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ПрочиеДоходы.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ПрочиеДоходы.РасчетСебестоимости КАК РасчетСебестоимости,
	|	ПрочиеДоходы.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ПрочиеДоходы.Сторно КАК Сторно,
	|	ПрочиеДоходы.ДокументРасчета КАК ДокументРасчета,
	|	ПрочиеДоходы.РежимЗакрытияМесяца КАК РежимЗакрытияМесяца,
	|	1 КАК ИД // Прочие доходы, кроме восстановления обесценения
	|ИЗ
	|	РегистрНакопления.ПрочиеДоходы КАК ПрочиеДоходы
	|ГДЕ
	|	ПрочиеДоходы.Регистратор = &Ссылка
	|	И НЕ ПрочиеДоходы.НастройкаХозяйственнойОперации В (
	|			ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеОбесцененияОС), 
	|			ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеОбесцененияНМА)
	|														)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	втОстаткиОбесценения.Организация,
	|	втОстаткиОбесценения.Подразделение,
	|	втОстаткиОбесценения.НаправлениеДеятельности,
	|	ЕСТЬNULL(ОбесценениеВНА.СтатьяДоходов, ВтОтражениеДоходовРасходов.СтатьяДоходов),
	|	ЕСТЬNULL(ОбесценениеВНА.АналитикаДоходов, ВтОтражениеДоходовРасходов.АналитикаДоходов),
	|	втОстаткиОбесценения.ОбесценениеРегл,
	|	втОстаткиОбесценения.ОбесценениеУпр,
	|	втОстаткиОбесценения.ОбесценениеУпр,
	|
	|	ВЫБОР
	|		КОГДА втОстаткиОбесценения.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеОбесцененияОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеОбесцененияНМА)
	|	КОНЕЦ,
	|
	|	втОстаткиОбесценения.ИдентификаторФинЗаписи,
	|
	|	ВЫБОР
	|		КОГДА втОстаткиОбесценения.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеОбесцененияОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеОбесцененияНМА)
	|	КОНЕЦ, 
	|
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	2 КАК ИД // Восстановление обесценения по документу ОбесценениеВНА при смене ЕГДС
	|ИЗ
	|	ВтОстаткиДляВосстановления КАК втОстаткиОбесценения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтНовыеЕГДС КАК ВтНовыеЕГДС
	|		ПО (ВтНовыеЕГДС.ВнеоборотныйАктив = втОстаткиОбесценения.ВнеоборотныйАктив)
	|			И (ВтНовыеЕГДС.ЕГДС = втОстаткиОбесценения.ЕГДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОтражениеДоходовРасходов КАК ВтОтражениеДоходовРасходов
	|		ПО (ВтОтражениеДоходовРасходов.ВнеоборотныйАктив = втОстаткиОбесценения.ВнеоборотныйАктив)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА КАК ОбесценениеВНА
	|		ПО (ОбесценениеВНА.Ссылка = &Ссылка)
	|ГДЕ
	|	ВтНовыеЕГДС.ВнеоборотныйАктив ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	втВосстановления.Организация,
	|	втВосстановления.Подразделение,
	|	втВосстановления.НаправлениеДеятельности,
	|	ЕСТЬNULL(ОбесценениеВНА.СтатьяДоходов, ВтОтражениеДоходовРасходов.СтатьяДоходов),
	|	ЕСТЬNULL(ОбесценениеВНА.АналитикаДоходов, ВтОтражениеДоходовРасходов.АналитикаДоходов),
	|	втВосстановления.ОбесценениеРегл,
	|	втВосстановления.ОбесценениеУпр,
	|	втВосстановления.ОбесценениеУпр, 
	|
	|	ВЫБОР
	|		КОГДА втВосстановления.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеОбесцененияОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеОбесцененияНМА)
	|	КОНЕЦ,
	|
	|	втВосстановления.ИдентификаторФинЗаписи,  
	|
	|	ВЫБОР
	|		КОГДА втВосстановления.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеОбесцененияОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеОбесцененияНМА)
	|	КОНЕЦ,
	|
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	3 КАК ИД // Восстановление обесценения при изменении суммы обесценения документом ОбесценениеВНА
	|ИЗ
	|	втВосстановления КАК втВосстановления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОтражениеДоходовРасходов КАК ВтОтражениеДоходовРасходов
	|		ПО (ВтОтражениеДоходовРасходов.ВнеоборотныйАктив = втВосстановления.ВнеоборотныйАктив)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА КАК ОбесценениеВНА
	|		ПО (ОбесценениеВНА.Ссылка = &Ссылка)
	|ГДЕ
	|	(втВосстановления.ОбесценениеРегл <> 0
	|			ИЛИ втВосстановления.ОбесценениеУпр <> 0)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаДвиженияДоходыРасходыПрочиеАктивыПассивы(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьВтОстаткиДляВосстановления(Запрос, ТекстыЗапроса);
	ИнициализироватьВтОстаткиДляРеклассификации(Запрос, ТекстыЗапроса);
	ИнициализироватьВтНачисленияВосстановления(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Период КАК Период,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Организация КАК Организация,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Подразделение КАК Подразделение,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК Статья,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаДоходов КАК АналитикаДоходов,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаРасходов КАК АналитикаРасходов,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорПодразделение КАК КорПодразделение,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорГруппаФинансовогоУчета КАК КорГруппаФинансовогоУчета,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК КорСтатья,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаДоходов КАК КорАналитикаДоходов,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаРасходов КАК КорАналитикаРасходов,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов КАК КорАналитикаАктивовПассивов,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорОрганизация КАК КорОрганизация,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Сумма КАК Сумма,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.СуммаУпр КАК СуммаУпр,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.СуммаРегл КАК СуммаРегл,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Контрагент,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорКонтрагент,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Валюта,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.СуммаВВалюте,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.ВидОперацииПоЗарплате,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.СпособРасчетов,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.НеОблагаетсяНДФЛ,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.ДокументДвижения,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.РасчетСебестоимости,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Сторно,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.ВидИсточника
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|ГДЕ
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор = &Ссылка
	|	И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.ХозяйственнаяОперация В
	|	(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияНМА),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеОбесцененияОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеОбесцененияНМА),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОбесценениеОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОбесценениеНМА))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ВЫБОР
	|		КОГДА втОстаткиОбесценения.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияНМА)
	|	КОНЕЦ,
	|	втОстаткиОбесценения.Организация,
	|	ВтНоваяАналитикаВНА.Подразделение,
	|	ВтНоваяАналитикаВНА.НаправлениеДеятельности,
	|	ВтНоваяАналитикаВНА.ГруппаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА втОстаткиОбесценения.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы)
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	втОстаткиОбесценения.ВнеоборотныйАктив,
	|	втОстаткиОбесценения.Подразделение,
	|	втОстаткиОбесценения.НаправлениеДеятельности,
	|	втОстаткиОбесценения.ГруппаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА втОстаткиОбесценения.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы)
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	втОстаткиОбесценения.ВнеоборотныйАктив,
	|	втОстаткиОбесценения.Организация,
	|	втОстаткиОбесценения.ОбесценениеУпр,
	|	втОстаткиОбесценения.ОбесценениеУпр,
	|	втОстаткиОбесценения.ОбесценениеРегл,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВтОстаткиДляРеклассификации КАК втОстаткиОбесценения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтНоваяАналитикаВНА КАК ВтНоваяАналитикаВНА
	|		ПО ВтНоваяАналитикаВНА.ВнеоборотныйАктив = втОстаткиОбесценения.ВнеоборотныйАктив
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтНовыеЕГДС КАК ВтНовыеЕГДС
	|		ПО ВтНовыеЕГДС.ВнеоборотныйАктив = втОстаткиОбесценения.ВнеоборотныйАктив
	|		И ВтНовыеЕГДС.ЕГДС = втОстаткиОбесценения.ЕГДС
	|ГДЕ
	|	(ВтНоваяАналитикаВНА.ГруппаФинансовогоУчета <> втОстаткиОбесценения.ГруппаФинансовогоУчета
	|	ИЛИ ВтНоваяАналитикаВНА.НаправлениеДеятельности <> втОстаткиОбесценения.НаправлениеДеятельности
	|	ИЛИ ВтНоваяАналитикаВНА.Подразделение <> втОстаткиОбесценения.Подразделение)
	|	И (ВтНоваяАналитикаВНА.ОтражатьВРеглУчете
	|	ИЛИ ВтНоваяАналитикаВНА.ОтражатьВУпрУчете)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|// Восстановление при выбытии из состава ЕГДС
	|ВЫБРАТЬ
	|	&Период,
	|	ВЫБОР
	|		КОГДА втОстаткиОбесценения.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеОбесцененияОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеОбесцененияНМА)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	втОстаткиОбесценения.Организация КАК Организация,
	|	втОстаткиОбесценения.Подразделение КАК Подразделение,
	|	втОстаткиОбесценения.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втОстаткиОбесценения.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА втОстаткиОбесценения.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы)
	|	КОНЕЦ КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	втОстаткиОбесценения.ВнеоборотныйАктив КАК АналитикаАктивовПассивов,
	|	втОстаткиОбесценения.Подразделение КАК КорПодразделение,
	|	втОстаткиОбесценения.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	втОстаткиОбесценения.ГруппаФинансовогоУчета КАК КорГруппаФинансовогоУчета,
	|	ЕСТЬNULL(ОбесценениеВНА.СтатьяДоходов, ВтОтражениеДоходовРасходов.СтатьяДоходов) КАК КорСтатья,
	|	ЕСТЬNULL(ОбесценениеВНА.АналитикаДоходов, ВтОтражениеДоходовРасходов.АналитикаДоходов) КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаРасходов,
	|	втОстаткиОбесценения.ВнеоборотныйАктив КАК КорАналитикаАктивовПассивов,
	|	втОстаткиОбесценения.Организация КАК КорОрганизация,
	|	втОстаткиОбесценения.ОбесценениеУпр КАК Сумма,
	|	втОстаткиОбесценения.ОбесценениеУпр КАК СуммаУпр,
	|	втОстаткиОбесценения.ОбесценениеРегл КАК СуммаРегл,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВтОстаткиДляВосстановления КАК втОстаткиОбесценения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОтражениеДоходовРасходов КАК ВтОтражениеДоходовРасходов
	|		ПО ВтОтражениеДоходовРасходов.ВнеоборотныйАктив = втОстаткиОбесценения.ВнеоборотныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА КАК ОбесценениеВНА
	|		ПО ОбесценениеВНА.Ссылка = &Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтНовыеЕГДС КАК ВтНовыеЕГДС
	|		ПО ВтНовыеЕГДС.ВнеоборотныйАктив = втОстаткиОбесценения.ВнеоборотныйАктив
	|		И ВтНовыеЕГДС.ЕГДС = втОстаткиОбесценения.ЕГДС
	|ГДЕ
	|	ВтНовыеЕГДС.ВнеоборотныйАктив ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|// Восстановление после указания новой возмещаемой стоимости
	|ВЫБРАТЬ
	|	&Период,
	|	ВЫБОР
	|		КОГДА втВосстановления.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеОбесцененияОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеОбесцененияНМА)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	втВосстановления.Организация КАК Организация,
	|	втВосстановления.Подразделение КАК Подразделение,
	|	втВосстановления.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втВосстановления.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА втВосстановления.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы)
	|	КОНЕЦ КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	втВосстановления.ВнеоборотныйАктив КАК АналитикаАктивовПассивов,
	|	втВосстановления.Подразделение КАК КорПодразделение,
	|	втВосстановления.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	втВосстановления.ГруппаФинансовогоУчета КАК КорГруппаФинансовогоУчета,
	|	ЕСТЬNULL(ОбесценениеВНА.СтатьяДоходов, ВтОтражениеДоходовРасходов.СтатьяДоходов) КАК КорСтатья,
	|	ЕСТЬNULL(ОбесценениеВНА.АналитикаДоходов, ВтОтражениеДоходовРасходов.АналитикаДоходов) КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаАктивовПассивов,
	|	втВосстановления.Организация КАК КорОрганизация,
	|	втВосстановления.ОбесценениеУпр КАК Сумма,
	|	втВосстановления.ОбесценениеУпр КАК СуммаУпр,
	|	втВосстановления.ОбесценениеРегл КАК СуммаРегл,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	втВосстановления КАК втВосстановления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОтражениеДоходовРасходов КАК ВтОтражениеДоходовРасходов
	|		ПО ВтОтражениеДоходовРасходов.ВнеоборотныйАктив = втВосстановления.ВнеоборотныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА КАК ОбесценениеВНА
	|		ПО ОбесценениеВНА.Ссылка = &Ссылка
	|ГДЕ
	|	втВосстановления.ОбесценениеРегл <> 0
	|	ИЛИ втВосстановления.ОбесценениеУпр <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|// Начисление после указания новой возмещаемой стоимости
	|ВЫБРАТЬ
	|	&Период,
	|	ВЫБОР
	|		КОГДА втНачисления.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОбесценениеОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОбесценениеНМА)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	втНачисления.Организация КАК Организация,
	|	втНачисления.Подразделение КАК Подразделение,
	|	втНачисления.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втНачисления.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА втНачисления.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы)
	|	КОНЕЦ КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	втНачисления.ВнеоборотныйАктив КАК АналитикаАктивовПассивов,
	|	втНачисления.Подразделение КАК КорПодразделение,
	|	втНачисления.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	втНачисления.ГруппаФинансовогоУчета КАК КорГруппаФинансовогоУчета,
	|	ЕСТЬNULL(ОбесценениеВНА.СтатьяРасходов, ВтОтражениеДоходовРасходов.СтатьяРасходов) КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаДоходов,
	|	ЕСТЬNULL(ОбесценениеВНА.АналитикаРасходов, ВтОтражениеДоходовРасходов.АналитикаРасходов) КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаАктивовПассивов,
	|	втНачисления.Организация КАК КорОрганизация,
	|	втНачисления.ОбесценениеУпр КАК Сумма,
	|	втНачисления.ОбесценениеУпр КАК СуммаУпр,
	|	втНачисления.ОбесценениеРегл КАК СуммаРегл,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	втНачисления КАК втНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОтражениеДоходовРасходов КАК ВтОтражениеДоходовРасходов
	|		ПО ВтОтражениеДоходовРасходов.ВнеоборотныйАктив = втНачисления.ВнеоборотныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОбесценениеВНА КАК ОбесценениеВНА
	|		ПО ОбесценениеВНА.Ссылка = &Ссылка
	|ГДЕ
	|	втНачисления.ОбесценениеРегл <> 0
	|	ИЛИ втНачисления.ОбесценениеУпр <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

#КонецОбласти
