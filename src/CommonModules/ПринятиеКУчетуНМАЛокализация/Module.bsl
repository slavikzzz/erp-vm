////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Принятие к учету НМА".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Добавляет в текст запроса реквизиты шапки документа.
//  Реквизиты добавляются вместо параметра "&ПринятиеКУчетуНМА_РеквизитыДокумента".
//
// Параметры:
//  ТекстЗапроса - Строка				 - Исходный текст запроса.
//  ИмяТаблицы	 - Строка, Неопределено	 - Синоним таблицы документа в запросе.
//  	Для получения пустых значений нужно передать "Неопределено".
//
Процедура ДобавитьВТекстЗапросаРеквизитыДокумента(ТекстЗапроса, ИмяТаблицы = Неопределено) Экспорт
	
	ПоляЛокализации = "NULL";
	
	//++ Локализация
	
	ПоляЛокализации =
	"
	|	ДанныеДокумента.АналитикаДоходов,
	|	ДанныеДокумента.ВариантПримененияЦелевогоФинансирования,
	|	ДанныеДокумента.ВариантРаздельногоУчетаНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		ИНАЧЕ ДанныеДокумента.НалогообложениеНДС
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	ДанныеДокумента.ПервоначальнаяСтоимостьНУ,
	|	ДанныеДокумента.ПервоначальнаяСтоимостьПР,
	|	ДанныеДокумента.ПервоначальнаяСтоимостьВР,
	|	ДанныеДокумента.ПорядокУчетаНУ,
	|	ДанныеДокумента.НачислятьАмортизациюНУ,
	|	ДанныеДокумента.СпециальныйКоэффициентНУ,
	|	ДанныеДокумента.СрокИспользованияНУ,
	|	ДанныеДокумента.СтатьяДоходов,
	|	ДанныеДокумента.СуммаЦелевыхСредств,
	|	ДанныеДокумента.ОтражатьВНУ КАК ОтражатьВНУ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.СтатьяРасходовНУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И ДанныеДокумента.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|
	|			ТОГДА ДанныеДокумента.СтатьяРасходовБУ
	|
	|		ИНАЧЕ ДанныеДокумента.СтатьяРасходовНУ 
	|	КОНЕЦ КАК СтатьяРасходовНУ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.СтатьяРасходовНУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И ДанныеДокумента.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|
	|			ТОГДА ДанныеДокумента.АналитикаРасходовБУ
	|
	|		ИНАЧЕ ДанныеДокумента.АналитикаРасходовНУ 
	|	КОНЕЦ КАК АналитикаРасходовНУ
	|	";
	
	ПоляЛокализации = СтрЗаменить(ПоляЛокализации, "ДанныеДокумента", ИмяТаблицы);
	
	//-- Локализация
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПринятиеКУчетуНМА_РеквизитыДокумента", ПоляЛокализации);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ПринятиеКУчетуНМА2_4 - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ПринятиеКУчетуНМА2_4 - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации Тогда
		
		Если Объект.ПорядокУчетаБУ = Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы Тогда
			ТекстСообщения = НСтр("ru = 'Не поддерживается выбор порядка учета ""Не принимать к учету, включить в расходы"", если оформляется принятие к учету на основании инвентаризации.';
									|en = 'Cannot select accounting procedure ""Do not recognize, include in expenses instead"" if the recognition is created based on the physical inventory count.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, "ПорядокУчетаБУ", "", Отказ);
		КонецЕсли;
		
		Если Объект.ПорядокУчетаНУ = Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы Тогда
			ТекстСообщения = НСтр("ru = 'Не поддерживается выбор порядка учета ""Не принимать к учету, включить в расходы"", если оформляется принятие к учету на основании инвентаризации.';
									|en = 'Cannot select accounting procedure ""Do not recognize, include in expenses instead"" if the recognition is created based on the physical inventory count.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, "ПорядокУчетаНУ", "", Отказ);
		КонецЕсли;
		
		Если Объект.ПорядокУчетаУУ = Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы Тогда
			ТекстСообщения = НСтр("ru = 'Не поддерживается выбор порядка учета ""Не принимать к учету, включить в расходы"", если оформляется принятие к учету на основании инвентаризации.';
									|en = 'Cannot select accounting procedure ""Do not recognize, include in expenses instead"" if the recognition is created based on the physical inventory count.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, "ПорядокУчетаУУ", "", Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ПринятиеКУчетуНМА2_4 - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения - Строка, Неопределено - Текст, используемый для заполнения документа. 
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ИнвентаризацияНМА") Тогда
		ЗаполнитьНаОснованииИнвентаризацииОСПриВводеНаОсновании(Объект, ДанныеЗаполнения);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ПринятиеКУчетуНМА2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ПринятиеКУчетуНМА2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация
	
	Объект.СуммаЦелевыхСредств = Объект.ЦелевоеФинансирование.Итог("Сумма");
	
	ВнеоборотныеАктивыЛокализация.ЦелевоеФинансированиеОчиститьСубконто(Объект.ЦелевоеФинансирование);
	
	ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаНДС",
			Объект.Организация,
			Объект.Дата);
	РаздельныйУчетВНАПоНалогообложениюНДС = ПараметрыУчетнойПолитики <> Неопределено И ПараметрыУчетнойПолитики.РаздельныйУчетВНАПоНалогообложениюНДС;
	
	Если НЕ РаздельныйУчетВНАПоНалогообложениюНДС Тогда
		Объект.ВариантРаздельногоУчетаНДС = Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента;
		Объект.НалогообложениеНДС = ВнеоборотныеАктивы.НалогообложениеНДС(Объект.Организация, Объект.Дата);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ПринятиеКУчетуНМА2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ПринятиеКУчетуНМА2_4 - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.ПринятиеКУчетуНМА2_4 - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команды печати.
// 
// Параметры:
// 	КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	ВнеоборотныеАктивыЛокализация.ТекстОтраженияВРеглУчетеПринятияКУчету(СписокЗапросов);

	#Область ПринятиеКУчету_Дт_СчетУчета__Кт_СчетаКапитальныхЗатрат
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Принятие к учету  (Дт СчетУчета:: Кт СчетаКапитальныхЗатрат)
	|
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаКт,
	|	Строки.КорПодразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Строки.НематериальныйАктив КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьРегл - Строки.КорПостояннаяРазница - Строки.КорВременнаяРазница КАК СуммаНУКт,
	|	Строки.КорПостояннаяРазница КАК СуммаПРКт,
	|	Строки.КорВременнаяРазница КАК СуммаВРКт,
	|	""Принятие к учету НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|ГДЕ
	|	Строки.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА))
	|	И Строки.РасчетСтоимости
	|	И (Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПринятиеКУчетуЦелевыеСредства_Дт_СчетУчетаЦФ__Кт_СчетаКапитальныхЗатрат
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Принятие к учету  (Дт СчетУчета:: Кт СчетаКапитальныхЗатрат)
	|
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	Строки.СтоимостьНУЦФ + Строки.СтоимостьПРЦФ + Строки.СтоимостьВРЦФ КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаКт,
	|	Строки.КорПодразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Строки.НематериальныйАктив КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.СтоимостьЦФ - Строки.КорПостояннаяРазница - Строки.КорВременнаяРазница КАК СуммаНУКт,
	|	Строки.КорПостояннаяРазница КАК СуммаПРКт,
	|	Строки.КорВременнаяРазница КАК СуммаВРКт,
	|
	|	""Принятие к учету НМА за счет средств целевого финансирования"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуНМА2_4 КАК Операция
	|		ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|ГДЕ
	|	Строки.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА))
	|	И Строки.РасчетСтоимости
	|	И (Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0
	|		ИЛИ Операция.ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное))";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СписаниеСтоимостиПриПринятииКУчету_НУ_Дт_СчетЗатрат__СчетУчетаНМА
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание стоимости при принятии к учету (Дт СчетЗатрат:: СчетУчетаНМА)
	|
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) ТОГДА
	|		ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|				ТОГДА ОбъектыСтроительства.СпособСтроительства
	|			ИНАЧЕ 
	|				ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	ВЫБОР
	|		КОГДА НЕ СтатьиРасходов.ПринятиеКНалоговомуУчету
	|			ТОГДА 0
	|		ИНАЧЕ Строки.СтоимостьНУ 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиРасходов.ПринятиеКНалоговомуУчету
	|			ТОГДА Строки.СтоимостьНУ
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|
	|	""Списание стоимости при принятии к учету"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО Строки.КорСтатьяРасходов = СтатьиРасходов.Ссылка
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|		ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|
	|ГДЕ
	|	Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиНМА)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПризнаниеДоходовБудущихПериодов_Дт_86_Кт_98
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Признание доходов будущих периодов (Дт 86:: Кт 98)
	|//
	|ВЫБРАТЬ
	|	
	|	втЦелевоеФинансирование.Ссылка КАК Ссылка,
	|	втЦелевоеФинансирование.Дата КАК Период,
	|	втЦелевоеФинансирование.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	втЦелевоеФинансирование.Сумма КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	втЦелевоеФинансирование.Подразделение КАК ПодразделениеДт,
	|	втЦелевоеФинансирование.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	втЦелевоеФинансирование.Счет КАК СчетДт,
	|	
	|	втЦелевоеФинансирование.Субконто1 КАК СубконтоДт1,
	|	втЦелевоеФинансирование.Субконто2 КАК СубконтоДт2,
	|	втЦелевоеФинансирование.Субконто3 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	втЦелевоеФинансирование.Сумма КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	втЦелевоеФинансирование.Подразделение ПодразделениеКт,
	|	втЦелевоеФинансирование.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияНМА) КАК СчетКт,
	|	
	|	втЦелевоеФинансирование.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	втЦелевоеФинансирование.Сумма КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Признание доходов будущих периодов"" КАК Содержание
	|ИЗ
	|	втЦелевоеФинансированиеИтог КАК втЦелевоеФинансирование";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ПринятиеКУчетуПоРезультатамИнвентаризации_Дт_СчетУчета__Кт_СчетДоходов
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Принятие к учету по результатам инвентаризации ОС (Дт СчетУчета:: Кт СчетДоходов)
	|//
	|ВЫБРАТЬ
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Операция.ПервоначальнаяСтоимостьБУ КАК Сумма,
	|	Операция.ПервоначальнаяСтоимостьУУ КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Операция.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	Операция.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Операция.ПервоначальнаяСтоимостьНУ КАК СуммаНУДт,
	|	Операция.ПервоначальнаяСтоимостьПР КАК СуммаПРДт,
	|	Операция.ПервоначальнаяСтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	Операция.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	Операция.СтатьяДоходов КАК СубконтоКт1,
	|	Операция.АналитикаДоходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Операция.ПервоначальнаяСтоимостьНУ КАК СуммаНУКт,
	|	Операция.ПервоначальнаяСтоимостьПР КАК СуммаПРКт,
	|	Операция.ПервоначальнаяСтоимостьВР КАК СуммаВРКт,
	|	""Принятие к учету по результатам инвентаризации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуНМА2_4 КАК Операция
	|	ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАПоИнвентаризации)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	//++ Локализация

	СписокЗапросов = Новый Массив;
	
	#Область втЦелевоеФинансированиеИтог
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Счет,
	|	ТабличнаяЧасть.Субконто1,
	|	ТабличнаяЧасть.Субконто2,
	|	ТабличнаяЧасть.Субконто3,
	|	ТабличнаяЧасть.Сумма,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Подразделение КАК Подразделение,
	|	ТаблицаДокумента.НаправлениеДеятельности,
	|	ТаблицаДокумента.ВариантПримененияЦелевогоФинансирования,
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Дата,
	|	ТабличнаяЧасть.НомерСтроки
	|ПОМЕСТИТЬ втИсточникиЦелевогоФинансирования
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуНМА2_4 КАК ТаблицаДокумента
	|		ПО (ТаблицаДокумента.Ссылка = ДокументыКОтражению.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуНМА2_4.ЦелевоеФинансирование КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ТаблицаДокумента.Ссылка)
	|ГДЕ
	|	ТаблицаДокумента.ВариантПримененияЦелевогоФинансирования В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИсточникиЦелевогоФинансирования.Ссылка,
	|	СУММА(втИсточникиЦелевогоФинансирования.Сумма) КАК Сумма,
	|	КОЛИЧЕСТВО(втИсточникиЦелевогоФинансирования.Счет) КАК Количество
	|ПОМЕСТИТЬ втИсточникиЦелевогоФинансированияСгруппированные
	|ИЗ
	|	втИсточникиЦелевогоФинансирования КАК втИсточникиЦелевогоФинансирования
	|
	|СГРУППИРОВАТЬ ПО
	|	втИсточникиЦелевогоФинансирования.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыКОтражению.Ссылка,
	|	СтоимостьНМА.НематериальныйАктив,
	|	СУММА(СтоимостьНМА.СтоимостьЦФ) КАК Сумма
	|ПОМЕСТИТЬ втЦелевоеФинансированиеНМА
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуНМА2_4 КАК ТаблицаДокумента
	|		ПО (ТаблицаДокумента.Ссылка = ДокументыКОтражению.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|		ПО (СтоимостьНМА.Регистратор = ДокументыКОтражению.Ссылка)
	|			И (СтоимостьНМА.СтоимостьЦФ <> 0)
	|ГДЕ
	|	ТаблицаДокумента.ВариантПримененияЦелевогоФинансирования В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное))
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыКОтражению.Ссылка,
	|	СтоимостьНМА.НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЦелевоеФинансированиеНМА.Ссылка КАК Ссылка,
	|	втЦелевоеФинансированиеНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	втИсточникиЦелевогоФинансирования.Счет КАК Счет,
	|	втИсточникиЦелевогоФинансирования.Субконто1 КАК Субконто1,
	|	втИсточникиЦелевогоФинансирования.Субконто2 КАК Субконто2,
	|	втИсточникиЦелевогоФинансирования.Субконто3 КАК Субконто3,
	|	ВЫБОР
	|		КОГДА втИсточникиЦелевогоФинансированияСгруппированные.Сумма = 0
	|			ТОГДА ВЫРАЗИТЬ(втЦелевоеФинансированиеНМА.Сумма / втИсточникиЦелевогоФинансированияСгруппированные.Количество КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ВЫРАЗИТЬ(втЦелевоеФинансированиеНМА.Сумма * (втИсточникиЦелевогоФинансирования.Сумма / втИсточникиЦелевогоФинансированияСгруппированные.Сумма) КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК Сумма,
	|	втИсточникиЦелевогоФинансирования.Организация,
	|	втИсточникиЦелевогоФинансирования.Подразделение,
	|	втИсточникиЦелевогоФинансирования.НаправлениеДеятельности,
	|	втИсточникиЦелевогоФинансирования.ВариантПримененияЦелевогоФинансирования,
	|	втИсточникиЦелевогоФинансирования.Ссылка КАК Ссылка1,
	|	втИсточникиЦелевогоФинансирования.Дата,
	|	втИсточникиЦелевогоФинансирования.НомерСтроки,
	|	втЦелевоеФинансированиеНМА.Сумма КАК ПолнаяСуммаПоНМА
	|ПОМЕСТИТЬ втЦелевоеФинансирование
	|ИЗ
	|	втЦелевоеФинансированиеНМА КАК втЦелевоеФинансированиеНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втИсточникиЦелевогоФинансирования КАК втИсточникиЦелевогоФинансирования
	|		ПО втЦелевоеФинансированиеНМА.Ссылка = втИсточникиЦелевогоФинансирования.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втИсточникиЦелевогоФинансированияСгруппированные КАК втИсточникиЦелевогоФинансированияСгруппированные
	|		ПО втЦелевоеФинансированиеНМА.Ссылка = втИсточникиЦелевогоФинансированияСгруппированные.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЦелевоеФинансирование.Ссылка КАК Ссылка,
	|	втЦелевоеФинансирование.НематериальныйАктив КАК НематериальныйАктив,
	|	СУММА(втЦелевоеФинансирование.Сумма) КАК Сумма,
	|	МАКСИМУМ(втЦелевоеФинансирование.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ втЦелевоеФинансированиеСгруппированное
	|ИЗ
	|	втЦелевоеФинансирование КАК втЦелевоеФинансирование
	|
	|СГРУППИРОВАТЬ ПО
	|	втЦелевоеФинансирование.Ссылка,
	|	втЦелевоеФинансирование.НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЦелевоеФинансирование.НематериальныйАктив,
	|	втЦелевоеФинансирование.Счет,
	|	втЦелевоеФинансирование.Субконто1,
	|	втЦелевоеФинансирование.Субконто2,
	|	втЦелевоеФинансирование.Субконто3,
	|	ВЫБОР
	|		КОГДА НЕ втЦелевоеФинансированиеСгруппированное.НематериальныйАктив ЕСТЬ NULL
	|				И втЦелевоеФинансированиеСгруппированное.Сумма <> втЦелевоеФинансирование.ПолнаяСуммаПоНМА
	|			ТОГДА втЦелевоеФинансирование.Сумма + втЦелевоеФинансирование.ПолнаяСуммаПоНМА - втЦелевоеФинансированиеСгруппированное.Сумма
	|		ИНАЧЕ втЦелевоеФинансирование.Сумма
	|	КОНЕЦ КАК Сумма,
	|	втЦелевоеФинансирование.Организация,
	|	втЦелевоеФинансирование.Подразделение,
	|	втЦелевоеФинансирование.НаправлениеДеятельности,
	|	втЦелевоеФинансирование.ВариантПримененияЦелевогоФинансирования,
	|	втЦелевоеФинансирование.Ссылка,
	|	втЦелевоеФинансирование.Дата
	|ПОМЕСТИТЬ втЦелевоеФинансированиеИтог
	|ИЗ
	|	втЦелевоеФинансирование КАК втЦелевоеФинансирование
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЦелевоеФинансированиеСгруппированное КАК втЦелевоеФинансированиеСгруппированное
	|		ПО втЦелевоеФинансирование.Ссылка = втЦелевоеФинансированиеСгруппированное.Ссылка
	|			И втЦелевоеФинансирование.НематериальныйАктив = втЦелевоеФинансированиеСгруппированное.НематериальныйАктив
	|			И втЦелевоеФинансирование.НомерСтроки = втЦелевоеФинансированиеСгруппированное.НомерСтроки";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	СписокЗапросов.Добавить(Символы.ПС);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());

	//-- Локализация
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ФормаДокумента

Процедура ПослеЗаписиНаСервере(Форма) Экспорт

	//++ Локализация
	ФормаДокумента_ЦелевоеФинансированиеЗаполнитьСлужебныеРеквизиты(Форма);
	//-- Локализация
	
КонецПроцедуры
 
Процедура ПриИзмененииРеквизита(ИмяЭлемента, Форма) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если ИмяЭлемента = Элементы.ДокументНаОсновании.Имя Тогда
		
		ЗаполнитьНаОснованииИнвентаризации(Объект, Истина);
		
	ИначеЕсли ИмяЭлемента = Элементы.Дата.Имя Тогда
		
		ФормаДокумента_ДатаПриИзменении(Форма, Объект);
		
	ИначеЕсли ИмяЭлемента = Элементы.ПервоначальнаяСтоимостьБУ.Имя Тогда
		
		ФормаДокумента_ПервоначальнаяСтоимостьБУПриИзменении(Форма, Объект);
	
	ИначеЕсли ИмяЭлемента = Элементы.ЦелевоеФинансированиеСчет.Имя Тогда
		
		ФормаДокумента_ЦелевоеФинансированиеСчетПриИзменении(Форма);
		
	ИначеЕсли ИмяЭлемента = Элементы.ПорядокУчетаНУ.Имя Тогда
		
		ФормаДокумента_ПорядокУчетаНУПриИзменении(Форма);
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	ИмяКоманды - Строка
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	//++ Локализация
	
	Объект = Форма.Объект;
	
	Если ИмяКоманды = Форма.Команды.ЗаполнитьИсточникиФинансирования.Имя Тогда
		ФормаДокумента_ЗаполнитьИсточникиФинансирования(Объект);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата);
	Форма.ПрименяетсяУСНДоходыМинусРасходы = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Объект.Организация, Объект.Дата);
	
	Элементы.ГруппаУстановкаПараметраУчетаНУ.Доступность = 
		Не Форма.ТолькоПросмотр
		И ПравоДоступа("Редактирование", Метаданные.Документы.ПринятиеКУчетуНМА2_4);
		
	ФормаДокумента_ЦелевоеФинансированиеЗаполнитьСлужебныеРеквизиты(Форма);
		
	Форма.ЕстьСвязанныеОрганизации = Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Объект.Организация);
	
	ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
		Элементы.ХозяйственнаяОперация.СписокВыбора,
		Истина,
		Перечисления.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации,
		НСтр("ru = 'Принятие к учету на основании инвентаризации';
			|en = 'Recognition based on stocktaking'"));
	
	Элементы.ХозяйственнаяОперация.Видимость = (Элементы.ХозяйственнаяОперация.СписокВыбора.Количество() > 1);
	
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.РегламентированномУчете"),
			НСтр("ru = 'Бухгалтерском и налоговом учете';
				|en = 'Accounting and tax accounting'"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.БухгалтерскомУчете"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.НалоговомУчете"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИБухгалтерскомУчете"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИНалоговомУчете"));
			
		//
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаБУ.СписокВыбора, 
			Истина, 
			Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы);
								
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаУУ.СписокВыбора, 
			Истина, 
			Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ГоловнаяОрганизация = НастройкиНалоговУчетныхПолитикПовтИсп.ГоловнаяОрганизация(Объект.Организация);
		Форма.ЕстьСвязанныеОрганизации = Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Объект.Организация);
		Форма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", ГоловнаяОрганизация));
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата);
		Форма.ПрименяетсяУСНДоходыМинусРасходы = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Объект.Организация, Объект.Дата);
		ПараметрыПБУ18 = УчетнаяПолитика.ПараметрыПБУ18(Объект.Организация, Объект.Дата);
		Форма.ПоддержкаПБУ18 = ПараметрыПБУ18.ПрименяетсяПБУ18;
		Форма.ВедетсяУчетПостоянныхИВременныхРазниц = ПараметрыПБУ18.ВедетсяУчетПостоянныхИВременныхРазниц;
		
		ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
									"НастройкиУчетаНДС", Объект.Организация, Объект.Дата);
		
		Форма.РаздельныйУчетВНАПоНалогообложениюНДС = (ПараметрыУчетнойПолитики <> Неопределено И ПараметрыУчетнойПолитики.РаздельныйУчетВНАПоНалогообложениюНДС);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначенияПараметровВыбора = ОбщегоНазначенияУТКлиентСервер.ПараметрыПодбора(Элементы.СтатьяРасходовНУ, Форма);

		ВнеоборотныеАктивы.УстановитьПараметрыВыбораСтатьиПоПорядкуУчета(
			Элементы.СтатьяРасходовНУ.ПараметрыВыбора,
			ЗначенияПараметровВыбора);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область Прочее

Процедура ЗаполнитьДокументПоОтбору(Объект, Основание) Экспорт

	//++ Локализация
	
	Если Основание.Свойство("ДокументОснование")
		И ТипЗнч(Основание.ДокументОснование) = Тип("ДокументСсылка.ИнвентаризацияНМА") Тогда
		
		Объект.ДокументОснование = Основание.ДокументОснование;
		Объект.ДокументНаОсновании = Истина;
		Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации;
		
		ЗаполнитьНаОснованииИнвентаризацииОСПриВводеНаОсновании(Объект, Основание);
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты(Объект, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить(
		"ЕстьСвязанныеОрганизации", 
		Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Объект.Организация));
	
	ВспомогательныеРеквизиты.Вставить(
		"ПлательщикНалогаНаПрибыль", 
		УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата));
	
	ВспомогательныеРеквизиты.Вставить(
		"ПрименяетсяУСНДоходыМинусРасходы", 
		УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Объект.Организация, Объект.Дата));
	
	ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаНДС",
			Объект.Организация,
			Объект.Дата);
	ВспомогательныеРеквизиты.Вставить(
		"РаздельныйУчетВНАПоНалогообложениюНДС",
		ПараметрыУчетнойПолитики <> Неопределено И ПараметрыУчетнойПолитики.РаздельныйУчетВНАПоНалогообложениюНДС);
				
	ВспомогательныеРеквизиты.Вставить(
		"ВедетсяУчетПостоянныхИВременныхРазниц",
		УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Объект.Организация, Объект.Дата));
		
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСписокРеквизитовСЗаданнымПредставлением(СписокРеквизитов) Экспорт

	//++ Локализация
	
	СписокРеквизитов.Вставить("ПорядокУчетаНУ", НСтр("ru = 'Порядок списания (налоговый учет)';
													|en = 'Write-off procedure (tax accounting)'"));
	
	//-- Локализация
	
КонецПроцедуры

// Дополняет параметры выбора статей и аналитик.
// 
// Параметры:
// 	ПараметрыВыбораСтатьиИАналитики - Массив из см. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики -
Процедура ДополнитьПараметрыВыбораСтатейИАналитик(ПараметрыВыбораСтатьиИАналитики) Экспорт

	//++ Локализация
	
	// СтатьяРасходовНУ
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья = "СтатьяРасходовНУ";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовНУ";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовНУ");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовНУ");
	
	ПараметрыВыбораСтатьиИАналитики.Добавить(ПараметрыВыбора);
	
	// СтатьяДоходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья = "СтатьяДоходов";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиДоходов = Истина;
	ПараметрыВыбора.АналитикаДоходов = "АналитикаДоходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяДоходовПоИнвентаризации");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("АналитикаДоходовПоИнвентаризации");
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяДоходовЦФ");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("АналитикаДоходовЦФ");
	
	ПараметрыВыбораСтатьиИАналитики.Добавить(ПараметрыВыбора);
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ЗначенияПараметровПроведения(ЗначенияПараметровПроведения) Экспорт

	//++ Локализация
	ЗначенияПараметровПроведения.Вставить("ПредельнаяСтоимостьСписанияНаРасходы", ВнеоборотныеАктивыЛокализация.ПредельнаяСтоимостьСписанияНаРасходы());
	//-- Локализация
	
КонецПроцедуры

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	
	ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияНМА(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеДоходы(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ТаблицыДвиженийРасчетаСтоимости(Запрос, ТекстыЗапроса) Экспорт
	
	//++ Локализация
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Неопределено);
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Неопределено);
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - 
//  Запрос - Запрос -
// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПервоначальныеСведенияНМА(Запрос, ТекстыЗапроса) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапросаВтРасчетСтоимостиСгруппированная(Запрос, ТекстыЗапроса);
	ТекстЗапросаТаблицаВтПорядокПринятияКУчету(Запрос, ТекстыЗапроса);
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияНМА(ТекстыЗапроса, "ДанныеДокументаРеквизиты");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                         КАК Регистратор,
	|	ДанныеДокумента.Период                         КАК Период,
	|	ДанныеДокумента.НематериальныйАктив            КАК НематериальныйАктив,
	|	ДанныеДокумента.Организация                    КАК Организация,
	|	ДанныеДокумента.СпособПоступления              КАК СпособПоступления,
	|	
	|	ВЫБОР
	|		КОГДА ВтПорядокПринятияКУчету.ПринятьКУчетуУУ
	|			ТОГДА ДанныеДокумента.Период
	|		ИНАЧЕ ПервоначальныеСведенияНМА.ДатаПринятияКУчетуУУ
	|	КОНЕЦ КАК ДатаПринятияКУчетуУУ,
	|
	|	ВЫБОР
	|		КОГДА ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|			ТОГДА ДанныеДокумента.Период
	|		ИНАЧЕ ПервоначальныеСведенияНМА.ДатаПринятияКУчетуБУ
	|	КОНЕЦ КАК ДатаПринятияКУчетуБУ,
	|	
	|	ВЫБОР
	|		КОГДА ВтПорядокПринятияКУчету.ПринятьКУчетуНУ
	|			ТОГДА ДанныеДокумента.Период
	|		ИНАЧЕ ПервоначальныеСведенияНМА.ДатаПринятияКУчетуНУ
	|	КОНЕЦ КАК ДатаПринятияКУчетуНУ,
	|	
	|	ВЫБОР
	|		КОГДА ВтПорядокПринятияКУчету.ПринятьКУчетуУУ
	|			ТОГДА ДанныеДокумента.Ссылка
	|		ИНАЧЕ ПервоначальныеСведенияНМА.ДокументПринятияКУчетуУУ
	|	КОНЕЦ КАК ДокументПринятияКУчетуУУ,
	|
	|	ВЫБОР
	|		КОГДА ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|			ТОГДА ДанныеДокумента.Ссылка
	|		ИНАЧЕ ПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ
	|	КОНЕЦ КАК ДокументПринятияКУчетуБУ,
	|
	|	ВЫБОР
	|		КОГДА ВтПорядокПринятияКУчету.ПринятьКУчетуНУ
	|			ТОГДА ДанныеДокумента.Ссылка
	|		ИНАЧЕ ПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ
	|	КОНЕЦ КАК ДокументПринятияКУчетуНУ,
	|
	|	ВЫБОР
	|		КОГДА ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|			ТОГДА ДанныеДокумента.МетодНачисленияАмортизацииБУ
	|		ИНАЧЕ ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииБУ
	|	КОНЕЦ КАК МетодНачисленияАмортизацииБУ,
	|
	|	ВЫБОР
	|		КОГДА ВтПорядокПринятияКУчету.ПринятьКУчетуНУ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.Линейный)
	|		ИНАЧЕ ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииНУ
	|	КОНЕЦ КАК МетодНачисленияАмортизацииНУ,
	|
	|	ВЫБОР 
	|		КОГДА ВтПорядокПринятияКУчету.ПринятьКУчетуУУ
	|			ТОГДА ЕСТЬNULL(РасчетСтоимости.Стоимость + РасчетСтоимости.НДС, ДанныеДокумента.ПервоначальнаяСтоимостьУУ)
	|		ИНАЧЕ ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьУУ
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьУУ,
	|
	|	ВЫБОР 
	|		КОГДА ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|			ТОГДА ЕСТЬNULL(РасчетСтоимости.СтоимостьРегл + РасчетСтоимости.НДСРегл + РасчетСтоимости.СтоимостьЦФ, ДанныеДокумента.ПервоначальнаяСтоимостьБУ)
	|		ИНАЧЕ ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьБУ,
	|
	|	ВЫБОР 
	|		КОГДА ВтПорядокПринятияКУчету.ПринятьКУчетуНУ 
	|			ТОГДА ЕСТЬNULL(РасчетСтоимости.СтоимостьНУ + РасчетСтоимости.СтоимостьНУЦФ, ДанныеДокумента.ПервоначальнаяСтоимостьБУ)
	|		ИНАЧЕ ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьНУ,
	|
	|	ВЫБОР 
	|		КОГДА ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|				ИЛИ ВтПорядокПринятияКУчету.ПринятьКУчетуНУ 
	|			ТОГДА ЕСТЬNULL(РасчетСтоимости.СтоимостьПР + РасчетСтоимости.СтоимостьПРЦФ, 0)
	|		ИНАЧЕ ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьПР
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьПР,
	|
	|	ВЫБОР 
	|		КОГДА ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|				ИЛИ ВтПорядокПринятияКУчету.ПринятьКУчетуНУ 
	|			ТОГДА ЕСТЬNULL(РасчетСтоимости.СтоимостьВР + РасчетСтоимости.СтоимостьВРЦФ, 0)
	|		ИНАЧЕ ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьВР
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьВР,
	|
	|	ВЫБОР 
	|		КОГДА НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуНУ
	|			ТОГДА ПервоначальныеСведенияНМА.ПорядокУчетаНУ
	|		КОГДА ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы)
	|				И ЕСТЬNULL(РасчетСтоимости.СтоимостьНУ, ДанныеДокумента.ПервоначальнаяСтоимостьБУ) <= &ПредельнаяСтоимостьСписанияНаРасходы
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|		КОГДА ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы)
	|				И ЕСТЬNULL(РасчетСтоимости.СтоимостьНУ, ДанныеДокумента.ПервоначальнаяСтоимостьБУ) > &ПредельнаяСтоимостьСписанияНаРасходы
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|		ИНАЧЕ ДанныеДокумента.ПорядокУчетаНУ
	|	КОНЕЦ КАК ПорядокУчетаНУ
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРасчетСтоимостиСгруппированная КАК РасчетСтоимости
	|		ПО РасчетСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|			И РасчетСтоимости.ОбъектУчета = ДанныеДокумента.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПорядокПринятияКУчету КАК ВтПорядокПринятияКУчету
	|		ПО ВтПорядокПринятияКУчету.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПервоначальныеСведенияНМА КАК ПервоначальныеСведенияНМА
	|		ПО ПервоначальныеСведенияНМА.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	(ВтПорядокПринятияКУчету.ПринятьКУчетуУУ
	|		ИЛИ ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|		ИЛИ ВтПорядокПринятияКУчету.ПринятьКУчетуНУ)
	|";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - 
//  Запрос - Запрос -
// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПорядокУчетаНМАБУ(Запрос, ТекстыЗапроса) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПорядокУчетаНМАБУ(ТекстыЗапроса, "ДанныеДокументаРеквизиты");
	
	ТекстЗапросаТаблицаВтПорядокПринятияКУчету(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка               КАК Регистратор,
	|	ДанныеДокумента.Период               КАК Период,
	|	ДанныеДокумента.НематериальныйАктив  КАК НематериальныйАктив,
	|	ДанныеДокумента.Организация          КАК Организация,
	|
	|	ВЫБОР
	|		КОГДА втПорядокПринятияКУчету.ПринятьКУчетуБУ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|		ИНАЧЕ втПорядокУчетаНМАБУ.СостояниеБУ
	|	КОНЕЦ КАК СостояниеБУ,
	|
	|	ВЫБОР
	|		КОГДА втПорядокПринятияКУчету.ПринятьКУчетуНУ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|		ИНАЧЕ втПорядокУчетаНМАБУ.СостояниеНУ
	|	КОНЕЦ КАК СостояниеНУ,
	|
	|	ДанныеДокумента.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|		И ВтПорядокПринятияКУчету.ПринятьКУчетуБУ КАК НачислятьАмортизациюБУ,
	|
	|	ВЫБОР
	|		КОГДА НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуНУ
	|			ТОГДА ЛОЖЬ
	|		КОГДА ДанныеДокумента.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|		ИНАЧЕ ДанныеДокумента.НачислятьАмортизациюНУ
	|	КОНЕЦ                                   КАК НачислятьАмортизациюНУ,
	|
	|	ДанныеДокумента.СтатьяРасходовБУ                       КАК СтатьяРасходовБУ,
	|	ДанныеДокумента.АналитикаРасходовБУ                    КАК АналитикаРасходовБУ,
	|	ДанныеДокумента.СтатьяРасходовНУ                       КАК СтатьяРасходовНУ,
	|	ДанныеДокумента.АналитикаРасходовНУ                    КАК АналитикаРасходовНУ,
	|	ДанныеДокумента.ПередаватьРасходыВДругуюОрганизацию    КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ДанныеДокумента.ОрганизацияПолучательРасходов          КАК ОрганизацияПолучательРасходов,
	|	ДанныеДокумента.НалогообложениеНДС                     КАК НалогообложениеНДС
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтПорядокПринятияКУчету КАК ВтПорядокПринятияКУчету
	|		ПО ВтПорядокПринятияКУчету.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаНМАБУ КАК втПорядокУчетаНМАБУ
	|		ПО втПорядокУчетаНМАБУ.Ссылка = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	(ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|		ИЛИ ВтПорядокПринятияКУчету.ПринятьКУчетуНУ)
	|";
	
	//-- Локализация

	Возврат ТекстЗапроса;
		
КонецФункции

// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - 
//  Запрос - Запрос -
// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПараметрыАмортизацииНМАБУ(Запрос, ТекстыЗапроса) Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапросаТаблицаВтПорядокПринятияКУчету(Запрос, ТекстыЗапроса);

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                      КАК Регистратор,
	|	ДанныеДокумента.Период                      КАК Период,
	|	ДанныеДокумента.Период                      КАК ДатаПоследнегоИзменения,
	|	ДанныеДокумента.НематериальныйАктив         КАК НематериальныйАктив,
	|	ДанныеДокумента.Организация                 КАК Организация,
	|	ДанныеДокумента.СрокИспользованияБУ         КАК СрокПолезногоИспользованияБУ,
	|	ДанныеДокумента.СрокИспользованияНУ         КАК СрокПолезногоИспользованияНУ,
	|	ДанныеДокумента.СрокИспользованияБУ         КАК СрокИспользованияДляВычисленияАмортизации,
	|	ДанныеДокумента.ОбъемНаработки              КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ДанныеДокумента.КоэффициентБУ               КАК КоэффициентБУ,
	|	ДанныеДокумента.СпециальныйКоэффициентНУ    КАК СпециальныйКоэффициент,
	|	ДанныеДокумента.ЛиквидационнаяСтоимостьРегл КАК ЛиквидационнаяСтоимость
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтПорядокПринятияКУчету КАК ВтПорядокПринятияКУчету
	|		ПО ВтПорядокПринятияКУчету.Ссылка = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	(ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|		ИЛИ ВтПорядокПринятияКУчету.ПринятьКУчетуНУ)";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - 
//  Запрос - Запрос -
//  ДополнительныеПоля - Строка -
// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса, ДопПоля) Экспорт

	ТекстЗапроса = Неопределено;

	//++ Локализация
	
	ЗапросыРегистра = Новый Массив;
	ЗапросыРегистра.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы(ДопПоля));

	ВнеоборотныеАктивыСлужебный.ТекстЗапросаПрочиеРасходыПринятияКУчету(ЗапросыРегистра);
		
	#Область СписыватьПриПринятииКУчету_НУ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период                       КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.Подразделение                КАК Подразделение,
	|	ДанныеДокумента.СтатьяРасходовНУ             КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходовНУ          КАК АналитикаРасходов,
	|	ДанныеДокумента.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	0                                            КАК СуммаСНДС,
	|	0                                            КАК СуммаБезНДС,
	|	0                                            КАК СуммаБезНДСУпр,
	|
	|	0                                            КАК СуммаСНДСРегл,
	|	0                                            КАК СуммаБезНДСРегл,
	|
	|	0                                            КАК ПостояннаяРазница,
	|	-РасчетСтоимости.СтоимостьНУ                 КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиНМА) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры,
	|
	|	&ИдентификаторНеиспользуемойФинЗаписи        КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО                                 КАК НастройкаХозяйственнойОперации,
	|
	|	ДанныеДокумента.Ссылка КАК Регистратор
	//++ НЕ УТКА
	|	,0                                           КАК СуммаНДД
	//-- НЕ УТКА
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК РасчетСтоимости
	|		ПО РасчетСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРасчетСтоимостиСгруппированная КАК ВтРасчетСтоимостиСгруппированная
	|		ПО ВтРасчетСтоимостиСгруппированная.Ссылка = РасчетСтоимости.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации)
	|	И (ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету)
	|			ИЛИ ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы)
	|					И ВтРасчетСтоимостиСгруппированная.СтоимостьНУ <= &ПредельнаяСтоимостьСписанияНаРасходы)
	|";
	ЗапросыРегистра.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область НеПриниматьКУчетуВключитьВРасходы_НУ_Инвентаризация
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период                       КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.Подразделение                КАК Подразделение,
	|	ДанныеДокумента.СтатьяРасходовНУ             КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходовНУ          КАК АналитикаРасходов,
	|	ДанныеДокумента.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	0                                            КАК СуммаСНДС,
	|	0                                            КАК СуммаБезНДС,
	|	0                                            КАК СуммаБезНДСУпр,
	|
	|	0                                            КАК СуммаСНДСРегл,
	|	0                                            КАК СуммаБезНДСРегл,
	|
	|	0                                            КАК ПостояннаяРазница,
	|	-ДанныеДокумента.ПервоначальнаяСтоимостьНУ   КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиНМА) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры,
	|
	|	&ИдентификаторНеиспользуемойФинЗаписи        КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО                                 КАК НастройкаХозяйственнойОперации,
	|
	|	ДанныеДокумента.Ссылка КАК Регистратор
	//++ НЕ УТКА
	|	,0                                           КАК СуммаНДД
	//-- НЕ УТКА
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации)
	|	И ДанныеДокумента.ПорядокУчетаНУ В (
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету),
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы))
	|";
	ЗапросыРегистра.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	//++ НЕ УТКА
	#Область РеклассификацияСуммыНДД
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период                       КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|   ВтРасчетСтоимости.КорПодразделение           КАК Подразделение,
	|	ВтРасчетСтоимости.КорСтатьяРасходов          КАК СтатьяРасходов,
	|	ВтРасчетСтоимости.КорАналитикаРасходов       КАК АналитикаРасходов,
	|	ВтРасчетСтоимости.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаБезНДСУпр,
	|
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	                                                                             
	|	&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации,
	|
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|
	|	,ВтРасчетСтоимости.СуммаНДД КАК СуммаНДД
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК ВтРасчетСтоимости
	|		ПО ВтРасчетСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРасчетСтоимостиСгруппированная КАК ВтРасчетСтоимостиСгруппированная
	|		ПО ВтРасчетСтоимостиСгруппированная.ОбъектУчета = ВтРасчетСтоимости.ОбъектУчета
	|
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации)
	|
	|	И (ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету)
	|			ИЛИ ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|			ИЛИ ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы)
	|					И ВтРасчетСтоимостиСгруппированная.СтоимостьНУ <= &ПредельнаяСтоимостьСписанияНаРасходы)
	|
	|	И ВтРасчетСтоимости.СуммаНДД <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Период                       КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|   ДанныеДокумента.Местонахождение              КАК Подразделение,
	|	ДанныеДокумента.СтатьяРасходовНУ             КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходовНУ          КАК АналитикаРасходов,
	|	ДанныеДокумента.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаБезНДСУпр,
	|
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	                                                                             
	|	&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации,
	|
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|
	|	,ВтРасчетСтоимости.СуммаНДД КАК СуммаНДД
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК ВтРасчетСтоимости
	|		ПО ВтРасчетСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРасчетСтоимостиСгруппированная КАК ВтРасчетСтоимостиСгруппированная
	|		ПО ВтРасчетСтоимостиСгруппированная.ОбъектУчета = ВтРасчетСтоимости.ОбъектУчета
	|
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации)
	|
	|	И (ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету)
	|			ИЛИ ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|			ИЛИ ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы)
	|					И ВтРасчетСтоимостиСгруппированная.СтоимостьНУ <= &ПредельнаяСтоимостьСписанияНаРасходы)
	|
	|	И ВтРасчетСтоимости.СуммаНДД <> 0
	|";
	ЗапросыРегистра.Добавить(ТекстЗапроса);
	#КонецОбласти
	//-- НЕ УТКА
	
	ТекстЗапроса = СтрСоединить(ЗапросыРегистра, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - 
//  Запрос - Запрос -
// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаСтоимостьНМА(Запрос, ТекстыЗапроса) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапросаТаблицаВтПорядокПринятияКУчету(Запрос, ТекстыЗапроса);
	
	СписокЗапросов = Новый Массив;
	
	#Область ПринятиеКУчету
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                                      КАК Регистратор,
	|	ДанныеДокумента.Период                                      КАК Период,
	|	ДанныеДокумента.НематериальныйАктив                         КАК НематериальныйАктив,
	|	ДанныеДокумента.Организация                                 КАК Организация,
	|	ДанныеДокумента.Подразделение                               КАК Подразделение,
	|	ДанныеДокумента.ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.НаправлениеДеятельности                     КАК НаправлениеДеятельности,
	|	
	|	ВЫБОР
	|		КОГДА НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуУУ
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетСтоимости.Стоимость, ДанныеДокумента.ПервоначальнаяСтоимостьУУ)
	|	КОНЕЦ КАК Стоимость,
	|
	|	ВЫБОР
	|		КОГДА НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетСтоимости.СтоимостьРегл, ДанныеДокумента.ПервоначальнаяСтоимостьБУ - ДанныеДокумента.СуммаЦелевыхСредств)
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуНУ
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетСтоимости.СтоимостьНУ, ДанныеДокумента.ПервоначальнаяСтоимостьНУ)
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	|	ВЫБОР
	|		КОГДА НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|				ИЛИ ДанныеДокумента.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетСтоимости.СтоимостьПР, ДанныеДокумента.ПервоначальнаяСтоимостьПР)
	|	КОНЕЦ КАК СтоимостьПР,
	|
	|	ВЫБОР
	|		КОГДА НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетСтоимости.СтоимостьРегл, ДанныеДокумента.ПервоначальнаяСтоимостьБУ - ДанныеДокумента.СуммаЦелевыхСредств)
	|	КОНЕЦ
	|		- ВЫБОР
	|			КОГДА НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуНУ
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(РасчетСтоимости.СтоимостьНУ, ДанныеДокумента.ПервоначальнаяСтоимостьНУ)
	|		КОНЕЦ
	|		- ВЫБОР
	|			КОГДА НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|					ИЛИ ДанныеДокумента.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(РасчетСтоимости.СтоимостьПР, ДанныеДокумента.ПервоначальнаяСтоимостьПР)
	|		КОНЕЦ КАК СтоимостьВР,
	|
	|	ЕСТЬNULL(РасчетСтоимости.СтоимостьЦФ, 0) КАК СтоимостьЦФ,
	|	ЕСТЬNULL(РасчетСтоимости.СтоимостьНУЦФ, 0) КАК СтоимостьНУЦФ,
	|	ЕСТЬNULL(РасчетСтоимости.СтоимостьПРЦФ, 0) КАК СтоимостьПРЦФ,
	|	ЕСТЬNULL(РасчетСтоимости.СтоимостьВРЦФ, 0) КАК СтоимостьВРЦФ,
	|	
	|	0 КАК ПредварительнаяСтоимость,
	|	0 КАК ПредварительнаяСтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|				И НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуНУ
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетСтоимости.КорПостояннаяРазница, 0)
	|	КОНЕЦ КАК КорПостояннаяРазница,
	|
	|	ВЫБОР
	|		КОГДА НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|				И НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуНУ
	|			ТОГДА 0
	|		ИНАЧЕ 
	|			ВЫБОР
	|				КОГДА НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|					ТОГДА 0
	|				ИНАЧЕ ЕСТЬNULL(РасчетСтоимости.СтоимостьРегл + РасчетСтоимости.СтоимостьЦФ, ДанныеДокумента.ПервоначальнаяСтоимостьБУ - ДанныеДокумента.СуммаЦелевыхСредств)
	|			КОНЕЦ
	|				- ВЫБОР
	|						КОГДА НЕ ВтПорядокПринятияКУчету.ПринятьКУчетуНУ
	|							ТОГДА 0
	|						ИНАЧЕ ЕСТЬNULL(РасчетСтоимости.КорСуммаНУ, ДанныеДокумента.ПервоначальнаяСтоимостьНУ)
	|					КОНЕЦ
	|				- ЕСТЬNULL(РасчетСтоимости.КорПостояннаяРазница, 0)
	|	КОНЕЦ КАК КорВременнаяРазница,
	|	
	|	ДанныеДокумента.ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ВариантПримененияЦелевогоФинансирования     КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеДокумента.ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.НалогообложениеНДС                          КАК НалогообложениеНДС,
	|	
	|	ЕСТЬNULL(РасчетСтоимости.КорПодразделение, НЕОПРЕДЕЛЕНО)                КАК КорПодразделение,
	|	ЕСТЬNULL(РасчетСтоимости.КорНаправлениеДеятельности, НЕОПРЕДЕЛЕНО)      КАК КорНаправлениеДеятельности,
	|	ЕСТЬNULL(РасчетСтоимости.КорСтатьяРасходов, НЕОПРЕДЕЛЕНО)               КАК КорСтатьяРасходов,
	|	ЕСТЬNULL(РасчетСтоимости.КорАналитикаРасходов, НЕОПРЕДЕЛЕНО)            КАК КорАналитикаРасходов,
	|	
	|	НЕ РасчетСтоимости.ОбъектУчета ЕСТЬ NULL                                КАК РасчетСтоимости,
	|	
	|	ЕСТЬNULL(РасчетСтоимости.ИдентификаторСтроки, &ИдентификаторНеиспользуемойФинЗаписи) КАК ИдентификаторФинЗаписи,
	|	ДанныеДокумента.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК РасчетСтоимости
	|		ПО РасчетСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПорядокПринятияКУчету КАК ВтПорядокПринятияКУчету
	|		ПО ВтПорядокПринятияКУчету.Ссылка = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации)
	|	И (ВтПорядокПринятияКУчету.ПринятьКУчетуУУ
	|			ИЛИ ВтПорядокПринятияКУчету.ПринятьКУчетуБУ
	|			ИЛИ ВтПорядокПринятияКУчету.ПринятьКУчетуНУ)
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПринятиеКУчету_Инвентаризация
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                       КАК Регистратор,
	|	ДанныеДокумента.Период                       КАК Период,
	|	ДанныеДокумента.НематериальныйАктив          КАК НематериальныйАктив,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.Подразделение                КАК Подразделение,
	|	ДанныеДокумента.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	
	|	ДанныеДокумента.ПервоначальнаяСтоимостьУУ КАК Стоимость,
	|	ДанныеДокумента.ПервоначальнаяСтоимостьБУ КАК СтоимостьРегл,
	|	ДанныеДокумента.ПервоначальнаяСтоимостьНУ КАК СтоимостьНУ,
	|	ДанныеДокумента.ПервоначальнаяСтоимостьПР КАК СтоимостьПР,
	|	ДанныеДокумента.ПервоначальнаяСтоимостьВР КАК СтоимостьВР,
	|
	|	0 КАК СтоимостьЦФ,
	|	0 КАК СтоимостьНУЦФ,
	|	0 КАК СтоимостьПРЦФ,
	|	0 КАК СтоимостьВРЦФ,
	|	
	|	0 КАК ПредварительнаяСтоимость,
	|	0 КАК ПредварительнаяСтоимостьРегл,
	|
	|	0 КАК КорПостояннаяРазница,
	|	0 КАК КорВременнаяРазница,
	|	
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ВариантПримененияЦелевогоФинансирования КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеДокумента.ОтражатьВРеглУчете    КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете     КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.НалогообложениеНДС    КАК НалогообложениеНДС,
	|	
	|	НЕОПРЕДЕЛЕНО      КАК КорПодразделение,
	|	НЕОПРЕДЕЛЕНО      КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО      КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО      КАК КорАналитикаРасходов,
	|	
	|	ЛОЖЬ              КАК РасчетСтоимости,
	|
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	ДанныеДокумента.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации)
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПредварительнаяСтоимость
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                       КАК Регистратор,
	|	ДанныеДокумента.Период                       КАК Период,
	|	ДанныеДокумента.НематериальныйАктив          КАК НематериальныйАктив,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.Подразделение                КАК Подразделение,
	|	ДанныеДокумента.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьРегл,
	|	0                                            КАК СтоимостьНУ,
	|	0                                            КАК СтоимостьПР,
	|	0                                            КАК СтоимостьВР,
	|	0                                            КАК СтоимостьЦФ,
	|	0                                            КАК СтоимостьНУЦФ,
	|	0                                            КАК СтоимостьПРЦФ,
	|	0                                            КАК СтоимостьВРЦФ,
	|	
	|	ДанныеДокумента.ПервоначальнаяСтоимостьУУ    КАК ПредварительнаяСтоимость,
	|	ДанныеДокумента.ПервоначальнаяСтоимостьБУ    КАК ПредварительнаяСтоимостьРегл,
	|
	|	0                                            КАК КорПостояннаяРазница,
	|	0                                            КАК КорВременнаяРазница,
	|	
	|	ДанныеДокумента.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ВариантПримененияЦелевогоФинансирования КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеДокумента.ОтражатьВРеглУчете           КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете            КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.НалогообложениеНДС           КАК НалогообложениеНДС,
	|	
	|	НЕОПРЕДЕЛЕНО                                 КАК КорПодразделение,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаРасходов,
	|	
	|	ЛОЖЬ                                         КАК РасчетСтоимости,
	|	
	|	&ИдентификаторНеиспользуемойФинЗаписи        КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО                                 КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|ГДЕ
	|	(ДанныеДокумента.ПервоначальнаяСтоимостьУУ <> 0
	|		ИЛИ ДанныеДокумента.ПервоначальнаяСтоимостьБУ <> 0)
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область СписаниеНаРасходыНУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                       КАК Регистратор,
	|	ДанныеДокумента.Период                       КАК Период,
	|	ДанныеДокумента.НематериальныйАктив          КАК НематериальныйАктив,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.Подразделение                КАК Подразделение,
	|	ДанныеДокумента.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	
	|	0                              КАК Стоимость,
	|	0                              КАК СтоимостьРегл,
	|	РасчетСтоимости.СтоимостьНУ    КАК СтоимостьНУ,
	|	0                              КАК СтоимостьПР,
	|	-РасчетСтоимости.СтоимостьНУ   КАК СтоимостьВР,
	|
	|	0 КАК СтоимостьЦФ,
	|	0 КАК СтоимостьНУЦФ,
	|	0 КАК СтоимостьПРЦФ,
	|	0 КАК СтоимостьВРЦФ,
	|	
	|	0 КАК ПредварительнаяСтоимость,
	|	0 КАК ПредварительнаяСтоимостьРегл,
	|
	|	0 КАК КорПостояннаяРазница,
	|	0 КАК КорВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиНМА) КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ВариантПримененияЦелевогоФинансирования     КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеДокумента.ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.НалогообложениеНДС                          КАК НалогообложениеНДС,
	|
	|	ДанныеДокумента.Подразделение                  КАК КорПодразделение,
	|	ДанныеДокумента.НаправлениеДеятельности        КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходовНУ               КАК КорСтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходовНУ            КАК КорАналитикаРасходов,
	|	
	|	ИСТИНА КАК РасчетСтоимости,
	|
	|	&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО                          КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК РасчетСтоимости
	|		ПО РасчетСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРасчетСтоимостиСгруппированная КАК ВтРасчетСтоимостиСгруппированная
	|		ПО ВтРасчетСтоимостиСгруппированная.Ссылка = РасчетСтоимости.Ссылка
	|			И ВтРасчетСтоимостиСгруппированная.ОбъектУчета = РасчетСтоимости.ОбъектУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПорядокПринятияКУчету КАК ВтПорядокПринятияКУчету
	|		ПО ВтПорядокПринятияКУчету.Ссылка = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации)
	|	И ВтПорядокПринятияКУчету.ПринятьКУчетуНУ
	|	И (ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету)
	|		ИЛИ ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы)
	|				И ЕСТЬNULL(ВтРасчетСтоимостиСгруппированная.СтоимостьНУ, 0) <= &ПредельнаяСтоимостьСписанияНаРасходы)
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область СписаниеНаРасходыНУ_Инвентаризация
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                       КАК Регистратор,
	|	ДанныеДокумента.Период                       КАК Период,
	|	ДанныеДокумента.НематериальныйАктив          КАК НематериальныйАктив,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.Подразделение                КАК Подразделение,
	|	ДанныеДокумента.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьРегл,
	|	ДанныеДокумента.ПервоначальнаяСтоимостьНУ КАК СтоимостьНУ,
	|	0 КАК СтоимостьПР,
	|	-ДанныеДокумента.ПервоначальнаяСтоимостьНУ КАК СтоимостьВР,
	|
	|	0 КАК СтоимостьЦФ,
	|	0 КАК СтоимостьНУЦФ,
	|	0 КАК СтоимостьПРЦФ,
	|	0 КАК СтоимостьВРЦФ,
	|	
	|	0 КАК ПредварительнаяСтоимость,
	|	0 КАК ПредварительнаяСтоимостьРегл,
	|
	|	0 КАК КорПостояннаяРазница,
	|	0 КАК КорВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиНМА) КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ВариантПримененияЦелевогоФинансирования     КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеДокумента.ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.НалогообложениеНДС                          КАК НалогообложениеНДС,
	|
	|	ДанныеДокумента.Подразделение                  КАК КорПодразделение,
	|	ДанныеДокумента.НаправлениеДеятельности        КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходовНУ               КАК КорСтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходовНУ            КАК КорАналитикаРасходов,
	|	
	|	ЛОЖЬ                            КАК РасчетСтоимости,
	|	
	|	&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО                          КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету)
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации)
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ДополнитьТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(СписокЗапросовОбъединение) Экспорт

	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                       КАК Регистратор,
	|	ДанныеДокумента.Период                       КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|
	|	ДанныеДокумента.Подразделение                КАК Подразделение,
	|	ДанныеДокумента.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяДоходов                КАК Статья,
	|	ДанныеДокумента.АналитикаДоходов             КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                 КАК ГруппаФинансовогоУчета,
	|
	|	ДанныеДокумента.Подразделение                КАК КорПодразделение,
	|	ДанныеДокумента.НаправлениеДеятельности      КАК КорНаправлениеДеятельности,
	|	&СтатьяАП                                    КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаРасходов,
	|	ДанныеДокумента.НематериальныйАктив          КАК КорАналитикаАктивовПассивов,
	|	ДанныеДокумента.ГруппаФинансовогоУчета       КАК КорГруппаФинансовогоУчета,
	|
	|	ДанныеДокумента.Организация                  КАК КорОрганизация,
	|
	|	ДанныеДокумента.ПервоначальнаяСтоимостьУУ    КАК Сумма,
	|	ДанныеДокумента.ПервоначальнаяСтоимостьУУ    КАК СуммаУпр,
	|	ДанныеДокумента.ПервоначальнаяСтоимостьБУ    КАК СуммаРегл
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации)
	|";
	
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	
	//-- Локализация
	
КонецПроцедуры

Функция ПроверитьПорядокНеПриниматьКУчетуВключитьВРасходы(Объект, Отказ) Экспорт

	ПроверкаВыполнена = Ложь;
	
	//++ Локализация
	
	ПроверкаВыполнена = Истина;
	
	Если (Объект.ПорядокУчетаУУ = Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы
			ИЛИ НЕ Объект.ОтражатьВУпрУчете)
		И (Объект.ПорядокУчетаБУ = Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы
			ИЛИ НЕ Объект.ОтражатьВБУ) 
		И (Объект.ПорядокУчетаНУ = Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы
			ИЛИ НЕ Объект.ОтражатьВНУ)
		И (Объект.ОтражатьВУпрУчете
			ИЛИ Объект.ОтражатьВБУ
			ИЛИ Объект.ОтражатьВНУ) Тогда
		
		Если Объект.ОтражатьВБУ Тогда
			Поле = "ПорядокУчетаБУ";
		ИначеЕсли Объект.ОтражатьВНУ Тогда
			Поле = "ПорядокУчетаНУ";
		Иначе
			Поле = "ПорядокУчетаУУ";
		КонецЕсли;
		
		ТекстСообщения = НСтр("ru = 'Не поддерживается выбор порядка учета ""Не принимать к учету, включить в расходы"" сразу во всех учетах. В одном из учетов должен быть другой порядок учета.';
								|en = 'Cannot select the ""Do not recognize, add to expenses"" accounting procedure in all accountings at the same time. One of the accountings must have a different accounting procedure.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, Поле, "", Отказ);
		
	КонецЕсли;
	
	//-- Локализация
	
	Возврат ПроверкаВыполнена;
	
КонецФункции

//++ Локализация

Процедура ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияНМА(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыЦелевогоФинансированияНМА";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка               КАК Регистратор,
	|	ДанныеДокумента.Период               КАК Период,
	|	ДанныеДокумента.НематериальныйАктив  КАК НематериальныйАктив,
	|	ИСТИНА                               КАК ПрименениеЦелевогоФинансирования,
	|	ДанныеДокумента.СтатьяДоходов        КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов     КАК АналитикаДоходов
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.ВариантПримененияЦелевогоФинансирования В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Ссылка КАК Документ,
	|	ДанныеДокумента.Период КАК Период,
	|	НАЧАЛОПЕРИОДА(ДанныеДокумента.Период, ДЕНЬ) КАК ДатаОтражения,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете) КАК Статус
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПрочиеДоходы(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПрочиеДоходы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                      КАК Регистратор,
	|	ДанныеДокумента.Период                      КАК Период,
	|	ДанныеДокумента.Организация                 КАК Организация,
	|	ДанныеДокумента.Подразделение               КАК Подразделение,
	|	ДанныеДокумента.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ДанныеДокумента.ХозяйственнаяОперация       КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СтатьяДоходов               КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов            КАК АналитикаДоходов,
	|	ДанныеДокумента.ПервоначальнаяСтоимостьУУ   КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПараметрыПартионногоУчета.УправленческийУчетОрганизаций, ЛОЖЬ)
	|			ТОГДА ДанныеДокумента.ПервоначальнаяСтоимостьУУ
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПараметрыПартионногоУчета.ИспользоватьУчетПрочихДоходовРасходовРегл, ЛОЖЬ)
	|			ТОГДА ДанныеДокумента.ПервоначальнаяСтоимостьБУ
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	ДанныеДокумента.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПараметрыПартионногоУчетаДляПроведения КАК ПараметрыПартионногоУчета
	|		ПО ПараметрыПартионногоУчета.Период = НАЧАЛОПЕРИОДА(ДанныеДокумента.Период, МЕСЯЦ)
	|		 И ПараметрыПартионногоУчета.Организация = ДанныеДокумента.Организация
	|
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                       КАК Регистратор,
	|	ДанныеДокумента.Период                       КАК Период,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.Подразделение                КАК Подразделение,
	|	ДанныеДокумента.Ссылка                       КАК ДокументПоступленияРасходов,
	|	ДанныеДокумента.СтатьяРасходовБУ             КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходовБУ          КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаПартий,
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьБезНДС,
	|	0                                            КАК СтоимостьРегл,
	|	0                                            КАК НДСРегл,
	|
	|	ВЫБОР
	|		КОГДА ПВХСтатьиРасходов.ПринятиеКНалоговомуУчету
	|			ТОГДА 0
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации)
	|			ТОГДА ДанныеДокумента.ПервоначальнаяСтоимостьНУ
	|		ИНАЧЕ ЕСТЬNULL(РасчетСтоимости.СтоимостьНУ, ДанныеДокумента.ПервоначальнаяСтоимостьБУ - ДанныеДокумента.СуммаЦелевыхСредств)
	|	КОНЕЦ КАК ПостояннаяРазница,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации)
	|			ТОГДА -ДанныеДокумента.ПервоначальнаяСтоимостьНУ
	|		ИНАЧЕ -ЕСТЬNULL(РасчетСтоимости.СтоимостьНУ, ДанныеДокумента.ПервоначальнаяСтоимостьБУ - ДанныеДокумента.СуммаЦелевыхСредств)
	|	КОНЕЦ КАК ВременнаяРазница,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	ДанныеДокумента.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК РасчетСтоимости
	|		ПО ИСТИНА
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО (ДанныеДокумента.СтатьяРасходовБУ = ПВХСтатьиРасходов.Ссылка)
	|
	|ГДЕ
	|	ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|	И ПВХСтатьиРасходов.ВариантРаспределенияРасходовРегл В (ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВтРасчетСтоимостиСгруппированная(Запрос, ТекстыЗапроса)

	ИмяТаблицы = "ВтРасчетСтоимостиСгруппированная";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат "";
	КонецЕсли;
	
	РасчетСтоимостиВНА.ТекстЗапросаПустаяВтРасчетСтоимости(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасчетСтоимости.Ссылка                    КАК Ссылка,
	|	РасчетСтоимости.ОбъектУчета               КАК ОбъектУчета,
	|	СУММА(РасчетСтоимости.Стоимость)          КАК Стоимость,
	|	СУММА(РасчетСтоимости.СтоимостьРегл)      КАК СтоимостьРегл,
	|	СУММА(РасчетСтоимости.СтоимостьНУ)        КАК СтоимостьНУ,
	|	СУММА(РасчетСтоимости.СтоимостьПР)        КАК СтоимостьПР,
	|	СУММА(РасчетСтоимости.СтоимостьВР)        КАК СтоимостьВР,
	|	СУММА(РасчетСтоимости.СтоимостьЦФ)        КАК СтоимостьЦФ,
	|	СУММА(РасчетСтоимости.СтоимостьНУЦФ)      КАК СтоимостьНУЦФ,
	|	СУММА(РасчетСтоимости.СтоимостьПРЦФ)      КАК СтоимостьПРЦФ,
	|	СУММА(РасчетСтоимости.СтоимостьВРЦФ)      КАК СтоимостьВРЦФ,
	|	0 КАК НДС,
	|	0 КАК НДСРегл
	|
	|ПОМЕСТИТЬ ВтРасчетСтоимостиСгруппированная
	| 
	|ИЗ
	|	ВтРасчетСтоимости КАК РасчетСтоимости
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетСтоимости.Ссылка,
	|	РасчетСтоимости.ОбъектУчета
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаВтПорядокПринятияКУчету(Запрос, ТекстыЗапроса)

	ИмяТаблицы = "ВтПорядокПринятияКУчету";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаВтРасчетСтоимостиСгруппированная(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|
	|	ДанныеДокумента.ОтражатьВУпрУчете
	|		И ДанныеДокумента.ПорядокУчетаУУ В (
	|			ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию)) КАК ПринятьКУчетуУУ,
	|
	|	ДанныеДокумента.ОтражатьВБУ
	|		И ДанныеДокумента.ПорядокУчетаБУ В (
	|			ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию)) КАК ПринятьКУчетуБУ,
	|
	|	ДанныеДокумента.ОтражатьВНУ
	|		И (ДанныеДокумента.ПорядокУчетаНУ В (
	|				ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию),
	|				ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию),
	|				ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету))
	|
	|			ИЛИ ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы)
	|				И ЕСТЬNULL(ВтРасчетСтоимостиСгруппированная.СтоимостьНУ, 0) <= &ПредельнаяСтоимостьСписанияНаРасходы
	|				И ДанныеДокумента.ПорядокУчетаБУ В (
	|						ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию),
	|						ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию))
	|
	|			ИЛИ ДанныеДокумента.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы)
	|				И ЕСТЬNULL(ВтРасчетСтоимостиСгруппированная.СтоимостьНУ, 0) > &ПредельнаяСтоимостьСписанияНаРасходы
	|
	|		) КАК ПринятьКУчетуНУ
	|
	|ПОМЕСТИТЬ ВтПорядокПринятияКУчету
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРасчетСтоимостиСгруппированная КАК ВтРасчетСтоимостиСгруппированная
	|		ПО ВтРасчетСтоимостиСгруппированная.Ссылка = ДанныеДокумента.Ссылка
	|			И ВтРасчетСтоимостиСгруппированная.ОбъектУчета = ДанныеДокумента.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область Заполнение

//++ Локализация

Процедура ЗаполнитьНаОснованииИнвентаризацииОСПриВводеНаОсновании(Объект, Знач ДанныеЗаполнения)
	
	Объект.ДокументОснование = Неопределено;
	МассивНомеровСтрок = Неопределено;
	СообщатьОбОшибках = Истина;
	Объект.ДокументНаОсновании = Истина;
	
	Объект.Организация = Справочники.Организации.ПустаяСсылка();
	Объект.Подразделение = Справочники.СтруктураПредприятия.ПустаяСсылка();
	
	Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Объект.ДокументОснование = ДанныеЗаполнения.ДокументОснование;
		МассивНомеровСтрок = ДанныеЗаполнения.МассивНомеровСтрок;
		СообщатьОбОшибках = ДанныеЗаполнения.СообщатьОбОшибках;
	Иначе
		Объект.ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	ЗаполнитьНаОснованииИнвентаризации(Объект, СообщатьОбОшибках, МассивНомеровСтрок); 
	
КонецПроцедуры

// Заполняет документ на основании инвентаризации
//
// Параметры:
//  Объект				 - ДокументОбъект.ПринятиеКУчетуНМА2_4	 - Документ, который надо заполнить.
//  СообщатьОбОшибках	 - Булево								 - Истина, если нужно сообщить об ошибках.
//  МассивНомеровСтрок	 - Массив								 - Строки инвентаризации.
//
Процедура ЗаполнитьНаОснованииИнвентаризации(Объект, СообщатьОбОшибках, МассивНомеровСтрок = Неопределено)

	Если Не ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ОтражатьВРеглУчете = Истина;
	Объект.ОтражатьВУпрУчете = Истина;
	
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ДокументОснование, "Дата,Организация,Подразделение");
	Объект.Организация = РеквизитыОснования.Организация;
	Объект.Подразделение = РеквизитыОснования.Подразделение;
	
	ДатаДокумента = ?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса());
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, ДатаДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТабличнаяЧасть.НематериальныйАктив КАК НематериальныйАктив,
	|	ТабличнаяЧасть.СтоимостьФактическая КАК СтоимостьФактическая
	|ПОМЕСТИТЬ ДанныеИнвентаризации
	|ИЗ
	|	Документ.ИнвентаризацияНМА.НМА КАК ТабличнаяЧасть
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуНМА2_4 КАК ДокументыНаОсновании
	|		ПО (ДокументыНаОсновании.ДокументОснование = ТабличнаяЧасть.Ссылка)
	|			И (ДокументыНаОсновании.НематериальныйАктив = ТабличнаяЧасть.НематериальныйАктив)
	|			И (ДокументыНаОсновании.Проведен)
	|			И (ДокументыНаОсновании.Ссылка <> &Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ДокументыНаОсновании.Ссылка ЕСТЬ NULL
	|	И ТабличнаяЧасть.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияНаОснованииИнвентаризации.ПринятиеКУчету)
	|	И (ТабличнаяЧасть.НомерСтроки В (&МассивНомеровСтрок)
	|			ИЛИ НЕ &ПоСпискуСтрок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|				ИЛИ ПорядокУчетаНМАБУ.СостояниеНУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеНУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|				ИЛИ ПорядокУчетаНМАБУ.СостояниеНУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.НеПринятКУчету)
	|	КОНЕЦ КАК Состояние
	|ПОМЕСТИТЬ СостояниеНМА
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|			&ДатаДокумента,
	|			Регистратор <> &Ссылка
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						ДанныеИнвентаризации.НематериальныйАктив
	|					ИЗ
	|						ДанныеИнвентаризации)) КАК ПорядокУчетаНМАБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестоУчетаНМА.Организация КАК Организация
	|ПОМЕСТИТЬ МестоУчетаНМА
	|ИЗ
	|	РегистрСведений.МестоУчетаНМА.СрезПоследних(
	|			&ДатаДокумента,
	|			Регистратор <> &Ссылка
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						ДанныеИнвентаризации.НематериальныйАктив
	|					ИЗ
	|						ДанныеИнвентаризации)) КАК МестоУчетаНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеИнвентаризации.НематериальныйАктив КАК НематериальныйАктив,
	|	ДанныеИнвентаризации.СтоимостьФактическая КАК СтоимостьФактическая
	|ИЗ
	|	ДанныеИнвентаризации КАК ДанныеИнвентаризации
	|		ЛЕВОЕ СОЕДИНЕНИЕ СостояниеНМА КАК СостояниеНМА
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестоУчетаНМА КАК МестоУчетаНМА
	|		ПО (ИСТИНА)
	|ГДЕ
	|	(ЕСТЬNULL(СостояниеНМА.Состояние, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ИЛИ ЕСТЬNULL(МестоУчетаНМА.Организация, НЕОПРЕДЕЛЕНО) <> &Организация)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументОснование", Объект.ДокументОснование);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("МассивНомеровСтрок", ?(МассивНомеровСтрок <> Неопределено, МассивНомеровСтрок, Новый Массив));
	Запрос.УстановитьПараметр("ПоСпискуСтрок", МассивНомеровСтрок <> Неопределено);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СтрокиДобавлены = Ложь;
	ВалютаРегламентированногоУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Объект.Организация);
	Если Выборка.Следующий() Тогда
		
		СтрокиДобавлены = Истина;
		
		Объект.НематериальныйАктив = Выборка.НематериальныйАктив;
		
		Объект.ПервоначальнаяСтоимостьБУ = Выборка.СтоимостьФактическая;
		Если ПлательщикНалогаНаПрибыль Тогда
			Объект.ПервоначальнаяСтоимостьНУ = Выборка.СтоимостьФактическая;
		КонецЕсли; 
		Объект.ПервоначальнаяСтоимостьПР = 0;
		Объект.ПервоначальнаяСтоимостьВР = 0;
		
		Объект.ПервоначальнаяСтоимостьУУ = РаботаСКурсамиВалютУТ.ПересчитатьСуммуДокументаВВалюту(
												Объект.ПервоначальнаяСтоимостьБУ,
												ВалютаРегламентированногоУчета,
												Константы.ВалютаУправленческогоУчета.Получить(),
												ДатаДокумента,
												ВалютаРегламентированногоУчета);
		
	КонецЕсли;
	
	Если НЕ СтрокиДобавлены И СообщатьОбОшибках Тогда
		ТекстОшибки = НСтр("ru = 'В документе %1 отсутствуют строки требующие создания принятия к учету';
							|en = 'There are no lines which require recognition in the %1 document'");
		ТекстОшибки = СтрШаблон(ТекстОшибки, Объект.ДокументОснование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Объект.ДокументОснование");
	КонецЕсли;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область ФормаДокумента

//++ Локализация

Процедура ФормаДокумента_ЦелевоеФинансированиеЗаполнитьСлужебныеРеквизиты(Форма, Строка = Неопределено)
	
	ВнеоборотныеАктивыЛокализация.ЗаполнитьСлужебныеРеквизитыВТаблицеЦелевогоФинансирования(Форма.Объект, Строка);
	
КонецПроцедуры

Процедура ФормаДокумента_ДатаПриИзменении(Форма, Объект)
	
	ГоловнаяОрганизация = НастройкиНалоговУчетныхПолитикПовтИсп.ГоловнаяОрганизация(Объект.Организация);
	Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата);
	Форма.ПрименяетсяУСНДоходыМинусРасходы = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Объект.Организация, Объект.Дата);
	Форма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", ГоловнаяОрганизация));
	
КонецПроцедуры

Процедура ФормаДокумента_ПервоначальнаяСтоимостьБУПриИзменении(Форма, Объект)

	Если Форма.ВалютаБУ = Форма.ВалютаУУ 
		И Форма.ЗначенияРеквизитовДоИзменения.ПервоначальнаяСтоимостьБУ = Объект.ПервоначальнаяСтоимостьУУ Тогда
		
		Объект.ПервоначальнаяСтоимостьУУ = Объект.ПервоначальнаяСтоимостьБУ;
	КонецЕсли; 
	
	Если Форма.ЗначенияРеквизитовДоИзменения.ПервоначальнаяСтоимостьБУ = Объект.ПервоначальнаяСтоимостьНУ
		И Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации
		И Форма.ПлательщикНалогаНаПрибыль Тогда
		Объект.ПервоначальнаяСтоимостьНУ = Объект.ПервоначальнаяСтоимостьБУ;
	КонецЕсли;
	
	ПринятиеКУчетуНМАКлиентСерверЛокализация.ПересчитатьСуммуВР(Форма); 
	
КонецПроцедуры

Процедура ФормаДокумента_ЦелевоеФинансированиеСчетПриИзменении(Форма)
	
	ФормаДокумента_ЦелевоеФинансированиеЗаполнитьСлужебныеРеквизиты(Форма, Форма.Элементы.ЦелевоеФинансирование.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ФормаДокумента_ЗаполнитьИсточникиФинансирования(Объект)
	
	Объект.ЦелевоеФинансирование.Загрузить(ВнеоборотныеАктивыЛокализация.ДанныеЗаполненияЦелевогоФинансирования(Объект));
	
КонецПроцедуры

Процедура ФормаДокумента_ПорядокУчетаНУПриИзменении(Форма)

	Объект = Форма.Объект;
	
	Если НЕ ЗначениеЗаполнено(Объект.СтатьяРасходовНУ) Тогда
		Возврат;
	КонецЕсли;
	
	МассивВариантовРаспределения = ВнеоборотныеАктивыКлиентСервер.ДоступныеВариантыРаспределенияРасходов(Объект.ПорядокУчетаНУ);
		
	Если МассивВариантовРаспределения.Количество() <> 0 Тогда
		
		ВариантРаспределенияРасходовРегл = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтатьяРасходовНУ, "ВариантРаспределенияРасходовНУ");
		
		Если МассивВариантовРаспределения.Найти(ВариантРаспределенияРасходовРегл) = Неопределено Тогда
			
			Объект.СтатьяРасходовНУ = Неопределено;
			Объект.АналитикаРасходовНУ = Неопределено;
			Форма.АналитикаРасходовНУОбязательна = Ложь;
			
			ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(Форма, Форма.Элементы.СтатьяРасходовНУ);
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область РабочееМесто

// 
// Возвращаемое значение:
//  Строка - Текст запроса принятые к учету НМА
Функция ТекстЗапросаПринятыеКУчетуНМА() Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУчетаНМАУУ.НематериальныйАктив КАК НематериальныйАктив
	|
	|ПОМЕСТИТЬ ПорядокУчетаНМАУУ
	|
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
	|			&Дата,
	|			НематериальныйАктив В (
	|				ВЫБРАТЬ
	|					ПрочиеРасходы.НематериальныйАктив
	|				ИЗ
	|					ПрочиеРасходы КАК ПрочиеРасходы)) КАК ПорядокУчетаНМАУУ
	|ГДЕ
	|	ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУчетаНМАБУ.НематериальныйАктив КАК НематериальныйАктив
	|
	|ПОМЕСТИТЬ ПорядокУчетаНМАБУ
	|
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|			&Дата,
	|			НематериальныйАктив В (
	|				ВЫБРАТЬ
	|					ПрочиеРасходы.НематериальныйАктив
	|				ИЗ
	|					ПрочиеРасходы КАК ПрочиеРасходы)) КАК ПорядокУчетаНМАБУ
	|
	|ГДЕ
	|	ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|	И ПорядокУчетаНМАБУ.СостояниеНУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НематериальныеАктивы.Ссылка КАК НематериальныйАктив
	|
	|ПОМЕСТИТЬ ПринятыеКУчетуНМА
	|
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаНМАУУ КАК ПорядокУчетаНМАУУ
	|		ПО ПорядокУчетаНМАУУ.НематериальныйАктив = НематериальныеАктивы.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|		ПО ПорядокУчетаНМАБУ.НематериальныйАктив = НематериальныеАктивы.Ссылка
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти
