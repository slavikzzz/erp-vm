////////////////////////////////////////////////////////////////////////////////
// Управление производством: содержит процедуры для управления производством.
// Модуль входит в подсистему "УправлениеПредприятием".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Формирует представление заказа на производство.
//
// Параметры:
//  Ссылка	 - ДокументСсылка.ЗаказНаПроизводство2_2 - заказ на производство
//  Префикс	 - Строка								 - префикс.
// 
// Возвращаемое значение:
//  Строка - представление заказа на производство.
//
Функция ПредставлениеЗаказа(Ссылка, Префикс = Неопределено) Экспорт
	
	Возврат Документы.ЗаказНаПроизводство2_2.ПредставлениеЗаказа(Ссылка, Префикс);
	
КонецФункции

// Формирует полное представление заказа на производство.
//
// Параметры:
//  Ссылка	 - ДокументСсылка.ЗаказНаПроизводство2_2 - заказ на производство
//  Префикс	 - Строка								 - префикс.
// 
// Возвращаемое значение:
//  Строка - полное представление заказа на производство.
//
Функция ПолноеПредставлениеЗаказа(Ссылка, Префикс = Неопределено) Экспорт
	
	Возврат Документы.ЗаказНаПроизводство2_2.ПолноеПредставлениеЗаказа(Ссылка, Префикс);
	
КонецФункции

// Формирует представление этапа производства по данным документа.
//
// Параметры:
//  ДанныеЭтапа - см. Документы.ЭтапПроизводства2_2.ПредставлениеЭтапа.
// 
// Возвращаемое значение:
//  Строка - представление этапа производства.
//
Функция ПредставлениеЭтапа(ДанныеЭтапа) Экспорт
	
	Возврат Документы.ЭтапПроизводства2_2.ПредставлениеЭтапа(ДанныеЭтапа);
	
КонецФункции

// Устанавливает дату с учетом переданной отметки
//
// Параметры:
//  Отметка		 - Булево	 - отметка
//  ПолеДата	 - Дата		 - реквизит, в котором нужно установить дату
//  ДатаСобытия	 - Дата		 - устанавливаемая дата
//  Затереть	 - Булево	 - признак, что дату нужно установить принудительно.
//
Процедура УстановитьДатуПоОтметке(Отметка, ПолеДата, ДатаСобытия = Неопределено, Затереть = Ложь) Экспорт
	
	УправлениеПроизводством.УстановитьДатуПоОтметке(
				Отметка,
				ПолеДата, ДатаСобытия, Затереть);
	
КонецПроцедуры

// Возвращает значения заполнения нового этапа производства
//
// Параметры:
//  Распоряжение				 - ДокументСсылка.ЗаказНаПроизводство2_2 			 - заказ на производство
//  НазначениеПродукция			 - СправочникСсылка.Назначения						 - назначение продукции ( при обособлении по целевому назначению )
//  ПартияПроизводства			 - СправочникСсылка.ПартииПроизводства				 - партия производства
//  ТипПроизводственногоПроцесса - ПеречислениеСсылка.ТипыПроизводственныхПроцессов	 - тип производственного процесса.
//  Спецификация				 - СправочникСсылка.РесурсныеСпецификации			 - ресурсная спецификация.
// 
// Возвращаемое значение:
//  Структура - значения заполнения нового этапа производства:
//   * Распоряжение                     - ДокументСсылка.ЗаказНаПроизводство2_2 -
//   * ДинамическаяСтруктура            - Булево -
//   * Организация                      - СправочникСсылка.Организации -
//   * ХозяйственнаяОперация            - ПеречислениеСсылка.ХозяйственныеОперации -
//   * НаправлениеДеятельности          - СправочникСсылка.НаправленияДеятельности -
//   * Партнер                          - СправочникСсылка.Партнеры -
//   * Договор                          - СправочникСсылка.ДоговорыКонтрагентов -
//   * ВыпускПодДеятельность            - ПеречислениеСсылка.ТипыНалогообложенияНДС -
//   * ОперацияКакРаспоряжениеВыработки - см. УправлениеПроизводством.ИспользуетсяОперацияКакРаспоряжениеВыработки
//   * ВидЦены                          - см. Справочники.ВидыЦен.ВидЦеныПлановойСтоимостиТМЦ
//   * Валюта                           - см. ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета
//   * ВариантПриемкиТоваров            - ПеречислениеСсылка.ВариантыПриемкиТоваров -
//   * НазначениеПродукция              - СправочникСсылка.Назначения -
//   * ПартияПроизводства               - СправочникСсылка.ПартииПроизводства -
//   * ТипПроизводственногоПроцесса     - ПеречислениеСсылка.ТипыПроизводственныхПроцессов -
//   * Спецификация                     - СправочникСсылка.РесурсныеСпецификации -
//   * ОтветственноеПодразделение       - см. Справочники.РесурсныеСпецификации.ОтветственноеПодразделение
//
Функция ЗначенияЗаполненияНовогоЭтапаПроизводства(Распоряжение,
													НазначениеПродукция,
													ПартияПроизводства,
													ТипПроизводственногоПроцесса,
													Спецификация) Экспорт
	
	ИменаРеквизитов = Новый Структура;
	ИменаРеквизитов.Вставить("Распоряжение", "Ссылка");
	ИменаРеквизитов.Вставить("ДинамическаяСтруктура");
	ИменаРеквизитов.Вставить("Организация");
	ИменаРеквизитов.Вставить("ХозяйственнаяОперация");
	ИменаРеквизитов.Вставить("НаправлениеДеятельности");
	ИменаРеквизитов.Вставить("Партнер");
	ИменаРеквизитов.Вставить("Договор");
	ИменаРеквизитов.Вставить("ВыпускПодДеятельность", "ЗаказПодДеятельность");
	
	ЗначенияЗаполнения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, ИменаРеквизитов);
	
	ОперацияКакРаспоряжениеВыработки = УправлениеПроизводством.ИспользуетсяОперацияКакРаспоряжениеВыработки(
		ТекущаяДатаСеанса());
	
	ЗначенияЗаполнения.Вставить("ОперацияКакРаспоряжениеВыработки", ОперацияКакРаспоряжениеВыработки);
	
	Если ЗначениеЗаполнено(НазначениеПродукция) Тогда
		НаправлениеДеятельности = УправлениеПроизводствомПовтИсп.НаправлениеДеятельностиНазначенияПродукции(НазначениеПродукция);
		ЗначенияЗаполнения.НаправлениеДеятельности = НаправлениеДеятельности;
	КонецЕсли;
	
	ВидЦены = Справочники.ВидыЦен.ВидЦеныПлановойСтоимостиТМЦ();
	ЗначенияЗаполнения.Вставить("ВидЦены", ВидЦены);
	
	Валюта = ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета(Справочники.ВидыЦен.ПолучитьРеквизитыВидаЦены(ВидЦены).ВалютаЦены);
	ЗначенияЗаполнения.Вставить("Валюта", Валюта);
	
	ВариантПриемкиТоваров = Константы.ВариантПриемкиТоваров.Получить();
	ЗначенияЗаполнения.Вставить("ВариантПриемкиТоваров", ВариантПриемкиТоваров);
	
	ЗначенияЗаполнения.Вставить("Распоряжение", Распоряжение);
	ЗначенияЗаполнения.Вставить("НазначениеПродукция", НазначениеПродукция);
	
	ЗначенияЗаполнения.Вставить("ПартияПроизводства", ПартияПроизводства);
	
	ЗначенияЗаполнения.Вставить("ТипПроизводственногоПроцесса", ТипПроизводственногоПроцесса);
	ЗначенияЗаполнения.Вставить("Спецификация", Спецификация);
	
	ОтветственноеПодразделение = Справочники.РесурсныеСпецификации.ОтветственноеПодразделение(Спецификация);
	ЗначенияЗаполнения.Вставить("ОтветственноеПодразделение", ОтветственноеПодразделение);
	
	Возврат ЗначенияЗаполнения;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Параметры:
//  МассивСсылок - см. Документы.ЭтапПроизводства2_2.ПодразделенияИсполнители.МассивСсылок
// 
// Возвращаемое значение:
//  см. Документы.ЭтапПроизводства2_2.ПодразделенияИсполнители
//
Функция ПодразделенияИсполнители(МассивСсылок) Экспорт
	
	Возврат Документы.ЭтапПроизводства2_2.ПодразделенияИсполнители(МассивСсылок);
	
КонецФункции

// Параметры:
//  МассивЭтапов - Массив из ДокументСсылка.ЭтапПроизводства2_2
// 
// Возвращаемое значение:
//  Массив из ДокументСсылка.ЭтапПроизводства2_2 - список доступных для удаления этапов производства
//
Функция СписокДоступныхДляУдаленияЭтаповПроизводства(МассивЭтапов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = Документы.ЭтапПроизводства2_2.ТекстЗапросаСписокДоступныхДляУдаленияЭтаповПроизводства();
	Запрос.УстановитьПараметр("МассивСсылок", МассивЭтапов);
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

//++ Устарело_Производство21

// Возвращаемое значение:
//  Булево -
//
Функция ЕстьНезавершенныеОперацииВПроизводстве21() Экспорт
	Возврат УправлениеПроизводством.ЕстьНезавершенныеОперацииВПроизводстве21();
КонецФункции
//-- Устарело_Производство21

// Параметры:
//  ПартияПроизводства - см. Документы.ЭтапПроизводства2_2.ЭтапПоШтрихкодуПартииПроизводства.ПартияПроизводства
// 
// Возвращаемое значение:
//  ДокументСсылка.ЭтапПроизводства2_2, Неопределено -
//
Функция ЭтапПоШтрихкодуПартииПроизводства(ПартияПроизводства) Экспорт
	
	Возврат Документы.ЭтапПроизводства2_2.ЭтапПоШтрихкодуПартииПроизводства(ПартияПроизводства);
	
КонецФункции

// Возвращаемое значение:
//  Булево -
//
Функция ДинамическаяСтруктураЗаказовНаПроизводство() Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию("ДинамическаяСтруктураЗаказовНаПроизводство");
	
КонецФункции

Процедура УстранитьКонфликтыВОчередиЗаказовНаПроизводство(Заказ, Отказ) Экспорт
	
	Документы.ЗаказНаПроизводство2_2.УстранитьКонфликтыВОчереди(Заказ, Отказ);
	
КонецПроцедуры

#КонецОбласти
