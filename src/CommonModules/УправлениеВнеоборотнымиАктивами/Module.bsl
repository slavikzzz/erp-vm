
#Область ЗемельныйНалог

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2011Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_1", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020025003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020027003", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетЗемельныйНалогФормаОтчета2011Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	СтрокаСведений = "КППЮЛ,КодНО";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация,,СтрокаСведений);
	КПП = СведенияОбОрганизации.КППЮЛ;
	КодНО = СведенияОбОрганизации.КодНО;
	
	КодНалоговогоОргана =  ПараметрыОтчета.КодНалоговогоОргана;
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	МассивНО = Новый Массив;
	Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	ИначеЕсли КодНалоговогоОргана = Организация.КодНалоговогоОргана Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	Иначе
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	
	// Выборка земельных участков и числа полных месяцев владения ими.
	// При этом если возникновение (прекращение) у налогоплательщика в течение налогового периода 
	// права собственности (постоянного (бессрочного) пользования, пожизненного наследуемого владения) 
	// на земельный участок (его долю) произошло до 15-го числа соответствующего месяца включительно, 
	// за полный месяц принимается месяц возникновения указанных прав. Если возникновение (прекращение)
	// указанных прав произошло после 15-го числа соответствующего месяца, за полный месяц принимается 
	// месяц прекращения указанных прав.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", МассивНО);
	
	Период = НачалоГода(мДатаНачалаПериодаОтчета);
	
	ТекстОбъединяющегоЗапроса = "";
	
	Пока Период <= мДатаКонцаПериодаОтчета Цикл
		
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫРАЗИТЬ(" + Формат(Период, "ДФ=MM") + " КАК ЧИСЛО) КАК НомерМесяца,
		|	ПараметрыНачисленияЗемельногоНалога.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыНачисленияЗемельногоНалога.Период КАК ДатаРегистрацииЗемли,
		|	NULL КАК НалоговаяЛьготаПоНалоговойБазе,
		|	1 КАК КоличествоМесяцев,
		|	0 КАК КоличествоМесяцевПримененияЛьготы
		|ПОМЕСТИТЬ
		|	ВладениеЗемельнымиУчастками" + Формат(Период, "ДФ=MM") + "
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПараметрыНачисленияЗемельногоНалога.ОсновноеСредство КАК ОсновноеСредство,
		|		ПараметрыНачисленияЗемельногоНалога.Период КАК Период
		|	ИЗ
		|		РегистрСведений.ПараметрыНачисленияЗемельногоНалога.СрезПоследних(
		|				ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ), ДЕНЬ, 14),
		|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|					И Организация = &Организация) КАК ПараметрыНачисленияЗемельногоНалога
		|	ГДЕ
		|		ПараметрыНачисленияЗемельногоНалога.ВключатьВНалоговуюБазу = ИСТИНА
		|		И НалоговыйОрган В (&НалоговыйОрган)
		|
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		ПараметрыНачисленияЗемельногоНалога.ОсновноеСредство,
		|		ПараметрыНачисленияЗемельногоНалога.Период
		|	ИЗ
		|		РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ПараметрыНачисленияЗемельногоНалога
		|	ГДЕ
		|		ПараметрыНачисленияЗемельногоНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|		И ПараметрыНачисленияЗемельногоНалога.Организация = &Организация
		|		И ПараметрыНачисленияЗемельногоНалога.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ), ДЕНЬ, 14)
		|		И ПараметрыНачисленияЗемельногоНалога.ВключатьВНалоговуюБазу = ИСТИНА
		|		И ПараметрыНачисленияЗемельногоНалога.НалоговыйОрган В (&НалоговыйОрган)
		|	) КАК ПараметрыНачисленияЗемельногоНалога
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(" + Формат(Период, "ДФ=MM") + " КАК ЧИСЛО) КАК НомерМесяца,
		|	ПараметрыНачисленияЗемельногоНалогаПоЛьготам.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыНачисленияЗемельногоНалогаПоЛьготам.Период КАК ДатаРегистрацииЗемли,
		|	ПараметрыНачисленияЗемельногоНалогаПоЛьготам.НалоговаяЛьготаПоНалоговойБазе,
		|	0 КАК КоличествоМесяцев,
		|	1 КАК КоличествоМесяцевПримененияЛьготы
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ПараметрыНачисленияЗемельногоНалога.ОсновноеСредство КАК ОсновноеСредство,
		|			ПараметрыНачисленияЗемельногоНалога.Период КАК Период,
		|			ПараметрыНачисленияЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе
		|		ИЗ
		|			РегистрСведений.ПараметрыНачисленияЗемельногоНалога.СрезПоследних(
		|					КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1), МЕСЯЦ),
		|					ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|						И Организация = &Организация
		|						И НалоговыйОрган В (&НалоговыйОрган)) КАК ПараметрыНачисленияЗемельногоНалога
		|		ГДЕ
		|			ПараметрыНачисленияЗемельногоНалога.ВключатьВНалоговуюБазу = ИСТИНА
		|			И ПараметрыНачисленияЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеПрименяется)
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			ПараметрыНачисленияЗемельногоНалога.ОсновноеСредство,
		|			ПараметрыНачисленияЗемельногоНалога.Период,
		|			ПараметрыНачисленияЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе
		|		ИЗ
		|			РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ПараметрыНачисленияЗемельногоНалога
		|		ГДЕ
		|			ПараметрыНачисленияЗемельногоНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|			И ПараметрыНачисленияЗемельногоНалога.Организация = &Организация
		|			И ПараметрыНачисленияЗемельногоНалога.НалоговыйОрган В (&НалоговыйОрган)
		|			И ПараметрыНачисленияЗемельногоНалога.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
		|			И ПараметрыНачисленияЗемельногоНалога.ВключатьВНалоговуюБазу = ИСТИНА
		|			И ПараметрыНачисленияЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеПрименяется)
		|		) КАК ПараметрыНачисленияЗемельногоНалогаПоЛьготам
		|";
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ ВладениеЗемельнымиУчастками
									  |",
									  "")
								  + "ИЗ ВладениеЗемельнымиУчастками" + Формат(Период, "ДФ=MM") + "
									|";
		
		Период = ДобавитьМесяц(Период, 1);
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("Период", КонецГода(мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаПодписи", ПараметрыОтчета.ДатаПодписи);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	МАКСИМУМ(НомерМесяца) КАК НомерМесяца, 
	|	ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_НомераПоследнихМесяцев
	|ИЗ 
	|	ВладениеЗемельнымиУчастками 
	|ГДЕ 
	|	НЕ (НалоговаяЛьготаПоНалоговойБазе ЕСТЬ NULL) 
	|СГРУППИРОВАТЬ ПО 
	|	ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОсновноеСредство,
	|	НомерМесяца,
	|	НалоговаяЛьготаПоНалоговойБазе
	|ПОМЕСТИТЬ ВТ_ВидыЛьгот
	|ИЗ 
	|	ВладениеЗемельнымиУчастками 
	|ГДЕ 
	|	НЕ (НалоговаяЛьготаПоНалоговойБазе ЕСТЬ NULL)
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВладениеЗемельнымиУчастками.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ВладениеЗемельнымиУчастками.КоличествоМесяцевПримененияЛьготы) КАК КоличествоМесяцевПримененияЛьготы
	|ПОМЕСТИТЬ ВТ_ПрименениеЛьготы
	|ИЗ
	|	ВладениеЗемельнымиУчастками
	|ГДЕ 
	|	НЕ (НалоговаяЛьготаПоНалоговойБазе ЕСТЬ NULL)
	|СГРУППИРОВАТЬ ПО
	|	ВладениеЗемельнымиУчастками.ОсновноеСредство,
	|	ВладениеЗемельнымиУчастками.НалоговаяЛьготаПоНалоговойБазе
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПрименениеЛьготы.ОсновноеСредство,
	|	ПрименениеЛьготы.КоличествоМесяцевПримененияЛьготы
	|ПОМЕСТИТЬ ВТ_Льготы
	|ИЗ
	|	ВТ_НомераПоследнихМесяцев КАК НомераПоследнихМесяцев
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВидыЛьгот КАК ВидыЛьгот
	|	ПО НомераПоследнихМесяцев.ОсновноеСредство = ВидыЛьгот.ОсновноеСредство
	|	И НомераПоследнихМесяцев.НомерМесяца = ВидыЛьгот.НомерМесяца
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПрименениеЛьготы КАК ПрименениеЛьготы
	|	ПО ВидыЛьгот.ОсновноеСредство = ПрименениеЛьготы.ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	ПрименениеЛьготы.ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВладениеЗемельнымиУчастками.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ВладениеЗемельнымиУчастками.ДатаРегистрацииЗемли) КАК ДатаРегистрацииЗемли,
	|	СУММА(ВладениеЗемельнымиУчастками.КоличествоМесяцев) КАК КоличествоМесяцевВладения
	|ПОМЕСТИТЬ ВТ_ВладениеУчастками
	|ИЗ
	|	ВладениеЗемельнымиУчастками
	|СГРУППИРОВАТЬ ПО
	|	ВладениеЗемельнымиУчастками.ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВладениеУчастками.ОсновноеСредство,
	|	ВладениеУчастками.ДатаРегистрацииЗемли,
	|	ЕСТЬNULL(ВладениеУчастками.КоличествоМесяцевВладения, 0) КАК КоличествоМесяцевВладения,
	|	ПараметрыНачисленияЗемельногоНалога.КодКатегорииЗемель,
	|	ПараметрыНачисленияЗемельногоНалога.КадастровыйНомер,
	|	ПараметрыНачисленияЗемельногоНалога.КБК КАК КБК,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалога.КадастроваяСтоимость, 0) КАК КадастроваяСтоимость,
	|	ВЫБОР
	|		КОГДА ПараметрыНачисленияЗемельногоНалога.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|		  ИЛИ ПараметрыНачисленияЗемельногоНалога.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
	|		ТОГДА 
	|			ПараметрыНачисленияЗемельногоНалога.КодПоОКАТО
	|		ИНАЧЕ 
	|			ЕстьNULL(ПараметрыНачисленияЗемельногоНалога.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
	|	КОНЕЦ КАК КодПоОКАТО,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалога.ОбщаяСобственность, ЛОЖЬ) КАК ОбщаяСобственность,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель, 0) КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель, 0) КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалога.ЖилищноеСтроительство, ЛОЖЬ) КАК ЖилищноеСтроительство,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалога.ДатаНачалаПроектирования, ДАТАВРЕМЯ(1,1,1)) КАК ДатаНачалаПроектирования,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалога.ДатаРегистрацииПравНаОбъектНедвижимости, ДАТАВРЕМЯ(1,1,1)) КАК ДатаРегистрацииПравНаОбъектНедвижимости,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалога.НалоговаяСтавка, 0) КАК НалоговаяСтавка,
	|	ПараметрыНачисленияЗемельногоНалогаПоЛьготам.НалоговаяЛьготаПоНалоговойБазе,
	|	ЕСТЬNULL(Льготы.КоличествоМесяцевПримененияЛьготы, 0) КАК КоличествоМесяцевПримененияЛьготы,
	|	ПараметрыНачисленияЗемельногоНалогаПоЛьготам.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалогаПоЛьготам.ДоляНеОблагаемойНалогомПлощадиЧислитель, 0) КАК ДоляНеОблагаемойНалогомПлощадиЧислитель,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалогаПоЛьготам.ДоляНеОблагаемойНалогомПлощадиЗнаменатель, 0) КАК ДоляНеОблагаемойНалогомПлощадиЗнаменатель,
	|	ПараметрыНачисленияЗемельногоНалога.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалога.УменьшениеНалоговойБазыПоСтатье391, ЛОЖЬ) КАК УменьшениеНалоговойБазыПоСтатье391,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалога.УменьшениеНалоговойБазыНаСумму, ЛОЖЬ) КАК УменьшениеНалоговойБазыНаСумму,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалога.НеОблагаемаяНалогомСумма, 0) КАК НеОблагаемаяНалогомСумма,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалога.СниженнаяНалоговаяСтавка, 0) КАК СниженнаяНалоговаяСтавка,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалога.ПроцентУменьшенияСуммыНалога, 0) КАК ПроцентУменьшенияСуммыНалога,
	|	ЕСТЬNULL(ПараметрыНачисленияЗемельногоНалога.СуммаУменьшенияСуммыНалога, 0) КАК СуммаУменьшенияСуммыНалога
	|ИЗ
	|	ВТ_ВладениеУчастками КАК ВладениеУчастками
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Льготы КАК Льготы
	|	ПО ВладениеУчастками.ОсновноеСредство = Льготы.ОсновноеСредство
	|  
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияЗемельногоНалога.СрезПоследних(&Период, ДатаИсправления = ДАТАВРЕМЯ(1,1,1) И Организация = &Организация И ВключатьВНалоговуюБазу = ИСТИНА) КАК ПараметрыНачисленияЗемельногоНалога
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияЗемельногоНалога.СрезПоследних(&Период, ДатаИсправления = ДАТАВРЕМЯ(1,1,1) И Организация = &Организация И ВключатьВНалоговуюБазу = ИСТИНА И НалоговаяЛьготаПоНалоговойБазе <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеПрименяется)) КАК ПараметрыНачисленияЗемельногоНалогаПоЛьготам
	|		ПО ПараметрыНачисленияЗемельногоНалогаПоЛьготам.ОсновноеСредство = ПараметрыНачисленияЗемельногоНалога.ОсновноеСредство
	|		 И ПараметрыНачисленияЗемельногоНалогаПоЛьготам.НалоговыйОрган В (&НалоговыйОрган)
	|	ПО ПараметрыНачисленияЗемельногоНалога.ОсновноеСредство = ВладениеУчастками.ОсновноеСредство
	|	И ПараметрыНачисленияЗемельногоНалога.НалоговыйОрган В (&НалоговыйОрган)
	|";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствуют данные о регистрации земельных участков в налоговом органе - ""%1"" на %2 для %3
			|%4';
			|en = 'No data about registration of land plots with the tax authority - ""%1"" on %2 for %3
			|%4'"), 
			?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане),РегистрацияВНалоговомОргане.Наименование,""),
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
 		Возврат;
		
	КонецЕсли;
	
	ВыборкаЗемельныхУчастков = РезультатЗапроса.Выбрать();
	
	
	Раздел2 = Контейнер.Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел2 Цикл
		Раздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел2.Количество()>1 Цикл
		Контейнер.Раздел2.Удалить(1);
	КонецЦикла;
	
	ПериодОтчета = НачалоГода(мДатаНачалаПериодаОтчета);

	Количество = 0;
	Пока ВыборкаЗемельныхУчастков.Следующий() Цикл
		
		Если НЕ (ВыборкаЗемельныхУчастков.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись) Тогда
			Продолжить;
		КонецЕсли;
		
		Количество = Количество + 1;
		Если Количество > 1 Тогда
			
			СтруктураНовойТаблицы = Новый Структура();
			Для Каждого Показатель Из Раздел2 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			Контейнер.Раздел2.Добавить().Данные = Новый СписокЗначений();
			Контейнер.Раздел2[Количество-1].Данные.Добавить(СтруктураНовойТаблицы);
			Раздел2 = Контейнер.Раздел2[Количество-1].Данные[0].Значение;
				
		КонецЕсли;
		
		// Кадастровый номер.
		Раздел2.П000020000100 = ВыборкаЗемельныхУчастков.КадастровыйНомер;

		// КБК.
		Раздел2.П000020001003 = ВыборкаЗемельныхУчастков.КБК;
		
		// Код по ОКАТО.
		Раздел2.П000020002003 = ВыборкаЗемельныхУчастков.КодПоОКАТО;
		
		// Код категории земель.
		Раздел2.П000020003003 = ВыборкаЗемельныхУчастков.КодКатегорииЗемель;
		
		Если ВыборкаЗемельныхУчастков.ЖилищноеСтроительство Тогда
			
			Если ВыборкаЗемельныхУчастков.ДатаРегистрацииЗемли >= Дата(2008,1,1) Тогда
				
				Если ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости = Дата(1,1,1)
					ИЛИ ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости > ПериодОтчета Тогда
					
					ПериодПроектированияИСтроительства = ОпределитьФактическийСрокИспользования(ВыборкаЗемельныхУчастков.ДатаРегистрацииЗемли, ПериодОтчета) / 12;
					
					Если ПериодПроектированияИСтроительства > 3 Тогда
						// Период проектирования и строительства - свыше 3-х лет.
						Раздел2.П000020004003 = "2";
					Иначе
						// Период проектирования и строительства - 3 года.
						Раздел2.П000020004003 = "1";
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли ВыборкаЗемельныхУчастков.ДатаНачалаПроектирования <> Дата(1,1,1) Тогда 
				
				Если ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости = Дата(1,1,1)
				   ИЛИ (НЕ (ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости = Дата(1,1,1))
						И НЕ (ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости < ПериодОтчета)) Тогда
					
					ПериодПроектированияИСтроительства = ОпределитьФактическийСрокИспользования(ВыборкаЗемельныхУчастков.ДатаНачалаПроектирования, ПериодОтчета) / 12;
					
					Если ПериодПроектированияИСтроительства > 3 Тогда
						// Период проектирования и строительства - свыше 3-х лет.
						Раздел2.П000020004003 = "2";
					Иначе
						// Период проектирования и строительства - 3 года.
						Раздел2.П000020004003 = "1";
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		// Кадастровая стоимость.
		Раздел2.П000020005003 = ВыборкаЗемельныхУчастков.КадастроваяСтоимость;
	
		// Доля в праве на земельный участок.
		Если ВыборкаЗемельныхУчастков.ОбщаяСобственность Тогда
			
			// Числитель.
			Раздел2.П000020006003_Числ = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель;
			
			// Знаменатель.
			Раздел2.П000020006003_Знам = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель;
		
		КонецЕсли;
		
		Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.УменьшениеНалоговойБазы Тогда

		
			Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыНаСумму Тогда
			
				// Код налоговой льготы - не облагаемая налогом сумма.
				Раздел2.П000020007003_КодЛьготы = "3022100";
				Раздел2П000020007003_Основание = "000000000000";
				
				// Не облагаемая налогом сумма.
				Раздел2.П000020008003 = ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма;
				
			КонецЕсли;
			
			Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыПоСтатье391 Тогда
			
				// Код налоговой льготы - не облагаемая налогом сумма на федеральном уровне.
				Раздел2П000020009003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391;
				
				// Не облагаемая налогом сумма на федеральном уровне (10 000 руб.).
				Раздел2.П000020010003 = 10000;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеОблагаемаяНалогомПлощадь Тогда
		
			// Код налоговой льготы - не облагаемая налогом площадь.
			Раздел2.П000020011003_КодЛьготы = "3022300";
			Раздел2.П000020011003_Основание = "000000000000";
			
			// Доля не облагаемой площади (простая дробь).
			
			// Числитель.
			Раздел2.П000020012003_Числ = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЧислитель;
			
			// Знаменатель.
			Раздел2.П000020012003_Знам = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЗнаменатель;
			
			// Количество полных месяцев пользования льготой.
			Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
			
		КонецЕсли;
		
		Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияМестное Тогда
		
			// Код налоговой льготы - освобождение от налогообложения.
			Раздел2.П000020020003_КодЛьготы = "3022400";
			Раздел2.П000020020003_Основание = "000000000000";
			
			// Количество полных месяцев пользования льготой.
			Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
			
		КонецЕсли;

		Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияПоСтатье395 Тогда
			
			// Код налоговой льготы - освобождение от налогообложения на федеральном уровне.
			Раздел2.П000020022003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395;
			
			// Количество полных месяцев пользования льготой.
			Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
			
		КонецЕсли;
		
		// Налоговая ставка.
		НалоговаяСтавка = ВыборкаЗемельныхУчастков.НалоговаяСтавка;
		
		Раздел2.П000020014003 = НалоговаяСтавка;
		
		// Количество полных месяцев владения земельным участком в течение налогового периода.
		Раздел2.П000020015003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
		
		
		КодНалоговойЛьготыВОтношенииСуммыНалога   = "";
		СуммаНалоговойЛьготыВОтношенииСуммыНалога = 0;
		
		ОсноваДляРасчетаНалоговойБазы = ВыборкаЗемельныхУчастков.КадастроваяСтоимость
			* ?(ВыборкаЗемельныхУчастков.ОбщаяСобственность, 
				ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель / ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель, 1);
		Строка080 = ?(ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.УменьшениеНалоговойБазы И ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыНаСумму,
						ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма, 0);
		Строка100 = ?(ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.УменьшениеНалоговойБазы И ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыПоСтатье391,
						10000, 0);
		Строка120 = ?(ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеОблагаемаяНалогомПлощадь И ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЧислитель <> 0,
						ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЧислитель/ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЗнаменатель, 0);
		Строка150 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
		Строка180 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
		ЧислоМесяцевВОтчетномПериоде = 12;
		Если Строка180 = 0 Тогда
			Строка190 = 1;
		Иначе
			ЧислоМесяцевИспользованияЛьготы = Строка150 - Строка180;
			Строка190 = Макс(ЧислоМесяцевИспользованияЛьготы / ЧислоМесяцевВОтчетномПериоде, 0);
			Строка190 = Окр(Строка190, 4);
		КонецЕсли;
		Если Строка080 <> 0 ИЛИ Строка100 <> 0 Тогда
			Строка130= Макс(ОсноваДляРасчетаНалоговойБазы - (Строка080 + Строка100), 0);
		ИначеЕсли Строка120 > 0 Тогда
			Строка130 = Макс((ОсноваДляРасчетаНалоговойБазы - (ОсноваДляРасчетаНалоговойБазы * Строка120 * (1 - Строка190))), 0);
		Иначе
			Строка130 = Макс(ОсноваДляРасчетаНалоговойБазы, 0);
		КонецЕсли;
		Строка140 = НалоговаяСтавка;
		Строка040 = Раздел2.П000020004003;
		Строка160 = Окр(Строка150 / ЧислоМесяцевВОтчетномПериоде, 4);
		ОсноваДляРасчетаСтроки170 = Окр(Строка130) * Строка140 * Строка160 / 100;
		Если Строка040 = "1" Тогда
			Строка170 = ОсноваДляРасчетаСтроки170 * 2;
		ИначеЕсли Строка040 = "2" Тогда
			Строка170 = ОсноваДляРасчетаСтроки170 * 4;
		Иначе
			Строка170 = ОсноваДляРасчетаСтроки170;
		КонецЕсли;
		Строка170 = Окр(Строка170, 2);
		
		КоэффициентК2 = Строка150 / ЧислоМесяцевВОтчетномПериоде;//160
		НалоговаяБаза = Строка130;//130
		СуммаНалога   = Строка170;//170

		Если ЗначениеЗаполнено(ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка) Тогда
			
			// Код налоговой льготы в виде снижения налоговой ставки.
			Раздел2.П000020026003_КодЛьготы = "3022500";
			Раздел2.П000020026003_Основание = "000000000000";
			
			Раздел2.П000020027003 = СуммаНалога - НалоговаяБаза * КоэффициентК2 * (ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка / 100);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога) 
		 ИЛИ ЗначениеЗаполнено(ВыборкаЗемельныхУчастков.СуммаУменьшенияСуммыНалога) Тогда
			
			// Код налоговой льготы в виде уменьшения суммы налога.
			Раздел2.П000020024003_КодЛьготы = "3022200";
			Раздел2.П000020024003_Основание = "000000000000";
			
			СуммаУменьшения = СуммаНалога * ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога / 100 // уменьшение в процентах.
			                + ВыборкаЗемельныхУчастков.СуммаУменьшенияСуммыНалога;                      // уменьшение на сумму.
			
			// Сумма налоговой льготы в виде уменьшения суммы налога и (или) снижения налоговой ставки.
			Раздел2.П000020025003 = СуммаУменьшения;
			
			
		КонецЕсли;
		
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2013Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_2", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020025003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020027003", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетЗемельныйНалогФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетЗемельногоНалога.ОсновноеСредство,
	|	РасчетЗемельногоНалога.ИФНС,
	|	РасчетЗемельногоНалога.КоличествоМесяцевВладения,
	|	РасчетЗемельногоНалога.КодКатегорииЗемель,
	|	РасчетЗемельногоНалога.СуммаНалогаКУплате,
	|	РасчетЗемельногоНалога.КадастровыйНомер,
	|	РасчетЗемельногоНалога.КБК,
	|	РасчетЗемельногоНалога.КадастроваяСтоимость,
	|	РасчетЗемельногоНалога.КодПоОКТМО,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетЗемельногоНалога.ПериодСтроительства,
	|	РасчетЗемельногоНалога.НалоговаяСтавка,
	|	РасчетЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе,
	|	РасчетЗемельногоНалога.КоличествоМесяцевПримененияЛьготы,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЧислитель,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.УменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.УменьшениеНалоговойБазыНаСумму,
	|	РасчетЗемельногоНалога.НеОблагаемаяНалогомСумма,
	|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
	|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеСниженияНалоговойСтавки,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей1Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей2Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей3Кв
	|ИЗ
	|	РегистрСведений.РасчетЗемельногоНалога КАК РасчетЗемельногоНалога
	|ГДЕ
	|	РасчетЗемельногоНалога.Организация = &Организация
	|	И РасчетЗемельногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоЗемельномуНалогу = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоЗемельномуНалогу = Выборка.Выгрузить();
	Иначе
		ТаблицаРасчетовПоЗемельномуНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоЗемельномуНалогу(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоЗемельномуНалогу", ТаблицаРасчетовПоЗемельномуНалогу);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовПоЗемельномуНалогу
	|	ИЗ &ТаблицаРасчетовПоЗемельномуНалогу КАК ТаблицаРасчетовПоЗемельномуНалогу";
	Запрос.Выполнить();
		
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ОсновноеСредство,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения,
	|	ВложенныйЗапрос.КодКатегорииЗемель,
	|	ВложенныйЗапрос.КадастровыйНомер,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.КадастроваяСтоимость,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЧислитель,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ВложенныйЗапрос.ПериодСтроительства,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.НалоговаяЛьготаПоНалоговойБазе,
	|	ВложенныйЗапрос.КоличествоМесяцевПримененияЛьготы,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЧислитель,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	ВложенныйЗапрос.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	ВложенныйЗапрос.УменьшениеНалоговойБазыПоСтатье391,
	|	ВложенныйЗапрос.УменьшениеНалоговойБазыНаСумму,
	|	ВложенныйЗапрос.НеОблагаемаяНалогомСумма,
	|	ВложенныйЗапрос.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.СуммаНалоговойЛьготыВВидеСниженияНалоговойСтавки,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ВложенныйЗапрос.СуммаНалогаКУплате + ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаИсчисленнаяКУплате
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоЗемельномуНалогу КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|ИТОГИ
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв),
	|	СУММА(СуммаИсчисленнаяКУплате)
	|ПО
	|	КБК,
	|	КодПоОКТМО";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствуют данные о регистрации земельных участков в налоговом органе - ""%1"" на %2 для %3
			|%4';
			|en = 'No data about registration of land plots with the tax authority - ""%1"" on %2 for %3
			|%4'"), 
			?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане),РегистрацияВНалоговомОргане.Наименование,""),
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
 		Возврат;
		
	КонецЕсли;
	
	Раздел2 = Контейнер.Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел2 Цикл
		Раздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел2.Количество()>1 Цикл
		Контейнер.Раздел2.Удалить(1);
	КонецЦикла;
	
	Раздел1 = Контейнер.Раздел1[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел1 Цикл
		Раздел1[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел1.Количество()>1 Цикл
		Контейнер.Раздел1.Удалить(1);
	КонецЦикла;
	           	
	ВыборкаЗемельныхУчастковКБК = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НомерБлокаРаздела1			= 0;
	КоличествоБлоковРаздела1 	= 2;
	КоличествоРаздел2 = 0;
	
	Пока ВыборкаЗемельныхУчастковКБК.Следующий() Цикл
		
		ВыборкаЗемельныхУчастковОКАТО = ВыборкаЗемельныхУчастковКБК.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаЗемельныхУчастковОКАТО.Следующий() Цикл
			// Авансовые платежи по разделу 1
			Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0 
				И НомерБлокаРаздела1 <> 0 Тогда
				
				Контейнер.Раздел1.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел1 = Контейнер.Раздел1.Количество()-1;
			
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из Раздел1 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Контейнер.Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицы);
				Раздел1 = Контейнер.Раздел1[НомерТекущейСтраницыРаздел1].Данные[0].Значение;

				НомерБлокаРаздела1 = 0;
				
			КонецЕсли;
			
			ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
			
			Раздел1["П000010001003" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.КБК;
			Раздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.КодПоОКТМО;
			Раздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаИсчисленнаяКУплате;
			
			Раздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей1Кв;
			Раздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей2Кв;
			Раздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей3Кв;
			
			НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
					
			ВыборкаЗемельныхУчастков = ВыборкаЗемельныхУчастковОКАТО.Выбрать();
			Пока ВыборкаЗемельныхУчастков.Следующий() Цикл
				
				КоличествоРаздел2 = КоличествоРаздел2 + 1;
				Если КоличествоРаздел2 > 1 Тогда
					
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из Раздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					Контейнер.Раздел2.Добавить().Данные = Новый СписокЗначений();
					Контейнер.Раздел2[КоличествоРаздел2-1].Данные.Добавить(СтруктураНовойТаблицы);
					Раздел2 = Контейнер.Раздел2[КоличествоРаздел2-1].Данные[0].Значение;
					
				КонецЕсли;
				
				// Кадастровый номер.
				Раздел2.П000020000100 = ВыборкаЗемельныхУчастков.КадастровыйНомер;
				
				// КБК.
				Раздел2.П000020001003 = ВыборкаЗемельныхУчастков.КБК;
				
				// Код по ОКТМО.
				Раздел2.П000020002003 = ВыборкаЗемельныхУчастков.КодПоОКТМО;
				
				// Код категории земель.
				Раздел2.П000020003003 = ВыборкаЗемельныхУчастков.КодКатегорииЗемель;
				
				Раздел2.П000020004003 = ВыборкаЗемельныхУчастков.ПериодСтроительства;
				
				// Кадастровая стоимость.
				Раздел2.П000020005003 = ВыборкаЗемельныхУчастков.КадастроваяСтоимость;
				
				// Доля в праве на земельный участок.
				
				// Числитель.
				Раздел2.П000020006003_Числ = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель;
				
				// Знаменатель.
				Раздел2.П000020006003_Знам = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.УменьшениеНалоговойБазы Тогда
					
					
					Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыНаСумму Тогда
						
						// Код налоговой льготы - не облагаемая налогом сумма.
						Раздел2.П000020007003_КодЛьготы = "3022100";
						Раздел2П000020007003_Основание = "000000000000";
						
						// Не облагаемая налогом сумма.
						Раздел2.П000020008003 = ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма;
						
					КонецЕсли;
					
					Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыПоСтатье391 Тогда
						
						// Код налоговой льготы - не облагаемая налогом сумма на федеральном уровне.
						Раздел2П000020009003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391;
						
						// Не облагаемая налогом сумма на федеральном уровне (10 000 руб.).
						Раздел2.П000020010003 = 10000;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеОблагаемаяНалогомПлощадь Тогда
					
					// Код налоговой льготы - не облагаемая налогом площадь.
					Раздел2.П000020011003_КодЛьготы = "3022300";
					Раздел2.П000020011003_Основание = "000000000000";
					
					// Доля не облагаемой площади (простая дробь).
					
					// Числитель.
					Раздел2.П000020012003_Числ = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЧислитель;
					
					// Знаменатель.
					Раздел2.П000020012003_Знам = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЗнаменатель;
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияМестное Тогда
					
					// Код налоговой льготы - освобождение от налогообложения.
					Раздел2.П000020020003_КодЛьготы = "3022400";
					Раздел2.П000020020003_Основание = "000000000000";
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияПоСтатье395 Тогда
					
					// Код налоговой льготы - освобождение от налогообложения на федеральном уровне.
					Раздел2.П000020022003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395;
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				// Налоговая ставка.
				НалоговаяСтавка = ВыборкаЗемельныхУчастков.НалоговаяСтавка;
				
				Раздел2.П000020014003 = НалоговаяСтавка;
				
				// Количество полных месяцев владения земельным участком в течение налогового периода.
				Раздел2.П000020015003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
				
				Раздел2.П000020027003 = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеСниженияНалоговойСтавки;
				
				Раздел2.П000020025003 = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога;
			КонецЦикла;	
		КонецЦикла;
	КонецЦикла;	
	 	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2014Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_2", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_Сумма", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_Ставка", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетЗемельныйНалогФормаОтчета2014Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетЗемельногоНалога.ОсновноеСредство,
	|	РасчетЗемельногоНалога.ИФНС,
	|	РасчетЗемельногоНалога.КоличествоМесяцевВладения,
	|	РасчетЗемельногоНалога.КодКатегорииЗемель,
	|	РасчетЗемельногоНалога.СуммаНалогаКУплате,
	|	РасчетЗемельногоНалога.КадастровыйНомер,
	|	РасчетЗемельногоНалога.КБК,
	|	РасчетЗемельногоНалога.КадастроваяСтоимость,
	|	РасчетЗемельногоНалога.КодПоОКТМО,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетЗемельногоНалога.ПериодСтроительства,
	|	РасчетЗемельногоНалога.НалоговаяСтавка,
	|	РасчетЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе,
	|	РасчетЗемельногоНалога.КоличествоМесяцевПримененияЛьготы,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЧислитель,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.УменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.УменьшениеНалоговойБазыНаСумму,
	|	РасчетЗемельногоНалога.НеОблагаемаяНалогомСумма,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей1Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей2Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей3Кв,
	|	РасчетЗемельногоНалога.СниженнаяНалоговаяСтавка,
	|	РасчетЗемельногоНалога.ПроцентУменьшенияСуммыНалога,
	|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога
	|ИЗ
	|	РегистрСведений.РасчетЗемельногоНалога КАК РасчетЗемельногоНалога
	|ГДЕ
	|	РасчетЗемельногоНалога.Организация = &Организация
	|	И РасчетЗемельногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоЗемельномуНалогу = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоЗемельномуНалогу = Выборка.Выгрузить();
	Иначе
		ТаблицаРасчетовПоЗемельномуНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоЗемельномуНалогу(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоЗемельномуНалогу", ТаблицаРасчетовПоЗемельномуНалогу);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовПоЗемельномуНалогу
	|	ИЗ &ТаблицаРасчетовПоЗемельномуНалогу КАК ТаблицаРасчетовПоЗемельномуНалогу";
	Запрос.Выполнить();
		
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ОсновноеСредство,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения,
	|	ВложенныйЗапрос.КодКатегорииЗемель,
	|	ВложенныйЗапрос.КадастровыйНомер,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.КадастроваяСтоимость,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЧислитель,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ВложенныйЗапрос.ПериодСтроительства,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.НалоговаяЛьготаПоНалоговойБазе,
	|	ВложенныйЗапрос.КоличествоМесяцевПримененияЛьготы,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЧислитель,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	ВложенныйЗапрос.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	ВложенныйЗапрос.УменьшениеНалоговойБазыПоСтатье391,
	|	ВложенныйЗапрос.УменьшениеНалоговойБазыНаСумму,
	|	ВложенныйЗапрос.НеОблагаемаяНалогомСумма,
	|	ВложенныйЗапрос.СниженнаяНалоговаяСтавка,
	|	ВложенныйЗапрос.ПроцентУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ВложенныйЗапрос.СуммаНалогаКУплате + ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаИсчисленнаяКУплате
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоЗемельномуНалогу КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|ИТОГИ
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв),
	|	СУММА(СуммаИсчисленнаяКУплате)
	|ПО
	|	КБК,
	|	КодПоОКТМО";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствуют данные о регистрации земельных участков в налоговом органе - ""%1"" на %2 для %3
			|%4';
			|en = 'No data about registration of land plots with the tax authority - ""%1"" on %2 for %3
			|%4'"), 
			?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане),РегистрацияВНалоговомОргане.Наименование,""),
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
 		Возврат;
		
	КонецЕсли;
	
	Раздел2 = Контейнер.Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел2 Цикл
		Раздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел2.Количество()>1 Цикл
		Контейнер.Раздел2.Удалить(1);
	КонецЦикла;
	
	Раздел1 = Контейнер.Раздел1[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел1 Цикл
		Раздел1[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел1.Количество()>1 Цикл
		Контейнер.Раздел1.Удалить(1);
	КонецЦикла;
	
	ВыборкаЗемельныхУчастковКБК = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НомерБлокаРаздела1       = 0;
	КоличествоБлоковРаздела1 = 2;
	КоличествоРаздел2        = 0;
	
	Пока ВыборкаЗемельныхУчастковКБК.Следующий() Цикл
		
		ВыборкаЗемельныхУчастковОКАТО = ВыборкаЗемельныхУчастковКБК.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаЗемельныхУчастковОКАТО.Следующий() Цикл
			// Авансовые платежи по разделу 1
			Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0
				И НомерБлокаРаздела1 <> 0 Тогда
				
				Контейнер.Раздел1.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел1 = Контейнер.Раздел1.Количество()-1;
			
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из Раздел1 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Контейнер.Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицы);
				Раздел1 = Контейнер.Раздел1[НомерТекущейСтраницыРаздел1].Данные[0].Значение;
				НомерБлокаРаздела1 = 0;
				
			КонецЕсли;
			
			ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
			
			Раздел1["П000010001003" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.КБК;
			Раздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.КодПоОКТМО;
			Раздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаИсчисленнаяКУплате;
			
			Раздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей1Кв;
			Раздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей2Кв;
			Раздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей3Кв;
			
			НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
					
			ВыборкаЗемельныхУчастков = ВыборкаЗемельныхУчастковОКАТО.Выбрать();
			Пока ВыборкаЗемельныхУчастков.Следующий() Цикл
				
				КоличествоРаздел2 = КоличествоРаздел2 + 1;
				Если КоличествоРаздел2 > 1 Тогда
					
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из Раздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					Контейнер.Раздел2.Добавить().Данные = Новый СписокЗначений();
					Контейнер.Раздел2[КоличествоРаздел2-1].Данные.Добавить(СтруктураНовойТаблицы);
					Раздел2 = Контейнер.Раздел2[КоличествоРаздел2-1].Данные[0].Значение;
					
				КонецЕсли;
				
				// Кадастровый номер.
				Раздел2.П000020000100 = ВыборкаЗемельныхУчастков.КадастровыйНомер;
				
				// КБК.
				Раздел2.П000020001003 = ВыборкаЗемельныхУчастков.КБК;
				
				// Код по ОКТМО.
				Раздел2.П000020002003 = ВыборкаЗемельныхУчастков.КодПоОКТМО;
				
				// Код категории земель.
				Раздел2.П000020003003 = ВыборкаЗемельныхУчастков.КодКатегорииЗемель;
				
				Раздел2.П000020004003 = ВыборкаЗемельныхУчастков.ПериодСтроительства;
				
				// Кадастровая стоимость.
				Раздел2.П000020005003 = ВыборкаЗемельныхУчастков.КадастроваяСтоимость;
				
				// Доля в праве на земельный участок.
				
				// Числитель.
				Раздел2.П000020006003_Числ = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель;
				
				// Знаменатель.
				Раздел2.П000020006003_Знам = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.УменьшениеНалоговойБазы Тогда
					
					
					Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыНаСумму Тогда
						
						// Код налоговой льготы - не облагаемая налогом сумма.
						Раздел2.П000020007003_КодЛьготы = "3022100";
						Раздел2.П000020007003_Основание = "000000000000";
						
						// Не облагаемая налогом сумма.
						Раздел2.П000020008003 = ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма;
						
					КонецЕсли;
					
					Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыПоСтатье391 Тогда
						
						// Код налоговой льготы - не облагаемая налогом сумма на федеральном уровне.
						Раздел2.П000020009003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391;
						
						// Не облагаемая налогом сумма на федеральном уровне (10 000 руб.).
						Раздел2.П000020010003 = 10000;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеОблагаемаяНалогомПлощадь Тогда
					
					// Код налоговой льготы - не облагаемая налогом площадь.
					Раздел2.П000020011003_КодЛьготы = "3022300";
					Раздел2.П000020011003_Основание = "000000000000";
					
					// Доля не облагаемой площади (простая дробь).
					
					// Числитель.
					Раздел2.П000020012003_Числ = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЧислитель;
					
					// Знаменатель.
					Раздел2.П000020012003_Знам = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЗнаменатель;
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияМестное Тогда
					
					// Код налоговой льготы - освобождение от налогообложения.
					Раздел2.П000020020003_КодЛьготы = "3022400";
					Раздел2.П000020020003_Основание = "000000000000";
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияПоСтатье395 Тогда
					
					// Код налоговой льготы - освобождение от налогообложения на федеральном уровне.
					Раздел2.П000020022003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395;
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				// Налоговая ставка.
				НалоговаяСтавка = ВыборкаЗемельныхУчастков.НалоговаяСтавка;
				
				Раздел2.П000020014003 = НалоговаяСтавка;
				
				// Количество полных месяцев владения земельным участком в течение налогового периода.
				Раздел2.П000020015003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
				
				Если ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 
					ИЛИ ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога > 0 Тогда
					
					Раздел2.П000020024003_КодЛьготы = "3022200";
					Раздел2.П000020024003_Основание = "000000000000";
					
					Если ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 Тогда
						Раздел2.П000020024003_Процент = ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога;
					Иначе
						Раздел2.П000020024003_Сумма = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога;
					КонецЕсли;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка > 0 Тогда
					
					Раздел2.П000020026003_КодЛьготы = "3022500";
					Раздел2.П000020026003_Основание = "000000000000";
					
					Раздел2.П000020026003_Ставка = ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка;
					
				КонецЕсли;
				
			КонецЦикла;	
		КонецЦикла;
	КонецЦикла;	
	 	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2017Кв4(ПоказателиОтчета) Экспорт
	
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетЗемельныйНалогФормаОтчета2017Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетЗемельногоНалога.ОсновноеСредство,
	|	РасчетЗемельногоНалога.ИФНС,
	|	РасчетЗемельногоНалога.КоличествоМесяцевВладения,
	|	РасчетЗемельногоНалога.КодКатегорииЗемель,
	|	РасчетЗемельногоНалога.СуммаНалогаКУплате,
	|	РасчетЗемельногоНалога.КадастровыйНомер,
	|	РасчетЗемельногоНалога.КБК,
	|	РасчетЗемельногоНалога.КадастроваяСтоимость,
	|	РасчетЗемельногоНалога.КодПоОКТМО,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетЗемельногоНалога.ПериодСтроительства,
	|	РасчетЗемельногоНалога.НалоговаяСтавка,
	|	РасчетЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе,
	|	РасчетЗемельногоНалога.КоличествоМесяцевПримененияЛьготы,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЧислитель,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.НеОблагаемаяНалогомСумма,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей1Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей2Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей3Кв,
	|	РасчетЗемельногоНалога.СниженнаяНалоговаяСтавка,
	|	РасчетЗемельногоНалога.ПроцентУменьшенияСуммыНалога,
	|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога
	|ИЗ
	|	РегистрСведений.РасчетЗемельногоНалога КАК РасчетЗемельногоНалога
	|ГДЕ
	|	РасчетЗемельногоНалога.Организация = &Организация
	|	И РасчетЗемельногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоЗемельномуНалогу = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоЗемельномуНалогу = Выборка.Выгрузить();
	Иначе
		ТаблицаРасчетовПоЗемельномуНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоЗемельномуНалогу(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоЗемельномуНалогу", ТаблицаРасчетовПоЗемельномуНалогу);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовПоЗемельномуНалогу
	|	ИЗ &ТаблицаРасчетовПоЗемельномуНалогу КАК ТаблицаРасчетовПоЗемельномуНалогу";
	Запрос.Выполнить();
		
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ОсновноеСредство,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения,
	|	ВложенныйЗапрос.КодКатегорииЗемель,
	|	ВложенныйЗапрос.КадастровыйНомер,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.КадастроваяСтоимость,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЧислитель,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ВложенныйЗапрос.ПериодСтроительства,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.НалоговаяЛьготаПоНалоговойБазе,
	|	ВложенныйЗапрос.КоличествоМесяцевПримененияЛьготы,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЧислитель,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	ВложенныйЗапрос.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	ВложенныйЗапрос.НеОблагаемаяНалогомСумма,
	|	ВложенныйЗапрос.СниженнаяНалоговаяСтавка,
	|	ВложенныйЗапрос.ПроцентУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ВложенныйЗапрос.СуммаНалогаКУплате + ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаИсчисленнаяКУплате
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоЗемельномуНалогу КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|ИТОГИ
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв),
	|	СУММА(СуммаИсчисленнаяКУплате)
	|ПО
	|	КБК,
	|	КодПоОКТМО";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствуют данные о регистрации земельных участков в налоговом органе - ""%1"" на %2 для %3
			|%4';
			|en = 'No data about registration of land plots with the tax authority - ""%1"" on %2 for %3
			|%4'"), 
			?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане),РегистрацияВНалоговомОргане.Наименование,""),
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета),
			КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина"),
			ПараметрыОтчета.Организация, ПутьКРегистру));
		Возврат;
		
	КонецЕсли;
	
	Раздел2 = Контейнер.Раздел2.Строки[0].Данные;
	Для Каждого Показатель Из Раздел2 Цикл
		Раздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел2.Строки.Количество() > 1 Цикл
		Контейнер.Раздел2.Строки.Удалить(1);
	КонецЦикла;
	
	Раздел1 = Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки[0].Данные;
	Для Каждого Показатель Из Раздел1 Цикл
		Раздел1[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки.Количество() > 1 Цикл
		Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки.Удалить(1);
	КонецЦикла;
	
	ВыборкаЗемельныхУчастковКБК = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйБлокРаздела1 = Истина;
	КоличествоРаздел2  = 0;
	
	Пока ВыборкаЗемельныхУчастковКБК.Следующий() Цикл
		
		ВыборкаЗемельныхУчастковОКАТО = ВыборкаЗемельныхУчастковКБК.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаЗемельныхУчастковОКАТО.Следующий() Цикл
			
			Если Не ПервыйБлокРаздела1 Тогда
				
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из Раздел1 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				НовыйБлокРаздела1 = Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки.Добавить();
				НовыйБлокРаздела1.Данные = СтруктураНовойТаблицы;
				НовыйБлокРаздела1.ДанныеМногострочныхЧастей = Новый Структура;
				
				Раздел1 = НовыйБлокРаздела1.Данные;
				
			КонецЕсли;
			
			ПервыйБлокРаздела1 = Ложь;
			
			Раздел1.П000010001003 = ВыборкаЗемельныхУчастковОКАТО.КБК;
			Раздел1.П000010002003 = ВыборкаЗемельныхУчастковОКАТО.КодПоОКТМО;
			Раздел1.П000010002103 = ВыборкаЗемельныхУчастковОКАТО.СуммаИсчисленнаяКУплате;
			Раздел1.П000010002303 = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей1Кв;
			Раздел1.П000010002503 = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей2Кв;
			Раздел1.П000010002703 = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей3Кв;
			
			ВыборкаЗемельныхУчастков = ВыборкаЗемельныхУчастковОКАТО.Выбрать();
			Пока ВыборкаЗемельныхУчастков.Следующий() Цикл
				
				КоличествоРаздел2 = КоличествоРаздел2 + 1;
				Если КоличествоРаздел2 > 1 Тогда
					
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из Раздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					НоваяСтраницаРаздела2 = Контейнер.Раздел2.Строки.Добавить();
					
					НоваяСтраницаРаздела2.Данные = СтруктураНовойТаблицы;
					НоваяСтраницаРаздела2.ДанныеМногострочныхЧастей = Новый Структура;
					
					Раздел2 = НоваяСтраницаРаздела2.Данные;
					
				КонецЕсли;
				
				Раздел2.П000020000100 = ВыборкаЗемельныхУчастков.КадастровыйНомер;
				Раздел2.П000020001003 = ВыборкаЗемельныхУчастков.КБК;
				Раздел2.П000020002003 = ВыборкаЗемельныхУчастков.КодПоОКТМО;
				Раздел2.П000020003003 = ВыборкаЗемельныхУчастков.КодКатегорииЗемель;
				Раздел2.П000020004003 = ВыборкаЗемельныхУчастков.ПериодСтроительства;
				Раздел2.П000020005003 = ВыборкаЗемельныхУчастков.КадастроваяСтоимость;
				Раздел2.П000020006003_Числ = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель;
				Раздел2.П000020006003_Знам = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				     Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияПоСтатье395 Тогда
					
					Раздел2.П000020020003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395;
					Раздел2.П000020016003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				ИначеЕсли ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				          Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияМестное Тогда
					
					Раздел2.П000020018003_КодЛьготы = "3022400";
					Раздел2.П000020016003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				ИначеЕсли ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				          Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.УменьшениеНалоговойБазы Тогда
					
					Раздел2.П000020007003_КодЛьготы = "3022100";
					Раздел2.П000020008003 = ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма;
					
				ИначеЕсли ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				          Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеОблагаемаяНалогомПлощадь Тогда
					
					Раздел2.П000020009003_КодЛьготы = "3022300";
					Раздел2.П000020010003_Числ = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЧислитель;
					Раздел2.П000020010003_Знам = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЗнаменатель;
					Раздел2.П000020016003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка > 0 Тогда
					Раздел2.П000020012003 = ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка;
					Раздел2.П000020024003_КодЛьготы = "3022500";
				Иначе
					Раздел2.П000020012003 = ВыборкаЗемельныхУчастков.НалоговаяСтавка;
				КонецЕсли;
				
				Раздел2.П000020013003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
				
				Если ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 
					ИЛИ ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога > 0 Тогда
					
					Раздел2.П000020022003_КодЛьготы = "3022200";
					
					Если ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 Тогда
						Раздел2.П000020022003_Процент = ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога;
					Иначе
						Раздел2.П000020023003 = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Контейнер, ПараметрыОтчета.АдресВоВременномХранилище);
	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//	ИДРедакцииОтчета - Строка - Идентификатор формы отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2018(ПоказателиОтчета, ИДРедакцииОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014503", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	Если ИДРедакцииОтчета = "ФормаОтчета2018Кв3" Тогда
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_ПониженнаяСтавка", Истина, Ложь);
	КонецЕсли;
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//	ИДРедакцииОтчета - Строка - Идентификатор формы отчета.
//
Процедура ЗаполнитьОтчетЗемельныйНалогФормаОтчета2018(ПараметрыОтчета, Контейнер, ИДРедакцииОтчета) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	
	КодНалоговогоОргана = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана),
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП = ПараметрыОтчета.КПП;
	
	НалоговыйОрган = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",         ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета", НачалоДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НалоговыйОрган",      НалоговыйОрган);
	
	// СуммаНалогаКУплате не уменьшена на сумму освобождения, поэтому при расчете СуммаИсчисленнаяКУплате вычитаем сумму освобождения.
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетЗемельногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	РасчетЗемельногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	РасчетЗемельногоНалога.КоличествоМесяцевИспользования КАК КоличествоМесяцевИспользования,
	|	РасчетЗемельногоНалога.КодКатегорииЗемель КАК КодКатегорииЗемель,
	|	РасчетЗемельногоНалога.КадастровыйНомер КАК КадастровыйНомер,
	|	РасчетЗемельногоНалога.КБК КАК КБК,
	|	РасчетЗемельногоНалога.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	РасчетЗемельногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетЗемельногоНалога.ПериодСтроительства КАК ПериодСтроительства,
	|	РасчетЗемельногоНалога.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе КАК НалоговаяЛьготаПоНалоговойБазе,
	|	РасчетЗемельногоНалога.КоличествоМесяцевПримененияЛьготы КАК КоличествоМесяцевПримененияЛьготы,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395 КАК КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	РасчетЗемельногоНалога.ДоляНеоблагаемойПлощадиЧислитель КАК ДоляНеоблагаемойПлощадиЧислитель,
	|	РасчетЗемельногоНалога.ДоляНеоблагаемойПлощадиЗнаменатель КАК ДоляНеоблагаемойПлощадиЗнаменатель,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391 КАК КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.НеОблагаемаяНалогомСумма КАК НеОблагаемаяНалогомСумма,
	|	РасчетЗемельногоНалога.СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка,
	|	РасчетЗемельногоНалога.ПроцентУменьшенияСуммыНалога КАК ПроцентУменьшенияСуммыНалога,
	|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога КАК СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
	|	РасчетЗемельногоНалога.СуммаОсвобожденияОтУплатыНалога КАК СуммаОсвобожденияОтУплатыНалога,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	РасчетЗемельногоНалога.СуммаНалогаКУплате + РасчетЗемельногоНалога.СуммаАвансовыхПлатежей1Кв + РасчетЗемельногоНалога.СуммаАвансовыхПлатежей2Кв 
	|	+ РасчетЗемельногоНалога.СуммаАвансовыхПлатежей3Кв - РасчетЗемельногоНалога.СуммаОсвобожденияОтУплатыНалога КАК СуммаИсчисленнаяКУплате
	|ИЗ
	|	РегистрСведений.РасчетЗемельногоНалогаДо2020 КАК РасчетЗемельногоНалога
	|ГДЕ
	|	РасчетЗемельногоНалога.Организация = &Организация
	|	И РасчетЗемельногоНалога.ПериодРасчета = &ДатаОкончанияОтчета
	|	И РасчетЗемельногоНалога.ИФНС = &НалоговыйОрган
	|ИТОГИ
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв),
	|	СУММА(СуммаИсчисленнаяКУплате)
	|ПО
	|	КБК,
	|	КодПоОКТМО";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Проверьте данные о регистрации земельных участков %1
			| и выполнение регламентной операции Расчет земельного налога за %2';
			|en = 'Check data on land plot registration %1
			| and the Land value tax calculation period-end operation execution for %2'"),
			ПутьКРегистру, Формат(ПараметрыОтчета.мДатаКонцаПериодаОтчета, "ДФ='MMMM yyyy'")));
		Возврат;
		
	КонецЕсли;
	
	Раздел2 = Контейнер.Раздел2.Строки[0].Данные;
	Для Каждого Показатель Из Раздел2 Цикл
		Раздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел2.Строки.Количество() > 1 Цикл
		Контейнер.Раздел2.Строки.Удалить(1);
	КонецЦикла;
	
	Раздел1 = Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки[0].Данные;
	Для Каждого Показатель Из Раздел1 Цикл
		Раздел1[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки.Количество() > 1 Цикл
		Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки.Удалить(1);
	КонецЦикла;
	
	ВыборкаЗемельныхУчастковКБК = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйБлокРаздела1 = Истина;
	КоличествоРаздел2  = 0;
	
	ПрименяетсяОсвобождениеОтНалога = Ложь;
	Если НалоговыйУчет.ДеятельностьОтнесенаКПострадавшимОтКоронавируса(Организация) Тогда
		ПериодОсвобожденияОтНалогов = НалоговыйУчет.ПериодОсвобожденияОтНалоговПострадавшимОтКоронавируса();
		ПрименяетсяОсвобождениеОтНалога = (Год(ПериодОсвобожденияОтНалогов.Конец) = Год(мДатаКонцаПериодаОтчета));
	КонецЕсли;	
	
	// В 2020 году для некоторых НКО предусмотрены особые коды льгот
	ЭтоНекоммерческаяОрганизация = Ложь;
	
	Пока ВыборкаЗемельныхУчастковКБК.Следующий() Цикл
		
		ВыборкаЗемельныхУчастковОКАТО = ВыборкаЗемельныхУчастковКБК.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаЗемельныхУчастковОКАТО.Следующий() Цикл
			
			Если ВыборкаЗемельныхУчастковОКАТО.КодПоОКТМО = "" Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В документе ""Параметры начисления земельного налога"" по КБК %1 не заполнен код ОКТМО.
					| Укажите код ОКТМО и произведите расчет земельного налога заново.';
					|en = 'RNCMT code is not specified in the ""Financial details of land value tax charge"" document by BCC %1.
					| Specify RNCMT code and calculate the land value tax again.'"),
					ВыборкаЗемельныхУчастковКБК.КБК));
			КонецЕсли;
			
			Если Не ПервыйБлокРаздела1 Тогда
				
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из Раздел1 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				НовыйБлокРаздела1 = Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки.Добавить();
				НовыйБлокРаздела1.Данные = СтруктураНовойТаблицы;
				НовыйБлокРаздела1.ДанныеМногострочныхЧастей = Новый Структура;
				
				Раздел1 = НовыйБлокРаздела1.Данные;
				
			КонецЕсли;
			
			ПервыйБлокРаздела1 = Ложь;
			
			Раздел1.П000010001003 = ВыборкаЗемельныхУчастковОКАТО.КБК;
			Раздел1.П000010002003 = ВыборкаЗемельныхУчастковОКАТО.КодПоОКТМО;
			Раздел1.П000010002103 = ВыборкаЗемельныхУчастковОКАТО.СуммаИсчисленнаяКУплате;
			Раздел1.П000010002303 = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей1Кв;
			Раздел1.П000010002503 = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей2Кв;
			Раздел1.П000010002703 = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей3Кв;
			
			ВыборкаЗемельныхУчастков = ВыборкаЗемельныхУчастковОКАТО.Выбрать();
			Пока ВыборкаЗемельныхУчастков.Следующий() Цикл
				
				КоличествоРаздел2 = КоличествоРаздел2 + 1;
				Если КоличествоРаздел2 > 1 Тогда
					
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из Раздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					НоваяСтраницаРаздела2 = Контейнер.Раздел2.Строки.Добавить();
					
					НоваяСтраницаРаздела2.Данные = СтруктураНовойТаблицы;
					НоваяСтраницаРаздела2.ДанныеМногострочныхЧастей = Новый Структура;
					
					Раздел2 = НоваяСтраницаРаздела2.Данные;
					
				КонецЕсли;
				
				Раздел2.П000020000100 = ВыборкаЗемельныхУчастков.КадастровыйНомер;
				Раздел2.П000020001003 = ВыборкаЗемельныхУчастков.КБК;
				Раздел2.П000020002003 = ВыборкаЗемельныхУчастков.КодПоОКТМО;
				Раздел2.П000020003003 = ВыборкаЗемельныхУчастков.КодКатегорииЗемель;
				Раздел2.П000020004003 = ВыборкаЗемельныхУчастков.ПериодСтроительства;
				Раздел2.П000020005003 = ВыборкаЗемельныхУчастков.КадастроваяСтоимость;
				Раздел2.П000020006003_Числ = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель;
				Раздел2.П000020006003_Знам = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				     Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияПоСтатье395 Тогда
					
					Раздел2.П000020020003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395;
					Раздел2.П000020016003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				ИначеЕсли ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				          Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияМестное Тогда
					
					Раздел2.П000020018003_КодЛьготы = "3022400";
					Раздел2.П000020016003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				ИначеЕсли ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				          Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.УменьшениеНалоговойБазы Тогда
					
					Раздел2.П000020007003_КодЛьготы = "3022100";
					Раздел2.П000020008003 = ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма;
					
				ИначеЕсли ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				          Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеОблагаемаяНалогомПлощадь Тогда
					
					Раздел2.П000020009003_КодЛьготы = "3022300";
					Раздел2.П000020010003_Числ = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЧислитель;
					Раздел2.П000020010003_Знам = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЗнаменатель;
					Раздел2.П000020016003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Раздел2.П000020012003 = ВыборкаЗемельныхУчастков.НалоговаяСтавка;
				
				Если ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка > 0 Тогда
					Если ИДРедакцииОтчета = "ФормаОтчета2018Кв1" Тогда
						Раздел2.П000020012003 = ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка;
					ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2018Кв3" Тогда
						Раздел2.П000020024003_ПониженнаяСтавка = ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка;
					КонецЕсли;
					Раздел2.П000020024003_КодЛьготы = "3022500";
				КонецЕсли;
				
				Раздел2.П000020013003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
				
				Если ВыборкаЗемельныхУчастков.КоличествоМесяцевИспользования <> ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения
				   И ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения <> 0 Тогда
					Раздел2.П000020014503 = Окр(ВыборкаЗемельныхУчастков.КоличествоМесяцевИспользования / ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения, 4);
				КонецЕсли;
				
				// При освобождении организации от уплаты налога за 2-й квартал 2020 года необходимо использовать особые коды льгот
				// ( см. письмо ФНС от 10.06.2020 № БС-4-21/9576@ - далее Письмо)				
				Если ПрименяетсяОсвобождениеОтНалога И 
					(ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 
					ИЛИ ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога > 0) Тогда
					// Абз. 2 п.2 Письма: "Если организация освобождается от [уплаты налога за 2-й квартал 2020 года] ... 
					// и [для организации]... нормативным правовым актом представительного органа муниципального образования ... 
					// установлена налоговая льгота в виде уменьшения суммы земельного налога, подлежащей уплате в бюджет, то
					// в первой части показателя по строке с кодом 220 ... указывается [код]..."
					Если ЭтоНекоммерческаяОрганизация Тогда
						// ... 3021506 (код льготы для социально-ориентированных НКО - на данный момент опубликован только реестр таких НКО)
						Раздел2.П000020022003_КодЛьготы = "3021506";
					Иначе
						// ... 3021505 (если организация не является НКО)
						Раздел2.П000020022003_КодЛьготы = "3021505";
					КонецЕсли;	
					// "...по строке с кодом 230 ... указывается сумма налоговой льготы в рублях (в том числе с учетом суммы авансового платежа
					// за период владения объектом налогообложения с 1 апреля по 30 июня 2020 года)"
					Раздел2.П000020023003 = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога + ВыборкаЗемельныхУчастков.СуммаОсвобожденияОтУплатыНалога;
				ИначеЕсли ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 
					ИЛИ ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога > 0 Тогда
					Раздел2.П000020022003_КодЛьготы = "3022200";
					Если ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 Тогда
						Раздел2.П000020022003_Процент = ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога;
					Иначе
						Раздел2.П000020023003 = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога;
					КонецЕсли;
				ИначеЕсли ПрименяетсяОсвобождениеОтНалога Тогда
					// Абз. 1 п.2 Письма: "Если организация освобождается от [уплаты налога за 2-й квартал 2020 года] ..., то
					// в первой части показателя по строке с кодом 220 ... указывается [код]..."
					Если ЭтоНекоммерческаяОрганизация Тогда
						// ... 3021502 (код льготы для социально-ориентированных НКО - на данный момент опубликован только реестр таких НКО)
						Раздел2.П000020022003_КодЛьготы = "3021502";
					Иначе
						// ... 3021501 (если организация не является НКО)
						Раздел2.П000020022003_КодЛьготы = "3021501";
					КонецЕсли;	
					// "...по строке с кодом 230 ... указывается сумма налоговой льготы в рублях"
					Раздел2.П000020023003 = ВыборкаЗемельныхУчастков.СуммаОсвобожденияОтУплатыНалога;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Контейнер, ПараметрыОтчета.АдресВоВременномХранилище);
	
КонецПроцедуры

#КонецОбласти

#Область ТранспортныйНалог

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2007Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2007Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана =  ПараметрыОтчета.КодНалоговогоОргана;
	КПП                 = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	МассивНО = Новый Массив;
	Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	ИначеЕсли КодНалоговогоОргана = Организация.РегистрацияВНалоговомОргане.Код Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	Иначе
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", МассивНО);
	
	ТекстОбъединяющегоЗапроса = "";
	
	Период = мДатаНачалаПериодаОтчета;
	
	Пока Период <= мДатаКонцаПериодаОтчета Цикл
		
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ВключатьВНалоговуюБазу) КАК ВключатьВНалоговуюБазу
		|ПОМЕСТИТЬ ВТ_СписокОсновныхСредств
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ВключатьВНалоговуюБазу
		|				ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ВключатьВНалоговуюБазу
		|		ИЗ
		|			РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
		|					КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1), МЕСЯЦ), 
		|					ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|						И Организация = &Организация) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		ГДЕ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
		|					КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), 
		|					ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|						И Организация = &Организация) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		ГДЕ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
		|					КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), 
		|					ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|						И Организация = &Организация 
		|                       И ВключатьВНалоговуюБазу = ИСТИНА 
		|						И Период >= НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		ГДЕ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		
		|	СГРУППИРОВАТЬ ПО
		|		ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство
		|ИНДЕКСИРОВАТЬ ПО
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК КоличествоМесяцев,
		|	СписокОсновныхСредств.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.Марка КАК Марка,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ИдентификационныйНомер КАК ИдентификационныйНомер,
		|	ВЫБОР КОГДА ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
		|		ТОГДА ЕстьNULL(ПараметрыНачисленияТранспортногоНалогаСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
		|		ИНАЧЕ ПараметрыНачисленияТранспортногоНалогаСрезПоследних.КодПоОКАТО
		|	КОНЕЦ КодПоОКАТО,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговаяБаза КАК НалоговаяБаза,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговаяСтавка КАК НалоговаяСтавка,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговаяЛьгота КАК НалоговаяЛьгота,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ПроцентУменьшения КАК ПроцентУменьшения,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.СуммаУменьшения КАК СуммаУменьшения,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.Период КАК ДатаРегистрации
		|ПОМЕСТИТЬ
		|	ПараметрыНачисленияТранспортногоНалога" + Формат(Период, "ДФ=MM") + "
		|ИЗ
		|	ВТ_СписокОсновныхСредств КАК СписокОсновныхСредств
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
		|				КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), 
		|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|					И ВключатьВНалоговуюБазу
		|					И Организация = &Организация) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		ПО СписокОсновныхСредств.ОсновноеСредство = ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство
		|ГДЕ
		|	СписокОсновныхСредств.ВключатьВНалоговуюБазу > 0
		|	И ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|";
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ ПараметрыНачисленияТранспортногоНалога
									  |",
									  "")
								  + "ИЗ ПараметрыНачисленияТранспортногоНалога" + Формат(Период, "ДФ=MM") + "
									|";
									
		Запрос.Текст = "УНИЧТОЖИТЬ ВТ_СписокОсновныхСредств";
		Запрос.Выполнить();
		Период = ДобавитьМесяц(Период, 1);	
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ПараметрыНачисленияТранспортногоНалога.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыНачисленияТранспортногоНалога.РегистрационныйЗнак,
	|	ПараметрыНачисленияТранспортногоНалога.Марка,
	|	ПараметрыНачисленияТранспортногоНалога.ИдентификационныйНомер,
	|	ПараметрыНачисленияТранспортногоНалога.КодПоОКАТО КАК КодПоОКАТО,
	|	ПараметрыНачисленияТранспортногоНалога.КодВидаТранспортногоСредства,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяБаза,
	|	ПараметрыНачисленияТранспортногоНалога.ЕдиницаИзмеренияНалоговойБазы,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяЛьгота,
	|	ПараметрыНачисленияТранспортногоНалога.КодНалоговойЛьготы,
	|	ПараметрыНачисленияТранспортногоНалога.ЛьготнаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.ПроцентУменьшения,
	|	ПараметрыНачисленияТранспортногоНалога.СуммаУменьшения,
	|	МАКСИМУМ(ПараметрыНачисленияТранспортногоНалога.ДатаРегистрации) КАК ДатаРегистрации
	|ИЗ
	|    ПараметрыНачисленияТранспортногоНалога
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство,
	|	ПараметрыНачисленияТранспортногоНалога.РегистрационныйЗнак,
	|	ПараметрыНачисленияТранспортногоНалога.Марка,
	|	ПараметрыНачисленияТранспортногоНалога.ИдентификационныйНомер,
	|	ПараметрыНачисленияТранспортногоНалога.КодПоОКАТО,
	|	ПараметрыНачисленияТранспортногоНалога.КодВидаТранспортногоСредства,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяБаза,
	|	ПараметрыНачисленияТранспортногоНалога.ЕдиницаИзмеренияНалоговойБазы,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяЛьгота,
	|	ПараметрыНачисленияТранспортногоНалога.КодНалоговойЛьготы,
	|	ПараметрыНачисленияТранспортногоНалога.ЛьготнаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.ПроцентУменьшения,
	|	ПараметрыНачисленияТранспортногоНалога.СуммаУменьшения
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство)
	|ПО
	|	КодПоОКАТО";
	ВыборкаОКАТО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел2[0].ДанныеДопСтрок[0].Значение.Количество()>1 Цикл
		Раздел2[0].ДанныеДопСтрок[0].Значение.Удалить(1);
	КонецЦикла;
	
	Если ВыборкаОКАТО.Количество() = 0 Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3';
			|en = 'No data about vehicle registration on %1 for %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;		
		
	КонецЕсли;
	
	ПерваяСтраница = Истина;
	Раздел2Текущий = Раздел2[0];
	
	ДанныеФормыЭлементКоллекции = Раздел2[0].ДанныеДопСтрок[0].Значение[0];
	
	Пока ВыборкаОКАТО.Следующий() Цикл
			
		Если Не ПерваяСтраница Тогда
			
			Раздел2.Добавить().Данные = Новый СписокЗначений();
			НомерТекущейСтраницы = Раздел2.Количество()-1;
			
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
				Если Неопределено = Показатель.Значение Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел2[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел2Текущий = Раздел2[НомерТекущейСтраницы];
			СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок = Новый СписокЗначений();
			Контейнер.Раздел2_ДанныеДопСтрок.Очистить();
			Контейнер.Раздел2_ХранилищеДанныхДопСтрок.Добавить();
			ИндексПоследнего = Контейнер.Раздел2_ХранилищеДанныхДопСтрок.Количество()-1;
			Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок.Добавить(Контейнер.Раздел2_ХранилищеДанныхДопСтрок[ИндексПоследнего].Таблица);
			Раздел2Текущий.ДанныеДопСтрок[0].Значение.Добавить();
			Раздел2Текущий.ДанныеДопСтрок[0].Представление = "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела";
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
	

		// Вставим код ОКАТО в раздел 2, для которого будем выводить всю информацию о ТС.
		СтраницаРаздел2.ОКАТОРаздел2 = ВыборкаОКАТО.КодПоОКАТО;

		// Отберем все объекты с необходимым кодом ОКАТО
		ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО = 1;
		
		ВыборкаТранспортныхСредств = ВыборкаОКАТО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл
			
			Если ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО > 11 Тогда 
				Если Не ПерваяСтраница Тогда
					
					// Больше 11 строк на страницу не помещается
					Раздел2.Добавить().Данные = Новый СписокЗначений();
					НомерТекущейСтраницы = Раздел2.Количество()-1;
					
					СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
					Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
						Если Неопределено = Показатель.Значение Тогда 
							СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
						Иначе 
							СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
						КонецЕсли;
					КонецЦикла;
					
					Раздел2[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
					Раздел2Текущий = Раздел2[НомерТекущейСтраницы];
					СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
					
					Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок = Новый СписокЗначений();
					Контейнер.Раздел2_ДанныеДопСтрок.Очистить();
					Контейнер.Раздел2_ХранилищеДанныхДопСтрок.Добавить();
					ИндексПоследнего = Контейнер.Раздел2_ХранилищеДанныхДопСтрок.Количество()-1;
					Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок.Добавить(Контейнер.Раздел2_ХранилищеДанныхДопСтрок[ИндексПоследнего].Таблица);
					Раздел2Текущий.ДанныеДопСтрок[0].Значение.Добавить();
					Раздел2Текущий.ДанныеДопСтрок[0].Представление = "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела";
					
					СтраницаРаздел2.ОКАТОРаздел2 = ВыборкаОКАТО.КодПоОКАТО;
					
				Иначе
					// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
					ПерваяСтраница = Ложь;
				КонецЕсли;
				
				ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО = 1;
			КонецЕсли;

			Если ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО > 1 Тогда 
				
				Раздел2Текущий.ДанныеДопСтрок[0].Значение.Добавить();
				
			КонецЕсли;
			
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002002 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;

			// Идентификационный номер ТС
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;

			// Марка ТС
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002004 = ВыборкаТранспортныхСредств.Марка;

			// Регистрационный знак
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002005 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;

			// Налоговая база
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002006 = ВыборкаТранспортныхСредств.НалоговаяБаза;

			// Ед. изм.
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002007 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			
			// Коэффициент
			Коэффициент = Окр(ВыборкаТранспортныхСредств.КоличествоМесяцев
							  / (Месяц(мДатаКонцаПериодаОтчета) - Месяц(мДатаНачалаПериодаОтчета) + 1), 2);	
							  
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002009 = Коэффициент;
			
			// Ставка
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002010 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			
			Если НЕ (ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется) Тогда
				
				// Код налоговой льготы
				Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002012 = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				
				Если ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения Тогда
					
					СуммаЛьготы = ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.НалоговаяСтавка;
					
				ИначеЕсли ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки Тогда
					
					СуммаЛьготы = (ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.НалоговаяСтавка)
								- (ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.ЛьготнаяСтавка);
					
				ИначеЕсли ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах Тогда
					
					СуммаЛьготы = (ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.НалоговаяСтавка)
								* ВыборкаТранспортныхСредств.ПроцентУменьшения / 100;
					
				ИначеЕсли ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму Тогда
					
					СуммаЛьготы = ВыборкаТранспортныхСредств.СуммаУменьшения;
					
				КонецЕсли;
				
				// Сумма налоговой льготы
				Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002013 = СуммаЛьготы;
				
			КонецЕсли;
			
			ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО = ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО + 1;

		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2012Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_КодЛьготы", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2012Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана =  ПараметрыОтчета.КодНалоговогоОргана;
	КПП                 = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	МассивНО = Новый Массив;
	Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	ИначеЕсли КодНалоговогоОргана = Организация.РегистрацияВНалоговомОргане.Код Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	Иначе
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", МассивНО);
	
	ТекстОбъединяющегоЗапроса = "";
	
	Период = мДатаНачалаПериодаОтчета;
	
	Пока Период <= мДатаКонцаПериодаОтчета Цикл
		
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ВключатьВНалоговуюБазу) КАК ВключатьВНалоговуюБазу
		|ПОМЕСТИТЬ ВТ_СписокОсновныхСредств
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|		ВЫБОР
		|			КОГДА ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ВключатьВНалоговуюБазу
		|				ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ВключатьВНалоговуюБазу
		|		ИЗ
		|			РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
		|					КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1), МЕСЯЦ), 
		|					ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|						И Организация = &Организация) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		ГДЕ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
		|					КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), 
		|					ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|						И Организация = &Организация) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		ГДЕ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
		|					КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), 
		|					ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|						И Организация = &Организация 
		|						И ВключатьВНалоговуюБазу 
		|						И Период >= НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		ГДЕ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		
		|	СГРУППИРОВАТЬ ПО
		|		ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство
		|ИНДЕКСИРОВАТЬ ПО
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК КоличествоМесяцев,
		|	СписокОсновныхСредств.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.Марка КАК Марка,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ИдентификационныйНомер КАК ИдентификационныйНомер,
		|	ВЫБОР КОГДА ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
		|		ТОГДА ЕстьNULL(ПараметрыНачисленияТранспортногоНалогаСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
		|		ИНАЧЕ ПараметрыНачисленияТранспортногоНалогаСрезПоследних.КодПоОКАТО
		|	КОНЕЦ КодПоОКАТО,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговаяБаза КАК НалоговаяБаза,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговаяСтавка КАК НалоговаяСтавка,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговаяЛьгота КАК НалоговаяЛьгота,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ПроцентУменьшения КАК ПроцентУменьшения,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.СуммаУменьшения КАК СуммаУменьшения,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ЭкологическийКласс КАК ЭкологическийКласс,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.Период КАК ДатаРегистрации
		|ПОМЕСТИТЬ
		|	ПараметрыНачисленияТранспортногоНалога" + Формат(Период, "ДФ=MM") + "
		|ИЗ
		|	ВТ_СписокОсновныхСредств КАК СписокОсновныхСредств
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
		|				КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), 
		|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|					И ВключатьВНалоговуюБазу 
		|					И Организация = &Организация) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		ПО СписокОсновныхСредств.ОсновноеСредство = ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство
		|ГДЕ
		|	СписокОсновныхСредств.ВключатьВНалоговуюБазу > 0
		|	И ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|";
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ ПараметрыНачисленияТранспортногоНалога
									  |",
									  "")
								  + "ИЗ ПараметрыНачисленияТранспортногоНалога" + Формат(Период, "ДФ=MM") + "
									|";
									
		Запрос.Текст = "УНИЧТОЖИТЬ ВТ_СписокОсновныхСредств";
		Запрос.Выполнить();
		Период = ДобавитьМесяц(Период, 1);	
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ПараметрыНачисленияТранспортногоНалога.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыНачисленияТранспортногоНалога.РегистрационныйЗнак,
	|	ПараметрыНачисленияТранспортногоНалога.Марка,
	|	ПараметрыНачисленияТранспортногоНалога.ИдентификационныйНомер,
	|	ПараметрыНачисленияТранспортногоНалога.КодПоОКАТО КАК КодПоОКАТО,
	|	ПараметрыНачисленияТранспортногоНалога.КодВидаТранспортногоСредства,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяБаза,
	|	ПараметрыНачисленияТранспортногоНалога.ЕдиницаИзмеренияНалоговойБазы,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяЛьгота,
	|	ПараметрыНачисленияТранспортногоНалога.КодНалоговойЛьготы,
	|	ПараметрыНачисленияТранспортногоНалога.РегиональныйКодЛьготы,
	|	ПараметрыНачисленияТранспортногоНалога.ЛьготнаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.ПроцентУменьшения,
	|	ПараметрыНачисленияТранспортногоНалога.СуммаУменьшения,
	|	ПараметрыНачисленияТранспортногоНалога.ЭкологическийКласс,
	|	МАКСИМУМ(ПараметрыНачисленияТранспортногоНалога.ДатаРегистрации) КАК ДатаРегистрации
	|ИЗ
	|    ПараметрыНачисленияТранспортногоНалога
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство,
	|	ПараметрыНачисленияТранспортногоНалога.РегистрационныйЗнак,
	|	ПараметрыНачисленияТранспортногоНалога.Марка,
	|	ПараметрыНачисленияТранспортногоНалога.ИдентификационныйНомер,
	|	ПараметрыНачисленияТранспортногоНалога.КодПоОКАТО,
	|	ПараметрыНачисленияТранспортногоНалога.КодВидаТранспортногоСредства,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяБаза,
	|	ПараметрыНачисленияТранспортногоНалога.ЕдиницаИзмеренияНалоговойБазы,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяЛьгота,
	|	ПараметрыНачисленияТранспортногоНалога.КодНалоговойЛьготы,
	|	ПараметрыНачисленияТранспортногоНалога.РегиональныйКодЛьготы,
	|	ПараметрыНачисленияТранспортногоНалога.ЛьготнаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.ПроцентУменьшения,
	|	ПараметрыНачисленияТранспортногоНалога.СуммаУменьшения,
	|	ПараметрыНачисленияТранспортногоНалога.ЭкологическийКласс
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство)
	|ПО
	|	КодПоОКАТО";
	
	ВыборкаОКАТО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Если ВыборкаОКАТО.Количество() = 0 Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3';
			|en = 'No data about vehicle registration on %1 for %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;		
		
	КонецЕсли;
	
	ПерваяСтраница = Истина;
	Раздел2Текущий = Раздел2[0];
	
	Пока ВыборкаОКАТО.Следующий() Цикл
		ВыборкаТранспортныхСредств = ВыборкаОКАТО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл
			Если Не ПерваяСтраница Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницы = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницы];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			ДатаВыпуска = ВыборкаТранспортныхСредств.ОсновноеСредство.ДатаВыпуска;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКАТО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020010003 = ?(ЗначениеЗаполнено(ДатаВыпуска),Год(мДатаКонцаПериодаОтчета) - Год(ДатаВыпуска),"");
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.КоличествоМесяцев;
			СтраницаРаздел2.П000020013003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			
			НалоговаяЛьгота = ВыборкаТранспортныхСредств.НалоговаяЛьгота;
			
			Если НалоговаяЛьгота <> Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется Тогда 
				СтраницаРаздел2.П000020015003 = ВыборкаТранспортныхСредств.КоличествоМесяцев;
			КонецЕсли;
			
			СтраницаРаздел2.П000020017003_КодЛьготы = "";
			СтраницаРаздел2.П000020017003_Основание = "";			
			СтраницаРаздел2.П000020018003 = 0;
			СтраницаРаздел2.П000020019003_КодЛьготы = "";
			СтраницаРаздел2.П000020019003_Основание = "";
			СтраницаРаздел2.П000020020003 = 0;
			СтраницаРаздел2.П000020021003_КодЛьготы = "";
			СтраницаРаздел2.П000020021003_Основание = "";
			СтраницаРаздел2.П000020022003 = 0;
						
			Если НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах Тогда 
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
					СуммаЛьготы = ВыборкаТранспортныхСредств.НалоговаяБаза * ВыборкаТранспортныхСредств.НалоговаяСтавка
									* (ВыборкаТранспортныхСредств.КоличествоМесяцев/12)
									* (ВыборкаТранспортныхСредств.ПроцентУменьшения/100);
					СтраницаРаздел2.П000020020003 = СуммаЛьготы;
				КонецЕсли;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму Тогда
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				СуммаЛьготы = ВыборкаТранспортныхСредств.СуммаУменьшения;
				СтраницаРаздел2.П000020020003 = СуммаЛьготы;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения Тогда 
				СтраницаРаздел2.П000020017003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020017003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки Тогда 
				СтраницаРаздел2.П000020021003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020021003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СуммаЛьготы = (ВыборкаТранспортныхСредств.НалоговаяБаза * (ВыборкаТранспортныхСредств.НалоговаяСтавка - ВыборкаТранспортныхСредств.ЛьготнаяСтавка))
									* (ВыборкаТранспортныхСредств.КоличествоМесяцев/12);
					СтраницаРаздел2.П000020022003 = СуммаЛьготы;
				КонецЕсли;
			КонецЕсли;

		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2012Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_3", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_Ставка", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2012Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана =  ПараметрыОтчета.КодНалоговогоОргана;
	КПП                 = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	МассивНО = Новый Массив;
	Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	ИначеЕсли КодНалоговогоОргана = Организация.РегистрацияВНалоговомОргане.Код Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	Иначе
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", МассивНО);
	Запрос.УстановитьПараметр("ДатаПодписи", ПараметрыОтчета.ДатаПодписи);
	
	ТекстОбъединяющегоЗапроса = "";
	
	Период = мДатаНачалаПериодаОтчета;
	
	Пока Период <= мДатаКонцаПериодаОтчета Цикл
		
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ВключатьВНалоговуюБазу) КАК ВключатьВНалоговуюБазу
		|ПОМЕСТИТЬ ВТ_СписокОсновныхСредств
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|		ВЫБОР
		|			КОГДА ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ВключатьВНалоговуюБазу
		|				ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ВключатьВНалоговуюБазу
		|		ИЗ
		|			РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
		|				КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1), МЕСЯЦ), 
		|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|					И Организация = &Организация) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		ГДЕ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
		|					КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), 
		|					ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|						И Организация = &Организация) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		ГДЕ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
		|					КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), 
		|					ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|						И Организация = &Организация 
		|						И ВключатьВНалоговуюБазу 
		|						И Период >= НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		ГДЕ
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		
		|	СГРУППИРОВАТЬ ПО
		|		ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство
		|ИНДЕКСИРОВАТЬ ПО
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК КоличествоМесяцев,
		|	СписокОсновныхСредств.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.Марка КАК Марка,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ИдентификационныйНомер КАК ИдентификационныйНомер,
		|	ВЫБОР КОГДА ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
		|		ТОГДА 
		|			ЕстьNULL(ПараметрыНачисленияТранспортногоНалогаСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
		|		ИНАЧЕ 
		|			ПараметрыНачисленияТранспортногоНалогаСрезПоследних.КодПоОКАТО
		|	КОНЕЦ КодПоОКАТО,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговаяБаза КАК НалоговаяБаза,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговаяСтавка КАК НалоговаяСтавка,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговаяЛьгота КАК НалоговаяЛьгота,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ПроцентУменьшения КАК ПроцентУменьшения,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.СуммаУменьшения КАК СуммаУменьшения,
		|	ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ЭкологическийКласс КАК ЭкологическийКласс
		|ПОМЕСТИТЬ
		|	ПараметрыНачисленияТранспортногоНалога" + Формат(Период, "ДФ=MM") + "
		|ИЗ
		|	ВТ_СписокОсновныхСредств КАК СписокОсновныхСредств
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
		|				КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), 
		|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|					И ВключатьВНалоговуюБазу 
		|					И Организация = &Организация) КАК ПараметрыНачисленияТранспортногоНалогаСрезПоследних
		|		ПО СписокОсновныхСредств.ОсновноеСредство = ПараметрыНачисленияТранспортногоНалогаСрезПоследних.ОсновноеСредство
		|ГДЕ
		|	СписокОсновныхСредств.ВключатьВНалоговуюБазу > 0
		|	И ПараметрыНачисленияТранспортногоНалогаСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|";
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ ПараметрыНачисленияТранспортногоНалога
									  |",
									  "")
								  + "ИЗ ПараметрыНачисленияТранспортногоНалога" + Формат(Период, "ДФ=MM") + "
									|";
									
		Запрос.Текст = "УНИЧТОЖИТЬ ВТ_СписокОсновныхСредств";
		Запрос.Выполнить();
		Период = ДобавитьМесяц(Период, 1);	
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ПараметрыНачисленияТранспортногоНалога.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыНачисленияТранспортногоНалога.РегистрационныйЗнак,
	|	ПараметрыНачисленияТранспортногоНалога.Марка,
	|	ПараметрыНачисленияТранспортногоНалога.ИдентификационныйНомер,
	|	ПараметрыНачисленияТранспортногоНалога.КодПоОКАТО КАК КодПоОКАТО,
	|	ПараметрыНачисленияТранспортногоНалога.КодВидаТранспортногоСредства,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяБаза,
	|	ПараметрыНачисленияТранспортногоНалога.ЕдиницаИзмеренияНалоговойБазы,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяЛьгота,
	|	ПараметрыНачисленияТранспортногоНалога.КодНалоговойЛьготы,
	|	ПараметрыНачисленияТранспортногоНалога.РегиональныйКодЛьготы,
	|	ПараметрыНачисленияТранспортногоНалога.ЛьготнаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.ПроцентУменьшения,
	|	ПараметрыНачисленияТранспортногоНалога.СуммаУменьшения,
	|	ПараметрыНачисленияТранспортногоНалога.ЭкологическийКласс
	|ПОМЕСТИТЬ ВТ_РазличныеЗаписи
	|ИЗ
	|	ПараметрыНачисленияТранспортногоНалога КАК ПараметрыНачисленияТранспортногоНалога
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство,
	|	ПараметрыНачисленияТранспортногоНалога.РегистрационныйЗнак,
	|	ПараметрыНачисленияТранспортногоНалога.Марка,
	|	ПараметрыНачисленияТранспортногоНалога.ИдентификационныйНомер,
	|	ПараметрыНачисленияТранспортногоНалога.КодПоОКАТО,
	|	ПараметрыНачисленияТранспортногоНалога.КодВидаТранспортногоСредства,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяБаза,
	|	ПараметрыНачисленияТранспортногоНалога.ЕдиницаИзмеренияНалоговойБазы,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяЛьгота,
	|	ПараметрыНачисленияТранспортногоНалога.КодНалоговойЛьготы,
	|	ПараметрыНачисленияТранспортногоНалога.РегиональныйКодЛьготы,
	|	ПараметрыНачисленияТранспортногоНалога.ЛьготнаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.ПроцентУменьшения,
	|	ПараметрыНачисленияТранспортногоНалога.СуммаУменьшения,
	|	ПараметрыНачисленияТранспортногоНалога.ЭкологическийКласс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВТ_РазличныеЗаписи.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	ВТ_РазличныеЗаписи.ОсновноеСредство,
	|	ВТ_РазличныеЗаписи.РегистрационныйЗнак,
	|	ВТ_РазличныеЗаписи.Марка,
	|	ВТ_РазличныеЗаписи.ИдентификационныйНомер,
	|	ВТ_РазличныеЗаписи.КодПоОКАТО КАК КодПоОКАТО,
	|	ВТ_РазличныеЗаписи.КодВидаТранспортногоСредства,
	|	ВТ_РазличныеЗаписи.НалоговаяБаза,
	|	ВТ_РазличныеЗаписи.ЕдиницаИзмеренияНалоговойБазы,
	|	ВТ_РазличныеЗаписи.НалоговаяСтавка,
	|	ВТ_РазличныеЗаписи.ЭкологическийКласс,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_РазличныеЗаписи.НалоговаяЛьгота <> ЗНАЧЕНИЕ(Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоЗаписейЛьгот
	|ПОМЕСТИТЬ ВТ_ЗаписиБезУчетаЛьгот
	|ИЗ
	|	ВТ_РазличныеЗаписи КАК ВТ_РазличныеЗаписи
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РазличныеЗаписи.ОсновноеСредство,
	|	ВТ_РазличныеЗаписи.РегистрационныйЗнак,
	|	ВТ_РазличныеЗаписи.Марка,
	|	ВТ_РазличныеЗаписи.ИдентификационныйНомер,
	|	ВТ_РазличныеЗаписи.КодПоОКАТО,
	|	ВТ_РазличныеЗаписи.КодВидаТранспортногоСредства,
	|	ВТ_РазличныеЗаписи.НалоговаяБаза,
	|	ВТ_РазличныеЗаписи.ЕдиницаИзмеренияНалоговойБазы,
	|	ВТ_РазличныеЗаписи.НалоговаяСтавка,
	|	ВТ_РазличныеЗаписи.ЭкологическийКласс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПараметрыНачисленияТранспортногоНалога.КоличествоМесяцев) КАК КоличествоМесяцевЛьготы,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ЗаписиБезУчетаЛьгот.КоличествоМесяцев, 0) = 0
	|			ТОГДА СУММА(ПараметрыНачисленияТранспортногоНалога.КоличествоМесяцев)
	|		ИНАЧЕ ВТ_ЗаписиБезУчетаЛьгот.КоличествоМесяцев
	|	КОНЕЦ КАК КоличествоМесяцевВладения,
	|	ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыНачисленияТранспортногоНалога.РегистрационныйЗнак,
	|	ПараметрыНачисленияТранспортногоНалога.Марка,
	|	ПараметрыНачисленияТранспортногоНалога.ИдентификационныйНомер,
	|	ПараметрыНачисленияТранспортногоНалога.КодПоОКАТО КАК КодПоОКАТО,
	|	ПараметрыНачисленияТранспортногоНалога.КодВидаТранспортногоСредства,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяБаза,
	|	ПараметрыНачисленияТранспортногоНалога.ЕдиницаИзмеренияНалоговойБазы,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяЛьгота,
	|	ПараметрыНачисленияТранспортногоНалога.КодНалоговойЛьготы,
	|	ПараметрыНачисленияТранспортногоНалога.РегиональныйКодЛьготы,
	|	ПараметрыНачисленияТранспортногоНалога.ЛьготнаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.ПроцентУменьшения,
	|	ПараметрыНачисленияТранспортногоНалога.СуммаУменьшения,
	|	ПараметрыНачисленияТранспортногоНалога.ЭкологическийКласс,
	|	ЕСТЬNULL(ВТ_ЗаписиБезУчетаЛьгот.КоличествоЗаписейЛьгот, 0) КАК КоличествоЗаписейЛьгот
	|ИЗ
	|	ПараметрыНачисленияТранспортногоНалога КАК ПараметрыНачисленияТранспортногоНалога
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаписиБезУчетаЛьгот КАК ВТ_ЗаписиБезУчетаЛьгот
	|		ПО ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство = ВТ_ЗаписиБезУчетаЛьгот.ОсновноеСредство
	|			И ПараметрыНачисленияТранспортногоНалога.РегистрационныйЗнак = ВТ_ЗаписиБезУчетаЛьгот.РегистрационныйЗнак
	|			И ПараметрыНачисленияТранспортногоНалога.Марка = ВТ_ЗаписиБезУчетаЛьгот.Марка
	|			И ПараметрыНачисленияТранспортногоНалога.ИдентификационныйНомер = ВТ_ЗаписиБезУчетаЛьгот.ИдентификационныйНомер
	|			И ПараметрыНачисленияТранспортногоНалога.КодПоОКАТО = ВТ_ЗаписиБезУчетаЛьгот.КодПоОКАТО
	|			И ПараметрыНачисленияТранспортногоНалога.КодВидаТранспортногоСредства = ВТ_ЗаписиБезУчетаЛьгот.КодВидаТранспортногоСредства
	|			И ПараметрыНачисленияТранспортногоНалога.НалоговаяБаза = ВТ_ЗаписиБезУчетаЛьгот.НалоговаяБаза
	|			И ПараметрыНачисленияТранспортногоНалога.ЕдиницаИзмеренияНалоговойБазы = ВТ_ЗаписиБезУчетаЛьгот.ЕдиницаИзмеренияНалоговойБазы
	|			И ПараметрыНачисленияТранспортногоНалога.НалоговаяСтавка = ВТ_ЗаписиБезУчетаЛьгот.НалоговаяСтавка
	|			И ПараметрыНачисленияТранспортногоНалога.ЭкологическийКласс = ВТ_ЗаписиБезУчетаЛьгот.ЭкологическийКласс
	|			И (ВТ_ЗаписиБезУчетаЛьгот.КоличествоЗаписейЛьгот = 1)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство,
	|	ПараметрыНачисленияТранспортногоНалога.РегистрационныйЗнак,
	|	ПараметрыНачисленияТранспортногоНалога.Марка,
	|	ПараметрыНачисленияТранспортногоНалога.ИдентификационныйНомер,
	|	ПараметрыНачисленияТранспортногоНалога.КодПоОКАТО,
	|	ПараметрыНачисленияТранспортногоНалога.КодВидаТранспортногоСредства,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяБаза,
	|	ПараметрыНачисленияТранспортногоНалога.ЕдиницаИзмеренияНалоговойБазы,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.НалоговаяЛьгота,
	|	ПараметрыНачисленияТранспортногоНалога.КодНалоговойЛьготы,
	|	ПараметрыНачисленияТранспортногоНалога.РегиональныйКодЛьготы,
	|	ПараметрыНачисленияТранспортногоНалога.ЛьготнаяСтавка,
	|	ПараметрыНачисленияТранспортногоНалога.ПроцентУменьшения,
	|	ПараметрыНачисленияТранспортногоНалога.СуммаУменьшения,
	|	ПараметрыНачисленияТранспортногоНалога.ЭкологическийКласс,
	|	ВТ_ЗаписиБезУчетаЛьгот.КоличествоМесяцев,
	|	ЕСТЬNULL(ВТ_ЗаписиБезУчетаЛьгот.КоличествоЗаписейЛьгот, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодПоОКАТО,
	|	ОсновноеСредство
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство)
	|ПО
	|	КодПоОКАТО";
	
	ВыборкаОКАТО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;

	ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
	
	Если ВыборкаОКАТО.Количество() = 0 Тогда
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3';
			|en = 'No data about vehicle registration on %1 for %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;		
		
	КонецЕсли;
	
	ПерваяСтраница = Истина;
	Раздел2Текущий = Раздел2[0];
	
	Пока ВыборкаОКАТО.Следующий() Цикл
		ВыборкаТранспортныхСредств = ВыборкаОКАТО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл

			Если ВыборкаТранспортныхСредств.КоличествоЗаписейЛьгот = 1
				И (ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется) Тогда
				// В декларацию выводится та строка, в которой содержится информация о льготе.
				Продолжить;
			КонецЕсли;
		
			Если Не ПерваяСтраница Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницы = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницы];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКАТО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.КоличествоМесяцевВладения;
			СтраницаРаздел2.П000020013003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			
			НалоговаяЛьгота = ВыборкаТранспортныхСредств.НалоговаяЛьгота;
			
			Если НалоговаяЛьгота <> Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется Тогда 
				СтраницаРаздел2.П000020015003 = ВыборкаТранспортныхСредств.КоличествоМесяцевЛьготы;
			КонецЕсли;
			
			СтраницаРаздел2.П000020017003_КодЛьготы = "";
			СтраницаРаздел2.П000020017003_Основание = "";			
			СтраницаРаздел2.П000020018003 = 0;
			СтраницаРаздел2.П000020019003_КодЛьготы = "";
			СтраницаРаздел2.П000020019003_Основание = "";
			СтраницаРаздел2.П000020019003_Процент 	= 0;
			СтраницаРаздел2.П000020020003 = 0;
			СтраницаРаздел2.П000020021003_КодЛьготы = "";
			СтраницаРаздел2.П000020021003_Основание = "";
			СтраницаРаздел2.П000020021003_Ставка 	= 0;
			СтраницаРаздел2.П000020022003 = 0;
						
			Если НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах Тогда 
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
					СтраницаРаздел2.П000020019003_Процент = ВыборкаТранспортныхСредств.ПроцентУменьшения;
				КонецЕсли;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму Тогда
				СуммаЛьготы = ВыборкаТранспортныхСредств.СуммаУменьшения;
				СтраницаРаздел2.П000020015003 = 0;
				ТекстСообщения = НСтр("ru = 'Для основного средства ""%1"" (регистрационный знак ""%2"") установлена 
					|налоговая льгота в виде уменьшения суммы налога на %3 руб., которая не применяется с 2012 года.
					|Проверьте и при необходимости измените параметры расчета налога %4.';
					|en = 'Tax relief in the form of reduction of tax amount by %3 rub. that
					|has not been applied since 2012 is set for fixed asset ""%1"" (registration ID ""%2"").
					|Check and change the parameters of the %4 tax calculation if necessary.     '");
					
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, 
					ВыборкаТранспортныхСредств.ОсновноеСредство, 
					ВыборкаТранспортныхСредств.РегистрационныйЗнак,
                    СуммаЛьготы,
                    ПутьКРегистру);
					
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ВыборкаТранспортныхСредств.ОсновноеСредство);
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения Тогда 
				СтраницаРаздел2.П000020017003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020017003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки Тогда 
				СтраницаРаздел2.П000020021003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020021003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СтраницаРаздел2.П000020021003_Ставка = ВыборкаТранспортныхСредств.ЛьготнаяСтавка;
				КонецЕсли;
			КонецЕсли;

		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2013Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_3", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_Ставка", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	Раздел1 = Контейнер.Раздел1;
	СтраницаРаздел1 =  Раздел1[0].Данные[0].Значение;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    		Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",    НачалоДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НалоговыйОрган", ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетТранспортногоНалога.ОсновноеСредство,
	|	РасчетТранспортногоНалога.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	РасчетТранспортногоНалога.РегистрационныйЗнак,
	|	РасчетТранспортногоНалога.Марка,
	|	РасчетТранспортногоНалога.ИдентификационныйНомер,
	|	РасчетТранспортногоНалога.ИФНС,
	|	РасчетТранспортногоНалога.КодПоОКТМО,
	|	РасчетТранспортногоНалога.КодВидаТранспортногоСредства,
	|	РасчетТранспортногоНалога.НалоговаяБаза,
	|	РасчетТранспортногоНалога.ЕдиницаИзмерения,
	|	РасчетТранспортногоНалога.НалоговаяСтавка,
	|	РасчетТранспортногоНалога.КодНалоговойЛьготы,
	|	РасчетТранспортногоНалога.РегиональныйКодЛьготы,
	|	РасчетТранспортногоНалога.ЛьготнаяСтавка,
	|	РасчетТранспортногоНалога.КоличествоМесяцевВладения,
	|	РасчетТранспортногоНалога.КоличествоМесяцевЛьготы,
	|	РасчетТранспортногоНалога.ПроцентУменьшения,
	|	РасчетТранспортногоНалога.СуммаНалоговойЛьготы,
	|	РасчетТранспортногоНалога.ЭкологическийКласс
	|ИЗ
	|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
	|ГДЕ
	|	РасчетТранспортногоНалога.Организация = &Организация
	|	И РасчетТранспортногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоНалогуНаИмущество = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовТранспортногоНалога = Выборка.Выгрузить();
	Иначе
		РасчетНалога = РасчетИмущественныхНалогов.ПолучитьРасчетПоТранспортномуНалогу(Организация, мДатаКонцаПериодаОтчета);
		ТаблицаРасчетовТранспортногоНалога = РасчетНалога.Налог;
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовТранспортногоНалога", ТаблицаРасчетовТранспортногоНалога);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовТранспортногоНалога
	|	ИЗ &ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога";
	Запрос.Выполнить();
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	ТаблицаРасчетовТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалогаКУплате + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаИсчисленногоНалога,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ТаблицаРасчетовТранспортногоНалога.РегистрационныйЗнак,
	|	ТаблицаРасчетовТранспортногоНалога.Марка,
	|	ТаблицаРасчетовТранспортногоНалога.ИдентификационныйНомер,
	|	ТаблицаРасчетовТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	ТаблицаРасчетовТранспортногоНалога.КодВидаТранспортногоСредства,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяБаза,
	|	ТаблицаРасчетовТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНалоговойБазы,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.КодНалоговойЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.РегиональныйКодЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.ЛьготнаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.ПроцентУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.ЭкологическийКласс
	|ИЗ
	|	ВТ_ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога
	|ГДЕ
	|	ТаблицаРасчетовТранспортногоНалога.ИФНС = &НалоговыйОрган
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодПоОКТМО,
	|	ОсновноеСредство
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство),
	|	СУММА(СуммаИсчисленногоНалога),
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв)
	|ПО
	|	КодПоОКТМО";
	
	ВыборкаОКТМО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел1.Количество()>1 Цикл
		Раздел1.Удалить(1);
	КонецЦикла;

	ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
	
	Если ВыборкаОКТМО.Количество() = 0 Тогда
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3';
			|en = 'No data about vehicle registration on %1 for %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;		
		
	КонецЕсли;
	
	НомерБлокаРаздела1			= 0;
	КоличествоБлоковРаздела1 	= 3;
	ПерваяСтраницаРаздел2	= Истина;
	
	Раздел2Текущий = Раздел2[0];
	Раздел1Текущий = Раздел1[0];
	
	Пока ВыборкаОКТМО.Следующий() Цикл
				
		// Авансовые платежи по разделу 1
		Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0 
			И НомерБлокаРаздела1 <> 0 Тогда
			Раздел1.Добавить().Данные = Новый СписокЗначений();
			НомерТекущейСтраницыРаздел1 = Раздел1.Количество()-1;
			
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел1[0].Данные[0].Значение Цикл
				Если Показатель.Значение = Неопределено Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел1Текущий = Раздел1[НомерТекущейСтраницыРаздел1];
			СтраницаРаздел1 =  Раздел1Текущий.Данные[0].Значение;
			
			НомерБлокаРаздела1 = 0;
		КонецЕсли;
		
		ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
		
		СтраницаРаздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.КодПоОКТМО;
		СтраницаРаздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаИсчисленногоНалога;
						
		СтраницаРаздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей1Кв;
		СтраницаРаздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей2Кв;
		СтраницаРаздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей3Кв;
		
		НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
		
		ВыборкаТранспортныхСредств = ВыборкаОКТМО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл

			Если Не ПерваяСтраницаРаздел2 Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел2 = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницыРаздел2].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницыРаздел2];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраницаРаздел2 = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКТМО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.КоличествоМесяцевВладения;
			СтраницаРаздел2.П000020013003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			СтраницаРаздел2.П000020015003 = ВыборкаТранспортныхСредств.КоличествоМесяцевЛьготы;
						
			СтраницаРаздел2.П000020017003_КодЛьготы = "";
			СтраницаРаздел2.П000020017003_Основание = "";			
			СтраницаРаздел2.П000020018003 = 0;
			СтраницаРаздел2.П000020019003_КодЛьготы = "";
			СтраницаРаздел2.П000020019003_Основание = "";
			СтраницаРаздел2.П000020019003_Процент 	= 0;
			СтраницаРаздел2.П000020020003 = 0;
			СтраницаРаздел2.П000020021003_КодЛьготы = "";
			СтраницаРаздел2.П000020021003_Основание = "";
			СтраницаРаздел2.П000020021003_Ставка 	= 0;
			СтраницаРаздел2.П000020022003 = 0;
						
			Если ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20230" Тогда
				СтраницаРаздел2.П000020021003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020021003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СтраницаРаздел2.П000020021003_Ставка = ВыборкаТранспортныхСредств.ЛьготнаяСтавка;
				КонецЕсли;
			ИначеЕсли ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20220" Тогда 
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
					СтраницаРаздел2.П000020019003_Процент = ВыборкаТранспортныхСредств.ПроцентУменьшения;
				КонецЕсли;
			Иначе
				СтраницаРаздел2.П000020017003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020017003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;	
			КонецЕсли;
				
		КонецЦикла;
		
	КонецЦикла;
			
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2014Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_3", Истина, Ложь);
	
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003_Ставка", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2014Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	Раздел1 = Контейнер.Раздел1;
	СтраницаРаздел1 =  Раздел1[0].Данные[0].Значение;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    		Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",    НачалоДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НалоговыйОрган", ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетТранспортногоНалога.ОсновноеСредство,
	|	РасчетТранспортногоНалога.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	РасчетТранспортногоНалога.РегистрационныйЗнак,
	|	РасчетТранспортногоНалога.Марка,
	|	РасчетТранспортногоНалога.ИдентификационныйНомер,
	|	РасчетТранспортногоНалога.ИФНС,
	|	РасчетТранспортногоНалога.КодПоОКТМО,
	|	РасчетТранспортногоНалога.КодВидаТранспортногоСредства,
	|	РасчетТранспортногоНалога.НалоговаяБаза,
	|	РасчетТранспортногоНалога.ЕдиницаИзмерения,
	|	РасчетТранспортногоНалога.НалоговаяСтавка,
	|	РасчетТранспортногоНалога.КодНалоговойЛьготы,
	|	РасчетТранспортногоНалога.РегиональныйКодЛьготы,
	|	РасчетТранспортногоНалога.ЛьготнаяСтавка,
	|	РасчетТранспортногоНалога.КоличествоМесяцевВладения,
	|	РасчетТранспортногоНалога.КоличествоМесяцевЛьготы,
	|	РасчетТранспортногоНалога.ПроцентУменьшения,
	|	РасчетТранспортногоНалога.СуммаНалоговойЛьготы,
	|	РасчетТранспортногоНалога.ЭкологическийКласс,
	|	РасчетТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетТранспортногоНалога.ПовышающийКоэффициент
	|ИЗ
	|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
	|ГДЕ
	|	РасчетТранспортногоНалога.Организация = &Организация
	|	И РасчетТранспортногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовТранспортногоНалога = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовТранспортногоНалога = Выборка.Выгрузить();
	Иначе
		РасчетНалога = РасчетИмущественныхНалогов.ПолучитьРасчетПоТранспортномуНалогу(Организация, мДатаКонцаПериодаОтчета);
		ТаблицаРасчетовТранспортногоНалога = РасчетНалога.Налог;
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовТранспортногоНалога", ТаблицаРасчетовТранспортногоНалога);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовТранспортногоНалога
	|	ИЗ &ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога";
	Запрос.Выполнить();
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	ТаблицаРасчетовТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалогаКУплате + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаИсчисленногоНалога,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ТаблицаРасчетовТранспортногоНалога.РегистрационныйЗнак,
	|	ТаблицаРасчетовТранспортногоНалога.Марка,
	|	ТаблицаРасчетовТранспортногоНалога.ИдентификационныйНомер,
	|	ТаблицаРасчетовТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	ТаблицаРасчетовТранспортногоНалога.КодВидаТранспортногоСредства,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяБаза,
	|	ТаблицаРасчетовТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНалоговойБазы,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.КодНалоговойЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.РегиональныйКодЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.ЛьготнаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.ПроцентУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.ЭкологическийКласс,
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	ТаблицаРасчетовТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель,
	|	ТаблицаРасчетовТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ТаблицаРасчетовТранспортногоНалога.ПовышающийКоэффициент
	|ИЗ
	|	ВТ_ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога
	|ГДЕ
	|	ТаблицаРасчетовТранспортногоНалога.ИФНС = &НалоговыйОрган
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодПоОКТМО,
	|	ОсновноеСредство
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство),
	|	СУММА(СуммаИсчисленногоНалога),
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв)
	|ПО
	|	КодПоОКТМО";
	
	ВыборкаОКТМО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел1.Количество()>1 Цикл
		Раздел1.Удалить(1);
	КонецЦикла;

	ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
	
	Если ВыборкаОКТМО.Количество() = 0 Тогда
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3';
			|en = 'No data about vehicle registration on %1 for %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;		
		
	КонецЕсли;
	
	НомерБлокаРаздела1			= 0;
	КоличествоБлоковРаздела1 	= 3;
	ПерваяСтраницаРаздел2	= Истина;
	
	Раздел2Текущий = Раздел2[0];
	Раздел1Текущий = Раздел1[0];
	
	Пока ВыборкаОКТМО.Следующий() Цикл
		
		// Авансовые платежи по разделу 1
		Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0 
			И НомерБлокаРаздела1 <> 0 Тогда
			Раздел1.Добавить().Данные = Новый СписокЗначений();
			НомерТекущейСтраницыРаздел1 = Раздел1.Количество()-1;
			
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел1[0].Данные[0].Значение Цикл
				Если Показатель.Значение = Неопределено Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел1Текущий = Раздел1[НомерТекущейСтраницыРаздел1];
			СтраницаРаздел1 =  Раздел1Текущий.Данные[0].Значение;
			
			НомерБлокаРаздела1 = 0;
		КонецЕсли;
		
		ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
		
		СтраницаРаздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.КодПоОКТМО;
		СтраницаРаздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаИсчисленногоНалога;
						
		СтраницаРаздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей1Кв;
		СтраницаРаздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей2Кв;
		СтраницаРаздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей3Кв;
		
		НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
		
		ВыборкаТранспортныхСредств = ВыборкаОКТМО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл

			Если Не ПерваяСтраницаРаздел2 Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел2 = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницыРаздел2].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницыРаздел2];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраницаРаздел2 = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКТМО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020010003 = ВыборкаТранспортныхСредств.КоличествоЛетПрошедшихСГодаВыпускаТС;
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.КоличествоМесяцевВладения;
			СтраницаРаздел2.П000020012003_Числ = ВыборкаТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель;
			СтраницаРаздел2.П000020012003_Знам = ВыборкаТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель;
			СтраницаРаздел2.П000020014003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			СтраницаРаздел2.П000020015003 = ВыборкаТранспортныхСредств.ПовышающийКоэффициент;
			СтраницаРаздел2.П000020017003 = ВыборкаТранспортныхСредств.КоличествоМесяцевЛьготы;
						
			СтраницаРаздел2.П000020019003_КодЛьготы = "";
			СтраницаРаздел2.П000020019003_Основание = "";
			СтраницаРаздел2.П000020020003 = 0;
			СтраницаРаздел2.П000020021003_КодЛьготы = "";
			СтраницаРаздел2.П000020021003_Основание = "";
			СтраницаРаздел2.П000020021003_Процент 	= 0;
			СтраницаРаздел2.П000020022003 = 0;
			СтраницаРаздел2.П000020023003_КодЛьготы = "";
			СтраницаРаздел2.П000020023003_Основание = "";
			СтраницаРаздел2.П000020023003_Ставка 	= 0;
			СтраницаРаздел2.П000020025003 = 0;
						
			Если ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20230" Тогда
				СтраницаРаздел2.П000020023003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020023003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СтраницаРаздел2.П000020023003_Ставка = ВыборкаТранспортныхСредств.ЛьготнаяСтавка;
				КонецЕсли;
			ИначеЕсли ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20220" Тогда 
				СтраницаРаздел2.П000020021003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020021003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
					СтраницаРаздел2.П000020021003_Процент = ВыборкаТранспортныхСредств.ПроцентУменьшения;
				КонецЕсли;
			Иначе
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;	
			КонецЕсли;
				
		КонецЦикла;
		
	КонецЦикла;
			
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2016Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_3", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020025003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_Ставка", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020028003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020029003", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2016Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	Раздел1 = Контейнер.Раздел1;
	СтраницаРаздел1 =  Раздел1[0].Данные[0].Значение;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    		Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",    НачалоДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НалоговыйОрган", ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	РасчетТранспортногоНалога.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	РасчетТранспортногоНалога.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	РасчетТранспортногоНалога.Марка КАК Марка,
	|	РасчетТранспортногоНалога.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	РасчетТранспортногоНалога.ИФНС КАК ИФНС,
	|	РасчетТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетТранспортногоНалога.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
	|	РасчетТранспортногоНалога.НалоговаяБаза КАК НалоговаяБаза,
	|	РасчетТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РасчетТранспортногоНалога.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетТранспортногоНалога.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
	|	РасчетТранспортногоНалога.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
	|	РасчетТранспортногоНалога.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
	|	РасчетТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	РасчетТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
	|	РасчетТранспортногоНалога.ПроцентУменьшения КАК ПроцентУменьшения,
	|	РасчетТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаНалоговойЛьготы,
	|	РасчетТранспортногоНалога.ЭкологическийКласс КАК ЭкологическийКласс,
	|	РасчетТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС КАК КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетТранспортногоНалога.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
	|	РасчетТранспортногоНалога.СуммаНалоговогоВычета КАК СуммаНалоговогоВычета,
	|	РасчетТранспортногоНалога.ДатаРегистрационныхДанных КАК ДатаРегистрационныхДанных,
	|	РасчетТранспортногоНалога.ДатаРегистрации КАК ДатаРегистрации,
	|	РасчетТранспортногоНалога.ДатаПрекращенияРегистрации КАК ДатаПрекращенияРегистрации
	|ИЗ
	|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
	|ГДЕ
	|	РасчетТранспортногоНалога.Организация = &Организация
	|	И РасчетТранспортногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовТранспортногоНалога = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовТранспортногоНалога = Выборка.Выгрузить();
	Иначе
		РасчетНалога = РасчетИмущественныхНалогов.ПолучитьРасчетПоТранспортномуНалогу(Организация, мДатаКонцаПериодаОтчета);
		ТаблицаРасчетовТранспортногоНалога = РасчетНалога.Налог;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовТранспортногоНалога", ТаблицаРасчетовТранспортногоНалога);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовТранспортногоНалога
	|	ИЗ &ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	ТаблицаРасчетовТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалогаКУплате + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв - ТаблицаРасчетовТранспортногоНалога.СуммаНалоговогоВычета КАК СуммаИсчисленногоНалога,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ТаблицаРасчетовТранспортногоНалога.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	ТаблицаРасчетовТранспортногоНалога.Марка КАК Марка,
	|	ТаблицаРасчетовТранспортногоНалога.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	ТаблицаРасчетовТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	ТаблицаРасчетовТранспортногоНалога.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяБаза КАК НалоговаяБаза,
	|	ТаблицаРасчетовТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНалоговойБазы,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.ПроцентУменьшения КАК ПроцентУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.ЭкологическийКласс КАК ЭкологическийКласс,
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС КАК КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	ТаблицаРасчетовТранспортногоНалога.ОсновноеСредство.ДатаВыпуска КАК ДатаВыпуска,
	|	ТаблицаРасчетовТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ТаблицаРасчетовТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ТаблицаРасчетовТранспортногоНалога.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалоговогоВычета КАК СуммаНалоговогоВычета,
	|	ТаблицаРасчетовТранспортногоНалога.ДатаРегистрации КАК ДатаРегистрации,
	|	ТаблицаРасчетовТранспортногоНалога.ДатаПрекращенияРегистрации КАК ДатаПрекращенияРегистрации
	|ИЗ
	|	ВТ_ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога
	|ГДЕ
	|	ТаблицаРасчетовТранспортногоНалога.ИФНС = &НалоговыйОрган
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодПоОКТМО,
	|	ОсновноеСредство
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство),
	|	СУММА(СуммаИсчисленногоНалога),
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв),
	|	СУММА(СуммаНалоговогоВычета)
	|ПО
	|	КодПоОКТМО";
	
	ВыборкаОКТМО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел1.Количество()>1 Цикл
		Раздел1.Удалить(1);
	КонецЦикла;

	ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
	
	Если ВыборкаОКТМО.Количество() = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствуют данные о регистрации транспортных средств на %1 для %2 по коду налогового органа %3
			|%4';
			|en = 'No data on vehicle registration on %1 for %2 by tax authority code %3
			|%4'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина"),
			ПараметрыОтчета.Организация,
			КодНалоговогоОргана,
			ПутьКРегистру));
		
	КонецЕсли;
	
	НомерБлокаРаздела1       = 0;
	КоличествоБлоковРаздела1 = 3;
	ПерваяСтраницаРаздел2    = Истина;
	
	Раздел2Текущий = Раздел2[0];
	Раздел1Текущий = Раздел1[0];
	
	Пока ВыборкаОКТМО.Следующий() Цикл
		
		Если ВыборкаОКТМО.КодПоОКТМО = "" Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'В документе ""Параметры начисления транспортного налога"" не заполнен код ОКТМО. Укажите код ОКТМО и произведите расчет транспортного налога заново.';
					|en = 'RNCMT code is required in the ""Financial details of vehicle tax charge"" document by BCC. Specify RNCMT code and calculate the vehicle tax again.'"));
		КонецЕсли;
		
		// Авансовые платежи по разделу 1
		Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0 
			И НомерБлокаРаздела1 <> 0 Тогда
			Раздел1.Добавить().Данные = Новый СписокЗначений();
			НомерТекущейСтраницыРаздел1 = Раздел1.Количество()-1;
			
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел1[0].Данные[0].Значение Цикл
				Если Показатель.Значение = Неопределено Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел1Текущий = Раздел1[НомерТекущейСтраницыРаздел1];
			СтраницаРаздел1 =  Раздел1Текущий.Данные[0].Значение;
			
			НомерБлокаРаздела1 = 0;
		КонецЕсли;
		
		ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
		
		СтраницаРаздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.КодПоОКТМО;
		СтраницаРаздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаИсчисленногоНалога;
		СтраницаРаздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей1Кв;
		СтраницаРаздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей2Кв;
		СтраницаРаздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей3Кв;
		
		НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
		
		ВыборкаТранспортныхСредств = ВыборкаОКТМО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл

			Если Не ПерваяСтраницаРаздел2 Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел2 = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницыРаздел2].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницыРаздел2];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраницаРаздел2 = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКТМО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.ДатаРегистрации;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ДатаПрекращенияРегистрации;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020010003 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020012003 = ВыборкаТранспортныхСредств.КоличествоЛетПрошедшихСГодаВыпускаТС;
			
			Если ЗначениеЗаполнено(ВыборкаТранспортныхСредств.ДатаВыпуска) Тогда
				СтраницаРаздел2.П000020013003 = Формат(ВыборкаТранспортныхСредств.ДатаВыпуска, "ДФ=гггг");
			КонецЕсли;
			
			СтраницаРаздел2.П000020014003 = ВыборкаТранспортныхСредств.КоличествоМесяцевВладения;
			СтраницаРаздел2.П000020015003_Числ = ВыборкаТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель;
			СтраницаРаздел2.П000020015003_Знам = ВыборкаТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель;
			СтраницаРаздел2.П000020017003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			СтраницаРаздел2.П000020018003 = ВыборкаТранспортныхСредств.ПовышающийКоэффициент;
			СтраницаРаздел2.П000020020003 = ВыборкаТранспортныхСредств.КоличествоМесяцевЛьготы;
			
			СтраницаРаздел2.П000020022003_КодЛьготы = "";
			СтраницаРаздел2.П000020022003_Основание = "";
			СтраницаРаздел2.П000020023003 = 0;
			СтраницаРаздел2.П000020024003_КодЛьготы = "";
			СтраницаРаздел2.П000020024003_Основание = "";
			СтраницаРаздел2.П000020024003_Процент 	= 0;
			СтраницаРаздел2.П000020025003 = 0;
			СтраницаРаздел2.П000020026003_КодЛьготы = "";
			СтраницаРаздел2.П000020026003_Основание = "";
			СтраницаРаздел2.П000020026003_Ставка 	= 0;
			СтраницаРаздел2.П000020030003 = 0;
			
			Если ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20230" Тогда
				СтраницаРаздел2.П000020026003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020026003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СтраницаРаздел2.П000020026003_Ставка = ВыборкаТранспортныхСредств.ЛьготнаяСтавка;
				КонецЕсли;
			ИначеЕсли ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20220" Тогда 
				СтраницаРаздел2.П000020024003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020024003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
					СтраницаРаздел2.П000020024003_Процент = ВыборкаТранспортныхСредств.ПроцентУменьшения;
				КонецЕсли;
			Иначе
				СтраницаРаздел2.П000020022003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020022003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
			КонецЕсли;
			
			СтраницаРаздел2.П000020028003 = "";
			СтраницаРаздел2.П000020029003 = 0;

			Если ВыборкаТранспортныхСредств.СуммаНалоговогоВычета > 0 Тогда
				СтраницаРаздел2.П000020028003 = "40200";
				СтраницаРаздел2.П000020029003 = ВыборкаТранспортныхСредств.СуммаНалоговогоВычета;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
			
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2019Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_3", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020025003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_Ставка", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020028003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020029003", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2019Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	
	НалоговыйОрган = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
		
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",         Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета", НачалоДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НалоговыйОрган",      НалоговыйОрган);
	
	// СуммаНалогаКУплате не уменьшена на сумму освобождения, поэтому при расчете СуммаИсчисленногоНалога вычитаем сумму освобождения.
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	РасчетТранспортногоНалога.ОсновноеСредство.ДатаВыпуска КАК ДатаВыпуска,
	|	РасчетТранспортногоНалога.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	РасчетТранспортногоНалога.Марка КАК Марка,
	|	РасчетТранспортногоНалога.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	РасчетТранспортногоНалога.ИФНС КАК ИФНС,
	|	РасчетТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетТранспортногоНалога.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
	|	РасчетТранспортногоНалога.НалоговаяБаза КАК НалоговаяБаза,
	|	РасчетТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РасчетТранспортногоНалога.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетТранспортногоНалога.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
	|	РасчетТранспортногоНалога.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
	|	РасчетТранспортногоНалога.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
	|	РасчетТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	РасчетТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
	|	РасчетТранспортногоНалога.ПроцентУменьшения КАК ПроцентУменьшения,
	|	РасчетТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаНалоговойЛьготы,
	|	РасчетТранспортногоНалога.СуммаОсвобожденияОтУплатыНалога КАК СуммаОсвобожденияОтУплатыНалога,
	|	РасчетТранспортногоНалога.ЭкологическийКласс КАК ЭкологическийКласс,
	|	РасчетТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС КАК КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетТранспортногоНалога.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
	|	РасчетТранспортногоНалога.ДатаРегистрационныхДанных КАК ДатаРегистрационныхДанных,
	|	РасчетТранспортногоНалога.ДатаРегистрации КАК ДатаРегистрации,
	|	РасчетТранспортногоНалога.ДатаПрекращенияРегистрации КАК ДатаПрекращенияРегистрации,
	|	РасчетТранспортногоНалога.СуммаНалоговогоВычета КАК СуммаНалоговогоВычета,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	РасчетТранспортногоНалога.СуммаНалогаКУплате + РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв + РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв + РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв 
	|	- РасчетТранспортногоНалога.СуммаНалоговогоВычета - РасчетТранспортногоНалога.СуммаОсвобожденияОтУплатыНалога КАК СуммаИсчисленногоНалога
	|ИЗ
	|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
	|ГДЕ
	|	РасчетТранспортногоНалога.Организация = &Организация
	|	И РасчетТранспортногоНалога.ПериодРасчета = &ДатаОкончанияОтчета
	|	И РасчетТранспортногоНалога.ИФНС = &НалоговыйОрган
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодПоОКТМО,
	|	КодВидаТранспортногоСредства
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство),
	|	СУММА(СуммаНалоговогоВычета),
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв),
	|	СУММА(СуммаИсчисленногоНалога)
	|ПО
	|	КодПоОКТМО";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Проверьте данные о регистрации транспортных средств %1
			| и выполнение регламентной операции Расчет транспортного налога за %2';
			|en = 'Check the vehicle registration data %1
			| and the execution of the period-end operation Vehicle tax calculation for %2'"),
			ПутьКРегистру, Формат(ПараметрыОтчета.мДатаКонцаПериодаОтчета, "ДФ='MMMM yyyy'")));
		Возврат;
		
	КонецЕсли;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	Раздел1 = Контейнер.Раздел1;
	СтраницаРаздел1 =  Раздел1[0].Данные[0].Значение;
	
	Пока Раздел2.Количество() > 1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел1.Количество() > 1 Цикл
		Раздел1.Удалить(1);
	КонецЦикла;
	
	НомерБлокаРаздела1       = 0;
	КоличествоБлоковРаздела1 = 3;
	ПерваяСтраницаРаздел2    = Истина;
	
	ВыборкаОКТМО = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Раздел2Текущий = Раздел2[0];
	Раздел1Текущий = Раздел1[0];
	
	ПрименяетсяОсвобождениеОтНалога = Ложь;
	Если НалоговыйУчет.ДеятельностьОтнесенаКПострадавшимОтКоронавируса(Организация) Тогда
		ПериодОсвобожденияОтНалогов = НалоговыйУчет.ПериодОсвобожденияОтНалоговПострадавшимОтКоронавируса();
		ПрименяетсяОсвобождениеОтНалога = (Год(ПериодОсвобожденияОтНалогов.Конец) = Год(мДатаКонцаПериодаОтчета));
	КонецЕсли;	
	
	// В 2020 году для некоторых НКО предусмотрены особые коды льгот
	ЭтоНекоммерческаяОрганизация = Ложь;
	
	Пока ВыборкаОКТМО.Следующий() Цикл
		
		Если ВыборкаОКТМО.КодПоОКТМО = "" Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'В документе ""Параметры начисления транспортного налога"" не заполнен код ОКТМО. Укажите код ОКТМО и произведите расчет транспортного налога заново.';
					|en = 'RNCMT code is required in the ""Financial details of vehicle tax charge"" document by BCC. Specify RNCMT code and calculate the vehicle tax again.'"));
		КонецЕсли;
		
		// Авансовые платежи по разделу 1
		Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0 
			И НомерБлокаРаздела1 <> 0 Тогда
			Раздел1.Добавить().Данные = Новый СписокЗначений();
			НомерТекущейСтраницыРаздел1 = Раздел1.Количество()-1;
			
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел1[0].Данные[0].Значение Цикл
				Если Показатель.Значение = Неопределено Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел1Текущий = Раздел1[НомерТекущейСтраницыРаздел1];
			СтраницаРаздел1 =  Раздел1Текущий.Данные[0].Значение;
			
			НомерБлокаРаздела1 = 0;
		КонецЕсли;
		
		ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
		
		СтраницаРаздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.КодПоОКТМО;
		СтраницаРаздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаИсчисленногоНалога;
		СтраницаРаздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей1Кв;
		СтраницаРаздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей2Кв;
		СтраницаРаздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей3Кв;
		
		НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
		
		ВыборкаТранспортныхСредств = ВыборкаОКТМО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл

			Если Не ПерваяСтраницаРаздел2 Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел2 = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницыРаздел2].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницыРаздел2];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраницаРаздел2 = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКТМО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.ДатаРегистрации;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ДатаПрекращенияРегистрации;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020010003 = ВыборкаТранспортныхСредств.ЕдиницаИзмерения;
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020012003 = ВыборкаТранспортныхСредств.КоличествоЛетПрошедшихСГодаВыпускаТС;
			
			Если ЗначениеЗаполнено(ВыборкаТранспортныхСредств.ДатаВыпуска) Тогда
				СтраницаРаздел2.П000020013003 = Формат(ВыборкаТранспортныхСредств.ДатаВыпуска, "ДФ=гггг");
			КонецЕсли;
			
			СтраницаРаздел2.П000020014003 = ВыборкаТранспортныхСредств.КоличествоМесяцевВладения;
			СтраницаРаздел2.П000020015003_Числ = ВыборкаТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель;
			СтраницаРаздел2.П000020015003_Знам = ВыборкаТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель;
			СтраницаРаздел2.П000020017003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			СтраницаРаздел2.П000020018003 = ВыборкаТранспортныхСредств.ПовышающийКоэффициент;
			СтраницаРаздел2.П000020020003 = ВыборкаТранспортныхСредств.КоличествоМесяцевЛьготы;
			
			СтраницаРаздел2.П000020022003_КодЛьготы = "";
			СтраницаРаздел2.П000020022003_Основание = "";
			СтраницаРаздел2.П000020023003 = 0;
			СтраницаРаздел2.П000020024003_КодЛьготы = "";
			СтраницаРаздел2.П000020024003_Основание = "";
			СтраницаРаздел2.П000020024003_Процент 	= 0;
			СтраницаРаздел2.П000020025003 = 0;
			СтраницаРаздел2.П000020026003_КодЛьготы = "";
			СтраницаРаздел2.П000020026003_Основание = "";
			СтраницаРаздел2.П000020026003_Ставка 	= 0;
			СтраницаРаздел2.П000020030003 = 0;
			
			// При освобождении организации от уплаты налога за 2-й квартал 2020 года необходимо использовать особые коды льгот
			// ( см. письмо ФНС от 10.06.2020 № БС-4-21/9576@ - далее Письмо) 
			Если ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20230" Тогда
				// Льгота в виде снижения налоговой ставки
				СтраницаРаздел2.П000020026003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020026003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СтраницаРаздел2.П000020026003_Ставка = ВыборкаТранспортныхСредств.ЛьготнаяСтавка;
				КонецЕсли;
			ИначеЕсли ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20220" Тогда 
				// Льгота в виде уменьшения суммы налога на процент
				Если ПрименяетсяОсвобождениеОтНалога Тогда
					// Абз. 2 п.1 Письма: "Если организация освобождается от [уплаты налога за 2-й квартал 2020 года] ... 
					// и [для организации]... законом субъекта Российской Федерации также установлена налоговая льгота 
					// в виде уменьшения суммы транспортного налога, подлежащей уплате в бюджет, то
					// в первой части показателя по строке с кодом 240 ... указывается [код]..."
					Если ЭтоНекоммерческаяОрганизация Тогда
						// ... 10206 (код льготы для социально-ориентированных НКО - на данный момент опубликован только реестр таких НКО)
						СтраницаРаздел2.П000020024003_КодЛьготы = "10206";
					Иначе
						// ... 10205 (если организация не является НКО)
						СтраницаРаздел2.П000020024003_КодЛьготы = "10205";
					КонецЕсли;	
					// "...по строке с кодом 250 ... указывается сумма налоговой льготы в рублях (в том числе с учетом суммы авансового платежа
					// за период владения объектом налогообложения с 1 апреля по 30 июня 2020 года)"
					СтраницаРаздел2.П000020025003 = ВыборкаТранспортныхСредств.СуммаНалоговойЛьготы + ВыборкаТранспортныхСредств.СуммаОсвобожденияОтУплатыНалога;
				Иначе	
					СтраницаРаздел2.П000020024003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
					Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
						СтраницаРаздел2.П000020024003_Процент = ВыборкаТранспортныхСредств.ПроцентУменьшения;
					КонецЕсли;
				КонецЕсли;	
				СтраницаРаздел2.П000020024003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
			Иначе
				// Льгота в виде освобождения от налога
				СтраницаРаздел2.П000020022003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020022003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
			КонецЕсли;
			
			// Если нет "обычной" льготы в виде уменьшения суммы налога, то освобождение от налога за 2-й квартал отражается особым образом.
			// Абз. 1 п.1 Письма: "Если организация освобождается от [уплаты налога за 2-й квартал 2020 года] ..., то
			// в первой части показателя по строке с кодом 240 ... указывается [код]..."
			Если ПрименяетсяОсвобождениеОтНалога И ВыборкаТранспортныхСредств.КодНалоговойЛьготы <> "20220" Тогда
				Если ЭтоНекоммерческаяОрганизация Тогда
					// ... 10202 (код льготы для социально-ориентированных НКО - на данный момент опубликован только реестр таких НКО)
					СтраницаРаздел2.П000020024003_КодЛьготы = "10202";
				Иначе
					// ... 10201 (если организация не является НКО)
					СтраницаРаздел2.П000020024003_КодЛьготы = "10201";
				КонецЕсли;	
				// "...по строке с кодом 250 ... указывается сумма налоговой льготы в рублях"
				СтраницаРаздел2.П000020025003 = ВыборкаТранспортныхСредств.СуммаОсвобожденияОтУплатыНалога;
			КонецЕсли;
			
			СтраницаРаздел2.П000020028003 = "";
			СтраницаРаздел2.П000020029003 = 0;
			
			Если ВыборкаТранспортныхСредств.СуммаНалоговогоВычета > 0 Тогда
				СтраницаРаздел2.П000020028003 = "40200";
				СтраницаРаздел2.П000020029003 = ВыборкаТранспортныхСредств.СуммаНалоговогоВычета;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
			
КонецПроцедуры

#КонецОбласти

#Область БаннерОтменаДекларацииПоТранспортномуЗемельномуНалогу

// Возвращает текст для баннера с сообщением об отмене деклараций по транспортному или земельному налогу
//
// Параметры:
//   КодЗадачи   - Строка - код задачи по уплате налога
//
// Возвращаемое значение:
//   ФорматированнаяСтрока
//
Функция ТекстБаннераОтменаДекларацииПоНалогу(КодЗадачи) Экспорт
	
	СоставСтроки = Новый Массив;
	
	ПредставлениеВидНалога = "";
	СсылкаНаПорядокУплаты = "";

	Если КодЗадачи = "ТранспортныйНалог" Тогда
		ПредставлениеВидНалога = НСтр("ru = 'транспортному налогу';
										|en = 'vehicle tax'");
	ИначеЕсли КодЗадачи = "ЗемельныйНалог" Тогда
		ПредставлениеВидНалога = НСтр("ru = 'земельному налогу';
										|en = 'land value tax'");
	Иначе	
		Возврат Новый ФорматированнаяСтрока(СоставСтроки);
	КонецЕсли;	
		
	// Переводы строки для читаемости при разработке. Перед выводом будут удалены
	ТекстПодсказки = СтрШаблон(НСтр("ru = 'С 1 января 2021 года отменяется декларация по %1
		|(см. Приказ ФНС России от 04.09.2019 № ММВ-7-21/440@).
		|Таким образом, начиная с отчетности за 2020 год декларация не подается.';
		|en = 'The declaration for %1
		| is canceled after January 1, 2021 (see Order of the FTS of Russia dated 04.09.2019 № ММV-7-21/440@).
		|Thus, starting from reporting for 2020, the declaration is not submitted.'"), ПредставлениеВидНалога);
	СоставСтроки.Добавить(СтрЗаменить(ТекстПодсказки, Символы.ПС, " "));
	
	СоставСтроки.Добавить(Символы.ПС);
	СоставСтроки.Добавить(Символы.ПС);
	
	СоставСтроки.Добавить(СтроковыеФункции.ФорматированнаяСтрока(
		СтрШаблон("<a href='https://its.1c.ru/db/newsclar#content:465489:hdoc'>%1</a>", НСтр("ru = 'Подробнее на ИТС';
																							|en = 'More details on ITS'"))));
			
	Возврат Новый ФорматированнаяСтрока(СоставСтроки);
	
КонецФункции

// Возвращает текст для баннера с сообщением об изменении сроков уплаты транспортного или земельного налога и авансовых платежей
//
// Параметры:
//   КодЗадачи   - Строка - код задачи по уплате налога
//
// Возвращаемое значение:
//   ФорматированнаяСтрока
//
Функция ТекстБаннераИзменениеСроковУплатыНалога(КодЗадачи) Экспорт
	
	СоставСтроки = Новый Массив;
	
	ПредставлениеВидНалога = "";
	СсылкаНаПорядокУплаты = "";

	Если КодЗадачи = "ТранспортныйНалог" Тогда
		СсылкаНаПорядокУплаты = "https://its.1c.ru/db/taxtrans#content:33:hdoc";
	ИначеЕсли КодЗадачи = "ЗемельныйНалог" Тогда
		СсылкаНаПорядокУплаты = "https://its.1c.ru/db/taxland#content:35:hdoc";
	Иначе	
		Возврат Новый ФорматированнаяСтрока(СоставСтроки);
	КонецЕсли;	
			
	// Переводы строки для читаемости при разработке. Перед выводом будут удалены
	ТекстПодсказки = СтрШаблон(НСтр("ru = 'С 2021 года налог уплачивается в срок не позднее <b>1 марта</b> года,
		|следующего за истекшим налоговым периодом.
		|Это положение действует начиная с уплаты налога за 2020 год.';
		|en = 'After 2021 the tax is payable before <b>Match 1</b> of the year,
		|following the expired tax period.
		|This provision is applicable starting with tax payments for 2020.'"));
	
	ТекстПодсказки = СтрЗаменить(ТекстПодсказки, Символы.ПС, " ");
	СоставСтроки.Добавить(СтроковыеФункции.ФорматированнаяСтрока(ТекстПодсказки));
	
	СоставСтроки.Добавить(Символы.ПС);
	
	ТекстПодсказки = СтрШаблон(НСтр("ru = 'Авансовые платежи уплачиваются не позднее <b>30 апреля</b>, <b>31 июля</b> и <b>31 октября</b>.';
									|en = 'Advance payments are payable before <b>April 30</b>, <b>July 31</b> and <b>October 31</b>.'"));
	СоставСтроки.Добавить(СтроковыеФункции.ФорматированнаяСтрока(ТекстПодсказки));
	
	СоставСтроки.Добавить(Символы.ПС);
	
	СоставСтроки.Добавить(НСтр("ru = 'См. 325-ФЗ от 29.09.2019.';
								|en = 'See 325-FZ dated September 29, 2019.'"));
	
	СоставСтроки.Добавить(Символы.ПС);
	СоставСтроки.Добавить(Символы.ПС);
	
	СоставСтроки.Добавить(СтроковыеФункции.ФорматированнаяСтрока(
		СтрШаблон("<a href='%1'>%2</a>", СсылкаНаПорядокУплаты, НСтр("ru = 'Подробнее на ИТС';
																	|en = 'More details on ITS'"))));
	
	Возврат Новый ФорматированнаяСтрока(СоставСтроки);
	
КонецФункции

// Возвращает признак видимости баннера с сообщением об отмене декларации по налогу
//
// Параметры:
//   КодЗадачи   - Строка - код задачи по уплате налога
//   Период      - Дата - период, для которого требуется проверить видимость баннера, 
//				   Неопределено - если проверка периода не требуется
//
// Возвращаемое значение:
//   Булево
//
Функция ВидимостьБаннераОтменаДекларацииПоНалогу(КодЗадачи, Период = Неопределено) Экспорт
	
	Если КодЗадачи <> "ТранспортныйНалог" 
		 И КодЗадачи <> "ЗемельныйНалог" Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Баннер выводим только в задачах по уплате налога по результатм года, но не ранее периода 2020 года.
	// Так как задачи по представлению декларации в указанный период уже не формируются,
	// то здесь не требуется проверять вид задачи (отчет или уплата).
	Если Период <> Неопределено И (Период < '20201231' Или КонецДня(Период) <> КонецГода(Период)) Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Возврат ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ВидимостьБаннераОтменаДекларацииПоТранспортномуЗемельномуНалогу",
		КодЗадачи,
		Истина);
		
КонецФункции

// Возвращает признак видимости баннера с сообщением об изменении сроков уплаты налога
//
// Параметры:
//   КодЗадачи   - Строка - код задачи по уплате налога
//   Период      - Дата - период, для которого требуется проверить видимость баннера, 
//				   Неопределено - если проверка периода не требуется
//
// Возвращаемое значение:
//   Булево
//
Функция ВидимостьБаннераИзменениеСроковУплатыНалога(КодЗадачи, Период = Неопределено) Экспорт
	
	Если КодЗадачи <> "ТранспортныйНалог"
		 И КодЗадачи <> "ЗемельныйНалог" Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Баннер выводим в задачах по уплате налога (авансовых платежей) не ранее периода за 2020 год.
	// Так как задачи по представлению декларации в указанный период уже не формируются,
	// то здесь не требуется проверять вид задачи (отчет или уплата).
	Если Период <> Неопределено И Период < '20201231' Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Возврат ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ВидимостьБаннераИзменениеСроковУплатыНалога",
		КодЗадачи,
		Истина);
	
КонецФункции

// Сохраняет признак видимости баннера с сообщением об отмене декларации по налогу
//
// Параметры:
//   КодЗадачи   - Строка - код задачи по уплате налога
//   ЗначениеНастройки - Булево - сохраняемый признак видимости баннера
//
Процедура СохранитьНастройкуБаннераОтменаДекларацииПоНалогу(КодЗадачи, ЗначениеНастройки) Экспорт
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"ВидимостьБаннераОтменаДекларацииПоТранспортномуЗемельномуНалогу",
		КодЗадачи,
		ЗначениеНастройки);
		
КонецПроцедуры

// Сохраняет признак видимости баннера с сообщением об изменении сроков уплаты налога
//
// Параметры:
//   КодЗадачи   - Строка - код задачи по уплате налога
//   ЗначениеНастройки - Булево - сохраняемый признак видимости баннера
//
Процедура СохранитьНастройкуБаннераИзменениеСроковУплатыНалога(КодЗадачи, ЗначениеНастройки) Экспорт
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"ВидимостьБаннераИзменениеСроковУплатыНалога",
		КодЗадачи,
		ЗначениеНастройки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция возвращает строку с описание для пользователя ссылки в интерфейсе, 
// где расположен регистр сведений "Регистрация транспортных средств".
// 
// Возвращаемое значение:
//	 Строка.
//
Функция ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств()

	Возврат УправлениеВнеоборотнымиАктивамиПереопределяемый.ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();

КонецФункции // ПолучитьОписаниеПутиКОбъектуВИнтерфейсе()

// Функция возвращает строку с описание для пользователя ссылки в интерфейсе, 
// где расположен регистр сведений "Параметры начисления земельного налога".
// 
// Возвращаемое значение:
//	 Строка.
//
Функция ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков()

	Возврат УправлениеВнеоборотнымиАктивамиПереопределяемый.ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков();

КонецФункции // ПолучитьОписаниеПутиКОбъектуВИнтерфейсе()

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область ОбщиеПроцедурыИФункции

// Функция определяет фактический срок использования актива (в месяцах)
// исходя из даты принятия актива к учету и даты выбытия.
//
// Параметры:
//   ДатаПринятияКУчету - Дата - Дата принятия актива к учету.
//   ДатаВыбытия - Дата - Дата выбытия актива.
//
// Возвращаемое значение:
//   Число - Число месяцев.
//
Функция ОпределитьФактическийСрокИспользования(ДатаПринятияКУчету, ДатаВыбытия) Экспорт
	
	КоличествоЛет     = Год(ДатаВыбытия) - Год(ДатаПринятияКУчету);
	КоличествоМесяцев = Месяц(ДатаВыбытия) - Месяц(ДатаПринятияКУчету);
	
	Возврат КоличествоЛет * 12 + КоличествоМесяцев;
	
КонецФункции // ОпределитьФактическийСрокИспользования()

// Определяет коэффициент распределения выручки по видам деятельности 
// (ЕНВД / не ЕНВД) за период.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация.
//  НачДата     - Дата - Начало периода расчета.
//	КонДата     - Дата - Окончание периода расчета.
//
// Возвращаемое значение:
//  Число - коэффициент распределения расходов по видам деятельности.
//
Функция КоэффициентРаспределенияВыручкиПоВидамДеятельности(Организация, Знач НачДата, Знач КонДата) Экспорт
	
	// Массив счетов, по которым рассчитывается выручка организации.
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Выручка);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_НДС);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_Акцизы);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_ЭкспортныеПошлины);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("НачДата",          НачДата);
	Запрос.УстановитьПараметр("КонДата",          КонДата);
	Запрос.УстановитьПараметр("СчетВыручкаЕНВД",  БухгалтерскийУчетПовтИсп.СчетаВыручкиЕНВД());
	Запрос.УстановитьПараметр("МассивСчетов",     МассивСчетов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_МассивСчетов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&МассивСчетов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ХозрасчетныйОбороты.Счет В (&СчетВыручкаЕНВД)
	|					ТОГДА -ХозрасчетныйОбороты.СуммаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ВыручкаЕНВД,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НЕ ХозрасчетныйОбороты.Счет В (&СчетВыручкаЕНВД)
	|					ТОГДА -ХозрасчетныйОбороты.СуммаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ВыручкаНеЕНВД
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_МассивСчетов.Счет
	|				ИЗ
	|					ВТ_МассивСчетов),
	|			,
	|			Организация = &Организация,
	|			НЕ КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибыльУбытокОтПродаж),
	|			) КАК ХозрасчетныйОбороты";
	РезультатЗапроса = Запрос.Выполнить();
	
	// Если результат запроса пустой, то считаем, что все
	// расходы относятся к деятельности, не облагаемой ЕНВД.
	Если РезультатЗапроса.Пустой() Тогда
		
		Коэффициент = 1;
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ВыручкаЕНВД   = Макс(Выборка.ВыручкаЕНВД,   0);
		ВыручкаНеЕНВД = Макс(Выборка.ВыручкаНеЕНВД, 0);
		
		Если ВыручкаНеЕНВД + ВыручкаЕНВД = 0 Тогда // нет дохода ни по одному из видов деятельности
			Коэффициент = 1;
		Иначе
			Коэффициент = ВыручкаНеЕНВД / (ВыручкаНеЕНВД + ВыручкаЕНВД);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Коэффициент;
	
КонецФункции // КоэффициентРаспределенияВыручкиПоВидамДеятельности()

// Возвращает налоговый орган, в котором зарегистрирована организация.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация, для которой определяется налоговый орган.
//	КодНалоговогоОргана - Строка - Код налогового органа.
//	КПП - Строка - КПП организации, присвоенный при регистрации.
//
// Возвращаемое значение:
//	Справочники.РегистрацииВНалоговомОргане - Ссылка на регистрацию в налоговом органе.
//
Функция ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана = Неопределено, КПП = Неопределено) Экспорт
	
	НалоговыйОрган = Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		КодыРегистрацииОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "КодНалоговогоОргана, КПП");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Код", ?(ЗначениеЗаполнено(КодНалоговогоОргана), КодНалоговогоОргана, КодыРегистрацииОрганизации.КодНалоговогоОргана));
		Запрос.УстановитьПараметр("КПП", ?(ЗначениеЗаполнено(КПП), КПП, КодыРегистрацииОрганизации.КПП));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА Организации.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
		|				И Организации.ОбособленноеПодразделение
		|			ТОГДА Организации.ГоловнаяОрганизация
		|		ИНАЧЕ Организации.Ссылка
		|	КОНЕЦ КАК Организация
		|ПОМЕСТИТЬ ВТ_Организации
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацииВНалоговомОргане.Ссылка,
		|	РегистрацииВНалоговомОргане.Владелец
		|ПОМЕСТИТЬ ВТ_РегистрацииВНалоговомОргане
		|ИЗ
		|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|ГДЕ
		|	РегистрацииВНалоговомОргане.ПометкаУдаления = ЛОЖЬ
		|	И РегистрацииВНалоговомОргане.Код = &Код
		|	И РегистрацииВНалоговомОргане.КПП = &КПП
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_РегистрацииВНалоговомОргане.Ссылка
		|ИЗ
		|	ВТ_Организации КАК ВТ_Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацииВНалоговомОргане КАК ВТ_РегистрацииВНалоговомОргане
		|		ПО ВТ_Организации.Организация = ВТ_РегистрацииВНалоговомОргане.Владелец";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
		
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			НалоговыйОрган = Выборка.Ссылка;
		
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НалоговыйОрган;
	
КонецФункции // ПолучитьРегистрациюВНалоговомОрганеПоОрганизации()

#КонецОбласти

Функция ПустаяСправкаРасчет(ИмяРегистраСведений) Экспорт
	
	СправкаРасчет = РегистрыСведений[ИмяРегистраСведений].СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	СправкаРасчет.Колонки.Удалить("Регистратор");
	СправкаРасчет.Колонки.Удалить("Активность");
	СправкаРасчет.Колонки.Удалить("НомерСтроки");
	
	Возврат СправкаРасчет;
	
КонецФункции

#КонецОбласти
