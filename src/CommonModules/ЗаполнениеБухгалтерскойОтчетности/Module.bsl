////////////////////////////////////////////////////////////////////////////////
// ЗАПОЛНЕНИЕ БУХГАЛТЕРСКОЙ ОТЧЕТНОСТИ.
// Модуль предназначен для заполнения регламентированного отчета
// "Бухгалтерская отчетность организаций" и финансовой отчетности в банки.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПолучитьСведенияОПоказателяхОтчетаБухОтчетность(ИДРедакцииОтчета, ПоказателиОтчета, ПараметрыОтчета) Экспорт
	
	Если ИДРедакцииОтчета = "ФормаОтчета2011Кв4" Тогда
		ЗаполнениеБухгалтерскойОтчетностиПоказатели.ДобавитьПоказателиБО_ФормаОтчета2011Кв4(
			ПоказателиОтчета, ПараметрыОтчета);
		
	ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2019Кв1" Тогда
		ЗаполнениеБухгалтерскойОтчетностиПоказатели.ДобавитьПоказателиБО_ФормаОтчета2019Кв1(
			ПоказателиОтчета, ПараметрыОтчета);
	ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2025Кв1" Тогда
		ЗаполнениеБухгалтерскойОтчетностиПоказатели.ДобавитьПоказателиБО_ФормаОтчета2025Кв1(
			ПоказателиОтчета, ПараметрыОтчета);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаБухОтчетностьМП(ИДРедакцииОтчета, ПоказателиОтчета, ПараметрыОтчета) Экспорт
	
	Если ИДРедакцииОтчета = "ФормаОтчета2012Кв4" Тогда
		ЗаполнениеБухгалтерскойОтчетностиПоказатели.ДобавитьПоказателиБО_МПФормаОтчета2012Кв4(ПоказателиОтчета, ПараметрыОтчета);
		
	ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2012Кв4_2" Тогда
		ЗаполнениеБухгалтерскойОтчетностиПоказатели.ДобавитьПоказателиБО_МПФормаОтчета2012Кв4_2(ПоказателиОтчета, ПараметрыОтчета);
		
	ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2015Кв4" Тогда
		ЗаполнениеБухгалтерскойОтчетностиПоказатели.ДобавитьПоказателиБО_МПФормаОтчета2015Кв4(ПоказателиОтчета, ПараметрыОтчета);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаБухОтчетностьСОНКО(ИДРедакцииОтчета, ПоказателиОтчета, ПараметрыОтчета) Экспорт
	
	Если ИДРедакцииОтчета = "ФормаОтчета2012Кв4" Тогда
		
		ЗаполнениеБухгалтерскойОтчетностиПоказатели.ДобавитьПоказателиБО_СОНКОФормаОтчета2012Кв4(ПоказателиОтчета, ПараметрыОтчета);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьБухОтчетность(ИДРедакцииОтчета, ПараметрыОтчета, Контейнер) Экспорт
	
	Если ИДРедакцииОтчета = "ФормаОтчета2011Кв4" Тогда
		ЗаполнениеБухгалтерскойОтчетностиОсновная.ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4(ПараметрыОтчета, Контейнер);
		
	ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2019Кв1" Тогда
		
		Если НастраиваемаяБухгалтерскаяОтчетность.ИспользуетсяНастраиваемаяОтчетность(ПараметрыОтчета) Тогда
			НастраиваемаяБухгалтерскаяОтчетность.ЗаполнитьОтчетБухОтчетностьФормаОтчета2019Кв1(ПараметрыОтчета, Контейнер);
		Иначе
			ЗаполнениеБухгалтерскойОтчетностиОсновная.ЗаполнитьОтчетБухОтчетностьФормаОтчета2019Кв1(ПараметрыОтчета, Контейнер);
		КонецЕсли;
		
	ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2025Кв1" Тогда
		
		Если НастраиваемаяБухгалтерскаяОтчетность.ИспользуетсяНастраиваемаяОтчетность(ПараметрыОтчета) Тогда
			НастраиваемаяБухгалтерскаяОтчетность.ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1(ПараметрыОтчета, Контейнер);
		Иначе
			ЗаполнениеБухгалтерскойОтчетности2025Основная.ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1(ПараметрыОтчета, Контейнер);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьБухОтчетностьМП(ИДРедакцииОтчета, ПараметрыОтчета, Контейнер) Экспорт
	
	Если ИДРедакцииОтчета = "ФормаОтчета2012Кв4" Тогда
		ЗаполнениеБухгалтерскойОтчетностиУпрощенная.ЗаполнитьОтчетБухОтчетностьМПФормаОтчета2012Кв4(ПараметрыОтчета, Контейнер);
		
	ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2012Кв4_2" Тогда
		ЗаполнениеБухгалтерскойОтчетностиУпрощенная.ЗаполнитьОтчетБухОтчетностьМПФормаОтчета2012Кв4_2(ПараметрыОтчета, Контейнер);
		
	ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2015Кв4" Тогда
		ЗаполнениеБухгалтерскойОтчетностиУпрощенная.ЗаполнитьОтчетБухОтчетностьМПФормаОтчета2015Кв4(ПараметрыОтчета, Контейнер);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьБухОтчетностьСОНКО(ИДРедакцииОтчета, ПараметрыОтчета, Контейнер) Экспорт
	
	Если ИДРедакцииОтчета = "ФормаОтчета2012Кв4" Тогда
		
		ЗаполнениеБухгалтерскойОтчетностиУпрощенная.ЗаполнитьОтчетБухОтчетностьСОНКОФормаОтчета2012Кв4(ПараметрыОтчета, Контейнер);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область УниверсальныеПроцедурыИФункцииАвтозаполнения

Функция ОписаниеПериода(НачалоПериода, КонецПериода) Экспорт
	
	Если НачалоМесяца(КонецПериода) = НачалоПериода Тогда
		Результат = Формат(КонецПериода, "ДФ = 'ММММ гггг'") + "г.";
	Иначе
		Результат = Формат(НачалоПериода, "ДФ = 'ММММ гггг'") + " - " + Формат(КонецПериода, "ДФ = 'ММММ гггг'") + "г.";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ОписаниеТиповЧисла(Разрядность, РазрядностьДробнойЧасти = 0) Экспорт
	
	Массив = Новый Массив;
	
	Массив.Добавить(Тип("Число"));
	КвалификаторЧисла = Новый КвалификаторыЧисла(Разрядность, РазрядностьДробнойЧасти);
	
	Возврат Новый ОписаниеТипов(Массив, КвалификаторЧисла);
	
КонецФункции

Функция РасширенныйПериодОтчета(ДатаНачалаПериодаОтчета) Экспорт
	
	Возврат НачалоГода(ДатаНачалаПериодаОтчета) <> НачалоДня(ДатаНачалаПериодаОтчета);
	
КонецФункции

Функция УчетНа70ВедетсяСводно() Экспорт
	
	СчетРасчетовСПерсоналом = Счет("70");
	
	Возврат Не БухгалтерскийУчетВызовСервераПовтИсп.НаСчетеВедетсяУчетПоРаботникам(СчетРасчетовСПерсоналом);
	
КонецФункции

Процедура ОчиститьРазделРасшифровки(ТаблицаРасшифровки, ИмяРаздела) Экспорт
	
	СтрокиРасшифровки = ТаблицаРасшифровки.НайтиСтроки(Новый Структура("ИмяРаздела", ИмяРаздела));
	Для Каждого СтрокаРасшифровки Из СтрокиРасшифровки Цикл
		ТаблицаРасшифровки.Удалить(СтрокаРасшифровки);
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьЗначениеПоказателя(ПоказателиПоРазделам, ИмяРаздела, ИмяПоказателя, ЗначениеПоказателя) Экспорт
	
	НоваяСтрока = ПоказателиПоРазделам.Добавить();
	НоваяСтрока.Раздел = ИмяРаздела;
	НоваяСтрока.Показатель = ИмяПоказателя;
	НоваяСтрока.Сумма = ЗначениеПоказателя;
	
КонецПроцедуры

Функция СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, Счета, Субконто) Экспорт
	
	СчетаДляРасчета = МассивСчетовВИерархииИзСписка(Счета);
	
	СубконтоДляРасчета = Новый Массив;
	ИменаСубконто = СтрРазделить(Субконто, ",", Ложь);
	Для Каждого ИмяСубконто Из ИменаСубконто Цикл
		СубконтоДляРасчета.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные[СокрЛП(ИмяСубконто)]);
	КонецЦикла;
	
	НастройкиПолученияБухитогов.Вставить("Счета", СчетаДляРасчета);
	НастройкиПолученияБухитогов.Вставить("ВидыСубконто", СубконтоДляРасчета);
	
	СальдоИОбороты = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов);
	
	НастройкиПолученияБухитогов.Удалить("Счета");
	НастройкиПолученияБухитогов.Удалить("ВидыСубконто");
	
	Возврат СальдоИОбороты;
	
КонецФункции

#Область НастройкиОСВПоСчету

Функция НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено) Экспорт
	
	Если ОбщиеНастройки.Свойство("ПараметрыРасшифровки") Тогда
		Организация   = ОбщиеНастройки.ПараметрыРасшифровки.Организация;
		НачалоПериода = ОбщиеНастройки.ПараметрыРасшифровки.НачалоПериода;
		КонецПериода  = ОбщиеНастройки.ПараметрыРасшифровки.КонецПериода;
	Иначе
		Организация   = ОбщиеНастройки.Организация;
		НачалоПериода = ОбщиеНастройки.НачалоПериода;
		КонецПериода  = ОбщиеНастройки.КонецПериода;
	КонецЕсли;
	
	НастройкиРасшифровки = Новый Структура;
	НастройкиРасшифровки.Вставить("Организация", Организация);
	
	НастройкиРасшифровки.Вставить("Отчет", Новый Структура);
	НастройкиРасшифровки.Отчет.Вставить("ИмяОтчета", "Отчет.ОборотноСальдоваяВедомостьПоСчету.Форма.ФормаОтчета");
	
	НастройкиРасшифровки.Отчет.Вставить("ПараметрыФормы", Новый Структура);
	НастройкиРасшифровки.Отчет.ПараметрыФормы.Вставить("РежимРасшифровки", Истина);
	НастройкиРасшифровки.Отчет.ПараметрыФормы.Вставить("ВидРасшифровки", 2);
	НастройкиРасшифровки.Отчет.ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	
	НастройкиТиповогоОтчета = Новый Структура;
	НастройкиТиповогоОтчета.Вставить("Отчет", "ОСВ");
	
	НастройкиТиповогоОтчета.Вставить("Организация",   Организация);
	НастройкиТиповогоОтчета.Вставить("НачалоПериода", НачалоПериода);
	НастройкиТиповогоОтчета.Вставить("КонецПериода",  КонецПериода);
	
	Если ТипЗнч(Счет) = Тип("Строка") Тогда
		НастройкиТиповогоОтчета.Вставить("Счет", Счет(Счет));
	Иначе
		НастройкиТиповогоОтчета.Вставить("Счет", Счет);
	КонецЕсли;
	
	НастройкиТиповогоОтчета.Вставить("ОтборПоАналитике", ОтборПоАналитике);
	
	НастройкиТиповогоОтчета.Вставить("Группировка", Неопределено);
	НастройкиТиповогоОтчета.Вставить("РазвернутоеСальдо", Ложь);
	НастройкиТиповогоОтчета.Вставить("ПоСубсчетам", Истина);
	
	НастройкиРасшифровки.Отчет.Вставить("НастройкиТиповогоОтчета", НастройкиТиповогоОтчета);
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Функция НастройкиОСВПоСчетуРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено) Экспорт
	
	НастройкиРасшифровки = НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.РазвернутоеСальдо = Истина;
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Функция НастройкиОСВПоСчетуВПДР(ОбщиеНастройки, Счет, ИмяВидаПрочихДоходовИРасходов) Экспорт
	
	ОтборПоАналитике = Новый Соответствие;
	ОтборПоАналитике.Вставить("Субконто1.ВидПрочихДоходовИРасходов", Перечисления.ВидыПрочихДоходовИРасходов[ИмяВидаПрочихДоходовИРасходов]);
	
	НастройкиРасшифровки = НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено) Экспорт
	
	НастройкиРасшифровки = НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
	ТабличнаяЧастьГруппировка = Новый Массив;
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто1");
	ОписаниеГруппировки.Вставить("Представление", "Контрагенты");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.Группировка = ТабличнаяЧастьГруппировка;
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.РазвернутоеСальдо = Истина;
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговоры(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено) Экспорт
	
	НастройкиРасшифровки = НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
	ТабличнаяЧастьГруппировка = Новый Массив;
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто1");
	ОписаниеГруппировки.Вставить("Представление", "Контрагенты");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто2");
	ОписаниеГруппировки.Вставить("Представление", "Договоры");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.Группировка = ТабличнаяЧастьГруппировка;
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.ПоСубсчетам = Ложь;
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено) Экспорт
	
	НастройкиРасшифровки = НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
	ТабличнаяЧастьГруппировка = Новый Массив;
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто1");
	ОписаниеГруппировки.Вставить("Представление", "Контрагенты");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто2");
	ОписаниеГруппировки.Вставить("Представление", "Договоры");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.Группировка = ТабличнаяЧастьГруппировка;
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.РазвернутоеСальдо = Истина;
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыСКДОтрицательное(ОбщиеНастройки, Счет) Экспорт
	
	ОтборПоАналитике = Новый Соответствие;
	
	МеньшеНуля = Новый Структура("ВидСравненияКомпоновкиДанных, Значение", ВидСравненияКомпоновкиДанных.Меньше, 0);
	ОтборПоАналитике.Вставить("СальдоНаКонецПериода.БУКонечныйОстатокДт", МеньшеНуля);
	
	НастройкиРасшифровки = НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
	ТабличнаяЧастьГруппировка = Новый Массив;
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто1");
	ОписаниеГруппировки.Вставить("Представление", "Контрагенты");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто2");
	ОписаниеГруппировки.Вставить("Представление", "Договоры");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.Группировка = ТабличнаяЧастьГруппировка;
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыСКДПоложительное(ОбщиеНастройки, Счет) Экспорт
	
	ОтборПоАналитике = Новый Соответствие;
	
	БольшеНуля = Новый Структура("ВидСравненияКомпоновкиДанных, Значение", ВидСравненияКомпоновкиДанных.Больше, 0);
	ОтборПоАналитике.Вставить("СальдоНаКонецПериода.БУКонечныйОстатокДт", БольшеНуля);
	
	НастройкиРасшифровки = НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
	ТабличнаяЧастьГруппировка = Новый Массив;
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто1");
	ОписаниеГруппировки.Вставить("Представление", "Контрагенты");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто2");
	ОписаниеГруппировки.Вставить("Представление", "Договоры");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.Группировка = ТабличнаяЧастьГруппировка;
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыСККПоложительное(ОбщиеНастройки, Счет) Экспорт
	
	ОтборПоАналитике = Новый Соответствие;
	
	БольшеНуля = Новый Структура("ВидСравненияКомпоновкиДанных, Значение", ВидСравненияКомпоновкиДанных.Больше, 0);
	ОтборПоАналитике.Вставить("СальдоНаКонецПериода.БУКонечныйОстатокКт", БольшеНуля);
	
	НастройкиРасшифровки = НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
	ТабличнаяЧастьГруппировка = Новый Массив;
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто1");
	ОписаниеГруппировки.Вставить("Представление", "Контрагенты");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто2");
	ОписаниеГруппировки.Вставить("Представление", "Договоры");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.Группировка = ТабличнаяЧастьГруппировка;
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыСККОтрицательное(ОбщиеНастройки, Счет) Экспорт
	
	ОтборПоАналитике = Новый Соответствие;
	
	МеньшеНуля = Новый Структура("ВидСравненияКомпоновкиДанных, Значение", ВидСравненияКомпоновкиДанных.Меньше, 0);
	ОтборПоАналитике.Вставить("СальдоНаКонецПериода.БУКонечныйОстатокКт", МеньшеНуля);
	
	НастройкиРасшифровки = НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
	ТабличнаяЧастьГруппировка = Новый Массив;
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто1");
	ОписаниеГруппировки.Вставить("Представление", "Контрагенты");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто2");
	ОписаниеГруппировки.Вставить("Представление", "Договоры");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.Группировка = ТабличнаяЧастьГруппировка;
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Функция НастройкиОСВПоСчетуРаботникиРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено) Экспорт
	
	НастройкиРасшифровки = НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
	ТабличнаяЧастьГруппировка = Новый Массив;
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто1");
	ОписаниеГруппировки.Вставить("Представление", "Работники организаций");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.Группировка = ТабличнаяЧастьГруппировка;
	
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.РазвернутоеСальдо = Истина;
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Функция НастройкиОСВПоСчетуВидыПлатежейРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено) Экспорт
	
	НастройкиРасшифровки = НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
	ТабличнаяЧастьГруппировка = Новый Массив;
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто1");
	ОписаниеГруппировки.Вставить("Представление", "Виды платежей в бюджет (фонды)");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.Группировка = ТабличнаяЧастьГруппировка;
	
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.РазвернутоеСальдо = Истина;
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Функция НастройкиОСВПоСчетуВидыПлатежейУровниБюджетовРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено) Экспорт
	
	НастройкиРасшифровки = НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
	ТабличнаяЧастьГруппировка = Новый Массив;
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто1");
	ОписаниеГруппировки.Вставить("Представление", "Виды платежей в бюджет (фонды)");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто2");
	ОписаниеГруппировки.Вставить("Представление", "Уровни бюджетов");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.Группировка = ТабличнаяЧастьГруппировка;
	
	НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.РазвернутоеСальдо = Истина;
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Функция НастройкиОСВПоВидуДДС(ОбщиеНастройки, Счет, ВидДДС) Экспорт
	
	ОтборПоАналитике = Новый Соответствие;
	
	НомерСубконто = 0;
	Для Каждого Субконто Из Счет.ВидыСубконто Цикл
		Если Субконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств Тогда
			НомерСубконто = Субконто.НомерСтроки;
			ОтборПоАналитике.Вставить("Субконто" + НомерСубконто + ".ВидДвиженияДенежныхСредств", ВидДДС);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	НастройкиРасшифровки = НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
	Если НомерСубконто > 0 Тогда
		ТабличнаяЧастьГруппировка = Новый Массив;
		
		ОписаниеГруппировки = Новый Структура;
		ОписаниеГруппировки.Вставить("Использование", Истина);
		ОписаниеГруппировки.Вставить("Поле", "Субконто" + НомерСубконто);
		ОписаниеГруппировки.Вставить("Представление", "Статьи движения денежных средств");
		ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
		ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
		
		НастройкиРасшифровки.Отчет.НастройкиТиповогоОтчета.Группировка = ТабличнаяЧастьГруппировка;
		
	КонецЕсли;
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

#КонецОбласти

#Область НастройкиАнализаСчета

Функция НастройкиАнализаСчета(ОбщиеНастройки, Счет, КорСчет, ОтборПоАналитике = Неопределено) Экспорт
	
	Если ОбщиеНастройки.Свойство("ПараметрыРасшифровки") Тогда
		Организация   = ОбщиеНастройки.ПараметрыРасшифровки.Организация;
		НачалоПериода = ОбщиеНастройки.ПараметрыРасшифровки.НачалоПериода;
		КонецПериода  = ОбщиеНастройки.ПараметрыРасшифровки.КонецПериода;
	Иначе
		Организация   = ОбщиеНастройки.Организация;
		НачалоПериода = ОбщиеНастройки.НачалоПериода;
		КонецПериода  = ОбщиеНастройки.КонецПериода;
	КонецЕсли;
	
	НастройкиРасшифровки = Новый Структура;
	НастройкиРасшифровки.Вставить("Организация", Организация);
	
	НастройкиРасшифровки.Вставить("Отчет", Новый Структура);
	НастройкиРасшифровки.Отчет.Вставить("ИмяОтчета", "Отчет.АнализСчета.Форма.ФормаОтчета");
	
	НастройкиРасшифровки.Отчет.Вставить("ПараметрыФормы", Новый Структура);
	НастройкиРасшифровки.Отчет.ПараметрыФормы.Вставить("РежимРасшифровки", Истина);
	НастройкиРасшифровки.Отчет.ПараметрыФормы.Вставить("ВидРасшифровки", 2);
	НастройкиРасшифровки.Отчет.ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	
	НастройкиТиповогоОтчета = Новый Структура;
	НастройкиТиповогоОтчета.Вставить("Отчет", "Анализ");
	
	НастройкиТиповогоОтчета.Вставить("Организация",   Организация);
	НастройкиТиповогоОтчета.Вставить("НачалоПериода", НачалоПериода);
	НастройкиТиповогоОтчета.Вставить("КонецПериода",  КонецПериода);

	Если ТипЗнч(Счет) = Тип("Строка") Тогда
		НастройкиТиповогоОтчета.Вставить("Счет", Счет(Счет));
	Иначе
		НастройкиТиповогоОтчета.Вставить("Счет", Счет);
	КонецЕсли;
	НастройкиТиповогоОтчета.Вставить("КорСчет", КорСчет);
	
	НастройкиТиповогоОтчета.Вставить("ОтборПоАналитике", ОтборПоАналитике);
	
	НастройкиТиповогоОтчета.Вставить("ПоСубсчетам", НЕ ЗначениеЗаполнено(КорСчет));
	
	НастройкиРасшифровки.Отчет.Вставить("НастройкиТиповогоОтчета", НастройкиТиповогоОтчета);
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Функция НастройкиАнализаСчетаВПДР(ОбщиеНастройки, Счет, КорСчет, ИмяВидаПрочихДоходовИРасходов) Экспорт
	
	ОтборПоАналитике = Новый Соответствие;
	ОтборПоАналитике.Вставить("Субконто1.ВидПрочихДоходовИРасходов", Перечисления.ВидыПрочихДоходовИРасходов[ИмяВидаПрочихДоходовИРасходов]);
	
	НастройкиРасшифровки = НастройкиАнализаСчета(ОбщиеНастройки, Счет, КорСчет, ОтборПоАналитике);
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

#КонецОбласти

Функция ОписаниеОбъектовВПДР(ИмяВидаПрочихДоходовИРасходов) Экспорт
	
	Возврат "/объекты со значением реквизита ""Вид прочих доходов и расходов"" - """ + Строка(Перечисления.ВидыПрочихДоходовИРасходов[ИмяВидаПрочихДоходовИРасходов]) + """/";
	
КонецФункции

Функция СчетаИзСписка(Знач СписокСчетов, ИмяСпискаСчетов = Неопределено) Экспорт
	
	МассивСчетов = Новый Массив;
	
	Разделитель = ",";
	
	Если ТипЗнч(СписокСчетов) = Тип("Структура") Тогда
		ЭлементСтруктуры = Неопределено;
		Если НЕ СписокСчетов.Свойство(ИмяСпискаСчетов, ЭлементСтруктуры) Тогда
			ЭлементСтруктуры = "";
		КонецЕсли;
		СписокСчетов = ЭлементСтруктуры;
	КонецЕсли;
	
	Пока НЕ ПустаяСтрока(СписокСчетов) Цикл
		ПозицияРазделителя = СтрНайти(СписокСчетов, Разделитель);
		
		Если ПозицияРазделителя > 0 Тогда
			КодСчета = СокрЛП(Лев(СписокСчетов, ПозицияРазделителя - 1));
			СписокСчетов = Сред(СписокСчетов, ПозицияРазделителя + 1);
		Иначе
			КодСчета = СокрЛП(СписокСчетов);
			СписокСчетов = "";
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(КодСчета) Тогда
			МассивСчетов.Добавить(Счет(КодСчета));
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивСчетов;
	
КонецФункции

Функция МассивСчетовВИерархииИзСписка(Знач СписокСчетов, ИмяСпискаСчетов = Неопределено) Экспорт
	
	Счета = СчетаИзСписка(СписокСчетов, ИмяСпискаСчетов);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счета", Счета);
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Хозрасчетный.Ссылка КАК Счет
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счета)";
	
	Субсчета = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
	Возврат Субсчета;
	
КонецФункции

Процедура ДобавитьЗначениеВОтбор(Отбор, ЛевоеЗначение, ВидСравнения, ПравоеЗначение) Экспорт
	
	ЭлементОтбора = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ЭлементОтбора.ЛевоеЗначение    = ЛевоеЗначение;
	ЭлементОтбора.ВидСравнения     = ВидСравнения;
	ЭлементОтбора.ПравоеЗначение   = ПравоеЗначение;
	ЭлементОтбора.Использование    = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	
КонецПроцедуры

Функция ПривестиКДате(Период) Экспорт
	
	Если ТипЗнч(Период) = Тип("МоментВремениСУточнениемПериода") Тогда
		Возврат Период.Дата;
	Иначе
		Возврат Период;
	КонецЕсли;
	
КонецФункции

Функция ПрименяетсяФСБУ25(Организация, КонецПериода) Экспорт
	
	ПрименяетсяФСБУ25 = Ложь;
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ОпределитьУчетнуюПолитикуПрименяетсяФСБУ25(
		ПрименяетсяФСБУ25, Организация, КонецПериода);
	
	Возврат ПрименяетсяФСБУ25;
	
КонецФункции

Функция ПрименяетсяУСН(Организация, КонецПериода) Экспорт
	
	ПрименяетсяУСН = Ложь;
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ОпределитьУчетнуюПолитикуПрименяетсяУСН(
		ПрименяетсяУСН, Организация, КонецПериода);
	
	Возврат ПрименяетсяУСН;
	
КонецФункции

Функция ПрименяетсяНПД(Организация, КонецПериода) Экспорт
	
	ПрименяетсяНПД = Ложь;
	
	Возврат ПрименяетсяНПД;
	
КонецФункции

#КонецОбласти

#Область ОберткиПроцедурИФункций

Функция Счет(УсловныйКод)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.Счет(УсловныйКод);
	
КонецФункции

#КонецОбласти

#КонецОбласти
