#Область СлужебныйПрограммныйИнтерфейс

// Извлекает данные печати из параметров печати.
// Отобранные данные печати помещаются в параметры печати при рассылке документов, 
// если при подключении команды рассылки для печатной формы был указан обработчик получения данных. 
// 
// Параметры:
// 	ПараметрыПечати - Структура - одноименный параметр процедуры Печать.
// Возвращаемое значение:
// 	Массив - отобранные строки данных печати таблицы значений, формируемой обработчиком получения данных.
//
Функция ДанныеПечати(ПараметрыПечати) Экспорт
	
	Если ПараметрыПечати = Неопределено Или Не ПараметрыПечати.Свойство("ДанныеПечати") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(ПараметрыПечати.ДанныеПечати) = Тип("Строка") Тогда
		Возврат ПолучитьИзВременногоХранилища(ПараметрыПечати.ДанныеПечати);
	КонецЕсли;
	
	Возврат ПараметрыПечати.ДанныеПечати;
	
КонецФункции

// Конструктор перечисления значений для поля Важность, 
// см. ПодключаемыеКомандыПереопределяемый.ПриОпределенииКомандПодключенныхКОбъекту.
// 
// Возвращаемое значение:
// 	Структура - Описание:
//   * Важное - Строка -
//   * Обычное - Строка -
//   * СмТакже - Строка -
//
Функция ВажностиКомандыРассылки() Экспорт
	Возврат Новый Структура("Важное, Обычное, СмТакже", "Важное", "Обычное", "СмТакже");
КонецФункции

// Конструктор перечисления значений для поля Назначение, 
// см. ПодключаемыеКомандыПереопределяемый.ПриОпределенииКомандПодключенныхКОбъекту.
// 
// Возвращаемое значение:
// 	Структура - Описание:
//   * ДляСписка - Строка -
//   * ДляОбъекта - Строка -
//
Функция ВидыНазначенияКомандыРассылки() Экспорт
	Возврат Новый Структура("ДляСписка, ДляОбъекта", "ДляСписка", "ДляОбъекта");
КонецФункции

// Конструктор перечисления значений для поля РежимЗаписи, 
// см. ПодключаемыеКомандыПереопределяемый.ПриОпределенииКомандПодключенныхКОбъекту.
// 
// Возвращаемое значение:
// 	Структура - Описание:
//   * НеЗаписывать - Строка -
//   * ЗаписыватьТолькоНовые - Строка -
//   * Записывать - Строка -
//   * Проводить - Строка -
//
Функция РежимыЗаписиОбъектаПередВыполнениемКомандыРассылки() Экспорт
	Режимы = Новый Структура;
	Режимы.Вставить("НеЗаписывать", "НеЗаписывать");
	Режимы.Вставить("ЗаписыватьТолькоНовые", "ЗаписыватьТолькоНовые");
	Режимы.Вставить("Записывать", "Записывать");
	Режимы.Вставить("Проводить", "Проводить");
	Возврат Режимы;
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// См. ПодключаемыеКомандыПереопределяемый.ПриОпределенииВидовПодключаемыхКоманд.
Процедура ПриОпределенииВидовПодключаемыхКоманд(ВидыПодключаемыхКоманд) Экспорт

	Вид = ВидыПодключаемыхКоманд.Добавить();
	Вид.Имя         = ВидПодключаемойКоманды();
	Вид.ИмяПодменю  = "ПодменюРассылкаДокументов";
	Вид.Заголовок   = НСтр("ru = 'Рассылка документов';
							|en = 'Documents distribution'");
	Вид.Картинка    = БиблиотекаКартинок.ОтправитьЭлектронноеПисьмо;
	Вид.Отображение = ОтображениеКнопки.КартинкаИТекст;
	Вид.Порядок     = 45;
	
КонецПроцедуры

// См. ПодключаемыеКомандыПереопределяемый.ПриОпределенииКомандПодключенныхКОбъекту.
Процедура ПриОпределенииКомандПодключенныхКОбъекту(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды) Экспорт
	
	Если Не ДоступнаОтправкаПисем() Тогда
		Возврат;
	КонецЕсли;
	
	КомандыРассылки = КомандыРассылкиДокументов();
	Для Каждого КомандаРассылки Из КомандыРассылки Цикл
		ПодключаемаяКоманда = Команды.Добавить();
		ПодключаемаяКоманда.Вид = ВидПодключаемойКоманды();
		ПодключаемаяКоманда.Представление = ?(Не ПустаяСтрока(КомандаРассылки.Представление), 
			КомандаРассылки.Представление, НСтр("ru = 'Рассылка сотрудникам';
												|en = 'Distribution to employees'"));
		ПодключаемаяКоманда.Важность = КомандаРассылки.Важность;
		ПодключаемаяКоманда.Порядок = КомандаРассылки.Порядок;
		ПодключаемаяКоманда.СочетаниеКлавиш = КомандаРассылки.СочетаниеКлавиш;
		ПодключаемаяКоманда.Картинка = КомандаРассылки.Картинка;
		ПодключаемаяКоманда.ТолькоВоВсехДействиях = КомандаРассылки.ТолькоВоВсехДействиях;
		ПодключаемаяКоманда.ТипПараметра = КомандаРассылки.ТипПараметра;
		ПодключаемаяКоманда.Назначение = КомандаРассылки.Назначение;
		ПодключаемаяКоманда.ФункциональныеОпции = КомандаРассылки.ФункциональныеОпции;
		ПодключаемаяКоманда.УсловияВидимости = ОбщегоНазначения.СкопироватьРекурсивно(КомандаРассылки.УсловияВидимости);
		ПодключаемаяКоманда.ИзменяетВыбранныеОбъекты = Ложь;
		ПодключаемаяКоманда.МножественныйВыбор = Истина;
		Если ЗначениеЗаполнено(КомандаРассылки.РежимЗаписи) Тогда
			ПодключаемаяКоманда.РежимЗаписи = КомандаРассылки.РежимЗаписи;
		КонецЕсли;
		ПодключаемаяКоманда.ТребуетсяРаботаСФайлами = Ложь;
		ПодключаемаяКоманда.ИзменяетВыбранныеОбъекты = Ложь;
		ПодключаемаяКоманда.Менеджер = "Обработки." + Метаданные.Обработки.РассылкаПечатныхФорм.Имя;
		ПодключаемаяКоманда.ИмяФормы = "Обработка." + Метаданные.Обработки.РассылкаПечатныхФорм.Имя + ".Форма.РассылкаПечатныхФорм";
		ПодключаемаяКоманда.ИмяПараметраФормы = "РассылаемыеДокументы";
		ПодключаемаяКоманда.ПараметрыФормы = ПараметрыФормыРассылки(КомандаРассылки);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

// Результаты отправки сообщений.
// 
// Возвращаемое значение:
// 	ТаблицаЗначений - Описание:
// 	* ФизическоеЛицо - СправочникСсылка.ФизическиеЛица - физическое лицо рассылаемого документа.
// 	* Получатель - СправочникСсылка.ФизическиеЛица - получатель сообщения.
// 	* РассылаемыйДокумент - ОпределяемыйТип.РассылаемыйДокумент - отправляемый документ.
// 	* Результат - Булево, Структура - см. РезультатыРассылкиДокументов.НовыйРезультатОтправки.
//
Функция ТаблицаРезультатовОтправки() Экспорт
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Получатель", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("РассылаемыйДокумент", Метаданные.ОпределяемыеТипы.РассылаемыйДокумент.Тип);
	Таблица.Колонки.Добавить("Результат");
	Возврат Таблица;
КонецФункции

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать РассылкаДокументовКлиентСервер.НоваяПечатнаяФорма.
//
Функция НоваяПечатнаяФорма() Экспорт
	Возврат РассылкаДокументовКлиентСервер.НоваяПечатнаяФорма();
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Конструктор таблицы команд рассылки.
// 
// Возвращаемое значение:
// 	ТаблицаЗначений - Описание:
//   * ТипПараметра - ОписаниеТипов - описание типа рассылаемого документа.
//   * Представление - Строка - заголовок команды.
//   * ЗаголовокФормы - Строка - заголовок формы рассылки, если не задано, заголовок будет сформирован автоматически.
//   * ПечатныеФормы - Структура, Массив - рассылаемые печатные формы, см. НоваяПечатнаяФорма().
//   * ТемаПисьма - Строка - тема сопроводительного письма по умолчанию.
//   * ТекстПисьма - Строка - текст сопроводительного письма по умолчанию.
// 
// Стандартные свойства подключаемых команд, 
// см. ПодключаемыеКомандыПереопределяемый.ПриОпределенииКомандПодключенныхКОбъекту:
// * Важность - Строка - для заполнения следует использовать ВажностиКомандыРассылки().
// * Порядок - Число - 
// * СочетаниеКлавиш - СочетаниеКлавиш - 
// * Картинка - Картинка - 
// * ТолькоВоВсехДействиях - Булево - 
// * ВидимостьВФормах - Строка - 
// * Назначение - Строка - для заполнения следует использовать ВидыНазначенияКомандыРассылки().
// * ФункциональныеОпции - Строка - 
// * УсловияВидимости - Массив - 
// * РежимЗаписи - Строка - для заполнения следует использовать РежимыЗаписиОбъектаПередВыполнениемКомандыРассылки().
Функция НоваяТаблицаКомандРассылкиДокументов()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("ТипПараметра", Новый ОписаниеТипов("ОписаниеТипов"));
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Важность", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число"));
	Команды.Колонки.Добавить("СочетаниеКлавиш", Новый ОписаниеТипов("СочетаниеКлавиш"));
	Команды.Колонки.Добавить("Картинка", Новый ОписаниеТипов("Картинка"));
	Команды.Колонки.Добавить("ТолькоВоВсехДействиях", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("ВидимостьВФормах", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Назначение", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ФункциональныеОпции", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("УсловияВидимости", Новый ОписаниеТипов("Массив"));
	Команды.Колонки.Добавить("РежимЗаписи", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ЗаголовокФормы", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПечатныеФормы", Новый ОписаниеТипов("Структура, Массив"));
	Команды.Колонки.Добавить("ТемаПисьма", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ТекстПисьма", Новый ОписаниеТипов("Строка"));
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.РассылкаДокументов") Тогда
		МодульРассылкаПоШаблонам = ОбщегоНазначения.ОбщийМодуль("РассылкаПоШаблонам");
		МодульРассылкаПоШаблонам.ПриСозданииТаблицыКомандРассылкиДокументов(Команды);
	КонецЕсли;
	
	Возврат Команды;
	
КонецФункции

Функция КомандыРассылкиДокументов()
	
	Команды = НоваяТаблицаКомандРассылкиДокументов();
	РассылкаДокументовИнтеграцияПодсистем.ПриОпределенииКомандРассылкиДокументов(Команды);
	ПроверитьПодключениеКомандРассылкиДокументов(Команды);
	Возврат Команды;
	
КонецФункции

Функция ПараметрыФормыРассылки(КомандаРассылки)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗаголовокФормы", КомандаРассылки.ЗаголовокФормы);
	ПараметрыФормы.Вставить("ПечатныеФормы", КомандаРассылки.ПечатныеФормы);
	ПараметрыФормы.Вставить("ТемаПисьма", КомандаРассылки.ТемаПисьма);
	ПараметрыФормы.Вставить("ТекстПисьма", КомандаРассылки.ТекстПисьма);
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.РассылкаДокументов") Тогда
		МодульРассылкаПоШаблонам = ОбщегоНазначения.ОбщийМодуль("РассылкаПоШаблонам");
		МодульРассылкаПоШаблонам.ПриЗаполненииПараметровФормыПоКомандеРассылки(ПараметрыФормы, КомандаРассылки);
	КонецЕсли;
	Возврат ПараметрыФормы;
КонецФункции

Функция ВидПодключаемойКоманды()
	Возврат "РассылкаДокументов";
КонецФункции

Функция ДоступнаОтправкаПисем() Экспорт

	ДоступнаОтправкаПисем = Ложь;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями") Тогда
		МодульРаботаСПочтовымиСообщениями = ОбщегоНазначения.ОбщийМодуль("РаботаСПочтовымиСообщениями");
		ДоступнаОтправкаПисем = МодульРаботаСПочтовымиСообщениями.ДоступнаОтправкаПисем();
	КонецЕсли;
	Возврат ДоступнаОтправкаПисем;
	
КонецФункции

Процедура ПроверитьПодключениеКомандРассылкиДокументов(Команды)
	
	Для Каждого КомандаРассылки Из Команды Цикл
		Попытка
			ОписаниеДокумента = ЗарплатаКадрыСоставДокументов.ОписаниеОбъектаПоСсылке(КомандаРассылки.ТипПараметра.ПривестиЗначение());
		Исключение
			ОбщегоНазначенияКлиентСервер.Проверить(Истина, 
				СтрШаблон(НСтр("ru = 'Не удалось получить описание состава документа «%1», возможно, документ не подключен к механизму состава документов.
							   |Для работы рассылки документ необходимо подключить к механизму состава документов.';
							   |en = 'Cannot get document ""%1"" contents description. The document may not be connected to the document contents feature.
							   |The document must be connected to the document contents feature to use the distribution.'"), 
						КомандаРассылки.ТипПараметра), "РассылкаДокументов");
		КонецПопытки;
		Если ОписаниеДокумента.ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента Тогда
			Для Каждого ПечатнаяФорма Из ПечатныеФормыКомандыРассылки(КомандаРассылки.ПечатныеФормы) Цикл
				ОбщегоНазначенияКлиентСервер.Проверить(Не ПустаяСтрока(ПечатнаяФорма.ОбработчикПолученияДанных), 
					СтрШаблон(НСтр("ru = 'Не задан обработчик получения данных для печатной формы %1 документа «%2».
								   |Для документов с несколькими сотрудниками необходимо добавить обработчик получения данных печати.';
								   |en = 'The data receiving handler is not specified for print form %1 of the document ""%2"".
								   |For documents with multiple employees, add a print data receiving handler.'"), 
							ПечатнаяФорма.Идентификатор, КомандаРассылки.ТипПараметра), "РассылкаДокументов");
			КонецЦикла;
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.Проверить(
			ПустаяСтрока(КомандаРассылки.ТемаПисьма) = ПустаяСтрока(КомандаРассылки.ТекстПисьма),
			СтрШаблон(НСтр("ru = 'Тема и текст письма используются совместно, заполнение только одного поля не допускается.
						   |См. команду рассылки для документа «%1».';
						   |en = 'The mail subject and body are used together; filling in one field only is not available.
						   |See the distribution command for document ""%1"".'"), 
				КомандаРассылки.ТипПараметра), 
			"РассылкаДокументов");
	КонецЦикла;
	
КонецПроцедуры

Функция ПечатныеФормыКомандыРассылки(ПечатныеФормы) Экспорт
	
	Если ТипЗнч(ПечатныеФормы) <> Тип("Массив") Тогда
		Возврат ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПечатныеФормы);
	КонецЕсли;

	Возврат ПечатныеФормы;

КонецФункции

#КонецОбласти