
#Область СлужебныйПрограммныйИнтерфейс

// Получает информацию о виде расчета резерва.
Функция ПолучитьИнформациюОВидеРасчетаРезерва(ВидРасчета) Экспорт
	
	ВидыРасчетаИнфо = РезервыПоОплатеТрудаРасширенный.ИнформацияОВидахРасчетаРезервов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВидРасчета));
	
	ВидРасчетаИнфо = ВидыРасчетаИнфо[ВидРасчета];
	
	Если ВидРасчетаИнфо = Неопределено Тогда 
		ЗапрашиваемыеДанныеСтрока = РезервыПоОплатеТрудаРасширенный.ЗапрашиваемыеДанныеВидаРасчетаРезерва();
		ВидРасчетаИнфо = Новый Структура(ЗапрашиваемыеДанныеСтрока);
		ВидРасчетаИнфо.Вставить("Показатели", Новый Массив);
	КонецЕсли;
	
	Возврат ВидРасчетаИнфо;
	
КонецФункции

// Получает информацию о виде расчета.
Функция ПолучитьИнформациюОВидеРасчета(ВидОперации, СтрокаКоллекции, ОписаниеТаблицы) Экспорт
	
	Если ВидОперации = Перечисления.ВидыОперацийРезервовПоОплатеТруда.Инвентаризация Тогда
		ИнфоОВидеРасчета = ЗарплатаКадрыРасширенныйПовтИсп.ПолучитьИнформациюОВидеРасчета(
					СтрокаКоллекции[ОписаниеТаблицы.ИмяРеквизитаВидРасчета]);
	Иначе
		ИнфоОВидеРасчета = ПолучитьИнформациюОВидеРасчетаРезерва(
			СтрокаКоллекции[ОписаниеТаблицы.ИмяРеквизитаВидРасчетаРезерва]);
	КонецЕсли;
	
	Возврат ИнфоОВидеРасчета;
	
КонецФункции

// Находит элемент справочника «Показатели расчета зарплаты» по значению реквизита Идентификатор.
//
// Параметры:
//	- Идентификатор - строка с указанием идентификатора показателя.
//	- УчитыватьРегистр - булево, по умолчанию Ложь, если Истина, то соответствие будет регистрозависимым.
//
// Возвращаемое значение - ссылка на показатель или Неопределено, если показатель не найден.
//
Функция ПоказательПоИдентификатору(Идентификатор, УчитыватьРегистр = Ложь) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПоказателиРасчетаРезервовПоОплатеТруда.Ссылка
	|ИЗ
	|	Справочник.ПоказателиРасчетаРезервовПоОплатеТруда КАК ПоказателиРасчетаРезервовПоОплатеТруда
	|ГДЕ
	|	(ПоказателиРасчетаРезервовПоОплатеТруда.Идентификатор = &Идентификатор
	|			ИЛИ ПоказателиРасчетаРезервовПоОплатеТруда.ИдентификаторСлужебный = &ИдентификаторСлужебный)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	Запрос.УстановитьПараметр("ИдентификаторСлужебный", ВРег(Идентификатор));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Получает информацию об одном показателе расчета зарплаты
// с использованием метода 
// ЗарплатаКадрыРасширенный.СведенияОПоказателяхРасчетаЗарплаты.
//
// Параметры:
//	- Показатель - показатель расчета зарплаты.
//
Функция СведенияОПоказателеРасчетаРезервов(Показатель) Экспорт
	
	Если Не ЗначениеЗаполнено(Показатель) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат РезервыПоОплатеТрудаРасширенный.СведенияОПоказателяхРасчетаРезервов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Показатель))[Показатель];
	
КонецФункции

// Получает информацию о виде расчета для вида расчета резерва
// Параметры:
//	- ВидРасчетаРезерва - СправочникСсылка.ВидыРасчетовРезервовПоОплатеТруда
//
Функция НачислениеВидаРасчетаРезерва(ВидРасчетаРезерва) Экспорт
	
	Возврат РезервыПоОплатеТрудаРасширенный.НачислениеВидаРасчетаРезерва(ВидРасчетаРезерва);
	
КонецФункции

#КонецОбласти
