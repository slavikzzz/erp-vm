////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Прекращение договора аренды".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
// 
// Параметры:
//  Объект - ДокументОбъект.ПрекращениеДоговораАренды - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения - Строка - 
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	//++ Локализация
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		ЗаполнитьНаОснованииИнвентаризацииОСПриВводеНаОсновании(Объект, ДанныеЗаполнения);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Механизмы

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	МеханизмыДокумента.Добавить("ИмущественныеНалоги");
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Проведение

Функция ТекстЗапросаТаблицаПервоначальныеСведенияОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ПервоначальныеСведенияОС.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ КАК ДатаВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ КАК ДокументВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаБУ,
	|
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаНУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаНУ,
	|
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаУУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаУУ
	|ИЗ
	|	втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПроводкиРегУчета

Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	ВнеоборотныеАктивыЛокализация.ТекстОтраженияВРеглУчетеСписанияОС(СписокЗапросов);
	ВнеоборотныеАктивыЛокализация.ТекстОтраженияВРеглУчетеЗакрытияСчетовПоАренде(СписокЗапросов);

	#Область СписаниеОстаточнойСтоимостиОС // Дт <76.07.1> - Кт <01.09>
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание остаточной стоимости ОС (<76.07.1> - Кт <01.09>)
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	СтрокиДт.СуммаРегл КАК Сумма,
	|	СтрокиДт.СуммаУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства) КАК ВидСчетаДт,
	|	СтрокиДт.Договор.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	СтрокиДт.Валюта КАК ВалютаДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоДт1,
	|	СтрокиДт.Договор    КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоДт3,
	|	
	|	СтрокиДт.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	СтрокиКт.СтатьяРасходов КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.СтатьяРасходов КАК СубконтоКт1,
	|	СтрокиКт.АналитикаРасходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	СтрокиКт.СуммаРегл - СтрокиКт.ПостояннаяРазница - СтрокиКт.ВременнаяРазница КАК СуммаНУКт,
	|	СтрокиКт.ПостояннаяРазница КАК СуммаПРКт,
	|	СтрокиКт.ВременнаяРазница КАК СуммаВРКт,
	|	
	|	""Списание остаточной стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиДт
	|		ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|			И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиКт
	|		ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|			И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|			И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|			И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеСтоимостиАрендованныхОС)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область БалансировкаВР_СписаниеОстаточнойСтоимостиОС // Дт <76.А> - Кт <01.09>
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание остаточной стоимости ОС (<76.А> - Кт <01.09>)
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	СтрокиДт.Договор.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	СтрокиДт.Валюта КАК ВалютаДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.БалансировкаВРПоДоговорамАренды) КАК СчетДт,
	|	
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоДт1,
	|	СтрокиДт.Договор    КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	-СтрокиКт.ВременнаяРазница КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	СтрокиКт.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	СтрокиКт.СтатьяРасходов КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.СтатьяРасходов КАК СубконтоКт1,
	|	СтрокиКт.АналитикаРасходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Списание остаточной стоимости ОС, балансировка ВР"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиДт
	|		ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|			И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиКт
	|		ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|			И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|			И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|			И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеСтоимостиАрендованныхОС)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Прочее

Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	
	ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры);

	РеглУчетПроведениеСервер.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- Локализация
	
КонецПроцедуры

Процедура ТаблицыОтложенногоФормированияДвижений(ТекстыЗапроса) Экспорт
	
	//++ Локализация
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Неопределено);
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоОтбору(Объект, Основание) Экспорт

	//++ Локализация
	
	Если Основание.Свойство("ДокументОснование")
		И ТипЗнч(Основание.ДокументОснование) = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		ЗаполнитьНаОснованииИнвентаризацииОСПриВводеНаОсновании(Объект, Основание);
	КонецЕсли; 
	
	//-- Локализация
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

//++ Локализация

#Область Локализация

Процедура ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	&НазваниеДокумента КАК НазваниеДокумента,
	|	&НомерНаПечать КАК НомерДокумента
	|ИЗ
	|	Документ.ПрекращениеДоговораАренды.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра);
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииИнвентаризацииОСПриВводеНаОсновании(Объект, ДанныеЗаполнения)
	
	МассивНомеровСтрок = Неопределено;
	СообщатьОбОшибках = Истина;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Объект.ДокументОснование = ДанныеЗаполнения.ДокументОснование;
		МассивНомеровСтрок = ДанныеЗаполнения.МассивНомеровСтрок;
		СообщатьОбОшибках = ДанныеЗаполнения.СообщатьОбОшибках;
	Иначе
		Объект.ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	ЗаполнитьНаОснованииИнвентаризацииОС(Объект, СообщатьОбОшибках, МассивНомеровСтрок);
	
КонецПроцедуры

// Заполняет документ на основании инвентаризации ОС
//
// Параметры:
//  Объект				 - ДокументОбъект.ПрекращениеДоговораАренды	 - Документ, который надо заполнить.
//  СообщатьОбОшибках	 - Булево						 - Истина, если нужно сообщить об ошибках.
//  МассивНомеровСтрок	 - Массив						 - Строки инвентаризации.
//
Процедура ЗаполнитьНаОснованииИнвентаризацииОС(Объект, СообщатьОбОшибках, МассивНомеровСтрок = Неопределено)

	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	РезультатЗапроса = Документы.ИнвентаризацияОС.ДанныеЗаполненияНаОснованииИнвентаризации24(
							Объект.ДокументОснование,
							Объект.Дата, 
							"ПрекращениеДоговораАренды", 
							МассивНомеровСтрок);
							
	УдалосьЗаполнить = Ложь;
	
	Если РезультатЗапроса.ТабличнаяЧасть <> Неопределено 
		И НЕ РезультатЗапроса.ТабличнаяЧасть.Пустой() Тогда
	
		СписокОС = РезультатЗапроса.ТабличнаяЧасть.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство");
		
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	АрендованныеОС.Договор
		|ИЗ
		|	РегистрСведений.АрендованныеОС.СрезПоследних(&Дата, ОсновноеСредство В (&СписокОС)) КАК АрендованныеОС
		|ГДЕ
		|	АрендованныеОС.Состояние В (
		|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ЗаключенДоговорАренды),
		|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ВАренде))";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Дата", Объект.Дата);
		Запрос.УстановитьПараметр("СписокОС", СписокОС);
		
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
		
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			
			Объект.Договор = Выборка.Договор;
			
			Документы.ПрекращениеДоговораАренды.ЗаполнитьНаОснованииДоговораАренды(Объект);
			УдалосьЗаполнить = (Объект.ОС.Количество() <> 0);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ УдалосьЗаполнить И СообщатьОбОшибках Тогда
		ТекстОшибки = НСтр("ru = 'В документе %1 отсутствуют арендованные ОС, для которых требуется прекратить договор аренды';
							|en = 'The document %1 does not contain leased fixed assets that require termination of the lease agreement'");
		ТекстОшибки = СтрШаблон(ТекстОшибки, Объект.ДокументОснование);
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,, "Объект.ДокументОснование");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

//-- Локализация

#КонецОбласти
