///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Одинаковые процедуры и функции форм ДатыЗапретаИзменения и РедактированиеДатыЗапрета.

Функция ОписанияДатЗапрета() Экспорт
	
	Список = Новый Соответствие;
	Список.Вставить("",                      НСтр("ru = 'Не установлена';
													|en = 'No date'"));
	Список.Вставить("ПроизвольнаяДата",      НСтр("ru = 'Произвольная дата';
													|en = 'Custom date'"));
	Список.Вставить("КонецПрошлогоГода",     НСтр("ru = 'Конец прошлого года';
													|en = 'End of last year'"));
	Список.Вставить("КонецПрошлогоКвартала", НСтр("ru = 'Конец прошлого квартала';
													|en = 'End of last quarter'"));
	Список.Вставить("КонецПрошлогоМесяца",   НСтр("ru = 'Конец прошлого месяца';
													|en = 'End of last month'"));
	Список.Вставить("КонецПрошлойНедели",    НСтр("ru = 'Конец прошлой недели';
													|en = 'End of last week'"));
	Список.Вставить("ПредыдущийДень",        НСтр("ru = 'Предыдущий день';
													|en = 'Previous day'"));
	Список.Вставить("ТекущийДень",           НСтр("ru = 'Текущий день';
													|en = 'Current day'"));
	Список.Вставить("КонецТекущейНедели",    НСтр("ru = 'Конец текущей недели';
													|en = 'End of the current week'"));
	Список.Вставить("КонецТекущегоМесяца",   НСтр("ru = 'Конец текущего месяца';
													|en = 'End of the current month'"));
	Список.Вставить("КонецТекущегоКвартала", НСтр("ru = 'Конец текущего квартала';
													|en = 'End of the current quarter'"));
	Список.Вставить("КонецТекущегоГода",     НСтр("ru = 'Конец текущего года';
													|en = 'End of the current year'"));
	
	Возврат Список;
	
КонецФункции

Процедура УточнитьНастройкуДатыЗапретаПриИзменении(Контекст, РассчитатьДатуЗапрета = Истина) Экспорт
	
	Если Не Контекст.ВыбранРасширенныйРежим Тогда
		Если Контекст.ДатаЗапрета <> '00010101' И Контекст.ОписаниеДатыЗапрета = "" Тогда
			Контекст.ОписаниеДатыЗапрета = "ПроизвольнаяДата";
			
		ИначеЕсли Контекст.ДатаЗапрета = '00010101'
		        И Контекст.ОписаниеДатыЗапрета = "ПроизвольнаяДата"
		        И Не Контекст.ЗаписьСуществует Тогда
			
			Контекст.ОписаниеДатыЗапрета = "";
		КонецЕсли;
	КонецЕсли;
	Если Контекст.ОписаниеДатыЗапрета = "" Тогда
		Контекст.ДатаЗапрета = "00010101";
	КонецЕсли;
	
	Контекст.ТекстНадписиОтносительнойДатыЗапрета = "";
	
	Если Контекст.ОписаниеДатыЗапрета = "ПроизвольнаяДата" Или Контекст.ОписаниеДатыЗапрета = "" Тогда
		Контекст.КоличествоДнейРазрешения = 0;
		Возврат;
	КонецЕсли;
	
	РасчетныеДатыЗапрета = РасчетДатыЗапрета(
		Контекст.ОписаниеДатыЗапрета, Контекст.НачалоДня);
	
	Если РассчитатьДатуЗапрета Тогда
		Контекст.ДатаЗапрета = РасчетныеДатыЗапрета.Текущая;
	КонецЕсли;
	
	ТекстНадписи = "";
	
	Если Контекст.РазрешитьИзменениеДанныхДоДатыЗапрета Тогда
		Сутки = 60*60*24;
		
		СкорректироватьКоличествоДнейРазрешения(
			Контекст.ОписаниеДатыЗапрета, Контекст.КоличествоДнейРазрешения);
		
		СрокРазрешения = РасчетныеДатыЗапрета.Текущая + Контекст.КоличествоДнейРазрешения * Сутки;
		
		Если РасчетныеДатыЗапрета.Текущая > Контекст.НачалоДня Тогда
			
			РасчетныеДатыЗапретаСУчетомДнейУпреждения = РасчетДатыЗапрета(Контекст.ОписаниеДатыЗапрета, 
				Контекст.НачалоДня + Контекст.КоличествоДнейРазрешения * Сутки);
			
		Иначе
			
			РасчетныеДатыЗапретаСУчетомДнейУпреждения = Неопределено;
			
		КонецЕсли;
		
		Если РасчетныеДатыЗапретаСУчетомДнейУпреждения = Неопределено Тогда
			
			Если Контекст.НачалоДня > СрокРазрешения Тогда
				
				ТекстНадписи = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Запрещен ввод и редактирование данных за все прошлые периоды 
						|по %1 включительно (%2).
						|Отсрочка, разрешавшая ввод и редактирование данных 
						|за период с %3 по %4, истекла %5.';
						|en = 'Data entry and editing for all previous periods 
						|up to %1 are prohibited (%2).
						|Delay that allowed data entry and editing 
						|for the period from %3 to %4 expired on %5.'"),
					Формат(Контекст.ДатаЗапрета, "ДЛФ=Д"), НРег(ОписанияДатЗапрета()[Контекст.ОписаниеДатыЗапрета]),
					Формат(РасчетныеДатыЗапрета.Предыдущая + Сутки, "ДЛФ=Д"), Формат(РасчетныеДатыЗапрета.Текущая, "ДЛФ=Д"),
					Формат(СрокРазрешения, "ДЛФ=Д"));
				
			Иначе
				
				Если РассчитатьДатуЗапрета Тогда
					Контекст.ДатаЗапрета = РасчетныеДатыЗапрета.Предыдущая;
				КонецЕсли;
				
				ТекстНадписи = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = '• По %1 включительно запрещен ввод и редактирование данных
						|  за все прошлые периоды по %2
						|  и действует отсрочка, разрешающая ввод и редактирование данных 
						|  за период с %4 по %5;
						|• С %6 начнет действовать запрет на ввод и редактирование данных
						|  за все прошлые периоды по %5 (%3).';
						|en = '• You cannot enter and edit data till %1 inclusive 
						|for all previous periods up to %2; 
						|there is a delay that allows data entry and editing 
						|for the period from %4 to %5;
						|• Period-end closing becomes effective from %6 
						| for all previous periods up to %5 (%3).'"),
						Формат(СрокРазрешения, "ДЛФ=Д"), Формат(Контекст.ДатаЗапрета, "ДЛФ=Д"), НРег(ОписанияДатЗапрета()[Контекст.ОписаниеДатыЗапрета]),
						Формат(РасчетныеДатыЗапрета.Предыдущая + Сутки, "ДЛФ=Д"),  Формат(РасчетныеДатыЗапрета.Текущая, "ДЛФ=Д"), 
						Формат(СрокРазрешения + Сутки, "ДЛФ=Д"));
				
			КонецЕсли;
			
		Иначе
			
			СрокУпреждения = РасчетныеДатыЗапрета.Текущая - Контекст.КоличествоДнейРазрешения * Сутки + 1;
			Если РасчетныеДатыЗапретаСУчетомДнейУпреждения.Текущая <= РасчетныеДатыЗапрета.Текущая Тогда
				
				ТекстНадписи = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Запрещен ввод и редактирование данных за все прошлые периоды 
				|по %1 включительно (%2).
				|Упреждение, запрещающее ввод и редактирование данных 
				|следующего периода с %3 по %4, настанет %5.';
				|en = 'You cannot enter and edit data for all previous 
				|periods up to and including %1 (%2).
				|Data entry and edit of the following 
				|period from %3 to %4 will be prevented on %5.'"),
				Формат(Контекст.ДатаЗапрета, "ДЛФ=Д"), НРег(ОписанияДатЗапрета()[Контекст.ОписаниеДатыЗапрета]),
				Формат(РасчетныеДатыЗапрета.Текущая + Сутки, "ДЛФ=Д"), Формат(РасчетныеДатыЗапрета.Следующая, "ДЛФ=Д"),
				Формат(СрокУпреждения, "ДЛФ=Д"));
				
			Иначе
				
				Если РассчитатьДатуЗапрета Тогда
					Контекст.ДатаЗапрета = РасчетныеДатыЗапретаСУчетомДнейУпреждения.Текущая;
				КонецЕсли;
				
				ТекстНадписи = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Запрещен ввод и редактирование данных за все прошлые периоды 
				|по %1 включительно.
				|Упреждение, запрещающее ввод и редактирование данных 
				|следующего периода с %2 по %3, настало %4.';
				|en = 'You cannot enter and edit data for all previous 
				|periods up to and including %1.
				|Data entry and edit of the following 
				|period from %2 to %3 is prevented from %4.'"),
				Формат(Контекст.ДатаЗапрета, "ДЛФ=Д"), Формат(РасчетныеДатыЗапрета.Текущая + Сутки, "ДЛФ=Д"), 
				Формат(РасчетныеДатыЗапрета.Следующая, "ДЛФ=Д"), Формат(СрокУпреждения, "ДЛФ=Д"));
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе 
		Контекст.КоличествоДнейРазрешения = 0;
		ТекстНадписи = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Запрещен ввод и редактирование данных за все прошлые периоды
			           |по %1 (%2)';
			           |en = 'Data entry and editing for all previous periods
			           |up to %1 (%2) are restricted'"),
			Формат(Контекст.ДатаЗапрета, "ДЛФ=Д"), НРег(ОписанияДатЗапрета()[Контекст.ОписаниеДатыЗапрета]));
	КонецЕсли;
	
	Контекст.ТекстНадписиОтносительнойДатыЗапрета = ТекстНадписи;
	
КонецПроцедуры

// Параметры:
//  Контекст - ФормаКлиентскогоПриложения:
//    * Элементы - ВсеЭлементыФормы:
//       ** РазрешитьИзменениеДанныхДоДатыЗапрета - ПолеФормы
//       ** КоличествоДнейРазрешения - ПолеФормы
//       ** ПояснениеНепроизвольнойДаты - ПолеФормы
// 
Процедура ОбновитьОтображениеДатыЗапретаПриИзменении(Контекст) Экспорт
	
	Если Не Контекст.ВыбранРасширенныйРежим Тогда
		
		Если Контекст.ОписаниеДатыЗапрета = "" Или Контекст.ОписаниеДатыЗапрета = "ПроизвольнаяДата" Тогда
			Контекст.ВыбранРасширенныйРежим = Ложь;
			Контекст.Элементы.РасширенныйРежим.Видимость = Ложь;
			Контекст.Элементы.ГруппаРежимыРаботы.ТекущаяСтраница = Контекст.Элементы.ПростойРежим;
		Иначе
			Контекст.ВыбранРасширенныйРежим = Истина;
			Контекст.Элементы.РасширенныйРежим.Видимость = Истина;
			Контекст.Элементы.ГруппаРежимыРаботы.ТекущаяСтраница = Контекст.Элементы.РасширенныйРежим;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Контекст.ОписаниеДатыЗапрета = "" Или Контекст.ОписаниеДатыЗапрета = "ПроизвольнаяДата" Тогда
		Контекст.Элементы.ПроизвольнаяДата.ТекущаяСтраница = ?(Контекст.ОписаниеДатыЗапрета = "",
			Контекст.Элементы.ПроизвольнаяДатаНеИспользуется, Контекст.Элементы.ПроизвольнаяДатаИспользуется);
		ФорматРедактирования = ?(Контекст.ЗаписьСуществует, "ДП=01.01.0001", "");
		Контекст.Элементы.ДатаЗапретаПростойРежим.ФорматРедактирования = ФорматРедактирования;
		Контекст.Элементы.ДатаЗапрета.ФорматРедактирования = ФорматРедактирования;
		Контекст.Элементы.СвойстваДатыЗапрета.ТекущаяСтраница = Контекст.Элементы.НетПояснения;
		Контекст.Элементы.ДатаЗапретаПростойРежим.ОбновитьТекстРедактирования();
		Контекст.Элементы.ДатаЗапрета.ОбновитьТекстРедактирования();
		Контекст.РазрешитьИзменениеДанныхДоДатыЗапрета = Ложь;
		Возврат;
	КонецЕсли;
	
	Контекст.Элементы.СвойстваДатыЗапрета.ТекущаяСтраница = Контекст.Элементы.ОтносительнаяДата;
	Контекст.Элементы.ПроизвольнаяДата.ТекущаяСтраница = Контекст.Элементы.ПроизвольнаяДатаНеИспользуется;
	
	Если Контекст.ОписаниеДатыЗапрета = "ПредыдущийДень" Тогда
		Контекст.Элементы.РазрешитьИзменениеДанныхДоДатыЗапрета.Доступность = Ложь;
		Контекст.РазрешитьИзменениеДанныхДоДатыЗапрета = Ложь;
	Иначе
		Контекст.Элементы.РазрешитьИзменениеДанныхДоДатыЗапрета.Доступность = Истина;
	КонецЕсли;
	
	Контекст.Элементы.КоличествоДнейРазрешения.Доступность = Контекст.РазрешитьИзменениеДанныхДоДатыЗапрета;
	Контекст.Элементы.ПояснениеНепроизвольнойДаты.Заголовок = Контекст.ТекстНадписиОтносительнойДатыЗапрета;
	
КонецПроцедуры

Функция РасчетДатыЗапрета(Знач ВариантДатыЗапрета, Знач ТекущаяДатаНаСервере)
	
	Сутки = 60*60*24;
	
	ТекущаяДатаЗапрета    = '00010101';
	ПредыдущаяДатаЗапрета = '00010101';
	СледующаяДатаЗапрета  = '00010101';
	
	Если ВариантДатыЗапрета = "КонецПрошлогоГода" Тогда
		ТекущаяДатаЗапрета    = НачалоГода(ТекущаяДатаНаСервере) - Сутки;
		ПредыдущаяДатаЗапрета = НачалоГода(ТекущаяДатаЗапрета)   - Сутки;
		
	ИначеЕсли ВариантДатыЗапрета = "КонецПрошлогоКвартала" Тогда
		ТекущаяДатаЗапрета    = НачалоКвартала(ТекущаяДатаНаСервере) - Сутки;
		ПредыдущаяДатаЗапрета = НачалоКвартала(ТекущаяДатаЗапрета)   - Сутки;
		
	ИначеЕсли ВариантДатыЗапрета = "КонецПрошлогоМесяца" Тогда
		ТекущаяДатаЗапрета    = НачалоМесяца(ТекущаяДатаНаСервере) - Сутки;
		ПредыдущаяДатаЗапрета = НачалоМесяца(ТекущаяДатаЗапрета)   - Сутки;
		
	ИначеЕсли ВариантДатыЗапрета = "КонецПрошлойНедели" Тогда
		ТекущаяДатаЗапрета    = НачалоНедели(ТекущаяДатаНаСервере) - Сутки;
		ПредыдущаяДатаЗапрета = НачалоНедели(ТекущаяДатаЗапрета)   - Сутки;
		
	ИначеЕсли ВариантДатыЗапрета = "ПредыдущийДень" Тогда
		ТекущаяДатаЗапрета    = НачалоДня(ТекущаяДатаНаСервере) - Сутки;
		ПредыдущаяДатаЗапрета = НачалоДня(ТекущаяДатаЗапрета)   - Сутки;
		
	ИначеЕсли ВариантДатыЗапрета = "ТекущийДень" Тогда
		ТекущаяДатаЗапрета    = КонецДня(ТекущаяДатаНаСервере);
		СледующаяДатаЗапрета  = КонецДня(КонецДня(ТекущаяДатаНаСервере) + 1);
		
	ИначеЕсли ВариантДатыЗапрета = "КонецТекущейНедели" Тогда
		ТекущаяДатаЗапрета    = КонецНедели(ТекущаяДатаНаСервере);
		СледующаяДатаЗапрета  = КонецНедели(КонецНедели(ТекущаяДатаНаСервере) + 1);
		
	ИначеЕсли ВариантДатыЗапрета = "КонецТекущегоМесяца" Тогда
		ТекущаяДатаЗапрета    = КонецМесяца(ТекущаяДатаНаСервере);
		СледующаяДатаЗапрета  = КонецМесяца(КонецМесяца(ТекущаяДатаНаСервере) + 1);
		
	ИначеЕсли ВариантДатыЗапрета = "КонецТекущегоКвартала" Тогда
		ТекущаяДатаЗапрета    = КонецКвартала(ТекущаяДатаНаСервере);
		СледующаяДатаЗапрета  = КонецКвартала(КонецКвартала(ТекущаяДатаНаСервере) + 1);
		
	ИначеЕсли ВариантДатыЗапрета = "КонецТекущегоГода" Тогда
		ТекущаяДатаЗапрета    = КонецГода(ТекущаяДатаНаСервере);
		СледующаяДатаЗапрета  = КонецГода(КонецГода(ТекущаяДатаНаСервере) + 1);
		
	КонецЕсли;
	
	Возврат Новый Структура("Текущая, Предыдущая, Следующая", ТекущаяДатаЗапрета, ПредыдущаяДатаЗапрета, СледующаяДатаЗапрета);
	
КонецФункции

Процедура СкорректироватьКоличествоДнейРазрешения(Знач ОписаниеДатыЗапрета, КоличествоДнейРазрешения)
	
	Если КоличествоДнейРазрешения = 0 Тогда
		КоличествоДнейРазрешения = 1;
		
	ИначеЕсли ОписаниеДатыЗапрета = "КонецПрошлогоГода" ИЛИ ОписаниеДатыЗапрета = "КонецТекущегоГода" Тогда
		Если КоличествоДнейРазрешения > 90 Тогда
			КоличествоДнейРазрешения = 90;
		КонецЕсли;
		
	ИначеЕсли ОписаниеДатыЗапрета = "КонецПрошлогоКвартала" ИЛИ ОписаниеДатыЗапрета = "КонецТекущегоКвартала" Тогда
		Если КоличествоДнейРазрешения > 60 Тогда
			КоличествоДнейРазрешения = 60;
		КонецЕсли;
		
	ИначеЕсли ОписаниеДатыЗапрета = "КонецПрошлогоМесяца" ИЛИ ОписаниеДатыЗапрета = "КонецТекущегоМесяца" Тогда
		Если КоличествоДнейРазрешения > 25 Тогда
			КоличествоДнейРазрешения = 25;
		КонецЕсли;
		
	ИначеЕсли ОписаниеДатыЗапрета = "КонецПрошлойНедели" ИЛИ ОписаниеДатыЗапрета = "КонецТекущейНедели" Тогда
		Если КоличествоДнейРазрешения > 5 Тогда
			КоличествоДнейРазрешения = 5;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
