#Область ПрограммныйИнтерфейс

// Возвращает стандартные настройки формирования монитора целевых показателей
//
// Возвращаемое значение:
//	Структура - стандартные настройки:
//		* ВариантГруппировкиПоказателей - Строка - "ПоКатегориямЦелей", группировка показателей по категориям целей
//		* КоличествоКолонокМонитораПоказателей - Число - 3 колонки, количество колонок
//		* РазмерДиаграмм - Число - крупный (2), высота примерно равна ширине
//		* ПроизвольныйМасштаб - Число - 100 %, стандартное значение масштабирования
//		* ВариантОтображенияДеталей - Строка - "ПоказыватьТолькоТекущееЗначение" - только текущее значение
//		* ПериодАвтообновления - Число - 15 мин. Число минут, через которые следует автоматически обновлять данные на форме.
//
Функция СтандартныеНастройки() Экспорт
	
	НастройкиПоУмолчанию = Новый Структура;
	
	// порядок вывода показателей
	НастройкиПоУмолчанию.Вставить("ВариантГруппировкиПоказателей", "ПоКатегориямЦелей");
	НастройкиПоУмолчанию.Вставить("КоличествоКолонокМонитораПоказателей", 3);
	
	// Внешний вид показателей
	НастройкиПоУмолчанию.Вставить("РазмерДиаграмм", 1);
	НастройкиПоУмолчанию.Вставить("ПроизвольныйМасштаб", 100);
	НастройкиПоУмолчанию.Вставить("ВариантОтображенияДеталей", "ПоказыватьТолькоТекущееЗначение");
	
	// Обновление данных
	НастройкиПоУмолчанию.Вставить("ПериодАвтообновления", 15);
	
	// отбор показателей
	НастройкиПоУмолчанию.Вставить("ВыводитьОтборПоказателей", Ложь);
	
	Возврат НастройкиПоУмолчанию;
	
КонецФункции

// Возвращает названия перечисления Периодичность в разных склонениях
//
// Параметры:
//	ЧислоПериодов - Число - количество периодов, определяет склонение
//	Периодичность - ссылка на значение перечисления "Периодичность".
//
// Возвращаемое значение:
//  Строка - название периода в правильном склонении.
//
Функция ПериодПрописью(ЧислоПериодов, Периодичность) Экспорт
	ПериодПрописью = "";
	ФорматнаяСтрока = "";
	ПараметрыПредметаИсчисления = "";
	
	Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда
		ПараметрыПредметаИсчисления = НСтр("ru = 'день, дня, дней, м';
											|en = 'day, days, days'");
		ПериодПрописью = ЧислоПрописью(ЧислоПериодов, ФорматнаяСтрока, ПараметрыПредметаИсчисления);
		
		Если СтрНайти(ПериодПрописью, НСтр("ru = 'день';
											|en = 'Day'")) Тогда
			ПериодПрописью = НСтр("ru = 'день';
									|en = 'Day'");
		ИначеЕсли СтрНайти(ПериодПрописью, НСтр("ru = 'дня';
												|en = 'day'")) Тогда
			ПериодПрописью = НСтр("ru = 'дня';
									|en = 'day'");
		ИначеЕсли СтрНайти(ПериодПрописью, НСтр("ru = 'дней';
												|en = 'days'")) Тогда
			ПериодПрописью = НСтр("ru = 'дней';
									|en = 'days'");
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда
		ПараметрыПредметаИсчисления = НСтр("ru = 'неделя, недели, недель, ж';
											|en = 'week, weeks, weeks'");
		ПериодПрописью = ЧислоПрописью(ЧислоПериодов, ФорматнаяСтрока, ПараметрыПредметаИсчисления);
		
		Если СтрНайти(ПериодПрописью, НСтр("ru = 'неделя';
											|en = 'week'")) Тогда
			ПериодПрописью = НСтр("ru = 'неделя';
									|en = 'week'");
		ИначеЕсли СтрНайти(ПериодПрописью, НСтр("ru = 'недели';
												|en = 'weeks'")) Тогда
			ПериодПрописью = НСтр("ru = 'недели';
									|en = 'weeks'");
		ИначеЕсли СтрНайти(ПериодПрописью, НСтр("ru = 'недель';
												|en = 'weeks'")) Тогда
			ПериодПрописью = НСтр("ru = 'недель';
									|en = 'weeks'");
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Декада") Тогда
		ПараметрыПредметаИсчисления = НСтр("ru = 'декада, декады, декад, ж';
											|en = 'ten-day period, ten-day periods, ten-day periods'");
		ПериодПрописью = ЧислоПрописью(ЧислоПериодов, ФорматнаяСтрока, ПараметрыПредметаИсчисления);
		
		Если СтрНайти(ПериодПрописью, НСтр("ru = 'декада';
											|en = 'ten-day period'")) Тогда
			ПериодПрописью = НСтр("ru = 'декада';
									|en = 'ten-day period'");
		ИначеЕсли СтрНайти(ПериодПрописью, НСтр("ru = 'декады';
												|en = 'ten-day periods'")) Тогда
			ПериодПрописью = НСтр("ru = 'декады';
									|en = 'ten-day periods'");
		ИначеЕсли СтрНайти(ПериодПрописью, НСтр("ru = 'декад';
												|en = 'ten-day periods'")) Тогда
			ПериодПрописью = НСтр("ru = 'декад';
									|en = 'ten-day periods'");
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц") Тогда
		ПараметрыПредметаИсчисления = НСтр("ru = 'месяц, месяца, месяцев, м';
											|en = 'month, months, months'");
		ПериодПрописью = ЧислоПрописью(ЧислоПериодов, ФорматнаяСтрока, ПараметрыПредметаИсчисления);
		
		Если СтрНайти(ПериодПрописью, НСтр("ru = 'месяцев';
											|en = 'months'")) Тогда
			ПериодПрописью = НСтр("ru = 'месяцев';
									|en = 'months'");
		ИначеЕсли СтрНайти(ПериодПрописью, НСтр("ru = 'месяца';
												|en = 'month'")) Тогда
			ПериодПрописью = НСтр("ru = 'месяца';
									|en = 'month'");
		ИначеЕсли СтрНайти(ПериодПрописью, НСтр("ru = 'месяц';
												|en = 'month'")) Тогда
			ПериодПрописью = НСтр("ru = 'месяц';
									|en = 'month'");
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
		ПараметрыПредметаИсчисления = НСтр("ru = 'квартал, квартала, кварталов, м';
											|en = 'quarter, quarter, quarters'");
		ПериодПрописью = ЧислоПрописью(ЧислоПериодов, ФорматнаяСтрока, ПараметрыПредметаИсчисления);
		
		Если СтрНайти(ПериодПрописью, НСтр("ru = 'кварталов';
											|en = 'quarters'")) Тогда
			ПериодПрописью = НСтр("ru = 'кварталов';
									|en = 'quarters'");
		ИначеЕсли СтрНайти(ПериодПрописью, НСтр("ru = 'квартала';
												|en = 'quarter'")) Тогда
			ПериодПрописью = НСтр("ru = 'квартала';
									|en = 'quarter'");
		ИначеЕсли СтрНайти(ПериодПрописью, НСтр("ru = 'квартал';
												|en = 'quarter'")) Тогда
			ПериодПрописью = НСтр("ru = 'квартал';
									|en = 'quarter'");
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие") Тогда
		ПараметрыПредметаИсчисления = НСтр("ru = 'полугодие, полугодия, полугодий, с';
											|en = 'half-year, half-years'");
		ПериодПрописью = ЧислоПрописью(ЧислоПериодов, ФорматнаяСтрока, ПараметрыПредметаИсчисления);
		
		Если СтрНайти(ПериодПрописью, НСтр("ru = 'полугодие';
											|en = 'half-year'")) Тогда
			ПериодПрописью = НСтр("ru = 'полугодие';
									|en = 'half-year'");
		ИначеЕсли СтрНайти(ПериодПрописью, НСтр("ru = 'полугодия';
												|en = 'half-year periods'")) Тогда
			ПериодПрописью = НСтр("ru = 'полугодия';
									|en = 'half-year periods'");
		ИначеЕсли СтрНайти(ПериодПрописью, НСтр("ru = 'полугодий';
												|en = 'half-year periods'")) Тогда
			ПериодПрописью = НСтр("ru = 'полугодий';
									|en = 'half-year periods'");
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
		ПараметрыПредметаИсчисления = НСтр("ru = 'год, года, лет, м';
											|en = 'year, years, years'");
		ПериодПрописью = ЧислоПрописью(ЧислоПериодов, ФорматнаяСтрока, ПараметрыПредметаИсчисления);
		
		Если СтрНайти(ПериодПрописью, НСтр("ru = 'год';
											|en = 'year'")) Тогда
			ПериодПрописью = НСтр("ru = 'год';
									|en = 'year'");
		ИначеЕсли СтрНайти(ПериодПрописью, НСтр("ru = 'года';
												|en = 'year'")) Тогда
			ПериодПрописью = НСтр("ru = 'года';
									|en = 'year'");
		ИначеЕсли СтрНайти(ПериодПрописью, НСтр("ru = 'лет';
												|en = 'years'")) Тогда
			ПериодПрописью = НСтр("ru = 'лет';
									|en = 'years'");
		КонецЕсли;
	КонецЕсли;
	
	Возврат ПериодПрописью;
КонецФункции

// Возвращает структуру настроек для формирования состава монитора
//
// Возвращаемое значение:
//	Структура - незаполненная структура с требуемыми свойствами:
//		* АдресаДинамическихПараметров - Строка - содержит указание на временные настройки вывода вариантов анализа в монитор целевых показателей.
//		* ВидПоиска - ПеречислениеСсылка.ВидыПоискаСвязанныхПоказателей, Строка - значения зависимые, влияющие, взаимосвязанные, все.
//		* ДемонстрационныйРежим - Булево - указание на необходимость отображения демонстрационных данных вариантов анализа.
//		* ОтборВариантовАнализа - СправочникСсылка.ВариантыАнализаЦелевыхПоказателей, Массив - отбор данных на основании ссылки на вариант анализа.
//		* ОтборЗонаВнимания - Число - параметр устарел, оставлен для совместимости.
//		* ОтборСтатус - Строка - отбор вариантов анализа по их статусу. 
//			Принимает значения: "" (без учета состояния), "ЦельДостигнута", "ПриемлемоеСостояние", "НеприемлемоеСостояние", "СостояниеНеОпределено", "РассчитаноСОшибками".
//		* ПериодичностьКонтроля - ПеречислениеСсылка.Периодичность - отбор вариантов анализа по соответствующему реквизиту
//		* ПринудительноОбновитьДанные - Булево - указание на обновление кэша ранее запланированного времени
//		* РежимАнализаВзаимосвязанных - Булево - признак, что производится анализ связанных показателей
//		* СвойстваВариантаАнализа - Структура - свойства:
//			** Ссылка - СправочникСсылка.ВариантыАнализаЦелевыхПоказателей - вариант анализа, для которого будут получаться данные
//			** ПериодАнализа - ХранилищеЗначения - содержит упакованный СтандартныйПериод, описывающий период выборки данных
//		* СтруктураНастроек - см. МониторингЦелевыхПоказателей.ПолучитьНастройкиМонитораЦелевыхПоказателей
//		* УчитыватьВариантыОтображения - Булево - Истина, подготовка данных с учетом отображения в виде таблицы, диаграммы или текста.
//
Функция ИнициализацияПараметровСоставаМонитора() Экспорт
	ПараметрыСоставаМонитора = Новый Структура;
	ПараметрыСоставаМонитора.Вставить("АдресаДинамическихПараметров",);
	ПараметрыСоставаМонитора.Вставить("ВидПоиска",);
	ПараметрыСоставаМонитора.Вставить("ДемонстрационныйРежим",);
	ПараметрыСоставаМонитора.Вставить("ОтборВариантовАнализа",);
	ПараметрыСоставаМонитора.Вставить("ОтборЗонаВнимания",);
	ПараметрыСоставаМонитора.Вставить("ОтборСтатус",);
	ПараметрыСоставаМонитора.Вставить("ПериодичностьКонтроля",);
	ПараметрыСоставаМонитора.Вставить("ПринудительноОбновитьДанные",);
	ПараметрыСоставаМонитора.Вставить("РежимАнализаВзаимосвязанных",);
	ПараметрыСоставаМонитора.Вставить("СвойстваВариантаАнализа",);
	ПараметрыСоставаМонитора.Вставить("СтруктураНастроек",);
	ПараметрыСоставаМонитора.Вставить("УчитыватьВариантыОтображения",);
	
	Возврат ПараметрыСоставаМонитора;
КонецФункции

#КонецОбласти
