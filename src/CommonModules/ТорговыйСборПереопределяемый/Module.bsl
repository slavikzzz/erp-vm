#Область СлужебныйПрограммныйИнтерфейс

// Инициализирует таблицу расчета торгового сбора.
//
// Параметры:
// 		ТаблицаРеквизиты - Таблица значений, реквизиты документа "Регламентная операция"
// 		Отказ - Отказ - Булево - Флаг отказа проведения.
// 
// Возвращаемое значение:
// 	 СтруктураТаблиц - Структура - Таблицы расчета налога
// 							Ключи:
// 								ТаблицаРасчетаТорговогоСбора - ТаблицаЗначений - Таблица расчета торгового сбора.
Функция ПодготовитьТаблицыРасчета(ТаблицаРеквизиты, Отказ) Экспорт
	
	Если ТаблицаРеквизиты.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	СтруктураТаблиц = РассчитатьТорговыйСбор(Реквизиты, Отказ);
	Возврат СтруктураТаблиц;
	
КонецФункции

// Формирует таблицу территорий на которых осуществление торговой деятельности облагается торговым сбором.
//
// Возвращаемое значение:
//  ТаблицаЗначений - данные льгот. Колонки таблицы:
//    * ОКТМО - Строка (11)- Код по ОКТМО муниципального образования.
//    * Территория - СправочникСсылка.ТерриторииОсуществленияТорговойДеятельности - Категория территории согласно
//        закону №62 от 17 декабря 2014 г.Москва.
//
Функция ПрочитатьТаблицуТерриторий() Экспорт
	
	МакетТерриторий = РегистрыСведений.ПараметрыТорговыхТочек.ПолучитьМакет("ТерриторииОсуществленияТорговойДеятельности");
	СтрокаXML = МакетТерриторий.ПолучитьТекст();
	ТаблицаТерриторий = ОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаXML);
	
	Возврат ТаблицаТерриторий;
	
КонецФункции

Функция УплачиваетсяТорговыйСбор(Организация, Период) Экспорт
	
	ЭтоОбособленноеПодразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ОбособленноеПодразделение");
	
	Возврат Период > '20150701' И НЕ ЭтоОбособленноеПодразделение И ПолучитьФункциональнуюОпцию("УплачиваетсяТорговыйСбор");
	
КонецФункции

// Формирует движения по оперативным регистрам ПрочиеРасходы и ДвиженияДоходыРасходыПрочиеАктивыПассивы на основании
// проводки по начислению торгового сбора.
//
// Параметры:
//		НачислениеТорговогоСбора - Запись регистра бухгалтерии "Хозрасчетный" с проводками по начислению торгового сбора;
//		Движения - движения документа "РегламентнаяОперация".
//
Процедура ОтразитьУменьшениеНалогаНаПрибыльНаСуммуТорговогоСбораВОператпивныхРегистрах(Организация, Период, СуммаУменьшения, Движения) Экспорт
	
	Если СуммаУменьшения = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Распределим сумму сторно между складами пропорционально суммам начисленного налога.
	РасчетПоСбору = ТорговыйСбор.СуммаТорговогоСбора(Организация, НачалоМесяца(Период), КонецМесяца(Период));
	СуммыСторно = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(СуммаУменьшения, РасчетПоСбору.ВыгрузитьКолонку("Сумма"), 0); // Налог исчисляется в целых рублях
	РасчетПоСбору.Колонки.Добавить("СуммаСторно", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	РасчетПоСбору.ЗагрузитьКолонку(СуммыСторно, "СуммаСторно");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(РасчетПоСбору.ТорговаяТочка КАК Справочник.ТорговыеТочки) КАК ТорговаяТочка,
	|	РасчетПоСбору.СуммаСторно КАК СуммаРегл
	|ПОМЕСТИТЬ ВТРасчетПоСбору
	|ИЗ
	|	&РасчетПоСбору КАК РасчетПоСбору
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ВТРасчетПоСбору.ТорговаяТочка КАК ТорговаяТочка,
	|	0 КАК Сумма,
	|	ВТРасчетПоСбору.СуммаРегл КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА &ЕстьПостояннаяРазница
	|			ТОГДА ВТРасчетПоСбору.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	Склады.Подразделение КАК Подразделение,
	|	ТорговыеТочки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	Склады.Ссылка КАК АналитикаРасходов,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ ВТТаблицаРасчета
	|ИЗ
	|	ВТРасчетПоСбору КАК ВТРасчетПоСбору
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТорговыеТочки КАК ТорговыеТочки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО ТорговыеТочки.Склад = Склады.Ссылка
	|		ПО ВТРасчетПоСбору.ТорговаяТочка = ТорговыеТочки.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВТТаблицаРасчета.Период КАК Период,
	|	ВТТаблицаРасчета.Организация КАК Организация,
	|	ВТТаблицаРасчета.Подразделение КАК Подразделение,
	|	ВТТаблицаРасчета.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВТТаблицаРасчета.СтатьяРасходов КАК СтатьяРасходов,
	|	ВТТаблицаРасчета.АналитикаРасходов КАК АналитикаРасходов,
	|	ВТТаблицаРасчета.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	СУММА(ВТТаблицаРасчета.Сумма) КАК Сумма,
	|	СУММА(ВТТаблицаРасчета.СуммаРегл) КАК СуммаРегл,
	|	0 КАК СуммаБезНДС,
	|	СУММА(ВТТаблицаРасчета.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(ВТТаблицаРасчета.Сумма) КАК СуммаУпр,
	|	НастройкиХозяйственныхОпераций.Ссылка КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВТТаблицаРасчета КАК ВТТаблицаРасчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|		ПО ВТТаблицаРасчета.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТаблицаРасчета.Период,
	|	ВТТаблицаРасчета.Организация,
	|	ВТТаблицаРасчета.Подразделение,
	|	ВТТаблицаРасчета.НаправлениеДеятельности,
	|	ВТТаблицаРасчета.СтатьяРасходов,
	|	ВТТаблицаРасчета.АналитикаРасходов,
	|	ВТТаблицаРасчета.ХозяйственнаяОперация,
	|	НастройкиХозяйственныхОпераций.Ссылка
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТТаблицаРасчета.СуммаРегл) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ВТТаблицаРасчета.Период,
	|	ВТТаблицаРасчета.Организация,
	|	ВТТаблицаРасчета.Подразделение,
	|	ВТТаблицаРасчета.НаправлениеДеятельности,
	|	ВТТаблицаРасчета.СтатьяРасходов,
	|	ВТТаблицаРасчета.АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКосвенныхРасходов),
	|	СУММА(ВТТаблицаРасчета.Сумма),
	|	СУММА(ВТТаблицаРасчета.СуммаРегл),
	|	0,
	|	СУММА(ВТТаблицаРасчета.ПостояннаяРазница),
	|	СУММА(ВТТаблицаРасчета.Сумма),
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеКосвенныхРасходов)
	|ИЗ
	|	ВТТаблицаРасчета КАК ВТТаблицаРасчета
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТаблицаРасчета.Период,
	|	ВТТаблицаРасчета.Организация,
	|	ВТТаблицаРасчета.Подразделение,
	|	ВТТаблицаРасчета.НаправлениеДеятельности,
	|	ВТТаблицаРасчета.СтатьяРасходов,
	|	ВТТаблицаРасчета.АналитикаРасходов,
	|	ВТТаблицаРасчета.ХозяйственнаяОперация
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТТаблицаРасчета.СуммаРегл) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВТТаблицаРасчета.Период КАК Период,
	|	ВТТаблицаРасчета.Организация КАК Организация,
	|	ВТТаблицаРасчета.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК КорПодразделение,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ВТТаблицаРасчета.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&СтатьяАктивовПассивов КАК Статья,
	|	&АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	ВТТаблицаРасчета.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВТТаблицаРасчета.СтатьяРасходов КАК КорСтатья,
	|	ВТТаблицаРасчета.АналитикаРасходов КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаАктивовПассивов,
	|	СУММА(ВТТаблицаРасчета.Сумма) КАК Сумма,
	|	СУММА(ВТТаблицаРасчета.СуммаРегл) КАК СуммаРегл,
	|	ВТТаблицаРасчета.Организация.ВалютаРегламентированногоУчета КАК Валюта,
	|	СУММА(ВТТаблицаРасчета.СуммаРегл) КАК СуммаВВалюте
	|ИЗ
	|	ВТТаблицаРасчета КАК ВТТаблицаРасчета
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТаблицаРасчета.Период,
	|	ВТТаблицаРасчета.Организация,
	|	ВТТаблицаРасчета.Подразделение,
	|	ВТТаблицаРасчета.НаправлениеДеятельности,
	|	ВТТаблицаРасчета.СтатьяРасходов,
	|	ВТТаблицаРасчета.АналитикаРасходов,
	|	ВТТаблицаРасчета.ХозяйственнаяОперация
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТТаблицаРасчета.СуммаРегл) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ВТТаблицаРасчета.Период,
	|	ВТТаблицаРасчета.Организация,
	|	ВТТаблицаРасчета.Подразделение,
	|	ВТТаблицаРасчета.Подразделение,
	|	ВТТаблицаРасчета.НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКосвенныхРасходов),
	|	ВТТаблицаРасчета.СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО,
	|	ВТТаблицаРасчета.АналитикаРасходов,
	|	ВТТаблицаРасчета.НаправлениеДеятельности,
	|	&СтатьяАктивовПассивов,
	|	ВТТаблицаРасчета.АналитикаРасходов,
	|	&АналитикаАктивовПассивов,
	|	СУММА(ВТТаблицаРасчета.Сумма),
	|	СУММА(ВТТаблицаРасчета.СуммаРегл),
	|	ВТТаблицаРасчета.Организация.ВалютаРегламентированногоУчета,
	|	СУММА(ВТТаблицаРасчета.СуммаРегл)
	|ИЗ
	|	ВТТаблицаРасчета КАК ВТТаблицаРасчета
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТаблицаРасчета.Период,
	|	ВТТаблицаРасчета.Организация,
	|	ВТТаблицаРасчета.Подразделение,
	|	ВТТаблицаРасчета.НаправлениеДеятельности,
	|	ВТТаблицаРасчета.СтатьяРасходов,
	|	ВТТаблицаРасчета.АналитикаРасходов,
	|	ВТТаблицаРасчета.ХозяйственнаяОперация
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТТаблицаРасчета.СуммаРегл) <> 0";
	
	Запрос.УстановитьПараметр("РасчетПоСбору",            РасчетПоСбору);
	Запрос.УстановитьПараметр("Период",                   Период);
	Запрос.УстановитьПараметр("Организация",              Организация);
	Запрос.УстановитьПараметр("ПустаяТорговаяТочка",      Справочники.ТорговыеТочки.ПустаяСсылка());
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",    Перечисления.ХозяйственныеОперации.НачислениеТорговогоСбора);
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов") Тогда
		Запрос.УстановитьПараметр("СтатьяАктивовПассивов", ПланыВидовХарактеристик.СтатьиАктивовПассивов.Налоги);
	Иначе
		Запрос.УстановитьПараметр("СтатьяАктивовПассивов", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ПрочиеПассивы);
	КонецЕсли;
	Запрос.УстановитьПараметр("СтатьяРасходов",           ПланыВидовХарактеристик.СтатьиРасходов.ТорговыйСбор);
	Запрос.УстановитьПараметр("АналитикаАктивовПассивов", Перечисления.ТипыНалогов.ТорговыйСбор);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов", ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр("ЕстьПостояннаяРазница", (УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Период) И УчетнаяПолитика.ПоддержкаПБУ18(Организация, Период)));
	Результат = Запрос.ВыполнитьПакет();
	
	Если Не Результат.Получить(2).Пустой() Тогда
		ТаблицаПрочиеРасходы = Результат[2].Выгрузить();
		ОбщегоНазначенияУТ.ДобавитьИдентификаторыВТаблицуЗначений(ТаблицаПрочиеРасходы);
		Движения.ПрочиеРасходы.Загрузить(ТаблицаПрочиеРасходы);
		Движения.ПрочиеРасходы.Записывать = Истина;
	КонецЕсли;
	
	Если Не Результат.Получить(3).Пустой() Тогда
		Движения.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Загрузить(Результат[3].Выгрузить());
		Движения.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РассчитатьТорговыйСбор(Реквизиты, Отказ)
	
	СтруктураТаблиц = Новый Структура;
	СтруктураТаблиц.Вставить("ТаблицаПрочиеРасходы",                            Новый ТаблицаЗначений);
	СтруктураТаблиц.Вставить("ТаблицаПрочиеАктивыПассивы",                      Новый ТаблицаЗначений);
	СтруктураТаблиц.Вставить("ТаблицаДвиженияПоПрочимАктивамПассивам",          Новый ТаблицаЗначений);
	СтруктураТаблиц.Вставить("ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы", Новый ТаблицаЗначений);
	
	// Федеральный закон № 172-ФЗ от 08.06.2020
	// В 2020 году некоторые организации и ИП освобождаются от уплаты сбора за 2-й квартал
	// В этом случае проводки по начислению сбора не формируем.
	ПериодОсвобожденияОтНалогов = НалоговыйУчет.ПериодОсвобожденияОтНалоговПострадавшимОтКоронавируса();
	Если НалоговыйУчет.ДеятельностьОтнесенаКПострадавшимОтКоронавируса(Реквизиты.Организация)
		 И ПериодОсвобожденияОтНалогов.Начало <= Реквизиты.КонДата 
		 И Реквизиты.КонДата <= ПериодОсвобожденияОтНалогов.Конец Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	РасчетПоСбору = ТорговыйСбор.СуммаТорговогоСбора(Реквизиты.Организация, Реквизиты.НачДата, Реквизиты.КонДата);
	
	Если РасчетПоСбору.Количество() = 0 Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	ВалютаРегламентированногоУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Реквизиты.Организация);
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("РасчетПоСбору",            РасчетПоСбору);
	Запрос.УстановитьПараметр("Период",                   Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",              Реквизиты.Организация);
	Запрос.УстановитьПараметр("ПустаяТорговаяТочка",      Справочники.ТорговыеТочки.ПустаяСсылка());
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",    Перечисления.ХозяйственныеОперации.НачислениеТорговогоСбора);
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов") Тогда
		Запрос.УстановитьПараметр("СтатьяАктивовПассивов", ПланыВидовХарактеристик.СтатьиАктивовПассивов.Налоги);
	Иначе
		Запрос.УстановитьПараметр("СтатьяАктивовПассивов", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ПрочиеПассивы);
	КонецЕсли;
	Запрос.УстановитьПараметр("СтатьяРасходов",           ПланыВидовХарактеристик.СтатьиРасходов.ТорговыйСбор);
	Запрос.УстановитьПараметр("АналитикаАктивовПассивов", Перечисления.ТипыНалогов.ТорговыйСбор);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов", 
										ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр("КурсВалютыУправленческогоУчета", 
										РаботаСКурсамиВалютУТ.ПолучитьКурсВалютыУправленческогоУчета(
											Реквизиты.Период, ВалютаРегламентированногоУчета));
	Запрос.УстановитьПараметр("ЕстьПостояннаяРазница", 
										(УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период)
											И УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период)));
	Запрос.УстановитьПараметр("УправленческийУчетОрганизаций", РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций(Реквизиты.Период));
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетПоСбору.Период КАК Период,
	|	ВЫРАЗИТЬ(РасчетПоСбору.ТорговаяТочка КАК Справочник.ТорговыеТочки) КАК ТорговаяТочка,
	|	РасчетПоСбору.Сумма  КАК СуммаРегл
	|ПОМЕСТИТЬ ВТРасчетПоСбору
	|ИЗ
	|	&РасчетПоСбору КАК РасчетПоСбору
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРасчетПоСбору.Период                    КАК Период,
	|	&Организация                              КАК Организация,
	|	ВТРасчетПоСбору.ТорговаяТочка             КАК ТорговаяТочка,
	|	Склады.Подразделение                      КАК Подразделение,
	|	ТорговыеТочки.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	&СтатьяРасходов                           КАК СтатьяРасходов,
	|	Склады.Ссылка                             КАК АналитикаРасходов,
	|	&ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	СУММА(ВЫБОР
	|		КОГДА &КурсВалютыУправленческогоУчета <> 0
	|			ТОГДА ВТРасчетПоСбору.СуммаРегл / &КурсВалютыУправленческогоУчета
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                    КАК Сумма,
	|	СУММА(ВТРасчетПоСбору.СуммаРегл)          КАК СуммаРегл,
	|	СУММА(ВЫБОР
	|		КОГДА &ЕстьПостояннаяРазница
	|			ТОГДА ВТРасчетПоСбору.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                    КАК ПостояннаяРазница
	|ПОМЕСТИТЬ ВТТаблицаРасчета
	|ИЗ
	|	ВТРасчетПоСбору КАК ВТРасчетПоСбору
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТорговыеТочки КАК ТорговыеТочки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО ТорговыеТочки.Склад = Склады.Ссылка
	|		ПО ВТРасчетПоСбору.ТорговаяТочка = ТорговыеТочки.Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВТРасчетПоСбору.Период,
	|	ВТРасчетПоСбору.ТорговаяТочка,
	|	Склады.Подразделение,
	|	ТорговыеТочки.НаправлениеДеятельности,
	|	Склады.Ссылка
	|";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.ДобавитьИдентификаторыВоВременнуюТаблицу("ВТТаблицаРасчета", МенеджерВременныхТаблиц);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	ВТТаблицаРасчета.Период                   КАК Период,
	|	ВТТаблицаРасчета.Организация              КАК Организация,
	|	ВТТаблицаРасчета.Подразделение            КАК Подразделение,
	|	ВТТаблицаРасчета.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВТТаблицаРасчета.СтатьяРасходов           КАК СтатьяРасходов,
	|	ВТТаблицаРасчета.АналитикаРасходов        КАК АналитикаРасходов,
	|	ВТТаблицаРасчета.ХозяйственнаяОперация    КАК ХозяйственнаяОперация,
	|	ВТТаблицаРасчета.Сумма                    КАК Сумма,
	|	ВТТаблицаРасчета.СуммаРегл                КАК СуммаРегл,
	|	0                                         КАК СуммаБезНДС,
	|	ВТТаблицаРасчета.ПостояннаяРазница        КАК ПостояннаяРазница,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций ТОГДА ВТТаблицаРасчета.Сумма
	|		ИНАЧЕ 0 КОНЕЦ                         КАК СуммаУпр,
	|	ВТТаблицаРасчета.ИдентификаторСтроки      КАК ИдентификаторФинЗаписи,
	|	НастройкиХозяйственныхОпераций.Ссылка     КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВТТаблицаРасчета КАК ВТТаблицаРасчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|		ПО ВТТаблицаРасчета.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И ВТТаблицаРасчета.СуммаРегл <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВТТаблицаРасчета.Период                КАК Период,
	|	ВТТаблицаРасчета.Организация           КАК Организация,
	|	ВТТаблицаРасчета.Подразделение         КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                           КАК НаправлениеДеятельности,
	|	&СтатьяАктивовПассивов                 КАК Статья,
	|	&АналитикаАктивовПассивов              КАК Аналитика,
	|	СУММА(ВТТаблицаРасчета.Сумма)          КАК Сумма
	|ИЗ
	|	ВТТаблицаРасчета КАК ВТТаблицаРасчета
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТаблицаРасчета.Период,
	|	ВТТаблицаРасчета.Организация,
	|	ВТТаблицаРасчета.Подразделение,
	|	ВТТаблицаРасчета.НаправлениеДеятельности
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТТаблицаРасчета.Сумма) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаРасчета.Период                   КАК Период,
	|	ВТТаблицаРасчета.Организация              КАК Организация,
	|	ВТТаблицаРасчета.Подразделение            КАК Подразделение,
	|	ВТТаблицаРасчета.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	&СтатьяАктивовПассивов                    КАК Статья,
	|	&АналитикаАктивовПассивов                 КАК Аналитика,
	|	НЕОПРЕДЕЛЕНО                              КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|	ВТТаблицаРасчета.СуммаРегл                КАК СуммаРегл,
	|	ВТТаблицаРасчета.ПостояннаяРазница        КАК ПостояннаяРазница,
	|	ВТТаблицаРасчета.Сумма                    КАК СуммаУпр,
	|	ВТТаблицаРасчета.Сумма                    КАК СуммаСНДС,
	|	ВТТаблицаРасчета.Сумма                    КАК СуммаБезНДС,
	|	ВТТаблицаРасчета.ИдентификаторСтроки      КАК ИдентификаторФинЗаписи,
	|	НастройкиХозяйственныхОпераций.Ссылка     КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВТТаблицаРасчета КАК ВТТаблицаРасчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|		ПО ВТТаблицаРасчета.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И ВТТаблицаРасчета.СуммаРегл <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаРасчета.Период                КАК Период,
	|	ВТТаблицаРасчета.Организация           КАК Организация,
	|	ВТТаблицаРасчета.Подразделение         КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                           КАК НаправлениеДеятельности,
	|	ВТТаблицаРасчета.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&СтатьяАктивовПассивов                 КАК Статья,
	|	&АналитикаАктивовПассивов              КАК АналитикаАктивовПассивов,
	|	ВТТаблицаРасчета.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВТТаблицаРасчета.СтатьяРасходов        КАК КорСтатья,
	|	ВТТаблицаРасчета.АналитикаРасходов     КАК КорАналитикаРасходов,
	|	СУММА(ВТТаблицаРасчета.Сумма)          КАК Сумма,
	|	СУММА(ВТТаблицаРасчета.СуммаРегл)      КАК СуммаРегл,
	|	&ВалютаРегламентированногоУчета        КАК Валюта,
	|	СУММА(ВТТаблицаРасчета.СуммаРегл)      КАК СуммаВВалюте,
	|	СУММА(ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ВТТаблицаРасчета.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                 КАК СуммаУпр
	|ИЗ
	|	ВТТаблицаРасчета КАК ВТТаблицаРасчета
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТаблицаРасчета.Период,
	|	ВТТаблицаРасчета.Организация,
	|	ВТТаблицаРасчета.Подразделение,
	|	ВТТаблицаРасчета.НаправлениеДеятельности,
	|	ВТТаблицаРасчета.СтатьяРасходов,
	|	ВТТаблицаРасчета.АналитикаРасходов,
	|	ВТТаблицаРасчета.ХозяйственнаяОперация
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТТаблицаРасчета.СуммаРегл) <> 0
	|";
	
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.ВыполнитьПакет();
	
	СтруктураТаблиц.Вставить("ТаблицаПрочиеРасходы",                            Результат[0].Выгрузить());
	СтруктураТаблиц.Вставить("ТаблицаПрочиеАктивыПассивы",                      Результат[1].Выгрузить());
	СтруктураТаблиц.Вставить("ТаблицаДвиженияПоПрочимАктивамПассивам",          Результат[2].Выгрузить());
	СтруктураТаблиц.Вставить("ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы", Результат[3].Выгрузить());
	
	Возврат СтруктураТаблиц;
	
КонецФункции

Процедура СформироватьДвиженияРасчета(ТаблицыТорговыйСбор, Движения, Отказ) Экспорт

	Если ТаблицыТорговыйСбор.ТаблицаПрочиеРасходы.Количество() <> 0 Тогда
		Движения.ПрочиеРасходы.Записывать = Истина;
		Движения.ПрочиеРасходы.Загрузить(ТаблицыТорговыйСбор.ТаблицаПрочиеРасходы);
	КонецЕсли;
	
	Если ТаблицыТорговыйСбор.ТаблицаПрочиеАктивыПассивы.Количество() <> 0 Тогда
		Движения.ПрочиеАктивыПассивы.Записывать = Истина;
		Движения.ПрочиеАктивыПассивы.Загрузить(ТаблицыТорговыйСбор.ТаблицаПрочиеАктивыПассивы);
	КонецЕсли;
		
	Если ТаблицыТорговыйСбор.ТаблицаДвиженияПоПрочимАктивамПассивам.Количество() <> 0 Тогда
		Движения.ДвиженияПоПрочимАктивамПассивам.Записывать = Истина;
		Движения.ДвиженияПоПрочимАктивамПассивам.Загрузить(ТаблицыТорговыйСбор.ТаблицаДвиженияПоПрочимАктивамПассивам);
	КонецЕсли;

	Если ТаблицыТорговыйСбор.ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы.Количество() <> 0 Тогда
		Движения.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Записывать = Истина;
		Движения.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Загрузить(ТаблицыТорговыйСбор.ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти