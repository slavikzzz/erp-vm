#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПроверкаЗаполненностиГрафиков(Проверка, ПараметрыПроверки) Экспорт
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтрольВеденияУчета") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = РезультатПроверкиЗаполненностиГрафиков();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
		
	Для Каждого График Из Результат Цикл
		МодульКонтрольВеденияУчета = ОбщегоНазначения.ОбщийМодуль("КонтрольВеденияУчета");
		Проблема = МодульКонтрольВеденияУчета.ОписаниеПроблемы(График.Ссылка, ПараметрыПроверки);
		Проблема.УточнениеПроблемы = НСтр("ru = 'График не заполнен на текущий период.';
											|en = 'The schedule is not filled in for the current period.'");
		УстановитьПривилегированныйРежим(Истина);
		КонтрольВеденияУчетаБЗК.ЗаписатьПроблему(Проблема, ПараметрыПроверки);
		УстановитьПривилегированныйРежим(Ложь);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РезультатПроверкиЗаполненностиГрафиков()
	
	НезаполненныеГрафики = УчетРабочегоВремениРасширенный.НайтиНезаполненныеГрафикиРаботы();
	
	Возврат НезаполненныеГрафики;
	
КонецФункции

#КонецОбласти

#КонецЕсли