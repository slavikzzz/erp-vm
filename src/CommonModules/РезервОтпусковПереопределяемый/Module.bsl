#Область ПрограммныйИнтерфейс

// Дозаполнение параметров структуры с настройками.
//
// Параметры:
//   Настройки - Структура - Описание в ОМ.РезервОтпусков.НастройкиРезервовОтпусков().
//   Организация - Спр.Организации.СправочникСсылка - Организация.
//   Период - Дата - Период дат.
//
Процедура ЗаполнитьНастройкиРезервовОтпусков(Настройки, Организация, Период) Экспорт
	
	
	
КонецПроцедуры

// Уточняет необходимость выполнять расчет резервов, устанавливается в Ложь, 
// когда резервы рассчитываются в другой программе.
//
// Параметры:
//	РезервыРассчитываются - тип булево.
//
Процедура ПолучитьЗначениеРезервыРассчитываются(РезервыРассчитываются) Экспорт
	
	РезервыРассчитываются = ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплаты");
	
КонецПроцедуры

// Уточняет возможность использования автоматического расчета резервов, 
// устанавливается в Ложь, когда авторасчет резервов отключен.
//
// Возвращаемое значение:
//  Булево - Истина, если используется авторасчет.
//
Функция РезервыРассчитываютсяАвтоматически() Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплаты");
	
КонецФункции

// Процедура предназначена для формирования движений по месту внедрения.
//
// Параметры:
//	Объект - конкретный экземпляр документа Начисление оценочных обязательств по отпускам (ДокументОбъект.НачислениеОценочныхОбязательствПоОтпускам)
//	Отказ  - булево, признак отказа от проведения документа.
//	РежимПроведения - режим проведения документа.
//
Процедура СформироватьДвижения(Объект, Отказ, РежимПроведения) Экспорт
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(Объект, Отказ);
	
КонецПроцедуры

// Процедура предназначена для дополнения таблицы параметров данными об остатках отпусков 
// и ФОТ с учетом специфики места внедрения.
//
// Параметры:
//   Организация - Спр.Организации.СправочникСсылка - Организация.
//   Период - Дата - Период дат.
//   ОстаткиОтпусков - таблица значений.
//		Структура таблицы ОстаткиОтпусков.
//			Организация
//			Подразделение
//			МестоВСтруктуреПредприятия
//			Сотрудник
//			СпособОтраженияЗарплатыВБухучете
//			СтатьяФинансирования
//			ОблагаетсяЕНВД
//			ОстатокОтпусков
//			СреднийЗаработок
//
Процедура ДополнитьТаблицуОстатковОтпусков(Организация, Период, ОстаткиОтпусков) Экспорт
	
КонецПроцедуры

// Процедура предназначена для получения настройки учетной политики ПоддержкаПБУ18
// с учетом специфики места внедрения.
//
// Параметры:
// 	Организация - СправочникСсылка.Организации - организация (филиал), по которой получается настройка.
// 	ДатаАктуальности - Дата - дата, на которую получается настройка.
// 	ПоддержкаПБУ18 - Булево - в параметр помещается вычисленное значение настройки.
//
Процедура ПолучитьЗначениеНастройкиПоддержкаПБУ18(Организация, ДатаАктуальности, ПоддержкаПБУ18) Экспорт
	
	ПоддержкаПБУ18 = НастройкиНалоговУчетныхПолитикЛокализация.ПоддержкаПБУ18(Организация, ДатаАктуальности);
	
КонецПроцедуры

// Процедура предназначена для получения настройки использования обмена с БП3
// с учетом специфики места внедрения.
//
// Параметры:
// 	ОбменИспользуется - Булево - в параметр помещается вычисленное значение настройки.
// 	Организация - СправочникСсылка.Организации - организация (филиал), по которой получается настройка.
//
Процедура ИспользуетсяОбменЗУПБП(ОбменИспользуется, Организация) Экспорт

	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОбменДаннымиУниверсальныйФормат") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОбменДаннымиУниверсальныйФормат");
		ОбменИспользуется = ОбменИспользуется Или Модуль.ИспользуетсяОбменБП3(Организация);
	КонецЕсли;

КонецПроцедуры


#КонецОбласти

