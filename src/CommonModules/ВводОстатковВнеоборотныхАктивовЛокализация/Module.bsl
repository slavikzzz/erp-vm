////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Ввод остатков внеоборотных активов".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	МеханизмыДокумента.Добавить("ИмущественныеНалоги");
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	МеханизмыДокумента.Добавить("ПрослеживаемостьИмпортныхТоваров");
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

// Добавляет в текст запроса реквизиты документа ВводОстатковВнеоборотныхАктивов2_4
//
// Параметры:
//  ТекстЗапроса - Строка	 - Исходный текст запроса, в котором должно быть поле "&ВводОстатковВнеоборотныхАктивов_РеквизитыШапки".
//  ИмяТаблицы	 - Строка	 - Имя таблицы документа.
//
Процедура ДобавитьВТекстЗапросаРеквизитыШапки(ТекстЗапроса, ИмяТаблицы) Экспорт

	ПоляЛокализация = "NULL";
	
	//++ Локализация
	
	ПоляЛокализация =
	"	ДанныеДокумента.НалогообложениеНДС                   КАК НалогообложениеНДС";
	
	ПоляЛокализация = СтрЗаменить(ПоляЛокализация, "ДанныеДокумента", ИмяТаблицы);
	
	//-- Локализация
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВводОстатковВнеоборотныхАктивов_РеквизитыШапки", ПоляЛокализация);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4 - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
// 
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4 - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	
	ПроверитьОтражениеВУчете(Объект, Отказ);
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4 - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения - Строка, Неопределено - Текст, используемый для заполнения документа. 
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
// 
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
// 
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4 - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4 - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команды печати.
// 
// Параметры:
// 	КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	#Область СтоимостьОС_Дт_СчетУчета__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки счета учета ОС (Дт СчетУчета:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Арендатор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки счета учета ОС"" КАК Содержание
	|ИЗ
	|	втСтоимостьОС КАК Строки
	|ГДЕ
	|	Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
		
	#Область СтоимостьОСЦФ_Дт_СчетУчета__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки целевых средств на счете учета ОС (Дт СчетУчета:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Арендатор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки целевых средств в восстановительной стоимости ОС"" КАК Содержание
	|ИЗ
	|	втСтоимостьОС КАК Строки
	|ГДЕ
	|	Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область АмортизацияОС_Дт_000__Кт_СчетАмортизации
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Накопленная амортизация ОС (Дт 000:: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР 
	|		КОГДА Строки.НачислятьИзнос 
	|			ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияРегл 
	|	КОНЕЦ КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ВЫБОР 
	|		КОГДА Строки.НачислятьИзнос 
	|			ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияНУ
	|	КОНЕЦ КАК СуммаНУКт,
	|	ВЫБОР 
	|		КОГДА Строки.НачислятьИзнос 
	|			ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияПР
	|	КОНЕЦ КАК СуммаПРКт,
	|	ВЫБОР 
	|		КОГДА Строки.НачислятьИзнос 
	|			ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияВР
	|	КОНЕЦ КАК СуммаВРКт,
	|	""Накопленная амортизация ОС"" КАК Содержание
	|ИЗ
	|	втАмортизацияОС КАК Строки
	|ГДЕ
	|	Строки.Амортизация <> 0
	|		ИЛИ НЕ Строки.НачислятьИзнос 
	|			И (Строки.АмортизацияРегл <> 0
	|				ИЛИ Строки.АмортизацияНУ <> 0
	|				ИЛИ Строки.АмортизацияПР <> 0
	|				ИЛИ Строки.АмортизацияВР <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизацияОСЦФ_Дт_000__Кт_СчетАмортизации
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Целевые средства в накопленной амортизации ОС (Дт 000:: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	""Остатки целевых средств в накопленной амортизации ОС"" КАК Содержание
	|ИЗ
	|	втАмортизацияОС КАК Строки
	|ГДЕ
	|	Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ИзносОС_Дт_СчетИзноса__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Накопленный износ ОС (Дт СчетИзноса:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Накопленный износ ОС"" КАК Содержание
	|ИЗ
	|	втАмортизацияОС КАК Строки
	|ГДЕ
	|	Строки.АмортизацияРегл <> 0
	|	И Строки.НачислятьИзнос";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ЗабалансовыйУчетАрендованныхОС_Дт_СчетЗабалансовогоУчета
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Поступление на забалансовый учет арендуемых ОС (Дт СчетЗабалансовогоУчета:: Кт ---)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ЗалоговаяСтоимость КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.КорКонтрагент КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Поступление на забалансовый учет арендуемых ОС"" КАК Содержание
	|ИЗ
	|	втСтоимостьОС КАК Строки
	|ГДЕ
	|	Строки.ЗалоговаяСтоимость <> 0
	|	И Строки.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом))";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ЗабалансовыйУчетПереданныхАрендуБалансовыхОС_Дт_СчетЗабалансовогоУчета
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Поступление на забалансовый учет переданных в аренду ОС (Дт СчетЗабалансовогоУчета:: Кт ---)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Арендатор КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ЗалоговаяСтоимость КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Организация КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Поступление на забалансовый учет арендуемых ОС"" КАК Содержание
	|ИЗ
	|	втСтоимостьОС КАК Строки
	|ГДЕ
	|	Строки.ЗалоговаяСтоимость <> 0
	|	И Строки.Арендатор ССЫЛКА Справочник.Организации
	|	И Строки.Арендатор <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И Строки.ОтражатьВРеглУчете
	|	И Строки.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
		
	#Область АмортизационнаяПремияДтКВ
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт КВ :: Кт <ПустаяСсылка>)
	|//
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Регистратор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизационнаяПремия КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втСтоимостьОС КАК Строки
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОстаткиПрочихРасходов_Дт_Расходы__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки прочих расходов (Дт <25, 26, 44, 20, 23> :: Кт 000)
	|
	|ВЫБРАТЬ 
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.СуммаБезНДС КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ВнеоборотныйАктив КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА НЕ ОбъектыСтроительства.Ссылка ЕСТЬ NULL
	|		ТОГДА ОбъектыСтроительства.СпособСтроительства
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл - Строки.СуммаПР - Строки.СуммаВР КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки вложений во внеоборотные активы"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО 
	|		ОбъектыСтроительства.Ссылка = Строки.ВнеоборотныйАктив
	|ГДЕ 
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы)
	|	И (Операция.ОтражатьВБУиНУ ИЛИ Операция.ОтражатьВУУ)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьНМА_Дт_СчетУчета__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки счета учета НМА (Дт СчетУчета:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки счета учета НМА"" КАК Содержание
	|ИЗ
	|	втСтоимостьНМА КАК Строки
	|ГДЕ
	|	Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьНМАЦФ_Дт_СчетУчета__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки целевых средств на счете учета НМА (Дт СчетУчета:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки целевых средств в восстановительной стоимости НМА"" КАК Содержание
	|ИЗ
	|	втСтоимостьНМА КАК Строки
	|ГДЕ
	|	Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область АмортизацияНМА_Дт_000__Кт_СчетАмортизации
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Накопленная амортизация НМА (Дт 000:: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	""Накопленная амортизация НМА"" КАК Содержание
	|ИЗ
	|	втАмортизацияНМА КАК Строки
	|ГДЕ
	|	Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизацияНМАЦФ_Дт_000__Кт_СчетАмортизации
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Целевые средства в накопленной амортизации НМА (Дт 000:: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	""Остатки целевых средств в накопленной амортизации НМА"" КАК Содержание
	|ИЗ
	|	втАмортизацияНМА КАК Строки
	|ГДЕ
	|	Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область КорректировкаСтоимостиАрендованногоИмуществаНУ // Дт <01.К> Кт <000>
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Корректировка стоимости арендованного имущества по НУ (Дт <01.К> Кт <000>)
	|ВЫБРАТЬ
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Местонахождение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества) КАК СчетДт,
	|	
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.КорректировкаСтоимостиАрендованногоИмуществаНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.КорректировкаСтоимостиАрендованногоИмуществаНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Корректировка стоимости арендованного имущества по НУ"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК Операция
	|	ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК Строки
	|	ПО Строки.Ссылка = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе)
	|	И Строки.КорректировкаСтоимостиАрендованногоИмуществаНУ <> 0
	|	И (Операция.ОтражатьВБУиНУ ИЛИ Операция.ОтражатьВУУ)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область РезервДооценкиСтоимостиОС // Дт <000> Кт СчетДооценки
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Резерв дооценки основного средства (Дт <000> Кт СчетДооценки)
	|ВЫБРАТЬ
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР
	|		КОГДА (Строки.РезервПереоценкиСтоимостиРегл - Строки.РезервПереоценкиАмортизацииРегл) > 0
	|			ТОГДА Строки.РезервПереоценкиСтоимостиРегл - Строки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА (Строки.РезервПереоценкиСтоимости - Строки.РезервПереоценкиАмортизации) > 0
	|			ТОГДА Строки.РезервПереоценкиСтоимости - Строки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервДоОценкиВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА Строки.Подразделение
	|		ИНАЧЕ Операция.Местонахождение              
	|	КОНЕЦ КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	ВЫБОР
	|		КОГДА (Строки.РезервПереоценкиСтоимостиРегл - Строки.РезервПереоценкиАмортизацииРегл) > 0
	|			ТОГДА Строки.РезервПереоценкиСтоимостиРегл - Строки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Резерв дооценки основного средства"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК Операция
	|	ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК Строки
	|	ПО Строки.Ссылка = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|	И ((Строки.РезервПереоценкиСтоимости - Строки.РезервПереоценкиАмортизации) > 0
	|		ИЛИ (Строки.РезервПереоценкиСтоимостиРегл - Строки.РезервПереоценкиАмортизацииРегл) > 0)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область РезервДооценкиСтоимостиНМА // Дт <000> Кт СчетДооценки
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Резерв дооценки НМА (Дт <000> Кт СчетДооценки)
	|ВЫБРАТЬ
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР
	|		КОГДА (Строки.РезервПереоценкиСтоимостиРегл - РезервПереоценкиАмортизацииРегл) > 0
	|			ТОГДА Строки.РезервПереоценкиСтоимостиРегл - РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА (Строки.РезервПереоценкиСтоимости - РезервПереоценкиАмортизации) > 0
	|			ТОГДА Строки.РезервПереоценкиСтоимости - РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервДоОценкиВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Местонахождение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	ВЫБОР
	|		КОГДА (Строки.РезервПереоценкиСтоимостиРегл - РезервПереоценкиАмортизацииРегл) > 0
	|			ТОГДА Строки.РезервПереоценкиСтоимостиРегл - РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Резерв дооценки НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК Операция
	|	ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Строки
	|	ПО Строки.Ссылка = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР)
	|	И ((Строки.РезервПереоценкиСтоимости - Строки.РезервПереоценкиАмортизации) > 0
	|		ИЛИ (Строки.РезервПереоценкиСтоимостиРегл - РезервПереоценкиАмортизацииРегл) > 0)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОбесценениеВНА // Дт <000> Кт СчетОбесцененияВНА
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Резерв дооценки НМА (Дт <000> Кт СчетОбесцененияВНА)
	|ВЫБРАТЬ
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ОбесценениеВНА.ОбесценениеРегл КАК Сумма,
	|	ОбесценениеВНА.ОбесценениеУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбесценениеВНА) КАК ВидСчетаКт,
	|	ОбесценениеВНА.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ОбесценениеВНА.Подразделение КАК ПодразделениеКт,
	|	ОбесценениеВНА.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ОбесценениеВНА.ВнеоборотныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	ОбесценениеВНА.ОбесценениеРегл КАК СуммаВРКт,
	|	ВЫБОР
	|		КОГДА ОбесценениеВНА.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ""Обесценение ОС""
	|		ИНАЧЕ ""Обесценение НМА""
	|	КОНЕЦ КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК Операция
	|	ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ОбесценениеВНА КАК ОбесценениеВНА
	|	ПО
	|		ОбесценениеВНА.Регистратор = Операция.Ссылка
	|		И ОбесценениеВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	#Область втСтоимостьОС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                        КАК Регистратор,
	|	ДанныеДокумента.Дата                          КАК Период,
	|	ДанныеДокумента.Организация                   КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ ДанныеДокумента.Местонахождение
	|	КОНЕЦ                                        КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ДанныеДокумента.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                        КАК Арендатор,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорКонтрагент,
	|	ТаблицаОС.ПодразделениеАрендатора            КАК КорПодразделение,
	|	ТаблицаОС.Договор                            КАК Договор,
	|	ДанныеДокумента.ОтражатьВРеглУчете           КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете            КАК ОтражатьВУпрУчете,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьУУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК Стоимость,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьРегл,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьНУ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьПР,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяПБУ18, ЛОЖЬ)
	|				И ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьБУ 
	|					- ТаблицаОС.ТекущаяСтоимостьНУ 
	|					- ТаблицаОС.ТекущаяСтоимостьПР           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьВР,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьБУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьНУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьНУЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьПРЦФ,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяПБУ18, ЛОЖЬ)
	|				И ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьБУЦФ 
	|					- ТаблицаОС.ТекущаяСтоимостьНУЦФ 
	|					- ТаблицаОС.ТекущаяСтоимостьПРЦФ           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьВРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.СуммаКапитальныхВложенийВключаемыхВРасходыНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизационнаяПремия,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаОС.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиСтоимости,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиСтоимостиРегл,
	|
	|	ТаблицаОС.ЗалоговаяСтоимость                 КАК ЗалоговаяСтоимость
	|ПОМЕСТИТЬ втСтоимостьОС
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДокументыКОтражению.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО УчетнаяПолитикаОрганизаций.Ссылка = ДанныеДокумента.Ссылка
	|			И УчетнаяПолитикаОрганизаций.Организация = ДанныеДокумента.Организация
	|ГДЕ
	|	(ДанныеДокумента.ОтражатьВУУ 
	|			И (ТаблицаОС.ТекущаяСтоимостьУУ <> 0
	|				ИЛИ ТаблицаОС.РезервПереоценкиСтоимости <> 0)
	|		ИЛИ ДанныеДокумента.ОтражатьВБУиНУ 
	|			И (ТаблицаОС.ТекущаяСтоимостьБУ <> 0
	|				ИЛИ ТаблицаОС.ТекущаяСтоимостьНУ <> 0
	|				ИЛИ ТаблицаОС.ТекущаяСтоимостьПР <> 0
	|				ИЛИ ТаблицаОС.ТекущаяСтоимостьБУЦФ <> 0
	|				ИЛИ ТаблицаОС.ТекущаяСтоимостьНУЦФ <> 0
	|				ИЛИ ТаблицаОС.ТекущаяСтоимостьПРЦФ <> 0
	|				ИЛИ ТаблицаОС.ЗалоговаяСтоимость <> 0
	|				ИЛИ ТаблицаОС.СуммаКапитальныхВложенийВключаемыхВРасходыНУ <> 0
	|				ИЛИ ТаблицаОС.РезервПереоценкиСтоимостиРегл <> 0))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                       КАК Регистратор,
	|	ДанныеДокумента.Дата                         КАК Период,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Местонахождение              КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ДанныеДокумента.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                 КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК Арендатор,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорОрганизация,
	|	ДанныеДокумента.Контрагент                   КАК КорКонтрагент,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорПодразделение,
	|	ТаблицаОС.Договор                            КАК Договор,
	|	ДанныеДокумента.ОтражатьВРеглУчете           КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете            КАК ОтражатьВУпрУчете,
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьРегл,
	|	0                                            КАК СтоимостьНУ,
	|	0                                            КАК СтоимостьПР,
	|	0                                            КАК СтоимостьВР,
	|	0                                            КАК СтоимостьЦФ,
	|	0                                            КАК СтоимостьНУЦФ,
	|	0                                            КАК СтоимостьПРЦФ,
	|	0                                            КАК СтоимостьВРЦФ,
	|	0                                            КАК АмортизационнаяПремия,
	|	0                                            КАК РезервПереоценкиСтоимости,
	|	0                                            КАК РезервПереоценкиСтоимостиРегл,
	|	ТаблицаОС.ЗалоговаяСтоимость                 КАК ЗалоговаяСтоимость
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВБУиНУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область втАмортизацияОС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                        КАК Регистратор,
	|	ДанныеДокумента.Дата                          КАК Период,
	|	ДанныеДокумента.Организация                   КАК Организация,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ ДанныеДокумента.Местонахождение
	|	КОНЕЦ                                        КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАмортизацииОС)  КАК ХозяйственнаяОперация,
	|	ТаблицаОС.Договор                            КАК Договор,
	|	ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) КАК НачислятьИзнос,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияУУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК Амортизация,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияРегл,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияНУ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияПР,
	|
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяПБУ18, ЛОЖЬ)
	|				ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|				ИЛИ НЕ ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаОС.НакопленнаяАмортизацияБУ
	|				- ТаблицаОС.НакопленнаяАмортизацияНУ
	|				- ТаблицаОС.НакопленнаяАмортизацияПР
	|	КОНЕЦ                                        КАК АмортизацияВР,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияБУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияНУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияНУЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяПБУ18, ЛОЖЬ)
	|				ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|				ИЛИ НЕ ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаОС.НакопленнаяАмортизацияБУЦФ
	|				- ТаблицаОС.НакопленнаяАмортизацияНУЦФ
	|				- ТаблицаОС.НакопленнаяАмортизацияПРЦФ
	|	КОНЕЦ                                        КАК АмортизацияВРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаОС.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ втАмортизацияОС
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДокументыКОтражению.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО УчетнаяПолитикаОрганизаций.Ссылка = ДанныеДокумента.Ссылка
	|			И УчетнаяПолитикаОрганизаций.Организация = ДанныеДокумента.Организация
	|ГДЕ
	|	(ДанныеДокумента.ОтражатьВУУ
	|			И (ТаблицаОС.НакопленнаяАмортизацияУУ <> 0
	|				ИЛИ ТаблицаОС.РезервПереоценкиАмортизации <> 0)
	|		ИЛИ ДанныеДокумента.ОтражатьВБУиНУ
	|			И (ТаблицаОС.НакопленнаяАмортизацияБУ <> 0
	|				ИЛИ ТаблицаОС.НакопленнаяАмортизацияНУ <> 0
	|				ИЛИ ТаблицаОС.НакопленнаяАмортизацияПР <> 0
	|				ИЛИ ТаблицаОС.НакопленнаяАмортизацияБУЦФ <> 0
	|				ИЛИ ТаблицаОС.НакопленнаяАмортизацияНУЦФ <> 0
	|				ИЛИ ТаблицаОС.НакопленнаяАмортизацияПРЦФ <> 0
	|				ИЛИ ТаблицаОС.РезервПереоценкиАмортизацииРегл <> 0))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область втСтоимостьНМА
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                       КАК Регистратор,
	|	ДанныеДокумента.Дата                         КАК Период,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.Местонахождение              КАК Подразделение,
	|	ТаблицаНМА.НематериальныйАктив               КАК НематериальныйАктив,
	|	ТаблицаНМА.ГруппаФинансовогоУчета            КАК ГруппаФинансовогоУчета,
	|	ТаблицаНМА.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьУУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК Стоимость,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьРегл,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьНУ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьПР,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяПБУ18, ЛОЖЬ)
	|				И ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьБУ 
	|					- ТаблицаНМА.ТекущаяСтоимостьНУ 
	|					- ТаблицаНМА.ТекущаяСтоимостьПР           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьВР,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьБУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьНУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьНУЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьБУЦФ 
	|					- ТаблицаНМА.ТекущаяСтоимостьНУЦФ 
	|					- ТаблицаНМА.ТекущаяСтоимостьПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьВРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаНМА.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиСтоимости,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиСтоимостиРегл
	|ПОМЕСТИТЬ втСтоимостьНМА
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаНМА
	|		ПО ТаблицаНМА.Ссылка = ДокументыКОтражению.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО УчетнаяПолитикаОрганизаций.Ссылка = ДанныеДокумента.Ссылка
	|			И УчетнаяПолитикаОрганизаций.Организация = ДанныеДокумента.Организация
	|ГДЕ
	|	(ДанныеДокумента.ОтражатьВУУ
	|			И (ТаблицаНМА.ТекущаяСтоимостьУУ <> 0
	|				ИЛИ ТаблицаНМА.РезервПереоценкиСтоимости <> 0)
	|		ИЛИ ДанныеДокумента.ОтражатьВБУиНУ
	|			И (ТаблицаНМА.ТекущаяСтоимостьБУ <> 0
	|				ИЛИ ТаблицаНМА.ТекущаяСтоимостьНУ <> 0
	|				ИЛИ ТаблицаНМА.ТекущаяСтоимостьПР <> 0
	|				ИЛИ ТаблицаНМА.ТекущаяСтоимостьБУЦФ <> 0
	|				ИЛИ ТаблицаНМА.ТекущаяСтоимостьНУЦФ <> 0
	|				ИЛИ ТаблицаНМА.ТекущаяСтоимостьПРЦФ <> 0
	|				ИЛИ ТаблицаНМА.РезервПереоценкиСтоимостиРегл <> 0))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область втАмортизацияНМА
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                       КАК Регистратор,
	|	ДанныеДокумента.Дата                         КАК Период,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.Местонахождение              КАК Подразделение,
	|	ТаблицаНМА.НематериальныйАктив               КАК НематериальныйАктив,
	|	ТаблицаНМА.ГруппаФинансовогоУчета            КАК ГруппаФинансовогоУчета,
	|	ТаблицаНМА.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияУУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                         КАК Амортизация,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                         КАК АмортизацияРегл,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                         КАК АмортизацияНУ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                         КАК АмортизацияПР,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяПБУ18, ЛОЖЬ)
	|				И ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияБУ
	|					- ТаблицаНМА.НакопленнаяАмортизацияНУ
	|					- ТаблицаНМА.НакопленнаяАмортизацияПР           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияВР,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияБУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияНУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияНУЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяПБУ18, ЛОЖЬ)
	|				И ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияБУЦФ
	|					- ТаблицаНМА.НакопленнаяАмортизацияНУЦФ
	|					- ТаблицаНМА.НакопленнаяАмортизацияПРЦФ           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияВРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаНМА.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ втАмортизацияНМА
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаНМА
	|		ПО ТаблицаНМА.Ссылка = ДокументыКОтражению.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО УчетнаяПолитикаОрганизаций.Ссылка = ДанныеДокумента.Ссылка
	|			И УчетнаяПолитикаОрганизаций.Организация = ДанныеДокумента.Организация
	|ГДЕ
	|	(ДанныеДокумента.ОтражатьВУУ
	|			И (ТаблицаНМА.НакопленнаяАмортизацияУУ <> 0
	|				ИЛИ ТаблицаНМА.РезервПереоценкиАмортизации <> 0)
	|		ИЛИ ДанныеДокумента.ОтражатьВБУиНУ
	|			И (ТаблицаНМА.НакопленнаяАмортизацияБУ <> 0
	|				ИЛИ ТаблицаНМА.НакопленнаяАмортизацияНУ <> 0
	|				ИЛИ ТаблицаНМА.НакопленнаяАмортизацияПР <> 0
	|				ИЛИ ТаблицаНМА.НакопленнаяАмортизацияБУЦФ <> 0
	|				ИЛИ ТаблицаНМА.НакопленнаяАмортизацияНУЦФ <> 0
	|				ИЛИ ТаблицаНМА.НакопленнаяАмортизацияПРЦФ <> 0
	|				ИЛИ ТаблицаНМА.РезервПереоценкиАмортизацииРегл <> 0))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	СписокЗапросов.Добавить(Символы.ПС);
	
	Возврат СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	//-- Локализация
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	
	ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСпособыОтраженияРасходовПоИмущественнымНалогам(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияОС(ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияНМА(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	
	//-- Локализация
	
КонецПроцедуры
 
// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                         КАК Регистратор,
	|	&Период                         КАК Период,
	|	ТаблицаОС.ОсновноеСредство      КАК ОсновноеСредство,
	|	&Организация                    КАК Организация,
	|	НЕОПРЕДЕЛЕНО                    КАК Партнер,
	|	НЕОПРЕДЕЛЕНО                    КАК Контрагент,
	|	ТаблицаОС.Договор               КАК Договор,
	|	ТаблицаОС.СпособПоступления     КАК СпособПоступления,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВБУ 
	|			ТОГДА ТаблицаОС.ДатаПринятияКУчетуБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ                           КАК ДатаВводаВЭксплуатациюБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВНУ 
	|			ТОГДА ТаблицаОС.ДатаПринятияКУчетуНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ                           КАК ДатаВводаВЭксплуатациюНУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаОС.ДатаПринятияКУчетуУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ                           КАК ДатаВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУ И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ДокументВводаВЭксплуатациюБУ 
	|		КОГДА &ОтражатьВБУ И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюБУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВНУ И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ДокументВводаВЭксплуатациюБУ 
	|		КОГДА &ОтражатьВНУ И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюНУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ДокументВводаВЭксплуатациюУУ 
	|		КОГДА &ОтражатьВУпрУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВБУ И ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ) 
	|		КОГДА &ОтражатьВБУ 
	|			ТОГДА ТаблицаОС.МетодНачисленияАмортизацииБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВНУ 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.Линейный) 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииНУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВБУ 
	|			ТОГДА ТаблицаОС.ПорядокУчетаБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ПорядокУчетаБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВНУ 
	|			ТОГДА ТаблицаОС.ПорядокУчетаНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПорядокУчетаНУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ПорядокУчетаНУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаОС.ПорядокУчетаУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПорядокУчетаУУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ПорядокУчетаУУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВБУ
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВНУ 
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьНУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьУУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВНУ 
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияНУДо2009 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.АмортизацияДо2009, 0)
	|	КОНЕЦ                           КАК АмортизацияДо2009,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВНУ 
	|			ТОГДА ТаблицаОС.СрокИспользованияНУДо2009 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009, 0)
	|	КОНЕЦ                           КАК ФактическийСрокИспользованияДо2009
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК втПервоначальныеСведенияОС
	|		ПО втПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                         КАК Регистратор,
	|	&Период                         КАК Период,
	|	ТаблицаОС.ОсновноеСредство      КАК ОсновноеСредство,
	|	&Организация                    КАК Организация,
	|	&Партнер                        КАК Партнер,
	|   &Контрагент                     КАК Контрагент,
	|	ТаблицаОС.Договор               КАК Договор,
	|	НЕОПРЕДЕЛЕНО                    КАК СпособПоступления,
	|
	|	ТаблицаОС.ДатаПринятияКУчету    КАК ДатаВводаВЭксплуатациюБУ,
	|	ТаблицаОС.ДатаПринятияКУчету    КАК ДатаВводаВЭксплуатациюНУ,
	|	ДАТАВРЕМЯ(1, 1, 1)              КАК ДатаВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ДокументВводаВЭксплуатацию 
	|		КОГДА &ОтражатьВРеглУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюБУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ДокументВводаВЭксплуатацию 
	|		КОГДА &ОтражатьВРеглУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюНУ,
	|
	|	НЕОПРЕДЕЛЕНО                    КАК ДокументВводаВЭксплуатациюУУ,
	|
	|	НЕОПРЕДЕЛЕНО                    КАК МетодНачисленияАмортизацииБУ,
	|	НЕОПРЕДЕЛЕНО                    КАК МетодНачисленияАмортизацииНУ,
	|	НЕОПРЕДЕЛЕНО                    КАК ПорядокУчетаБУ,
	|	НЕОПРЕДЕЛЕНО                    КАК ПорядокУчетаНУ,
	|	НЕОПРЕДЕЛЕНО                    КАК ПорядокУчетаУУ,
	|	0                               КАК ПервоначальнаяСтоимостьБУ,
	|	0                               КАК ПервоначальнаяСтоимостьНУ,
	|	0                               КАК ПервоначальнаяСтоимостьУУ,
	|
	|	0                               КАК АмортизацияДо2009,
	|	0                               КАК ФактическийСрокИспользованияДо2009
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПервоначальныеСведенияНМА(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияНМА(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                КАК Регистратор,
	|	&Период                                КАК Период,
	|	ТаблицаДокумента.НематериальныйАктив   КАК НематериальныйАктив,
	|	&Организация                           КАК Организация,
	|	ТаблицаДокумента.СпособПоступления     КАК СпособПоступления,
	|
	|	ТаблицаДокумента.ДатаПриобретения      КАК ДатаПриобретения,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВБУ 
	|			ТОГДА ТаблицаДокумента.ДатаПринятияКУчетуБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ДатаПринятияКУчетуБУ, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ                           КАК ДатаПринятияКУчетуБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВБУ 
	|			ТОГДА ТаблицаДокумента.ДатаПринятияКУчетуНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ДатаПринятияКУчетуНУ, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ                           КАК ДатаПринятияКУчетуНУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаДокумента.ДатаПринятияКУчетуУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ДатаПринятияКУчетуУУ, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ                           КАК ДатаПринятияКУчетуУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУ И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаДокумента.ДокументПринятияКУчетуБУ 
	|		КОГДА &ОтражатьВБУ И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ДокументПринятияКУчетуБУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВНУ И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаДокумента.ДокументПринятияКУчетуБУ 
	|		КОГДА &ОтражатьВНУ И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ДокументПринятияКУчетуНУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ДокументПринятияКУчетуНУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВУпрУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаДокумента.ДокументПринятияКУчетуУУ 
	|		КОГДА &ОтражатьВУпрУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ДокументПринятияКУчетуУУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ДокументПринятияКУчетуУУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВБУ 
	|			ТОГДА ТаблицаДокумента.МетодНачисленияАмортизацииБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.МетодНачисленияАмортизацииБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВНУ 
	|			ТОГДА ТаблицаДокумента.МетодНачисленияАмортизацииНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.МетодНачисленияАмортизацииНУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииНУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаДокумента.ПервоначальнаяСтоимостьУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьУУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьУУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВБУ
	|			ТОГДА ТаблицаДокумента.ПервоначальнаяСтоимостьБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВНУ 
	|			ТОГДА ТаблицаДокумента.ПервоначальнаяСтоимостьНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьНУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВБУ
	|			ТОГДА ТаблицаДокумента.ПервоначальнаяСтоимостьБУ - ТаблицаДокумента.ПервоначальнаяСтоимостьНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьВР, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьВР,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВНУ 
	|			ТОГДА ТаблицаДокумента.ПорядокУчетаНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ПорядокУчетаНУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ПорядокУчетаНУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВНУ 
	|			ТОГДА ТаблицаДокумента.АмортизацияДо2009 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.АмортизацияДо2009, 0)
	|	КОНЕЦ                           КАК АмортизацияДо2009,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВНУ 
	|			ТОГДА ТаблицаДокумента.СрокИспользованияНУДо2009 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ФактическийСрокИспользованияДо2009, 0)
	|	КОНЕЦ                           КАК ФактическийСрокИспользованияДо2009
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаДокумента
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияНМА КАК втПервоначальныеСведенияНМА
	|		ПО втПервоначальныеСведенияНМА.НематериальныйАктив = ТаблицаДокумента.НематериальныйАктив
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаСтоимостьОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ &Местонахождение
	|	КОНЕЦ                                        КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА &Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                        КАК Арендатор,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорКонтрагент,
	|	ТаблицаОС.ПодразделениеАрендатора            КАК КорПодразделение,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	ТаблицаОС.ТекущаяСтоимостьУУ                 КАК Стоимость,
	|	ТаблицаОС.ТекущаяСтоимостьБУ                 КАК СтоимостьРегл,
	|	ТаблицаОС.ТекущаяСтоимостьНУ                 КАК СтоимостьНУ,
	|	ТаблицаОС.ТекущаяСтоимостьПР                 КАК СтоимостьПР,
	|
	|	ТаблицаОС.ТекущаяСтоимостьБУ 
	|		- ТаблицаОС.ТекущаяСтоимостьНУ 
	|		- ТаблицаОС.ТекущаяСтоимостьПР           КАК СтоимостьВР,
	|
	|	ТаблицаОС.ТекущаяСтоимостьБУЦФ               КАК СтоимостьЦФ,
	|	ТаблицаОС.ТекущаяСтоимостьНУЦФ               КАК СтоимостьНУЦФ,
	|	ТаблицаОС.ТекущаяСтоимостьПРЦФ               КАК СтоимостьПРЦФ,
	|
	|	ТаблицаОС.ТекущаяСтоимостьБУЦФ 
	|		- ТаблицаОС.ТекущаяСтоимостьНУЦФ 
	|		- ТаблицаОС.ТекущаяСтоимостьПРЦФ         КАК СтоимостьВРЦФ,
	|
	|	ТаблицаОС.СуммаКапитальныхВложенийВключаемыхВРасходыНУ КАК АмортизационнаяПремия,
	|	ТаблицаОС.РезервПереоценкиСтоимости          КАК РезервПереоценкиСтоимости,
	|	ТаблицаОС.РезервПереоценкиСтоимостиРегл      КАК РезервПереоценкиСтоимостиРегл,
	|
	|	0 КАК ПриростСтоимости,
	|	0 КАК ПриростСтоимостиРегл,
	|
	|	ТаблицаОС.КорректировкаСтоимостиАрендованногоИмуществаНУ КАК НеУчитываемаяСтоимостьНУ,
	|
	|	ВЫБОР
	|		КОГДА &РасчетыМеждуОрганизациямиАрендатор
	|			ТОГДА ТаблицаОС.ЗалоговаяСтоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК ЗалоговаяСтоимость,
	|
	|	&НалогообложениеНДС                          КАК НалогообложениеНДС,
	|	ТаблицаОС.ИдентификаторСтроки                КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСтоимостиОС)  КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковСтоимостиОС) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (ТаблицаОС.ТекущаяСтоимостьУУ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьБУ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьНУ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьПР <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьБУЦФ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьНУЦФ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьПРЦФ <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	НЕОПРЕДЕЛЕНО                                 КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК Арендатор,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорКонтрагент,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорПодразделение,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьРегл,
	|	0                                            КАК СтоимостьНУ,
	|	0                                            КАК СтоимостьПР,
	|	0                                            КАК СтоимостьВР,
	|	0                                            КАК СтоимостьЦФ,
	|	0                                            КАК СтоимостьНУЦФ,
	|	0                                            КАК СтоимостьПРЦФ,
	|	0                                            КАК СтоимостьВРЦФ,
	|	0                                            КАК АмортизационнаяПремия,
	|	0                                            КАК РезервПереоценкиСтоимости,
	|	0                                            КАК РезервПереоценкиСтоимостиРегл,
	|
	|	ВЫБОР 
	|		КОГДА (ТаблицаОС.РезервПереоценкиСтоимости - ТаблицаОС.РезервПереоценкиАмортизации) > 0
	|			ТОГДА ТаблицаОС.РезервПереоценкиСтоимости - ТаблицаОС.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПриростСтоимости,
	|
	|	ВЫБОР 
	|		КОГДА (ТаблицаОС.РезервПереоценкиСтоимостиРегл - ТаблицаОС.РезервПереоценкиАмортизацииРегл) > 0
	|			ТОГДА ТаблицаОС.РезервПереоценкиСтоимостиРегл - ТаблицаОС.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПриростСтоимостиРегл,
	|
	|	0                                            КАК НеУчитываемаяСтоимостьНУ,
	|	0                                            КАК ЗалоговаяСтоимость,
	|
	|	&НалогообложениеНДС                          КАК НалогообложениеНДС,
	|	ТаблицаОС.ИдентификаторСтроки                КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСтоимостиОС)  КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковСтоимостиОС) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И ((ТаблицаОС.РезервПереоценкиСтоимости - ТаблицаОС.РезервПереоценкиАмортизации) > 0
	|			ИЛИ (ТаблицаОС.РезервПереоценкиСтоимостиРегл - ТаблицаОС.РезервПереоценкиАмортизацииРегл) > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Местонахождение                             КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	&ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                 КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК Арендатор,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорОрганизация,
	|	&Контрагент                                  КАК КорКонтрагент,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорПодразделение,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьРегл,
	|	0                                            КАК СтоимостьНУ,
	|	0                                            КАК СтоимостьПР,
	|	0                                            КАК СтоимостьВР,
	|	0                                            КАК СтоимостьЦФ,
	|	0                                            КАК СтоимостьНУЦФ,
	|	0                                            КАК СтоимостьПРЦФ,
	|	0                                            КАК СтоимостьВРЦФ,
	|	0                                            КАК АмортизационнаяПремия,
	|	0                                            КАК РезервПереоценкиСтоимости,
	|	0                                            КАК РезервПереоценкиСтоимостиРегл,
	|	0                                            КАК ПриростСтоимости,
	|	0                                            КАК ПриростСтоимостиРегл,
	|	0                                            КАК НеУчитываемаяСтоимостьНУ,
	|	ТаблицаОС.ЗалоговаяСтоимость                 КАК ЗалоговаяСтоимость,
	|
	|	&НалогообложениеНДС                          КАК НалогообложениеНДС,
	|	&ИдентификаторНеиспользуемойФинЗаписи        КАК ИдентификаторФинЗаписи,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаАмортизацияОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ &Местонахождение
	|	КОНЕЦ                                        КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАмортизацииОС)  КАК ХозяйственнаяОперация,
	|	ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) КАК НачислятьИзнос,
	|	ТаблицаОС.НакопленнаяАмортизацияУУ           КАК Амортизация,
	|	ТаблицаОС.НакопленнаяАмортизацияБУ           КАК АмортизацияРегл,
	|	ТаблицаОС.НакопленнаяАмортизацияНУ           КАК АмортизацияНУ,
	|	ТаблицаОС.НакопленнаяАмортизацияПР           КАК АмортизацияПР,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаОС.НакопленнаяАмортизацияБУ
	|				- ТаблицаОС.НакопленнаяАмортизацияНУ
	|				- ТаблицаОС.НакопленнаяАмортизацияПР
	|	КОНЕЦ                                        КАК АмортизацияВР,
	|
	|	ТаблицаОС.НакопленнаяАмортизацияБУЦФ         КАК АмортизацияЦФ,
	|	ТаблицаОС.НакопленнаяАмортизацияНУЦФ         КАК АмортизацияНУЦФ,
	|	ТаблицаОС.НакопленнаяАмортизацияПРЦФ         КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаОС.НакопленнаяАмортизацияБУЦФ
	|				- ТаблицаОС.НакопленнаяАмортизацияНУЦФ
	|				- ТаблицаОС.НакопленнаяАмортизацияПРЦФ
	|	КОНЕЦ                                        КАК АмортизацияВРЦФ,
	|	ТаблицаОС.РезервПереоценкиАмортизации        КАК РезервПереоценкиАмортизации,
	|	ТаблицаОС.РезервПереоценкиАмортизацииРегл    КАК РезервПереоценкиАмортизацииРегл,
	|
	|	ТаблицаОС.ИдентификаторСтроки                КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковАмортизацииОС) КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (ТаблицаОС.НакопленнаяАмортизацияУУ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияБУ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияНУ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияПР <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияБУЦФ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияНУЦФ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияПРЦФ <> 0
	|		ИЛИ ТаблицаОС.РезервПереоценкиАмортизации <> 0
	|		ИЛИ ТаблицаОС.РезервПереоценкиАмортизацииРегл <> 0)";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаСтоимостьНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Местонахождение                             КАК Подразделение,
	|	Таблица.НематериальныйАктив                  КАК НематериальныйАктив,
	|	Таблица.ГруппаФинансовогоУчета               КАК ГруппаФинансовогоУчета,
	|	Таблица.НаправлениеДеятельности              КАК НаправлениеДеятельности,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|
	|	Таблица.ТекущаяСтоимостьУУ                   КАК Стоимость,
	|	Таблица.ТекущаяСтоимостьБУ                   КАК СтоимостьРегл,
	|	Таблица.ТекущаяСтоимостьНУ                   КАК СтоимостьНУ,
	|	Таблица.ТекущаяСтоимостьПР                   КАК СтоимостьПР,
	|
	|	Таблица.ТекущаяСтоимостьБУ 
	|		- Таблица.ТекущаяСтоимостьНУ 
	|		- Таблица.ТекущаяСтоимостьПР             КАК СтоимостьВР,
	|
	|	Таблица.ТекущаяСтоимостьБУЦФ                 КАК СтоимостьЦФ,
	|	Таблица.ТекущаяСтоимостьНУЦФ                 КАК СтоимостьНУЦФ,
	|	Таблица.ТекущаяСтоимостьПРЦФ                 КАК СтоимостьПРЦФ,
	|
	|	Таблица.ТекущаяСтоимостьБУЦФ 
	|		- Таблица.ТекущаяСтоимостьНУЦФ 
	|		- Таблица.ТекущаяСтоимостьПРЦФ           КАК СтоимостьВРЦФ,
	|
	|	Таблица.РезервПереоценкиСтоимости            КАК РезервПереоценкиСтоимости,
	|	Таблица.РезервПереоценкиСтоимостиРегл        КАК РезервПереоценкиСтоимостиРегл,
	|
	|	0 КАК ПриростСтоимости,
	|
	|	0 КАК ПриростСтоимостиРегл,
	|
	|	Таблица.ИдентификаторСтроки                  КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСтоимостиНМАиРасходовНаНИОКР) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковСтоимостиНМАиРасходовНаНИОКР) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (Таблица.ТекущаяСтоимостьУУ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьБУ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьНУ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьПР <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьБУЦФ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьНУЦФ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьПРЦФ <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	НЕОПРЕДЕЛЕНО                                 КАК Подразделение,
	|	Таблица.НематериальныйАктив                  КАК НематериальныйАктив,
	|	Таблица.ГруппаФинансовогоУчета               КАК ГруппаФинансовогоУчета,
	|	Таблица.НаправлениеДеятельности              КАК НаправлениеДеятельности,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьРегл,
	|	0                                            КАК СтоимостьНУ,
	|	0                                            КАК СтоимостьПР,
	|	0                                            КАК СтоимостьВР,
	|	0                                            КАК СтоимостьЦФ,
	|	0                                            КАК СтоимостьНУЦФ,
	|	0                                            КАК СтоимостьПРЦФ,
	|	0                                            КАК СтоимостьВРЦФ,
	|
	|	0                                            КАК РезервПереоценкиСтоимости,
	|	0                                            КАК РезервПереоценкиСтоимостиРегл,
	|
	|	ВЫБОР 
	|		КОГДА (Таблица.РезервПереоценкиСтоимости - Таблица.РезервПереоценкиАмортизации) > 0
	|			ТОГДА Таблица.РезервПереоценкиСтоимости - Таблица.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПриростСтоимости,
	|
	|	ВЫБОР 
	|		КОГДА (Таблица.РезервПереоценкиСтоимостиРегл - Таблица.РезервПереоценкиАмортизацииРегл) > 0
	|			ТОГДА Таблица.РезервПереоценкиСтоимостиРегл - Таблица.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПриростСтоимостиРегл,
	|
	|	Таблица.ИдентификаторСтроки                  КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСтоимостиНМАиРасходовНаНИОКР) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковСтоимостиНМАиРасходовНаНИОКР) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И ((Таблица.РезервПереоценкиСтоимости - Таблица.РезервПереоценкиАмортизации) > 0
	|		ИЛИ (Таблица.РезервПереоценкиСтоимостиРегл - Таблица.РезервПереоценкиАмортизацииРегл) > 0)";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаАмортизацияНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Местонахождение                             КАК Подразделение,
	|	Таблица.НематериальныйАктив                  КАК НематериальныйАктив,
	|	Таблица.ГруппаФинансовогоУчета               КАК ГруппаФинансовогоУчета,
	|	Таблица.НаправлениеДеятельности              КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАмортизацииНМАиРасходовНаНИОКР)  КАК ХозяйственнаяОперация,
	|	Таблица.НакопленнаяАмортизацияУУ             КАК Амортизация,
	|	Таблица.НакопленнаяАмортизацияБУ             КАК АмортизацияРегл,
	|	Таблица.НакопленнаяАмортизацияНУ             КАК АмортизацияНУ,
	|	Таблица.НакопленнаяАмортизацияПР             КАК АмортизацияПР,
	|
	|	Таблица.НакопленнаяАмортизацияБУ
	|		- Таблица.НакопленнаяАмортизацияНУ
	|		- Таблица.НакопленнаяАмортизацияПР       КАК АмортизацияВР,
	|
	|	Таблица.НакопленнаяАмортизацияБУЦФ           КАК АмортизацияЦФ,
	|	Таблица.НакопленнаяАмортизацияНУЦФ           КАК АмортизацияНУЦФ,
	|	Таблица.НакопленнаяАмортизацияПРЦФ           КАК АмортизацияПРЦФ,
	|
	|	Таблица.НакопленнаяАмортизацияБУЦФ
	|		- Таблица.НакопленнаяАмортизацияНУЦФ
	|		- Таблица.НакопленнаяАмортизацияПРЦФ     КАК АмортизацияВРЦФ,
	|
	|	Таблица.РезервПереоценкиАмортизации          КАК РезервПереоценкиАмортизации,
	|	Таблица.РезервПереоценкиАмортизацииРегл      КАК РезервПереоценкиАмортизацииРегл,
	|
	|	Таблица.ИдентификаторСтроки                  КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковАмортизацииНМАиРасходовНаНИОКР) КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (Таблица.НакопленнаяАмортизацияУУ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияБУ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияНУ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияПР <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияБУЦФ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияНУЦФ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияПРЦФ <> 0
	|		ИЛИ Таблица.РезервПереоценкиАмортизации <> 0
	|		ИЛИ Таблица.РезервПереоценкиАмортизацииРегл <> 0)";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПорядокУчетаОСУУ() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                          КАК Регистратор,
	|	&Период                                          КАК Период,
	|	&Организация                                     КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние,
	|	ТаблицаОС.НачислятьАмортизациюУУ                 КАК НачислятьАмортизациюУУ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ПорядокУчетаУУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|				И ТаблицаОС.ПорядокУчетаУУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету)
	|				И ТаблицаОС.ПорядокУчетаУУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|			
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|
	|		КОГДА ТаблицаОС.СтатьяРасходовУУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И &ОтражатьВУпрУчете
	|				И &ОтражатьВРеглУчете
	|				И (ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации)
	|					ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету)
	|					ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена))
	|
	|			ТОГДА ТаблицаОС.СтатьяРасходовБУ
	|
	|		КОГДА ТаблицаОС.СтатьяРасходовУУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И &ОтражатьВУпрУчете
	|				И &ОтражатьВРеглУчете
	|				И (ТаблицаОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации)
	|					ИЛИ ТаблицаОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету)
	|					ИЛИ ТаблицаОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена))
	|
	|			ТОГДА ТаблицаОС.СтатьяРасходовНУ
	|
	|		ИНАЧЕ ТаблицаОС.СтатьяРасходовУУ 
	|	КОНЕЦ КАК СтатьяРасходов,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ПорядокУчетаУУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|				И ТаблицаОС.ПорядокУчетаУУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету)
	|				И ТаблицаОС.ПорядокУчетаУУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|			
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|
	|		КОГДА ТаблицаОС.СтатьяРасходовУУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И &ОтражатьВУпрУчете
	|				И &ОтражатьВРеглУчете
	|				И (ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации)
	|					ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету)
	|					ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена))
	|
	|			ТОГДА ТаблицаОС.АналитикаРасходовБУ
	|
	|		КОГДА ТаблицаОС.СтатьяРасходовУУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И &ОтражатьВУпрУчете
	|				И &ОтражатьВРеглУчете
	|				И (ТаблицаОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации)
	|					ИЛИ ТаблицаОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету)
	|					ИЛИ ТаблицаОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена))
	|
	|			ТОГДА ТаблицаОС.АналитикаРасходовНУ
	|
	|		ИНАЧЕ ТаблицаОС.АналитикаРасходовУУ 
	|	КОНЕЦ КАК АналитикаРасходов,
	|
	|	ТаблицаОС.ПередаватьРасходыВДругуюОрганизацию    КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ТаблицаОС.ОрганизацияПолучательРасходов          КАК ОрганизацияПолучательРасходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВУпрУчете
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                                          КАК Регистратор,
	|	&Период                                          КАК Период,
	|	&Организация                                     КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету) КАК Состояние,
	|	ЛОЖЬ                                             КАК НачислятьАмортизациюУУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	ЛОЖЬ                                             КАК ПередаватьРасходыВДругуюОрганизацию,
	|	НЕОПРЕДЕЛЕНО                                     КАК ОрганизацияПолучательРасходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПорядокУчетаНМАУУ() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                          КАК Регистратор,
	|	&Период                                          КАК Период,
	|	&Организация                                     КАК Организация,
	|	Таблица.НематериальныйАктив                      КАК НематериальныйАктив,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету) КАК Состояние,
	|	Таблица.ПорядокУчетаУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию) КАК НачислятьАмортизациюУУ,
	|
	|	ВЫБОР 
	|		КОГДА Таблица.СтатьяРасходовУУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И &ОтражатьВУпрУчете
	|				И &ОтражатьВРеглУчете
	|				И Таблица.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|
	|			ТОГДА Таблица.СтатьяРасходовБУ
	|
	|		КОГДА Таблица.СтатьяРасходовУУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И &ОтражатьВУпрУчете
	|				И &ОтражатьВРеглУчете
	|				И (Таблица.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|					ИЛИ Таблица.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету))
	|
	|			ТОГДА Таблица.СтатьяРасходовНУ
	|
	|		ИНАЧЕ Таблица.СтатьяРасходовУУ 
	|	КОНЕЦ КАК СтатьяРасходов,
	|
	|	ВЫБОР 
	|		КОГДА Таблица.СтатьяРасходовУУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И &ОтражатьВУпрУчете
	|				И &ОтражатьВРеглУчете
	|				И Таблица.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|
	|			ТОГДА Таблица.АналитикаРасходовБУ
	|
	|		КОГДА Таблица.СтатьяРасходовУУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И &ОтражатьВУпрУчете
	|				И &ОтражатьВРеглУчете
	|				И (Таблица.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|					ИЛИ Таблица.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету))
	|
	|			ТОГДА Таблица.АналитикаРасходовНУ
	|
	|		ИНАЧЕ Таблица.АналитикаРасходовУУ 
	|	КОНЕЦ КАК АналитикаРасходов,
	|
	|	Таблица.ПередаватьРасходыВДругуюОрганизацию      КАК ПередаватьРасходыВДругуюОрганизацию,
	|	Таблица.ОрганизацияПолучательРасходов            КАК ОрганизацияПолучательРасходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВУпрУчете
	|	И &ОтражатьВОперативномУчете";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции
 
Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра, ПереопределениеРасчетаПараметров, СинонимТаблицыДокумента) Экспорт

	ТекстЗапроса = Неопределено;
	ТекстыЗапроса = Новый СписокЗначений;
	
	//++ Локализация
	
	Если ИмяРегистра = "СпособыОтраженияРасходовПоИмущественнымНалогам" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаСпособыОтраженияРасходовПоИмущественнымНалогам(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаОС";
		
	КонецЕсли;
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбработатьОСПередЗаписью(Объект) Экспорт

	//++ Локализация
	
	Если Объект.ОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаНДС",
			Объект.Организация,
			Объект.Дата);
	
	РаздельныйУчетВНАПоНалогообложениюНДС = 
		ПараметрыУчетнойПолитики <> Неопределено 
		И ПараметрыУчетнойПолитики.РаздельныйУчетВНАПоНалогообложениюНДС;
	
	Если РаздельныйУчетВНАПоНалогообложениюНДС Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ВариантРаздельногоУчетаНДС", Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента);
	ЗначенияЗаполнения.Вставить("НалогообложениеНДС", ВнеоборотныеАктивы.НалогообложениеНДС(Объект.Организация, Объект.Дата));
	
	Для Каждого Строка Из Объект.ОС Цикл
		ЗаполнитьЗначенияСвойств(Строка, ЗначенияЗаполнения);
	КонецЦикла;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ОбработатьНМАПередЗаписью(Объект) Экспорт

	//++ Локализация
	
	Если Объект.НМА.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаНДС",
			Объект.Организация,
			Объект.Дата);
	
	РаздельныйУчетВНАПоНалогообложениюНДС = 
		ПараметрыУчетнойПолитики <> Неопределено 
		И ПараметрыУчетнойПолитики.РаздельныйУчетВНАПоНалогообложениюНДС;
	
	Если РаздельныйУчетВНАПоНалогообложениюНДС Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ВариантРаздельногоУчетаНДС", Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента);
	ЗначенияЗаполнения.Вставить("НалогообложениеНДС", ВнеоборотныеАктивы.НалогообложениеНДС(Объект.Организация, Объект.Дата));
	
	Для Каждого Строка Из Объект.НМА Цикл
		ЗаполнитьЗначенияСвойств(Строка, ЗначенияЗаполнения);
	КонецЦикла;
	
	//-- Локализация
	
КонецПроцедуры

// Дополняет параметры выбора статей и аналитик.
// 
// Параметры:
// 	ПараметрыВыбораСтатейИАналитик - Массив из см. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики -
Процедура ДополнитьПараметрыВыбораСтатейИАналитик(ПараметрыВыбораСтатейИАналитик) Экспорт

	//++ Локализация
	
	#Область ОС
	
	// СтатьяРасходовНУ
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.ОС";
	ПараметрыВыбора.Статья = "СтатьяРасходовНУ";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовНУ";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовНУ");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовНУ");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	// СтатьяРасходовНалог
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.ОС";
	ПараметрыВыбора.Статья = "СтатьяРасходовНалог";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовНалог";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовНалог");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовНалог");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	// СтатьяРасходовАмортизационнойПремии
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.ОС";
	ПараметрыВыбора.Статья = "СтатьяРасходовАмортизационнойПремии";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовАмортизационнойПремии";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовАмортизационнойПремии");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовАмортизационнойПремии");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	// СтатьяДоходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.ОС";
	ПараметрыВыбора.Статья = "СтатьяДоходов";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиДоходов = Истина;
	ПараметрыВыбора.АналитикаДоходов = "АналитикаДоходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяДоходовЦФ");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("АналитикаДоходовЦФ");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	#КонецОбласти
	
	#Область НМА
	
	// СтатьяДоходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.ОС";
	ПараметрыВыбора.Статья = "СтатьяДоходов";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиДоходов = Истина;
	ПараметрыВыбора.АналитикаДоходов = "АналитикаДоходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяДоходовЦФ");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("АналитикаДоходовЦФ");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаОсновныеСредства

Процедура ФормаОсновныеСредства_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	СлужебныеПараметрыФормы = Форма.СлужебныеПараметрыФормы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВУУ.Видимость = ИспользоватьРеглУчет И ВестиУУНаПланеСчетовХозрасчетный;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.РегламентированномУчете"),
			НСтр("ru = 'Бухгалтерском и налоговом учете';
				|en = 'Accounting and tax accounting'"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.БухгалтерскомУчете"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.НалоговомУчете"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИБухгалтерскомУчете"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИНалоговомУчете"));
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
		ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
		
		СозданДляПереходаНа24 = ДатаНачалаУчета > ДатаДокумента;
		Элементы.КартинкаДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ДекорацияДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ОтражатьВБУиНУ.ТолькоПросмотр = СозданДляПереходаНа24;
		Элементы.ОтражатьВУУ.ТолькоПросмотр = СозданДляПереходаНа24;
		
		Если НЕ ОбновитьВсе И СозданДляПереходаНа24 Тогда
			Объект.ОтражатьВБУиНУ = Ложь;
			Объект.ОтражатьВУУ = Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ОСЗаполнитьПоДаннымОУ.Видимость = 
			(Объект.ОтражатьВБУиНУ ИЛИ Объект.ОтражатьВУУ)
			И НЕ Объект.ОтражатьВОперативномУчете;
			
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаОсновныеСредства_ДополнитьПараметрыВыбораСтатейИАналитик(ПараметрыВыбораСтатейИАналитик) Экспорт

	//++ Локализация
	
	// СтатьяРасходовНУ
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "";
	ПараметрыВыбора.Статья = "СтатьяРасходовНУ";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовНУ";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовНУ");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовНУ");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	// СтатьяРасходовНалог
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "";
	ПараметрыВыбора.Статья = "СтатьяРасходовНалог";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовНалог";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовНалог");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовНалог");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	// СтатьяРасходовАмортизационнойПремии
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "";
	ПараметрыВыбора.Статья = "СтатьяРасходовАмортизационнойПремии";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовАмортизационнойПремии";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовАмортизационнойПремии");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовАмортизационнойПремии");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	// СтатьяДоходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "";
	ПараметрыВыбора.Статья = "СтатьяДоходов";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиДоходов = Истина;
	ПараметрыВыбора.АналитикаДоходов = "АналитикаДоходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяДоходовЦФ");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("АналитикаДоходовЦФ");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаОсновныеСредства_ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Объект = Форма.Объект;
	
	//++ Локализация
	
	Если ИмяКоманды = Форма.Команды.ЗаполнитьПоДаннымОУ.Имя Тогда
		ЗаполнитьПоДаннымОУ(Объект, Объект.ОС);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаНематериальныеАктивы

Процедура ФормаНематериальныеАктивы_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВУУ.Видимость = ИспользоватьРеглУчет И ВестиУУНаПланеСчетовХозрасчетный;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;
		
		//
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.РегламентированномУчете"),
			НСтр("ru = 'Бухгалтерском и налоговом учете';
				|en = 'Accounting and tax accounting'"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.БухгалтерскомУчете"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.НалоговомУчете"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИБухгалтерскомУчете"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИНалоговомУчете"));
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
		ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
		
		СозданДляПереходаНа24 = ДатаНачалаУчета > ДатаДокумента;
		Элементы.КартинкаДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ДекорацияДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ОтражатьВБУиНУ.ТолькоПросмотр = СозданДляПереходаНа24;
		Элементы.ОтражатьВУУ.ТолькоПросмотр = СозданДляПереходаНа24;
		
		Если НЕ ОбновитьВсе И СозданДляПереходаНа24 Тогда
			Объект.ОтражатьВБУиНУ = Ложь;
			Объект.ОтражатьВУУ = Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.НМАЗаполнитьПоДаннымОУ.Видимость = 
			(Объект.ОтражатьВБУиНУ ИЛИ Объект.ОтражатьВУУ)
			И НЕ Объект.ОтражатьВОперативномУчете;
			
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
Процедура ФормаНематериальныеАктивы_ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Объект = Форма.Объект;
	
	//++ Локализация
	
	Если ИмяКоманды = Форма.Команды.ЗаполнитьПоДаннымОУ.Имя Тогда
		ЗаполнитьПоДаннымОУ(Объект, Объект.НМА);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаПереданныеВАрендуОсновныеСредства

Процедура ФормаПереданныеВАрендуОсновныеСредства_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВУУ.Видимость = ИспользоватьРеглУчет И ВестиУУНаПланеСчетовХозрасчетный;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
		ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
		
		СозданДляПереходаНа24 = ДатаНачалаУчета > ДатаДокумента;
		Элементы.КартинкаДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ДекорацияДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ОтражатьВБУиНУ.ТолькоПросмотр = СозданДляПереходаНа24;
		Элементы.ОтражатьВУУ.ТолькоПросмотр = СозданДляПереходаНа24;
		
		Если НЕ ОбновитьВсе И СозданДляПереходаНа24 Тогда
			Объект.ОтражатьВБУиНУ = Ложь;
			Объект.ОтражатьВУУ = Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ОСЗаполнитьПоДаннымОУ.Видимость = 
			(Объект.ОтражатьВБУиНУ ИЛИ Объект.ОтражатьВУУ)
			И НЕ Объект.ОтражатьВОперативномУчете;
			
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаПереданныеВАрендуОсновныеСредства_ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Объект = Форма.Объект;
	
	//++ Локализация
	
	Если ИмяКоманды = Форма.Команды.ЗаполнитьПоДаннымОУ.Имя Тогда
		ЗаполнитьПоДаннымОУ(Объект, Объект.ОС);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаАрендованныеОсновныеСредства

Процедура ФормаАрендованныеОсновныеСредства_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
		ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
		
		СозданДляПереходаНа24 = ДатаНачалаУчета > ДатаДокумента;
		Элементы.КартинкаДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ДекорацияДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ОтражатьВБУиНУ.ТолькоПросмотр = СозданДляПереходаНа24;
		
		Если НЕ ОбновитьВсе И СозданДляПереходаНа24 Тогда
			Объект.ОтражатьВБУиНУ = Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.АрендованныеОСЗаполнитьПоДаннымОУ.Видимость = 
			(Объект.ОтражатьВБУиНУ ИЛИ Объект.ОтражатьВУУ)
			И НЕ Объект.ОтражатьВОперативномУчете;
			
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаАрендованныеОсновныеСредства_ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Объект = Форма.Объект;
	
	//++ Локализация
	
	Если ИмяКоманды = Форма.Команды.ЗаполнитьПоДаннымОУ.Имя Тогда
		ЗаполнитьПоДаннымОУ(Объект, Объект.АрендованныеОС);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаПредметыЛизингаЗаБалансом

Процедура ФормаПредметыЛизингаЗаБалансом_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
		ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
		
		Элементы.КартинкаДокументПереходаНа2_4.Видимость = ДатаНачалаУчета > ДатаДокумента;
		Элементы.ДекорацияДокументПереходаНа2_4.Видимость = ДатаНачалаУчета > ДатаДокумента;
		Элементы.АрендованныеОСДокументВводаВЭксплуатацию.Видимость = ДатаНачалаУчета > ДатаДокумента;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.АрендованныеОСЗаполнитьПоДаннымОУ.Видимость = 
			(Объект.ОтражатьВБУиНУ ИЛИ Объект.ОтражатьВУУ)
			И НЕ Объект.ОтражатьВОперативномУчете;
			
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаНематериальныеАктивы_ДополнитьПараметрыВыбораСтатейИАналитик(ПараметрыВыбораСтатейИАналитик) Экспорт

	//++ Локализация
	
	// СтатьяРасходовНУ
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "";
	ПараметрыВыбора.Статья = "СтатьяРасходовНУ";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовНУ";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовНУ");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовНУ");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	// СтатьяДоходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "";
	ПараметрыВыбора.Статья = "СтатьяДоходов";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиДоходов = Истина;
	ПараметрыВыбора.АналитикаДоходов = "АналитикаДоходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяДоходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("АналитикаДоходов");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаПредметыЛизингаЗаБалансом_ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Объект = Форма.Объект;
	
	//++ Локализация
	
	Если ИмяКоманды = Форма.Команды.ЗаполнитьПоДаннымОУ.Имя Тогда
		ЗаполнитьПоДаннымОУ(Объект, Объект.АрендованныеОС);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаВложенияВоВнеоборотныеАктивы

Процедура ФормаВложенияВоВнеоборотныеАктивы_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВУУ.Видимость = ИспользоватьРеглУчет И ВестиУУНаПланеСчетовХозрасчетный;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
		ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
		
		СозданДляПереходаНа24 = ДатаНачалаУчета > ДатаДокумента;
		Элементы.КартинкаДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ДекорацияДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ОтражатьВБУиНУ.ТолькоПросмотр = СозданДляПереходаНа24;
		Элементы.ОтражатьВУУ.ТолькоПросмотр = СозданДляПереходаНа24;
		
		Если НЕ ОбновитьВсе И СозданДляПереходаНа24 Тогда
			Объект.ОтражатьВБУиНУ = Ложь;
			Объект.ОтражатьВУУ = Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаВложенияВоВнеоборотныеАктивы_ПриИзмененииРеквизитов(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("УчетнаяПолитикаБухУчета",
			Объект.Организация,
			Объект.Дата);
			
		Форма.ПрименяетсяПБУ18 = Истина;
		Форма.ВедетсяУчетПостоянныхИВременныхРазниц = Истина;
		Если ПараметрыУчетнойПолитики <> Неопределено Тогда
			Форма.ПрименяетсяПБУ18                      = ПараметрыУчетнойПолитики.ПрименяетсяПБУ18;
			Форма.ВедетсяУчетПостоянныхИВременныхРазниц = ПараметрыУчетнойПолитики.ВедетсяУчетПостоянныхИВременныхРазниц;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") Тогда
		
		Если ЗначениеЗаполнено(Объект.Организация) Тогда
			ПараметрыУчетаПоОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(Объект.Организация,
				Объект.Дата);
			Объект.НалогообложениеНДС = ПараметрыУчетаПоОрганизации.ОсновноеНалогообложениеНДСПродажи;
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаВложенияВоВнеоборотныеАктивы_ДополнитьВспомогательныеРеквизиты(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяПБУ18", Форма.ПрименяетсяПБУ18);
	ВспомогательныеРеквизиты.Вставить("ВедетсяУчетПостоянныхИВременныхРазниц", Форма.ВедетсяУчетПостоянныхИВременныхРазниц);
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаРасчетыПоДоговорамАренды

Процедура ФормаРасчетыПоДоговорамАренды_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВУУ.Видимость = ИспользоватьРеглУчет И ВестиУУНаПланеСчетовХозрасчетный;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;
		
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.РасчетыПоДоговорамАрендыЗаполнитьПоДаннымОУ.Видимость = 
			(Объект.ОтражатьВБУиНУ ИЛИ Объект.ОтражатьВУУ)
			И НЕ Объект.ОтражатьВОперативномУчете;
			
	КонецЕсли;
		
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРасчетыПоДоговорамАренды_ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Объект = Форма.Объект;
	
	//++ Локализация
	
	Если ИмяКоманды = Форма.Команды.ЗаполнитьПоДаннымОУ.Имя Тогда
		ЗаполнитьПоДаннымОУ(Объект, Объект.РасчетыПоДоговорамАренды);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаРедактированияСтрокиОС

Процедура ФормаРедактированияСтрокиОС_ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация
	
	Параметры = Форма.Параметры;
	Элементы = Форма.Элементы;
	
	Если Параметры.Свойство("ЗначенияРеквизитов") Тогда
		
		Форма.РезервПереоценкиСтоимостиРеглСумма = 
			?(Форма.РезервПереоценкиСтоимостиРегл < 0, 
				-Форма.РезервПереоценкиСтоимостиРегл, 
				Форма.РезервПереоценкиСтоимостиРегл);
				
		Форма.РезервПереоценкиАмортизацииРеглСумма = 
			?(Форма.РезервПереоценкиАмортизацииРегл < 0, 
				-Форма.РезервПереоценкиАмортизацииРегл, 
				Форма.РезервПереоценкиАмортизацииРегл);
				
		Форма.РезервПереоценкиРеглЗнак = (Форма.РезервПереоценкиСтоимостиРегл > 0);
		
	КонецЕсли;
	
	ДатаУчетнойПолитики = КонецМесяца(Форма.Дата) + 1;
	
	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрОрганизацияФункциональныхОпцийФормы(
		Форма, Форма.Организация, ДатаУчетнойПолитики);
	
	Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Форма.Организация, ДатаУчетнойПолитики);
	Форма.ВедетсяУчетПостоянныхИВременныхРазниц = УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Форма.Организация, ДатаУчетнойПолитики);
	
	Форма.РасчетыМеждуОрганизациямиАрендатор = Параметры.РасчетыМеждуОрганизациямиАрендатор;
	
	Форма.ЕстьСвязанныеОрганизации = Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Форма.Организация);
	
	Форма.КорректировкаСтоимостиАрендованногоИмуществаВР = -Форма.КорректировкаСтоимостиАрендованногоИмуществаНУ;
	
	Форма.ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Форма.Организация);
	Элементы.ДекорацияЗаголовокНУ.Заголовок = СтрШаблон(НСтр("ru = 'НУ (%1):';
															|en = 'TA (%1):'"), Строка(Форма.ВалютаРегл));
	Элементы.ДекорацияЗаголовокПР.Заголовок = СтрШаблон(НСтр("ru = 'ПР (%1):';
															|en = 'PD (%1):'"), Строка(Форма.ВалютаРегл));
	Элементы.ДекорацияЗаголовокВР.Заголовок = СтрШаблон(НСтр("ru = 'ВР (%1):';
															|en = 'TD (%1):'"), Строка(Форма.ВалютаРегл));
	
	Форма.УпрУчетПоДаннымБУ = ПолучитьФункциональнуюОпцию("ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете");
	
	Если Форма.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		ИЛИ Форма.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
		Элементы.ГруппаМестоНахождение.Заголовок = НСтр("ru = 'Учет у арендодателя';
														|en = 'Lessor accounting'");
		Элементы.МОЛ.Подсказка = НСтр("ru = 'Материально ответственное лицо за основное средство на время аренды.';
										|en = 'Person responsible for the fixed asset for the duration of rental.'")
	Иначе
		Элементы.ГруппаМестоНахождение.Заголовок = НСтр("ru = 'Местонахождение';
														|en = 'Location'");
		Элементы.МОЛ.Подсказка = НСтр("ru = 'Материально ответственное лицо за основное средство.';
										|en = 'Person responsible for fixed asset.'")
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	ВспомогательныеРеквизиты = Форма.ВспомогательныеРеквизиты;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
		
		Элементы.ГруппаАмортизацияУУ.ОтображатьЗаголовок = 
			Форма.ОтражатьВРеглУчете;
			
		Элементы.ДекорацияЗаголовокНУ.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ОтражатьВНУ;
		
		Элементы.ДекорацияЗаголовокПР.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц 
			И Форма.ОтражатьВРеглУчете;
		
		Элементы.ДекорацияЗаголовокВР.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц 
			И Форма.ОтражатьВРеглУчете;
			
		//
		
		ЗначениеВидно = НЕ ВспомогательныеРеквизиты.ПрименяетсяФСБУ6;
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"));
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаФинансовогоУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ОтражатьВРеглУчете Тогда
		
			Если ЗначениеЗаполнено(Форма.ГруппаФинансовогоУчета) Тогда
				РеквизитыГФУ = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СтруктураЗначенийПоАналитикеУчета(Форма.ГруппаФинансовогоУчета, СтрРазделить("СтоимостьВНА,СтоимостьВНА_ЦФ,АмортизацияВНА,АмортизацияВНА_ЦФ", ","));
				ТекстСтоимость     = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1';
													|en = 'Determined as %1 account balance for bookkeeping and tax accounting'"), РеквизитыГФУ.СчетУчета_СтоимостьВНА);
				ТекстСтоимостьЦФ   = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1';
													|en = 'Determined as %1 account balance for bookkeeping and tax accounting'"), РеквизитыГФУ.СчетУчета_СтоимостьВНА_ЦФ);
				ТекстАмортизация   = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1';
													|en = 'Determined as %1 account balance for bookkeeping and tax accounting'"), РеквизитыГФУ.СчетУчета_АмортизацияВНА);
				ТекстАмортизацияЦФ = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1';
													|en = 'Determined as %1 account balance for bookkeeping and tax accounting'"), РеквизитыГФУ.СчетУчета_АмортизацияВНА_ЦФ);
			Иначе
				ТекстСтоимость     = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета.';
											|en = 'Determined as GL account balance for bookkeeping and tax accounting.'");
				ТекстСтоимостьЦФ   = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета средств целевого финансирования.';
											|en = 'Determined as balance on ledger account of target funds for accounting and tax accounting.'");
				ТекстАмортизация   = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета накопления амортизации.';
											|en = 'Determined as balance on GL account of accumulated depreciation for bookkeeping and tax accounting.'");
				ТекстАмортизацияЦФ = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета средств целевого финансирование в накопленной амортизации.';
											|en = 'Determined as balance on ledger account of target funds in accumulated depreciation for accounting and tax accounting.'");
			КонецЕсли; 
			
			Если Форма.ПорядокУчетаБУ = Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ Тогда
				СчетИзноса = ПланыСчетов.Хозрасчетный.ИзносОсновныхСредств;
				ТекстАмортизация = СтрШаблон(НСтр("ru = 'Для бухгалтерского учета определяется как остаток на счете %1';
													|en = 'Determined as %1 account balance for bookkeeping'"), СчетИзноса);
			КонецЕсли;
			
		Иначе	
			
			ТекстСтоимость = "";
			ТекстСтоимостьЦФ = "";
			ТекстАмортизация = "";
			ТекстАмортизацияЦФ = "";
			
		КонецЕсли; 
		
		Элементы.ГруппаТекущаяСтоимостьЗаголовок.Подсказка = ТекстСтоимость;
		Элементы.ГруппаТекущаяСтоимостьЗаголовокЦФ.Подсказка = ТекстСтоимостьЦФ;
		Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Подсказка = ТекстАмортизация;
		Элементы.ГруппаНакопленнаяАмортизацияЗаголовокЦФ.Подсказка = ТекстАмортизацияЦФ;
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("АмортизационнаяГруппа")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НедвижимоеИмущество") Тогда
		
		ЗаполнитьПризнакиНастройкиОтраженияРасходовПоНалогам(Форма.ХозяйственнаяОперация, Форма, Форма.ВспомогательныеРеквизиты);
			
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ПриИзмененииРеквизита(ИмяЭлемента, Форма, ДополнительныеПараметры) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если ИмяЭлемента = Элементы.СтатьяДоходовЦФ.Имя Тогда
		
		ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(Форма, Элементы.СтатьяДоходовЦФ);
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ЗаполнитьСведенияОС(Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если НЕ ЗначениеЗаполнено(Форма.ОсновноеСредство)
		ИЛИ НЕ Форма.ОтражатьВОперативномУчете Тогда
		
		Элементы.ГруппаОССтрокой.Видимость = Ложь;
		Элементы.КодПоОКОФ.Видимость = Ложь;
		Элементы.ШифрПоЕНАОФ.Видимость = Ложь;
		
		Возврат;
	КонецЕсли; 
	
	Элементы.ГруппаОССтрокой.Видимость = Истина;
	Элементы.КодПоОКОФ.Видимость = Истина;
	Элементы.ШифрПоЕНАОФ.Видимость = Истина;
	
	ПолучаемыеРеквизиты = Новый Структура;
	ПолучаемыеРеквизиты.Вставить("ГруппаОС");
	ПолучаемыеРеквизиты.Вставить("КодПоОКОФ");
	ПолучаемыеРеквизиты.Вставить("КодПоОКОФПредставление", "КодПоОКОФ.Наименование");
	ПолучаемыеРеквизиты.Вставить("ШифрПоЕНАОФ");
	ПолучаемыеРеквизиты.Вставить("ШифрПоЕНАОФПредставление", "ШифрПоЕНАОФ.Наименование");
	РеквизитыОС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Форма.ОсновноеСредство, ПолучаемыеРеквизиты);
	
	Форма.ГруппаОС = РеквизитыОС.ГруппаОС;
	Если ЗначениеЗаполнено(РеквизитыОС.ГруппаОС) Тогда
		Форма.ГруппаОССтрокой = Новый ФорматированнаяСтрока(Строка(РеквизитыОС.ГруппаОС));
	Иначе
		Форма.ГруппаОССтрокой = Новый ФорматированнаяСтрока(НСтр("ru = 'не заполнена';
																|en = 'not filled in'"),, ЦветаСтиля.ЦветНедоступногоТекста);
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(РеквизитыОС.КодПоОКОФ) Тогда
		Форма.КодПоОКОФ = Новый ФорматированнаяСтрока(Строка(РеквизитыОС.КодПоОКОФ));
		Элементы.КодПоОКОФ.Подсказка = РеквизитыОС.КодПоОКОФПредставление;
		Элементы.КодПоОКОФ.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
	Иначе
		Форма.КодПоОКОФ = Новый ФорматированнаяСтрока(НСтр("ru = 'не заполнен';
															|en = 'not filled in'"),, ЦветаСтиля.ЦветНедоступногоТекста);
		Элементы.КодПоОКОФ.Подсказка = "";
		Элементы.КодПоОКОФ.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(РеквизитыОС.ШифрПоЕНАОФ) Тогда
		Форма.ШифрПоЕНАОФ = Новый ФорматированнаяСтрока(Строка(РеквизитыОС.ШифрПоЕНАОФ));
		Элементы.ШифрПоЕНАОФ.Подсказка = РеквизитыОС.ШифрПоЕНАОФПредставление;
		Элементы.ШифрПоЕНАОФ.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
	Иначе
		Форма.ШифрПоЕНАОФ = Новый ФорматированнаяСтрока(НСтр("ru = 'не заполнен';
															|en = 'not filled in'"),, ЦветаСтиля.ЦветНедоступногоТекста);
		Элементы.ШифрПоЕНАОФ.Подсказка = "";
		Элементы.ШифрПоЕНАОФ.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаРедактированияСтрокиНМА

Процедура ФормаРедактированияСтрокиНМА_ПриИзмененииРеквизита(ИмяЭлемента, Форма, ДополнительныеПараметры) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если ИмяЭлемента = Элементы.НематериальныйАктив.Имя Тогда
		
		ФормаРедактированияСтрокиНМА_НематериальныйАктивПриИзменении(Форма, ДополнительныеПараметры);
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	ВспомогательныеРеквизиты = Форма.ВспомогательныеРеквизиты;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
		
		ДатаУчетнойПолитики = КонецМесяца(Форма.Дата) + 1;
		
		Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Форма.Организация, ДатаУчетнойПолитики);
		Форма.ВедетсяУчетПостоянныхИВременныхРазниц = УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Форма.Организация, ДатаУчетнойПолитики);
		
		Элементы.ДекорацияЗаголовокНУ.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ОтражатьВНУ;
		
		Элементы.ДекорацияЗаголовокПР.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц 
			И Форма.ОтражатьВБУ;
			
		Элементы.ДекорацияЗаголовокВР.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц 
			И Форма.ОтражатьВБУ;
		
		Элементы.ДекорацияПервоначальнаяСтоимостьПР.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц 
			И Форма.ОтражатьВБУ
			И Форма.ОтражатьВОперативномУчете;
		
		Элементы.ДекорацияПервоначальнаяСтоимостьВР.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц 
			И Форма.ОтражатьВБУ
			И Форма.ОтражатьВОперативномУчете;
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаФинансовогоУчета")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ОтражатьВРеглУчете Тогда
			
			Если ЗначениеЗаполнено(Форма.ГруппаФинансовогоУчета) Тогда
				РеквизитыГФУ = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СтруктураЗначенийПоАналитикеУчета(Форма.ГруппаФинансовогоУчета, СтрРазделить("СтоимостьВНА,СтоимостьВНА_ЦФ,АмортизацияВНА,АмортизацияВНА_ЦФ", ","));;
				ТекстСтоимость     = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1';
													|en = 'Determined as %1 account balance for bookkeeping and tax accounting'"), РеквизитыГФУ.СчетУчета_СтоимостьВНА);
				ТекстСтоимостьЦФ   = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1';
													|en = 'Determined as %1 account balance for bookkeeping and tax accounting'"), РеквизитыГФУ.СчетУчета_СтоимостьВНА_ЦФ);
				ТекстАмортизация   = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1';
													|en = 'Determined as %1 account balance for bookkeeping and tax accounting'"), РеквизитыГФУ.СчетУчета_АмортизацияВНА);
				ТекстАмортизацияЦФ = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1';
													|en = 'Determined as %1 account balance for bookkeeping and tax accounting'"), РеквизитыГФУ.СчетУчета_АмортизацияВНА_ЦФ);
			Иначе
				ТекстСтоимость     = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета.';
											|en = 'Determined as GL account balance for bookkeeping and tax accounting.'");
				ТекстСтоимостьЦФ   = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета средств целевого финансирования.';
											|en = 'Determined as balance on ledger account of target funds for accounting and tax accounting.'");
				ТекстАмортизация   = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета накопления амортизации.';
											|en = 'Determined as balance on GL account of accumulated depreciation for bookkeeping and tax accounting.'");
				ТекстАмортизацияЦФ = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета средств целевого финансирование в накопленной амортизации.';
											|en = 'Determined as balance on ledger account of target funds in accumulated depreciation for accounting and tax accounting.'");
			КонецЕсли; 
			
		Иначе
			ТекстСтоимость = "";
			ТекстСтоимостьЦФ = "";
			ТекстАмортизация = "";
			ТекстАмортизацияЦФ = "";
		КонецЕсли; 
		
		Элементы.ГруппаТекущаяСтоимостьЗаголовок.Подсказка = ТекстСтоимость;
		Элементы.ГруппаТекущаяСтоимостьЗаголовокЦФ.Подсказка = ТекстСтоимостьЦФ;
		Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Подсказка = ТекстАмортизация;
		Элементы.ГруппаНакопленнаяАмортизацияЗаголовокЦФ.Подсказка = ТекстАмортизацияЦФ;
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация
	
	Параметры = Форма.Параметры;
	Элементы = Форма.Элементы;
	
	Если Параметры.Свойство("ЗначенияРеквизитов") Тогда
		
		Форма.РезервПереоценкиСтоимостиРеглСумма = 
			?(Форма.РезервПереоценкиСтоимостиРегл < 0, 
				-Форма.РезервПереоценкиСтоимостиРегл, 
				Форма.РезервПереоценкиСтоимостиРегл);
				
		Форма.РезервПереоценкиАмортизацииРеглСумма = 
			?(Форма.РезервПереоценкиАмортизацииРегл < 0, 
				-Форма.РезервПереоценкиАмортизацииРегл, 
				Форма.РезервПереоценкиАмортизацииРегл);
				
		Форма.РезервПереоценкиРеглЗнак = (Форма.РезервПереоценкиСтоимостиРегл > 0);
		
	КонецЕсли;
	
	Форма.ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	Форма.УпрУчетПоДаннымБУ = ПолучитьФункциональнуюОпцию("ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете");
	
	Элементы.ДекорацияЗаголовокНУ.Заголовок = СтрШаблон(НСтр("ru = 'НУ (%1):';
															|en = 'TA (%1):'"), Строка(Форма.ВалютаРегл));
	Элементы.ДекорацияЗаголовокПР.Заголовок = СтрШаблон(НСтр("ru = 'ПР (%1):';
															|en = 'PD (%1):'"), Строка(Форма.ВалютаРегл));
	Элементы.ДекорацияЗаголовокВР.Заголовок = СтрШаблон(НСтр("ru = 'ВР (%1):';
															|en = 'TD (%1):'"), Строка(Форма.ВалютаРегл));
	
	Форма.ЕстьСвязанныеОрганизации = Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Форма.Организация);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ЗаполнитьСведенияНМА(Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если НЕ ЗначениеЗаполнено(Форма.НематериальныйАктив)
		ИЛИ НЕ Форма.ОтражатьВОперативномУчете Тогда
		Элементы.АмортизационнаяГруппа.Видимость = Ложь;
		Возврат;
	КонецЕсли; 
	
	РеквизитыНМА = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Форма.НематериальныйАктив, "АмортизационнаяГруппа");
	
	Если Форма.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
		
		Элементы.АмортизационнаяГруппа.Видимость = Ложь;
		
	Иначе
		
		Элементы.АмортизационнаяГруппа.Видимость = Истина;

		Если ЗначениеЗаполнено(РеквизитыНМА.АмортизационнаяГруппа) Тогда
			Форма.АмортизационнаяГруппа = Новый ФорматированнаяСтрока(Строка(РеквизитыНМА.АмортизационнаяГруппа));
		Иначе
			Форма.АмортизационнаяГруппа = Новый ФорматированнаяСтрока(НСтр("ru = 'не заполнена';
																			|en = 'not filled in'"),, ЦветаСтиля.ЦветНедоступногоТекста);
		КонецЕсли; 
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ЗаполнитьЗначенияПоУмолчанию(Форма) Экспорт

	//++ Локализация
	
	Форма.СпособПоступления = Перечисления.СпособыПоступленияАктивов.ПриобретениеЗаПлату;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область Прочее

Процедура ИнициализироватьДокументПередЗаполнением(Объект) Экспорт

	//++ Локализация
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Объект.ОтражатьВБУиНУ = Истина;
	КонецЕсли; 
	
	ПараметрыУчетаПоОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(Объект.Организация, ТекущаяДатаСеанса());
	Объект.НалогообложениеНДС = ПараметрыУчетаПоОрганизации.ОсновноеНалогообложениеНДСПродажи;
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
//  ОбъектИлиДанныеСтроки - СтрокаТабличнойЧасти - 
//  ВспомогательныеРеквизиты - Структура - 
//  ПараметрыРеквизита - Массив из Структура -
//  Действие - Строка -
//  ИзмененныеРеквизиты - Массив из Строка -
// 
Процедура ЗаполнитьРеквизитыВЗависимостиОтСвойств(ОбъектИлиДанныеСтроки, ВспомогательныеРеквизиты, ПараметрыРеквизита, Действие, ИзмененныеРеквизиты) Экспорт

	//++ Локализация
	
	ЭтоНМА = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР);
	
	Если Действие = "Очистить"
		И (ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУЦФ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияБУЦФ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияПРЦФ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияПР"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУ"
			
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПервоначальнаяСтоимостьНУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПервоначальнаяСтоимостьПР"
			
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьПРЦФ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьНУЦФ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьБУЦФ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьПР"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьНУ"
			
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СуммаКапитальныхВложенийВключаемыхВРасходыНУ" 
			
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияНУДо2009"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУДо2009") Тогда
		
		ОбъектИлиДанныеСтроки[ПараметрыРеквизита.ИмяРеквизита] = 0;
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ВключитьАмортизационнуюПремиюВСоставРасходов" Тогда
		Если Действие = "Очистить" Тогда
			ОбъектИлиДанныеСтроки[ПараметрыРеквизита.ИмяРеквизита] = Ложь;
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовАмортизационнойПремии"
		ИЛИ ПараметрыРеквизита.ИмяРеквизита = "АналитикаРасходовАмортизационнойПремии" Тогда
		Если Действие = "Очистить" Тогда
			ОбъектИлиДанныеСтроки[ПараметрыРеквизита.ИмяРеквизита] = Неопределено;
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаНУ" Тогда
		
		ЗначениеРеквизита = ?(ЭтоНМА, Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию, 
										Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации);
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			ЗначениеРеквизита,
			Неопределено,
			ИзмененныеРеквизиты);
			
	ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюНУ"
		ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьИзносБУ" Тогда
		
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			Истина,
			Ложь,
			ИзмененныеРеквизиты);
			
	ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииНУ" Тогда
		
		ЗначениеРеквизита = Перечисления.МетодыНачисленияАмортизации.Линейный;
		
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			ЗначениеРеквизита,
			Неопределено,
			ИзмененныеРеквизиты);

	ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияНУ" Тогда
		
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			ОбъектИлиДанныеСтроки.СрокИспользованияУУ,
			0,
			ИзмененныеРеквизиты);

	ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "СпециальныйКоэффициентНУ" Тогда
		
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			1,
			0,
			ИзмененныеРеквизиты);

	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты(Объект, ЭтоДанныеСтроки, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	ВспомогательныеРеквизиты.Вставить("ДатаНачалаУчета", ДатаНачалаУчета);
	
	Если Объект.Дата < ДатаНачалаУчета И ЗначениеЗаполнено(Объект.Дата) Тогда
		ДатаУчетнойПолитики = КонецМесяца(Объект.Дата) + 1;
	Иначе
		ДатаУчетнойПолитики = Объект.Дата;
	КонецЕсли;
	
	ЕстьСвязанныеОрганизации = Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Объект.Организация);
	ВспомогательныеРеквизиты.Вставить("ЕстьСвязанныеОрганизации", ЕстьСвязанныеОрганизации);
	
	Если НЕ ЭтоДанныеСтроки
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
		ВспомогательныеРеквизиты.Вставить("РасчетыМеждуОрганизациямиАрендатор", Объект.РасчетыМеждуОрганизациямиАрендатор);
	КонецЕсли;
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", ПлательщикНалогаНаПрибыль);
	
	ПрименяетсяУСНДоходыМинусРасходы = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", ПрименяетсяУСНДоходыМинусРасходы);
	
	ПараметрыУчетнойПолитикиНастройкиУчетаНДС = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
		"НастройкиУчетаНДС", Объект.Организация, ДатаУчетнойПолитики);
	ПоддержкаПБУ18 = УчетнаяПолитика.ПоддержкаПБУ18(Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ПоддержкаПБУ18", ПоддержкаПБУ18);
	ВедетсяУчетПостоянныхИВременныхРазниц = УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ВедетсяУчетПостоянныхИВременныхРазниц", ВедетсяУчетПостоянныхИВременныхРазниц);
	
	ВспомогательныеРеквизиты.Вставить(
		"ПараметрыУчетнойПолитикиНастройкиУчетаНДС", 
		ПараметрыУчетнойПолитикиНастройкиУчетаНДС);
	
	ПараметрыУчетнойПолитикиНастройкиУчетаНалогаНаПрибыль = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
		"НастройкиУчетаНалогаНаПрибыль", Объект.Организация, ДатаУчетнойПолитики);
		
	ВспомогательныеРеквизиты.Вставить(
		"ПараметрыУчетнойПолитикиНастройкиУчетаНалогаНаПрибыль", 
		ПараметрыУчетнойПолитикиНастройкиУчетаНалогаНаПрибыль);
	
	ВспомогательныеРеквизиты.Вставить(
		"ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности", 
		ПолучитьФункциональнуюОпцию("ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности"));
		
	ВспомогательныеРеквизиты.Вставить(
		"ПрименяетсяФСБУ6", 
		НастройкиНалоговУчетныхПолитикПовтИсп.ПрименяетсяФСБУ6(Объект.Организация, ДатаУчетнойПолитики));
		
	ВспомогательныеРеквизиты.Вставить("ДоступенУчетНУ", Объект.ОтражатьВНУ);
		
	ВспомогательныеРеквизиты.Вставить("ДоступенУчетНУ", Объект.ОтражатьВНУ);
		
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизитыПоДаннымСтроки(Объект, ДанныеСтроки, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	ЗаполнитьПризнакиНастройкиОтраженияРасходовПоНалогам(Объект.ХозяйственнаяОперация, ДанныеСтроки, ВспомогательныеРеквизиты);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияПоУмолчанию(ДанныеСтроки, Объект) Экспорт
	
	//++ Локализация
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС Тогда
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.СпособПоступления) Тогда
			
			Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
				Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
				
				ДанныеСтроки.СпособПоступления = Перечисления.СпособыПоступленияАктивов.ПриобретениеЗаПлату;
				
			ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе Тогда
				
				ДанныеСтроки.СпособПоступления = Перечисления.СпособыПоступленияАктивов.ПоДоговоруАренды;
				
			Иначе
				
				ДанныеСтроки.СпособПоступления = Перечисления.СпособыПоступленияАктивов.ПриобретениеЗаПлату;
				
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Функция ОстаткиПоТипуОперации(Дата, ХозяйственнаяОперация, Организации, ДополнительныйОтбор = Неопределено, ПараметрыЗаполненияОстатков = Неопределено) Экспорт

	//++ Локализация
	
	ДатаОстатков = Новый Граница(Дата, ВидГраницы.Включая);
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
		
		Возврат ОстаткиОсновныхСредств(ДатаОстатков, ХозяйственнаяОперация, Организации, ДополнительныйОтбор, ПараметрыЗаполненияОстатков);
	
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом 
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		
		Возврат ОстаткиАрендованныхОС(ДатаОстатков, ХозяйственнаяОперация, Организации, ДополнительныйОтбор, ПараметрыЗаполненияОстатков);
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР Тогда
		
		Возврат ОстаткиНМАиРасходовНаНИОКР(ДатаОстатков, Организации, ДополнительныйОтбор, ПараметрыЗаполненияОстатков);
		
	КонецЕсли;

	//-- Локализация
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПорядокУчетаОСБУ() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                          КАК Период,
	|	&Организация                                     КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                       КАК ОсновноеСредство,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) 
	|	КОНЕЦ КАК СостояниеБУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВНУ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) 
	|	КОНЕЦ КАК СостояниеНУ,
	|
	|	ТаблицаОС.НачислятьАмортизациюБУ ИЛИ ТаблицаОС.НачислятьИзносБУ  КАК НачислятьАмортизациюБУ,
	|	ТаблицаОС.НачислятьАмортизациюНУ                 КАК НачислятьАмортизациюНУ,
	|
	|	ТаблицаОС.СтатьяРасходовБУ                       КАК СтатьяРасходовБУ,
	|	ТаблицаОС.АналитикаРасходовБУ                    КАК АналитикаРасходовБУ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.СтатьяРасходовНУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И (ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации)
	|					ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету)
	|					ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена))
	|
	|			ТОГДА ТаблицаОС.СтатьяРасходовБУ
	|
	|		ИНАЧЕ ТаблицаОС.СтатьяРасходовНУ 
	|	КОНЕЦ                                            КАК СтатьяРасходовНУ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.СтатьяРасходовНУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И (ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации)
	|					ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету)
	|					ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена))
	|
	|			ТОГДА ТаблицаОС.АналитикаРасходовБУ
	|
	|		ИНАЧЕ ТаблицаОС.АналитикаРасходовНУ 
	|	КОНЕЦ                                            КАК АналитикаРасходовНУ,
	|
	|	ТаблицаОС.СтатьяРасходовАмортизационнойПремии    КАК СтатьяРасходовАмортизационнойПремии,
	|	ТаблицаОС.АналитикаРасходовАмортизационнойПремии КАК АналитикаРасходовАмортизационнойПремии,
	|	ТаблицаОС.ПередаватьРасходыВДругуюОрганизацию    КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ТаблицаОС.ОрганизацияПолучательРасходов          КАК ОрганизацияПолучательРасходов,
	|	ТаблицаОС.АмортизационнаяГруппа                  КАК АмортизационнаяГруппа,
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ОсновноеСредство.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки) 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ТаблицаОС.НедвижимоеИмущество 
	|	КОНЕЦ КАК НедвижимоеИмущество,
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		ИНАЧЕ ТаблицаОС.НалогообложениеНДС 
	|	КОНЕЦ КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                          КАК Период,
	|	&Организация                                     КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету) КАК СостояниеБУ,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПустаяСсылка)  КАК СостояниеНУ,
	|	ЛОЖЬ                                             КАК НачислятьАмортизациюБУ,
	|	ЛОЖЬ                                             КАК НачислятьАмортизациюНУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовБУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходовБУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходовНУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовАмортизационнойПремии,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходовАмортизационнойПремии,
	|	ЛОЖЬ                                             КАК ПередаватьРасходыВДругуюОрганизацию,
	|	НЕОПРЕДЕЛЕНО                                     КАК ОрганизацияПолучательРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АмортизационнаяГруппа,
	|	НЕОПРЕДЕЛЕНО                                     КАК НедвижимоеИмущество,
	|	НЕОПРЕДЕЛЕНО                                     КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                          КАК Период,
	|	&Контрагент                                      КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету) КАК СостояниеБУ,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПустаяСсылка)  КАК СостояниеНУ,
	|	ЛОЖЬ                                             КАК НачислятьАмортизациюБУ,
	|	ЛОЖЬ                                             КАК НачислятьАмортизациюНУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовБУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходовБУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходовНУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовАмортизационнойПремии,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходовАмортизационнойПремии,
	|	ЛОЖЬ                                             КАК ПередаватьРасходыВДругуюОрганизацию,
	|	НЕОПРЕДЕЛЕНО                                     КАК ОрганизацияПолучательРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АмортизационнаяГруппа,
	|	НЕОПРЕДЕЛЕНО                                     КАК НедвижимоеИмущество,
	|	НЕОПРЕДЕЛЕНО                                     КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ОтражатьВОперативномУчете
	|	И &РасчетыМеждуОрганизациямиАрендатор
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС)
	|";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Параметры:
//  ТекстыЗапроса - Массив -
// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПорядокУчетаНМАБУ(ТекстыЗапроса) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПорядокУчетаНМАБУ(ТекстыЗапроса);

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                          КАК Регистратор,
	|	&Период                                          КАК Период,
	|	&Организация                                     КАК Организация,
	|	Таблица.НематериальныйАктив                      КАК НематериальныйАктив,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|		ИНАЧЕ ТаблицаРегистра.СостояниеБУ
	|	КОНЕЦ КАК СостояниеБУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВНУ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету) 
	|		ИНАЧЕ ТаблицаРегистра.СостояниеНУ
	|	КОНЕЦ КАК СостояниеНУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУ
	|			ТОГДА Таблица.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию) 
	|		ИНАЧЕ ТаблицаРегистра.НачислятьАмортизациюБУ
	|	КОНЕЦ КАК НачислятьАмортизациюБУ,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВНУ
	|			ТОГДА ТаблицаРегистра.НачислятьАмортизациюНУ
	|		КОГДА Таблица.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА Таблица.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию) 
	|		ИНАЧЕ Таблица.НачислятьАмортизациюНУ         
	|	КОНЕЦ КАК НачислятьАмортизациюНУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУ
	|			ТОГДА Таблица.СтатьяРасходовБУ 
	|		ИНАЧЕ ТаблицаРегистра.СтатьяРасходовБУ
	|	КОНЕЦ КАК СтатьяРасходовБУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУ
	|			ТОГДА Таблица.АналитикаРасходовБУ 
	|		ИНАЧЕ ТаблицаРегистра.АналитикаРасходовБУ
	|	КОНЕЦ КАК АналитикаРасходовБУ,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВНУ
	|			ТОГДА ТаблицаРегистра.СтатьяРасходовНУ
	|
	|		КОГДА Таблица.СтатьяРасходовНУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И Таблица.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|
	|			ТОГДА Таблица.СтатьяРасходовБУ
	|
	|		ИНАЧЕ Таблица.СтатьяРасходовНУ 
	|	КОНЕЦ КАК СтатьяРасходовНУ,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВНУ
	|			ТОГДА ТаблицаРегистра.АналитикаРасходовНУ
	|
	|		КОГДА Таблица.СтатьяРасходовНУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И Таблица.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|
	|			ТОГДА Таблица.АналитикаРасходовБУ
	|
	|		ИНАЧЕ Таблица.АналитикаРасходовНУ 
	|	КОНЕЦ КАК АналитикаРасходовНУ,
	|
	|	Таблица.ПередаватьРасходыВДругуюОрганизацию      КАК ПередаватьРасходыВДругуюОрганизацию,
	|	Таблица.ОрганизацияПолучательРасходов            КАК ОрганизацияПолучательРасходов,
	|
	|	ВЫБОР 
	|		КОГДА Таблица.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		ИНАЧЕ Таблица.НалогообложениеНДС 
	|	КОНЕЦ КАК НалогообложениеНДС
	|
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаНМАБУ КАК ТаблицаРегистра
	|		ПО ТаблицаРегистра.НематериальныйАктив = Таблица.НематериальныйАктив
	|
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ОтражатьВОперативномУчете";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ() Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                               КАК Регистратор,
	|	&Период                               КАК Период,
	|	&Организация                          КАК Организация,
	|	ТаблицаОС.ОсновноеСредство            КАК ОсновноеСредство,
	|
	|	ТаблицаОС.СрокИспользованияБУ         КАК СрокПолезногоИспользованияБУ,
	|	ТаблицаОС.СрокИспользованияНУ         КАК СрокПолезногоИспользованияНУ,
	|	ТаблицаОС.КоэффициентАмортизацииБУ    КАК КоэффициентАмортизацииБУ,
	|	ТаблицаОС.КоэффициентУскоренияБУ      КАК КоэффициентУскорения,
	|	ТаблицаОС.ГрафикАмортизации           КАК ГрафикАмортизации,
	|	ТаблицаОС.СпециальныйКоэффициентНУ    КАК СпециальныйКоэффициент,
	|	ТаблицаОС.ЛиквидационнаяСтоимостьРегл КАК ЛиквидационнаяСтоимость,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.ОбъемНаработкиОстаточныйБУ 
	|		ИНАЧЕ ТаблицаОС.ОбъемНаработки 
	|	КОНЕЦ                                 КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.СрокИспользованияБУОстаточный
	|		ИНАЧЕ ТаблицаОС.СрокИспользованияБУ 
	|	КОНЕЦ                                 КАК СрокИспользованияДляВычисленияАмортизации,
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.ПРДляВычисленияАмортизации
	|		ИНАЧЕ ТаблицаОС.ТекущаяСтоимостьПР + ТаблицаОС.ТекущаяСтоимостьПРЦФ
	|	КОНЕЦ                                 КАК ПРДляВычисленияАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ
	|		ИНАЧЕ ТаблицаОС.ТекущаяСтоимостьБУ + ТаблицаОС.ТекущаяСтоимостьБУЦФ 
	|	КОНЕЦ                                 КАК СтоимостьДляВычисленияАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.СтоимостьДляВычисленияАмортизацииЦФ
	|		ИНАЧЕ ТаблицаОС.ТекущаяСтоимостьБУЦФ 
	|	КОНЕЦ                                 КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.ДатаИзмененияПараметровБУ
	|		ИНАЧЕ ТаблицаОС.ДатаПринятияКУчетуБУ
	|	КОНЕЦ                                 КАК ДатаПоследнегоИзменения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ОтражатьВОперативномУчете";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Параметры:
//  ТекстыЗапроса - Массив - 
// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПараметрыАмортизацииНМАБУ(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса = Неопределено;

	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПараметрыАмортизацииНМАБУ(ТекстыЗапроса);

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                               КАК Регистратор,
	|	&Период                               КАК Период,
	|	&Организация                          КАК Организация,
	|	Таблица.НематериальныйАктив           КАК НематериальныйАктив,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВБУ
	|			ТОГДА ТаблицаРегистра.ДатаПоследнегоИзменения
	|		КОГДА Таблица.ЕстьУлучшениеНМАБУ
	|			ТОГДА Таблица.ДатаПоследнегоУлучшенияБУ
	|		КОГДА &Период < &ДатаНачалаУчета
	|			ТОГДА ДОБАВИТЬКДАТЕ(&Период, ДЕНЬ, 1)
	|		ИНАЧЕ Таблица.ДатаПринятияКУчетуБУ 
	|	КОНЕЦ КАК ДатаПоследнегоИзменения,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВБУ
	|			ТОГДА Таблица.СрокИспользованияБУ
	|		ИНАЧЕ ТаблицаРегистра.СрокПолезногоИспользованияБУ
	|	КОНЕЦ КАК СрокПолезногоИспользованияБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВНУ
	|			ТОГДА Таблица.СрокИспользованияНУ
	|		ИНАЧЕ ТаблицаРегистра.СрокПолезногоИспользованияНУ
	|	КОНЕЦ КАК СрокПолезногоИспользованияНУ,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВБУ
	|			ТОГДА ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации
	|		КОГДА Таблица.ЕстьУлучшениеНМАБУ
	|			ТОГДА Таблица.СрокИспользованияБУОстаточный
	|		ИНАЧЕ Таблица.СрокИспользованияБУ 
	|	КОНЕЦ КАК СрокИспользованияДляВычисленияАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВБУ
	|			ТОГДА ТаблицаРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации
	|		КОГДА Таблица.ЕстьУлучшениеНМАБУ
	|			ТОГДА Таблица.ОбъемНаработкиОстаточныйБУ 
	|		ИНАЧЕ Таблица.ОбъемНаработки 
	|	КОНЕЦ КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВБУ
	|			ТОГДА Таблица.КоэффициентБУ
	|		ИНАЧЕ ТаблицаРегистра.КоэффициентБУ
	|	КОНЕЦ КАК КоэффициентБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВНУ
	|			ТОГДА Таблица.СпециальныйКоэффициентНУ
	|		ИНАЧЕ ТаблицаРегистра.СпециальныйКоэффициент
	|	КОНЕЦ КАК СпециальныйКоэффициент,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВБУ
	|			ТОГДА Таблица.ЛиквидационнаяСтоимостьРегл
	|		ИНАЧЕ ТаблицаРегистра.ЛиквидационнаяСтоимость
	|	КОНЕЦ КАК ЛиквидационнаяСтоимость
	|
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыАмортизацииНМАБУ КАК ТаблицаРегистра
	|		ПО ТаблицаРегистра.НематериальныйАктив = Таблица.НематериальныйАктив
	|
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ОтражатьВОперативномУчете";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

//++ Локализация

Процедура ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                       КАК Период,
	|	&Организация                  КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)  КАК ДатаОтражения
	|ГДЕ
	|	&Период >= &ДатаНачалаУчета
	|	И (&ОтражатьВБУиНУ ИЛИ &ОтражатьВУУ)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	&Контрагент                  КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|ГДЕ
	|	&Период >= &ДатаНачалаУчета
	|	И (&ОтражатьВБУиНУ ИЛИ &ОтражатьВУУ)
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|	И &РасчетыМеждуОрганизациямиАрендатор";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                        КАК Регистратор,
	|	ВЫБОР
	|		КОГДА &ОтражатьВНУ
	|				И ТаблицаОС.ДатаПринятияКУчетуНУ <> ДАТАВРЕМЯ(1, 1, 1)
	|				И (ТаблицаОС.ДатаПринятияКУчетуНУ < ТаблицаОС.ДатаПринятияКУчетуБУ
	|					ИЛИ НЕ &ОтражатьВБУ)
	|			ТОГДА ТаблицаОС.ДатаПринятияКУчетуНУ
	|		ИНАЧЕ ТаблицаОС.ДатаПринятияКУчетуБУ
	|	КОНЕЦ                          КАК Период,
	|	&Организация                   КАК Организация,
	|	ТаблицаОС.ОсновноеСредство     КАК ОсновноеСредство,
	|	&НазваниеДокумента             КАК НазваниеДокумента,
	|	&Номер                         КАК НомерДокумента
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                        КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету   КАК Период,
	|	&Организация                   КАК Организация,
	|	ТаблицаОС.ОсновноеСредство     КАК ОсновноеСредство,
	|	&НазваниеДокумента             КАК НазваниеДокумента,
	|	&Номер                         КАК НомерДокумента
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаСпособыОтраженияРасходовПоИмущественнымНалогам(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СпособыОтраженияРасходовПоИмущественнымНалогам";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                             КАК Период,
	|	&Организация                        КАК Организация,
	|	ТаблицаОС.ОсновноеСредство          КАК ОсновноеСредство,
	|	ТаблицаОС.СтатьяРасходовНалог       КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходовНалог    КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество) КАК ВидНалога
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.СтатьяРасходовНалог <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И &ОтражатьВРеглУчете
	|	И &ОтражатьВОперативномУчете
	|	И НЕ ТаблицаОС.ОсновноеСредство.ГруппаОС В (
	|			ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                             КАК Период,
	|	&Организация                        КАК Организация,
	|	ТаблицаОС.ОсновноеСредство          КАК ОсновноеСредство,
	|	ТаблицаОС.СтатьяРасходовНалог       КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходовНалог    КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог) КАК ВидНалога
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.СтатьяРасходовНалог <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И &ОтражатьВРеглУчете
	|	И &ОтражатьВОперативномУчете
	|	И ТаблицаОС.ОсновноеСредство.ГруппаОС В (
	|			ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ТранспортныеСредства),
	|			ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МашиныИОборудование)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                             КАК Период,
	|	&Организация                        КАК Организация,
	|	ТаблицаОС.ОсновноеСредство          КАК ОсновноеСредство,
	|	ТаблицаОС.СтатьяРасходовНалог       КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходовНалог    КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог) КАК ВидНалога
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.СтатьяРасходовНалог <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И &ОтражатьВРеглУчете
	|	И &ОтражатьВОперативномУчете
	|	И ТаблицаОС.ОсновноеСредство.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыЦелевогоФинансированияОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                    КАК Регистратор,
	|	&Период                    КАК Период,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ИСТИНА                     КАК ПрименениеЦелевогоФинансирования,
	|	ТаблицаОС.СтатьяДоходов    КАК СтатьяДоходов,
	|	ТаблицаОС.АналитикаДоходов КАК АналитикаДоходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.ПрименениеЦелевогоФинансирования
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияНМА(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыЦелевогоФинансированияНМА";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                        Регистратор,
	|	&Период                        КАК Период,
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ИСТИНА                         КАК ПрименениеЦелевогоФинансирования,
	|	ТаблицаНМА.СтатьяДоходов       КАК СтатьяДоходов,
	|	ТаблицаНМА.АналитикаДоходов    КАК АналитикаДоходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаНМА
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Ссылка
	|	И ТаблицаНМА.ПрименениеЦелевогоФинансирования
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

// Функция возвращает текст запроса прослеживаемых товаров в составе ОС.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрослеживаемыеТоварыВСоставеОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПрослеживаемыеТовары.НомерСтроки				КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)			КАК ВидДвижения,
	|	&Период											КАК Период,
	|	&Организация									КАК Организация,
	|	ПрослеживаемыеТовары.НомерГТД					КАК РНПТ,
	|	ПрослеживаемыеТовары.ОсновноеСредство			КАК ОсновноеСредство,
	|	ПрослеживаемыеТовары.КодТНВЭД					КАК КодТНВЭД,
	|	ПрослеживаемыеТовары.КоличествоПоРНПТ			КАК КоличествоПоРНПТ
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|ГДЕ
	|	ПрослеживаемыеТовары.Ссылка = &Ссылка
	|	И ПрослеживаемыеТовары.НомерГТД.ТипНомераГТД = ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- Локализация

#КонецОбласти

#Область ФормаРедактированияСтрокиОС

Процедура ФормаРедактированияСтрокиОС_ПорядокУчетаБУПриИзменении(Форма, ИзмененныеРеквизиты) Экспорт

	//++ Локализация
	
	ФормаРедактированияСтрокиОС_ЗаполнитьГодовуюНормуАмортизацииБУ(Форма);
	
	Если Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ") Тогда
		
		Форма.НакопленнаяАмортизацияНУ = 0;
		Форма.НакопленнаяАмортизацияПР = 0;
		Форма.НакопленнаяАмортизацияВР = 0;
		
		Форма.ПрименениеЦелевогоФинансирования = Ложь;
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",ПрименениеЦелевогоФинансирования";
		
	ИначеЕсли Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету") Тогда
		
		Форма.ПервоначальнаяСтоимостьОтличается = Истина;
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",ПервоначальнаяСтоимостьОтличается";
		
	КонецЕсли;
	
	//-- Локализация

КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_МетодНачисленияАмортизацииБУПриИзменении(Форма) Экспорт
	
	//++ Локализация
	ФормаРедактированияСтрокиОС_ЗаполнитьГодовуюНормуАмортизацииБУ(Форма);
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ОсновноеСредствоПриИзменении(Форма) Экспорт

	//++ Локализация
	ФормаРедактированияСтрокиОС_ЗаполнитьГодовуюНормуАмортизацииБУ(Форма);
	
	Если ЗначениеЗаполнено(Форма.ОсновноеСредство) Тогда
		
		ГруппаОС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.ОсновноеСредство, "ГруппаОС");
		Форма.НедвижимоеИмущество = (ВнеоборотныеАктивыКлиентСерверЛокализация.ГруппыНедвижимогоИмущества().Найти(ГруппаОС) <> Неопределено);
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

Процедура ФормаРедактированияСтрокиОС_ЗаполнитьГодовуюНормуАмортизацииБУ(Форма)

	Если НЕ ЗначениеЗаполнено(Форма.ОсновноеСредство) Тогда
		Возврат;
	КонецЕсли;
	
	Если Форма.МетодНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.ПоЕНАОФ
		ИЛИ Форма.ПорядокУчетаБУ = Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ОбъектыЭксплуатации.ШифрПоЕНАОФ.НормаАмортизационныхОтчислений, 0) КАК Коэффициент
		|ИЗ
		|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
		|ГДЕ
		|	ОбъектыЭксплуатации.Ссылка = &ОсновноеСредство";
	ИначеЕсли Форма.МетодНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ОбъектыЭксплуатации.ШифрПоЕНАОФ.ПроцентОтСтоимостиМашины, 0) КАК Коэффициент
		|ИЗ
		|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
		|ГДЕ
		|	ОбъектыЭксплуатации.Ссылка = &ОсновноеСредство";
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОсновноеСредство", Форма.ОсновноеСредство);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Форма.КоэффициентАмортизацииБУ = Выборка.Коэффициент;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область ФормаРедактированияСтрокиНМА

//++ Локализация

Процедура ФормаРедактированияСтрокиНМА_НематериальныйАктивПриИзменении(Форма, ДополнительныеПараметры)

	ИзмененныеРеквизиты = "";
	
	Если Форма.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.НематериальныйАктив
		И Форма.ПорядокУчетаНУ = Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету Тогда
		Форма.ПорядокУчетаНУ = Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию;
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",ПорядокУчетаНУ";
	КонецЕсли;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

//++ Локализация

#Область ЗаполнениеПоДаннымОперативногоУчета

Процедура ЗаполнитьПоДаннымОУ(Объект, ТабличнаяЧасть)
	
	КлючевыеПоля = Документы.ВводОстатковВнеоборотныхАктивов2_4.КлючевыеПоляРеглУчетаПоТипуОперации(Объект.ХозяйственнаяОперация);
	
	Отбор = Новый Структура;
	Для Каждого ИмяПоля Из КлючевыеПоля Цикл
		Если ИмяПоля <> "Организация" Тогда
			Отбор.Вставить(ИмяПоля, Объект[ИмяПоля]);
		КонецЕсли;		
	КонецЦикла;

	ПараметрыЗаполненияОстатков = Новый Структура("ОтражатьВБУиНУ,ОтражатьВУУ", Объект.ОтражатьВБУиНУ, Объект.ОтражатьВУУ);

	Результат = ОстаткиПоТипуОперации(
					Объект.Дата, 
					Объект.ХозяйственнаяОперация, 
					Объект.Организация, 
					Отбор,
					ПараметрыЗаполненияОстатков);
	
	ТабличнаяЧасть.Очистить();
	Для Каждого Выборка Из Результат Цикл
		
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ОстаткиОсновныхСредств(ДатаОстатков, ХозяйственнаяОперация, МассивОрганизаций, ДопОтбор, ПараметрыЗаполненияОстатков)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втПринятыеКУчетуОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Дата, 
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В (&МассивОрганизаций)) КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	(ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		ИЛИ ПорядокУчетаОСБУ.СостояниеНУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|	И &ОтражатьВБУиНУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОСУУ.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|			&Дата, 
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В (&МассивОрганизаций)) КАК ПорядокУчетаОСУУ
	|ГДЕ
	|	ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И &ОтражатьВУУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Организация КАК Организация,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение,
	|	МестонахождениеОС.Арендатор КАК Арендатор,
	|	МестонахождениеОС.ПодразделениеАрендатора КАК ПодразделениеАрендатора
	|ПОМЕСТИТЬ втМестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Дата,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						втПринятыеКУчетуОС.ОсновноеСредство
	|					ИЗ
	|						втПринятыеКУчетуОС КАК втПринятыеКУчетуОС)) КАК МестонахождениеОС
	|ГДЕ
	|	МестонахождениеОС.Организация В (&МассивОрганизаций)
	|	И (&ПереданВАренду
	|				И НЕ МестонахождениеОС.Арендатор В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|			ИЛИ НЕ &ПереданВАренду
	|				И МестонахождениеОС.Арендатор В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)))
	|
	|{ГДЕ
	|	МестонахождениеОС.Местонахождение.* КАК Местонахождение,
	|	МестонахождениеОС.Арендатор.* КАК Контрагент,
	|	ВЫБОР
	|		КОГДА &ПереданВАренду
	|				И МестонахождениеОС.Арендатор ССЫЛКА Справочник.Организации
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасчетыМеждуОрганизациямиАрендатор}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство,
	|	Местонахождение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втПорядокУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Дата,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						втМестонахождениеОС.ОсновноеСредство
	|					ИЗ
	|						втМестонахождениеОС КАК втМестонахождениеОС)) КАК ПорядокУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АрендованныеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	АрендованныеОС.Договор КАК Договор
	|ПОМЕСТИТЬ втАрендованныеОС
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(
	|			&Дата,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					втМестонахождениеОС.ОсновноеСредство
	|				ИЗ
	|					втМестонахождениеОС КАК втМестонахождениеОС)) КАК АрендованныеОС
	|ГДЕ
	|	АрендованныеОС.Состояние В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ЗаключенДоговорАренды),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ВАренде))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПереданныеВАрендуОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПереданныеВАрендуОС.Договор КАК Договор
	|ПОМЕСТИТЬ втПереданныеВАрендуОС
	|ИЗ
	|	РегистрСведений.ПереданныеВАрендуОС.СрезПоследних(
	|			&Дата,
	|			(ОсновноеСредство, Организация) В
	|				(ВЫБРАТЬ
	|					втМестонахождениеОС.ОсновноеСредство,
	|					втМестонахождениеОС.Организация
	|				ИЗ
	|					втМестонахождениеОС КАК втМестонахождениеОС)) КАК ПереданныеВАрендуОС
	|ГДЕ
	|	ПереданныеВАрендуОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПереданоВАренду)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьОС.Организация КАК Организация,
	|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СтоимостьОС.Подразделение КАК Подразделение,
	|	СтоимостьОС.Арендатор КАК Арендатор,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА СтоимостьОС.СтоимостьОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьУУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.СтоимостьРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьБУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.СтоимостьНУОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьНУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.СтоимостьПРОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьПР,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.СтоимостьЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьБУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.СтоимостьНУЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьНУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.СтоимостьПРЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьПРЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.АмортизационнаяПремияОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаКапитальныхВложенийВключаемыхВРасходыНУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА СтоимостьОС.РезервПереоценкиСтоимостиОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимости,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.РезервПереоценкиСтоимостиРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимостиРегл,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.ЗалоговаяСтоимостьОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗалоговаяСтоимость
	|ПОМЕСТИТЬ втСтоимостьОС
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(
	|			&Дата,
	|			Организация В (&МассивОрганизаций)
	|				И (ОсновноеСредство, ГруппаФинансовогоУчета, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						втПорядокУчетаОС.ОсновноеСредство,
	|						втПорядокУчетаОС.ГруппаФинансовогоУчета,
	|						втПорядокУчетаОС.НаправлениеДеятельности
	|					ИЗ
	|						втПорядокУчетаОС КАК втПорядокУчетаОС)) КАК СтоимостьОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмортизацияОС.Организация КАК Организация,
	|	АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	АмортизацияОС.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА -АмортизацияОС.АмортизацияОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияУУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.АмортизацияРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияБУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.АмортизацияНУОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияНУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.АмортизацияПРОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияПР,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.АмортизацияЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияБУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.АмортизацияНУЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияНУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.АмортизацияПРЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияПРЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА -АмортизацияОС.РезервПереоценкиАмортизацииОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизации,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.РезервПереоценкиАмортизацииРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ втАмортизацияОС
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.Остатки(
	|			&Дата,
	|			Организация В (&МассивОрганизаций)
	|				И (ОсновноеСредство, ГруппаФинансовогоУчета, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						втПорядокУчетаОС.ОсновноеСредство,
	|						втПорядокУчетаОС.ГруппаФинансовогоУчета,
	|						втПорядокУчетаОС.НаправлениеДеятельности
	|					ИЗ
	|						втПорядокУчетаОС КАК втПорядокУчетаОС)) КАК АмортизацияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ОС"" КАК ЗаполняемаяТабличнаяЧасть,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ОтражатьВБУиНУ КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУУ КАК ОтражатьВУпрУчете,
	|	втМестонахождениеОС.Организация КАК Организация,
	|	втМестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА &ПереданВАренду
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		ИНАЧЕ втМестонахождениеОС.Местонахождение
	|	КОНЕЦ КАК Местонахождение,
	|	ВЫБОР
	|		КОГДА &ПереданВАренду
	|			ТОГДА втМестонахождениеОС.Местонахождение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	втМестонахождениеОС.Арендатор КАК Контрагент,
	|	втМестонахождениеОС.ПодразделениеАрендатора КАК ПодразделениеАрендатора,
	|	втПорядокУчетаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	втПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА &ПереданВАренду
	|				И втМестонахождениеОС.Арендатор ССЫЛКА Справочник.Организации
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасчетыМеждуОрганизациямиАрендатор,
	|
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьУУ, 0) КАК ТекущаяСтоимостьУУ,
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьБУ, 0) КАК ТекущаяСтоимостьБУ,
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьБУЦФ, 0) КАК ТекущаяСтоимостьБУЦФ,
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьНУ, 0) КАК ТекущаяСтоимостьНУ,
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьНУЦФ, 0) КАК ТекущаяСтоимостьНУЦФ,
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьПР, 0) КАК ТекущаяСтоимостьПР,
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьПРЦФ, 0) КАК ТекущаяСтоимостьПРЦФ,
	|	ЕСТЬNULL(втСтоимостьОС.СуммаКапитальныхВложенийВключаемыхВРасходыНУ, 0) КАК СуммаКапитальныхВложенийВключаемыхВРасходыНУ,
	|	ЕСТЬNULL(втСтоимостьОС.РезервПереоценкиСтоимости, 0) КАК РезервПереоценкиСтоимости,
	|	ЕСТЬNULL(втСтоимостьОС.РезервПереоценкиСтоимостиРегл, 0) КАК РезервПереоценкиСтоимостиРегл,
	|
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияБУ, 0) КАК НакопленнаяАмортизацияБУ,
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияБУЦФ, 0) КАК НакопленнаяАмортизацияБУЦФ,
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияНУ, 0) КАК НакопленнаяАмортизацияНУ,
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияНУЦФ, 0) КАК НакопленнаяАмортизацияНУЦФ,
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияПР, 0) КАК НакопленнаяАмортизацияПР,
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияПРЦФ, 0) КАК НакопленнаяАмортизацияПРЦФ,
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияУУ, 0) КАК НакопленнаяАмортизацияУУ,
	|	ЕСТЬNULL(втАмортизацияОС.РезервПереоценкиАмортизации, 0) КАК РезервПереоценкиАмортизации,
	|	ЕСТЬNULL(втАмортизацияОС.РезервПереоценкиАмортизацииРегл, 0) КАК РезервПереоценкиАмортизацииРегл,
	|
	|	ВЫБОР
	|		КОГДА &ПереданВАренду 
	|				И втМестонахождениеОС.Арендатор ССЫЛКА Справочник.Организации
	|			ТОГДА ЕСТЬNULL(втСтоимостьОС.ЗалоговаяСтоимость, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗалоговаяСтоимость,
	|
	|	ЕСТЬNULL(втСтоимостьОС.СуммаКапитальныхВложенийВключаемыхВРасходыНУ, 0) <> 0 КАК ВключитьАмортизационнуюПремиюВСоставРасходов,
	|
	|	ЕСТЬNULL(втСтоимостьОС.РезервПереоценкиСтоимости, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.РезервПереоценкиАмортизации, 0) <> 0 КАК ЕстьРезервПереоценки,
	|
	|	ЕСТЬNULL(втСтоимостьОС.РезервПереоценкиСтоимостиРегл, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.РезервПереоценкиАмортизацииРегл, 0) <> 0 КАК ЕстьРезервПереоценкиРегл,
	|
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьБУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьНУЦФ, 0) <> 0 
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьПРЦФ, 0) <> 0 
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияБУЦФ, 0) <> 0 
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияНУЦФ, 0) <> 0 
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияПРЦФ, 0) <> 0 КАК ПрименениеЦелевогоФинансирования
	|
	|ИЗ
	|	втМестонахождениеОС КАК втМестонахождениеОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК втПорядокУчетаОС
	|		ПО (втПорядокУчетаОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьОС КАК втСтоимостьОС
	|		ПО (втСтоимостьОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|			И (втСтоимостьОС.Подразделение = втМестонахождениеОС.Местонахождение)
	|			И (втСтоимостьОС.Арендатор = втМестонахождениеОС.Арендатор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияОС КАК втАмортизацияОС
	|		ПО (втАмортизацияОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|			И (втАмортизацияОС.Подразделение = втМестонахождениеОС.Местонахождение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАрендованныеОС КАК втАрендованныеОС
	|		ПО (втАрендованныеОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПереданныеВАрендуОС КАК втПереданныеВАрендуОС
	|		ПО (втПереданныеВАрендуОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|ГДЕ
	|	ВЫБОР 
	|		КОГДА НЕ &ПереданВАренду
	|				И (НЕ втАрендованныеОС.Договор ССЫЛКА Справочник.ДоговорыАренды
	|						ИЛИ втАрендованныеОС.Договор В (
	|							НЕОПРЕДЕЛЕНО,
	|							ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка),
	|							ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|					)
	|
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств)
	|
	|		КОГДА &ПереданВАренду
	|				И НЕ втПереданныеВАрендуОС.Договор ЕСТЬ NULL
	|
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС)
	|
	|		КОГДА НЕ &ПереданВАренду 
	|				И втАрендованныеОС.Договор ССЫЛКА Справочник.ДоговорыАренды
	|				И втАрендованныеОС.Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка)
	|
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе)
	|
	|		КОГДА &ПереданВАренду 
	|				И втАрендованныеОС.Договор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровАренды.Лизинг)
	|				И НЕ втПереданныеВАрендуОС.Договор ЕСТЬ NULL
	|
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе)
	|
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ = &ХозяйственнаяОперация
	|
	|	И (НЕ &ПредметыЛизинга
	|		ИЛИ втАрендованныеОС.Договор ССЫЛКА Справочник.ДоговорыАренды
	|			И втАрендованныеОС.Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка))
	|
	|	И (ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьУУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьБУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьБУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьНУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьНУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьПР, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьПРЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьУУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.СуммаКапитальныхВложенийВключаемыхВРасходыНУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.РезервПереоценкиСтоимости, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.РезервПереоценкиСтоимостиРегл, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияБУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияБУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияНУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияНУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияПР, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияПРЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияУУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.РезервПереоценкиАмортизации, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.РезервПереоценкиАмортизацииРегл, 0) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	втМестонахождениеОС.Организация,
	|	втМестонахождениеОС.Местонахождение,
	|	втМестонахождениеОС.Арендатор,
	|	втМестонахождениеОС.ОсновноеСредство.Представление,
	|	втМестонахождениеОС.ОсновноеСредство.ИнвентарныйНомер";
	
	Запрос = Новый ПостроительЗапроса(ТекстЗапроса);
	Запрос.Параметры.Вставить("МассивОрганизаций", МассивОрганизаций);
	Запрос.Параметры.Вставить("Дата", ДатаОстатков);
	Запрос.Параметры.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
	Запрос.Параметры.Вставить("ОтражатьВБУиНУ", ПараметрыЗаполненияОстатков.ОтражатьВБУиНУ);
	Запрос.Параметры.Вставить("ОтражатьВУУ", ПараметрыЗаполненияОстатков.ОтражатьВУУ);
	
	//
	ПереданВАренду = 
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе;
		
	Запрос.Параметры.Вставить("ПереданВАренду", ПереданВАренду);
	
	//
	ПредметыЛизинга = 
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе;
	Запрос.Параметры.Вставить("ПредметыЛизинга", ПредметыЛизинга);

	Если ДопОтбор <> Неопределено Тогда
		Для Каждого УсловиеОтбора Из ДопОтбор Цикл
			ТекущийОтбор = Запрос.Отбор.Добавить(УсловиеОтбора.Ключ);
			ТекущийОтбор.ВидСравнения = ВидСравнения.Равно;
			ТекущийОтбор.Значение = УсловиеОтбора.Значение;
			ТекущийОтбор.Использование = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Возврат Запрос.Результат.Выгрузить();

КонецФункции

Функция ОстаткиАрендованныхОС(ДатаОстатков, ХозяйственнаяОперация, МассивОрганизаций, ДопОтбор, ПараметрыЗаполненияОстатков)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втПринятыеКУчетуОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Дата, 
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В (&МассивОрганизаций)) КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету)
	|	И &ОтражатьВБУиНУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Организация КАК Организация,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ втМестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Дата,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						втПринятыеКУчетуОС.ОсновноеСредство
	|					ИЗ
	|						втПринятыеКУчетуОС КАК втПринятыеКУчетуОС)) КАК МестонахождениеОС
	|ГДЕ
	|	МестонахождениеОС.Организация В (&МассивОрганизаций)
	|
	|{ГДЕ
	|	МестонахождениеОС.Местонахождение.* КАК Местонахождение}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство,
	|	Местонахождение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втПорядокУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Дата,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						втМестонахождениеОС.ОсновноеСредство
	|					ИЗ
	|						втМестонахождениеОС КАК втМестонахождениеОС)) КАК ПорядокУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АрендованныеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	АрендованныеОС.Партнер КАК Партнер,
	|	АрендованныеОС.Контрагент КАК Контрагент,
	|	АрендованныеОС.Договор КАК Договор
	|ПОМЕСТИТЬ втАрендованныеОС
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(
	|			&Дата,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					втМестонахождениеОС.ОсновноеСредство
	|				ИЗ
	|					втМестонахождениеОС КАК втМестонахождениеОС)) КАК АрендованныеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьОС.Организация КАК Организация,
	|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СтоимостьОС.Подразделение КАК Подразделение,
	|	СтоимостьОС.ЗалоговаяСтоимостьОстаток КАК ЗалоговаяСтоимость
	|ПОМЕСТИТЬ втСтоимостьОС
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(
	|			&Дата,
	|			Организация В (&МассивОрганизаций)
	|				И (ОсновноеСредство, ГруппаФинансовогоУчета, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						втПорядокУчетаОС.ОсновноеСредство,
	|						втПорядокУчетаОС.ГруппаФинансовогоУчета,
	|						втПорядокУчетаОС.НаправлениеДеятельности
	|					ИЗ
	|						втПорядокУчетаОС КАК втПорядокУчетаОС)) КАК СтоимостьОС
	|ГДЕ
	|	СтоимостьОС.ЗалоговаяСтоимостьОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""АрендованныеОС"" КАК ЗаполняемаяТабличнаяЧасть,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ИСТИНА КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ КАК ОтражатьВУпрУчете,
	|	втМестонахождениеОС.Организация КАК Организация,
	|	втМестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	втМестонахождениеОС.Местонахождение КАК Местонахождение,
	|	ЕСТЬNULL(втПорядокУчетаОС.ГруппаФинансовогоУчета, НЕОПРЕДЕЛЕНО) КАК ГруппаФинансовогоУчета,
	|	втПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(втАрендованныеОС.Партнер, НЕОПРЕДЕЛЕНО) КАК Партнер,
	|	ЕСТЬNULL(втАрендованныеОС.Контрагент, НЕОПРЕДЕЛЕНО) КАК Контрагент,
	|	ЕСТЬNULL(втАрендованныеОС.Договор, НЕОПРЕДЕЛЕНО) КАК Договор,
	|
	|	ЕСТЬNULL(втСтоимостьОС.ЗалоговаяСтоимость, 0) КАК ЗалоговаяСтоимость
	|
	|ИЗ
	|	втМестонахождениеОС КАК втМестонахождениеОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК втПорядокУчетаОС
	|		ПО (втПорядокУчетаОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьОС КАК втСтоимостьОС
	|		ПО (втСтоимостьОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|			И (втСтоимостьОС.Подразделение = втМестонахождениеОС.Местонахождение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАрендованныеОС КАК втАрендованныеОС
	|		ПО (втАрендованныеОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|ГДЕ
	|	ЕСТЬNULL(втСтоимостьОС.ЗалоговаяСтоимость, 0) <> 0
	|	И ВЫБОР
	|			КОГДА втАрендованныеОС.Договор ССЫЛКА Справочник.ДоговорыАренды
	|					И втАрендованныеОС.Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка)
	|
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом)
	|
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом)
	|		КОНЕЦ = &ХозяйственнаяОперация
	|
	|{ГДЕ
	|	втПорядокУчетаОС.ГруппаФинансовогоУчета.* КАК ГруппаФинансовогоУчета,
	|	втАрендованныеОС.Партнер.* КАК Партнер,
	|	втАрендованныеОС.Контрагент.* КАК Контрагент}
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Местонахождение,
	|	ГруппаФинансовогоУчета,
	|	Партнер,
	|	Контрагент,
	|	Договор,
	|	втМестонахождениеОС.ОсновноеСредство.Представление,
	|	втМестонахождениеОС.ОсновноеСредство.ИнвентарныйНомер";
	
	Запрос = Новый ПостроительЗапроса(ТекстЗапроса);
	Запрос.Параметры.Вставить("МассивОрганизаций", МассивОрганизаций);
	Запрос.Параметры.Вставить("Дата", ДатаОстатков);
	Запрос.Параметры.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
	Запрос.Параметры.Вставить("ОтражатьВБУиНУ", ПараметрыЗаполненияОстатков.ОтражатьВБУиНУ);
	
	//
	ПереданВАренду = 
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе;
		
	Запрос.Параметры.Вставить("ПереданВАренду", ПереданВАренду);
	
	//
	ПредметыЛизинга = 
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе;
	Запрос.Параметры.Вставить("ПредметыЛизинга", ПредметыЛизинга);
	
	Если ДопОтбор <> Неопределено Тогда
		Для Каждого УсловиеОтбора Из ДопОтбор Цикл
			ТекущийОтбор = Запрос.Отбор.Добавить(УсловиеОтбора.Ключ);
			ТекущийОтбор.ВидСравнения = ВидСравнения.Равно;
			ТекущийОтбор.Значение = УсловиеОтбора.Значение;
			ТекущийОтбор.Использование = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Возврат Запрос.Результат.Выгрузить();

КонецФункции

Функция ОстаткиНМАиРасходовНаНИОКР(ДатаОстатков, МассивОрганизаций, ДопОтбор, ПараметрыЗаполненияОстатков)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаНМАБУ.НематериальныйАктив КАК НематериальныйАктив
	|ПОМЕСТИТЬ втПринятыеКУчетуНМА
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&Дата, Организация В (&МассивОрганизаций)) КАК ПорядокУчетаНМАБУ
	|ГДЕ
	|	(ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|		ИЛИ ПорядокУчетаНМАБУ.СостояниеНУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету))
	|	И &ОтражатьВБУиНУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаНМАУУ.НематериальныйАктив КАК НематериальныйАктив
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(&Дата, Организация В (&МассивОрганизаций)) КАК ПорядокУчетаНМАУУ
	|ГДЕ
	|	ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|	И &ОтражатьВУУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестоУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	МестоУчетаНМА.Организация КАК Организация,
	|	МестоУчетаНМА.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ втМестоУчетаНМА
	|ИЗ
	|	РегистрСведений.МестоУчетаНМА.СрезПоследних(
	|			&Дата,
	|			НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						втПринятыеКУчетуНМА.НематериальныйАктив
	|					ИЗ
	|						втПринятыеКУчетуНМА КАК втПринятыеКУчетуНМА)) КАК МестоУчетаНМА
	|ГДЕ
	|	МестоУчетаНМА.Организация В (&МассивОрганизаций)
	|
	|{ГДЕ
	|	МестоУчетаНМА.Подразделение.* КАК Местонахождение}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НематериальныйАктив,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПорядокУчетаНМА.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ПорядокУчетаНМА.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втПорядокУчетаНМА
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|			&Дата,
	|			(НематериальныйАктив, Организация) В
	|				(ВЫБРАТЬ
	|					втМестоУчетаНМА.НематериальныйАктив,
	|					втМестоУчетаНМА.Организация
	|				ИЗ
	|					втМестоУчетаНМА КАК втМестоУчетаНМА)) КАК ПорядокУчетаНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьНМА.Организация КАК Организация,
	|	СтоимостьНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	СтоимостьНМА.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА СтоимостьНМА.СтоимостьОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьУУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьНМА.СтоимостьРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьБУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьНМА.СтоимостьНУОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьНУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьНМА.СтоимостьПРОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьПР,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьНМА.СтоимостьЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьБУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьНМА.СтоимостьНУЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьНУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьНМА.СтоимостьПРЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьПРЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА СтоимостьНМА.РезервПереоценкиСтоимостиОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимости,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьНМА.РезервПереоценкиСтоимостиРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимостиРегл
	|ПОМЕСТИТЬ втСтоимостьНМА
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА.Остатки(
	|			&Дата,
	|			Организация В (&МассивОрганизаций)
	|				И (НематериальныйАктив, ГруппаФинансовогоУчета, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						втПорядокУчетаНМА.НематериальныйАктив,
	|						втПорядокУчетаНМА.ГруппаФинансовогоУчета,
	|						втПорядокУчетаНМА.НаправлениеДеятельности
	|					ИЗ
	|						втПорядокУчетаНМА КАК втПорядокУчетаНМА)) КАК СтоимостьНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмортизацияНМА.Организация КАК Организация,
	|	АмортизацияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	АмортизацияНМА.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА -АмортизацияНМА.АмортизацияОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияУУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияНМА.АмортизацияРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияБУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияНМА.АмортизацияНУОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияНУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияНМА.АмортизацияПРОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияПР,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияНМА.АмортизацияЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияБУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияНМА.АмортизацияНУЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияНУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияНМА.АмортизацияПРЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияПРЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА -АмортизацияНМА.РезервПереоценкиАмортизацииОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизации,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияНМА.РезервПереоценкиАмортизацииРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ втАмортизацияНМА
	|ИЗ
	|	РегистрНакопления.АмортизацияНМА.Остатки(
	|			&Дата,
	|			Организация В (&МассивОрганизаций)
	|				И (НематериальныйАктив, ГруппаФинансовогоУчета, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						втПорядокУчетаНМА.НематериальныйАктив,
	|						втПорядокУчетаНМА.ГруппаФинансовогоУчета,
	|						втПорядокУчетаНМА.НаправлениеДеятельности
	|					ИЗ
	|						втПорядокУчетаНМА КАК втПорядокУчетаНМА)) КАК АмортизацияНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""НМА"" КАК ЗаполняемаяТабличнаяЧасть,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ОтражатьВБУиНУ КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУУ КАК ОтражатьВУпрУчете,
	|	втМестоУчетаНМА.Организация КАК Организация,
	|	втМестоУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	втМестоУчетаНМА.Подразделение КАК Местонахождение,
	|	втПорядокУчетаНМА.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	втПорядокУчетаНМА.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьУУ, 0) КАК ТекущаяСтоимостьУУ,
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьБУ, 0) КАК ТекущаяСтоимостьБУ,
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьБУЦФ, 0) КАК ТекущаяСтоимостьБУЦФ,
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьНУ, 0) КАК ТекущаяСтоимостьНУ,
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьНУЦФ, 0) КАК ТекущаяСтоимостьНУЦФ,
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьПР, 0) КАК ТекущаяСтоимостьПР,
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьПРЦФ, 0) КАК ТекущаяСтоимостьПРЦФ,
	|	ЕСТЬNULL(втСтоимостьНМА.РезервПереоценкиСтоимости, 0) КАК РезервПереоценкиСтоимости,
	|	ЕСТЬNULL(втСтоимостьНМА.РезервПереоценкиСтоимостиРегл, 0) КАК РезервПереоценкиСтоимостиРегл,
	|
	|	ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияБУ, 0) КАК НакопленнаяАмортизацияБУ,
	|	ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияБУЦФ, 0) КАК НакопленнаяАмортизацияБУЦФ,
	|	ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияНУ, 0) КАК НакопленнаяАмортизацияНУ,
	|	ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияНУЦФ, 0) КАК НакопленнаяАмортизацияНУЦФ,
	|	ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияПР, 0) КАК НакопленнаяАмортизацияПР,
	|	ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияПРЦФ, 0) КАК НакопленнаяАмортизацияПРЦФ,
	|	ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияУУ, 0) КАК НакопленнаяАмортизацияУУ,
	|	ЕСТЬNULL(втАмортизацияНМА.РезервПереоценкиАмортизации, 0) КАК РезервПереоценкиАмортизации,
	|	ЕСТЬNULL(втАмортизацияНМА.РезервПереоценкиАмортизацииРегл, 0) КАК РезервПереоценкиАмортизацииРегл,
	|
	|	ЕСТЬNULL(втСтоимостьНМА.РезервПереоценкиСтоимости, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.РезервПереоценкиАмортизации, 0) <> 0 КАК ЕстьРезервПереоценки,
	|
	|	ЕСТЬNULL(втСтоимостьНМА.РезервПереоценкиСтоимостиРегл, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.РезервПереоценкиАмортизацииРегл, 0) <> 0 КАК ЕстьРезервПереоценкиРегл,
	|
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьБУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьНУЦФ, 0) <> 0 
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьПРЦФ, 0) <> 0 
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияБУЦФ, 0) <> 0 
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияНУЦФ, 0) <> 0 
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияПРЦФ, 0) <> 0 КАК ПрименениеЦелевогоФинансирования
	|
	|ИЗ
	|	втМестоУчетаНМА КАК втМестоУчетаНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаНМА КАК втПорядокУчетаНМА
	|		ПО (втПорядокУчетаНМА.НематериальныйАктив = втМестоУчетаНМА.НематериальныйАктив)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьНМА КАК втСтоимостьНМА
	|		ПО (втСтоимостьНМА.НематериальныйАктив = втМестоУчетаНМА.НематериальныйАктив)
	|			И (втСтоимостьНМА.Подразделение = втМестоУчетаНМА.Подразделение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияНМА КАК втАмортизацияНМА
	|		ПО (втАмортизацияНМА.НематериальныйАктив = втМестоУчетаНМА.НематериальныйАктив)
	|			И (втАмортизацияНМА.Подразделение = втМестоУчетаНМА.Подразделение)
	|
	|ГДЕ
	|	(ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьУУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьБУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьБУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьНУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьНУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьПР, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьПРЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьУУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.РезервПереоценкиСтоимости, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.РезервПереоценкиСтоимостиРегл, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияБУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияБУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияНУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияНУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияПР, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияПРЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияУУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.РезервПереоценкиАмортизации, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.РезервПереоценкиАмортизацииРегл, 0) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	втМестоУчетаНМА.Организация,
	|	втМестоУчетаНМА.Подразделение,
	|	втМестоУчетаНМА.НематериальныйАктив.Представление,
	|	втМестоУчетаНМА.НематериальныйАктив.Код";
	
	Запрос = Новый ПостроительЗапроса(ТекстЗапроса);
	Запрос.Параметры.Вставить("МассивОрганизаций", МассивОрганизаций);
	Запрос.Параметры.Вставить("Дата", ДатаОстатков);
	Запрос.Параметры.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР);
	Запрос.Параметры.Вставить("ОтражатьВБУиНУ", ПараметрыЗаполненияОстатков.ОтражатьВБУиНУ);
	Запрос.Параметры.Вставить("ОтражатьВУУ", ПараметрыЗаполненияОстатков.ОтражатьВУУ);
	
	Если ДопОтбор <> Неопределено Тогда
		Для Каждого УсловиеОтбора Из ДопОтбор Цикл
			ТекущийОтбор = Запрос.Отбор.Добавить(УсловиеОтбора.Ключ);
			ТекущийОтбор.ВидСравнения = ВидСравнения.Равно;
			ТекущийОтбор.Значение = УсловиеОтбора.Значение;
			ТекущийОтбор.Использование = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Возврат Запрос.Результат.Выгрузить();

КонецФункции

#КонецОбласти

#Область Прочее

Процедура ПроверитьОтражениеВУчете(Объект, Отказ)
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
		
		Если НЕ Объект.ОтражатьВОперативномУчете
			И Объект.ОтражатьВБУиНУ 
			И НЕ Объект.ОтражатьВУУ
			И Объект.ОтражатьВУпрУчете Тогда
			
			Текст = НСтр("ru = 'Основные средства должны быть приняты к учету только в бухгалтерском или налоговом учете.';
						|en = 'Fixed assets must be recognized only in accounting or tax accounting.'");
			ОбщегоНазначения.СообщитьПользователю(Текст, , "ВариантОтраженияВУчете",, Отказ);
			
		ИначеЕсли НЕ Объект.ОтражатьВОперативномУчете
			И Объект.ОтражатьВУУ
			И НЕ Объект.ОтражатьВБУиНУ 
			И Объект.ОтражатьВРеглУчете Тогда
				
			Текст = НСтр("ru = 'Основные средства должны быть приняты к учету только в управленческом учете.';
						|en = 'Fixed assets must be recognized only in management accounting.'");
			ОбщегоНазначения.СообщитьПользователю(Текст, , "ВариантОтраженияВУчете",, Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПризнакиНастройкиОтраженияРасходовПоНалогам(ХозяйственнаяОперация, ДанныеСтроки, ВспомогательныеРеквизиты)
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе Тогда
		
		ГруппаОС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеСтроки.ОсновноеСредство, "ГруппаОС");
		
		ТребуетсяНастройкаОтраженияРасходовПоНалогам = Ложь;
		Если ВспомогательныеРеквизиты.ИспользоватьРеглУчет Тогда
			
			ОСУчитываютсяНаБалансе = Истина;
			Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе
				И ЗначениеЗаполнено(ДанныеСтроки.Договор) Тогда
				Балансодержатель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеСтроки.Договор, "Балансодержатель");
				ОСУчитываютсяНаБалансе = (Балансодержатель = Перечисления.БалансодержательПредметовАренды.Арендатор);
			КонецЕсли;
			
			Если ОСУчитываютсяНаБалансе Тогда
				ТребуетсяНастройкаОтраженияРасходовПоНалогам = 
					ВнеоборотныеАктивыЛокализация.ТребуетсяНастройкаОтраженияРасходовПоНалогам(
							ВспомогательныеРеквизиты.Организация, 
							ДобавитьМесяц(ВспомогательныеРеквизиты.Дата, 1), 
							ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеСтроки.ОсновноеСредство),
							ГруппаОС,
							ДанныеСтроки.АмортизационнаяГруппа,
							ДанныеСтроки.НедвижимоеИмущество);
			КонецЕсли;
		КонецЕсли;
		
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ТребуетсяНастройкаОтраженияРасходовПоНалогам",
			ТребуетсяНастройкаОтраженияРасходовПоНалогам,
			ВспомогательныеРеквизиты);
			
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ГруппаОС",
			ГруппаОС,
			ВспомогательныеРеквизиты);
			
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

//-- Локализация

#КонецОбласти
