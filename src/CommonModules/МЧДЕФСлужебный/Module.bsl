
#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область МЧД_БСП

#Область АПИ_БСП

// Шаблон общих реквизитов МЧД для метода СоздатьИзменитьМашиночитаемуюДоверенность
// 
Функция ШаблонОбщихРеквизитовМЧД() Экспорт
	
	Реквизиты = Новый Структура();
	Реквизиты.Вставить("ДатаВыдачи", Дата(1,1,1));
	Реквизиты.Вставить("ДатаОкончания", Дата(1,1,1));
	Реквизиты.Вставить("ВозможностьПередоверия", Перечисления.ВозможностьПередоверияМЧД.БезПередоверия);
	Реквизиты.Вставить("РегистрироватьВРеестре", Ложь);
	Реквизиты.Вставить("НомерДоверенности", "");
	Реквизиты.Вставить("ИныеСведения", "");
	
	Возврат Реквизиты;
	
КонецФункции

// Шаблон реквизитов доверителя/представителя
// 
Функция ШаблонРеквизитовУчастника() Экспорт
	
	Реквизиты = Новый Структура();
	Реквизиты.Вставить("Участник", Неопределено);
	Реквизиты.Вставить("ИдентификаторРодителя", Неопределено);
	// Реквизиты имеют структуру, возвращаемую методом МашиночитаемыеДоверенностиФНССлужебныйКлиентСервер.РеквизитыУчастника
	Реквизиты.Вставить("Реквизиты", Неопределено);
	Реквизиты.Вставить("ЭтоФизЛицо", Ложь);
	
	Возврат Реквизиты;
	
КонецФункции

// Шаблон полномочий
// 
Функция ШаблонПолномочий() Экспорт
	
	МодульМашиночитаемыеДоверенностиФНССлужебныйКлиентСервер = ОбщегоНазначения.ОбщийМодуль("МашиночитаемыеДоверенностиФНССлужебныйКлиентСервер");
	Неограниченные = МодульМашиночитаемыеДоверенностиФНССлужебныйКлиентСервер.ПредставлениеНеограниченныхПолномочий();
	
	Полномочия = Новый Структура();
	Полномочия.Вставить("ТекстПолномочий", Неограниченные);
	Полномочия.Вставить("ПолномочияВТекстовомВиде", Истина);
	Полномочия.Вставить("Полномочия", Новый Массив); // Массив структур со свойствами из метода ОписаниеПолномочия()
	
	Возврат Полномочия;
	
КонецФункции

// Шаблон описания полномочий
// 
Функция ОписаниеПолномочия() Экспорт
	
	Полномочие = Новый Структура();
	Полномочие.Вставить("Код", "");
	Полномочие.Вставить("ИдентификаторПолномочия", "");
	Полномочие.Вставить("Мнемокод", "");
	Полномочие.Вставить("Наименование", "");
	
	Возврат Полномочие;
	
КонецФункции

// Добавление доверителя в МЧД
//
// Параметры:
//  Ссылка			 - СправочникСсылка.МашиночитаемыеДоверенности - МЧД
//  ДанныеЗаполнения - Структура - Данные доверителя. Структуру см в методе ШаблонРеквизитовУчастника
// 
// Возвращаемое значение:
//  УникальныйИдентификатор - Идентификатор созданной строки ТЧ Доверители МЧД
//
Функция ДобавитьДоверителя(Ссылка, ДанныеЗаполнения) Экспорт
	
	Объект = Ссылка.ПолучитьОбъект();
	
	НовыйДоверитель = Объект.Доверители.Добавить();
	НовыйДоверитель.Доверитель = ДанныеЗаполнения.Участник;
	НовыйДоверитель.ДоверительРеквизиты = Новый ХранилищеЗначения(ДанныеЗаполнения.Реквизиты);
	НовыйДоверитель.Идентификатор = Новый УникальныйИдентификатор;
	НовыйДоверитель.ЭтоФизЛицо = ДанныеЗаполнения.ЭтоФизЛицо;
	НовыйДоверитель.ИдентификаторРодителя = ДанныеЗаполнения.ИдентификаторРодителя;
	
	Объект.Записать();
	
	Возврат НовыйДоверитель.Идентификатор;
	
КонецФункции

// Добавление представителя в МЧД
//
// Параметры:
//  Ссылка			 - СправочникСсылка.МашиночитаемыеДоверенности - МЧД
//  ДанныеЗаполнения - Структура - Данные представителя. Структуру см в методе ШаблонРеквизитовУчастника
// 
// Возвращаемое значение:
//  УникальныйИдентификатор - Идентификатор созданной строки ТЧ Представители МЧД
//
Функция ДобавитьПредставителя(Ссылка, ДанныеЗаполнения) Экспорт
	
	Объект = Ссылка.ПолучитьОбъект();
	
	НовыйПредставитель = Объект.Представители.Добавить();
	НовыйПредставитель.Представитель = ДанныеЗаполнения.Участник;
	НовыйПредставитель.ПредставительРеквизиты = Новый ХранилищеЗначения(ДанныеЗаполнения.Реквизиты);
	НовыйПредставитель.Идентификатор = Новый УникальныйИдентификатор;
	НовыйПредставитель.ИдентификаторРодителя = ДанныеЗаполнения.ИдентификаторРодителя;
	
	Объект.Записать();
	
	Возврат НовыйПредставитель.Идентификатор;
	
КонецФункции

// Функция для создания/изменения МЧД
//
// Параметры:
//  Ссылка			 - СправочникСсылка.МашиночитаемыеДоверенности - МЧД. Если заполнена, то нужно отредактировать эту МЧД
// 					   Если не заполнена - создать новую
//  ДанныеЗаполнения - Структура - Данные для заполнения реквизитов МЧД. Структуру см в методе ШаблонОбщихРеквизитовМЧД
// 
// Возвращаемое значение:
//  СправочникСсылка.МашиночитаемыеДоверенности - Созданная/измеенная МЧД
//
Функция СоздатьИзменитьМашиночитаемуюДоверенность(Ссылка, ДанныеЗаполнения) Экспорт
	
	Если ЗначениеЗаполнено(Ссылка) И НЕ ДокументооборотСКОВызовСервера.ОтчетНеПринят(Ссылка) Тогда
		Объект = Ссылка.ПолучитьОбъект();
	Иначе
		ИмяТипаСправочникаМашиночитаемыеДоверенности = "МашиночитаемыеДоверенности";
		Объект = Справочники[ИмяТипаСправочникаМашиночитаемыеДоверенности].СоздатьЭлемент();
	КонецЕсли;
	
	Объект.Доверители.Очистить();
	Объект.Представители.Очистить();
	Объект.Полномочия.Очистить();
	
	ЗаполнитьЗначенияСвойств(Объект, ДанныеЗаполнения);
	
	Объект.ВерсияФормата = "EMCHD_1";
	Объект.Статус = Перечисления.СтатусыМЧД.Черновик;
	Объект.Ответственный = Пользователи.ТекущийПользователь();
	
	Объект.Записать();
	
	Возврат Объект.Ссылка;
	
КонецФункции

// Предназначена для назначения МЧД автоматического наименования.
//
Процедура УстановитьАвтоНаименование(Ссылка) Экспорт
	
	ИмяТипаСправочникаМашиночитаемыеДоверенности = "МашиночитаемыеДоверенности";
	
	Объект = Ссылка.ПолучитьОбъект();
	Объект.Наименование = Справочники[ИмяТипаСправочникаМашиночитаемыеДоверенности].АвтоНаименование(Объект);
	Объект.Записать();
	
КонецПроцедуры

// Добавление полномочий в МЧД
//
// Параметры:
//  Ссылка			 - СправочникСсылка.МашиночитаемыеДоверенности - МЧД
//  ДанныеЗаполнения - Структура - Данные для заполнения полномочий МЧД. Структуру см в методе ШаблонПолномочий
// 
Процедура ДобавитьПолномочия(Ссылка, ДанныеЗаполнения) Экспорт
	
	Объект = Ссылка.ПолучитьОбъект();
	
	Объект.ТекстПолномочий = ДанныеЗаполнения.ТекстПолномочий;
	Объект.ПолномочияВТекстовомВиде = ДанныеЗаполнения.ПолномочияВТекстовомВиде;
		
	Если ДанныеЗаполнения.Полномочия.Количество() > 0 Тогда
		
		Для каждого Полномочие Из ДанныеЗаполнения.Полномочия Цикл
			
			НоваяСтрока = Объект.Полномочия.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Полномочие);
			НоваяСтрока.ИдентификаторПолномочия = Новый УникальныйИдентификатор;
			
		КонецЦикла;
				
	КонецЕсли;
	
	Объект.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область ИспользованиеАПИБСП

Функция ПолномочияМЧД(Форма)
	
	ОписаниеПолномочий = ШаблонПолномочий();
	
	Если ЭтоАдресВременногоХранилища(Форма.АдресДереваПолномочий) И НЕ Форма.ЭтоПолныеПолномочия() Тогда
		
		ОписаниеПолномочий.ТекстПолномочий = "";
		ОписаниеПолномочий.ПолномочияВТекстовомВиде = Ложь;
		
		ДеревоПолномочий = ПолучитьИзВременногоХранилища(Форма.АдресДереваПолномочий);
		
		Для Каждого Орган Из ДеревоПолномочий.Строки Цикл
		
			Если Орган.Наименование = МЧД_ЕФ() И Орган.Пометка Тогда
				
				Группы = Орган.Строки;
				
				Для каждого Группа Из Группы Цикл
					
					Полномочия = Группа.Строки;
					Для каждого Полномочие Из Полномочия Цикл
						
						Если Полномочие.Пометка Тогда
							
							НовоеПолномочие = ОписаниеПолномочия();
							ЗаполнитьЗначенияСвойств(НовоеПолномочие, Полномочие);
							
							ОписаниеПолномочий.Полномочия.Добавить(НовоеПолномочие);
							
						КонецЕсли;
						
					КонецЦикла;
				
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		МодульМашиночитаемыеДоверенностиФНССлужебныйКлиентСервер = ОбщегоНазначения.ОбщийМодуль("МашиночитаемыеДоверенностиФНССлужебныйКлиентСервер");
		ОписаниеПолномочий.ТекстПолномочий = МодульМашиночитаемыеДоверенностиФНССлужебныйКлиентСервер.ПредставлениеНеограниченныхПолномочий();
		ОписаниеПолномочий.ПолномочияВТекстовомВиде = Истина;
		
	КонецЕсли;
	
	Возврат ОписаниеПолномочий;
	
КонецФункции

Функция РеквизитыОрганизации(Форма) Экспорт
	
	РеквизитыОрганизации = ШаблонРеквизитовУчастника();
	РеквизитыОрганизации.Участник = Форма.Организация;
	
	МодульМашиночитаемыеДоверенностиФНССлужебныйКлиентСервер = ОбщегоНазначения.ОбщийМодуль("МашиночитаемыеДоверенностиФНССлужебныйКлиентСервер");
	РеквизитыУчастника = МодульМашиночитаемыеДоверенностиФНССлужебныйКлиентСервер.РеквизитыУчастника(
		"Организация", 
		Форма.Организация);
	
	СтандартнаяОбработка = Ложь;
	МашиночитаемыеДоверенностиФНСПереопределяемый.ПриЗаполненииРеквизитовОрганизации(
		Форма.Организация, 
		РеквизитыУчастника, 
		СтандартнаяОбработка);
		
	РеквизитыОрганизации.Реквизиты = РеквизитыУчастника;
	
	Возврат РеквизитыОрганизации;
	
КонецФункции

Функция РеквизитыРуководителя(Форма, ИдентификаторРодителя)
	
	Реквизиты = СоздатьМЧДЕФ_РеквизитыФЛ(Форма, "Доверитель", Реквизиты);

	РеквизитыРуководителя = ШаблонРеквизитовУчастника();
	РеквизитыРуководителя.Участник = Форма.Доверитель;
	РеквизитыРуководителя.ИдентификаторРодителя = ИдентификаторРодителя;
	РеквизитыРуководителя.Реквизиты = Реквизиты;
	РеквизитыРуководителя.ЭтоФизЛицо = Истина;
	
	Возврат РеквизитыРуководителя;
	
КонецФункции

Функция РеквизитыПредставителя(Форма)
	
	Реквизиты = СоздатьМЧДЕФ_РеквизитыФЛ(Форма, "Представитель", Реквизиты);

	РеквизитыПредставителя = ШаблонРеквизитовУчастника();
	РеквизитыПредставителя.Участник = Форма.Представитель;
	РеквизитыПредставителя.Реквизиты = Реквизиты;
	РеквизитыПредставителя.ЭтоФизЛицо = Истина;
	
	Возврат РеквизитыПредставителя;
	
КонецФункции

Функция ОбщиеРеквизитыМЧДЕФ(Форма) Экспорт
	
	ОбщиеРеквизиты = ШаблонОбщихРеквизитовМЧД();
	ОбщиеРеквизиты.ДатаВыдачи = Форма.ДатаНачала;
	ОбщиеРеквизиты.ДатаОкончания = Форма.ДатаОкончания;
	ОбщиеРеквизиты.РегистрироватьВРеестре = Форма.РегистрироватьВРеестре;
	ОбщиеРеквизиты.ИныеСведения = Форма.ДопСведения;
	
	Если ОбщиеРеквизиты.РегистрироватьВРеестре Тогда
		ОбщиеРеквизиты.НомерДоверенности = Форма.НомерДоверенности;
	КонецЕсли;
	
	ИмяПеречисления = "ВозможностьПередоверияМЧД";
	
	Если Форма.ПередовериеМЧДЕдиногоФормата = НСтр("ru = 'Однократное';
													|en = 'Однократное'") Тогда
		ОбщиеРеквизиты.ВозможностьПередоверия = Перечисления[ИмяПеречисления].ОднократноеПередоверие;
	ИначеЕсли Форма.ПередовериеМЧДЕдиногоФормата = НСтр("ru = 'Многократное';
														|en = 'Многократное'") Тогда
		ОбщиеРеквизиты.ВозможностьПередоверия = Перечисления[ИмяПеречисления].МногократноеПередоверие;
	КонецЕсли;
	
	Возврат ОбщиеРеквизиты;
	
КонецФункции

Функция СоздатьМЧДЕФСервер(Форма, Ссылка) Экспорт
	
	ОбщиеРеквизиты = ОбщиеРеквизитыМЧДЕФ(Форма);
	МЧД = СоздатьИзменитьМашиночитаемуюДоверенность(Ссылка, ОбщиеРеквизиты);
	
	// Организация
	РеквизитыОрганизации = РеквизитыОрганизации(Форма);
	ИдентификаторОрганизации = ДобавитьДоверителя(МЧД, РеквизитыОрганизации);
	
	// Руководитель
	РеквизитыРуководителя = РеквизитыРуководителя(Форма, ИдентификаторОрганизации);
	ДобавитьДоверителя(МЧД, РеквизитыРуководителя);
	
	// Представитель
	РеквизитыПредставителя = РеквизитыПредставителя(Форма);
	ДобавитьПредставителя(МЧД, РеквизитыПредставителя);
	
	// Полномочия
	Полномочия = ПолномочияМЧД(Форма);
	ДобавитьПолномочия(МЧД, Полномочия);
	
	// Наименование
	УстановитьАвтоНаименование(МЧД);
	
	// Для записи в регистр нужна ссылка, а не объект
	Если Форма.СоздатьМЧДФТС Тогда
		ИнтерфейсыВзаимодействияБРОВызовСервера.МЧДЕдиногоФорматаРегистрироватьВФТС(МЧД, Истина);
	КонецЕсли;
	
	Возврат МЧД;
	
КонецФункции

Функция СоздатьМЧДЕФ_РеквизитыФЛ(Форма, Префикс, Реквизиты)
	
	МодульМашиночитаемыеДоверенностиФНССлужебныйКлиентСервер = ОбщегоНазначения.ОбщийМодуль("МашиночитаемыеДоверенностиФНССлужебныйКлиентСервер");
	Реквизиты = МашиночитаемыеДоверенностиФНССлужебныйКлиентСервер.РеквизитыУчастника("ФизическоеЛицо", Форма[Префикс]);
	
	МашиночитаемыеДоверенностиФНСПереопределяемый.ПриЗаполненииРеквизитовФизическогоЛица(Форма[Префикс], Реквизиты);
	
	Реквизиты.ИННФЛ = Форма[Префикс + "ИНН"];
	Реквизиты.Фамилия = Форма[Префикс + "Фамилия"];
	Реквизиты.Имя = Форма[Префикс + "Имя"];
	Реквизиты.Отчество = Форма[Префикс + "Отчество"];
	Реквизиты.ДатаРождения = Форма[Префикс + "ДатаРождения"];
	Реквизиты.МестоРождения = Форма[Префикс + "МестоРождения"];
	Реквизиты.Гражданство = Форма[Префикс + "Гражданство"];
	Реквизиты.БезГражданства = Ложь;
	Реквизиты.СтраховойНомерПФР = Форма[Префикс + "СНИЛС"];
	
	Если ЗначениеЗаполнено(Форма[Префикс + "ВидДокумента"]) Тогда
		Реквизиты.ДокументВид = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма[Префикс + "ВидДокумента"], "КодМВД");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Реквизиты.ДокументВид) Тогда
		Реквизиты.ДокументВид = 21; // паспорт РФ
	КонецЕсли;
	
	Реквизиты.ДокументНомер = Форма[Префикс + "СерияДокумента"] + ?(ЗначениеЗаполнено(Форма[Префикс + "СерияДокумента"])
		И ЗначениеЗаполнено(Форма[Префикс + "НомерДокумента"]), " ", "") + Форма[Префикс + "НомерДокумента"];
		
	Реквизиты.ДокументКемВыдан = Форма[Префикс + "КемВыданДокумент"];
	Реквизиты.ДокументКодПодразделения = Форма[Префикс + "КодПодразделения"];
	Реквизиты.ДокументДатаВыдачи = Форма[Префикс + "ДатаВыдачиДокумента"];
	
	Реквизиты.ЭлектроннаяПочта = Форма[Префикс + "Почта"];
	Реквизиты.ЭлектроннаяПочтаЗначение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВJSON(
		Реквизиты.ЭлектроннаяПочта, 
		Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица);
		
	Реквизиты.Телефон = Форма[Префикс + "Телефон"];
	Реквизиты.ТелефонЗначение = ТелефонЗначение(Реквизиты.Телефон);
	
	Если ЗначениеЗаполнено(Форма[Префикс + "АдресПредставление"]) Тогда
		Реквизиты.АдресРегистрацииЗначение = Форма[Префикс + "АдресЗначение"];
		Реквизиты.АдресРегистрации = Форма[Префикс + "АдресПредставление"];
	КонецЕсли;
	
	Возврат Реквизиты;
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ТелефонЗначение(Знач Телефон)
	
	// Выполняется такое преобразование, чтобы МЧД БСП смогла работать с этим телефоном
	
	Представление = ЭлектроннаяПодписьВМоделиСервисаКлиентСервер.ПолучитьПредставлениеТелефона(Телефон);
	Если ЗначениеЗаполнено(Представление) Тогда
		
		ТелефонJSON = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВJSON(
			Телефон, 
			Справочники.ВидыКонтактнойИнформации.ТелефонРабочийФизическиеЛица);
			
		РасчлененныйТелефон = СтрРазделить(Телефон, " ", Истина);
			
		ТелефонСтруктура = ОбщегоНазначенияЭДКОСлужебныйВызовСервера.JsonВСтруктура(ТелефонJSON);
		ТелефонСтруктура.Вставить("countryCode", СтрЗаменить(РасчлененныйТелефон[0], "+", ""));
		ТелефонСтруктура.Вставить("areaCode",    РасчлененныйТелефон[1]);
		ТелефонСтруктура.Вставить("number",      РасчлененныйТелефон[2]);
		
		Результат = ОбщегоНазначенияЭДКОСлужебныйВызовСервера.СтруктураВJson(ТелефонСтруктура);
		
	Иначе
		
		Результат = Телефон;
		
	КонецЕсли;
	
	Возврат Результат; 

КонецФункции

Функция КлассификаторПолномочийМЧДЕФ() Экспорт
	
	МодульМашиночитаемыеДоверенностиФНСПовтИсп = ОбщегоНазначения.ОбщийМодуль("МашиночитаемыеДоверенностиФНСПовтИсп");
	Возврат МодульМашиночитаемыеДоверенностиФНСПовтИсп.КлассификаторПолномочий();
	
КонецФункции

Функция МЧД_ЕФ() Экспорт
	
	Возврат МЧДБРОКлиентСервер.МЧД_ЕФ();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти