#Область СлужебныйПрограммныйИнтерфейс

#Область ДеревоСпецификаций

// Процедура заполнения дерева ОстаткиПоСкладам в формах
// 
// Параметры:
//  Форма - см. Обработка.ДеревоРесурсныхСпецификаций.Форма.Форма
//  ДанныеОНоменклатуре - Структура - информация о номенклатуре и характеристике:
//  * Номенклатура - СправочникСсылка.Номенклатура	- номенклатура
//  * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - характеристика номенклатуры
//
Процедура ЗаполнитьДеревоОстатковТоваров(Форма, ДанныеОНоменклатуре) Экспорт

	ОстаткиПоСкладам = Форма.ОстаткиТоваров.ПолучитьЭлементы();
	ОстаткиПоСкладам.Очистить();
	
	ИнформацияОТоваре = ОбеспечениеПроизводстваВызовСервера.СтруктураЗаполненияОстаткиТоваров(ДанныеОНоменклатуре);

	ЦенаПродажиТовара = ИнформацияОТоваре.Цена;
	
	НаименованиеУпаковкиЕдиницыИзмерения = ?(ЗначениеЗаполнено(ЦенаПродажиТовара.Упаковка), 
		Строка(ЦенаПродажиТовара.Упаковка), 
		Строка(ЦенаПродажиТовара.ЕдиницаИзмерения));
	
	ТекущаяДатаСеанса = Форма.ТекущаяДатаСеанса;
	
	Для Каждого СтрокаТбл Из ИнформацияОТоваре.ТекущиеОстатки Цикл
		
		СтрокаОстаткиПоСкладам = ОстаткиПоСкладам.Добавить();
		
		СтрокаОстаткиПоСкладам.Период = ТекущаяДатаСеанса;
		СтрокаОстаткиПоСкладам.ПериодОписание = НСтр("ru = 'Сейчас';
													|en = 'Now'");
		СтрокаОстаткиПоСкладам.Доступно = СтрокаТбл.Свободно;
		СтрокаОстаткиПоСкладам.Запас = СтрокаТбл.Запас;
		
		СтрокаОстаткиПоСкладам.ЗапасОписание = ОписаниеКоличестваВСтрокеОстатка(
			СтрокаОстаткиПоСкладам.Запас,
			НаименованиеУпаковкиЕдиницыИзмерения);
		
		СтрокаОстаткиПоСкладам.ДоступноОписание = ОписаниеКоличестваВСтрокеОстатка(
			СтрокаОстаткиПоСкладам.Доступно,
			НаименованиеУпаковкиЕдиницыИзмерения);
		
		СтрокаОстаткиПоСкладам.Склад = СтрокаТбл.Склад;
		СтрокаОстаткиПоСкладам.СкладОписание = Строка(СтрокаТбл.Склад);
		
		ПланируемыеОстаткиПоДатам = СтрокаОстаткиПоСкладам.ПолучитьЭлементы();
			
		ЕстьПланируемыеОстатки = Ложь;
		Для Каждого СтрокаТбл Из ИнформацияОТоваре.ПланируемыеОстатки Цикл
			
			Если Не (СтрокаТбл.Склад = СтрокаОстаткиПоСкладам.Склад) Тогда
				Продолжить;
			КонецЕсли;
			
			ЕстьПланируемыеОстатки = Истина;
			
			СтрокаПланируемыеОстаткиПоДатам = ПланируемыеОстаткиПоДатам.Добавить();
			
			СтрокаПланируемыеОстаткиПоДатам.Период = СтрокаТбл.Период;
			СтрокаПланируемыеОстаткиПоДатам.ПериодОписание = Формат(СтрокаТбл.Период, "ДЛФ=D");
			СтрокаПланируемыеОстаткиПоДатам.Доступно = СтрокаТбл.Доступно;
			СтрокаПланируемыеОстаткиПоДатам.Запас = СтрокаТбл.Запас;
			
			СтрокаПланируемыеОстаткиПоДатам.ЗапасОписание = ОписаниеКоличестваВСтрокеОстатка(
				СтрокаПланируемыеОстаткиПоДатам.Запас,
				НаименованиеУпаковкиЕдиницыИзмерения);
			
			СтрокаПланируемыеОстаткиПоДатам.ДоступноОписание = ОписаниеКоличестваВСтрокеОстатка(
				СтрокаПланируемыеОстаткиПоДатам.Доступно,
				НаименованиеУпаковкиЕдиницыИзмерения);
			
			СтрокаПланируемыеОстаткиПоДатам.Склад = СтрокаТбл.Склад;
			СтрокаПланируемыеОстаткиПоДатам.СкладОписание = "";
			
		КонецЦикла;
		
		Если СтрокаОстаткиПоСкладам.Запас = 0 И Не ЕстьПланируемыеОстатки Тогда
			ОстаткиПоСкладам.Удалить(СтрокаОстаткиПоСкладам);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает строковое описание количества. Используется при выводе строк в таблицу остатков.
//
// Параметры:
//  Количество - Число - количество товаров,
//	НаименованиеУпаковкиЕдиницыИзмерения - Строка - наименование упаковки, единицы измерения,
//
// Возвращаемое значение:
//	Строка - Описание количества товаров для текущей строки в форме подбора.
//
Функция ОписаниеКоличестваВСтрокеОстатка(Количество, НаименованиеУпаковкиЕдиницыИзмерения)
	
	КоличествоОписание = "";
	
	Если ЗначениеЗаполнено(Количество) Тогда
			КоличествоОписание = Формат(Количество,"ЧДЦ=3") + " " + НаименованиеУпаковкиЕдиницыИзмерения;
	КонецЕсли;
	
	Возврат КоличествоОписание;
	
КонецФункции

#КонецОбласти