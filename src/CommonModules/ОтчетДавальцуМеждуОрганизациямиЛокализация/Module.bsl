#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив из Строка - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив из Строка - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//++ Локализация
	
	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура';
										|en = 'Tax invoice'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
	КомандаПечати.ДополнительныеПараметры.Вставить("ДополнитьПолученнымиСчетамиФактуры", Истина);
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(
		КомандаПечати,
		"ХозяйственнаяОперация",
		Перечисления.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями);
	
	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		
		// Счет-фактура (в валюте)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "СчетФактураВВалюте";
		КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (в валюте)';
											|en = 'Tax invoice (in currency)'");
		КомандаПечати.ФункциональныеОпции = "ИспользоватьНесколькоВалют";
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Истина);
		КомандаПечати.ДополнительныеПараметры.Вставить("ДополнитьПолученнымиСчетамиФактуры", Истина);
		УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(
			КомандаПечати,
			"ХозяйственнаяОперация",
			Перечисления.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями);
		
		// Универсальный передаточный документ (УПД)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "УПД";
		КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)';
											|en = 'Universal transfer document (UTD)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ДополнитьПолученнымиСчетамиФактуры", Истина);
		УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(
			КомандаПечати,
			"ХозяйственнаяОперация",
			Перечисления.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями);
		
	КонецЕсли;
	
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект, представление - имя области в которой был выведен объект (выходной параметр).
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
КонецПроцедуры

//++ Локализация

// Формирует текст запроса для получения данных основания при печати Счет-фактуры.
// 
// Возвращаемое значение:
//  Строка - Текст запроса данных основания для печатной формы счет фактура
//
Функция ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                       КАК Ссылка,
	|	ДанныеДокументов.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	ДанныеДокументов.Валюта                       КАК Валюта,
	|	ДанныеДокументов.Организация                  КАК Организация,
	|	ДанныеДокументов.НалогообложениеНДС           КАК НалогообложениеНДС,
	|	ДанныеДокументов.Подразделение                КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)      КАК Склад,
	|	ЛОЖЬ                                          КАК РасчетыЧерезОтдельногоКонтрагента,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Грузоотправитель,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Грузополучатель,
	|	НЕОПРЕДЕЛЕНО                                  КАК Номенклатура,
	|	""""                                          КАК Содержание,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Комиссионер,
	|	ДанныеДокументов.Основание                    КАК Основание,
	|	ДанныеДокументов.ОснованиеДата                КАК ОснованиеДата,
	|	ДанныеДокументов.ОснованиеНомер               КАК ОснованиеНомер,
	|	ДанныеДокументов.БанковскийСчетПереработчика  КАК БанковскийСчетОрганизации,
	|	ДанныеДокументов.БанковскийСчетДавальца       КАК БанковскийСчетКонтрагента,
	|	НЕОПРЕДЕЛЕНО                                  КАК БанковскийСчетГрузоотправителя,
	|	НЕОПРЕДЕЛЕНО                                  КАК БанковскийСчетГрузополучателя,
	|	ДанныеДокументов.ДоверенностьНомер            КАК ДоверенностьНомер,
	|	ДанныеДокументов.ДоверенностьДата             КАК ДоверенностьДата,
	|	ДанныеДокументов.ДоверенностьВыдана           КАК ДоверенностьВыдана,
	|	ДанныеДокументов.ДоверенностьЛицо             КАК ДоверенностьЛицо,
	|	ДанныеДокументов.Ответственный                КАК Менеджер,
	|	НЕОПРЕДЕЛЕНО                                  КАК Кладовщик,
	|	НЕОПРЕДЕЛЕНО                                  КАК ДолжностьКладовщика,
	|	""""                                          КАК АдресДоставки,
	|	""""                                          КАК АдресДоставкиЗначенияПолей,
	|	""""                                          КАК АдресДоставкиЗначение
	|
	|//ОператорПОМЕСТИТЬ
	|ИЗ
	|	Документ.ОтчетДавальцуМеждуОрганизациями КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&ДокументОснование_ОтчетДавальцуМеждуОрганизациями)
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает данные для формирования печатной формы УПД
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка.ОтчетДавальцуМеждуОрганизациями - ссылки на документы, по которым необходимо получить данные.
//
// Возвращаемое значение:
//	Структура - коллекция данных, используемая при печати УПД, содержащая следующие свойства:
//		* РезультатПоШапке - РезультатЗапроса - общие данные накладной.
//		* РезультатПоТабличнойЧасти - РезультатЗапроса - данные табличной части накладной.
//
Функция ПолучитьДанныеДляПечатнойФормыУПД(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка        КАК Ссылка,
	|	ДанныеДокументов.Валюта        КАК Валюта,
	|	ДанныеДокументов.Организация   КАК Организация,
	|	ДанныеДокументов.Подразделение КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ДанныеДокументов.Дата          КАК Период
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ОтчетДавальцуМеждуОрганизациями КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	УчетНДСРФ.ДополнитьЗапросПолученияДанныхДляПечатиУПД(Запрос);

	Запрос.Выполнить();
	
	ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	Обработки.ПечатьОбщихФорм.ПоместитьВременнуюТаблицуДанныхПоставщика(МенеджерВременныхТаблиц);
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                КАК Ссылка,
	|	&ПредставлениеСчетФактура                             КАК ПредставлениеДокумента,
	|	2                                                     КАК СтатусУПД,
	|	ДанныеДокумента.Номер                                 КАК Номер,
	|	ДанныеДокумента.Дата                                  КАК Дата,
	|	ДанныеДокумента.ОснованиеДата                         КАК ОснованиеДата,
	|	ДанныеДокумента.ОснованиеНомер                        КАК ОснованиеНомер,
	|	НЕОПРЕДЕЛЕНО                                          КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО                                          КАК ДатаИсправления,
	|	ЛОЖЬ                                                  КАК Исправление,
	|	НЕОПРЕДЕЛЕНО                                          КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО                                          КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО                                          КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО                                          КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ                                                  КАК КорректировочныйСчетФактура,
	|	""""                                                  КАК СтрокаПоДокументу,
	|	НЕОПРЕДЕЛЕНО                                          КАК ВалютаСчетаФактуры,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)         КАК Партнер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Давалец.ОбособленноеПодразделение
	|			ТОГДА ДанныеДокумента.Давалец.ГоловнаяОрганизация
	|		ИНАЧЕ ДанныеДокумента.Давалец
	|	КОНЕЦ                                                 КАК Контрагент,
	|	ДанныеДокумента.НалогообложениеНДС                    КАК НалогообложениеНДС,
	|	ДанныеПоставщика.ГоловнаяОрганизация                  КАК Организация,
	|	ДанныеДокумента.Организация.Префикс                   КАК Префикс,
	|	0                                                     КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование     КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность        КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ДанныеДокумента.Давалец                               КАК Грузополучатель,
	|	ДанныеДокумента.Организация                           КАК Грузоотправитель,
	|	ДанныеПоставщика.КПППоставщика                        КАК КПППоставщика,
	|	ДанныеДокумента.Давалец.КПП                           КАК КПППокупателя,
	|	ДанныеДокумента.Давалец.ИНН                           КАК ИННПокупателя,
	|	""""                                                  КАК АдресДоставки,
	|	ДанныеДокумента.Валюта                                КАК Валюта,
	|	ДанныеДокумента.Валюта.НаименованиеПолное             КАК ВалютаНаименованиеПолное,
	|	ДанныеДокумента.Валюта.Код                            КАК ВалютаКод,
	|	ИСТИНА                                                КАК ТолькоУслуги,
	|	ЛОЖЬ                                                  КАК ЕстьПрослеживаемыеТовары,
	|	ДанныеДокумента.Основание                             КАК Основание,
	|	ДанныеДокумента.ДоверенностьНомер                     КАК ДоверенностьНомер,
	|	ДанныеДокумента.ДоверенностьДата                      КАК ДоверенностьДата,
	|	ДанныеДокумента.ДоверенностьВыдана                    КАК ДоверенностьВыдана,
	|	ДанныеДокумента.ДоверенностьЛицо                      КАК ДоверенностьЛицо,
	|	НЕОПРЕДЕЛЕНО                                          КАК Кладовщик,
	|	НЕОПРЕДЕЛЕНО                                          КАК ДолжностьКладовщика,
	|	ИСТИНА                                                КАК ВыводитьКодНоменклатуры,
	|	ДанныеДокументов.ТребуетсяНаличиеСФ                   КАК ТребуетсяНаличиеСФ,
	|
	|	ДанныеДокумента.БанковскийСчетДавальца                КАК БанковскийСчетОрганизации,
	|	ДанныеДокумента.БанковскийСчетПереработчика           КАК БанковскийСчетКонтрагента,
	|	ЛОЖЬ                                                  КАК ЭтоПередачаНаКомиссию
	|
	|ИЗ
	|	Документ.ОтчетДавальцуМеждуОрганизациями КАК ДанныеДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПоставщика КАК ДанныеПоставщика
	|	ПО ДанныеДокумента.Ссылка = ДанныеПоставщика.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|	ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	&ВыводитьОсновнойУПД
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                      КАК Ссылка,
	|	ТаблицаДокумента.Номенклатура                                КАК Номенклатура,
	|	ТаблицаДокумента.Номенклатура.НаименованиеПолное             КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаДокумента.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаДокумента.Номенклатура.Код
	|	КОНЕЦ                                                        КАК НоменклатураКод,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения               КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код           КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД          КАК ЕдиницаИзмеренияТНВЭД,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД.Представление КАК ЕдиницаИзмеренияТНВЭДНаименование,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД.Код      КАК ЕдиницаИзмеренияТНВЭДКод,
	|	ТаблицаДокумента.Характеристика                              КАК Характеристика,
	|	ТаблицаДокумента.Характеристика.НаименованиеПолное           КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.Серия.Наименование                          КАК СерияНаименование,	
	|	ТаблицаДокумента.СтавкаНДС                                   КАК СтавкаНДС,
	|	ТаблицаДокумента.НомерГТД                                    КАК НомерГТДСсылка,
	|	НЕОПРЕДЕЛЕНО                                                 КАК ТипНомераГТД,
	|	ТаблицаДокумента.НомерГТД                                    КАК НомерГТД,
	|	ТаблицаДокумента.НомерГТД.СтранаПроисхождения                КАК СтранаПроисхождения,
	|	ТаблицаДокумента.НомерГТД.СтранаПроисхождения.Код            КАК СтранаПроисхожденияКод,
	|	ТаблицаДокумента.Количество                                  КАК Количество,
	|	ТаблицаДокумента.КоличествоПоРНПТ                            КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.СуммаБезНДС / ТаблицаДокумента.Количество   КАК Цена,
	|	ТаблицаДокумента.СуммаБезНДС                                 КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДС                                    КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаБезНДС + ТаблицаДокумента.СуммаНДС     КАК СуммаСНДС,
	|	ТаблицаДокумента.НомерСтроки                                 КАК НомерСтроки,
	|	ТаблицаДокумента.Серия                                       КАК Серия,
	|	ЛОЖЬ                                                         КАК ЭтоВозвратнаяТара,
	|	ТаблицаДокумента.Номенклатура.КодТНВЭД                       КАК КодТНВЭД
	|
	|ИЗ
	|	ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|";
	
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru = 'счет-фактура';
																|en = 'tax invoice'"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	Запрос.УстановитьПараметр("ВыводитьОсновнойУПД", 
		Не (ПараметрыПечати.Свойство("НеВыводитьОсновнойУПД")
			И ПараметрыПечати.НеВыводитьОсновнойУПД));
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("РезультатПоШапке",          РезультатПоШапке);
	ДанныеДляПечати.Вставить("РезультатПоТабличнойЧасти", РезультатПоТабличнойЧасти);
	
	Возврат ДанныеДляПечати;
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Валюта.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета", Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",   ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	
	Если ПараметрыЗаполнения.ПересчитыватьВВалютуРегл И ПараметрыЗаполнения.АктуализироватьРасчеты Тогда
		
		Если Не ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
			|ИЗ
			|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
			|		ПО РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
			|
			|ГДЕ
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Организация.ВалютаРегламентированногоУчета
			|	И РасчетыСКлиентами.Активность
			|";
			
			ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
			МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
			
			Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
				
				ОкончаниеПериодаРасчета =
					КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
				
				АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
				АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
				
				Попытка
					
					РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(
						ОкончаниеПериодаРасчета, АналитикиРасчета);
					
				Исключение
					
					ТекстСообщения = НСтр("ru = 'Печатная форма сформирована по неактуальным данным.
												|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.';
												|en = 'Print form is generated according to irrelevant data. 
												|Update AR/AP accounting manually, and then create the print form again.'");
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
					
				КонецПопытки;
				
			КонецЕсли;
			
		Иначе
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ДанныеДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	ТаблицаДанныхДокументов КАК ДанныеДокументов
			|ГДЕ 
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Организация.ВалютаРегламентированногоУчета
			|	ИЛИ ДанныеДокументов.Валюта <> &ВалютаУправленческогоУчета";
			
			МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			
			РегистрыСведений.СуммыДокументовВВалютахУчета.РассчитатьСуммыДокументовВВалютахУчета(МассивДокументов);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                     КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура               КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика             КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ВЫРАЗИТЬ("""" КАК Строка(200))              КАК Содержание,
	|	ТаблицаДокумента.Количество                 КАК Количество,
	|	ТаблицаДокумента.Количество                 КАК КоличествоУпаковок,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	0                                           КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.Цена                       КАК Цена,
	|	ТаблицаДокумента.СтавкаНДС                  КАК СтавкаНДС,
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютахУчета.БазаНДСРегл,
	|		ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС) КАК СуммаБезНДС,
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютахУчета.СуммаНДСРегл, ТаблицаДокумента.СуммаНДС) КАК СуммаНДС,
	|	ЛОЖЬ                                        КАК ЭтоТовар,
	|	ЛОЖЬ                                        КАК ВернутьМногооборотнуюТару
	|ПОМЕСТИТЬ ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров
	|ИЗ
	|	Документ.ОтчетДавальцуМеждуОрганизациями.Товары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|	ПО ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
	|	И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|	И СуммыДокументовВВалютахУчета.Активность
	|	И &ПересчитыватьВВалютуРегл
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|	ПО ИСТИНА
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

//-- Локализация
#КонецОбласти

#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстыОтражения = Новый Массив;
	
	//++ Локализация
	
	// Общие фрагменты проводок по включению в стоимость НДС
	ТекстыОтражения.Добавить(РеглУчетВыборкиСерверПовтИсп.ТекстВключениеНДСпоПриобретеннымЦенностям());
	
	ТекстыОтражения.Добавить(ТекстВыпускУслугПереработки()); // Выпуск услуг переработки (Дт 20 :: Кт 20)
	ТекстыОтражения.Добавить(ТекстСебестоимостьПродаж()); // Себестоимость продаж (Дт 90.02 :: Кт 20)
	ТекстыОтражения.Добавить(ТекстСписаниеТоваровНаРасходы()); // Списание на расходы (Дт 2Х :: Кт 20)
	ТекстыОтражения.Добавить(ТекстСписаниеТоваровНаСтатьиАктивовПассивов()); // Списание на расходы (Дт 9Х :: Кт 20)
	ТекстыОтражения.Добавить(ТекстРеализацияУслугПереработки()); // Реализация услуг переработки (Дт 62 :: Кт 90.01, 91.01)
	ТекстыОтражения.Добавить(ТекстНачислениеНДСЗаУслуги()); // Начисление НДС (Дт <90.3, 91.2> :: Кт <68.2>)
	ТекстыОтражения.Добавить(ТекстСписаниеНаПартииПроизводства()); // Списание на партии производства (Дт 20 :: Кт 20)
	ТекстыОтражения.Добавить(ТекстПриобретениеРабот()); // Приобретение работ (Дт 20 :: Кт 60)
	ТекстыОтражения.Добавить(ТекстЗакупкаНДС()); // НДС при приобретении (Дт 19 :: Кт 60)
	
	//-- Локализация
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	ТекстыЗапроса = Новый Массив;
	
	//++ Локализация
	
	#Область ВТПолученияНалогообложенияПрибыли
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВыручкаИСебестоимость.Ссылка КАК Ссылка,
	|	ВыручкаИСебестоимость.Период КАК Период,
	|	ВыручкаИСебестоимость.Организация КАК Организация,
	|	ВыручкаИСебестоимость.Подразделение КАК Подразделение,
	|	ВыручкаИСебестоимость.НДВыручки КАК НаправлениеДеятельности,
	|	ВыручкаИСебестоимость.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТПолученияНалогообложенияПрибыли
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|	ПО ДокументыКОтражению.Ссылка = ВыручкаИСебестоимость.Ссылка
	|		И ВыручкаИСебестоимость.НастройкаХозОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтчетДавальцуМеждуОрганизациями)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО 
	|		УчетнаяПолитикаОрганизаций.Ссылка = ВыручкаИСебестоимость.Ссылка
	|		И УчетнаяПолитикаОрганизаций.Организация = ВыручкаИСебестоимость.Организация
	|		И УчетнаяПолитикаОрганизаций.Период = ВыручкаИСебестоимость.Период
	|		И УчетнаяПолитикаОрганизаций.РаздельныйУчетПоНалогуНаПрибыль
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Строки.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	ВыручкаИСебестоимость.Подразделение КАК Подразделение,
	|	ВыручкаИСебестоимость.НДСебестоимости КАК НаправлениеДеятельности,
	|	Строки.Номенклатура КАК Номенклатура
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = ДокументыКОтражению.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
	|		И Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		И Строки.СтатьяДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		И Строки.СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|	ПО Строки.Ссылка = ВыручкаИСебестоимость.Ссылка
	|		И Строки.Организация = ВыручкаИСебестоимость.Организация
	|		И Строки.ИдентификаторФинЗаписи = ВыручкаИСебестоимость.ИдентификаторФинЗаписи
	|		И Строки.НастройкаХозяйственнойОперации = ВыручкаИСебестоимость.НастройкаХозОперации
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО 
	|		УчетнаяПолитикаОрганизаций.Ссылка = Строки.Ссылка
	|		И УчетнаяПолитикаОрганизаций.Организация = Строки.Организация
	|		И УчетнаяПолитикаОрганизаций.Период = Строки.Период
	|		И УчетнаяПолитикаОрганизаций.РаздельныйУчетПоНалогуНаПрибыль";

	ТекстыЗапроса.Добавить(ТекстЗапроса);

	#КонецОбласти
	
	#Область РаздельныйУчет_НастройкиНалогообложенияПрибыли
	
	ПараметрыПолученияНалогообложенияПрибыли = РаздельныйУчетПоНалогуНаПрибыль.НовыйПараметрыПолученияТаблицыНастроекНалогообложенияПрибыли();
	ПараметрыПолученияНалогообложенияПрибыли.ИмяТаблицы = "ВТПолученияНалогообложенияПрибыли";
	ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_Период = "Период";
	ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_Организация = "Организация";
	ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_Подразделение = "Подразделение";
	ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_НаправлениеДеятельности = "НаправлениеДеятельности";
	ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_ОбъектУчета = "Номенклатура";
	ТекстыЗапроса.Добавить(РаздельныйУчетПоНалогуНаПрибыль.ТекстЗапроса_НастройкиНалогообложенияПрибыли(ПараметрыПолученияНалогообложенияПрибыли));
	ТекстыЗапроса.Добавить("УНИЧТОЖИТЬ ВТПолученияНалогообложенияПрибыли");

	#КонецОбласти
	
	ТекстыЗапроса.Добавить("");
	
	//-- Локализация
	
	Возврат СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецФункции

#КонецОбласти

//++ Локализация
#Область Фискализация

// Возвращает таблицу товаров для заполнения позиций строк в параметрах чека
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ для получения товарных позиций
// Возвращаемое значение:
// 	ТаблицаЗначений - Таблицу с товарными позициями с количественными и суммовыми показателями
Функция ПозицииНоменклатурыПоДокументу(ДокументСсылка) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка      КАК Ссылка,
	|	ДанныеДокументов.Валюта      КАК Валюта,
	|	ДанныеДокументов.Организация КАК Организация
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ОтчетДавальцуМеждуОрганизациями КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка = &Ссылка
	|;";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Выполнить();
	
	ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	ПараметрыЗаполнения.ПересчитыватьВВалютуРегл = Истина;
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров.НомерСтроки,
	|	ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров.Номенклатура,
	|	ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров.Характеристика,
	|	ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров.Упаковка,
	|	ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров.КоличествоУпаковок КАК Количество,
	|	(ВЫРАЗИТЬ((ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров.СуммаБезНДС + ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров.СуммаНДС) /
	|		ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров.КоличествоУпаковок КАК ЧИСЛО(31,2))) КАК Цена,
	|	ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров.СуммаБезНДС + ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров.СуммаНДС КАК Сумма,
	|	ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров КАК ОтчетДавальцуМеждуОрганизациямиТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Количество             КАК Количество,
	|	ТаблицаНоменклатуры.Сумма                  КАК Сумма,
	|	ТаблицаНоменклатуры.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаНоменклатуры.СуммаНДС               КАК СуммаНДС,
	|	ТаблицаНоменклатуры.Цена                   КАК Цена,
	|	
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаНоменклатуры.Номенклатура) = ТИП(Строка) ТОГДА
	|			ТаблицаНоменклатуры.Номенклатура
	|		ИНАЧЕ
	|			ТаблицаНоменклатуры.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК НоменклатураНаименование,
	|	ЕСТЬNULL(ТаблицаНоменклатуры.Характеристика.НаименованиеПолное, """") КАК ХарактеристикаНаименование,
	|	ТаблицаНоменклатуры.Упаковка               КАК Упаковка,
	|	ТаблицаНоменклатуры.Упаковка               КАК УпаковкаНаименование
	|
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНоменклатуры.НомерСтроки
	|";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти
//-- Локализация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений из Строка - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыОтражения.Период        КАК Период,
	|	ПериодыОтражения.Организация   КАК Организация,
	|	ПериодыОтражения.ДатаОтражения КАК ДатаОтражения
	|ИЗ
	|	(ВЫБРАТЬ
	|		&Период                      КАК Период,
	|		&Организация                 КАК Организация,
	|		НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&Период                                                        КАК Период,
	|		&Организация                                                   КАК Организация,
	|		НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения, ДЕНЬ) КАК ДатаОтражения
	|	ИЗ
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|	ГДЕ
	|		НДССостояниеРеализации0.ДокументРеализации = &Ссылка
	|		И НДССостояниеРеализации0.Состояние В (
	|			ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0),
	|			ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&Период                      КАК Период,
	|		&Давалец                     КАК Организация,
	|		НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|	) КАК ПериодыОтражения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|" + ДоходыИРасходыСервер.ДополнитьТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Ложь);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- Локализация

#КонецОбласти

//++ Локализация

#Область ФрагментыПроводокРеглУчета

Функция ТекстВыпускУслугПереработки()
	
	Возврат "
	|ВЫБРАТЬ // Выпуск услуг переработки (Дт 20 :: Кт 20)
	|	Стоимости.Ссылка КАК Ссылка,
	|	Стоимости.Период КАК Период,
	|	Стоимости.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Стоимости.СуммаБалансовая КАК Сумма,
	|	Стоимости.СуммаБалансоваяУУ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	Стоимости.КорГруппаПродукции КАК АналитикаУчетаДт,
	|	Стоимости.КорПодразделениеАналитики КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Стоимости.КорПодразделениеАналитики КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)  КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА Стоимости.КорТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	КОНЕЦ КАК СубконтоДт2,
	|	Стоимости.КорГруппаПродукции КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Стоимости.СуммаНУ КАК СуммаНУДт,
	|	Стоимости.СуммаПР КАК СуммаПРДт,
	|	Стоимости.СуммаВР КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	Стоимости.ГруппаПродукции КАК АналитикаУчетаКт,
	|	Стоимости.ПодразделениеАналитики КАК МестоУчетаКт,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Стоимости.ПодразделениеАналитики КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА Стоимости.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	КОНЕЦ КАК СубконтоКт2,
	|	Стоимости.ГруппаПродукции КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Стоимости.СуммаНУ КАК СуммаНУКт,
	|	Стоимости.СуммаПР КАК СуммаПРКт,
	|	Стоимости.СуммаВР КАК СуммаВРКт,
	|	""Выпуск услуг переработки"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетДавальцуМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Стоимости.Ссылка = Операция.Ссылка
	|		И Стоимости.Организация = Операция.Организация
	|		И Стоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Стоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|		И Стоимости.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК КорСтоимости
	|	ПО
	|		Стоимости.Ссылка = КорСтоимости.Ссылка
	|		И Стоимости.Организация = КорСтоимости.Организация
	|		И Стоимости.ИдентификаторФинЗаписи = КорСтоимости.ИдентификаторФинЗаписи
	|		И Стоимости.НастройкаХозяйственнойОперации = КорСтоимости.НастройкаХозяйственнойОперации
	|		И КорСтоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И КорСтоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	
	|ГДЕ
	|	(НЕ Стоимости.НаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		ИЛИ НЕ Стоимости.ГруппаПродукции = Стоимости.КорГруппаПродукции
	|		ИЛИ НЕ Стоимости.ПодразделениеАналитики = Стоимости.КорПодразделениеАналитики)
	|";
	
КонецФункции

Функция ТекстСебестоимостьПродаж()
	
	Возврат "
	|ВЫБРАТЬ // Себестоимость продаж (Дт 90.02 :: Кт 20)
	|
	|	Строки.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Стоимости.СуммаБалансовая КАК Сумма,
	|	Стоимости.СуммаБалансоваяУУ КАК СуммаУУ,
	|
	|	ВыручкаИСебестоимость.ВидСчетаСебестоимости КАК ВидСчетаДт,
	|	ВыручкаИСебестоимость.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ВыручкаИСебестоимость.Подразделение КАК ПодразделениеДт,
	|	ВыручкаИСебестоимость.НДСебестоимости КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ВыручкаИСебестоимость.Номенклатура КАК СубконтоДт1,
	|	ЕСТЬNULL(ТаблицаНалогообложенияПрибыли.ВариантНалогообложенияПрибыли, НЕОПРЕДЕЛЕНО) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	Стоимости.СуммаНУ КАК СуммаНУДт,
	|	Стоимости.СуммаПР КАК СуммаПРДт,
	|	Стоимости.СуммаВР КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	Строки.ГруппаПродукции КАК АналитикаУчетаКт,
	|	Строки.ПодразделениеАналитики КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.ПодразделениеАналитики КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Строки.ГруппаПродукции КАК СубконтоКт2,
	|	Строки.ТипЗатрат КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Стоимости.СуммаНУ КАК СуммаНУКт,
	|	Стоимости.СуммаПР КАК СуммаПРКт,
	|	Стоимости.СуммаВР КАК СуммаВРКт,
	|	""Себестоимость продаж"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетДавальцуМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.Организация = Операция.Организация
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		И Строки.СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Организация = Стоимости.Организация
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|	ПО Строки.Ссылка = ВыручкаИСебестоимость.Ссылка
	|		И Строки.Организация = ВыручкаИСебестоимость.Организация
	|		И Строки.ИдентификаторФинЗаписи = ВыручкаИСебестоимость.ИдентификаторФинЗаписи
	|		И Строки.НастройкаХозяйственнойОперации = ВыручкаИСебестоимость.НастройкаХозОперации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РаздельныйУчет_НастройкиНалогообложенияПрибыли КАК ТаблицаНалогообложенияПрибыли
	|	ПО 
	|		ТаблицаНалогообложенияПрибыли.Период = Строки.Период
	|		И ТаблицаНалогообложенияПрибыли.Организация = Строки.Организация
	|		И ТаблицаНалогообложенияПрибыли.Подразделение = ВыручкаИСебестоимость.Подразделение
	|		И ТаблицаНалогообложенияПрибыли.ОбъектУчета = Строки.Номенклатура
	|		И ТаблицаНалогообложенияПрибыли.НаправлениеДеятельности = ВыручкаИСебестоимость.НДСебестоимости
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
	|";
	
КонецФункции

Функция ТекстСписаниеТоваровНаРасходы()
	
	ТекстЗапроса = ПроизводствоБезЗаказаЛокализация.ТекстСписаниеТоваровНаРасходы(Истина, Истина, Истина);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоУмолчанию", "Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)");
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстСписаниеТоваровНаСтатьиАктивовПассивов()
	
	ТекстЗапроса = ПроизводствоБезЗаказаЛокализация.ТекстСписаниеТоваровНаСтатьиАктивовПассивов(Истина, Истина);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоУмолчанию", "Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)");

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстРеализацияУслугПереработки()
	
	Возврат "
	|ВЫБРАТЬ // Реализация услуг переработки (Дт 62 :: Кт 90.01, 91.01)
	|
	|	Расчеты.Ссылка КАК Ссылка,
	|	Расчеты.Период КАК Период,
	|	Расчеты.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВыручкаИСебестоимость.СуммаРегл КАК Сумма,
	|	ВыручкаИСебестоимость.СуммаУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	ВыручкаИСебестоимость.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаНалогообложенияПрибыли.Организация ЕСТЬ NULL
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаРаздельныйНУ)
	|		ИНАЧЕ ВыручкаИСебестоимость.ВидСчетаВыручки
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ВыручкаИСебестоимость.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	ВыручкаИСебестоимость.Подразделение КАК ПодразделениеКт,
	|	ВыручкаИСебестоимость.НДВыручки КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	ВыручкаИСебестоимость.Номенклатура КАК СубконтоКт1,
	|	Суммы.СтавкаНДС.ПеречислениеСтавкаНДС КАК СубконтоКт2,
	|	ЕСТЬNULL(ТаблицаНалогообложенияПрибыли.ВариантНалогообложенияПрибыли, ВыручкаИСебестоимость.Номенклатура) КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	ВыручкаИСебестоимость.Количество КАК КоличествоКт,
	|	ВыручкаИСебестоимость.СуммаБезНДСРегл КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Реализация услуг переработки"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетДавальцуМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РасчетыСКлиентамиНоваяАрхитектура КАК Расчеты
	|	ПО 
	|		ДокументыКОтражению.Ссылка = Расчеты.Ссылка
	|		И Расчеты.Организация = Операция.Организация
	|		И Расчеты.НастройкаХозОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка)
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВТВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|	ПО 
	|		Расчеты.Ссылка = ВыручкаИСебестоимость.Ссылка
	|		И Расчеты.ОбъектРасчетов = ВыручкаИСебестоимость.ИсточникГФУРасчетов
	|		И ВыручкаИСебестоимость.НастройкаХозОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтчетДавальцуМеждуОрганизациями)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО 
	|		Суммы.Регистратор = ВыручкаИСебестоимость.Ссылка
	|		И Суммы.ИдентификаторСтроки = ВыручкаИСебестоимость.ИдентификаторФинЗаписи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РаздельныйУчет_НастройкиНалогообложенияПрибыли КАК ТаблицаНалогообложенияПрибыли
	|	ПО 
	|		ТаблицаНалогообложенияПрибыли.Период = Расчеты.Период
	|		И ТаблицаНалогообложенияПрибыли.Организация = Расчеты.Организация
	|		И ТаблицаНалогообложенияПрибыли.Подразделение = ВыручкаИСебестоимость.Подразделение
	|		И ТаблицаНалогообложенияПрибыли.ОбъектУчета = ВыручкаИСебестоимость.Номенклатура
	|		И ТаблицаНалогообложенияПрибыли.НаправлениеДеятельности = ВыручкаИСебестоимость.НДВыручки
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
	|";
	
КонецФункции

Функция ТекстНачислениеНДСЗаУслуги()
	
	ТекстНачислениеНДСЗаУслуги = "
	|ВЫБРАТЬ // Начисление НДС (Дт <90.3, 91.2> :: Кт <68.2>)
	|
	|	ВыручкаИСебестоимость.Ссылка КАК Ссылка,
	|	ВыручкаИСебестоимость.Период КАК Период,
	|	ВыручкаИСебестоимость.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Суммы.СуммаНДСРегл КАК Сумма,
	|	Суммы.СуммаНДСУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродаже) КАК ВидСчетаДт,
	|	ВыручкаИСебестоимость.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	ВыручкаИСебестоимость.Подразделение КАК ПодразделениеДт,
	|	ВыручкаИСебестоимость.НДВыручки КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	ВыручкаИСебестоимость.Номенклатура КАК СубконтоДт1,
	|	Суммы.СтавкаНДС.ПеречислениеСтавкаНДС КАК СубконтоДт2,
	|	ЕСТЬNULL(ТаблицаНалогообложенияПрибыли.ВариантНалогообложенияПрибыли, НЕОПРЕДЕЛЕНО) КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	ВыручкаИСебестоимость.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Суммы.СуммаНДСРегл КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДС"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетДавальцуМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|	ПО ДокументыКОтражению.Ссылка = ВыручкаИСебестоимость.Ссылка
	|		И ВыручкаИСебестоимость.НастройкаХозОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтчетДавальцуМеждуОрганизациями)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО Суммы.Регистратор = ВыручкаИСебестоимость.Ссылка
	|		И Суммы.ИдентификаторСтроки = ВыручкаИСебестоимость.ИдентификаторФинЗаписи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РаздельныйУчет_НастройкиНалогообложенияПрибыли КАК ТаблицаНалогообложенияПрибыли
	|	ПО 
	|		ТаблицаНалогообложенияПрибыли.Период = ВыручкаИСебестоимость.Период
	|		И ТаблицаНалогообложенияПрибыли.Организация = ВыручкаИСебестоимость.Организация
	|		И ТаблицаНалогообложенияПрибыли.Подразделение = ВыручкаИСебестоимость.Подразделение
	|		И ТаблицаНалогообложенияПрибыли.ОбъектУчета = ВыручкаИСебестоимость.Номенклатура
	|		И ТаблицаНалогообложенияПрибыли.НаправлениеДеятельности = ВыручкаИСебестоимость.НДВыручки
	|
	|ГДЕ
	|	Суммы.СуммаНДСРегл <> 0
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)";
	
	Возврат ТекстНачислениеНДСЗаУслуги;
	
КонецФункции

Функция ТекстСписаниеНаПартииПроизводства()
	
	Возврат "
	|ВЫБРАТЬ //// Списание на партии производства (Дт 20 :: Кт 20)
	|
	|	Стоимости.Ссылка КАК Ссылка,
	|	Стоимости.Период КАК Период,
	|	Стоимости.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Стоимости.СуммаБалансовая КАК Сумма,
	|	Стоимости.СуммаБалансоваяУУ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	Стоимости.ГруппаПродукции КАК АналитикаУчетаДт,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Стоимости.Склад) = ТИП(Справочник.ДоговорыКонтрагентов)
	|		ТОГДА Стоимости.Склад.Партнер
	|		ИНАЧЕ Стоимости.ПодразделениеАналитики
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Стоимости.ПодразделениеАналитики КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Стоимости.ГруппаПродукции КАК СубконтоДт1,
	|	Стоимости.Номенклатура КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА Стоимости.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	КорСтоимости.ГруппаПродукции КАК АналитикаУчетаКт,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(КорСтоимости.Склад) = ТИП(Справочник.ДоговорыКонтрагентов)
	|		ТОГДА КорСтоимости.Склад.Партнер
	|		ИНАЧЕ КорСтоимости.ПодразделениеАналитики
	|	КОНЕЦ КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	КорСтоимости.ПодразделениеАналитики КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	КорСтоимости.ГруппаПродукции КАК СубконтоКт1,
	|	КорСтоимости.Номенклатура КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА КорСтоимости.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	КОНЕЦ		КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание на партии производства"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетДавальцуМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Стоимости.Ссылка = Операция.Ссылка
	|		И Стоимости.Организация = Операция.Давалец
	|		И Стоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Стоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|		И Стоимости.НастройкаХозяйственнойОперации <> ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВключениеНДСВСтоимость)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК КорСтоимости
	|	ПО
	|		Стоимости.Ссылка = КорСтоимости.Ссылка
	|		И Стоимости.Организация = КорСтоимости.Организация
	|		И Стоимости.ИдентификаторФинЗаписи = КорСтоимости.ИдентификаторФинЗаписи
	|		И Стоимости.НастройкаХозяйственнойОперации = КорСтоимости.НастройкаХозяйственнойОперации
	|		И КорСтоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И КорСтоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	
	|ГДЕ
	|	(НЕ Стоимости.НаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		ИЛИ НЕ Стоимости.ГруппаПродукции = Стоимости.КорГруппаПродукции
	|		ИЛИ НЕ Стоимости.ПодразделениеАналитики = Стоимости.КорПодразделениеАналитики)
	|";
	
КонецФункции

Функция ТекстПриобретениеРабот()
	
	Возврат "
	|ВЫБРАТЬ //// Приобретение работ (Дт 20 :: Кт 60)
	|
	|	Строки.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаБалансовая КАК Сумма,
	|	Строки.СуммаБалансоваяУУ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	Строки.ГруппаПродукции КАК АналитикаУчетаДт,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.Склад) = ТИП(Справочник.ДоговорыКонтрагентов)
	|		ТОГДА Строки.Склад.Партнер
	|		ИНАЧЕ Строки.ПодразделениеАналитики
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.ПодразделениеАналитики КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ГруппаПродукции КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА Строки.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Расчеты.Валюта КАК ВалютаКт,
	|	Расчеты.Подразделение КАК ПодразделениеКт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Расчеты.Контрагент КАК СубконтоКт1,
	|	Расчеты.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО		КАК СубконтоКт3,
	|
	|	ВЫБОР
	|		КОГДА Суммы.Валюта = Суммы.ВалютаВзаиморасчетов
	|		ТОГДА Суммы.СуммаБезНДС
	|		ИНАЧЕ Суммы.СуммаВзаиморасчетов - Суммы.СуммаНДСВзаиморасчетов
	|	КОНЕЦ КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Приобретение работ"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетДавальцуМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.Организация = Операция.Давалец
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.НастройкаХозяйственнойОперации <> ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВключениеНДСВСтоимость)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО
	|		Строки.Ссылка = Расчеты.Ссылка
	|";
	
КонецФункции

Функция ТекстЗакупкаНДС() // НДС при приобретении (Дт 19 :: Кт 60)
	
	Возврат "
	|ВЫБРАТЬ //// НДС при приобретении по рег. НДСПредъявленный (Дт 19 :: Кт 60) @НДСПредъявленный
	|
	|	НДСПредъявленный.Регистратор КАК Ссылка,
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	НДСПредъявленный.НДС КАК Сумма,
	|	НДСПредъявленный.НДСУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаДт,
	|	НДСПредъявленный.ВидДеятельностиНДС КАК АналитикаУчетаДт,
	|	НДСПредъявленный.ВидЦенности КАК МестоУчетаДт,
	|
	|	&ВалютаРеглУчета КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
	|	ЕСТЬNULL(ВводСобственныхСредств.НаправлениеДеятельности, НДСПредъявленный.НаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НДСПредъявленный.Поставщик	КАК СубконтоДт1,
	|	НДСПредъявленный.СчетФактура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	НДСПредъявленный.НДС КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Расчеты.Валюта КАК ВалютаКт,
	|	Расчеты.Подразделение КАК ПодразделениеКт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	Расчеты.Контрагент КАК СубконтоКт1,
	|	Расчеты.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ВЫБОР
	|		КОГДА Суммы.Валюта = Суммы.ВалютаВзаиморасчетов
	|		ТОГДА Суммы.СуммаНДС
	|		ИНАЧЕ Суммы.СуммаНДСВзаиморасчетов
	|	КОНЕЦ КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""НДС при приобретении"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетДавальцуМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		НДСПредъявленный.Регистратор = ДокументыКОтражению.Ссылка
	|		И НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И НДСПредъявленный.Активность И НЕ НДСПредъявленный.Сторно
	|		И НЕ НДСПредъявленный.РегламентнаяОперация
	|		И НЕ НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		НДСПредъявленный.Регистратор = Суммы.Регистратор
	|		И НДСПредъявленный.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО 
	|		ДокументыКОтражению.Ссылка = Расчеты.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТВводСобственныхСредств КАК ВводСобственныхСредств
	|	ПО ДокументыКОтражению.Ссылка = ВводСобственныхСредств.Ссылка
	|		И НДСПредъявленный.СчетФактура = ВводСобственныхСредств.СчетФактура
	|		И НДСПредъявленный.НаправлениеДеятельности = ВводСобственныхСредств.ИсходноеНаправлениеДеятельности
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
	|";
	
КонецФункции

#КонецОбласти

//-- Локализация

#КонецОбласти
