////////////////////////////////////////////////////////////////////////////////
// Подсистема "Расчет имущественных налогов".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает необходимость уплаты авансов по земельному налогу.
//
// Параметры:
// 	Организации - СправочникСсылка.Организации - Организация, для которой необходимо выполнить проверку.
// 	Период - Дата - Дата закрытия месяца.
//
// Возвращаемое значение:
// 	Булево - Признак необходимости уплаты аванса.
//
Функция УплачиваютсяАвансыПоЗемельномуНалогу(Организации, Период) Экспорт

	УплачиваютсяАвансы = Ложь;
	
	// Порядок уплаты авансов по земельному налогу хранится в регистре сведений ПорядокУплатыНалоговНаМестах.

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организации", Организации);
	Запрос.УстановитьПараметр("Период", Период);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.НалоговыйОрган КАК НалоговыйОрган
	|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПараметрыНачисленияЗемельногоНалога.Организация КАК Организация,
	|		ПараметрыНачисленияЗемельногоНалога.НалоговыйОрган КАК НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияЗемельногоНалога.СрезПоследних(
	|				КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, КВАРТАЛ, -1), КВАРТАЛ),
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В (&Организации)
	|					И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|					И ВключатьВНалоговуюБазу) КАК ПараметрыНачисленияЗемельногоНалога
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПараметрыНачисленияЗемельногоНалога.Организация,
	|		ПараметрыНачисленияЗемельногоНалога.НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияЗемельногоНалога.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&Период, КВАРТАЛ),
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В (&Организации)
	|					И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|					И ВключатьВНалоговуюБазу) КАК ПараметрыНачисленияЗемельногоНалога
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПараметрыНачисленияЗемельногоНалога.Организация,
	|		ПараметрыНачисленияЗемельногоНалога.НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ПараметрыНачисленияЗемельногоНалога
	|	ГДЕ
	|		ПараметрыНачисленияЗемельногоНалога.Организация В (&Организации)
	|		И ПараметрыНачисленияЗемельногоНалога.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|		И ПараметрыНачисленияЗемельногоНалога.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ) И КОНЕЦПЕРИОДА(&Период, КВАРТАЛ)
	|		И ПараметрыНачисленияЗемельногоНалога.ВключатьВНалоговуюБазу
	|		И ПараметрыНачисленияЗемельногоНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Организации.Ссылка,
	|		Организации.РегистрацияВНалоговомОргане
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|	ГДЕ
	|		Организации.Ссылка В (&Организации)) КАК ВложенныйЗапрос
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НалоговыйОрган
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.Организация КАК Организация,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.УплачиваютсяАвансы КАК УплачиваютсяАвансы
	|ПОМЕСТИТЬ ВТ_УплачиваютсяАвансыПоОрганизации
	|ИЗ
	|	РегистрСведений.ПорядокУплатыНалоговНаМестах.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И РегистрацияВНалоговомОргане = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|				И Налог = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог)) КАК ПорядокУплатыНалоговНаМестахСрезПоследних
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.Организация КАК Организация,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.УплачиваютсяАвансы КАК УплачиваютсяАвансы
	|ПОМЕСТИТЬ ВТ_УплачиваютсяАвансыПоИФНС
	|ИЗ
	|	РегистрСведений.ПорядокУплатыНалоговНаМестах.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И РегистрацияВНалоговомОргане <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|				И Налог = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог)) КАК ПорядокУплатыНалоговНаМестахСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_УплачиваютсяАвансыПоИФНС.УплачиваютсяАвансы ЕСТЬ NULL
	|				ТОГДА ВЫБОР
	|						КОГДА ВТ_УплачиваютсяАвансыПоОрганизации.УплачиваютсяАвансы ЕСТЬ NULL
	|							ТОГДА ЛОЖЬ
	|						ИНАЧЕ ВТ_УплачиваютсяАвансыПоОрганизации.УплачиваютсяАвансы
	|					КОНЕЦ
	|			ИНАЧЕ ВТ_УплачиваютсяАвансыПоИФНС.УплачиваютсяАвансы
	|		КОНЕЦ), ЛОЖЬ) КАК УплачиваютсяАвансы
	|ИЗ
	|	ВТ_НалоговыеОрганы КАК ВТ_НалоговыеОрганы
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВТ_УплачиваютсяАвансыПоОрганизации КАК ВТ_УплачиваютсяАвансыПоОрганизации
	|		ПО
	|			ВТ_НалоговыеОрганы.Организация = ВТ_УплачиваютсяАвансыПоОрганизации.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВТ_УплачиваютсяАвансыПоИФНС КАК ВТ_УплачиваютсяАвансыПоИФНС
	|		ПО
	|			ВТ_НалоговыеОрганы.Организация = ВТ_УплачиваютсяАвансыПоИФНС.Организация
	|			И ВТ_НалоговыеОрганы.НалоговыйОрган = ВТ_УплачиваютсяАвансыПоИФНС.РегистрацияВНалоговомОргане";

	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда

		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока Выборка.Следующий() Цикл
			УплачиваютсяАвансы = Выборка.УплачиваютсяАвансы;
		КонецЦикла;

	КонецЕсли;

	Возврат УплачиваютсяАвансы;

КонецФункции

// Возвращает необходимость уплаты авансов по транспортному налогу.
//
// Параметры:
// 	Организации - СправочникСсылка.Организации - Организация, для которой необходимо выполнить расчет.
// 	Период - Дата - Дата закрытия месяца.
//
// Возвращаемое значение:
// 	Булево - Признак необходимости уплаты аванса.
//
Функция УплачиваютсяАвансыПоТранспортномуНалогу(Организации, Период) Экспорт

	УплачиваютсяАвансы = Ложь;
	
	// Порядок уплаты авансов по транспортному налогу хранится в регистре сведений ПорядокУплатыНалоговНаМестах
	// и в регистре сведений ПорядокУплатыНалоговПоРегионам.
	
	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Организации", Организации);
	Запрос.УстановитьПараметр("Период", Период);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.НалоговыйОрган КАК НалоговыйОрган,
	|	ВложенныйЗапрос.НалоговыйОрган.КодРегиона КАК КодРегиона
	|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПараметрыНачисленияТранспортногоНалога.Организация КАК Организация,
	|		ПараметрыНачисленияТранспортногоНалога.НалоговыйОрган КАК НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
	|				КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, КВАРТАЛ, -1), КВАРТАЛ),
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В (&Организации)
	|					И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|					И ВключатьВНалоговуюБазу) КАК ПараметрыНачисленияТранспортногоНалога
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПараметрыНачисленияТранспортногоНалога.Организация,
	|		ПараметрыНачисленияТранспортногоНалога.НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&Период, КВАРТАЛ),
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В (&Организации)
	|					И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|					И ВключатьВНалоговуюБазу) КАК ПараметрыНачисленияТранспортногоНалога
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПараметрыНачисленияТранспортногоНалога.Организация,
	|		ПараметрыНачисленияТранспортногоНалога.НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияТранспортногоНалога КАК ПараметрыНачисленияТранспортногоНалога
	|	ГДЕ
	|		ПараметрыНачисленияТранспортногоНалога.Организация В (&Организации)
	|		И ПараметрыНачисленияТранспортногоНалога.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|		И ПараметрыНачисленияТранспортногоНалога.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ) И КОНЕЦПЕРИОДА(&Период, КВАРТАЛ)
	|		И ПараметрыНачисленияТранспортногоНалога.ВключатьВНалоговуюБазу
	|		И ПараметрыНачисленияТранспортногоНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Организации.Ссылка,
	|		Организации.РегистрацияВНалоговомОргане
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|	ГДЕ
	|		Организации.Ссылка В (&Организации)) КАК ВложенныйЗапрос
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	КодРегиона,
	|	НалоговыйОрган
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.Организация КАК Организация,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.УплачиваютсяАвансы КАК УплачиваютсяАвансы
	|ПОМЕСТИТЬ ВТ_УплачиваютсяАвансыПоОрганизации
	|ИЗ
	|	РегистрСведений.ПорядокУплатыНалоговНаМестах.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И РегистрацияВНалоговомОргане = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|				И Налог = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог)) КАК ПорядокУплатыНалоговНаМестахСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АвансыПоИФНС.Организация КАК Организация,
	|	АвансыПоИФНС.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	МАКСИМУМ(АвансыПоИФНС.УплачиваютсяАвансы) КАК УплачиваютсяАвансы
	|ПОМЕСТИТЬ ВТ_УплачиваютсяАвансыПоИФНС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУплатыНалоговНаМестахСрезПоследних.Организация КАК Организация,
	|		ПорядокУплатыНалоговНаМестахСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|		ПорядокУплатыНалоговНаМестахСрезПоследних.УплачиваютсяАвансы КАК УплачиваютсяАвансы
	|	ИЗ
	|		РегистрСведений.ПорядокУплатыНалоговНаМестах.СрезПоследних(
	|				&Период,
	|				Организация В (&Организации)
	|					И РегистрацияВНалоговомОргане <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|					И Налог = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог)) КАК ПорядокУплатыНалоговНаМестахСрезПоследних
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПорядокУплатыНалоговПоРегионам.Организация,
	|		НалоговыеОрганы.НалоговыйОрган,
	|		ПорядокУплатыНалоговПоРегионам.УплачиваютсяАвансы
	|	ИЗ
	|		РегистрСведений.ПорядокУплатыНалоговПоРегионам.СрезПоследних(
	|				&Период,
	|				Организация В (&Организации)
	|					И Налог = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог)) КАК ПорядокУплатыНалоговПоРегионам
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НалоговыеОрганы КАК НалоговыеОрганы
	|			ПО ПорядокУплатыНалоговПоРегионам.Организация = НалоговыеОрганы.Организация
	|				И ПорядокУплатыНалоговПоРегионам.КодРегиона = НалоговыеОрганы.КодРегиона) КАК АвансыПоИФНС
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансыПоИФНС.Организация,
	|	АвансыПоИФНС.РегистрацияВНалоговомОргане
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_УплачиваютсяАвансыПоИФНС.УплачиваютсяАвансы ЕСТЬ NULL
	|				ТОГДА ВЫБОР
	|						КОГДА ВТ_УплачиваютсяАвансыПоОрганизации.УплачиваютсяАвансы ЕСТЬ NULL
	|							ТОГДА ЛОЖЬ
	|						ИНАЧЕ ВТ_УплачиваютсяАвансыПоОрганизации.УплачиваютсяАвансы
	|					КОНЕЦ
	|			ИНАЧЕ ВТ_УплачиваютсяАвансыПоИФНС.УплачиваютсяАвансы
	|		КОНЕЦ), ЛОЖЬ) КАК УплачиваютсяАвансы
	|ИЗ
	|	ВТ_НалоговыеОрганы КАК ВТ_НалоговыеОрганы
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВТ_УплачиваютсяАвансыПоОрганизации КАК ВТ_УплачиваютсяАвансыПоОрганизации
	|		ПО
	|			ВТ_НалоговыеОрганы.Организация = ВТ_УплачиваютсяАвансыПоОрганизации.Организация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УплачиваютсяАвансыПоИФНС КАК ВТ_УплачиваютсяАвансыПоИФНС
	|		ПО
	|			ВТ_НалоговыеОрганы.Организация = ВТ_УплачиваютсяАвансыПоИФНС.Организация
	|			И ВТ_НалоговыеОрганы.НалоговыйОрган = ВТ_УплачиваютсяАвансыПоИФНС.РегистрацияВНалоговомОргане";

	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда

		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока Выборка.Следующий() Цикл
			УплачиваютсяАвансы = Выборка.УплачиваютсяАвансы;
		КонецЦикла;

	КонецЕсли;

	Возврат УплачиваютсяАвансы;

КонецФункции

// Возвращает необходимость уплаты авансов по налогу на имущество.
//
// Параметры:
// 	Организации - СправочникСсылка.Организации - Организация, для которой необходимо выполнить проверку.
// 	Период - Дата - Дата закрытия месяца.
//
// Возвращаемое значение:
// 	Булево - Признак необходимости уплаты аванса.
//
Функция УплачиваютсяАвансыПоНалогуНаИмущество(Организации, Период) Экспорт

	УплачиваютсяАвансы = Ложь;

	// Порядок уплаты авансов по налогу на имущество хранится в регистре сведений ПорядокУплатыНалоговНаМестах и
	// в регистре сведений ПорядокУплатыНалоговПоРегионам.
	
	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Организации", Организации);
	Запрос.УстановитьПараметр("Период", Период);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.НалоговыйОрган КАК НалоговыйОрган,
	|	ВложенныйЗапрос.НалоговыйОрган.КодРегиона КАК КодРегиона
	|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПараметрыНачисленияНалогаНаИмущество.Организация КАК Организация,
	|		ПараметрыНачисленияНалогаНаИмущество.НалоговыйОрган КАК НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияНалогаНаИмущество.СрезПоследних(
	|				КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, ГОД, -1), ГОД),
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В (&Организации)
	|					И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)) КАК ПараметрыНачисленияНалогаНаИмущество
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПараметрыНачисленияНалогаНаИмущество.Организация,
	|		ПараметрыНачисленияНалогаНаИмущество.НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияНалогаНаИмущество.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&Период, КВАРТАЛ),
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В (&Организации)
	|					И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)) КАК ПараметрыНачисленияНалогаНаИмущество
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПараметрыНачисленияНалогаНаИмущество.Организация,
	|		ПараметрыНачисленияНалогаНаИмущество.НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияНалогаНаИмущество КАК ПараметрыНачисленияНалогаНаИмущество
	|	ГДЕ
	|		ПараметрыНачисленияНалогаНаИмущество.Организация В (&Организации)
	|		И ПараметрыНачисленияНалогаНаИмущество.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|		И ПараметрыНачисленияНалогаНаИмущество.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, ГОД) И КОНЕЦПЕРИОДА(&Период, КВАРТАЛ)
	|		И ПараметрыНачисленияНалогаНаИмущество.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Организации.Ссылка,
	|		Организации.РегистрацияВНалоговомОргане
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|	ГДЕ
	|		Организации.Ссылка В (&Организации)) КАК ВложенныйЗапрос
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	КодРегиона,
	|	НалоговыйОрган
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.Организация КАК Организация,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.УплачиваютсяАвансы КАК УплачиваютсяАвансы
	|ПОМЕСТИТЬ ВТ_УплачиваютсяАвансыПоОрганизации
	|ИЗ
	|	РегистрСведений.ПорядокУплатыНалоговНаМестах.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И РегистрацияВНалоговомОргане = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|				И Налог = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество)) КАК ПорядокУплатыНалоговНаМестахСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АвансыПоИФНС.Организация КАК Организация,
	|	АвансыПоИФНС.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	МАКСИМУМ(АвансыПоИФНС.УплачиваютсяАвансы) КАК УплачиваютсяАвансы
	|ПОМЕСТИТЬ ВТ_УплачиваютсяАвансыПоИФНС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУплатыНалоговНаМестахСрезПоследних.Организация КАК Организация,
	|		ПорядокУплатыНалоговНаМестахСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|		ПорядокУплатыНалоговНаМестахСрезПоследних.УплачиваютсяАвансы КАК УплачиваютсяАвансы
	|	ИЗ
	|		РегистрСведений.ПорядокУплатыНалоговНаМестах.СрезПоследних(
	|				&Период,
	|				Организация В (&Организации)
	|					И РегистрацияВНалоговомОргане <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|					И Налог = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество)) КАК ПорядокУплатыНалоговНаМестахСрезПоследних
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПорядокУплатыНалоговПоРегионам.Организация,
	|		НалоговыеОрганы.НалоговыйОрган,
	|		ПорядокУплатыНалоговПоРегионам.УплачиваютсяАвансы
	|	ИЗ
	|		РегистрСведений.ПорядокУплатыНалоговПоРегионам.СрезПоследних(
	|				&Период,
	|				Организация В (&Организации)
	|					И Налог = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество)) КАК ПорядокУплатыНалоговПоРегионам
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НалоговыеОрганы КАК НалоговыеОрганы
	|			ПО ПорядокУплатыНалоговПоРегионам.Организация = НалоговыеОрганы.Организация
	|				И ПорядокУплатыНалоговПоРегионам.КодРегиона = НалоговыеОрганы.КодРегиона) КАК АвансыПоИФНС
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансыПоИФНС.Организация,
	|	АвансыПоИФНС.РегистрацияВНалоговомОргане
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_УплачиваютсяАвансыПоИФНС.УплачиваютсяАвансы ЕСТЬ NULL
	|				ТОГДА ВЫБОР
	|						КОГДА ВТ_УплачиваютсяАвансыПоОрганизации.УплачиваютсяАвансы ЕСТЬ NULL
	|							ТОГДА ЛОЖЬ
	|						ИНАЧЕ ВТ_УплачиваютсяАвансыПоОрганизации.УплачиваютсяАвансы
	|					КОНЕЦ
	|			ИНАЧЕ ВТ_УплачиваютсяАвансыПоИФНС.УплачиваютсяАвансы
	|		КОНЕЦ), ЛОЖЬ) КАК УплачиваютсяАвансы
	|ИЗ
	|	ВТ_НалоговыеОрганы КАК ВТ_НалоговыеОрганы
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВТ_УплачиваютсяАвансыПоОрганизации КАК ВТ_УплачиваютсяАвансыПоОрганизации
	|		ПО
	|			ВТ_НалоговыеОрганы.Организация = ВТ_УплачиваютсяАвансыПоОрганизации.Организация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВТ_УплачиваютсяАвансыПоИФНС КАК ВТ_УплачиваютсяАвансыПоИФНС
	|		ПО
	|			ВТ_НалоговыеОрганы.Организация = ВТ_УплачиваютсяАвансыПоИФНС.Организация
	|			И ВТ_НалоговыеОрганы.НалоговыйОрган = ВТ_УплачиваютсяАвансыПоИФНС.РегистрацияВНалоговомОргане";

	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда

		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока Выборка.Следующий() Цикл
			УплачиваютсяАвансы = Выборка.УплачиваютсяАвансы;
		КонецЦикла;

	КонецЕсли;

	Возврат УплачиваютсяАвансы;

КонецФункции

#Область ОбработчикиЭтаповЗакрытияМесяца

#Область РасчетНалогаНаИмущество

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_РасчетНалогаНаИмущество(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.РасчетНалогаНаИмущество,,,,
		Перечисления.ОперацииЗакрытияМесяца.ПогашениеСтоимостиТМЦВЭксплуатации);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ПереходНаУчетВнеоборотныхАктивовВерсии24);
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Рассчитать';
										|en = 'Calculate'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"РасчетИмущественныхНалоговУП.Использование_РасчетНалогаНаИмущество");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"РасчетИмущественныхНалоговУП.Выполнить_РасчетНалогаНаИмущество");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаЛокализация.ОписаниеДействия_ОткрытьСписокДокументовРегламентнаяОперация();
	НоваяСтрока.ТипыРегламентныхОпераций.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество);
КонецПроцедуры

// Опредяет статус операции закрытия месяца "РасчетНалогаНаИмущество".
// 
// Параметры:
//  ПараметрыОбработчика - Структура - Параметры обработчика
Процедура Использование_РасчетНалогаНаИмущество(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.ПроверитьИспользованиеРегламентированногоУчета(ПараметрыОбработчика);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций.Количество());
	
	УплачиваютсяАвансы = УплачиваютсяАвансыПоНалогуНаИмущество(
		ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций,
		ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
		
	МесяцРасчета = Месяц(ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
	НеобходимРасчетНалога = (МесяцРасчета = 12) ИЛИ (МесяцРасчета % 3 = 0 И УплачиваютсяАвансы);
	
	Если НЕ НеобходимРасчетНалога Тогда
		
		Если МесяцРасчета % 3 = 0 Тогда
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
				ПараметрыОбработчика,
				НСтр("ru = 'Авансы по налогу на имущество не уплачиваются.';
					|en = 'Property tax advances are not paid.'", ОбщегоНазначения.КодОсновногоЯзыка()));
					
		Иначе
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
				ПараметрыОбработчика,
				НСтр("ru = 'Налог на имущество рассчитывается в последнем месяце квартала.';
					|en = 'Property tax is calculated in the last month of the quarter. '", ОбщегоНазначения.КодОсновногоЯзыка()));
			
		КонецЕсли;
		
		Возврат;		
		
	КонецЕсли;
	
	Если ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика,Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.ПроверитьНаличиеДокументаРегламентнаяОперация(ПараметрыОбработчика);
	
КонецПроцедуры

// Выполняет операцию закрытия месяца "РасчетНалогаНаИмущество".
// 
// Параметры:
//  ПараметрыОбработчика - см. Обработки.ОперацииЗакрытияМесяца.ИнициализироватьПараметрыОбработчикаЭтапа
Процедура Выполнить_РасчетНалогаНаИмущество(ПараметрыОбработчика) Экспорт
	
	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;

	Если НЕ ВнеоборотныеАктивы.ЗавершенПереходНаВНА24(ПараметрыРасчета.Период, ПараметрыРасчета.МассивОрганизаций) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаЛокализация.РасчетРегламентныхОперацийНачинаяСПервогоЗадания(ПараметрыОбработчика, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область РасчетТранспортногоНалога

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_РасчетТранспортногоНалога(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.РасчетТранспортногоНалога,,,,
		Перечисления.ОперацииЗакрытияМесяца.РасчетНалогаНаИмущество);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ПереходНаУчетВнеоборотныхАктивовВерсии24);
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Рассчитать';
										|en = 'Calculate'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"РасчетИмущественныхНалоговУП.Использование_РасчетТранспортногоНалога");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"РасчетИмущественныхНалоговУП.Выполнить_РасчетТранспортногоНалога");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаЛокализация.ОписаниеДействия_ОткрытьСписокДокументовРегламентнаяОперация();
	НоваяСтрока.ТипыРегламентныхОпераций.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетТранспортногоНалога);
КонецПроцедуры

// Опредяет статус операции "РасчетТранспортногоНалога".
// 
// Параметры:
//  ПараметрыОбработчика - Структура - Параметры обработчика
Процедура Использование_РасчетТранспортногоНалога(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.ПроверитьИспользованиеРегламентированногоУчета(ПараметрыОбработчика);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций.Количество());
	
	УплачиваютсяАвансы = УплачиваютсяАвансыПоТранспортномуНалогу(
		ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций,
		ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
	
	МесяцРасчета = Месяц(ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
	НеобходимРасчетНалога = (МесяцРасчета = 12) ИЛИ (МесяцРасчета % 3 = 0 И УплачиваютсяАвансы);
	
	Если НЕ НеобходимРасчетНалога Тогда
		
		Если МесяцРасчета % 3 = 0 Тогда
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
				ПараметрыОбработчика,
				НСтр("ru = 'Авансы по транспортному налогу не уплачиваются.';
					|en = 'Vehicle tax advances are not paid.'", ОбщегоНазначения.КодОсновногоЯзыка()));
					
		Иначе
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
				ПараметрыОбработчика,
				НСтр("ru = 'Транспортный налог рассчитывается в последнем месяце квартала.';
					|en = 'Vehicle tax is calculated in the last month of the quarter. '", ОбщегоНазначения.КодОсновногоЯзыка()));
			
		КонецЕсли;
		
		Возврат;		
		
	КонецЕсли;
	
	Если ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.ПроверитьНаличиеДокументаРегламентнаяОперация(ПараметрыОбработчика);
	
КонецПроцедуры

// Выполняет операцию "РасчетТранспортногоНалога".
// 
// Параметры:
//  ПараметрыОбработчика - Структура - Параметры обработчика
Процедура Выполнить_РасчетТранспортногоНалога(ПараметрыОбработчика) Экспорт
	
	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;

	Если НЕ ВнеоборотныеАктивы.ЗавершенПереходНаВНА24(ПараметрыРасчета.Период, ПараметрыРасчета.МассивОрганизаций) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаЛокализация.РасчетРегламентныхОперацийНачинаяСПервогоЗадания(ПараметрыОбработчика, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область РасчетЗемельногоНалога

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_РасчетЗемельногоНалога(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.РасчетЗемельногоНалога,,,,
		Перечисления.ОперацииЗакрытияМесяца.РасчетТранспортногоНалога);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ПереходНаУчетВнеоборотныхАктивовВерсии24);
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Рассчитать';
										|en = 'Calculate'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"РасчетИмущественныхНалоговУП.Использование_РасчетЗемельногоНалога");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"РасчетИмущественныхНалоговУП.Выполнить_РасчетЗемельногоНалога");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаЛокализация.ОписаниеДействия_ОткрытьСписокДокументовРегламентнаяОперация();
	НоваяСтрока.ТипыРегламентныхОпераций.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетЗемельногоНалога);
КонецПроцедуры

// Опредяет статус операции "РасчетЗемельногоНалога".
// 
// Параметры:
//  ПараметрыОбработчика - Структура - Параметры обработчика
Процедура Использование_РасчетЗемельногоНалога(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.ПроверитьИспользованиеРегламентированногоУчета(ПараметрыОбработчика);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций.Количество());
	
	УплачиваютсяАвансы = УплачиваютсяАвансыПоЗемельномуНалогу(
		ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций,
		ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
	
	МесяцРасчета = Месяц(ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
	НеобходимРасчетНалога = (МесяцРасчета = 12) ИЛИ (МесяцРасчета % 3 = 0 И УплачиваютсяАвансы);
	
	Если НЕ НеобходимРасчетНалога Тогда
		
		Если МесяцРасчета % 3 = 0 Тогда
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
				ПараметрыОбработчика,
				НСтр("ru = 'Авансы по земельному налогу не уплачиваются.';
					|en = 'Land value tax advances are not paid.'", ОбщегоНазначения.КодОсновногоЯзыка()));
					
		Иначе
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
				ПараметрыОбработчика,
				НСтр("ru = 'Земельный налог рассчитывается в последнем месяце квартала.';
					|en = 'Land value tax is calculated in the last month of the quarter.'", ОбщегоНазначения.КодОсновногоЯзыка()));
			
		КонецЕсли;
		
		Возврат;		
		
	КонецЕсли;
	
	Если ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика,Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.ПроверитьНаличиеДокументаРегламентнаяОперация(ПараметрыОбработчика);
	
КонецПроцедуры

// Выполняет операцию "РасчетЗемельногоНалога".
// 
// Параметры:
//  ПараметрыОбработчика - Структура - Параметры обработчика
Процедура Выполнить_РасчетЗемельногоНалога(ПараметрыОбработчика) Экспорт
	
	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;

	Если НЕ ВнеоборотныеАктивы.ЗавершенПереходНаВНА24(ПараметрыРасчета.Период, ПараметрыРасчета.МассивОрганизаций) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаЛокализация.РасчетРегламентныхОперацийНачинаяСПервогоЗадания(ПараметрыОбработчика, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ДоначислениеНалогаНаИмущество

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_ДоначислениеНалогаНаИмущество(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ДоначислениеНалогаНаИмущество,,,,
		Перечисления.ОперацииЗакрытияМесяца.АктуализацияДвиженийПоВнеоборотнымАктивам);
		
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Выполнить';
										|en = 'Run'");
	
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"РасчетИмущественныхНалоговУП.Использование_ДоначислениеНалогаНаИмущество");
		
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"РасчетИмущественныхНалоговУП.Выполнить_ДоначислениеНалогаНаИмущество");
		
КонецПроцедуры

// Опредяет статус операции "ДоначислениеНалогаНаИмущество".
// 
// Параметры:
//  ПараметрыОбработчика - Структура - Параметры обработчика
Процедура Использование_ДоначислениеНалогаНаИмущество(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, 1);
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ПараметрыОбработчика.ПараметрыРасчета.Период) Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеОтключено(
			ПараметрыОбработчика,
			НСтр("ru = 'Учет внеоборотных активов версии 2.4 не используется.';
				|en = 'Accounting of fixed assets 2.4 is not used.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
		Возврат;
		
	КонецЕсли;
	
	Если ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика, Истина,, "ЗаданияКДоначислениюНалогаНаИмущество") Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(ПараметрыОбработчика);
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, 1);
		
КонецПроцедуры

// Выполняет операцию "Доначисление налога на имущество".
// 
// Параметры:
//  ПараметрыОбработчика - Структура - Параметры обработчика
Процедура Выполнить_ДоначислениеНалогаНаИмущество(ПараметрыОбработчика) Экспорт
	
	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;

	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(КонецМесяца(ПараметрыРасчета.Период)) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ЗакрытиеМесяца.ДоначислениеНалогаНаИмущество");
	
	НомерДоРасчета = РегистрыСведений.ЗаданияКДоначислениюНалогаНаИмущество.УвеличитьНомерЗадания();
	
	ДоступныеОрганизации = ЗакрытиеМесяцаСервер.ДоступныеДляРасчетаОрганизации(
		ПараметрыРасчета.Период, ПараметрыРасчета.МассивОрганизаций);
	
	ЗаданияКРасчету = РегистрыСведений.ЗаданияКДоначислениюНалогаНаИмущество.ЗаданияКРасчету(
			'000101010000', ПараметрыРасчета.Период, НомерДоРасчета, ДоступныеОрганизации);
	
	Результат = ДоначислитьНалогНаИмущество(
		ПараметрыРасчета.Период, 
		ЗаданияКРасчету.СписокОрганизаций, 
		НомерДоРасчета,
		ЗаданияКРасчету.МенеджерВременныхТаблиц);

	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, Результат.КоличествоДанных);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НалогНаИмущество

// Использовать прежний расчет налога на имущество в переходный период.
//
// Параметры:
//  Организация - СправочникСсылка.Организации
//  ПериодРасчета - Дата - Период расчета
//
// Возвращаемое значение:
//  Булево - Использовать прежний расчет налога на имущество в переходный период
Функция ИспользоватьПрежнийРасчетНалогаНаИмуществоВПереходныйПериод(Организация, ПериодРасчета) Экспорт

	// Т.к. при обновлении программы старые и новые данные разделяются по регистрам, 
	// переходного периода не возникает.
	Возврат Ложь;

КонецФункции

// По 5 и 6 цифрам КПП определяет, является ли организация иностранной
// (пп.1 п.12 Порядка заполнения декларации по налогу на имущество в редакции Приказа ФНС России от 24.08.2022 N ЕД-7-21/766@).
// Это влиет как на расчет налога, так и на заполнение декларации.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация
//  Период - Дата
//
// Возвращаемое значение:
//  Булево - если Истина, то организация считается иностранной с точки зрения отчетности
Функция ЭтоИностраннаяОрганизация(Организация, Период) Экспорт

	КПП = ОрганизацииЛокализация.КППНаДату(Организация, Период);

	ЗначенияДляИностраннойОрганизации = Новый Массив;
	ЗначенияДляИностраннойОрганизации.Добавить("51");
	ЗначенияДляИностраннойОрганизации.Добавить("52");
	ЗначенияДляИностраннойОрганизации.Добавить("55");
	ЗначенияДляИностраннойОрганизации.Добавить("56");
	ЗначенияДляИностраннойОрганизации.Добавить("63");
	ЗначенияДляИностраннойОрганизации.Добавить("64");
	ЗначенияДляИностраннойОрганизации.Добавить("65");
	ЗначенияДляИностраннойОрганизации.Добавить("70");
	ЗначенияДляИностраннойОрганизации.Добавить("74");
	ЗначенияДляИностраннойОрганизации.Добавить("91");
	ЗначенияДляИностраннойОрганизации.Добавить("92");

	Если СтрДлина(КПП) < 6 Тогда
		Возврат Ложь;
	КонецЕсли;

	ЗначениеИзКПП = Сред(КПП, 5, 2);

	Возврат ЗначенияДляИностраннойОрганизации.Найти(ЗначениеИзКПП) <> Неопределено;

КонецФункции

Процедура ПередРасчетомНалогаНаИмущество(ПараметрыРасчета, ДополнительныеПараметры = Неопределено) Экспорт

	СформироватьИсправлениеПараметровНалогаНаИмуществоЗаписи(
		ПараметрыРасчета.Организация,
		ПараметрыРасчета.мДатаНачалаПериодаОтчета,
		КонецМесяца(КонецМесяца(ПараметрыРасчета.мДатаКонцаПериодаОтчета)+1),
		КонецМесяца(ПараметрыРасчета.мДатаКонцаПериодаОтчета),
		ПараметрыРасчета.МенеджерВременныхТаблиц,
		ДополнительныеПараметры);

КонецПроцедуры

Процедура СформироватьТаблицуСтавкиНалогаНаИмуществоПоОтдельнымОССрезПоследних(ПараметрыРасчета, Период, ДополнительныеПараметры, ИмяТаблицы = "") Экспорт
	// Для формирования среза последних в параметрах расчета должна присутствовать временная таблица с записями регистра.
	СформироватьТаблицуСтавкиНалогаНаИмуществоПоОтдельнымОССрезПоследнихПоЗаписям(ПараметрыРасчета, Период, ДополнительныеПараметры, ИмяТаблицы);

КонецПроцедуры

Процедура СформироватьТаблицуСтавкиНалогаНаИмуществоПоОтдельнымОСЗаписи(ПараметрыРасчета, НачалоПериода, КонецПериода, ДополнительныеПараметры, ИмяТаблицы = "") Экспорт

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;

	ТекстЗапроса = ТекстЗапросаЗаписиРегистраСУчетомИсправлений(
					"ПараметрыНачисленияНалогаНаИмущество",
					?(ИмяТаблицы <> "", ИмяТаблицы, "СтавкиНалогаНаИмуществоПоОтдельнымОС_Записи"));

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;

	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();

КонецПроцедуры

Процедура СформироватьТаблицуСтавкиНалогаНаИмуществоПоОтдельнымОССрезПоследнихПоЗаписям(ПараметрыРасчета, Период, ДополнительныеПараметры, ИмяТаблицы = "") Экспорт

	Если ПараметрыРасчета.МенеджерВременныхТаблиц.Таблицы.Найти("СтавкиНалогаНаИмуществоПоОтдельнымОС_Записи") = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Формировать срез последних по записям следует после формирования временной таблицы, содержащей записи регистра.';
								|en = 'Формировать срез последних по записям следует после формирования временной таблицы, содержащей записи регистра.'");
	КонецЕсли;
	
	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;

	ТекстЗапроса = ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений(
					"СтавкиНалогаНаИмуществоПоОтдельнымОС_Записи",
					?(ИмяТаблицы <> "", ИмяТаблицы, "СтавкиНалогаНаИмуществоПоОтдельнымОС_СрезПоследних"),
					Неопределено,
					"",
					ПараметрыРасчета.МенеджерВременныхТаблиц.Таблицы["СтавкиНалогаНаИмуществоПоОтдельнымОС_Записи"]);

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;

	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("Дата", Период);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();

КонецПроцедуры

Процедура СформироватьТаблицуСтавкиНалогаНаИмуществоСрезПоследних(ПараметрыРасчета, Период, ДополнительныеПараметры, ИмяТаблицы = "") Экспорт
	ТекстЗапроса =
	"// Ставка налога на имущество, если есть или 0 ставка по умолчанию, если не указана в учетной политике.
	|ВЫБРАТЬ
	|	СтавкиНалогаНаИмущество.Период КАК Период,
	|	СтавкиНалогаНаИмущество.Организация КАК Организация,
	|	СтавкиНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	СтавкиНалогаНаИмущество.НалоговаяСтавкаДвижимоеИмущество КАК НалоговаяСтавкаДвижимоеИмущество,
	|	СтавкиНалогаНаИмущество.СнижениеНалоговойСтавкиДвижимоеИмущество КАК СнижениеНалоговойСтавкиДвижимоеИмущество,
	|	СтавкиНалогаНаИмущество.ОсвобождениеОтНалогообложенияДвижимогоИмущества КАК ОсвобождениеОтНалогообложенияДвижимогоИмущества,
	|	СтавкиНалогаНаИмущество.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2 КАК ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2,
	|	СтавкиНалогаНаИмущество.ОснованиеЛьготы КАК ОснованиеЛьготы,
	|	СтавкиНалогаНаИмущество.НачалоДействияЛьготы КАК НачалоДействияЛьготы,
	|	СтавкиНалогаНаИмущество.ОкончаниеДействияЛьготы КАК ОкончаниеДействияЛьготы,
	|
	|	СтавкиНалогаНаИмущество.ОснованиеЛьготы <> ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)
	|		И &Период >= СтавкиНалогаНаИмущество.НачалоДействияЛьготы
	|		И (СтавкиНалогаНаИмущество.ОкончаниеДействияЛьготы = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ &Период <= КОНЕЦПЕРИОДА(СтавкиНалогаНаИмущество.ОкончаниеДействияЛьготы, ДЕНЬ)) КАК ДействуетЛьгота,
	|
	|	СтавкиНалогаНаИмущество.ОснованиеЛьготы.УстановленаМестнымНормативнымАктом КАК РегиональнаяЛьгота,
	|	ЕСТЬNULL(СтавкиНалогаНаИмущество.ОснованиеЛьготы.ВидЛьготы, ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) КАК ВидЛьготы,
	|	ЕСТЬNULL(СтавкиНалогаНаИмущество.ОснованиеЛьготы.КодЛьготы, """") КАК КодЛьготы,
	|	ЕСТЬNULL(СтавкиНалогаНаИмущество.ОснованиеЛьготы.ПроцентУменьшения, 0) КАК ПроцентУменьшения,
	|	1 КАК Приоритет
	|
	|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПредварительно
	|
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалогаНаИмущество
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	0 КАК НалоговаяСтавка,
	|	0 КАК НалоговаяСтавкаДвижимоеИмущество,
	|	ЛОЖЬ КАК СнижениеНалоговойСтавкиДвижимоеИмущество,
	|	ЛОЖЬ КАК ОсвобождениеОтНалогообложенияДвижимогоИмущества,
	|	ЛОЖЬ КАК ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2,
	|	ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка) КАК ОснованиеЛьготы,
	|	ДАТАВРЕМЯ(1,1,1) КАК НачалоДействияЛьготы,
	|	ДАТАВРЕМЯ(1,1,1) КАК ОкончаниеДействияЛьготы,
	|	ЛОЖЬ КАК ДействуетЛьгота,
	|	ЛОЖЬ КАК РегиональнаяЛьгота,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка) КАК ВидЛьготы,
	|	"""" КАК КодЛьготы,
	|	0 КАК ПроцентУменьшения,
	|	2 КАК Приоритет
	|;
	|
	|// Определим указана ставка или нет по приоритету.
	|ВЫБРАТЬ
	|	МИНИМУМ(Ставки.Приоритет) КАК МинимальныйПриоритет
	|ПОМЕСТИТЬ ПриоритетДляВыбора
	|ИЗ
	|	СтавкиНалогаНаИмуществоПредварительно КАК Ставки
	|;
	|
	|// Создадим временную таблицу среза последних со значением ставки налога.
	|ВЫБРАТЬ
	|	Ставки.Период                                          КАК Период,
	|	Ставки.Организация                                     КАК Организация,
	|	Ставки.НалоговаяСтавка                                 КАК НалоговаяСтавка,
	|	Ставки.НалоговаяСтавкаДвижимоеИмущество                КАК НалоговаяСтавкаДвижимоеИмущество,
	|	Ставки.СнижениеНалоговойСтавкиДвижимоеИмущество        КАК СнижениеНалоговойСтавкиДвижимоеИмущество,
	|	Ставки.ОсвобождениеОтНалогообложенияДвижимогоИмущества КАК ОсвобождениеОтНалогообложенияДвижимогоИмущества,
	|	Ставки.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2         КАК ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2,
	|	Ставки.ОснованиеЛьготы                                 КАК ОснованиеЛьготы,
	|	Ставки.НачалоДействияЛьготы                            КАК НачалоДействияЛьготы,
	|	Ставки.ОкончаниеДействияЛьготы                         КАК ОкончаниеДействияЛьготы,
	|	Ставки.ДействуетЛьгота                                 КАК ДействуетЛьгота,
	|	Ставки.РегиональнаяЛьгота                              КАК РегиональнаяЛьгота,
	|	Ставки.ВидЛьготы                                       КАК ВидЛьготы,
	|	Ставки.КодЛьготы                                       КАК КодЛьготы,
	|	Ставки.ПроцентУменьшения                               КАК ПроцентУменьшения
	|
	|ПОМЕСТИТЬ СтавкиНалогаНаИмущество_СрезПоследних
	|
	|ИЗ
	|	СтавкиНалогаНаИмуществоПредварительно КАК Ставки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриоритетДляВыбора КАК ПриоритетДляВыбора
	|	ПО ПриоритетДляВыбора.МинимальныйПриоритет = Ставки.Приоритет
	|;
	|
	|// Удалим вспомогательные временные таблицы.
	|УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПредварительно;
	|УНИЧТОЖИТЬ ПриоритетДляВыбора;
	|";
	
	Если НЕ ПустаяСтрока(ИмяТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ СтавкиНалогаНаИмущество_СрезПоследних", "ПОМЕСТИТЬ " + ИмяТаблицы);
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("Период", Период);

	Запрос.Выполнить();

КонецПроцедуры

Функция ТекстЗапросаДействиеЛьготПоПериодамДляКадастровыхОбъектов() Экспорт

	// Налоговая база в виде кадастровой стоимости может быть установлена только добавлением записи для объекта с особым
	// порядком налогообложения.
	// В то же время льгота может быть установлена как индивидуально для объекта (также в настройке особого порядка 
	// налогообложения), так и для организации в целом - в регистре Налога на имущество.
	// Запрос ниже учитывает как индивидуальные льготы по "кадастровым" объектам, так и общие льготы.
	// 1. Сначала получаем все особые настройки по "кадастровым" объектам, которые применялись начиная с указанной даты (1-й запрос пакета).
	// 2. Далее получаем действующую общую настройку на дату применения каждой индивидуальной настройки и, наоборот,
	//    на дату изменения общей настройки получаем действующие индивидуальные настройки (2-й и 3-й запросы)
	// 3. В итоге получаем фактически применяемые настройки льгот на даты действия индивидуальных настроек по объектам, а также общих настроек (4-й запрос) 
	ТекстЗапроса = 	
	"ВЫБРАТЬ
	|	&НачалоПериода КАК Период,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Организация КАК Организация,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастровыйНомер = """"
	|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастровыйНомерПомещения
	|		ИНАЧЕ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастровыйНомер
	|	КОНЕЦ КАК КадастровыйНомер,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОснованиеЛьготы КАК ОснованиеЛьготы,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОснованиеЛьготы.ВидЛьготы, ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) КАК ВидЛьготы,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НачалоДействияЛьготы КАК НачалоДействияЛьготы,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОкончаниеДействияЛьготы КАК ОкончаниеДействияЛьготы
	|ПОМЕСТИТЬ ВсеНастройкиПоКадастровымОбъектам
	|ИЗ
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС_СрезПоследнихНаНачалоПериода КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)
	|	И НЕ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НеПодлежитНалогообложению
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.КадастровыйНомер = """"
	|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.КадастровыйНомерПомещения
	|		ИНАЧЕ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.КадастровыйНомер
	|	КОНЕЦ,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПостановкаНаУчетВНалоговомОргане,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОснованиеЛьготы,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОснованиеЛьготы.ВидЛьготы, ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)),
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НачалоДействияЛьготы,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОкончаниеДействияЛьготы
	|ИЗ
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС_Записи КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
	|ГДЕ
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация В(&Организации)
	|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период > &НачалоПериода
	|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)
	|	И НЕ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НеПодлежитНалогообложению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтавкиНалогаНаИмущество.Период КАК ПериодОбщейНастройки,
	|	СтавкиНалогаНаИмущество.Организация КАК Организация,
	|	МАКСИМУМ(ВсеНастройкиПоКадастровымОбъектам.Период) КАК Период
	|ПОМЕСТИТЬ ОбщиеНастройки
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество КАК СтавкиНалогаНаИмущество
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеНастройкиПоКадастровымОбъектам КАК ВсеНастройкиПоКадастровымОбъектам
	|		ПО СтавкиНалогаНаИмущество.Организация = ВсеНастройкиПоКадастровымОбъектам.Организация
	|			И СтавкиНалогаНаИмущество.Период >= ВсеНастройкиПоКадастровымОбъектам.Период
	|ГДЕ
	|	СтавкиНалогаНаИмущество.Организация В(&Организации)
	|	И СтавкиНалогаНаИмущество.Период > &НачалоПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	СтавкиНалогаНаИмущество.Период,
	|	СтавкиНалогаНаИмущество.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеНастройкиПоКадастровымОбъектам.Период КАК Период,
	|	ВсеНастройкиПоКадастровымОбъектам.Организация КАК Организация,
	|	ВсеНастройкиПоКадастровымОбъектам.ОсновноеСредство КАК ОсновноеСредство,
	|	ВсеНастройкиПоКадастровымОбъектам.КадастровыйНомер КАК КадастровыйНомер,
	|	ВсеНастройкиПоКадастровымОбъектам.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	ВсеНастройкиПоКадастровымОбъектам.ОснованиеЛьготы КАК ОснованиеЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы КАК ВидЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.НачалоДействияЛьготы КАК НачалоДействияЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.ОкончаниеДействияЛьготы КАК ОкончаниеДействияЛьготы,
	|	МАКСИМУМ(СтавкиНалогаНаИмущество.Период) КАК ПериодОбщейНастройки
	|ПОМЕСТИТЬ ВсеНастройкиПоКадастровымОбъектамИПериодОбщихНастроек
	|ИЗ
	|	ВсеНастройкиПоКадастровымОбъектам КАК ВсеНастройкиПоКадастровымОбъектам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмущество КАК СтавкиНалогаНаИмущество
	|		ПО ВсеНастройкиПоКадастровымОбъектам.Организация = СтавкиНалогаНаИмущество.Организация
	|			И ВсеНастройкиПоКадастровымОбъектам.Период >= СтавкиНалогаНаИмущество.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеНастройкиПоКадастровымОбъектам.Период,
	|	ВсеНастройкиПоКадастровымОбъектам.Организация,
	|	ВсеНастройкиПоКадастровымОбъектам.ОсновноеСредство,
	|	ВсеНастройкиПоКадастровымОбъектам.ОснованиеЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.НачалоДействияЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.ОкончаниеДействияЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.КадастровыйНомер,
	|	ВсеНастройкиПоКадастровымОбъектам.ПостановкаНаУчетВНалоговомОргане
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВсеНастройкиПоКадастровымОбъектам.Период,
	|	ВсеНастройкиПоКадастровымОбъектам.Организация,
	|	ВсеНастройкиПоКадастровымОбъектам.ОсновноеСредство,
	|	ВсеНастройкиПоКадастровымОбъектам.КадастровыйНомер,
	|	ВсеНастройкиПоКадастровымОбъектам.ПостановкаНаУчетВНалоговомОргане,
	|	ВсеНастройкиПоКадастровымОбъектам.ОснованиеЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.НачалоДействияЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.ОкончаниеДействияЛьготы,
	|	ОбщиеНастройки.ПериодОбщейНастройки
	|ИЗ
	|	ВсеНастройкиПоКадастровымОбъектам КАК ВсеНастройкиПоКадастровымОбъектам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбщиеНастройки КАК ОбщиеНастройки
	|		ПО ВсеНастройкиПоКадастровымОбъектам.Организация = ОбщиеНастройки.Организация
	|			И ВсеНастройкиПоКадастровымОбъектам.Период = ОбщиеНастройки.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеНастройкиПоКадастровымОбъектам.Период КАК Период,
	|	ВсеНастройкиПоКадастровымОбъектам.Организация КАК Организация,
	|	ВсеНастройкиПоКадастровымОбъектам.ОсновноеСредство КАК ОсновноеСредство,
	|	ВсеНастройкиПоКадастровымОбъектам.КадастровыйНомер КАК КадастровыйНомер,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтавкиНалогаНаИмущество.ОснованиеЛьготы, ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)
	|			ТОГДА ВсеНастройкиПоКадастровымОбъектам.ОснованиеЛьготы
	|		КОГДА СтавкиНалогаНаИмущество.ОснованиеЛьготы.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|				И НЕ ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|			ТОГДА СтавкиНалогаНаИмущество.ОснованиеЛьготы
	|		ИНАЧЕ ВсеНастройкиПоКадастровымОбъектам.ОснованиеЛьготы
	|	КОНЕЦ КАК ОснованиеЛьготы,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтавкиНалогаНаИмущество.ОснованиеЛьготы, ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)
	|			ТОГДА ВсеНастройкиПоКадастровымОбъектам.НачалоДействияЛьготы
	|		КОГДА СтавкиНалогаНаИмущество.ОснованиеЛьготы.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|				И НЕ ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|			ТОГДА СтавкиНалогаНаИмущество.НачалоДействияЛьготы
	|		ИНАЧЕ ВсеНастройкиПоКадастровымОбъектам.НачалоДействияЛьготы
	|	КОНЕЦ КАК НачалоДействияЛьготы,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтавкиНалогаНаИмущество.ОснованиеЛьготы, ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)
	|			ТОГДА ВсеНастройкиПоКадастровымОбъектам.ОкончаниеДействияЛьготы
	|		КОГДА СтавкиНалогаНаИмущество.ОснованиеЛьготы.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|				И НЕ ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|			ТОГДА СтавкиНалогаНаИмущество.ОкончаниеДействияЛьготы
	|		ИНАЧЕ ВсеНастройкиПоКадастровымОбъектам.ОкончаниеДействияЛьготы
	|	КОНЕЦ КАК ОкончаниеДействияЛьготы
	|ПОМЕСТИТЬ ДействиеЛьготПоПериодам
	|ИЗ
	|	ВсеНастройкиПоКадастровымОбъектамИПериодОбщихНастроек КАК ВсеНастройкиПоКадастровымОбъектам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмущество КАК СтавкиНалогаНаИмущество
	|		ПО ВсеНастройкиПоКадастровымОбъектам.Организация = СтавкиНалогаНаИмущество.Организация
	|			И ВсеНастройкиПоКадастровымОбъектам.ПериодОбщейНастройки = СтавкиНалогаНаИмущество.Период
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ЕСТЬNULL(СтавкиНалогаНаИмущество.ОснованиеЛьготы, ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)
	|				ТОГДА ВсеНастройкиПоКадастровымОбъектам.ОснованиеЛьготы
	|			КОГДА СтавкиНалогаНаИмущество.ОснованиеЛьготы.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|					И НЕ ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|				ТОГДА СтавкиНалогаНаИмущество.ОснованиеЛьготы
	|			ИНАЧЕ ВсеНастройкиПоКадастровымОбъектам.ОснованиеЛьготы
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВсеНастройкиПоКадастровымОбъектам.Период,
	|	ВсеНастройкиПоКадастровымОбъектам.Организация,
	|	ВсеНастройкиПоКадастровымОбъектам.ОсновноеСредство,
	|	ВсеНастройкиПоКадастровымОбъектам.КадастровыйНомер,
	|	СтавкиНалогаНаИмущество.ОснованиеЛьготы,
	|	СтавкиНалогаНаИмущество.НачалоДействияЛьготы,
	|	СтавкиНалогаНаИмущество.ОкончаниеДействияЛьготы
	|ИЗ
	|	ВсеНастройкиПоКадастровымОбъектамИПериодОбщихНастроек КАК ВсеНастройкиПоКадастровымОбъектам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмущество КАК СтавкиНалогаНаИмущество
	|		ПО ВсеНастройкиПоКадастровымОбъектам.Организация = СтавкиНалогаНаИмущество.Организация
	|			И ВсеНастройкиПоКадастровымОбъектам.ПериодОбщейНастройки = СтавкиНалогаНаИмущество.Период
	|ГДЕ
	|	НЕ ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы В (ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение), ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент))
	|	И НЕ ВсеНастройкиПоКадастровымОбъектам.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|	И СтавкиНалогаНаИмущество.ОснованиеЛьготы.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент)";

	Возврат ТекстЗапроса;

КонецФункции

Процедура ДобавитьТекстЗапросаУчетОсновныхСредств(Период, ПараметрыРасчета, СписокЗапросов) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестонахождениеОС.Организация КАК Организация,
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК МестонахождениеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Регистрации.Организация КАК Организация,
	|	Регистрации.Подразделение КАК СтруктурнаяЕдиница,
	|	ПОДСТРОКА(Регистрации.РегистрацияВНалоговомОргане.Код,1,2) КАК КодРегиона
	|ПОМЕСТИТЬ АктуальныеРегистрацииВНалоговыхОрганах
	|ИЗ
	|	РегистрСведений.РегистрацииВНалоговомОргане.СрезПоследних(&Период, Организация В (&Организации)) КАК Регистрации
	|ГДЕ
	|	(Регистрации.Организация, Регистрации.Подразделение) В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				МестонахождениеОС.Организация КАК Организация,
	|				МестонахождениеОС.Местонахождение КАК Местонахождение
	|			ИЗ
	|				МестонахождениеОС КАК МестонахождениеОС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	Организации.Ссылка КАК СтруктурнаяЕдиница,
	|	ПОДСТРОКА(Организации.РегистрацияВНалоговомОргане.Код,1,2) КАК КодРегиона
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В (&Организации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокОС.Организация КАК Организация,
	|	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СписокОС.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ЕСТЬNULL(Регистрации.СтруктурнаяЕдиница, СписокОС.Организация) КАК Местонахождение,
	|	СчетаБухгалтерскогоУчета.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчета.СчетОбесценения КАК СчетОбесценения,
	|	СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ УчетОсновныхСредств_Предварительная
	|ИЗ
	|	СписокОС КАК СписокОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СписокОС.Организация = МестонахождениеОС.Организация
	|			И СписокОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ АктуальныеРегистрацииВНалоговыхОрганах КАК Регистрации
	|		ПО Регистрации.Организация = МестонахождениеОС.Организация
	|			И Регистрации.СтруктурнаяЕдиница = МестонахождениеОС.Местонахождение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчета КАК СчетаБухгалтерскогоУчета
	|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчета.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетОсновныхСредств.Организация КАК Организация,
	|	УчетОсновныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	УчетОсновныхСредств.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ЕСТЬNULL(АктуальныеРегистрации.КодРегиона, 0) КАК КодРегиона,
	|	УчетОсновныхСредств.СчетУчета КАК СчетУчета,
	|	УчетОсновныхСредств.СчетОбесценения КАК СчетОбесценения,
	|	УчетОсновныхСредств.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ УчетОсновныхСредств
	|ИЗ
	|	УчетОсновныхСредств_Предварительная КАК УчетОсновныхСредств
	|		ЛЕВОЕ СОЕДИНЕНИЕ АктуальныеРегистрацииВНалоговыхОрганах КАК АктуальныеРегистрации
	|		ПО УчетОсновныхСредств.Организация = АктуальныеРегистрации.Организация
	|			И УчетОсновныхСредств.Местонахождение = АктуальныеРегистрации.СтруктурнаяЕдиница
	|";

	СписокЗапросов.Добавить(ТекстЗапроса);

КонецПроцедуры

Процедура ДобавитьТекстЗапросаКоэффициентыЕНВД_ПоОС(СписокЗапросов) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СпособыОтраженияРасходов.ОсновноеСредство КАК ОсновноеСредство,
	|	КоэффициентыЕНВД.НеЕНВД КАК НеЕНВД,
	|	КоэффициентыЕНВД.Распределение КАК Распределение
	|ПОМЕСТИТЬ КоэффициентыЕНВД_ПоОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Период,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК СпособыОтраженияРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыЕНВД КАК КоэффициентыЕНВД
	|		ПО СпособыОтраженияРасходов.ОсновноеСредство = КоэффициентыЕНВД.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	СписокЗапросов.Добавить(ТекстЗапроса);

КонецПроцедуры

Процедура СоздатьВТКоэффициентыЕНВД(ПараметрыРасчета) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.СтатьяРасходовБУ КАК СтатьяРасходов,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ <> НЕОПРЕДЕЛЕНО КАК СпособОтраженияРасходовЗаданДокументом,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ КАК СпособОтраженияРасходов
	|ПОМЕСТИТЬ СпособыОтраженияРасходовПоАмортизации
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|		&Период,
	|		ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|			И Организация = &Организация) КАК ПорядокУчетаОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СпособОтраженияРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоАмортизации.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА СпособыОтраженияРасходовПоАмортизации.СпособОтраженияРасходовЗаданДокументом
	|			ТОГДА ЕСТЬNULL(СпособыОтраженияРасходовПоАмортизацииТаблица.СтатьяРасходов, СпособыОтраженияРасходовПоАмортизацииТаблица24.СтатьяРасходов)
	|		ИНАЧЕ СпособыОтраженияРасходовПоАмортизации.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА СпособыОтраженияРасходовПоАмортизации.СпособОтраженияРасходовЗаданДокументом
	|			ТОГДА ЕСТЬNULL(СпособыОтраженияРасходовПоАмортизацииТаблица.Коэффициент, СпособыОтраженияРасходовПоАмортизацииТаблица24.Коэффициент)
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Коэффициент
	|ПОМЕСТИТЬ ВТ_ВыборкаКоэффициентов
	|ИЗ
	|	СпособыОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов КАК СпособыОтраженияРасходовПоАмортизацииТаблица
	|		ПО СпособыОтраженияРасходовПоАмортизации.СпособОтраженияРасходов = СпособыОтраженияРасходовПоАмортизацииТаблица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС2_4.Амортизация КАК СпособыОтраженияРасходовПоАмортизацииТаблица24
	|		ПО СпособыОтраженияРасходовПоАмортизации.СпособОтраженияРасходов = СпособыОтраженияРасходовПоАмортизацииТаблица24.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоАмортизации.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ЕСТЬNULL(СпособыОтраженияРасходовПоАмортизацииТаблица.Коэффициент, СпособыОтраженияРасходовПоАмортизацииТаблица24.Коэффициент)) КАК СуммаКоэффициентов
	|ПОМЕСТИТЬ ВТ_ВыборкаСуммыКоэффициентов
	|ИЗ
	|	СпособыОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов КАК СпособыОтраженияРасходовПоАмортизацииТаблица
	|		ПО СпособыОтраженияРасходовПоАмортизации.СпособОтраженияРасходов = СпособыОтраженияРасходовПоАмортизацииТаблица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС2_4.Амортизация КАК СпособыОтраженияРасходовПоАмортизацииТаблица24
	|		ПО СпособыОтраженияРасходовПоАмортизации.СпособОтраженияРасходов = СпособыОтраженияРасходовПоАмортизацииТаблица24.Ссылка
	|ГДЕ
	|	СпособыОтраженияРасходовПоАмортизации.СпособОтраженияРасходовЗаданДокументом
	|
	|СГРУППИРОВАТЬ ПО
	|	СпособыОтраженияРасходовПоАмортизации.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыборкаКоэффициентов.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ВЫБОР
	|			КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|				ТОГДА ВыборкаКоэффициентов.Коэффициент / ЕСТЬNULL(ВыборкаСуммыКоэффициентов.СуммаКоэффициентов, 1)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА ВыборкаКоэффициентов.Коэффициент / ЕСТЬNULL(ВыборкаСуммыКоэффициентов.СуммаКоэффициентов, 1)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Распределение
	|ПОМЕСТИТЬ КоэффициентыЕНВД
	|ИЗ
	|	ВТ_ВыборкаКоэффициентов КАК ВыборкаКоэффициентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО ВыборкаКоэффициентов.СтатьяРасходов = СтатьиРасходов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыборкаСуммыКоэффициентов КАК ВыборкаСуммыКоэффициентов
	|		ПО ВыборкаКоэффициентов.ОсновноеСредство = ВыборкаСуммыКоэффициентов.ОсновноеСредство
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыборкаКоэффициентов.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Период", ПараметрыРасчета.ПериодРасчета);
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ИспользуетсяУправлениеВНА_2_4", ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ПараметрыРасчета.ПериодРасчета));
	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТДвижимоеИмуществоПринятоеКУчетуПосле2013(ПараметрыРасчета, ДополнительныеПараметры) Экспорт

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;

	КонецЕсли;

	СписокЗапросов = Новый Массив;

	ТекстЗапроса = ТекстЗапросаЗаписиРегистраСУчетомИсправлений(
					"ПервоначальныеСведенияОС", "ВТ_ПервоначальныеСведенияОС");
	СписокЗапросов.Добавить(ТекстЗапроса);

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОС
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013
	|ИЗ
	|	ВТ_ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	ПервоначальныеСведенияОС.Период <= &Дата
	|	И ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ >= ДАТАВРЕМЯ(2013, 1, 1)
	|
	|	И ПервоначальныеСведенияОС.Организация В
	|			(ВЫБРАТЬ
	|				Организации.Ссылка КАК Ссылка
	|			ИЗ
	|				Справочник.Организации КАК Организации
	|			ГДЕ
	|				(Организации.Ссылка = &ГоловнаяОрганизация
	|					ИЛИ Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация))
	|
	|	И НЕ ПервоначальныеСведенияОС.ОсновноеСредство.ГруппаОС В (
	|				ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МноголетниеНасаждения),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПервоначальныеСведенияОС.ОсновноеСредство
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ) >= ДАТАВРЕМЯ(2013, 1, 1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОС";
	СписокЗапросов.Добавить(ТекстЗапроса);

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Дата", КонецГода(ПараметрыРасчета.ПериодРасчета));

	ГоловнаяОрганизация = ПараметрыРасчета.Организация.ГоловнаяОрганизация;
	Если Не ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		ГоловнаяОрганизация = ПараметрыРасчета.Организация;
	КонецЕсли;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);

	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("НачалоПериода", '000101010000');
	Запрос.УстановитьПараметр("КонецПериода", КонецГода(ПараметрыРасчета.ПериодРасчета));
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();

КонецПроцедуры

Процедура СформироватьТаблицуОССостоящиеНаУчете(ПараметрыРасчета, Период, ДополнительныеПараметры) Экспорт

	ИсходныеВременныеТаблицы = ОбщегоНазначенияБП.СписокВременныхТаблиц(ПараметрыРасчета.МенеджерВременныхТаблиц);

	СписокЗапросов = Новый Массив;

	ТекстЗапроса = ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений(
					"ПорядокУчетаОСБУ", "ВТ_ПорядокУчетаОСБУ");

	СписокЗапросов.Добавить(ТекстЗапроса);

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	АрендованныеОС.ОсновноеСредство КАК ОсновноеСредство
	|
	|ПОМЕСТИТЬ ВТ_АрендованныеОСНаБалансеАрендодателя
	|
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(
	|			&Период,
	|			&ТекстОтбораОС_БезИмениТаблицы) КАК АрендованныеОС
	|ГДЕ
	|	АрендованныеОС.Состояние В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ЗаключенДоговорАренды),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ВАренде))
	|
	|	И АрендованныеОС.Договор.Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендодатель)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	СписокОС.ОсновноеСредство.ГруппаОС          КАК ГруппаОС,
	|	МАКСИМУМ(СписокОС.АмортизационнаяГруппа)    КАК АмортизационнаяГруппа,
	|	МАКСИМУМ(СписокОС.НедвижимоеИмущество)      КАК НедвижимоеИмущество
	|
	|ПОМЕСТИТЬ ВТ_ОССостоящиеНаУчете
	|
	|ИЗ
	|	(
	|	// ОС принятые к учету в БУ.
	|	ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство                  КАК ОсновноеСредство,
	|		ПорядокУчетаОСБУ.АмортизационнаяГруппа             КАК АмортизационнаяГруппа,
	|		ПорядокУчетаОСБУ.НедвижимоеИмущество               КАК НедвижимоеИмущество
	|	ИЗ
	|		ВТ_ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|	ГДЕ
	|		ПорядокУчетаОСБУ.Организация = &Организация
	|		И ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И НЕ ПорядокУчетаОСБУ.ОсновноеСредство В (ВЫБРАТЬ Т.ОсновноеСредство ИЗ ВТ_АрендованныеОСНаБалансеАрендодателя КАК Т)
	|		И ВЫБОР
	|				КОГДА ПорядокУчетаОСБУ.ОсновноеСредство.ТипОС = ЗНАЧЕНИЕ(Перечисление.ТипыОС.КомпонентАмортизации)
	|					ТОГДА НЕ ПорядокУчетаОСБУ.ОсновноеСредство.УчитыватьСтоимостьЛиквидационногоОбязательства
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|		И &ТекстОтбораОС_СИменемТаблицы
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	// ОС с исправлением параметров.
	|	ВЫБРАТЬ
	|		ИсправлениеПараметров.ОсновноеСредство             КАК ОсновноеСредство,
	|		НЕОПРЕДЕЛЕНО                                       КАК АмортизационнаяГруппа,
	|		ИСТИНА                                             КАК НедвижимоеИмущество
	|	ИЗ
	|		РегистрСведений.ИсправлениеПараметровНалогаНаИмущество КАК ИсправлениеПараметров
	|	ГДЕ
	|		ИсправлениеПараметров.ДатаДействия = &ПериодВводаОстатков
	|		И ИсправлениеПараметров.Организация = &Организация
	|		И НЕ ИсправлениеПараметров.ОсновноеСредство В (ВЫБРАТЬ Т.ОсновноеСредство ИЗ ВТ_АрендованныеОСНаБалансеАрендодателя КАК Т)
	|		И ИсправлениеПараметров.Регистратор ССЫЛКА Документ.ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	// ОС, недвижимое имущество, переданные в аренду.
	|	ВЫБРАТЬ
	|		ПереданныеВАрендуОССрезПоследних.ОсновноеСредство  КАК ОсновноеСредство,
	|		НЕОПРЕДЕЛЕНО                                       КАК АмортизационнаяГруппа,
	|		ПорядокУчетаОСБУ.НедвижимоеИмущество               КАК НедвижимоеИмущество
	|	ИЗ
	|		РегистрСведений.ПереданныеВАрендуОС.СрезПоследних(&Период, Организация = &Организация) КАК ПереданныеВАрендуОССрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ПереданныеВАрендуОССрезПоследних.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И ПереданныеВАрендуОССрезПоследних.Организация = ПорядокУчетаОСБУ.Организация
	|	ГДЕ
	|		ПереданныеВАрендуОССрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПереданоВАренду)
	|		И ПереданныеВАрендуОССрезПоследних.Договор.Ссылка ЕСТЬ НЕ NULL 
	|		И ПереданныеВАрендуОССрезПоследних.Договор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ПередачаВАренду)
	|		И ПорядокУчетаОСБУ.НедвижимоеИмущество = ИСТИНА
	|
	|	) КАК СписокОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("ДоначислениеНалогаНаИмущество") Тогда
		
		ТекстОтбораОС_СИменемТаблицы = "ПорядокУчетаОСБУ.ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ЗаданияКРасчету.ОбъектУчета
		|					ИЗ
		|						ЗаданияКРасчету КАК ЗаданияКРасчету)";
		
		ТекстОтбораОС_БезИмениТаблицы = "ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ЗаданияКРасчету.ОбъектУчета
		|					ИЗ
		|						ЗаданияКРасчету КАК ЗаданияКРасчету)";
		
	Иначе
		
		ТекстОтбораОС_СИменемТаблицы = "ИСТИНА";
		ТекстОтбораОС_БезИмениТаблицы = "ИСТИНА";
		
	КонецЕсли;

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОтбораОС_СИменемТаблицы", ТекстОтбораОС_СИменемТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОтбораОС_БезИмениТаблицы", ТекстОтбораОС_БезИмениТаблицы);

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;
		СписокОС = Новый Массив;

	КонецЕсли;

	ПериодПараметров = ?(Период = НачалоДня(Период), Период - 1, Период);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("Период", ПериодПараметров);
	Запрос.УстановитьПараметр("Дата", ПериодПараметров);
	Запрос.УстановитьПараметр("ПериодВводаОстатков", Период);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Период));

	Запрос.Выполнить();

	ИсходныеВременныеТаблицы.Добавить("ВТ_ОССостоящиеНаУчете");
	ОбщегоНазначенияБП.УничтожитьВременныеТаблицы(ПараметрыРасчета.МенеджерВременныхТаблиц,, ИсходныеВременныеТаблицы);

КонецПроцедуры

Процедура ДобавитьТекстЗапросаСписокОС(СписокЗапросов) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ
	|
	|ПОМЕСТИТЬ втПервоначальныеСведенияОС
	|
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&ПериодГраница,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В (&Организации)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокРазрешенныхОС.ОсновноеСредство
	|					ИЗ
	|						СписокРазрешенныхОС КАК СписокРазрешенныхОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество КАК НедвижимоеИмущество
	|
	|ПОМЕСТИТЬ втПорядокУчетаОСБУ
	|
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&ПериодГраница,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В (&Организации)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокРазрешенныхОС.ОсновноеСредство
	|					ИЗ
	|						СписокРазрешенныхОС КАК СписокРазрешенныхОС)) КАК ПорядокУчетаОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокОС.Организация КАК Организация,
	|	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(СписокОС.ПорядокПогашенияСтоимости) КАК ПорядокПогашенияСтоимости,
	|	МАКСИМУМ(СписокОС.АмортизационнаяГруппа) КАК АмортизационнаяГруппа,
	|	МАКСИМУМ(СписокОС.НедвижимоеИмущество) КАК НедвижимоеИмущество
	|
	|ПОМЕСТИТЬ СписокОС
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПервоначальныеСведенияОС.Организация КАК Организация,
	|		ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|		ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокПогашенияСтоимости,
	|		ПорядокУчетаОСБУ.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|		ПорядокУчетаОСБУ.НедвижимоеИмущество КАК НедвижимоеИмущество
	|	ИЗ
	|		втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО ПорядокУчетаОСБУ.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|				И ПорядокУчетаОСБУ.Организация = ПервоначальныеСведенияОС.Организация
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ИсправлениеПараметров.Организация КАК Организация,
	|		ИсправлениеПараметров.ОсновноеСредство КАК ОсновноеСредство,
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации) КАК ПорядокПогашенияСтоимости,
	|		НЕОПРЕДЕЛЕНО КАК АмортизационнаяГруппа,
	|		ИСТИНА КАК НедвижимоеИмущество
	|	ИЗ
	|		РегистрСведений.ИсправлениеПараметровНалогаНаИмущество КАК ИсправлениеПараметров
	|	ГДЕ
	// Исправления хранятся на начало месяца, на конец года берем из 01 января следующего года.
	|		ИсправлениеПараметров.ДатаДействия = ВЫБОР
	|											КОГДА &Период = НАЧАЛОПЕРИОДА(&Период,МЕСЯЦ) ТОГДА 
	|												&Период
	|											ИНАЧЕ
	|												ДОБАВИТЬКДАТЕ(&Период,Секунда,1)
	|											КОНЕЦ
	|		И ИсправлениеПараметров.Организация В (&Организации)
	|		И ИсправлениеПараметров.ОсновноеСредство В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							СписокРазрешенныхОС.ОсновноеСредство
	|						ИЗ
	|							СписокРазрешенныхОС КАК СписокРазрешенныхОС)
	|
	|	) КАК СписокОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокОС.Организация,
	|	СписокОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство";

	СписокЗапросов.Добавить(ТекстЗапроса);

КонецПроцедуры

Процедура ДобавитьТекстЗапросаСчетаБухгалтерскогоУчета(СписокЗапросов) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетОбесценения,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ ВТ_СчетаБухгалтерскогоУчета
	|ИЗ
	|	СписокОС КАК СписокОС
	|ГДЕ
	|	&ИспользуетсяУправлениеВНА_2_4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство,
	|	ПорядокУчетаОС.СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
	|	ПорядокУчетаОС.СчетНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Период,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК ПорядокУчетаОС
	|ГДЕ
	|	НЕ &ИспользуетсяУправлениеВНА_2_4
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансированияОС.ОсновноеСредство,
	|	ПараметрыЦелевогоФинансированияОС.СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
	|	ПараметрыЦелевогоФинансированияОС.СчетАмортизации
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК ПараметрыЦелевогоФинансированияОС
	|ГДЕ
	|	НЕ &ИспользуетсяУправлениеВНА_2_4
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	СписокЗапросов.Добавить(ТекстЗапроса);

КонецПроцедуры

Процедура ДобавитьТекстЗапросаСтоимостьИАмортизация(Период, ПараметрыРасчета, СписокЗапросов, ДополнительныеПараметры = Неопределено) Экспорт

	Если ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ДобавитьМесяц(Период, -1)) Тогда

		Если Месяц(ПараметрыРасчета.мДатаКонцаПериодаОтчета) + 1 = Месяц(Период)
			И (ДополнительныеПараметры = Неопределено
				ИЛИ НЕ ДополнительныеПараметры.Свойство("ДоначислениеНалогаНаИмущество")) Тогда

			// Это расчет в выбранном месяце, в нем еще не выполнен расчет стоимости поступивших или модернизированных ОС

			ТекстЗапроса =
			"// ОС принятые к учету или модернизированные в предыдущем месяце.
			|ВЫБРАТЬ
			|	ПринятиеКУчетуОС.Организация КАК Организация,
			|	СтоимостьОС.СтоимостьБУ КАК СтоимостьРегл,
			|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство
			|
			|ПОМЕСТИТЬ СписокОС_РасчетПоПредварительнойСтоимости
			|
			|ИЗ
			|	Документ.ПринятиеКУчетуОС2_4 КАК ПринятиеКУчетуОС
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4.ОС КАК СтоимостьОС
			|		ПО (СтоимостьОС.Ссылка = ПринятиеКУчетуОС.Ссылка)
			|
			|ГДЕ
			|	ПринятиеКУчетуОС.Организация В (&Организации)
			|	И ПринятиеКУчетуОС.Проведен
			|	И ПринятиеКУчетуОС.ОтражатьВРеглУчете
			|	И ПринятиеКУчетуОС.Дата МЕЖДУ &НачалоПредыдущегоМесяца И &КонецПредыдущегоМесяца
			|
			|	И ИСТИНА В
			|			(ВЫБРАТЬ ПЕРВЫЕ 1
			|				ИСТИНА
			|			ИЗ
			|				СписокОС КАК СписокОС
			|			ГДЕ
			|				СписокОС.Организация = ПринятиеКУчетуОС.Организация
			|				И СписокОС.ОсновноеСредство = СтоимостьОС.ОсновноеСредство)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	МодернизацияОС2_4.Организация,
			|	СтоимостьОС.СтоимостьБУ,
			|	СтоимостьОС.ОсновноеСредство
			|ИЗ
			|	Документ.МодернизацияОС2_4 КАК МодернизацияОС2_4
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС2_4.ОС КАК СтоимостьОС
			|		ПО (СтоимостьОС.Ссылка = МодернизацияОС2_4.Ссылка)
			|
			|ГДЕ
			|	МодернизацияОС2_4.Организация В (&Организации)
			|	И МодернизацияОС2_4.Проведен
			|	И МодернизацияОС2_4.ОтражатьВРеглУчете
			|	И МодернизацияОС2_4.Дата МЕЖДУ &НачалоПредыдущегоМесяца И &КонецПредыдущегоМесяца
			|
			|	И ИСТИНА В
			|			(ВЫБРАТЬ ПЕРВЫЕ 1
			|				ИСТИНА
			|			ИЗ
			|				СписокОС КАК СписокОС
			|			ГДЕ
			|				СписокОС.Организация = МодернизацияОС2_4.Организация
			|				И СписокОС.ОсновноеСредство = СтоимостьОС.ОсновноеСредство)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СписокОС.Организация КАК Организация,
			|	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
			|	СУММА(СписокОС.СтоимостьРегл) КАК СтоимостьРегл
			|
			|ПОМЕСТИТЬ ВТ_ПредварительнаяСтоимостьОС
			|
			|ИЗ
			|	(ВЫБРАТЬ
			|		СтоимостьОС.Организация КАК Организация,
			|		СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
			|		СтоимостьОС.СтоимостьРеглОстаток + СтоимостьОС.СтоимостьЦФОстаток КАК СтоимостьРегл
			|	ИЗ
			|		РегистрНакопления.СтоимостьОС.Остатки(
			|				&НачалоПредыдущегоМесяца,
			|				Организация В (&Организации)
			|					И ОсновноеСредство В
			|						(ВЫБРАТЬ
			|							СписокОС.ОсновноеСредство
			|						ИЗ
			|							СписокОС_РасчетПоПредварительнойСтоимости КАК СписокОС)) КАК СтоимостьОС
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		СтоимостьОС.Организация КАК Организация,
			|		СтоимостьОС.ОсновноеСредство,
			|		СтоимостьОС.СтоимостьРегл
			|	ИЗ
			|		СписокОС_РасчетПоПредварительнойСтоимости КАК СтоимостьОС
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|// Уменьшение стоимости (здесь нет разукомплектации и объединения, т.к. их нельзя оформить в одном месяце с принятием к учету или модернизацией)
			|	ВЫБРАТЬ
			|		СтоимостьОС.Организация КАК Организация,
			|		СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
			|		-(СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ) КАК СтоимостьРегл
			|	ИЗ
			|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
			|	ГДЕ
			|		СтоимостьОС.Период МЕЖДУ &НачалоПредыдущегоМесяца И &КонецПредыдущегоМесяца
			|		И СтоимостьОС.Активность
			|		И СтоимостьОС.Организация В (&Организации)
			|		И СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
			|		И ТИПЗНАЧЕНИЯ(СтоимостьОС.Регистратор) В (ТИП(Документ.СписаниеОС2_4))
			|
			|		И СтоимостьОС.ОсновноеСредство В
			|						(ВЫБРАТЬ
			|							СписокОС.ОсновноеСредство
			|						ИЗ
			|							СписокОС_РасчетПоПредварительнойСтоимости КАК СписокОС)
			|
			|	) КАК СписокОС
			|
			|СГРУППИРОВАТЬ ПО
			|	СписокОС.Организация,
			|	СписокОС.ОсновноеСредство
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|
			|ВЫБРАТЬ
			|	СУММА(СтоимостьОСПоОстаткам.СтоимостьРегл) КАК СтоимостьРегл,
			|	СтоимостьОСПоОстаткам.Организация КАК Организация,
			|	СтоимостьОСПоОстаткам.ОсновноеСредство КАК ОсновноеСредство
			|
			|ПОМЕСТИТЬ ВТ_СтоимостьОС
			|
			|ИЗ
			|  (// Основные средства.
			|	ВЫБРАТЬ
			|		СтоимостьОС.СтоимостьРеглОстаток + СтоимостьОС.СтоимостьЦФОстаток КАК СтоимостьРегл,
			|		СтоимостьОС.Организация КАК Организация,
			|		СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство
			|	ИЗ
			|		РегистрНакопления.СтоимостьОС.Остатки(
			|				&ПериодГраница,
			|				Организация В (&Организации)
			|					И ОсновноеСредство В
			|						(ВЫБРАТЬ
			|							СписокОС.ОсновноеСредство
			|						ИЗ
			|							СписокОС КАК СписокОС)) КАК СтоимостьОС
			|
			|	 ОБЪЕДИНИТЬ ВСЕ
			|
			|	// Инвестиции в аренду.
			|	ВЫБРАТЬ
			|		ИнвестицииВАренду.АрендныеПлатежиРеглОстаток
			|			+ ИнвестицииВАренду.НГЛСРеглОстаток
			|			+ ИнвестицииВАренду.ПроцентныйДисконтРеглОстаток КАК СтоимостьРегл,
			|		ИнвестицииВАренду.Организация КАК Организация,
			|		ИнвестицииВАренду.ОсновноеСредство КАК ОсновноеСредство
			|
			|	ИЗ
			|		РегистрНакопления.ИнвестицииВАренду.Остатки(
			|				&ПериодГраница,
			|				Организация В (&Организации)) КАК ИнвестицииВАренду
			|
			|	) КАК СтоимостьОСПоОстаткам
			|
			|СГРУППИРОВАТЬ ПО
			|	СтоимостьОСПоОстаткам.Организация,
			|	СтоимостьОСПоОстаткам.ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(ПредварительнаяСтоимостьОС.СтоимостьРегл, СтоимостьОС.СтоимостьРегл) КАК СуммаОстатокДт,
			|	СтоимостьОС.Организация КАК Организация,
			|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
			|
			|ИЗ
			|	ВТ_СтоимостьОС КАК СтоимостьОС
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПредварительнаяСтоимостьОС КАК ПредварительнаяСтоимостьОС
			|		ПО ПредварительнаяСтоимостьОС.Организация = СтоимостьОС.Организация
			|			И ПредварительнаяСтоимостьОС.ОсновноеСредство = СтоимостьОС.ОсновноеСредство
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|		ПО ИсправлениеПараметров.ОсновноеСредство = СтоимостьОС.ОсновноеСредство
			|// Исправления хранятся на начало месяца, на конец года берем из 01 января следующего года.
			|			И (ИсправлениеПараметров.ДатаДействия = &Период
			|				И &Период = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
			|				ИЛИ
			|				ДОБАВИТЬКДАТЕ(ИсправлениеПараметров.ДатаДействия, СЕКУНДА, -1) = &Период
			|					И &Период = КОНЕЦПЕРИОДА(&Период, МЕСЯЦ))
			|
			|ГДЕ
			|	ИсправлениеПараметров.ОсновноеСредство ЕСТЬ NULL
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ИсправлениеПараметров.Стоимость КАК СуммаОстатокДт,
			|	ИсправлениеПараметров.Организация КАК Организация,
			|	ИсправлениеПараметров.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ИЗ
			|	ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|ГДЕ
			|	(ИсправлениеПараметров.ДатаДействия = &Период
			|				И &Период = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
			|				ИЛИ
			|				ДОБАВИТЬКДАТЕ(ИсправлениеПараметров.ДатаДействия, СЕКУНДА, -1) = &Период
			|					И &Период = КОНЕЦПЕРИОДА(&Период, МЕСЯЦ))
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СтоимостьОС.СтоимостьРеглОстаток + СтоимостьОС.СтоимостьЦФОстаток КАК СтоимостьРегл,
			|	СтоимостьОС.Организация КАК Организация,
			|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство
			|
			|ПОМЕСТИТЬ ВТ_СтоимостьОСНаНачалоМесяца
			|
			|ИЗ
			|	РегистрНакопления.СтоимостьОС.Остатки(
			|			&НачалоПредыдущегоМесяца,
			|			Организация В (&Организации)
			|				И ОсновноеСредство В
			|					(ВЫБРАТЬ
			|						СписокОС.ОсновноеСредство
			|					ИЗ
			|						СписокОС)) КАК СтоимостьОС
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(АмортизацияОС.СуммаОстатокДт) КАК СуммаОстатокДт,
			|	СУММА(АмортизацияОС.СуммаОстатокКт) КАК СуммаОстатокКт,
			|	АмортизацияОС.Организация КАК Организация,
			|	АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство
			|
			|ПОМЕСТИТЬ ВТ_АмортизацияОС_НаНачалоМесяца
			|
			|ИЗ
			|	(ВЫБРАТЬ
			|		-(АмортизацияОС.АмортизацияРеглОстаток + АмортизацияОС.АмортизацияЦФОстаток) КАК СуммаОстатокДт,
			|		-(АмортизацияОС.АмортизацияРеглОстаток + АмортизацияОС.АмортизацияЦФОстаток) КАК СуммаОстатокКт,
			|		АмортизацияОС.Организация,
			|		АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство
			|	ИЗ
			|		РегистрНакопления.АмортизацияОС.Остатки(
			|				&ПериодГраница,
			|				Организация В (&Организации)
			|					И ОсновноеСредство В
			|						(ВЫБРАТЬ
			|							СписокОС.ОсновноеСредство
			|						ИЗ
			|							СписокОС)) КАК АмортизацияОС
			|) КАК АмортизацияОС
			|
			|СГРУППИРОВАТЬ ПО
			|	АмортизацияОС.Организация,
			|	АмортизацияОС.ОсновноеСредство
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РазукомплектацияОС.ОсновноеСредство КАК ОсновноеСредствоИсходное,
			|	РазукомплектацияОС.Организация КАК Организация,
			|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) <> 0
			|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(АмортизацияОС.СуммаОстатокКт, 0) * ТаблицаОС.СтоимостьБУ / ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) КАК ЧИСЛО (31, 2))
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Амортизация
			|
			|ПОМЕСТИТЬ ВтВыделениеАмортизации
			|
			|ИЗ
			|	Документ.РазукомплектацияОС КАК РазукомплектацияОС
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
			|		ПО ТаблицаОС.Ссылка = РазукомплектацияОС.Ссылка
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокОС КАК СписокОС
			|		ПО СписокОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьОСНаНачалоМесяца КАК СтоимостьОС
			|		ПО СтоимостьОС.Организация = РазукомплектацияОС.Организация
			|			И СтоимостьОС.ОсновноеСредство = РазукомплектацияОС.ОсновноеСредство
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС_НаНачалоМесяца КАК АмортизацияОС
			|		ПО АмортизацияОС.Организация = РазукомплектацияОС.Организация
			|			И АмортизацияОС.ОсновноеСредство = РазукомплектацияОС.ОсновноеСредство
			|
			|ГДЕ
			|	РазукомплектацияОС.Организация В (&Организации)
			|	И РазукомплектацияОС.Проведен
			|	И РазукомплектацияОС.ОтражатьВРеглУчете
			|	И РазукомплектацияОС.Дата МЕЖДУ &НачалоПредыдущегоМесяца И &КонецПредыдущегоМесяца
			|	И ТаблицаОС.СтоимостьБУ <> 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОбесценениеВНАОстатки.Организация КАК Организация,
			|	-ОбесценениеВНАОстатки.ОбесценениеРеглОстаток КАК СуммаОстатокКт,
			|	ОбесценениеВНАОстатки.ВнеоборотныйАктив КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ПОМЕСТИТЬ ВТ_ОбесценениеОС
			|
			|ИЗ
			|	РегистрНакопления.ОбесценениеВНА.Остатки(
			|			&ПериодГраница,
			|			Организация В (&Организации)
			|				И ВнеоборотныйАктив В
			|					(ВЫБРАТЬ
			|						СписокОС.ОсновноеСредство
			|					ИЗ
			|						СписокОС)) КАК ОбесценениеВНАОстатки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(АмортизацияОС.СуммаОстатокДт) КАК СуммаОстатокДт,
			|	СУММА(АмортизацияОС.СуммаОстатокКт) КАК СуммаОстатокКт,
			|	АмортизацияОС.Организация КАК Организация,
			|	АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ПОМЕСТИТЬ ВТ_АмортизацияОС
			|
			|ИЗ
			|	(ВЫБРАТЬ
			|		АмортизацияОС.СуммаОстатокДт КАК СуммаОстатокДт,
			|		АмортизацияОС.СуммаОстатокКт КАК СуммаОстатокКт,
			|		АмортизацияОС.Организация КАК Организация,
			|		АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство
			|	ИЗ
			|		ВТ_АмортизацияОС_НаНачалоМесяца КАК АмортизацияОС
			|
			|			ЛЕВОЕ СОЕДИНЕНИЕ ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|			ПО ИсправлениеПараметров.ОсновноеСредство = АмортизацияОС.ОсновноеСредство
			|				И (ИсправлениеПараметров.ДатаДействия = &Период
			|					И &Период = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
			|					ИЛИ
			|					ДОБАВИТЬКДАТЕ(ИсправлениеПараметров.ДатаДействия, СЕКУНДА, -1) = &Период
			|						И &Период = КОНЕЦПЕРИОДА(&Период, МЕСЯЦ))
			|	ГДЕ
			|		ИсправлениеПараметров.ОсновноеСредство ЕСТЬ NULL
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|// Уменьшение амортизации исходного ОС при разукомплектации.
			|	ВЫБРАТЬ
			|		-АмортизацияОС.Амортизация,
			|		-АмортизацияОС.Амортизация,
			|		АмортизацияОС.Организация,
			|		АмортизацияОС.ОсновноеСредствоИсходное
			|	ИЗ
			|		ВтВыделениеАмортизации КАК АмортизацияОС
			|
			|			ЛЕВОЕ СОЕДИНЕНИЕ ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|			ПО ИсправлениеПараметров.ОсновноеСредство = АмортизацияОС.ОсновноеСредство
			|				И (ИсправлениеПараметров.ДатаДействия = &Период
			|					И &Период = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
			|					ИЛИ
			|					ДОБАВИТЬКДАТЕ(ИсправлениеПараметров.ДатаДействия, СЕКУНДА, -1) = &Период
			|						И &Период = КОНЕЦПЕРИОДА(&Период, МЕСЯЦ))
			|	ГДЕ
			|		ИсправлениеПараметров.ОсновноеСредство ЕСТЬ NULL
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|// Увеличение амортизации новых ОС при разукомплектации.
			|	ВЫБРАТЬ
			|		АмортизацияОС.Амортизация,
			|		АмортизацияОС.Амортизация,
			|		АмортизацияОС.Организация,
			|		АмортизацияОС.ОсновноеСредство
			|	ИЗ
			|		ВтВыделениеАмортизации КАК АмортизацияОС
			|
			|			ЛЕВОЕ СОЕДИНЕНИЕ ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|			ПО ИсправлениеПараметров.ОсновноеСредство = АмортизацияОС.ОсновноеСредство
			|				И (ИсправлениеПараметров.ДатаДействия = &Период
			|					И &Период = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
			|					ИЛИ
			|					ДОБАВИТЬКДАТЕ(ИсправлениеПараметров.ДатаДействия, СЕКУНДА, -1) = &Период
			|						И &Период = КОНЕЦПЕРИОДА(&Период, МЕСЯЦ))
			|	ГДЕ
			|		ИсправлениеПараметров.ОсновноеСредство ЕСТЬ NULL
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		ИсправлениеПараметров.Амортизация,
			|		ИсправлениеПараметров.Амортизация,
			|		ИсправлениеПараметров.Организация,
			|		ИсправлениеПараметров.ОсновноеСредство
			|	ИЗ
			|		ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|	ГДЕ
			|		(ИсправлениеПараметров.ДатаДействия = &Период
			|					И &Период = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
			|					ИЛИ
			|					ДОБАВИТЬКДАТЕ(ИсправлениеПараметров.ДатаДействия, СЕКУНДА, -1) = &Период
			|						И &Период = КОНЕЦПЕРИОДА(&Период, МЕСЯЦ))
			|
			|	) КАК АмортизацияОС
			|
			|СГРУППИРОВАТЬ ПО
			|	АмортизацияОС.Организация,
			|	АмортизацияОС.ОсновноеСредство
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство";

		Иначе

			ТекстЗапроса =
			"// ОС без последующих исправлений параметров.
			|ВЫБРАТЬ
			|	СтоимостьОС.СтоимостьРеглОстаток + СтоимостьОС.СтоимостьЦФОстаток КАК СуммаОстатокДт,
			|	СтоимостьОС.Организация КАК Организация,
			|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
			|
			|ИЗ
			|	РегистрНакопления.СтоимостьОС.Остатки(
			|			&ПериодГраница,
			|			Организация В (&Организации)
			|				И ОсновноеСредство В
			|					(ВЫБРАТЬ
			|						СписокОС.ОсновноеСредство
			|					ИЗ
			|						СписокОС)) КАК СтоимостьОС
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|		ПО ИсправлениеПараметров.ОсновноеСредство = СтоимостьОС.ОсновноеСредство
			|// Исправления хранятся на начало месяца, на конец года берем из 01 января следующего года.
			|			И (ИсправлениеПараметров.ДатаДействия = &Период
			|					И &Период = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
			|					ИЛИ
			|					ДОБАВИТЬКДАТЕ(ИсправлениеПараметров.ДатаДействия, СЕКУНДА, -1) = &Период
			|						И &Период = КОНЕЦПЕРИОДА(&Период, МЕСЯЦ))
			|
			|ГДЕ
			|	ИсправлениеПараметров.ОсновноеСредство ЕСТЬ NULL
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|// ОС с исправлениями параметров.
			|ВЫБРАТЬ
			|	ИсправлениеПараметров.Стоимость КАК СуммаОстатокДт,
			|	ИсправлениеПараметров.Организация КАК Организация,
			|	ИсправлениеПараметров.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|ИЗ
			|	ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|ГДЕ
			|	(ИсправлениеПараметров.ДатаДействия = &Период
			|					И &Период = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
			|					ИЛИ
			|					ДОБАВИТЬКДАТЕ(ИсправлениеПараметров.ДатаДействия, СЕКУНДА, -1) = &Период
			|						И &Период = КОНЕЦПЕРИОДА(&Период, МЕСЯЦ))
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|// Инвестиции в аренду.
			|ВЫБРАТЬ
			|	ИнвестицииВАренду.АрендныеПлатежиРеглОстаток
			|		+ ИнвестицииВАренду.НГЛСРеглОстаток
			|		+ ИнвестицииВАренду.ПроцентныйДисконтРеглОстаток КАК СуммаОстатокДт,
			|
			|	ИнвестицииВАренду.Организация КАК Организация,
			|	ИнвестицииВАренду.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ИЗ
			|	РегистрНакопления.ИнвестицииВАренду.Остатки(
			|			&ПериодГраница,
			|			Организация В (&Организации) ) КАК ИнвестицииВАренду
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОбесценениеВНАОстатки.Организация КАК Организация,
			|	-ОбесценениеВНАОстатки.ОбесценениеРеглОстаток КАК СуммаОстатокКт,
			|	ОбесценениеВНАОстатки.ВнеоборотныйАктив КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ПОМЕСТИТЬ ВТ_ОбесценениеОС
			|
			|ИЗ
			|	РегистрНакопления.ОбесценениеВНА.Остатки(
			|			&ПериодГраница,
			|			Организация В (&Организации)
			|				И ВнеоборотныйАктив В
			|					(ВЫБРАТЬ
			|						СписокОС.ОсновноеСредство
			|					ИЗ
			|						СписокОС)) КАК ОбесценениеВНАОстатки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|
			|// Амортизация ОС без последующих исправлений.
			|ВЫБРАТЬ
			|	-(АмортизацияОС.АмортизацияРеглОстаток + АмортизацияОС.АмортизацияЦФОстаток) КАК СуммаОстатокДт,
			|	-(АмортизацияОС.АмортизацияРеглОстаток + АмортизацияОС.АмортизацияЦФОстаток) КАК СуммаОстатокКт,
			|	АмортизацияОС.Организация КАК Организация,
			|	АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ПОМЕСТИТЬ ВТ_АмортизацияОС
			|
			|ИЗ
			|	РегистрНакопления.АмортизацияОС.Остатки(
			|			&ПериодГраница,
			|			Организация В (&Организации)
			|				И ОсновноеСредство В
			|					(ВЫБРАТЬ
			|						СписокОС.ОсновноеСредство
			|					ИЗ
			|						СписокОС)) КАК АмортизацияОС
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|		ПО ИсправлениеПараметров.ОсновноеСредство = АмортизацияОС.ОсновноеСредство
			|			И (ИсправлениеПараметров.ДатаДействия = &Период
			|					И &Период = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
			|					ИЛИ
			|					ДОБАВИТЬКДАТЕ(ИсправлениеПараметров.ДатаДействия, СЕКУНДА, -1) = &Период
			|						И &Период = КОНЕЦПЕРИОДА(&Период, МЕСЯЦ))
			|
			|ГДЕ
			|	ИсправлениеПараметров.ОсновноеСредство ЕСТЬ NULL
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|// Амортизация ОС с исправлениями.
			|ВЫБРАТЬ
			|	ИсправлениеПараметров.Амортизация КАК СуммаОстатокДт,
			|	ИсправлениеПараметров.Амортизация КАК СуммаОстатокКт,
			|	ИсправлениеПараметров.Организация КАК Организация,
			|	ИсправлениеПараметров.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ИЗ
			|	ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|ГДЕ
			|	(ИсправлениеПараметров.ДатаДействия = &Период
			|					И &Период = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
			|					ИЛИ
			|					ДОБАВИТЬКДАТЕ(ИсправлениеПараметров.ДатаДействия, СЕКУНДА, -1) = &Период
			|						И &Период = КОНЕЦПЕРИОДА(&Период, МЕСЯЦ))
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство";

		КонецЕсли;

	Иначе

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПервоначальнаяСтоимостьОС.СуммаОстатокДт,
		|	ПервоначальнаяСтоимостьОС.Организация КАК Организация,
		|	ПервоначальнаяСтоимостьОС.Субконто1 КАК ОсновноеСредство,
		|	ПервоначальнаяСтоимостьОС.Счет
		|
		|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
		|
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&ПериодГраница,
		|			Счет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВТ_СчетаБухгалтерскогоУчета.СчетУчета
		|				ИЗ
		|					ВТ_СчетаБухгалтерскогоУчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация В (&Организации)) КАК ПервоначальнаяСтоимостьОС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	0 КАК СуммаОстатокКт,
		|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОсновноеСредство,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
		|
		|ПОМЕСТИТЬ ВТ_ОбесценениеОС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АмортизацияОС.СуммаОстатокДт КАК СуммаОстатокДт,
		|	АмортизацияОС.СуммаОстатокКт КАК СуммаОстатокКт,
		|	АмортизацияОС.Организация КАК Организация,
		|	АмортизацияОС.Субконто1 КАК ОсновноеСредство,
		|	АмортизацияОС.Счет КАК Счет
		|
		|ПОМЕСТИТЬ ВТ_АмортизацияОС
		|
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&ПериодГраница,
		|			Счет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВТ_СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации
		|				ИЗ
		|					ВТ_СчетаБухгалтерскогоУчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация В (&Организации)) КАК АмортизацияОС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОсновноеСредство";

	КонецЕсли;

	СписокЗапросов.Добавить(ТекстЗапроса);

КонецПроцедуры

Процедура ДобавитьТекстЗапросаДанныеБухУчетаОС(СписокЗапросов) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) КАК ПервоначальнаяСтоимость,
	|	ЕСТЬNULL(АмортизацияОС.СуммаОстатокДт, 0) КАК АмортизацияДт,
	|	ЕСТЬNULL(АмортизацияОС.СуммаОстатокКт, 0) КАК АмортизацияКт,
	|	ЕСТЬNULL(ОбесценениеОС.СуммаОстатокКт, 0) КАК Обесценение
	|
	|ПОМЕСТИТЬ ДанныеБухУчетаОС
	|
	|ИЗ
	|	ВТ_СчетаБухгалтерскогоУчета КАК СчетаБухгалтерскогоУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
	|		ПО СчетаБухгалтерскогоУчета.ОсновноеСредство = ПервоначальнаяСтоимостьОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
	|		ПО СчетаБухгалтерскогоУчета.ОсновноеСредство = АмортизацияОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОбесценениеОС КАК ОбесценениеОС
	|		ПО СчетаБухгалтерскогоУчета.ОсновноеСредство = ОбесценениеОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	СписокЗапросов.Добавить(ТекстЗапроса);

КонецПроцедуры

Процедура СформироватьИсправлениеПараметровНалогаНаИмуществоЗаписи(Организация, НачалоПериода, КонецПериода, ПериодРасчета, МенеджерВременныхТаблиц, ДополнительныеПараметры)

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;

	ТекстЗапроса = ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений(
						"ИсправлениеПараметровНалогаНаИмущество",, "ДатаДействия");

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПериодРасчета;

	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();

КонецПроцедуры

Процедура ДополнитьПараметрыЗапросаДвижимогоИмущества(Запрос, Период) Экспорт

	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Период));
	Если Не Запрос.Параметры.Свойство("ИспользуетсяУправлениеВНА_2_4") Тогда
		Запрос.УстановитьПараметр("ИспользуетсяУправлениеВНА_2_4",
			ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(КонецГода(Период)));
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ТранспортныйНалог

Функция ПолучитьАвансовыйРасчетПоТранспортномуНалогу(Организация, ПериодРасчета, ДополнительныеПараметры = Неопределено) Экспорт

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		РасчетНалога = ПолучитьАвансовыйРасчетПоТранспортномуНалогуСУчетомИсправлений(
							Организация, ПериодРасчета, ДополнительныеПараметры);

	Иначе

		Запрос = Новый Запрос;

		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ПериодРасчета", ПериодРасчета);

		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасчетТранспортногоНалога.ПериодРасчета КАК ПериодРасчета,
		|	РасчетТранспортногоНалога.Организация КАК Организация,
		|	РасчетТранспортногоНалога.ИФНС КАК ИФНС,
		|	РасчетТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
		|	РасчетТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
		|	РасчетТранспортногоНалога.ДатаРегистрационныхДанных КАК ДатаРегистрационныхДанных,
		|	РасчетТранспортногоНалога.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
		|	РасчетТранспортногоНалога.ИдентификационныйНомер КАК ИдентификационныйНомер,
		|	РасчетТранспортногоНалога.Марка КАК Марка,
		|	РасчетТранспортногоНалога.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	РасчетТранспортногоНалога.НалоговаяБаза КАК НалоговаяБаза,
		|	РасчетТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	РасчетТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
		|	РасчетТранспортногоНалога.НалоговаяСтавка КАК НалоговаяСтавка,
		|	РасчетТранспортногоНалога.СуммаНалога КАК СуммаНалога,
		|	РасчетТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
		|	РасчетТранспортногоНалога.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
		|	РасчетТранспортногоНалога.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
		|	РасчетТранспортногоНалога.ПроцентУменьшения КАК ПроцентУменьшения,
		|	РасчетТранспортногоНалога.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
		|	РасчетТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаНалоговойЛьготы,
		|	РасчетТранспортногоНалога.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
		|	РасчетТранспортногоНалога.СуммаОсвобожденияОтУплатыНалога КАК СуммаОсвобожденияОтУплатыНалога,
		|	РасчетТранспортногоНалога.ЭкологическийКласс КАК ЭкологическийКласс,
		|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
		|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
		|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
		|	РасчетТранспортногоНалога.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
		|	РасчетТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС КАК КоличествоЛетПрошедшихСГодаВыпускаТС,
		|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
		|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
		|	РасчетТранспортногоНалога.ЗарегистрированоВРеестреСистемыПлатон КАК ЗарегистрированоВРеестреСистемыПлатон,
		|	РасчетТранспортногоНалога.СуммаНалоговогоВычета КАК СуммаНалоговогоВычета,
		|	РасчетТранспортногоНалога.ДатаРегистрации КАК ДатаРегистрации,
		|	РасчетТранспортногоНалога.ДатаПрекращенияРегистрации КАК ДатаПрекращенияРегистрации
		|ИЗ
		|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
		|ГДЕ
		|	РасчетТранспортногоНалога.Активность = ИСТИНА
		|	И РасчетТранспортногоНалога.Организация = &Организация
		|	И РасчетТранспортногоНалога.ПериодРасчета = &ПериодРасчета";

		РасчетНалога = Запрос.Выполнить().Выгрузить();
		Для Каждого СтрокаРасчета Из РасчетНалога Цикл
			СтрокаРасчета.КодПоОКТМО = СокрЛП(СтрокаРасчета.КодПоОКТМО);
		КонецЦикла;

	КонецЕсли;

	Возврат РасчетНалога;

КонецФункции

Функция УчестьРасходыНаПлатон(ПараметрыРасчета, ТаблицаРасчетНалога, ДополнительныеПараметры = Неопределено) Экспорт

	ГодовойРасчет = КонецКвартала(ПараметрыРасчета.ПериодРасчета) = КонецГода(ПараметрыРасчета.ПериодРасчета);

	РасходыПлатон = ПолучитьРасходыНаПлатон(
						ПараметрыРасчета.Организация,
						ПараметрыРасчета.ПериодРасчета,
						ТаблицаРасчетНалога);

	Если ПараметрыРасчета.ПериодРасчета < ВнеоборотныеАктивыЛокализация.ДатаПрекращенияДействияЛьготПлатон() Тогда
		УчестьРасходыНаПлатонВРасчетеТранспортногоНалога(РасходыПлатон, ТаблицаРасчетНалога);
	КонецЕсли;

	СтрокиРасчетаНалога = ТаблицаРасчетНалога.НайтиСтроки(
		Новый Структура("ЗарегистрированоВРеестреСистемыПлатон", Истина));

	Для Каждого СтрокаРасчета Из СтрокиРасчетаНалога Цикл

		Если ГодовойРасчет Тогда
			СтрокаРасчета.СуммаНалогаКУплате = СтрокаРасчета.СуммаНалогаКУплате - СтрокаРасчета.СуммаНалоговогоВычета;
		Иначе
			СтрокаРасчета["СуммаАвансовыхПлатежей" + Формат(ПараметрыРасчета.ПериодРасчета, "ДФ='q''Кв'''")] = 0;
			СтрокаРасчета.СуммаНалогаКУплате = 0;
		КонецЕсли;

	КонецЦикла;

	Возврат РасходыПлатон;

КонецФункции

Процедура СформироватьТаблицуРегистрацияТранспортныхСредствСрезПоследних(ПараметрыРасчета, Период, ДополнительныеПараметры, ИмяТаблицы = "") Экспорт

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;

	ДополнительныеПоля = Новый Структура;
	ДополнительныеПоля.Вставить(
		"ЗарегистрированоВРеестреСистемыПлатон",
		"ЕСТЬNULL(ДанныеРегистра.ОсновноеСредство.ЗарегистрированоВРеестреСистемыПлатон, ЛОЖЬ)");
	
	ИмяИсходнойТаблицы = "ИсходнаяРегистрацияТранспортныхСредств_СрезПоследних";
	
	ТекстЗапроса = ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений(
					"ПараметрыНачисленияТранспортногоНалога",
					ИмяИсходнойТаблицы,
					ДополнительныеПоля);

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;

	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("Дата", Период);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();
	
	// В исправленных записях, требуется подменить период на дату начала исправления.
	// Получим её из табицы записей регистра через регистратор. 
	// Документы-исправления делают 2 записи.
	// 	Первая с периодом равным дате начала действия исправления и указанной датой исправления.
	// 	Вторая с периодом равным дате исправления и пустой датой исправления.
	// Обе строки содержат одинаковую информацию по измерениям и ресурсам, но отличаются периодом и датой исправления.
	// При получении среза последних после даты исправления требуется информация из первой строки.
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Записи.Регистратор КАК Регистратор,
	|	Записи.ОсновноеСредство КАК ОсновноеСредство,
	|	МИНИМУМ(Записи.Период) КАК Период,
	|	МАКСИМУМ(Записи.ДатаИсправления) КАК ДатаИсправления
	|ПОМЕСТИТЬ НачалоДействияПараметров
	|ИЗ
	|	РегистрСведений.ПараметрыНачисленияТранспортногоНалога КАК Записи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходнаяРегистрацияТранспортныхСредств_СрезПоследних КАК СрезПоследних
	|		ПО Записи.Регистратор = СрезПоследних.Регистратор
	|			И Записи.ОсновноеСредство = СрезПоследних.ОсновноеСредство
	|
	|СГРУППИРОВАТЬ ПО
	|	Записи.Регистратор,
	|	Записи.ОсновноеСредство
	|;
	|ВЫБРАТЬ
	|	НачалоДействияПараметров.Период КАК Период,
	|	СрезПоследних.*
	|ПОМЕСТИТЬ ИмяРезультирующейТаблицы
	|ИЗ
	|	ИсходнаяРегистрацияТранспортныхСредств_СрезПоследних КАК СрезПоследних
	|	ЛЕВОЕ СОЕДИНЕНИЕ НачалоДействияПараметров КАК НачалоДействияПараметров
	|	ПО СрезПоследних.Регистратор = НачалоДействияПараметров.Регистратор
	|		И СрезПоследних.ОсновноеСредство = НачалоДействияПараметров.ОсновноеСредство
	|;
	|УНИЧТОЖИТЬ ИсходнаяРегистрацияТранспортныхСредств_СрезПоследних;
	|УНИЧТОЖИТЬ НачалоДействияПараметров";
	
	ИмяРезультирующейТаблицы = ?(ИмяТаблицы <> "", ИмяТаблицы, "РегистрацияТранспортныхСредств_СрезПоследних");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяРезультирующейТаблицы", ИмяРезультирующейТаблицы);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();

КонецПроцедуры

Процедура СформироватьТаблицуРегистрацияТранспортныхСредствЗаписи(ПараметрыРасчета, Период, ДополнительныеПараметры, ИмяТаблицы = "") Экспорт

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;

	ДополнительныеПоля = Новый Структура;
	ДополнительныеПоля.Вставить("ЗарегистрированоВРеестреСистемыПлатон", "ЕСТЬNULL(ДанныеРегистра.ОсновноеСредство.ЗарегистрированоВРеестреСистемыПлатон, ЛОЖЬ)");
	
	ИмяИсходнойТаблицы = "ИсходнаяРегистрацияТранспортныхСредств_Записи";
	
	ТекстЗапроса = ТекстЗапросаЗаписиРегистраСУчетомИсправлений(
					"ПараметрыНачисленияТранспортногоНалога",
					ИмяИсходнойТаблицы,,
					ДополнительныеПоля);

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;

	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("НачалоПериода", '000101010000');
	Запрос.УстановитьПараметр("КонецПериода", Период);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();
	
	// Соберем результирующую таблицу, спрятав исправления.
	// В исправленных записях, требуется подменить период на дату начала исправления.
	// Получим её через регистратор.
	// Документы-исправления делают 2 записи.
	// 	Первая с периодом равным дате начала действия исправления и указанной датой исправления.
	// 	Вторая с периодом равным дате исправления и пустой датой исправления.
	// Обе строки содержат одинаковую информацию по измерениям и ресурсам, но отличаются периодом и датой исправления.
	// Требуется информация из первой строки.
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИсходныеДанные.Регистратор               КАК Регистратор,
	|	ИсходныеДанные.ОсновноеСредство          КАК ОсновноеСредство,
	|	МИНИМУМ(ИсходныеДанные.Период)           КАК Период,
	|	МАКСИМУМ(ИсходныеДанные.ДатаИсправления) КАК ДатаИсправления
	|ПОМЕСТИТЬ ФильтрПервыхЗаписей
	|ИЗ
	|	ИсходнаяРегистрацияТранспортныхСредств_Записи КАК ИсходныеДанные
	|СГРУППИРОВАТЬ ПО
	|	ИсходныеДанные.Регистратор,
	|	ИсходныеДанные.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходныеДанные.*
	|ПОМЕСТИТЬ ИмяРезультирующейТаблицы
	|ИЗ
	|	ИсходнаяРегистрацияТранспортныхСредств_Записи КАК ИсходныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФильтрПервыхЗаписей КАК ФильтрПервыхЗаписей
	|		ПО ФильтрПервыхЗаписей.Регистратор = ИсходныеДанные.Регистратор
	|		И ФильтрПервыхЗаписей.ОсновноеСредство = ИсходныеДанные.ОсновноеСредство
	|		И ФильтрПервыхЗаписей.Период = ИсходныеДанные.Период
	|		И ФильтрПервыхЗаписей.ДатаИсправления = ИсходныеДанные.ДатаИсправления		
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИсходнаяРегистрацияТранспортныхСредств_Записи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ФильтрПервыхЗаписей";
	
	ИмяРезультирующейТаблицы = ?(ИмяТаблицы <> "", ИмяТаблицы, "РегистрацияТранспортныхСредств_Записи");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяРезультирующейТаблицы", ИмяРезультирующейТаблицы);
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.Выполнить();

КонецПроцедуры

Функция КодыВидовИКатегорииТранспортныхСредств() Экспорт

	Макет = Документы.ПараметрыНачисленияТранспортногоНалога.ПолучитьМакет("КодыВидовИКатегорииТС");
	КодыВидовИКатегорииТС = ОбщегоНазначения.ПрочитатьXMLВТаблицу(Макет.ПолучитьТекст()).Данные;

	Возврат КодыВидовИКатегорииТС;

КонецФункции

Функция ПолучитьАвансовыйРасчетПоТранспортномуНалогуСУчетомИсправлений(Организация, ПериодРасчета, ДополнительныеПараметры)

	ТаблицаРасчетНалога = РасчетИмущественныхНалогов.ПолучитьРасчетПоТранспортномуНалогу(Организация, ПериодРасчета, ДополнительныеПараметры);

	Для Каждого СтрокаРасчета Из ТаблицаРасчетНалога.Налог Цикл
		СтрокаРасчета.КодПоОКТМО = СокрЛП(СтрокаРасчета.КодПоОКТМО);
	КонецЦикла;

	Возврат ТаблицаРасчетНалога.Налог;

КонецФункции

Функция ПустаяТаблицаРасходыНаПлатон()

	РасходыНаПлатон = Новый ТаблицаЗначений;

	РасходыНаПлатон.Колонки.Добавить("ОтчетОператора", Новый ОписаниеТипов("ДокументСсылка.ОтчетОператораСистемыПлатон"));
	РасходыНаПлатон.Колонки.Добавить("ОсновноеСредство", Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
	РасходыНаПлатон.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	РасходыНаПлатон.Колонки.Добавить("АналитикаРасходов", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);
	РасходыНаПлатон.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	РасходыНаПлатон.Колонки.Добавить("НаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	РасходыНаПлатон.Колонки.Добавить("СуммаНУДт", РаботаСКурсамиВалют.ОписаниеТипаДенежногоПоля());
	РасходыНаПлатон.Колонки.Добавить("СуммаНУКт", РаботаСКурсамиВалют.ОписаниеТипаДенежногоПоля());
	РасходыНаПлатон.Колонки.Добавить("База", РаботаСКурсамиВалют.ОписаниеТипаДенежногоПоля());

	Возврат РасходыНаПлатон;

КонецФункции

Функция ПолучитьРасходыНаПлатон(Организация, ПериодРасчета, ТаблицаРасчетТранспортногоНалога, ДополнительныеПараметры = Неопределено)

	ГодовойРасчет = КонецКвартала(ПериодРасчета) = КонецГода(ПериодРасчета);
	ДатаКонцаПериодаОтчета = КонецКвартала(ПериодРасчета);

	СтруктураПоиска = Новый Структура("УплачиваютсяАвансы", Ложь);
	СписокОСБезАвансов = ТаблицаРасчетТранспортногоНалога.Скопировать(СтруктураПоиска).ВыгрузитьКолонку("ОсновноеСредство");
	УплачиваютсяАвансы = СписокОСБезАвансов.Количество() = 0;

	СписокЗапросов = Новый Массив;

	Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(РасчетыСПоставщиками.Период, КВАРТАЛ) КАК Период,
		|
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
		|			ТОГДА РасчетыСПоставщиками.РасчетныйДокумент
		|		ИНАЧЕ РасчетыСПоставщиками.ДокументРегистратор
		|	КОНЕЦ КАК ОтчетОператора,
		|
		|	СУММА(РасчетыСПоставщиками.ДолгРегл) КАК СуммаПлатежа,
		|
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСПоставщиками.Период МЕЖДУ &НачалоКвартала И &КонецКвартала
		|				ТОГДА РасчетыСПоставщиками.ДолгРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПлатежаЗаКвартал
		|
		|ПОМЕСТИТЬ ФактическиеПлатежи
		|
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыСПоставщиками
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон КАК ОтчетОператораСистемыПлатон
		|		ПО ОтчетОператораСистемыПлатон.Ссылка = РасчетыСПоставщиками.РасчетныйДокумент
		|			ИЛИ ОтчетОператораСистемыПлатон.Ссылка = РасчетыСПоставщиками.ДокументРегистратор
		|
		|ГДЕ
		|	РасчетыСПоставщиками.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|
		|	И (ОтчетОператораСистемыПлатон.Дата < &ДатаПрекращенияДействияЛьготПлатон
		|		ИЛИ &ПериодРасчета < &ДатаПрекращенияДействияЛьготПлатон)
		|
		|	И РасчетыСПоставщиками.АналитикаУчетаПоПартнерам.Организация = &Организация
		|	И РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		|	И РасчетыСПоставщиками.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаПоставщику),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПогашениеЗадолженностиПоставщику))
		|
		|	И РасчетыСПоставщиками.Активность
		|	И (РасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
		|			ИЛИ РасчетыСПоставщиками.ДокументРегистратор ССЫЛКА Документ.ОтчетОператораСистемыПлатон)
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(РасчетыСПоставщиками.Период, КВАРТАЛ),
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
		|			ТОГДА РасчетыСПоставщиками.РасчетныйДокумент
		|		ИНАЧЕ РасчетыСПоставщиками.ДокументРегистратор
		|	КОНЕЦ
		|
		|ИМЕЮЩИЕ
		|	СУММА(РасчетыСПоставщиками.ДолгРегл) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОтчетОператора";

		СписокЗапросов.Добавить(ТекстЗапроса);

	Иначе

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(РасчетыСПоставщиками.Период, КВАРТАЛ) КАК Период,
		|
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
		|			ТОГДА РасчетыСПоставщиками.РасчетныйДокумент
		|		ИНАЧЕ РасчетыСПоставщиками.Регистратор
		|	КОНЕЦ КАК ОтчетОператора,
		|
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА РасчетыСПоставщиками.ДолгРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ + ВЫБОР
		|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА РасчетыСПоставщиками.ПредоплатаРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПлатежа,
		|
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСПоставщиками.Период < &НачалоКвартала
		|					ИЛИ РасчетыСПоставщиками.Период > &КонецКвартала
		|				ТОГДА 0
		|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА РасчетыСПоставщиками.ДолгРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ + ВЫБОР
		|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА РасчетыСПоставщиками.ПредоплатаРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПлатежаЗаКвартал
		|
		|ПОМЕСТИТЬ ФактическиеПлатежи
		|
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщиками
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон КАК ОтчетОператораСистемыПлатон
		|		ПО ОтчетОператораСистемыПлатон.Ссылка = РасчетыСПоставщиками.РасчетныйДокумент
		|			ИЛИ ОтчетОператораСистемыПлатон.Ссылка = РасчетыСПоставщиками.Регистратор
		|
		|ГДЕ
		|	РасчетыСПоставщиками.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|
		|	И (ОтчетОператораСистемыПлатон.Дата < &ДатаПрекращенияДействияЛьготПлатон
		|		ИЛИ &ПериодРасчета < &ДатаПрекращенияДействияЛьготПлатон)
		|
		|	И РасчетыСПоставщиками.АналитикаУчетаПоПартнерам.Организация = &Организация
		|
		|	И РасчетыСПоставщиками.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности))
		|
		|	И РасчетыСПоставщиками.Активность
		|	И (РасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
		|			ИЛИ РасчетыСПоставщиками.Регистратор ССЫЛКА Документ.ОтчетОператораСистемыПлатон)
		|
		|СГРУППИРОВАТЬ ПО
		|
		|	НАЧАЛОПЕРИОДА(РасчетыСПоставщиками.Период, КВАРТАЛ),
		|
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
		|			ТОГДА РасчетыСПоставщиками.РасчетныйДокумент
		|		ИНАЧЕ РасчетыСПоставщиками.Регистратор
		|	КОНЕЦ
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА РасчетыСПоставщиками.ДолгРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ + ВЫБОР
		|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА РасчетыСПоставщиками.ПредоплатаРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОтчетОператора";

		СписокЗапросов.Добавить(ТекстЗапроса);

	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетТранспортногоНалога.ПериодРасчета КАК Период,
	|	РасчетТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(РасчетТранспортногоНалога.СуммаПлатыОператоруСистемыПлатон) КАК СуммаПлатежа
	|ИЗ
	|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
	|ГДЕ
	|	РасчетТранспортногоНалога.ПериодРасчета >= &НачалоПериода
	|	И РасчетТранспортногоНалога.ПериодРасчета < &НачалоКвартала
	|	И РасчетТранспортногоНалога.Организация = &Организация
	|	И РасчетТранспортногоНалога.Активность
	|	И &ГодовойРасчет
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетТранспортногоНалога.ПериодРасчета,
	|	РасчетТранспортногоНалога.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФактическиеПлатежи.Период                 КАК Период,
	|	ФактическиеПлатежи.ОтчетОператора         КАК ОтчетОператора,
	|	ФактическиеПлатежи.СуммаПлатежа           КАК СуммаПлатежа,
	|	ФактическиеПлатежи.СуммаПлатежаЗаКвартал  КАК СуммаПлатежаЗаКвартал
	|ИЗ
	|	ФактическиеПлатежи КАК ФактическиеПлатежи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операция.Ссылка                           КАК ОтчетОператора,
	|	РасходыНаПлатон.ОсновноеСредство          КАК ОсновноеСредство,
	|	РасходыНаПлатон.Подразделение             КАК Подразделение,
	|	РасходыНаПлатон.СтатьяРасходов            КАК СтатьяРасходов,
	|	РасходыНаПлатон.АналитикаРасходов         КАК АналитикаРасходов,
	|	РасходыНаПлатон.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	0                                         КАК СуммаНУДт,
	|	0                                         КАК СуммаНУКт,
	|	РасходыНаПлатон.Сумма                     КАК База,
	|	ВЫБОР
	|		КОГДА РасходыНаПлатон.ОсновноеСредство В (&СписокОСБезАвансов)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УплачиваютсяАвансы
	|ИЗ
	|	Документ.ОтчетОператораСистемыПлатон КАК Операция
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
	|		ПО РасходыНаПлатон.Ссылка = Операция.Ссылка
	|
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Ссылка В
	|			(ВЫБРАТЬ
	|				ФактическиеПлатежи.ОтчетОператора
	|			ИЗ
	|				ФактическиеПлатежи КАК ФактическиеПлатежи)";

	СписокЗапросов.Добавить(ТекстЗапроса);

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("СледующийМесяц", ДатаКонцаПериодаОтчета + 1);
	Запрос.УстановитьПараметр("ПериодРасчета",  ПериодРасчета);
	Запрос.УстановитьПараметр("ГодовойРасчет",  ГодовойРасчет);
	Запрос.УстановитьПараметр("НачалоКвартала", НачалоКвартала(ПериодРасчета));
	Запрос.УстановитьПараметр("КонецКвартала",  КонецКвартала(ПериодРасчета));
	Запрос.УстановитьПараметр("НачалоПериода",  ?(НЕ УплачиваютсяАвансы И ГодовойРасчет, НачалоГода(ПериодРасчета), НачалоКвартала(ПериодРасчета)));
	Запрос.УстановитьПараметр("КонецПериода",   ?(НЕ УплачиваютсяАвансы И ГодовойРасчет, КонецГода(ПериодРасчета), КонецКвартала(ПериодРасчета)));
	Запрос.УстановитьПараметр("ДатаПрекращенияДействияЛьготПлатон", ВнеоборотныеАктивыЛокализация.ДатаПрекращенияДействияЛьготПлатон());
	Запрос.УстановитьПараметр("СписокОСБезАвансов", СписокОСБезАвансов);

	Результат = Запрос.ВыполнитьПакет();

	ТаблицаРасходыНаПлатон = ПустаяТаблицаРасходыНаПлатон();

	Если Не Результат[Результат.ВГраница()].Пустой() Тогда

		ТаблицаРасходыНаПлатон.Колонки.Добавить("УплачиваютсяАвансы", Новый ОписаниеТипов("Булево"));

		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат[Результат.ВГраница()].Выгрузить(), ТаблицаРасходыНаПлатон);
		ТаблицаРасходыНаПлатон.Индексы.Добавить("ОтчетОператора");
		ТаблицаРасходыНаПлатон.Индексы.Добавить("ОсновноеСредство");

		УчтенныеПлатежи = Результат[Результат.ВГраница() - 2].Выгрузить();
		УчтенныеПлатежи.Индексы.Добавить("ОсновноеСредство");

		// 1. Распределение платежа по ОС.
		ВыборкаПлатежи = Результат[Результат.ВГраница()-1].Выбрать();
		Пока ВыборкаПлатежи.Следующий() Цикл

			СтруктураПоиска = Новый Структура("ОтчетОператора");
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаПлатежи);
			СписокСтрок = ТаблицаРасходыНаПлатон.НайтиСтроки(СтруктураПоиска);
			КоэффициентыОплаты = Новый Массив;
			Для каждого Расход Из СписокСтрок Цикл
				КоэффициентыОплаты.Добавить(Расход.База);
			КонецЦикла;

			РаспределениеПлатежа = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(
										ВыборкаПлатежи.СуммаПлатежа, КоэффициентыОплаты);

			РаспределениеПлатежаЗаКвартал = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(
										ВыборкаПлатежи.СуммаПлатежаЗаКвартал, КоэффициентыОплаты);

			СтрокиКУдалению = Новый Массив;
			Для Сч = 0 По КоэффициентыОплаты.ВГраница() Цикл
				Расход = СписокСтрок[Сч];

				Если Расход.УплачиваютсяАвансы Тогда
					Расход.СуммаНУДт = ?(РаспределениеПлатежаЗаКвартал <> Неопределено, РаспределениеПлатежаЗаКвартал[Сч], 0);
				Иначе
					Расход.СуммаНУДт = РаспределениеПлатежа[Сч];
				КонецЕсли;

				// Нужно уменьшить сумму оплат на суммы, которые были учтены при авансовых платежах по налогу.
				Если ГодовойРасчет Тогда
					СтруктураПоиска = Новый Структура("ОсновноеСредство", Расход.ОсновноеСредство);
					СписокСтрокУчтенныхПлатежей = УчтенныеПлатежи.НайтиСтроки(СтруктураПоиска);
					Для каждого СтрокаУчтенныеПлатежи Из СписокСтрокУчтенныхПлатежей Цикл
						Если НачалоКвартала(СтрокаУчтенныеПлатежи.Период) = ВыборкаПлатежи.Период
							И СтрокаУчтенныеПлатежи.СуммаПлатежа > 0 Тогда
							СуммаПлатежа = Мин(Расход.СуммаНУДт, СтрокаУчтенныеПлатежи.СуммаПлатежа);
							Расход.СуммаНУДт = Расход.СуммаНУДт - СуммаПлатежа;
							СтрокаУчтенныеПлатежи.СуммаПлатежа = СтрокаУчтенныеПлатежи.СуммаПлатежа - СуммаПлатежа;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;

				Расход.СуммаНУКт = Расход.СуммаНУДт;

				Если Расход.СуммаНУДт = 0 Тогда
					СтрокиКУдалению.Добавить(Расход);
				КонецЕсли;
			КонецЦикла;

			Для каждого Расход Из СтрокиКУдалению Цикл
				ТаблицаРасходыНаПлатон.Удалить(Расход);
			КонецЦикла;

		КонецЦикла;

	КонецЕсли;

	Возврат ТаблицаРасходыНаПлатон;

КонецФункции

Процедура УчестьРасходыНаПлатонВРасчетеТранспортногоНалога(РасходыПлатон, ТаблицаРасчетТранспортногоНалога)

	Если РасходыПлатон = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТаблицаРасчетТранспортногоНалога.Колонки.Добавить(
		"СуммаНалогаДоПримененияТекущегоВычета", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));

	СтрокиРасчетаНалога = ТаблицаРасчетТранспортногоНалога.НайтиСтроки(
		Новый Структура("ЗарегистрированоВРеестреСистемыПлатон", Истина));

	Для Каждого СтрокаРасчетаНалога Из СтрокиРасчетаНалога Цикл
		СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета =
			СтрокаРасчетаНалога.СуммаНалогаКУплате - СтрокаРасчетаНалога.СуммаНалоговогоВычета;
	КонецЦикла;

	ПоляПоиска = "ОсновноеСредство, ЗарегистрированоВРеестреСистемыПлатон";
	ТаблицаРасчетТранспортногоНалога.Индексы.Добавить(ПоляПоиска);

	Поиск = Новый Структура(ПоляПоиска);
	Поиск.ЗарегистрированоВРеестреСистемыПлатон = Истина;

	Для Каждого Расход Из РасходыПлатон Цикл

		Поиск.ОсновноеСредство = Расход.ОсновноеСредство;

		СтрокиРасчетаНалога = ТаблицаРасчетТранспортногоНалога.НайтиСтроки(Поиск);

		Для Каждого СтрокаРасчетаНалога Из СтрокиРасчетаНалога Цикл

			Разность = СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета - Расход.СуммаНУДт;
			Если Разность >= 0 Тогда
				СтрокаРасчетаНалога.СуммаНалоговогоВычета = СтрокаРасчетаНалога.СуммаНалоговогоВычета + Расход.СуммаНУДт;
				СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета = Разность;
				Расход.СуммаНУДт = 0;
			Иначе
				СтрокаРасчетаНалога.СуммаНалоговогоВычета =
					СтрокаРасчетаНалога.СуммаНалоговогоВычета + СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета;
				СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета = 0;
				Расход.СуммаНУДт = -Разность;
			КонецЕсли;

		КонецЦикла;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ЗемельныйНалог

Процедура СформироватьТаблицуРегистрацияЗемельныхУчастковСрезПоследних(ПараметрыРасчета, Период, ДополнительныеПараметры, ИмяТаблицы = "", УсловияЗапроса = "") Экспорт

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ОсновноеСредство КАК ОсновноеСредство,
	|	ДанныеРегистра.ВключатьВНалоговуюБазу КАК ВключатьВНалоговуюБазу,
	|	ДанныеРегистра.ДатаРегистрацииПравНаОбъектНедвижимости КАК ДатаРегистрацииПравНаОбъектНедвижимости,
	|	ДанныеРегистра.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ДанныеРегистра.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ДанныеРегистра.ДоляНеОблагаемойНалогомПлощадиЗнаменатель КАК ДоляНеОблагаемойНалогомПлощадиЗнаменатель,
	|	ДанныеРегистра.ДоляНеОблагаемойНалогомПлощадиЧислитель КАК ДоляНеОблагаемойНалогомПлощадиЧислитель,
	|	ДанныеРегистра.ЖилищноеСтроительство КАК ЖилищноеСтроительство,
	|	ДанныеРегистра.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	ДанныеРегистра.КадастровыйНомер КАК КадастровыйНомер,
	|	ДанныеРегистра.КБК КАК КБК,
	|	ДанныеРегистра.КодКатегорииЗемель КАК КодКатегорииЗемель,
	|	ДанныеРегистра.КодПоОКАТО КАК КодПоОКАТО,
	|	ДанныеРегистра.КодПоОКТМО КАК КодПоОКТМО,
	|	ДанныеРегистра.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ДанныеРегистра.НалоговыйОрган КАК НалоговыйОрган,
	|	ДанныеРегистра.НеОблагаемаяНалогомСумма КАК НеОблагаемаяНалогомСумма,
	|	ДанныеРегистра.ОбщаяСобственность КАК ОбщаяСобственность,
	|	ДанныеРегистра.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	ДанныеРегистра.СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка,
	|	ДанныеРегистра.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	ДанныеРегистра.Комментарий КАК Комментарий,
	|	ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе КАК ОснованиеЛьготыПоНалоговойБазе,
	|	ДанныеРегистра.НачалоДействияЛьготыПоНалоговойБазе КАК НачалоДействияЛьготыПоНалоговойБазе,
	|	ДанныеРегистра.ОкончаниеДействияЛьготыПоНалоговойБазе КАК ОкончаниеДействияЛьготыПоНалоговойБазе,
	|	ДанныеРегистра.ОснованиеЛьготыСнижениеСтавки КАК ОснованиеЛьготыСнижениеСтавки,
	|	ДанныеРегистра.НачалоДействияЛьготыСнижениеСтавки КАК НачалоДействияЛьготыСнижениеСтавки,
	|	ДанныеРегистра.ОкончаниеДействияЛьготыСнижениеСтавки КАК ОкончаниеДействияЛьготыСнижениеСтавки,
	|	ДанныеРегистра.ОснованиеЛьготыСнижениеСуммыНалога КАК ОснованиеЛьготыСнижениеСуммыНалога,
	|	ДанныеРегистра.НачалоДействияЛьготыСнижениеСуммыНалога КАК НачалоДействияЛьготыСнижениеСуммыНалога,
	|	ДанныеРегистра.ОкончаниеДействияЛьготыСнижениеСуммыНалога КАК ОкончаниеДействияЛьготыСнижениеСуммыНалога,
	|	ДанныеРегистра.ВидЗаписи КАК ВидЗаписи,
	|	&УстаревшиеПоля,
	|	ДанныеРегистра.ДатаИсправления КАК ДатаИсправления
	|ПОМЕСТИТЬ РегистрацияЗемельныхУчастков_СрезПоследних
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ДанныеРегистра.Регистратор) КАК Регистратор,
	|		ДанныеРегистра_СрезПериодИсправления.Период КАК Период,
	|		ДанныеРегистра_СрезПериодИсправления.Организация КАК Организация,
	|		ДанныеРегистра_СрезПериодИсправления.ОсновноеСредство КАК ОсновноеСредство
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МАКСИМУМ(ЕСТЬNULL(НАЧАЛОПЕРИОДА(ДанныеРегистраИсправление.ДатаИсправления, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаИсправления,
	|			ДанныеРегистра_СрезПериод.Период КАК Период,
	|			ДанныеРегистра_СрезПериод.Организация КАК Организация,
	|			ДанныеРегистра_СрезПериод.ОсновноеСредство КАК ОсновноеСредство
	|		ИЗ
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(ДанныеРегистра.Период) КАК Период,
	|				ДанныеРегистра.Организация КАК Организация,
	|				ДанныеРегистра.ОсновноеСредство КАК ОсновноеСредство
	|			ИЗ
	|				(ВЫБРАТЬ
	|					ДанныеРегистра.Период КАК Период,
	|					ДанныеРегистра.Организация КАК Организация,
	|					ДанныеРегистра.ОсновноеСредство КАК ОсновноеСредство
	|				ИЗ
	|					РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ДанныеРегистра
	|				ГДЕ
	|					ДанныеРегистра.Период <= &Дата
	|					И ДанныеРегистра.ДатаИсправления <= &ДатаДокумента
	|					И ДанныеРегистра.Организация = &Организация
	|					И (ДанныеРегистра.ОсновноеСредство В (&СписокОС)
	|							ИЛИ &БезОтбораОС)
	|					И ДанныеРегистра.Активность) КАК ДанныеРегистра
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ДанныеРегистра.Организация,
	|				ДанныеРегистра.ОсновноеСредство) КАК ДанныеРегистра_СрезПериод
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ДанныеРегистраИсправление
	|				ПО (НАЧАЛОПЕРИОДА(ДанныеРегистраИсправление.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеРегистра_СрезПериод.Период, ДЕНЬ))
	|					И (ДанныеРегистраИсправление.Организация = ДанныеРегистра_СрезПериод.Организация)
	|					И (ДанныеРегистраИсправление.ОсновноеСредство = ДанныеРегистра_СрезПериод.ОсновноеСредство)
	|					И (ДанныеРегистраИсправление.ДатаИсправления <= &ДатаДокумента)
	|					И (ДанныеРегистраИсправление.ДатаИсправления <> ДАТАВРЕМЯ(1, 1, 1))
	|					И (ДанныеРегистраИсправление.Активность)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДанныеРегистра_СрезПериод.Период,
	|			ДанныеРегистра_СрезПериод.Организация,
	|			ДанныеРегистра_СрезПериод.ОсновноеСредство) КАК ДанныеРегистра_СрезПериодИсправления
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ДанныеРегистра
	|			ПО (ДанныеРегистра.Организация = ДанныеРегистра_СрезПериодИсправления.Организация)
	|				И (ДанныеРегистра.ОсновноеСредство = ДанныеРегистра_СрезПериодИсправления.ОсновноеСредство)
	|				И (НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеРегистра_СрезПериодИсправления.Период, ДЕНЬ))
	|				И (ДанныеРегистра.ДатаИсправления = ДанныеРегистра_СрезПериодИсправления.ДатаИсправления)
	|				И (ДанныеРегистра.Активность)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистра_СрезПериодИсправления.Период,
	|		ДанныеРегистра_СрезПериодИсправления.Организация,
	|		ДанныеРегистра_СрезПериодИсправления.ОсновноеСредство) КАК ДанныеРегистра_СрезРегистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ДанныеРегистра
	|		ПО (ДанныеРегистра.Регистратор = ДанныеРегистра_СрезРегистратор.Регистратор)
	|			И (НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеРегистра_СрезРегистратор.Период, ДЕНЬ))
	|			И (ДанныеРегистра.Организация = ДанныеРегистра_СрезРегистратор.Организация)
	|			И (ДанныеРегистра.ОсновноеСредство = ДанныеРегистра_СрезРегистратор.ОсновноеСредство)
	|			И (ДанныеРегистра.Активность)
	|
	|ГДЕ
	|	&УсловияЗапроса
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация";
	
	Если НЕ ПустаяСтрока(ИмяТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ РегистрацияЗемельныхУчастков_СрезПоследних", "ПОМЕСТИТЬ " + ИмяТаблицы);
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(УсловияЗапроса) Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
									|	&УсловияЗапроса",
									"ГДЕ
									|	" + УсловияЗапроса);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
									|	&УсловияЗапроса",
									"");
	КонецЕсли;
	
	// За периоды до 2020 в расчете применялись устаревшие поля. Добавим их в запрос.
	Если Период < РасчетИмущественныхНалоговКлиентСервер.НачалоПримененияНовогоРасчетаЗемельногоНалога() Тогда
		ТекстЗамены = 
		"ДанныеРегистра.ДатаНачалаПроектированияДо2008 КАК ДатаНачалаПроектирования,
		|	ВЫБОР
		|		КОГДА ДанныеРегистра.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395До2020 <> """"
		|			ТОГДА ДанныеРегистра.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395До2020
		|		КОГДА ЕСТЬNULL(ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
		|		И НЕ ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.УстановленаМестнымНормативнымАктом
		|			ТОГДА ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.КодЛьготы
		|		ИНАЧЕ ДанныеРегистра.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395До2020
		|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
		|	ДанныеРегистра.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391До2020 КАК
		|		КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,  
		|	ДанныеРегистра.УменьшениеНалоговойБазыПоСтатье391До2020 КАК УменьшениеНалоговойБазыПоСтатье391, 
		|	ЕСТЬNULL(ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|		ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму) КАК
		|		УменьшениеНалоговойБазыНаСумму, 
		|	ВЫБОР
		|		КОГДА
		|			ДанныеРегистра.НалоговаяЛьготаПоНалоговойБазеДо2020 <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ПустаяСсылка)
		|			ТОГДА ДанныеРегистра.НалоговаяЛьготаПоНалоговойБазеДо2020
		|		КОГДА ЕСТЬNULL(ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
		|		И ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.УстановленаМестнымНормативнымАктом
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияМестное)
		|		КОГДА ЕСТЬNULL(ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияПоСтатье395)
		|		КОГДА ЕСТЬNULL(ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ДоляНеоблагаемойПлощади)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеОблагаемаяНалогомПлощадь)
		|		КОГДА ЕСТЬNULL(ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.УменьшениеНалоговойБазы)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ПустаяСсылка)
		|	КОНЕЦ КАК НалоговаяЛьготаПоНалоговойБазе, 
		|	ВЫБОР
		|		КОГДА ДанныеРегистра.ПроцентУменьшенияСуммыНалогаДо2020 <> 0
		|			ТОГДА ДанныеРегистра.ПроцентУменьшенияСуммыНалогаДо2020
		|		КОГДА ЕСТЬNULL(ДанныеРегистра.ОснованиеЛьготыСнижениеСуммыНалога.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент)
		|			ТОГДА ДанныеРегистра.ОснованиеЛьготыСнижениеСуммыНалога.ПроцентУменьшения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПроцентУменьшенияСуммыНалога
		|";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УстаревшиеПоля", ТекстЗамены);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
			|	&УстаревшиеПоля,", "");
	КонецЕсли;

	Если ДополнительныеПараметры <> Неопределено
				И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда
		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;
	Иначе
		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("Дата", Период);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьТаблицуРегистрацияЗемельныхУчастковЗаписи(ПараметрыРасчета, Период, ДополнительныеПараметры, ИмяТаблицы = "") Экспорт

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ОсновноеСредство КАК ОсновноеСредство,
	|	ДанныеРегистра.ВключатьВНалоговуюБазу КАК ВключатьВНалоговуюБазу,
	|	ДанныеРегистра.ДатаРегистрацииПравНаОбъектНедвижимости КАК ДатаРегистрацииПравНаОбъектНедвижимости,
	|	ДанныеРегистра.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ДанныеРегистра.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ДанныеРегистра.ДоляНеОблагаемойНалогомПлощадиЗнаменатель КАК ДоляНеОблагаемойНалогомПлощадиЗнаменатель,
	|	ДанныеРегистра.ДоляНеОблагаемойНалогомПлощадиЧислитель КАК ДоляНеОблагаемойНалогомПлощадиЧислитель,
	|	ДанныеРегистра.ЖилищноеСтроительство КАК ЖилищноеСтроительство,
	|	ДанныеРегистра.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	ДанныеРегистра.КадастровыйНомер КАК КадастровыйНомер,
	|	ДанныеРегистра.КБК КАК КБК,
	|	ДанныеРегистра.КодКатегорииЗемель КАК КодКатегорииЗемель,
	|	ДанныеРегистра.КодПоОКАТО КАК КодПоОКАТО,
	|	ДанныеРегистра.КодПоОКТМО КАК КодПоОКТМО,
	|	ДанныеРегистра.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ДанныеРегистра.НалоговыйОрган КАК НалоговыйОрган,
	|	ДанныеРегистра.НеОблагаемаяНалогомСумма КАК НеОблагаемаяНалогомСумма,
	|	ДанныеРегистра.ОбщаяСобственность КАК ОбщаяСобственность,
	|	ДанныеРегистра.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	ДанныеРегистра.СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка,
	|	ДанныеРегистра.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	ДанныеРегистра.Комментарий КАК Комментарий,
	|	ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе КАК ОснованиеЛьготыПоНалоговойБазе,
	|	ДанныеРегистра.НачалоДействияЛьготыПоНалоговойБазе КАК НачалоДействияЛьготыПоНалоговойБазе,
	|	ДанныеРегистра.ОкончаниеДействияЛьготыПоНалоговойБазе КАК ОкончаниеДействияЛьготыПоНалоговойБазе,
	|	ДанныеРегистра.ОснованиеЛьготыСнижениеСтавки КАК ОснованиеЛьготыСнижениеСтавки,
	|	ДанныеРегистра.НачалоДействияЛьготыСнижениеСтавки КАК НачалоДействияЛьготыСнижениеСтавки,
	|	ДанныеРегистра.ОкончаниеДействияЛьготыСнижениеСтавки КАК ОкончаниеДействияЛьготыСнижениеСтавки,
	|	ДанныеРегистра.ОснованиеЛьготыСнижениеСуммыНалога КАК ОснованиеЛьготыСнижениеСуммыНалога,
	|	ДанныеРегистра.НачалоДействияЛьготыСнижениеСуммыНалога КАК НачалоДействияЛьготыСнижениеСуммыНалога,
	|	ДанныеРегистра.ОкончаниеДействияЛьготыСнижениеСуммыНалога КАК ОкончаниеДействияЛьготыСнижениеСуммыНалога,
	|	ДанныеРегистра.ВидЗаписи КАК ВидЗаписи,
	|	&УстаревшиеПоля,
	|	ДанныеРегистра.ДатаИсправления КАК ДатаИсправления
	|ПОМЕСТИТЬ РегистрацияЗемельныхУчастков_Записи
	|ИЗ
	|	РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ДанныеРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ДанныеРегистраИсправления
	|		ПО (НАЧАЛОПЕРИОДА(ДанныеРегистраИсправления.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ))
	|			И (ДанныеРегистраИсправления.Организация = ДанныеРегистра.Организация)
	|			И (ДанныеРегистраИсправления.ОсновноеСредство = ДанныеРегистра.ОсновноеСредство)
	|			И (ДанныеРегистраИсправления.Регистратор <> ДанныеРегистра.Регистратор)
	|			И (ДанныеРегистраИсправления.ДатаИсправления <= &ДатаДокумента
	|				ИЛИ &ДатаДокумента = ДАТАВРЕМЯ(1, 1, 1))
	|			И (ДанныеРегистраИсправления.ДатаИсправления <> ДАТАВРЕМЯ(1, 1, 1))
	|			И (ДанныеРегистраИсправления.Активность)
	|ГДЕ
	|	(ДанныеРегистра.Период >= &НачалоПериода
	|			ИЛИ &НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
	|	И (ДанныеРегистра.Период <= &КонецПериода
	|			ИЛИ &КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
	|	И (ДанныеРегистра.ДатаИсправления <= &ДатаДокумента
	|			ИЛИ &ДатаДокумента = ДАТАВРЕМЯ(1, 1, 1))
	|	И ДанныеРегистра.Организация = &Организация
	|	И (ДанныеРегистра.ОсновноеСредство В (&СписокОС)
	|			ИЛИ &БезОтбораОС)
	|	И ДанныеРегистра.Активность
	|	И ДанныеРегистраИсправления.Регистратор ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация";
	
	Если Не ПустаяСтрока(ИмяТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ РегистрацияЗемельныхУчастков_Записи", "ПОМЕСТИТЬ " + ИмяТаблицы);
	КонецЕсли;
	
	// За периоды до 2020 в расчете применялись устаревшие поля. Добавим их в запрос.
	Если Период < РасчетИмущественныхНалоговКлиентСервер.НачалоПримененияНовогоРасчетаЗемельногоНалога() Тогда
		ТекстЗамены = 
		   "ДанныеРегистра.ДатаНачалаПроектированияДо2008 КАК ДатаНачалаПроектирования,
		|	ВЫБОР
		|		КОГДА ДанныеРегистра.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395До2020 <> """"
		|			ТОГДА ДанныеРегистра.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395До2020
		|		КОГДА ЕСТЬNULL(ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
		|		И НЕ ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.УстановленаМестнымНормативнымАктом
		|			ТОГДА ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.КодЛьготы
		|		ИНАЧЕ ДанныеРегистра.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395До2020
		|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
		|	ДанныеРегистра.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391До2020 КАК
		|		КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
		|	ДанныеРегистра.УменьшениеНалоговойБазыПоСтатье391До2020 КАК УменьшениеНалоговойБазыПоСтатье391,
		|	ЕСТЬNULL(ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|		ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму) КАК
		|		УменьшениеНалоговойБазыНаСумму,
		|	ВЫБОР
		|		КОГДА
		|			ДанныеРегистра.НалоговаяЛьготаПоНалоговойБазеДо2020 <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ПустаяСсылка)
		|			ТОГДА ДанныеРегистра.НалоговаяЛьготаПоНалоговойБазеДо2020
		|		КОГДА ЕСТЬNULL(ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
		|		И ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.УстановленаМестнымНормативнымАктом
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияМестное)
		|		КОГДА ЕСТЬNULL(ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияПоСтатье395)
		|		КОГДА ЕСТЬNULL(ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ДоляНеоблагаемойПлощади)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеОблагаемаяНалогомПлощадь)
		|		КОГДА ЕСТЬNULL(ДанныеРегистра.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.УменьшениеНалоговойБазы)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ПустаяСсылка)
		|	КОНЕЦ КАК НалоговаяЛьготаПоНалоговойБазе,
		|	ВЫБОР
		|		КОГДА ДанныеРегистра.ПроцентУменьшенияСуммыНалогаДо2020 <> 0
		|			ТОГДА ДанныеРегистра.ПроцентУменьшенияСуммыНалогаДо2020
		|		КОГДА ЕСТЬNULL(ДанныеРегистра.ОснованиеЛьготыСнижениеСуммыНалога.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент)
		|			ТОГДА ДанныеРегистра.ОснованиеЛьготыСнижениеСуммыНалога.ПроцентУменьшения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПроцентУменьшенияСуммыНалога
		|";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УстаревшиеПоля", ТекстЗамены);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
			|	&УстаревшиеПоля,", "");
	КонецЕсли;
	
	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда
		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;
	Иначе
		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("НачалоПериода", '000101010000');
	Запрос.УстановитьПараметр("КонецПериода", Период);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();

КонецПроцедуры

#КонецОбласти

#Область ЗаданияКЗакрытиюМесяца

// Формирует задание к расчету налога на имущество, на основании измененных данных.
//
// Параметры:
//  Документ - ДокументОбъект - Ссылка на документ.
//  ДанныеТаблиц - Структура - Содержит список таблиц в которых произошли изменения.
//
Процедура СформироватьЗаданиеКРасчетуНалогаНаИмущество(Документ, ДанныеТаблиц) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Возврат;
	КонецЕсли;

	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ДанныеТаблиц.МенеджерВременныхТаблиц);

	ТипОбъекта = ТипЗнч(Документ);

	ЕстьОсновныеСредства =
		ТипОбъекта <> Тип("ДокументОбъект.РегламентнаяОперация")
		И Документ <> Неопределено;

	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("ИзменениеПараметровОС");
	СписокТаблиц.Добавить("ИзменениеСпособаОтраженияИмущественныхНалогов_НалогНаИмущество");
	СписокТаблиц.Добавить("РегламентнаяОперацияРасчетНалогаНаИмущество");
	СписокТаблиц.Добавить("ПараметрыНачисленияНалогаНаИмущество");
	СписокТаблиц.Добавить("СпособыОтраженияРасходовПоИмущественнымНалогам");
	СписокТаблиц.Добавить("ПараметрыНачисленияНалогаНаИмущество");
	СписокТаблиц.Добавить("СтавкиНалогаНаИмущество");
	СписокТаблиц.Добавить("ПорядокУплатыНалоговНаМестах");
	СписокТаблиц.Добавить("ПорядокУплатыНалоговПоРегионам");

	// Версия 2.4
	СписокТаблиц.Добавить("СтоимостьОС");
	СписокТаблиц.Добавить("АмортизацияОС");
	СписокТаблиц.Добавить("МестонахождениеОС");
	СписокТаблиц.Добавить("ПервоначальныеСведенияОС");
	СписокТаблиц.Добавить("ПорядокУчетаОС");
	СписокТаблиц.Добавить("ПорядокУчетаОСБУ");

	СписокДопПолей = "ОтражатьВРеглУчете" + ?(ЕстьОсновныеСредства, ",ОсновноеСредство", "");

	СписокПолейТаблиц = Новый Структура;
	ТаблицыВидНалога = Новый Массив;
	ТаблицыВидНалога.Добавить("СпособыОтраженияРасходовПоИмущественнымНалогам");
	СписокПолейТаблиц.Вставить("ВидНалога", ТаблицыВидНалога);

	ТекстОбъединенияДанных = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(
									СписокТаблиц, ДанныеТаблиц, СписокДопПолей, СписокПолейТаблиц);

	Если ТекстОбъединенияДанных = "" Тогда
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
		Возврат;
	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводОстатков22.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводОстатков24.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводПервоначальныхСведений.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА &ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА
	|						ИЛИ &ДвиженияЗаписываютсяПриАктуализацияДвиженийПоВНА
	|						ИЛИ &ДвиженияЗаписываютсяПриОтложенномФормированииДвижений
	|					ТОГДА ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), ДЕНЬ, 1)
	|
	|				КОГДА ИзмененныеДанные.ИмяТаблицы = ""ПорядокУчетаОСБУ""
	|						И ИзмененныеДанные.Период < &ДатаНачалаУчета24
	|					ТОГДА &ДатаНачалаУчета24
	|
	|				ИНАЧЕ ИзмененныеДанные.Период
	|
	|			КОНЕЦ) КАК Период,
	|
	|	ИзмененныеДанные.Организация       КАК Организация,
	|	ИзмененныеДанные.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|
	|	&ПолеОсновноеСредство,
	|
	|	ИзмененныеДанные.Документ          КАК Документ
	|
	|ПОМЕСТИТЬ ИзмененныеДанные
	|
	|ИЗ
	|	&ТекстОбъединенияДанных КАК ИзмененныеДанные
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ВводОстатков22
	|		ПО ВводОстатков22.Ссылка = ИзмененныеДанные.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ВводОстатков24
	|		ПО ВводОстатков24.Ссылка = ИзмененныеДанные.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество КАК ВводПервоначальныхСведений
	|		ПО ВводПервоначальныхСведений.Ссылка = ИзмененныеДанные.Документ
	|
	|ГДЕ
	|	ИзмененныеДанные.ОтражатьВРеглУчете
	|	И ИзмененныеДанные.ВидНалога В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество),
	|		НЕОПРЕДЕЛЕНО)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Организация.ГоловнаяОрганизация,
	|	// &ГруппировкаПоОсновномуСредству
	|	ИзмененныеДанные.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	&Операция КАК Операция,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ИзмененныеДанные.Период, КВАРТАЛ), МЕСЯЦ)) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИзмененныеДанные
	|";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеОсновноеСредство,",
								?(ЕстьОсновныеСредства, "ИзмененныеДанные.ОсновноеСредство КАК ОсновноеСредство,", ""));
								
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОбъединенияДанных", СтрШаблон("( %1 )", ТекстОбъединенияДанных));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// &ГруппировкаПоОсновномуСредству", 
								?(ЕстьОсновныеСредства, "ИзмененныеДанные.ОсновноеСредство,", ""));
								
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачалаВеденияРеглУчета", Константы.ДатаНачалаВеденияРеглУчета.Получить());
	Запрос.УстановитьПараметр("ДатаНачалаУчета24", ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	Запрос.УстановитьПараметр("Операция", Перечисления.ОперацииЗакрытияМесяца.РасчетНалогаНаИмущество);
	Запрос.УстановитьПараметр("ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА", РасчетСтоимостиВНА.ДвиженияЗаписываютсяПриВыполненииОперации(Документ));
	Запрос.УстановитьПараметр("ДвиженияЗаписываютсяПриАктуализацияДвиженийПоВНА", РасчетСтоимостиВНА.ДвиженияЗаписываютсяПриАктуализацияДвиженийПоВНА(Документ));
	Запрос.УстановитьПараметр("ДвиженияЗаписываютсяПриОтложенномФормированииДвижений", ОтложенноеФормированиеДвиженийВНА.ДвиженияЗаписываютсяПриВыполненииОперации(Документ));

	УстановитьПривилегированныйРежим(Истина);

	РезультатЗапроса = Запрос.Выполнить();

	РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса.Выбрать());

	УстановитьПривилегированныйРежим(Ложь);

	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);

КонецПроцедуры

// Формирует задание к расчету транспортного налога, на основании измененных данных.
//
// Параметры:
//  Документ - ДокументОбъект - Ссылка на документ.
//  ДанныеТаблиц - Структура - Содержит список таблиц в которых произошли изменения.
//  ЕстьОсновныеСредства - Булево - Истина, если измененные данные содержат информацию об основных средствах.
//
Процедура СформироватьЗаданиеКРасчетуТранспортногоНалога(Документ, ДанныеТаблиц, ЕстьОсновныеСредства = Неопределено) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Возврат;
	КонецЕсли;

	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ДанныеТаблиц.МенеджерВременныхТаблиц);

	ТипОбъекта = ТипЗнч(Документ);

	ЕстьОсновныеСредства =
		ТипОбъекта <> Тип("ДокументОбъект.РегламентнаяОперация")
			И Документ <> Неопределено
		ИЛИ ЕстьОсновныеСредства <> Неопределено
			И ЕстьОсновныеСредства;

	СформироватьТаблицыИзмененийДляФормированияЗаданийКРасчетуТранспортногоНалога(ДанныеТаблиц);

	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("ИзменениеПараметровОС");
	СписокТаблиц.Добавить("ИзменениеСпособаОтраженияИмущественныхНалогов_ТранспортныйНалог");
	СписокТаблиц.Добавить("ПорядокУплатыНалоговНаМестах");
	СписокТаблиц.Добавить("ПорядокУплатыНалоговПоРегионам");
	СписокТаблиц.Добавить("РегламентнаяОперацияРасчетТранспортногоНалога");
	СписокТаблиц.Добавить("ПараметрыНачисленияТранспортногоНалога");
	СписокТаблиц.Добавить("СпособыОтраженияРасходовПоИмущественнымНалогам");
	СписокТаблиц.Добавить("РасходыНаПлатон");
	СписокТаблиц.Добавить("РасчетыСПоставщиками_ЗаданияКРасчетуТранспортногоНалога");
	СписокТаблиц.Добавить("РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалога");

	// Версия 2.4
	СписокТаблиц.Добавить("МестонахождениеОС");
	СписокТаблиц.Добавить("ПорядокУчетаОС");

	СписокДопПолей = "ОтражатьВРеглУчете" + ?(ЕстьОсновныеСредства, ",ОсновноеСредство", "");

	СписокПолейТаблиц = Новый Структура;
	ТаблицыВидНалога = Новый Массив;
	ТаблицыВидНалога.Добавить("СпособыОтраженияРасходовПоИмущественнымНалогам");
	СписокПолейТаблиц.Вставить("ВидНалога", ТаблицыВидНалога);

	ТекстОбъединенияДанных = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(
									СписокТаблиц, ДанныеТаблиц, СписокДопПолей, СписокПолейТаблиц);

	Если ТекстОбъединенияДанных = "" Тогда
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
		Возврат;
	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводОстатков22.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводОстатков24.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводПервоначальныхСведенийДляРасчетаТранспортногоНалога)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводПервоначальныхСведений.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ПараметрыНачисленияТранспортногоНалога)
	|					ТОГДА ПараметрыНачисленияТранспортногоНалога.Дата
	|
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ)   КАК Период,
	|	ИзмененныеДанные.Организация       КАК Организация,
	|	&ПолеОсновноеСредство,
	|	ИзмененныеДанные.Документ          КАК Документ
	|
	|ПОМЕСТИТЬ ИзмененныеДанные
	|
	|ИЗ
	|	&ТекстОбъединенияДанных КАК ИзмененныеДанные
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ВводОстатков22
	|		ПО ВводОстатков22.Ссылка = ИзмененныеДанные.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ВводОстатков24
	|		ПО ВводОстатков24.Ссылка = ИзмененныеДанные.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводПервоначальныхСведенийДляРасчетаТранспортногоНалога КАК ВводПервоначальныхСведений
	|		ПО ВводПервоначальныхСведений.Ссылка = ИзмененныеДанные.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПараметрыНачисленияТранспортногоНалога КАК ПараметрыНачисленияТранспортногоНалога
	|		ПО ПараметрыНачисленияТранспортногоНалога.Ссылка = ИзмененныеДанные.Документ
	|
	|ГДЕ
	|	ИзмененныеДанные.ОтражатьВРеглУчете
	|	И ВЫРАЗИТЬ(ИзмененныеДанные.Организация КАК Справочник.Организации).ЮридическоеФизическоеЛицо <> ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
	|	И ИзмененныеДанные.ВидНалога В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог),
	|		НЕОПРЕДЕЛЕНО)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	// &ГруппировкаПоОсновномуСредству
	|	ИзмененныеДанные.Документ
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	&Операция КАК Операция,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ИзмененныеДанные.Период, КВАРТАЛ), МЕСЯЦ)) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИзмененныеДанные
	|";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеОсновноеСредство,",
								?(ЕстьОсновныеСредства, "ИзмененныеДанные.ОсновноеСредство КАК ОсновноеСредство,", ""));
								
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОбъединенияДанных", СтрШаблон("( %1 )", ТекстОбъединенияДанных));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// &ГруппировкаПоОсновномуСредству",
	 							?(ЕстьОсновныеСредства, "ИзмененныеДанные.ОсновноеСредство,", ""));
	 							
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Операция", Перечисления.ОперацииЗакрытияМесяца.РасчетТранспортногоНалога);

	УстановитьПривилегированныйРежим(Истина);

	РезультатЗапроса = Запрос.Выполнить();

	РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса.Выбрать());

	УстановитьПривилегированныйРежим(Ложь);

	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);

КонецПроцедуры

// Формирует задание к расчету земельного налога, на основании измененных данных.
//
// Параметры:
//  Документ - ДокументОбъект - Ссылка на документ.
//  ДанныеТаблиц - Структура - Содержит список таблиц в которых произошли изменения.
//
Процедура СформироватьЗаданиеКРасчетуЗемельногоНалога(Документ, ДанныеТаблиц) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Возврат;
	КонецЕсли;

	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ДанныеТаблиц.МенеджерВременныхТаблиц);

	ТипОбъекта = ТипЗнч(Документ);

	ЕстьОсновныеСредства =
		ТипОбъекта <> Тип("ДокументОбъект.РегламентнаяОперация")
		И Документ<> Неопределено;

	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("ИзменениеПараметровОС");
	СписокТаблиц.Добавить("ИзменениеСпособаОтраженияИмущественныхНалогов_ЗемельныйНалог");
	СписокТаблиц.Добавить("ПорядокУплатыНалоговНаМестах");
	СписокТаблиц.Добавить("ПараметрыНачисленияЗемельногоНалога");
	СписокТаблиц.Добавить("РегламентнаяОперацияРасчетЗемельногоНалога");
	СписокТаблиц.Добавить("СпособыОтраженияРасходовПоИмущественнымНалогам");
	СписокТаблиц.Добавить("СтавкиНалогаНаИмущество");

	// Версия 2.4
	СписокТаблиц.Добавить("МестонахождениеОС");
	СписокТаблиц.Добавить("ПорядокУчетаОС");

	СписокДопПолей = "ОтражатьВРеглУчете" + ?(ЕстьОсновныеСредства, ",ОсновноеСредство", "");

	СписокПолейТаблиц = Новый Структура;
	ТаблицыВидНалога = Новый Массив;
	ТаблицыВидНалога.Добавить("СпособыОтраженияРасходовПоИмущественнымНалогам");
	СписокПолейТаблиц.Вставить("ВидНалога", ТаблицыВидНалога);

	ТекстОбъединенияДанных = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(
									СписокТаблиц, ДанныеТаблиц, СписокДопПолей, СписокПолейТаблиц);

	Если ТекстОбъединенияДанных = "" Тогда
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
		Возврат;
	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводОстатков22.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводОстатков24.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводПервоначальныхСведений.Дата, МЕСЯЦ, 1)
	|
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ) КАК Период,
	|
	|	ИзмененныеДанные.Организация КАК Организация,
	|
	|	&ПолеОсновноеСредство,
	|
	|	ИзмененныеДанные.Документ КАК Документ
	|
	|ПОМЕСТИТЬ ИзмененныеДанные
	|
	|ИЗ
	|	 &ТекстОбъединенияДанных  КАК ИзмененныеДанные
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ВводОстатков22
	|		ПО ВводОстатков22.Ссылка = ИзмененныеДанные.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ВводОстатков24
	|		ПО ВводОстатков24.Ссылка = ИзмененныеДанные.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога КАК ВводПервоначальныхСведений
	|		ПО ВводПервоначальныхСведений.Ссылка = ИзмененныеДанные.Документ
	|
	|ГДЕ
	|	ИзмененныеДанные.ОтражатьВРеглУчете
	|	И ИзмененныеДанные.ВидНалога В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог),
	|		НЕОПРЕДЕЛЕНО)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	// &ГруппировкаПоОсновномуСредству 
	|	ИзмененныеДанные.Документ
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	&Операция КАК Операция,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ИзмененныеДанные.Период, КВАРТАЛ), МЕСЯЦ)) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИзмененныеДанные
	|";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеОсновноеСредство,",
								?(ЕстьОсновныеСредства, "ИзмененныеДанные.ОсновноеСредство КАК ОсновноеСредство,", ""));
								
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОбъединенияДанных", СтрШаблон("( %1 )",ТекстОбъединенияДанных));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// &ГруппировкаПоОсновномуСредству", 
								?(ЕстьОсновныеСредства, "ИзмененныеДанные.ОсновноеСредство,", ""));								

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Операция", Перечисления.ОперацииЗакрытияМесяца.РасчетЗемельногоНалога);

	УстановитьПривилегированныйРежим(Истина);

	РезультатЗапроса = Запрос.Выполнить();

	РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса.Выбрать());

	УстановитьПривилегированныйРежим(Ложь);

	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);

КонецПроцедуры

Процедура СформироватьТаблицыИзмененийДляФормированияЗаданийКРасчетуТранспортногоНалога(ДанныеТаблиц)

	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон") Тогда
		Возврат;
	КонецЕсли;

	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("РасчетыСПоставщикамиИзменения") <> Неопределено Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(Изменения.Месяц, МЕСЯЦ)                  КАК Период,
		|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
		|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
		|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
		|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
		|	Изменения.Документ                                     КАК Документ
		|ПОМЕСТИТЬ РасчетыСПоставщиками_ЗаданияКРасчетуТранспортногоНалогаИзменение
		|ИЗ
		|	РасчетыСПоставщикамиИзменения КАК Изменения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
		|		ПО (РасходыНаПлатон.Ссылка = Изменения.ОбъектРасчетов)
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(Изменения.ОбъектРасчетов) = ТИП(Документ.ОтчетОператораСистемыПлатон)
		|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(Изменения.Месяц, МЕСЯЦ)                  КАК Период,
		|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
		|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
		|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
		|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
		|	Изменения.Документ                                     КАК Документ
		|ИЗ
		|	РасчетыСПоставщикамиИзменения КАК Изменения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
		|		ПО (РасходыНаПлатон.Ссылка = Изменения.Документ)
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(Изменения.Документ) = ТИП(Документ.ОтчетОператораСистемыПлатон)
		|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон";

		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ДатаПрекращенияДействияЛьготПлатон", ВнеоборотныеАктивыЛокализация.ДатаПрекращенияДействияЛьготПлатон());
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		ДанныеТаблиц.Вставить("РасчетыСПоставщиками_ЗаданияКРасчетуТранспортногоНалогаИзменение", Выборка.Количество > 0);

	КонецЕсли;

	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("РасчетыСПоставщикамиПоДокументамИзменения") <> Неопределено Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Изменения.Период                                       КАК Период,
		|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
		|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
		|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
		|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
		|	Изменения.Регистратор                                  КАК Документ
		|ПОМЕСТИТЬ РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение
		|ИЗ
		|	РасчетыСПоставщикамиПоДокументамИзменения КАК Изменения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
		|		ПО (РасходыНаПлатон.Ссылка = Изменения.РасчетныйДокумент)
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(Изменения.РасчетныйДокумент) = ТИП(Документ.ОтчетОператораСистемыПлатон)
		|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Изменения.Период                                       КАК Период,
		|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
		|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
		|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
		|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
		|	Изменения.Регистратор                                  КАК Документ
		|ИЗ
		|	РасчетыСПоставщикамиПоДокументамИзменения КАК Изменения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
		|		ПО (РасходыНаПлатон.Ссылка = Изменения.Регистратор)
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(Изменения.Регистратор) = ТИП(Документ.ОтчетОператораСистемыПлатон)
		|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон";

		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ДатаПрекращенияДействияЛьготПлатон", ВнеоборотныеАктивыЛокализация.ДатаПрекращенияДействияЛьготПлатон());
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		ДанныеТаблиц.Вставить("РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение", Выборка.Количество > 0);

	КонецЕсли;

КонецПроцедуры

Функция ПериодРасчетаНалогаНаИмущество(Организация, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Ссылка,
	|
	|	ВЫБОР
	|		КОГДА Налогообложение.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОСНО
	|
	|ПОМЕСТИТЬ Организации
	|
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(
	|			&КонецКвартала,
	|			(Организация В
	|				(ВЫБРАТЬ
	|					ГоловныеОрганизации.Организация
	|				ИЗ
	|					ВтГоловныеОрганизации КАК ГоловныеОрганизации)
	|					ИЛИ &ПоВсемОрганизациям)
	|			И ((СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|			ИЛИ &КонецКвартала >= ДАТАВРЕМЯ(2015, 1, 1)))) КАК Налогообложение
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтГоловныеОрганизации КАК ГоловныеОрганизации 
	|		ПО ГоловныеОрганизации.Организация = Налогообложение.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Организация КАК Организация
	|ИЗ
	|	(ВЫБРАТЬ
	|		Организации.Ссылка КАК Организация
	|	ИЗ
	|		Организации КАК Организации
	|	ГДЕ
	|		Организации.ОСНО
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Организации.Ссылка КАК Организация
	|	ИЗ
	|		Организации КАК Организации
	|	ГДЕ
	|		НЕ Организации.ОСНО
	|		И ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				РегистрСведений.ПараметрыНачисленияНалогаНаИмущество КАК СтавкиНалога
	|			ГДЕ
	|				СтавкиНалога.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)
	|				И СтавкиНалога.Организация = Организации.Ссылка
	|				И СтавкиНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
	|			
	|	) КАК Организации
	|";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));
	НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицГоловнымиОрганизациями(МенеджерВременныхТаблиц, Организация);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		УплачиваютсяАвансы = УплачиваютсяАвансыПоНалогуНаИмущество(
								Выборка.Организация, НачалоПериода);
		
		Если УплачиваютсяАвансы Тогда
			Возврат НачалоМесяца(КонецКвартала(НачалоПериода));
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат НачалоМесяца(КонецГода(НачалоПериода));

КонецФункции

Функция ПериодРасчетаЗемельногоНалога(Организация, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистрация.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.ПараметрыНачисленияЗемельногоНалога.СрезПоследних(
	|			&КонецКвартала,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И (Организация В (&Организация)
	|					ИЛИ &ПоВсемОрганизациям)
	|				И ВключатьВНалоговуюБазу) КАК Регистрация";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));

	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		УплачиваютсяАвансы = УплачиваютсяАвансыПоЗемельномуНалогу(
								Выборка.Организация, НачалоПериода);
		
		Если УплачиваютсяАвансы Тогда
			Возврат НачалоМесяца(КонецКвартала(НачалоПериода));
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат НачалоМесяца(КонецГода(НачалоПериода));
	
КонецФункции

Функция ПериодРасчетаТранспортногоНалога(Организация, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	(Организации.Ссылка В (&Организация)
	|			ИЛИ (&ПоВсемОрганизациям
	|	И Организации.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОрганизаций.Действует)))
	|	И Организации.ЮридическоеФизическоеЛицо <> ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистрация.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
	|			&КонецКвартала,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В
	|					(ВЫБРАТЬ
	|						Организации.Ссылка
	|					ИЗ
	|						Организации)
	|				И ВключатьВНалоговуюБазу) КАК Регистрация";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));

	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		УплачиваютсяАвансы = УплачиваютсяАвансыПоТранспортномуНалогу(
								Выборка.Организация, НачалоПериода);
		
		Если УплачиваютсяАвансы Тогда
			Возврат НачалоМесяца(КонецКвартала(НачалоПериода));
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат НачалоМесяца(КонецГода(НачалоПериода));

КонецФункции

#КонецОбласти

#Область ДоначислениеНалогаНаИмущество

Функция ДоначислитьНалогНаИмущество(Период, СписокОрганизаций, НомерДоРасчета, МенеджерВременныхТаблиц)
	
	РезультатОперации = Новый Структура;
	РезультатОперации.Вставить("ЕстьОшибки", Ложь);
	РезультатОперации.Вставить("ТекстОшибки", "");
	РезультатОперации.Вставить("КоличествоДанных", 0);

	ТекстЗапроса = 
	"ВЫБРАТЬ 
	|	ЗаданияКРасчету.Организация КАК Организация,
	|	ЗаданияКРасчету.Месяц КАК ДатаОтражения,
	|	ЕСТЬNULL(МАКСИМУМ(РегламентнаяОперация.Ссылка), НЕОПРЕДЕЛЕНО) КАК РегламентныйДокумент
	|
	|ИЗ
	|	ЗаданияКРасчету КАК ЗаданияКРасчету
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|		ПО РегламентнаяОперация.Организация = ЗаданияКРасчету.Организация
	|			И НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ЗаданияКРасчету.Месяц, МЕСЯЦ)
	|			И НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) <= КОНЕЦПЕРИОДА(ЗаданияКРасчету.Месяц, МЕСЯЦ)
	|			И РегламентнаяОперация.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество)
	|			И РегламентнаяОперация.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаданияКРасчету.Организация,
	|	ЗаданияКРасчету.Месяц
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СписокИзменяемыхРегистров = Новый Массив;
	СписокИзменяемыхРегистров.Добавить("ПрочиеРасходы");
	СписокИзменяемыхРегистров.Добавить("ПрочиеАктивыПассивы");
	СписокИзменяемыхРегистров.Добавить("ДвиженияПоПрочимАктивамПассивам");
	СписокИзменяемыхРегистров.Добавить("ДвиженияДоходыРасходыПрочиеАктивыПассивы");
	
	//@skip-check query-in-loop
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Если ЗначениеЗаполнено(Выборка.РегламентныйДокумент) Тогда
				
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить("Документ.РегламентнаяОперация");
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.РегламентныйДокумент);
				
				// До конца 2022г.
				ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РасчетНалогаНаИмущество.НаборЗаписей");
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.РегламентныйДокумент);
				
				// С 2023г.
				ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РасчетНалогаНаИмуществоПоКадастровойСтоимости.НаборЗаписей");
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.РегламентныйДокумент);
				
				// С 2023г.
				ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РасчетНалогаНаИмуществоПоСреднегодовойСтоимости.НаборЗаписей");
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.РегламентныйДокумент);
				
				Для каждого ИмяРегистра Из СписокИзменяемыхРегистров Цикл
					ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления." + ИмяРегистра + ".НаборЗаписей");
					ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
					ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.РегламентныйДокумент);
				КонецЦикла; 
				
				Блокировка.Заблокировать(); 
				
				ВременныеТаблицыДоРасчета = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
				
				ДополнительныеПараметрыРасчета = Новый Структура;
				ДополнительныеПараметрыРасчета.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
				ДополнительныеПараметрыРасчета.Вставить("ДоначислениеНалогаНаИмущество", Истина);
				
				УточнитьПараметрыОсвобожденияОтУплатыНалогов(
					ДополнительныеПараметрыРасчета, Выборка.Организация, Выборка.ДатаОтражения);
					
				РасчетПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(
									Выборка.Организация, 
									Выборка.ДатаОтражения, 
									ДополнительныеПараметрыРасчета);
			
				// Удалим все таблицы, которые были созданы во время расчета налога.
				ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ВременныеТаблицыДоРасчета);
			
				ТаблицыДвижений = ТаблицыДвиженийПриДоначислении(
					Выборка.Организация, 
					Выборка.ДатаОтражения, 
					РасчетПоНалогу, 
					РезультатОперации.ЕстьОшибки);
				
				СформироватьДвиженияПриДоначислении(
					Выборка.Организация, 
					Выборка.ДатаОтражения, 
					Выборка.РегламентныйДокумент, 
					РасчетПоНалогу,
					ТаблицыДвижений,
					СписокИзменяемыхРегистров);
				
			КонецЕсли;
			
			Если НЕ РезультатОперации.ЕстьОшибки Тогда
				
				РегистрыСведений.ЗаданияКДоначислениюНалогаНаИмущество.ЗафиксироватьРасчет(
					Выборка.ДатаОтражения, 
					ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Выборка.Организация), 
					НомерДоРасчета,
					МенеджерВременныхТаблиц);
					
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			РезультатОперации.ТекстОшибки = ТекстОшибки;
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				Перечисления.ОперацииЗакрытияМесяца.ДоначислениеНалогаНаИмущество,
				Выборка.ДатаОтражения,
				Выборка.Организация,
				ТекстОшибки,,,
				РезультатОперации.ЕстьОшибки);
			
		КонецПопытки;
		
		РезультатОперации.КоличествоДанных = РезультатОперации.КоличествоДанных + 1;
		
	КонецЦикла;
	
	Возврат РезультатОперации;
	
КонецФункции

Функция ТаблицыДвиженийПриДоначислении(Организация, Период, РасчетПоНалогу, Отказ)

	СправкаРасчет = РасчетИмущественныхНалоговПереопределяемый.ПустаяСправкаРасчет("РасчетНалогаНаИмущество");
	
	Для Каждого КлючИЗначение Из РасчетПоНалогу Цикл
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КлючИЗначение.Значение, СправкаРасчет);
	КонецЦикла;
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);

	КоэффициентПересчетаВУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
												ВалютаРегл, ВалютаУпр, Период, ВалютаРегл);
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.ИФНС КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.СуммаНалогаКУплате КАК СуммаНалогаКУплате
	|
	|ПОМЕСТИТЬ СправкаРасчет
	|
	|ИЗ
	|	&СправкаРасчет КАК СправкаРасчет
	|
	|ГДЕ
	|	СправкаРасчет.СуммаНалогаКУплате <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности
	|
	|ПОМЕСТИТЬ ПорядокУчетаОС
	|
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|		&КонецМесяца, 
	|		ДатаИсправления = ДАТАВРЕМЯ(1, 1, 1)
	|			И ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					СправкаРасчет.ОсновноеСредство
	|				ИЗ
	|					СправкаРасчет КАК СправкаРасчет)) КАК ПорядокУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение КАК Подразделение
	|
	|ПОМЕСТИТЬ МестонахождениеОС
	|
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|		&КонецМесяца, 
	|		ДатаИсправления = ДАТАВРЕМЯ(1, 1, 1)
	|			И Организация = &Организация
	|			И ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					СправкаРасчет.ОсновноеСредство
	|				ИЗ
	|					СправкаРасчет КАК СправкаРасчет)) КАК МестонахождениеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетНалогаНаИмущество.Период                      КАК Период,
	|	РасчетНалогаНаИмущество.Организация                 КАК Организация,
	|	РасчетНалогаНаИмущество.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	РасчетНалогаНаИмущество.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СУММА(РасчетНалогаНаИмущество.СуммаРегл)            КАК СуммаРегл,
	|	СУММА(РасчетНалогаНаИмущество.Сумма)                КАК Сумма,
	|	СУММА(РасчетНалогаНаИмущество.СуммаБезНДС)          КАК СуммаБезНДС,
	|	СУММА(РасчетНалогаНаИмущество.СуммаУпр)             КАК СуммаУпр,
	|	СУММА(РасчетНалогаНаИмущество.ПостояннаяРазница)    КАК ПостояннаяРазница,
	|	РасчетНалогаНаИмущество.Подразделение               КАК Подразделение,
	|	&СтатьяРасходов                                     КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                        КАК АналитикаРасходов,
	|	&ХозяйственнаяОперация                              КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации                     КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	(
	|	// До конца 2022г 1 регистр.
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		&Организация КАК Организация,
	|		ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|
	|		СУММА(СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) КАК СуммаРегл,
	|
	|		СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) *
	|			&КоэффициентПересчетаВУпр) КАК Сумма,
	|
	|		СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) *
	|			&КоэффициентПересчетаВУпр) КАК СуммаБезНДС,
	|
	|		СУММА(ВЫБОР
	|			КОГДА &УправленческийУчетОрганизаций
	|				ТОГДА (СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) * &КоэффициентПересчетаВУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаУпр,
	|
	|		СУММА(ВЫБОР
	|			КОГДА НЕ ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА)
	|				ТОГДА СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПостояннаяРазница,
	|
	|		МестонахождениеОС.Подразделение КАК Подразделение
	|	ИЗ
	|		СправкаРасчет КАК СправкаРасчет
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|			ПО (РасчетНалогаНаИмущество.Организация = &Организация)
	|				И (РасчетНалогаНаИмущество.ПериодРасчета = &Период)
	|				И (РасчетНалогаНаИмущество.ОсновноеСредство = СправкаРасчет.ОсновноеСредство)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|			ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|			ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|			ПО (СтатьиРасходов.Ссылка = &СтатьяРасходов)
	|
	|	ГДЕ
	|		(СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) > 0
	|
	|	СГРУППИРОВАТЬ ПО
	|		ПорядокУчетаОС.НаправлениеДеятельности,
	|		СправкаРасчет.РегистрацияВНалоговомОргане,
	|		МестонахождениеОС.Подразделение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	// Начиная с 2023г 2 регистра.
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		&Организация КАК Организация,
	|		ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|
	|		СУММА(СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоКадастровая.СуммаНалогаКУплате) КАК СуммаРегл,
	|
	|		СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоКадастровая.СуммаНалогаКУплате) *
	|			&КоэффициентПересчетаВУпр) КАК Сумма,
	|
	|		СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоКадастровая.СуммаНалогаКУплате) *
	|			&КоэффициентПересчетаВУпр) КАК СуммаБезНДС,
	|
	|		СУММА(ВЫБОР
	|			КОГДА &УправленческийУчетОрганизаций
	|				ТОГДА (СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоКадастровая.СуммаНалогаКУплате) *
	|					&КоэффициентПересчетаВУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаУпр,
	|
	|		СУММА(ВЫБОР
	|			КОГДА НЕ ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА)
	|				ТОГДА СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоКадастровая.СуммаНалогаКУплате
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПостояннаяРазница,
	|
	|		МестонахождениеОС.Подразделение КАК Подразделение
	|	ИЗ
	|		СправкаРасчет КАК СправкаРасчет
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РасчетНалогаНаИмуществоПоКадастровойСтоимости КАК РасчетНалогаНаИмуществоКадастровая
	|			ПО (РасчетНалогаНаИмуществоКадастровая.Организация = &Организация)
	|				И (РасчетНалогаНаИмуществоКадастровая.ПериодРасчета = &Период)
	|				И (РасчетНалогаНаИмуществоКадастровая.ОсновноеСредство = СправкаРасчет.ОсновноеСредство)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|			ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|			ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|			ПО (СтатьиРасходов.Ссылка = &СтатьяРасходов)
	|
	|	ГДЕ
	|		(СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоКадастровая.СуммаНалогаКУплате) > 0
	|
	|	СГРУППИРОВАТЬ ПО
	|		ПорядокУчетаОС.НаправлениеДеятельности,
	|		СправкаРасчет.РегистрацияВНалоговомОргане,
	|		МестонахождениеОС.Подразделение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		&Организация КАК Организация,
	|		ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|
	|		СУММА(СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоСреднегодовая.СуммаНалогаКУплате) КАК СуммаРегл,
	|
	|		СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоСреднегодовая.СуммаНалогаКУплате) *
	|			&КоэффициентПересчетаВУпр) КАК Сумма,
	|
	|		СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоСреднегодовая.СуммаНалогаКУплате) *
	|			&КоэффициентПересчетаВУпр) КАК СуммаБезНДС,
	|
	|		СУММА(ВЫБОР
	|			КОГДА &УправленческийУчетОрганизаций
	|				ТОГДА (СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоСреднегодовая.СуммаНалогаКУплате) *
	|					&КоэффициентПересчетаВУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаУпр,
	|
	|		СУММА(ВЫБОР
	|			КОГДА НЕ ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА)
	|				ТОГДА СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоСреднегодовая.СуммаНалогаКУплате
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПостояннаяРазница,
	|
	|		МестонахождениеОС.Подразделение КАК Подразделение
	|
	|	ИЗ
	|		СправкаРасчет КАК СправкаРасчет
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РасчетНалогаНаИмуществоПоСреднегодовойСтоимости КАК РасчетНалогаНаИмуществоСреднегодовая
	|			ПО (РасчетНалогаНаИмуществоСреднегодовая.Организация = &Организация)
	|				И (РасчетНалогаНаИмуществоСреднегодовая.ПериодРасчета = &Период)
	|				И (РасчетНалогаНаИмуществоСреднегодовая.ОсновноеСредство = СправкаРасчет.ОсновноеСредство)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|			ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|			ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|			ПО (СтатьиРасходов.Ссылка = &СтатьяРасходов)
	|
	|	ГДЕ
	|		(СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоСреднегодовая.СуммаНалогаКУплате) > 0
	|
	|	СГРУППИРОВАТЬ ПО
	|		ПорядокУчетаОС.НаправлениеДеятельности,
	|		СправкаРасчет.РегистрацияВНалоговомОргане,
	|		МестонахождениеОС.Подразделение
	|
	|	) КАК РасчетНалогаНаИмущество
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетНалогаНаИмущество.Период,
	|	РасчетНалогаНаИмущество.Организация,
	|	РасчетНалогаНаИмущество.НаправлениеДеятельности,
	|	РасчетНалогаНаИмущество.РегистрацияВНалоговомОргане,
	|	РасчетНалогаНаИмущество.Подразделение
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("СправкаРасчет", СправкаРасчет);
	Запрос.УстановитьПараметр("Период", НачалоДня(КонецМесяца(Период)));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВУпр", КоэффициентПересчетаВУпр);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.НачислениеИмущественныхНалогов);
	Запрос.УстановитьПараметр("НастройкаХозяйственнойОперации", Справочники.НастройкиХозяйственныхОпераций.НачислениеИмущественныхНалогов);
	Запрос.УстановитьПараметр("СтатьяРасходов", ПланыВидовХарактеристик.СтатьиРасходов.ДоначислениеИмущественныхНалоговИАмортизации);
	Запрос.УстановитьПараметр("УправленческийУчетОрганизаций", РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций(НачалоМесяца(Период)));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТаблицыДвиженийПоНалогу = ТаблицыДвиженийПоНалогу(
									Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество, 
									Выборка,
									Неопределено,
									Отказ);
									
	Возврат ТаблицыДвиженийПоНалогу;
	
КонецФункции

Процедура СформироватьДвиженияПриДоначислении(Организация, ДатаОтражения, РегламентныйДокумент, РасчетПоНалогу, ТаблицыНачислениеНалога, СписокИзменяемыхРегистров)
	
	Для Каждого ДанныеРасчета Из РасчетПоНалогу Цикл
		
		// Измерения текущего регистра.
		МассивИзмерений = Новый Массив;
		Для Каждого Измерение Из Метаданные.РегистрыСведений[ДанныеРасчета.Ключ].Измерения Цикл
			МассивИзмерений.Добавить(Измерение.Имя);
		КонецЦикла;
		
		ПоляПоиска = СтрСоединить(МассивИзмерений,",");
		
		РасчетНалогаНаИмущество = РегистрыСведений[ДанныеРасчета.Ключ].СоздатьНаборЗаписей();
		РасчетНалогаНаИмущество.Отбор.Регистратор.Установить(РегламентныйДокумент);
		РасчетНалогаНаИмущество.Прочитать(); 
		
		Для каждого ДанныеСтроки Из РасчетНалогаНаИмущество Цикл
			
			СтруктураПоиска = Новый Структура(ПоляПоиска);
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, ДанныеСтроки);
			СписокСтрок = ДанныеРасчета.Значение.НайтиСтроки(СтруктураПоиска);
			
			// Если в расчете более 1 строки по набору измерений - берем первую.
			Если СписокСтрок.Количество() <> 0 Тогда
				ЗаполнитьЗначенияСвойств(ДанныеСтроки, СписокСтрок[0]);
			КонецЕсли; 
			
		КонецЦикла;  
		
		РасчетНалогаНаИмущество.ДополнительныеСвойства.Вставить(РасчетСтоимостиВНА.ИмяПризнакаВыполненияОперации());
		РасчетНалогаНаИмущество.Записать();
		
	КонецЦикла;
	
	Для каждого ИмяРегистра Из СписокИзменяемыхРегистров Цикл
		
		ВнеоборотныеАктивы.ДобавитьВРегистрНовыеЗаписи(
			РегламентныйДокумент,
			ИмяРегистра, 
			ТаблицыНачислениеНалога[ИмяРегистра],
			Перечисления.ВидыИсточниковДвижений.ДоначислениеНалогаНаИмуществоПослеРасчетаСтоимостиОС);
			
	КонецЦикла;
	
	ТаблицаОтражениеДокументовВРеглУчете = 
		ВнеоборотныеАктивыСлужебный.ТаблицаОтражениеДокументов(
				РегламентныйДокумент, 
				Организация, 
				ДатаОтражения);
	
	РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВРеглУчете);
	
	//++ НЕ УТКА
	МеждународныйУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВРеглУчете);
	//-- НЕ УТКА

КонецПроцедуры

#КонецОбласти

#Область ПрочиеЭкспортныеПроцедуры

// Сформировать текст запроса по регистру сведений с учетом исправлений.
//	Учитывается поглощение предыдущих исправлений.
// 
// Параметры:
//  ИмяРегистра - Строка - имя регистра сведений.
//  ИмяВременнойТаблицы - Строка - имя врменной таблицы.
//  ИмяПоляПериод - Строка - имя поля период.
//  ДополнительныеПоля - Неопределено, Структура - дополнительные поля выборки, вычисляемые поля.
// 	
// Возвращаемое значение:
// 	Строка - Текст запроса.
Функция ТекстЗапросаЗаписиРегистраСУчетомИсправлений(ИмяРегистра, ИмяВременнойТаблицы = "", ИмяПоляПериод = "", ДополнительныеПоля = Неопределено) Экспорт
	
	Если ДополнительныеПоля = Неопределено Тогда
		ДополнительныеПоля = Новый Структура;
	КонецЕсли;
	
	// Выстроим хронологию изменений, найдем поглощенные периоды и удалим их из выборки.
	// В итоге останется только финальная версия с учетом всех изменений.
	ТекстЗапроса = 
	"
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ВЫБОР
	|		КОГДА ДанныеРегистра.ДатаИсправления = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
	|		ИНАЧЕ ДанныеРегистра.ДатаИсправления
	|	КОНЕЦ КАК ДатаИсправления,
	|	ВЫБОР
	|		КОГДА РАЗНОСТЬДАТ(ДанныеРегистра.ДатаИсправления, ДанныеРегистра.Период, ДЕНЬ) >= 0
	|			ТОГДА 0
	|		ИНАЧЕ РАЗНОСТЬДАТ(ДанныеРегистра.ДатаИсправления, ДанныеРегистра.Период, ДЕНЬ)
	|	КОНЕЦ КАК ПорядокИсправления, 
	|	АВТОНОМЕРЗАПИСИ() КАК ИдентификаторСтроки,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|
	|	//Измерения
	|	&ТекстИзмерений_ДанныеРегистра,
	|	//Ресурсы и реквизиты
	|	&ТекстРесурсовИРеквизитов
	|	
	|ПОМЕСТИТЬ ХронологияИсправлений
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Активность
	|	И (ДанныеРегистра.Период >= &НачалоПериода
	|			ИЛИ &НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
	|	И (ДанныеРегистра.Период <= &КонецПериода
	|			ИЛИ &КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
	|	И (ДанныеРегистра.ДатаИсправления <= &ДатаДокумента
	|			ИЛИ &ДатаДокумента = ДАТАВРЕМЯ(1, 1, 1))
	|	И &ОрганизацияГДЕ
	|	И (ДанныеРегистра.ОсновноеСредство В (&СписокОС)
	|		ИЛИ &БезОтбораОС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХронологияИсправлений.Регистратор КАК Регистратор,
	|	МИНИМУМ(ХронологияИсправлений.ПорядокИсправления) КАК ПорядокИсправления
	|ПОМЕСТИТЬ УникальныеРегистраторы
	|ИЗ
	|	ХронологияИсправлений КАК ХронологияИсправлений
	|
	|СГРУППИРОВАТЬ ПО
	|	ХронологияИсправлений.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХронологияИсправлений.Период КАК Период,
	|	ХронологияИсправлений.ДатаИсправления КАК ДатаИсправления,
	|	ХронологияИсправлений.ПорядокИсправления КАК ПорядокИсправления,
	|	ХронологияИсправлений.Регистратор КАК Регистратор,
	|	ХронологияИсправлений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	
	|	//Измерения
	|	&ТекстИзмерений_ХронологияИсправлений
	|	
	|ПОМЕСТИТЬ ХронологияБезДублейРегистраторов
	|ИЗ
	|	ХронологияИсправлений КАК ХронологияИсправлений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УникальныеРегистраторы КАК УникальныеРегистраторы
	|		ПО ХронологияИсправлений.Регистратор = УникальныеРегистраторы.Регистратор
	|			И ХронологияИсправлений.ПорядокИсправления = УникальныеРегистраторы.ПорядокИсправления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	//Измерения
	|	&ТекстИзмерений_ХронологияБезДублейРегистраторов,
	|
	|	ХронологияБезДублейРегистраторов.Период КАК Период,
	|	МИНИМУМ(ХронологияБезДублейРегистраторов.ПорядокИсправления) КАК ПорядокИсправления
	|ПОМЕСТИТЬ ПоследниеИсправления
	|ИЗ
	|	ХронологияБезДублейРегистраторов КАК ХронологияБезДублейРегистраторов
	|
	|СГРУППИРОВАТЬ ПО
	|	&ГруппировкаПоИзмерениям_ХронологияБезДублейРегистраторов,
	|	ХронологияБезДублейРегистраторов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХронологияБезДублейРегистраторов.Период КАК Период,
	|	ХронологияБезДублейРегистраторов.ДатаИсправления КАК ДатаИсправления,
	|	ХронологияБезДублейРегистраторов.ПорядокИсправления КАК ПорядокИсправления,
	|	ХронологияБезДублейРегистраторов.Регистратор КАК Регистратор,
	|	ХронологияБезДублейРегистраторов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|
	|	//Измерения
	|	&ТекстИзмерений_ХронологияБезДублейРегистраторов
	|	
	|ПОМЕСТИТЬ ХронологияСПересечениями
	|ИЗ
	|	ХронологияБезДублейРегистраторов КАК ХронологияБезДублейРегистраторов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеИсправления КАК ПоследниеИсправления
	|		ПО &СоединениеПоизмерениям_ХронологияБезДублейРегистраторов_ПоследниеИсправления
	|			И ХронологияБезДублейРегистраторов.Период = ПоследниеИсправления.Период
	|			И ХронологияБезДублейРегистраторов.ПорядокИсправления = ПоследниеИсправления.ПорядокИсправления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Период КАК Период,
	|	Т.ДатаИсправления КАК ДатаИсправления,
	|	Т.ПорядокИсправления КАК ПорядокИсправления,
	|	Т.Регистратор КАК Регистратор,
	|	Т.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|
	|	//Измерения
	|	&ТекстИзмерений_Т
	|	
	|ПОМЕСТИТЬ ПоглощенныеПериоды
	|ИЗ
	|	ХронологияСПересечениями КАК ХронологияСПересечениями
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ХронологияСПересечениями КАК Т
	|		ПО &СоединениеПоизмерениям_ХронологияСПересечениями_Т
	|ГДЕ
	|	Т.Период МЕЖДУ ХронологияСПересечениями.Период И ХронологияСПересечениями.ДатаИсправления
	|	И Т.ДатаИсправления МЕЖДУ ХронологияСПересечениями.Период И ХронологияСПересечениями.ДатаИсправления
	|	И ХронологияСПересечениями.ПорядокИсправления <> 0
	|	И Т.ИдентификаторСтроки <> ХронологияСПересечениями.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХронологияСПересечениями.Период КАК Период,
	|	ХронологияСПересечениями.ДатаИсправления КАК ДатаИсправления,
	|	ХронологияСПересечениями.ПорядокИсправления КАК ПорядокИсправления,
	|	ХронологияСПересечениями.Регистратор КАК Регистратор,
	|	ХронологияСПересечениями.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|
	|	//Измерения
	|	&ТекстИзмерений_ХронологияСПересечениями
	|	
	|ПОМЕСТИТЬ ЗаписиПоИзмерениям
	|ИЗ
	|	ХронологияСПересечениями КАК ХронологияСПересечениями
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоглощенныеПериоды КАК ПоглощенныеПериоды
	|		ПО ХронологияСПересечениями.ИдентификаторСтроки = ПоглощенныеПериоды.ИдентификаторСтроки
	|ГДЕ
	|	ПоглощенныеПериоды.ИдентификаторСтроки ЕСТЬ NULL
	|;
	|
	|ВЫБРАТЬ 
	|	ХронологияИсправлений.*,
	|	ИСТИНА КАК Активность
	|
	|ПОМЕСТИТЬ ВТ_ИмяРегистра
	|
	|ИЗ
	|	ХронологияИсправлений КАК ХронологияИсправлений
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаписиПоИзмерениям КАК ЗаписиПоИзмерениям
	|	ПО ХронологияИсправлений.ИдентификаторСтроки = ЗаписиПоИзмерениям.ИдентификаторСтроки
	|ИНДЕКСИРОВАТЬ ПО
	|	&ПоляИндексирования
	|
	|;
	|УНИЧТОЖИТЬ ЗаписиПоИзмерениям;
	|УНИЧТОЖИТЬ ПоглощенныеПериоды;
	|УНИЧТОЖИТЬ ХронологияСПересечениями;
	|УНИЧТОЖИТЬ ПоследниеИсправления;
	|УНИЧТОЖИТЬ ХронологияБезДублейРегистраторов;
	|УНИЧТОЖИТЬ УникальныеРегистраторы;
	|УНИЧТОЖИТЬ ХронологияИсправлений
	|";
	
	РазделительПолей = ",
	|	";
	
	МетаданныеРегистра = Метаданные.РегистрыСведений[ИмяРегистра];
	
	ЕстьОрганизация = Ложь;
	
	// Измерения регистра.
	МассивИзмерений = Новый Массив;
	Для каждого МетаданныеИзмерения Из МетаданныеРегистра.Измерения Цикл
		Если МетаданныеИзмерения.Имя = "ДатаИсправления" Тогда
			Продолжить;
		КонецЕсли;
	
		Если ДополнительныеПоля.Свойство(МетаданныеИзмерения.Имя) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивИзмерений.Добавить(МетаданныеИзмерения.Имя);
		Если МетаданныеИзмерения.Имя = "Организация" Тогда
			ЕстьОрганизация = Истина;
		КонецЕсли;
	КонецЦикла;
	
	СписокИзмерений = Новый Массив;
	Для Каждого Измерение Из МассивИзмерений Цикл
		СписокИзмерений.Добавить("	%1." + Измерение + " КАК "+Измерение);
	КонецЦикла;
	
	ШаблонИзмерений = СтрСоединить(СписокИзмерений, РазделительПолей);
	
	ПеременныеПодставновкиИзмерений = Новый Массив;
	ПеременныеПодставновкиИзмерений.Добавить("&ТекстИзмерений_ДанныеРегистра");
	ПеременныеПодставновкиИзмерений.Добавить("&ТекстИзмерений_ХронологияИсправлений");
	ПеременныеПодставновкиИзмерений.Добавить("&ТекстИзмерений_ХронологияБезДублейРегистраторов");
	ПеременныеПодставновкиИзмерений.Добавить("&ТекстИзмерений_Т");
	ПеременныеПодставновкиИзмерений.Добавить("&ТекстИзмерений_ХронологияСПересечениями");
	
	Для Каждого ПеременнаяПодстановкиИзмерений Из ПеременныеПодставновкиИзмерений Цикл
		ТекущийТекстИзмерений = СтрШаблон(ШаблонИзмерений, 
											СтрЗаменить(ПеременнаяПодстановкиИзмерений,"&ТекстИзмерений_", ""));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ПеременнаяПодстановкиИзмерений, ТекущийТекстИзмерений);
	КонецЦикла;
	
	ПеременныеСоединенияПоИзмерениям = Новый Массив;
	ПеременныеСоединенияПоИзмерениям.Добавить("&СоединениеПоизмерениям_ХронологияБезДублейРегистраторов_ПоследниеИсправления");
	ПеременныеСоединенияПоИзмерениям.Добавить("&СоединениеПоизмерениям_ХронологияСПересечениями_Т");
	
	РазделительУсловийОбъединения = "
	|	И	";
	
	ШаблонУсловийОбъединения = " %1.%3 = %2.%3 ";
	
	Для Каждого Соединение Из ПеременныеСоединенияПоИзмерениям Цикл
		ИменаТаблиц = СтрРазделить(Соединение, "_", Ложь);
		СтрокиУсловий = Новый Массив;
		Для Каждого Измерение Из МассивИзмерений Цикл
			СтрокиУсловий.Добавить(СтрШаблон(ШаблонУсловийОбъединения,
													ИменаТаблиц.Получить(1),
													ИменаТаблиц.Получить(2),
													Измерение));
		КонецЦикла;
		
		ТекущийТекстСоединения =  СтрСоединить(СтрокиУсловий, РазделительУсловийОбъединения);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, Соединение, ТекущийТекстСоединения);
	КонецЦикла;
	
	ШаблонГруппировки = "	%1.%2";
	МассивГруппировки = Новый Массив;
	Для Каждого Измерение Из МассивИзмерений Цикл
		МассивГруппировки.Добавить(СтрШаблон(ШаблонГруппировки,
												"ХронологияБезДублейРегистраторов",
												Измерение)); 
	КонецЦикла;
											
	ТекстГруппировки = 	СтрСоединить(МассивГруппировки, РазделительПолей);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ГруппировкаПоИзмерениям_ХронологияБезДублейРегистраторов", ТекстГруппировки);

	// Ресурсы и реквизиты регистра.
	СписокРесурсовИРеквизитов = Новый Массив;
	Для каждого МетаданныеРесурса Из МетаданныеРегистра.Ресурсы Цикл
		Если ДополнительныеПоля.Свойство(МетаданныеРесурса.Имя) Тогда
			Продолжить;
		КонецЕсли;
		
		ПутьКПолю = "	ДанныеРегистра." + МетаданныеРесурса.Имя;
		СписокРесурсовИРеквизитов.Добавить(ПутьКПолю + " КАК " + МетаданныеРесурса.Имя);
	КонецЦикла;
	Для каждого МетаданныеРеквизита Из МетаданныеРегистра.Реквизиты Цикл
		
		Если МетаданныеРеквизита.Имя = "ДатаИсправления" Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДополнительныеПоля.Свойство(МетаданныеРеквизита.Имя) Тогда
			Продолжить;
		КонецЕсли;
		
		ПутьКПолю = "	ДанныеРегистра." + МетаданныеРеквизита.Имя;
		СписокРесурсовИРеквизитов.Добавить(ПутьКПолю + " КАК " + МетаданныеРеквизита.Имя);
	КонецЦикла;
	
	Для Каждого КлючИЗначение Из ДополнительныеПоля Цикл
		СписокРесурсовИРеквизитов.Добавить(КлючИЗначение.Значение + " КАК " + КлючИЗначение.Ключ);
	КонецЦикла;

	ТекстРесурсовИРеквизитов = СтрСоединить(СписокРесурсовИРеквизитов, РазделительПолей);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстРесурсовИРеквизитов", ТекстРесурсовИРеквизитов);
	
	Если ЕстьОрганизация Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОрганизацияГДЕ", "ДанныеРегистра.Организация = &Организация");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОрганизацияГДЕ", "ИСТИНА");
	КонецЕсли; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ПорядокУчетаОС", "РегистрСведений." + ИмяРегистра);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_ИмяРегистра", ?(ИмяВременнойТаблицы <> "", 
																	ИмяВременнойТаблицы, 
																	ИмяРегистра + "_ЗаписиСУчетомИсправлений"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляИндексирования",
			"
			|	ХронологияИсправлений.ОсновноеСредство" + ?(ЕстьОрганизация, ", ХронологияИсправлений.Организация", "")+"
			|");
	
	Если ЗначениеЗаполнено(ИмяПоляПериод) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеРегистра.Период", "ДанныеРегистра." + ИмяПоляПериод);
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

// Формирует текст запроса, который получает срез последних регистра с учетом исправлений.
// 
// Параметры:
// 	ИмяРегистра - Строка - Имя регистра сведений или имя временной таблицы записей для вычисления среза последних.
// 	ИмяВременнойТаблицы - Строка - Имя временной таблицы результата.
// 	ДополнительныеПоля - Структура - Позволяет добавить в таблицу доп. поля (Ключ: имя поля, Значение: Выражение поля).
// 	УсловияЗапроса - Строка - Условия запроса.
// 	ВременнаяТаблицаЗаписей - ВременнаяТаблицаЗапроса, Строка, Неопределено - Требуется для формирования списка полей выборки из источника:
// 																				Временная таблица менеджера временных таблиц 
// 																	  			или Строка - имя регистра сведений, если функция вызывается до момента, когда получается временная таблица записей
// 																	  			или неопределено, в случае выборки непосредственно из регистра указанного в 1 паарметре.
// 	
// Возвращаемое значение:
// 	Строка - Текст запроса.
Функция ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений(ИмяРегистра, ИмяВременнойТаблицы = "", ДополнительныеПоля = Неопределено, 
																УсловияЗапроса = "", ВременнаяТаблицаЗаписей = Неопределено) Экспорт

	Если ДополнительныеПоля = Неопределено Тогда
		ДополнительныеПоля = Новый Структура;
	КонецЕсли;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ДанныеРегистра.Период) КАК Период,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ОсновноеСредство КАК ОсновноеСредство
	|
	|ПОМЕСТИТЬ ВТ_ИмяРегистра_СрезПериод
	| 
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС КАК ДанныеРегистра
	|
	|ГДЕ
	|	ДанныеРегистра.Период <= &Дата
	|
	|	И (ДанныеРегистра.ДатаИсправления <= &ДатаДокумента
	|		ИЛИ ДанныеРегистра.ДатаИсправления = ДАТАВРЕМЯ(3999, 12, 31))
	|
	|	И ДанныеРегистра.Организация = &Организация
	|	И (ДанныеРегистра.ОсновноеСредство В (&СписокОС)
	|			ИЛИ &БезОтбораОС)
	|
	|	И ДанныеРегистра.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО Период, ОсновноеСредство, Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(НАЧАЛОПЕРИОДА(ДанныеРегистраИсправление.ДатаИсправления, ДЕНЬ), ДАТАВРЕМЯ(1,1,1))) КАК ДатаИсправления,
	|	ДанныеРегистра_СрезПериод.Период КАК Период,
	|	ДанныеРегистра_СрезПериод.Организация КАК Организация,
	|	ДанныеРегистра_СрезПериод.ОсновноеСредство КАК ОсновноеСредство
	|
	|ПОМЕСТИТЬ ВТ_ИмяРегистра_СрезПериодИсправления
	|
	|ИЗ
	|	ВТ_ИмяРегистра_СрезПериод КАК ДанныеРегистра_СрезПериод
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ДанныеРегистраИсправление
	|		ПО НАЧАЛОПЕРИОДА(ДанныеРегистраИсправление.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеРегистра_СрезПериод.Период, ДЕНЬ)
	|			И ДанныеРегистраИсправление.Организация = ДанныеРегистра_СрезПериод.Организация
	|			И ДанныеРегистраИсправление.ОсновноеСредство = ДанныеРегистра_СрезПериод.ОсновноеСредство
	|
	|			И (ДанныеРегистраИсправление.ДатаИсправления <= &ДатаДокумента
	|				ИЛИ ДанныеРегистраИсправление.ДатаИсправления = ДАТАВРЕМЯ(3999, 12, 31))
	|
	|			И ДанныеРегистраИсправление.ДатаИсправления <> ДАТАВРЕМЯ(1,1,1)
	|			И ДанныеРегистраИсправление.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра_СрезПериод.Период,
	|	ДанныеРегистра_СрезПериод.Организация,
	|	ДанныеРегистра_СрезПериод.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО Период, ОсновноеСредство, Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ИмяРегистра_СрезПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ДанныеРегистра.Регистратор) КАК Регистратор,
	|	ДанныеРегистра_СрезПериодИсправления.Период КАК Период,
	|	ДанныеРегистра_СрезПериодИсправления.Организация КАК Организация,
	|	ДанныеРегистра_СрезПериодИсправления.ОсновноеСредство КАК ОсновноеСредство
	|
	|ПОМЕСТИТЬ ВТ_ИмяРегистра_СрезРегистратор
	|
	|ИЗ
	|	ВТ_ИмяРегистра_СрезПериодИсправления КАК ДанныеРегистра_СрезПериодИсправления
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ДанныеРегистра
	|		ПО ДанныеРегистра.Организация = ДанныеРегистра_СрезПериодИсправления.Организация
	|			И ДанныеРегистра.ОсновноеСредство = ДанныеРегистра_СрезПериодИсправления.ОсновноеСредство
	|			И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеРегистра_СрезПериодИсправления.Период, ДЕНЬ)
	|			И ДанныеРегистра.ДатаИсправления = ДанныеРегистра_СрезПериодИсправления.ДатаИсправления
	|			И ДанныеРегистра.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра_СрезПериодИсправления.Период,
	|	ДанныеРегистра_СрезПериодИсправления.Организация,
	|	ДанныеРегистра_СрезПериодИсправления.ОсновноеСредство
	|
	|
	|ИНДЕКСИРОВАТЬ ПО Регистратор, Период, ОсновноеСредство, Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ИмяРегистра_СрезПериодИсправления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	&ТекстПолей
	|
	|ПОМЕСТИТЬ ВТ_ИмяРегистра
	|
	|ИЗ
	|	ВТ_ИмяРегистра_СрезРегистратор КАК ДанныеРегистра_СрезРегистратор
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ДанныеРегистра
	|	ПО ДанныеРегистра.Регистратор = ДанныеРегистра_СрезРегистратор.Регистратор
	|		И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеРегистра_СрезРегистратор.Период, ДЕНЬ)
	|		И ДанныеРегистра.Организация = ДанныеРегистра_СрезРегистратор.Организация
	|		И ДанныеРегистра.ОсновноеСредство = ДанныеРегистра_СрезРегистратор.ОсновноеСредство
	|		И ДанныеРегистра.Активность
	|
	|ГДЕ
	|	&ДанныеРегистра_УсловияТаблицы
	|
	|ИНДЕКСИРОВАТЬ ПО ОсновноеСредство, Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ИмяРегистра_СрезРегистратор
	|";
	
	ЕстьОрганизация = Ложь;
	СписокПолей = Новый Массив;
	ШаблонПоля = "	ДанныеРегистра.%1 КАК %1";
	
	Если ВременнаяТаблицаЗаписей = Неопределено 
			Или ТипЗнч(ВременнаяТаблицаЗаписей) = Тип("Строка") Тогда
		// Поля по метаданным регистра.
		
		ИмяРегистраДляПолученияМетаданных = ?(ВременнаяТаблицаЗаписей = Неопределено,
												ИмяРегистра,
												ВременнаяТаблицаЗаписей);
		
		МетаданныеРегистра = Метаданные.РегистрыСведений[ИмяРегистраДляПолученияМетаданных];

		Для каждого МетаданныеИзмерения Из МетаданныеРегистра.Измерения Цикл
			
			Если ДополнительныеПоля.Свойство(МетаданныеИзмерения.Имя) Тогда
				Продолжить;
			КонецЕсли;
			
			СписокПолей.Добавить(СтрШаблон(ШаблонПоля, МетаданныеИзмерения.Имя));
			Если МетаданныеИзмерения.Имя = "Организация" Тогда
				ЕстьОрганизация = Истина;
			КонецЕсли;
			 
		КонецЦикла; 
		
		Для каждого МетаданныеРесурса Из МетаданныеРегистра.Ресурсы Цикл
			
			Если ДополнительныеПоля.Свойство(МетаданныеРесурса.Имя) Тогда
				Продолжить;
			КонецЕсли;
			
			СписокПолей.Добавить(СтрШаблон(ШаблонПоля, МетаданныеРесурса.Имя));
			
		КонецЦикла; 
		
		Для каждого МетаданныеРеквизита Из МетаданныеРегистра.Реквизиты Цикл
			
			Если ДополнительныеПоля.Свойство(МетаданныеРеквизита.Имя) Тогда
				Продолжить;
			КонецЕсли;
			
			СписокПолей.Добавить(СтрШаблон(ШаблонПоля, МетаданныеРеквизита.Имя));
			
		КонецЦикла;
		 
	ИначеЕсли ТипЗнч(ВременнаяТаблицаЗаписей) = Тип("ВременнаяТаблицаЗапроса") Тогда
		// Поля временной таблицы с записями.		
		Для Каждого Колонка Из ВременнаяТаблицаЗаписей.Колонки Цикл
			
			Если СтрНайти("Период, Регистратор", Колонка.Имя) <> 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СписокПолей.Добавить(СтрШаблон(ШаблонПоля, Колонка.Имя));
		КонецЦикла;
		
		Если ВременнаяТаблицаЗаписей.Колонки.Найти("Активность") = Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеРегистраИсправление.Активность", "ИСТИНА");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеРегистра.Активность", "ИСТИНА");
		КонецЕсли;
		
		ЕстьОрганизация =  ВременнаяТаблицаЗаписей.Колонки.Найти("Организация") <> Неопределено; 
		
	КонецЕсли;
	
	// Дополнительные произвольные поля.
	Для Каждого КлючИЗначение Из ДополнительныеПоля Цикл
			СписокПолей.Добавить(КлючИЗначение.Значение + " КАК " + КлючИЗначение.Ключ);
	КонецЦикла;
	
	РазделительПолей = ",
		|	";
	ТекстПолей = СтрСоединить(СписокПолей, РазделительПолей);
	
	Если НЕ ЕстьОрганизация Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеРегистраДоИсправления.Организация = ДанныеРегистра_СрезПериод.Организация", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеРегистраИсправление.Организация = ДанныеРегистра_СрезПериод.Организация", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеРегистра.Организация = &Организация", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеРегистра.Организация = ДанныеРегистра_СрезПериодИсправления.Организация", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеРегистра.Организация = ДанныеРегистра_СрезРегистратор.Организация", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеРегистра.Организация", "НЕОПРЕДЕЛЕНО");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеРегистра_СрезПериод.Организация", "НЕОПРЕДЕЛЕНО");
		
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса, 
			"ИНДЕКСИРОВАТЬ ПО Период, ОсновноеСредство, Организация", 
			"ИНДЕКСИРОВАТЬ ПО Период, ОсновноеСредство");
			
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса, 
			"ИНДЕКСИРОВАТЬ ПО Регистратор, Период, ОсновноеСредство, Организация", 
			"ИНДЕКСИРОВАТЬ ПО Регистратор, Период, ОсновноеСредство");
			
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса, 
			"ИНДЕКСИРОВАТЬ ПО ОсновноеСредство, Организация", 
			"ИНДЕКСИРОВАТЬ ПО ОсновноеСредство");
			
	КонецЕсли; 
	
	ТаблицаРегистра = ?(ВременнаяТаблицаЗаписей = Неопределено, "РегистрСведений.", "") + ИмяРегистра;
	
	ИмяВременнойТаблицыРезультата = ?(ИмяВременнойТаблицы <> "",
										ИмяВременнойТаблицы, 
										ИмяРегистра + "_СрезПоследнихСУчетомИсправлений");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ПорядокУчетаОС", ТаблицаРегистра);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПолей", ТекстПолей);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_ИмяРегистра", ИмяВременнойТаблицыРезультата);
	
	Если НЕ ПустаяСтрока(УсловияЗапроса) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДанныеРегистра_УсловияТаблицы", УсловияЗапроса);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДанныеРегистра_УсловияТаблицы", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УточнитьПараметрыРегистрацииОрганизацииВФНС(Параметры, Организация, Период) Экспорт

	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Параметры.Вставить("Период", Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИсторияРегистраций.Период КАК Период,
	|	ИсторияРегистраций.РегистрацияВНалоговомОргане КАК ОсновнойНалоговыйОрган,
	|	ЕСТЬNULL(ИсторияРегистраций.РегистрацияВНалоговомОргане.КодПоОКТМО, """") КАК КодПоОКТМО
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&Период, СтруктурнаяЕдиница = &Организация) КАК ИсторияРегистраций";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Параметры.Вставить("ОсновнойНалоговыйОрган", Выборка.ОсновнойНалоговыйОрган);
	Параметры.Вставить("КодПоОКТМО", Выборка.КодПоОКТМО);
	Параметры.Вставить("ДатаПоследнейРегистрации", Выборка.Период);

КонецПроцедуры

Процедура УточнитьПараметрыОсвобожденияОтУплатыНалогов(Параметры, Организация, Период) Экспорт

	Если Не НалоговыйУчет.ДеятельностьОтнесенаКПострадавшимОтКоронавируса(Организация) Тогда
		Возврат;
	КонецЕсли;

	Если Параметры = Неопределено Тогда
		Параметры = Новый Структура;
	КонецЕсли;

	ПериодОсвобожденияОтНалогов = НалоговыйУчет.ПериодОсвобожденияОтНалоговПострадавшимОтКоронавируса();

	Параметры.Вставить("ПрименяетсяОсвобождениеОтУплатыНалогаВНалогомПериоде",
		Год(ПериодОсвобожденияОтНалогов.Начало) = Год(Период));

	Параметры.Вставить("ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде",
	    ПериодОсвобожденияОтНалогов.Начало <= Период
		И Период <= ПериодОсвобожденияОтНалогов.Конец);

	Параметры.Вставить("ГодовойРасчет", Месяц(Период) = 12);

КонецПроцедуры

Функция ПустаяСправкаРасчет(ИмяРегистраСведений) Экспорт

	СправкаРасчет = РегистрыСведений[ИмяРегистраСведений].СоздатьНаборЗаписей().ВыгрузитьКолонки();

	СправкаРасчет.Колонки.Удалить("Регистратор");
	СправкаРасчет.Колонки.Удалить("Активность");
	СправкаРасчет.Колонки.Удалить("НомерСтроки");

	Если ИмяРегистраСведений = "РасчетТранспортногоНалога" Тогда
		СправкаРасчет.Колонки.Добавить("УплачиваютсяАвансы", Новый ОписаниеТипов("Булево"));
	КонецЕсли;

	Возврат СправкаРасчет;

КонецФункции

Процедура ДополнитьПараметрыРасчетаНалогаНаИмущество(ПараметрыРасчета, Организация, ПериодРасчета, ДополнительныеПараметрыРасчета) Экспорт
	
	Если ДополнительныеПараметрыРасчета <> Неопределено
		И ДополнительныеПараметрыРасчета.Свойство("МенеджерВременныхТаблиц") Тогда
			
		ПараметрыРасчета.МенеджерВременныхТаблиц = ДополнительныеПараметрыРасчета.МенеджерВременныхТаблиц;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаПриРасчетеНалогаЗаПериод(Период, Запрос) Экспорт

	Запрос.УстановитьПараметр("ИспользуетсяУправлениеВНА_2_4", ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ДобавитьМесяц(Период, -1)));
	Запрос.УстановитьПараметр("НачалоПредыдущегоМесяца", ДобавитьМесяц(Период, -1));
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца", Период-1);

КонецПроцедуры

// Процедура формирует временную таблицу в менеджере временных таблиц,
// содержащую сведения о регистрации в налоговых органах, в которые
// уплачивается авансовые платежи организации по указанному виду налога.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер, в котором создать таблицы.
//	Организация - СправочникСсылка.Организации - организация, для которой определяются авансовые платежи.
//	Период - Дата - Дата, по состоянию на которую определяются сведения.
//	Налог - Строка - Может содержать одно из значений: "ЗемельныйНалог", "ТранспортныйНалог", "НалогНаИмущество".
//
Процедура СоздатьНалоговыеОрганыСУстановленнойУплатойАвансов(МенеджерВременныхТаблиц, Организация, Период, Налог) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество;

	Если Налог = "ЗемельныйНалог" Тогда
		ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог;
	ИначеЕсли Налог = "ТранспортныйНалог" Тогда
		ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог;
	КонецЕсли;

	ГоловнаяОрганизация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ГоловнаяОрганизация");

	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Период",      Период);
	Запрос.УстановитьПараметр("Налог",       ВидНалога);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегистрацииВНалоговомОргане.Ссылка КАК НалоговыйОрган,
	|	РегистрацииВНалоговомОргане.КодРегиона КАК КодРегиона
	|ПОМЕСТИТЬ ВТ_ВсеРегистрацииВНалоговомОргане
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Владелец = &ГоловнаяОрганизация
	|	И НЕ РегистрацииВНалоговомОргане.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.РегистрацияВНалоговомОргане КАК НалоговыйОрган
	|ПОМЕСТИТЬ ВТ_ПорядокУплатыНалоговНаМестах
	|ИЗ
	|	РегистрСведений.ПорядокУплатыНалоговНаМестах.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И Налог = &Налог
	|				И УплачиваютсяАвансы) КАК ПорядокУплатыНалоговНаМестахСрезПоследних
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ВсеРегистрацииВНалоговомОргане.НалоговыйОрган
	|ИЗ
	|	РегистрСведений.ПорядокУплатыНалоговПоРегионам.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И Налог = &Налог
	|				И УплачиваютсяАвансы) КАК ПорядокУплатыНалоговПоРегионамСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеРегистрацииВНалоговомОргане КАК ВТ_ВсеРегистрацииВНалоговомОргане
	|		ПО (ПорядокУплатыНалоговПоРегионамСрезПоследних.КодРегиона = ВТ_ВсеРегистрацииВНалоговомОргане.КодРегиона)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ВТ_ПорядокУплатыНалоговНаМестах.НалоговыйОрган = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|			ТОГДА ВТ_ВсеРегистрацииВНалоговомОргане.НалоговыйОрган
	|		ИНАЧЕ ВТ_ПорядокУплатыНалоговНаМестах.НалоговыйОрган
	|	КОНЕЦ КАК НалоговыйОрган
	|ПОМЕСТИТЬ ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов
	|ИЗ
	|	ВТ_ПорядокУплатыНалоговНаМестах КАК ВТ_ПорядокУплатыНалоговНаМестах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВсеРегистрацииВНалоговомОргане КАК ВТ_ВсеРегистрацииВНалоговомОргане
	|		ПО (ВТ_ПорядокУплатыНалоговНаМестах.НалоговыйОрган = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НалоговыйОрган
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов.НалоговыйОрган КАК НалоговыйОрган
	|ИЗ
	|	ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов КАК ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов
	|";

	Запрос.Выполнить();

КонецПроцедуры

Функция ПодготовитьТаблицыРасчетНалога(ТаблицаРеквизиты, Отказ, ДополнительныеПараметры = Неопределено) Экспорт

	СтруктураТаблиц = Новый Структура();
	СтруктураТаблиц.Вставить("ТаблицаСправкиРасчета");
	СтруктураТаблиц.Вставить("ТаблицаСправкиРасчетаПоКадастровойСтоимости");
	СтруктураТаблиц.Вставить("ТаблицаСправкиРасчетаПоСреднегодовойСтоимости");

	СтруктураТаблиц.Вставить("ТаблицаРасходыПоНалогу");
	СтруктураТаблиц.Вставить("ТаблицаРасходыНаПлатон");

	Параметры = ПодготовитьПараметрыРасчетНалога(ТаблицаРеквизиты);
	Если Параметры.Реквизиты.Количество() = 0 Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];
	ТаблицыРасчетНалога = ТаблицыРасчетНалога(Реквизиты, ДополнительныеПараметры);

	СправкаРасчетДляРасходов = РасчетИмущественныхНалогов.ПустаяСправкаРасчет(Реквизиты.ИмяРегистраРасчетНалогов);

	Если Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество
			И Реквизиты.Период >= РасчетИмущественныхНалогов.НачалоПримененияНовогоРасчетаНалогаНаИмущество() Тогда
		// Налог на имущество с 2023г.
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицыРасчетНалога.СправкаРасчетПоКадастровойСтоимости, СправкаРасчетДляРасходов);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицыРасчетНалога.СправкаРасчетПоСреднегодовойСтоимости, СправкаРасчетДляРасходов);

		СтруктураТаблиц.Вставить("ТаблицаСправкиРасчетаПоКадастровойСтоимости", ТаблицыРасчетНалога.СправкаРасчетПоКадастровойСтоимости);
		СтруктураТаблиц.Вставить("ТаблицаСправкиРасчетаПоСреднегодовойСтоимости", ТаблицыРасчетНалога.СправкаРасчетПоСреднегодовойСтоимости);
	Иначе
		// Налог на имущество до 2023г и прочие налоги.
		СправкаРасчетДляРасходов = ТаблицыРасчетНалога.СправкаРасчет;
		СтруктураТаблиц.Вставить("ТаблицаСправкиРасчета", ТаблицыРасчетНалога.СправкаРасчет);
	КонецЕсли;

	Результат = РасходыПоНалогу(
					Реквизиты,
					СправкаРасчетДляРасходов,
					ТаблицыРасчетНалога.РасходыНаПлатон,
					ДополнительныеПараметры,
					Отказ);

	ПроверитьСправкуРасчет(СправкаРасчетДляРасходов, ДополнительныеПараметры.СписокОшибок);

	СтруктураТаблиц.Вставить("ТаблицаРасходыПоНалогу", Результат.ПрочиеРасходы);
	СтруктураТаблиц.Вставить("ТаблицаПрочиеАктивыПассивы", Результат.ПрочиеАктивыПассивы);
	СтруктураТаблиц.Вставить("ТаблицаДвиженияПоПрочимАктивамПассивам", Результат.ДвиженияПоПрочимАктивамПассивам);
	СтруктураТаблиц.Вставить("ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы", Результат.ДвиженияДоходыРасходыПрочиеАктивыПассивы);
	СтруктураТаблиц.Вставить("ТаблицаРасходыНаПлатон", ТаблицыРасчетНалога.РасходыНаПлатон);

	Возврат СтруктураТаблиц;
	
КонецФункции

Процедура СформироватьДвиженияРасчетНалога(ТаблицыНачислениеНалога, ТаблицаРеквизитов, Движения, Отказ, ДополнительныеПараметры) Экспорт

	Параметры = ПодготовитьПараметрыДвиженийРасчетНалога(ТаблицаРеквизитов);
	Если Параметры.Реквизиты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	РасчетИмущественныхНалоговПереопределяемый.ДополнитьПараметрыДвиженийСправкаРасчет(Параметры,
																						Реквизиты,
																						ТаблицыНачислениеНалога.ТаблицаСправкиРасчета);

	// Данные для справки-расчета для налога на имущество до 2023г. и прочих имущественных налогов.
	Если ТаблицыНачислениеНалога.Свойство("ТаблицаСправкиРасчета")
			И ТаблицыНачислениеНалога.ТаблицаСправкиРасчета <> Неопределено Тогда

		ЗакрытиеМесяца.ЗаписьВоВспомогательныеРегистрыСведений(
			Движения,
			ТаблицыНачислениеНалога.ТаблицаСправкиРасчета,
			Параметры.Реквизиты,
			Реквизиты.ИмяРегистраРасчетНалогов);

	КонецЕсли;

	// Данные для справки-расчета по налогу на имущество с 2023г.
	Если ТаблицыНачислениеНалога.Свойство("ТаблицаСправкиРасчетаПоКадастровойСтоимости")
			И ТаблицыНачислениеНалога.ТаблицаСправкиРасчетаПоКадастровойСтоимости <> Неопределено Тогда

		ЗакрытиеМесяца.ЗаписьВоВспомогательныеРегистрыСведений(
			Движения,
			ТаблицыНачислениеНалога.ТаблицаСправкиРасчетаПоКадастровойСтоимости,
			Параметры.Реквизиты,
			Реквизиты.ИмяРегистраРасчетНалогов + "ПоКадастровойСтоимости");

	КонецЕсли;

	Если ТаблицыНачислениеНалога.Свойство("ТаблицаСправкиРасчетаПоСреднегодовойСтоимости")
			И ТаблицыНачислениеНалога.ТаблицаСправкиРасчетаПоСреднегодовойСтоимости <> Неопределено  Тогда

		ЗакрытиеМесяца.ЗаписьВоВспомогательныеРегистрыСведений(
			Движения,
			ТаблицыНачислениеНалога.ТаблицаСправкиРасчетаПоСреднегодовойСтоимости,
			Параметры.Реквизиты,
			Реквизиты.ИмяРегистраРасчетНалогов + "ПоСреднегодовойСтоимости");

	КонецЕсли;

	Если ТаблицыНачислениеНалога.ТаблицаРасходыПоНалогу.Количество() <> 0 Тогда
		Движения.ПрочиеРасходы.Записывать = Истина;
		Движения.ПрочиеРасходы.Загрузить(ТаблицыНачислениеНалога.ТаблицаРасходыПоНалогу);
	КонецЕсли;

	Если ТаблицыНачислениеНалога.ТаблицаПрочиеАктивыПассивы.Количество() <> 0 Тогда
		Движения.ПрочиеАктивыПассивы.Записывать = Истина;
		Движения.ПрочиеАктивыПассивы.Загрузить(ТаблицыНачислениеНалога.ТаблицаПрочиеАктивыПассивы);
	КонецЕсли;

	Если ТаблицыНачислениеНалога.ТаблицаДвиженияПоПрочимАктивамПассивам.Количество() <> 0 Тогда
		Движения.ДвиженияПоПрочимАктивамПассивам.Записывать = Истина;
		Движения.ДвиженияПоПрочимАктивамПассивам.Загрузить(ТаблицыНачислениеНалога.ТаблицаДвиженияПоПрочимАктивамПассивам);
	КонецЕсли;

	Если ТаблицыНачислениеНалога.ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы.Количество() <> 0 Тогда
		Движения.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Записывать = Истина;
		Движения.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Загрузить(ТаблицыНачислениеНалога.ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы);
	КонецЕсли;

КонецПроцедуры

Процедура ДополнитьПараметрыДвиженийСправкаРасчет(Реквизиты, СписокОбязательныхКолонок) Экспорт

	Если Реквизиты.Свойство("ВидНалога") Тогда
		Если Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
			СписокОбязательныхКолонок = СписокОбязательныхКолонок
			+ ",СуммаПлатыОператоруСистемыПлатон";
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Функция ОрганизацииУплачивающиеАвансы(Организация, Период, Налог, ОднаОрганизация = Истина) Экспорт
	Возврат Неопределено;
КонецФункции

#КонецОбласти

#Область Прочее

Функция ПодготовитьПараметрыДвиженийРасчетНалога(ТаблицаРеквизитов)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"						// <Дата>
	+ "Организация,"				// <СправочникСсылка.Организации>
	+ "Регистратор,"				// <ДокументСсылка.*>
	+ "ВидНалога,"					// <ПеречислениеСсылка.ВидыИмущественныхНалогов>
	+ "ИмяРегистраРасчетНалогов"	// <Строка, 0>
	;

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизитов, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПодготовитьПараметрыРасчетНалога(ТаблицаРеквизиты) Экспорт

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"						// <Дата>
	+ "Организация,"				// <СправочникСсылка.Организации>
	+ "Регистратор,"				// <ДокументСсылка.*>
	+ "ВидНалога,"					// <Перечисление.ВидыИмущественныхНалогов>
	+ "Содержание,"					// <Строка, 150>
	+ "ИмяРегистраРасчетНалогов"	// <Строка, 0>
	;

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ТаблицыРасчетНалога(Реквизиты, ДополнительныеПараметры)

	СправкаРасчет = РасчетИмущественныхНалогов.ПустаяСправкаРасчет(Реквизиты.ИмяРегистраРасчетНалогов);
	РасходыНаПлатон = ПустаяТаблицаРасходыНаПлатон();

	Если Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда

		РасчетПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(
							Реквизиты.Организация, Реквизиты.Период, ДополнительныеПараметры);

	ИначеЕсли Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда

		РасчетыПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоТранспортномуНалогу(
							Реквизиты.Организация, Реквизиты.Период, ДополнительныеПараметры);

		РасчетПоНалогу = РасчетыПоНалогу.Налог;

		Если РасчетыПоНалогу.Платон <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетыПоНалогу.Платон, РасходыНаПлатон);
		КонецЕсли;

		ПроверитьРасчетТранспортногоНалога(РасчетыПоНалогу, ДополнительныеПараметры.СписокОшибок);

	ИначеЕсли Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда

		РасчетПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоЗемельномуНалогу(
							Реквизиты.Организация, Реквизиты.Период, ДополнительныеПараметры);

	КонецЕсли;

	ТаблицыРасчетНалога = Новый Структура;

	Если Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		// РасчетПоНалогу - структура из 2х таблиц с 2023.
		Если ТипЗнч(РасчетПоНалогу) = Тип("Структура") Тогда
			Если РасчетПоНалогу.Свойство("РасчетНалогаНаИмущество") Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетПоНалогу.РасчетНалогаНаИмущество, СправкаРасчет);
				ТаблицыРасчетНалога.Вставить("СправкаРасчет", СправкаРасчет);
			Иначе
				ТаблицыРасчетНалога.Вставить("СправкаРасчетПоКадастровойСтоимости",   РасчетПоНалогу.РасчетНалогаНаИмуществоПоКадастровойСтоимости);
				ТаблицыРасчетНалога.Вставить("СправкаРасчетПоСреднегодовойСтоимости", РасчетПоНалогу.РасчетНалогаНаИмуществоПоСреднегодовойСтоимости);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
		Если ТипЗнч(РасчетПоНалогу) = Тип("Структура") Тогда
			Если РасчетПоНалогу.Свойство("РасчетЗемельногоНалогаДо2020") Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетПоНалогу.РасчетЗемельногоНалогаДо2020, СправкаРасчет);
				ТаблицыРасчетНалога.Вставить("СправкаРасчет", СправкаРасчет);
			Иначе
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетПоНалогу.РасчетЗемельногоНалога, СправкаРасчет);
				ТаблицыРасчетНалога.Вставить("СправкаРасчет", СправкаРасчет);
			КонецЕсли;
		КонецЕсли;
	Иначе
		// РасчетПоНалогу - структура из 1 таблицы.
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетПоНалогу, СправкаРасчет);
		ТаблицыРасчетНалога.Вставить("СправкаРасчет", СправкаРасчет);
	КонецЕсли;

	ТаблицыРасчетНалога.Вставить("РасходыНаПлатон", РасходыНаПлатон);

	Возврат ТаблицыРасчетНалога;

КонецФункции

Процедура ПроверитьСправкуРасчет(СправкаРасчет, СписокОшибок)

	ДанныеСтроки = СправкаРасчет.Найти("", "КодПоОКТМО");
	Если ДанныеСтроки <> Неопределено Тогда

		ТекстСообщения = НСтр("ru = 'Не указан код по ОКТМО при регистрации в налоговом органе ""%1""';
								|en = 'RNCMT code for registration in the tax authority ""%1"" is not specified.'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Строка(ДанныеСтроки.ИФНС));
		
		Если СправкаРасчет.Колонки.Найти("ПериодРасчета") <> Неопределено Тогда
			ТекстРекомендации = НСтр("ru = 'Проверьте наличие регистрации в ИФНС по организации ""%1"" на дату %2.';
									|en = 'Check whether the %1 company''s registration with IFTS is valid on %2.'");
			ТекстРекомендации = СтрШаблон(ТекстРекомендации,
											ДанныеСтроки.Организация,
											Формат(ДанныеСтроки.ПериодРасчета, "ДЛФ=D"));
											
			ИтоговоеСообщение = Новый Массив;
			ИтоговоеСообщение.Добавить(ТекстСообщения);
			ИтоговоеСообщение.Добавить(ТекстРекомендации);
			
			ТекстСообщения = СтрСоединить(ИтоговоеСообщение, Символы.ПС);
		КонецЕсли;
		
		ВнеоборотныеАктивыСлужебный.ДобавитьОписаниеОшибки(
			ТекстСообщения,
			ДанныеСтроки.ИФНС,
			ДанныеСтроки.Организация,
			СписокОшибок);
			
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьРасчетТранспортногоНалога(РасчетыПоНалогу, СписокОшибок)

	СтрокиБезСтавки = РасчетыПоНалогу.Налог.НайтиСтроки(Новый Структура("ОтсутствуетСтавка", Истина));
	Для каждого ДанныеСтроки Из СтрокиБезСтавки Цикл

		ТекстСообщения = НСтр("ru = 'Не удалось определить ставку налога для транспортного средства ""%1""';
								|en = 'Cannot determine tax rate for vehicle ""%1""'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Строка(ДанныеСтроки.ОсновноеСредство));

		ВнеоборотныеАктивыСлужебный.ДобавитьОписаниеОшибки(
			ТекстСообщения,
			ДанныеСтроки.ОсновноеСредство,
			ДанныеСтроки.Организация,
			СписокОшибок);

	КонецЦикла;

КонецПроцедуры

Функция РасходыПоНалогу(Реквизиты, СправкаРасчет, РасходыНаПлатон, ДополнительныеПараметры, Отказ)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.ИФНС КАК РегистрацияВНалоговомОргане,
	|
	|	&СуммаНалогаКУплате КАК СуммаРегл,
	|
	|	&СуммаНалогаКУплате * &КоэффициентПересчетаВУпр КАК СуммаБезНДС,
	|
	|	&СуммаНалогаКУплате * &КоэффициентПересчетаВУпр КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА (&СуммаНалогаКУплате) * &КоэффициентПересчетаВУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр
	|
	|ПОМЕСТИТЬ СправкаРасчет
	|ИЗ
	|	&СправкаРасчет КАК СправкаРасчет
	|ГДЕ
	|	&СуммаНалогаКУплате <> 0
	|	И &ФормироватьПроводкиПоНалогу
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ
	|	РасходыНаПлатон.ОсновноеСредство КАК ОсновноеСредство,
	|	РасходыНаПлатон.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	РасходыНаПлатон.Подразделение КАК Подразделение,
	|	РасходыНаПлатон.СтатьяРасходов КАК СтатьяРасходов,
	|	РасходыНаПлатон.АналитикаРасходов КАК АналитикаРасходов,
	|
	|	РасходыНаПлатон.СуммаНУДт КАК СуммаНУ,
	|	РасходыНаПлатон.СуммаНУКт - РасходыНаПлатон.СуммаНУДт КАК ПостояннаяРазница,
	|	-РасходыНаПлатон.СуммаНУКт КАК ВременнаяРазница
	|
	|ПОМЕСТИТЬ РасходыНаПлатон
	|ИЗ
	|	&РасходыНаПлатон КАК РасходыНаПлатон
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ПорядокУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|		&Период,
	|		ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|			И ОсновноеСредство В (
	|				ВЫБРАТЬ
	|					СправкаРасчет.ОсновноеСредство
	|				ИЗ
	|					СправкаРасчет КАК СправкаРасчет)) КАК ПорядокУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходов.ОсновноеСредство КАК ОсновноеСредство,
	|	СпособыОтраженияРасходов.СтатьяРасходов КАК СтатьяРасходов,
	|	СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом КАК СпособОтраженияРасходовЗаданДокументом,
	|	СпособыОтраженияРасходов.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	СпособыОтраженияРасходов.АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ СпособыОтраженияРасходов
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоИмущественнымНалогам.СрезПоследних(
	|		&Период,
	|		ОсновноеСредство В (
	|			ВЫБРАТЬ
	|				СправкаРасчет.ОсновноеСредство
	|			ИЗ
	|				СправкаРасчет КАК СправкаРасчет)
	|		И Организация = &Организация
	|		И ВидНалога = &ВидНалога) КАК СпособыОтраженияРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	СпособОтраженияРасходов
	|;
	|
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение КАК Подразделение
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|		&Период,
	|		ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|			И Организация = &Организация
	|			И ОсновноеСредство В (
	|				ВЫБРАТЬ
	|					СправкаРасчет.ОсновноеСредство
	|				ИЗ
	|					СправкаРасчет КАК СправкаРасчет)) КАК МестонахождениеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|	ВЫБОР КОГДА НЕ ЕСТЬNULL(СпособыОтраженияРасходов.СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) ТОГДА
	|		СправкаРасчет.СуммаРегл
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	МестонахождениеОС.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СтатьяРасходов, НЕОПРЕДЕЛЕНО) КАК СтатьяРасходов,
	|	ЕСТЬNULL(СпособыОтраженияРасходов.АналитикаРасходов, НЕОПРЕДЕЛЕНО) КАК АналитикаРасходов,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|ГДЕ
	|	НЕ ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	РасходыНаПлатон.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	РасходыНаПлатон.ОсновноеСредство КАК ОсновноеСредство,
	|	НЕОПРЕДЕЛЕНО КАК РегистрацияВНалоговомОргане,
	|	0 КАК СуммаРегл,
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаУпр,
	|	ВЫБОР КОГДА НЕ ВЫРАЗИТЬ(РасходыНаПлатон.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ПринятиеКНалоговомуУчету ТОГДА
	|		РасходыНаПлатон.ПостояннаяРазница + РасходыНаПлатон.СуммаНУ
	|	ИНАЧЕ
	|		РасходыНаПлатон.ПостояннаяРазница
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	РасходыНаПлатон.ВременнаяРазница КАК ВременнаяРазница,
	|	РасходыНаПлатон.Подразделение КАК Подразделение,
	|	РасходыНаПлатон.СтатьяРасходов КАК СтатьяРасходов,
	|	РасходыНаПлатон.АналитикаРасходов КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРБП),
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РаспределениеРБП)
	|ИЗ
	|	РасходыНаПлатон КАК РасходыНаПлатон
	|;
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеАмортизационныхРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходовНалог КАК СтатьяРасходов,
	|		АналитикаРасходовНалог КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходовНалог.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПараметрыНачисленияЗемельногоНалога КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПараметрыНачисленияТранспортногоНалога КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПараметрыНачисленияНалогаНаИмущество КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеСпособаОтраженияИмущественныхНалогов КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводПервоначальныхСведенийДляРасчетаТранспортногоНалога КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|";

	УчестьОсвобождениеОтУплатыНалога(ТекстЗапроса, ДополнительныеПараметры);

	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Реквизиты.Организация);

	КоэффициентПересчетаВУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
												ВалютаРегл, ВалютаУпр, Реквизиты.Период);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СправкаРасчет",   СправкаРасчет);
	Запрос.УстановитьПараметр("РасходыНаПлатон", РасходыНаПлатон);
	Запрос.УстановитьПараметр("Период",          Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",     Реквизиты.Организация);
	Запрос.УстановитьПараметр("ВидНалога",       Реквизиты.ВидНалога);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВУпр", КоэффициентПересчетаВУпр);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.НачислениеИмущественныхНалогов);
	Запрос.УстановитьПараметр("НастройкаХозяйственнойОперации", Справочники.НастройкиХозяйственныхОпераций.НачислениеИмущественныхНалогов);
	Запрос.УстановитьПараметр("ДатаПрекращенияДействияЛьготПлатон", ВнеоборотныеАктивыЛокализация.ДатаПрекращенияДействияЛьготПлатон());

	Запрос.УстановитьПараметр("УправленческийУчетОрганизаций",
		РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций(НачалоМесяца(Реквизиты.Период)));

	ФормироватьПроводкиПоНалогу =
		ДополнительныеПараметры = Неопределено
		ИЛИ Не ДополнительныеПараметры.Свойство("ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде")
		ИЛИ Не ДополнительныеПараметры.ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде;

	Запрос.УстановитьПараметр("ФормироватьПроводкиПоНалогу", ФормироватьПроводкиПоНалогу);

	Результат = Запрос.ВыполнитьПакет();

	ВыборкаРасходыБезРаспределения = Результат[Результат.ВГраница()-1].Выбрать();
	ВыборкаРасходыСРаспределением = Результат[Результат.ВГраница()].Выбрать();

	ТаблицыДвиженийПоНалогу = ТаблицыДвиженийПоНалогу(
		Реквизиты.ВидНалога,
		ВыборкаРасходыБезРаспределения,
		ВыборкаРасходыСРаспределением,
		Отказ,
		ДополнительныеПараметры.СписокОшибок);

	Возврат ТаблицыДвиженийПоНалогу;

КонецФункции

Функция ТаблицыДвиженийПоНалогу(ВидНалога, ВыборкаРасходыБезРаспределения, ВыборкаРасходыСРаспределением, Отказ, СписокОшибок = Неопределено)

	ПрочиеРасходы = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ПрочиеАктивыПассивы = РегистрыНакопления.ПрочиеАктивыПассивы.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ДвиженияПоПрочимАктивамПассивам = РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ДвиженияДоходыРасходыПрочиеАктивыПассивы = РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.СоздатьНаборЗаписей().ВыгрузитьКолонки();

	СтатьяАктивовПассивов = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Налоги;
	АналитикаАктивовПассивов = Неопределено;
	Если ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
		АналитикаАктивовПассивов = Перечисления.ТипыНалогов.ЗемельныйНалог;
	ИначеЕсли ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		АналитикаАктивовПассивов = Перечисления.ТипыНалогов.НалогНаИмущество;
	ИначеЕсли ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		АналитикаАктивовПассивов = Перечисления.ТипыНалогов.ТранспортныйНалог;
	КонецЕсли;

	Пока ВыборкаРасходыБезРаспределения.Следующий() Цикл

		Если Не ЗначениеЗаполнено(ВыборкаРасходыБезРаспределения.СтатьяРасходов) Тогда

			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Для основного средства ""%1"" не установлен способ отражения расходов по налогам.';
									|en = 'Method of recording tax expenses is not set for the ""%1"" fixed asset.'"),
								ВыборкаРасходыБезРаспределения.ОсновноеСредство);

			ОбщегоНазначения.СообщитьПользователю(
				ТекстСообщения,
				ВыборкаРасходыБезРаспределения.ОсновноеСредство,,,
				Отказ);

			ВнеоборотныеАктивыСлужебный.ДобавитьОписаниеОшибки(
				ТекстСообщения,
				ВыборкаРасходыБезРаспределения.ОсновноеСредство,
				ВыборкаРасходыБезРаспределения.Организация,
				СписокОшибок);

		КонецЕсли;

		УникальныйИдентификатор = Строка(Новый УникальныйИдентификатор());

		Запись = ПрочиеРасходы.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыБезРаспределения);
		Запись.ИдентификаторФинЗаписи = УникальныйИдентификатор;

		Если ВыборкаРасходыБезРаспределения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РаспределениеРБП Тогда
			Запись = ПрочиеРасходы.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыБезРаспределения);
			Запись.ВидДвижения = ВидДвиженияНакопления.Расход;
			Запись.СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.РасходыНаПлатон;
			Запись.АналитикаРасходов = Неопределено;
			Запись.ПостояннаяРазница = 0;
			Запись.ИдентификаторФинЗаписи = УникальныйИдентификатор;
		КонецЕсли;

		Запись = ПрочиеАктивыПассивы.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыБезРаспределения);
		Запись.Статья = СтатьяАктивовПассивов;
		Запись.Аналитика = АналитикаАктивовПассивов;

		Запись = ДвиженияПоПрочимАктивамПассивам.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыБезРаспределения);
		Запись.Статья = СтатьяАктивовПассивов;
		Запись.Аналитика = АналитикаАктивовПассивов;
		Запись.СуммаУпр  = ВыборкаРасходыБезРаспределения.Сумма;
		Запись.СуммаСНДС = Запись.СуммаБезНДС;
		Запись.ИдентификаторФинЗаписи = УникальныйИдентификатор;

		Запись = ДвиженияДоходыРасходыПрочиеАктивыПассивы.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыБезРаспределения, "Период, ХозяйственнаяОперация, Организация, Сумма, СуммаРегл, СуммаУпр");

		Запись.Статья = СтатьяАктивовПассивов;
		Запись.АналитикаАктивовПассивов = АналитикаАктивовПассивов;
		Запись.Подразделение = ВыборкаРасходыБезРаспределения.Подразделение;
		Запись.НаправлениеДеятельности = ВыборкаРасходыБезРаспределения.НаправлениеДеятельности;

		Запись.КорСтатья = ВыборкаРасходыБезРаспределения.СтатьяРасходов;
		Запись.КорАналитикаРасходов = ВыборкаРасходыБезРаспределения.АналитикаРасходов;
		Запись.КорПодразделение = ВыборкаРасходыБезРаспределения.Подразделение;
		Запись.КорНаправлениеДеятельности = ВыборкаРасходыБезРаспределения.НаправлениеДеятельности;

	КонецЦикла;

	Если ВыборкаРасходыСРаспределением <> Неопределено Тогда

		Пока ВыборкаРасходыСРаспределением.Следующий() Цикл

			ТаблицаРаспределения = ВыборкаРасходыСРаспределением.ТаблицаРаспределения.Выгрузить();

			Если ТаблицаРаспределения.Количество() = 0 Тогда

				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Для основного средства ""%1"" не установлен способ отражения расходов по налогам.';
										|en = 'Method of recording tax expenses is not set for the ""%1"" fixed asset.'"),
									ВыборкаРасходыСРаспределением.ОсновноеСредство);

				ОбщегоНазначения.СообщитьПользователю(
					ТекстСообщения,
					ВыборкаРасходыСРаспределением.ОсновноеСредство,,,
					Отказ);

				ВнеоборотныеАктивыСлужебный.ДобавитьОписаниеОшибки(
					ТекстСообщения,
					ВыборкаРасходыСРаспределением.ОсновноеСредство,
					ВыборкаРасходыСРаспределением.Организация,
					СписокОшибок);

			КонецЕсли;

			Коэффициенты = ТаблицаРаспределения.ВыгрузитьКолонку("Коэффициент");
			Суммы = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ВыборкаРасходыСРаспределением.Сумма, Коэффициенты);
			СуммыРегл = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ВыборкаРасходыСРаспределением.СуммаРегл, Коэффициенты);
			СуммыБезНДС = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ВыборкаРасходыСРаспределением.СуммаБезНДС, Коэффициенты);
			СуммыУпр = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ВыборкаРасходыСРаспределением.СуммаУпр, Коэффициенты);

			Если Суммы = Неопределено И СуммыРегл = Неопределено И СуммыБезНДС = Неопределено Тогда
				Продолжить;
			КонецЕсли;

			Для Индекс = 0 По ТаблицаРаспределения.Количество()-1 Цикл

				ПравилоОтражения = ТаблицаРаспределения[Индекс];

				Если Не ЗначениеЗаполнено(ПравилоОтражения.Подразделение)
					И Не ЗначениеЗаполнено(ВыборкаРасходыСРаспределением.Местонахождение) Тогда

					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										НСтр("ru = 'Для основного средства ""%1"" не удалось определить подразделение, на которое будут отнесены расходы.
                                              |Необходимо либо явно указать подразделение, на которое будут отнесены расходы.
                                              |Либо проверить, что основное средство принято к учету.
                                              |Способ отражения расходов задан в документе %2.';
                                              |en = 'Cannot determine the business unit, to which expenses will be allocated for the ""%1"" fixed asset.
                                              |Explicitly specify the business unit, to which expenses will be allocated
                                              |or check whether the fixed asset is recognized.
                                              |Expense record method is specified in the %2 document.'"),
										ВыборкаРасходыСРаспределением.ОсновноеСредство,
										ПравилоОтражения.Ссылка);

					ОбщегоНазначения.СообщитьПользователю(
						ТекстСообщения,
						ПравилоОтражения.Ссылка,,,
						Отказ);

					ВнеоборотныеАктивыСлужебный.ДобавитьОписаниеОшибки(
						ТекстСообщения,
						ПравилоОтражения.Ссылка,
						ВыборкаРасходыСРаспределением.Организация,
						СписокОшибок);

				КонецЕсли;

				УникальныйИдентификатор = Строка(Новый УникальныйИдентификатор());

				// ПрочиеРасходы
				Запись = ПрочиеРасходы.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыСРаспределением, "Период, Организация, РегистрацияВНалоговомОргане, ХозяйственнаяОперация, НастройкаХозяйственнойОперации");
				ЗаполнитьЗначенияСвойств(Запись, ПравилоОтражения, "СтатьяРасходов, АналитикаРасходов");

				Запись.Подразделение =
					?(ЗначениеЗаполнено(ПравилоОтражения.Подразделение),
							ПравилоОтражения.Подразделение,
							ВыборкаРасходыСРаспределением.Местонахождение);

				Запись.НаправлениеДеятельности = ПравилоОтражения.НаправлениеДеятельности; // Берем из таблицы распределения документа,
																						   // задающего способ распределения расходов.

				Запись.Сумма = ?(Суммы = Неопределено, 0, Суммы[Индекс]);
				Запись.СуммаРегл = ?(СуммыРегл = Неопределено, 0, СуммыРегл[Индекс]);
				Запись.СуммаБезНДС = ?(СуммыБезНДС = Неопределено, 0, СуммыБезНДС[Индекс]);
				Запись.СуммаУпр = ?(СуммыУпр = Неопределено, 0, СуммыУпр[Индекс]);
				Если НЕ ПравилоОтражения.ПринятиеКНалоговомуУчету Тогда
					Запись.ПостояннаяРазница = Запись.СуммаРегл;
				КонецЕсли;
				Запись.ИдентификаторФинЗаписи = УникальныйИдентификатор;

				// ДвиженияДоходыРасходыПрочиеАктивыПассивы
				Запись = ДвиженияДоходыРасходыПрочиеАктивыПассивы.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыСРаспределением, "Период, ХозяйственнаяОперация, Организация");

				Запись.Статья = СтатьяАктивовПассивов;
				Запись.АналитикаАктивовПассивов = АналитикаАктивовПассивов;

				Запись.Подразделение =
					?(ЗначениеЗаполнено(ПравилоОтражения.Подразделение),
							ПравилоОтражения.Подразделение,
							ВыборкаРасходыСРаспределением.Местонахождение);

				Запись.НаправлениеДеятельности =
					?(ЗначениеЗаполнено(ПравилоОтражения.НаправлениеДеятельности),
							ПравилоОтражения.НаправлениеДеятельности,
							ВыборкаРасходыСРаспределением.НаправлениеДеятельности);

				Запись.КорСтатья = ПравилоОтражения.СтатьяРасходов;
				Запись.КорАналитикаРасходов = ПравилоОтражения.АналитикаРасходов;

				Запись.КорПодразделение =
					?(ЗначениеЗаполнено(ПравилоОтражения.Подразделение),
							ПравилоОтражения.Подразделение,
							ВыборкаРасходыСРаспределением.Местонахождение);

				Запись.КорНаправлениеДеятельности =
					?(ЗначениеЗаполнено(ПравилоОтражения.НаправлениеДеятельности),
							ПравилоОтражения.НаправлениеДеятельности,
							ВыборкаРасходыСРаспределением.НаправлениеДеятельности);

				Запись.Сумма = ?(Суммы = Неопределено, 0, Суммы[Индекс]);
				Запись.СуммаРегл = ?(СуммыРегл = Неопределено, 0, СуммыРегл[Индекс]);
				Запись.СуммаУпр = ?(СуммыУпр = Неопределено, 0, СуммыУпр[Индекс]);

				// ПрочиеАктивыПассивы
				Запись = ПрочиеАктивыПассивы.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыСРаспределением);
				Запись.Статья = СтатьяАктивовПассивов;
				Запись.Аналитика = АналитикаАктивовПассивов;

				Запись.Подразделение =
					?(ЗначениеЗаполнено(ПравилоОтражения.Подразделение),
							ПравилоОтражения.Подразделение,
							ВыборкаРасходыСРаспределением.Местонахождение);

				Запись.НаправлениеДеятельности =
					?(ЗначениеЗаполнено(ПравилоОтражения.НаправлениеДеятельности),
							ПравилоОтражения.НаправлениеДеятельности,
							ВыборкаРасходыСРаспределением.НаправлениеДеятельности);

				Запись.Сумма = ?(Суммы = Неопределено, 0, Суммы[Индекс]);

				// ДвиженияПоПрочимАктивамПассивам
				Запись = ДвиженияПоПрочимАктивамПассивам.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыСРаспределением);
				Запись.Статья = СтатьяАктивовПассивов;
				Запись.Аналитика = АналитикаАктивовПассивов;

				Запись.Подразделение =
					?(ЗначениеЗаполнено(ПравилоОтражения.Подразделение),
							ПравилоОтражения.Подразделение,
							ВыборкаРасходыСРаспределением.Местонахождение);

				Запись.НаправлениеДеятельности =
					?(ЗначениеЗаполнено(ПравилоОтражения.НаправлениеДеятельности),
							ПравилоОтражения.НаправлениеДеятельности,
							ВыборкаРасходыСРаспределением.НаправлениеДеятельности);

				Запись.СуммаРегл   = ?(СуммыРегл = Неопределено, 0, СуммыРегл[Индекс]);
				Запись.СуммаБезНДС = ?(СуммыБезНДС = Неопределено, 0, СуммыБезНДС[Индекс]);
				Запись.СуммаСНДС   = ?(СуммыБезНДС = Неопределено, 0, СуммыБезНДС[Индекс]);
				Запись.СуммаУпр    = ?(СуммыУпр = Неопределено, 0, СуммыУпр[Индекс]);

				Если НЕ ПравилоОтражения.ПринятиеКНалоговомуУчету Тогда
					Запись.ПостояннаяРазница = Запись.СуммаРегл;
				КонецЕсли;

				Запись.ИдентификаторФинЗаписи = УникальныйИдентификатор;

			КонецЦикла;

		КонецЦикла;

	КонецЕсли;

	ПрочиеАктивыПассивы.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
	КолонкиГруппировки = "ВидДвижения, Период, Организация, Подразделение, НаправлениеДеятельности, Статья, Аналитика";
	КолонкиСуммирования = "Сумма";
	ПрочиеАктивыПассивы.Свернуть(КолонкиГруппировки, КолонкиСуммирования);

	ДвиженияПоПрочимАктивамПассивам.ЗаполнитьЗначения(Истина, "Активность");
	ДвиженияПоПрочимАктивамПассивам.ЗаполнитьЗначения(Перечисления.ВидыДвиженийПрочихАктивовПассивов.Кредит, "ДебетКредит");

	КолонкиГруппировки = "Период, ХозяйственнаяОперация, Организация,
		|Подразделение, Статья, АналитикаРасходов, АналитикаДоходов, АналитикаАктивовПассивов, НаправлениеДеятельности,
		|КорПодразделение, КорСтатья, КорАналитикаРасходов, КорАналитикаДоходов, КорАналитикаАктивовПассивов, КорНаправлениеДеятельности";
	КолонкиСуммирования = "Сумма, СуммаРегл, СуммаУпр";
	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Свернуть(КолонкиГруппировки, КолонкиСуммирования);

	Результат = Новый Структура;
	Результат.Вставить("ПрочиеРасходы", ПрочиеРасходы(ПрочиеРасходы));
	Результат.Вставить("ПрочиеАктивыПассивы", ПрочиеАктивыПассивы);
	Результат.Вставить("ДвиженияПоПрочимАктивамПассивам", ДвиженияПоПрочимАктивамПассивам);
	Результат.Вставить("ДвиженияДоходыРасходыПрочиеАктивыПассивы", ДвиженияДоходыРасходыПрочиеАктивыПассивы);

	Возврат Результат;

КонецФункции

Функция ПрочиеРасходы(ТаблицаПрочиеРасходы)

	Если ТаблицаПрочиеРасходы.Количество() = 0 Тогда
		Возврат ТаблицаПрочиеРасходы;
	КонецЕсли;

	ДополнительныеПоля = "РегистрацияВНалоговомОргане";

	ТекстыЗапроса = Новый Массив;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетРасходов.Период                        КАК Период,
	|	РасчетРасходов.ВидДвижения                   КАК ВидДвижения,
	|	РасчетРасходов.Организация                   КАК Организация,
	|	РасчетРасходов.Подразделение                 КАК Подразделение,
	|	РасчетРасходов.СтатьяРасходов                КАК СтатьяРасходов,
	|	РасчетРасходов.АналитикаРасходов             КАК АналитикаРасходов,
	|	РасчетРасходов.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	РасчетРасходов.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|
	|	РасчетРасходов.Сумма                         КАК Сумма,
	|	РасчетРасходов.СуммаБезНДС                   КАК СуммаБезНДС,
	|	РасчетРасходов.СуммаУпр                      КАК СуммаУпр,
	|	РасчетРасходов.СуммаРегл                     КАК СуммаРегл,
	|	РасчетРасходов.ПостояннаяРазница             КАК ПостояннаяРазница,
	|	РасчетРасходов.ВременнаяРазница              КАК ВременнаяРазница,
	|
	|	РасчетРасходов.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	РасчетРасходов.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|
	|	РасчетРасходов.РегистрацияВНалоговомОргане   КАК РегистрацияВНалоговомОргане
	|
	|ПОМЕСТИТЬ втТаблицаПрочиеРасходы
	|ИЗ
	|	&ТаблицаПрочиеРасходы КАК РасчетРасходов";
	ТекстыЗапроса.Добавить(ТекстЗапроса);

	#Область ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы
	ЗапросыРегистра = Новый Массив;
	ЗапросыРегистра.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы(ДополнительныеПоля));

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетРасходов.Период                        КАК Период,
	|	РасчетРасходов.ВидДвижения                   КАК ВидДвижения,
	|	РасчетРасходов.Организация                   КАК Организация,
	|	РасчетРасходов.Подразделение                 КАК Подразделение,
	|	РасчетРасходов.СтатьяРасходов                КАК СтатьяРасходов,
	|	РасчетРасходов.АналитикаРасходов             КАК АналитикаРасходов,
	|	РасчетРасходов.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	РасчетРасходов.Сумма                         КАК СуммаСНДС,
	|	РасчетРасходов.СуммаБезНДС                   КАК СуммаБезНДС,
	|	РасчетРасходов.СуммаУпр                      КАК СуммаБезНДСУпр,
	|
	|	РасчетРасходов.СуммаРегл                     КАК СуммаСНДСРегл,
	|	РасчетРасходов.СуммаРегл                     КАК СуммаБезНДСРегл,
	|	РасчетРасходов.ПостояннаяРазница             КАК ПостояннаяРазница,
	|	РасчетРасходов.ВременнаяРазница              КАК ВременнаяРазница,
	|	РасчетРасходов.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры,
	|
	|	РасчетРасходов.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	РасчетРасходов.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|
	|	РасчетРасходов.РегистрацияВНалоговомОргане   КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	втТаблицаПрочиеРасходы КАК РасчетРасходов
	|";

	ЗапросыРегистра.Добавить(ТекстЗапроса);

	ТекстЗапроса = СтрСоединить(ЗапросыРегистра, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ТекстЗапросаТаблицаВтПрочиеРасходы
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы(ДополнительныеПоля);
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ТекстЗапросаТаблицаПрочиеРасходы
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы(ДополнительныеПоля);
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаПрочиеРасходы",	ТаблицаПрочиеРасходы);
	Запрос.УстановитьПараметр("Период",					ТаблицаПрочиеРасходы[0].Период);
	Запрос.УстановитьПараметр("Организация",			ТаблицаПрочиеРасходы[0].Организация);

	Реквизиты = Новый Структура("Период,Организация", ТаблицаПрочиеРасходы[0].Период, ТаблицаПрочиеРасходы[0].Организация);
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);

	Результат = Запрос.Выполнить();

	Возврат Результат.Выгрузить();

КонецФункции

Процедура УчестьОсвобождениеОтУплатыНалога(ТекстЗапроса, ДополнительныеПараметры)

	// В 2020 году некоторые организации освобождены от уплаты имущественных налогов (за 2-й квартал).
	// В этом случае рассчитать налог нужно в обычном порядке(требуется при заполнении декларации и/или справки-расчета налога),
	// а уплачивать не нужно (проводки в части начисления налога за период освобождения не формируются).
	// Законопроект 959325-7

	// Для "освобожденных" организаций авансовый платеж за период освобождения (2-й квартал) рассчитывается в обычном порядке
	// (для тех ИФНС, где платятся авансы), но проводки не формируются.
	// Налог по результатам 2020 года для "освобожденных" организаций рассчитывается следующим образом.
	// Если организация уплачивает ежеквартальные авансы в каких-то регионах (ИФНС),
	// то в расчете и проводках ничего не меняется: налог, начисленный по результатам года,
	// уменьшается в том числе и на авансовый платеж за период освобождения, как будто организация его заплатила.
	// Для тех регионов (ИФНС), где не уплачиваются авансы, исчисленный за год налог нужно уменьшить на сумму налога за период освобождения (2-й квартал),
	// рассчитанную аналогично авансу за такой период для тех, кто платит авансы.

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("ГодовойРасчет")
		И ДополнительныеПараметры.ГодовойРасчет
		И ДополнительныеПараметры.Свойство("ПрименяетсяОсвобождениеОтУплатыНалогаВНалогомПериоде")
		И ДополнительныеПараметры.ПрименяетсяОсвобождениеОтУплатыНалогаВНалогомПериоде Тогда

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаНалогаКУплате", "(СправкаРасчет.СуммаНалогаКУплате - СправкаРасчет.СуммаОсвобожденияОтУплатыНалога)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаНалогаКУплате", "СправкаРасчет.СуммаНалогаКУплате");
	КонецЕсли;

КонецПроцедуры

// Проверить необходимость перерасчета налога.
// 
// Параметры:
//  ДатаРегистрации - Дата - Дата регистрации
//  Организация - СправочникСсылка.Организации - Организация
//  ВидНалога - ПеречислениеСсылка.ВидыИмущественныхНалогов - Вид налога
// 
// Возвращаемое значение:
//  Структура -  Проверить необходимость перерасчета налога:
// * ТребуетсяПерерасчет - Булево - Потребуется перерасчет налога
// * Комментарий - Строка - Сообщение пользователю
Функция ПроверитьНеобходимостьПерерасчетаНалога(ДатаРегистрации, Организация, ВидНалога) Экспорт
	
	Если ВидНалога = ПредопределенноеЗначение("Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог") Тогда
		ТипРегламентнойОперации = ПредопределенноеЗначение("Перечисление.ТипыРегламентныхОпераций.РасчетЗемельногоНалога");
		НаименованиеНалогаРодительныйПадеж = НСтр("ru = 'земельного налога';
													|en = 'land value tax'");
	ИначеЕсли ВидНалога = ПредопределенноеЗначение("Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество") Тогда
		ТипРегламентнойОперации = ПредопределенноеЗначение("Перечисление.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество");
		НаименованиеНалогаРодительныйПадеж = НСтр("ru = 'налога на имущество';
													|en = 'property tax'");
	ИначеЕсли ВидНалога = ПредопределенноеЗначение("Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог") Тогда
		ТипРегламентнойОперации = ПредопределенноеЗначение("Перечисление.ТипыРегламентныхОпераций.РасчетТранспортногоНалога");
		НаименованиеНалогаРодительныйПадеж = НСтр("ru = 'транспортного налога';
													|en = 'vehicle tax'");
	КонецЕсли;
	
	// Найдем проведенные регламентные операции расчета налога после даты изменения параметров расчета.
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(РегламентнаяОперация.Дата),  ДАТАВРЕМЯ(1, 1, 1)) КАК НачалоПериода,
	|	ЕСТЬNULL(МАКСИМУМ(РегламентнаяОперация.Дата), ДАТАВРЕМЯ(1, 1, 1)) КАК КонецПериода
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Организация = &Организация
	|	И РегламентнаяОперация.Проведен = ИСТИНА
	|	И РегламентнаяОперация.ТипОперации = &ТипРегламентнойОперации
	|	И РегламентнаяОперация.Дата >= &Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачалоПериода";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", ДатаРегистрации);
	Запрос.УстановитьПараметр("ТипРегламентнойОперации", ТипРегламентнойОперации);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	РезультатПроверки = Новый Структура();
	РезультатПроверки.Вставить("ТребуетсяПерерасчет", Ложь);
	РезультатПроверки.Вставить("Комментарий", "");
	
	// При изменении параметров задним числом, потребуется перерасчет налога.
	Если Выборка.НачалоПериода = Выборка.КонецПериода Тогда
		Если Выборка.НачалоПериода = Дата(1, 1, 1) Тогда
			РезультатПроверки.ТребуетсяПерерасчет = Истина;
			ШаблонКомментария = НСтр("ru = 'Параметры изменяются с %1. Потребуется перерасчет %2 начиная с %3.';
									|en = 'The parameters change from %1. You will need to recalculate %2 starting from %3.'");
			РезультатПроверки.Комментарий = СтрШаблон(ШаблонКомментария,
														Формат(ДатаРегистрации,"ДЛФ=D"),
														НаименованиеНалогаРодительныйПадеж,
														Формат(КонецКвартала(ДатаРегистрации),"ДФ='MMMM yyyy'"));
		
		Иначе
			РезультатПроверки.ТребуетсяПерерасчет = Истина;
			ШаблонКомментария = НСтр("ru = 'Параметры изменяются с %1. Потребуется перерасчет %2 за %3.';
									|en = 'The parameters change from %1. You will need to recalculate %2 for %3.'");
			РезультатПроверки.Комментарий = СтрШаблон(ШаблонКомментария, 
														Формат(ДатаРегистрации,"ДЛФ=D"),
														НаименованиеНалогаРодительныйПадеж,
														Формат(Выборка.НачалоПериода,"ДФ='MMMM yyyy'"));
			
		КонецЕсли;
	Иначе
		РезультатПроверки.ТребуетсяПерерасчет = Истина;
			ШаблонКомментария = НСтр("ru = 'Параметры изменяются с %1. Потребуется перерасчет %2 за период с %3 по %4.';
									|en = 'The parameters change from %1. You will need to recalculate %2 from %3 to %4.'");
			РезультатПроверки.Комментарий = СтрШаблон(ШаблонКомментария, 
														Формат(ДатаРегистрации,"ДЛФ=D"),
														НаименованиеНалогаРодительныйПадеж,
														Формат(Выборка.НачалоПериода,"ДФ='MMMM yyyy'"),
														Формат(Выборка.КонецПериода,"ДФ='MMMM yyyy'"));
	КонецЕсли;
	
	Возврат РезультатПроверки;
КонецФункции

#КонецОбласти

#КонецОбласти
