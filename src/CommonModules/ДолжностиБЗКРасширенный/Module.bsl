#Область СлужебныйПрограммныйИнтерфейс

// См. ДолжностиБЗК.РеквизитыРедактируемыеВГрупповойОбработке.
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("ЯвляетсяДолжностьюЛетногоЭкипажа");
	Результат.Добавить("ЯвляетсяШахтерскойДолжностью");
	Результат.Добавить("ЯвляетсяФармацевтическойДолжностью");
	Результат.Добавить("ОснованиеДосрочногоНазначенияПенсии");
	Результат.Добавить("ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией");
	Результат.Добавить("КатегорияВоинскогоУчета");
	Результат.Добавить("ЛетноПодъемныйСостав");
	Результат.Добавить("Плавсостав");
	Результат.Добавить("ОсобыеУсловияТрудаПФР");
	Результат.Добавить("КодПозицииСпискаПФР");
	Результат.Добавить("ВыплачиваетсяНадбавкаЗаВредность");
	Результат.Добавить("ПроцентНадбавкиЗаВредность");
	Результат.Добавить("КоличествоДнейДополнительногоОтпускаВГод");
	Результат.Добавить("ХарактерВыполняемыхРаботПФР");
	Результат.Добавить("ПервичныеДокументыПФР");
	Результат.Добавить("ТрудоваяФункция");
	Результат.Добавить("НаименованиеДляЗаписейОТрудовойДеятельности");
	
	Возврат Результат;
	
КонецФункции

// ЗарплатаКадрыРасширеннаяПодсистемы.ПодключаемыеХарактеристики

// Возвращает имя плана видов характеристик, 
// в котором хранятся подключаемые характеристики экземпляров этого типа.
//
// Возвращаемое значение:
//  Строка - имя плана видов характеристик.
//
Функция ИмяПланаВидовПодключаемыхХарактеристикЗарплатаКадры() Экспорт
	Возврат "ДолжностиПодключаемыеХарактеристики";
КонецФункции

// Конец ЗарплатаКадрыРасширеннаяПодсистемы.ПодключаемыеХарактеристики

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	
	ВидДоговора = Неопределено;
	Параметры.Свойство("ВидДоговора", ВидДоговора);
	
	Если ТипЗнч(ВидДоговора) = Тип("ПеречислениеСсылка.ВидыДоговоровССотрудниками") Тогда
		
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
			МодульГосударственнаяСлужба = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
			МодульГосударственнаяСлужба.ОбработкаПолученияДанныхВыбораСправочникаДолжности(ДанныеВыбора, Параметры, СтандартнаяОбработка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(ДолжностьОбъект, ПроверяемыеРеквизиты, Отказ) Экспорт
	
	Если НЕ ДолжностьОбъект.ВведенаВШтатноеРасписание Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаВвода");
	КонецЕсли; 

	Если НЕ ДолжностьОбъект.ИсключенаИзШтатногоРасписания Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаИсключения");
	КонецЕсли; 
	
	Если (Не ДолжностьОбъект.ИсключенаИзШтатногоРасписания) И ДолжностьОбъект.ПометкаУдаления Тогда
		ТекстСообщения = НСтр("ru = 'У помеченной на удаление должности нельзя снять флаг ""Исключена из штатного расписания""!';
								|en = 'Check box ""Excluded from headcount"" cannot be cleared for the position marked for deletion.'",);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДолжностьОбъект.Ссылка, , , Отказ);
	КонецЕсли;	

	Если ЗначениеЗаполнено(ДолжностьОбъект.ДатаИсключения) И ЗначениеЗаполнено(ДолжностьОбъект.ДатаВвода) И ДолжностьОбъект.ДатаВвода > ДолжностьОбъект.ДатаИсключения Тогда
		ТекстСообщения = НСтр("ru = 'Дата ввода должности в штатное расписание не может быть больше даты исключения!';
								|en = 'Exception date cannot be less than the date when the position was included in the headcount.'",);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДолжностьОбъект.Ссылка, , , Отказ);	
	КонецЕсли;		

	Если ДолжностьОбъект.ИсключенаИзШтатногоРасписания Тогда 
		ПроверкаИспользованияВШтатномРасписании(ДолжностьОбъект, Отказ);
	КонецЕсли;	
	
	ЭлектронныеТрудовыеКнижки.ПроверитьЗаполнениеТрудовойФункцииВДолжности(ДолжностьОбъект, Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(ДолжностьОбъект, Отказ) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание") Тогда
		Если ДолжностьОбъект.ПометкаУдаления И ДолжностьОбъект.ВведенаВШтатноеРасписание И (Не ДолжностьОбъект.ИсключенаИзШтатногоРасписания) Тогда
			ТекстСообщения = НСтр("ru = 'Нельзя пометить на удаление действующую должность';
									|en = 'Cannot mark an active position for deletion'",);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьДополнительныеСведенияКлассификатора(ДолжностьОбъект, ДополнительныеСведения) Экспорт
	
	ЗаполнитьКатегорию = Истина;
	Для Каждого ДополнительноеСведение Из ДополнительныеСведения Цикл
		
		Если ДополнительноеСведение.Ключ = "Категория" Тогда
			
			ЗаполнитьКатегорию = Ложь;
			ДолжностьОбъект.ОКПДТРКатегория = ДополнительноеСведение.Значение;
			
		ИначеЕсли ДополнительноеСведение.Ключ = "Код" Тогда
			
			Значение = СокрЛП(ДополнительноеСведение.Значение);
			Если Не ПустаяСтрока(Значение) Тогда
				
				ДолжностьОбъект.ОКПДТРКЧ = Прав(Значение, 1);
				ДолжностьОбъект.ОКПДТРКод = Лев(Значение, СтрДлина(Значение) - 1);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗаполнитьКатегорию Тогда
		ДолжностьОбъект.ОКПДТРКатегория = "4";
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверкаИспользованияВШтатномРасписании(ДолжностьОбъект, Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Должность", ДолжностьОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДатаИсключения", ДолжностьОбъект.ДатаИсключения);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШтатноеРасписание.Наименование КАК ПозицияШтатногоРасписания,
	|	ШтатноеРасписание.Ссылка
	|ИЗ
	|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
	|ГДЕ
	|	ШтатноеРасписание.Должность = &Должность
	|	И НЕ ШтатноеРасписание.ГруппаПозицийПодразделения
	|	И НЕ(ШтатноеРасписание.Закрыта
	|				И ШтатноеРасписание.ДатаЗакрытия <= &ДатаИсключения)";
	
	Результат = Запрос.Выполнить();
		
	Если Не Результат.Пустой() Тогда
		
		ТекстСообщения = НСтр("ru = 'Должность ""%1"" не может быть исключена из штатного расписания, т.к. она используется в действующих позициях:';
								|en = 'Position ""%1"" cannot be excluded from the headcount because it is used in operating positions: '"); 
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ДолжностьОбъект.Ссылка);
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДолжностьОбъект.Ссылка, "Объект.ИсключенаИзШтатногоРасписания" , , Отказ);
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = НСтр("ru = '- позиция ""%1""';
									|en = '- position ""%1""'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения,
				Выборка.ПозицияШтатногоРасписания);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДолжностьОбъект.Ссылка, "Объект.ИсключенаИзШтатногоРасписания" , , Отказ);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
