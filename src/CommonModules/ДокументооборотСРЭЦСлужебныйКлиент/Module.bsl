////////////////////////////////////////////////////////////////////////////////
// Подсистема "Документооборот с РЭЦ".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ОтправитьОтчет

Процедура ОтправитьОтчет(Организация, СсылкаНаОтчет, ИнформацияПоДекларацииНДС, СписокОтправки, МассивВыгрузки, ВладелецФормы, КонтекстСессии, ОповещениеОЗавершении) Экспорт
	
	Контекст = Новый Структура;
	Контекст.Вставить("Организация", Организация);
	Контекст.Вставить("СсылкаНаОтчет", СсылкаНаОтчет);
	Контекст.Вставить("СписокОтправки", СписокОтправки); 
	Контекст.Вставить("МассивВыгрузки", МассивВыгрузки);
	Контекст.Вставить("ИнформацияПоДекларацииНДС", ИнформацияПоДекларацииНДС);
	Контекст.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	Контекст.Вставить("КонтекстСессии", КонтекстСессии);
	Если ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения")
		И ВладелецФормы.ИмяФормы = "ОбщаяФорма.РегламентированнаяОтчетность" Тогда
		ВладелецФормы = Неопределено;
	КонецЕсли;
	Контекст.Вставить("ВладелецФормы", ВладелецФормы);
	Оповещение = Новый ОписаниеОповещения("ОтправитьОтчетПослеВыгрузкиПакета", ЭтотОбъект, Контекст);	
	
	Если МассивВыгрузки = Неопределено Тогда
		ВыгрузитьПакет(Оповещение, Организация, СсылкаНаОтчет, ВладелецФормы);    
	Иначе
		РезультатВыполнения = Новый Структура;
		РезультатВыполнения.Вставить("ДанныеДляВыгрузки", МассивВыгрузки);
		РезультатВыполнения.Вставить("Выполнено", Истина);
		
		ВыполнитьОбработкуОповещения(Оповещение, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтправитьОтчетПослеВыгрузкиПакета(Результат, ВходящийКонтекст) Экспорт 
	
	Если Результат.Выполнено Тогда        
		КонтекстОтправки = Новый Структура;
		КонтекстОтправки.Вставить("Организация", ВходящийКонтекст.Организация);
		КонтекстОтправки.Вставить("СсылкаНаОтчет", ВходящийКонтекст.СсылкаНаОтчет);
		КонтекстОтправки.Вставить("ДанныеДляВыгрузки", Результат.ДанныеДляВыгрузки);
		КонтекстОтправки.Вставить("СписокОтправки", ВходящийКонтекст.СписокОтправки);
		КонтекстОтправки.Вставить("ИнформацияПоДекларацииНДС", ВходящийКонтекст.ИнформацияПоДекларацииНДС);
			
		Если ВходящийКонтекст.КонтекстСессии <> Неопределено Тогда 
			КонтекстОтправки.Вставить("access_token", ВходящийКонтекст.КонтекстСессии.access_token);
			КонтекстОтправки.Вставить("claims__mdm_id", ВходящийКонтекст.КонтекстСессии.claims__mdm_id);
			КонтекстОтправки.Вставить("Отправка", ВходящийКонтекст.КонтекстСессии.Отправка);
			
			ОтправитьОтчетНаСервере(КонтекстОтправки, ВходящийКонтекст.ОповещениеОЗавершении, ВходящийКонтекст.ВладелецФормы);
		Иначе					
			КонтекстОтправки.Вставить("Отправка", Неопределено);
			КонтекстОтправки.Вставить("ОповещениеОЗавершении", ВходящийКонтекст.ОповещениеОЗавершении);
			КонтекстОтправки.Вставить("ВладелецФормы", ВходящийКонтекст.ВладелецФормы);
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьОтчетПослеАвторизации", ЭтотОбъект, КонтекстОтправки); 
		
			Настройки = ДокументооборотСРЭЦВызовСервера.ПолучитьНастройки(ВходящийКонтекст.Организация);
			
			АвторизацияВСервисеРЭЦ(Настройки.Сертификат, ОписаниеОповещения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры      


Процедура ОтправитьОтчетПослеАвторизации(Результат, КонтекстОтправки) Экспорт
	
	Если Результат.Выполнено = Истина Тогда
		КонтекстОтправки.Вставить("access_token", Результат.access_token);
		КонтекстОтправки.Вставить("claims__mdm_id", Результат.claims__mdm_id); 
		
		ОповещениеОЗавершении = КонтекстОтправки.ОповещениеОЗавершении;   
		ВладелецФормы = КонтекстОтправки.ВладелецФормы;
		
		КонтекстОтправки.Удалить("ОповещениеОЗавершении");
		КонтекстОтправки.Удалить("ВладелецФормы");
		
		ОтправитьОтчетНаСервере(КонтекстОтправки, ОповещениеОЗавершении, ВладелецФормы);
	Иначе
		ПараметрыДляПередачиВФорму = Новый Структура;
		ПараметрыДляПередачиВФорму.Вставить("РезультатОтправки", Ложь);		
		Оповестить("", ПараметрыДляПередачиВФорму);
		
		ДлительнаяОтправкаКлиент.ЗакрытьФормуДлительнойОтправкиБезДальнейшихДействий();
	КонецЕсли;
	
КонецПроцедуры


Процедура АвторизацияВСервисеРЭЦ(СертификатОтпечаток, ОповещениеОЗавершении) Экспорт
	
	Попытка
		//СоединениеHTTP = Неопределено;       
		ПараметрыДляШага = Новый Структура;
		ПараметрыДляШага.Вставить("Шаг", 1);
		ОбъектОтветШаг2 = ДокументооборотСРЭЦВызовСервера.АвторизацияВСервисеРЭЦ(, ПараметрыДляШага);
		
		ВладелецФормы = Неопределено;
		Если ОповещениеОЗавершении <> Неопределено Тогда
			Если ОповещениеОЗавершении.ДополнительныеПараметры <> Неопределено И ОповещениеОЗавершении.ДополнительныеПараметры.Свойство("ВладелецФормы") Тогда
				ВладелецФормы = ОповещениеОЗавершении.ДополнительныеПараметры.ВладелецФормы;	
			КонецЕсли;
		КонецЕсли;
		
		Если ОбъектОтветШаг2 = Неопределено Тогда    
			ПараметрФормыОшибки = Новый Структура("Заголовок, ТекстОшибки, РезультатЗавершения", 
													"Ошибка авторизации",
													"Не удалось отправить запрос на авторизацию",
													Новый Структура("Выполнено", Ложь));
			ОткрытьФорму("ОбщаяФорма.ОшибкаСервераРЭЦ", ПараметрФормыОшибки, ВладелецФормы, , , , ОповещениеОЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
			Возврат;
		КонецЕсли;
		
		clientNonce = Строка(Новый УникальныйИдентификатор);
		execution = ОбъектОтветШаг2.execution;
		serverNonce = ОбъектОтветШаг2.view.serverNonce;
		СерверSSO = ДокументооборотСРЭЦКлиентСервер.АдресСервера() + "/sso";
		
		ДвоичныеДанныеСтрокиДляПодписи = ПолучитьДвоичныеДанныеИзСтроки(clientNonce + serverNonce + СерверSSO, "utf-8", Ложь);
		
		Сертификат = Новый Структура("Отпечаток", СертификатОтпечаток); 
		
		ПараметрыДляШага3 = Новый Структура;
		ПараметрыДляШага3.Вставить("execution", execution);
		ПараметрыДляШага3.Вставить("clientNonce", clientNonce);
		ПараметрыДляШага3.Вставить("serverNonce", serverNonce);
		ПараметрыДляШага3.Вставить("СерверSSO", СерверSSO);
		ПараметрыДляШага3.Вставить("Шаг", 3);   
		
		ВходящийКонтекст = Новый Структура;
		ВходящийКонтекст.Вставить("ПараметрыДляШага3", ПараметрыДляШага3);  
		ВходящийКонтекст.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("АвторизацияВСервисеРЭЦ_Продолжение", ЭтотОбъект, ВходящийКонтекст);
														
		АдресФайлаПодписи = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
		
		Состояние(НСтр("ru = 'Формируется подпись ...';
						|en = 'Формируется подпись ...'"));
		КриптографияЭДКОКлиент.ПодписатьPKCS7(ОписаниеОповещения, Сертификат, 
										ПоместитьВоВременноеХранилище(ДвоичныеДанныеСтрокиДляПодписи), Ложь, АдресФайлаПодписи);
		
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		КраткоеПредставлениеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		
		ДлительнаяОтправкаКлиентСервер.ВывестиОшибку(НСтр("ru = 'Неизвестная ошибка при отправке отчета';
															|en = 'Неизвестная ошибка при отправке отчета'"));
		Состояние(НСтр("ru = 'Ошибка отправки отчета';
						|en = 'Ошибка отправки отчета'"),,, БиблиотекаКартинок.ОшибкаОтправки);

		Если ОповещениеОЗавершении <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(
				ОповещениеОЗавершении, 
				Новый Структура("Выполнено", Ложь));
		КонецЕсли;
		Возврат;	
	КонецПопытки;
	
КонецПроцедуры      


Процедура АвторизацияВСервисеРЭЦ_Продолжение(Результат, ВходящийКонтекст) Экспорт
	
	РезультатЗавершение = Новый Структура("Выполнено", Ложь);
	
	Если Результат.Выполнено = Истина Тогда  
		
		ОповещениеОЗавершении = Неопределено;
		ВладелецФормы = Неопределено;
		Если ВходящийКонтекст.ОповещениеОЗавершении <> Неопределено Тогда
			ОповещениеОЗавершении = ВходящийКонтекст.ОповещениеОЗавершении;
			Если ОповещениеОЗавершении.ДополнительныеПараметры <> Неопределено И ОповещениеОЗавершении.ДополнительныеПараметры.Свойство("ВладелецФормы") Тогда
				ВладелецФормы = ВходящийКонтекст.ОповещениеОЗавершении.ДополнительныеПараметры.ВладелецФормы;	
			КонецЕсли;
		КонецЕсли;
		
		ПодписьBase64 = ПолучитьBase64СтрокуИзДвоичныхДанных(ПолучитьИзВременногоХранилища(Результат.ФайлПодписи));    
		ПодписьBase64 = СтрЗаменить(ПодписьBase64, Символы.ПС, "");
		ПодписьBase64 = СтрЗаменить(ПодписьBase64, Символы.ВК, "");
		
		ВходящийКонтекст.ПараметрыДляШага3.Вставить("ПодписьBase64", ПодписьBase64);
		
		ОбъектОтветШаг3 = ДокументооборотСРЭЦВызовСервера.АвторизацияВСервисеРЭЦ(, ВходящийКонтекст.ПараметрыДляШага3);
			
		Если ОбъектОтветШаг3 = Неопределено Тогда     
			ПараметрФормыОшибки = Новый Структура("Заголовок, ТекстОшибки, РезультатЗавершения", 
													"Ошибка авторизации",
													"Не удалось отправить запрос на авторизацию",
													РезультатЗавершение);
			ОткрытьФорму("ОбщаяФорма.ОшибкаСервераРЭЦ", ПараметрФормыОшибки, ВладелецФормы, , , , ОповещениеОЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
			Возврат;
		КонецЕсли;
		
		Если ОбъектОтветШаг3.Свойство("access_token") = Ложь Тогда         
			Если ОбъектОтветШаг3.view.Свойство("certValidationResult") И ОбъектОтветШаг3.view.certValidationResult.success = Ложь Тогда
				ТекстОшибки = ОбъектОтветШаг3.view.certValidationResult.error.details;
				ПараметрФормыОшибки = Новый Структура("Заголовок, ТекстОшибки, РезультатЗавершения", 
													"Ошибка проверки сертификата",
													ТекстОшибки,
													РезультатЗавершение);
				ОткрытьФорму("ОбщаяФорма.ОшибкаСервераРЭЦ", ПараметрФормыОшибки, ВладелецФормы, , , , ОповещениеОЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);  
			ИначеЕсли ОбъектОтветШаг3.form.Свойство("errors") И ОбъектОтветШаг3.form.errors.Количество() > 0 Тогда
				ТекстОшибки = ОбъектОтветШаг3.form.errors[0].message;
				ПараметрФормыОшибки = Новый Структура("Заголовок, ТекстОшибки, РезультатЗавершения", 
													"Ошибка авторизации",
													ТекстОшибки,
													РезультатЗавершение);
				ОткрытьФорму("ОбщаяФорма.ОшибкаСервераРЭЦ", ПараметрФормыОшибки, ВладелецФормы, , , , ОповещениеОЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
			Иначе
				ПараметрФормыОшибки = Новый Структура("Заголовок, ТекстОшибки, РезультатЗавершения", 
													"Ошибка авторизации",
													"Неизвестная ошибка",
													РезультатЗавершение);
				ОткрытьФорму("ОбщаяФорма.ОшибкаСервераРЭЦ", ПараметрФормыОшибки, ВладелецФормы, , , , ОповещениеОЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
			КонецЕсли;
			Возврат;
		КонецЕсли;  
		
		РезультатЗавершение.Выполнено = Истина;
		РезультатЗавершение.Вставить("access_token", ОбъектОтветШаг3.access_token);
		РезультатЗавершение.Вставить("claims__mdm_id", ОбъектОтветШаг3.claims.mdm_id);
		
		Если ВходящийКонтекст.ОповещениеОЗавершении <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(
				ВходящийКонтекст.ОповещениеОЗавершении, 
				РезультатЗавершение);
		КонецЕсли;	
	Иначе
		ПараметрыДляПередачиВФорму = Новый Структура;
		ПараметрыДляПередачиВФорму.Вставить("РезультатОтправки", Ложь);		
		Оповестить("", ПараметрыДляПередачиВФорму);
		
		РезультатЗавершение.Вставить("Ошибка", "Не удалось выполнить подписание. Проверьте сертификат ЭЦП в настройках подключения к сервису ""Мой экспорт""");
		Если ВходящийКонтекст.ОповещениеОЗавершении <> Неопределено Тогда
			ОповещениеВозврат = Неопределено;
			Если ВходящийКонтекст.ОповещениеОЗавершении.ДополнительныеПараметры <> Неопределено 
				И ВходящийКонтекст.ОповещениеОЗавершении.ДополнительныеПараметры.Свойство("ОповещениеОЗавершении", ОповещениеВозврат) Тогда
				ВыполнитьОбработкуОповещения(
				ОповещениеВозврат, 
				РезультатЗавершение);	
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры


Процедура ОтправитьОтчетНаСервере(КонтекстОтправки, ОповещениеОЗавершении, ВладелецФормы)    
	
	РезультатЗавершения = Новый Структура("Выполнено", Ложь);
	РезультатЗавершения.Вставить("access_token", КонтекстОтправки.access_token);
	РезультатЗавершения.Вставить("claims__mdm_id", КонтекстОтправки.claims__mdm_id);
	
	РезультатОтправки = ДокументооборотСРЭЦВызовСервера.ОтправитьОтчет(КонтекстОтправки);
		
	Если ЗначениеЗаполнено(РезультатОтправки) Тогда          
		РезультатЗавершения.Вставить("Отправка", РезультатОтправки.Отправка);   
		Если РезультатОтправки.Свойство("Ошибка") Тогда
			РезультатЗавершения.Вставить("Ошибка", РезультатОтправки.Ошибка); 
		КонецЕсли;
				
		ПараметрыОповещения = Новый Структура; 
		ПараметрыОповещения.Вставить("Ссылка", КонтекстОтправки.СсылкаНаОтчет);
		ПараметрыОповещения.Вставить("Организация", КонтекстОтправки.Организация);
		Оповестить("Завершение отправки в контролирующий орган", ПараметрыОповещения, РезультатОтправки.Отправка);
		
		Если ОповещениеОЗавершении <> Неопределено Тогда 
			Если РезультатОтправки.Свойство("Ошибка") = Ложь Тогда
				РезультатЗавершения.Выполнено = Истина;
			КонецЕсли;
			ВыполнитьОбработкуОповещения(
				ОповещениеОЗавершении, 
				РезультатЗавершения);
		КонецЕсли;
	Иначе
		Если ОповещениеОЗавершении <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(
				ОповещениеОЗавершении, 
				РезультатЗавершения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РегистрацияВСервисе

Процедура РегистрацияВСервисе(Логин, Пароль, Организация, Сертификат, ПараметрыДляСледующихШагов, ОбработкаОповещения) Экспорт
	
	Попытка
		ВладелецФормы = Неопределено;
		Если ОбработкаОповещения <> Неопределено Тогда
			Если ОбработкаОповещения.ДополнительныеПараметры <> Неопределено И ОбработкаОповещения.ДополнительныеПараметры.Свойство("ВладелецФормы") Тогда
				ВладелецФормы = ОбработкаОповещения.ДополнительныеПараметры.ВладелецФормы;	
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыДляСледующихШагов.Шаг = 5 Тогда       
			РезультатРегистрации = Новый Структура("Выполнено", Ложь);
			ОбъектОтвет = ДокументооборотСРЭЦВызовСервера.АвторизацияВСервисеРЭЦ(, ПараметрыДляСледующихШагов, Истина);
		
			Если ОбъектОтвет = Неопределено Тогда
				ПараметрФормыОшибки = Новый Структура("Заголовок, ТекстОшибки, РезультатЗавершения", 
													"Ошибка регистрации",
													"Не удалось отправить запрос на регистрацию",
													РезультатРегистрации);
				ОткрытьФорму("ОбщаяФорма.ОшибкаСервераРЭЦ", ПараметрФормыОшибки, ВладелецФормы, , , , ОбработкаОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
				Возврат;
			ИначеЕсли ОбъектОтвет.Свойство("access_token") И ОбъектОтвет.Свойство("mpt") Тогда
				РезультатРегистрации.Выполнено = Истина;
				РезультатРегистрации.Вставить("ОбъектОтвет", ОбъектОтвет);
				
				Если ОбработкаОповещения <> Неопределено Тогда
					ВыполнитьОбработкуОповещения(
						ОбработкаОповещения, 
						РезультатРегистрации);
				КонецЕсли;
			Иначе
				РезультатРегистрации.Вставить("ОбъектОтвет", ОбъектОтвет);
				ТекстОшибки = "";
				Если ОбъектОтвет.Свойство("view") И ОбъектОтвет.view.Свойство("otpCodeAvailableAttempts") Тогда
					ТекстОшибки = НСтр("ru = 'Осталось попыток: ';
										|en = 'Осталось попыток: '") + Строка(ОбъектОтвет.view.otpCodeAvailableAttempts);	
				КонецЕсли;
				ПараметрФормыОшибки = Новый Структура("Заголовок, ТекстОшибки, РезультатЗавершения", 
													"Ошибка регистрации",
													"Ошибка проверки одноразового кода: " + ТекстОшибки,
													РезультатРегистрации);
				ОткрытьФорму("ОбщаяФорма.ОшибкаСервераРЭЦ", ПараметрФормыОшибки, ВладелецФормы, , , , ОбработкаОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
				Возврат;
			КонецЕсли;	
		Иначе
			ОбъектОтветШаг2 = ДокументооборотСРЭЦВызовСервера.АвторизацияВСервисеРЭЦ(, ПараметрыДляСледующихШагов, Истина);
			
			Если ОбъектОтветШаг2 = Неопределено Тогда
				ПараметрФормыОшибки = Новый Структура("Заголовок, ТекстОшибки, РезультатЗавершения", 
													"Ошибка регистрации",
													"Не удалось отправить запрос на регистрацию",
													РезультатРегистрации);
				ОткрытьФорму("ОбщаяФорма.ОшибкаСервераРЭЦ", ВладелецФормы, , , , ОбработкаОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
				Возврат;
			КонецЕсли;
			
			clientNonce = Строка(Новый УникальныйИдентификатор);
			execution = ОбъектОтветШаг2.execution;
			serverNonce = ОбъектОтветШаг2.view.serverNonce;
			СерверSSO = ДокументооборотСРЭЦКлиентСервер.АдресСервера() + "/sso";
			
			ДвоичныеДанныеСтрокиДляПодписи = ПолучитьДвоичныеДанныеИзСтроки(clientNonce + serverNonce + СерверSSO, "utf-8", Ложь);
			
			СертификатСтруктура = Новый Структура("Отпечаток", Сертификат); 
			
			ПараметрыДляСледующихШагов = Новый Структура;     
			ПараметрыДляСледующихШагов.Вставить("execution", execution);
			ПараметрыДляСледующихШагов.Вставить("clientNonce", clientNonce);
			ПараметрыДляСледующихШагов.Вставить("serverNonce", serverNonce);
			ПараметрыДляСледующихШагов.Вставить("СерверSSO", СерверSSO);
			
			//ВходящийКонтекст.Вставить("СоединениеHTTP", СоединениеHTTP);
			ПараметрыДляСледующихШагов.Вставить("Логин", Логин);
			ПараметрыДляСледующихШагов.Вставить("Пароль", Пароль);
			ПараметрыДляСледующихШагов.Вставить("Организация", Организация);
			ПараметрыДляСледующихШагов.Вставить("ОбработкаОповещения", ОбработкаОповещения);
			ПараметрыДляСледующихШагов.Вставить("Шаг", 3);
			
			ОписаниеОповещения = Новый ОписаниеОповещения("РегистрацияВСервисе_Продолжение", ЭтотОбъект, ПараметрыДляСледующихШагов);
													
			АдресФайлаПодписи = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
			
			Состояние(НСтр("ru = 'Формируется подпись ...';
							|en = 'Формируется подпись ...'"));
			КриптографияЭДКОКлиент.ПодписатьPKCS7(ОписаниеОповещения, СертификатСтруктура, 
											ПоместитьВоВременноеХранилище(ДвоичныеДанныеСтрокиДляПодписи), Ложь, АдресФайлаПодписи);
		КонецЕсли;
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		КраткоеПредставлениеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		
		ДлительнаяОтправкаКлиентСервер.ВывестиОшибку(НСтр("ru = 'Неизвестная ошибка при регистрации в сервисе РЭЦ';
															|en = 'Неизвестная ошибка при регистрации в сервисе РЭЦ'"));
		Состояние(НСтр("ru = 'Ошибка регистрации в сервисе РЭЦ';
						|en = 'Ошибка регистрации в сервисе РЭЦ'"),,, БиблиотекаКартинок.ОшибкаОтправки);

		Если ОбработкаОповещения <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(
				ОбработкаОповещения, 
				Новый Структура("Выполнено", Ложь));
		КонецЕсли;
		Возврат;
	КонецПопытки;
	
КонецПроцедуры

Процедура РегистрацияВСервисе_Продолжение(Результат, ПараметрыДляСледующихШагов) Экспорт
	
	РезультатРегистрации = Новый Структура("Выполнено, Execution", Ложь, "");
	ОбработкаОповещения = ПараметрыДляСледующихШагов.ОбработкаОповещения;
	
	Если Результат.Выполнено = Ложь Тогда
		Если ОбработкаОповещения <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(
				ОбработкаОповещения, 
				РезультатРегистрации);
		КонецЕсли;	
		Возврат;
	КонецЕсли;
	
	ВладелецФормы = Неопределено;
	Если ОбработкаОповещения <> Неопределено Тогда
		Если ОбработкаОповещения.ДополнительныеПараметры <> Неопределено И ОбработкаОповещения.ДополнительныеПараметры.Свойство("ВладелецФормы") Тогда
			ВладелецФормы = ОбработкаОповещения.ДополнительныеПараметры.ВладелецФормы;	
		КонецЕсли;
	КонецЕсли;
		
	ПараметрыДляСледующихШагов.Удалить("ОбработкаОповещения");
	
	Попытка
		//СоединениеHTTP = Неопределено;
		ПараметрыДляСледующихШагов.Вставить("ПодписьBase64", ПолучитьBase64СтрокуИзДвоичныхДанных(ПолучитьИзВременногоХранилища(Результат.ФайлПодписи)));
		ОбъектОтвет = ДокументооборотСРЭЦВызовСервера.АвторизацияВСервисеРЭЦ(, ПараметрыДляСледующихШагов, Истина);
		
		Если ОбъектОтвет = Неопределено Тогда
			ПараметрФормыОшибки = Новый Структура("Заголовок, ТекстОшибки, РезультатЗавершения", 
													"Ошибка регистрации",
													"Не удалось отправить запрос на регистрацию",
													РезультатРегистрации);
			ОткрытьФорму("ОбщаяФорма.ОшибкаСервераРЭЦ", ПараметрФормыОшибки, ВладелецФормы, , , , ОбработкаОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
			Возврат;
		Иначе
			РезультатРегистрации.Выполнено = Истина;
			РезультатРегистрации.Вставить("ОбъектОтвет", ОбъектОтвет);
			
			Если ОбработкаОповещения <> Неопределено Тогда
				ВыполнитьОбработкуОповещения(
					ОбработкаОповещения, 
					РезультатРегистрации);
			КонецЕсли;
		КонецЕсли;	 
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		КраткоеПредставлениеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		
		ДлительнаяОтправкаКлиентСервер.ВывестиОшибку(НСтр("ru = 'Неизвестная ошибка при регистрации в сервисе РЭЦ';
															|en = 'Неизвестная ошибка при регистрации в сервисе РЭЦ'"));
		Состояние(НСтр("ru = 'Ошибка регистрации в сервисе РЭЦ';
						|en = 'Ошибка регистрации в сервисе РЭЦ'"),,, БиблиотекаКартинок.ОшибкаОтправки);

		Если ОбработкаОповещения <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(
				ОбработкаОповещения, 
				Новый Структура("Выполнено", Ложь));
		КонецЕсли;
		Возврат;
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область ВыгрузитьПакет

Процедура ВыгрузитьПакет(ОповещениеОЗавершении, Организация, СсылкаНаОтчет, ВладелецФормы = Неопределено) Экспорт
	
	Контекст = Новый Структура;
	Контекст.Вставить("Организация", Организация);
	Контекст.Вставить("СсылкаНаОтчет", СсылкаНаОтчет);
	Контекст.Вставить("ВладелецФормы", ВладелецФормы);
	Контекст.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	МассивВыгрузки = Новый Массив;
	ИменаФайлов = Новый Массив;
	Кодировка = "";
	
	Если ТипЗнч(Контекст.СсылкаНаОтчет) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
		МодульВыгрузки = ПолучитьФорму("Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента",,); //Контекст.ВладелецФормы
		
		ВыгрузкаВыполнена = МодульВыгрузки.ВыгрузитьОтчет(
			Контекст.СсылкаНаОтчет, Ложь, Ложь, 
			МассивВыгрузки, ИменаФайлов, 
			Кодировка, Ложь);     
	Иначе
		ВыгрузкаВыполнена = ДокументооборотСРЭЦВызовСервера.ВыгрузитьФайлыВложений(Контекст.СсылкаНаОтчет, МассивВыгрузки, ИменаФайлов);		
	КонецЕсли;
		
	Если ВыгрузкаВыполнена Тогда
		Контекст.Вставить("ДанныеДляВыгрузки", МассивВыгрузки);
		ВыгрузитьПакетПослеЗаполненияНастроек(Неопределено, Контекст);
	КонецЕсли;
	
КонецПроцедуры


Процедура ВыгрузитьПакетПослеЗаполненияНастроек(Результат, ВходящийКонтекст) Экспорт

	РезультатВыполнения = Новый Структура;
	РезультатВыполнения.Вставить("ДанныеДляВыгрузки", ВходящийКонтекст.ДанныеДляВыгрузки);
	РезультатВыполнения.Вставить("Выполнено", Истина);
	
	ВыполнитьОбработкуОповещения(ВходящийКонтекст.ОповещениеОЗавершении, РезультатВыполнения);
		
КонецПроцедуры

#КонецОбласти   

#Область ПолучитьСтатусОтчета

Процедура ПолучитьСтатусОтчета(ОповещениеОЗавершении, Организация, Отправка, ВладелецФормы, ПараметрыАутентификации = Неопределено) Экспорт
	
	Контекст = Новый Структура;
	Контекст.Вставить("Отправка", Отправка);
	Контекст.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	Контекст.Вставить("ВладелецФормы", ВладелецФормы);  
	
	Настройки = ДокументооборотСРЭЦВызовСервера.ПолучитьНастройки(Организация);
	Если Настройки.ОбменНастроен Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПолучитьСтатусОтчетаПослеАутентификации", ЭтотОбъект, Контекст);
		АвторизацияВСервисеРЭЦ(Настройки.Сертификат, ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры       


Процедура ПолучитьСтатусОтчетаПослеАутентификации(Результат, Контекст) Экспорт
	
	Если Результат.Выполнено = Истина Тогда
		Попытка
			РезультатСтатус = ДокументооборотСРЭЦВызовСервера.ПолучитьСтатусОтчета(Контекст.Отправка, Результат);
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			КраткоеПредставлениеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
			
			ДлительнаяОтправкаКлиентСервер.ВывестиОшибку(КраткоеПредставлениеОшибки);
			ВыполнитьОбработкуОповещения(
				Контекст.ОповещениеОЗавершении, 
				Новый Структура("Выполнено", Ложь));
			Возврат;
		КонецПопытки;  
		
		Если РезультатСтатус.Сертификаты.Количество() > 0 Тогда
			Контекст.Вставить("РезультатСтатус", РезультатСтатус);
			ВыполняемоеОповещение = Новый ОписаниеОповещения("ПолучитьСтатусОтчетаПослеПолученияСтатуса", ЭтотОбъект, Контекст);
			ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ВыполняемоеОповещение);
		Иначе
			ВыполнитьОбработкуОповещения(Контекст.ОповещениеОЗавершении, Новый Структура("Выполнено", Истина));	
		КонецЕсли;
		   
	КонецЕсли;
	
КонецПроцедуры 

Процедура ПолучитьСтатусОтчетаПослеПолученияСтатуса(Результат, Контекст) Экспорт  
	
	ВыполняемоеОповещение = Новый ОписаниеОповещения("ПолучитьСтатусОтчетаПослеИмпортаСертификатов", ЭтотОбъект, Контекст);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОповещениеОЗавершении", 				ВыполняемоеОповещение);
	ДополнительныеПараметры.Вставить("УстанавливаемыеСертификаты", 			Контекст.РезультатСтатус.Сертификаты);
	ДополнительныеПараметры.Вставить("ЭтоЭлектроннаяПодписьВМоделиСервиса", Ложь);
	ДополнительныеПараметры.Вставить("ИндексСертификата", 					0);
	
	Результат.КонтекстЭДО.УстановитьСертификатыВЦикле(Неопределено, ДополнительныеПараметры);
	
КонецПроцедуры  


Процедура ПолучитьСтатусОтчетаПослеИмпортаСертификатов(Результат, ДополнительныеПараметры) Экспорт 
	
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, Новый Структура("Выполнено", Результат));
	
КонецПроцедуры


Процедура ПолучитьСтатусОтчетаПослеВводаПараметровАутентификации(Результат, ВходящийКонтекст) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ПолучитьСтатусОтчета(
			ВходящийКонтекст.ОповещениеОЗавершении, 
			ВходящийКонтекст.Отправка,
			ВходящийКонтекст.ВладелецФормы, 
			Результат);
	Иначе
		ВыполнитьОбработкуОповещения(
			ВходящийКонтекст.ОповещениеОЗавершении, 
			Новый Структура("Выполнено", Ложь));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти