
#Область СлужебныйПрограммныйИнтерфейс

Функция ЭтоРасширеннаяВерсияГосИС() Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.ЭтоРасширеннаяВерсияГосИС();
	
КонецФункции

//Возвращает виды маркируемой продукции по которым ведется учет.
// Параметры:
//  ПродукцияИСМП - Булево - Будет добавлена продукция ИСМП
//  ПродукцияМОТП - Булево - Будет добавлена продукция МОТП
//Возвращаемое значение:
//   ФиксированныйМассив Из ПеречислениеСсылка.ВидыПродукцииИС - виды маркируемой продукции.
//
Функция УчитываемыеВидыМаркируемойПродукции(ПродукцияИСМП = Истина, ПродукцияМОТП = Истина) Экспорт
	
	ВидыМаркируемойПродукции = ОбщегоНазначенияИСМПВызовСервера.УчитываемыеВидыМаркируемойПродукции();
	
	Если ПродукцияИСМП И ПродукцияМОТП Тогда
		Возврат ВидыМаркируемойПродукции;
	КонецЕсли;
	
	ВидыПродукции = Новый Массив;
	
	Для Каждого ВидПродукции Из ВидыМаркируемойПродукции Цикл
		Если ПродукцияИСМП И ОбщегоНазначенияИСКлиентСервер.ЭтоПродукцияИСМП(ВидПродукции)
			Или ПродукцияМОТП И ОбщегоНазначенияИСКлиентСервер.ЭтоПродукцияМОТП(ВидПродукции) Тогда
			ВидыПродукции.Добавить(ВидПродукции);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Новый ФиксированныйМассив(ВидыПродукции);
	
КонецФункции

//Возвращает виды маркируемой продукции в тестовом режиме на переданную дату.
//
//Параметры:
//   НаДату - Дата - дата оборота маркируемой продукции
//
//Возвращаемое значение:
//   ФиксированныйМассив Из ПеречислениеСсылка.ВидыПродукцииИС - виды маркируемой продукции, по которым установлен 
//   признак ведения учета и дата оборота менее даты обязательной регистрации.
//
Функция ВидыПродукцииОбязательнойМаркировки(НаДату) Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.УчитываемыеВидыМаркируемойПродукции(НаДату, Ложь);
	
КонецФункции

//Возвращает признак запроса данных из сервиса ИС МП.
//
//Возвращаемое значение:
//   Булево - Истина, в случае необходимости запроса данных сервиса.
//
Функция ЗапрашиватьДанныеСервиса() Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.ЗапрашиватьДанныеСервиса();

КонецФункции

// Возвращает признак включения режима работы с тестовым контуром ИС МП
//
// Возвращаемое значение:
//  Булево - Истина, если включен режим работы с тестовым контуром ИС МП.
//
Функция РежимРаботыСТестовымКонтуромИСМП() Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.РежимРаботыСТестовымКонтуромИСМП();
	
КонецФункции

// Возвращает настройки сканирования кодов маркировки ИС МП.
//
// Возвращаемое значение:
//  Булево - Истина, в случае необходимости контроля статусов.
Функция НастройкиСканированияКодовМаркировки() Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.НастройкиСканированияКодовМаркировки();

КонецФункции

// Возвращает признак возможности для вида продукции (и вида операции) участвовать в частичном выбытии.
// 
// Параметры:
//  ВидПродукции    - ПеречислениеСсылка.ВидыПродукцииИС                - вид маркируемой продукции.
//  ВидОперацииИСМП - ПеречислениеСсылка.ВидыОперацийИСМП, Неопределено - вид операции ИСМП.
// Возвращаемое значение:
//  Булево - Вид продукци (в текущей операции) может выбывать частично.
Функция ПоддерживаетсяЧастичноеВыбытие(ВидПродукции, ВидОперацииИСМП = Неопределено) Экспорт
	
	ПоддерживаетсяЧастичноеВыбытие = Ложь;
	
	Если ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Духи")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.АльтернативныйТабак")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.НикотиносодержащаяПродукция")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Пиво")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ПивоВПотребительскихУпаковках")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.БАДы")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.БАДы2025")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ВетеринарныеПрепараты")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.МорепродуктыПодконтрольныеВЕТИС")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.МедицинскиеИзделия")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.МедицинскиеИзделия20")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Антисептики")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ДезинфицирующиеСредства")
		Или ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.БезалкогольноеПиво") Тогда
		
		РозничныеОперации = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ОперацииРозничнойТорговли();
		
		Если ВидОперацииИСМП = Неопределено
			Или РозничныеОперации.Найти(ВидОперацииИСМП) <> Неопределено Тогда
			ПоддерживаетсяЧастичноеВыбытие = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ПоддерживаетсяЧастичноеВыбытие;
	
КонецФункции

Функция ЗапрашиватьДанныеЧастичногоВыбытияИзСервиса(ВидПродукции) Экспорт
	
	Если ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Алкогольная") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ЗапрашиватьДанныеСервиса();
	
КонецФункции

//Возвращает признак необходимости контроля статусов кодов маркировок ИС МП при розничной торговле.
//
//Параметры:
//	 ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции
//	 ВидОперации  - ПеречислениеСсылка.ВидыОперацийИСМП, Неопределено - Вид операции.
//Возвращаемое значение:
//   Булево - Истина, в случае необходимости контроля статусов.
//
Функция КонтролироватьСтатусыКодовМаркировкиВРознице(ВидПродукции = Неопределено, ВидОперации = Неопределено) Экспорт
	
	Если Не ЗапрашиватьДанныеСервиса() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидОперации) Тогда
		ОперацииКонтроля = Новый Массив();
		ОперацииКонтроля.Добавить(ВидОперации);
	Иначе
		ОперацииКонтроля = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ОперацииРозничнойТорговли();
	КонецЕсли;
	
	ОперацияИсключена = НастройкаПараметровСканированияСлужебныйКлиентСервер.ОперацииИсключеныИзКонтроляСтатусовИВладельцев(ОперацииКонтроля, ВидПродукции);
	
	Возврат Не (ОперацияИсключена);
	
КонецФункции

//Возвращает признак необходимости контроля статусов кодов маркировок ИС МП.
//
//Параметры:
//	 ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции
//	 ВидОперации  - ПеречислениеСсылка.ВидыОперацийИСМП, Неопределено - Вид операции.
//
//Возвращаемое значение:
//   Булево - Истина, в случае необходимости контроля статусов
//
Функция КонтролироватьСтатусыКодовМаркировки(ВидПродукции = Неопределено, ВидОперации = Неопределено) Экспорт
	
	Если Не ЗапрашиватьДанныеСервиса() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидОперации) Тогда
		ОперацииКонтроля = Новый Массив();
		ОперацииКонтроля.Добавить(ВидОперации);
	Иначе
		ОперацииКонтроля = ОбщегоНазначенияКлиентСервер.РазностьМассивов(
			НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ДопустимыеВидыОпераций().ВыгрузитьЗначения(),
			НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ОперацииРозничнойТорговли());
	КонецЕсли;
	
	ОперацияИсключена = НастройкаПараметровСканированияСлужебныйКлиентСервер.ОперацииИсключеныИзКонтроляСтатусовИВладельцев(ОперацииКонтроля, ВидПродукции);
	
	Возврат Не (ОперацияИсключена);
	
КонецФункции

// Определяет признак учета в системе МРЦ.
// 
// Возвращаемое значение:
// 	Булево - Включено ведение учетаю
Функция УчитыватьМРЦ() Экспорт
	
	Возврат НастройкиСканированияКодовМаркировки().УчитыватьМРЦ;
	
КонецФункции

// Функция возвращает вид операции Розничная продажа.
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.ВидыОперацийИСМП
Функция ВидОперацииРозничнаяПродажа() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа");
	
КонецФункции

// Функция возвращает вид операции Оптовая продажа.
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.ВидыОперацийИСМП
Функция ВидОперацииОптоваяПродажа() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПродажа");
	
КонецФункции

// Проверяет, является ли вид операции розничной продажей.
// 
// Параметры:
//  ВидОперации - ПеречислениеСсылка.ВидыОперацийИСМП
// 
// Возвращаемое значение:
//  Булево - Истина, если это вид операции розничная продажа
Функция ЭтоВидОперацииРозничнаяПродажа(ВидОперации) Экспорт
	
	ВидОперацииРозница = ВидОперацииРозничнаяПродажа();
	Возврат (ВидОперации = ВидОперацииРозница);
	
КонецФункции

// Функция возвращает вид операции Розничный возврат.
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.ВидыОперацийИСМП
Функция ВидОперацииРозничныйВозврат() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВозвратВОборотПриРозничнойРеализации");
	
КонецФункции

// Функция возвращает вид операции Оптовый возврат.
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.ВидыОперацийИСМП
Функция ВидОперацииОптовыйВозврат() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаПродажа");
	
КонецФункции

// Функция возвращает вид операции Закупки.
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.ВидыОперацийИСМП
Функция ВидОперацииЗакупка() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Приемка");
	
КонецФункции

// Проверяет, является ли вид операции оптовой продажей.
// 
// Параметры:
//  ВидОперации - ПеречислениеСсылка.ВидыОперацийИСМП
// 
// Возвращаемое значение:
//  Булево - Истина, если это вид операции оптовая продажа
Функция ЭтоВидОперацииОптоваяПродажа(ВидОперации) Экспорт
	
	ВидОперацииОпт = ВидОперацииОптоваяПродажа();
	Возврат (ВидОперации = ВидОперацииОпт);
	
КонецФункции

// Проверяет, является ли вид операции оптовой продажей.
// 
// Параметры:
//  ВидОперации - ПеречислениеСсылка.ВидыОперацийИСМП
// 
// Возвращаемое значение:
//  Булево - Истина, если это вид операции оптовая продажа
Функция ЭтоВидОперацииЗакупка(ВидОперации) Экспорт
	
	ВидОперацииЗакупка = ВидОперацииЗакупка();
	Возврат (ВидОперации = ВидОперацииЗакупка);
	
КонецФункции

// Функция возвращает признак необходимости получения КМ в зависимости от вида операции по уже рассчитанным датам
// Возможность оборота регулируется настройками дат в рабочем месте Интеграция ИС МП (обувь, одежда, табак...)
//  и текущим законодательством.
// 
// Параметры:
//  ВидОперации          - ПеречислениеСсылка.ВидыОперацийИСМП - вид операции
//  ВидПродукции         - ПеречислениеСсылка.ВидыПродукцииИС  - вид маркируемой продукции
//  СтруктураДатКонтроля - см. ОбщегоНазначенияИСМПКлиентСервер.ИнициализироватьНастройкуДатРаздельногоКонтроля
//  НаДату               - Дата                                - дата контроля
// 
// Возвращаемое значение:
//  Булево - Действует контроль по разделенным датам
Функция ДействуетКонтрольПоРазделеннымДатам(ВидОперации, ВидПродукции, СтруктураДатКонтроля, НаДату) Экспорт
	
	ДатыКонтроля = ОбщегоНазначенияИСМПКлиентСервер.ИнициализироватьНастройкуДатРаздельногоКонтроля();
	ЗаполнитьЗначенияСвойств(ДатыКонтроля, СтруктураДатКонтроля);
	
	ДатыКонтроля.ВидПродукции = ВидПродукции;
	ДействуетКонтроль         = Ложь;
	
	Если Не ЗначениеЗаполнено(ДатыКонтроля.ВидПродукции) Тогда
		ДействуетКонтроль = Истина;
	ИначеЕсли ВидОперации = ВидОперацииРозничнаяПродажа()
			Или ВидОперации = ВидОперацииРозничныйВозврат() Тогда
		ДействуетКонтроль = ЗначениеЗаполнено(ДатыКонтроля.ДатаРозницаУведомительныйРежим) И (ДатыКонтроля.ДатаРозницаУведомительныйРежим <= НаДату);
	ИначеЕсли ВидОперации = ВидОперацииОптоваяПродажа()
			Или ВидОперации = ВидОперацииОптовыйВозврат() Тогда
		ДействуетКонтроль = ЗначениеЗаполнено(ДатыКонтроля.ДатаОптКонтрольПоштучно) И (ДатыКонтроля.ДатаОптКонтрольПоштучно <= НаДату)
			Или ЗначениеЗаполнено(ДатыКонтроля.ДатаОптКонтрольОСУ) И (ДатыКонтроля.ДатаОптКонтрольОСУ <= НаДату);
	Иначе
		ДействуетКонтроль = Истина;
	КонецЕсли;
	
	Возврат ДействуетКонтроль;
	
КонецФункции

// Функция возвращает признак возможности продажи и оборота немаркируемых остатков маркируемой продукции по уже рассчитанным датам
// Возможность оборота регулируется настройкой даты в рабочем месте Интеграция ИС МП (обувь, одежда, табак...)
//  и текущим законодательством.
// 
// Параметры:
//  ВидОперации          - ПеречислениеСсылка.ВидыОперацийИСМП - вид операции
//  СтруктураДатКонтроля - см. ОбщегоНазначенияИСМПКлиентСервер.ИнициализироватьНастройкуДатРаздельногоКонтроля
//  НаДату               - Неопределено, Дата                 - дата контроля
// 
// Возвращаемое значение:
//  Булево - Истина, если разрешен оборот немаркируемых остатков продукции
Функция ДействуетОборотНемаркированныхОстатковПоРазделеннымДатам(ВидОперации, СтруктураДатКонтроля, НаДату) Экспорт
	
	ДатыКонтроля = ОбщегоНазначенияИСМПКлиентСервер.ИнициализироватьНастройкуДатРаздельногоКонтроля();
	ЗаполнитьЗначенияСвойств(ДатыКонтроля, СтруктураДатКонтроля);
	
	ДействуетКонтроль = (ДатыКонтроля.ДатаЗапретПродажиНемаркированныхОстатков > НаДату)
		Или ВидОперации = ВидОперацииРозничныйВозврат()
		Или ВидОперации = ВидОперацииОптовыйВозврат();
	
	Возврат ДействуетКонтроль;
	
КонецФункции

// Функция возвращает признак возможности продажи по ОСУ по уже рассчитанным датам
// Возможность оборота регулируется настройкой даты в рабочем месте Интеграция ИС МП (обувь, одежда, табак...)
//  и текущим законодательством.
// 
// Параметры:
//  ВидОперации          - ПеречислениеСсылка.ВидыОперацийИСМП - вид операции
//  СтруктураДатКонтроля - см. ОбщегоНазначенияИСМПКлиентСервер.ИнициализироватьНастройкуДатРаздельногоКонтроля
//  НаДату               - Неопределено, Дата                 - дата контроля
// 
// Возвращаемое значение:
//  Булево - Истина, если разрешена реализация по ОСУ
Функция ДействуетКонтрольПриПродажеОптомПоОСУ(ВидОперации, СтруктураДатКонтроля, НаДату) Экспорт
	
	ДатыКонтроля = ОбщегоНазначенияИСМПКлиентСервер.ИнициализироватьНастройкуДатРаздельногоКонтроля();
	ЗаполнитьЗначенияСвойств(ДатыКонтроля, СтруктураДатКонтроля);
	
	ДействуетКонтроль = (ДатыКонтроля.ДатаОптКонтрольОСУ <= НаДату И ДатыКонтроля.ДатаОптКонтрольПоштучно > НаДату)
		Или ВидОперации = ВидОперацииОптоваяПродажа()
		Или ВидОперации = ВидОперацииОптовыйВозврат();
	
	Возврат ДействуетКонтроль;
	
КонецФункции

// Вид операции поддерживает проверку владельца по дате производства.
// 
// Параметры:
//  ВидОперации - ПеречислениеСсылка.ВидыОперацийИСМП - вид операции
// 
// Возвращаемое значение:
//  Булево - Вид операции поддерживает проверку владельца по дате производства
Функция ВидОперацииПоддерживаетПроверкуВладельцаПоДатеПроизводства(ВидОперации) Экспорт
	Возврат ОбщегоНазначенияИСМПКлиентСерверПовтИсп.ЭтоВидОперацииОптоваяПродажа(ВидОперации)
		Или ОбщегоНазначенияИСМПКлиентСерверПовтИсп.ЭтоВидОперацииРозничнаяПродажа(ВидОперации);
КонецФункции

#Область РазрешительныйРежимРозничнойПродажи

// Возвращает признак включения режима проверки товарных групп при розничных продажах
//  методом codes/check в ГИС МТ.
// 
// Возвращаемое значение:
//  Булево - Истина, если режим проверки кодов маркировки методом проверки в ГИС МТ кодов с криптохвостами включен
Функция ПроверкаТоварныхГруппПриРозничнойПродажеГИСМТ() Экспорт
	
	Возврат ОбщегоНазначенияИСМПКлиентСерверПовтИсп.НастройкиСканированияКодовМаркировки().ИспользоватьПроверкуРозничнымМетодомДляОпределенныхТоварныхГрупп;
	
КонецФункции

// Возвращает список продукции, по которой необходима проверка в ГИС МТ при продаже на ККТ
// 
// Возвращаемое значение:
//  Массив из ПеречислениеСсылка.ВидыПродукцииИС- список продукции с обязательными проверками
//   перед продажей на кассе.
Функция ВидыПродукцийОбязательнойПроверкиПередРозничнойПродажей() Экспорт
	
	ВидыПродукцийСПроверкой = Новый Массив;
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.АльтернативныйТабак"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Антисептики"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ДезинфицирующиеСредства"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.БАДы"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.БАДы2025"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Духи"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ЛегкаяПромышленность"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.НикотиносодержащаяПродукция"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Обувь"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.СоковаяПродукция"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.БезалкогольныеНапитки"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Пиво"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ПивоВПотребительскихУпаковках"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Табак"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.УпакованнаяВода"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Фотоаппараты"));
	ВидыПродукцийСПроверкой.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Шины"));
	
	Возврат ВидыПродукцийСПроверкой;
	
КонецФункции

// Проверка, подлежит ли продукция обязательной онлайн-проверке перед розничной продажей.
// 
// Параметры:
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции для проверки
//  ВидОперации - Неопределено, ПеречислениеСсылка.ВидыОперацийИСМП - Вид операции для проверки
//  ТребуетсяПроверкаСредствамиККТ - Булево - проверка на версию ФФД 1.2
// 
// Возвращаемое значение:
//  Булево - Продукция подлежит обязательной онлайн проверке перед розничной продажей
Функция ПродукцияПодлежитОбязательнойОнлайнПроверкеПередРозничнойПродажей(ВидПродукции, ВидОперации = Неопределено, ТребуетсяПроверкаСредствамиККТ = Истина) Экспорт

	ПродукцияПодлежитПроверке = Ложь;
	
	Если Не ТребуетсяПроверкаСредствамиККТ Тогда
		Возврат ПродукцияПодлежитПроверке;
	КонецЕсли;
	
	Если ВидОперации = Неопределено Тогда
		ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа");
	ИначеЕсли Не ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа") Тогда
		Возврат ПродукцияПодлежитПроверке;
	КонецЕсли;
	
	МассивПродукцийСПроверкой = ОбщегоНазначенияИСМПВызовСервера.СписокУчитываемойПродукцииТребующейОбязательнойОнлайнПроверкиПриПродажеВРозницуНаДату();
	
	ПродукцияПодлежитПроверке = МассивПродукцийСПроверкой.Найти(ВидПродукции) <> Неопределено;
	
	Возврат ПродукцияПодлежитПроверке;

КонецФункции

// Проверка, подлежит ли продукция обязательной оффлайн-проверке перед розничной продажей.
// 
// Параметры:
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции для проверки
//  ВидОперации - Неопределено, ПеречислениеСсылка.ВидыОперацийИСМП - Вид операции для проверки
//  ТребуетсяПроверкаСредствамиККТ - Булево - проверка на версию ФФД 1.2
// 
// Возвращаемое значение:
//  Булево - Продукция подлежит обязательной онлайн проверке перед розничной продажей
Функция ПродукцияПодлежитОбязательнойОффлайнПроверкеПередРозничнойПродажей(ВидПродукции, ВидОперации = Неопределено, ТребуетсяПроверкаСредствамиККТ = Истина) Экспорт
	
	ПродукцияПодлежитПроверке = Ложь;
	
	Если Не ТребуетсяПроверкаСредствамиККТ Тогда
		Возврат ПродукцияПодлежитПроверке;
	КонецЕсли;
	
	Если ВидОперации = Неопределено Тогда
		ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа");
	ИначеЕсли Не ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа") Тогда
		Возврат ПродукцияПодлежитПроверке;
	КонецЕсли;
	
	МассивПродукцийСПроверкой = ОбщегоНазначенияИСМПВызовСервера.СписокУчитываемойПродукцииТребующейОбязательнойОффлайнПроверкиПриПродажеВРозницуНаДату();
	
	ПродукцияПодлежитПроверке = МассивПродукцийСПроверкой.Найти(ВидПродукции) <> Неопределено;
	
	Возврат ПродукцияПодлежитПроверке;
	
КонецФункции

Функция ЗапрещенаРаботаРазрешительногоРежимаСФФД_1_05(ВидПродукции,
	ВидОперации,
	ТребуетсяПроверкаСредствамиККТ,
	ПодключенноеККТИСМП,
	ЭтоОблачнаяККТ = Ложь) Экспорт
	
	Отказ = Ложь;
	ПродукцияПодлежитПроверкеРР = ОбщегоНазначенияИСМПКлиентСерверПовтИсп.ПродукцияПодлежитОбязательнойОнлайнПроверкеПередРозничнойПродажей(
		ВидПродукции,
		ВидОперации);
	
	Если ПродукцияПодлежитПроверкеРР
		И Не ТребуетсяПроверкаСредствамиККТ
		И ЗначениеЗаполнено(ПодключенноеККТИСМП)
		И Не ЭтоОблачнаяККТ Тогда
		// ККТ подключено, но версия ФФД не та, и это не облачная ККТ
		Отказ = Истина;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

Функция ВидыПродукцийСУчетомИсключений(ВидПродукции, ВидОперации) Экспорт
	
	МассивВидовПродукцийСУчетомИсключений = Новый Массив;
	УчитываемыеВидыМаркируемойПродукции = УчитываемыеВидыМаркируемойПродукции();
	
	Для Каждого ВидМаркируемойПродукции Из УчитываемыеВидыМаркируемойПродукции Цикл
	
		ВидПродукцииУчитывается = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.КонтролироватьСтатусыКодовМаркировки(ВидПродукции, ВидОперации)
			Или НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.КонтролироватьВладельцевКодовМаркировки(ВидПродукции, ВидОперации);
		
		Если ВидПродукцииУчитывается Тогда
			МассивВидовПродукцийСУчетомИсключений.Добавить(ВидМаркируемойПродукции);
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат МассивВидовПродукцийСУчетомИсключений;
	
КонецФункции

// Возвращает настройку частоты актуализации и загрузки CDN-площадок
//  для обращения к розничному методу продажи ГИС МТ.
//
// Возвращаемое значение:
//  Число - частота обновления, в часах
Функция ЧастотаОбновленияCDNПлощадок() Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.НастройкиСканированияКодовМаркировки().ЧастотаОбновленияCDNПлощадок;
	
КонецФункции

// Возвращает настройку времени ожидания ответа от ГИС МТ при пробитии чека
//  при работе с разрешительным режимом.
// 
// Возвращаемое значение:
//  Число - время ожидания ответа от CDN-площадок при пробитии чека, в секундах
Функция ВремяОтветаCDNПлощадокПриПробитииЧека() Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.НастройкиСканированияКодовМаркировки().ВремяОтветаCDNПлощадокПриПробитииЧека;
	
КонецФункции

// Возвращает настройку времени действия идентификатора разрешительного режима при
//  розничной продаже, после истечение времени идентификатор требуется обновить и переполучить.
// 
// Возвращаемое значение:
//  Число - срок действия идентификатора, в секундах
Функция СрокДействияИдентификатораНаПродажуРазрешительногоРежима() Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.НастройкиСканированияКодовМаркировки().СрокДействияИдентификатораРазрешительногоРежима;
	
КонецФункции

// Возвращает настройку времени блокировки CDN-площадок при их некорретных ответах
//  при работе с разрешительным режимом.
// 
// Возвращаемое значение:
//  Число - время блокировки CDN-площадок, в минутах
Функция ВремяБлокировкиCDNПлощадки() Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.НастройкиСканированияКодовМаркировки().ВремяБлокировкиCDNПлощадок;
	
КонецФункции

// Возвращает признак действия аварийного режима при розничных продажах
// Запросы разрешительного режима не выполняются, их результаты не контролируются.
// 
// Возвращаемое значение:
//  Булево - Истина, если аварийный режим включен
Функция ДействуетАварийныйРежимДляРозничныхПродаж() Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.ДействуетАварийныйРежимДляРозничныхПродаж();
	
КонецФункции

// Возвращает код ответа, зафиксированный ГИС МТ как код ответа, означающий наступление аварийного режима
// 
// Возвращаемое значение:
//  Число - Код ответа аварийного режима
Функция АварийныйРежимКодОтветаСервисаГИСМТ() Экспорт
	
	Возврат 203;
	
КонецФункции

// Возвращает признак, нужно ли писать данные успешных операций сканирования в РС ОперацииПроверкиКМ при настройке
// Проверка кодов маркировки средствами ККТ = Перед пробитием чека.
// 
// Возвращаемое значение:
//  Булево - Истина, если установлена нужная версия БПО, есть где хранить логи, Проверка кодов маркировки средствами ККТ = Перед пробитием чека и
//  включена настройка Хранить успешные операции при разрешительном режиме.
Функция ХранитьУспешныеОперацииПриПроверкеКМ() Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.ХранитьУспешныеОперацииПриПроверкеКМ();
	
КонецФункции

#КонецОбласти

#Область ВнутреннееПеремещениеМеждуМОД

Функция ВидыПродукцииВнутреннегоПеремещенияМеждуМОД() Экспорт
	
	ВидыПродукцииИСМП = Новый Массив();
	ВидыПродукцииИСМП.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Пиво"));
	ВидыПродукцииИСМП.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ПивоВПотребительскихУпаковках"));
	ВидыПродукцииИСМП.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.АлкогольнаяПродукцияДо9Процентов"));
	
	Возврат ВидыПродукцииИСМП;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает редакцию библиотеки подключаемого оборудования(БПО).
// В редакции 2 данные возвращаются как первый элемент массива, возращаемого в свойстве ВыходныеПараметры.
// В редакции 3 данные возвращаются в составе возвращаемого значение.
// 
// Возвращаемое значение:
//  Число - Редакция БПО. Первая цифра номера версии.
Функция РедакцияБПО() Экспорт
	
	ВерсияБиблиотеки = МенеджерОборудованияВызовСервера.ВерсияБиблиотеки();
	
	Возврат Число(СтрРазделить(ВерсияБиблиотеки, ".")[0]);
	
КонецФункции

#КонецОбласти
