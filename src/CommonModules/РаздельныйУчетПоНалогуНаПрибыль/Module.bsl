#Область ПрограммныйИнтерфейс

// Возвращает признак использования раздельного учета для организации
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации, Массив Из СправочникСсылка.Организации - головные организации
// 	НаДату - Дата, Неопределено - дата, на которую установлен признак
// 	МВТ    - МенеджерВременныхТаблиц, Неопределено - если передан,
// 	          данные будут помещены во временную таблицу "ОрганизацииСРаздельнымУчетом".
//
// Возвращаемое значение:
// 	Булево, Соответствие Из СправочникСсылка.Организации, Неопределено -
// 		Булево       - когда передана одна организация
// 		Соответствие - когда передан массив организаций, в соответствии будут только организации с раздельным учетом
// 		Неопределено - когда передан менеджер временных таблиц для помещения результата.
//
Функция ИспользуетсяРаздельныйУчет(Организация, Знач НаДату = Неопределено, МВТ = Неопределено) Экспорт
	
	Если Не ТипЗнч(Организация) = Тип("Массив") Тогда
		мОрганизации = Новый Массив;
		мОрганизации.Добавить(Организация);
	Иначе
		мОрганизации = Организация;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НаДату) Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ВернутьБулево = Ложь;
	ВернутьМассив = Ложь;
	ВернутьМВТ    = Ложь;
	
	Если МВТ <> Неопределено Тогда
		МВТ = Новый МенеджерВременныхТаблиц();
		ВернутьМВТ = Истина;
	ИначеЕсли ТипЗнч(Организация) = Тип("Массив") Тогда
		ВернутьМассив = Истина;
	Иначе
		ВернутьБулево = Истина;
	КонецЕсли;
	
	Если ВернутьБулево Тогда
		
		ПараметрыФО = Новый Структура;
		
		УстановитьПривилегированныйРежим(Истина);
		Если ЗначениеЗаполнено(Организация) Тогда
			УстановитьПривилегированныйРежим(Истина);
			ПараметрыФО.Вставить(
				"Организация",
				ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация));
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли;
		
		ПараметрыФО.Вставить("Период", НаДату);
		
		Результат = ПолучитьФункциональнуюОпцию("РаздельныйУчетПоНалогуНаПрибыль", ПараметрыФО);
		
	Иначе
	
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МВТ;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Организации.Ссылка              КАК Организация,
		|	Организации.ГоловнаяОрганизация КАК ГоловнаяОрганизация
		|ПОМЕСТИТЬ вт_ДанныеОрганизаций
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка В (&мОрганизации)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ГоловнаяОрганизация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеОрганизаций.Организация КАК Организация
		|ПОМЕСТИТЬ ОрганизацииСРаздельнымУчетом
		|ИЗ
		|	вт_ДанныеОрганизаций КАК ДанныеОрганизаций
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(
		|			&НаДату,
		|			Организация В (
		|					ВЫБРАТЬ
		|						Т.ГоловнаяОрганизация
		|					ИЗ
		|						вт_ДанныеОрганизаций КАК Т
		|					)
		|		) КАК УчетнаяПолитика
		|	ПО
		|		ДанныеОрганизаций.ГоловнаяОрганизация = УчетнаяПолитика.Организация
		|
		|ГДЕ
		|	УчетнаяПолитика.РаздельныйУчетПоНалогуНаПрибыль
		|";
		
		Запрос.УстановитьПараметр("мОрганизации", мОрганизации);
		Запрос.УстановитьПараметр("НаДату",       НаДату);
		
		Если НЕ ВернутьМВТ Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПОМЕСТИТЬ ОрганизацииСРаздельнымУчетом", "");
		Иначе
			Запрос.Текст = Запрос.Текст + ОбщегоНазначения.РазделительПакетаЗапросов()
				+ "УНИЧТОЖИТЬ вт_ДанныеОрганизаций";
		КонецЕсли;
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если ВернутьМассив Тогда
			
			сОрганизацииСРаздельнымУчетом = Новый Соответствие();
			Выборка = РезультатЗапроса.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				сОрганизацииСРаздельнымУчетом.Вставить(Выборка.Организация, Истина);
			КонецЦикла;
			
			Результат = сОрганизацииСРаздельнымУчетом;
			
		Иначе
			
			Результат = Неопределено;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает массив вариантов н/о, означающих применение общих условий налогообложения прибыли
// 
// Возвращаемое значение:
// 	Массив Из СправочникСсылка.ВариантыНалогообложенияПрибыли
//
Функция ВариантыНалогообложенияПрибылиПоУмолчанию() Экспорт
	
	мВарианты = Новый Массив;
	мВарианты.Добавить(Справочники.ВариантыНалогообложенияПрибыли.ПустаяСсылка());
	мВарианты.Добавить(Справочники.ВариантыНалогообложенияПрибыли.ОбщиеУсловияНалогообложения);
	
	Возврат мВарианты;
	
КонецФункции

// Возвращает предопределенное значение варианта н/о для общих условий налогообложения прибыли
//
// Возвращаемое значение:
//   СправочникСсылка.ВариантыНалогообложенияПрибыли   - 
//
Функция ВариантНалогообложенияПрибылиПоУмолчанию() Экспорт

	Возврат Справочники.ВариантыНалогообложенияПрибыли.ОбщиеУсловияНалогообложения;

КонецФункции

// Возвращает основной вариант н/о для организации исходя из учетной политики
//
// Параметры:
//  Организация  - СправочникСсылка.Организации - организация, настройки которой требуется получить
//  НаДату       - Дата - дата, на которую читаются настройки.
//
// Возвращаемое значение:
//  СправочникСсылка.ВариантыНалогообложенияПрибыли - 
//
Функция ОсновнойВариантНалогообложенияПрибыли(Организация, Знач НаДату = Неопределено) Экспорт
	
	ПустойВариантНалогообложения = Справочники.ВариантыНалогообложенияПрибыли.ПустаяСсылка();
	
	Результат = ПустойВариантНалогообложения;
	
	Если ИспользуетсяРаздельныйУчет(Организация, НаДату) Тогда
	
		ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
			"НастройкиУчетаНалогаНаПрибыль",
			Организация,
			НаДату,
			Ложь);
				
		Результат = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			ПараметрыУчетнойПолитики,
			"ОсновнойВариантНалогообложенияПрибыли",
			ПустойВариантНалогообложения);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает массив типов измерения "Объект учета"
// 
// Возвращаемое значение:
// 	Массив - Описание
Функция ТипыОбъектовУчета() Экспорт
	
	мТипов = Новый Массив();
	
	мТипов.Добавить(Тип("ПланВидовХарактеристикСсылка.СтатьиДоходов"));
	мТипов.Добавить(Тип("СправочникСсылка.Номенклатура"));
	
	Возврат мТипов;
	
КонецФункции

#Область РаботаСЗапросами

// Возвращает массив счетов по фин. резу, использующих субконто "Варианты налогообложения прибыли"
// Следует обращаться через модуль повторного использования:
// РаздельныйУчетПоНалогуНаПрибыльПовтИсп.СчетаФинансовогоРезультатаСВариантамиНалогообложения().
// 
// Возвращаемое значение:
// Структура:
// 		* Счета90 - Массив Из ПланСчетовСсылка.Хозрасчетный - массив субсчетов 90-го счета с раздельным НУ
// 		* Счета91 - Массив Из ПланСчетовСсылка.Хозрасчетный - массив субсчетов 91-го счета с раздельным НУ
// 		* Счета99 - Массив Из ПланСчетовСсылка.Хозрасчетный - массив субсчетов 99-го счета с раздельным НУ
//
Функция СчетаФинансовогоРезультатаСВариантамиНалогообложения() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Счета90", Новый Массив);
	Результат.Вставить("Счета91", Новый Массив);
	Результат.Вставить("Счета99", Новый Массив);
	
	Счет90 = ПланыСчетов.Хозрасчетный.Продажи;
	Счет91 = ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы;
	Счет99 = ПланыСчетов.Хозрасчетный.ПрибылиИУбытки;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Счет90", Счет90);
	Запрос.УстановитьПараметр("Счет91", Счет91);
	Запрос.УстановитьПараметр("Счет99", Счет99);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(&Счет90 КАК ПланСчетов.Хозрасчетный) КАК ГоловнойСчет,
	|	Т.Ссылка КАК Субсчет
	|ПОМЕСТИТЬ СчетаФинРезультата
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Т
	|ГДЕ
	|	Т.Ссылка В ИЕРАРХИИ (&Счет90)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Счет91,
	|	Т.Ссылка
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Т
	|ГДЕ
	|	Т.Ссылка В ИЕРАРХИИ (&Счет91)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Счет99,
	|	Т.Ссылка
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Т
	|ГДЕ
	|	Т.Ссылка В ИЕРАРХИИ (&Счет99)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субсчет
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйВидыСубконто.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаСРаздельнымНУ
	|ИЗ
	|	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|ГДЕ
	|	ХозрасчетныйВидыСубконто.Ссылка В (ВЫБРАТЬ Т.Субсчет ИЗ СчетаФинРезультата КАК Т)
	|	И ХозрасчетныйВидыСубконто.ВидСубконто =
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВариантыНалогообложенияПрибыли)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФинРезультата.ГоловнойСчет,
	|	СчетаФинРезультата.Субсчет
	|ИЗ
	|	СчетаФинРезультата КАК СчетаФинРезультата
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаСРаздельнымНУ КАК СчетаСРаздельнымНУ
	|			ПО СчетаФинРезультата.Субсчет = СчетаСРаздельнымНУ.Счет
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ГоловнойСчет = Счет90 Тогда
			Результат.Счета90.Добавить(Выборка.Субсчет);
		ИначеЕсли Выборка.ГоловнойСчет = Счет91 Тогда
			Результат.Счета91.Добавить(Выборка.Субсчет);
		ИначеЕсли Выборка.ГоловнойСчет = Счет99 Тогда
			Результат.Счета99.Добавить(Выборка.Субсчет);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Добавляет в массив субконто по вариантам н/о,
// 
// Параметры:
// 	ВидыСубконто - Массив Из ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные
//
Процедура ДобавитьВидСубконтоВариантыНалогообложенияПрибыли(ВидыСубконто) Экспорт
	
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВариантыНалогообложенияПрибыли);
	
КонецПроцедуры

// Возвращает строковое значение пустой ссылки в запросе
// 
// Возвращаемое значение:
// 	Строка -
Функция ПустаяСсылкаВариантаНалогообложенияВЗапросе() Экспорт
	Возврат "ЗНАЧЕНИЕ(Справочник.ВариантыНалогообложенияПрибыли.ПустаяСсылка)";
КонецФункции

// В запросе обработается поле варианта н/о, исходя из того, требуются данные в разрезе вариантов н/о или нет.
// 
// Параметры:
// 	Запрос                                - Запрос -
// 	ТребуетсяУчетВариантовНалогообложения - Булево -
// 	ПутьКПолю                             - Строка - путь к полю в запросе
// 	ВидыСубконто                          - Массив Из ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные - 
// 	                                          Если есть виды субконто, дополнится видом субконто вариантов н/о.
//                                        - Неопределено - не требуется заполнение видов субконто
// 	ЗаменяемыйТекст                       - Строка - по умолчанию "&ПолеВариантНалогообложенияПрибыли"
//
Процедура ОбработатьПолеВариантаНалогообложенияВЗапросе(
	Запрос,
	ТребуетсяУчетВариантовНалогообложения,
	ПутьКПолю,
	ВидыСубконто = Неопределено,
	ЗаменяемыйТекст = "&ПолеВариантНалогообложенияПрибыли") Экспорт
	
	Если ТребуетсяУчетВариантовНалогообложения Тогда
		ПолеВариантНалогообложенияПрибыли = ПутьКПолю;
	Иначе
		ПолеВариантНалогообложенияПрибыли = ПустаяСсылкаВариантаНалогообложенияВЗапросе();
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, ЗаменяемыйТекст, ПолеВариантНалогообложенияПрибыли);
	
	Если ВидыСубконто <> Неопределено И ТребуетсяУчетВариантовНалогообложения Тогда
		ВидыСубконтоВариантыНалогообложения =
			ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВариантыНалогообложенияПрибыли;
		Если ВидыСубконто.Найти(ВидыСубконтоВариантыНалогообложения) = Неопределено Тогда
			ВидыСубконто.Добавить(ВидыСубконтоВариантыНалогообложения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// В запросе подставляется вариант н/о по умолчанию, исходя из использования раздельного учета.
// 
// Параметры:
// 	Запрос                                - Запрос -
// 	ТребуетсяУчетВариантовНалогообложения - Булево -
// 	ЗаменяемыйТекст                       - Строка - по умолчанию "&ПолеВариантНалогообложенияПоУмолчанию"
//
Процедура ОбработатьПолеВариантНалогообложенияПоУмолчаниюВЗапросе(
	Запрос,
	ТребуетсяУчетВариантовНалогообложения,
	ЗаменяемыйТекст = "&ПолеВариантНалогообложенияПоУмолчанию") Экспорт
	
	Если ТребуетсяУчетВариантовНалогообложения Тогда
		ПолеВариантНалогообложенияПрибыли = "ЗНАЧЕНИЕ(Справочник.ВариантыНалогообложенияПрибыли.ОбщиеУсловияНалогообложения)";
	Иначе
		ПолеВариантНалогообложенияПрибыли = ПустаяСсылкаВариантаНалогообложенияВЗапросе();
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, ЗаменяемыйТекст, ПолеВариантНалогообложенияПрибыли);
	
КонецПроцедуры

// Возвращает текст запроса для пустой таблицы РаздельныйУчет_НастройкиНалогообложенияПрибыли
//
// Возвращаемое значение:
//   Строка   - текст запроса
//
Функция ПолучитьПустуюТаблицуНастройкиНалогообложенияПрибыли() Экспорт

	Возврат
	"ВЫБРАТЬ
	|	NULL КАК Организация,
	|	NULL КАК Период,
	|
	|	NULL КАК Подразделение,
	|	NULL КАК ОбъектУчета,
	|	NULL КАК НаправлениеДеятельности,
	|
	|	NULL КАК ВариантНалогообложенияПрибыли
	|
	|ПОМЕСТИТЬ РаздельныйУчет_НастройкиНалогообложенияПрибыли";

КонецФункции

#КонецОбласти

#Область ПолучениеНастроекНалогообложения

// Инициализируются параметры для получения настройки налогообложения прибыли
// 
// Возвращаемое значение:
// 	Структура - содержит:
// 		* Период      - Дата - актуальные данные на дату.
// 		* Организация - СправочникСсылка.Организации -
// 		
// 		// для отбора по значениям должно быть заполнено хотя бы одно поле.
// 		* Подразделение - СправочникСсылка.СтруктураПредприятия - 
// 		* ОбъектУчета   - СправочникСсылка.Номенклатура, ПланВидовХарактеристикСсылка.СтатьиДоходов -
// 		* НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - 
//
Функция НовыйПараметрыПолученияНастройкиНалогообложенияПрибыли() Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	СтруктураНастроек.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	СтруктураНастроек.Вставить("Период",      Дата(1,1,1));
	
	СтруктураНастроек.Вставить("Подразделение",           Справочники.СтруктураПредприятия.ПустаяСсылка());
	СтруктураНастроек.Вставить("ОбъектУчета",             Неопределено);
	СтруктураНастроек.Вставить("НаправлениеДеятельности", Справочники.НаправленияДеятельности.ПустаяСсылка());
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Возвращается налогообложение прибыли исходя из настроек учетной политики
// 
// Параметры:
// 	ПараметрыПолученияНастроек - см. НовыйПараметрыПолученияНастройкиНалогообложенияПрибыли
//
// Возвращаемое значение:
// 	СправочникСсылка.ВариантыНалогообложенияПрибыли
//
Функция ПолучитьНастройкуНалогообложенияПрибыли(ПараметрыПолученияНастроек) Экспорт
	
	МВТ = Новый МенеджерВременныхТаблиц();
	
	ПараметрыПолученияНастроекРегистра =
		РегистрыСведений.НалогообложениеПрибылиОрганизаций.НовыйПараметрыПолученияНастроекНалогообложенияПрибыли();
	
	ПараметрыПолученияНастроекРегистра.МенеджерВременныхТаблиц = МВТ;
	ПараметрыПолученияНастроекРегистра.Период                  = ПараметрыПолученияНастроек.Период;
	
	ЗаполнитьЗначенияСвойств(ПараметрыПолученияНастроекРегистра.ОтборПоЗначениям,
		ПараметрыПолученияНастроек);
	
	РегистрыСведений.НалогообложениеПрибылиОрганизаций.ПодготовитьВТ_НастройкиНалогообложенияПрибыли(
		ПараметрыПолученияНастроекРегистра);
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.ВариантНалогообложенияПрибыли КАК ВариантНалогообложенияПрибыли
	|ИЗ
	|	НастройкиНалогообложенияПрибыли КАК Т
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НалогообложениеПрибыли = Справочники.ВариантыНалогообложенияПрибыли.ПустаяСсылка();
	
	Если Выборка.Следующий() Тогда
		НалогообложениеПрибыли = Выборка.ВариантНалогообложенияПрибыли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НалогообложениеПрибыли) Тогда
		ОсновнойВариантНалогообложенияПрибыли(
			ПараметрыПолученияНастроек.Организация,
			ПараметрыПолученияНастроек.Период);
	КонецЕсли;
	
	Возврат НалогообложениеПрибыли;
	
КонецФункции


// Инициализируются параметры для получения таблицы настроек налогообложения прибыли
// 
// Возвращаемое значение:
// 	Структура - содержит:
// 		* Период      - Дата - актуальные данные на дату.
// 		* МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - МВТ с данными отбора и для помещения результата
// 		                          - Неопределено - когда нужен только сформированный текст запроса
// 		* ИмяТаблицы                      - Строка - имя временной таблицы (обязательно)
// 		* ИмяПоля_Организация             - Строка - имя колонки "Организация" (обязательно)
// 		* ИмяПоля_Период                  - Строка - имя колонки "Период" (обязательно, если параметр "Период" пустой)
// 		// для отбора по временной таблицы должно быть заполнено как минимум имя одного из полей ниже.
// 		* ИмяПоля_Подразделение           - Строка - имя колонки "Подразделение"
// 		* ИмяПоля_ОбъектУчета             - Строка - имя колонки "ОбъектУчета"
// 		* ИмяПоля_НаправлениеДеятельности - Строка - имя колонки "НаправлениеДеятельности"
//
Функция НовыйПараметрыПолученияТаблицыНастроекНалогообложенияПрибыли() Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	СтруктураНастроек.Вставить("Период",                          Дата(1,1,1));
	СтруктураНастроек.Вставить("МенеджерВременныхТаблиц",         Неопределено);
	СтруктураНастроек.Вставить("ИмяТаблицы",                      "");
	СтруктураНастроек.Вставить("ИмяПоля_Организация",             "");
	СтруктураНастроек.Вставить("ИмяПоля_Период",                  "");
	СтруктураНастроек.Вставить("ИмяПоля_Подразделение",           "");
	СтруктураНастроек.Вставить("ИмяПоля_ОбъектУчета",             "");
	СтруктураНастроек.Вставить("ИмяПоля_НаправлениеДеятельности", "");
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Возвращает настройки налогообложения прибыли исходя из организации, периода и других объектов отбора
// 
// Параметры:
// 	ПараметрыПолученияНастроек - см. НовыйПараметрыПолученияТаблицыНастроекНалогообложенияПрибыли
//
// Возвращаемое значение:
// 	ТаблицаЗначений - содержит:
// 	* Организация             - СправочникСсылка.Организации
// 	* Период                  - Дата
// 	* Подразделение           - СправочникСсылка.СтруктураПредприятия
// 	* ОбъектУчета             - СправочникСсылка.Номенклатура, ПланВидовХарактеристикСсылка.СтатьиДоходов -
// 	* НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности
// 	* ВариантНалогообложенияПрибыли  - СправочникСсылка.ВариантыНалогообложенияПрибыли
//
Функция ТаблицаЗначений_НастройкиНалогообложенияПрибыли(ПараметрыПолученияНастроек) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыПолученияНастроек.МенеджерВременныхТаблиц;
	
	ПодготовитьВТ_НастройкиНалогообложенияПрибыли(ПараметрыПолученияНастроек);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	РаздельныйУчет_НастройкиНалогообложенияПрибыли КАК ТаблицаНастроек
	|";
	
	ТаблицаНастроек = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаНастроек;
	
КонецФункции

// Создается временная таблица "РаздельныйУчет_НастройкиНалогообложенияПрибыли"
// Содержит колонки:
// 
// 	* Организация             - СправочникСсылка.Организации,
// 	* Период                  - Дата - актуальные данные на дату
// 	
// 	// Значения из переданного отбора. Если отбор отсутствует, будут пустые значения
// 	* Подразделение           - СправочникСсылка.СтруктураПредприятия,
// 	* ОбъектУчета             - СправочникСсылка.Номенклатура, ПланВидовХарактеристикСсылка.СтатьиДоходов,
// 	* НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности,
// 	
// 	* ВариантНалогообложенияПрибыли  - СправочникСсылка.ВариантыНалогообложенияПрибыли.
// 
// Параметры:
// 	ПараметрыПолученияНастроек - см. НовыйПараметрыПолученияТаблицыНастроекНалогообложенияПрибыли
//
Процедура ПодготовитьВТ_НастройкиНалогообложенияПрибыли(ПараметрыПолученияНастроек) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыПолученияНастроек.МенеджерВременныхТаблиц;
	
	Запрос.Текст = ТекстЗапроса_НастройкиНалогообложенияПрибыли(ПараметрыПолученияНастроек);
	
	Запрос.УстановитьПараметр("Период", ПараметрыПолученияНастроек.Период);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Возвращает текст запроса для создания временной таблицы "РаздельныйУчет_НастройкиНалогообложенияПрибыли"
// Содержит колонки:
// 
// 	* Организация             - СправочникСсылка.Организации,
// 	* Период                  - Дата - актуальные данные на дату
// 	
// 	// Значения из переданного отбора. Если отбор отсутствует, будут пустые значения
// 	* Подразделение           - СправочникСсылка.СтруктураПредприятия,
// 	* ОбъектУчета             - СправочникСсылка.Номенклатура, ПланВидовХарактеристикСсылка.СтатьиДоходов,
// 	* НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности,
// 	
// 	* ВариантНалогообложенияПрибыли  - СправочникСсылка.ВариантыНалогообложенияПрибыли.
// 	
// P.S. Необходимо перед выполнением запроса установить параметр "Период", даже если значение неизвестно и пустое.
//
// Параметры:
// 	ПараметрыПолученияНастроек - см. НовыйПараметрыПолученияТаблицыНастроекНалогообложенияПрибыли
//
// Возвращаемое значение:
// 	Строка - текст запроса
//
Функция ТекстЗапроса_НастройкиНалогообложенияПрибыли(ПараметрыПолученияНастроек) Экспорт
	
	ПараметрыПолученияНастроекРегистра =
		РегистрыСведений.НалогообложениеПрибылиОрганизаций.НовыйПараметрыПолученияНастроекНалогообложенияПрибыли();
	
	ПараметрыПолученияНастроекРегистра.Период                             = ПараметрыПолученияНастроек.Период;
	ПараметрыПолученияНастроекРегистра.СохранитьСлужебнуюВТ_ОтборНастроек = Истина;
	
	ЗаполнитьЗначенияСвойств(ПараметрыПолученияНастроекРегистра.ОтборПоВременнойТаблице,
		ПараметрыПолученияНастроек);
	
	ТекстЗапроса = РегистрыСведений.НалогообложениеПрибылиОрганизаций.ТекстЗапроса_НастройкиНалогообложенияПрибыли(
		ПараметрыПолученияНастроекРегистра);
	
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() +
	"ВЫБРАТЬ
	|	ОтборНастроек.Организация        КАК Организация,
	|	ОтборНастроек.Период             КАК ПериодОтбораНастроек,
	|	МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодУчетнойПолитики
	|ПОМЕСТИТЬ втДанныеУчетнойПолитики_КлючиСрезаПоследних
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль КАК УчетнаяПолитика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборНастроек КАК ОтборНастроек
	|			ПО УчетнаяПолитика.Организация = ОтборНастроек.Организация
	|			И  УчетнаяПолитика.Период     <= ОтборНастроек.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтборНастроек.Организация,
	|	ОтборНастроек.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ПериодОтбораНастроек
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиСрезаПоследних.Организация                       КАК Организация,
	|	КлючиСрезаПоследних.ПериодОтбораНастроек              КАК ПериодОтбораНастроек,
	|	УчетнаяПолитика.ОсновнойВариантНалогообложенияПрибыли КАК ОсновнойВариантНалогообложенияПрибыли
	|ПОМЕСТИТЬ втДанныеУчетнойПолитики
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль КАК УчетнаяПолитика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДанныеУчетнойПолитики_КлючиСрезаПоследних КАК КлючиСрезаПоследних
	|			ПО УчетнаяПолитика.Организация = КлючиСрезаПоследних.Организация
	|			И  УчетнаяПолитика.Период      = КлючиСрезаПоследних.ПериодУчетнойПолитики
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ПериодОтбораНастроек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втДанныеУчетнойПолитики_КлючиСрезаПоследних
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтборНастроек.Организация                          КАК Организация,
	|	ОтборНастроек.Период                               КАК Период,
	|
	|	ОтборНастроек.Подразделение                        КАК Подразделение,
	|	ОтборНастроек.ОбъектУчета                          КАК ОбъектУчета,
	|	ОтборНастроек.НаправлениеДеятельности              КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(ЗначенияНастроек.ВариантНалогообложенияПрибыли,
	|				&ПустоеНалогообложение) = &ПустоеНалогообложение
	|			ТОГДА ЗначенияНастроек.ВариантНалогообложенияПрибыли
	|		КОГДА НЕ ЕСТЬNULL(ЗначенияПоУмолчанию.ОсновнойВариантНалогообложенияПрибыли,
	|				&ПустоеНалогообложение) = &ПустоеНалогообложение
	|			ТОГДА ЗначенияПоУмолчанию.ОсновнойВариантНалогообложенияПрибыли
	|		ИНАЧЕ
	|			&НалогообложениеПоУмолчанию
	|	КОНЕЦ                                              КАК ВариантНалогообложенияПрибыли
	|
	|ПОМЕСТИТЬ РаздельныйУчет_НастройкиНалогообложенияПрибыли
	|ИЗ
	|	ОтборНастроек КАК ОтборНастроек
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НастройкиНалогообложенияПрибыли КАК ЗначенияНастроек
	|	ПО
	|		ОтборНастроек.Организация               = ЗначенияНастроек.Организация
	|		И ОтборНастроек.Подразделение           = ЗначенияНастроек.Подразделение
	|		И ОтборНастроек.ОбъектУчета             = ЗначенияНастроек.ОбъектУчета
	|		И ОтборНастроек.НаправлениеДеятельности = ЗначенияНастроек.НаправлениеДеятельности
	|		И ОтборНастроек.Период                  = ЗначенияНастроек.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		втДанныеУчетнойПолитики КАК ЗначенияПоУмолчанию
	|	ПО
	|		ОтборНастроек.Организация = ЗначенияПоУмолчанию.Организация
	|		И ОтборНастроек.Период    = ЗначенияПоУмолчанию.ПериодОтбораНастроек
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Подразделение,
	|	ОбъектУчета,
	|	НаправлениеДеятельности,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НастройкиНалогообложенияПрибыли
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтборНастроек
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втДанныеУчетнойПолитики
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПустоеНалогообложение",
					"ЗНАЧЕНИЕ(Справочник.ВариантыНалогообложенияПрибыли.ПустаяСсылка)");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НалогообложениеПоУмолчанию",
					"ЗНАЧЕНИЕ(Справочник.ВариантыНалогообложенияПрибыли.ОбщиеУсловияНалогообложения)");
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПроверкаНаличияНастроекПоИзмерениям

// Возвращает структуру признаков наличия настроек по разным измерениям
// 
// Параметры:
// 	Организация  - СправочникСсылка.Организации -
// 	НаДату       - Неопределено, Дата - актуальные данные на дату
//
// Возвращаемое значение:
// 	Структура - признак наличия настроек. Содержит:
// 		* ЕстьНастройкиПоПодразделениям           - Булево -
// 		* ЕстьНастройкиПоОбъектамУчета            - Булево -
// 		* ЕстьНастройкиПоНаправлениямДеятельности - Булево -
//
Функция ЕстьНастройкиПоИзмерениям(Организация, Знач НаДату = Неопределено) Экспорт
	
	Результат = РегистрыСведений.НалогообложениеПрибылиОрганизаций.ЕстьНастройкиПоИзмерениям(Организация, НаДату);
	
	Возврат Результат;
	
КонецФункции

// Возвращает признак наличия настроек по подразделениям
// 
// Параметры:
// 	Организация  - СправочникСсылка.Организации -
// 	НаДату       - Неопределено, Дата - актуальные данные на дату
//
// Возвращаемое значение:
// 	Булево - признак наличия настроек
//
Функция ЕстьНастройкиПоПодразделениям(Организация, Знач НаДату = Неопределено) Экспорт
	
	Результат = РегистрыСведений.НалогообложениеПрибылиОрганизаций.ЕстьНастройкиПоПодразделениям(Организация, НаДату);
	
	Возврат Результат;
	
КонецФункции

// Возвращает признак наличия настроек по объектам учета (номенклатуре, статьям доходов)
// 
// Параметры:
// 	Организация  - СправочникСсылка.Организации -
// 	НаДату       - Неопределено, Дата - актуальные данные на дату
//
// Возвращаемое значение:
// 	Булево - признак наличия настроек
//
Функция ЕстьНастройкиПоОбъектамУчета(Организация, Знач НаДату = Неопределено) Экспорт
	
	Результат = РегистрыСведений.НалогообложениеПрибылиОрганизаций.ЕстьНастройкиПоОбъектамУчета(Организация, НаДату);
	
	Возврат Результат;
	
КонецФункции

// Возвращает признак наличия настроек по направлениям деятельности
// 
// Параметры:
// 	Организация  - СправочникСсылка.Организации -
// 	НаДату       - Неопределено, Дата - актуальные данные на дату
//
// Возвращаемое значение:
// 	Булево - признак наличия настроек
//
Функция ЕстьНастройкиПоНаправлениямДеятельности(Организация, Знач НаДату = Неопределено) Экспорт
	
	Результат =
		РегистрыСведений.НалогообложениеПрибылиОрганизаций.ЕстьНастройкиПоНаправлениямДеятельности(Организация, НаДату);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОпределениеПустыхЗначений

// Возвращает значение пустого подразделения либо в объектном виде, либо строкой для запроса
// 
// Параметры:
// 	СтроковоеЗначениеВЗапросе - Булево - Если "Истина", будет возвращена строка для запроса
//
// Возвращаемое значение:
// 	Строка, СправочникСсылка.СтруктураПредприятия -
//
Функция ПустойПодразделение(СтроковоеЗначениеВЗапросе = Ложь) Экспорт
	
	Возврат РегистрыСведений.НалогообложениеПрибылиОрганизаций.ПустойПодразделение(СтроковоеЗначениеВЗапросе);
	
КонецФункции

// Возвращает значение пустого подразделения либо в объектном виде, либо строкой для запроса
// 
// Параметры:
// 	СтроковоеЗначениеВЗапросе - Булево - Если "Истина", будет возвращена строка для запроса
//
// Возвращаемое значение:
// 	Строка, Неопределено -
//
Функция ПустойОбъектУчета(СтроковоеЗначениеВЗапросе = Ложь) Экспорт
	
	Возврат РегистрыСведений.НалогообложениеПрибылиОрганизаций.ПустойОбъектУчета(СтроковоеЗначениеВЗапросе);
	
КонецФункции

// Возвращает значение пустого подразделения либо в объектном виде, либо строкой для запроса
// 
// Параметры:
// 	СтроковоеЗначениеВЗапросе - Булево - Если "Истина", будет возвращена строка для запроса
//
// Возвращаемое значение:
// 	Строка, СправочникСсылка.НаправленияДеятельности -
//
Функция ПустойНаправлениеДеятельности(СтроковоеЗначениеВЗапросе = Ложь) Экспорт
	
	Возврат РегистрыСведений.НалогообложениеПрибылиОрганизаций.ПустойНаправлениеДеятельности(СтроковоеЗначениеВЗапросе);
	
КонецФункции

#КонецОбласти

#КонецОбласти
