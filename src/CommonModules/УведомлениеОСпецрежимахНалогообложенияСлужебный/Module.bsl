
#Область СлужебныйПрограммныйИнтерфейс

Процедура СтруктураДанныхВОбластиПечатнойФормы(ПечатнаяФорма, Данные) Экспорт
	Для Каждого Обл Из ПечатнаяФорма.Области Цикл 
		Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение = Истина Тогда 
			Данные.Свойство(Обл.Имя, Обл.Значение);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверкаIPАдреса(Данные, ТаблицаОшибок, Страница, Поле, Обязательность, Описание = "IP-адрес", ИндексСтроки = Неопределено) Экспорт 
	УИД = УИДИзДанных(Данные);
	Постфикс = ?(ТипЗнч(ИндексСтроки) = Тип("Число"), "___" + Формат(ИндексСтроки, "ЧГ="), "");
	Если ЗначениеЗаполнено(Данные[Поле]) Тогда
		Если Не СтрПодобнаПоРегулярномуВыражению(Данные[Поле], "^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}$") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно заполнено: " + Описание, Страница, Поле + Постфикс, УИД));
		КонецЕсли;
	ИначеЕсли Обязательность Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнено: " + Описание, Страница, Поле + Постфикс, УИД));
	КонецЕсли;
КонецПроцедуры

Функция ПроверкаОКВЭДНаКорректность(ОКВЭД) Экспорт 
	Возврат СтрПодобнаПоРегулярномуВыражению(ОКВЭД, "[0-9]{2}|[0-9]{2}.[0-9]{2}|[0-9]{2}.[0-9]{2}.[0-9]{1,2}");
КонецФункции

Функция ПроверкаСНИЛСНаКорректность(СНИЛС) Экспорт
	Возврат СтрПодобнаПоРегулярномуВыражению(СНИЛС, "[0-9]{3}-[0-9]{3}-[0-9]{3}[-\s][0-9]{2}");
КонецФункции

Процедура ПроверкаОКТМО(Данные, ТаблицаОшибок, Страница, Поле, Обязательность, ИндексСтроки = Неопределено) Экспорт 
	УИД = УИДИзДанных(Данные);
	Постфикс = ?(ТипЗнч(ИндексСтроки) = Тип("Число"), "___" + Формат(ИндексСтроки, "ЧГ="), "");
	Если ЗначениеЗаполнено(Данные[Поле]) Тогда
		Если Не СтрПодобнаПоРегулярномуВыражению(Данные[Поле], "[0-9]{8}|[0-9]{11}") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно заполнен ОКТМО", Страница, Поле + Постфикс, УИД));
		КонецЕсли;
	ИначеЕсли Обязательность Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен ОКТМО", Страница, Поле + Постфикс, УИД));
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаКБК(Данные, ТаблицаОшибок, Страница, Поле, Обязательность, ИндексСтроки = Неопределено) Экспорт 
	УИД = УИДИзДанных(Данные);
	Постфикс = ?(ТипЗнч(ИндексСтроки) = Тип("Число"), "___" + Формат(ИндексСтроки, "ЧГ="), "");
	Если ЗначениеЗаполнено(Данные[Поле]) Тогда
		Если Не СтрПодобнаПоРегулярномуВыражению(Данные[Поле], "[0-9]{20}") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно заполнен КБК", Страница, Поле + Постфикс, УИД));
		КонецЕсли;
	ИначеЕсли Обязательность Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен КБК", Страница, Поле + Постфикс, УИД));
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаНомераСчета(Данные, ТаблицаОшибок, Страница, Поле, Обязательность, ИндексСтроки = Неопределено) Экспорт 
	УИД = УИДИзДанных(Данные);
	Постфикс = ?(ТипЗнч(ИндексСтроки) = Тип("Число"), "___" + Формат(ИндексСтроки, "ЧГ="), "");
	Если ЗначениеЗаполнено(Данные[Поле]) Тогда
		Если Не СтрПодобнаПоРегулярномуВыражению(Данные[Поле], "[0-9]{20}") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно заполнен номер счета", Страница, Поле + Постфикс, УИД));
		КонецЕсли;
	ИначеЕсли Обязательность Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен номер счета", Страница, Поле + Постфикс, УИД));
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаБИК(Данные, ТаблицаОшибок, Страница, Поле, Обязательность, ИндексСтроки = Неопределено) Экспорт 
	УИД = УИДИзДанных(Данные);
	Постфикс = ?(ТипЗнч(ИндексСтроки) = Тип("Число"), "___" + Формат(ИндексСтроки, "ЧГ="), "");
	Если ЗначениеЗаполнено(Данные[Поле]) Тогда
		Если Не СтрПодобнаПоРегулярномуВыражению(Данные[Поле], "[0-9]{9}") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно заполнен БИК", Страница, Поле + Постфикс, УИД));
		КонецЕсли;
	ИначеЕсли Обязательность Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен БИК", Страница, Поле + Постфикс, УИД));
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаОКСМ(Данные, ТаблицаОшибок, Страница, Поле, Обязательность, ИндексСтроки = Неопределено) Экспорт 
	УИД = УИДИзДанных(Данные);
	Постфикс = ?(ТипЗнч(ИндексСтроки) = Тип("Число"), "___" + Формат(ИндексСтроки, "ЧГ="), "");
	Если ЗначениеЗаполнено(Данные[Поле]) Тогда
		Если Не СтрПодобнаПоРегулярномуВыражению(Данные[Поле], "[0-9]{3}") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно заполнен код страны", Страница, Поле + Постфикс, УИД));
		КонецЕсли;
	ИначеЕсли Обязательность Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен код страны", Страница, Поле + Постфикс, УИД));
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаКодаНО(КодНО, ТаблицаОшибок, НаименованиеТитульнойСтраницы, ИмяПоля = "КодНО", УИД = Неопределено) Экспорт 
	Если Не СтрПодобнаПоРегулярномуВыражению(КодНО, "[0-9]{4}") Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно указан код налогового органа", НаименованиеТитульнойСтраницы, ИмяПоля, УИД));
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаИННКПП(ЭтоЮЛ, Данные, ТаблицаОшибок, НаименованиеТитульнойСтраницы = "Титульная") Экспорт 
	Если ЭтоЮЛ Тогда 
		Если Не ЗначениеЗаполнено(Данные.ИНН)
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Данные.ИНН, Истина, "") Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен ИНН", НаименованиеТитульнойСтраницы, "ИНН"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные.КПП)
			Или Не РегламентированнаяОтчетностьВызовСервера.КППСоответствуетТребованиямФНС(Данные.КПП) Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен КПП", НаименованиеТитульнойСтраницы, "КПП"));
		КонецЕсли;
	Иначе
		Если Не ЗначениеЗаполнено(Данные.ИНН)
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Данные.ИНН, Ложь, "") Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен ИНН", НаименованиеТитульнойСтраницы, "ИНН"));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаКПП(Данные, ТаблицаОшибок, Страница, Поле, Обязательность, ИндексСтроки = Неопределено) Экспорт 
	УИД = УИДИзДанных(Данные);
	Постфикс = ?(ТипЗнч(ИндексСтроки) = Тип("Число"), "___" + Формат(ИндексСтроки, "ЧГ="), "");
	Если ЗначениеЗаполнено(Данные[Поле]) Тогда
		Если Не РегламентированнаяОтчетностьВызовСервера.КППСоответствуетТребованиямФНС(Данные[Поле]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно заполнен КПП", Страница, Поле + Постфикс, УИД));
		КонецЕсли;
	ИначеЕсли Обязательность Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен КПП", Страница, Поле + Постфикс, УИД));
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаОГРН(Данные, ТаблицаОшибок, Страница, Поле, Обязательность, ЭтоЮЛ, ИндексСтроки = Неопределено) Экспорт 
	УИД = УИДИзДанных(Данные);
	СтрокаОГРН = ?(ЭтоЮЛ, "ОГРН", "ОГРНИП");
	Постфикс = ?(ТипЗнч(ИндексСтроки) = Тип("Число"), "___" + Формат(ИндексСтроки, "ЧГ="), "");
	Если ЗначениеЗаполнено(Данные[Поле]) Тогда
		Если Не РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(Данные[Поле], ЭтоЮЛ, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно заполнен " + СтрокаОГРН, Страница, Поле + Постфикс, УИД));
		КонецЕсли;
	ИначеЕсли Обязательность Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен " + СтрокаОГРН, Страница, Поле + Постфикс, УИД));
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаИНН(Данные, ТаблицаОшибок, Страница, Поле, Обязательность, ЭтоЮЛ, ИндексСтроки = Неопределено) Экспорт 
	УИД = УИДИзДанных(Данные);
	Постфикс = ?(ТипЗнч(ИндексСтроки) = Тип("Число"), "___" + Формат(ИндексСтроки, "ЧГ="), "");
	Если ЗначениеЗаполнено(Данные[Поле]) Тогда
		Если Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Данные[Поле], ЭтоЮЛ, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно заполнен ИНН", Страница, Поле + Постфикс, УИД));
		КонецЕсли;
	ИначеЕсли Обязательность Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен ИНН", Страница, Поле + Постфикс, УИД));
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаГода(Данные, ТаблицаОшибок, Страница, Поле, Обязательность, ИндексСтроки = Неопределено, МинимальныйГод = 1900, МаксимальныйГод = 2050) Экспорт 
	УИД = УИДИзДанных(Данные);
	Постфикс = ?(ТипЗнч(ИндексСтроки) = Тип("Число"), "___" + Формат(ИндексСтроки, "ЧГ="), "");
	Если ЗначениеЗаполнено(Данные[Поле]) Тогда
		ОТЧ = Новый ОписаниеТипов("Число");
		
		Если ОТЧ.ПривестиЗначение(Данные[Поле]) < МинимальныйГод Или ОТЧ.ПривестиЗначение(Данные[Поле]) > МаксимальныйГод Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно заполнен год", Страница, Поле + Постфикс, УИД));
		КонецЕсли;
	ИначеЕсли Обязательность Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен год", Страница, Поле + Постфикс, УИД));
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, НаименованиеТитульнойСтраницы, Обязательность) Экспорт 
	Если Обязательность
		Или ЗначениеЗаполнено(Данные.ПодписантИмя)
		Или ЗначениеЗаполнено(Данные.ПодписантФамилия)
		Или ЗначениеЗаполнено(Данные.ПодписантОтчество) Тогда
		
		Если Не ЗначениеЗаполнено(Данные.ПодписантИмя) Или Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указаны фамилия и/или имя подписанта", НаименованиеТитульнойСтраницы, "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Проверка_УдЛичнФЛ(Показатели, Данные, ТаблицаОшибок, ИмяСтраницы, Обязательность = Ложь) Экспорт
	Если Обязательность Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Данные, Показатели) Тогда
		УИД = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Данные, "УИД");
		МассивПоказателей = СтрРазделить(Показатели, ",", Ложь);
		Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[0]]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код вида документа", ИмяСтраницы, МассивПоказателей[0], УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[1]]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указаны серия/номер документа", ИмяСтраницы, МассивПоказателей[1], УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[2]]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата выдачи документа", ИмяСтраницы, МассивПоказателей[2], УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[3]]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан орган, выдавший документ", ИмяСтраницы, МассивПоказателей[3], УИД));
		КонецЕсли;
		
		Если МассивПоказателей.ВГраница() = 5 
			И (ЗначениеЗаполнено(Данные[МассивПоказателей[4]]) Или ЗначениеЗаполнено(Данные[МассивПоказателей[5]])) Тогда 
			Если (СтрДлина(Строка(Данные[МассивПоказателей[4]])) <> 3 Или СтрДлина(Строка(Данные[МассивПоказателей[5]])) <> 3)Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Код подразделения должен иметь вид ***-***", ИмяСтраницы,
					?(СтрДлина(Данные[МассивПоказателей[4]]) = 3, МассивПоказателей[5], МассивПоказателей[4]), УИД));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьИдентификаторыДляСворачивания(Форма) Экспорт 
	Результат = Новый Массив;
	ДеревоСтраниц = Форма.ДеревоСтраниц;
	
	Для Каждого ТекущаяСтрока Из ДеревоСтраниц.ПолучитьЭлементы() Цикл
		Если ТекущаяСтрока.ПолучитьЭлементы().Количество() = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		ДанныйПодразделПустРек(Форма, ТекущаяСтрока, Результат);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ДеревоУведомленийДляФормыОтчетности(СозданиеСообщения, УчитыватьУведомленияНеВходящиеВБРО) Экспорт
	ОтчетыВходяшиеВРасширенныйФункционал = Новый СписокЗначений;
	РегламентированнаяОтчетностьПереопределяемый.ПолучитьСписокОтчетовИУведомленийВходяшихВРасширенныйФункционал(ОтчетыВходяшиеВРасширенныйФункционал);
	ФлагиУчета = ЭлектронныйДокументооборотСКонтролирующимиОрганами.ПолучитьФлагиИнтеграцииПоУмолчанию();
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиПереопределяемый.ПолучитьЗначенияКонстантИнтеграции(ФлагиУчета);
	
	ДеревоУведомлений = Новый ДеревоЗначений;
	ДеревоУведомлений.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(300)));
	ДеревоУведомлений.Колонки.Добавить("Тип", Новый ОписаниеТипов(Новый ОписаниеТипов("ПеречислениеСсылка.ВидыУведомленийОСпецрежимахНалогообложения"), "ОписаниеТипов"));
	ДеревоУведомлений.Колонки.Добавить("КонтролирующийОрган", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыКонтролирующихОрганов"));
	ДеревоУведомлений.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число", , Новый КвалификаторыЧисла(1, 0, ДопустимыйЗнак.Неотрицательный)));
	ДеревоУведомлений.Колонки.Добавить("Хеш", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(500)));
	
	КорневойУровень = ДеревоУведомлений.Строки;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.ИнтеграцияСБанком Тогда
		ДобавитьУведомленияДляИнтеграцииСБанком(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень);
		Возврат ДеревоУведомлений;
	КонецЕсли;
	
	ДобавитьВеткуУСН(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуТорговыйСбор(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуЕНП(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуПатентнаяСистема(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуНДС(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуНалогНаПрибыль(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуЕСХН(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуНДД(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуУчастиеВИностранныхОрганизациях(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуОбособленныеПодразделения(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуНалоговыйКонтроль(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуЕГРЮЛ_ЕГРИП(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуТранспортныйНалог(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуЗемельныйНалог(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуНалогНаИмущество(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуСчетаВИностранныхБанках(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуМониторингЗанятости(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуНКО(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуРПН(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуНалоговыйМониторинг(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуАкцизы(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуРаботаИностранцев(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуФСРАР(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьВеткуСправки(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	ДобавитьЭлементДляВыпускаНовыхПатчей(КорневойУровень);
	
	ТаблицаОписанияЗаявлений = РегламентированнаяОтчетность.ПустаяТаблицаОписанияОбъектовРегламентированнойОтчетности();
	ЭлектронныйДокументооборотСКонтролирующимиОрганами.ОпределитьТаблицуОписанияОбъектовЗаявленияПоЭлДокументооборотуСПФР(ТаблицаОписанияЗаявлений);
	ДобавитьКДеревуПрочиеУведомления(ОтчетыВходяшиеВРасширенныйФункционал, ДеревоУведомлений, ТаблицаОписанияЗаявлений);
	ДобавитьВеткуПрочее(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета);
	
	Если УчитыватьУведомленияНеВходящиеВБРО Тогда
		ТаблицаОписанияОбъектов = РегламентированнаяОтчетность.ТаблицаОписанияОбъектовРегламентированнойОтчетности();
		Если СозданиеСообщения Тогда
			СтрокаОписанияОбъекта = ТаблицаОписанияОбъектов.Найти(
				НСтр("ru = 'Машиночитаемая доверенность (ФНС, распределенный реестр)';
					|en = 'Машиночитаемая доверенность (ФНС, распределенный реестр)'"), "Наименование");
			Если СтрокаОписанияОбъекта <> Неопределено Тогда
				НоваяСтрока = ТаблицаОписанияОбъектов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОписанияОбъекта);
				НоваяСтрока.Наименование =
					НСтр("ru = 'Заявление об отзыве машиночитаемой доверенности (ФНС, распределенный реестр)';
						|en = 'Заявление об отзыве машиночитаемой доверенности (ФНС, распределенный реестр)'");
			КонецЕсли;
		КонецЕсли;
		ДобавитьКДеревуПрочиеУведомления(ОтчетыВходяшиеВРасширенныйФункционал, ДеревоУведомлений, ТаблицаОписанияОбъектов);
	КонецЕсли;
	
	Для Каждого Стр Из ДеревоУведомлений.Строки Цикл 
		Стр.Строки.Сортировать("ИндексКартинки, Наименование", Истина);
	КонецЦикла;
	
	СделатьПервымВГруппеПомощникМЧД(СозданиеСообщения, ДеревоУведомлений, "МЧД", НСтр("ru = 'Помощник создания МЧД';
																						|en = 'Помощник создания МЧД'"));
	
	Возврат ДеревоУведомлений;
КонецФункции

Процедура СделатьПервымВГруппеПомощникМЧД(СозданиеСообщения, ДеревоУведомлений, НаименованиеГруппы, НаименованиеЭлемента)

	Для Каждого Группа Из ДеревоУведомлений.Строки Цикл 
		Если Группа.Наименование = НаименованиеГруппы Тогда
			
			Для Каждого Стр Из Группа.Строки Цикл
				Если Стр.Наименование = НаименованиеЭлемента Тогда
					
					Если СозданиеСообщения Тогда
						// Сделать первым
						Индекс = Группа.Строки.Индекс(Стр);
						Группа.Строки.Сдвинуть(Индекс, - Индекс);
					Иначе
						// Удалить
						Группа.Строки.Удалить(Стр);
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Функция СтрокаТаблицыЗначенийЗаполнена(СтрТЗ) Экспорт 
	Для Каждого Кол Из СтрТЗ.Владелец().Колонки Цикл 
		Если Кол.Имя = "УИД" Тогда 
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрТЗ[Кол.Имя]) Тогда 
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция УИДИзДанных(Данные)
	Если ТипЗнч(Данные) = Тип("Структура") Тогда 
		Возврат ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Данные, "УИД");
	ИначеЕсли ТипЗнч(Данные) = Тип("СтрокаТаблицыЗначений") И Данные.Владелец().Колонки.Найти("УИД") <> Неопределено Тогда
		Возврат Данные["УИД"];
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция ДанныйПодразделПустРек(Форма, ТекущаяСтрока, Результат)
	ПодразделПуст = Истина;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.ИДНаименования) Тогда 
		Если ТекущаяСтрока.Многостраничность Тогда
			СтрДанных = Неопределено;
			Для Каждого Элт Из Форма.ДанныеМногостраничныхРазделов[ТекущаяСтрока.ИДНаименования] Цикл 
				Если Элт.Значение.УИД = ТекущаяСтрока.УИД Тогда 
					СтрДанных = Элт.Значение;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли ТекущаяСтрока.Многострочность Тогда
			Если Форма.ДанныеУведомления.Свойство(ТекущаяСтрока.ИДНаименования) Тогда 
				СтрДанных = Форма.ДанныеУведомления[ТекущаяСтрока.ИДНаименования];
				ПодразделПуст = УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(ТекущаяСтрока.МногострочныеЧасти);
			КонецЕсли;
		Иначе
			СтрДанных = Форма.ДанныеУведомления[ТекущаяСтрока.ИДНаименования];
		КонецЕсли;
		
		Если ТипЗнч(СтрДанных) = Тип("Структура") Тогда 
			ПодразделПуст = ПодразделПуст И (Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтрДанных));
		Иначе
			ПодразделПуст = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Стр Из ТекущаяСтрока.ПолучитьЭлементы() Цикл 
		ПодразделПуст = ДанныйПодразделПустРек(Форма, Стр, Результат) И ПодразделПуст;
	КонецЦикла;
	
	Если ПодразделПуст И ТекущаяСтрока.ПолучитьЭлементы().Количество() > 0 Тогда
		Результат.Добавить(ТекущаяСтрока.ПолучитьИдентификатор());
	КонецЕсли;
	
	Возврат ПодразделПуст;
КонецФункции

Процедура ДобавитьВеткуУСН(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Папка = КорневойУровень.Добавить();
	Папка.Наименование = "УСН";
	Папка.ИндексКартинки = 0;
	ЭлементыПапки = Папка.Строки;
	
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбИзмененииОбъектаНалогообложенияПоУСН);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбОтказеОтУСН);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбУтратеПраваНаУСН);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеПереходНПДУСН);
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда //Доступна и активна упрощенная отчетность
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОПереходеНаУСН);
	КонецЕсли;

	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОПрекращенииДеятельностиПоУСН);
	Если ЭлементыПапки.Количество() = 0 Тогда 
		КорневойУровень.Удалить(Папка);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуТорговыйСбор(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Папка = КорневойУровень.Добавить();
	Папка.Наименование = "Торговый сбор";
	Папка.ИндексКартинки = 0;
	ЭлементыПапки = Папка.Строки;
	
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаТС1);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаТС2);
	Если ЭлементыПапки.Количество() = 0 Тогда 
		КорневойУровень.Удалить(Папка);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуПатентнаяСистема(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Папка = КорневойУровень.Добавить();
	Папка.Наименование = "Патентная система";
	Папка.ИндексКартинки = 0;
	ЭлементыПапки = Папка.Строки;
	
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеНаПолучениеПатентаРекомендованнаяФорма);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОбУтратеПраваНаПатент);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОПрекращенииДеятельностиПоПатентнойСистеме);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеУменьшениеНалогаККТ);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УменьшениеНалогаНаСтраховыеВзносы);
	Если ЭлементыПапки.Количество() = 0 Тогда 
		КорневойУровень.Удалить(Папка);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуНДС(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Папка = КорневойУровень.Добавить();
	Папка.Наименование = "НДС";
	Папка.ИндексКартинки = 0;
	ЭлементыПапки = Папка.Строки;
	
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОсвобождениеОтУплатыНДС);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОсвобождениеОтНДСПриЕСХН);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РеестрДокументовПодтверждающихЛьготы);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗапретПредставленияУполномоченнымиЛицами);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявительныйПорядокВозмещенияНДС);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВыборНалоговогоОрганаДляПредставленияДеклараций);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеУчастникаСколково);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОсвобождениеОтУплатыНДСЭраМОРФ);
	Если ЭлементыПапки.Количество() = 0 Тогда 
		КорневойУровень.Удалить(Папка);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуЕСХН(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Папка = КорневойУровень.Добавить();
	Папка.Наименование = "ЕСХН";
	Папка.ИндексКартинки = 0;
	ЭлементыПапки = Папка.Строки;
	
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПереходНаЕСХН);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеПрекращениеЕСХН);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеПереходНПДЕСХН);
	Если ЭлементыПапки.Количество() = 0 Тогда 
		КорневойУровень.Удалить(Папка);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуНДД(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Папка = КорневойУровень.Добавить();
	Папка.Наименование = "Налог на дополнительный доход";
	Папка.ИндексКартинки = 0;
	ЭлементыПапки = Папка.Строки;
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеНДДДУС);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеНДДДУС);
	Если ЭлементыПапки.Количество() = 0 Тогда 
		КорневойУровень.Удалить(Папка);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуУчастиеВИностранныхОрганизациях(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Участие в иностранных организациях";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаУ_ИО);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаКИК);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаСИО);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеКЛМК);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриобретениеСтатусаМХК);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВыплатаДоходаЛицуНеИмеющемуПраваПолучения);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СоблюдениеУсловийПониженныхСтавок);
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуОбособленныеПодразделения(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Обособленные подразделения";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.Форма_1_6_Учет);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_3_1);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_3_2);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СообщениеОНаделенииОППолномочиямиПоВыплатам);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеПорядокУплатыПрибыль);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВыборНалоговогоОрганаНДФЛ);
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуРПН(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Росприроднадзор";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗачетСуммыНВОС);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВозвратСуммыНВОС);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеПостановкаОбъектаНВОС);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗачетЭкосбор);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВозвратЭкосбор);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СверкаЭкосбор);
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуСчетаВИностранныхБанках(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, ФлагиУчета)
	ПапкаСчета = ЭлементыПапки.Добавить();
	ПапкаСчета.Наименование = "Счета в иностранных банках";
	ПапкаСчета.ИндексКартинки = 0;
	ЭлементыПапкиСчета = ПапкаСчета.Строки;
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапкиСчета, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбОткрытииЗакрытииСчета);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапкиСчета, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбИзмененииРеквизитовСчета);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапкиСчета, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОНаличииСчета);
	Если ЭлементыПапкиСчета.Количество() = 0 Тогда 
		ЭлементыПапки.Удалить(ПапкаСчета);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуПрочее(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Папка = КорневойУровень.Добавить();
	Папка.Наименование = "Прочее";
	Папка.ИндексКартинки = 0;
	ЭлементыПапки = Папка.Строки;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДекларацияОХарактеристикахОбъектаНедвижимости);
	КонецЕсли;
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтзывБанковскойГарантии);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПрекращениеСтраховыеВзносы);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаменаБанковскойГарантии);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОперацииОтчужденияЦФА);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИзменениеРегиональныхНалогов);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеНаПриемДокументовФСС);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеИсключенииПроверки);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОбработкаПерсональныхДанных);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИзменениеСведенийОбработкаПерсональныхДанных);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПрекращениеОбработкиПерсональныхДанных);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОПоручительстве);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДосрочноеИсполнениеОтсрочки);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПредоставлениеОтсрочки);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РезидентДФОПониженныеТарифы);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВозмещениеПроизводственныхРасходов);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПрибытиеГражданинаРФ);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УбытиеИностранца);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПрибытиеИностранца);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗачетСФР);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВозвратСФР);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РегистрацияККТ);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.НаличиеОбъектовНаУчастке);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеВозобновлениеПониженныхТарифов);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДобычаЦифровойВалюты);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтчетОператораМайнинга);
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОПредоставленииРассрочкиФСС);
	КонецЕсли;
	Если ЭлементыПапки.Количество() = 0 Тогда 
		КорневойУровень.Удалить(Папка);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуНалоговыйМониторинг(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Налоговый мониторинг";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОПроведенииНалоговогоМониторинга);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИнформацияОбОрганизацииСистемыВнутреннегоКонтроля);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИнформацияОбУчастниках);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УчетнаяПолитика);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РегламентИнформационногоВзаимодействия);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РискиОрганизацииНалоговыйМониторинг);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РасшифровкаПоОКВЭД);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СтруктураВзаимосвязейВнутриГруппыКомпаний);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.КонтрольныеПроцедуры);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РезультатыВыполнения);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОценкаСистемыВнутреннегоКонтроля);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.МероприятияПоСовершенствованию);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИнформацияОРазницахБУиНУ);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИнформацияОРискахПоОтдельнымСделкам);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.МатрицаРисковКП);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИнформацияУдельныйВес);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ГрафикПереходаНалоговыйМониторинг);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДорожнаяКартаНМ);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявительныйПорядокВозмещенияНДСАкциз);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗапросМотивированногоМнения);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВзаимосогласительнаяПроцедура);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РазногласиеСМотивированнымМнением);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СогласиеСМотивированнымМнением);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтзывЗапросаМотивированногоМнения);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИнформацияОПараметрахДоступаИС);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПодключениеИСОрганизации);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.НастройкаЗащищеннойСети);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПредоставлениеЗаключенияОФактахИскажения);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.НачалоСовершенияСделок);
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуНКО(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если (ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек)
		Или Не ОбщегоНазначения.ПодсистемаСуществует("РегламентированнаяОтчетность.СообщенияВКонтролирующиеОрганы.НКО") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Отчетность некоммерческих организаций";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаРГ00001);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаРГ00002);
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуНалогНаПрибыль(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Налог на прибыль";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.НалогНаПрибыльКурилы);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИзменениеПорядкаИсчисленияАвансовПоНалогуНаПрибыль);
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуНалоговыйКонтроль(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Налоговый контроль";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВозвратНДФЛНПДБиоресурсы);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВозвратГоспошлины);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗачетГоспошлины);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтменаЗачетаНалога);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОВозвратеНалога);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОЗачетеНалога);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОПредоставленииРассрочкиПоНалоговымПлатежам);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СверкаРасчетовПоНалогам);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЖалобаФНС);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗапросСведенийСоставляющихНалоговуюТайну);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВыдачаСправкиПоРасчетам);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СведенияПоЗадолженности);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПостановкаСнятиеВКачествеНалоговогоАгента);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеНаПолучениеДокументаНалоговогоРезидента);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОПримененииНалоговойЛьготыУчастникамиРегиональныхИнвестиционныхПроектов);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СогласиеНаРаскрытиеНалоговойТайны);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СогласиеНаИнформированиеОЗадолженности);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_6);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.НевозможностьПредоставленияДокументов);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки,
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОсвобождениеОтСтраховыхВзносов);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗапросСостояниеРасчетов);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДоступГИРБО);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПостановкаНаУчетИностранцаФНС);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИзменениеСведенийИностранцаФНС);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СнятиеСУчетаИностранцаФНС);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДополнительнаяИнформацияКЖалобе);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтзывЖалобы);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеИсполненияЖалобы);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеРассмотренияЖалобы);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВосстановлениеСрокаЖалобы);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВыборНОТуристическийНалог);
			
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуТранспортныйНалог(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Транспортный налог";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОГибелиТранспортногоСредства);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеЛьготаТранспортЗемля);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПередачаСообщенийОСуммахНалогов);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПоясненияПоСуммамНалогов);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИзъятиеТС);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СообщениеТранспортЗемля);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПрекращениеНалогообложенияУгон);
			
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуЗемельныйНалог(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Земельный налог";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СообщениеТранспортЗемля);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеЛьготаТранспортЗемля);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПередачаСообщенийОСуммахНалогов);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПоясненияПоСуммамНалогов);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СведенияОКадастровыхНомерах);
			
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуНалогНаИмущество(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Налог на имущество";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОГибелиИмущества);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЛьготаПоНалогуНаИмущество);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПередачаСообщенийОСуммахНалогов);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РеестрЛьготИмущество);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеПорядокПредставленияНалоговыхДеклараций);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПоясненияПоСуммамНалогов);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СообщениеТранспортЗемля);
			
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуЕНП(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Единый налоговый платеж";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИсчисленныеСуммыНалогов);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗапросСуммЕНП);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПредставлениеАктаСверкиЕНП);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОВозвратеНалога);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОЗачетеНалога);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтменаЗачетаНалога);
			
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьЭлементДляВыпускаНовыхПатчей(Родитель)
	Наименование = УведомлениеОСпецрежимахНалогообложенияПовтИсп.СинонимЭлементДляВыпускаНовыхПатчей();
	Если Не ЗначениеЗаполнено(Наименование) Тогда 
		Возврат;
	КонецЕсли;
	
	ИмяОтчета = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПолучитьИмяОтчетаПоВидуУведомления(
		Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЭлементДляВыпускаНовыхПатчей);
	Если (ЗначениеЗаполнено(ИмяОтчета) И Метаданные.Отчеты.Найти(ИмяОтчета) = Неопределено)
		Или Не ЗначениеЗаполнено(ИмяОтчета) 
		Или Метаданные.Отчеты.Найти(ИмяОтчета) = Неопределено Тогда 
		
		Возврат;
	КонецЕсли;
	
	Сообщение = Родитель.Добавить();
	Сообщение.Наименование = Наименование;
	Сообщение.ИндексКартинки = 1;
	Сообщение.Хеш = ПолучитьХеш(Сообщение.Наименование);
	Сообщение.Тип = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЭлементДляВыпускаНовыхПатчей;
	Сообщение.Хеш = Сообщение.Хеш + Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПолучитьХеш(Сообщение.Тип);
КонецПроцедуры

Процедура ДобавитьВеткуАкцизы(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Акцизы";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИсправлениеОшибок);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДубликатСвидетельстваПереработкаНефти);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СвидетельствоПереработкаНефти);
			
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуРаботаИностранцев(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Иностранные работники";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаключениеТрудовогоДоговора);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РасторжениеТрудовогоДоговора);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОбязательстваВыплатаЗП);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ХодатайствоОПривлечении);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ХодатайствоОПереоформленииПатента);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РаботаПоПатенту);
			
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуФСРАР(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "ФСРАР";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВключениеВРеестрПроизводителейПива);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВнесениеИзмененийВРеестрПроизводителейПива);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИсключениеИзРеестраПроизводителейПива);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СведенияОБенефициарах);
			
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуСправки(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Справки для налоговых вычетов";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОплатаФизкультурноОздоровительныхУслуг);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОплатаМедицинскихУслуг);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОплатаОбразовательныхУслуг);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОплатаПенсионныхВзносов);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОплатаСтраховыхВзносов);
			
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуМониторингЗанятости(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	Если ЗначениеЗаполнено(ФлагиУчета) И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Оперативный мониторинг занятости";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.НеполныйДень);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ИнформацияОПростое);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПереходНаУдаленку);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.БанкротствоРаботодателя);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СвободныеРабочиеМеста);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.КвотаИнвалиды);
		ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки, 
			Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РешениеОЛиквидации);
			
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВеткуЕГРЮЛ_ЕГРИП(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, ФлагиУчета)
	СкрытьЗаявленияЕГРЮЛ_ЕГРИПвКонфигурации = Ложь;
	ДокументооборотСКОПереопределяемый.СкрытьЗаявленияЕГРЮЛ_ЕГРИП(СкрытьЗаявленияЕГРЮЛ_ЕГРИПвКонфигурации);
	
	Если ЗначениеЗаполнено(ФлагиУчета) 
		И ФлагиУчета.СервисЭлектронныхТрудовыхКнижек
		ИЛИ СкрытьЗаявленияЕГРЮЛ_ЕГРИПвКонфигурации Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФлагиУчета) И Не ФлагиУчета.ИнтеграцияСБанком  Тогда
		Папка = КорневойУровень.Добавить();
		Папка.Наименование = "Заявления в ЕГРЮЛ и ЕГРИП (переехали в раздел ЕГРЮЛ)";
		Папка.ИндексКартинки = 0;
		ЭлементыПапки = Папка.Строки;
		
		Виды = ДокументооборотСКО.ЗаявленияНаГосРегистрацию(Истина);
		Для каждого Вид Из Виды Цикл
			ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, ЭлементыПапки,Вид);
		КонецЦикла;
		
		Если ЭлементыПапки.Количество() = 0 Тогда 
			КорневойУровень.Удалить(Папка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьКДеревуПрочиеУведомления(ОтчетыВходяшиеВРасширенныйФункционал, ДеревоУведомлений, ТаблицаОписанияОбъектов)
	ТаблицаОписанияУведомлений = ТаблицаОписанияОбъектов.Скопировать(Новый Структура("ВидДокумента, ЯвляетсяАктуальным", Перечисления.СтраницыЖурналаОтчетность.Уведомления, Истина));
	
	Группы = Новый Массив;
	Для каждого СтрокаТаблицыОписанияУведомлений Из ТаблицаОписанияУведомлений Цикл
		Если Группы.Найти(СтрокаТаблицыОписанияУведомлений.ГруппаВДереве) = Неопределено Тогда
			Группы.Добавить(СтрокаТаблицыОписанияУведомлений.ГруппаВДереве);
		КонецЕсли;
	КонецЦикла;
	
	КорневойУровень = ДеревоУведомлений.Строки;
	Для каждого Группа Из Группы Цикл
		СтрокиОбъектовДаннойГруппы = ТаблицаОписанияУведомлений.НайтиСтроки(Новый Структура("ГруппаВДереве", Группа));
		Если Группа = "" Тогда
			Для каждого СтрокаОбъектовДаннойГруппы Из СтрокиОбъектовДаннойГруппы Цикл
				Сообщение = КорневойУровень.Добавить();
				Сообщение.Наименование = СтрокаОбъектовДаннойГруппы.Наименование;
				Сообщение.Хеш = ПолучитьХеш(Сообщение.Наименование);
				МассивТипов = Новый Массив;
				МассивТипов.Добавить(СтрокаОбъектовДаннойГруппы.ТипОбъекта);
				Сообщение.Тип = Новый ОписаниеТипов(МассивТипов);
				Сообщение.ИндексКартинки = 1;
				Сообщение.КонтролирующийОрган = СтрокаОбъектовДаннойГруппы.ВидКонтролирующегоОргана;
			КонецЦикла; 
		Иначе
			ОтборСозданныхГрупп = ДеревоУведомлений.Строки.НайтиСтроки(Новый Структура("Наименование", Группа));
			Если ОтборСозданныхГрупп.Количество() = 0 Тогда 
				Папка = ДеревоУведомлений.Строки.Добавить();
				Папка.Наименование = Группа;
				Папка.ИндексКартинки = 0;
			Иначе
				Папка = ОтборСозданныхГрупп[0];
			КонецЕсли;
			ЭлементыПапки = Папка.Строки;
			
			Для каждого СтрокаОбъектовДаннойГруппы Из СтрокиОбъектовДаннойГруппы Цикл
				Сообщение = ЭлементыПапки.Добавить();
				
				Сообщение.Наименование = СтрокаОбъектовДаннойГруппы.Наименование;
				Сообщение.Хеш = ПолучитьХеш(Сообщение.Наименование + СтрокаОбъектовДаннойГруппы.Код + СтрокаОбъектовДаннойГруппы.Хеш);
				МассивТипов = Новый Массив;
				МассивТипов.Добавить(СтрокаОбъектовДаннойГруппы.ТипОбъекта);
				Сообщение.Тип = Новый ОписаниеТипов(МассивТипов);
				Сообщение.ИндексКартинки = 1;
				
				Сообщение.КонтролирующийОрган = СтрокаОбъектовДаннойГруппы.ВидКонтролирующегоОргана;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры

Процедура ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, Родитель, ТипУведомления)
	Если ОтчетыВходяшиеВРасширенныйФункционал.НайтиПоЗначению(ТипУведомления) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяОтчета = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПолучитьИмяОтчетаПоВидуУведомления(ТипУведомления);
	Если (ЗначениеЗаполнено(ИмяОтчета) И Метаданные.Отчеты.Найти(ИмяОтчета) = Неопределено)
		Или Не ЗначениеЗаполнено(ИмяОтчета) 
		Или Метаданные.Отчеты.Найти(ИмяОтчета) = Неопределено Тогда 
		
		Возврат;
	КонецЕсли;
	
	Сообщение = Родитель.Добавить();
	Сообщение.Наименование = Строка(ТипУведомления);
	Сообщение.ИндексКартинки = 1;
	Сообщение.Хеш = ПолучитьХеш(Сообщение.Наименование);
	Если ТипЗнч(ТипУведомления) = Тип("ПеречислениеСсылка.ВидыУведомленийОСпецрежимахНалогообложения") Тогда 
		Сообщение.Тип = ТипУведомления;
		Сообщение.Хеш = НРег(Сообщение.Хеш + Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПолучитьХеш(ТипУведомления));
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьХеш(Стр)
	Хеш = СтрЗаменить(НРег(Стр), " ", "");
	Хеш = СтрЗаменить(Хеш, """", "");
	Хеш = СтрЗаменить(Хеш, ",", "");
	Хеш = СтрЗаменить(Хеш, "ё", "е");
	Возврат Хеш;
КонецФункции

Процедура ДобавитьУведомленияДляИнтеграцииСБанком(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень)
	
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбОтказеОтУСН);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбУтратеПраваНаУСН);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОПрекращенииДеятельностиПоУСН);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПредоставлениеОтсрочки);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДосрочноеИсполнениеОтсрочки);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПрекращениеСтраховыеВзносы);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РегистрацияККТ);
	ДобавитьВеткуВДеревоУведомлений(ОтчетыВходяшиеВРасширенныйФункционал, КорневойУровень, Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеИсключенииПроверки);
	
КонецПроцедуры

#КонецОбласти