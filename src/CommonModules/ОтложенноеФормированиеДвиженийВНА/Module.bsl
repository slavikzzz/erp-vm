////////////////////////////////////////////////////////////////////////////////
// Процедуры механизма отложенного формирования движений по документам внеоборотных активов.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ЗакрытиеМесяца

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам,,,,
		Перечисления.ОперацииЗакрытияМесяца.НачислениеПроцентовПоАренде);
		
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ПереходНаУчетВнеоборотныхАктивовВерсии24);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.НачислениеПроцентовПоАренде);
	
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Сформировать';
										|en = 'Generate'");
	
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ОтложенноеФормированиеДвиженийВНА.ОпределитьСтатусОперацииЗакрытияМесяца");
		
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"ОтложенноеФормированиеДвиженийВНА.ВыполнитьОперациюЗакрытияМесяца");
		
КонецПроцедуры

// Опредяет статус операции закрытия месяца "ФормированиеДвиженийПоВнеоборотнымАктивам".
// 
// Параметры:
//  ПараметрыОбработчика - Структура - Параметры обработчика
Процедура ОпределитьСтатусОперацииЗакрытияМесяца(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, 1);
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ПараметрыОбработчика.ПараметрыРасчета.Период) Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеОтключено(
			ПараметрыОбработчика,
			НСтр("ru = 'Учет внеоборотных активов версии 2.4 не используется.';
				|en = 'Accounting of fixed assets 2.4 is not used.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
		Возврат;
		
	КонецЕсли;
	
	Если ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика, Истина,, "ЗаданияКФормированиюДвиженийПоВНА") Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, 1);
	
	Если НЕ ЕстьДокументыПоКоторымФормируютсяДвижения(ПараметрыОбработчика) Тогда
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru = 'Нет документов по которым требуется сформировать движения.';
				|en = 'No documents that require record generation.'", ОбщегоНазначения.КодОсновногоЯзыка()));
	КонецЕсли; 
	
КонецПроцедуры

// Выполняет операцию закрытия месяца "ФормированиеДвиженийПоВнеоборотнымАктивам".
// 
// Параметры:
//  ПараметрыОбработчика - см. Обработки.ОперацииЗакрытияМесяца.ИнициализироватьПараметрыОбработчикаЭтапа
Процедура ВыполнитьОперациюЗакрытияМесяца(ПараметрыОбработчика) Экспорт
	
	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;

	Если НЕ ВнеоборотныеАктивы.ЗавершенПереходНаВНА24(ПараметрыРасчета.Период, ПараметрыРасчета.МассивОрганизаций)
		ИЛИ НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(КонецМесяца(ПараметрыРасчета.Период)) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ЗакрытиеМесяца.ОтложенноеФормированиеДвиженийПоВНА");
	
	НомерДоРасчета = РегистрыСведений.ЗаданияКФормированиюДвиженийПоВНА.УвеличитьНомерЗадания();
	
	ДоступныеОрганизации = ЗакрытиеМесяцаСервер.ДоступныеДляРасчетаОрганизации(
		ПараметрыРасчета.Период, ПараметрыРасчета.МассивОрганизаций);
	
	ЗаданияКРасчету = РегистрыСведений.ЗаданияКФормированиюДвиженийПоВНА.ЗаданияКРасчету(
			'000101010000', КонецМесяца(ПараметрыРасчета.Период), НомерДоРасчета, ДоступныеОрганизации);
	
	Результат = ВыполнитьОперацию(
		ЗаданияКРасчету.НачалоПериода, 
		КонецМесяца(ПараметрыРасчета.Период), 
		ЗаданияКРасчету.СписокОрганизаций,
		НомерДоРасчета,
		ЗаданияКРасчету.МенеджерВременныхТаблиц,
		ПараметрыОбработчика.ИдентификаторРасчета);
		
	Если Результат.ЕстьОшибки Тогда
		
		Для Каждого Организация Из ЗаданияКРасчету.СписокОрганизаций Цикл
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам, 
				ПараметрыРасчета.Период,
				Организация,
				Результат.ТекстОшибки);
		
		КонецЦикла;
		
	КонецЕсли;
		
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, Результат.КоличествоДанных);
		
КонецПроцедуры

// Формирует описание технологических параметров.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Описание параметров операции закрытия месяца
Функция ОписаниеПараметровОперацииЗакрытияМесяца() Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОписаниеПараметров = Константы.НастройкиЗакрытияМесяца.СоздатьМенеджерЗначения().ИнициализироватьОписаниеПараметровОперации();
	
	#Область МаксимальноеКоличествоЗаданий
		
	ОписаниеПараметра = ОписаниеПараметров.Добавить();
	ОписаниеПараметра.Имя = "МаксимальноеКоличествоЗаданий";
	ОписаниеПараметра.Наименование = НСтр("ru = 'Количество одновременно выполняемых заданий формирования движений по ОС и НМА';
											|en = 'Number of simultaneous jobs for generating records of FA and IA'");
	ОписаниеПараметра.ТипЗначения = Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный));
	ОписаниеПараметра.ДиапазонС = 1;
	ОписаниеПараметра.ЗначениеПоУмолчанию = 4;
	ОписаниеПараметра.Описание =
		НСтр("ru = 'Формирование движений по ОС и НМА может выполняться одновременно несколькими фоновыми заданиями.
              |Увеличение количества заданий может уменьшить время выполнения операции.
              |Количество заданий рекомендуется настраивать в зависимости от конфигурации сервера СУБД и серверов 1С:Предприятие.';
              |en = 'Records of fixed assets and intangible assets can be generated simultaneously by several background jobs.
              |Increasing the number of jobs can reduce the operation execution time.
              |Configure the number of jobs depending on the DBMS server configuration and 1C:Enterprise servers.'");
		
	#КонецОбласти
	
	#Область РазмерПорцииДанных
		
	ОписаниеПараметра = ОписаниеПараметров.Добавить();
	ОписаниеПараметра.Имя = "РазмерПорцииДанных";
	ОписаниеПараметра.Наименование = НСтр("ru = 'Количество документов обрабатываемых одновременно';
											|en = 'Number of documents processed simultaneously'");
	ОписаниеПараметра.ТипЗначения = Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(6, 0, ДопустимыйЗнак.Неотрицательный));
	ОписаниеПараметра.ДиапазонС = 1;
	ОписаниеПараметра.ЗначениеПоУмолчанию = 100;
	ОписаниеПараметра.Описание =
		НСтр("ru = 'В одном задании формирование движений может выполняться одновременно по нескольким документам.
              |Увеличение количества документов может уменьшить время выполнения операции, но увеличить потребление памяти.
              |Количество рекомендуется настраивать в зависимости от конфигурации сервера СУБД и серверов 1С:Предприятие.';
              |en = 'In one job, records can be generated simultaneously by several documents.
              |Increasing the number of documents can reduce the operation execution time but increase memory consumption.
              |Configure the number depending on the DBMS server configuration and 1C:Enterprise servers.'");
		
	#КонецОбласти
	
	Возврат ОписаниеПараметров;
	
КонецФункции

#КонецОбласти

#Область ВыполнениеОперации

// Формирует отложенные движения в несколько потоков.
// 
// Параметры:
//  НачалоПериода - Дата - Период с которого требуется выполнить операцию
//  КонецПериода - Дата - Период по который требуется выполнить операцию
//  СписокОрганизаций - Массив из СправочникСсылка.Организации - Список организаций
//  НомерДоРасчета - Число - Номер заданий
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Содержит список объектов
//  ИдентификаторРасчета - УникальныйИдентификатор - идентификатор расчета
//  ИмяОперации - Строка - Имя операции
// 
// Возвращаемое значение:
//  Структура - результат формирования движений:
// 		* ЕстьОшибки - Булево - Истина, если были зарегистрированы ошибки во время выполнения
// 		* ТекстОшибки - Строка - Текст ошибки
// 		* КоличествоДанных - Число - Количество объектов, по которым сформированы движения
//
Функция ВыполнитьОперацию(НачалоПериода, КонецПериода, СписокОрганизаций, НомерДоРасчета, МенеджерВременныхТаблиц, ИдентификаторРасчета, ИмяОперации = "") Экспорт

	Результат = Новый Структура;
	Результат.Вставить("ЕстьОшибки", Ложь);
	Результат.Вставить("ТекстОшибки", "");
	Результат.Вставить("КоличествоДанных", 0);

	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(КонецПериода) Тогда
		Возврат Результат;
	КонецЕсли; 
	
	Если ИмяОперации = "" Тогда
		ИмяОперации = ИмяПризнакаВыполненияОперации();
	КонецЕсли;
	
	Если ИмяОперации = РасчетСтоимостиВНА.ИмяПризнакаВыполненияОперацииАктуализацияДвиженийПоВНА() Тогда
		ИмяРегистраЗаданий = "ЗаданияКАктуализацииДвиженийПоВНА";
		УдалитьЗадания = Ложь;
	Иначе
		ИмяРегистраЗаданий = "ЗаданияКФормированиюДвиженийПоВНА";
		УдалитьЗадания = Истина;
	КонецЕсли;
	
	ОчередьЗаданийКРасчету = СоздатьОчередьЗаданий(
		НачалоПериода, КонецПериода, СписокОрганизаций, НомерДоРасчета, МенеджерВременныхТаблиц, ИмяОперации, УдалитьЗадания);

	Если ОчередьЗаданийКРасчету.Количество() = 0 Тогда
		
		Если УдалитьЗадания Тогда
			
			РегистрыСведений[ИмяРегистраЗаданий].ЗафиксироватьРасчет(
				КонецПериода,
				СписокОрганизаций, 
				НомерДоРасчета,
				МенеджерВременныхТаблиц,
				"ЗаданияКРасчету");
			
		КонецЕсли;

		Возврат Результат;
		
	КонецЕсли;

	РезультатВыполнения = ВнеоборотныеАктивы.ВыполнитьОчередьЗаданий(ОчередьЗаданийКРасчету, МаксимальноеКоличествоЗаданий(), ИдентификаторРасчета);
	
	Результат.ЕстьОшибки = РезультатВыполнения.ЕстьОшибки;
	Результат.ТекстОшибки = РезультатВыполнения.ТекстОшибки;
	Результат.КоличествоДанных = РезультатВыполнения.КоличествоДанных;
	
	Возврат Результат;
	
КонецФункции

// Формирует движения по документам, в которых есть указанные объекты.
// 
// Параметры:
//  ПараметрыВыполнения - см. ПараметрыВыполнения
// 
// Возвращаемое значение:
//  Число - Количество объектов, по которым сформированы движения
Функция ВыполнитьОперациюПоОбъектам(ПараметрыВыполнения) Экспорт

	Если ПараметрыВыполнения.СписокОбъектов.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ОтложенноеФормированиеДвиженийВНА.ВыполнитьОперациюПоОбъектам");
	
	УстановитьПривилегированныйРежим(Истина);

	Если ПараметрыВыполнения.МенеджерВременныхТаблиц = Неопределено Тогда
		ПараметрыВыполнения.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ПараметрыВыполнения.МенеджерВременныхТаблиц);
	ИспользуемыеВТ.Добавить("СписокОбъектов");
	ИспользуемыеВТ.Добавить("ВтВсеДанныеКРасчету");
	ИспользуемыеВТ.Добавить("ОбработанныеДанные");

	НачалоПериода = СформироватьСписокОбъектовИПолучитьНачалоПериода(ПараметрыВыполнения);
	
	ВнеоборотныеАктивы.СформироватьТаблицуВтВсеДанныеКРасчету(
		НачалоПериода, 
		ПараметрыВыполнения.КонецПериода, 
		ПараметрыВыполнения.СписокОрганизаций, 
		ВнеоборотныеАктивыПовтИсп.ИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения(), 
		ПараметрыВыполнения.МенеджерВременныхТаблиц);
		
	// @skip-check query-in-loop
	// Проверка отключена т.к. обработка выполняется порциями для оптимизации
	Пока НачалоПериода <= ПараметрыВыполнения.КонецПериода Цикл
		
		Пока ПолучитьПорциюДанныхКРасчету(НачалоПериода, ПараметрыВыполнения) Цикл
			
			СформироватьДвиженияПоДокументам(НачалоПериода, ПараметрыВыполнения);
			ЗарегистрироватьОшибки(ПараметрыВыполнения);
			ЗапомнитьОбработанныеДанные(ПараметрыВыполнения);
			УдалитьЗаданияПорцииДанных(НачалоПериода, ПараметрыВыполнения);
	
			ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыВыполнения.МенеджерВременныхТаблиц,, ИспользуемыеВТ);
			
		КонецЦикла;

		УдалитьЗаданияПоДату(ПараметрыВыполнения);
		
		НачалоПериода = КонецМесяца(НачалоПериода) + 1;
		
	КонецЦикла;
	
	ИспользуемыеВТ.Удалить(ИспользуемыеВТ.Найти("СписокОбъектов"));
	ИспользуемыеВТ.Удалить(ИспользуемыеВТ.Найти("ВтВсеДанныеКРасчету"));
	ИспользуемыеВТ.Удалить(ИспользуемыеВТ.Найти("ОбработанныеДанные"));
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыВыполнения.МенеджерВременныхТаблиц,, ИспользуемыеВТ);

	УстановитьПривилегированныйРежим(Ложь);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, ПараметрыВыполнения.КоличествоДанных);
	
	Возврат ПараметрыВыполнения.КоличествоДанных;
	
КонецФункции

// Формирует движения по документам.
//
// Параметры:
//  СписокДокументов - Массив из ДокументСсылка - Список документов, по которым требуется сформировать движения.
//
Процедура ВыполнитьОперациюПоДокументам(СписокДокументов) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат;
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеДокументы.Ссылка КАК Ссылка,
	|	ВсеДокументы.Дата КАК Дата,
	|	ВсеДокументы.Организация КАК Организация,
	|	ВЫРАЗИТЬ(ВсеДокументы.Организация КАК Справочник.Организации).ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВсеДокументы.ОбъектУчета КАК ОбъектУчета,
	|	ВсеДокументы.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	ВсеДокументы.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ВсеДокументы.Ссылка) = ТИП(Документ.РеализацияУслугПрочихАктивов)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ВсеДокументы.Ссылка) = ТИП(Документ.СписаниеОС2_4)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ВсеДокументы.Ссылка) = ТИП(Документ.СписаниеНМА2_4)
	|			ТОГДА 999999
	|		ИНАЧЕ ЧАС(ВсеДокументы.Дата)*10000 + МИНУТА(ВсеДокументы.Дата)*100 + СЕКУНДА(ВсеДокументы.Дата)
	|	КОНЕЦ КАК Приоритет
	|
	|ПОМЕСТИТЬ ЗаданияКРасчету
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТекущиеДокументы.Ссылка КАК Ссылка,
	|		ТекущиеДокументы.Дата КАК Дата,
	|		ТекущиеДокументы.Организация КАК Организация,
	|		ТекущиеДокументы.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|		ТекущиеДокументы.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|		ТекущиеДокументы.ОсновноеСредство КАК ОбъектУчета
	|	ИЗ
	|		РегистрСведений.ДокументыПоОС КАК ТекущиеДокументы
	|
	|	ГДЕ
	|		ТекущиеДокументы.Ссылка В (&СписокДокументов)
	|		И ТекущиеДокументы.ТипСсылки В (&ИдентификаторыДокументов)
	|		И ТекущиеДокументы.Проведен
	|
	|		И ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				РегистрСведений.ЗаданияКФормированиюДвиженийПоВНА КАК Задания
	|			ГДЕ
	|				Задания.Организация = ТекущиеДокументы.Организация
	|				И Задания.ОбъектУчета = ТекущиеДокументы.ОсновноеСредство
	|				И Задания.Месяц <= ТекущиеДокументы.Дата)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТекущиеДокументы.Ссылка КАК Ссылка,
	|		ТекущиеДокументы.Дата КАК Дата,
	|		ТекущиеДокументы.Организация КАК Организация,
	|		ТекущиеДокументы.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|		ТекущиеДокументы.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|		ТекущиеДокументы.НематериальныйАктив КАК ОбъектУчета
	|	ИЗ
	|		РегистрСведений.ДокументыПоНМА КАК ТекущиеДокументы
	|
	|	ГДЕ
	|		ТекущиеДокументы.Ссылка В (&СписокДокументов)
	|		И ТекущиеДокументы.ТипСсылки В (&ИдентификаторыДокументов)
	|		И ТекущиеДокументы.Проведен
	|
	|		И ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				РегистрСведений.ЗаданияКФормированиюДвиженийПоВНА КАК Задания
	|			ГДЕ
	|				Задания.Организация = ТекущиеДокументы.Организация
	|				И Задания.ОбъектУчета = ТекущиеДокументы.НематериальныйАктив
	|				И Задания.Месяц <= ТекущиеДокументы.Дата)
	|
	|	) КАК ВсеДокументы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ЗаданияКРасчету.Дата, МЕСЯЦ) КАК Месяц
	|ИЗ
	|	ЗаданияКРасчету КАК ЗаданияКРасчету
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц
	|";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	ИспользуемыеВТ = Новый Массив;
	ИспользуемыеВТ.Добавить("ЗаданияКРасчету");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	Запрос.УстановитьПараметр("ИдентификаторыДокументов", ВнеоборотныеАктивыПовтИсп.ИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	// Проверка отключена т.к. обработка должна выполняться порциями
	//@skip-check query-in-loop
	Пока Выборка.Следующий() Цикл
	
		ТекстЗапроса =	
		"ВЫБРАТЬ 
		|	ЗаданияКРасчету.Ссылка КАК Ссылка,
		|	ЗаданияКРасчету.Дата КАК Дата,
		|	ЗаданияКРасчету.Организация КАК Организация,
		|	ЗаданияКРасчету.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ЗаданияКРасчету.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
		|	ЗаданияКРасчету.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
		|	ЗаданияКРасчету.ОбъектУчета КАК ОбъектУчета,
		|
		|	ЗаданияКРасчету.Приоритет КАК Приоритет
		|
		|ПОМЕСТИТЬ ВтПорцияДанныхКРасчету
		|
		|ИЗ
		|	ЗаданияКРасчету КАК ЗаданияКРасчету
		|
		|ГДЕ
		|	ЗаданияКРасчету.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
		|";
			
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Выборка.Месяц));
		Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Выборка.Месяц));
		Запрос.Выполнить();
		
		ПараметрыПроцедуры = ПараметрыВыполнения();
		ПараметрыПроцедуры.КонецПериода = Выборка.Месяц;
		ПараметрыПроцедуры.ВернутьДокументыКОтражению = Ложь;
		ПараметрыПроцедуры.СформироватьЗадания = Ложь;
		ПараметрыПроцедуры.УдалитьЗадания = Ложь;
		ПараметрыПроцедуры.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		СформироватьДвиженияПоДокументам(Выборка.Месяц, ПараметрыПроцедуры);

		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВТ);
		
	КонецЦикла;
		
КонецПроцедуры

// Параметры выполнения операции.
// 
// Возвращаемое значение:
//  Структура - Параметры выполнения:
// 		* КонецПериода - Дата - Конец периода выполнения операции
// 		* СписокОрганизаций - Массив из СправочникСсылка.Организации - Организации, для которых выполняется операция
// 		* СписокОбъектов - ТаблицаЗначений - Объекты, для которых выполняется операция
// 		* ВернутьДокументыКОтражению - Булево - Истина, если нужно вернуть документы к отражению в регл. учете
// 		* СформироватьЗадания - Булево - Истина, если нужно сформировать задания
// 		* УдалитьЗадания - Булево - Истина, если нужно удалить задания
// 		* ИмяОперации - Строка - Имя операции
// 		* ВыполнитьПроверку - Булево - Истина, если нужно выполнить проверку и зарегистрировать ошибки закрытия месяца
// 		* МенеджерВременныхТаблиц - Неопределено - Менеджер временных таблиц
//		* КоличествоДанных -Число - Количество обработанных данных
Функция ПараметрыВыполнения() Экспорт

	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("КонецПериода", '000101010000');
	ПараметрыВыполнения.Вставить("СписокОрганизаций", Новый Массив);
	ПараметрыВыполнения.Вставить("ВернутьДокументыКОтражению", Истина);
	ПараметрыВыполнения.Вставить("СформироватьЗадания", Истина);
	ПараметрыВыполнения.Вставить("УдалитьЗадания", Истина);
	ПараметрыВыполнения.Вставить("ИмяОперации", ИмяПризнакаВыполненияОперации());
	ПараметрыВыполнения.Вставить("НомерДоРасчета", 0);
	ПараметрыВыполнения.Вставить("ВыполнитьПроверку", Ложь);
	ПараметрыВыполнения.Вставить("МенеджерВременныхТаблиц", Неопределено);
	ПараметрыВыполнения.Вставить("КоличествоДанных", 0);

	СписокОбъектов = Новый ТаблицаЗначений();
	СписокОбъектов.Колонки.Добавить("ОбъектУчета", Метаданные.РегистрыСведений.ЗаданияКФормированиюДвиженийПоВНА.Измерения.ОбъектУчета.Тип);
	СписокОбъектов.Колонки.Добавить("НачалоПериода", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ПараметрыВыполнения.Вставить("СписокОбъектов", СписокОбъектов);

	Возврат ПараметрыВыполнения;
	
КонецФункции

// Имя признака выполнения операции.
// 
// Возвращаемое значение:
//  Строка -  Имя признака выполнения операции
Функция ИмяПризнакаВыполненияОперации() Экспорт
	Возврат "ОтложенноеФормированиеДвиженийВНА";
КонецФункции

#КонецОбласти

#Область Прочее

// Определяет записываются ли при отложенном формировании движений.
// 
// Параметры:
//  Документ - ДокументОбъект -
// 
// Возвращаемое значение:
//  Булево
Функция ДвиженияЗаписываютсяПриВыполненииОперации(Документ) Экспорт

	Возврат Документ <> Неопределено 
		И Документ.ДополнительныеСвойства.Свойство(ИмяПризнакаВыполненияОперации());
	
КонецФункции

// Возвращает объекты, для которых движения не актуальны.
// 
// Параметры:
//  СписокДокументов - Массив из ДокументСсылка - Список документов
// 
// Возвращаемое значение:
//  Массив - Объекты, для которых движения не актуальны
Функция ОбъектыДляКоторыхДвиженияНеАктуальны(СписокДокументов) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокОбъектов.ОбъектУчета КАК ОбъектУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		Задания.ОбъектУчета КАК ОбъектУчета
	|
	|	ИЗ
	|		РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаданияКФормированиюДвиженийПоВНА КАК Задания
	|			ПО (Задания.Организация = ДокументыПоОС.Организация)
	|				И (Задания.ОбъектУчета = ДокументыПоОС.ОсновноеСредство)
	|				И (Задания.Месяц <= ДокументыПоОС.Дата)
	|
	|	ГДЕ
	|		ДокументыПоОС.Ссылка В (&СписокДокументов)
	|		И ДокументыПоОС.Проведен
	|		И ДокументыПоОС.ТипСсылки В(&ТипыДокументов)
	|		И &ГлавныйУзел
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДокументыПоОС.ОсновноеСредство КАК ОбъектУчета
	|	ИЗ
	|		РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтоимостьОС_РасчетСтоимости
	|			ПО СтоимостьОС_РасчетСтоимости.Регистратор = ДокументыПоОС.Ссылка
	|	ГДЕ
	|		ДокументыПоОС.Ссылка В (&СписокДокументов)
	|		И ДокументыПоОС.Проведен
	|		И ДокументыПоОС.ТипСсылки В(&ТипыДокументов)
	|		И СтоимостьОС_РасчетСтоимости.Регистратор ЕСТЬ NULL
	|		И НЕ &ГлавныйУзел
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Задания.ОбъектУчета КАК ОбъектУчета
	|	ИЗ
	|		РегистрСведений.ДокументыПоНМА КАК ДокументыПоНМА
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаданияКФормированиюДвиженийПоВНА КАК Задания
	|			ПО (Задания.Организация = ДокументыПоНМА.Организация)
	|			И (Задания.ОбъектУчета = ДокументыПоНМА.НематериальныйАктив)
	|			И (Задания.Месяц <= ДокументыПоНМА.Дата)
	|	ГДЕ
	|		ДокументыПоНМА.Ссылка В (&СписокДокументов)
	|		И ДокументыПоНМА.Проведен
	|		И ДокументыПоНМА.ТипСсылки В(&ТипыДокументов)
	|		И &ГлавныйУзел
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДокументыПоНМА.НематериальныйАктив КАК ОбъектУчета
	|	ИЗ
	|		РегистрСведений.ДокументыПоНМА КАК ДокументыПоНМА
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА_РасчетСтоимости
	|			ПО СтоимостьНМА_РасчетСтоимости.Регистратор = ДокументыПоНМА.Ссылка
	|	ГДЕ
	|		ДокументыПоНМА.Ссылка В (&СписокДокументов)
	|		И ДокументыПоНМА.Проведен
	|		И ДокументыПоНМА.ТипСсылки В(&ТипыДокументов)
	|		И СтоимостьНМА_РасчетСтоимости.Регистратор ЕСТЬ NULL
	|		И НЕ &ГлавныйУзел
	|
	|	) КАК СписокОбъектов
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	Запрос.УстановитьПараметр("ТипыДокументов", ВнеоборотныеАктивыПовтИсп.ИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения());
	Запрос.УстановитьПараметр("ГлавныйУзел", ПланыОбмена.ГлавныйУзел() = Неопределено);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ОбъектУчета");
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции

// Формирует задания к отложенному формированию движений по ОС, если изменились исходные данные.
//
// Параметры:
// 	Документ - ДокументОбъект, Неопределено - Документ, который изменяется.
// 	ДанныеТаблиц - см. ПроведениеДокументов.ДанныеТаблицСтаройСтруктуры
Процедура СформироватьЗадания(Документ, ДанныеТаблиц) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4")
		ИЛИ ДвиженияЗаписываютсяПриВыполненииОперации(Документ) Тогда
		Возврат;
	КонецЕсли; 
	
	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ДанныеТаблиц.МенеджерВременныхТаблиц);
	
	// Операции, которые выполняются после текущей операции
	ДвиженияФормируютсяПриЗакрытииМесяца =
		РасчетСтоимостиВНА.ДвиженияЗаписываютсяПриВыполненииОперации(Документ)
		ИЛИ РасчетСтоимостиВНА.ДвиженияЗаписываютсяПриАктуализацияДвиженийПоВНА(Документ)
		ИЛИ ЗакрытиеРасходовОтВыбытияОС.ДвиженияЗаписываютсяПриВыполненииОперации(Документ);
	
	СформироватьТаблицуРасчетыПоФинансовымИнструментамВРазрезеОС(ДанныеТаблиц);
	
	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("АмортизацияОС");
	СписокТаблиц.Добавить("АрендованныеОС");
	СписокТаблиц.Добавить("ИнвестицииВАренду");
	СписокТаблиц.Добавить("МестонахождениеОС");
	СписокТаблиц.Добавить("ПараметрыАмортизацииОСБУ");
	СписокТаблиц.Добавить("ПараметрыАмортизацииОСУУ");
	СписокТаблиц.Добавить("ПереданныеВАрендуОС");
	СписокТаблиц.Добавить("ПорядокУчетаОС");
	СписокТаблиц.Добавить("ПорядокУчетаОСБУ");
	СписокТаблиц.Добавить("ПорядокУчетаОСУУ");
	СписокТаблиц.Добавить("РасчетыПоФинансовымИнструментамВРазрезеОС");
	СписокТаблиц.Добавить("СтоимостьОС");
	
	ОтложенноеФормированиеДвиженийВНАЛокализация.ДополнитьСписокТаблицПоКоторымФормируютсяЗаданияКФормированиюДвижений(СписокТаблиц);
	
	ДопПоля = Новый Структура("ОбъектУчета", "ОсновноеСредство");
	ТекстОбъединенияДанныхОС = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц, ДопПоля);
	
	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("АмортизацияНМА");
	СписокТаблиц.Добавить("МестоУчетаНМА");
	СписокТаблиц.Добавить("ПараметрыАмортизацииНМАБУ");
	СписокТаблиц.Добавить("ПараметрыАмортизацииНМАУУ");
	СписокТаблиц.Добавить("ПервоначальныеСведенияНМА");
	СписокТаблиц.Добавить("ПорядокУчетаНМА");
	СписокТаблиц.Добавить("ПорядокУчетаНМАБУ");
	СписокТаблиц.Добавить("ПорядокУчетаНМАУУ");
	СписокТаблиц.Добавить("СтоимостьНМА");
	
	ДопПоля = Новый Структура("ОбъектУчета", "НематериальныйАктив");
	ТекстОбъединенияДанныхНМА = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц, ДопПоля);
	
	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("РеализацияУслугПрочихАктивов");
	ДопПоля = Новый Структура("ОбъектУчета", "ВнеоборотныйАктив");
	ТекстОбъединенияДанныхВНА = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц, ДопПоля);
	
	ТекстыДанных = Новый Массив;
	Если ТекстОбъединенияДанныхОС <> "" Тогда
		ТекстыДанных.Добавить(ТекстОбъединенияДанныхОС);
	КонецЕсли;
	Если ТекстОбъединенияДанныхНМА <> "" Тогда
		ТекстыДанных.Добавить(ТекстОбъединенияДанныхНМА);
	КонецЕсли; 
	Если ТекстОбъединенияДанныхВНА <> "" Тогда
		ТекстыДанных.Добавить(ТекстОбъединенияДанныхВНА);
	КонецЕсли; 
	ТекстОбъединенияДанных = СтрСоединить(ТекстыДанных, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Если Документ <> Неопределено
		И НЕ ДвиженияФормируютсяПриЗакрытииМесяца Тогда
		
		ТипДокумента = ТипЗнч(Документ.Ссылка);

		// Нужно зарегистрировать документ, если при проведении он не формирует движения в регистрах, по которым формируются задания.
		ЗарегистрироватьДокумент = 
			ТипДокумента = Тип("ДокументСсылка.ИзменениеУсловийДоговораАренды")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.КорректировкаСтоимостиИАмортизацииОС")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.КорректировкаСтоимостиИАмортизацииНМА")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.МодернизацияОС2_4")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ПеремещениеОС2_4")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ПеремещениеНМА2_4")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ПереоценкаОС2_4")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ПереоценкаНМА2_4")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.СписаниеОС2_4")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.СписаниеНМА2_4");
			
	Иначе
		ЗарегистрироватьДокумент = Ложь;
	КонецЕсли;
	
	Если ТекстОбъединенияДанных = "" И НЕ ЗарегистрироватьДокумент Тогда
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
		Возврат;
	КонецЕсли;
	
	СписокЗапросов = Новый Массив;
	Если ТекстОбъединенияДанных = "" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ИзмененныеДанные.Организация КАК Организация,
		|	ИзмененныеДанные.Документ КАК Документ,
		|	ИзмененныеДанные.ОбъектУчета КАК ОбъектУчета,
		|
		|	МИНИМУМ(ВЫБОР
		|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
		|						ИЛИ ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВзаиморасчетовПоАренде)
		|						ИЛИ ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковИнвестицииВАренду)
		|					ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), ДЕНЬ, 1), МЕСЯЦ)
		|				ИНАЧЕ НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)
		|			КОНЕЦ) КАК Месяц
		|
		|ПОМЕСТИТЬ ВтЗаданияКФормированиюДвиженийПоВНА
		|
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИзмененныеДанные.Организация,
		|		ИзмененныеДанные.Ссылка КАК Документ,
		|		ИзмененныеДанные.ОсновноеСредство КАК ОбъектУчета,
		|		ИзмененныеДанные.Дата КАК Период
		|
		|	ИЗ
		|		РегистрСведений.ДокументыПоОС КАК ИзмененныеДанные
		|
		|	ГДЕ
		|		ИзмененныеДанные.Ссылка = &Ссылка
		|		И ИзмененныеДанные.Дата >= &ДатаНачалаУчета
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ИзмененныеДанные.Организация,
		|		ИзмененныеДанные.Ссылка КАК Документ,
		|		ИзмененныеДанные.НематериальныйАктив КАК ОбъектУчета,
		|		ИзмененныеДанные.Дата КАК Период
		|
		|	ИЗ
		|		РегистрСведений.ДокументыПоНМА КАК ИзмененныеДанные
		|
		|	ГДЕ
		|		ИзмененныеДанные.Ссылка = &Ссылка
		|		И ИзмененныеДанные.Дата >= &ДатаНачалаУчета
		|
		|	) КАК ИзмененныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ИзмененныеДанные.Организация,
		|	ИзмененныеДанные.Документ,
		|	ИзмененныеДанные.ОбъектУчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Месяц,
		|	Организация,
		|	ОбъектУчета,
		|	Документ
		|";
		
		СписокЗапросов.Добавить(ТекстЗапроса);
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ИзмененныеДанные.Организация       КАК Организация,
		|	ИзмененныеДанные.ОбъектУчета       КАК ОбъектУчета,
		|	ИзмененныеДанные.Документ          КАК Документ,
		|	ИзмененныеДанные.Период            КАК Период
		|
		|ПОМЕСТИТЬ ИзмененныеДанные
		|
		|ИЗ
		|	ТекстОбъединенияДанных_Переопределямый КАК ИзмененныеДанные
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектУчета";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстОбъединенияДанных_Переопределямый", "(" + ТекстОбъединенияДанных + ")");
		СписокЗапросов.Добавить(ТекстЗапроса);
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ИзмененныеДанные.Период КАК Период,
		|	ИзмененныеДанные.Организация КАК Организация,
		|	ИзмененныеДанные.Документ КАК Документ,
		|	УзлыКомпонентыАмортизации.ОсновноеСредство КАК ОбъектУчета
		|
		|ПОМЕСТИТЬ УзлыКомпонентыАмортизации
		|
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УзлыКомпонентыАмортизации КАК УзлыКомпонентыАмортизации
		|		ПО УзлыКомпонентыАмортизации.УзелКомпонент = ИзмененныеДанные.ОбъектУчета
		|
		|";
		СписокЗапросов.Добавить(ТекстЗапроса);
	
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ИзмененныеДанные.Организация,
		|	ИзмененныеДанные.Документ,
		|	ИзмененныеДанные.ОбъектУчета,
		|
		|	МИНИМУМ(ВЫБОР
		|				КОГДА &ДвиженияФормируютсяПриЗакрытииМесяца
		|						ИЛИ ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
		|						ИЛИ ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВзаиморасчетовПоАренде)
		|						ИЛИ ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковИнвестицииВАренду)
		|					ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), ДЕНЬ, 1), МЕСЯЦ)
		|				ИНАЧЕ НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)
		|			КОНЕЦ) КАК Месяц
		|
		|ПОМЕСТИТЬ ВтЗаданияКФормированиюДвиженийПоВНА
		|
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИзмененныеДанные.Организация КАК Организация,
		|		ИзмененныеДанные.Документ КАК Документ,
		|		ИзмененныеДанные.ОбъектУчета КАК ОбъектУчета,
		|		ИзмененныеДанные.Период КАК Период
		|	ИЗ
		|		ИзмененныеДанные КАК ИзмененныеДанные
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		УзлыКомпонентыАмортизации.Организация КАК Организация,
		|		УзлыКомпонентыАмортизации.Документ КАК Документ,
		|		УзлыКомпонентыАмортизации.ОбъектУчета КАК ОбъектУчета,
		|		УзлыКомпонентыАмортизации.Период КАК Период
		|	ИЗ
		|		УзлыКомпонентыАмортизации КАК УзлыКомпонентыАмортизации
		|	
		|	) КАК ИзмененныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ИзмененныеДанные.Организация,
		|	ИзмененныеДанные.Документ,
		|	ИзмененныеДанные.ОбъектУчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Месяц,
		|	Организация,
		|	ОбъектУчета,
		|	Документ
		|";
		
		СписокЗапросов.Добавить(ТекстЗапроса);
			
	КонецЕсли; 
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	Запрос.УстановитьПараметр("ТипыДокументов", ВнеоборотныеАктивыПовтИсп.ИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения());
	Запрос.УстановитьПараметр("ДатаНачалаУчета", ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	Запрос.УстановитьПараметр("ДвиженияФормируютсяПриЗакрытииМесяца", ДвиженияФормируютсяПриЗакрытииМесяца);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос.Выполнить();
	
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоВНА.СоздатьЗаписиРегистраПоВременнойТаблице(Запрос.МенеджерВременныхТаблиц);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
	
КонецПроцедуры

// Формирует текст запроса пустых таблиц отложенного формирования движений.
// 
// Параметры:
//  Запрос - Запрос - 
// 	ТекстыЗапроса - СписокЗначений из Строка -
Процедура ТекстЗапросаПустыеТаблицыОтложенныхДвижений(Запрос, ТекстыЗапроса) Экспорт

	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_СтоимостьВНА") = Неопределено
		И НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВТ_СтоимостьВНА", ТекстыЗапроса) Тогда
	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	NULL   КАК Ссылка,
		|	NULL   КАК ОбъектУчета,
		|	0      КАК Стоимость,
		|	0      КАК СтоимостьРегл,
		|	0      КАК СтоимостьНУ,
		|	0      КАК СтоимостьЦФ,
		|	0      КАК СтоимостьПР,
		|	0      КАК СтоимостьВР,
		|	0      КАК СтоимостьНУЦФ,
		|	0      КАК СтоимостьПРЦФ,
		|	0      КАК СтоимостьВРЦФ,
		|	0      КАК НеУчитываемаяСтоимостьНУ,
		|	0      КАК АмортизационнаяПремия,
		|	0      КАК ПредварительнаяСтоимость,
		|	0      КАК ПредварительнаяСтоимостьРегл,
		|	0      КАК ПриростСтоимости,
		|	0      КАК ПриростСтоимостиРегл,
		|	0      КАК ДоляЦФБУ,
		|	0      КАК ДоляЦФНУ,
		|	0      КАК ДоляЦФПР,
		|	0      КАК ЗалоговаяСтоимость,
		|	0      КАК РезервПереоценкиСтоимости,
		|	0      КАК РезервПереоценкиСтоимостиРегл
		|
		|ПОМЕСТИТЬ ВТ_СтоимостьВНА 
		|ГДЕ
		|	ЛОЖЬ";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ВТ_СтоимостьВНА");
		
	КонецЕсли;
	
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_АмортизацияВНА") = Неопределено
		И НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВТ_АмортизацияВНА", ТекстыЗапроса) Тогда
	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	NULL   КАК Ссылка,
		|	NULL   КАК ОбъектУчета,
		|	0      КАК Амортизация,
		|	0      КАК АмортизацияРегл,
		|	0      КАК АмортизацияНУ,
		|	0      КАК АмортизацияПР,
		|	0      КАК АмортизацияВР,
		|	0      КАК АмортизацияЦФ,
		|	0      КАК РезервПереоценкиАмортизации,
		|	0      КАК РезервПереоценкиАмортизацииРегл,
		|	0      КАК АмортизацияНУЦФ,
		|	0      КАК АмортизацияПРЦФ,
		|	0      КАК АмортизацияВРЦФ,
		|	ЛОЖЬ   КАК НачислятьИзнос
		|ПОМЕСТИТЬ ВТ_АмортизацияВНА 
		|ГДЕ
		|	ЛОЖЬ";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ВТ_АмортизацияВНА");
		
	КонецЕсли;
	
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_ОбесценениеВНА") = Неопределено
		И НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВТ_ОбесценениеВНА", ТекстыЗапроса) Тогда
	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	NULL КАК Ссылка,
		|	NULL КАК Дата,
		|	NULL КАК Организация,
		|	NULL КАК ОбъектУчета,
		|	NULL КАК ЕГДС,
		|	0 КАК ОбесценениеУпр,
		|	0 КАК ОбесценениеРегл
		|
		|ПОМЕСТИТЬ ВТ_ОбесценениеВНА
		|ГДЕ
		|	ЛОЖЬ";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ВТ_ОбесценениеВНА");
		
	КонецЕсли;
	
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_РасчетыПоФинансовымИнструментам") = Неопределено
		И НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВТ_РасчетыПоФинансовымИнструментам", ТекстыЗапроса) Тогда
	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Ссылка,
		|	ДАТАВРЕМЯ(1,1,1) КАК Дата,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
		|	ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка) КАК Договор,
		|	НЕОПРЕДЕЛЕНО КАК ТипСуммы,
		|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
		|	НЕОПРЕДЕЛЕНО КАК Валюта,
		|	0 КАК Сумма,
		|	0 КАК СуммаУпр,
		|	0 КАК СуммаРегл
		|ПОМЕСТИТЬ ВТ_РасчетыПоФинансовымИнструментам 
		|ГДЕ
		|	ЛОЖЬ";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ВТ_РасчетыПоФинансовымИнструментам");
		
	КонецЕсли;
	
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_ИнвестицииВАренду") = Неопределено
		И НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВТ_ИнвестицииВАренду", ТекстыЗапроса) Тогда
	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Ссылка,
		|	ДАТАВРЕМЯ(1,1,1) КАК Дата,
		|	НЕОПРЕДЕЛЕНО КАК ОбъектУчета,
		|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
		|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчета,
		|	0 КАК АрендныеПлатежи,
		|	0 КАК АрендныеПлатежиРегл,
		|	0 КАК АрендныеПлатежиУпр,
		|	0 КАК НГЛСРегл,
		|	0 КАК НГЛСУпр,
		|	0 КАК ПроцентныйДисконт,
		|	0 КАК ПроцентныйДисконтУпр,
		|	0 КАК ПроцентныйДисконтРегл
		|ПОМЕСТИТЬ ВТ_ИнвестицииВАренду 
		|ГДЕ
		|	ЛОЖЬ";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ВТ_ИнвестицииВАренду");
		
	КонецЕсли;
	
КонецПроцедуры

// Определяет выполнено ли формирование движений на указанную дату.
// 
// Параметры:
//  Период - Дата - Период
//  СписокОрганизаций - СправочникСсылка.Организации, Массив из СправочникСсылка.Организации - Список организаций
// 
// Возвращаемое значение:
//  Булево - Истина, если выполнено формирование движений.
Функция ВыполненоОтложенноеФормированиеДвижений(Период, СписокОрганизаций) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.ЗаданияКФормированиюДвиженийПоВНА КАК Задания
	|
	|ГДЕ
	|	Задания.Месяц <= &Период
	|	И Задания.Организация В (&СписокОрганизаций)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Период", ?(Период <> '000101010000', Период, ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр(
		"СписокОрганизаций", 
		?(ТипЗнч(СписокОрганизаций) = Тип("Массив"), СписокОрганизаций, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СписокОрганизаций)));
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Пустой();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ВыполнениеОперации

Функция СформироватьСписокОбъектовИПолучитьНачалоПериода(ПараметрыВыполнения)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СписокОбъектов.ОбъектУчета КАК ОбъектУчета,
	|	СписокОбъектов.НачалоПериода КАК НачалоПериода
	|
	|ПОМЕСТИТЬ СписокОбъектов
	|
	|ИЗ
	|	&СписокОбъектов КАК СписокОбъектов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(СписокОбъектов.НачалоПериода), ДАТАВРЕМЯ(1,1,1)) КАК НачалоПериода
	|ИЗ
	|	СписокОбъектов КАК СписокОбъектов
	|
	|ГДЕ
	|	СписокОбъектов.НачалоПериода <> ДАТАВРЕМЯ(1,1,1)
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокОбъектов", ПараметрыВыполнения.СписокОбъектов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат ?(Выборка.НачалоПериода <> '000101010000', Выборка.НачалоПериода, ПараметрыВыполнения.КонецПериода);
	
КонецФункции

Функция ПолучитьПорциюДанныхКРасчету(НачалоПериода, ПараметрыВыполнения)
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ОтложенноеФормированиеДвиженийВНА.ПолучитьПорциюДанныхКРасчету");
	
	КоличествоДанных = ВнеоборотныеАктивы.СформироватьТаблицуВтПорцияДанныхКРасчету(
		НачалоПериода, 
		ПараметрыВыполнения.МенеджерВременныхТаблиц,
		РазмерПорцииДанных());
	
	ПараметрыВыполнения.КоличествоДанных = ПараметрыВыполнения.КоличествоДанных + КоличествоДанных;
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоДанных);
	
	Возврат (КоличествоДанных <> 0);
	
КонецФункции

Процедура СформироватьДвиженияПоДокументам(Период, ПараметрыВыполнения)
	
	МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
	
	ПодготовитьПараметры(Период, МенеджерВременныхТаблиц);
	ТаблицыДвижений = ПодготовитьТаблицыДвижений(МенеджерВременныхТаблиц);
	ЗаписатьТаблицыДвижений(ТаблицыДвижений, ПараметрыВыполнения);
	
КонецПроцедуры

Процедура ПодготовитьПараметры(Период, МенеджерВременныхТаблиц)
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ОтложенноеФормированиеДвиженийВНА.ПодготовитьПараметры");
	
	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
	ИспользуемыеВТ.Добавить("ВТ_СтоимостьВНА");
	ИспользуемыеВТ.Добавить("ВТ_АмортизацияВНА");
	
	ВнеоборотныеАктивы.СформироватьТаблицуВтДанныеКРасчету(МенеджерВременныхТаблиц);

	СписокЗапросов = Новый Массив;
		
	#Область НачислениеИзноса
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОбъектУчета
	|ПОМЕСТИТЬ НачислениеИзноса
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
		
	//++ Локализация
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ НачислениеИзноса
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И (Организация, ОсновноеСредство) В
	|					(ВЫБРАТЬ
	|						ВтДанныеКРасчету.Организация,
	|						ВтДанныеКРасчету.ОбъектУчета
	|					ИЗ
	|						ВтДанныеКРасчету КАК ВтДанныеКРасчету)) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета
	|";
	//-- Локализация
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ЗабалансовыйУчет
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОбъектУчета
	|ПОМЕСТИТЬ ЗабалансовыйУчет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	//++ Локализация
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокУчетаОСБУ.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ ЗабалансовыйУчет
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство КАК ОбъектУчета
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&НачалоМесяца,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И (Организация, ОсновноеСредство) В
	|					(ВЫБРАТЬ
	|						ВтДанныеКРасчету.Организация,
	|						ВтДанныеКРасчету.ОбъектУчета
	|					ИЗ
	|						ВтДанныеКРасчету КАК ВтДанныеКРасчету)) КАК ПорядокУчетаОСБУ
	|	ГДЕ
	|		ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство
	|	ИЗ
	|		ВтДанныеКРасчету КАК ВтДанныеКРасчету
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО (ПорядокУчетаОСБУ.Организация = ВтДанныеКРасчету.Организация)
	|				И (ПорядокУчетаОСБУ.ОсновноеСредство = ВтДанныеКРасчету.ОбъектУчета)
	|				И (ПорядокУчетаОСБУ.Период <= ВтДанныеКРасчету.Дата)
	|				И (ПорядокУчетаОСБУ.Период >= &НачалоМесяца)
	|				И (ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету))
	|				И (ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
	|				И (ПорядокУчетаОСБУ.Активность)
	|
	|	) КАК ПорядокУчетаОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	//-- Локализация
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УчетнаяПолитикаБУ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УчетнаяПолитика.Организация КАК Организация,
	|	УчетнаяПолитика.ПорядокНачисленияАмортизацииОСРегл КАК ПорядокНачисленияАмортизацииОС,
	|	УчетнаяПолитика.ПорядокНачисленияАмортизацииНМАРегл КАК ПорядокНачисленияАмортизацииНМА
	|
	|ПОМЕСТИТЬ УчетнаяПолитикаБУ
	|
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(
	|		&НачалоМесяца,
	|		Организация В (ВЫБРАТЬ ВтДанныеКРасчету.ГоловнаяОрганизация ИЗ ВтДанныеКРасчету КАК ВтДанныеКРасчету)) КАК УчетнаяПолитика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";

	//++ Локализация
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УчетнаяПолитика.Организация КАК Организация,
	|	УчетнаяПолитика.ПорядокНачисленияАмортизацииОС КАК ПорядокНачисленияАмортизацииОС,
	|	УчетнаяПолитика.ПорядокНачисленияАмортизацииНМА КАК ПорядокНачисленияАмортизацииНМА
	|
	|ПОМЕСТИТЬ УчетнаяПолитикаБУ
	|
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(
	|		&НачалоМесяца,
	|		Организация В (ВЫБРАТЬ ДанныеКРасчету.ГоловнаяОрганизация ИЗ ВтДанныеКРасчету КАК ДанныеКРасчету)) КАК УчетнаяПолитика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	//-- Локализация
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УчетнаяПолитикаУУ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УчетнаяПолитика.Организация КАК Организация,
	|	УчетнаяПолитика.ПорядокНачисленияАмортизацииОС КАК ПорядокНачисленияАмортизацииОС,
	|	УчетнаяПолитика.ПорядокНачисленияАмортизацииНМА КАК ПорядокНачисленияАмортизацииНМА
	|
	|ПОМЕСТИТЬ УчетнаяПолитикаУУ
	|
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(
	|		&НачалоМесяца,
	|		Организация В (ВЫБРАТЬ ВтДанныеКРасчету.ГоловнаяОрганизация ИЗ ВтДанныеКРасчету КАК ВтДанныеКРасчету)) КАК УчетнаяПолитика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьВНА_Остатки
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьОСОстатки.Организация КАК Организация,
	|	СтоимостьОСОстатки.ОсновноеСредство КАК ОбъектУчета,
	|
	|	СтоимостьОСОстатки.СтоимостьОстаток КАК Стоимость,
	|	СтоимостьОСОстатки.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	СтоимостьОСОстатки.СтоимостьНУОстаток КАК СтоимостьНУ,
	|	СтоимостьОСОстатки.СтоимостьПРОстаток КАК СтоимостьПР,
	|	СтоимостьОСОстатки.СтоимостьВРОстаток КАК СтоимостьВР,
	|	СтоимостьОСОстатки.СтоимостьЦФОстаток КАК СтоимостьЦФ,
	|	СтоимостьОСОстатки.СтоимостьНУЦФОстаток КАК СтоимостьНУЦФ,
	|	СтоимостьОСОстатки.СтоимостьПРЦФОстаток КАК СтоимостьПРЦФ,
	|	СтоимостьОСОстатки.СтоимостьВРЦФОстаток КАК СтоимостьВРЦФ,
	|
	|	СтоимостьОСОстатки.НеУчитываемаяСтоимостьНУОстаток КАК НеУчитываемаяСтоимостьНУ,
	|	СтоимостьОСОстатки.АмортизационнаяПремияОстаток КАК АмортизационнаяПремия,
	|	СтоимостьОСОстатки.ЗалоговаяСтоимостьОстаток КАК ЗалоговаяСтоимость,
	|
	|	СтоимостьОСОстатки.ПредварительнаяСтоимостьОстаток КАК ПредварительнаяСтоимость,
	|	СтоимостьОСОстатки.ПредварительнаяСтоимостьРеглОстаток КАК ПредварительнаяСтоимостьРегл,
	|
	|	СтоимостьОСОстатки.РезервПереоценкиСтоимостиОстаток КАК РезервПереоценкиСтоимости,
	|	СтоимостьОСОстатки.РезервПереоценкиСтоимостиРеглОстаток КАК РезервПереоценкиСтоимостиРегл,
	|
	|	-СтоимостьОСОстатки.ПриростСтоимостиОстаток КАК ПриростСтоимости,
	|	-СтоимостьОСОстатки.ПриростСтоимостиРеглОстаток КАК ПриростСтоимостиРегл
	|
	|ПОМЕСТИТЬ СтоимостьВНА_Остатки
	|
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(
	|			&НачалоМесяца,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					ВтДанныеКРасчету.Организация,
	|					ВтДанныеКРасчету.ОбъектУчета
	|				ИЗ
	|					ВтДанныеКРасчету КАК ВтДанныеКРасчету)) КАК СтоимостьОСОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтоимостьНМАОстатки.Организация КАК Организация,
	|	СтоимостьНМАОстатки.НематериальныйАктив КАК ОбъектУчета,
	|
	|	СтоимостьНМАОстатки.СтоимостьОстаток КАК Стоимость,
	|	СтоимостьНМАОстатки.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	СтоимостьНМАОстатки.СтоимостьНУОстаток КАК СтоимостьНУ,
	|	СтоимостьНМАОстатки.СтоимостьПРОстаток КАК СтоимостьПР,
	|	СтоимостьНМАОстатки.СтоимостьВРОстаток КАК СтоимостьВР,
	|	СтоимостьНМАОстатки.СтоимостьЦФОстаток КАК СтоимостьЦФ,
	|	СтоимостьНМАОстатки.СтоимостьНУЦФОстаток КАК СтоимостьНУЦФ,
	|	СтоимостьНМАОстатки.СтоимостьПРЦФОстаток КАК СтоимостьПРЦФ,
	|	СтоимостьНМАОстатки.СтоимостьВРЦФОстаток КАК СтоимостьВРЦФ,
	|
	|	0 КАК НеУчитываемаяСтоимостьНУ,
	|	0 КАК АмортизационнаяПремия,
	|	0 КАК ЗалоговаяСтоимость,
	|
	|	СтоимостьНМАОстатки.ПредварительнаяСтоимостьОстаток КАК ПредварительнаяСтоимость,
	|	СтоимостьНМАОстатки.ПредварительнаяСтоимостьРеглОстаток КАК ПредварительнаяСтоимостьРегл,
	|
	|	СтоимостьНМАОстатки.РезервПереоценкиСтоимостиОстаток КАК РезервПереоценкиСтоимости,
	|	СтоимостьНМАОстатки.РезервПереоценкиСтоимостиРеглОстаток КАК РезервПереоценкиСтоимостиРегл,
	|
	|	-СтоимостьНМАОстатки.ПриростСтоимостиОстаток КАК ПриростСтоимости,
	|	-СтоимостьНМАОстатки.ПриростСтоимостиРеглОстаток КАК ПриростСтоимостиРегл
	|
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА.Остатки(
	|			&НачалоМесяца,
	|			(Организация, НематериальныйАктив) В
	|				(ВЫБРАТЬ
	|					ВтДанныеКРасчету.Организация,
	|					ВтДанныеКРасчету.ОбъектУчета
	|				ИЗ
	|					ВтДанныеКРасчету КАК ВтДанныеКРасчету)) КАК СтоимостьНМАОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета,
	|	Организация
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьВНА_Движения
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьОС.Период КАК Период,
	|	СтоимостьОС.Регистратор КАК Регистратор,
	|	СтоимостьОС.Организация КАК Организация,
	|	СтоимостьОС.ОсновноеСредство КАК ОбъектУчета,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.Стоимость
	|		ИНАЧЕ -СтоимостьОС.Стоимость
	|	КОНЕЦ КАК Стоимость,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьРегл
	|		ИНАЧЕ -СтоимостьОС.СтоимостьРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьНУ
	|		ИНАЧЕ -СтоимостьОС.СтоимостьНУ
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьПР
	|		ИНАЧЕ -СтоимостьОС.СтоимостьПР
	|	КОНЕЦ КАК СтоимостьПР,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьВР
	|		ИНАЧЕ -СтоимостьОС.СтоимостьВР
	|	КОНЕЦ КАК СтоимостьВР,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьЦФ
	|		ИНАЧЕ -СтоимостьОС.СтоимостьЦФ
	|	КОНЕЦ КАК СтоимостьЦФ,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьНУЦФ
	|		ИНАЧЕ -СтоимостьОС.СтоимостьНУЦФ
	|	КОНЕЦ КАК СтоимостьНУЦФ,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьПРЦФ
	|		ИНАЧЕ -СтоимостьОС.СтоимостьПРЦФ
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьВРЦФ
	|		ИНАЧЕ -СтоимостьОС.СтоимостьВРЦФ
	|	КОНЕЦ КАК СтоимостьВРЦФ,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.НеУчитываемаяСтоимостьНУ
	|		ИНАЧЕ -СтоимостьОС.НеУчитываемаяСтоимостьНУ
	|	КОНЕЦ КАК НеУчитываемаяСтоимостьНУ,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.АмортизационнаяПремия
	|		ИНАЧЕ -СтоимостьОС.АмортизационнаяПремия
	|	КОНЕЦ КАК АмортизационнаяПремия,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.ЗалоговаяСтоимость
	|		ИНАЧЕ -СтоимостьОС.ЗалоговаяСтоимость
	|	КОНЕЦ КАК ЗалоговаяСтоимость,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.ПредварительнаяСтоимость
	|		ИНАЧЕ -СтоимостьОС.ПредварительнаяСтоимость
	|	КОНЕЦ КАК ПредварительнаяСтоимость,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.ПредварительнаяСтоимостьРегл
	|		ИНАЧЕ -СтоимостьОС.ПредварительнаяСтоимостьРегл
	|	КОНЕЦ КАК ПредварительнаяСтоимостьРегл,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.РезервПереоценкиСтоимости
	|		ИНАЧЕ -СтоимостьОС.РезервПереоценкиСтоимости
	|	КОНЕЦ КАК РезервПереоценкиСтоимости,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ -СтоимостьОС.РезервПереоценкиСтоимостиРегл
	|	КОНЕЦ КАК РезервПереоценкиСтоимостиРегл,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА -СтоимостьОС.ПриростСтоимости
	|		ИНАЧЕ СтоимостьОС.ПриростСтоимости
	|	КОНЕЦ КАК ПриростСтоимости,
	|
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА -СтоимостьОС.ПриростСтоимостиРегл
	|		ИНАЧЕ СтоимостьОС.ПриростСтоимостиРегл
	|	КОНЕЦ КАК ПриростСтоимостиРегл
	|
	|ПОМЕСТИТЬ СтоимостьВНА_Движения
	|
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|
	|ГДЕ
	|	СтоимостьОС.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И СтоимостьОС.Активность
	|
	|	И (СтоимостьОС.Организация, СтоимостьОС.ОсновноеСредство) В
	|			(ВЫБРАТЬ
	|				ВтДанныеКРасчету.Организация,
	|				ВтДанныеКРасчету.ОбъектУчета
	|			ИЗ
	|				ВтДанныеКРасчету КАК ВтДанныеКРасчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтоимостьНМА.Период КАК Период,
	|	СтоимостьНМА.Регистратор КАК Регистратор,
	|	СтоимостьНМА.Организация КАК Организация,
	|	СтоимостьНМА.НематериальныйАктив КАК ОбъектУчета,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.Стоимость
	|		ИНАЧЕ -СтоимостьНМА.Стоимость
	|	КОНЕЦ КАК Стоимость,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьРегл
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьНУ
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьНУ
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьПР
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьПР
	|	КОНЕЦ КАК СтоимостьПР,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьВР
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьВР
	|	КОНЕЦ КАК СтоимостьВР,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьЦФ
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьЦФ
	|	КОНЕЦ КАК СтоимостьЦФ,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьНУЦФ
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьНУЦФ
	|	КОНЕЦ КАК СтоимостьНУЦФ,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьПРЦФ
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьПРЦФ
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьВРЦФ
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьВРЦФ
	|	КОНЕЦ КАК СтоимостьВРЦФ,
	|
	|	0 КАК НеУчитываемаяСтоимостьНУ,
	|	0 КАК АмортизационнаяПремия,
	|	0 КАК ЗалоговаяСтоимость,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.ПредварительнаяСтоимость
	|		ИНАЧЕ -СтоимостьНМА.ПредварительнаяСтоимость
	|	КОНЕЦ КАК ПредварительнаяСтоимость,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.ПредварительнаяСтоимостьРегл
	|		ИНАЧЕ -СтоимостьНМА.ПредварительнаяСтоимостьРегл
	|	КОНЕЦ КАК ПредварительнаяСтоимостьРегл,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.РезервПереоценкиСтоимости
	|		ИНАЧЕ -СтоимостьНМА.РезервПереоценкиСтоимости
	|	КОНЕЦ КАК РезервПереоценкиСтоимости,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ -СтоимостьНМА.РезервПереоценкиСтоимостиРегл
	|	КОНЕЦ КАК РезервПереоценкиСтоимостиРегл,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА -СтоимостьНМА.ПриростСтоимости
	|		ИНАЧЕ СтоимостьНМА.ПриростСтоимости
	|	КОНЕЦ КАК ПриростСтоимости,
	|
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА -СтоимостьНМА.ПриростСтоимостиРегл
	|		ИНАЧЕ СтоимостьНМА.ПриростСтоимостиРегл
	|	КОНЕЦ КАК ПриростСтоимостиРегл
	|
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|
	|ГДЕ
	|	СтоимостьНМА.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И СтоимостьНМА.Активность
	|
	|	И (СтоимостьНМА.Организация, СтоимостьНМА.НематериальныйАктив) В
	|			(ВЫБРАТЬ
	|				ВтДанныеКРасчету.Организация,
	|				ВтДанныеКРасчету.ОбъектУчета
	|			ИЗ
	|				ВтДанныеКРасчету КАК ВтДанныеКРасчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета,
	|	Организация
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ВТ_СтоимостьВНА
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеКРасчету.Ссылка КАК Ссылка,
	|	ДанныеКРасчету.Дата,
	|	ДанныеКРасчету.Организация КАК Организация,
	|	ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета,
	|
	|	ДанныеКРасчету.ЗабалансовыйУчет КАК ЗабалансовыйУчет,
	|
	|	СУММА(ДанныеКРасчету.Стоимость) КАК Стоимость,
	|	СУММА(ДанныеКРасчету.СтоимостьРегл) КАК СтоимостьРегл,
	|	СУММА(ДанныеКРасчету.СтоимостьНУ) КАК СтоимостьНУ,
	|	СУММА(ДанныеКРасчету.СтоимостьПР) КАК СтоимостьПР,
	|	СУММА(ДанныеКРасчету.СтоимостьВР) КАК СтоимостьВР,
	|	СУММА(ДанныеКРасчету.СтоимостьЦФ) КАК СтоимостьЦФ,
	|	СУММА(ДанныеКРасчету.СтоимостьНУЦФ) КАК СтоимостьНУЦФ,
	|	СУММА(ДанныеКРасчету.СтоимостьПРЦФ) КАК СтоимостьПРЦФ,
	|	СУММА(ДанныеКРасчету.СтоимостьВРЦФ) КАК СтоимостьВРЦФ,
	|
	|	СУММА(ДанныеКРасчету.НеУчитываемаяСтоимостьНУ) КАК НеУчитываемаяСтоимостьНУ,
	|	СУММА(ДанныеКРасчету.АмортизационнаяПремия) КАК АмортизационнаяПремия,
	|	СУММА(ДанныеКРасчету.ЗалоговаяСтоимость) КАК ЗалоговаяСтоимость,
	|
	|	СУММА(ДанныеКРасчету.ПредварительнаяСтоимость) КАК ПредварительнаяСтоимость,
	|	СУММА(ДанныеКРасчету.ПредварительнаяСтоимостьРегл) КАК ПредварительнаяСтоимостьРегл,
	|
	|	СУММА(ДанныеКРасчету.РезервПереоценкиСтоимости) КАК РезервПереоценкиСтоимости,
	|	СУММА(ДанныеКРасчету.РезервПереоценкиСтоимостиРегл) КАК РезервПереоценкиСтоимостиРегл,
	|
	|	СУММА(ДанныеКРасчету.ПриростСтоимости) КАК ПриростСтоимости,
	|	СУММА(ДанныеКРасчету.ПриростСтоимостиРегл) КАК ПриростСтоимостиРегл,
	|
	|	ВЫБОР КОГДА СУММА(ДанныеКРасчету.СтоимостьЦФ) = 0 ИЛИ (СУММА(ДанныеКРасчету.СтоимостьРегл) + СУММА(ДанныеКРасчету.СтоимостьЦФ)) = 0
	|		ТОГДА 0
	|		ИНАЧЕ СУММА(ДанныеКРасчету.СтоимостьЦФ) / (СУММА(ДанныеКРасчету.СтоимостьРегл) + СУММА(ДанныеКРасчету.СтоимостьЦФ))
	|	КОНЕЦ КАК ДоляЦФБУ,
	|
	|	ВЫБОР КОГДА СУММА(ДанныеКРасчету.СтоимостьНУЦФ) = 0 ИЛИ (СУММА(ДанныеКРасчету.СтоимостьНУ) + СУММА(ДанныеКРасчету.СтоимостьНУЦФ)) = 0
	|		ТОГДА 0
	|		ИНАЧЕ СУММА(ДанныеКРасчету.СтоимостьНУЦФ) / (СУММА(ДанныеКРасчету.СтоимостьНУ) + СУММА(ДанныеКРасчету.СтоимостьНУЦФ))
	|	КОНЕЦ КАК ДоляЦФНУ,
	|
	|	ВЫБОР КОГДА СУММА(ДанныеКРасчету.СтоимостьПРЦФ) = 0 ИЛИ (СУММА(ДанныеКРасчету.СтоимостьПР) + СУММА(ДанныеКРасчету.СтоимостьПРЦФ)) = 0
	|		ТОГДА 0
	|		ИНАЧЕ СУММА(ДанныеКРасчету.СтоимостьПРЦФ) / (СУММА(ДанныеКРасчету.СтоимостьПР) + СУММА(ДанныеКРасчету.СтоимостьПРЦФ))
	|	КОНЕЦ КАК ДоляЦФПР
	|
	|ПОМЕСТИТЬ ВТ_СтоимостьВНА
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеКРасчету.Ссылка КАК Ссылка,
	|		ДанныеКРасчету.Дата,
	|		ДанныеКРасчету.Организация КАК Организация,
	|		ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета,
	|
	|		НЕ ЗабалансовыйУчет.ОбъектУчета ЕСТЬ NULL КАК ЗабалансовыйУчет,
	|
	|		ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) КАК Стоимость,
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) КАК СтоимостьРегл,
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьНУ, 0) КАК СтоимостьНУ,
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьПР, 0) КАК СтоимостьПР,
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьВР, 0) КАК СтоимостьВР,
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0) КАК СтоимостьЦФ,
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьНУЦФ, 0) КАК СтоимостьНУЦФ,
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьПРЦФ, 0) КАК СтоимостьПРЦФ,
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьВРЦФ, 0) КАК СтоимостьВРЦФ,
	|
	|		ЕСТЬNULL(СтоимостьВНА.НеУчитываемаяСтоимостьНУ, 0) КАК НеУчитываемаяСтоимостьНУ,
	|		ЕСТЬNULL(СтоимостьВНА.АмортизационнаяПремия, 0) КАК АмортизационнаяПремия,
	|		ЕСТЬNULL(СтоимостьВНА.ЗалоговаяСтоимость, 0) КАК ЗалоговаяСтоимость,
	|
	|		ЕСТЬNULL(СтоимостьВНА.ПредварительнаяСтоимость, 0) КАК ПредварительнаяСтоимость,
	|		ЕСТЬNULL(СтоимостьВНА.ПредварительнаяСтоимостьРегл, 0) КАК ПредварительнаяСтоимостьРегл,
	|
	|		ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимости, 0) КАК РезервПереоценкиСтоимости,
	|		ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимостиРегл, 0) КАК РезервПереоценкиСтоимостиРегл,
	|
	|		ЕСТЬNULL(СтоимостьВНА.ПриростСтоимости, 0) КАК ПриростСтоимости,
	|		ЕСТЬNULL(СтоимостьВНА.ПриростСтоимостиРегл, 0) КАК ПриростСтоимостиРегл
	|	ИЗ
	|		ВтДанныеКРасчету КАК ДанныеКРасчету
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВНА_Остатки КАК СтоимостьВНА
	|			ПО (СтоимостьВНА.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|				И (СтоимостьВНА.Организация = ДанныеКРасчету.Организация)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ЗабалансовыйУчет КАК ЗабалансовыйУчет
	|			ПО (ЗабалансовыйУчет.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеКРасчету.Ссылка КАК Ссылка,
	|		ДанныеКРасчету.Дата,
	|		ДанныеКРасчету.Организация КАК Организация,
	|		ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета,
	|
	|		НЕ ЗабалансовыйУчет.ОбъектУчета ЕСТЬ NULL,
	|
	|		ЕСТЬNULL(СтоимостьВНА.Стоимость, 0),
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0),
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьНУ, 0),
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьПР, 0),
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьВР, 0),
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0),
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьНУЦФ, 0),
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьПРЦФ, 0),
	|		ЕСТЬNULL(СтоимостьВНА.СтоимостьВРЦФ, 0),
	|
	|		ЕСТЬNULL(СтоимостьВНА.НеУчитываемаяСтоимостьНУ, 0),
	|		ЕСТЬNULL(СтоимостьВНА.АмортизационнаяПремия, 0),
	|		ЕСТЬNULL(СтоимостьВНА.ЗалоговаяСтоимость, 0),
	|
	|		ЕСТЬNULL(СтоимостьВНА.ПредварительнаяСтоимость, 0),
	|		ЕСТЬNULL(СтоимостьВНА.ПредварительнаяСтоимостьРегл, 0),
	|
	|		ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимости, 0),
	|		ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимостиРегл, 0),
	|
	|		ЕСТЬNULL(СтоимостьВНА.ПриростСтоимости, 0),
	|		ЕСТЬNULL(СтоимостьВНА.ПриростСтоимостиРегл, 0)
	|
	|	ИЗ
	|		ВтДанныеКРасчету КАК ДанныеКРасчету
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВНА_Движения КАК СтоимостьВНА
	|			ПО (СтоимостьВНА.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|				И (СтоимостьВНА.Организация = ДанныеКРасчету.Организация)
	|				И (СтоимостьВНА.Период <= ДанныеКРасчету.Дата
	|					ИЛИ ТИПЗНАЧЕНИЯ(СтоимостьВНА.Регистратор) В (&ТипыДокументовКоторыеИзменяютСтоимостьВКонцеМесяца))
	|				И (СтоимостьВНА.Регистратор <> ДанныеКРасчету.Ссылка)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|			ПО (НематериальныеАктивы.Ссылка = ДанныеКРасчету.ОбъектУчета)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ЗабалансовыйУчет КАК ЗабалансовыйУчет
	|			ПО (ЗабалансовыйУчет.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК КорректировкаОС
	|			ПО КорректировкаОС.Ссылка = ДанныеКРасчету.Ссылка
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииНМА КАК КорректировкаНМА
	|			ПО КорректировкаНМА.Ссылка = ДанныеКРасчету.Ссылка
	|
	|	ГДЕ
	|		(НЕ ЕСТЬNULL(КорректировкаОС.ВключаетАмортизациюТекущегоМесяца, ЛОЖЬ)
	|				И НЕ ЕСТЬNULL(КорректировкаНМА.ВключаетАмортизациюТекущегоМесяца, ЛОЖЬ)
	|			ИЛИ ЕСТЬNULL(НематериальныеАктивы.ВидОбъектаУчета, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеКРасчету.Ссылка,
	|		ДанныеКРасчету.Дата,
	|		ДанныеКРасчету.Организация,
	|		ДанныеКРасчету.ОбъектУчета,
	|		НЕ ЗабалансовыйУчет.ОбъектУчета ЕСТЬ NULL,
	|
	|		ЕСТЬNULL(СтоимостьОС.Стоимость, 0),
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		ЕСТЬNULL(СтоимостьОС.ПредварительнаяСтоимость, 0),
	|		0,
	|		ЕСТЬNULL(СтоимостьОС.РезервПереоценкиСтоимости, 0),
	|		0,
	|		ЕСТЬNULL(СтоимостьОС.ПриростСтоимости, 0),
	|		0
	|	ИЗ
	|		ВтДанныеКРасчету КАК ДанныеКРасчету
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВНА_Движения КАК СтоимостьОС
	|			ПО (СтоимостьОС.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|				И (СтоимостьОС.Организация = ДанныеКРасчету.Организация)
	|				И (СтоимостьОС.Регистратор <> ДанныеКРасчету.Ссылка)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|			ПО (НематериальныеАктивы.Ссылка = ДанныеКРасчету.ОбъектУчета)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ЗабалансовыйУчет КАК ЗабалансовыйУчет
	|			ПО (ЗабалансовыйУчет.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК КорректировкаОС
	|			ПО КорректировкаОС.Ссылка = ДанныеКРасчету.Ссылка
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииНМА КАК КорректировкаНМА
	|			ПО КорректировкаНМА.Ссылка = ДанныеКРасчету.Ссылка
	|
	|	ГДЕ
	|		(ЕСТЬNULL(КорректировкаОС.ВключаетАмортизациюТекущегоМесяца, ЛОЖЬ)
	|			ИЛИ ЕСТЬNULL(КорректировкаНМА.ВключаетАмортизациюТекущегоМесяца, ЛОЖЬ))
	|		И ДанныеКРасчету.ОтражатьВУпрУчете
	|		И ЕСТЬNULL(НематериальныеАктивы.ВидОбъектаУчета, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеКРасчету.Ссылка,
	|		ДанныеКРасчету.Дата,
	|		ДанныеКРасчету.Организация,
	|		ДанныеКРасчету.ОбъектУчета,
	|		НЕ ЗабалансовыйУчет.ОбъектУчета ЕСТЬ NULL,
	|
	|		0,
	|
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьНУ, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьВР, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьНУЦФ, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьПРЦФ, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьВРЦФ, 0),
	|
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		ВтДанныеКРасчету КАК ДанныеКРасчету
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВНА_Движения КАК СтоимостьОС
	|			ПО (СтоимостьОС.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|				И (СтоимостьОС.Организация = ДанныеКРасчету.Организация)
	|				И (СтоимостьОС.Регистратор <> ДанныеКРасчету.Ссылка)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|			ПО (НематериальныеАктивы.Ссылка = ДанныеКРасчету.ОбъектУчета)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ЗабалансовыйУчет КАК ЗабалансовыйУчет
	|			ПО (ЗабалансовыйУчет.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК КорректировкаОС
	|			ПО КорректировкаОС.Ссылка = ДанныеКРасчету.Ссылка
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииНМА КАК КорректировкаНМА
	|			ПО КорректировкаНМА.Ссылка = ДанныеКРасчету.Ссылка
	|
	|	ГДЕ
	|		(ЕСТЬNULL(КорректировкаОС.ВключаетАмортизациюТекущегоМесяца, ЛОЖЬ)
	|			ИЛИ ЕСТЬNULL(КорректировкаНМА.ВключаетАмортизациюТекущегоМесяца, ЛОЖЬ))
	|		И ДанныеКРасчету.ОтражатьВРеглУчете
	|		И ЕСТЬNULL(НематериальныеАктивы.ВидОбъектаУчета, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеКРасчету.Ссылка,
	|		ДанныеКРасчету.Дата,
	|		ДанныеКРасчету.Организация,
	|		ДанныеКРасчету.ОбъектУчета,
	|		НЕ ЗабалансовыйУчет.ОбъектУчета ЕСТЬ NULL,
	|
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|
	|		ЕСТЬNULL(СтоимостьОС.НеУчитываемаяСтоимостьНУ, 0),
	|		ЕСТЬNULL(СтоимостьОС.АмортизационнаяПремия, 0),
	|		ЕСТЬNULL(СтоимостьОС.ЗалоговаяСтоимость, 0),
	|		ЕСТЬNULL(СтоимостьОС.ПредварительнаяСтоимость, 0),
	|		ЕСТЬNULL(СтоимостьОС.ПредварительнаяСтоимостьРегл, 0),
	|		ЕСТЬNULL(СтоимостьОС.РезервПереоценкиСтоимости, 0),
	|		ЕСТЬNULL(СтоимостьОС.РезервПереоценкиСтоимостиРегл, 0),
	|		ЕСТЬNULL(СтоимостьОС.ПриростСтоимости, 0),
	|		ЕСТЬNULL(СтоимостьОС.ПриростСтоимостиРегл, 0)
	|	ИЗ
	|		ВтДанныеКРасчету КАК ДанныеКРасчету
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВНА_Движения КАК СтоимостьОС
	|			ПО (СтоимостьОС.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|				И (СтоимостьОС.Организация = ДанныеКРасчету.Организация)
	|				И (СтоимостьОС.Регистратор <> ДанныеКРасчету.Ссылка)
	|				И (СтоимостьОС.Период <= ДанныеКРасчету.Дата
	|					ИЛИ ТИПЗНАЧЕНИЯ(СтоимостьОС.Регистратор) В (&ТипыДокументовКоторыеИзменяютСтоимостьВКонцеМесяца))
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|			ПО (НематериальныеАктивы.Ссылка = ДанныеКРасчету.ОбъектУчета)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ЗабалансовыйУчет КАК ЗабалансовыйУчет
	|			ПО (ЗабалансовыйУчет.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК КорректировкаОС
	|			ПО КорректировкаОС.Ссылка = ДанныеКРасчету.Ссылка
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииНМА КАК КорректировкаНМА
	|			ПО КорректировкаНМА.Ссылка = ДанныеКРасчету.Ссылка
	|
	|	ГДЕ
	|		(ЕСТЬNULL(КорректировкаОС.ВключаетАмортизациюТекущегоМесяца, ЛОЖЬ)
	|			ИЛИ ЕСТЬNULL(КорректировкаНМА.ВключаетАмортизациюТекущегоМесяца, ЛОЖЬ))
	|		И ДанныеКРасчету.ОтражатьВРеглУчете
	|		И ЕСТЬNULL(НематериальныеАктивы.ВидОбъектаУчета, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|
	|	) КАК ДанныеКРасчету
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеКРасчету.Ссылка,
	|	ДанныеКРасчету.Дата,
	|	ДанныеКРасчету.Организация,
	|	ДанныеКРасчету.ОбъектУчета,
	|	ДанныеКРасчету.ЗабалансовыйУчет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОбъектУчета,
	|	Организация";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти

	#Область АмортизацияВНА_Остатки
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	АмортизацияОС.Организация КАК Организация,
	|	АмортизацияОС.ОсновноеСредство КАК ОбъектУчета,
	|	-АмортизацияОС.АмортизацияОстаток КАК Амортизация,
	|	-АмортизацияОС.АмортизацияРеглОстаток КАК АмортизацияРегл,
	|	-АмортизацияОС.АмортизацияНУОстаток КАК АмортизацияНУ,
	|	-АмортизацияОС.АмортизацияПРОстаток КАК АмортизацияПР,
	|	-АмортизацияОС.АмортизацияВРОстаток КАК АмортизацияВР,
	|	-АмортизацияОС.АмортизацияЦФОстаток КАК АмортизацияЦФ,
	|	-АмортизацияОС.АмортизацияНУЦФОстаток КАК АмортизацияНУЦФ,
	|	-АмортизацияОС.АмортизацияПРЦФОстаток КАК АмортизацияПРЦФ,
	|	-АмортизацияОС.АмортизацияВРЦФОстаток КАК АмортизацияВРЦФ,
	|	-АмортизацияОС.РезервПереоценкиАмортизацииОстаток КАК РезервПереоценкиАмортизации,
	|	-АмортизацияОС.РезервПереоценкиАмортизацииРеглОстаток КАК РезервПереоценкиАмортизацииРегл
	|
	|ПОМЕСТИТЬ АмортизацияВНА_Остатки
	|
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.Остатки(
	|			&НачалоМесяца,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					ВтДанныеКРасчету.Организация,
	|					ВтДанныеКРасчету.ОбъектУчета
	|				ИЗ
	|					ВтДанныеКРасчету КАК ВтДанныеКРасчету)) КАК АмортизацияОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АмортизацияНМА.Организация КАК Организация,
	|	АмортизацияНМА.НематериальныйАктив КАК ОбъектУчета,
	|	-АмортизацияНМА.АмортизацияОстаток КАК Амортизация,
	|	-АмортизацияНМА.АмортизацияРеглОстаток КАК АмортизацияРегл,
	|	-АмортизацияНМА.АмортизацияНУОстаток КАК АмортизацияНУ,
	|	-АмортизацияНМА.АмортизацияПРОстаток КАК АмортизацияПР,
	|	-АмортизацияНМА.АмортизацияВРОстаток КАК АмортизацияВР,
	|	-АмортизацияНМА.АмортизацияЦФОстаток КАК АмортизацияЦФ,
	|	-АмортизацияНМА.АмортизацияНУЦФОстаток КАК АмортизацияНУЦФ,
	|	-АмортизацияНМА.АмортизацияПРЦФОстаток КАК АмортизацияПРЦФ,
	|	-АмортизацияНМА.АмортизацияВРЦФОстаток КАК АмортизацияВРЦФ,
	|	-АмортизацияНМА.РезервПереоценкиАмортизацииОстаток КАК РезервПереоценкиАмортизации,
	|	-АмортизацияНМА.РезервПереоценкиАмортизацииРеглОстаток КАК РезервПереоценкиАмортизацииРегл
	|ИЗ
	|	РегистрНакопления.АмортизацияНМА.Остатки(
	|			&НачалоМесяца,
	|			(Организация, НематериальныйАктив) В
	|				(ВЫБРАТЬ
	|					ВтДанныеКРасчету.Организация,
	|					ВтДанныеКРасчету.ОбъектУчета
	|				ИЗ
	|					ВтДанныеКРасчету КАК ВтДанныеКРасчету)) КАК АмортизацияНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область АмортизацияВНА_Движения
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	АмортизацияВНА.Период КАК Период,
	|	АмортизацияВНА.Регистратор КАК Регистратор,
	|	АмортизацияВНА.Организация КАК Организация,
	|	АмортизацияВНА.ОсновноеСредство КАК ОбъектУчета,
	|	АмортизацияВНА.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
	|	АмортизацияВНА.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	АмортизацияВНА.ЭтоДоначисление ИЛИ АмортизацияВНА.ЭтоДоначислениеБУ КАК ЭтоДоначисление,
	|
	|	ВЫБОР
	|		КОГДА АмортизацияВНА.ПорядокНачисленияАмортизацииУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(УчетнаяПолитикаУУ.ПорядокНачисленияАмортизацииОС, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ АмортизацияВНА.ПорядокНачисленияАмортизацииУУ 
	|	КОНЕЦ КАК ПорядокНачисленияАмортизацииУУ,
	|
	|	ВЫБОР
	|		КОГДА АмортизацияВНА.ПорядокНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(УчетнаяПолитикаБУ.ПорядокНачисленияАмортизацииОС, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ АмортизацияВНА.ПорядокНачисленияАмортизацииБУ 
	|	КОНЕЦ КАК ПорядокНачисленияАмортизацииБУ,
	|
	|	ВЫБОР КОГДА АмортизацияВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияВНА.Амортизация 
	|		ИНАЧЕ -АмортизацияВНА.Амортизация 
	|	КОНЕЦ КАК Амортизация,
	|
	|	ВЫБОР КОГДА АмортизацияВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияВНА.АмортизацияРегл 
	|		ИНАЧЕ -АмортизацияВНА.АмортизацияРегл 
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	|	ВЫБОР КОГДА АмортизацияВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияВНА.АмортизацияНУ 
	|		ИНАЧЕ -АмортизацияВНА.АмортизацияНУ 
	|	КОНЕЦ КАК АмортизацияНУ,
	|
	|	ВЫБОР КОГДА АмортизацияВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияВНА.АмортизацияПР 
	|		ИНАЧЕ -АмортизацияВНА.АмортизацияПР 
	|	КОНЕЦ КАК АмортизацияПР,
	|
	|	ВЫБОР КОГДА АмортизацияВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияВНА.АмортизацияВР 
	|		ИНАЧЕ -АмортизацияВНА.АмортизацияВР 
	|	КОНЕЦ КАК АмортизацияВР,
	|
	|	ВЫБОР КОГДА АмортизацияВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияВНА.АмортизацияЦФ 
	|		ИНАЧЕ -АмортизацияВНА.АмортизацияЦФ 
	|	КОНЕЦ КАК АмортизацияЦФ,
	|
	|	ВЫБОР КОГДА АмортизацияВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияВНА.АмортизацияНУЦФ 
	|		ИНАЧЕ -АмортизацияВНА.АмортизацияНУЦФ 
	|	КОНЕЦ КАК АмортизацияНУЦФ,
	|
	|	ВЫБОР КОГДА АмортизацияВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияВНА.АмортизацияПРЦФ 
	|		ИНАЧЕ -АмортизацияВНА.АмортизацияПРЦФ 
	|	КОНЕЦ КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР КОГДА АмортизацияВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияВНА.АмортизацияВРЦФ 
	|		ИНАЧЕ -АмортизацияВНА.АмортизацияВРЦФ 
	|	КОНЕЦ КАК АмортизацияВРЦФ,
	|
	|	ВЫБОР КОГДА АмортизацияВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияВНА.РезервПереоценкиАмортизации 
	|		ИНАЧЕ -АмортизацияВНА.РезервПереоценкиАмортизации 
	|	КОНЕЦ КАК РезервПереоценкиАмортизации,
	|
	|	ВЫБОР КОГДА АмортизацияВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияВНА.РезервПереоценкиАмортизацииРегл 
	|		ИНАЧЕ -АмортизацияВНА.РезервПереоценкиАмортизацииРегл 
	|	КОНЕЦ КАК РезервПереоценкиАмортизацииРегл
	|
	|ПОМЕСТИТЬ АмортизацияВНА_Движения
	|
	|ИЗ
	|	РегистрНакопления.АмортизацияОС КАК АмортизацияВНА
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаБУ КАК УчетнаяПолитикаБУ
	|		ПО УчетнаяПолитикаБУ.Организация = АмортизацияВНА.Организация.ГоловнаяОрганизация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаУУ КАК УчетнаяПолитикаУУ
	|		ПО УчетнаяПолитикаУУ.Организация = АмортизацияВНА.Организация.ГоловнаяОрганизация
	|
	|ГДЕ
	|	АмортизацияВНА.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И АмортизацияВНА.Активность
	|
	|	И (АмортизацияВНА.Организация, АмортизацияВНА.ОсновноеСредство) В
	|			(ВЫБРАТЬ
	|				ВтДанныеКРасчету.Организация,
	|				ВтДанныеКРасчету.ОбъектУчета
	|			ИЗ
	|				ВтДанныеКРасчету КАК ВтДанныеКРасчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АмортизацияНМА.Период КАК Период,
	|	АмортизацияНМА.Регистратор КАК Регистратор,
	|	АмортизацияНМА.Организация КАК Организация,
	|	АмортизацияНМА.НематериальныйАктив КАК ОбъектУчета,
	|	АмортизацияНМА.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
	|	АмортизацияНМА.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	АмортизацияНМА.ЭтоДоначисление ИЛИ АмортизацияНМА.ЭтоДоначислениеБУ КАК ЭтоДоначисление,
	|
	|	ВЫБОР
	|		КОГДА АмортизацияНМА.ПорядокНачисленияАмортизацииУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(УчетнаяПолитикаУУ.ПорядокНачисленияАмортизацииНМА, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ АмортизацияНМА.ПорядокНачисленияАмортизацииУУ 
	|	КОНЕЦ КАК ПорядокНачисленияАмортизацииУУ,
	|
	|	ВЫБОР
	|		КОГДА АмортизацияНМА.ПорядокНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(УчетнаяПолитикаБУ.ПорядокНачисленияАмортизацииНМА, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ АмортизацияНМА.ПорядокНачисленияАмортизацииБУ 
	|	КОНЕЦ КАК ПорядокНачисленияАмортизацииБУ,
	|
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.Амортизация 
	|		ИНАЧЕ -АмортизацияНМА.Амортизация 
	|	КОНЕЦ КАК Амортизация,
	|
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияРегл 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияРегл 
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияНУ 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияНУ 
	|	КОНЕЦ КАК АмортизацияНУ,
	|
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияПР 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияПР 
	|	КОНЕЦ КАК АмортизацияПР,
	|
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияВР 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияВР 
	|	КОНЕЦ КАК АмортизацияВР,
	|
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияЦФ 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияЦФ 
	|	КОНЕЦ КАК АмортизацияЦФ,
	|
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияНУЦФ 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияНУЦФ 
	|	КОНЕЦ КАК АмортизацияНУЦФ,
	|
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияПРЦФ 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияПРЦФ 
	|	КОНЕЦ КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияВРЦФ 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияВРЦФ 
	|	КОНЕЦ КАК АмортизацияВРЦФ,
	|
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.РезервПереоценкиАмортизации 
	|		ИНАЧЕ -АмортизацияНМА.РезервПереоценкиАмортизации 
	|	КОНЕЦ КАК РезервПереоценкиАмортизации,
	|
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.РезервПереоценкиАмортизацииРегл 
	|		ИНАЧЕ -АмортизацияНМА.РезервПереоценкиАмортизацииРегл 
	|	КОНЕЦ КАК РезервПереоценкиАмортизацииРегл
	|
	|ИЗ
	|	РегистрНакопления.АмортизацияНМА КАК АмортизацияНМА
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаБУ КАК УчетнаяПолитикаБУ
	|		ПО УчетнаяПолитикаБУ.Организация = АмортизацияНМА.Организация.ГоловнаяОрганизация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаУУ КАК УчетнаяПолитикаУУ
	|		ПО УчетнаяПолитикаУУ.Организация = АмортизацияНМА.Организация.ГоловнаяОрганизация
	|
	|ГДЕ
	|	АмортизацияНМА.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И АмортизацияНМА.Активность
	|
	|	И (АмортизацияНМА.Организация, АмортизацияНМА.НематериальныйАктив) В
	|			(ВЫБРАТЬ
	|				ВтДанныеКРасчету.Организация,
	|				ВтДанныеКРасчету.ОбъектУчета
	|			ИЗ
	|				ВтДанныеКРасчету КАК ВтДанныеКРасчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВТ_АмортизацияВНА
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеКРасчету.Ссылка КАК Ссылка,
	|	ДанныеКРасчету.Дата,
	|	ДанныеКРасчету.Организация КАК Организация,
	|	ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета,
	|	ДанныеКРасчету.НачислятьИзнос КАК НачислятьИзнос,
	|	СУММА(ДанныеКРасчету.Амортизация) КАК Амортизация,
	|	СУММА(ДанныеКРасчету.АмортизацияРегл) КАК АмортизацияРегл,
	|	СУММА(ДанныеКРасчету.АмортизацияНУ) КАК АмортизацияНУ,
	|	СУММА(ДанныеКРасчету.АмортизацияПР) КАК АмортизацияПР,
	|	СУММА(ДанныеКРасчету.АмортизацияВР) КАК АмортизацияВР,
	|	СУММА(ДанныеКРасчету.АмортизацияЦФ) КАК АмортизацияЦФ,
	|	СУММА(ДанныеКРасчету.АмортизацияНУЦФ) КАК АмортизацияНУЦФ,
	|	СУММА(ДанныеКРасчету.АмортизацияПРЦФ) КАК АмортизацияПРЦФ,
	|	СУММА(ДанныеКРасчету.АмортизацияВРЦФ) КАК АмортизацияВРЦФ,
	|	СУММА(ДанныеКРасчету.РезервПереоценкиАмортизации) КАК РезервПереоценкиАмортизации,
	|	СУММА(ДанныеКРасчету.РезервПереоценкиАмортизацииРегл) КАК РезервПереоценкиАмортизацииРегл
	|
	|ПОМЕСТИТЬ ВТ_АмортизацияВНА
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеКРасчету.Ссылка КАК Ссылка,
	|		ДанныеКРасчету.Дата КАК Дата,
	|		ДанныеКРасчету.Организация КАК Организация,
	|		ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета,
	|		ЕСТЬNULL(АмортизацияВНА.Амортизация, 0) КАК Амортизация,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияРегл, 0) КАК АмортизацияРегл,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияНУ, 0) КАК АмортизацияНУ,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияПР, 0) КАК АмортизацияПР,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияВР, 0) КАК АмортизацияВР,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияЦФ, 0) КАК АмортизацияЦФ,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияНУЦФ, 0) КАК АмортизацияНУЦФ,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияПРЦФ, 0) КАК АмортизацияПРЦФ,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияВРЦФ, 0) КАК АмортизацияВРЦФ,
	|		ЕСТЬNULL(АмортизацияВНА.РезервПереоценкиАмортизации, 0) КАК РезервПереоценкиАмортизации,
	|		ЕСТЬNULL(АмортизацияВНА.РезервПереоценкиАмортизацииРегл, 0) КАК РезервПереоценкиАмортизацииРегл,
	|		НЕ НачислениеИзноса.ОбъектУчета ЕСТЬ NULL КАК НачислятьИзнос
	|	ИЗ
	|		ВтДанныеКРасчету КАК ДанныеКРасчету
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияВНА_Остатки КАК АмортизацияВНА
	|			ПО (АмортизацияВНА.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|				И (АмортизацияВНА.Организация = ДанныеКРасчету.Организация)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ НачислениеИзноса КАК НачислениеИзноса
	|			ПО НачислениеИзноса.ОбъектУчета = ДанныеКРасчету.ОбъектУчета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеКРасчету.Ссылка,
	|		ДанныеКРасчету.Дата,
	|		ДанныеКРасчету.Организация,
	|		ДанныеКРасчету.ОбъектУчета,
	|
	|		ВЫБОР 
	|			КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(АмортизацияВНА.Период, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < НАЧАЛОПЕРИОДА(ДанныеКРасчету.Дата, ДЕНЬ)
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.Период, ДАТАВРЕМЯ(1, 1, 1)) < ДанныеКРасчету.Дата
	|						И (НЕ ТИПЗНАЧЕНИЯ(АмортизацияВНА.Регистратор) В (ТИП(Документ.АмортизацияОС2_4), ТИП(Документ.АмортизацияНМА2_4))
	|							ИЛИ ЕСТЬNULL(АмортизацияВНА.ЭтоДоначисление, ЛОЖЬ) 
	|							ИЛИ ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) В (&ТипыДокументовСписания))
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокУчетаУУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл)
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокНачисленияАмортизацииУУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|
	|				ТОГДА ЕСТЬNULL(АмортизацияВНА.Амортизация, 0)
	| 
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Амортизация,
	|
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(АмортизацияВНА.Период, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < НАЧАЛОПЕРИОДА(ДанныеКРасчету.Дата, ДЕНЬ)
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.Период, ДАТАВРЕМЯ(1, 1, 1)) < ДанныеКРасчету.Дата
	|						И (НЕ ТИПЗНАЧЕНИЯ(АмортизацияВНА.Регистратор) В (ТИП(Документ.АмортизацияОС2_4), ТИП(Документ.АмортизацияНМА2_4))
	|							ИЛИ ЕСТЬNULL(АмортизацияВНА.ЭтоДоначисление, ЛОЖЬ) 
	|							ИЛИ ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) В (&ТипыДокументовСписания))
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл)
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокНачисленияАмортизацииБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|
	|				ТОГДА ЕСТЬNULL(АмортизацияВНА.АмортизацияРегл, 0)
	|
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК АмортизацияРегл,
	|
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияНУ, 0) КАК АмортизацияНУ,
	|
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(АмортизацияВНА.Период, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < НАЧАЛОПЕРИОДА(ДанныеКРасчету.Дата, ДЕНЬ)
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.Период, ДАТАВРЕМЯ(1, 1, 1)) < ДанныеКРасчету.Дата
	|						И (НЕ ТИПЗНАЧЕНИЯ(АмортизацияВНА.Регистратор) В (ТИП(Документ.АмортизацияОС2_4), ТИП(Документ.АмортизацияНМА2_4))
	|							ИЛИ ЕСТЬNULL(АмортизацияВНА.ЭтоДоначисление, ЛОЖЬ) 
	|							ИЛИ ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) В (&ТипыДокументовСписания))
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл)
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокНачисленияАмортизацииБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|
	|				ТОГДА ЕСТЬNULL(АмортизацияВНА.АмортизацияПР, 0)
	|
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК АмортизацияПР,
	|
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(АмортизацияВНА.Период, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < НАЧАЛОПЕРИОДА(ДанныеКРасчету.Дата, ДЕНЬ)
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.Период, ДАТАВРЕМЯ(1, 1, 1)) < ДанныеКРасчету.Дата
	|						И (НЕ ТИПЗНАЧЕНИЯ(АмортизацияВНА.Регистратор) В (ТИП(Документ.АмортизацияОС2_4), ТИП(Документ.АмортизацияНМА2_4))
	|							ИЛИ ЕСТЬNULL(АмортизацияВНА.ЭтоДоначисление, ЛОЖЬ) 
	|							ИЛИ ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) В (&ТипыДокументовСписания))
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл)
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокНачисленияАмортизацииБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|
	|				ТОГДА ЕСТЬNULL(АмортизацияВНА.АмортизацияРегл, 0)
	|
	|			ИНАЧЕ 0
	|		КОНЕЦ 
	|			- ЕСТЬNULL(АмортизацияВНА.АмортизацияНУ, 0) 
	|			- ВЫБОР
	|					КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(АмортизацияВНА.Период, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < НАЧАЛОПЕРИОДА(ДанныеКРасчету.Дата, ДЕНЬ)
	|						ИЛИ ЕСТЬNULL(АмортизацияВНА.Период, ДАТАВРЕМЯ(1, 1, 1)) < ДанныеКРасчету.Дата
	|							И (НЕ ТИПЗНАЧЕНИЯ(АмортизацияВНА.Регистратор) В (ТИП(Документ.АмортизацияОС2_4), ТИП(Документ.АмортизацияНМА2_4))
	|								ИЛИ ЕСТЬNULL(АмортизацияВНА.ЭтоДоначисление, ЛОЖЬ) 
	|								ИЛИ ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) В (&ТипыДокументовСписания))
	|						ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл)
	|						ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокНачисленияАмортизацииБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|
	|					ТОГДА ЕСТЬNULL(АмортизацияВНА.АмортизацияПР, 0)
	|
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК АмортизацияВР,
	|
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(АмортизацияВНА.Период, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < НАЧАЛОПЕРИОДА(ДанныеКРасчету.Дата, ДЕНЬ)
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.Период, ДАТАВРЕМЯ(1, 1, 1)) < ДанныеКРасчету.Дата
	|						И (НЕ ТИПЗНАЧЕНИЯ(АмортизацияВНА.Регистратор) В (ТИП(Документ.АмортизацияОС2_4), ТИП(Документ.АмортизацияНМА2_4))
	|							ИЛИ ЕСТЬNULL(АмортизацияВНА.ЭтоДоначисление, ЛОЖЬ) 
	|							ИЛИ ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) В (&ТипыДокументовСписания))
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл)
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокНачисленияАмортизацииБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|
	|				ТОГДА ЕСТЬNULL(АмортизацияВНА.АмортизацияЦФ, 0)
	|
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК АмортизацияЦФ,
	|
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияНУЦФ, 0) КАК АмортизацияНУЦФ,
	|
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(АмортизацияВНА.Период, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < НАЧАЛОПЕРИОДА(ДанныеКРасчету.Дата, ДЕНЬ)
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.Период, ДАТАВРЕМЯ(1, 1, 1)) < ДанныеКРасчету.Дата
	|						И (НЕ ТИПЗНАЧЕНИЯ(АмортизацияВНА.Регистратор) В (ТИП(Документ.АмортизацияОС2_4), ТИП(Документ.АмортизацияНМА2_4))
	|							ИЛИ ЕСТЬNULL(АмортизацияВНА.ЭтоДоначисление, ЛОЖЬ) 
	|							ИЛИ ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) В (&ТипыДокументовСписания))
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл)
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокНачисленияАмортизацииБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|
	|				ТОГДА ЕСТЬNULL(АмортизацияВНА.АмортизацияПРЦФ, 0)
	|
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК АмортизацияПРЦФ,
	|
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(АмортизацияВНА.Период, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < НАЧАЛОПЕРИОДА(ДанныеКРасчету.Дата, ДЕНЬ)
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.Период, ДАТАВРЕМЯ(1, 1, 1)) < ДанныеКРасчету.Дата
	|						И (НЕ ТИПЗНАЧЕНИЯ(АмортизацияВНА.Регистратор) В (ТИП(Документ.АмортизацияОС2_4), ТИП(Документ.АмортизацияНМА2_4))
	|							ИЛИ ЕСТЬNULL(АмортизацияВНА.ЭтоДоначисление, ЛОЖЬ) 
	|							ИЛИ ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) В (&ТипыДокументовСписания))
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл)
	|					ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокНачисленияАмортизацииБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|
	|				ТОГДА ЕСТЬNULL(АмортизацияВНА.АмортизацияЦФ, 0)
	|
	|			ИНАЧЕ 0
	|		КОНЕЦ 
	|			- ЕСТЬNULL(АмортизацияВНА.АмортизацияНУЦФ, 0) 
	|			- ВЫБОР
	|					КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(АмортизацияВНА.Период, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < НАЧАЛОПЕРИОДА(ДанныеКРасчету.Дата, ДЕНЬ)
	|						ИЛИ ЕСТЬNULL(АмортизацияВНА.Период, ДАТАВРЕМЯ(1, 1, 1)) < ДанныеКРасчету.Дата
	|							И (НЕ ТИПЗНАЧЕНИЯ(АмортизацияВНА.Регистратор) В (ТИП(Документ.АмортизацияОС2_4), ТИП(Документ.АмортизацияНМА2_4))
	|								ИЛИ ЕСТЬNULL(АмортизацияВНА.ЭтоДоначисление, ЛОЖЬ) 
	|								ИЛИ ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) В (&ТипыДокументовСписания))
	|						ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл)
	|						ИЛИ ЕСТЬNULL(АмортизацияВНА.ПорядокНачисленияАмортизацииБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|
	|					ТОГДА ЕСТЬNULL(АмортизацияВНА.АмортизацияПРЦФ, 0)
	|
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК АмортизацияВРЦФ,
	|
	|		ЕСТЬNULL(АмортизацияВНА.РезервПереоценкиАмортизации, 0),
	|		ЕСТЬNULL(АмортизацияВНА.РезервПереоценкиАмортизацииРегл, 0),
	|		НЕ НачислениеИзноса.ОбъектУчета ЕСТЬ NULL КАК НачислятьИзнос
	|
	|	ИЗ
	|		ВтДанныеКРасчету КАК ДанныеКРасчету
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияВНА_Движения КАК АмортизацияВНА
	|			ПО (АмортизацияВНА.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|				И (АмортизацияВНА.Организация = ДанныеКРасчету.Организация)
	|				И (АмортизацияВНА.Регистратор <> ДанныеКРасчету.Ссылка)
	|				И (АмортизацияВНА.Период <= ДанныеКРасчету.Дата
	|					ИЛИ ТИПЗНАЧЕНИЯ(АмортизацияВНА.Регистратор) В (ТИП(Документ.АмортизацияОС2_4), ТИП(Документ.АмортизацияНМА2_4)))
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ НачислениеИзноса КАК НачислениеИзноса
	|			ПО НачислениеИзноса.ОбъектУчета = ДанныеКРасчету.ОбъектУчета
	|
	|	) КАК ДанныеКРасчету
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеКРасчету.Ссылка,
	|	ДанныеКРасчету.Дата,
	|	ДанныеКРасчету.Организация,
	|	ДанныеКРасчету.ОбъектУчета,
	|	ДанныеКРасчету.НачислятьИзнос
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДанныеКРасчету.Амортизация) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.АмортизацияРегл) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.АмортизацияНУ) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.АмортизацияПР) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.АмортизацияВР) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.АмортизацияЦФ) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.АмортизацияНУЦФ) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.АмортизацияПРЦФ) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.АмортизацияВРЦФ) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.РезервПереоценкиАмортизации) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.РезервПереоценкиАмортизацииРегл) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОбъектУчета,
	|	Организация";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	ОбесценениеВНАСервер.ДополнитьПараметрыОтложенногоФормированияДвижений(СписокЗапросов, ИспользуемыеВТ);
	УчетАрендованныхОС.ДополнитьПараметрыОтложенногоФормированияДвижений(СписокЗапросов, ИспользуемыеВТ);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Период));
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца", НачалоМесяца(Период)-1);
	Запрос.УстановитьПараметр("ТипыДокументов", ВнеоборотныеАктивыПовтИсп.ИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения());
	Запрос.УстановитьПараметр("ТипыДокументовКоторыеМогутИзменитьСтоимость", ТипыДокументовКоторыеМогутИзменитьСтоимость());
	Запрос.УстановитьПараметр("ТипыДокументовКоторыеМогутНачислитьАмортизацию", ТипыДокументовКоторыеМогутНачислитьАмортизацию());
	Запрос.УстановитьПараметр("ТипыДокументовКоторыеИзменяютСтоимостьВКонцеМесяца", ТипыДокументовКоторыеИзменяютСтоимостьВКонцеМесяца());
	Запрос.УстановитьПараметр("ТипыДокументовСписания", ТипыДокументовСписания());
	Запрос.УстановитьПараметр("РегламентированныйУчетВНА", ПолучитьФункциональнуюОпцию("РегламентированныйУчетВНА"));
	
	Запрос.Выполнить();
	
	КоличествоДанных = ВнеоборотныеАктивы.КоличествоДанныхКРасчету(МенеджерВременныхТаблиц);

	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВТ);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоДанных);
	
КонецПроцедуры

Функция ПодготовитьТаблицыДвижений(МенеджерВременныхТаблиц)
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ОтложенноеФормированиеДвиженийВНА.ПодготовитьТаблицыДвижений");

	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
	ИспользуемыеВТ.Добавить("ВтСписокДокументов");

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтПорцияДанныхКРасчету.Ссылка КАК Ссылка,
	|	ВтПорцияДанныхКРасчету.Организация КАК Организация,
	|	ВтПорцияДанныхКРасчету.Дата КАК Период
	|
	|ПОМЕСТИТЬ ВтСписокДокументов
	|
	|ИЗ
	|	ВтПорцияДанныхКРасчету КАК ВтПорцияДанныхКРасчету
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтСписокДокументов.Ссылка), 0) КАК Количество
	|ИЗ
	|	ВтСписокДокументов КАК ВтСписокДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ВтПорцияДанныхКРасчету.Ссылка) В (&ТипыДокументовНеПоддерживающихПакетныйРежим)
	|			ТОГДА ВтПорцияДанныхКРасчету.Ссылка
	|		ИНАЧЕ ТИПЗНАЧЕНИЯ(ВтПорцияДанныхКРасчету.Ссылка) 
	|	КОНЕЦ КАК ТипДокументаИлиСсылка
	|ИЗ
	|	ВтПорцияДанныхКРасчету КАК ВтПорцияДанныхКРасчету
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТипыДокументовНеПоддерживающихПакетныйРежим = ТипыДокументовНеПоддерживающихПакетныйРежим();
	Запрос.УстановитьПараметр("ТипыДокументовНеПоддерживающихПакетныйРежим", ТипыДокументовНеПоддерживающихПакетныйРежим);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка = Результат[Результат.ВГраница()-1].Выбрать();
	Выборка.Следующий();
	КоличествоДанных = Выборка.Количество;
	
	ТаблицыДвижений = Новый Соответствие;
	
	Выборка = Результат[Результат.ВГраница()].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ТипыДокументовНеПоддерживающихПакетныйРежим.Найти(ТипЗнч(Выборка.ТипДокументаИлиСсылка)) <> Неопределено Тогда
			
			МенеджерДокумента = Документы[Метаданные.НайтиПоТипу(ТипЗнч(Выборка.ТипДокументаИлиСсылка)).Имя];
			ТаблицыДвиженийДокументов = МенеджерДокумента.ТаблицыОтложенногоФормированияДвижений(Выборка.ТипДокументаИлиСсылка, МенеджерВременныхТаблиц); // Структура
			
		Иначе
			
			МенеджерДокумента = Документы[Метаданные.НайтиПоТипу(Выборка.ТипДокументаИлиСсылка).Имя];
			ТаблицыДвиженийДокументов = МенеджерДокумента.ТаблицыОтложенногоФормированияДвижений(МенеджерВременныхТаблиц); // Структура
			
			Для Каждого КлючИЗначение Из ТаблицыДвиженийДокументов Цикл
	
				ИмяРегистра = ВнеоборотныеАктивыСлужебный.ИмяРегистраПоИмениТаблицыДвижений(КлючИЗначение.Ключ);
				
				Если Метаданные.РегистрыСведений.Найти(ИмяРегистра) <> Неопределено 
					ИЛИ Метаданные.РегистрыНакопления.Найти(ИмяРегистра) <> Неопределено Тогда
				
					Таблица = КлючИЗначение.Значение; // ТаблицаЗначений
					Таблица.Индексы.Добавить("Регистратор");
	
				КонецЕсли;
				
			КонецЦикла;
		
		КонецЕсли;
		
		ТаблицыДвижений.Вставить(Выборка.ТипДокументаИлиСсылка, ТаблицыДвиженийДокументов);
		
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВТ);
	
	КонецЦикла;
	
	ИспользуемыеВТ.Удалить(ИспользуемыеВТ.Найти("ВтСписокДокументов"));
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВТ);

	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоДанных);

	Возврат ТаблицыДвижений;
	
КонецФункции

Процедура ЗаписатьТаблицыДвижений(ТаблицыДвижений, ПараметрыВыполнения)

	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ОтложенноеФормированиеДвиженийВНА.ЗаписатьТаблицыДвижений");

	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ПараметрыВыполнения.МенеджерВременныхТаблиц);
	
	ТипыДокументовНеПоддерживающихПакетныйРежим = ТипыДокументовНеПоддерживающихПакетныйРежим();

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтПорцияДанныхКРасчету.Ссылка КАК Ссылка,
	|	ВтПорцияДанныхКРасчету.Дата КАК Дата
	|ИЗ
	|	ВтПорцияДанныхКРасчету КАК ВтПорцияДанныхКРасчету
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	КоличествоДанных = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			ДокументОбъект = ПроведениеДокументов.ЭмуляцияДокумента(Выборка.Ссылка, Выборка.Дата);
			УстановитьПризнакВыполненияОперации(ДокументОбъект, ПараметрыВыполнения.ИмяОперации);
			
			Если ТипыДокументовНеПоддерживающихПакетныйРежим.Найти(ТипЗнч(Выборка.Ссылка)) <> Неопределено Тогда
				ТаблицыДвиженийДокументов = ТаблицыДвижений.Получить(Выборка.Ссылка);
			Иначе
				ТаблицыДвиженийДокументов = ТаблицыДвижений.Получить(ТипЗнч(Выборка.Ссылка));
			КонецЕсли;
			
			ВнеоборотныеАктивыСлужебный.ЗаписатьТаблицыДвижений(
				ТаблицыДвиженийДокументов, 
				ДокументОбъект, 
				ПараметрыВыполнения.МенеджерВременныхТаблиц,
				ПараметрыВыполнения.ВернутьДокументыКОтражению, 
				ПараметрыВыполнения.ИмяОперации);
				
			КоличествоДанных = КоличествоДанных + 1;
			
			Если ПараметрыВыполнения.СформироватьЗадания Тогда
				ПроведениеДокументов.СформироватьЗаданияНаОтложенныеДвижения(ДокументОбъект, ПараметрыВыполнения.МенеджерВременныхТаблиц);
			КонецЕсли;
		
			ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыВыполнения.МенеджерВременныхТаблиц,, ИспользуемыеВТ);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ВызватьИсключение ТекстОшибки;
			
		КонецПопытки;
		
	КонецЦикла;
	
	ВнеоборотныеАктивыСлужебный.ОтразитьВУправленческомБалансе(ТаблицыДвижений, ПараметрыВыполнения.МенеджерВременныхТаблиц);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыВыполнения.МенеджерВременныхТаблиц,, ИспользуемыеВТ);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоДанных);
	
КонецПроцедуры

Процедура ЗарегистрироватьОшибки(ПараметрыВыполнения)

	Если НЕ ЗначениеЗаполнено(ПараметрыВыполнения.ВыполнитьПроверку) Тогда
		Возврат;
	КонецЕсли;

	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ОтложенноеФормированиеДвиженийВНА.ЗарегистрироватьОшибки");
	
	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ПараметрыВыполнения.МенеджерВременныхТаблиц);
	ИспользуемыеВТ.Добавить("ВтОшибки");
	
	ДокументыСОшибками = Новый Массив;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ПараметрыВыполнения.КонецПериода));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПараметрыВыполнения.КонецПериода));
	Запрос.УстановитьПараметр("ТипыДоговоровПоФСБУ25", УчетАрендованныхОСКлиентСервер.ТипыДоговоровДоходнойАренды());
	
	#Область НеУказанаСтатьяРасходовВРеализации
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтПорцияДанныхКРасчету.Ссылка КАК Ссылка,
	|	ВтПорцияДанныхКРасчету.Организация КАК Организация,
	|	ТаблицаДокумента.Номер КАК НомерДокумента,
	|	ТаблицаДокумента.Дата КАК ДатаДокумента,
	|	ВтПорцияДанныхКРасчету.Дата КАК Дата,
	|	ТаблицаРасходы.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ЕСТЬNULL(ТаблицаРасходы.НомерСтроки, 0) КАК НомерСтроки
	|
	|ИЗ
	|	ВтПорцияДанныхКРасчету КАК ВтПорцияДанныхКРасчету
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК ТаблицаДокумента
	|		ПО (ТаблицаДокумента.Ссылка = ВтПорцияДанныхКРасчету.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаРасходы
	|		ПО (ТаблицаРасходы.Ссылка = ВтПорцияДанныхКРасчету.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьВНА
	|		ПО (СтоимостьВНА.Ссылка = ТаблицаРасходы.Ссылка)
	|			И (СтоимостьВНА.ОбъектУчета = ТаблицаРасходы.ВнеоборотныйАктив)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ВтПорцияДанныхКРасчету.Ссылка) = ТИП(Документ.РеализацияУслугПрочихАктивов)
	|	И ТаблицаРасходы.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И НЕ СтоимостьВНА.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокументыСОшибками.Добавить(Выборка.Ссылка);
		
		ОписаниеПроблемы = НСтр("ru = 'В документе Реализация услуг и прочих активов №%1 от %2 для внеоборотного актива %3 необходимо указать статью расходов, на которую будет списана стоимость.';
								|en = 'Specify an expense item to which the cost will be written off in the ""Customer invoice — Services and Assets"" document No. %1 dated %2 for the %3 fixed asset.'");
		ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
									Выборка.НомерДокумента, 
									Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
									Выборка.ВнеоборотныйАктив);
		
		ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
			Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам, 
			ПараметрыВыполнения.КонецПериода,
			Выборка.Организация,
			ОписаниеПроблемы,,
			Выборка.Ссылка);
				
	КонецЦикла; 
	
	#КонецОбласти
	
	#Область СтоимостьНовыхОСПревышаетСтоимостьИсходного
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтПорцияДанныхКРасчету.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ ВТ_РазукомплектацияОС
	|
	|ИЗ
	|	ВтПорцияДанныхКРасчету КАК ВтПорцияДанныхКРасчету
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ВтПорцияДанныхКРасчету.Ссылка) = ТИП(Документ.РазукомплектацияОС)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПараметрыАмортизацииОСУУ.Период) КАК Период
	|
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСУУ_Период
	|
	|ИЗ
	|	ВТ_РазукомплектацияОС КАК ВТ_РазукомплектацияОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК ТаблицаДокумента
	|		ПО (ТаблицаДокумента.Ссылка = ВТ_РазукомплектацияОС.Ссылка)
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|		ПО ПараметрыАмортизацииОСУУ.ОсновноеСредство = ТаблицаДокумента.ОсновноеСредство
	|			И ПараметрыАмортизацииОСУУ.Организация = ТаблицаДокумента.Организация
	|			И ПараметрыАмортизацииОСУУ.Период < ТаблицаДокумента.Дата
	|			И ПараметрыАмортизацииОСУУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСУУ_Период.Ссылка КАК Ссылка,
	|	ПараметрыАмортизацииОСУУ_Период.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСУУ
	|
	|ИЗ
	|	ПараметрыАмортизацииОСУУ_Период КАК ПараметрыАмортизацииОСУУ_Период
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|		ПО ПараметрыАмортизацииОСУУ.ОсновноеСредство = ПараметрыАмортизацииОСУУ_Период.ОсновноеСредство
	|			И ПараметрыАмортизацииОСУУ.Организация = ПараметрыАмортизацииОСУУ_Период.Организация
	|			И ПараметрыАмортизацииОСУУ.Период = ПараметрыАмортизацииОСУУ_Период.Период
	|			И ПараметрыАмортизацииОСУУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Номер КАК НомерДокумента,
	|	ТаблицаДокумента.Дата КАК ДатаДокумента,
	|
	|	СУММА(ТаблицаОС.СтоимостьУУ) КАК ОбщаяСтоимостьУУ,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.Стоимость, 0)) - МАКСИМУМ(ЕСТЬNULL(ПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимость, 0)) КАК ИсходнаяСтоимостьУУ,
	|
	|	СУММА(ТаблицаОС.СтоимостьБУ) КАК ОбщаяСтоимостьБУ,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) КАК ИсходнаяСтоимостьБУ,
	|
	|	СУММА(ТаблицаОС.СтоимостьНУ) КАК ОбщаяСтоимостьНУ,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьНУ, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьНУЦФ, 0)) КАК ИсходнаяСтоимостьНУ
	|
	|ИЗ
	|	ВТ_РазукомплектацияОС КАК ВТ_РазукомплектацияОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК ТаблицаДокумента
	|		ПО (ТаблицаДокумента.Ссылка = ВТ_РазукомплектацияОС.Ссылка)
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|		ПО (ТаблицаОС.Ссылка = ТаблицаДокумента.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК ВТ_СтоимостьВНА
	|		ПО (ВТ_СтоимостьВНА.ОбъектУчета = ТаблицаДокумента.ОсновноеСредство)
	|			И (ВТ_СтоимостьВНА.Ссылка = ТаблицаДокумента.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|		ПО (ПараметрыАмортизацииОСУУ.ОсновноеСредство = ТаблицаДокумента.ОсновноеСредство)
	|			И (ПараметрыАмортизацииОСУУ.Ссылка = ТаблицаДокумента.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.ХозяйственнаяОперация,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Номер,
	|	ТаблицаДокумента.Дата
	|
	|ИМЕЮЩИЕ
	|	ТаблицаДокумента.ХозяйственнаяОперация В(
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазукомплектацияОСЧастичная), 
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации))
	|		И (СУММА(ТаблицаОС.СтоимостьУУ) >= (МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.Стоимость, 0)) - МАКСИМУМ(ЕСТЬNULL(ПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимость, 0)))
	|			ИЛИ СУММА(ТаблицаОС.СтоимостьБУ) >= МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0))
	|			ИЛИ СУММА(ТаблицаОС.СтоимостьНУ) >= МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьНУ, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьНУЦФ, 0)))
	|
	|	ИЛИ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазукомплектацияОСПолная)
	|		И (СУММА(ТаблицаОС.СтоимостьУУ) <> МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.Стоимость, 0))
	|			ИЛИ СУММА(ТаблицаОС.СтоимостьБУ) <> МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0))
	|			ИЛИ СУММА(ТаблицаОС.СтоимостьНУ) <> МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьНУ, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьНУЦФ, 0)))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_РазукомплектацияОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПараметрыАмортизацииОСУУ_Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПараметрыАмортизацииОСУУ
	|";
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ВалютаУпр = Строка(Константы.ВалютаУправленческогоУчета.Получить());
	
	Пока Выборка.Следующий() Цикл
		
		#Область УУ
		Если (Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазукомплектацияОСЧастичная
			Или Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
			И Выборка.ОбщаяСтоимостьУУ >= Выборка.ИсходнаяСтоимостьУУ
			И Выборка.ОбщаяСтоимостьУУ <> 0 Тогда
			
			ДокументыСОшибками.Добавить(Выборка.Ссылка);
			
			ОписаниеПроблемы = НСтр("ru = 'В документе Разукомплектация ОС №%1 от %2 общая стоимость, принимаемых к учету ОС в управленческом учете (%3 %4) должна быть меньше стоимости исходного ОС (%5 %6).';
									|en = 'In ""Split fixed assets"" document No.%1 dated %2, the total value of recognized fixed assets in management accounting (%3 %4) must be less than the original fixed asset value (%5 %6).'");
			
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
										Выборка.НомерДокумента, 
										Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
										Выборка.ОбщаяСтоимостьУУ,
										ВалютаУпр,
										Выборка.ИсходнаяСтоимостьУУ,
										ВалютаУпр);
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам, 
				ПараметрыВыполнения.КонецПериода,
				Выборка.Организация,
				ОписаниеПроблемы,,
				Выборка.Ссылка);
			
		КонецЕсли; 
				
		Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазукомплектацияОСПолная
			И Выборка.ОбщаяСтоимостьУУ <> Выборка.ИсходнаяСтоимостьУУ
			И Выборка.ОбщаяСтоимостьУУ <> 0 Тогда
			
			ДокументыСОшибками.Добавить(Выборка.Ссылка);
			
			ОписаниеПроблемы = НСтр("ru = 'В документе Разукомплектация ОС №%1 от %2 общая стоимость, принимаемых к учету ОС в управленческом учете (%3 %4) должна равняться стоимости исходного ОС (%5 %6).';
									|en = 'In ""Split fixed assets"" document No.%1 dated %2, the total value of recognized fixed assets in management accounting (%3 %4) must be equal to the original fixed asset value (%5 %6).'");
			
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
										Выборка.НомерДокумента, 
										Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
										Выборка.ОбщаяСтоимостьУУ,
										ВалютаУпр,
										Выборка.ИсходнаяСтоимостьУУ,
										ВалютаУпр);
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам, 
				ПараметрыВыполнения.КонецПериода,
				Выборка.Организация,
				ОписаниеПроблемы,,
				Выборка.Ссылка);
			
		КонецЕсли; 
		#КонецОбласти
				
		#Область БУ
		Если (Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазукомплектацияОСЧастичная
			Или Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
			И Выборка.ОбщаяСтоимостьБУ >= Выборка.ИсходнаяСтоимостьБУ
			И Выборка.ОбщаяСтоимостьБУ <> 0 Тогда
			
			ДокументыСОшибками.Добавить(Выборка.Ссылка);
			
			ОписаниеПроблемы = НСтр("ru = 'В документе Разукомплектация ОС №%1 от %2 общая стоимость, принимаемых к учету ОС в бухгалтерском учете (%3 %4) должна быть меньше стоимости исходного ОС (%5 %6).';
									|en = 'In ""Split fixed assets"" document No. %1 dated %2, the total cost of recognized fixed assets in local accounting (%3 %4) must be less than the original fixed assets cost (%5 %6).'");
			
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
										Выборка.НомерДокумента, 
										Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
										Выборка.ОбщаяСтоимостьБУ,
										ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Выборка.Организация),
										Выборка.ИсходнаяСтоимостьБУ,
										ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Выборка.Организация));
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам, 
				ПараметрыВыполнения.КонецПериода,
				Выборка.Организация,
				ОписаниеПроблемы,,
				Выборка.Ссылка);
			
		КонецЕсли; 
				
		Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазукомплектацияОСПолная
			И Выборка.ОбщаяСтоимостьБУ <> Выборка.ИсходнаяСтоимостьБУ
			И Выборка.ОбщаяСтоимостьБУ <> 0 Тогда
			
			ОписаниеПроблемы = НСтр("ru = 'В документе Разукомплектация ОС №%1 от %2 общая стоимость, принимаемых к учету ОС в бухгалтерском учете (%3 %4) должна равняться стоимости исходного ОС (%5 %6).';
									|en = 'In ""Split fixed assets"" document No. %1 dated %2, the total cost of recognized fixed assets in local accounting (%3 %4) must be equal to the original fixed assets cost (%5 %6).'");
			
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
										Выборка.НомерДокумента, 
										Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
										Выборка.ОбщаяСтоимостьБУ,
										ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Выборка.Организация),
										Выборка.ИсходнаяСтоимостьБУ,
										ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Выборка.Организация));
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам, 
				ПараметрыВыполнения.КонецПериода,
				Выборка.Организация,
				ОписаниеПроблемы,,
				Выборка.Ссылка);
			
		КонецЕсли; 
		#КонецОбласти
		
		#Область НУ
		Если (Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазукомплектацияОСЧастичная
			Или Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
			И Выборка.ОбщаяСтоимостьНУ >= Выборка.ИсходнаяСтоимостьНУ
			И Выборка.ОбщаяСтоимостьНУ <> 0 Тогда
			
			ДокументыСОшибками.Добавить(Выборка.Ссылка);
			
			ОписаниеПроблемы = НСтр("ru = 'В документе Разукомплектация ОС №%1 от %2 общая стоимость, принимаемых к учету ОС в налоговом учете (%3 %4) должна быть меньше стоимости исходного ОС (%5 %6).';
									|en = 'In ""Split fixed assets"" document No.%1 dated %2, the total value of recognized fixed assets in tax accounting (%3 %4) must be less than the original fixed asset value (%5 %6).'");
			
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
										Выборка.НомерДокумента, 
										Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
										Выборка.ОбщаяСтоимостьНУ,
										ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Выборка.Организация),
										Выборка.ИсходнаяСтоимостьНУ,
										ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Выборка.Организация));
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам, 
				ПараметрыВыполнения.КонецПериода,
				Выборка.Организация,
				ОписаниеПроблемы,,
				Выборка.Ссылка);
			
		КонецЕсли; 
				
		Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазукомплектацияОСПолная
			И Выборка.ОбщаяСтоимостьНУ <> Выборка.ИсходнаяСтоимостьНУ
			И Выборка.ОбщаяСтоимостьНУ <> 0 Тогда
			
			ДокументыСОшибками.Добавить(Выборка.Ссылка);
			
			ОписаниеПроблемы = НСтр("ru = 'В документе Разукомплектация ОС №%1 от %2 общая стоимость, принимаемых к учету ОС в налоговом учете (%3 %4) должна равняться стоимости исходного ОС (%5 %6).';
									|en = 'In ""Split fixed assets"" document No.%1 dated %2, the total value of recognized fixed assets in tax accounting (%3 %4) must be equal to the original fixed asset value (%5 %6).'");
			
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
										Выборка.НомерДокумента, 
										Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
										Выборка.ОбщаяСтоимостьНУ,
										ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Выборка.Организация),
										Выборка.ИсходнаяСтоимостьНУ,
										ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Выборка.Организация));
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам, 
				ПараметрыВыполнения.КонецПериода,
				Выборка.Организация,
				ОписаниеПроблемы,,
				Выборка.Ссылка);
			
		КонецЕсли; 
		#КонецОбласти
				
	КонецЦикла; 
	
	#КонецОбласти
	
	#Область РеализацияДоПодготовкиКПередаче
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаРасходы.ВнеоборотныйАктив
	|
	|ПОМЕСТИТЬ ТаблицаВНА
	|
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаРасходы
	|
	|ГДЕ
	|	ТаблицаРасходы.Ссылка В (
	|		ВЫБРАТЬ
	|			ВтПорцияДанныхКРасчету.Ссылка
	|		ИЗ
	|			ВтПорцияДанныхКРасчету КАК ВтПорцияДанныхКРасчету
	|		ГДЕ
	|			ТИПЗНАЧЕНИЯ(ВтПорцияДанныхКРасчету.Ссылка) = ТИП(Документ.РеализацияУслугПрочихАктивов))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведения.Организация КАК Организация,
	|	ПервоначальныеСведения.ОсновноеСредство КАК ВнеоборотныйАктив,
	|	ЕСТЬNULL(ПодготовкаКПередаче.Дата, ДАТАВРЕМЯ(1,1,1)) КАК ДатаСписания,
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатацию
	|
	|ПОМЕСТИТЬ ПервоначальныеСведения
	|
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|		&КонецМесяца,
	|		ОсновноеСредство В (
	|			ВЫБРАТЬ
	|				ТаблицаВНА.ВнеоборотныйАктив
	|			ИЗ
	|				ТаблицаВНА КАК ТаблицаВНА)) КАК ПервоначальныеСведения
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеОС2_4 КАК ПодготовкаКПередаче
	|		ПО (ПодготовкаКПередаче.Ссылка = ПервоначальныеСведения.ДокументСнятияСУчетаУУ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПервоначальныеСведения.Организация КАК Организация,
	|	ПервоначальныеСведения.НематериальныйАктив КАК ВнеоборотныйАктив,
	|	ЕСТЬNULL(ПодготовкаКПередаче.Дата, ДАТАВРЕМЯ(1,1,1)) КАК ДатаСписания,
	|	ПервоначальныеСведения.ДатаПринятияКУчетуУУ КАК ДатаВводаВЭксплуатацию
	|
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|		&КонецМесяца,
	|		НематериальныйАктив В (
	|			ВЫБРАТЬ
	|				ТаблицаВНА.ВнеоборотныйАктив
	|			ИЗ
	|				ТаблицаВНА КАК ТаблицаВНА)) КАК ПервоначальныеСведения
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеНМА2_4 КАК ПодготовкаКПередаче
	|		ПО (ПодготовкаКПередаче.Ссылка = ПервоначальныеСведения.ДокументСписания)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтПорцияДанныхКРасчету.Ссылка КАК Ссылка,
	|	ВтПорцияДанныхКРасчету.Организация КАК Организация,
	|	ТаблицаДокумента.Номер КАК НомерДокумента,
	|	ТаблицаДокумента.Дата КАК ДатаДокумента,
	|	ВтПорцияДанныхКРасчету.Дата КАК Дата,
	|	ТаблицаРасходы.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ЕСТЬNULL(ТаблицаРасходы.НомерСтроки, 0) КАК НомерСтроки
	|
	|ИЗ
	|	ВтПорцияДанныхКРасчету КАК ВтПорцияДанныхКРасчету
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК ТаблицаДокумента
	|		ПО (ТаблицаДокумента.Ссылка = ВтПорцияДанныхКРасчету.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаРасходы
	|		ПО (ТаблицаРасходы.Ссылка = ВтПорцияДанныхКРасчету.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведения КАК ПервоначальныеСведения
	|		ПО (ПервоначальныеСведения.ВнеоборотныйАктив = ТаблицаРасходы.ВнеоборотныйАктив)
	|			И (ПервоначальныеСведения.Организация = ТаблицаДокумента.Организация)
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ВтПорцияДанныхКРасчету.Ссылка) = ТИП(Документ.РеализацияУслугПрочихАктивов)
	|	И ЕСТЬNULL(ПервоначальныеСведения.ДатаВводаВЭксплуатацию, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1)
	|	И (ЕСТЬNULL(ПервоначальныеСведения.ДатаСписания, ДАТАВРЕМЯ(1,1,1)) = ДАТАВРЕМЯ(1,1,1)
	|			ИЛИ ЕСТЬNULL(НАЧАЛОПЕРИОДА(ПервоначальныеСведения.ДатаСписания, ДЕНЬ), ДАТАВРЕМЯ(1,1,1)) > НАЧАЛОПЕРИОДА(ТаблицаДокумента.Дата, ДЕНЬ))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокументыСОшибками.Добавить(Выборка.Ссылка);
		
		ОписаниеПроблемы = НСтр("ru = 'Реализация услуг и прочих активов №%1 от %2 для внеоборотного актива %3 оформлена раньше чем подготовка к передаче.';
								|en = 'Customer invoice — Services and Assets #%1 from %2 for fixed asset %3 is registered earlier than preparations for the transfer.'");
		
		ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
									Выборка.НомерДокумента, 
									Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
									Выборка.ВнеоборотныйАктив);
		
		ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
			Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам, 
			ПараметрыВыполнения.КонецПериода,
			Выборка.Организация,
			ОписаниеПроблемы,,
			Выборка.Ссылка);
				
	КонецЦикла; 
	#КонецОбласти
	
	#Область СписаниеПереданныхВАренду
	
	Если ПолучитьФункциональнуюОпцию("ИспользуетсяПередачаВАрендуСубарендуПоФСБУ25") Тогда
		
		ТекстыЗапроса = Новый СписокЗначений;

		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВтПорцияДанныхКРасчету.Ссылка КАК Ссылка,
		|	ВтПорцияДанныхКРасчету.Период КАК Период,
		|	ВтПорцияДанныхКРасчету.Организация КАК Организация,
		|	ВтПорцияДанныхКРасчету.ОбъектУчета КАК ОсновноеСредство
		|
		|ПОМЕСТИТЬ ВтСписокОС
		|
		|ИЗ
		|	ВтПорцияДанныхКРасчету КАК ВтПорцияДанныхКРасчету
		|
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ВтПорцияДанныхКРасчету.Ссылка) В (
		|		ТИП(Документ.ОбъединениеОС),
		|		ТИП(Документ.РазукомплектацияОС),
		|		ТИП(Документ.СписаниеОС2_4),
		|		ТИП(Документ.ПодготовкаКПередачеОС2_4))
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	Организация
		|";
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ВтСписокОС");
		
		ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПереданныеВАрендуОС(ТекстыЗапроса, "ВтПорцияДанныхКРасчету");
			
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВтСписокОС.Ссылка КАК Ссылка,
		|	ВтСписокОС.Организация КАК Организация,
		|	ВтСписокОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ВЫРАЗИТЬ(ВтСписокОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации).Наименование КАК ОсновноеСредствоНаименование
		|
		|ИЗ
		|	ВтСписокОС КАК ВтСписокОС
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтПереданныеВАрендуОС КАК ВтПереданныеВАрендуОС
		|		ПО ВтПереданныеВАрендуОС.Ссылка = ВтСписокОС.Ссылка
		|			И ВтПереданныеВАрендуОС.Организация = ВтСписокОС.Организация
		|			И ВтПереданныеВАрендуОС.ОсновноеСредство = ВтСписокОС.ОсновноеСредство
		|
		|ГДЕ
		|	ВтПереданныеВАрендуОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПереданоВАренду)
		|	И ВЫРАЗИТЬ(ВтПереданныеВАрендуОС.Договор КАК Справочник.ДоговорыКонтрагентов).ТипДоговора В (&ТипыДоговоровПоФСБУ25)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	ОсновноеСредство";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
		ТекстЗапроса = СтрСоединить(ТекстыЗапроса.ВыгрузитьЗначения(), ОбщегоНазначения.РазделительПакетаЗапросов());
		
		Запрос.Текст = ТекстЗапроса;
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ДокументыСОшибками.Добавить(Выборка.Ссылка);
			
			Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ПодготовкаКПередачеОС2_4") Тогда
				ОписаниеПроблемы = НСтр("ru = 'Перед подготовкой к передаче основного средства ""%1"" переданного в аренду, необходимо оформить возврат из аренды.';
										|en = 'Before you prepare for sale of the %1 fixed asset provided to the lessee, register the return from the lessee.'");
			Иначе
				ОписаниеПроблемы = НСтр("ru = 'Перед списанием основного средства ""%1"" переданного в аренду, необходимо оформить возврат из аренды.';
										|en = 'Before you write off the %1 fixed asset provided to the lessee, register the return from the lessee.'");
			КонецЕсли;
			
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, Выборка.ОсновноеСредствоНаименование);
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам, 
				ПараметрыВыполнения.КонецПериода,
				Выборка.Организация,
				ОписаниеПроблемы,,
				Выборка.Ссылка);
					
		КонецЦикла; 

	КонецЕсли;
	#КонецОбласти
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыВыполнения.МенеджерВременныхТаблиц,, ИспользуемыеВТ);
		
	ОтложенноеФормированиеДвиженийВНАЛокализация.ПроверитьОтложенноеФормированиеДвижений(ПараметрыВыполнения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВтПорцияДанныхКРасчету.ОбъектУчета
	|
	|ПОМЕСТИТЬ ВтОшибки
	|
	|ИЗ
	|	ВтПорцияДанныхКРасчету КАК ВтПорцияДанныхКРасчету
	|
	|ГДЕ
	|	ВтПорцияДанныхКРасчету.Ссылка В (&ДокументыСОшибками)
	|";
	Запрос.УстановитьПараметр("ДокументыСОшибками", ДокументыСОшибками);
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыВыполнения.МенеджерВременныхТаблиц,, ИспользуемыеВТ);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, 1);
	
КонецПроцедуры

Процедура УдалитьЗаданияПорцииДанных(Период, ПараметрыВыполнения)
	
	Если НЕ ПараметрыВыполнения.УдалитьЗадания Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ОтложенноеФормированиеДвиженийВНА.УдалитьЗаданияПорцииДанных");

	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ПараметрыВыполнения.МенеджерВременныхТаблиц);

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтВсеДанныеКРасчету.ОбъектУчета КАК ОбъектУчета
	|
	|ПОМЕСТИТЬ ВтНеобработанныеДанные
	|
	|ИЗ
	|	ВтВсеДанныеКРасчету КАК ВтВсеДанныеКРасчету
	|
	|ГДЕ
	|	НЕ ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				ОбработанныеДанные КАК ОбработанныеДанные
	|			ГДЕ
	|				ОбработанныеДанные.Ссылка = ВтВсеДанныеКРасчету.Ссылка
	|				И НЕ ОбработанныеДанные.ЕстьОшибки)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтПорцияДанныхКРасчету.ОбъектУчета КАК ОбъектУчета
	|
	|ПОМЕСТИТЬ ВтЗаданияКУдалению
	|
	|ИЗ
	|	ВтПорцияДанныхКРасчету КАК ВтПорцияДанныхКРасчету
	|
	|ГДЕ
	|	НЕ ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				ВтНеобработанныеДанные КАК ВтНеобработанныеДанные
	|			ГДЕ
	|				ВтНеобработанныеДанные.ОбъектУчета = ВтПорцияДанныхКРасчету.ОбъектУчета)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоВНА.ЗафиксироватьРасчет(
		Период,
		ПараметрыВыполнения.СписокОрганизаций, 
		ПараметрыВыполнения.НомерДоРасчета, 
		ПараметрыВыполнения.МенеджерВременныхТаблиц,
		"ВтЗаданияКУдалению");

	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыВыполнения.МенеджерВременныхТаблиц,, ИспользуемыеВТ);

	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, 1);
	
КонецПроцедуры

Процедура УдалитьЗаданияПоДату(ПараметрыВыполнения)
	
	Если НЕ ПараметрыВыполнения.УдалитьЗадания Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ОтложенноеФормированиеДвиженийВНА.УдалитьЗаданияПоДату");

	РегистрыСведений.ЗаданияКФормированиюДвиженийПоВНА.ЗафиксироватьРасчет(
		ПараметрыВыполнения.КонецПериода,
		ПараметрыВыполнения.СписокОрганизаций, 
		ПараметрыВыполнения.НомерДоРасчета, 
		ПараметрыВыполнения.МенеджерВременныхТаблиц,
		"СписокОбъектов");
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, 1);
	
КонецПроцедуры

Процедура ЗапомнитьОбработанныеДанные(ПараметрыВыполнения)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВтПорцияДанныхКРасчету.Ссылка КАК Ссылка,
	|	ВтПорцияДанныхКРасчету.ОбъектУчета КАК ОбъектУчета,
	|	ВЫБОР
	|		КОГДА ИСТИНА В (
	|				ВЫБРАТЬ ПЕРВЫЕ 1
	|					ИСТИНА
	|				ИЗ
	|					ВтОшибки КАК ВтОшибки
	|				ГДЕ
	|					ВтОшибки.ОбъектУчета = ВтПорцияДанныхКРасчету.ОбъектУчета)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ ЕстьОшибки
	|
	|ПОМЕСТИТЬ ОбработанныеДанные_Временная
	|
	|ИЗ
	|	ВтПорцияДанныхКРасчету КАК ВтПорцияДанныхКРасчету
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбработанныеДанные.Ссылка КАК Ссылка,
	|	ОбработанныеДанные.ОбъектУчета КАК ОбъектУчета,
	|	ОбработанныеДанные.ЕстьОшибки КАК ЕстьОшибки
	|ИЗ
	|	ОбработанныеДанные КАК ОбработанныеДанные
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОбработанныеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбработанныеДанные.Ссылка КАК Ссылка,
	|	ОбработанныеДанные.ОбъектУчета КАК ОбъектУчета,
	|	ОбработанныеДанные.ЕстьОшибки КАК ЕстьОшибки
	|
	|ПОМЕСТИТЬ ОбработанныеДанные
	|
	|ИЗ
	|	ОбработанныеДанные_Временная КАК ОбработанныеДанные
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОбработанныеДанные_Временная
	|";
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция СоздатьОчередьЗаданий(НачалоПериода, КонецПериода, СписокОрганизаций, НомерДоРасчета, МенеджерВременныхТаблиц, ИмяОперации, УдалитьЗадания)

	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);

	МаксимальноеКоличествоЗаданий = МаксимальноеКоличествоЗаданий();

	ОчередьЗаданийКРасчету = ВнеоборотныеАктивы.ОчередьЗаданийКРасчету();
	
	СформироватьТаблицуВтСписокДокументов(НачалоПериода, КонецПериода, СписокОрганизаций, МенеджерВременныхТаблиц);

	ОчередьОбъектов = ВнеоборотныеАктивы.ОчередьОбъектовСЛУ(
		НачалоПериода, 
		КонецПериода, 
		СписокОрганизаций, 
		МаксимальноеКоличествоЗаданий, 
		МенеджерВременныхТаблиц);
	
	МаксимальныйНомерОчереди = 1;
	Для Каждого Выборка Из ОчередьОбъектов Цикл
		МаксимальныйНомерОчереди = Макс(Выборка.НомерОчереди, МаксимальныйНомерОчереди);
	КонецЦикла;
	
	Для Каждого Выборка Из ОчередьОбъектов Цикл
		
		Если ОчередьЗаданийКРасчету.Количество() < Выборка.НомерОчереди Тогда
			
			ДанныеЗадания = ОчередьЗаданийКРасчету.Добавить();
			ДанныеЗадания.ПроцедураРасчета = "ОтложенноеФормированиеДвиженийВНА.ВыполнитьОперациюПоОбъектам";
			
			Если МаксимальноеКоличествоЗаданий > 1 Тогда
				ДанныеЗадания.НаименованиеФоновогоЗадания = 
					СтрШаблон(
					НСтр("ru = 'Формирование движений по ОС и НМА (задание %1 из %2)';
						|en = 'Generate fixed asset and intangible asset records (job %1 out of %2)'"), 
					Формат(Выборка.НомерОчереди, "ЧЦ=2; ЧВН=; ЧГ=;"), 
					МаксимальныйНомерОчереди); 
			Иначе
				ДанныеЗадания.НаименованиеФоновогоЗадания = НСтр("ru = 'Формирование движений по ОС и НМА';
																|en = 'Fixed assets and intangible assets movement generation'"); 
			КонецЕсли;

			ПараметрыВыполнения = ПараметрыВыполнения();
			ПараметрыВыполнения.КонецПериода = КонецМесяца(КонецПериода);
			ПараметрыВыполнения.СписокОрганизаций = СписокОрганизаций;
			ПараметрыВыполнения.ВыполнитьПроверку = Истина;
			ПараметрыВыполнения.НомерДоРасчета = НомерДоРасчета;
			ПараметрыВыполнения.ИмяОперации = ИмяОперации;
			ПараметрыВыполнения.УдалитьЗадания = УдалитьЗадания;
			
			ДанныеЗадания.ПараметрыЗадания = ПараметрыВыполнения;
			
		Иначе
			ДанныеЗадания = ОчередьЗаданийКРасчету[Выборка.НомерОчереди - 1];
		КонецЕсли;
		
		ПараметрыОбъекта = ДанныеЗадания.ПараметрыЗадания.СписокОбъектов.Добавить();
		ПараметрыОбъекта.ОбъектУчета = Выборка.ОбъектУчета;
		ПараметрыОбъекта.НачалоПериода = НачалоМесяца(Выборка.Месяц);
		
	КонецЦикла;

	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВТ);
	
	Возврат ОчередьЗаданийКРасчету;
	
КонецФункции

Процедура СформироватьТаблицуВтСписокДокументов(НачалоПериода, КонецПериода, СписокОрганизаций, МенеджерВременныхТаблиц)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТекущиеДокументы.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ ВтСписокДокументов
	|
	|ИЗ
	|	РегистрСведений.ДокументыПоОС КАК ТекущиеДокументы
	|
	|ГДЕ
	|	ТекущиеДокументы.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТекущиеДокументы.Организация В (&СписокОрганизаций)
	|	И ТекущиеДокументы.ТипСсылки В (&ИдентификаторыДокументов)
	|	И ТекущиеДокументы.Проведен
	|
	|	И ТекущиеДокументы.ОсновноеСредство В (
	|			ВЫБРАТЬ
	|				ЗаданияКРасчету.ОбъектУчета
	|			ИЗ
	|				ЗаданияКРасчету КАК ЗаданияКРасчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТекущиеДокументы.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.ДокументыПоНМА КАК ТекущиеДокументы
	|
	|ГДЕ
	|	ТекущиеДокументы.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТекущиеДокументы.Организация В (&СписокОрганизаций)
	|	И ТекущиеДокументы.ТипСсылки В (&ИдентификаторыДокументов)
	|	И ТекущиеДокументы.Проведен
	|
	|	И ТекущиеДокументы.НематериальныйАктив В (
	|			ВЫБРАТЬ
	|				ЗаданияКРасчету.ОбъектУчета
	|			ИЗ
	|				ЗаданияКРасчету КАК ЗаданияКРасчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	
	Запрос.УстановитьПараметр("ИдентификаторыДокументов", 
		ВнеоборотныеАктивыПовтИсп.ИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения());
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ЕстьДокументыПоКоторымФормируютсяДвижения(ПараметрыОбработчика)

	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ПараметрыРасчета.Период) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
	|ГДЕ
	|	ДокументыПоОС.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ДокументыПоОС.Организация В(&Организация)
	|	И ДокументыПоОС.Проведен
	|	И ДокументыПоОС.ТипСсылки В(&ТипыДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрСведений.ДокументыПоНМА КАК ДокументыПоНМА
	|ГДЕ
	|	ДокументыПоНМА.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ДокументыПоНМА.Организация В(&Организация)
	|	И ДокументыПоНМА.Проведен
	|	И ДокументыПоНМА.ТипСсылки В(&ТипыДокументов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ПараметрыРасчета.Период));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПараметрыРасчета.Период));
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ТипыДокументов", ВнеоборотныеАктивыПовтИсп.ИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения());
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();

КонецФункции

#КонецОбласти

#Область Прочее

Процедура УстановитьПризнакВыполненияОперации(ДокументОбъект, ИмяОперации = "") Экспорт
	
	Если ИмяОперации = "" Тогда
		ИмяОперации = ИмяПризнакаВыполненияОперации();
	КонецЕсли;
	
	ДокументОбъект.ДополнительныеСвойства.Вставить(ИмяОперации, Истина);
	
КонецПроцедуры

Функция МаксимальноеКоличествоЗаданий()

	ЗначенияПараметров = Константы.НастройкиЗакрытияМесяца.СоздатьМенеджерЗначения().УстановленныеЗначенияПараметровОперации(
  							Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам); // Число
							
	МаксимальноеКоличествоЗаданий = ЗначенияПараметров.МаксимальноеКоличествоЗаданий; // Число
	
	Возврат МаксимальноеКоличествоЗаданий;

КонецФункции

Функция РазмерПорцииДанных()
	
	ЗначенияПараметров = Константы.НастройкиЗакрытияМесяца.СоздатьМенеджерЗначения().УстановленныеЗначенияПараметровОперации(
  							Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам);
  							
	РазмерПорцииДанных = ЗначенияПараметров.РазмерПорцииДанных; // Число
	 		
	Возврат РазмерПорцииДанных;
	
КонецФункции

Функция ТипыДокументовКоторыеМогутИзменитьСтоимость()

	ТипыОбъектов = Новый Массив;
	
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("ПринятиеКУчетуОС2_4", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("ПринятиеКУчетуУзловКомпонентовАмортизации", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("МодернизацияОС2_4", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("АмортизацияОС2_4", Ложь, ТипыОбъектов);
	
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("ПринятиеКУчетуНМА2_4", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("УлучшениеНМА", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("АмортизацияНМА2_4", Ложь, ТипыОбъектов);
	
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("ИзменениеУсловийДоговораАренды", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("ПередачаОСВАренду2_4", Ложь, ТипыОбъектов);
	
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("КорректировкаРегистров", Ложь, ТипыОбъектов);

	ВнеоборотныеАктивыЛокализация.ДополнитьТипыДокументовКоторыеМогутИзменитьСтоимость(ТипыОбъектов);
	
	Возврат ТипыОбъектов;
	
КонецФункции

Функция ТипыДокументовКоторыеМогутНачислитьАмортизацию()

	ТипыОбъектов = Новый Массив;
	
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("АмортизацияОС2_4", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("АмортизацияНМА2_4", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("КорректировкаРегистров", Ложь, ТипыОбъектов);
	
	Возврат ТипыОбъектов;
	
КонецФункции

Функция ТипыДокументовКоторыеИзменяютСтоимостьВКонцеМесяца()
	
	ТипыОбъектов = Новый Массив;
	
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("АмортизацияОС2_4", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("АмортизацияНМА2_4", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("КорректировкаРегистров", Ложь, ТипыОбъектов);
	
	ОтложенноеФормированиеДвиженийВНАЛокализация.ДополнитьТипыДокументовКоторыеИзменяютСтоимостьВКонцеМесяца(ТипыОбъектов);

	Возврат ТипыОбъектов;
	
КонецФункции

Функция ТипыДокументовСписания()
	
	ТипыОбъектов = Новый Массив;
	
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("СписаниеОС2_4", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("СписаниеНМА2_4", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("ПодготовкаКПередачеОС2_4", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("ПодготовкаКПередачеНМА2_4", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("ПрекращениеДоговораАренды", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("ПередачаОСВАренду2_4", Ложь, ТипыОбъектов);
	
	Возврат ТипыОбъектов;
	
КонецФункции

Функция ТипыДокументовНеПоддерживающихПакетныйРежим()
	
	ТипыДокументов = Новый Массив;
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ВыкупАрендованныхОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ЗаключениеДоговораАренды"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ИзменениеУсловийДоговораАренды"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.НачислениеСписаниеРезервовПредстоящихРасходов"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПрекращениеДоговораАренды"));
	
	Возврат ТипыДокументов;
	
КонецФункции

Процедура СформироватьТаблицуРасчетыПоФинансовымИнструментамВРазрезеОС(ДанныеТаблиц)

	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("РасчетыПоФинансовымИнструментамИзменение") = Неопределено Тогда
		Возврат;	
	КонецЕсли;
		
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Период                  КАК Период,
	|	Таблица.Организация             КАК Организация,
	|	АрендованныеОС.ОсновноеСредство КАК ОбъектУчета,
	|	Таблица.Регистратор             КАК Документ
	|
	|ПОМЕСТИТЬ РасчетыПоФинансовымИнструментамВРазрезеОСИзменение
	|
	|ИЗ
	|	РасчетыПоФинансовымИнструментамИзменение КАК Таблица
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АрендованныеОС КАК АрендованныеОС
	|		ПО АрендованныеОС.Договор = Таблица.Договор
	|ГДЕ
	|	Таблица.Договор ССЫЛКА Справочник.ДоговорыАренды
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
		
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	ДанныеТаблиц.Вставить("РасчетыПоФинансовымИнструментамВРазрезеОСИзменение", Выборка.Количество > 0);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
