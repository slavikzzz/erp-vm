// АПК:142-выкл 
// АПК:134-выкл 
// АПК:293-выкл 

#Область СлужебныеПроцедурыИФункции

// РегламентированныйОтчетЕФС1ОСС

Процедура ОписаниеПоказателей_РегламентированныйОтчетЕФС1ОСС_2023Кв1(ПоказателиОтчета, ПараметрыОтчета, ИспользоватьСКЕ = Неопределено) Экспорт
	
	// АПК:1036-выкл 
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020000200",Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020000100",Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020000300", Истина, Ложь);
	// АПК:1036-вкл 
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210Льгота", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П002110000100", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000104", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000105", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000106", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000107", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000204", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000205", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000206", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000207", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000404", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000405", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000406", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000407", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000503", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000904", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000905", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000906", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000210000907", Истина, Истина);
	
	// Раздел СКЕ будем заполнять только тогда, когда его попросили пользователи.
	Если ИспользоватьСКЕ = Неопределено Тогда
		ИспользоватьСКЕ = Ложь;
		Если ТипЗнч(ПараметрыОтчета) = Тип("Структура") Тогда
			Организация = Неопределено;
			ИспользоватьСКЕ = ПараметрыОтчета.Свойство("Организация", Организация) И ПолучитьФункциональнуюОпцию("ИспользоватьСамостоятельныеКлассификационныеЕдиницы", Новый Структура("Организация",Организация))
		КонецЕсли;
	КонецЕсли;
	Если ИспользоватьСКЕ Тогда
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100002", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100003", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100004", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100005", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100011", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100012", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100013", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100014", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100015", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100016", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100017", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100018", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100020", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100021", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100022", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100023", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М100024", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200001", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200002", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200003", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200004", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200005", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200011", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200012", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200013", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200014", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200015", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200016", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200017", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200018", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200020", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200021", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200022", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200023", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00211М200024", Истина, Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗначенияПоказателей_РегламентированныйОтчетЕФС1ОСС_2023Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаКонцаПериодаОтчета;
	Если Не УчетСтраховыхВзносов.ОрганизацияОтчитываетсяПоВзносамСамостоятельно(Организация, ДатаКонцаПериодаОтчета) Тогда
		Возврат
	КонецЕсли;
	ОрганизацииДляСбораДанных = УчетСтраховыхВзносов.ОрганизацииДляКонсолидацииОтчетовПоВзносам(Организация, ДатаКонцаПериодаОтчета);
	
	НачалоТекущегоКвартала = НачалоКвартала(ДатаКонцаПериодаОтчета);
	НачалоПериода = НачалоГода(ДатаКонцаПериодаОтчета);
	ОкончаниеПериода = КонецМесяца(ДатаКонцаПериодаОтчета);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОтложенноеПроведениеДокументов") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОтражениеДокументовВУчетеСтраховыхВзносов");
		Для каждого ТекущаяОрганизация Из ОрганизацииДляСбораДанных Цикл
			Модуль.ОтразитьДокументыВУчетеСтраховыхВзносов(ТекущаяОрганизация);
		КонецЦикла;
	КонецЕсли;
	
	ИспользоватьСКЕ = ПолучитьФункциональнуюОпцию("ИспользоватьСамостоятельныеКлассификационныеЕдиницы", Новый Структура("Организация",Организация));
	
	// Очистка контейнера.
	
	ПоказателиОтчета = Новый Структура;
	ОписаниеПоказателей_РегламентированныйОтчетЕФС1ОСС_2023Кв1(ПоказателиОтчета, ПараметрыОтчета, ИспользоватьСКЕ);
	
	Раздел2 = Контейнер.Раздел2.Строки[0].Данные;
	Раздел211 = Контейнер.Раздел211.Строки[0].Данные;
	ОсновнойОКВЭД = Контейнер.Раздел211.Строки[0].ДанныеМногострочныхЧастей.П00211М1.Строки;
	СКЕ = Контейнер.Раздел211.Строки[0].ДанныеМногострочныхЧастей.П00211М2.Строки;
	СтруктураПолейОсновнойОКВЭД = ОбщегоНазначения.СкопироватьРекурсивно(ОсновнойОКВЭД[0].Данные);
	СтруктураПолейСКЕ = ОбщегоНазначения.СкопироватьРекурсивно(СКЕ[0].Данные);
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, Раздел2);
	ОсновнойОКВЭД.Очистить();
	СКЕ.Очистить();
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолейОсновнойОКВЭД);
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолейСКЕ);
	
	// -------------------------------------------------------------------------------
	// Вывод данных в отчет
	
	// Раздел 2
	
	ОписаниеТаблиц = Новый Структура("ЧисленностьЗЛ,ЧисленностьИнвалидов,Доходы2023,Взносы2023" + ?(ИспользоватьСКЕ, ",СКЕ2023,ОсновнойОКВЭД", ""));
	РасчетПоказателей_РегламентированныйОтчетЕФС1ОСС_2023(НачалоПериода, ОкончаниеПериода, ОрганизацииДляСбораДанных, ОписаниеТаблиц);
	Если УчетСтраховыхВзносов.КонсолидироватьОтчетностьПоВсемОП(Организация, НачалоПериода) Тогда
		ДанныеЧисленности = КадровыйУчет.СреднесписочнаяЧисленностьРаботающих(Организация, ПараметрыОтчета.ДатаНачалаПериодаОтчета, ДатаКонцаПериодаОтчета, Истина);
	Иначе
		ДанныеЧисленности = Новый Структура("СреднесписочнаяЧисленностьРаботников, ЧисленностьИнвалидов", 0, 0);
		Для каждого ОП Из ОрганизацииДляСбораДанных Цикл
			ДанныеОП = КадровыйУчет.СреднесписочнаяЧисленностьРаботающих(ОП, ПараметрыОтчета.ДатаНачалаПериодаОтчета, ДатаКонцаПериодаОтчета);
			ДанныеЧисленности.СреднесписочнаяЧисленностьРаботников = ДанныеЧисленности.СреднесписочнаяЧисленностьРаботников + ДанныеОП.СреднесписочнаяЧисленностьРаботников;
			ДанныеЧисленности.ЧисленностьИнвалидов = ДанныеЧисленности.ЧисленностьИнвалидов + ДанныеОП.ЧисленностьИнвалидов;
		КонецЦикла;
	КонецЕсли;
	Раздел2.П000020000100 = ДанныеЧисленности.СреднесписочнаяЧисленностьРаботников;
	Раздел2.П000020000200 = ОписаниеТаблиц.ЧисленностьЗЛ;
	Раздел2.П000020000300 = ОписаниеТаблиц.ЧисленностьИнвалидов;
	
	// Подраздел 2.1
	Если Не ИспользоватьСКЕ Тогда
		Раздел2.П000210000503 = РегистрыСведений.СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев.ПолучитьПоследнее(ОкончаниеПериода,Новый Структура("Организация", Организация)).Ставка;
	КонецЕсли;
	ТаблицаРезультатов = ОписаниеТаблиц.Доходы2023;
	Если ТаблицаРезультатов.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Раздел2, ТаблицаРезультатов[0]);
	КонецЕсли;
	ТаблицаРезультатов = ОписаниеТаблиц.Взносы2023;
	Если ТаблицаРезультатов.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Раздел2, ТаблицаРезультатов[0]);
	КонецЕсли;
	
	// Таблица СКЕ
	Раздел211.П002110000100 = "";
	Если ИспользоватьСКЕ Тогда
		Для каждого СтрокаДанных Из ОписаниеТаблиц.ОсновнойОКВЭД Цикл
			НоваяСтрока = ОсновнойОКВЭД.Добавить();
			НоваяСтрока.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейОсновнойОКВЭД);
			НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
				
			ЗаполнитьЗначенияСвойств(НоваяСтрока.Данные, СтрокаДанных);
		КонецЦикла;
		НомерПП = 1;
		Для каждого СтрокаДанных Из ОписаниеТаблиц.СКЕ2023 Цикл
			НоваяСтрока = СКЕ.Добавить();
			НоваяСтрока.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейСКЕ);
			НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
				
			ЗаполнитьЗначенияСвойств(НоваяСтрока.Данные, СтрокаДанных);
			НоваяСтрока.Данные.П00211М200001 = НомерПП;
			НомерПП = НомерПП + 1;
		КонецЦикла;
		Если СКЕ.Количество() > 0 Тогда
			Раздел211.П002110000100 = "1";
		ИначеЕсли ОсновнойОКВЭД.Количество() > 0 Тогда
			Раздел211.П002110000100 = "2";
		КонецЕсли;
	КонецЕсли;
	Если ОсновнойОКВЭД.Количество() = 0 Тогда
		НоваяСтрока = ОсновнойОКВЭД.Добавить();
		НоваяСтрока.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейОсновнойОКВЭД);
		НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
	КонецЕсли;
	Если СКЕ.Количество() = 0 Тогда
		НоваяСтрока = СКЕ.Добавить();
		НоваяСтрока.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейСКЕ);
		НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
	КонецЕсли;
	
КонецПроцедуры


Процедура РасчетПоказателейРегламентированныйОтчетЕФС1ОСС(ИмяРасчета, НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные = Ложь) Экспорт
	
	РасчетПоказателей_РегламентированныйОтчетЕФС1ОСС_2023(НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные);

КонецПроцедуры

Процедура РасчетПоказателей_РегламентированныйОтчетЕФС1ОСС_2023(НачалоПериода, ОкончаниеПериода, ОрганизацияДляСбораДанных, ОписаниеТаблиц, ПодробныеДанные = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",				ОрганизацияДляСбораДанных);
	Запрос.УстановитьПараметр("НачалоОтчетногоПериода",		НачалоПериода);
	Запрос.УстановитьПараметр("КонецОтчетногоПериода",		ОкончаниеПериода);
	Запрос.УстановитьПараметр("ПослеОтчетногоПериода",		ДобавитьМесяц(ОкончаниеПериода, 6));
	НачалоТекущегоКвартала = НачалоКвартала(ОкончаниеПериода);
	Запрос.УстановитьПараметр("Месяц1",						Месяц(НачалоТекущегоКвартала));
	Запрос.УстановитьПараметр("Месяц2",						Месяц(НачалоТекущегоКвартала) + 1);
	Запрос.УстановитьПараметр("Месяц3",						Месяц(НачалоТекущегоКвартала) + 2);
	
	НеОбъект = Новый Массив;
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ДоговорыГПХ);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ВыплатыПоДоговорамОпекиПолучающимСтраховыеПенсии);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеОткрытия);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеАудиовизуальныеПроизведения);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеДругиеМузыкальныеПроизведения);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеЛитературныеПроизведения);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеМузыкальноСценическиеПроизведение);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеНаучныеТруды);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеСкульптуры);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеГрафическиеПроизведения);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеИсполнениеПроизведений);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих);
	Запрос.УстановитьПараметр("НеЯвляетсяОбъектом", НеОбъект);
	
	// ----------------------------------------------------------------------------------
	// ФОРМИРОВАНИЕ ВРЕМЕННЫХ ТАБЛИЦ
	
	Если ОписаниеТаблиц.Свойство("Доходы2023") Или ОписаниеТаблиц.Свойство("Взносы2023") Или ОписаниеТаблиц.Свойство("СКЕ2023") Или ОписаниеТаблиц.Свойство("ЧисленностьИнвалидов") Или ОписаниеТаблиц.Свойство("ОсновнойОКВЭД") Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СтраховыеВзносыСведенияОДоходах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	СтраховыеВзносыСведенияОДоходах.ВидДохода КАК ВидДохода
		|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СтраховыеВзносыСведенияОДоходах
		|ГДЕ
		|	СтраховыеВзносыСведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СтраховыеВзносыСведенияОДоходах.Организация В(&Организация)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СтраховыеВзносыИсчисленные.ФизическоеЛицо,
		|	СтраховыеВзносыИсчисленные.ГоловнаяОрганизация,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	РегистрНакопления.ИсчисленныеСтраховыеВзносы КАК СтраховыеВзносыИсчисленные
		|ГДЕ
		|	СтраховыеВзносыИсчисленные.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СтраховыеВзносыИсчисленные.Организация В(&Организация)
		|	И СтраховыеВзносыИсчисленные.ФССНесчастныеСлучаи <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизическоеЛицо";
		Запрос.Выполнить();
		
		// Формируем список месяцев, в разрезе которых собираем данные.
		ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, КонецМесяца(НачалоГода(НачалоПериода)), КонецМесяца(ОкончаниеПериода),,, "ВТПериодыСведенийОДоходах", Истина);
		
		// Получаем временные таблицы, используя общие алгоритмы.
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Периоды.Период КАК Период,
		|	СписокСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТПериодыФизЛицОрганизаций
		|ИЗ
		|	ВТФизЛицаОрганизаций КАК СписокСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыСведенийОДоходах КАК Периоды
		|		ПО (ИСТИНА)";
		Запрос.Выполнить();
		
		ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, КонецГода(НачалоПериода), КонецГода(ОкончаниеПериода), "ГОД", , "ВТПериодыРасширенныхСведенийОДоходах", Истина);
		УчетСтраховыхВзносов.СформироватьВТОписаниеТарифов(НачалоПериода, ОкончаниеПериода, Запрос.МенеджерВременныхТаблиц);
		
		ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
		ПараметрыПостроения.ВсеЗаписи = Истина;
		
		ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
			"ПрименяемыеТарифыСтраховыхВзносов",
			Запрос.МенеджерВременныхТаблиц,
			Ложь,
			ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТПериодыФизЛицОрганизаций",
			"ГоловнаяОрганизация"),
			ПараметрыПостроения);
		
		ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
		ПараметрыПостроения.ВсеЗаписи = Истина;
		
		ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
			"СведенияОбИнвалидностиФизическихЛиц",
			Запрос.МенеджерВременныхТаблиц,
			Ложь,
			ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТПериодыФизЛицОрганизаций",
			"ФизическоеЛицо"),
			ПараметрыПостроения);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) КАК ПериодРегистрации,
		|	СписокФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЕСТЬNULL(ДанныеОбИнвалидности.Инвалидность, ЛОЖЬ) КАК Инвалид,
		|	ВЫБОР
		|		КОГДА ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.ВидТарифа = ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОрганизацияИнвалидов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.ОрганизацияИнвалидов
		|	КОНЕЦ КАК ИспользоватьЛьготуИнвалидамПоФСС_НС,
		|	ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)) КАК ВидДохода,
		|	ЕСТЬNULL(ДоходыПоФизлицам.Начисление, ЗНАЧЕНИЕ(ПланВидовРасчета.Начисления.ПустаяСсылка)) КАК Начисление,
		|	ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода.ВходитВБазуФСС_НС, ЛОЖЬ) КАК ВходитВБазуФСС_НС,
		|	ЕСТЬNULL(ДоходыПоФизлицам.Сумма, 0) КАК Сумма,
		|	ЕСТЬNULL(ДоходыПоФизлицам.Скидка, 0) КАК Скидка,
		|	ВЫБОР
		|		КОГДА ДоходыПоФизлицам.ФизическоеЛицо ЕСТЬ NULL
		|			ТОГДА 0
		|		КОГДА ДоходыПоФизлицам.ВидДохода.ВходитВБазуФСС_НС
		|			ТОГДА ДоходыПоФизлицам.Сумма - ВЫБОР
		|					КОГДА ДоходыПоФизлицам.ВидДохода.АвторскиеВознаграждения
		|						ТОГДА 0
		|					ИНАЧЕ ДоходыПоФизлицам.Скидка
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК БазаФСС_НС,
		|	ЕСТЬNULL(ДоходыПоФизлицам.Регистратор, НЕОПРЕДЕЛЕНО) КАК Регистратор,
		|	ДоходыПоФизлицам.ДатаПолученияДохода КАК ДатаПолученияДохода
		|ПОМЕСТИТЬ ВТДанныеУчета
		|ИЗ
		|	ВТПериодыФизЛицОрганизаций КАК СписокФизЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК ДоходыПоФизлицам
		|		ПО СписокФизЛиц.ГоловнаяОрганизация = ДоходыПоФизлицам.ГоловнаяОрганизация
		|			И СписокФизЛиц.ФизическоеЛицо = ДоходыПоФизлицам.ФизическоеЛицо
		|			И (НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ДоходыПоФизлицам.Период, МЕСЯЦ))
		|			И (ДоходыПоФизлицам.Организация В (&Организация))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПрименяемыеТарифыСтраховыхВзносовСрезПоследних КАК ПрименяемыеТарифыСтраховыхВзносовСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОписаниеТарифов КАК ОписаниеТарифов
		|			ПО ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.ВидТарифа = ОписаниеТарифов.ВидТарифа
		|				И (ГОД(ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.Период) = ОписаниеТарифов.РасчетныйПериод)
		|		ПО СписокФизЛиц.ГоловнаяОрганизация = ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.ГоловнаяОрганизация
		|			И (НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.Период, МЕСЯЦ))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбИнвалидностиФизическихЛицСрезПоследних КАК ДанныеОбИнвалидности
		|		ПО (НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ДанныеОбИнвалидности.Период, МЕСЯЦ))
		|			И СписокФизЛиц.ФизическоеЛицо = ДанныеОбИнвалидности.ФизическоеЛицо
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ЕСТЬNULL(ОписаниеТарифов.ЗаменятьОсновнымТарифом, ЛОЖЬ)
		|				ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим)
		|			ИНАЧЕ ЕСТЬNULL(ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.ВидТарифа, ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим))
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ПериодРегистрации КАК ПериодРегистрации,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Инвалид КАК Инвалид,
		|	СведенияОДоходах.ИспользоватьЛьготуИнвалидамПоФСС_НС КАК ИспользоватьЛьготуИнвалидамПоФСС_НС,
		|	СведенияОДоходах.ВидДохода КАК ВидДохода,
		|	СведенияОДоходах.Начисление КАК Начисление,
		|	СведенияОДоходах.ВходитВБазуФСС_НС КАК ВходитВБазуФСС_НС,
		|	СУММА(СведенияОДоходах.Сумма) КАК Сумма,
		|	СУММА(СведенияОДоходах.Скидка) КАК Скидка,
		|	СУММА(СведенияОДоходах.БазаФСС_НС) КАК БазаФСС_НС,
		|	СведенияОДоходах.Регистратор КАК Регистратор,
		|	НАЧАЛОПЕРИОДА(СведенияОДоходах.ДатаПолученияДохода, ГОД) КАК ГодРасчетногоПериода
		|ПОМЕСТИТЬ ВТСведенияОДоходах
		|ИЗ
		|	ВТДанныеУчета КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ПериодРегистрации,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Инвалид,
		|	СведенияОДоходах.ИспользоватьЛьготуИнвалидамПоФСС_НС,
		|	СведенияОДоходах.ВидДохода,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.ВходитВБазуФСС_НС,
		|	СведенияОДоходах.Регистратор,
		|	СведенияОДоходах.ДатаПолученияДохода
		|
		|ИМЕЮЩИЕ
		|	(СУММА(СведенияОДоходах.Сумма) <> 0
		|		ИЛИ СУММА(СведенияОДоходах.Скидка) <> 0
		|		ИЛИ СУММА(СведенияОДоходах.БазаФСС_НС) <> 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ПериодРегистрации КАК ПериодРегистрации
		|ПОМЕСТИТЬ ВТМесяцыБезОблагаемойБазы
		|ИЗ
		|	ВТСведенияОДоходах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.ПериодРегистрации МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ПериодРегистрации
		|
		|ИМЕЮЩИЕ
		|	СУММА(СведенияОДоходах.БазаФСС_НС) < 0";
		Результат = Запрос.Выполнить();
		
		Если Результат.Выгрузить()[0].Количество = 0 Тогда
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
			|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодРегистрации
			|ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы";
		Иначе
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходах.ПериодРегистрации КАК ПериодРегистрации
			|ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы
			|ИЗ
			|	ВТСведенияОДоходах КАК СведенияОДоходах
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТМесяцыБезОблагаемойБазы КАК МесяцыБезОблагаемойБазы
			|		ПО СведенияОДоходах.ПериодРегистрации = МесяцыБезОблагаемойБазы.ПериодРегистрации
			|ГДЕ
			|	СведенияОДоходах.ПериодРегистрации МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.ПериодРегистрации
			|
			|ИМЕЮЩИЕ
			|	СУММА(СведенияОДоходах.БазаФСС_НС) < 0
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизическоеЛицо";
		КонецЕсли;
		Запрос.Выполнить();
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходах.ПериодРегистрации КАК Период,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Инвалид КАК Инвалид,
		|	СведенияОДоходах.Начисление КАК Начисление,
		|	СведенияОДоходах.Регистратор КАК Регистратор,
		|	СведенияОДоходах.ГодРасчетногоПериода КАК ГодРасчетногоПериода,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ВидДохода В (&НеЯвляетсяОбъектом)
		|				ТОГДА 0
		|			КОГДА НЕ СведенияОДоходах.ВходитВБазуФСС_НС
		|				ТОГДА СведенияОДоходах.Сумма
		|			ИНАЧЕ СведенияОДоходах.Скидка
		|		КОНЕЦ) КАК НеОблагаетсяНС_ПЗ,
		|	СУММА(СведенияОДоходах.БазаФСС_НС) КАК БазаНС_ПЗ,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.Инвалид
		|				ТОГДА СведенияОДоходах.БазаФСС_НС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК БазаИнвалидаНС_ПЗ,
		|	МАКСИМУМ(СведенияОДоходах.ИспользоватьЛьготуИнвалидамПоФСС_НС) КАК ИспользоватьЛьготуИнвалидамПоФСС_НС
		|ПОМЕСТИТЬ ВТОблагаемыеБазыПоМесяцам
		|ИЗ
		|	ВТСведенияОДоходах КАК СведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезОблагаемойБазы КАК ФизлицаБезОблагаемойБазы
		|		ПО СведенияОДоходах.ФизическоеЛицо = ФизлицаБезОблагаемойБазы.ФизическоеЛицо
		|			И СведенияОДоходах.ПериодРегистрации = ФизлицаБезОблагаемойБазы.ПериодРегистрации
		|ГДЕ
		|	СведенияОДоходах.ПериодРегистрации МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И ФизлицаБезОблагаемойБазы.ФизическоеЛицо ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ГодРасчетногоПериода,
		|	СведенияОДоходах.Регистратор,
		|	СведенияОДоходах.ПериодРегистрации,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Инвалид,
		|	СведенияОДоходах.Начисление";
		Запрос.Выполнить();
		
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Взносы2023") Или ОписаниеТаблиц.Свойство("СКЕ2023") Или ОписаниеТаблиц.Свойство("ОсновнойОКВЭД") Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) КАК Период,
		|	СписокФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЕСТЬNULL(ИсчисленныеСтраховыеВзносы.Регистратор, НЕОПРЕДЕЛЕНО) КАК Регистратор,
		|	ЕСТЬNULL(СУММА(ИсчисленныеСтраховыеВзносы.ФССНесчастныеСлучаи), 0) КАК ФССНесчастныеСлучаи
		|ПОМЕСТИТЬ ВТИсчисленоПоМесяцам
		|ИЗ
		|	ВТПериодыФизЛицОрганизаций КАК СписокФизЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИсчисленныеСтраховыеВзносы КАК ИсчисленныеСтраховыеВзносы
		|		ПО СписокФизЛиц.ГоловнаяОрганизация = ИсчисленныеСтраховыеВзносы.ГоловнаяОрганизация
		|			И СписокФизЛиц.ФизическоеЛицо = ИсчисленныеСтраховыеВзносы.ФизическоеЛицо
		|			И (НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ИсчисленныеСтраховыеВзносы.ДатаПолученияДохода, МЕСЯЦ))
		|			И (ИсчисленныеСтраховыеВзносы.Организация В (&Организация))
		|			И (ИсчисленныеСтраховыеВзносы.Период МЕЖДУ &НачалоОтчетногоПериода И &ПослеОтчетногоПериода)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезОблагаемойБазы КАК ФизлицаБезОблагаемойБазы
		|		ПО (ИсчисленныеСтраховыеВзносы.ФизическоеЛицо = ФизлицаБезОблагаемойБазы.ФизическоеЛицо)
		|ГДЕ
		|	ФизлицаБезОблагаемойБазы.ФизическоеЛицо ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокФизЛиц.ФизическоеЛицо,
		|	ИсчисленныеСтраховыеВзносы.Регистратор,
		|	НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ)";
		Запрос.Выполнить();
		
	КонецЕсли;
	
	// Титульный лист
	Если ОписаниеТаблиц.Свойство("ЧисленностьЗЛ") Тогда
		
		ОтчитывающаясяОрганизация = ?(ТипЗнч(ОрганизацияДляСбораДанных) = Тип("Массив"), ОрганизацияДляСбораДанных[0], ОрганизацияДляСбораДанных);
		ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(ОтчитывающаясяОрганизация);
		СтруктураПараметров = КадровыйУчет.ПараметрыПолученияВсехСотрудниковОрганизацийПоСпискуФизическихЛиц();
		СтруктураПараметров.КадровыеДанные = "ЯвляетсяВоеннослужащим";
		СтруктураПараметров.Организация = ОрганизацияДляСбораДанных;
		СтруктураПараметров.НачалоПериода = НачалоПериода;
		СтруктураПараметров.ОкончаниеПериода = ОкончаниеПериода;
		Если ТипЗнч(ОрганизацияДляСбораДанных) = Тип("Массив") И ОрганизацияДляСбораДанных.Количество() > 1 Тогда
			СтруктураПараметров.ОтбиратьПоГоловнойОрганизации = Истина;
			СтруктураПараметров.Организация = ГоловнаяОрганизация;
		КонецЕсли;
		КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Ложь, СтруктураПараметров, "ВТСотрудники");
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо,
		|	&НачалоОтчетногоПериода КАК НачалоПериода,
		|	&КонецОтчетногоПериода КАК ОкончаниеПериода,
		|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация
		|ИЗ
		|	ВТСотрудники КАК ФизЛица
		|ГДЕ
		|	НЕ ФизЛица.ЯвляетсяВоеннослужащим";
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
		ФизЛицаОрганизаций = Запрос.Выполнить().Выгрузить();
		Запрос.УстановитьПараметр("ТаблицаДоговоров", КадровыйУчет.ДоговорыФизическихЛиц(ФизЛицаОрганизаций)); ФизЛицаОрганизаций = Неопределено; 

		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДоговоров.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТДоговоры
		|ИЗ
		|	&ТаблицаДоговоров КАК ТаблицаДоговоров
		|ГДЕ
		|	ТаблицаДоговоров.Организация В(&Организация)
		|	И (НЕ ТаблицаДоговоров.ВидДоговора
		|			ИЛИ ТаблицаДоговоров.НСПЗ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СписокСотрудников.ФизическоеЛицо) КАК ЧисленностьЗЛ
		|ИЗ
		|	(ВЫБРАТЬ
		|		СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо
		|	ИЗ
		|		ВТФизЛицаОрганизаций КАК СписокСотрудников
		|	ГДЕ
		|		НЕ СписокСотрудников.ВидДохода В (&НеЯвляетсяОбъектом)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Договоры.ФизическоеЛицо
		|	ИЗ
		|		ВТДоговоры КАК Договоры) КАК СписокСотрудников";
		Результат = Запрос.Выполнить();
		ОписаниеТаблиц.ЧисленностьЗЛ = 0;
		Если Не Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ОписаниеТаблиц.ЧисленностьЗЛ = Выборка.ЧисленностьЗЛ
		КонецЕсли;

	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("ЧисленностьИнвалидов") Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияОДоходах.ФизическоеЛицо) КАК ЧисленностьИнвалидов
		|ИЗ
		|	ВТОблагаемыеБазыПоМесяцам КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Инвалид";
		Результат = Запрос.Выполнить();
		ОписаниеТаблиц.ЧисленностьИнвалидов = 0;
		Если Не Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ОписаниеТаблиц.ЧисленностьИнвалидов = Выборка.ЧисленностьИнвалидов
		КонецЕсли;

	КонецЕсли;
	
	// Таблица 1 
	Если ОписаниеТаблиц.Свойство("Доходы2023") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(МАКСИМУМ(СведенияОДоходах.ИспользоватьЛьготуИнвалидамПоФСС_НС), ЛОЖЬ)
		|			ТОГДА ""1""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК П000210Льгота,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
		|					ТОГДА СведенияОДоходах.БазаНС_ПЗ + СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000104,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.БазаНС_ПЗ + СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000105,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.БазаНС_ПЗ + СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000106,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.БазаНС_ПЗ + СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000107,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
		|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000404,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000405,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000406,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000407,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
		|					ТОГДА СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000204,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000205,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000206,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000207,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Начисление КАК Начисление,
		|	СведенияОДоходах.Регистратор КАК Регистратор
		|ИЗ
		|	ВТОблагаемыеБазыПоМесяцам КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор";
		
		МассивПолей = Новый Массив;
		Если Не ПодробныеДанные Тогда
			МассивПолей.Добавить("ФизическоеЛицо");
			МассивПолей.Добавить("Начисление");
			МассивПолей.Добавить("Регистратор");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
		ОписаниеТаблиц.Доходы2023 = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Взносы2023") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ИсчисленоВзносов.Период) < &Месяц1
		|					ТОГДА ИсчисленоВзносов.ФССНесчастныеСлучаи
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000904,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ИсчисленоВзносов.Период) = &Месяц1
		|					ТОГДА ИсчисленоВзносов.ФССНесчастныеСлучаи
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000905,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ИсчисленоВзносов.Период) = &Месяц2
		|					ТОГДА ИсчисленоВзносов.ФССНесчастныеСлучаи
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000906,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ИсчисленоВзносов.Период) = &Месяц3
		|					ТОГДА ИсчисленоВзносов.ФССНесчастныеСлучаи
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000210000907,
		|	ИсчисленоВзносов.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ИсчисленоВзносов.Регистратор КАК Регистратор
		|ИЗ
		|	ВТИсчисленоПоМесяцам КАК ИсчисленоВзносов
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсчисленоВзносов.ФизическоеЛицо,
		|	ИсчисленоВзносов.Регистратор";
		
		МассивПолей = Новый Массив;
		Если Не ПодробныеДанные Тогда
			МассивПолей.Добавить("ФизическоеЛицо");
			МассивПолей.Добавить("Регистратор");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "ИсчисленоВзносов");
		ОписаниеТаблиц.Взносы2023 = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	
	// Таблица 1.1 - СКЕ
	Если ОписаниеТаблиц.Свойство("СКЕ2023") Или ОписаниеТаблиц.Свойство("ОсновнойОКВЭД") Тогда
		
		Если ТипЗнч(ОрганизацияДляСбораДанных) = Тип("Массив") Тогда
			Организация = ОрганизацияДляСбораДанных[0];
		Иначе
			Организация = ОрганизацияДляСбораДанных
		КонецЕсли;
		
		ИспользоватьСКЕ = ПолучитьФункциональнуюОпцию("ИспользоватьСамостоятельныеКлассификационныеЕдиницы", Новый Структура("Организация", Организация));
		
		Если ИспользоватьСКЕ Тогда
			
			ОсновныеДанные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "КодОКВЭД2,НаименованиеОКВЭД2,НаименованиеПолное");
			Запрос.УстановитьПараметр("НаименованиеОКВЭД2", ОсновныеДанные.НаименованиеОКВЭД2);
			Запрос.УстановитьПараметр("КодОКВЭД2", ОсновныеДанные.КодОКВЭД2);
			Запрос.УстановитьПараметр("НаименованиеСКЕ", Лев(ОсновныеДанные.НаименованиеПолное, 255));
			Запрос.УстановитьПараметр("СтавкаНаНСиПЗ", РегистрыСведений.СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев.ПолучитьПоследнее(ОкончаниеПериода,Новый Структура("Организация", Организация)).Ставка);
			
			УдалитьВТ = Новый Массив;
			УдалитьВТ.Добавить("ВТПериодыФизЛицОрганизаций");
			УдалитьВТ.Добавить("ВТПрименяемыеТарифыСтраховыхВзносовСрезПоследних");
			УдалитьВТ.Добавить("ВТСведенияОбИнвалидностиФизическихЛицСрезПоследних");
			УдалитьВТ.Добавить("ВТОписаниеТарифов");
			УдалитьВТ.Добавить("ВТТарифыСтраховыхВзносовСрезПоследних");
			УдалитьВТ.Добавить("ВТПериодыРасширенныхСведенийОДоходах");
			УдалитьВТ.Добавить("ВТДанныеУчета");
			УдалитьВТ.Добавить("ВТСведенияОДоходах");
			ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
			
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	1 КАК Поле1
			|ИЗ
			|	ВТОблагаемыеБазыПоМесяцам КАК СведенияОДоходах
			|ГДЕ
			|	СведенияОДоходах.ГодРасчетногоПериода < &НачалоОтчетногоПериода";
			Результат = Запрос.Выполнить();
			Если Не Результат.Пустой() Тогда
				УчетСтраховыхВзносов.СформироватьВТРасширенныеСведенияОДоходахИВзносах(ДобавитьМесяц(НачалоПериода, -12), НачалоГода(НачалоПериода) - 1, ОрганизацияДляСбораДанных, Запрос.МенеджерВременныхТаблиц, Истина, Истина, Истина, , Истина, , , , ОкончаниеПериода);
				Запрос.Текст =
				"ВЫБРАТЬ
				|	ЕСТЬNULL(СведенияОДоходах.СКЕ.Наименование, """") КАК НаименованиеСКЕ,
				|	ЕСТЬNULL(СведенияОДоходах.СКЕ.КодОКВЭД2, """") КАК КодОКВЭД2,
				|	ЕСТЬNULL(СведенияОДоходах.СКЕ.НаименованиеОКВЭД2, """") КАК НаименованиеОКВЭД2,
				|	СведенияОДоходах.СтавкаНаНСиПЗ КАК СтавкаНаНСиПЗ,
				|	СведенияОДоходах.БазаФСС_НС КАК БазаНС_ПЗ,
				|	ВЫБОР
				|		КОГДА СведенияОДоходах.Инвалид
				|			ТОГДА СведенияОДоходах.БазаФСС_НС
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК БазаИнвалидаНС_ПЗ,
				|	СведенияОДоходах.ПериодРегистрации КАК Период,
				|	СведенияОДоходах.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
				|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
				|	СведенияОДоходах.Начисление КАК Начисление,
				|	СведенияОДоходах.Регистратор КАК Регистратор
				|ПОМЕСТИТЬ ДанныеПоСКЕПрошлогоГода
				|ИЗ
				|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
				|ГДЕ
				|	СведенияОДоходах.Организация В(&Организация)
				|	И СведенияОДоходах.СКЕ ССЫЛКА Справочник.СамостоятельныеКлассификационныеЕдиницы
				|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
				|	И СведенияОДоходах.ПериодРегистрации МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода";
				Запрос.Выполнить();
				УдалитьВТ = Новый Массив;
				УдалитьВТ.Добавить("ВТРасширенныеСведенияОДоходахИВзносах");
				УдалитьВТ.Добавить("ВТРазмерыТарифныхСтавок");
				УдалитьВТ.Добавить("ВТДанныеОбИнвалидности");
				УдалитьВТ.Добавить("ВТИспользуемыеТарифы");
				УдалитьВТ.Добавить("ВТОписаниеТарифов");
				ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
			Иначе 	
				Запрос.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 0
				|	"""" КАК НаименованиеСКЕ,
				|	"""" КАК КодОКВЭД2,
				|	"""" КАК НаименованиеОКВЭД2,
				|	0 КАК СтавкаНаНСиПЗ,
				|	0 КАК БазаНС_ПЗ,
				|	0 КАК БазаИнвалидаНС_ПЗ,
				|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
				|	0 КАК ФССНесчастныеСлучаи,
				|	НЕОПРЕДЕЛЕНО КАК ФизическоеЛицо,
				|	НЕОПРЕДЕЛЕНО КАК Начисление,
				|	НЕОПРЕДЕЛЕНО КАК Регистратор
				|ПОМЕСТИТЬ ДанныеПоСКЕПрошлогоГода";
				Запрос.Выполнить();
			КонецЕсли;
			
			// Получаем временные таблицы, используя общие алгоритмы.
			УчетСтраховыхВзносов.СформироватьВТРасширенныеСведенияОДоходахИВзносах(НачалоПериода, ОкончаниеПериода, ОрганизацияДляСбораДанных, Запрос.МенеджерВременныхТаблиц, Истина, Истина, Истина, , Истина, , , , ОкончаниеПериода);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(СведенияОДоходах.СКЕ.Наименование, """") КАК НаименованиеСКЕ,
			|	ЕСТЬNULL(СведенияОДоходах.СКЕ.КодОКВЭД2, """") КАК КодОКВЭД2,
			|	ЕСТЬNULL(СведенияОДоходах.СКЕ.НаименованиеОКВЭД2, """") КАК НаименованиеОКВЭД2,
			|	СведенияОДоходах.СтавкаНаНСиПЗ КАК СтавкаНаНСиПЗ,
			|	СведенияОДоходах.БазаФСС_НС КАК БазаНС_ПЗ,
			|	ВЫБОР
			|		КОГДА СведенияОДоходах.Инвалид
			|			ТОГДА СведенияОДоходах.БазаФСС_НС
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК БазаИнвалидаНС_ПЗ,
			|	СведенияОДоходах.ПериодРегистрации КАК Период,
			|	СведенияОДоходах.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходах.Начисление КАК Начисление,
			|	СведенияОДоходах.Регистратор КАК Регистратор
			|ПОМЕСТИТЬ ДанныеПоСКЕ
			|ИЗ
			|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезОблагаемойБазы КАК ФизлицаБезОблагаемойБазы
			|		ПО СведенияОДоходах.ФизическоеЛицо = ФизлицаБезОблагаемойБазы.ФизическоеЛицо
			|			И СведенияОДоходах.ПериодРегистрации = ФизлицаБезОблагаемойБазы.ПериодРегистрации
			|ГДЕ
			|	СведенияОДоходах.Организация В(&Организация)
			|	И СведенияОДоходах.СКЕ ССЫЛКА Справочник.СамостоятельныеКлассификационныеЕдиницы
			|	И СведенияОДоходах.ПериодРегистрации МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
			|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
			|	И ФизлицаБезОблагаемойБазы.ФизическоеЛицо ЕСТЬ NULL
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СведенияОДоходах.НаименованиеСКЕ,
			|	СведенияОДоходах.КодОКВЭД2,
			|	СведенияОДоходах.НаименованиеОКВЭД2,
			|	СведенияОДоходах.СтавкаНаНСиПЗ,
			|	СведенияОДоходах.БазаНС_ПЗ,
			|	СведенияОДоходах.БазаИнвалидаНС_ПЗ,
			|	СведенияОДоходах.Период,
			|	СведенияОДоходах.ФССНесчастныеСлучаи,
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор
			|ИЗ
			|	ДанныеПоСКЕПрошлогоГода КАК СведенияОДоходах
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезОблагаемойБазы КАК ФизлицаБезОблагаемойБазы
			|		ПО СведенияОДоходах.ФизическоеЛицо = ФизлицаБезОблагаемойБазы.ФизическоеЛицо
			|			И СведенияОДоходах.Период = ФизлицаБезОблагаемойБазы.ПериодРегистрации
			|ГДЕ
			|	ФизлицаБезОблагаемойБазы.ФизическоеЛицо ЕСТЬ NULL";
			Запрос.Выполнить();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("СКЕ2023") Тогда
		Если ИспользоватьСКЕ Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходах.НаименованиеОКВЭД2 КАК НаименованиеОКВЭД2,
			|	СведенияОДоходах.НаименованиеОКВЭД2 КАК П00211М200002,
			|	СведенияОДоходах.КодОКВЭД2 КАК ОКВЭД,
			|	СведенияОДоходах.КодОКВЭД2 КАК П00211М200003,
			|	СведенияОДоходах.НаименованиеСКЕ КАК НаименованиеСКЕ,
			|	СведенияОДоходах.НаименованиеСКЕ КАК П00211М200004,
			|	СведенияОДоходах.СтавкаНаНСиПЗ КАК Тариф,
			|	СведенияОДоходах.СтавкаНаНСиПЗ КАК П00211М200005,
			|	СУММА(СведенияОДоходах.БазаНС_ПЗ) КАК П00211М200009,
			|	СУММА(СведенияОДоходах.БазаИнвалидаНС_ПЗ) КАК П00211М200010,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00211М200011,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00211М200012,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00211М200013,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00211М200014,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00211М200015,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00211М200016,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00211М200017,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00211М200018,
			|	СУММА(СведенияОДоходах.ФССНесчастныеСлучаи) КАК П00211М200019,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00211М200020,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) МЕЖДУ &Месяц1 И &Месяц3
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00211М200021,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00211М200022,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00211М200023,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00211М200024,
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходах.Начисление КАК Начисление,
			|	СведенияОДоходах.Регистратор КАК Регистратор
			|ИЗ
			|	ДанныеПоСКЕ КАК СведенияОДоходах
			|ГДЕ
			|	СведенияОДоходах.КодОКВЭД2 <> &КодОКВЭД2
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.СтавкаНаНСиПЗ,
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.НаименованиеОКВЭД2,
			|	СведенияОДоходах.КодОКВЭД2,
			|	СведенияОДоходах.НаименованиеСКЕ,
			|	СведенияОДоходах.НаименованиеОКВЭД2,
			|	СведенияОДоходах.КодОКВЭД2,
			|	СведенияОДоходах.НаименованиеСКЕ,
			|	СведенияОДоходах.СтавкаНаНСиПЗ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СведенияОДоходах.СтавкаНаНСиПЗ";
			
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("Начисление");
				МассивПолей.Добавить("Регистратор");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
			
		Иначе
			
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	"""" КАК НаименованиеОКВЭД2,
			|	"""" КАК П00211М200002,
			|	"""" КАК ОКВЭД,
			|	"""" КАК П00211М200003,
			|	"""" КАК НаименованиеСКЕ,
			|	"""" КАК П00211М200004,
			|	0 КАК Тариф,
			|	0 КАК П00211М200005,
			|	0 КАК П00211М200009,
			|	0 КАК П00211М200010,
			|	0 КАК П00211М200011,
			|	0 КАК П00211М200012,
			|	0 КАК П00211М200013,
			|	0 КАК П00211М200014,
			|	0 КАК П00211М200015,
			|	0 КАК П00211М200016,
			|	0 КАК П00211М200017,
			|	0 КАК П00211М200018,
			|	0 КАК П00211М200019,
			|	0 КАК П00211М200020,
			|	0 КАК П00211М200021,
			|	0 КАК П00211М200022,
			|	0 КАК П00211М200023,
			|	0 КАК П00211М200024,
			|	НЕОПРЕДЕЛЕНО КАК ФизическоеЛицо,
			|	НЕОПРЕДЕЛЕНО КАК Начисление,
			|	НЕОПРЕДЕЛЕНО КАК Регистратор";
			
		КонецЕсли;
		ОписаниеТаблиц.СКЕ2023 = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("ОсновнойОКВЭД") Тогда
		
		Если ИспользоватьСКЕ Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	-СведенияОДоходах.БазаНС_ПЗ КАК БазаНС_ПЗ,
			|	-СведенияОДоходах.БазаИнвалидаНС_ПЗ КАК БазаИнвалидаНС_ПЗ,
			|	СведенияОДоходах.Период КАК Период,
			|	-СведенияОДоходах.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходах.Начисление КАК Начисление,
			|	СведенияОДоходах.Регистратор КАК Регистратор
			|ПОМЕСТИТЬ ДанныеПоОсновнойОКВЭД
			|ИЗ
			|	ДанныеПоСКЕ КАК СведенияОДоходах
			|ГДЕ
			|	(СведенияОДоходах.КодОКВЭД2 <> &КодОКВЭД2
			|			ИЛИ СведенияОДоходах.СтавкаНаНСиПЗ <> &СтавкаНаНСиПЗ)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СведенияОДоходах.БазаНС_ПЗ,
			|	СведенияОДоходах.БазаИнвалидаНС_ПЗ,
			|	СведенияОДоходах.Период,
			|	0,
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор
			|ИЗ
			|	ВТОблагаемыеБазыПоМесяцам КАК СведенияОДоходах
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	0,
			|	0,
			|	СведенияОДоходах.Период,
			|	СведенияОДоходах.ФССНесчастныеСлучаи,
			|	СведенияОДоходах.ФизическоеЛицо,
			|	НЕОПРЕДЕЛЕНО,
			|	СведенияОДоходах.Регистратор
			|ИЗ
			|	ВТИсчисленоПоМесяцам КАК СведенияОДоходах
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	&НаименованиеОКВЭД2 КАК П00211М100002,
			|	&КодОКВЭД2 КАК П00211М100003,
			|	&КодОКВЭД2 КАК ОКВЭД,
			|	&НаименованиеСКЕ КАК П00211М100004,
			|	&СтавкаНаНСиПЗ КАК П00211М100005,
			|	ЕСТЬNULL(СУММА(СведенияОДоходах.БазаНС_ПЗ), 0) КАК П00211М100009,
			|	ЕСТЬNULL(СУММА(СведенияОДоходах.БазаИнвалидаНС_ПЗ), 0) КАК П00211М100010,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|					ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П00211М100011,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П00211М100012,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|					ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П00211М100013,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П00211М100014,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|					ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П00211М100015,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П00211М100016,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|					ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П00211М100017,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П00211М100018,
			|	ЕСТЬNULL(СУММА(СведенияОДоходах.ФССНесчастныеСлучаи), 0) КАК П00211М100019,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|					ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П00211М100020,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) МЕЖДУ &Месяц1 И &Месяц3
			|					ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П00211М100021,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|					ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П00211М100022,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|					ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П00211М100023,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|					ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П00211М100024,
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходах.Начисление КАК Начисление,
			|	СведенияОДоходах.Регистратор КАК Регистратор
			|ИЗ
			|	ДанныеПоОсновнойОКВЭД КАК СведенияОДоходах
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	&НаименованиеОКВЭД2,
			|	&КодОКВЭД2,
			|	&КодОКВЭД2,
			|	&НаименованиеСКЕ,
			|	СведенияОДоходах.СтавкаНаНСиПЗ,
			|	СУММА(СведенияОДоходах.БазаНС_ПЗ),
			|	СУММА(СведенияОДоходах.БазаИнвалидаНС_ПЗ),
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СУММА(СведенияОДоходах.ФССНесчастныеСлучаи),
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) МЕЖДУ &Месяц1 И &Месяц3
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор
			|ИЗ
			|	ДанныеПоСКЕ КАК СведенияОДоходах
			|ГДЕ
			|	СведенияОДоходах.КодОКВЭД2 = &КодОКВЭД2
			|	И СведенияОДоходах.СтавкаНаНСиПЗ <> &СтавкаНаНСиПЗ
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.СтавкаНаНСиПЗ,
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор";
			
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("Начисление");
				МассивПолей.Добавить("Регистратор");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
			
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	"""" КАК П00211М100002,
			|	"""" КАК П00211М100003,
			|	"""" КАК ОКВЭД,
			|	"""" КАК П00211М100004,
			|	0 КАК П00211М100005,
			|	0 КАК П00211М100009,
			|	0 КАК П00211М100010,
			|	0 КАК П00211М100011,
			|	0 КАК П00211М100012,
			|	0 КАК П00211М100013,
			|	0 КАК П00211М100014,
			|	0 КАК П00211М100015,
			|	0 КАК П00211М100016,
			|	0 КАК П00211М100017,
			|	0 КАК П00211М100018,
			|	0 КАК П00211М100019,
			|	0 КАК П00211М100020,
			|	0 КАК П00211М100021,
			|	0 КАК П00211М100022,
			|	0 КАК П00211М100023,
			|	0 КАК П00211М100024,
			|	НЕОПРЕДЕЛЕНО КАК ФизическоеЛицо,
			|	НЕОПРЕДЕЛЕНО КАК Начисление,
			|	НЕОПРЕДЕЛЕНО КАК Регистратор";
		КонецЕсли;
		ОписаниеТаблиц.ОсновнойОКВЭД = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
КонецПроцедуры


// ПерсонифицированныеСведенияОФизическихЛицах

Процедура ОписаниеПоказателей_ПерсонифицированныеСведенияОФизическихЛицах_2023Кв1(ПоказателиОтчета) Экспорт
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010001001", Истина, Ложь);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010002001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010003001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010004001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010005001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010006001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010007001", Истина, Истина);
		
КонецПроцедуры

Процедура ЗначенияПоказателей_ПерсонифицированныеСведенияОФизическихЛицах_2023Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаКонцаПериодаОтчета;
	Если Не УчетСтраховыхВзносов.ОрганизацияОтчитываетсяПоВзносамСамостоятельно(Организация, ДатаКонцаПериодаОтчета) Тогда
		Возврат
	КонецЕсли;
	ОрганизацииДляСбораДанных = УчетСтраховыхВзносов.ОрганизацииДляКонсолидацииОтчетовПоВзносам(Организация, ДатаКонцаПериодаОтчета);
	
	НачалоПериода = НачалоМесяца(ДатаКонцаПериодаОтчета);
	ОкончаниеПериода = КонецМесяца(ДатаКонцаПериодаОтчета);
	ДатаАктуальности = Макс(ОкончаниеПериода, КонецДня(ПараметрыОтчета.ДатаПодписи));
	НомерКорректировки = ПараметрыОтчета.НомерКорректировки;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОтложенноеПроведениеДокументов") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОтражениеДокументовВУчетеСтраховыхВзносов");
		Для каждого ТекущаяОрганизация Из ОрганизацииДляСбораДанных Цикл
			Модуль.ОтразитьДокументыВУчетеСтраховыхВзносов(ТекущаяОрганизация);
		КонецЦикла;
	КонецЕсли;
	
	// очищаем разделы
	ПоказателиОтчета = Новый Структура;
	ОписаниеПоказателей_ПерсонифицированныеСведенияОФизическихЛицах_2023Кв1(ПоказателиОтчета);
	
	Раздел = Контейнер.Раздел1.Строки;
	СтруктураПолей = ОбщегоНазначения.СкопироватьРекурсивно(Раздел[0].Данные);
	Раздел.Очистить();
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолей);
	
	// Сбор данных 
	
	КлючиСтруктурыОписанийТаблиц = "Доходы";
	ОписаниеТаблиц = Новый Структура(КлючиСтруктурыОписанийТаблиц);
	ОписаниеТаблиц.Вставить("НомерКорректировки", НомерКорректировки);	
	РасчетПоказателей_ПерсонифицированныеСведенияОФизическихЛицах_2023(НачалоПериода, ОкончаниеПериода, ОрганизацииДляСбораДанных, ОписаниеТаблиц, Ложь, ДатаАктуальности);
	
	// Проверяем собранные данные
	
	ВсеФизлица = ОписаниеТаблиц.Доходы;
	
	ФизлицаСПроблемамиУчета = Новый Массив;
	Если ВсеФизлица.Количество() > 0 Тогда
		Для каждого СтрокаРезультата Из ВсеФизлица.НайтиСтроки(Новый Структура("ЕстьОшибкаСНИЛС", Истина)) Цикл
			Если ЗначениеЗаполнено(СтрЗаменить(СтрокаРезультата.П000010003001, "-", "")) Тогда
				ФизлицаСПроблемамиУчета.Добавить(СтрокаРезультата);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Прекращаем работу, если выявлены ошибки учета.
	Если ФизлицаСПроблемамиУчета.Количество() > 0 Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Выявлены ошибки ведения учета по страховым взносам%1';
																						|en = 'Accounting errors by insurance contributions%1 were detected'"), Символы.ПС);
		Если ФизлицаСПроблемамиУчета.Количество() > 0 Тогда
			ТекстСообщения = ТекстСообщения + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '- по следующим СНИЛС в отчет попадает более одного набора данных страницы; возможно, не указан СНИЛС или задвоены элементы справочника Физические лица:%1';
																											|en = '- Report contains more than one page data sets for the following SNILSs. SNILS may be not specified or Individuals catalog items are duplicated:%1'"), Символы.ПС);
			Для каждого СтрокаФизлица Из ФизлицаСПроблемамиУчета Цикл
				ТекстСообщения = ТекстСообщения + "  " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '""%1"" со страницы %2 (код %3) повторяется на странице %4 (код %5)%6';
																														|en = '""%1"" from page %2 (code %3) is repeated on page %4 (code %5)%6'"), 
					СтрокаФизлица.П000010003001, 
					СтрокаФизлица.ФИО, 
					СтрокаФизлица.Код, 
					СтрокаФизлица.ФИОДругогоФизическогоЛица, 
					СтрокаФизлица.КодДругогоФизическогоЛица, 
					Символы.ПС);
			КонецЦикла; 	
		КонецЕсли;
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Отчет не заполнен.';
												|en = 'Report is not filled in.'");
		
		// Создадим листы пустого отчета.
		НоваяСтрока = Раздел.Добавить();
		НоваяСтрока.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолей);
		НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	// Вывод данных в отчет
	Если ВсеФизлица.Количество() > 0 Тогда
		Для каждого СтрокаРезультата Из ВсеФизлица Цикл
			НоваяСтрока = Раздел.Добавить();
			НоваяСтрока.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолей);
			ЗаполнитьЗначенияСвойств(НоваяСтрока.Данные, СтрокаРезультата);
			НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
		КонецЦикла;
	Иначе
		НоваяСтрока = Раздел.Добавить();
		НоваяСтрока.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолей);
		НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
	КонецЕсли;
	
КонецПроцедуры


Процедура РасчетПоказателейПерсонифицированныеСведенияОФизическихЛицах(ИмяРасчета, НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные = Ложь, ДатаАктуальности = Неопределено, МассивФизическихЛиц = Неопределено) Экспорт
	
	УточненнаяДатаАктуальности = ?(ЗначениеЗаполнено(ДатаАктуальности), ДатаАктуальности, ОкончаниеПериода);
	
	РасчетПоказателей_ПерсонифицированныеСведенияОФизическихЛицах_2023(НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные, УточненнаяДатаАктуальности, МассивФизическихЛиц);

КонецПроцедуры

Процедура РасчетПоказателей_ПерсонифицированныеСведенияОФизическихЛицах_2023(НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные, ДатаАктуальности, МассивФизическихЛиц = Неопределено)
	
	ОтчитывающаясяОрганизация = ?(ТипЗнч(Организация) = Тип("Массив"), Организация[0], Организация);
	ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(ОтчитывающаясяОрганизация);
	Если МассивФизическихЛиц <> Неопределено Тогда
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		СоздатьВТФизЛицаОрганизаций(МенеджерВременныхТаблиц, МассивФизическихЛиц, ГоловнаяОрганизация);
	Иначе
		МенеджерВременныхТаблиц = Неопределено;
	КонецЕсли;
	
	// Получаем временные таблицы, используя общие алгоритмы.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = УчетСтраховыхВзносов.СформироватьВТРасширенныеСведенияОДоходахИВзносах(НачалоПериода, ОкончаниеПериода, Организация, МенеджерВременныхТаблиц, , , , , , , , , ДатаАктуальности);
	
	Запрос.УстановитьПараметр("НачалоОтчетногоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	
	// АУСНные организации не представляют этот отчет.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияОДоходах.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ИЗ
	|	ВТИспользуемыеТарифы КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Период = &НачалоОтчетногоПериода
	|	И СведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)";
	Если Не Запрос.Выполнить().Пустой() Тогда
		ОписаниеТаблиц.Доходы = Новый ТаблицаЗначений;
		Возврат
	КонецЕсли;
	
	// Все данные отчета берутся по обособленному подразделению (указанной организации).
	Запрос.УстановитьПараметр("ОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("КонецОтчетногоПериода", КонецДня(ОкончаниеПериода));
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
	|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизическоеЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ВходитВБазуПФР
	|					ИЛИ СведенияОДоходах.ВходитВБазуФОМС
	|				ТОГДА СведенияОДоходах.Сумма - СведенияОДоходах.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраховыеВзносыСведенияОДоходах.Период КАК Период,
	|	МАКСИМУМ(СтраховыеВзносыСведенияОДоходах.ЗастрахованПФР) КАК ЗастрахованПФР
	|ПОМЕСТИТЬ ВТФизЛицаСОблагаемойБазой
	|ИЗ
	|	ВТСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	СтраховыеВзносыСведенияОДоходах.Организация В(&ОбособленноеПодразделение)
	|	И СтраховыеВзносыСведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
	|	И СтраховыеВзносыСведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
	|	И СтраховыеВзносыСведенияОДоходах.ВидЗастрахованногоЛица <> ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцыСтрахуемыеФСС)
	|	И СтраховыеВзносыСведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих)
	|	И СтраховыеВзносыСведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И СтраховыеВзносыСведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
	|	И НЕ СтраховыеВзносыСведенияОДоходах.ВидДохода.ДоходыПрокуроровСледователей
	|	И НЕ СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизическоеЛицо
	|				ИЗ
	|					ВТФизлицаБезОблагаемойБазы КАК Организации)
	|	И (СтраховыеВзносыСведенияОДоходах.Скидка <> 0
	|			ИЛИ СтраховыеВзносыСведенияОДоходах.Сумма <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо,
	|	СтраховыеВзносыСведенияОДоходах.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо";
	Запрос.Выполнить();
	
	СтруктураПараметров = КадровыйУчет.ПараметрыПолученияВсехСотрудниковОрганизацийПоСпискуФизическихЛиц();
	СтруктураПараметров.КадровыеДанные = "ЯвляетсяПрокурором, ЯвляетсяВоеннослужащим";
	СтруктураПараметров.Организация = Организация;
	Если ТипЗнч(Организация) = Тип("Массив") И Организация.Количество() > 1 Тогда
		СтруктураПараметров.ОтбиратьПоГоловнойОрганизации = Истина;
		СтруктураПараметров.Организация = ГоловнаяОрганизация;
	КонецЕсли;
	СтруктураПараметров.НачалоПериода = НачалоПериода;
	СтруктураПараметров.ОкончаниеПериода = ОкончаниеПериода;
	СтруктураПараметров.СписокФизическихЛиц = МассивФизическихЛиц;
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Ложь, СтруктураПараметров, "ВТВсеСотрудники");
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&КонецОтчетногоПериода КАК Период,
	|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТВоеннослужащие
	|ИЗ
	|	ВТВсеСотрудники КАК ФизЛица
	|ГДЕ
	|	(ФизЛица.ЯвляетсяВоеннослужащим
	|			ИЛИ ФизЛица.ЯвляетсяПрокурором)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	&НачалоОтчетногоПериода КАК НачалоПериода,
	|	&КонецОтчетногоПериода КАК ОкончаниеПериода,
	|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ИЗ
	|	ВТВсеСотрудники КАК ФизЛица
	|ГДЕ
	|	НЕ ФизЛица.ЯвляетсяВоеннослужащим
	|	И НЕ ФизЛица.ЯвляетсяПрокурором";
	ФизЛицаОрганизаций = Запрос.Выполнить().Выгрузить();
	
	Запрос.УстановитьПараметр("ТаблицаДоговоров", КадровыйУчет.ДоговорыФизическихЛиц(ФизЛицаОрганизаций)); ФизЛицаОрганизаций = Неопределено; 
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДоговоров.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаДоговоров.Окончание КАК Окончание,
	|	ТаблицаДоговоров.Начало КАК Начало
	|ПОМЕСТИТЬ ВТДоговоры
	|ИЗ
	|	&ТаблицаДоговоров КАК ТаблицаДоговоров
	|ГДЕ
	|	ТаблицаДоговоров.Организация В(&ОбособленноеПодразделение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	&НачалоОтчетногоПериода КАК Период,
	|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ПОМЕСТИТЬ ВТФизЛицаСДоговорами
	|ИЗ
	|	ВТДоговоры КАК ФизЛица
	|ГДЕ
	|	ФизЛица.Начало <= &КонецОтчетногоПериода
	|	И (ФизЛица.Окончание = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ИЛИ ФизЛица.Окончание >= &НачалоОтчетногоПериода)";
	Запрос.Выполнить();
	
	УчетСтраховыхВзносов.СформироватьВТДанныеОПравахНаСтрахование(Запрос.МенеджерВременныхТаблиц, "ВТФизЛицаСДоговорами", Ложь, ДатаАктуальности);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеОПравахНаСтрахование.ЗастрахованПФР КАК ЗастрахованПФР
	|ПОМЕСТИТЬ ВТЗастрахованныеЛица
	|ИЗ
	|	ВТФизЛицаСДоговорами КАК ФизЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравахНаСтрахование КАК ДанныеОПравахНаСтрахование
	|		ПО ФизЛица.ФизическоеЛицо = ДанныеОПравахНаСтрахование.ФизическоеЛицо
	|			И ФизЛица.Период = ДанныеОПравахНаСтрахование.Период
	|ГДЕ
	|	ДанныеОПравахНаСтрахование.ВидЗастрахованногоЛица <> ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцыСтрахуемыеФСС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛица.ФизическоеЛицо,
	|	ФизЛица.ЗастрахованПФР
	|ИЗ
	|	ВТФизЛицаСОблагаемойБазой КАК ФизЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизЛицаСДоговорами КАК ФизЛицаСДоговорами
	|		ПО ФизЛица.ФизическоеЛицо = ФизЛицаСДоговорами.ФизическоеЛицо
	|			И ФизЛица.Период = ФизЛицаСДоговорами.Период
	|ГДЕ
	|	ФизЛицаСДоговорами.ФизическоеЛицо ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(СведенияОДоходах.Сумма) КАК ОбщаяСумма,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ВидДохода В (ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ВыплатыПоДоговорамОпекиПолучающимСтраховыеПенсииОблагаемыеФСС_НС), ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ВыплатыПоДоговорамОпекиПолучающимСтраховыеПенсии), ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих))
	|				ТОГДА СведенияОДоходах.Сумма
	|			КОГДА СведенияОДоходах.ВидДохода.ДоходыПрокуроровСледователей
	|				ТОГДА СведенияОДоходах.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ИсключаемыеДоходы
	|ПОМЕСТИТЬ ВТНестрахуемыеДоходы
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
	|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
	|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗастрахованныеЛицаБезТарифов.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТЗастрахованныеЛицаДляОтчета
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ЗастрахованныеЛицаБезТарифов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНестрахуемыеДоходы КАК НестрахуемыеДоходыФизлиц
	|		ПО ЗастрахованныеЛицаБезТарифов.ФизическоеЛицо = НестрахуемыеДоходыФизлиц.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВоеннослужащие КАК Военнослужащие
	|		ПО ЗастрахованныеЛицаБезТарифов.ФизическоеЛицо = Военнослужащие.ФизическоеЛицо
	|ГДЕ
	|	(ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ОбщаяСумма, 0) = 0
	|				И Военнослужащие.ФизическоеЛицо ЕСТЬ NULL
	|			ИЛИ НестрахуемыеДоходыФизлиц.ОбщаяСумма <> НестрахуемыеДоходыФизлиц.ИсключаемыеДоходы)
	|	И ЗастрахованныеЛицаБезТарифов.ЗастрахованПФР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ДатаАктуальности КАК Период,
	|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА СведенияОДоходах.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
	|					ТОГДА 0
	|				КОГДА СведенияОДоходах.ВидДохода.ДоходыПрокуроровСледователей
	|					ТОГДА 0
	|				КОГДА СведенияОДоходах.ВидДохода В (ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом), ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ВыплатыПоДоговорамОпекиПолучающимСтраховыеПенсииОблагаемыеФСС_НС), ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ВыплатыПоДоговорамОпекиПолучающимСтраховыеПенсии), ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих))
	|					ТОГДА 0
	|				ИНАЧЕ СведенияОДоходах.Сумма
	|			КОНЕЦ), 0) КАК Сумма
	|ПОМЕСТИТЬ ВТФизЛица
	|ИЗ
	|	ВТЗастрахованныеЛицаДляОтчета КАК ФизЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходах КАК СведенияОДоходах
	|		ПО ФизЛица.ФизическоеЛицо = СведенияОДоходах.ФизическоеЛицо
	|			И (СведенияОДоходах.Организация В (&ОбособленноеПодразделение))
	|			И (СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода)
	|
	|СГРУППИРОВАТЬ ПО
	|	ФизЛица.ФизическоеЛицо";
	Запрос.Выполнить();
	
	КадровыеДанные = "Фамилия, Имя, Отчество, Наименование, ИНН, СтраховойНомерПФР";
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц,	"ВТФизлица");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Ложь, КадровыеДанные);
	
	Если ОписаниеТаблиц.Свойство("НомерКорректировки") И ЗначениеЗаполнено(ОписаниеТаблиц.НомерКорректировки) Тогда
		ПолучитьПереданныеДанныеОтчетаПерсонифицированныеСведенияОФизическихЛицах(ОтчитывающаясяОрганизация, ОкончаниеПериода, Запрос.МенеджерВременныхТаблиц, ОписаниеТаблиц.НомерКорректировки, "ФормаОтчета2023Кв1");
	Иначе
		СоздатьПустыеВТПереданныхДанныхОтчетаПерсонифицированныеСведенияОФизическихЛицах(Запрос.МенеджерВременныхТаблиц)
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Физлица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Физлица.ФизическоеЛицо.Код КАК Код,
	|	ЕСТЬNULL(ФИОФизлиц.Наименование, """") КАК ФИО,
	|	ЕСТЬNULL(ФИОФизлиц.ИНН, """") КАК П000010002001,
	|	ЕСТЬNULL(ФИОФизлиц.СтраховойНомерПФР, """") КАК П000010003001,
	|	ЕСТЬNULL(ФИОФизлиц.Фамилия, """") КАК П000010004001,
	|	ЕСТЬNULL(ФИОФизлиц.Имя, """") КАК П000010005001,
	|	ЕСТЬNULL(ФИОФизлиц.Отчество, """") КАК П000010006001,
	|	Физлица.Сумма КАК П000010007001
	|ПОМЕСТИТЬ ВТФизлицаПоТекущимДанным
	|ИЗ
	|	ВТФизлица КАК Физлица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК ФИОФизлиц
	|		ПО Физлица.ФизическоеЛицо = ФИОФизлиц.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизлицаПоТекущимДанным.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизлицаВОтчет
	|ИЗ
	|	ВТФизлицаПоТекущимДанным КАК ФизлицаПоТекущимДанным
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаПереданные КАК ФизлицаПереданные
	|		ПО ФизлицаПоТекущимДанным.ФизическоеЛицо = ФизлицаПереданные.ФизическоеЛицо
	|			И ФизлицаПоТекущимДанным.П000010002001 = ФизлицаПереданные.П000010002001
	|			И ФизлицаПоТекущимДанным.П000010003001 = ФизлицаПереданные.П000010003001
	|			И ФизлицаПоТекущимДанным.П000010004001 = ФизлицаПереданные.П000010004001
	|			И ФизлицаПоТекущимДанным.П000010005001 = ФизлицаПереданные.П000010005001
	|			И ФизлицаПоТекущимДанным.П000010006001 = ФизлицаПереданные.П000010006001
	|			И ФизлицаПоТекущимДанным.П000010007001 = ФизлицаПереданные.П000010007001
	|ГДЕ
	|	ФизлицаПереданные.ФизическоеЛицо ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ПроверкаСНИЛС.ФизическоеЛицо) КАК ДругоеФизическоеЛицо,
	|	ФизлицаПоТекущимДанным.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ФизлицаПоТекущимДанным.ФИО КАК ФИО,
	|	ФизлицаПоТекущимДанным.Код КАК Код,
	|	ФизлицаПоТекущимДанным.П000010002001 КАК П000010002001,
	|	ФизлицаПоТекущимДанным.П000010003001 КАК П000010003001,
	|	ФизлицаПоТекущимДанным.П000010004001 КАК П000010004001,
	|	ФизлицаПоТекущимДанным.П000010005001 КАК П000010005001,
	|	ФизлицаПоТекущимДанным.П000010006001 КАК П000010006001,
	|	ФизлицаПоТекущимДанным.П000010007001 КАК П000010007001,
	|	МИНИМУМ(ПроверкаСНИЛС.ФизическоеЛицо) ЕСТЬ НЕ NULL  КАК ЕстьОшибкаСНИЛС
	|ПОМЕСТИТЬ ВТДанныеСПовторнымиФизическимиЛицами
	|ИЗ
	|	ВТФизлицаПоТекущимДанным КАК ФизлицаПоТекущимДанным
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаВОтчет КАК ФизлицаВОтчет
	|		ПО ФизлицаПоТекущимДанным.ФизическоеЛицо = ФизлицаВОтчет.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаПоТекущимДанным КАК ПроверкаСНИЛС
	|		ПО ФизлицаПоТекущимДанным.П000010003001 = ПроверкаСНИЛС.П000010003001
	|			И ФизлицаПоТекущимДанным.Код < ПроверкаСНИЛС.Код
	|ГДЕ
	|	ФизлицаВОтчет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ФизлицаПоТекущимДанным.ФизическоеЛицо,
	|	ФизлицаПоТекущимДанным.ФИО,
	|	ФизлицаПоТекущимДанным.Код,
	|	ФизлицаПоТекущимДанным.П000010002001,
	|	ФизлицаПоТекущимДанным.П000010003001,
	|	ФизлицаПоТекущимДанным.П000010004001,
	|	ФизлицаПоТекущимДанным.П000010005001,
	|	ФизлицаПоТекущимДанным.П000010006001,
	|	ФизлицаПоТекущимДанным.П000010007001
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСПовторнымиФизическимиЛицами.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеСПовторнымиФизическимиЛицами.ДругоеФизическоеЛицо КАК ДругоеФизическоеЛицо,
	|	ДанныеСПовторнымиФизическимиЛицами.ФИО КАК ФИО,
	|	ДанныеСПовторнымиФизическимиЛицами.Код КАК Код,
	|	"""" КАК П000010001001,
	|	ДанныеСПовторнымиФизическимиЛицами.П000010002001 КАК П000010002001,
	|	ДанныеСПовторнымиФизическимиЛицами.П000010003001 КАК П000010003001,
	|	ДанныеСПовторнымиФизическимиЛицами.П000010004001 КАК П000010004001,
	|	ДанныеСПовторнымиФизическимиЛицами.П000010005001 КАК П000010005001,
	|	ДанныеСПовторнымиФизическимиЛицами.П000010006001 КАК П000010006001,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА СтраховыеВзносыСведенияОДоходах.Организация В (&ОбособленноеПодразделение)
	|						И (СтраховыеВзносыСведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода)
	|						И СтраховыеВзносыСведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|						И СтраховыеВзносыСведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих)
	|						И СтраховыеВзносыСведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
	|					ТОГДА СтраховыеВзносыСведенияОДоходах.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000010007001,
	|	ЕСТЬNULL(СтраховыеВзносыСведенияОДоходах.Начисление, НЕОПРЕДЕЛЕНО) КАК Начисление,
	|	ЕСТЬNULL(СтраховыеВзносыСведенияОДоходах.Регистратор, НЕОПРЕДЕЛЕНО) КАК Регистратор,
	|	ДанныеСПовторнымиФизическимиЛицами.ЕстьОшибкаСНИЛС КАК ЕстьОшибкаСНИЛС,
	|	ФизлицаПоТекущимДанным.ФИО КАК ФИОДругогоФизическогоЛица,
	|	ФизлицаПоТекущимДанным.Код КАК КодДругогоФизическогоЛица
	|ИЗ
	|	ВТДанныеСПовторнымиФизическимиЛицами КАК ДанныеСПовторнымиФизическимиЛицами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаПоТекущимДанным КАК ФизлицаПоТекущимДанным
	|		ПО ДанныеСПовторнымиФизическимиЛицами.ДругоеФизическоеЛицо = ФизлицаПоТекущимДанным.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|		ПО ДанныеСПовторнымиФизическимиЛицами.ФизическоеЛицо = СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеСПовторнымиФизическимиЛицами.ФизическоеЛицо,
	|	ДанныеСПовторнымиФизическимиЛицами.ДругоеФизическоеЛицо,
	|	ДанныеСПовторнымиФизическимиЛицами.ФИО,
	|	ДанныеСПовторнымиФизическимиЛицами.Код,
	|	СтраховыеВзносыСведенияОДоходах.Начисление,
	|	СтраховыеВзносыСведенияОДоходах.Регистратор,
	|	ДанныеСПовторнымиФизическимиЛицами.П000010002001,
	|	ДанныеСПовторнымиФизическимиЛицами.П000010003001,
	|	ДанныеСПовторнымиФизическимиЛицами.П000010004001,
	|	ДанныеСПовторнымиФизическимиЛицами.П000010005001,
	|	ДанныеСПовторнымиФизическимиЛицами.П000010006001,
	|	ДанныеСПовторнымиФизическимиЛицами.ЕстьОшибкаСНИЛС,
	|	ФизлицаПоТекущимДанным.ФИО,
	|	ФизлицаПоТекущимДанным.Код
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО,
	|	"""",
	|	ДанныеСПовторнымиФизическимиЛицами.ФИО,
	|	"""",
	|	""1"",
	|	ФизлицаПереданные.П000010002001,
	|	ФизлицаПереданные.П000010003001,
	|	ФизлицаПереданные.П000010004001,
	|	ФизлицаПереданные.П000010005001,
	|	ФизлицаПереданные.П000010006001,
	|	0,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ,
	|	"""",
	|	""""
	|ИЗ
	|	ВТДанныеСПовторнымиФизическимиЛицами КАК ДанныеСПовторнымиФизическимиЛицами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаПереданные КАК ФизлицаПереданные
	|		ПО ДанныеСПовторнымиФизическимиЛицами.ФизическоеЛицо = ФизлицаПереданные.ФизическоеЛицо
	|			И ДанныеСПовторнымиФизическимиЛицами.П000010003001 <> ФизлицаПереданные.П000010003001
	|			И ДанныеСПовторнымиФизическимиЛицами.П000010004001 <> ФизлицаПереданные.П000010004001
	|			И ДанныеСПовторнымиФизическимиЛицами.П000010005001 <> ФизлицаПереданные.П000010005001
	|			И ДанныеСПовторнымиФизическимиЛицами.П000010006001 <> ФизлицаПереданные.П000010006001
	|ГДЕ
	|	ФизлицаПереданные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО,
	|	"""",
	|	ФизлицаПереданные.П000010004001 + "" "" + ФизлицаПереданные.П000010005001 + "" "" + ФизлицаПереданные.П000010006001,
	|	"""",
	|	""1"",
	|	ФизлицаПереданные.П000010002001,
	|	ФизлицаПереданные.П000010003001,
	|	ФизлицаПереданные.П000010004001,
	|	ФизлицаПереданные.П000010005001,
	|	ФизлицаПереданные.П000010006001,
	|	0,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ,
	|	"""",
	|	""""
	|ИЗ
	|	ВТФизлицаПереданные КАК ФизлицаПереданные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаПоТекущимДанным КАК ФизлицаПоТекущимДанным
	|		ПО ФизлицаПереданные.П000010003001 = ФизлицаПоТекущимДанным.П000010003001
	|			И ФизлицаПереданные.П000010004001 = ФизлицаПоТекущимДанным.П000010004001
	|			И ФизлицаПереданные.П000010005001 = ФизлицаПоТекущимДанным.П000010005001
	|			И ФизлицаПереданные.П000010006001 = ФизлицаПоТекущимДанным.П000010006001
	|ГДЕ
	|	ФизлицаПоТекущимДанным.ФизическоеЛицо ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФИО,
	|	П000010001001 УБЫВ";
	
	МассивПолей = Новый Массив;
	Если Не ПодробныеДанные Тогда
		МассивПолей.Добавить("Начисление");
		МассивПолей.Добавить("Регистратор");
	КонецЕсли;
	Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "СтраховыеВзносыСведенияОДоходах");
	ОписаниеТаблиц.Доходы = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

// РСВ

Процедура ОписаниеПоказателей_РСВ_2025Кв1(ПоказателиОтчета) Экспорт
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000101", Истина, Ложь);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000101", Истина, Ложь);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110001001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110001002", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110001003", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110001004", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110002001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110002002", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110002003", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110002004", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110002101", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110002102", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110002103", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110002104", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110002201", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110002202", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110002203", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110002204", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110003001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110003002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110003003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110003004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110004001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110004002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110004003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110004004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110004501", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110004502", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110004503", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110004504", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110005101", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110005102", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110005103", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110005104", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110005201", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110005202", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110005203", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110005204", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110006101", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110006102", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110006103", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110006104", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110006201", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110006202", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110006203", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110006204", Истина, Истина);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М100101", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М100201", Истина, Ложь);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М101001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М101002", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М101003", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М101004", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М102001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М102002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М102003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М102004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М103001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М103002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М103003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М103004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М105001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М105002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М105003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00012М105004", Истина, Истина);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130000101", Истина, Ложь);

	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130001001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130001002", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130001003", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130001004", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130002001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130002002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130002003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130002004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130003001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130003002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130003003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130003004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130005001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130005002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130005003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000130005004", Истина, Истина);
		
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000030001001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000030004001", Истина, Ложь);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000310002001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000310003001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000310004001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000310005001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000310006001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000310007001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000310008001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000310009001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000310010001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000310011001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000310011002", Истина, Ложь);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00321М112001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00321М113001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00321М114001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00321М114101", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00321М115001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00321М116001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00321М117001", Истина, Истина);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00322М118001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00322М119001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00322М120001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00322М121001", Истина, Истина);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410001001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410001002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410001003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410001004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410002001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410002002", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410002003", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410002004", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410003001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410003002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410003003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410003004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410004001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410004002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410004003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410004004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410005001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410005002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410005003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410005004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410007001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410007002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410007003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410007004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410009001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410009002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410009003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000410009004", Истина, Истина);

	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010001001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010002001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010003001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010004001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010005001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010005101", Истина, Ложь);   
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010005201", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010005301", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010005401", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010005402", Истина, Ложь);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010006001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010006002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010006003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010006004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010007001", Истина, Истина); 
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010007002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010007003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П004010007004", Истина, Истина);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140000101", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140000201", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140000301", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140000401", Истина, Ложь);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140001001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140001002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140001003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140001004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140002001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140002002", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140002003", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140002004", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140002101", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140002102", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140002103", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140002104", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140002201", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140002202", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140002203", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140002204", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140003001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140003002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140003003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140003004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140004001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140004002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140004003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140004004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140004501", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140004502", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140004503", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140004504", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140005101", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140005102", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140005103", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140005104", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140005201", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140005202", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140005203", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140005204", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140006101", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140006102", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140006103", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140006104", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140006201", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140006202", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140006203", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140006204", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140007101", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140007102", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140007103", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140007104", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140007201", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140007202", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140007203", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140007204", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140008101", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140008102", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140008103", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140008104", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140008201", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140008202", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140008203", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000140008204", Истина, Истина);

	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050001001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050002001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050003001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050004001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050005001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050006001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050006101", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050006201", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050006301", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050006401", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050006402", Истина, Ложь);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050007001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050007002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050007003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050007004", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050008001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050008002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050008003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П001050008004", Истина, Истина);
	
КонецПроцедуры

Процедура ЗначенияПоказателей_РСВ_2025Кв1(ПараметрыОтчета, Контейнер) Экспорт

	Организация = ПараметрыОтчета.Организация;
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаКонцаПериодаОтчета;
	Если Не УчетСтраховыхВзносов.ОрганизацияОтчитываетсяПоВзносамСамостоятельно(Организация, ДатаКонцаПериодаОтчета) Тогда
		Возврат
	КонецЕсли;
	ОрганизацииДляСбораДанных = УчетСтраховыхВзносов.ОрганизацииДляКонсолидацииОтчетовПоВзносам(Организация, ДатаКонцаПериодаОтчета);
	
	НачалоПериода = НачалоГода(ДатаКонцаПериодаОтчета);
	ОкончаниеПериода = КонецМесяца(ДатаКонцаПериодаОтчета);
	ДатаАктуальности = Макс(ОкончаниеПериода, КонецДня(ПараметрыОтчета.ДатаПодписи));
	НомерКорректировки = ПараметрыОтчета.НомерКорректировки;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОтложенноеПроведениеДокументов") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОтражениеДокументовВУчетеСтраховыхВзносов");
		Для каждого ТекущаяОрганизация Из ОрганизацииДляСбораДанных Цикл
			Модуль.ОтразитьДокументыВУчетеСтраховыхВзносов(ТекущаяОрганизация);
		КонецЦикла;
	КонецЕсли;
	
	// очищаем разделы
	ПоказателиОтчета = Новый Структура;
	ОписаниеПоказателей_РСВ_2025Кв1(ПоказателиОтчета);
	
	Раздел1Подр1 = Контейнер.Раздел1Подр1.Строки;
	СтруктураПолейРаздел1Подр1 = ОбщегоНазначения.СкопироватьРекурсивно(Раздел1Подр1[0].Данные);
	Раздел1Подр1.Очистить();
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолейРаздел1Подр1);
	
	Раздел1Подр2 = Контейнер.Раздел1Подр2.Строки[0].ДанныеМногострочныхЧастей.П00012М1.Строки;
	СтруктураПолейРаздел1Подр2 = ОбщегоНазначения.СкопироватьРекурсивно(Раздел1Подр2[0].Данные);
	Раздел1Подр2.Очистить();
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолейРаздел1Подр2);
	
	Раздел1Подр3 = Контейнер.Раздел1Подр3.Строки;
	СтруктураПолейРаздел1Подр3 = ОбщегоНазначения.СкопироватьРекурсивно(Раздел1Подр3[0].Данные);
	Раздел1Подр3.Очистить();
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолейРаздел1Подр3);
	
	Раздел1Подр4 = Контейнер.Раздел1Подр4.Строки;
	СтруктураПолейРаздел1Подр4 = ОбщегоНазначения.СкопироватьРекурсивно(Раздел1Подр4[0].Данные);
	Раздел1Подр4.Очистить();
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолейРаздел1Подр4);
	
	Раздел1Прил5 = Контейнер.Раздел1Прил5.Строки;	
	СтруктураПолейРаздел1Прил5 = ОбщегоНазначения.СкопироватьРекурсивно(Раздел1Прил5[0].Данные);
	Раздел1Прил5.Очистить();
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолейРаздел1Прил5);
	
	Раздел3 = Контейнер.Раздел3.Строки;
	СтруктураПолейРаздел3 = ОбщегоНазначения.СкопироватьРекурсивно(Раздел3[0].Данные);
	СтруктураПолейПодраздел21 = ОбщегоНазначения.СкопироватьРекурсивно(Раздел3[0].ДанныеМногострочныхЧастей.П00321М1.Строки[0].Данные);
	СтруктураПолейПодраздел22 = ОбщегоНазначения.СкопироватьРекурсивно(Раздел3[0].ДанныеМногострочныхЧастей.П00322М1.Строки[0].Данные);
	Раздел3.Очистить();
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолейРаздел3);
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолейПодраздел21);
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолейПодраздел22);
	
	Раздел4Подр1 = Контейнер.Раздел4Подр1.Строки;
	СтруктураПолейРаздел4Подр1 = ОбщегоНазначения.СкопироватьРекурсивно(Раздел4Подр1[0].Данные);
	Раздел4Подр1.Очистить();
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолейРаздел4Подр1);
	Раздел4Прил1 = Контейнер.Раздел4Прил1.Строки;	
	СтруктураПолейРаздел4Прил1 = ОбщегоНазначения.СкопироватьРекурсивно(Раздел4Прил1[0].Данные);
	Раздел4Прил1.Очистить();
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолейРаздел4Прил1);

	// Сбор данных 
	
	МассивФизическихЛиц = Неопределено;
	Если ПараметрыОтчета.Свойство("ФормированиеПерсонифицированныхСведенийОЗастрахованныхЛицах") Тогда
		ПараметрыОтчета.Свойство("МассивФизическихЛиц", МассивФизическихЛиц);
		КлючиСтруктурыОписанийТаблиц = "ДоходыВРазрезеТарифов2023,ВзносыВРазрезеТарифов2023,ВсеТарифы2023,Раздел3Физлица2023,Подраздел321Доходы2023,Подраздел322Доходы2023";
	Иначе
		КлючиСтруктурыОписанийТаблиц = "ЧисленностьЗастрахованныхВРазрезеТарифов2023,ЧисленностьВРазрезеТарифов2023,ДоходыВРазрезеТарифов2023,ВзносыВРазрезеТарифов2023,ВсеТарифы2023,"
			+ "Подраздел2Основания2023,Подраздел2Численность2023,Подраздел2Доходы2023,Подраздел2Взносы2023,"
			+ "Подраздел3Доходы2023,Подраздел3Численность2023,Подраздел3Взносы2023,"
			+ "Раздел3Физлица2023,Подраздел321Доходы2023,Подраздел322Доходы2023,"
			+ "Раздел4Численность2023,Раздел4Доходы2023,Раздел4Взносы2023,Раздел4Физлица2023"
			+ ",Подраздел4ЧисленностьЗастрахованных,Подраздел4Численность2023,Подраздел4Доходы2023,Подраздел4Взносы2023,Приложение5Физлица2023"
	КонецЕсли;
	ОписаниеТаблиц = Новый Структура(КлючиСтруктурыОписанийТаблиц);
	ОписаниеТаблиц.Вставить("НомерКорректировки", НомерКорректировки);	
	РасчетПоказателей_РСВ_2025(НачалоПериода, ОкончаниеПериода, ОрганизацииДляСбораДанных, ОписаниеТаблиц, Ложь, ДатаАктуальности, МассивФизическихЛиц);
	
	// Проверяем собранные данные
	
	ВсеТарифы = ОписаниеТаблиц.ВсеТарифы2023;
	ТаблицаДоходов = ОписаниеТаблиц.ДоходыВРазрезеТарифов2023;
	ТаблицаВзносов = ОписаниеТаблиц.ВзносыВРазрезеТарифов2023;
	ВсеФизлица = ОписаниеТаблиц.Раздел3Физлица2023;
	
	НачисленоВПоследниеТриМесяца = ЗначениеЗаполнено(ТаблицаВзносов.Итог("НачисленоВПоследниеТриМесяца"));
	Контейнер.Раздел1.Строки[0].Данные.П000010000101 = ?(НачисленоВПоследниеТриМесяца, "1", "2");
	
	ПроверяемыеПоляВзносов = Новый Массив;
	Для каждого Колонка Из ТаблицаВзносов.Колонки Цикл
		Если Найти(Колонка.Имя, "П011") > 0 Тогда
			ПроверяемыеПоляВзносов.Добавить(Колонка.Имя)
		КонецЕсли;	
	КонецЦикла;	
	ТарифыСПроблемамиУчета = Новый Массив;
	Для каждого СтрокаРезультата Из ВсеТарифы Цикл
		
		СтрокаДоходов = ТаблицаДоходов.Найти(СтрокаРезультата.ВидТарифаСтраховыхВзносов,"ВидТарифаСтраховыхВзносов");
		СтрокаВзносов = ТаблицаВзносов.Найти(СтрокаРезультата.ВидТарифаСтраховыхВзносов,"ВидТарифаСтраховыхВзносов");
		
		Если СтрокаДоходов = Неопределено И СтрокаВзносов = Неопределено Тогда // По текущему тарифу нет данных.
			Продолжить;
		ИначеЕсли СтрокаДоходов = Неопределено Тогда 
			НайденыСуммыВзносов = Ложь;
			Для каждого ИмяПоля Из ПроверяемыеПоляВзносов Цикл
				НайденыСуммыВзносов = ЗначениеЗаполнено(СтрокаВзносов[ИмяПоля]);
				Если НайденыСуммыВзносов Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если НайденыСуммыВзносов Тогда // По текущему тарифу есть проблемы учета.
				ТарифыСПроблемамиУчета.Добавить(СтрокаРезультата.ВидТарифаСтраховыхВзносов);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ФизлицаСПроблемамиУчета = Новый Массив;
	Если ВсеФизлица.Количество() > 0 Тогда
		Для каждого СтрокаРезультата Из ВсеФизлица.НайтиСтроки(Новый Структура("ЕстьОшибкаСНИЛС", Истина)) Цикл
			Если ЗначениеЗаполнено(СтрЗаменить(СтрокаРезультата.П000310003001, "-", "")) Тогда
				ФизлицаСПроблемамиУчета.Добавить(СтрокаРезультата);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Прекращаем работу, если выявлены ошибки учета.
	Если ТарифыСПроблемамиУчета.Количество() > 0 Или ФизлицаСПроблемамиУчета.Количество() > 0 Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Выявлены ошибки ведения учета по страховым взносам%1';
																						|en = 'Выявлены ошибки ведения учета по страховым взносам%1'"), Символы.ПС);
		Если ТарифыСПроблемамиУчета.Количество() > 0 Тогда
			ТекстСообщения = ТекстСообщения + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '- по следующим тарифам отсутствуют доходы, но зарегистрированы взносы:%1';
																											|en = '- по следующим тарифам отсутствуют доходы, но зарегистрированы взносы:%1'"), Символы.ПС);
			Для каждого Тариф Из ТарифыСПроблемамиУчета Цикл
				ТекстСообщения = ТекстСообщения + "  " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 %2';
																														|en = '%1 %2'"), Тариф, Символы.ПС);
			КонецЦикла; 	
		КонецЕсли;
		Если ФизлицаСПроблемамиУчета.Количество() > 0 Тогда
			ТекстСообщения = ТекстСообщения + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '- по следующим СНИЛС в Раздел 3 отчета попадает более одной страницы; возможно, не указан СНИЛС или задвоены элементы справочника Физические лица:%1';
																											|en = '- по следующим СНИЛС в Раздел 3 отчета попадает более одной страницы; возможно, не указан СНИЛС или задвоены элементы справочника Физические лица:%1'"), Символы.ПС);
			Для каждого СтрокаФизлица Из ФизлицаСПроблемамиУчета Цикл
				ТекстСообщения = ТекстСообщения + "  " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '""%1"" со страницы %2 (код %3) повторяется на странице %4 (код %5)%6';
																														|en = '""%1"" со страницы %2 (код %3) повторяется на странице %4 (код %5)%6'"), 
				СтрокаФизлица.П000310003001, 
				СтрокаФизлица.ФИО, 
				СтрокаФизлица.Код, 
				СтрокаФизлица.ФИОДругогоФизическогоЛица, 
				СтрокаФизлица.КодДругогоФизическогоЛица, 
				Символы.ПС);
			КонецЦикла; 	
		КонецЕсли;
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Отчет не заполнен.';
												|en = 'Отчет не заполнен.'");
		
		// Создадим листы пустого отчета.
		СтрокаПодраздела1 = Раздел1Подр1.Добавить();
		СтрокаПодраздела1.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел1Подр1); 
		СтрокаПодраздела1.Данные.П000110000101 = "01";
		СтрокаПодраздела1.ДанныеМногострочныхЧастей = Новый Структура();
		СтрокаПодраздела2 = Раздел1Подр2.Добавить();
		СтрокаПодраздела2.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел1Подр2); 
		СтрокаПодраздела2.ДанныеМногострочныхЧастей = Новый Структура();
		СтрокаПодраздела3 = Раздел1Подр3.Добавить();
		СтрокаПодраздела3.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел1Подр3); 
		СтрокаПодраздела3.ДанныеМногострочныхЧастей = Новый Структура();
		НоваяСтрока = Раздел3.Добавить();
		НоваяСтрока.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел3);
		НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура("П00321М1,П00322М1", НовоеПустоеДеревоДляРСВ(), НовоеПустоеДеревоДляРСВ());
		СтрокаДохода = НоваяСтрока.ДанныеМногострочныхЧастей.П00321М1.Строки.Добавить();
		СтрокаДохода.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейПодраздел21);
		СтрокаДохода = НоваяСтрока.ДанныеМногострочныхЧастей.П00322М1.Строки.Добавить();
		СтрокаДохода.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейПодраздел22);
		СтрокаПодраздела4 = Раздел4Подр1.Добавить();
		СтрокаПодраздела4.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел4Подр1); 
		СтрокаПодраздела4.ДанныеМногострочныхЧастей = Новый Структура();
		СтрокаПодраздела4 = Раздел4Прил1.Добавить();
		СтрокаПодраздела4.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел4Прил1); 
		СтрокаПодраздела4.ДанныеМногострочныхЧастей = Новый Структура();
		
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	// Вывод данных в отчет
	
	// Разделы 1 и 4
	Если Не ПараметрыОтчета.Свойство("ФормированиеПерсонифицированныхСведенийОЗастрахованныхЛицах") Тогда
		
		// Раздел 1
		
		КоличествоЗастрахованных = Новый Структура;
		Если ОписаниеТаблиц.ЧисленностьЗастрахованныхВРазрезеТарифов2023.Количество() > 0 Тогда
			КоличествоЗастрахованных = ОписаниеТаблиц.ЧисленностьЗастрахованныхВРазрезеТарифов2023[0];
		КонецЕсли;
		
		ТаблицаВсегоЗастрахованных = ОписаниеТаблиц.ЧисленностьЗастрахованныхВРазрезеТарифов2023;
		ТаблицаКоличеств = ОписаниеТаблиц.ЧисленностьВРазрезеТарифов2023;
		ВсеОснованияСпецОценки = ОписаниеТаблиц.Подраздел2Основания2023;
		ТаблицаДоходовСоСпецОценкой = ОписаниеТаблиц.Подраздел2Доходы2023;
		ТаблицаКоличествСоСпецОценкой = ОписаниеТаблиц.Подраздел2Численность2023;
		ТаблицаВзносовСоСпецОценкой = ОписаниеТаблиц.Подраздел2Взносы2023;
		
		// Подраздел 1 
		Для каждого СтрокаРезультата Из ВсеТарифы Цикл
			
			СтрокаВсегоЗастрахованных = ТаблицаВсегоЗастрахованных.Найти(СтрокаРезультата.ВидТарифаСтраховыхВзносов,"ВидТарифаСтраховыхВзносов");
			СтрокаДоходов = ТаблицаДоходов.Найти(СтрокаРезультата.ВидТарифаСтраховыхВзносов,"ВидТарифаСтраховыхВзносов");
			СтрокаКоличеств = ТаблицаКоличеств.Найти(СтрокаРезультата.ВидТарифаСтраховыхВзносов,"ВидТарифаСтраховыхВзносов");
			СтрокаВзносов = ТаблицаВзносов.Найти(СтрокаРезультата.ВидТарифаСтраховыхВзносов,"ВидТарифаСтраховыхВзносов");
			
			Если СтрокаДоходов = Неопределено И СтрокаВзносов = Неопределено Тогда // По текущему тарифу нет данных.
				Продолжить;
			КонецЕсли;
			
			СтрокаПодраздела1 = Раздел1Подр1.Добавить();
			СтрокаПодраздела1.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел1Подр1); 
			СтрокаПодраздела1.Данные.П000110000101 = СтрокаРезультата.КодТарифа;
			СтрокаПодраздела1.ДанныеМногострочныхЧастей = Новый Структура();
			
			Если СтрокаВсегоЗастрахованных <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(СтрокаПодраздела1.Данные, СтрокаВсегоЗастрахованных);
			КонецЕсли;
			Если СтрокаДоходов <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(СтрокаПодраздела1.Данные,СтрокаДоходов);
			КонецЕсли;
			Если СтрокаКоличеств <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(СтрокаПодраздела1.Данные,СтрокаКоличеств);
			КонецЕсли;
			Если СтрокаВзносов <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(СтрокаПодраздела1.Данные,СтрокаВзносов);
			КонецЕсли;
			
		КонецЦикла;
		Если Раздел1Подр1.Количество() = 0 Тогда
			СтрокаПодраздела1 = Раздел1Подр1.Добавить();
			СтрокаПодраздела1.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел1Подр1); 
			СтрокаПодраздела1.Данные.П000110000101 = "01";
			СтрокаПодраздела1.ДанныеМногострочныхЧастей = Новый Структура();
			ЗаполнитьЗначенияСвойств(СтрокаПодраздела1.Данные, КоличествоЗастрахованных);
		КонецЕсли;
		
		// Подраздел 2
		СтруктураПоискаРаздела = Новый Структура("П00012М100101, П00012М100201");
		Результат = ВсеОснованияСпецОценки;
		Если Результат.Количество() > 0 Тогда
			Для каждого СтрокаДанных Из Результат Цикл
				
				ЗаполнитьЗначенияСвойств(СтруктураПоискаРаздела, СтрокаДанных);
				СтрокиДоходов = ТаблицаДоходовСоСпецОценкой.НайтиСтроки(СтруктураПоискаРаздела);
				СтрокиКоличеств = ТаблицаКоличествСоСпецОценкой.НайтиСтроки(СтруктураПоискаРаздела);
				СтрокиВзносов = ТаблицаВзносовСоСпецОценкой.НайтиСтроки(СтруктураПоискаРаздела);
				
				Если СтрокиДоходов.Количество() > 0 Или СтрокиКоличеств.Количество() > 0 Или СтрокиВзносов.Количество() > 0 Тогда
					
					СтрокаПодраздела2 = Раздел1Подр2.Добавить();
					СтрокаПодраздела2.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел1Подр2);
					СтрокаПодраздела2.ДанныеМногострочныхЧастей = Новый Структура();
					
					Если СтрокиДоходов.Количество() > 0 Тогда
						ЗаполнитьЗначенияСвойств(СтрокаПодраздела2.Данные,СтрокиДоходов[0]);
					КонецЕсли;
					Если СтрокиКоличеств.Количество() > 0 Тогда
						ЗаполнитьЗначенияСвойств(СтрокаПодраздела2.Данные,СтрокиКоличеств[0]);
					КонецЕсли;
					Если СтрокиВзносов.Количество() > 0 Тогда
						ЗаполнитьЗначенияСвойств(СтрокаПодраздела2.Данные,СтрокиВзносов[0]);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
		Иначе	
			СтрокаПодраздела2 = Раздел1Подр2.Добавить();
			СтрокаПодраздела2.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел1Подр2);
			СтрокаПодраздела2.ДанныеМногострочныхЧастей = Новый Структура(); 
		КонецЕсли;
			
		// Подраздел 3
		ТаблицаДоходовАвиаторовГорняков = ОписаниеТаблиц.Подраздел3Доходы2023;
		ТаблицаКоличествАвиаторовГорняков = ОписаниеТаблиц.Подраздел3Численность2023;
		ТаблицаВзносовАвиаторовГорняков = ОписаниеТаблиц.Подраздел3Взносы2023;
		СтруктураПоискаРаздела = Новый Структура("П000130000101");
		СтрокаПодраздела3 = Раздел1Подр3.Добавить(); 
		СтрокаПодраздела3.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел1Подр3); 
		СтрокаПодраздела3.ДанныеМногострочныхЧастей = Новый Структура();
		Для Сч = 1 По 2 Цикл
			
			СтруктураПоискаРаздела.П000130000101 = Строка(Сч);
			
			СтрокиДоходов = ТаблицаДоходовАвиаторовГорняков.НайтиСтроки(СтруктураПоискаРаздела);
			СтрокиКоличеств = ТаблицаКоличествАвиаторовГорняков.НайтиСтроки(СтруктураПоискаРаздела);
			СтрокиВзносов = ТаблицаВзносовАвиаторовГорняков.НайтиСтроки(СтруктураПоискаРаздела);
			
			Если СтрокиДоходов.Количество() = 0 И СтрокиВзносов.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрокиДоходов.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(СтрокаПодраздела3.Данные,СтрокиДоходов[0]);
			КонецЕсли;
			Если СтрокиКоличеств.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(СтрокаПодраздела3.Данные,СтрокиКоличеств[0]);
			КонецЕсли;
			Если СтрокиВзносов.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(СтрокаПодраздела3.Данные,СтрокиВзносов[0]);
			КонецЕсли;
			
		КонецЦикла;
		
		// Подраздел 4
		ТаблицаВсегоЗастрахованных = ОписаниеТаблиц.Подраздел4ЧисленностьЗастрахованных;
		ТаблицаКоличеств = ОписаниеТаблиц.Подраздел4Численность2023;
		ТаблицаДоходов = ОписаниеТаблиц.Подраздел4Доходы2023;
		ТаблицаВзносов = ОписаниеТаблиц.Подраздел4Взносы2023;
		
		Для каждого СтрокаРезультата Из ВсеТарифы Цикл
			
			СтрокаВсегоЗастрахованных = ТаблицаВсегоЗастрахованных.Найти(СтрокаРезультата.ВидТарифаСтраховыхВзносов,"ВидТарифаСтраховыхВзносов");
			СтрокаДоходов = ТаблицаДоходов.Найти(СтрокаРезультата.ВидТарифаСтраховыхВзносов,"ВидТарифаСтраховыхВзносов");
			СтрокаКоличеств = ТаблицаКоличеств.Найти(СтрокаРезультата.ВидТарифаСтраховыхВзносов,"ВидТарифаСтраховыхВзносов");
			СтрокаВзносов = ТаблицаВзносов.Найти(СтрокаРезультата.ВидТарифаСтраховыхВзносов,"ВидТарифаСтраховыхВзносов");
			
			Если СтрокаДоходов = Неопределено И СтрокаВзносов = Неопределено Тогда // По текущему тарифу нет данных.
				Продолжить;
			КонецЕсли;
			
			СтрокаПодраздела4 = Раздел1Подр4.Добавить();
			СтрокаПодраздела4.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел1Подр4); 
			СтрокаПодраздела4.Данные.П000140000101 = СтрокаРезультата.КодТарифа;
			СтрокаПодраздела4.Данные.П000140000201 = "0";
			СтрокаПодраздела4.Данные.П000140000301 = "0";
			СтрокаПодраздела4.Данные.П000140000401 = "0";
			СтрокаПодраздела4.ДанныеМногострочныхЧастей = Новый Структура();
			
			Если СтрокаВсегоЗастрахованных <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(СтрокаПодраздела4.Данные, СтрокаВсегоЗастрахованных);
			КонецЕсли;
			Если СтрокаКоличеств <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(СтрокаПодраздела4.Данные,СтрокаКоличеств);
			КонецЕсли;
			Если СтрокаДоходов <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(СтрокаПодраздела4.Данные,СтрокаДоходов);
			КонецЕсли;
			Если СтрокаВзносов <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(СтрокаПодраздела4.Данные,СтрокаВзносов);
				Если СтрокаВзносов.П000140006101 + СтрокаВзносов.П000140006201 > 0 Тогда
					СтрокаПодраздела4.Данные.П000140000201 = "1";
				КонецЕсли;
				Если СтрокаВзносов.П000140007101 + СтрокаВзносов.П000140007201 > 0 Тогда
					СтрокаПодраздела4.Данные.П000140000301 = "1";
				КонецЕсли;
				Если СтрокаВзносов.П000140008101 + СтрокаВзносов.П000140008201 > 0 Тогда
					СтрокаПодраздела4.Данные.П000140000401 = "1";
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		// Приложение 5
		Для каждого СтрокаРезультата Из ОписаниеТаблиц.Приложение5Физлица2023 Цикл
			СтрокаПриложения5 = Раздел1Прил5.Добавить();
			СтрокаПриложения5.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел1Прил5); 
			СтрокаПриложения5.ДанныеМногострочныхЧастей = Новый Структура();
			ЗаполнитьЗначенияСвойств(СтрокаПриложения5.Данные, СтрокаРезультата);
		КонецЦикла;
	
		// Раздел 4
		
		СтрокаПодраздела4 = Раздел4Подр1.Добавить();
		СтрокаПодраздела4.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел4Подр1); 
		СтрокаПодраздела4.ДанныеМногострочныхЧастей = Новый Структура();
		Если ОписаниеТаблиц.Раздел4Численность2023.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(СтрокаПодраздела4.Данные, ОписаниеТаблиц.Раздел4Численность2023[0]);
		КонецЕсли;
		Если ОписаниеТаблиц.Раздел4Доходы2023.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(СтрокаПодраздела4.Данные, ОписаниеТаблиц.Раздел4Доходы2023[0]);
		КонецЕсли;
		Если ОписаниеТаблиц.Раздел4Взносы2023.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(СтрокаПодраздела4.Данные, ОписаниеТаблиц.Раздел4Взносы2023[0]);
		КонецЕсли;
		Для каждого СтрокаРезультата Из ОписаниеТаблиц.Раздел4Физлица2023 Цикл
			СтрокаПодраздела4 = Раздел4Прил1.Добавить();
			СтрокаПодраздела4.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел4Прил1); 
			СтрокаПодраздела4.ДанныеМногострочныхЧастей = Новый Структура();
		    ЗаполнитьЗначенияСвойств(СтрокаПодраздела4.Данные, СтрокаРезультата);
		КонецЦикла;
		
	КонецЕсли;
	
	Если Раздел1Подр3.Количество() = 0 Тогда
		СтрокаПодраздела4 = Раздел1Подр3.Добавить();
		СтрокаПодраздела4.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел1Подр3); 
		СтрокаПодраздела4.ДанныеМногострочныхЧастей = Новый Структура();
	КонецЕсли;
	Если Раздел1Подр4.Количество() = 0 Тогда
		СтрокаПодраздела4 = Раздел1Подр4.Добавить();
		СтрокаПодраздела4.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел1Подр4); 
		СтрокаПодраздела4.ДанныеМногострочныхЧастей = Новый Структура();
	КонецЕсли;
	Если Раздел1Прил5.Количество() = 0 Тогда
		СтрокаПодраздела4 = Раздел1Прил5.Добавить();
		СтрокаПодраздела4.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел1Прил5); 
		СтрокаПодраздела4.ДанныеМногострочныхЧастей = Новый Структура();
	КонецЕсли;
	
	// Раздел 3
	Если ВсеФизлица.Количество() > 0 Тогда
		ТаблицаДоходовФизлиц = ОписаниеТаблиц.Подраздел321Доходы2023;
		ТаблицаВредныхДоходовФизлиц = ОписаниеТаблиц.Подраздел322Доходы2023;
		ПоляПоискаДоходов = "ФизическоеЛицо,П00321М112001";
		ПоляПоискаВредныхДоходов = "ФизическоеЛицо";
		ТаблицаДоходовФизлиц.Индексы.Добавить(ПоляПоискаДоходов);
		ТаблицаВредныхДоходовФизлиц.Индексы.Добавить(ПоляПоискаВредныхДоходов);
		СтруктураПоискаПоФизлицу = Новый Структура(ПоляПоискаДоходов);
		СтруктураПоискаВредныхПоФизлицу = Новый Структура(ПоляПоискаВредныхДоходов);
		КатегорииОсновногоТарифаДляМСП = КатегорииОсновногоТарифаДляМСП(ОкончаниеПериода);
		Для каждого СтрокаРезультата Из ВсеФизлица Цикл
			
			НоваяСтрока = Раздел3.Добавить();
			НоваяСтрока.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел3);
			НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура("П00321М1,П00322М1", НовоеПустоеДеревоДляРСВ(), НовоеПустоеДеревоДляРСВ());
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока.Данные, СтрокаРезультата);
			Если СтрокаРезультата.ФизическоеЛицо <> Неопределено И СтрокаРезультата.П000030001001 <> "1" Тогда
				КодКатегорииНулевыхДоходов = КодКатегорииНулевыхДоходовПоКатегорииЗЛ(СтрокаРезультата.КатегорияЗастрахованныхЛиц, ОкончаниеПериода, НачисленоВПоследниеТриМесяца, КатегорииОсновногоТарифаДляМСП);
				СтруктураПоискаПоФизлицу.ФизическоеЛицо = СтрокаРезультата.ФизическоеЛицо;
				СтруктураПоискаПоФизлицу.П00321М112001 = 1;
				СтрокиДоходов = ТаблицаДоходовФизлиц.НайтиСтроки(СтруктураПоискаПоФизлицу);
				Если СтрокиДоходов.Количество() > 0 Тогда
					Для каждого СтрокаДанных Из СтрокиДоходов Цикл
						СтрокаДохода = НоваяСтрока.ДанныеМногострочныхЧастей.П00321М1.Строки.Добавить();
						СтрокаДохода.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейПодраздел21);
						ЗаполнитьЗначенияСвойств(СтрокаДохода.Данные, СтрокаДанных);
						Если ЗначениеЗаполнено(СтрокаДохода.Данные.П00321М112001) Тогда
							ОстатокОтДеления = СтрокаДанных.П00321М112001 % 3;
							СтрокаДохода.Данные.П00321М112001 = Строка(?(ОстатокОтДеления = 0, 3, ОстатокОтДеления));
						ИначеЕсли ЗначениеЗаполнено(СтрокаРезультата.НачалоРаботы) Тогда
							ОстатокОтДеления = Месяц(СтрокаРезультата.НачалоРаботы) % 3;
							СтрокаДохода.Данные.П00321М112001 = Строка(?(ОстатокОтДеления = 0, 3, ОстатокОтДеления));
						Иначе
							СтрокаДохода.Данные.П00321М112001 = "1";
						КонецЕсли;
						Если ЗначениеЗаполнено(СтрокаДохода.Данные.П00321М113001) Тогда
							СтрокаДохода.Данные.П00321М113001 = СтрокаДохода.Данные.П00321М113001;
						ИначеЕсли ЗначениеЗаполнено(СтрокаРезультата.НачалоРаботы) Тогда
							СтрокаДохода.Данные.П00321М113001 = СтрокаРезультата.КатегорияЗастрахованныхЛиц;
						Иначе
							СтрокаДохода.Данные.П00321М113001 = "НР";
						КонецЕсли;
					КонецЦикла;
				ИначеЕсли СтрокаРезультата.ДобавлятьСтрокуВПервыйМесяц Тогда
					СтрокаДохода = НоваяСтрока.ДанныеМногострочныхЧастей.П00321М1.Строки.Добавить();
					СтрокаДохода.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейПодраздел21);
					СтрокаДохода.Данные.П00321М112001 = "1";
					СтрокаДохода.Данные.П00321М113001 = КодКатегорииНулевыхДоходов;
				КонецЕсли;
				СтруктураПоискаПоФизлицу.П00321М112001 = 2;
				СтрокиДоходов = ТаблицаДоходовФизлиц.НайтиСтроки(СтруктураПоискаПоФизлицу);
				Если СтрокиДоходов.Количество() > 0 Тогда
					Для каждого СтрокаДанных Из СтрокиДоходов Цикл
						СтрокаДохода = НоваяСтрока.ДанныеМногострочныхЧастей.П00321М1.Строки.Добавить();
						СтрокаДохода.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейПодраздел21);
						ЗаполнитьЗначенияСвойств(СтрокаДохода.Данные, СтрокаДанных);
						Если ЗначениеЗаполнено(СтрокаДохода.Данные.П00321М112001) Тогда
							ОстатокОтДеления = СтрокаДанных.П00321М112001 % 3;
							СтрокаДохода.Данные.П00321М112001 = Строка(?(ОстатокОтДеления = 0, 3, ОстатокОтДеления));
						ИначеЕсли ЗначениеЗаполнено(СтрокаРезультата.НачалоРаботы) Тогда
							ОстатокОтДеления = Месяц(СтрокаРезультата.НачалоРаботы) % 3;
							СтрокаДохода.Данные.П00321М112001 = Строка(?(ОстатокОтДеления = 0, 3, ОстатокОтДеления));
						Иначе
							СтрокаДохода.Данные.П00321М112001 = "1";
						КонецЕсли;
						Если ЗначениеЗаполнено(СтрокаДохода.Данные.П00321М113001) Тогда
							СтрокаДохода.Данные.П00321М113001 = СтрокаДохода.Данные.П00321М113001;
						ИначеЕсли ЗначениеЗаполнено(СтрокаРезультата.НачалоРаботы) Тогда
							СтрокаДохода.Данные.П00321М113001 = СтрокаРезультата.КатегорияЗастрахованныхЛиц;
						Иначе
							СтрокаДохода.Данные.П00321М113001 = "НР";
						КонецЕсли;
					КонецЦикла;
				ИначеЕсли СтрокаРезультата.ДобавлятьСтрокуВоВторойМесяц Тогда
					СтрокаДохода = НоваяСтрока.ДанныеМногострочныхЧастей.П00321М1.Строки.Добавить();
					СтрокаДохода.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейПодраздел21);
					СтрокаДохода.Данные.П00321М112001 = "2";
					СтрокаДохода.Данные.П00321М113001 = КодКатегорииНулевыхДоходов;
				КонецЕсли;
				СтруктураПоискаПоФизлицу.П00321М112001 = 3;
				СтрокиДоходов = ТаблицаДоходовФизлиц.НайтиСтроки(СтруктураПоискаПоФизлицу);
				Если СтрокиДоходов.Количество() > 0 Тогда
					Для каждого СтрокаДанных Из СтрокиДоходов Цикл
						СтрокаДохода = НоваяСтрока.ДанныеМногострочныхЧастей.П00321М1.Строки.Добавить();
						СтрокаДохода.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейПодраздел21);
						ЗаполнитьЗначенияСвойств(СтрокаДохода.Данные, СтрокаДанных);
						Если ЗначениеЗаполнено(СтрокаДохода.Данные.П00321М112001) Тогда
							ОстатокОтДеления = СтрокаДанных.П00321М112001 % 3;
							СтрокаДохода.Данные.П00321М112001 = Строка(?(ОстатокОтДеления = 0, 3, ОстатокОтДеления));
						ИначеЕсли ЗначениеЗаполнено(СтрокаРезультата.НачалоРаботы) Тогда
							ОстатокОтДеления = Месяц(СтрокаРезультата.НачалоРаботы) % 3;
							СтрокаДохода.Данные.П00321М112001 = Строка(?(ОстатокОтДеления = 0, 3, ОстатокОтДеления));
						Иначе
							СтрокаДохода.Данные.П00321М112001 = "1";
						КонецЕсли;
						Если ЗначениеЗаполнено(СтрокаДохода.Данные.П00321М113001) Тогда
							СтрокаДохода.Данные.П00321М113001 = СтрокаДохода.Данные.П00321М113001;
						ИначеЕсли ЗначениеЗаполнено(СтрокаРезультата.НачалоРаботы) Тогда
							СтрокаДохода.Данные.П00321М113001 = СтрокаРезультата.КатегорияЗастрахованныхЛиц;
						Иначе
							СтрокаДохода.Данные.П00321М113001 = "НР";
						КонецЕсли;
					КонецЦикла;
				ИначеЕсли СтрокаРезультата.ДобавлятьСтрокуВТретийМесяц Тогда
					СтрокаДохода = НоваяСтрока.ДанныеМногострочныхЧастей.П00321М1.Строки.Добавить();
					СтрокаДохода.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейПодраздел21);
					СтрокаДохода.Данные.П00321М112001 = "3";
					СтрокаДохода.Данные.П00321М113001 = КодКатегорииНулевыхДоходов;
				КонецЕсли;
				СтруктураПоискаВредныхПоФизлицу.ФизическоеЛицо = СтрокаРезультата.ФизическоеЛицо;
				СтрокиВредныхДоходов = ТаблицаВредныхДоходовФизлиц.НайтиСтроки(СтруктураПоискаВредныхПоФизлицу);
				Для каждого СтрокаДанных Из СтрокиВредныхДоходов Цикл
					СтрокаДохода = НоваяСтрока.ДанныеМногострочныхЧастей.П00322М1.Строки.Добавить();
					СтрокаДохода.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейПодраздел22);
					ЗаполнитьЗначенияСвойств(СтрокаДохода.Данные, СтрокаДанных);
					Если ЗначениеЗаполнено(СтрокаДохода.Данные.П00322М118001) Тогда
						ОстатокОтДеления = СтрокаДанных.П00322М118001 % 3;
						СтрокаДохода.Данные.П00322М118001 = ?(ОстатокОтДеления = 0, 3, ОстатокОтДеления);
					Иначе
						СтрокаДохода.Данные.П00322М118001 = "";
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если НоваяСтрока.ДанныеМногострочныхЧастей.П00321М1.Строки.Количество() = 0 Тогда
				СтрокаДохода = НоваяСтрока.ДанныеМногострочныхЧастей.П00321М1.Строки.Добавить();
				СтрокаДохода.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейПодраздел21);
			КонецЕсли;
			Если НоваяСтрока.ДанныеМногострочныхЧастей.П00322М1.Строки.Количество() = 0 Тогда
				СтрокаДохода = НоваяСтрока.ДанныеМногострочныхЧастей.П00322М1.Строки.Добавить();
				СтрокаДохода.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейПодраздел22);
			КонецЕсли;
			
		КонецЦикла;
	Иначе
		НоваяСтрока = Раздел3.Добавить();
		НоваяСтрока.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел3);
		НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура("П00321М1,П00322М1", НовоеПустоеДеревоДляРСВ(), НовоеПустоеДеревоДляРСВ());
		СтрокаДохода = НоваяСтрока.ДанныеМногострочныхЧастей.П00321М1.Строки.Добавить();
		СтрокаДохода.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейПодраздел21);
		СтрокаДохода = НоваяСтрока.ДанныеМногострочныхЧастей.П00322М1.Строки.Добавить();
		СтрокаДохода.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейПодраздел22);
	КонецЕсли;
	
	// Раздел 4
	Если Раздел4Подр1.Количество() = 0 Тогда
		СтрокаПодраздела4 = Раздел4Подр1.Добавить();
		СтрокаПодраздела4.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел4Подр1); 
		СтрокаПодраздела4.ДанныеМногострочныхЧастей = Новый Структура();
	КонецЕсли;
	Если Раздел4Прил1.Количество() = 0 Тогда
		СтрокаПодраздела4 = Раздел4Прил1.Добавить();
		СтрокаПодраздела4.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПолейРаздел4Прил1); 
		СтрокаПодраздела4.ДанныеМногострочныхЧастей = Новый Структура();
	КонецЕсли;
	
КонецПроцедуры


Процедура ОписаниеПоказателей_РСВ_2023Кв1(ПоказателиОтчета) Экспорт
	 УчетСтраховыхВзносовАрхивныеАлгоритмы.ОписаниеПоказателей_РСВ_2023(ПоказателиОтчета)
КонецПроцедуры

Процедура ОписаниеПоказателей_РСВ_2023Кв3(ПоказателиОтчета) Экспорт
	 УчетСтраховыхВзносовАрхивныеАлгоритмы.ОписаниеПоказателей_РСВ_2023(ПоказателиОтчета, Истина)
КонецПроцедуры

Процедура ЗначенияПоказателей_РСВ_2023Кв1(ПараметрыОтчета, Контейнер) Экспорт
	УчетСтраховыхВзносовАрхивныеАлгоритмы.ЗначенияПоказателей_РСВ_2023(ПараметрыОтчета, Контейнер)
КонецПроцедуры

Процедура ЗначенияПоказателей_РСВ_2023Кв3(ПараметрыОтчета, Контейнер) Экспорт
	УчетСтраховыхВзносовАрхивныеАлгоритмы.ЗначенияПоказателей_РСВ_2023(ПараметрыОтчета, Контейнер, Истина)
КонецПроцедуры


Процедура РасчетПоказателейРСВ(ИмяРасчета, НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные = Ложь, ДатаАктуальности = Неопределено, МассивФизическихЛиц = Неопределено, ВыделятьМеждународныеДоговоры = Ложь) Экспорт
	
	УточненнаяДатаАктуальности = ?(ЗначениеЗаполнено(ДатаАктуальности), ДатаАктуальности, ОкончаниеПериода);
	ОтчитывающаясяОрганизация = ?(ТипЗнч(Организация) = Тип("Массив"), Организация[0], Организация);
	
	Если ИмяРасчета = "РасчетПоказателей_РСВ_2025Кв1" Тогда
		РасчетПоказателей_РСВ_2025(НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные, УточненнаяДатаАктуальности, МассивФизическихЛиц);
	ИначеЕсли ИмяРасчета = "РасчетПоказателей_РСВ_2023Кв1" Тогда
		УчетСтраховыхВзносовАрхивныеАлгоритмы.РасчетПоказателей_РСВ_2023(НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные, УточненнаяДатаАктуальности, МассивФизическихЛиц, ВыделятьМеждународныеДоговоры);
	ИначеЕсли ИмяРасчета = "РасчетПоказателей_РСВ_2022Кв1" Тогда
		УчетСтраховыхВзносовАрхивныеАлгоритмы.РасчетПоказателей_РСВ_2022(НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные, УточненнаяДатаАктуальности, МассивФизическихЛиц);
	ИначеЕсли ИмяРасчета = "РасчетПоказателей_РСВ_2020Кв1" Тогда
		Если НачалоПериода >= '20210101' Тогда
			УчетСтраховыхВзносовАрхивныеАлгоритмы.РасчетПоказателей_РСВ_2021(НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные, УточненнаяДатаАктуальности, МассивФизическихЛиц);
		Иначе
			УчетСтраховыхВзносовАрхивныеАлгоритмы.РасчетПоказателей_РСВ_2020(НачалоПериода, ОкончаниеПериода, ОтчитывающаясяОрганизация, ОписаниеТаблиц, ПодробныеДанные, УточненнаяДатаАктуальности, МассивФизическихЛиц);
		КонецЕсли;
	ИначеЕсли ИмяРасчета = "РасчетПоказателей_РСВ_2017Кв1" Тогда
		УчетСтраховыхВзносовАрхивныеАлгоритмы.РасчетПоказателей_РСВ_2018(НачалоПериода, ОкончаниеПериода, ОтчитывающаясяОрганизация, ОписаниеТаблиц, ПодробныеДанные, УточненнаяДатаАктуальности, МассивФизическихЛиц);
	Иначе
		
	КонецЕсли;

КонецПроцедуры

Процедура РасчетПоказателей_РСВ_2025(НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные, ДатаАктуальности, МассивФизическихЛиц)
	
	Запрос = Новый Запрос;
	
	ОтчитывающаясяОрганизация = ?(ТипЗнч(Организация) = Тип("Массив"), Организация[0], Организация);
	ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(ОтчитывающаясяОрганизация);
	Если МассивФизическихЛиц <> Неопределено Тогда
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		СоздатьВТФизЛицаОрганизаций(МенеджерВременныхТаблиц, МассивФизическихЛиц, ГоловнаяОрганизация);
	Иначе
		МенеджерВременныхТаблиц = Неопределено;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоОтчетногоПериода", НачалоГода(ОкончаниеПериода));
	Запрос.УстановитьПараметр("НачалоОтчетногоКвартала", НачалоКвартала(ОкончаниеПериода));
	Запрос.УстановитьПараметр("КонецОтчетногоПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("Месяц1", Месяц(ОкончаниеПериода) - 2);
	Запрос.УстановитьПараметр("Месяц2", Месяц(ОкончаниеПериода) - 1);
	Запрос.УстановитьПараметр("Месяц3", Месяц(ОкончаниеПериода));
	// Все данные отчета берутся по обособленному подразделению (указанной организации).
	Запрос.УстановитьПараметр("ОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	
	ЗаполнятьРаздел4 = Ложь;
	ВидыЗЛпоМеждународнымДоговорам = Новый Массив;
	ВидыЗЛпоМеждународнымДоговорам.Добавить(Перечисления.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцыСтрахуемыеФСС);
	ВидыЗЛпоМеждународнымДоговорам.Добавить(Перечисления.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцыСтрахуемыеНаОПС);
	Запрос.УстановитьПараметр("ВидыЗЛпоМеждународнымДоговорам", ВидыЗЛпоМеждународнымДоговорам);
	
	// Получаем временные таблицы, используя общие алгоритмы.
	Запрос.МенеджерВременныхТаблиц = УчетСтраховыхВзносов.СформироватьВТРасширенныеСведенияОДоходахИВзносах(НачалоПериода, ОкончаниеПериода, Организация, МенеджерВременныхТаблиц, Истина, Истина, Истина, Истина, Истина, , , , ДатаАктуальности);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы
	|ИЗ
	|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
	|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизическоеЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ВходитВБазуПФР
	|					ИЛИ СведенияОДоходах.ВходитВБазуФОМС
	|				ТОГДА СведенияОДоходах.Сумма - СведенияОДоходах.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|	СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраховыеВзносыСведенияОДоходах.Период КАК Период,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода КАК ВидДохода,
	|	МАКСИМУМ(СтраховыеВзносыСведенияОДоходах.ЗастрахованПФР) КАК ЗастрахованПФР
	|ПОМЕСТИТЬ ВТФизЛицаСОблагаемойБазой
	|ИЗ
	|	ВТРасширенныеСведенияОДоходахИВзносах КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	СтраховыеВзносыСведенияОДоходах.Организация В(&ОбособленноеПодразделение)
	|	И СтраховыеВзносыСведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
	|	И СтраховыеВзносыСведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
	|	И СтраховыеВзносыСведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И СтраховыеВзносыСведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
	|	И НЕ СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизическоеЛицо
	|				ИЗ
	|					ВТФизлицаБезОблагаемойБазы КАК Организации)
	|	И (СтраховыеВзносыСведенияОДоходах.ФСС <> 0
	|			ИЛИ СтраховыеВзносыСведенияОДоходах.ФФОМС <> 0
	|			ИЛИ СтраховыеВзносыСведенияОДоходах.ПФРССуммПревышения <> 0
	|			ИЛИ СтраховыеВзносыСведенияОДоходах.ПФРПоСуммарномуТарифу <> 0
	|			ИЛИ СтраховыеВзносыСведенияОДоходах.Скидка <> 0
	|			ИЛИ СтраховыеВзносыСведенияОДоходах.Сумма <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыСведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо,
	|	СтраховыеВзносыСведенияОДоходах.Период,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Месяц1 КАК МесяцПериода
	|ПОМЕСТИТЬ ВТМесяцыОтчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Месяц2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Месяц3";
	Запрос.Выполнить();
	
	// Подраздел 1 Раздела 1
	
	Если ОписаниеТаблиц.Свойство("ЧисленностьЗастрахованныхВРазрезеТарифов2023") Или ОписаниеТаблиц.Свойство("ВсеТарифы2023") 
		Или ОписаниеТаблиц.Свойство("ДоходыВРазрезеТарифов2023") Или ОписаниеТаблиц.Свойство("ЧисленностьВРазрезеТарифов2023") 
		Или ОписаниеТаблиц.Свойство("ВзносыВРазрезеТарифов2023") Или ОписаниеТаблиц.Свойство("Подраздел321Доходы2023") 
		Или ОписаниеТаблиц.Свойство("Раздел4Доходы2023") Или ОписаниеТаблиц.Свойство("Раздел4Взносы2023") Или ОписаниеТаблиц.Свойство("Раздел4Численность2023") 
		Или ОписаниеТаблиц.Свойство("Подраздел4ЧисленностьЗастрахованных") Или ОписаниеТаблиц.Свойство("Подраздел4Численность2023") Или ОписаниеТаблиц.Свойство("Подраздел4Доходы2023") Или ОписаниеТаблиц.Свойство("Подраздел4Взносы2023") 
		Или ОписаниеТаблиц.Свойство("Раздел3Физлица2023") Тогда
		
		СтруктураПараметров = КадровыйУчет.ПараметрыПолученияВсехСотрудниковОрганизацийПоСпискуФизическихЛиц();
		СтруктураПараметров.КадровыеДанные = "ЯвляетсяПрокурором, ЯвляетсяВоеннослужащим, РаботаетВСтуденческомОтряде";
		СтруктураПараметров.Организация = Организация;
		Если ТипЗнч(Организация) = Тип("Массив") И Организация.Количество() > 1 Тогда
			СтруктураПараметров.ОтбиратьПоГоловнойОрганизации = Истина;
			СтруктураПараметров.Организация = ГоловнаяОрганизация;
		КонецЕсли;
		СтруктураПараметров.СписокФизическихЛиц = МассивФизическихЛиц;
		
		ВсегоМесяцев = Месяц(ОкончаниеПериода);
		ЗаготовкаЗапроса = 
		"ВЫБРАТЬ
		|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ФизЛица.ЯвляетсяВоеннослужащим КАК ЯвляетсяВоеннослужащим,
		|	ФизЛица.ЯвляетсяПрокурором КАК ЯвляетсяПрокурором,
		|	ФизЛица.РаботаетВСтуденческомОтряде КАК РаботаетВСтуденческомОтряде,
		|	ФизЛица.Период КАК Период
		|ИЗ
		|	ВТСотрудникиСч КАК ФизЛица";
		Для Сч = 1 По ВсегоМесяцев Цикл
			СтруктураПараметров.НачалоПериода = ДобавитьМесяц(НачалоПериода, Сч - 1);
			СтруктураПараметров.ОкончаниеПериода = КонецМесяца(СтруктураПараметров.НачалоПериода);
			КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Ложь, СтруктураПараметров, "ВТСотрудники" + Сч);
			Если Сч = 1 Тогда
				ТекстЗапроса =
				"ВЫБРАТЬ
				|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо,
				|	ФизЛица.ЯвляетсяВоеннослужащим КАК ЯвляетсяВоеннослужащим,
				|	ФизЛица.ЯвляетсяПрокурором КАК ЯвляетсяПрокурором,
				|	ФизЛица.РаботаетВСтуденческомОтряде КАК РаботаетВСтуденческомОтряде,
				|	ФизЛица.Период КАК Период
				|ПОМЕСТИТЬ ВТВсеСотрудники
				|ИЗ
				|	ВТСотрудники1 КАК ФизЛица";
			Иначе
				ТекстЗапроса = ТекстЗапроса + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + СтрЗаменить(ЗаготовкаЗапроса,"Сч", Строка(Сч))
			КонецЕсли;
		КонецЦикла;
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
		
		// Формируем список месяцев, в разрезе которых собираем данные.
		ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, НачалоГода(ОкончаниеПериода), НачалоМесяца(ОкончаниеПериода));
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Периоды.Период КАК Период,
		|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТВоеннослужащие
		|ИЗ
		|	ВТПериоды КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсеСотрудники КАК ФизЛица
		|		ПО (ФизЛица.Период = КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
		|ГДЕ
		|	ФизЛица.ЯвляетсяВоеннослужащим
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Периоды.Период КАК Период,
		|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТПрокуроры
		|ИЗ
		|	ВТПериоды КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсеСотрудники КАК ФизЛица
		|		ПО (ФизЛица.Период = КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
		|ГДЕ
		|	ФизЛица.ЯвляетсяПрокурором
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Периоды.Период КАК Период,
		|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТСтуденты
		|ИЗ
		|	ВТПериоды КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсеСотрудники КАК ФизЛица
		|		ПО (ФизЛица.Период = КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
		|ГДЕ
		|	ФизЛица.РаботаетВСтуденческомОтряде
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо,
		|	&НачалоОтчетногоПериода КАК НачалоПериода,
		|	&КонецОтчетногоПериода КАК ОкончаниеПериода,
		|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация
		|ИЗ
		|	ВТВсеСотрудники КАК ФизЛица
		|ГДЕ
		|	НЕ ФизЛица.ЯвляетсяВоеннослужащим";
		ФизЛицаОрганизаций = Запрос.Выполнить().Выгрузить();
		
		Запрос.УстановитьПараметр("ТаблицаДоговоров", КадровыйУчет.ДоговорыФизическихЛиц(ФизЛицаОрганизаций)); ФизЛицаОрганизаций = Неопределено; 
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДоговоров.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ТаблицаДоговоров.ВидДоговора КАК ВидДоговора,
		|	ТаблицаДоговоров.Окончание КАК Окончание,
		|	ТаблицаДоговоров.Начало КАК Начало
		|ПОМЕСТИТЬ ВТДоговоры
		|ИЗ
		|	&ТаблицаДоговоров КАК ТаблицаДоговоров
		|ГДЕ
		|	ТаблицаДоговоров.Организация В(&ОбособленноеПодразделение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Периоды.Период КАК Период,
		|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА ФизЛица.Начало < НАЧАЛОПЕРИОДА(Периоды.Период, КВАРТАЛ)
		|				ТОГДА НАЧАЛОПЕРИОДА(Периоды.Период, КВАРТАЛ)
		|			ИНАЧЕ ФизЛица.Начало
		|		КОНЕЦ) КАК НачалоРаботы,
		|	МАКСИМУМ(ФизЛица.Начало <= КОНЕЦПЕРИОДА(НАЧАЛОПЕРИОДА(Периоды.Период, КВАРТАЛ), МЕСЯЦ)
		|			И (ФизЛица.Окончание = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ИЛИ ФизЛица.Окончание >= НАЧАЛОПЕРИОДА(Периоды.Период, КВАРТАЛ))) КАК ДобавлятьСтрокуВПервыйМесяц,
		|	МАКСИМУМ(ФизЛица.Начало <= КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(Периоды.Период, КВАРТАЛ), МЕСЯЦ, 1), МЕСЯЦ)
		|			И (ФизЛица.Окончание = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ИЛИ ФизЛица.Окончание >= ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(Периоды.Период, КВАРТАЛ), МЕСЯЦ, 1))) КАК ДобавлятьСтрокуВоВторойМесяц,
		|	МАКСИМУМ(ФизЛица.Начало <= КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(Периоды.Период, КВАРТАЛ), МЕСЯЦ, 2), МЕСЯЦ)
		|			И (ФизЛица.Окончание = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ИЛИ ФизЛица.Окончание >= ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(Периоды.Период, КВАРТАЛ), МЕСЯЦ, 2))) КАК ДобавлятьСтрокуВТретийМесяц
		|ПОМЕСТИТЬ ВТПериодыФизЛицОрганизаций
		|ИЗ
		|	ВТПериоды КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоговоры КАК ФизЛица
		|		ПО (ФизЛица.Начало <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
		|			И (ФизЛица.Окончание = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ИЛИ ФизЛица.Окончание >= Периоды.Период)
		|ГДЕ
		|	ФизЛица.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	ФизЛица.ФизическоеЛицо,
		|	Периоды.Период,
		|	ФизЛица.Окончание";
		Запрос.Выполнить();
		
		УчетСтраховыхВзносов.СформироватьВТДанныеОПравахНаСтрахование(Запрос.МенеджерВременныхТаблиц, "ВТПериодыФизЛицОрганизаций", Ложь, ДатаАктуальности);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ФизЛица.Период КАК Период,
		|	ФизЛица.НачалоРаботы КАК НачалоРаботы,
		|	ФизЛица.ДобавлятьСтрокуВПервыйМесяц КАК ДобавлятьСтрокуВПервыйМесяц,
		|	ФизЛица.ДобавлятьСтрокуВоВторойМесяц КАК ДобавлятьСтрокуВоВторойМесяц,
		|	ФизЛица.ДобавлятьСтрокуВТретийМесяц КАК ДобавлятьСтрокуВТретийМесяц,
		|	ДанныеОПравахНаСтрахование.ВидЗастрахованногоЛица КАК ВидЗастрахованногоЛица,
		|	ДанныеОПравахНаСтрахование.ЗастрахованПФР КАК ЗастрахованПФР
		|ПОМЕСТИТЬ ВТЗастрахованныеЛицаБезТарифов
		|ИЗ
		|	ВТПериодыФизЛицОрганизаций КАК ФизЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравахНаСтрахование КАК ДанныеОПравахНаСтрахование
		|		ПО ФизЛица.ФизическоеЛицо = ДанныеОПравахНаСтрахование.ФизическоеЛицо
		|			И ФизЛица.Период = ДанныеОПравахНаСтрахование.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФизЛица.ФизическоеЛицо,
		|	ФизЛица.Период,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	НЕОПРЕДЕЛЕНО,
		|	ФизЛица.ЗастрахованПФР
		|ИЗ
		|	ВТФизЛицаСОблагаемойБазой КАК ФизЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыФизЛицОрганизаций КАК ФизЛицаСДоговорами
		|		ПО ФизЛица.ФизическоеЛицо = ФизЛицаСДоговорами.ФизическоеЛицо
		|			И ФизЛица.Период = ФизЛицаСДоговорами.Период
		|ГДЕ
		|	ФизЛица.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И ФизЛицаСДоговорами.ФизическоеЛицо ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Период КАК Период,
		|	СУММА(СведенияОДоходах.Сумма) КАК ОбщаяСумма,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ВидДохода В (ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ВыплатыПоДоговорамОпекиПолучающимСтраховыеПенсииОблагаемыеФСС_НС), ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ВыплатыПоДоговорамОпекиПолучающимСтраховыеПенсии), ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих))
		|				ТОГДА СведенияОДоходах.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ИсключаемыеДоходы,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ДляСтудентовВСтудотрядах)
		|				ТОГДА СведенияОДоходах.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДоходыСтудентов,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ВидДохода.ДоходыПрокуроровСледователей
		|				ТОГДА СведенияОДоходах.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДоходыПрокуроровСледователей
		|ПОМЕСТИТЬ ВТНестрахуемыеДоходы
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕСТЬNULL(ЕСТЬNULL(СведенияОДоходах.ВидТарифаСтраховыхВзносов, ВЫБОР
		|				КОГДА Студенты.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|						И ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ОбщаяСумма, 0) = ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ДоходыСтудентов, 0)
		|					ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ДляСтудентовВСтудотрядах)
		|				ИНАЧЕ ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов
		|			КОНЕЦ), ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим)) КАК ВидТарифаСтраховыхВзносов,
		|	ЕСТЬNULL(ЕСТЬNULL(СведенияОДоходах.ВидТарифаСтраховыхВзносов.ЯвляетсяТарифомДляМСП, ВЫБОР
		|				КОГДА Студенты.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|						И ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ОбщаяСумма, 0) = ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ДоходыСтудентов, 0)
		|					ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ИНАЧЕ ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов.ЯвляетсяТарифомДляМСП
		|			КОНЕЦ), ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ЯвляетсяТарифомДляМСП,
		|	ЗастрахованныеЛицаБезТарифов.ВидЗастрахованногоЛица КАК ВидЗастрахованногоЛица,
		|	ЗастрахованныеЛицаБезТарифов.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЗастрахованныеЛицаБезТарифов.Период КАК Период,
		|	ЗастрахованныеЛицаБезТарифов.НачалоРаботы КАК НачалоРаботы,
		|	ЗастрахованныеЛицаБезТарифов.ДобавлятьСтрокуВПервыйМесяц КАК ДобавлятьСтрокуВПервыйМесяц,
		|	ЗастрахованныеЛицаБезТарифов.ДобавлятьСтрокуВоВторойМесяц КАК ДобавлятьСтрокуВоВторойМесяц,
		|	ЗастрахованныеЛицаБезТарифов.ДобавлятьСтрокуВТретийМесяц КАК ДобавлятьСтрокуВТретийМесяц,
		|	((НестрахуемыеДоходыФизлиц.ФизическоеЛицо ЕСТЬ NULL
		|			ИЛИ ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ОбщаяСумма, 0) = 0)
		|			И Прокуроры.ФизическоеЛицо ЕСТЬ NULL
		|		ИЛИ ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ОбщаяСумма, 0) <> ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ДоходыПрокуроровСледователей, 0))
		|		И НЕ ЗастрахованныеЛицаБезТарифов.ВидЗастрахованногоЛица В (&ВидыЗЛпоМеждународнымДоговорам) КАК ВключатьВПодраздел1,
		|	((НестрахуемыеДоходыФизлиц.ФизическоеЛицо ЕСТЬ NULL
		|			ИЛИ ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ОбщаяСумма, 0) = 0)
		|			И Прокуроры.ФизическоеЛицо ЕСТЬ NULL
		|		ИЛИ ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ОбщаяСумма, 0) <> ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ДоходыПрокуроровСледователей, 0))
		|		И ЗастрахованныеЛицаБезТарифов.ВидЗастрахованногоЛица <> ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцыСтрахуемыеФСС) КАК ВключатьВРаздел3,
		|	((НестрахуемыеДоходыФизлиц.ФизическоеЛицо ЕСТЬ NULL
		|			ИЛИ ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ОбщаяСумма, 0) = 0)
		|			И Прокуроры.ФизическоеЛицо ЕСТЬ NULL
		|		ИЛИ ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ОбщаяСумма, 0) <> ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ДоходыПрокуроровСледователей, 0))
		|		И ЗастрахованныеЛицаБезТарифов.ВидЗастрахованногоЛица В (&ВидыЗЛпоМеждународнымДоговорам) КАК ВключатьВПодраздел4,
		|	((НестрахуемыеДоходыФизлиц.ФизическоеЛицо ЕСТЬ NULL
		|			ИЛИ ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ОбщаяСумма, 0) = 0)
		|			И Прокуроры.ФизическоеЛицо ЕСТЬ NULL
		|		ИЛИ ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ОбщаяСумма, 0) <> ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ДоходыПрокуроровСледователей, 0))
		|		И ЗастрахованныеЛицаБезТарифов.ВидЗастрахованногоЛица = ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцыСтрахуемыеФСС) КАК ВключатьВПриложение5,
		|	Студенты.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|		И ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ОбщаяСумма, 0) = ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ДоходыСтудентов, 0) КАК ЕстьТолькоДоходыСтудентов,
		|	Прокуроры.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|		ИЛИ ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ДоходыПрокуроровСледователей, 0) <> 0 КАК ВключатьВРаздел4,
		|	ЗастрахованныеЛицаБезТарифов.ЗастрахованПФР КАК ЗастрахованПФР
		|ПОМЕСТИТЬ ВТЗастрахованныеЛицаОрганизации
		|ИЗ
		|	ВТЗастрахованныеЛицаБезТарифов КАК ЗастрахованныеЛицаБезТарифов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНестрахуемыеДоходы КАК НестрахуемыеДоходыФизлиц
		|		ПО ЗастрахованныеЛицаБезТарифов.ФизическоеЛицо = НестрахуемыеДоходыФизлиц.ФизическоеЛицо
		|			И ЗастрахованныеЛицаБезТарифов.Период = НестрахуемыеДоходыФизлиц.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВоеннослужащие КАК Военнослужащие
		|		ПО ЗастрахованныеЛицаБезТарифов.ФизическоеЛицо = Военнослужащие.ФизическоеЛицо
		|			И ЗастрахованныеЛицаБезТарифов.Период = Военнослужащие.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПрокуроры КАК Прокуроры
		|		ПО ЗастрахованныеЛицаБезТарифов.ФизическоеЛицо = Прокуроры.ФизическоеЛицо
		|			И ЗастрахованныеЛицаБезТарифов.Период = Прокуроры.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтуденты КАК Студенты
		|		ПО ЗастрахованныеЛицаБезТарифов.ФизическоеЛицо = Студенты.ФизическоеЛицо
		|			И ЗастрахованныеЛицаБезТарифов.Период = Студенты.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизЛицаСОблагаемойБазой КАК СведенияОДоходах
		|		ПО ЗастрахованныеЛицаБезТарифов.ФизическоеЛицо = СведенияОДоходах.ФизическоеЛицо
		|			И ЗастрахованныеЛицаБезТарифов.Период = СведенияОДоходах.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ВидыТарифовИзУчетнойПолитики
		|		ПО ЗастрахованныеЛицаБезТарифов.Период = ВидыТарифовИзУчетнойПолитики.Период
		|ГДЕ
		|	(ЕСТЬNULL(НестрахуемыеДоходыФизлиц.ОбщаяСумма, 0) = 0
		|				И Военнослужащие.ФизическоеЛицо ЕСТЬ NULL
		|			ИЛИ НестрахуемыеДоходыФизлиц.ОбщаяСумма <> НестрахуемыеДоходыФизлиц.ИсключаемыеДоходы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидТарифаСтраховыхВзносов,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Прокуроры.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТЗастрахованныеЛицаОрганизации КАК Прокуроры
		|ГДЕ
		|	Прокуроры.ВключатьВРаздел4";
		ЗаполнятьРаздел4 = Не Запрос.Выполнить().Пустой();
		
		УчетСтраховыхВзносов.СоздатьВТКодыВидовТарифаСтраховыхВзносов(НачалоПериода, ОкончаниеПериода, Запрос.МенеджерВременныхТаблиц, Истина);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходах.Период КАК Период,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.ВидЗастрахованногоЛица КАК ВидЗастрахованногоЛица,
		|	СведенияОДоходах.ЗастрахованПФР КАК ЗастрахованПФР,
		|	СведенияОДоходах.ВидЗастрахованногоЛица В (&ВидыЗЛпоМеждународнымДоговорам) КАК ВключатьВПодраздел4,
		|	СведенияОДоходах.ВидЗастрахованногоЛица = ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцыСтрахуемыеФСС) КАК ВключатьВПриложение5,
		|	СведенияОДоходах.ВидДохода.ДоходыПрокуроровСледователей КАК ВключатьВРаздел4,
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	ЕСТЬNULL(КодыВидовТарифаСтраховыхВзносов.КодФНС, """") КАК КодТарифа,
		|	СУММА(СведенияОДоходах.ПФРПоСуммарномуТарифу) КАК ПФРПоСуммарномуТарифу,
		|	СУММА(СведенияОДоходах.ПФРССуммПревышения) КАК ИсчисленоПФРССуммПревышения,
		|	СУММА(СведенияОДоходах.ОПСпоМеждународнымДоговорам) КАК ОПСпоМеждународнымДоговорам,
		|	СУММА(СведенияОДоходах.ОПСпоМеждународнымДоговорамСПревышения) КАК ОПСпоМеждународнымДоговорамСПревышения,
		|	СУММА(СведенияОДоходах.ОМСпоМеждународнымДоговорам) КАК ОМСпоМеждународнымДоговорам,
		|	СУММА(СведенияОДоходах.ОМСпоМеждународнымДоговорамСПревышения) КАК ОМСпоМеждународнымДоговорамСПревышения,
		|	СУММА(СведенияОДоходах.ОССпоМеждународнымДоговорам) КАК ОССпоМеждународнымДоговорам,
		|	СУММА(СведенияОДоходах.ОССпоМеждународнымДоговорамСПревышения) КАК ОССпоМеждународнымДоговорамСПревышения,
		|	СУММА(СведенияОДоходах.ФФОМС) КАК ФФОМС,
		|	СУММА(СведенияОДоходах.ФСС) КАК ФСС,
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ПФР - СведенияОДоходах.ДенежноеДовольствиеВоеннослужащих - СведенияОДоходах.ВыплатыУказанныеВПункте1Части3Статьи9) КАК НачисленоВсего,
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ФОМС - СведенияОДоходах.ДенежноеДовольствиеВоеннослужащих) КАК НачисленоВсегоФОМС,
		|	СУММА(СведенияОДоходах.НеОблагаетсяПФР - СведенияОДоходах.ДенежноеДовольствиеВоеннослужащих - СведенияОДоходах.РасходыПоАвторскимПФР - СведенияОДоходах.ВыплатыУказанныеВПункте1Части3Статьи9) КАК НеОблагается,
		|	СУММА(СведенияОДоходах.НеОблагаетсяФОМС - СведенияОДоходах.ДенежноеДовольствиеВоеннослужащих) КАК НеОблагаетсяФОМС,
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ПФР - СведенияОДоходах.СуммаПоТрудовомуДоговору) КАК НачисленоПоГПХ,
		|	СУММА(СведенияОДоходах.РасходыПоАвторскимПФР) КАК РасходыПоАвторскимПФР,
		|	СУММА(СведенияОДоходах.БазаПФР) КАК ОблагаемаяБазаПФР,
		|	СУММА(СведенияОДоходах.БазаФОМС) КАК ОблагаемаяБазаФОМС,
		|	СУММА(СведенияОДоходах.БазаФСС - СведенияОДоходах.СуммаПревысившаяПределФСС) КАК БазаДоПредела,
		|	СУММА(СведенияОДоходах.БазаПФР - СведенияОДоходах.СуммаПревысившаяПределПФР) КАК СуммаНеПревысившаяПределПФР,
		|	СУММА(СведенияОДоходах.БазаПФР - СведенияОДоходах.СуммаПревысившаяПределПФР - (СведенияОДоходах.БазаПФРПоТрудовомуДоговору - СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору)) КАК СуммаНеПревысившаяПределПФРпоГПХ,
		|	СУММА(СведенияОДоходах.СуммаПревысившаяПределПФР) КАК СуммаПревысившаяПределПФР,
		|	СУММА(СведенияОДоходах.СуммаПревысившаяПределФСС) КАК СуммаПревысившаяПределФСС,
		|	СведенияОДоходах.Начисление КАК Начисление,
		|	СведенияОДоходах.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТДоходыВзносов
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКодыВидовТарифаСтраховыхВзносов КАК КодыВидовТарифаСтраховыхВзносов
		|		ПО (ГОД(СведенияОДоходах.Период) = КодыВидовТарифаСтраховыхВзносов.РасчетныйПериод)
		|			И СведенияОДоходах.ВидТарифаСтраховыхВзносов = КодыВидовТарифаСтраховыхВзносов.ВидТарифаСтраховыхВзносов
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ЗастрахованПФР
		|	И СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|	И (СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|				И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|			ИЛИ СведенияОДоходах.ФФОМС <> 0
		|			ИЛИ СведенияОДоходах.ПФРССуммПревышения <> 0
		|			ИЛИ СведенияОДоходах.ПФРПоСуммарномуТарифу <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.ВидЗастрахованногоЛица,
		|	СведенияОДоходах.ЗастрахованПФР,
		|	СведенияОДоходах.ВидДохода.ДоходыПрокуроровСледователей,
		|	ЕСТЬNULL(КодыВидовТарифаСтраховыхВзносов.КодФНС, """"),
		|	СведенияОДоходах.Регистратор,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидТарифаСтраховыхВзносов,
		|	Период";
		Запрос.Выполнить();
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("ЧисленностьЗастрахованныхВРазрезеТарифов2023") Тогда 
		
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗастрахованныеЛица.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|ИЗ
		|	ВТЗастрахованныеЛицаОрганизации КАК ЗастрахованныеЛица
		|ГДЕ
		|	ЗастрахованныеЛица.ЯвляетсяТарифомДляМСП";
		Если Запрос.Выполнить().Пустой() Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ФизическиеЛица.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
			|	МЕСЯЦ(ФизическиеЛица.Период) КАК Период,
			|	ФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо,
			|	1 КАК КоличествоОПС
			|ПОМЕСТИТЬ ВТЗастрахованныеПоМесяцам
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК ФизическиеЛица
			|ГДЕ
			|	ФизическиеЛица.ЗастрахованПФР
			|	И ФизическиеЛица.ВключатьВПодраздел1";
			
		Иначе
			
			// АПК:96-выкл Использование ОБЪЕДИНИТЬ оправдано
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Доходы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
			|	Доходы.Период КАК Период,
			|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо
			|ПОМЕСТИТЬ ВТЗастрахованныеНаОПС
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ВидыТарифовИзУчетнойПолитики
			|		ПО Доходы.Период = ВидыТарифовИзУчетнойПолитики.Период
			|ГДЕ
			|	Доходы.ЗастрахованПФР
			|	И Доходы.ВключатьВПодраздел1
			|	И ЕСТЬNULL(ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов.ЯвляетсяТарифомДляМСП, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Доходы.ВидТарифаСтраховыхВзносов,
			|	Доходы.Период,
			|	Доходы.ФизическоеЛицо
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ВидыТарифовИзУчетнойПолитики
			|		ПО Доходы.Период = ВидыТарифовИзУчетнойПолитики.Период
			|ГДЕ
			|	Доходы.ЗастрахованПФР
			|	И Доходы.ВключатьВПодраздел1
			|	И ЕСТЬNULL(ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов.ЯвляетсяТарифомДляМСП, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|	И НЕ Доходы.ЯвляетсяТарифомДляМСП
			|	И Доходы.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов,
			|	Доходы.Период,
			|	Доходы.ФизическоеЛицо
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ВидыТарифовИзУчетнойПолитики
			|		ПО Доходы.Период = ВидыТарифовИзУчетнойПолитики.Период
			|ГДЕ
			|	Доходы.ЗастрахованПФР
			|	И Доходы.ВключатьВПодраздел1
			|	И ЕСТЬNULL(ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов.ЯвляетсяТарифомДляМСП, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|	И Доходы.ЯвляетсяТарифомДляМСП
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов,
			|	Доходы.Период,
			|	Доходы.ФизическоеЛицо
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ВидыТарифовИзУчетнойПолитики
			|		ПО Доходы.Период = ВидыТарифовИзУчетнойПолитики.Период
			|ГДЕ
			|	Доходы.ЗастрахованПФР
			|	И Доходы.ВключатьВПодраздел1
			|	И ЕСТЬNULL(ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов.ЯвляетсяТарифомДляМСП, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|	И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим),
			|	Доходы.Период,
			|	Доходы.ФизическоеЛицо
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ВидыТарифовИзУчетнойПолитики
			|		ПО Доходы.Период = ВидыТарифовИзУчетнойПолитики.Период
			|ГДЕ
			|	Доходы.ЗастрахованПФР
			|	И Доходы.ВключатьВПодраздел1
			|	И ЕСТЬNULL(ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов.ЯвляетсяТарифомДляМСП, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|	И Доходы.ЯвляетсяТарифомДляМСП
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим),
			|	Доходы.Период,
			|	Доходы.ФизическоеЛицо
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ВидыТарифовИзУчетнойПолитики
			|		ПО Доходы.Период = ВидыТарифовИзУчетнойПолитики.Период
			|ГДЕ
			|	Доходы.ЗастрахованПФР
			|	И Доходы.ВключатьВПодраздел1
			|	И ЕСТЬNULL(ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов.ЯвляетсяТарифомДляМСП, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|	И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗастрахованныеНаОПС.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
			|	МЕСЯЦ(ЗастрахованныеНаОПС.Период) КАК Период,
			|	ЗастрахованныеНаОПС.ФизическоеЛицо КАК ФизическоеЛицо,
			|	1 КАК КоличествоОПС
			|ПОМЕСТИТЬ ВТЗастрахованныеПоМесяцам
			|ИЗ
			|	ВТЗастрахованныеНаОПС КАК ЗастрахованныеНаОПС";
			
			// АПК:96-вкл
			
		КонецЕсли;
		
		Запрос.Выполнить();
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЗастрахованныеПоМесяцам.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	ЗастрахованныеПоМесяцам.Период КАК Период,
		|	ЗастрахованныеПоМесяцам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЗастрахованныеПоМесяцам.КоличествоОПС КАК КоличествоОПС
		|ПОМЕСТИТЬ ВТКоличествоЗастрахованных
		|ИЗ
		|	ВТЗастрахованныеПоМесяцам КАК ЗастрахованныеПоМесяцам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗастрахованныеПоМесяцам.ВидТарифаСтраховыхВзносов,
		|	0,
		|	ЗастрахованныеПоМесяцам.ФизическоеЛицо,
		|	МАКСИМУМ(ЗастрахованныеПоМесяцам.КоличествоОПС)
		|ИЗ
		|	ВТЗастрахованныеПоМесяцам КАК ЗастрахованныеПоМесяцам
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗастрахованныеПоМесяцам.ВидТарифаСтраховыхВзносов,
		|	ЗастрахованныеПоМесяцам.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КоличествоЗастрахованных.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	КоличествоЗастрахованных.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СУММА(ВЫБОР
		|			КОГДА КоличествоЗастрахованных.Период = 0
		|				ТОГДА КоличествоЗастрахованных.КоличествоОПС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000110001001,
		|	СУММА(ВЫБОР
		|			КОГДА КоличествоЗастрахованных.Период = &Месяц1
		|				ТОГДА КоличествоЗастрахованных.КоличествоОПС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000110001002,
		|	СУММА(ВЫБОР
		|			КОГДА КоличествоЗастрахованных.Период = &Месяц2
		|				ТОГДА КоличествоЗастрахованных.КоличествоОПС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000110001003,
		|	СУММА(ВЫБОР
		|			КОГДА КоличествоЗастрахованных.Период = &Месяц3
		|				ТОГДА КоличествоЗастрахованных.КоличествоОПС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000110001004
		|ИЗ
		|	ВТКоличествоЗастрахованных КАК КоличествоЗастрахованных
		|
		|СГРУППИРОВАТЬ ПО
		|	КоличествоЗастрахованных.ВидТарифаСтраховыхВзносов,
		|	КоличествоЗастрахованных.ФизическоеЛицо";
		
		МассивПолей = Новый Массив;
		Если Не ПодробныеДанные Тогда
			МассивПолей.Добавить("ФизическоеЛицо");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "КоличествоЗастрахованных");
		ОписаниеТаблиц.ЧисленностьЗастрахованныхВРазрезеТарифов2023 = Запрос.Выполнить().Выгрузить()
		
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("ВсеТарифы2023") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Доходы.КодТарифа,
		|	Доходы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|ИЗ
		|	ВТДоходыВзносов КАК Доходы
		|
		|УПОРЯДОЧИТЬ ПО
		|	Доходы.КодТарифа";
		ОписаниеТаблиц.ВсеТарифы2023 = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("ДоходыВРазрезеТарифов2023") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.НачисленоВсего
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110003001,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.НачисленоВсего
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110003002,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.НачисленоВсего
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110003003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.НачисленоВсего
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110003004,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.НеОблагается
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110004001,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.НеОблагается
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110004002,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.НеОблагается
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110004003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.НеОблагается
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110004004,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.РасходыПоАвторскимПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110004501,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.РасходыПоАвторскимПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110004502,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.РасходыПоАвторскимПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110004503,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.РасходыПоАвторскимПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110004504,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110005201,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110005202,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110005203,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110005204,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.СуммаНеПревысившаяПределПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110005101,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.СуммаНеПревысившаяПределПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110005102,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.СуммаНеПревысившаяПределПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110005103,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|						И СведенияОДоходах.ЗастрахованПФР
		|					ТОГДА СведенияОДоходах.СуммаНеПревысившаяПределПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110005104,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Начисление КАК Начисление
		|ИЗ
		|	ВТДоходыВзносов КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.ЗастрахованПФР
		|	И НЕ СведенияОДоходах.ВключатьВПодраздел4
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.ФизическоеЛицо
		|
		|ИМЕЮЩИЕ
		|	СУММА(0) = 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидТарифаСтраховыхВзносов";
		МассивПолей = Новый Массив;
		Если ПодробныеДанные Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(0) = 0", "
			|	(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) <> &Месяц1
			|					ТОГДА 0
			|				КОГДА СведенияОДоходах.ЗастрахованПФР
			|					ТОГДА СведенияОДоходах.НачисленоВсего
			|				ИНАЧЕ 0
			|			КОНЕЦ) <> 0
			|		ИЛИ СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) <> &Месяц2
			|					ТОГДА 0
			|				КОГДА СведенияОДоходах.ЗастрахованПФР
			|					ТОГДА СведенияОДоходах.НачисленоВсего
			|				ИНАЧЕ 0
			|			КОНЕЦ) <> 0
			|		ИЛИ СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) <> &Месяц3
			|					ТОГДА 0
			|				КОГДА СведенияОДоходах.ЗастрахованПФР
			|					ТОГДА СведенияОДоходах.НачисленоВсего
			|				ИНАЧЕ 0
			|			КОНЕЦ) <> 0
			|		ИЛИ СУММА(ВЫБОР
			|				КОГДА СведенияОДоходах.ЗастрахованПФР
			|					ТОГДА СведенияОДоходах.НачисленоВсего
			|				ИНАЧЕ 0
			|			КОНЕЦ) <> 0)");
		Иначе 	
			МассивПолей.Добавить("ФизическоеЛицо");
			МассивПолей.Добавить("Начисление");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(0) = 0", "
			|		СУММА(ВЫБОР
			|				КОГДА СведенияОДоходах.ЗастрахованПФР
			|					ТОГДА СведенияОДоходах.НачисленоВсего
			|				ИНАЧЕ 0
			|			КОНЕЦ) <> 0");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
		ОписаниеТаблиц.ДоходыВРазрезеТарифов2023 = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("ЧисленностьВРазрезеТарифов2023") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Доходы.Период КАК Период,
		|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Доходы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|ПОМЕСТИТЬ ВТЛицаСПревышениемБазы
		|ИЗ
		|	ВТДоходыВзносов КАК Доходы
		|ГДЕ
		|	НЕ Доходы.ВключатьВПодраздел4
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.Период,
		|	Доходы.ФизическоеЛицо,
		|	Доходы.ВидТарифаСтраховыхВзносов
		|
		|ИМЕЮЩИЕ
		|	СУММА(Доходы.СуммаПревысившаяПределПФР) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.Период КАК Период,
		|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Доходы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|ПОМЕСТИТЬ ВТЛицаБезПревышения
		|ИЗ
		|	ВТДоходыВзносов КАК Доходы
		|ГДЕ
		|	НЕ Доходы.ВключатьВПодраздел4
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.Период,
		|	Доходы.ФизическоеЛицо,
		|	Доходы.ВидТарифаСтраховыхВзносов
		|
		|ИМЕЮЩИЕ
		|	СУММА(Доходы.СуммаПревысившаяПределПФР) = 0 И
		|	СУММА(Доходы.СуммаНеПревысившаяПределПФР) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЛицаСПревышениемБазы.ФизическоеЛицо) КАК ВсегоФизлиц,
		|	ЛицаСПревышениемБазы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|ПОМЕСТИТЬ ВТЛицаСПревышениемБазыЗаВсеМесяцы
		|ИЗ
		|	ВТЛицаСПревышениемБазы КАК ЛицаСПревышениемБазы
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛицаСПревышениемБазы.ВидТарифаСтраховыхВзносов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЛицаБезПревышения.ФизическоеЛицо) КАК ВсегоФизлиц,
		|	ЛицаБезПревышения.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|ПОМЕСТИТЬ ВТЛицаБезПревышенияЗаВсеМесяцы
		|ИЗ
		|	(ВЫБРАТЬ
		|		Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|		Доходы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|	ИЗ
		|		ВТДоходыВзносов КАК Доходы
		|	ГДЕ
		|		&Месяц3 >= МЕСЯЦ(Доходы.Период)
		|		И НЕ Доходы.ВключатьВПодраздел4
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Доходы.ФизическоеЛицо,
		|		Доходы.ВидТарифаСтраховыхВзносов
		|	
		|	ИМЕЮЩИЕ
		|		СУММА(Доходы.СуммаПревысившаяПределПФР) = 0 И
		|		СУММА(Доходы.СуммаНеПревысившаяПределПФР) > 0) КАК ЛицаБезПревышения
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛицаБезПревышения.ВидТарифаСтраховыхВзносов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЛицаСПревышениемБазы.Период КАК Период,
		|	ЛицаСПревышениемБазы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЛицаСПревышениемБазы.ФизическоеЛицо) КАК ВсегоФизлиц
		|ПОМЕСТИТЬ ВТЛицаСПревышениемБазыЗаОтдельныеМесяцы
		|ИЗ
		|	ВТЛицаСПревышениемБазы КАК ЛицаСПревышениемБазы
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛицаСПревышениемБазы.ВидТарифаСтраховыхВзносов,
		|	ЛицаСПревышениемБазы.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЛицаБезПревышения.Период КАК Период,
		|	ЛицаБезПревышения.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЛицаБезПревышения.ФизическоеЛицо) КАК ВсегоФизлиц
		|ПОМЕСТИТЬ ВТЛицаБезПревышенияЗаОтдельныеМесяцы
		|ИЗ
		|	ВТЛицаБезПревышения КАК ЛицаБезПревышения
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛицаБезПревышения.ВидТарифаСтраховыхВзносов,
		|	ЛицаБезПревышения.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.Период КАК Период,
		|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Доходы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|ПОМЕСТИТЬ ВТЛицаСВзносамиФОМС
		|ИЗ
		|	ВТДоходыВзносов КАК Доходы
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.Период,
		|	Доходы.ФизическоеЛицо,
		|	Доходы.ВидТарифаСтраховыхВзносов
		|
		|ИМЕЮЩИЕ
		|	СУММА(Доходы.ОблагаемаяБазаФОМС) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Тарифы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	МАКСИМУМ(ЕСТЬNULL(ЛицаБезПревышенияЗаВсеМесяцы.ВсегоФизлиц, 0)) КАК П000110002101,
		|	МАКСИМУМ(ЕСТЬNULL(ЛицаСПревышениемБазыЗаВсеМесяцы.ВсегоФизлиц, 0)) КАК П000110002201,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСПревышениемБазыЗаОтдельныеМесяцы.Период) = &Месяц1
		|				ТОГДА ЕСТЬNULL(ЛицаСПревышениемБазыЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000110002202,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСПревышениемБазыЗаОтдельныеМесяцы.Период) = &Месяц2
		|				ТОГДА ЕСТЬNULL(ЛицаСПревышениемБазыЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000110002203,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСПревышениемБазыЗаОтдельныеМесяцы.Период) = &Месяц3
		|				ТОГДА ЕСТЬNULL(ЛицаСПревышениемБазыЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000110002204,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаБезПревышенияЗаОтдельныеМесяцы.Период) = &Месяц1
		|				ТОГДА ЕСТЬNULL(ЛицаБезПревышенияЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000110002102,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаБезПревышенияЗаОтдельныеМесяцы.Период) = &Месяц2
		|				ТОГДА ЕСТЬNULL(ЛицаБезПревышенияЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000110002103,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаБезПревышенияЗаОтдельныеМесяцы.Период) = &Месяц3
		|				ТОГДА ЕСТЬNULL(ЛицаБезПревышенияЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000110002104
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Доходы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|	ИЗ
		|		ВТДоходыВзносов КАК Доходы) КАК Тарифы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМесяцыОтчета КАК МесяцыОтчета
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаСПревышениемБазыЗаВсеМесяцы КАК ЛицаСПревышениемБазыЗаВсеМесяцы
		|		ПО Тарифы.ВидТарифаСтраховыхВзносов = ЛицаСПревышениемБазыЗаВсеМесяцы.ВидТарифаСтраховыхВзносов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаСПревышениемБазыЗаОтдельныеМесяцы КАК ЛицаСПревышениемБазыЗаОтдельныеМесяцы
		|		ПО Тарифы.ВидТарифаСтраховыхВзносов = ЛицаСПревышениемБазыЗаОтдельныеМесяцы.ВидТарифаСтраховыхВзносов
		|			И (МесяцыОтчета.МесяцПериода = МЕСЯЦ(ЛицаСПревышениемБазыЗаОтдельныеМесяцы.Период))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаБезПревышенияЗаВсеМесяцы КАК ЛицаБезПревышенияЗаВсеМесяцы
		|		ПО Тарифы.ВидТарифаСтраховыхВзносов = ЛицаБезПревышенияЗаВсеМесяцы.ВидТарифаСтраховыхВзносов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаБезПревышенияЗаОтдельныеМесяцы КАК ЛицаБезПревышенияЗаОтдельныеМесяцы
		|		ПО Тарифы.ВидТарифаСтраховыхВзносов = ЛицаБезПревышенияЗаОтдельныеМесяцы.ВидТарифаСтраховыхВзносов
		|			И (МесяцыОтчета.МесяцПериода = МЕСЯЦ(ЛицаБезПревышенияЗаОтдельныеМесяцы.Период))
		|
		|СГРУППИРОВАТЬ ПО
		|	Тарифы.ВидТарифаСтраховыхВзносов";
		ОписаниеТаблиц.ЧисленностьВРазрезеТарифов2023 = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("ВзносыВРазрезеТарифов2023") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(ВзносыФизлиц.ПФРПоСуммарномуТарифу) КАК ПФРПоСуммарномуТарифу,
		|	СУММА(ВзносыФизлиц.ИсчисленоПФРССуммПревышения) КАК ИсчисленоПФРССуммПревышения,
		|	СУММА(ВзносыФизлиц.ПФРПоСуммарномуТарифу + ВзносыФизлиц.ИсчисленоПФРССуммПревышения + ВзносыФизлиц.ОПСпоМеждународнымДоговорам + ВзносыФизлиц.ОПСпоМеждународнымДоговорамСПревышения + ВзносыФизлиц.ОМСпоМеждународнымДоговорам + ВзносыФизлиц.ОМСпоМеждународнымДоговорамСПревышения + ВзносыФизлиц.ОССпоМеждународнымДоговорам + ВзносыФизлиц.ОССпоМеждународнымДоговорамСПревышения) КАК НачисленоВПоследниеТриМесяца,
		|	ВзносыФизлиц.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	ВзносыФизлиц.КодТарифа КАК КодТарифа,
		|	ВзносыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВзносыФизлиц.ЗастрахованПФР КАК ЗастрахованПФР,
		|	МЕСЯЦ(ВзносыФизлиц.Период) КАК МесяцПериода
		|ПОМЕСТИТЬ ВТВзносыПомесячно
		|ИЗ
		|	ВТДоходыВзносов КАК ВзносыФизлиц
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзносыФизлиц.ВидТарифаСтраховыхВзносов,
		|	ВзносыФизлиц.КодТарифа,
		|	ВзносыФизлиц.ФизическоеЛицо,
		|	ВзносыФизлиц.ЗастрахованПФР,
		|	МЕСЯЦ(ВзносыФизлиц.Период)
		|
		|ИМЕЮЩИЕ
		|	(СУММА(ВзносыФизлиц.ПФРПоСуммарномуТарифу) <> 0
		|		ИЛИ СУММА(ВЫБОР
		|				КОГДА ВзносыФизлиц.ЗастрахованПФР
		|					ТОГДА ВзносыФизлиц.ИсчисленоПФРССуммПревышения
		|				ИНАЧЕ 0
		|			КОНЕЦ) <> 0)";
		Запрос.Выполнить();
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ВзносыФизлиц.ПФРПоСуммарномуТарифу), 0) КАК П000110006101,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВзносыФизлиц.МесяцПериода = &Месяц1
		|					ТОГДА ВзносыФизлиц.ПФРПоСуммарномуТарифу
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110006102,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВзносыФизлиц.МесяцПериода = &Месяц2
		|					ТОГДА ВзносыФизлиц.ПФРПоСуммарномуТарифу
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110006103,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВзносыФизлиц.МесяцПериода = &Месяц3
		|					ТОГДА ВзносыФизлиц.ПФРПоСуммарномуТарифу
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110006104,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВзносыФизлиц.ЗастрахованПФР
		|					ТОГДА ВзносыФизлиц.ИсчисленоПФРССуммПревышения
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110006201,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВзносыФизлиц.МесяцПериода = &Месяц1
		|						И ВзносыФизлиц.ЗастрахованПФР
		|					ТОГДА ВзносыФизлиц.ИсчисленоПФРССуммПревышения
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110006202,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВзносыФизлиц.МесяцПериода = &Месяц2
		|						И ВзносыФизлиц.ЗастрахованПФР
		|					ТОГДА ВзносыФизлиц.ИсчисленоПФРССуммПревышения
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110006203,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВзносыФизлиц.МесяцПериода = &Месяц3
		|						И ВзносыФизлиц.ЗастрахованПФР
		|					ТОГДА ВзносыФизлиц.ИсчисленоПФРССуммПревышения
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000110006204,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВзносыФизлиц.МесяцПериода В (&Месяц1, &Месяц2, &Месяц3)
		|					ТОГДА ВзносыФизлиц.НачисленоВПоследниеТриМесяца
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК НачисленоВПоследниеТриМесяца,
		|	ВзносыФизлиц.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	ВзносыФизлиц.КодТарифа КАК КодТарифа,
		|	ВзносыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТВзносыПомесячно КАК ВзносыФизлиц
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзносыФизлиц.ФизическоеЛицо,
		|	ВзносыФизлиц.КодТарифа,
		|	ВзносыФизлиц.ВидТарифаСтраховыхВзносов
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидТарифаСтраховыхВзносов";
		МассивПолей = Новый Массив;
		Если Не ПодробныеДанные Тогда
			МассивПолей.Добавить("ФизическоеЛицо");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "ВзносыФизлиц");
		ОписаниеТаблиц.ВзносыВРазрезеТарифов2023 = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	
	// Подраздел 2 Раздела 1
	
	Если ОписаниеТаблиц.Свойство("Подраздел2Основания2023") Или ОписаниеТаблиц.Свойство("Подраздел2Доходы2023") Или ОписаниеТаблиц.Свойство("Подраздел322Доходы2023") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	СведенияОДоходах.Период КАК Период,
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ПодземныеИВредныеРаботы) КАК НачисленоВсегоЗаЗанятыхНаПодземныхИВредныхРаботах,
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ТяжелыеИПрочиеРаботы) КАК НачисленоВсегоЗаЗанятыхНаТяжелыхИПрочихРаботах,
		|	СУММА(СведенияОДоходах.НеОблагаетсяПодземныеИВредныеРаботы) КАК НеОблагаетсяЗаЗанятыхНаПодземныхИВредныхРаботах,
		|	СУММА(СведенияОДоходах.НеОблагаетсяТяжелыеИПрочиеРаботы) КАК НеОблагаетсяЗаЗанятыхНаТяжелыхИПрочихРаботах,
		|	СУММА(СведенияОДоходах.БазаПодземныеИВредныеРаботы) КАК ОблагаемаяБазаПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
		|	СУММА(СведенияОДоходах.БазаТяжелыеИПрочиеРаботы) КАК ОблагаемаяБазаПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
		|	СведенияОДоходах.ПолеФизическоеЛицо КАК ПолеФизическоеЛицо,
		|	СведенияОДоходах.Начисление КАК Начисление
		|ПОМЕСТИТЬ ВТДоходыВредныхВзносов
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.ЗастрахованПФР
		|	И СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ПолеФизическоеЛицо,
		|	СведенияОДоходах.Начисление
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""1"" КАК П00012М100101,
		|	"""" КАК П00012М100201,
		|	"""" КАК КодКлассаУсловий,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.НачисленоВсегоЗаЗанятыхНаПодземныхИВредныхРаботах), 0) КАК П00012М102001,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.НачисленоВсегоЗаЗанятыхНаПодземныхИВредныхРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М102002,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.НачисленоВсегоЗаЗанятыхНаПодземныхИВредныхРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М102003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.НачисленоВсегоЗаЗанятыхНаПодземныхИВредныхРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М102004,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.НеОблагаетсяЗаЗанятыхНаПодземныхИВредныхРаботах), 0) КАК П00012М103001,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.НеОблагаетсяЗаЗанятыхНаПодземныхИВредныхРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М103002,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.НеОблагаетсяЗаЗанятыхНаПодземныхИВредныхРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М103003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.НеОблагаетсяЗаЗанятыхНаПодземныхИВредныхРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М103004,
		|	СведенияОДоходах.ПолеФизическоеЛицо КАК ПолеФизическоеЛицо,
		|	СведенияОДоходах.Начисление КАК Начисление
		|ИЗ
		|	ВТДоходыВредныхВзносов КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.ПолеФизическоеЛицо
		|
		|ИМЕЮЩИЕ
		|	СУММА(СведенияОДоходах.НачисленоВсегоЗаЗанятыхНаПодземныхИВредныхРаботах) <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""2"",
		|	"""",
		|	"""",
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.НачисленоВсегоЗаЗанятыхНаТяжелыхИПрочихРаботах), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.НачисленоВсегоЗаЗанятыхНаТяжелыхИПрочихРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.НачисленоВсегоЗаЗанятыхНаТяжелыхИПрочихРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.НачисленоВсегоЗаЗанятыхНаТяжелыхИПрочихРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.НеОблагаетсяЗаЗанятыхНаТяжелыхИПрочихРаботах), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.НеОблагаетсяЗаЗанятыхНаТяжелыхИПрочихРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.НеОблагаетсяЗаЗанятыхНаТяжелыхИПрочихРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.НеОблагаетсяЗаЗанятыхНаТяжелыхИПрочихРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0),
		|	СведенияОДоходах.ПолеФизическоеЛицо,
		|	СведенияОДоходах.Начисление
		|ИЗ
		|	ВТДоходыВредныхВзносов КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.ПолеФизическоеЛицо
		|
		|ИМЕЮЩИЕ
		|	СУММА(СведенияОДоходах.НачисленоВсегоЗаЗанятыхНаТяжелыхИПрочихРаботах) <> 0";
		МассивПолей = Новый Массив;
		Если ПодробныеДанные Тогда
			Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ПолеФизическоеЛицо", "ФизическоеЛицо");
		Иначе 
			МассивПолей = Новый Массив;
			МассивПолей.Добавить("Начисление");
			МассивПолей.Добавить("ПолеФизическоеЛицо");
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
		КонецЕсли;
		Подраздел2БезКлассовУсловийТрудаДоходы = Запрос.Выполнить().Выгрузить();
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходах.Период КАК Период,
		|	""3"" КАК Основание,
		|	""1"" КАК КлассУсловийТруда,
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ПодземныеИВредныеРаботыОпасный) КАК НачисленоВсего,
		|	СУММА(СведенияОДоходах.НеОблагаетсяПодземныеИВредныеРаботыОпасный) КАК НеОблагается,
		|	СУММА(СведенияОДоходах.БазаПодземныеИВредныеРаботыОпасный) КАК ОблагаемаяБаза,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Начисление КАК Начисление,
		|	СведенияОДоходах.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТДоходыПоКлассамУсловий
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.ЗастрахованПФР
		|	И СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОДоходах.Период,
		|	""3"",
		|	""2"",
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ПодземныеИВредныеРаботыВредный4),
		|	СУММА(СведенияОДоходах.НеОблагаетсяПодземныеИВредныеРаботыВредный4),
		|	СУММА(СведенияОДоходах.БазаПодземныеИВредныеРаботыВредный4),
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.ЗастрахованПФР
		|	И СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОДоходах.Период,
		|	""3"",
		|	""3"",
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ПодземныеИВредныеРаботыВредный3),
		|	СУММА(СведенияОДоходах.НеОблагаетсяПодземныеИВредныеРаботыВредный3),
		|	СУММА(СведенияОДоходах.БазаПодземныеИВредныеРаботыВредный3),
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.ЗастрахованПФР
		|	И СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОДоходах.Период,
		|	""3"",
		|	""4"",
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ПодземныеИВредныеРаботыВредный2),
		|	СУММА(СведенияОДоходах.НеОблагаетсяПодземныеИВредныеРаботыВредный2),
		|	СУММА(СведенияОДоходах.БазаПодземныеИВредныеРаботыВредный2),
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.ЗастрахованПФР
		|	И СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОДоходах.Период,
		|	""3"",
		|	""5"",
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ПодземныеИВредныеРаботыВредный1),
		|	СУММА(СведенияОДоходах.НеОблагаетсяПодземныеИВредныеРаботыВредный1),
		|	СУММА(СведенияОДоходах.БазаПодземныеИВредныеРаботыВредный1),
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.ЗастрахованПФР
		|	И СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОДоходах.Период,
		|	""4"",
		|	""1"",
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ТяжелыеИПрочиеРаботыОпасный),
		|	СУММА(СведенияОДоходах.НеОблагаетсяТяжелыеИПрочиеРаботыОпасный),
		|	СУММА(СведенияОДоходах.БазаТяжелыеИПрочиеРаботыОпасный),
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.ЗастрахованПФР
		|	И СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОДоходах.Период,
		|	""4"",
		|	""2"",
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ТяжелыеИПрочиеРаботыВредный4),
		|	СУММА(СведенияОДоходах.НеОблагаетсяТяжелыеИПрочиеРаботыВредный4),
		|	СУММА(СведенияОДоходах.БазаТяжелыеИПрочиеРаботыВредный4),
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.ЗастрахованПФР
		|	И СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОДоходах.Период,
		|	""4"",
		|	""3"",
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ТяжелыеИПрочиеРаботыВредный3),
		|	СУММА(СведенияОДоходах.НеОблагаетсяТяжелыеИПрочиеРаботыВредный3),
		|	СУММА(СведенияОДоходах.БазаТяжелыеИПрочиеРаботыВредный3),
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.ЗастрахованПФР
		|	И СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОДоходах.Период,
		|	""4"",
		|	""4"",
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ТяжелыеИПрочиеРаботыВредный2),
		|	СУММА(СведенияОДоходах.НеОблагаетсяТяжелыеИПрочиеРаботыВредный2),
		|	СУММА(СведенияОДоходах.БазаТяжелыеИПрочиеРаботыВредный2),
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.ЗастрахованПФР
		|	И СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОДоходах.Период,
		|	""4"",
		|	""5"",
		|	СУММА(СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7ТяжелыеИПрочиеРаботыВредный1),
		|	СУММА(СведенияОДоходах.НеОблагаетсяТяжелыеИПрочиеРаботыВредный1),
		|	СУММА(СведенияОДоходах.БазаТяжелыеИПрочиеРаботыВредный1),
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.ЗастрахованПФР
		|	И СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период";
		Запрос.Выполнить()
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Подраздел2Основания2023") Или ОписаниеТаблиц.Свойство("Подраздел2Взносы2023") Или ОписаниеТаблиц.Свойство("Подраздел2Численность2023") Или ОписаниеТаблиц.Свойство("Подраздел322Доходы2023") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	""1"" КАК П00012М100101,
		|	"""" КАК П00012М100201,
		|	"""" КАК КодКлассаУсловий,
		|	ЕСТЬNULL(СУММА(ВзносыФизлиц.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах), 0) КАК П00012М105001,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц1
		|					ТОГДА ВзносыФизлиц.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М105002,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц2
		|					ТОГДА ВзносыФизлиц.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М105003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц3
		|					ТОГДА ВзносыФизлиц.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М105004,
		|	ВзносыФизлиц.ПолеФизическоеЛицо КАК ПолеФизическоеЛицо
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК ВзносыФизлиц
		|ГДЕ
		|	ВзносыФизлиц.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|	И ВзносыФизлиц.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И ВзносыФизлиц.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И ВзносыФизлиц.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И ВзносыФизлиц.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзносыФизлиц.ПолеФизическоеЛицо
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВзносыФизлиц.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""2"",
		|	"""" КАК П00012М100201,
		|	"""" КАК КодКлассаУсловий,
		|	ЕСТЬNULL(СУММА(ВзносыФизлиц.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц1
		|					ТОГДА ВзносыФизлиц.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц2
		|					ТОГДА ВзносыФизлиц.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц3
		|					ТОГДА ВзносыФизлиц.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0),
		|	ВзносыФизлиц.ПолеФизическоеЛицо
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК ВзносыФизлиц
		|ГДЕ
		|	ВзносыФизлиц.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|	И ВзносыФизлиц.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И ВзносыФизлиц.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И ВзносыФизлиц.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И ВзносыФизлиц.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзносыФизлиц.ПолеФизическоеЛицо
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВзносыФизлиц.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) <> 0";
		Если ПодробныеДанные Тогда
			Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ПолеФизическоеЛицо", "ФизическоеЛицо");
		Иначе 
			МассивПолей = Новый Массив;
			МассивПолей.Добавить("ПолеФизическоеЛицо");
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "ВзносыФизлиц");
		КонецЕсли;
		Подраздел2БезКлассовУсловийТрудаВзносы2023 = Запрос.Выполнить().Выгрузить();
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Взносы.Основание КАК Основание,
		|	Взносы.КлассУсловийТруда КАК КлассУсловийТруда,
		|	Взносы.Период КАК Период,
		|	СУММА(Взносы.Сумма) КАК Взносы,
		|	Взносы.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТВзносыПоКлассамУсловий
		|ИЗ
		|	(ВЫБРАТЬ
		|		""3"" КАК Основание,
		|		""1"" КАК КлассУсловийТруда,
		|		ВзносыФизлиц.Период КАК Период,
		|		ВзносыФизлиц.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасный КАК Сумма,
		|		ВзносыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо
		|	ИЗ
		|		ВТРасширенныеСведенияОДоходахИВзносах КАК ВзносыФизлиц
		|	ГДЕ
		|		ВзносыФизлиц.ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					Организации.ФизическоеЛицо
		|				ИЗ
		|					ВТФизЛицаСОблагаемойБазой КАК Организации)
		|		И ВзносыФизлиц.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|		И ВзносыФизлиц.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""3"",
		|		""2"",
		|		ВзносыФизлиц.Период,
		|		ВзносыФизлиц.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4,
		|		ВзносыФизлиц.ФизическоеЛицо
		|	ИЗ
		|		ВТРасширенныеСведенияОДоходахИВзносах КАК ВзносыФизлиц
		|	ГДЕ
		|		ВзносыФизлиц.ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					Организации.ФизическоеЛицо
		|				ИЗ
		|					ВТФизЛицаСОблагаемойБазой КАК Организации)
		|		И ВзносыФизлиц.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|		И ВзносыФизлиц.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""3"",
		|		""3"",
		|		ВзносыФизлиц.Период,
		|		ВзносыФизлиц.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3,
		|		ВзносыФизлиц.ФизическоеЛицо
		|	ИЗ
		|		ВТРасширенныеСведенияОДоходахИВзносах КАК ВзносыФизлиц
		|	ГДЕ
		|		ВзносыФизлиц.ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					Организации.ФизическоеЛицо
		|				ИЗ
		|					ВТФизЛицаСОблагаемойБазой КАК Организации)
		|		И ВзносыФизлиц.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|		И ВзносыФизлиц.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""3"",
		|		""4"",
		|		ВзносыФизлиц.Период,
		|		ВзносыФизлиц.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2,
		|		ВзносыФизлиц.ФизическоеЛицо
		|	ИЗ
		|		ВТРасширенныеСведенияОДоходахИВзносах КАК ВзносыФизлиц
		|	ГДЕ
		|		ВзносыФизлиц.ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					Организации.ФизическоеЛицо
		|				ИЗ
		|					ВТФизЛицаСОблагаемойБазой КАК Организации)
		|		И ВзносыФизлиц.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|		И ВзносыФизлиц.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""3"",
		|		""5"",
		|		ВзносыФизлиц.Период,
		|		ВзносыФизлиц.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1,
		|		ВзносыФизлиц.ФизическоеЛицо
		|	ИЗ
		|		ВТРасширенныеСведенияОДоходахИВзносах КАК ВзносыФизлиц
		|	ГДЕ
		|		ВзносыФизлиц.ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					Организации.ФизическоеЛицо
		|				ИЗ
		|					ВТФизЛицаСОблагаемойБазой КАК Организации)
		|		И ВзносыФизлиц.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|		И ВзносыФизлиц.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""4"",
		|		""1"",
		|		ВзносыФизлиц.Период,
		|		ВзносыФизлиц.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный,
		|		ВзносыФизлиц.ФизическоеЛицо
		|	ИЗ
		|		ВТРасширенныеСведенияОДоходахИВзносах КАК ВзносыФизлиц
		|	ГДЕ
		|		ВзносыФизлиц.ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					Организации.ФизическоеЛицо
		|				ИЗ
		|					ВТФизЛицаСОблагаемойБазой КАК Организации)
		|		И ВзносыФизлиц.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|		И ВзносыФизлиц.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""4"",
		|		""2"",
		|		ВзносыФизлиц.Период,
		|		ВзносыФизлиц.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4,
		|		ВзносыФизлиц.ФизическоеЛицо
		|	ИЗ
		|		ВТРасширенныеСведенияОДоходахИВзносах КАК ВзносыФизлиц
		|	ГДЕ
		|		ВзносыФизлиц.ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					Организации.ФизическоеЛицо
		|				ИЗ
		|					ВТФизЛицаСОблагаемойБазой КАК Организации)
		|		И ВзносыФизлиц.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|		И ВзносыФизлиц.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""4"",
		|		""3"",
		|		ВзносыФизлиц.Период,
		|		ВзносыФизлиц.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3,
		|		ВзносыФизлиц.ФизическоеЛицо
		|	ИЗ
		|		ВТРасширенныеСведенияОДоходахИВзносах КАК ВзносыФизлиц
		|	ГДЕ
		|		ВзносыФизлиц.ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					Организации.ФизическоеЛицо
		|				ИЗ
		|					ВТФизЛицаСОблагаемойБазой КАК Организации)
		|		И ВзносыФизлиц.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|		И ВзносыФизлиц.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""4"",
		|		""4"",
		|		ВзносыФизлиц.Период,
		|		ВзносыФизлиц.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2,
		|		ВзносыФизлиц.ФизическоеЛицо
		|	ИЗ
		|		ВТРасширенныеСведенияОДоходахИВзносах КАК ВзносыФизлиц
		|	ГДЕ
		|		ВзносыФизлиц.ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					Организации.ФизическоеЛицо
		|				ИЗ
		|					ВТФизЛицаСОблагаемойБазой КАК Организации)
		|		И ВзносыФизлиц.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|		И ВзносыФизлиц.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""4"",
		|		""5"",
		|		ВзносыФизлиц.Период,
		|		ВзносыФизлиц.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1,
		|		ВзносыФизлиц.ФизическоеЛицо
		|	ИЗ
		|		ВТРасширенныеСведенияОДоходахИВзносах КАК ВзносыФизлиц
		|	ГДЕ
		|		ВзносыФизлиц.ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					Организации.ФизическоеЛицо
		|				ИЗ
		|					ВТФизЛицаСОблагаемойБазой КАК Организации)
		|		И ВзносыФизлиц.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|		И ВзносыФизлиц.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода) КАК Взносы
		|
		|СГРУППИРОВАТЬ ПО
		|	Взносы.Основание,
		|	Взносы.Период,
		|	Взносы.ФизическоеЛицо,
		|	Взносы.КлассУсловийТруда
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Взносы.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВзносыФизлиц.Основание КАК Основание,
		|	ВзносыФизлиц.КлассУсловийТруда КАК КлассУсловийТруда
		|ПОМЕСТИТЬ ВТОснованияВзносов
		|ИЗ
		|	ВТВзносыПоКлассамУсловий КАК ВзносыФизлиц
		|ГДЕ
		|	ВзносыФизлиц.Взносы > 0";
		Запрос.Выполнить()
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("Подраздел2Основания2023") Тогда
		// АПК:96-выкл Использование ОБЪЕДИНИТЬ оправдано
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Доходы.Основание КАК П00012М100101,
		|	Доходы.КлассУсловийТруда КАК П00012М100201
		|ИЗ
		|	ВТДоходыПоКлассамУсловий КАК Доходы
		|ГДЕ
		|	Доходы.НачисленоВсего > 0
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Взносы.Основание,
		|	Взносы.КлассУсловийТруда
		|ИЗ
		|	ВТОснованияВзносов КАК Взносы
		|
		|УПОРЯДОЧИТЬ ПО
		|	П00012М100101,
		|	П00012М100201";
		// АПК:96-вкл 
		ОписаниеТаблиц.Подраздел2Основания2023 = Запрос.Выполнить().Выгрузить() ;
		Если Подраздел2БезКлассовУсловийТрудаДоходы.Количество() > 0 Тогда
			НоваяСтрока = ОписаниеТаблиц.Подраздел2Основания2023.Добавить();
			НоваяСтрока.П00012М100101 = "1";
			НоваяСтрока.П00012М100201 = "";
			НоваяСтрока = ОписаниеТаблиц.Подраздел2Основания2023.Добавить();
			НоваяСтрока.П00012М100101 = "2";
			НоваяСтрока.П00012М100201 = "";
		КонецЕсли;
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Подраздел2Доходы2023") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	СведенияОДоходах.Основание КАК П00012М100101,
		|	СведенияОДоходах.КлассУсловийТруда КАК П00012М100201,
		|	СведенияОДоходах.КлассУсловийТруда КАК КодКлассаУсловий,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.НачисленоВсего), 0) КАК П00012М102001,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.НачисленоВсего
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М102002,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.НачисленоВсего
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М102003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.НачисленоВсего
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М102004,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.НеОблагается), 0) КАК П00012М103001,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.НеОблагается
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М103002,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.НеОблагается
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М103003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.НеОблагается
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М103004,
		|	СведенияОДоходах.ПолеФизическоеЛицо КАК ПолеФизическоеЛицо,
		|	СведенияОДоходах.Начисление КАК Начисление
		|ИЗ
		|	ВТДоходыПоКлассамУсловий КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.ПолеФизическоеЛицо,
		|	СведенияОДоходах.КлассУсловийТруда,
		|	СведенияОДоходах.Основание,
		|	СведенияОДоходах.КлассУсловийТруда";
		МассивПолей = Новый Массив;
		Если ПодробныеДанные Тогда
			Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ПолеФизическоеЛицо", "ФизическоеЛицо");
		Иначе 
			МассивПолей = Новый Массив;
			МассивПолей.Добавить("Начисление");
			МассивПолей.Добавить("ПолеФизическоеЛицо");
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
		КонецЕсли;
		ОписаниеТаблиц.Подраздел2Доходы2023 = Запрос.Выполнить().Выгрузить();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Подраздел2БезКлассовУсловийТрудаДоходы, ОписаниеТаблиц.Подраздел2Доходы2023);
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Подраздел2Численность2023") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Взносы.Период КАК Период,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Взносы.ФизическоеЛицо) КАК ВсегоФизлиц
		|ПОМЕСТИТЬ ВТЛицаСВреднымиВзносамиЗаОтдельныеМесяцы
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК Взносы
		|ГДЕ
		|	Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах <> 0
		|	И Взносы.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И Взносы.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И Взносы.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И Взносы.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	Взносы.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Взносы.Период КАК Период,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Взносы.ФизическоеЛицо) КАК ВсегоФизлиц
		|ПОМЕСТИТЬ ВТЛицаСТяжелымиВзносамиЗаОтдельныеМесяцы
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК Взносы
		|ГДЕ
		|	Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах <> 0
		|	И Взносы.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И Взносы.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И Взносы.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И Взносы.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	Взносы.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Взносы.ФизическоеЛицо) КАК ВсегоФизлиц
		|ПОМЕСТИТЬ ВТЛицаСВреднымиВзносамиЗаВсеМесяцы
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК Взносы
		|ГДЕ
		|	Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах <> 0
		|	И Взносы.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И Взносы.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И Взносы.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И Взносы.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Взносы.ФизическоеЛицо) КАК ВсегоФизлиц
		|ПОМЕСТИТЬ ВТЛицаСТяжелымиВзносамиЗаВсеМесяцы
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК Взносы
		|ГДЕ
		|	Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах <> 0
		|	И Взносы.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И Взносы.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И Взносы.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И Взносы.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""1"" КАК П00012М100101,
		|	"""" КАК П00012М100201,
		|	МАКСИМУМ(ЕСТЬNULL(ЛицаСВреднымиВзносамиЗаВсеМесяцы.ВсегоФизлиц, 0)) КАК П00012М101001,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.Период) = &Месяц1
		|				ТОГДА ЕСТЬNULL(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П00012М101002,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.Период) = &Месяц2
		|				ТОГДА ЕСТЬNULL(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П00012М101003,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.Период) = &Месяц3
		|				ТОГДА ЕСТЬNULL(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П00012М101004
		|ИЗ
		|	ВТМесяцыОтчета КАК МесяцыОтчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаСВреднымиВзносамиЗаВсеМесяцы КАК ЛицаСВреднымиВзносамиЗаВсеМесяцы
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаСВреднымиВзносамиЗаОтдельныеМесяцы КАК ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы
		|		ПО (МесяцыОтчета.МесяцПериода = МЕСЯЦ(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.Период))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""2"",
		|	"""",
		|	МАКСИМУМ(ЕСТЬNULL(ЛицаСТяжелымиВзносамиЗаВсеМесяцы.ВсегоФизлиц, 0)),
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСТяжелымиВзносамиЗаОтдельныеМесяцы.Период) = &Месяц1
		|				ТОГДА ЕСТЬNULL(ЛицаСТяжелымиВзносамиЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСТяжелымиВзносамиЗаОтдельныеМесяцы.Период) = &Месяц2
		|				ТОГДА ЕСТЬNULL(ЛицаСТяжелымиВзносамиЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСТяжелымиВзносамиЗаОтдельныеМесяцы.Период) = &Месяц3
		|				ТОГДА ЕСТЬNULL(ЛицаСТяжелымиВзносамиЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ)
		|ИЗ
		|	ВТМесяцыОтчета КАК МесяцыОтчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаСТяжелымиВзносамиЗаВсеМесяцы КАК ЛицаСТяжелымиВзносамиЗаВсеМесяцы
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаСТяжелымиВзносамиЗаОтдельныеМесяцы КАК ЛицаСТяжелымиВзносамиЗаОтдельныеМесяцы
		|		ПО (МесяцыОтчета.МесяцПериода = МЕСЯЦ(ЛицаСТяжелымиВзносамиЗаОтдельныеМесяцы.Период))";
		Подраздел2БезКлассовУсловийТрудаЧисленность = Запрос.Выполнить().Выгрузить();
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВзносыПоКлассамУсловий.Основание КАК Основание,
		|	ВзносыПоКлассамУсловий.КлассУсловийТруда КАК КлассУсловийТруда,
		|	СУММА(ВЫБОР
		|			КОГДА ВзносыПоКлассамУсловий.Взносы > 0
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВсегоФизлиц,
		|	ВзносыПоКлассамУсловий.Период КАК Период
		|ПОМЕСТИТЬ ВТЛицаСВзносамиПоКлассамУсловийТрудаЗаОтдельныеМесяцы
		|ИЗ
		|	ВТВзносыПоКлассамУсловий КАК ВзносыПоКлассамУсловий
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзносыПоКлассамУсловий.Период,
		|	ВзносыПоКлассамУсловий.КлассУсловийТруда,
		|	ВзносыПоКлассамУсловий.Основание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВзносыЗаВесьПериод.КлассУсловийТруда КАК КлассУсловийТруда,
		|	СУММА(ВЫБОР
		|			КОГДА ВзносыЗаВесьПериод.Взносы > 0
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВсегоФизлиц,
		|	ВзносыЗаВесьПериод.Основание КАК Основание
		|ПОМЕСТИТЬ ВТЛицаСВзносамиПоКлассамУсловийТрудаЗаВсеМесяцы
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВзносыПоКлассамУсловий.Основание КАК Основание,
		|		ВзносыПоКлассамУсловий.КлассУсловийТруда КАК КлассУсловийТруда,
		|		ВзносыПоКлассамУсловий.ФизическоеЛицо КАК ФизическоеЛицо,
		|		СУММА(ВзносыПоКлассамУсловий.Взносы) КАК Взносы
		|	ИЗ
		|		ВТВзносыПоКлассамУсловий КАК ВзносыПоКлассамУсловий
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВзносыПоКлассамУсловий.Основание,
		|		ВзносыПоКлассамУсловий.КлассУсловийТруда,
		|		ВзносыПоКлассамУсловий.ФизическоеЛицо) КАК ВзносыЗаВесьПериод
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзносыЗаВесьПериод.КлассУсловийТруда,
		|	ВзносыЗаВесьПериод.Основание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОснованияВзносов.Основание КАК П00012М100101,
		|	ОснованияВзносов.КлассУсловийТруда КАК П00012М100201,
		|	МАКСИМУМ(ЕСТЬNULL(ЛицаСВреднымиВзносамиЗаВсеМесяцы.ВсегоФизлиц, 0)) КАК П00012М101001,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.Период) = &Месяц1
		|				ТОГДА ЕСТЬNULL(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П00012М101002,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.Период) = &Месяц2
		|				ТОГДА ЕСТЬNULL(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П00012М101003,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.Период) = &Месяц3
		|				ТОГДА ЕСТЬNULL(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П00012М101004
		|ИЗ
		|	ВТМесяцыОтчета КАК МесяцыОтчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияВзносов КАК ОснованияВзносов
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаСВзносамиПоКлассамУсловийТрудаЗаВсеМесяцы КАК ЛицаСВреднымиВзносамиЗаВсеМесяцы
		|		ПО (ОснованияВзносов.Основание = ЛицаСВреднымиВзносамиЗаВсеМесяцы.Основание)
		|			И (ОснованияВзносов.КлассУсловийТруда = ЛицаСВреднымиВзносамиЗаВсеМесяцы.КлассУсловийТруда)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаСВзносамиПоКлассамУсловийТрудаЗаОтдельныеМесяцы КАК ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы
		|		ПО (МесяцыОтчета.МесяцПериода = МЕСЯЦ(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.Период))
		|			И (ОснованияВзносов.Основание = ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.Основание)
		|			И (ОснованияВзносов.КлассУсловийТруда = ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.КлассУсловийТруда)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОснованияВзносов.КлассУсловийТруда,
		|	ОснованияВзносов.Основание";
		ОписаниеТаблиц.Подраздел2Численность2023 = Запрос.Выполнить().Выгрузить();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Подраздел2БезКлассовУсловийТрудаЧисленность, ОписаниеТаблиц.Подраздел2Численность2023);
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Подраздел2Взносы2023") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВзносыФизлиц.КлассУсловийТруда КАК П00012М100201,
		|	ВзносыФизлиц.КлассУсловийТруда КАК КодКлассаУсловий,
		|	ВзносыФизлиц.Основание КАК П00012М100101,
		|	ЕСТЬNULL(СУММА(ВзносыФизлиц.Взносы), 0) КАК П00012М105001,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц1
		|					ТОГДА ВзносыФизлиц.Взносы
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М105002,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц2
		|					ТОГДА ВзносыФизлиц.Взносы
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М105003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц3
		|					ТОГДА ВзносыФизлиц.Взносы
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П00012М105004,
		|	ВзносыФизлиц.ПолеФизическоеЛицо КАК ПолеФизическоеЛицо
		|ИЗ
		|	ВТВзносыПоКлассамУсловий КАК ВзносыФизлиц
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзносыФизлиц.Основание,
		|	ВзносыФизлиц.КлассУсловийТруда,
		|	ВзносыФизлиц.ПолеФизическоеЛицо,
		|	ВзносыФизлиц.КлассУсловийТруда";
		Если ПодробныеДанные Тогда
			Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ПолеФизическоеЛицо", "ФизическоеЛицо");
		Иначе 
			МассивПолей = Новый Массив;
			МассивПолей.Добавить("ПолеФизическоеЛицо");
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "ВзносыФизлиц");
		КонецЕсли;
		ОписаниеТаблиц.Подраздел2Взносы2023 = Запрос.Выполнить().Выгрузить();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Подраздел2БезКлассовУсловийТрудаВзносы2023, ОписаниеТаблиц.Подраздел2Взносы2023);
	КонецЕсли;
	
	// Подраздел 3 Раздела 1
	
	Если ОписаниеТаблиц.Свойство("Подраздел3Доходы2023") Или ОписаниеТаблиц.Свойство("Подраздел3Численность2023") Или ОписаниеТаблиц.Свойство("Подраздел3Взносы2023") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходах.Период КАК Период,
		|	""1"" КАК Основание,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам
		|				ТОГДА СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НачисленоВсего,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам
		|				ТОГДА СведенияОДоходах.НеОблагаетсяПФР
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НеОблагается,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам
		|				ТОГДА СведенияОДоходах.БазаПФР
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаемаяБаза,
		|	СУММА(СведенияОДоходах.ПФРНаДоплатуЛетчикам) КАК Взносы,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Начисление КАК Начисление
		|ПОМЕСТИТЬ ВТДоходыВзносыАвиаторовГорняков
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.ЗастрахованПФР
		|	И (СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам
		|			ИЛИ СведенияОДоходах.ПФРНаДоплатуЛетчикам <> 0)
		|	И СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОДоходах.Период,
		|	""2"",
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам
		|				ТОГДА СведенияОДоходах.ОбъектОбложенияВзносамиСтатья7
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам
		|				ТОГДА СведенияОДоходах.НеОблагаетсяПФР
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам
		|				ТОГДА СведенияОДоходах.БазаПФР
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	СУММА(СведенияОДоходах.ПФРНаДоплатуШахтерам),
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление
		|ИЗ
		|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
		|	И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СведенияОДоходах.ЗастрахованПФР
		|	И (СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам
		|			ИЛИ СведенияОДоходах.ПФРНаДоплатуШахтерам <> 0)
		|	И СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Организации.ФизическоеЛицо
		|			ИЗ
		|				ВТФизЛицаСОблагаемойБазой КАК Организации)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление";
		Запрос.Выполнить()
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Подраздел3Доходы2023") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	СведенияОДоходах.Основание КАК П000130000101,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.НачисленоВсего), 0) КАК П000130002001,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.НачисленоВсего
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000130002002,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.НачисленоВсего
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000130002003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.НачисленоВсего
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000130002004,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.НеОблагается), 0) КАК П000130003001,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.НеОблагается
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000130003002,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.НеОблагается
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000130003003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.НеОблагается
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000130003004,
		|	СведенияОДоходах.ПолеФизическоеЛицо КАК ПолеФизическоеЛицо,
		|	СведенияОДоходах.Начисление КАК Начисление
		|ИЗ
		|	ВТДоходыВзносыАвиаторовГорняков КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.ПолеФизическоеЛицо,
		|	СведенияОДоходах.Основание";
		МассивПолей = Новый Массив;
		Если ПодробныеДанные Тогда
			Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ПолеФизическоеЛицо", "ФизическоеЛицо");
		Иначе 
			МассивПолей = Новый Массив;
			МассивПолей.Добавить("Начисление");
			МассивПолей.Добавить("ПолеФизическоеЛицо");
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
		КонецЕсли;
		ОписаниеТаблиц.Подраздел3Доходы2023 = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Подраздел3Численность2023") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВзносыФизлиц.Основание КАК Основание,
		|	СУММА(ВЫБОР
		|			КОГДА ВзносыФизлиц.Взносы > 0
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВсегоФизлиц,
		|	ВзносыФизлиц.Период КАК Период
		|ПОМЕСТИТЬ ВТЛицаСВзносамиАвиаторовГорняковЗаОтдельныеМесяцы
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВзносыФизлиц.Основание КАК Основание,
		|		ВзносыФизлиц.Период КАК Период,
		|		ВзносыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|		СУММА(ВзносыФизлиц.Взносы) КАК Взносы
		|	ИЗ
		|		ВТДоходыВзносыАвиаторовГорняков КАК ВзносыФизлиц
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВзносыФизлиц.Основание,
		|		ВзносыФизлиц.Период,
		|		ВзносыФизлиц.ФизическоеЛицо) КАК ВзносыФизлиц
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзносыФизлиц.Период,
		|	ВзносыФизлиц.Основание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВзносыФизлиц.Основание КАК Основание
		|ПОМЕСТИТЬ ВТОснованияВзносовАвиаторовГорняков
		|ИЗ
		|	ВТДоходыВзносыАвиаторовГорняков КАК ВзносыФизлиц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА ВзносыЗаВесьПериод.Взносы > 0
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВсегоФизлиц,
		|	ВзносыЗаВесьПериод.Основание КАК Основание
		|ПОМЕСТИТЬ ВТЛицаСВзносамиАвиаторовГорняковЗаВсеМесяцы
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВзносыФизлиц.Основание КАК Основание,
		|		ВзносыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|		СУММА(ВзносыФизлиц.Взносы) КАК Взносы
		|	ИЗ
		|		ВТДоходыВзносыАвиаторовГорняков КАК ВзносыФизлиц
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВзносыФизлиц.Основание,
		|		ВзносыФизлиц.ФизическоеЛицо) КАК ВзносыЗаВесьПериод
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзносыЗаВесьПериод.Основание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА ВзносыЗаВесьПериод.Взносы > 0
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВсегоФизлиц,
		|	ВзносыЗаВесьПериод.Основание КАК Основание
		|ПОМЕСТИТЬ ВТЛицаСВзносамиАвиаторовГорняковЗаКвартал
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВзносыФизлиц.Основание КАК Основание,
		|		ВзносыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|		СУММА(ВзносыФизлиц.Взносы) КАК Взносы
		|	ИЗ
		|		ВТДоходыВзносыАвиаторовГорняков КАК ВзносыФизлиц
		|	ГДЕ
		|		ВзносыФизлиц.Период МЕЖДУ &НачалоОтчетногоКвартала И &КонецОтчетногоПериода
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВзносыФизлиц.Основание,
		|		ВзносыФизлиц.ФизическоеЛицо) КАК ВзносыЗаВесьПериод
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзносыЗаВесьПериод.Основание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ЕСТЬNULL(ЛицаСВреднымиВзносамиЗаВсеМесяцы.ВсегоФизлиц, 0)) КАК П000130001001,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.Период) = &Месяц1
		|				ТОГДА ЕСТЬNULL(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000130001002,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.Период) = &Месяц2
		|				ТОГДА ЕСТЬNULL(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000130001003,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.Период) = &Месяц3
		|				ТОГДА ЕСТЬNULL(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000130001004,
		|	ОснованияВзносов.Основание КАК П000130000101
		|ИЗ
		|	ВТМесяцыОтчета КАК МесяцыОтчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияВзносовАвиаторовГорняков КАК ОснованияВзносов
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаСВзносамиАвиаторовГорняковЗаВсеМесяцы КАК ЛицаСВреднымиВзносамиЗаВсеМесяцы
		|			ПО ОснованияВзносов.Основание = ЛицаСВреднымиВзносамиЗаВсеМесяцы.Основание
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаСВзносамиАвиаторовГорняковЗаКвартал КАК ЛицаСВреднымиВзносамиЗаКвартал
		|			ПО ОснованияВзносов.Основание = ЛицаСВреднымиВзносамиЗаКвартал.Основание
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаСВзносамиАвиаторовГорняковЗаОтдельныеМесяцы КАК ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы
		|		ПО (МесяцыОтчета.МесяцПериода = МЕСЯЦ(ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.Период))
		|			И (ОснованияВзносов.Основание = ЛицаСВреднымиВзносамиЗаОтдельныеМесяцы.Основание)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОснованияВзносов.Основание";
		ОписаниеТаблиц.Подраздел3Численность2023 = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Подраздел3Взносы2023") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВзносыФизлиц.Основание КАК П000130000101,
		|	ЕСТЬNULL(СУММА(ВзносыФизлиц.Взносы), 0) КАК П000130005001,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц1
		|					ТОГДА ВзносыФизлиц.Взносы
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000130005002,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц2
		|					ТОГДА ВзносыФизлиц.Взносы
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000130005003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц3
		|					ТОГДА ВзносыФизлиц.Взносы
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000130005004,
		|	ВзносыФизлиц.ПолеФизическоеЛицо КАК ПолеФизическоеЛицо
		|ИЗ
		|	ВТДоходыВзносыАвиаторовГорняков КАК ВзносыФизлиц
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзносыФизлиц.Основание,
		|	ВзносыФизлиц.ПолеФизическоеЛицо";
		Если ПодробныеДанные Тогда
			Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ПолеФизическоеЛицо", "ФизическоеЛицо");
		Иначе 
			МассивПолей = Новый Массив;
			МассивПолей.Добавить("ПолеФизическоеЛицо");
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "ВзносыФизлиц");
		КонецЕсли;
		ОписаниеТаблиц.Подраздел3Взносы2023 = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	
	// Подраздел 4 Раздела 1
	
	Если ОписаниеТаблиц.Свойство("Подраздел4ЧисленностьЗастрахованных") Тогда 
		
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗастрахованныеЛица.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|ИЗ
		|	ВТЗастрахованныеЛицаОрганизации КАК ЗастрахованныеЛица
		|ГДЕ
		|	ЗастрахованныеЛица.ЯвляетсяТарифомДляМСП
		|	И ЗастрахованныеЛица.ВключатьВПодраздел4";
		Если Запрос.Выполнить().Пустой() Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ФизическиеЛица.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
			|	МЕСЯЦ(ФизическиеЛица.Период) КАК Период,
			|	ФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо,
			|	1 КАК КоличествоОПС
			|ПОМЕСТИТЬ ВТЗастрахованныеПоМесяцамПрил5
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК ФизическиеЛица
			|ГДЕ
			|	ФизическиеЛица.ВключатьВПодраздел4";
			
		Иначе
			
			// АПК:96-выкл Использование ОБЪЕДИНИТЬ оправдано
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Доходы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
			|	Доходы.Период КАК Период,
			|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо
			|ПОМЕСТИТЬ ВТЗастрахованныеИзПрил5
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ВидыТарифовИзУчетнойПолитики
			|		ПО Доходы.Период = ВидыТарифовИзУчетнойПолитики.Период
			|ГДЕ
			|	Доходы.ВключатьВПодраздел4
			|	И ЕСТЬNULL(ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов.ЯвляетсяТарифомДляМСП, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Доходы.ВидТарифаСтраховыхВзносов,
			|	Доходы.Период,
			|	Доходы.ФизическоеЛицо
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ВидыТарифовИзУчетнойПолитики
			|		ПО Доходы.Период = ВидыТарифовИзУчетнойПолитики.Период
			|ГДЕ
			|	Доходы.ВключатьВПодраздел4
			|	И ЕСТЬNULL(ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов.ЯвляетсяТарифомДляМСП, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|	И НЕ Доходы.ЯвляетсяТарифомДляМСП
			|	И Доходы.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов,
			|	Доходы.Период,
			|	Доходы.ФизическоеЛицо
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ВидыТарифовИзУчетнойПолитики
			|		ПО Доходы.Период = ВидыТарифовИзУчетнойПолитики.Период
			|ГДЕ
			|	Доходы.ВключатьВПодраздел4
			|	И ЕСТЬNULL(ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов.ЯвляетсяТарифомДляМСП, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|	И Доходы.ЯвляетсяТарифомДляМСП
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов,
			|	Доходы.Период,
			|	Доходы.ФизическоеЛицо
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ВидыТарифовИзУчетнойПолитики
			|		ПО Доходы.Период = ВидыТарифовИзУчетнойПолитики.Период
			|ГДЕ
			|	Доходы.ВключатьВПодраздел4
			|	И ЕСТЬNULL(ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов.ЯвляетсяТарифомДляМСП, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|	И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим),
			|	Доходы.Период,
			|	Доходы.ФизическоеЛицо
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ВидыТарифовИзУчетнойПолитики
			|		ПО Доходы.Период = ВидыТарифовИзУчетнойПолитики.Период
			|ГДЕ
			|	Доходы.ВключатьВПодраздел4
			|	И ЕСТЬNULL(ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов.ЯвляетсяТарифомДляМСП, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|	И Доходы.ЯвляетсяТарифомДляМСП
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим),
			|	Доходы.Период,
			|	Доходы.ФизическоеЛицо
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ВидыТарифовИзУчетнойПолитики
			|		ПО Доходы.Период = ВидыТарифовИзУчетнойПолитики.Период
			|ГДЕ
			|	Доходы.ВключатьВПодраздел4
			|	И ЕСТЬNULL(ВидыТарифовИзУчетнойПолитики.ВидТарифаСтраховыхВзносов.ЯвляетсяТарифомДляМСП, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|	И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗастрахованныеНаОПС.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
			|	МЕСЯЦ(ЗастрахованныеНаОПС.Период) КАК Период,
			|	ЗастрахованныеНаОПС.ФизическоеЛицо КАК ФизическоеЛицо,
			|	1 КАК КоличествоОПС
			|ПОМЕСТИТЬ ВТЗастрахованныеПоМесяцамПрил5
			|ИЗ
			|	ВТЗастрахованныеИзПрил5 КАК ЗастрахованныеНаОПС";
			
			// АПК:96-вкл
			
		КонецЕсли;
		
		Запрос.Выполнить();
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЗастрахованныеПоМесяцам.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	ЗастрахованныеПоМесяцам.Период КАК Период,
		|	ЗастрахованныеПоМесяцам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЗастрахованныеПоМесяцам.КоличествоОПС КАК КоличествоОПС
		|ПОМЕСТИТЬ ВТКоличествоЗастрахованныхПрил5
		|ИЗ
		|	ВТЗастрахованныеПоМесяцамПрил5 КАК ЗастрахованныеПоМесяцам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗастрахованныеПоМесяцам.ВидТарифаСтраховыхВзносов,
		|	0,
		|	ЗастрахованныеПоМесяцам.ФизическоеЛицо,
		|	МАКСИМУМ(ЗастрахованныеПоМесяцам.КоличествоОПС)
		|ИЗ
		|	ВТЗастрахованныеПоМесяцамПрил5 КАК ЗастрахованныеПоМесяцам
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗастрахованныеПоМесяцам.ВидТарифаСтраховыхВзносов,
		|	ЗастрахованныеПоМесяцам.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КоличествоЗастрахованных.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	КоличествоЗастрахованных.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СУММА(ВЫБОР
		|			КОГДА КоличествоЗастрахованных.Период = 0
		|				ТОГДА КоличествоЗастрахованных.КоличествоОПС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000140001001,
		|	СУММА(ВЫБОР
		|			КОГДА КоличествоЗастрахованных.Период = &Месяц1
		|				ТОГДА КоличествоЗастрахованных.КоличествоОПС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000140001002,
		|	СУММА(ВЫБОР
		|			КОГДА КоличествоЗастрахованных.Период = &Месяц2
		|				ТОГДА КоличествоЗастрахованных.КоличествоОПС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000140001003,
		|	СУММА(ВЫБОР
		|			КОГДА КоличествоЗастрахованных.Период = &Месяц3
		|				ТОГДА КоличествоЗастрахованных.КоличествоОПС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000140001004
		|ИЗ
		|	ВТКоличествоЗастрахованныхПрил5 КАК КоличествоЗастрахованных
		|
		|СГРУППИРОВАТЬ ПО
		|	КоличествоЗастрахованных.ВидТарифаСтраховыхВзносов,
		|	КоличествоЗастрахованных.ФизическоеЛицо";
		
		МассивПолей = Новый Массив;
		Если Не ПодробныеДанные Тогда
			МассивПолей.Добавить("ФизическоеЛицо");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "КоличествоЗастрахованных");
		ОписаниеТаблиц.Подраздел4ЧисленностьЗастрахованных = Запрос.Выполнить().Выгрузить()
		
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Подраздел4Численность2023") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Доходы.Период КАК Период,
		|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Доходы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|ПОМЕСТИТЬ ВТЛицаСПревышениемБазыПрил5
		|ИЗ
		|	ВТДоходыВзносов КАК Доходы
		|ГДЕ
		|	Доходы.ВключатьВПодраздел4
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.Период,
		|	Доходы.ФизическоеЛицо,
		|	Доходы.ВидТарифаСтраховыхВзносов
		|
		|ИМЕЮЩИЕ
		|	СУММА(Доходы.СуммаПревысившаяПределПФР) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.Период КАК Период,
		|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Доходы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|ПОМЕСТИТЬ ВТЛицаБезПревышенияПрил5
		|ИЗ
		|	ВТДоходыВзносов КАК Доходы
		|ГДЕ
		|	Доходы.ВключатьВПодраздел4
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.Период,
		|	Доходы.ФизическоеЛицо,
		|	Доходы.ВидТарифаСтраховыхВзносов
		|
		|ИМЕЮЩИЕ
		|	СУММА(Доходы.СуммаПревысившаяПределПФР) = 0 И
		|	СУММА(Доходы.СуммаНеПревысившаяПределПФР) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЛицаСПревышениемБазы.ФизическоеЛицо) КАК ВсегоФизлиц,
		|	ЛицаСПревышениемБазы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|ПОМЕСТИТЬ ВТЛицаСПревышениемБазыЗаВсеМесяцыПрил5
		|ИЗ
		|	ВТЛицаСПревышениемБазыПрил5 КАК ЛицаСПревышениемБазы
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛицаСПревышениемБазы.ВидТарифаСтраховыхВзносов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЛицаБезПревышения.ФизическоеЛицо) КАК ВсегоФизлиц,
		|	ЛицаБезПревышения.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|ПОМЕСТИТЬ ВТЛицаБезПревышенияЗаВсеМесяцыПрил5
		|ИЗ
		|	(ВЫБРАТЬ
		|		Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|		Доходы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|	ИЗ
		|		ВТДоходыВзносов КАК Доходы
		|	ГДЕ
		|		Доходы.ВключатьВПодраздел4
		|		И &Месяц3 >= МЕСЯЦ(Доходы.Период)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Доходы.ФизическоеЛицо,
		|		Доходы.ВидТарифаСтраховыхВзносов
		|	
		|	ИМЕЮЩИЕ
		|		СУММА(Доходы.СуммаПревысившаяПределПФР) = 0 И
		|		СУММА(Доходы.СуммаНеПревысившаяПределПФР) > 0) КАК ЛицаБезПревышения
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛицаБезПревышения.ВидТарифаСтраховыхВзносов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЛицаСПревышениемБазы.Период КАК Период,
		|	ЛицаСПревышениемБазы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЛицаСПревышениемБазы.ФизическоеЛицо) КАК ВсегоФизлиц
		|ПОМЕСТИТЬ ВТЛицаСПревышениемБазыЗаОтдельныеМесяцыПрил5
		|ИЗ
		|	ВТЛицаСПревышениемБазыПрил5 КАК ЛицаСПревышениемБазы
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛицаСПревышениемБазы.ВидТарифаСтраховыхВзносов,
		|	ЛицаСПревышениемБазы.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЛицаБезПревышения.Период КАК Период,
		|	ЛицаБезПревышения.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЛицаБезПревышения.ФизическоеЛицо) КАК ВсегоФизлиц
		|ПОМЕСТИТЬ ВТЛицаБезПревышенияЗаОтдельныеМесяцыПрил5
		|ИЗ
		|	ВТЛицаБезПревышенияПрил5 КАК ЛицаБезПревышения
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛицаБезПревышения.ВидТарифаСтраховыхВзносов,
		|	ЛицаБезПревышения.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Тарифы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	МАКСИМУМ(ЕСТЬNULL(ЛицаБезПревышенияЗаВсеМесяцы.ВсегоФизлиц, 0)) КАК П000140002101,
		|	МАКСИМУМ(ЕСТЬNULL(ЛицаСПревышениемБазыЗаВсеМесяцы.ВсегоФизлиц, 0)) КАК П000140002201,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСПревышениемБазыЗаОтдельныеМесяцы.Период) = &Месяц1
		|				ТОГДА ЕСТЬNULL(ЛицаСПревышениемБазыЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000140002202,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСПревышениемБазыЗаОтдельныеМесяцы.Период) = &Месяц2
		|				ТОГДА ЕСТЬNULL(ЛицаСПревышениемБазыЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000140002203,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаСПревышениемБазыЗаОтдельныеМесяцы.Период) = &Месяц3
		|				ТОГДА ЕСТЬNULL(ЛицаСПревышениемБазыЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000140002204,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаБезПревышенияЗаОтдельныеМесяцы.Период) = &Месяц1
		|				ТОГДА ЕСТЬNULL(ЛицаБезПревышенияЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000140002102,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаБезПревышенияЗаОтдельныеМесяцы.Период) = &Месяц2
		|				ТОГДА ЕСТЬNULL(ЛицаБезПревышенияЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000140002103,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МЕСЯЦ(ЛицаБезПревышенияЗаОтдельныеМесяцы.Период) = &Месяц3
		|				ТОГДА ЕСТЬNULL(ЛицаБезПревышенияЗаОтдельныеМесяцы.ВсегоФизлиц, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК П000140002104
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Доходы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
		|	ИЗ
		|		ВТДоходыВзносов КАК Доходы
		|	ГДЕ
		|		Доходы.ВключатьВПодраздел4) КАК Тарифы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМесяцыОтчета КАК МесяцыОтчета
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаСПревышениемБазыЗаВсеМесяцыПрил5 КАК ЛицаСПревышениемБазыЗаВсеМесяцы
		|		ПО Тарифы.ВидТарифаСтраховыхВзносов = ЛицаСПревышениемБазыЗаВсеМесяцы.ВидТарифаСтраховыхВзносов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаСПревышениемБазыЗаОтдельныеМесяцыПрил5 КАК ЛицаСПревышениемБазыЗаОтдельныеМесяцы
		|		ПО Тарифы.ВидТарифаСтраховыхВзносов = ЛицаСПревышениемБазыЗаОтдельныеМесяцы.ВидТарифаСтраховыхВзносов
		|			И (МесяцыОтчета.МесяцПериода = МЕСЯЦ(ЛицаСПревышениемБазыЗаОтдельныеМесяцы.Период))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаБезПревышенияЗаВсеМесяцыПрил5 КАК ЛицаБезПревышенияЗаВсеМесяцы
		|		ПО Тарифы.ВидТарифаСтраховыхВзносов = ЛицаБезПревышенияЗаВсеМесяцы.ВидТарифаСтраховыхВзносов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛицаБезПревышенияЗаОтдельныеМесяцыПрил5 КАК ЛицаБезПревышенияЗаОтдельныеМесяцы
		|		ПО Тарифы.ВидТарифаСтраховыхВзносов = ЛицаБезПревышенияЗаОтдельныеМесяцы.ВидТарифаСтраховыхВзносов
		|			И (МесяцыОтчета.МесяцПериода = МЕСЯЦ(ЛицаБезПревышенияЗаОтдельныеМесяцы.Период))
		|
		|СГРУППИРОВАТЬ ПО
		|	Тарифы.ВидТарифаСтраховыхВзносов";
		ОписаниеТаблиц.Подраздел4Численность2023 = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Подраздел4Доходы2023") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.НачисленоВсего), 0) КАК П000140003001,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.НачисленоВсего
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140003002,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.НачисленоВсего
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140003003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.НачисленоВсего
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140003004,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.НеОблагается), 0) КАК П000140004001,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.НеОблагается
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140004002,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.НеОблагается
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140004003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.НеОблагается
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140004004,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.РасходыПоАвторскимПФР), 0) КАК П000140004501,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.РасходыПоАвторскимПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140004502,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.РасходыПоАвторскимПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140004503,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.РасходыПоАвторскимПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140004504,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.СуммаПревысившаяПределПФР), 0) КАК П000140005201,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140005202,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140005203,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140005204,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.СуммаНеПревысившаяПределПФР), 0) КАК П000140005101,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.СуммаНеПревысившаяПределПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140005102,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.СуммаНеПревысившаяПределПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140005103,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.СуммаНеПревысившаяПределПФР
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140005104,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Начисление КАК Начисление
		|ИЗ
		|	ВТДоходыВзносов КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.ВключатьВПодраздел4
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.ФизическоеЛицо
		|
		|ИМЕЮЩИЕ
		|	СУММА(0) = 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидТарифаСтраховыхВзносов";
		МассивПолей = Новый Массив;
		Если ПодробныеДанные Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(0) = 0", "
			|	(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) <> &Месяц1
			|					ТОГДА 0
			|				ИНАЧЕ СведенияОДоходах.НачисленоВсего
			|			КОНЕЦ) <> 0
			|		ИЛИ СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) <> &Месяц2
			|					ТОГДА 0
			|				ИНАЧЕ СведенияОДоходах.НачисленоВсего
			|			КОНЕЦ) <> 0
			|		ИЛИ СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) <> &Месяц3
			|					ТОГДА 0
			|				ИНАЧЕ СведенияОДоходах.НачисленоВсего
			|			КОНЕЦ) <> 0
			|		ИЛИ СУММА(СведенияОДоходах.НачисленоВсего) <> 0)");
		Иначе 	
			МассивПолей.Добавить("ФизическоеЛицо");
			МассивПолей.Добавить("Начисление");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(0) = 0", "
			|		СУММА(СведенияОДоходах.НачисленоВсего) <> 0");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
		ОписаниеТаблиц.Подраздел4Доходы2023 = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Подраздел4Взносы2023") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ВзносыФизлиц.ОПСпоМеждународнымДоговорам), 0) КАК П000140006101,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц1
		|					ТОГДА ВзносыФизлиц.ОПСпоМеждународнымДоговорам
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140006102,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц2
		|					ТОГДА ВзносыФизлиц.ОПСпоМеждународнымДоговорам
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140006103,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц3
		|					ТОГДА ВзносыФизлиц.ОПСпоМеждународнымДоговорам
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140006104,
		|	ЕСТЬNULL(СУММА(ВзносыФизлиц.ОПСпоМеждународнымДоговорамСПревышения), 0) КАК П000140006201,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц1
		|					ТОГДА ВзносыФизлиц.ОПСпоМеждународнымДоговорамСПревышения
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140006202,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц2
		|					ТОГДА ВзносыФизлиц.ОПСпоМеждународнымДоговорамСПревышения
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140006203,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц3
		|					ТОГДА ВзносыФизлиц.ОПСпоМеждународнымДоговорамСПревышения
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140006204,
		|	ЕСТЬNULL(СУММА(ВзносыФизлиц.ОССпоМеждународнымДоговорам), 0) КАК П000140007101,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц1
		|					ТОГДА ВзносыФизлиц.ОССпоМеждународнымДоговорам
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140007102,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц2
		|					ТОГДА ВзносыФизлиц.ОССпоМеждународнымДоговорам
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140007103,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц3
		|					ТОГДА ВзносыФизлиц.ОССпоМеждународнымДоговорам
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140007104,
		|	ЕСТЬNULL(СУММА(ВзносыФизлиц.ОССпоМеждународнымДоговорамСПревышения), 0) КАК П000140007201,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц1
		|					ТОГДА ВзносыФизлиц.ОССпоМеждународнымДоговорамСПревышения
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140007202,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц2
		|					ТОГДА ВзносыФизлиц.ОССпоМеждународнымДоговорамСПревышения
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140007203,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц3
		|					ТОГДА ВзносыФизлиц.ОССпоМеждународнымДоговорамСПревышения
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140007204,
		|	ЕСТЬNULL(СУММА(ВзносыФизлиц.ОМСпоМеждународнымДоговорам), 0) КАК П000140008101,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц1
		|					ТОГДА ВзносыФизлиц.ОМСпоМеждународнымДоговорам
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140008102,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц2
		|					ТОГДА ВзносыФизлиц.ОМСпоМеждународнымДоговорам
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140008103,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц3
		|					ТОГДА ВзносыФизлиц.ОМСпоМеждународнымДоговорам
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140008104,
		|	ЕСТЬNULL(СУММА(ВзносыФизлиц.ОМСпоМеждународнымДоговорамСПревышения), 0) КАК П000140008201,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц1
		|					ТОГДА ВзносыФизлиц.ОМСпоМеждународнымДоговорамСПревышения
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140008202,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц2
		|					ТОГДА ВзносыФизлиц.ОМСпоМеждународнымДоговорамСПревышения
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140008203,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ВзносыФизлиц.Период) = &Месяц3
		|					ТОГДА ВзносыФизлиц.ОМСпоМеждународнымДоговорамСПревышения
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000140008204,
		|	ВзносыФизлиц.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	ВзносыФизлиц.КодТарифа КАК КодТарифа,
		|	ВзносыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТДоходыВзносов КАК ВзносыФизлиц
		|ГДЕ
		|	ВзносыФизлиц.ВключатьВПодраздел4
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзносыФизлиц.ФизическоеЛицо,
		|	ВзносыФизлиц.КодТарифа,
		|	ВзносыФизлиц.ВидТарифаСтраховыхВзносов
		|
		|ИМЕЮЩИЕ
		|	(СУММА(ВзносыФизлиц.ОПСпоМеждународнымДоговорам) <> 0
		|		ИЛИ СУММА(ВзносыФизлиц.ОПСпоМеждународнымДоговорамСПревышения) <> 0
		|		ИЛИ СУММА(ВзносыФизлиц.ОМСпоМеждународнымДоговорам) <> 0
		|		ИЛИ СУММА(ВзносыФизлиц.ОМСпоМеждународнымДоговорамСПревышения) <> 0
		|		ИЛИ СУММА(ВзносыФизлиц.ОССпоМеждународнымДоговорам) <> 0
		|		ИЛИ СУММА(ВзносыФизлиц.ОССпоМеждународнымДоговорамСПревышения) <> 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидТарифаСтраховыхВзносов";
		МассивПолей = Новый Массив;
		Если Не ПодробныеДанные Тогда
			МассивПолей.Добавить("ФизическоеЛицо");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "ВзносыФизлиц");
		ОписаниеТаблиц.Подраздел4Взносы2023 = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Приложение5Физлица2023") Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	&ДатаАктуальности КАК Период,
		|	Физлица.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФизлицаПриложения5КД
		|ИЗ
		|	ВТЗастрахованныеЛицаОрганизации КАК Физлица
		|ГДЕ
		|	Физлица.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И Физлица.ВключатьВПриложение5";
		Результат = Запрос.Выполнить();
		Если Результат.Выгрузить()[0].Количество > 0 Тогда
			
			КадровыеДанные = "Фамилия, Имя, Отчество, Наименование, ИНН, СтраховойНомерПФР, Страна, ДокументСтранаВыдачи, ДатаРождения, Пол, ДокументКодМВД, ДокументСерия, ДокументНомер";
			ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц,	"ВТФизлицаПриложения5КД");
			ОписательВременныхТаблиц.ИмяВТКадровыеДанныеФизическихЛиц = "ВТДанныеИностранцев";
			КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Ложь, КадровыеДанные);
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СУММА(СведенияОДоходах.НачисленоВсего) КАК П001050007001,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.НачисленоВсего
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П001050007002,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.НачисленоВсего
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П001050007003,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.НачисленоВсего
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П001050007004,
			|	СУММА(СведенияОДоходах.СуммаНеПревысившаяПределПФР) КАК П001050008001,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.СуммаНеПревысившаяПределПФР
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П001050008002,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.СуммаНеПревысившаяПределПФР
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П001050008003,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.СуммаНеПревысившаяПределПФР
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П001050008004,
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо
			|ПОМЕСТИТЬ ВТСводныеДоходыПрил5
			|ИЗ
			|	ВТДоходыВзносов КАК СведенияОДоходах
			|ГДЕ
			|	СведенияОДоходах.ВключатьВПриложение5
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Физлица.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ЕСТЬNULL(ФИОФизлиц.Фамилия, """") КАК П001050001001,
			|	ЕСТЬNULL(ФИОФизлиц.Имя, """") КАК П001050002001,
			|	ЕСТЬNULL(ФИОФизлиц.Отчество, """") КАК П001050003001,
			|	ЕСТЬNULL(ФИОФизлиц.ИНН, """") КАК П001050004001,
			|	ЕСТЬNULL(ФИОФизлиц.СтраховойНомерПФР, """") КАК П001050005001,
			|	ЕСТЬNULL(ВЫБОР
			|			КОГДА ФИОФизлиц.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
			|				ТОГДА ВЫБОР
			|						КОГДА ФИОФизлиц.ДокументСтранаВыдачи = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
			|							ТОГДА ""643""
			|						ИНАЧЕ ФИОФизлиц.ДокументСтранаВыдачи.Код
			|					КОНЕЦ
			|			ИНАЧЕ ФИОФизлиц.Страна.Код
			|		КОНЕЦ, """") КАК П001050006001,
			|	ЕСТЬNULL(ФИОФизлиц.ДатаРождения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК П001050006101,
			|	ЕСТЬNULL(ВЫБОР
			|			КОГДА ФИОФизлиц.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Мужской)
			|				ТОГДА ""1""
			|			ИНАЧЕ ""2""
			|		КОНЕЦ, """") КАК П001050006201,
			|	ЕСТЬNULL(ФИОФизлиц.ДокументКодМВД, """") КАК П001050006301,
			|	ЕСТЬNULL(ФИОФизлиц.ДокументСерия, """") КАК П001050006401,
			|	ЕСТЬNULL(ФИОФизлиц.ДокументНомер, """") КАК П001050006402,
			|	ЕСТЬNULL(СводныеДоходы.П001050007001, 0) КАК П001050007001,
			|	ЕСТЬNULL(СводныеДоходы.П001050007002, 0) КАК П001050007002,
			|	ЕСТЬNULL(СводныеДоходы.П001050007003, 0) КАК П001050007003,
			|	ЕСТЬNULL(СводныеДоходы.П001050007004, 0) КАК П001050007004,
			|	ЕСТЬNULL(СводныеДоходы.П001050008001, 0) КАК П001050008001,
			|	ЕСТЬNULL(СводныеДоходы.П001050008002, 0) КАК П001050008002,
			|	ЕСТЬNULL(СводныеДоходы.П001050008003, 0) КАК П001050008003,
			|	ЕСТЬNULL(СводныеДоходы.П001050008004, 0) КАК П001050008004
			|ИЗ
			|	ВТФизлицаПриложения5КД КАК Физлица
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеИностранцев КАК ФИОФизлиц
			|		ПО Физлица.ФизическоеЛицо = ФИОФизлиц.ФизическоеЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСводныеДоходыПрил5 КАК СводныеДоходы
			|		ПО Физлица.ФизическоеЛицо = СводныеДоходы.ФизическоеЛицо
			|
			|УПОРЯДОЧИТЬ ПО
			|	П001050001001,
			|	П001050002001,
			|	П001050003001";
			
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	НЕОПРЕДЕЛЕНО КАК ФизическоеЛицо,
			|	"""" КАК П001050001001,
			|	"""" КАК П001050002001,
			|	"""" КАК П001050003001,
			|	"""" КАК П001050004001,
			|	"""" КАК П001050005001,
			|	"""" КАК П001050006001,
			|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК П001050006101,
			|	"""" КАК П001050006201,
			|	"""" КАК П001050006301,
			|	"""" КАК П001050006401,
			|	"""" КАК П001050006402,
			|	0 КАК П001050007001,
			|	0 КАК П001050007002,
			|	0 КАК П001050007003,
			|	0 КАК П001050007004,		
			|	0 КАК П001050008001,
			|	0 КАК П001050008002,
			|	0 КАК П001050008003,
			|	0 КАК П001050008004";		
		КонецЕсли;
		ОписаниеТаблиц.Приложение5Физлица2023 = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	// Раздел 3
	
	Если ОписаниеТаблиц.Свойство("Раздел3Физлица2023") Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(СведенияОДоходах.Период, КВАРТАЛ) КАК НачалоКвартала,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МИНИМУМ(СведенияОДоходах.НачалоРаботы) КАК НачалоРаботы,
		|	МАКСИМУМ(СведенияОДоходах.ДобавлятьСтрокуВПервыйМесяц) КАК ДобавлятьСтрокуВПервыйМесяц,
		|	МАКСИМУМ(СведенияОДоходах.ДобавлятьСтрокуВоВторойМесяц) КАК ДобавлятьСтрокуВоВторойМесяц,
		|	МАКСИМУМ(СведенияОДоходах.ДобавлятьСтрокуВТретийМесяц) КАК ДобавлятьСтрокуВТретийМесяц,
		|	МИНИМУМ(СведенияОДоходах.ВидЗастрахованногоЛица) КАК ВидЗастрахованногоЛица,
		|	МИНИМУМ(СведенияОДоходах.ВидТарифаСтраховыхВзносов) КАК ВидТарифаСтраховыхВзносов,
		|	МАКСИМУМ(СведенияОДоходах.ВключатьВРаздел3) КАК ВключатьВРаздел3
		|ПОМЕСТИТЬ ВТФизлица
		|ИЗ
		|	ВТЗастрахованныеЛицаОрганизации КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.ЗастрахованПФР
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоКвартала И &КонецОтчетногоПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизическоеЛицо,
		|	НАЧАЛОПЕРИОДА(СведенияОДоходах.Период, КВАРТАЛ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	&ДатаАктуальности КАК Период,
		|	Физлица.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФизлицаКД
		|ИЗ
		|	ВТФизлица КАК Физлица";
		Запрос.Выполнить();
		
		КадровыеДанные = "Фамилия, Имя, Отчество, Наименование, ИНН, СтраховойНомерПФР, ДатаРождения, Пол, Страна, ДокументВид, ДокументСерия, ДокументНомер, ДокументСтранаВыдачи";
		ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц,	"ВТФизлицаКД");
		КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Ложь, КадровыеДанные);
		
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Раздел3Физлица2023") Или ОписаниеТаблиц.Свойство("Подраздел321Доходы2023") Или ОписаниеТаблиц.Свойство("Подраздел322Доходы2023") Тогда
		
		Если ОписаниеТаблиц.Свойство("НомерКорректировки") И ЗначениеЗаполнено(ОписаниеТаблиц.НомерКорректировки) Тогда
			ПолучитьПереданныеДанныеОтчета(ОтчитывающаясяОрганизация, ОкончаниеПериода, Запрос.МенеджерВременныхТаблиц, ОписаниеТаблиц.НомерКорректировки, "ФормаОтчета2025Кв1");
		Иначе
			СоздатьПустыеВТПереданныхДанныхОтчета(Запрос.МенеджерВременныхТаблиц)
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ОтчетныйГод", Год(ОкончаниеПериода));
		СформироватьВТКодКатегорииПоТарифуВидуЗЛ(Запрос.МенеджерВременныхТаблиц);
		
		// АПК:96-выкл Использование ОБЪЕДИНИТЬ оправдано
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Физлица.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Физлица.ФизическоеЛицо.Код КАК Код,
		|	Физлица.НачалоРаботы КАК НачалоРаботы,
		|	Физлица.ДобавлятьСтрокуВПервыйМесяц КАК ДобавлятьСтрокуВПервыйМесяц,
		|	Физлица.ДобавлятьСтрокуВоВторойМесяц КАК ДобавлятьСтрокуВоВторойМесяц,
		|	Физлица.ДобавлятьСтрокуВТретийМесяц КАК ДобавлятьСтрокуВТретийМесяц,
		|	ЕСТЬNULL(СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц, ""НР"") КАК КатегорияЗастрахованныхЛиц,
		|	ЕСТЬNULL(ФИОФизлиц.Наименование, """") КАК ФИО,
		|	ЕСТЬNULL(ФИОФизлиц.ИНН, """") КАК П000310002001,
		|	ЕСТЬNULL(ФИОФизлиц.СтраховойНомерПФР, """") КАК П000310003001,
		|	ЕСТЬNULL(ФИОФизлиц.Фамилия, """") КАК П000310004001,
		|	ЕСТЬNULL(ФИОФизлиц.Имя, """") КАК П000310005001,
		|	ЕСТЬNULL(ФИОФизлиц.Отчество, """") КАК П000310006001,
		|	ЕСТЬNULL(ФИОФизлиц.ДатаРождения, """") КАК П000310007001,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ФИОФизлиц.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
		|				ТОГДА ВЫБОР
		|						КОГДА ФИОФизлиц.ДокументСтранаВыдачи = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
		|							ТОГДА ""643""
		|						ИНАЧЕ ФИОФизлиц.ДокументСтранаВыдачи.Код
		|					КОНЕЦ
		|			ИНАЧЕ ФИОФизлиц.Страна.Код
		|		КОНЕЦ, """") КАК П000310008001,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ФИОФизлиц.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Мужской)
		|				ТОГДА ""1""
		|			ИНАЧЕ ""2""
		|		КОНЕЦ, """") КАК П000310009001,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ФИОФизлиц.ДокументВид.КодМВД = ""18""
		|				ТОГДА ""19""
		|			ИНАЧЕ ФИОФизлиц.ДокументВид.КодМВД
		|		КОНЕЦ, """") КАК П000310010001,
		|	ЕСТЬNULL(ФИОФизлиц.ДокументСерия, """") КАК П000310011001,
		|	ЕСТЬNULL(ФИОФизлиц.ДокументНомер, """") КАК П000310011002
		|ПОМЕСТИТЬ ВТФизлицаПоТекущимДанным
		|ИЗ
		|	ВТФизлица КАК Физлица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК ФИОФизлиц
		|		ПО Физлица.ФизическоеЛицо = ФИОФизлиц.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКодКатегорииПоТарифуВидуЗЛ КАК СоответствиеТарифаИВидаЗЛКатегории
		|		ПО Физлица.ВидТарифаСтраховыхВзносов = СоответствиеТарифаИВидаЗЛКатегории.ВидТарифаСтраховыхВзносов
		|			И Физлица.ВидЗастрахованногоЛица = СоответствиеТарифаИВидаЗЛКатегории.ВидЗастрахованногоЛица
		|ГДЕ
		|	Физлица.ВключатьВРаздел3
		|	И Физлица.НачалоКвартала МЕЖДУ &НачалоОтчетногоКвартала И &КонецОтчетногоПериода
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МЕСЯЦ(ДОБАВИТЬКДАТЕ(СведенияОДоходах.Период, МЕСЯЦ, -КВАРТАЛ(СведенияОДоходах.Период) * 3 + 3)) КАК П00321М112001,
		|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц КАК П00321М113001,
		|	СУММА(СведенияОДоходах.НачисленоВсего) КАК П00321М114001,
		|	СУММА(СведенияОДоходах.НачисленоПоГПХ) КАК П00321М114101,
		|	СУММА(СведенияОДоходах.СуммаНеПревысившаяПределПФР) КАК П00321М115001,
		|	СУММА(СведенияОДоходах.СуммаНеПревысившаяПределПФРпоГПХ) КАК П00321М116001,
		|	СУММА(СведенияОДоходах.ПФРПоСуммарномуТарифу + СведенияОДоходах.ОПСпоМеждународнымДоговорам) КАК П00321М117001
		|ПОМЕСТИТЬ ВТДоходыВзносовПоТекущимДанным
		|ИЗ
		|	ВТДоходыВзносов КАК СведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКодКатегорииПоТарифуВидуЗЛ КАК СоответствиеТарифаИВидаЗЛКатегории
		|		ПО СведенияОДоходах.ВидТарифаСтраховыхВзносов = СоответствиеТарифаИВидаЗЛКатегории.ВидТарифаСтраховыхВзносов
		|			И СведенияОДоходах.ВидЗастрахованногоЛица = СоответствиеТарифаИВидаЗЛКатегории.ВидЗастрахованногоЛица
		|ГДЕ
		|	СведенияОДоходах.ЗастрахованПФР
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоКвартала И &КонецОтчетногоПериода
		|	И НЕ СведенияОДоходах.ВключатьВПриложение5
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизическоеЛицо,
		|	МЕСЯЦ(ДОБАВИТЬКДАТЕ(СведенияОДоходах.Период, МЕСЯЦ, -КВАРТАЛ(СведенияОДоходах.Период) * 3 + 3)),
		|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц
		|
		|ИМЕЮЩИЕ
		|	СУММА(СведенияОДоходах.НачисленоВсего) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Данные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Данные.П00322М118001 КАК П00322М118001,
		|	Данные.П00322М119001 КАК П00322М119001,
		|	СУММА(Данные.П00322М120001) КАК П00322М120001,
		|	СУММА(Данные.П00322М121001) КАК П00322М121001
		|ПОМЕСТИТЬ ВТДоходыВредныхВзносовПоТекущимДанным
		|ИЗ
		|	(ВЫБРАТЬ
		|		СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|		МЕСЯЦ(ДОБАВИТЬКДАТЕ(СведенияОДоходах.Период, МЕСЯЦ, -КВАРТАЛ(СведенияОДоходах.Период) * 3 + 3)) КАК П00322М118001,
		|		""110"" КАК П00322М119001,
		|		СУММА(СведенияОДоходах.БазаПодземныеИВредныеРаботы) КАК П00322М120001,
		|		СУММА(СведенияОДоходах.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) КАК П00322М121001
		|	ИЗ
		|		ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|	ГДЕ
		|		СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|		И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоКвартала И &КонецОтчетногоПериода
		|		И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|		И СведенияОДоходах.ЗастрахованПФР
		|		И СведенияОДоходах.ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					Организации.ФизическоеЛицо
		|				ИЗ
		|					ВТФизЛицаСОблагаемойБазой КАК Организации)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		МЕСЯЦ(ДОБАВИТЬКДАТЕ(СведенияОДоходах.Период, МЕСЯЦ, -КВАРТАЛ(СведенияОДоходах.Период) * 3 + 3)),
		|		СведенияОДоходах.ФизическоеЛицо
		|	
		|	ИМЕЮЩИЕ
		|		(СУММА(СведенияОДоходах.БазаПодземныеИВредныеРаботы) <> 0
		|			ИЛИ СУММА(СведенияОДоходах.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) <> 0)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СведенияОДоходах.ФизическоеЛицо,
		|		МЕСЯЦ(ДОБАВИТЬКДАТЕ(СведенияОДоходах.Период, МЕСЯЦ, -КВАРТАЛ(СведенияОДоходах.Период) * 3 + 3)),
		|		""120"",
		|		СУММА(СведенияОДоходах.БазаТяжелыеИПрочиеРаботы),
		|		СУММА(СведенияОДоходах.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах)
		|	ИЗ
		|		ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
		|	ГДЕ
		|		СведенияОДоходах.Организация В(&ОбособленноеПодразделение)
		|		И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоКвартала И &КонецОтчетногоПериода
		|		И СведенияОДоходах.ВидТарифаСтраховыхВзносов <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|		И СведенияОДоходах.ЗастрахованПФР
		|		И СведенияОДоходах.ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					Организации.ФизическоеЛицо
		|				ИЗ
		|					ВТФизЛицаСОблагаемойБазой КАК Организации)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		МЕСЯЦ(ДОБАВИТЬКДАТЕ(СведенияОДоходах.Период, МЕСЯЦ, -КВАРТАЛ(СведенияОДоходах.Период) * 3 + 3)),
		|		СведенияОДоходах.ФизическоеЛицо
		|	
		|	ИМЕЮЩИЕ
		|		(СУММА(СведенияОДоходах.БазаТяжелыеИПрочиеРаботы) <> 0
		|			ИЛИ СУММА(СведенияОДоходах.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) <> 0)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СведенияОДоходах.ФизическоеЛицо,
		|		МЕСЯЦ(ДОБАВИТЬКДАТЕ(СведенияОДоходах.Период, МЕСЯЦ, -КВАРТАЛ(СведенияОДоходах.Период) * 3 + 3)),
		|		ВЫБОР
		|			КОГДА СведенияОДоходах.Основание = ""3""
		|				ТОГДА ВЫБОР
		|						КОГДА СведенияОДоходах.КлассУсловийТруда = ""1""
		|							ТОГДА ""140""
		|						КОГДА СведенияОДоходах.КлассУсловийТруда = ""2""
		|							ТОГДА ""134""
		|						КОГДА СведенияОДоходах.КлассУсловийТруда = ""3""
		|							ТОГДА ""133""
		|						КОГДА СведенияОДоходах.КлассУсловийТруда = ""4""
		|							ТОГДА ""132""
		|						КОГДА СведенияОДоходах.КлассУсловийТруда = ""5""
		|							ТОГДА ""131""
		|						ИНАЧЕ """"
		|					КОНЕЦ
		|			КОГДА СведенияОДоходах.КлассУсловийТруда = ""1""
		|				ТОГДА ""240""
		|			КОГДА СведенияОДоходах.КлассУсловийТруда = ""2""
		|				ТОГДА ""234""
		|			КОГДА СведенияОДоходах.КлассУсловийТруда = ""3""
		|				ТОГДА ""233""
		|			КОГДА СведенияОДоходах.КлассУсловийТруда = ""4""
		|				ТОГДА ""232""
		|			КОГДА СведенияОДоходах.КлассУсловийТруда = ""5""
		|				ТОГДА ""231""
		|			ИНАЧЕ """"
		|		КОНЕЦ,
		|		СУММА(СведенияОДоходах.ОблагаемаяБаза),
		|		0
		|	ИЗ
		|		ВТДоходыПоКлассамУсловий КАК СведенияОДоходах
		|	ГДЕ
		|		СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоКвартала И &КонецОтчетногоПериода
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СведенияОДоходах.ФизическоеЛицо,
		|		МЕСЯЦ(ДОБАВИТЬКДАТЕ(СведенияОДоходах.Период, МЕСЯЦ, -КВАРТАЛ(СведенияОДоходах.Период) * 3 + 3)),
		|		ВЫБОР
		|			КОГДА СведенияОДоходах.Основание = ""3""
		|				ТОГДА ВЫБОР
		|						КОГДА СведенияОДоходах.КлассУсловийТруда = ""1""
		|							ТОГДА ""140""
		|						КОГДА СведенияОДоходах.КлассУсловийТруда = ""2""
		|							ТОГДА ""134""
		|						КОГДА СведенияОДоходах.КлассУсловийТруда = ""3""
		|							ТОГДА ""133""
		|						КОГДА СведенияОДоходах.КлассУсловийТруда = ""4""
		|							ТОГДА ""132""
		|						КОГДА СведенияОДоходах.КлассУсловийТруда = ""5""
		|							ТОГДА ""131""
		|						ИНАЧЕ """"
		|					КОНЕЦ
		|			КОГДА СведенияОДоходах.КлассУсловийТруда = ""1""
		|				ТОГДА ""240""
		|			КОГДА СведенияОДоходах.КлассУсловийТруда = ""2""
		|				ТОГДА ""234""
		|			КОГДА СведенияОДоходах.КлассУсловийТруда = ""3""
		|				ТОГДА ""233""
		|			КОГДА СведенияОДоходах.КлассУсловийТруда = ""4""
		|				ТОГДА ""232""
		|			КОГДА СведенияОДоходах.КлассУсловийТруда = ""5""
		|				ТОГДА ""231""
		|			ИНАЧЕ """"
		|		КОНЕЦ
		|	
		|	ИМЕЮЩИЕ
		|		СУММА(СведенияОДоходах.ОблагаемаяБаза) <> 0
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВзносыПоКлассамУсловий.ФизическоеЛицо,
		|		МЕСЯЦ(ДОБАВИТЬКДАТЕ(ВзносыПоКлассамУсловий.Период, МЕСЯЦ, -КВАРТАЛ(ВзносыПоКлассамУсловий.Период) * 3 + 3)),
		|		ВЫБОР
		|			КОГДА ВзносыПоКлассамУсловий.Основание = ""3""
		|				ТОГДА ВЫБОР
		|						КОГДА ВзносыПоКлассамУсловий.КлассУсловийТруда = ""1""
		|							ТОГДА ""140""
		|						КОГДА ВзносыПоКлассамУсловий.КлассУсловийТруда = ""2""
		|							ТОГДА ""134""
		|						КОГДА ВзносыПоКлассамУсловий.КлассУсловийТруда = ""3""
		|							ТОГДА ""133""
		|						КОГДА ВзносыПоКлассамУсловий.КлассУсловийТруда = ""4""
		|							ТОГДА ""132""
		|						КОГДА ВзносыПоКлассамУсловий.КлассУсловийТруда = ""5""
		|							ТОГДА ""131""
		|						ИНАЧЕ """"
		|					КОНЕЦ
		|			КОГДА ВзносыПоКлассамУсловий.КлассУсловийТруда = ""1""
		|				ТОГДА ""240""
		|			КОГДА ВзносыПоКлассамУсловий.КлассУсловийТруда = ""2""
		|				ТОГДА ""234""
		|			КОГДА ВзносыПоКлассамУсловий.КлассУсловийТруда = ""3""
		|				ТОГДА ""233""
		|			КОГДА ВзносыПоКлассамУсловий.КлассУсловийТруда = ""4""
		|				ТОГДА ""232""
		|			КОГДА ВзносыПоКлассамУсловий.КлассУсловийТруда = ""5""
		|				ТОГДА ""231""
		|			ИНАЧЕ """"
		|		КОНЕЦ,
		|		0,
		|		ВзносыПоКлассамУсловий.Взносы
		|	ИЗ
		|		ВТВзносыПоКлассамУсловий КАК ВзносыПоКлассамУсловий
		|	ГДЕ
		|		ВзносыПоКлассамУсловий.Период МЕЖДУ &НачалоОтчетногоКвартала И &КонецОтчетногоПериода
		|		И ВзносыПоКлассамУсловий.Взносы <> 0) КАК Данные
		|
		|СГРУППИРОВАТЬ ПО
		|	Данные.ФизическоеЛицо,
		|	Данные.П00322М118001,
		|	Данные.П00322М119001
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДоходыВзносовПоТекущимДанным.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФизлицаВОтчет
		|ИЗ
		|	ВТДоходыВзносовПоТекущимДанным КАК ДоходыВзносовПоТекущимДанным
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыВзносовПереданные КАК ДоходыВзносовПереданные
		|		ПО ДоходыВзносовПоТекущимДанным.ФизическоеЛицо = ДоходыВзносовПереданные.ФизическоеЛицо
		|			И ДоходыВзносовПоТекущимДанным.П00321М112001 = ДоходыВзносовПереданные.П00321М112001
		|			И ДоходыВзносовПоТекущимДанным.П00321М113001 = ДоходыВзносовПереданные.П00321М113001
		|			И ДоходыВзносовПоТекущимДанным.П00321М114001 = ДоходыВзносовПереданные.П00321М114001
		|			И ДоходыВзносовПоТекущимДанным.П00321М114101 = ДоходыВзносовПереданные.П00321М114101
		|			И ДоходыВзносовПоТекущимДанным.П00321М115001 = ДоходыВзносовПереданные.П00321М115001
		|			И ДоходыВзносовПоТекущимДанным.П00321М116001 = ДоходыВзносовПереданные.П00321М116001
		|			И ДоходыВзносовПоТекущимДанным.П00321М117001 = ДоходыВзносовПереданные.П00321М117001
		|ГДЕ
		|	ДоходыВзносовПереданные.ФизическоеЛицо ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДоходыВзносовПереданные.ФизическоеЛицо
		|ИЗ
		|	ВТДоходыВзносовПереданные КАК ДоходыВзносовПереданные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыВзносовПоТекущимДанным КАК ДоходыВзносовПоТекущимДанным
		|		ПО ДоходыВзносовПереданные.ФизическоеЛицо = ДоходыВзносовПоТекущимДанным.ФизическоеЛицо
		|			И ДоходыВзносовПереданные.П00321М112001 = ДоходыВзносовПоТекущимДанным.П00321М112001
		|			И ДоходыВзносовПереданные.П00321М113001 = ДоходыВзносовПоТекущимДанным.П00321М113001
		|			И ДоходыВзносовПереданные.П00321М114001 = ДоходыВзносовПоТекущимДанным.П00321М114001
		|			И ДоходыВзносовПереданные.П00321М114101 = ДоходыВзносовПоТекущимДанным.П00321М114101
		|			И ДоходыВзносовПереданные.П00321М115001 = ДоходыВзносовПоТекущимДанным.П00321М115001
		|			И ДоходыВзносовПереданные.П00321М116001 = ДоходыВзносовПоТекущимДанным.П00321М116001
		|			И ДоходыВзносовПереданные.П00321М117001 = ДоходыВзносовПоТекущимДанным.П00321М117001
		|ГДЕ
		|	ДоходыВзносовПоТекущимДанным.ФизическоеЛицо ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДоходыВредныхВзносовПоТекущимДанным.ФизическоеЛицо
		|ИЗ
		|	ВТДоходыВредныхВзносовПоТекущимДанным КАК ДоходыВредныхВзносовПоТекущимДанным
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыВредныхВзносовПереданные КАК ДоходыВредныхВзносовПереданные
		|		ПО ДоходыВредныхВзносовПоТекущимДанным.ФизическоеЛицо = ДоходыВредныхВзносовПереданные.ФизическоеЛицо
		|			И ДоходыВредныхВзносовПоТекущимДанным.П00322М118001 = ДоходыВредныхВзносовПереданные.П00322М118001
		|			И ДоходыВредныхВзносовПоТекущимДанным.П00322М119001 = ДоходыВредныхВзносовПереданные.П00322М119001
		|			И ДоходыВредныхВзносовПоТекущимДанным.П00322М120001 = ДоходыВредныхВзносовПереданные.П00322М120001
		|			И ДоходыВредныхВзносовПоТекущимДанным.П00322М121001 = ДоходыВредныхВзносовПереданные.П00322М121001
		|ГДЕ
		|	ДоходыВредныхВзносовПереданные.ФизическоеЛицо ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДоходыВредныхВзносовПереданные.ФизическоеЛицо
		|ИЗ
		|	ВТДоходыВредныхВзносовПереданные КАК ДоходыВредныхВзносовПереданные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыВредныхВзносовПоТекущимДанным КАК ДоходыВредныхВзносовПоТекущимДанным
		|		ПО (ДоходыВредныхВзносовПоТекущимДанным.ФизическоеЛицо = ДоходыВредныхВзносовПереданные.ФизическоеЛицо)
		|			И ДоходыВредныхВзносовПереданные.П00322М118001 = ДоходыВредныхВзносовПоТекущимДанным.П00322М118001
		|			И ДоходыВредныхВзносовПереданные.П00322М119001 = ДоходыВредныхВзносовПоТекущимДанным.П00322М119001
		|			И ДоходыВредныхВзносовПереданные.П00322М120001 = ДоходыВредныхВзносовПоТекущимДанным.П00322М120001
		|			И ДоходыВредныхВзносовПереданные.П00322М121001 = ДоходыВредныхВзносовПоТекущимДанным.П00322М121001
		|ГДЕ
		|	ДоходыВредныхВзносовПоТекущимДанным.ФизическоеЛицо ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФизлицаПоТекущимДанным.ФизическоеЛицо
		|ИЗ
		|	ВТФизлицаПоТекущимДанным КАК ФизлицаПоТекущимДанным
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаПереданные КАК ФизлицаПереданные
		|		ПО ФизлицаПоТекущимДанным.ФизическоеЛицо = ФизлицаПереданные.ФизическоеЛицо
		|			И ФизлицаПоТекущимДанным.П000310002001 = ФизлицаПереданные.П000310002001
		|			И ФизлицаПоТекущимДанным.П000310003001 = ФизлицаПереданные.П000310003001
		|			И ФизлицаПоТекущимДанным.П000310004001 = ФизлицаПереданные.П000310004001
		|			И ФизлицаПоТекущимДанным.П000310005001 = ФизлицаПереданные.П000310005001
		|			И ФизлицаПоТекущимДанным.П000310006001 = ФизлицаПереданные.П000310006001
		|			И ФизлицаПоТекущимДанным.П000310007001 = ФизлицаПереданные.П000310007001
		|			И ФизлицаПоТекущимДанным.П000310008001 = ФизлицаПереданные.П000310008001
		|			И ФизлицаПоТекущимДанным.П000310009001 = ФизлицаПереданные.П000310009001
		|			И ФизлицаПоТекущимДанным.П000310010001 = ФизлицаПереданные.П000310010001
		|			И ФизлицаПоТекущимДанным.П000310011001 = ФизлицаПереданные.П000310011001
		|			И ФизлицаПоТекущимДанным.П000310011002 = ФизлицаПереданные.П000310011002
		|ГДЕ
		|	ФизлицаПереданные.ФизическоеЛицо ЕСТЬ NULL
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизическоеЛицо";
		Запрос.Выполнить(); 
		// АПК:96-вкл
		
		Если ОписаниеТаблиц.Свойство("Раздел3Физлица2023") Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	МИНИМУМ(ПроверкаСНИЛС.ФизическоеЛицо) КАК ДругоеФизическоеЛицо,
			|	ФизлицаПоТекущимДанным.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ФизлицаПоТекущимДанным.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
			|	ФизлицаПоТекущимДанным.НачалоРаботы КАК НачалоРаботы,
			|	ФизлицаПоТекущимДанным.ДобавлятьСтрокуВПервыйМесяц КАК ДобавлятьСтрокуВПервыйМесяц,
			|	ФизлицаПоТекущимДанным.ДобавлятьСтрокуВоВторойМесяц КАК ДобавлятьСтрокуВоВторойМесяц,
			|	ФизлицаПоТекущимДанным.ДобавлятьСтрокуВТретийМесяц КАК ДобавлятьСтрокуВТретийМесяц,
			|	ФизлицаПоТекущимДанным.ФИО КАК ФИО,
			|	ФизлицаПоТекущимДанным.Код КАК Код,
			|	ФизлицаПоТекущимДанным.П000310002001 КАК П000310002001,
			|	ФизлицаПоТекущимДанным.П000310003001 КАК П000310003001,
			|	ФизлицаПоТекущимДанным.П000310004001 КАК П000310004001,
			|	ФизлицаПоТекущимДанным.П000310005001 КАК П000310005001,
			|	ФизлицаПоТекущимДанным.П000310006001 КАК П000310006001,
			|	ФизлицаПоТекущимДанным.П000310007001 КАК П000310007001,
			|	ФизлицаПоТекущимДанным.П000310008001 КАК П000310008001,
			|	ФизлицаПоТекущимДанным.П000310009001 КАК П000310009001,
			|	ФизлицаПоТекущимДанным.П000310010001 КАК П000310010001,
			|	ФизлицаПоТекущимДанным.П000310011001 КАК П000310011001,
			|	ФизлицаПоТекущимДанным.П000310011002 КАК П000310011002,
			|	МИНИМУМ(ПроверкаСНИЛС.ФизическоеЛицо) ЕСТЬ НЕ NULL  КАК ЕстьОшибкаСНИЛС
			|ПОМЕСТИТЬ ВТДанныеСПовторнымиФизическимиЛицами
			|ИЗ
			|	ВТФизлицаПоТекущимДанным КАК ФизлицаПоТекущимДанным
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаВОтчет КАК ФизлицаВОтчет
			|		ПО ФизлицаПоТекущимДанным.ФизическоеЛицо = ФизлицаВОтчет.ФизическоеЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаПоТекущимДанным КАК ПроверкаСНИЛС
			|		ПО ФизлицаПоТекущимДанным.П000310003001 = ПроверкаСНИЛС.П000310003001
			|			И ФизлицаПоТекущимДанным.Код < ПроверкаСНИЛС.Код
			|ГДЕ
			|	ФизлицаВОтчет.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|
			|СГРУППИРОВАТЬ ПО
			|	ФизлицаПоТекущимДанным.КатегорияЗастрахованныхЛиц,
			|	ФизлицаПоТекущимДанным.НачалоРаботы,
			|	ФизлицаПоТекущимДанным.ДобавлятьСтрокуВПервыйМесяц,
			|	ФизлицаПоТекущимДанным.ДобавлятьСтрокуВоВторойМесяц,
			|	ФизлицаПоТекущимДанным.ДобавлятьСтрокуВТретийМесяц,
			|	ФизлицаПоТекущимДанным.ФизическоеЛицо,
			|	ФизлицаПоТекущимДанным.ФИО,
			|	ФизлицаПоТекущимДанным.Код,
			|	ФизлицаПоТекущимДанным.П000310002001,
			|	ФизлицаПоТекущимДанным.П000310003001,
			|	ФизлицаПоТекущимДанным.П000310004001,
			|	ФизлицаПоТекущимДанным.П000310005001,
			|	ФизлицаПоТекущимДанным.П000310006001,
			|	ФизлицаПоТекущимДанным.П000310007001,
			|	ФизлицаПоТекущимДанным.П000310008001,
			|	ФизлицаПоТекущимДанным.П000310009001,
			|	ФизлицаПоТекущимДанным.П000310010001,
			|	ФизлицаПоТекущимДанным.П000310011001,
			|	ФизлицаПоТекущимДанным.П000310011002
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДанныеСПовторнымиФизическимиЛицами.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДанныеСПовторнымиФизическимиЛицами.ДругоеФизическоеЛицо КАК ДругоеФизическоеЛицо,
			|	ДанныеСПовторнымиФизическимиЛицами.ФИО КАК ФИО,
			|	ДанныеСПовторнымиФизическимиЛицами.Код КАК Код,
			|	ДанныеСПовторнымиФизическимиЛицами.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
			|	ДанныеСПовторнымиФизическимиЛицами.НачалоРаботы КАК НачалоРаботы,
			|	ДанныеСПовторнымиФизическимиЛицами.ДобавлятьСтрокуВПервыйМесяц КАК ДобавлятьСтрокуВПервыйМесяц,
			|	ДанныеСПовторнымиФизическимиЛицами.ДобавлятьСтрокуВоВторойМесяц КАК ДобавлятьСтрокуВоВторойМесяц,
			|	ДанныеСПовторнымиФизическимиЛицами.ДобавлятьСтрокуВТретийМесяц КАК ДобавлятьСтрокуВТретийМесяц,
			|	"""" КАК П000030001001,
			|	ДанныеСПовторнымиФизическимиЛицами.П000310002001 КАК П000310002001,
			|	ДанныеСПовторнымиФизическимиЛицами.П000310003001 КАК П000310003001,
			|	ДанныеСПовторнымиФизическимиЛицами.П000310004001 КАК П000310004001,
			|	ДанныеСПовторнымиФизическимиЛицами.П000310005001 КАК П000310005001,
			|	ДанныеСПовторнымиФизическимиЛицами.П000310006001 КАК П000310006001,
			|	ДанныеСПовторнымиФизическимиЛицами.П000310007001 КАК П000310007001,
			|	ДанныеСПовторнымиФизическимиЛицами.П000310008001 КАК П000310008001,
			|	ДанныеСПовторнымиФизическимиЛицами.П000310009001 КАК П000310009001,
			|	ДанныеСПовторнымиФизическимиЛицами.П000310010001 КАК П000310010001,
			|	ДанныеСПовторнымиФизическимиЛицами.П000310011001 КАК П000310011001,
			|	ДанныеСПовторнымиФизическимиЛицами.П000310011002 КАК П000310011002,
			|	ДанныеСПовторнымиФизическимиЛицами.ЕстьОшибкаСНИЛС КАК ЕстьОшибкаСНИЛС,
			|	ФизлицаПоТекущимДанным.ФИО КАК ФИОДругогоФизическогоЛица,
			|	ФизлицаПоТекущимДанным.Код КАК КодДругогоФизическогоЛица
			|ИЗ
			|	ВТДанныеСПовторнымиФизическимиЛицами КАК ДанныеСПовторнымиФизическимиЛицами
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаПоТекущимДанным КАК ФизлицаПоТекущимДанным
			|		ПО ДанныеСПовторнымиФизическимиЛицами.ДругоеФизическоеЛицо = ФизлицаПоТекущимДанным.ФизическоеЛицо
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО,
			|	"""",
			|	ДанныеСПовторнымиФизическимиЛицами.ФИО,
			|	"""",
			|	"""",
			|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|	ЛОЖЬ,
			|	ЛОЖЬ,
			|	ЛОЖЬ,
			|	""1"",
			|	ФизлицаПереданные.П000310002001,
			|	ФизлицаПереданные.П000310003001,
			|	ФизлицаПереданные.П000310004001,
			|	ФизлицаПереданные.П000310005001,
			|	ФизлицаПереданные.П000310006001,
			|	ФизлицаПереданные.П000310007001,
			|	ФизлицаПереданные.П000310008001,
			|	ФизлицаПереданные.П000310009001,
			|	ФизлицаПереданные.П000310010001,
			|	ФизлицаПереданные.П000310011001,
			|	ФизлицаПереданные.П000310011002,
			|	ЛОЖЬ,
			|	"""",
			|	""""
			|ИЗ
			|	ВТДанныеСПовторнымиФизическимиЛицами КАК ДанныеСПовторнымиФизическимиЛицами
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаПереданные КАК ФизлицаПереданные
			|		ПО ДанныеСПовторнымиФизическимиЛицами.ФизическоеЛицо = ФизлицаПереданные.ФизическоеЛицо
			|			И ДанныеСПовторнымиФизическимиЛицами.П000310003001 <> ФизлицаПереданные.П000310003001
			|			И ДанныеСПовторнымиФизическимиЛицами.П000310004001 <> ФизлицаПереданные.П000310004001
			|			И ДанныеСПовторнымиФизическимиЛицами.П000310005001 <> ФизлицаПереданные.П000310005001
			|			И ДанныеСПовторнымиФизическимиЛицами.П000310006001 <> ФизлицаПереданные.П000310006001
			|ГДЕ
			|	ФизлицаПереданные.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО,
			|	"""",
			|	ФизлицаПереданные.П000310008001 + "" "" + ФизлицаПереданные.П000310009001 + "" "" + ФизлицаПереданные.П000310010001,
			|	"""",
			|	"""",
			|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|	ЛОЖЬ,
			|	ЛОЖЬ,
			|	ЛОЖЬ,
			|	""1"",
			|	ФизлицаПереданные.П000310002001,
			|	ФизлицаПереданные.П000310003001,
			|	ФизлицаПереданные.П000310004001,
			|	ФизлицаПереданные.П000310005001,
			|	ФизлицаПереданные.П000310006001,
			|	ФизлицаПереданные.П000310007001,
			|	ФизлицаПереданные.П000310008001,
			|	ФизлицаПереданные.П000310009001,
			|	ФизлицаПереданные.П000310010001,
			|	ФизлицаПереданные.П000310011001,
			|	ФизлицаПереданные.П000310011002,
			|	ЛОЖЬ,
			|	"""",
			|	""""
			|ИЗ
			|	ВТФизлицаПереданные КАК ФизлицаПереданные
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаПоТекущимДанным КАК ФизлицаПоТекущимДанным
			|		ПО ФизлицаПереданные.П000310003001 = ФизлицаПоТекущимДанным.П000310003001
			|			И ФизлицаПереданные.П000310004001 = ФизлицаПоТекущимДанным.П000310004001
			|			И ФизлицаПереданные.П000310005001 = ФизлицаПоТекущимДанным.П000310005001
			|			И ФизлицаПереданные.П000310006001 = ФизлицаПоТекущимДанным.П000310006001
			|ГДЕ
			|	ФизлицаПоТекущимДанным.ФизическоеЛицо ЕСТЬ NULL
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФИО,
			|	П000030001001 УБЫВ";
			ОписаниеТаблиц.Раздел3Физлица2023 = Запрос.Выполнить().Выгрузить();
		КонецЕсли;
		
		Если ОписаниеТаблиц.Свойство("Подраздел321Доходы2023") Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.П00321М112001,
			|	СведенияОДоходах.П00321М113001,
			|	СведенияОДоходах.П00321М114001,
			|	СведенияОДоходах.П00321М114101,
			|	СведенияОДоходах.П00321М115001,
			|	СведенияОДоходах.П00321М116001,
			|	СведенияОДоходах.П00321М117001
			|ИЗ
			|	ВТДоходыВзносовПоТекущимДанным КАК СведенияОДоходах
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаВОтчет КАК ФизлицаВОтчет
			|		ПО СведенияОДоходах.ФизическоеЛицо = ФизлицаВОтчет.ФизическоеЛицо
			|ГДЕ
			|	ФизлицаВОтчет.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|
			|УПОРЯДОЧИТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.П00321М112001,
			|	СведенияОДоходах.П00321М113001";
			ОписаниеТаблиц.Подраздел321Доходы2023 = Запрос.Выполнить().Выгрузить();
		КонецЕсли;
		
		Если ОписаниеТаблиц.Свойство("Подраздел322Доходы2023") Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Данные.ФизическоеЛицо,
			|	Данные.П00322М118001,
			|	Данные.П00322М119001,
			|	Данные.П00322М120001,
			|	Данные.П00322М121001
			|ИЗ
			|	ВТДоходыВредныхВзносовПоТекущимДанным КАК Данные
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаВОтчет КАК ФизлицаВОтчет
			|		ПО Данные.ФизическоеЛицо = ФизлицаВОтчет.ФизическоеЛицо
			|ГДЕ
			|	ФизлицаВОтчет.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|
			|УПОРЯДОЧИТЬ ПО
			|	Данные.ФизическоеЛицо,
			|	Данные.П00322М118001,
			|	Данные.П00322М119001";
			ОписаниеТаблиц.Подраздел322Доходы2023 = Запрос.Выполнить().Выгрузить();
		КонецЕсли;
		
	КонецЕсли;
	
	// Раздел 4
	Если ОписаниеТаблиц.Свойство("Раздел4Численность2023") Тогда
		Если ЗаполнятьРаздел4 Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СУММА(ВЫБОР
			|			КОГДА Прокуроры.Период = 0
			|				ТОГДА Прокуроры.Количество
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК Всего,
			|	СУММА(ВЫБОР
			|			КОГДА Прокуроры.Период = &Месяц1
			|				ТОГДА Прокуроры.Количество
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК Месяц1,
			|	СУММА(ВЫБОР
			|			КОГДА Прокуроры.Период = &Месяц2
			|				ТОГДА Прокуроры.Количество
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК Месяц2,
			|	СУММА(ВЫБОР
			|			КОГДА Прокуроры.Период = &Месяц3
			|				ТОГДА Прокуроры.Количество
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК Месяц3
			|ПОМЕСТИТЬ ВТКоличествоПрокуроры
			|ИЗ
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		МЕСЯЦ(Прокуроры.Период) КАК Период,
			|		Прокуроры.ФизическоеЛицо КАК ФизическоеЛицо,
			|		1 КАК Количество
			|	ИЗ
			|		ВТПрокуроры КАК Прокуроры
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		0,
			|		Прокуроры.ФизическоеЛицо,
			|		1
			|	ИЗ
			|		ВТПрокуроры КАК Прокуроры) КАК Прокуроры
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СводныеВзносы.Всего) КАК Всего,
			|	СУММА(СводныеВзносы.Месяц1) КАК Месяц1,
			|	СУММА(СводныеВзносы.Месяц2) КАК Месяц2,
			|	СУММА(СводныеВзносы.Месяц3) КАК Месяц3
			|ПОМЕСТИТЬ ВТКоличествоИмеющихВзносы
			|ИЗ
			|	(ВЫБРАТЬ
			|		ВЫБОР
			|			КОГДА СУММА(СведенияОДоходах.ФФОМС) > 0
			|				ТОГДА 1
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК Всего,
			|		ВЫБОР
			|			КОГДА СУММА(ВЫБОР
			|						КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|							ТОГДА СведенияОДоходах.ФФОМС
			|						ИНАЧЕ 0
			|					КОНЕЦ) > 0
			|				ТОГДА 1
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК Месяц1,
			|		ВЫБОР
			|			КОГДА СУММА(ВЫБОР
			|						КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|							ТОГДА СведенияОДоходах.ФФОМС
			|						ИНАЧЕ 0
			|					КОНЕЦ) > 0
			|				ТОГДА 1
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК Месяц2,
			|		ВЫБОР
			|			КОГДА СУММА(ВЫБОР
			|						КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|							ТОГДА СведенияОДоходах.ФФОМС
			|						ИНАЧЕ 0
			|					КОНЕЦ) > 0
			|				ТОГДА 1
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК Месяц3,
			|		СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо
			|	ИЗ
			|		ВТДоходыВзносов КАК СведенияОДоходах
			|	ГДЕ
			|		СведенияОДоходах.ВключатьВРаздел4
			|	
			|	СГРУППИРОВАТЬ ПО
			|		СведенияОДоходах.ФизическоеЛицо) КАК СводныеВзносы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КоличествоЗастрахованных.Всего КАК П000410001001,
			|	КоличествоЗастрахованных.Месяц1 КАК П000410001002,
			|	КоличествоЗастрахованных.Месяц2 КАК П000410001003,
			|	КоличествоЗастрахованных.Месяц3 КАК П000410001004,
			|	ЕСТЬNULL(КоличествоИмеющихВзносы.Всего, 0) КАК П000410002001,
			|	ЕСТЬNULL(КоличествоИмеющихВзносы.Месяц1, 0) КАК П000410002002,
			|	ЕСТЬNULL(КоличествоИмеющихВзносы.Месяц2, 0) КАК П000410002003,
			|	ЕСТЬNULL(КоличествоИмеющихВзносы.Месяц3, 0) КАК П000410002004
			|ИЗ
			|	ВТКоличествоПрокуроры КАК КоличествоЗастрахованных
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоИмеющихВзносы КАК КоличествоИмеющихВзносы
			|		ПО (ИСТИНА)";
		Иначе	
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	0 КАК П000410001001,
			|	0 КАК П000410001002,
			|	0 КАК П000410001003,
			|	0 КАК П000410001004,
			|	0 КАК П000410002001,
			|	0 КАК П000410002002,
			|	0 КАК П000410002003,
			|	0 КАК П000410002004";
		КонецЕсли;
		ОписаниеТаблиц.Раздел4Численность2023 = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Раздел4Доходы2023") Тогда
		Если ЗаполнятьРаздел4 Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(СУММА(СведенияОДоходах.НачисленоВсегоФОМС), 0) КАК П000410003001,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|					ТОГДА СведенияОДоходах.НачисленоВсегоФОМС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410003002,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|					ТОГДА СведенияОДоходах.НачисленоВсегоФОМС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410003003,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|					ТОГДА СведенияОДоходах.НачисленоВсегоФОМС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410003004,
			|	ЕСТЬNULL(СУММА(СведенияОДоходах.НеОблагаетсяФОМС), 0) КАК П000410004001,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|					ТОГДА СведенияОДоходах.НеОблагаетсяФОМС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410004002,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|					ТОГДА СведенияОДоходах.НеОблагаетсяФОМС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410004003,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|					ТОГДА СведенияОДоходах.НеОблагаетсяФОМС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410004004,
			|	ЕСТЬNULL(СУММА(СведенияОДоходах.СуммаПревысившаяПределФСС), 0) КАК П000410005001,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|					ТОГДА СведенияОДоходах.СуммаПревысившаяПределФСС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410005002,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|					ТОГДА СведенияОДоходах.СуммаПревысившаяПределФСС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410005003,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|					ТОГДА СведенияОДоходах.СуммаПревысившаяПределФСС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410005004,
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходах.Начисление КАК Начисление
			|ИЗ
			|	ВТДоходыВзносов КАК СведенияОДоходах
			|ГДЕ
			|	СведенияОДоходах.ВключатьВРаздел4
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.ФизическоеЛицо
			|
			|ИМЕЮЩИЕ
			|	СУММА(0) = 0";
			МассивПолей = Новый Массив;
			Если ПодробныеДанные Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(0) = 0", "
				|	(СУММА(ВЫБОР
				|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) <> &Месяц1
				|					ТОГДА 0
				|				ИНАЧЕ СведенияОДоходах.НачисленоВсегоФОМС
				|			КОНЕЦ) <> 0
				|		ИЛИ СУММА(ВЫБОР
				|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) <> &Месяц2
				|					ТОГДА 0
				|				ИНАЧЕ СведенияОДоходах.НачисленоВсегоФОМС
				|			КОНЕЦ) <> 0
				|		ИЛИ СУММА(ВЫБОР
				|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) <> &Месяц3
				|					ТОГДА 0
				|				ИНАЧЕ СведенияОДоходах.НачисленоВсегоФОМС
				|			КОНЕЦ) <> 0
				|		ИЛИ СУММА(СведенияОДоходах.НачисленоВсегоФОМС) <> 0)");
			Иначе 	
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("Начисление");
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(0) = 0", "СУММА(СведенияОДоходах.НачисленоВсегоФОМС) <> 0");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	0 КАК П000410003001,
			|	0 КАК П000410003002,
			|	0 КАК П000410003003,
			|	0 КАК П000410003004,
			|	0 КАК П000410004001,
			|	0 КАК П000410004002,
			|	0 КАК П000410004003,
			|	0 КАК П000410004004,
			|	0 КАК П000410005001,
			|	0 КАК П000410005002,
			|	0 КАК П000410005003,
			|	0 КАК П000410005004,
			|	НЕОПРЕДЕЛЕНО КАК ФизическоеЛицо,
			|	НЕОПРЕДЕЛЕНО КАК Начисление";
		КонецЕсли;
		ОписаниеТаблиц.Раздел4Доходы2023 = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Раздел4Взносы2023") Тогда
		Если ЗаполнятьРаздел4 Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(СУММА(СведенияОДоходах.ФФОМС), 0) КАК П000410009001,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|					ТОГДА СведенияОДоходах.ФФОМС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410009002,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|					ТОГДА СведенияОДоходах.ФФОМС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410009003,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|					ТОГДА СведенияОДоходах.ФФОМС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410009004,
			|	ЕСТЬNULL(СУММА(СведенияОДоходах.ФСС), 0) КАК П000410007001,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|					ТОГДА СведенияОДоходах.ФСС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410007002,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|					ТОГДА СведенияОДоходах.ФСС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410007003,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|					ТОГДА СведенияОДоходах.ФСС
			|				ИНАЧЕ 0
			|			КОНЕЦ), 0) КАК П000410007004,
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо
			|ИЗ
			|	ВТДоходыВзносов КАК СведенияОДоходах
			|ГДЕ
			|	СведенияОДоходах.ВключатьВРаздел4
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо";
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
		Иначе	
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	НЕОПРЕДЕЛЕНО КАК ФизическоеЛицо,
			|	0 КАК П000410007001,
			|	0 КАК П000410007002,
			|	0 КАК П000410007003,
			|	0 КАК П000410007004,
			|	0 КАК П000410009001,
			|	0 КАК П000410009002,
			|	0 КАК П000410009003,
			|	0 КАК П000410009004";
		КонецЕсли;
		ОписаниеТаблиц.Раздел4Взносы2023 = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Раздел4Физлица2023") Тогда
		Если ЗаполнятьРаздел4 Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	&ДатаАктуальности КАК Период,
			|	Физлица.ФизическоеЛицо КАК ФизическоеЛицо
			|ПОМЕСТИТЬ ВТФизлицаРаздела4КД
			|ИЗ
			|	ВТЗастрахованныеЛицаОрганизации КАК Физлица
			|ГДЕ
			|	Физлица.ВключатьВРаздел4";
			Запрос.Выполнить();
			
			КадровыеДанные = "Фамилия, Имя, Отчество, Наименование, ИНН, СтраховойНомерПФР, ДатаРождения, Пол, ДокументКодМВД, ДокументСерия, ДокументНомер";
			ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц,	"ВТФизлицаРаздела4КД");
			ОписательВременныхТаблиц.ИмяВТКадровыеДанныеФизическихЛиц = "ВТДанныеПрокуроров";
			КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Ложь, КадровыеДанные);
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СУММА(СведенияОДоходах.НачисленоВсегоФОМС) КАК П004010006001,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.НачисленоВсегоФОМС
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П004010006002,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.НачисленоВсегоФОМС
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П004010006003,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.НачисленоВсегоФОМС
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П004010006004,
			|	СУММА(СведенияОДоходах.БазаДоПредела) КАК П004010007001,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.БазаДоПредела
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П004010007002,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.БазаДоПредела
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П004010007003,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.БазаДоПредела
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П004010007004,
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо
			|ПОМЕСТИТЬ ВТСводныеДоходы
			|ИЗ
			|	ВТДоходыВзносов КАК СведенияОДоходах
			|ГДЕ
			|	СведенияОДоходах.ВключатьВРаздел4
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Физлица.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ЕСТЬNULL(ФИОФизлиц.Фамилия, """") КАК П004010001001,
			|	ЕСТЬNULL(ФИОФизлиц.Имя, """") КАК П004010002001,
			|	ЕСТЬNULL(ФИОФизлиц.Отчество, """") КАК П004010003001,
			|	ЕСТЬNULL(ФИОФизлиц.ИНН, """") КАК П004010004001,
			|	ЕСТЬNULL(ФИОФизлиц.СтраховойНомерПФР, """") КАК П004010005001,
			|	ЕСТЬNULL(ФИОФизлиц.ДатаРождения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК П004010005101,
			|	ЕСТЬNULL(ВЫБОР
			|			КОГДА ФИОФизлиц.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Мужской)
			|				ТОГДА ""1""
			|			ИНАЧЕ ""2""
			|		КОНЕЦ, """") КАК П004010005201,
			|	ЕСТЬNULL(ФИОФизлиц.ДокументКодМВД, """") КАК П004010005301,
			|	ЕСТЬNULL(ФИОФизлиц.ДокументСерия, """") КАК П004010005401,
			|	ЕСТЬNULL(ФИОФизлиц.ДокументНомер, """") КАК П004010005402,
			|	ЕСТЬNULL(СводныеДоходы.П004010006001, 0) КАК П004010006001,
			|	ЕСТЬNULL(СводныеДоходы.П004010006002, 0) КАК П004010006002,
			|	ЕСТЬNULL(СводныеДоходы.П004010006003, 0) КАК П004010006003,
			|	ЕСТЬNULL(СводныеДоходы.П004010006004, 0) КАК П004010006004,
			|	ЕСТЬNULL(СводныеДоходы.П004010007001, 0) КАК П004010007001,
			|	ЕСТЬNULL(СводныеДоходы.П004010007002, 0) КАК П004010007002,
			|	ЕСТЬNULL(СводныеДоходы.П004010007003, 0) КАК П004010007003,
			|	ЕСТЬNULL(СводныеДоходы.П004010007004, 0) КАК П004010007004
			|ИЗ
			|	ВТФизлицаРаздела4КД КАК Физлица
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеПрокуроров КАК ФИОФизлиц
			|		ПО Физлица.ФизическоеЛицо = ФИОФизлиц.ФизическоеЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСводныеДоходы КАК СводныеДоходы
			|		ПО Физлица.ФизическоеЛицо = СводныеДоходы.ФизическоеЛицо
			|
			|УПОРЯДОЧИТЬ ПО
			|	П004010001001,
			|	П004010002001,
			|	П004010003001";
			
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	НЕОПРЕДЕЛЕНО КАК ФизическоеЛицо,
			|	"""" КАК П004010001001,
			|	"""" КАК П004010002001,
			|	"""" КАК П004010003001,
			|	"""" КАК П004010004001,
			|	"""" КАК П004010005001,
			|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК П004010005101,
			|	"""" КАК П004010005201,
			|	"""" КАК П004010005301,
			|	"""" КАК П004010005401,
			|	"""" КАК П004010005402,
			|	0 КАК П004010006001,
			|	0 КАК П004010006002,
			|	0 КАК П004010006003,
			|	0 КАК П004010006004,		
			|	0 КАК П004010007001,
			|	0 КАК П004010007002,
			|	0 КАК П004010007003,
			|	0 КАК П004010007004";		
		КонецЕсли;
		ОписаниеТаблиц.Раздел4Физлица2023 = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
КонецПроцедуры

// РСВ-1

Процедура РасчетПоказателейРСВ1(ИмяРасчета, НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные = Ложь) Экспорт

	Если ИмяРасчета = "РасчетПоказателей_РСВ1_2013Кв1" Тогда
		УчетСтраховыхВзносовАрхивныеАлгоритмы.РасчетПоказателей_РСВ1_2013Кв1(НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные);
	ИначеЕсли ИмяРасчета = "РасчетПоказателей_РСВ1_2014" Тогда
		УчетСтраховыхВзносовАрхивныеАлгоритмы.РасчетПоказателей_РСВ1_2014(НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные);
	ИначеЕсли ИмяРасчета = "РасчетПоказателей_РСВ1_2015" Тогда
		УчетСтраховыхВзносовАрхивныеАлгоритмы.РасчетПоказателей_РСВ1_2015(НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные);
	Иначе
		
	КонецЕсли;

КонецПроцедуры

// 4-ФСС

Процедура ОписаниеПоказателей_4ФСС_2022Кв2(ПоказателиОтчета, ПараметрыОтчета, ИспользоватьСКЕ = Неопределено) Экспорт
	
	// АПК:1036-выкл 
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "ЧислФизЛицВыпл",Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "ЧислРаботников",Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "ЧислИнвалидов", Истина, Ложь);
	// АПК:1036-вкл 
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000002", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000103", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000104", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000105", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000106", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000203", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000204", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000205", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000206", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000403", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000404", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000405", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000406", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000903", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000904", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000905", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000906", Истина, Истина);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000920000101", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000920000102", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000920000103", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000920000104", Истина, Истина);
	
	// Раздел СКЕ будем заполнять только тогда, когда его попросили пользователи.
	Если ИспользоватьСКЕ = Неопределено Тогда
		ИспользоватьСКЕ = Ложь;
		Если ТипЗнч(ПараметрыОтчета) = Тип("Структура") Тогда
			Организация = Неопределено;
			ИспользоватьСКЕ = ПараметрыОтчета.Свойство("Организация", Организация) И ПолучитьФункциональнуюОпцию("ИспользоватьСамостоятельныеКлассификационныеЕдиницы", Новый Структура("Организация",Организация))
		КонецЕсли;
	КонецЕсли;
	Если ИспользоватьСКЕ Тогда
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД02", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД03", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД04", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД05", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД11", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД12", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД13", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД14", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД15", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД16", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД17", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД18", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД20", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД21", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД22", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД23", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00011ОСВЭД24", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000101", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000102", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000103", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000104", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000105", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000111", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000112", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000113", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000114", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000115", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000116", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000117", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000118", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000120", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000121", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000122", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000123", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000110000124", Истина, Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗначенияПоказателей_4ФСС_2022Кв2(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаКонцаПериодаОтчета;
	Если Не УчетСтраховыхВзносов.ОрганизацияОтчитываетсяПоВзносамСамостоятельно(Организация, ДатаКонцаПериодаОтчета) Тогда
		Возврат
	КонецЕсли;
	ОрганизацииДляСбораДанных = УчетСтраховыхВзносов.ОрганизацииДляКонсолидацииОтчетовПоВзносам(Организация, ДатаКонцаПериодаОтчета);
	
	НачалоТекущегоКвартала = НачалоКвартала(ДатаКонцаПериодаОтчета);
	НачалоПериода = НачалоГода(ДатаКонцаПериодаОтчета);
	ОкончаниеПериода = КонецМесяца(ДатаКонцаПериодаОтчета);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОтложенноеПроведениеДокументов") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОтражениеДокументовВУчетеСтраховыхВзносов");
		Для каждого ТекущаяОрганизация Из ОрганизацииДляСбораДанных Цикл
			Модуль.ОтразитьДокументыВУчетеСтраховыхВзносов(ТекущаяОрганизация);
		КонецЦикла;
	КонецЕсли;
	
	ИспользоватьСКЕ = ПолучитьФункциональнуюОпцию("ИспользоватьСамостоятельныеКлассификационныеЕдиницы", Новый Структура("Организация",Организация));
	
	// Очистка контейнера.
	
	ПоказателиОтчета = Новый Структура;
	ОписаниеПоказателей_4ФСС_2022Кв2(ПоказателиОтчета, ПараметрыОтчета, ИспользоватьСКЕ);
	
	Значение = Неопределено;
	Для каждого КлючИЗначение Из Контейнер.Таблица1 Цикл
		Если ПоказателиОтчета.Свойство(КлючИЗначение.Ключ, Значение) Тогда
			Контейнер.Таблица1[КлючИЗначение.Ключ] = 0
		КонецЕсли;
	КонецЦикла;
	Для каждого КлючИЗначение Из Контейнер.Таблица1_1 Цикл
		Если ПоказателиОтчета.Свойство(КлючИЗначение.Ключ, Значение) Тогда
			Контейнер.Таблица1_1[КлючИЗначение.Ключ] = 0
		КонецЕсли;
	КонецЦикла;
	Контейнер.Таблица1_1_ДанныеДопСтрок.Очистить();
	Контейнер.Таблица92_ДанныеДопСтрок.Очистить();
	
	// -------------------------------------------------------------------------------
	// Вывод данных в отчет
	
	ОписаниеТаблиц = Новый Структура("ЧисленностьЗЛ,Доходы2022,Взносы2022,Платежи2022" + ?(ИспользоватьСКЕ, ",СКЕ2022,ОсновнойОКВЭД", ""));
	РасчетПоказателей_4ФСС_2022(НачалоПериода, ОкончаниеПериода, ОрганизацииДляСбораДанных, ОписаниеТаблиц);
	Если УчетСтраховыхВзносов.КонсолидироватьОтчетностьПоВсемОП(Организация, НачалоПериода) Тогда
		ДанныеЧисленности = КадровыйУчет.СреднесписочнаяЧисленностьРаботающих(Организация, ПараметрыОтчета.ДатаНачалаПериодаОтчета, ДатаКонцаПериодаОтчета, Истина);
	Иначе
		ДанныеЧисленности = Новый Структура("СреднесписочнаяЧисленностьРаботников, ЧисленностьИнвалидов", 0, 0);
		Для каждого ОП Из ОрганизацииДляСбораДанных Цикл
			ДанныеОП = КадровыйУчет.СреднесписочнаяЧисленностьРаботающих(ОП, ПараметрыОтчета.ДатаНачалаПериодаОтчета, ДатаКонцаПериодаОтчета);
			ДанныеЧисленности.СреднесписочнаяЧисленностьРаботников = ДанныеЧисленности.СреднесписочнаяЧисленностьРаботников + ДанныеОП.СреднесписочнаяЧисленностьРаботников;
			ДанныеЧисленности.ЧисленностьИнвалидов = ДанныеЧисленности.ЧисленностьИнвалидов + ДанныеОП.ЧисленностьИнвалидов;
		КонецЦикла;
	КонецЕсли;
	// АПК:1036-выкл 
	Контейнер.Титульный.ЧислРаботников = Формат(ДанныеЧисленности.СреднесписочнаяЧисленностьРаботников, "ЧГ=0");
	Контейнер.Титульный.ЧислИнвалидов = Формат(ДанныеЧисленности.ЧисленностьИнвалидов, "ЧГ=0");
	Контейнер.Титульный.ЧислФизЛицВыпл = Формат(ОписаниеТаблиц.ЧисленностьЗЛ, "ЧГ=0");
	// АПК:1036-вкл 
	
	// Таблица 1
	
	ТаблицаРезультатов = ОписаниеТаблиц.Доходы2022;
	Если ТаблицаРезультатов.Количество() > 0 Тогда
		СтрокаДанных = ТаблицаРезультатов[0];
		ЗаполнитьЗначенияСвойств(Контейнер.Таблица1, СтрокаДанных);
	КонецЕсли;
	ТаблицаРезультатов = ОписаниеТаблиц.Взносы2022;
	Если ТаблицаРезультатов.Количество() > 0 Тогда
		СтрокаДанных = ТаблицаРезультатов[0];
		ЗаполнитьЗначенияСвойств(Контейнер.Таблица1, СтрокаДанных);
	КонецЕсли;
	
	// Таблица СКЕ
	Если ИспользоватьСКЕ Тогда
		ТаблицаРезультатов = ОписаниеТаблиц.ОсновнойОКВЭД;
		Если ТаблицаРезультатов.Количество() > 0 Тогда
			СтрокаДанных = ТаблицаРезультатов[0];
			ЗаполнитьЗначенияСвойств(Контейнер.Таблица1_1, СтрокаДанных);
		КонецЕсли;
		НомерПП = 1;
		Для каждого СтрокаДанных Из ОписаниеТаблиц.СКЕ2022 Цикл
			НоваяСтрока = Контейнер.Таблица1_1_ДанныеДопСтрок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
			НоваяСтрока.П000110000101 = НомерПП;
			НомерПП = НомерПП + 1;
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаРезультатов = ОписаниеТаблиц.Платежи2022;
	Если ТаблицаРезультатов.Количество() > 0 Тогда
		НомерПП = 1;
		Для каждого СтрокаДанных Из ТаблицаРезультатов Цикл
			НоваяСтрока = Контейнер.Таблица92_ДанныеДопСтрок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
		    НоваяСтрока.П000920000101 = НомерПП;
			НомерПП = НомерПП + 1;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОписаниеПоказателей_4ФСС_2021(ПоказателиОтчета, ПараметрыОтчета, ИспользоватьСКЕ)
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "ЧислРаботников",Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "ЧислИнвалидов", Истина, Ложь);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000103", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000104", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000105", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000106", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000203", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000204", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000205", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000206", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000403", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000404", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000405", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010000406", Истина, Истина);
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020002001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020002101", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020002201", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020002301", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020003003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020004003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020006003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020015001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020015101", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020015201", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020015301", Истина, Истина);
	
	// Раздел СКЕ будем заполнять только тогда, когда его попросили пользователи.
	Если ИспользоватьСКЕ = Неопределено Тогда
		ИспользоватьСКЕ = Ложь;
		Если ТипЗнч(ПараметрыОтчета) = Тип("Структура") Тогда
			Организация = Неопределено;
			ИспользоватьСКЕ = ПараметрыОтчета.Свойство("Организация", Организация) И ПолучитьФункциональнуюОпцию("ИспользоватьСамостоятельныеКлассификационныеЕдиницы", Новый Структура("Организация",Организация))
		КонецЕсли;
	КонецЕсли;
	Если ИспользоватьСКЕ Тогда
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000910000101", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000910000102", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000910000103", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000910000104", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000910000107", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000910000108", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000910000109", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000910000110", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000910000111", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000910000112", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000910000113", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000910000114", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000910000115", Истина, Ложь);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000910000116", Истина, Ложь);
	КонецЕсли;
	
	ДобавлятьПоказателиЗадолженности = Истина;
	ДобавлятьПоказателиУплатыВзносов = Истина;
	
	Если ТипЗнч(ПараметрыОтчета) = Тип("Структура")
		И ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.КонфигурацииЗарплатаКадры") Тогда
		Организация = Неопределено;
		ДатаКонцаПериодаОтчета = '00010101';
		Если ПараметрыОтчета.Свойство("Организация", Организация) И ПараметрыОтчета.Свойство("ДатаКонцаПериодаОтчета", ДатаКонцаПериодаОтчета) Тогда
			
			Если Не УчетСтраховыхВзносов.ОрганизацияОтчитываетсяПоВзносамСамостоятельно(Организация, ДатаКонцаПериодаОтчета) Тогда
				Возврат
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Организация", УчетСтраховыхВзносов.ОрганизацииДляКонсолидацииОтчетовПоВзносам(Организация, ДатаКонцаПериодаОтчета));
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	РасчетыСФондамиПоСтраховымВзносамОбороты.СуммаПриход КАК СуммаПриход,
			|	РасчетыСФондамиПоСтраховымВзносамОбороты.СуммаРасход КАК СуммаРасход
			|ИЗ
			|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Обороты(
			|			&НачалоПериода,
			|			&КонецПериода,
			|			,
			|			ЭтоСтраховыеВзносы
			|				И ЭтоРасчетыПоНачислениюУплатеВзносовВФСС
			|				И Организация В(&Организация)
			|				И ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФССНесчастныеСлучаи)) КАК РасчетыСФондамиПоСтраховымВзносамОбороты";

			Запрос.УстановитьПараметр("НачалоПериода",	ДобавитьМесяц(НачалоГода(ДатаКонцаПериодаОтчета), -12));
			Запрос.УстановитьПараметр("КонецПериода",	НачалоГода(ДатаКонцаПериодаОтчета) - 1);
			Результат = Запрос.Выполнить();
			ДобавлятьПоказателиЗадолженности = Результат.Пустой();
			Если Не ДобавлятьПоказателиЗадолженности Тогда
				Выборка = Результат.Выбрать();
				Выборка.Следующий();
				ДобавлятьПоказателиЗадолженности = ЗначениеЗаполнено(Выборка.СуммаРасход) Или Не ЗначениеЗаполнено(Выборка.СуммаПриход)
			КонецЕсли;
	
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Расчеты.ПлатежноеПоручениеНомер КАК ПлатежноеПоручениеНомер,
			|	Расчеты.ПлатежноеПоручениеДата КАК ПлатежноеПоручениеДата
			|ИЗ
			|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам КАК Расчеты
			|ГДЕ
			|	Расчеты.ЭтоСтраховыеВзносы
			|	И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
			|	И Расчеты.ЭтоРасчетыПоНачислениюУплатеВзносовВФСС
			|	И Расчеты.Организация В(&Организация)
			|	И Расчеты.Сумма <> 0
			|	И Расчеты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФССНесчастныеСлучаи)
			|	И Расчеты.Период МЕЖДУ &НачалоПериода И &КонецПериода";

			Запрос.УстановитьПараметр("НачалоПериода",	НачалоГода(ДатаКонцаПериодаОтчета));
			Запрос.УстановитьПараметр("КонецПериода",	КонецМесяца(ДатаКонцаПериодаОтчета));
			ДобавлятьПоказателиУплатыВзносов = Не Запрос.Выполнить().Пустой();
			ДобавлятьПоказателиЗадолженности = ДобавлятьПоказателиЗадолженности Или ДобавлятьПоказателиУплатыВзносов;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ДобавлятьПоказателиЗадолженности Тогда
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020001003", Истина, Истина);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020011003", Истина, Истина);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020013003", Истина, Истина);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020014003", Истина, Истина);
	КонецЕсли;
	Если ДобавлятьПоказателиУплатыВзносов Тогда
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020016001", Истина, Истина);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020016104", Истина, Истина);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020016105", Истина, Истина);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020016101", Истина, Истина);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020016204", Истина, Истина);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020016205", Истина, Истина);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020016201", Истина, Истина);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020016304", Истина, Истина);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020016305", Истина, Истина);
		ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020016301", Истина, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗначенияПоказателей_4ФСС_2021(ПараметрыОтчета, Контейнер)
	
	Организация = ПараметрыОтчета.Организация;
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаКонцаПериодаОтчета;
	Если Не УчетСтраховыхВзносов.ОрганизацияОтчитываетсяПоВзносамСамостоятельно(Организация, ДатаКонцаПериодаОтчета) Тогда
		Возврат
	КонецЕсли;
	ОрганизацииДляСбораДанных = УчетСтраховыхВзносов.ОрганизацииДляКонсолидацииОтчетовПоВзносам(Организация, ДатаКонцаПериодаОтчета);
	
	НачалоТекущегоКвартала = НачалоКвартала(ДатаКонцаПериодаОтчета);
	НачалоПериода = НачалоГода(ДатаКонцаПериодаОтчета);
	ОкончаниеПериода = КонецМесяца(ДатаКонцаПериодаОтчета);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОтложенноеПроведениеДокументов") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОтражениеДокументовВУчетеСтраховыхВзносов");
		Для каждого ТекущаяОрганизация Из ОрганизацииДляСбораДанных Цикл
			Модуль.ОтразитьДокументыВУчетеСтраховыхВзносов(ТекущаяОрганизация);
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",				ОрганизацииДляСбораДанных);
	Запрос.УстановитьПараметр("НачалоОтчетногоПериода",		НачалоПериода);
	Запрос.УстановитьПараметр("КонецОтчетногоПериода",		КонецДня(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НачалоПрошлогоГода",			ДобавитьМесяц(НачалоПериода, -12));
	Запрос.УстановитьПараметр("КонецПрошлогоГода",			НачалоПериода - 1);
	Запрос.УстановитьПараметр("ДалекаяДата", 				ДобавитьМесяц(НачалоПериода, 1200));
	Запрос.УстановитьПараметр("Месяц1",						Месяц(НачалоТекущегоКвартала));
	Запрос.УстановитьПараметр("Месяц2",						Месяц(НачалоТекущегоКвартала) + 1);
	Запрос.УстановитьПараметр("Месяц3",						Месяц(НачалоТекущегоКвартала) + 2);

	// ----------------------------------------------------------------------------------
	// ФОРМИРОВАНИЕ ВРЕМЕННЫХ ТАБЛИЦ
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И НЕ Расчеты.ЭтоДоначислениеПоАктуПроверки
	|				И Расчеты.РасчетыПоПособиям = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетовПоСредствамФСС.ПустаяСсылка)
	|			ТОГДА Расчеты.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФССНесчастныеСлучаиНачислено,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И Расчеты.ЭтоДоначислениеПоАктуПроверки
	|				И Расчеты.РасчетыПоПособиям = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетовПоСредствамФСС.ПустаяСсылка)
	|			ТОГДА Расчеты.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФССНесчастныеСлучаиДоНачислено,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Расчеты.РасчетыПоПособиям = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетовПоСредствамФСС.ПустаяСсылка)
	|			ТОГДА Расчеты.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФССНесчастныеСлучаиУплачено,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетыПоПособиям = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетовПоСредствамФСС.НеПринято)
	|			ТОГДА Расчеты.Сумма * ВЫБОР
	|					КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						ТОГДА 1
	|					ИНАЧЕ -1
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФССНесчастныеСлучаиНеПринятоРасходов,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетыПоПособиям = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетовПоСредствамФСС.ПолученоИзФонда)
	|			ТОГДА Расчеты.Сумма * ВЫБОР
	|					КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						ТОГДА 1
	|					ИНАЧЕ -1
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФССНесчастныеСлучаиВозмещеноРасходов,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетыПоПособиям = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию)
	|			ТОГДА Расчеты.Сумма * ВЫБОР
	|					КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|						ТОГДА 1
	|					ИНАЧЕ -1
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФССНесчастныеСлучаиПроизведеноРасходов,
	|	НАЧАЛОПЕРИОДА(Расчеты.Период, МЕСЯЦ) КАК Период,
	|	Расчеты.ПлатежноеПоручениеНомер КАК ПлатежноеПоручениеНомер,
	|	Расчеты.ПлатежноеПоручениеДата КАК ПлатежноеПоручениеДата
	|ПОМЕСТИТЬ ВТРасчетыСФондом
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам КАК Расчеты
	|ГДЕ
	|	Расчеты.ЭтоСтраховыеВзносы
	|	И Расчеты.Организация В(&Организация)
	|	И Расчеты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФССНесчастныеСлучаи)
	|	И Расчеты.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.ЭтоРасчетыПоНачислениюУплатеВзносовВФСС КАК ЭтоРасчетыПоНачислениюУплатеВзносовВФСС,
	|	Расчеты.СуммаОстаток КАК СуммаОстатокФССНесчастныеСлучаи
	|ПОМЕСТИТЬ ВТОстаткиНаКонец
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Остатки(
	|			&КонецОтчетногоПериода,
	|			Организация В (&Организация)
	|				И ЭтоСтраховыеВзносы
	|				И ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФССНесчастныеСлучаи)) КАК Расчеты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(Расчеты.СуммаОстаток), 0) КАК ФССНесчастныеСлучаиНачальныйОстаток,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Расчеты.ЭтоРасчетыПоНачислениюУплатеВзносовВФСС
	|					ТОГДА Расчеты.СуммаОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ФССНесчастныеСлучаиНачальныйОстатокПоВзносам
	|ПОМЕСТИТЬ ВТОстаткиНаНачало
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Остатки(
	|			&НачалоОтчетногоПериода,
	|			Организация В (&Организация)
	|				И ЭтоСтраховыеВзносы
	|				И ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФССНесчастныеСлучаи)) КАК Расчеты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РасчетыСФондом.ФССНесчастныеСлучаиНачислено) КАК ФССНесчастныеСлучаиНачислено,
	|	СУММА(РасчетыСФондом.ФССНесчастныеСлучаиДоНачислено) КАК ФССНесчастныеСлучаиДоНачислено,
	|	СУММА(РасчетыСФондом.ФССНесчастныеСлучаиУплачено) КАК ФССНесчастныеСлучаиУплачено,
	|	СУММА(РасчетыСФондом.ФССНесчастныеСлучаиНеПринятоРасходов) КАК ФССНесчастныеСлучаиНеПринятоРасходов,
	|	СУММА(РасчетыСФондом.ФССНесчастныеСлучаиВозмещеноРасходов) КАК ФССНесчастныеСлучаиВозмещеноРасходов,
	|	СУММА(РасчетыСФондом.ФССНесчастныеСлучаиПроизведеноРасходов) КАК ФССНесчастныеСлучаиПроизведеноРасходов,
	|	НАЧАЛОПЕРИОДА(РасчетыСФондом.Период, МЕСЯЦ) КАК Период
	|ПОМЕСТИТЬ ВТРасчетыПомесячно
	|ИЗ
	|	ВТРасчетыСФондом КАК РасчетыСФондом
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(РасчетыСФондом.Период, МЕСЯЦ)";
	Запрос.Выполнить();
	
	// ----------------------------------------------------------------------------------
	// ТЕКСТЫ ЗАПРОСОВ
	
	РасчетыСФондомОстаткиТекст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток > 0
	|			ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000020001003,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток < 0
	|					ТОГДА -РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ > ВЫБОР
	|				КОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстатокПоВзносам < 0
	|					ТОГДА -РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстатокПоВзносам
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			ТОГДА ВЫБОР
	|					КОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток < 0
	|						ТОГДА -РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ - ВЫБОР
	|					КОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстатокПоВзносам < 0
	|						ТОГДА -РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстатокПоВзносам
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000020013003,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток < 0
	|					ТОГДА -РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ > ВЫБОР
	|				КОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстатокПоВзносам < 0
	|					ТОГДА -РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстатокПоВзносам
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			ТОГДА ВЫБОР
	|					КОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстатокПоВзносам < 0
	|						ТОГДА -РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстатокПоВзносам
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток < 0
	|					ТОГДА -РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК П000020014003
	|ИЗ
	|	ВТОстаткиНаНачало КАК РасчетыСФондом";
	
	КонечныйОстатокТекст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА СУММА(Расчеты.СуммаОстатокФССНесчастныеСлучаи) < 0
	|					ТОГДА -СУММА(Расчеты.СуммаОстатокФССНесчастныеСлучаи)
	|				ИНАЧЕ 0
	|			КОНЕЦ > СУММА(ВЫБОР
	|					КОГДА Расчеты.СуммаОстатокФССНесчастныеСлучаи < 0
	|							И Расчеты.ЭтоРасчетыПоНачислениюУплатеВзносовВФСС
	|						ТОГДА -Расчеты.СуммаОстатокФССНесчастныеСлучаи
	|					ИНАЧЕ 0
	|				КОНЕЦ)
	|			ТОГДА СУММА(ВЫБОР
	|						КОГДА Расчеты.СуммаОстатокФССНесчастныеСлучаи < 0
	|								И Расчеты.ЭтоРасчетыПоНачислениюУплатеВзносовВФСС
	|							ТОГДА -Расчеты.СуммаОстатокФССНесчастныеСлучаи
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СУММА(Расчеты.СуммаОстатокФССНесчастныеСлучаи) < 0
	|					ТОГДА -СУММА(Расчеты.СуммаОстатокФССНесчастныеСлучаи)
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК П000020011003
	|ИЗ
	|	ВТОстаткиНаКонец КАК Расчеты";
	
	РасчетыСФондомОборотыТекст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачислено < 0
	|					ТОГДА 0
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|					ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачислено
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000020002001,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачислено < 0
	|					ТОГДА 0
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|					ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачислено
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000020002101,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачислено < 0
	|					ТОГДА 0
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|					ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачислено
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000020002201,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачислено < 0
	|					ТОГДА 0
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|					ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачислено
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000020002301,
	|	ЕСТЬNULL(СУММА(РасчетыСФондом.ФССНесчастныеСлучаиДоНачислено), 0) КАК П000020003003,
	|	ЕСТЬNULL(СУММА(РасчетыСФондом.ФССНесчастныеСлучаиНеПринятоРасходов), 0) КАК П000020004003,
	|	ЕСТЬNULL(СУММА(РасчетыСФондом.ФССНесчастныеСлучаиВозмещеноРасходов), 0) КАК П000020006003,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|					ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПроизведеноРасходов
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000020015001,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|					ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПроизведеноРасходов
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000020015101,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|					ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПроизведеноРасходов
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000020015201,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|					ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПроизведеноРасходов
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000020015301,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|					ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиУплачено
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000020016001
	|ИЗ
	|	ВТРасчетыПомесячно КАК РасчетыСФондом";
	
	УплаченоТекст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|			ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиУплачено
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000020016101,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|			ТОГДА РасчетыСФондом.ПлатежноеПоручениеДата
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000020016104,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|			ТОГДА РасчетыСФондом.ПлатежноеПоручениеНомер
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000020016105,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|			ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиУплачено
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000020016201,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|			ТОГДА РасчетыСФондом.ПлатежноеПоручениеДата
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000020016204,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|			ТОГДА РасчетыСФондом.ПлатежноеПоручениеНомер
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000020016205,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|			ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиУплачено
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000020016301,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|			ТОГДА РасчетыСФондом.ПлатежноеПоручениеДата
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000020016304,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|			ТОГДА РасчетыСФондом.ПлатежноеПоручениеНомер
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000020016305,
	|	МЕСЯЦ(РасчетыСФондом.Период) КАК МесяцПериода,
	|	РасчетыСФондом.ФССНесчастныеСлучаиУплачено
	|ИЗ
	|	ВТРасчетыСФондом КАК РасчетыСФондом
	|ГДЕ
	|	РасчетыСФондом.ФССНесчастныеСлучаиУплачено <> 0
	|	И МЕСЯЦ(РасчетыСФондом.Период) МЕЖДУ &Месяц1 И &Месяц3
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетыСФондом.Период";

	ИспользоватьСКЕ = ПолучитьФункциональнуюОпцию("ИспользоватьСамостоятельныеКлассификационныеЕдиницы", Новый Структура("Организация",Организация));
	
	// Очистка контейнера.
	
	ПоказателиОтчета = Новый Структура;
	ОписаниеПоказателей_4ФСС_2017Кв3(ПоказателиОтчета, ПараметрыОтчета, ИспользоватьСКЕ);
	
	ЗаполнятьСальдоНаНачалоГода = ПоказателиОтчета.Свойство("П000020001003");
	ЗаполнятьУплатуВзносов = ПоказателиОтчета.Свойство("П000020016001");
	
	Значение = Неопределено;
	Для каждого КлючИЗначение Из Контейнер.Таблица1 Цикл
		Если ПоказателиОтчета.Свойство(КлючИЗначение.Ключ, Значение) Тогда
			Контейнер.Таблица1[КлючИЗначение.Ключ] = 0
		КонецЕсли;
	КонецЦикла;
	Для каждого КлючИЗначение Из Контейнер.Таблица2 Цикл
		Если ПоказателиОтчета.Свойство(КлючИЗначение.Ключ, Значение) Тогда
			Контейнер.Таблица2[КлючИЗначение.Ключ] = 0
		КонецЕсли;
	КонецЦикла;
	Если ЗаполнятьУплатуВзносов Тогда
		Контейнер.Таблица2_1_ДанныеДопСтрок.Очистить();
		Контейнер.Таблица2_2_ДанныеДопСтрок.Очистить();
		Контейнер.Таблица2_3_ДанныеДопСтрок.Очистить();
	Иначе 
		ПолеУплаты = "П000020016001";
		РасчетыСФондомОборотыТекст = СтрЗаменить(РасчетыСФондомОборотыТекст, ПолеУплаты, "ОтсутствующееПоле");
	КонецЕсли;
	Контейнер.Таблица91_ДанныеДопСтрок.Очистить();
	
	// -------------------------------------------------------------------------------
	// Вывод данных в отчет
	
	ОписаниеТаблиц = Новый Структура("Доходы2017" + ?(ИспользоватьСКЕ, ",СКЕ", ""));
	РасчетПоказателей_4ФСС_2021(НачалоПериода, ОкончаниеПериода, ОрганизацииДляСбораДанных, ОписаниеТаблиц);
	Если УчетСтраховыхВзносов.КонсолидироватьОтчетностьПоВсемОП(Организация, НачалоПериода) Тогда
		ДанныеЧисленности = КадровыйУчет.СреднесписочнаяЧисленностьРаботающих(Организация, ПараметрыОтчета.ДатаНачалаПериодаОтчета, ДатаКонцаПериодаОтчета, Истина);
	Иначе
		ДанныеЧисленности = Новый Структура("СреднесписочнаяЧисленностьРаботников, ЧисленностьИнвалидов", 0, 0);
		Для каждого ОП Из ОрганизацииДляСбораДанных Цикл
			ДанныеОП = КадровыйУчет.СреднесписочнаяЧисленностьРаботающих(ОП, ПараметрыОтчета.ДатаНачалаПериодаОтчета, ДатаКонцаПериодаОтчета);
			ДанныеЧисленности.СреднесписочнаяЧисленностьРаботников = ДанныеЧисленности.СреднесписочнаяЧисленностьРаботников + ДанныеОП.СреднесписочнаяЧисленностьРаботников;
			ДанныеЧисленности.ЧисленностьИнвалидов = ДанныеЧисленности.ЧисленностьИнвалидов + ДанныеОП.ЧисленностьИнвалидов;
		КонецЦикла;
	КонецЕсли;
	Контейнер.Титульный.ЧислРаботников = Формат(ДанныеЧисленности.СреднесписочнаяЧисленностьРаботников,"ЧГ=0");
	Контейнер.Титульный.ЧислИнвалидов = Формат(ДанныеЧисленности.ЧисленностьИнвалидов,"ЧГ=0");
	
	// Таблица 1
	
	ТаблицаДоходов = ОписаниеТаблиц.Доходы2017;
	Если ТаблицаДоходов.Количество() > 0 Тогда
		СтрокаДоходов = ТаблицаДоходов[0];
		ЗаполнитьЗначенияСвойств(Контейнер.Таблица1, СтрокаДоходов);
	КонецЕсли;
	
	// РАСЧЕТЫ ПО СРЕДСТВАМ ОБЯЗАТЕЛЬНОГО СОЦИАЛЬНОГО СТРАХОВАНИЯ 
	
	// Таблица 2
	
	// Заполняем по данным учета расчетов с фондом.
	
	Если ЗаполнятьСальдоНаНачалоГода Тогда
		Запрос.Текст = РасчетыСФондомОстаткиТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Контейнер.Таблица2, Выборка);
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = РасчетыСФондомОборотыТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Контейнер.Таблица2, Выборка);
	КонецЕсли;
	
	Если ЗаполнятьУплатуВзносов Тогда
		Запрос.Текст = УплаченоТекст;
		РезультатПоУплатам = Запрос.Выполнить().Выгрузить();
		Для каждого СтрокаДанных Из РезультатПоУплатам Цикл
			Если СтрокаДанных.ФССНесчастныеСлучаиУплачено <> 0 Тогда
				ИмяКоллекции = "Таблица2_" + (СтрокаДанных.МесяцПериода - Месяц(НачалоТекущегоКвартала) + 1) + "_ДанныеДопСтрок";
				ЗаполнитьЗначенияСвойств(Контейнер[ИмяКоллекции].Добавить(), СтрокаДанных);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗаполнятьСальдоНаНачалоГода Тогда
		Запрос.Текст = КонечныйОстатокТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Контейнер.Таблица2, Выборка);
		КонецЕсли;
	КонецЕсли;
	
	// Таблица СКЕ
	Если ИспользоватьСКЕ Тогда
		НомерПП = 1;
		Для каждого СтрокаДанных Из ОписаниеТаблиц.СКЕ Цикл
			НоваяСтрока = Контейнер.Таблица91_ДанныеДопСтрок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
			НоваяСтрока.П000910000101 = НомерПП;
			НомерПП = НомерПП + 1;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОписаниеПоказателей_4ФСС_2017Кв3(ПоказателиОтчета, ПараметрыОтчета = Неопределено, ИспользоватьСКЕ = Неопределено) Экспорт
	
	ДатаКонцаПериодаОтчета = Неопределено;
	Если ТипЗнч(ПараметрыОтчета) = Тип("Структура")
		И ПараметрыОтчета.Свойство("ДатаКонцаПериодаОтчета", ДатаКонцаПериодаОтчета) Тогда
		Если ДатаКонцаПериодаОтчета >= '20210101' Тогда
			ОписаниеПоказателей_4ФСС_2021(ПоказателиОтчета, ПараметрыОтчета, ИспользоватьСКЕ);
			Возврат
		КонецЕсли;
	КонецЕсли;
	
	УчетСтраховыхВзносовАрхивныеАлгоритмы.ОписаниеПоказателей_4ФСС_2017Кв3(ПоказателиОтчета, ПараметрыОтчета, ИспользоватьСКЕ)
	
КонецПроцедуры

Процедура ЗначенияПоказателей_4ФСС_2017Кв3(ПараметрыОтчета, Контейнер) Экспорт
	
	Если ПараметрыОтчета.ДатаКонцаПериодаОтчета >= '20210101' Тогда
		ЗначенияПоказателей_4ФСС_2021(ПараметрыОтчета, Контейнер);
		Возврат
	КонецЕсли;
	
	УчетСтраховыхВзносовАрхивныеАлгоритмы.ЗначенияПоказателей_4ФСС_2017Кв3(ПараметрыОтчета, Контейнер)
	
КонецПроцедуры


Процедура РасчетПоказателей4ФСС(ИмяРасчета, НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные = Ложь) Экспорт

	ОтчитывающаясяОрганизация = ?(ТипЗнч(Организация) = Тип("Массив"), Организация[0], Организация);
	Если ИмяРасчета = "РасчетПоказателей_4ФСС_2012Кв1" Тогда
		УчетСтраховыхВзносовАрхивныеАлгоритмы.РасчетПоказателей_4ФСС_2012Кв1(НачалоПериода, ОкончаниеПериода, ОтчитывающаясяОрганизация, ОписаниеТаблиц, ПодробныеДанные);
	ИначеЕсли ИмяРасчета = "РасчетПоказателей_4ФСС_2015Кв1" Тогда
		УчетСтраховыхВзносовАрхивныеАлгоритмы.РасчетПоказателей_4ФСС_2015Кв1(НачалоПериода, ОкончаниеПериода, ОтчитывающаясяОрганизация, ОписаниеТаблиц, ПодробныеДанные);
	ИначеЕсли ИмяРасчета = "РасчетПоказателей_4ФСС_2016Кв1" Тогда
		УчетСтраховыхВзносовАрхивныеАлгоритмы.РасчетПоказателей_4ФСС_2016Кв1(НачалоПериода, ОкончаниеПериода, ОтчитывающаясяОрганизация, ОписаниеТаблиц, ПодробныеДанные);
	ИначеЕсли ИмяРасчета = "РасчетПоказателей_4ФСС_2017Кв1" Тогда
		УчетСтраховыхВзносовАрхивныеАлгоритмы.РасчетПоказателей_4ФСС_2017Кв1(НачалоПериода, ОкончаниеПериода, ОтчитывающаясяОрганизация, ОписаниеТаблиц, ПодробныеДанные);
	ИначеЕсли ИмяРасчета = "РасчетПоказателей_4ФСС_2019" Тогда
		Если НачалоПериода >= '20210101' Тогда
			РасчетПоказателей_4ФСС_2021(НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные);
		Иначе 
			УчетСтраховыхВзносовАрхивныеАлгоритмы.РасчетПоказателей_4ФСС_2019(НачалоПериода, ОкончаниеПериода, ОтчитывающаясяОрганизация, ОписаниеТаблиц, ПодробныеДанные);
		КонецЕсли;
	ИначеЕсли ИмяРасчета = "РасчетПоказателей_4ФСС_2022" Тогда
		РасчетПоказателей_4ФСС_2022(НачалоПериода, ОкончаниеПериода, ОтчитывающаясяОрганизация, ОписаниеТаблиц, ПодробныеДанные);
	Иначе
		РасчетПоказателейРегламентированныйОтчетЕФС1ОСС(ИмяРасчета, НачалоПериода, ОкончаниеПериода, Организация, ОписаниеТаблиц, ПодробныеДанные);
	КонецЕсли;

КонецПроцедуры

Процедура РасчетПоказателей_4ФСС_2022(НачалоПериода, ОкончаниеПериода, ОрганизацияДляСбораДанных, ОписаниеТаблиц, ПодробныеДанные = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",				ОрганизацияДляСбораДанных);
	Запрос.УстановитьПараметр("НачалоОтчетногоПериода",		НачалоПериода);
	Запрос.УстановитьПараметр("КонецОтчетногоПериода",		ОкончаниеПериода);
	Запрос.УстановитьПараметр("ПослеОтчетногоПериода",		ДобавитьМесяц(ОкончаниеПериода, 6));
	НачалоТекущегоКвартала = НачалоКвартала(ОкончаниеПериода);
	Запрос.УстановитьПараметр("Месяц1",						Месяц(НачалоТекущегоКвартала));
	Запрос.УстановитьПараметр("Месяц2",						Месяц(НачалоТекущегоКвартала) + 1);
	Запрос.УстановитьПараметр("Месяц3",						Месяц(НачалоТекущегоКвартала) + 2);
	
	НеОбъект = Новый Массив;
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ДоговорыГПХ);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ВыплатыПоДоговорамОпекиПолучающимСтраховыеПенсии);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеОткрытия);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеАудиовизуальныеПроизведения);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеДругиеМузыкальныеПроизведения);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеЛитературныеПроизведения);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеМузыкальноСценическиеПроизведение);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеНаучныеТруды);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеСкульптуры);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеГрафическиеПроизведения);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеИсполнениеПроизведений);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих);
	Запрос.УстановитьПараметр("НеЯвляетсяОбъектом", НеОбъект);
	
	// ----------------------------------------------------------------------------------
	// ФОРМИРОВАНИЕ ВРЕМЕННЫХ ТАБЛИЦ
	
	Если ОписаниеТаблиц.Свойство("Доходы2022") Или ОписаниеТаблиц.Свойство("Взносы2022") Или ОписаниеТаблиц.Свойство("СКЕ2022") Или ОписаниеТаблиц.Свойство("ОсновнойОКВЭД") Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СтраховыеВзносыСведенияОДоходах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	СтраховыеВзносыСведенияОДоходах.ВидДохода КАК ВидДохода
		|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СтраховыеВзносыСведенияОДоходах
		|ГДЕ
		|	СтраховыеВзносыСведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СтраховыеВзносыСведенияОДоходах.Организация В(&Организация)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СтраховыеВзносыИсчисленные.ФизическоеЛицо,
		|	СтраховыеВзносыИсчисленные.ГоловнаяОрганизация,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	РегистрНакопления.ИсчисленныеСтраховыеВзносы КАК СтраховыеВзносыИсчисленные
		|ГДЕ
		|	СтраховыеВзносыИсчисленные.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СтраховыеВзносыИсчисленные.Организация В(&Организация)
		|	И СтраховыеВзносыИсчисленные.ФССНесчастныеСлучаи <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизическоеЛицо";
		Запрос.Выполнить();
		
		// Формируем список месяцев, в разрезе которых собираем данные.
		ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, КонецМесяца(НачалоГода(НачалоПериода)), КонецМесяца(ОкончаниеПериода),,, "ВТПериодыСведенийОДоходах", Истина);
		
		// Получаем временные таблицы, используя общие алгоритмы.
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Периоды.Период КАК Период,
		|	СписокСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТПериодыФизЛицОрганизаций
		|ИЗ
		|	ВТФизЛицаОрганизаций КАК СписокСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыСведенийОДоходах КАК Периоды
		|		ПО (ИСТИНА)";
		Запрос.Выполнить();
		
		ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
		ПараметрыПостроения.ВсеЗаписи = Истина;
		
		ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
			"ПрименяемыеТарифыСтраховыхВзносов",
			Запрос.МенеджерВременныхТаблиц,
			Ложь,
			ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТПериодыФизЛицОрганизаций",
			"ГоловнаяОрганизация"),
			ПараметрыПостроения);
		
		ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
		ПараметрыПостроения.ВсеЗаписи = Истина;
		
		ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
			"СведенияОбИнвалидностиФизическихЛиц",
			Запрос.МенеджерВременныхТаблиц,
			Ложь,
			ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТПериодыФизЛицОрганизаций",
			"ФизическоеЛицо"),
			ПараметрыПостроения);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) КАК ПериодРегистрации,
		|	СписокФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЕСТЬNULL(ДанныеОбИнвалидности.Инвалидность, ЛОЖЬ) КАК Инвалид,
		|	ВЫБОР
		|		КОГДА ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.ВидТарифа = ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОрганизацияИнвалидов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.ОрганизацияИнвалидов
		|	КОНЕЦ КАК ИспользоватьЛьготуИнвалидамПоФСС_НС,
		|	ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)) КАК ВидДохода,
		|	ЕСТЬNULL(ДоходыПоФизлицам.Начисление, ЗНАЧЕНИЕ(ПланВидовРасчета.Начисления.ПустаяСсылка)) КАК Начисление,
		|	ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода.ВходитВБазуФСС_НС, ЛОЖЬ) КАК ВходитВБазуФСС_НС,
		|	ЕСТЬNULL(ДоходыПоФизлицам.Сумма, 0) КАК Сумма,
		|	ЕСТЬNULL(ДоходыПоФизлицам.Скидка, 0) КАК Скидка,
		|	ВЫБОР
		|		КОГДА ДоходыПоФизлицам.ФизическоеЛицо ЕСТЬ NULL
		|			ТОГДА 0
		|		КОГДА ДоходыПоФизлицам.ВидДохода.ВходитВБазуФСС_НС
		|			ТОГДА ДоходыПоФизлицам.Сумма - ВЫБОР
		|					КОГДА ДоходыПоФизлицам.ВидДохода.АвторскиеВознаграждения
		|						ТОГДА 0
		|					ИНАЧЕ ДоходыПоФизлицам.Скидка
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК БазаФСС_НС,
		|	ЕСТЬNULL(ДоходыПоФизлицам.Регистратор, НЕОПРЕДЕЛЕНО) КАК Регистратор,
		|	ДоходыПоФизлицам.ДатаПолученияДохода КАК ДатаПолученияДохода
		|ПОМЕСТИТЬ ВТДанныеУчета
		|ИЗ
		|	ВТПериодыФизЛицОрганизаций КАК СписокФизЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК ДоходыПоФизлицам
		|		ПО СписокФизЛиц.ГоловнаяОрганизация = ДоходыПоФизлицам.ГоловнаяОрганизация
		|			И СписокФизЛиц.ФизическоеЛицо = ДоходыПоФизлицам.ФизическоеЛицо
		|			И (НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ДоходыПоФизлицам.Период, МЕСЯЦ))
		|			И (ДоходыПоФизлицам.Организация В (&Организация))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПрименяемыеТарифыСтраховыхВзносовСрезПоследних КАК ПрименяемыеТарифыСтраховыхВзносовСрезПоследних
		|		ПО СписокФизЛиц.ГоловнаяОрганизация = ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.ГоловнаяОрганизация
		|			И (НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.Период, МЕСЯЦ))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбИнвалидностиФизическихЛицСрезПоследних КАК ДанныеОбИнвалидности
		|		ПО (НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ДанныеОбИнвалидности.Период, МЕСЯЦ))
		|			И СписокФизЛиц.ФизическоеЛицо = ДанныеОбИнвалидности.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ПериодРегистрации КАК ПериодРегистрации,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Инвалид КАК Инвалид,
		|	СведенияОДоходах.ИспользоватьЛьготуИнвалидамПоФСС_НС КАК ИспользоватьЛьготуИнвалидамПоФСС_НС,
		|	СведенияОДоходах.ВидДохода КАК ВидДохода,
		|	СведенияОДоходах.Начисление КАК Начисление,
		|	СведенияОДоходах.ВходитВБазуФСС_НС КАК ВходитВБазуФСС_НС,
		|	СУММА(СведенияОДоходах.Сумма) КАК Сумма,
		|	СУММА(СведенияОДоходах.Скидка) КАК Скидка,
		|	СУММА(СведенияОДоходах.БазаФСС_НС) КАК БазаФСС_НС,
		|	СведенияОДоходах.Регистратор КАК Регистратор,
		|	НАЧАЛОПЕРИОДА(СведенияОДоходах.ДатаПолученияДохода, ГОД) КАК ГодРасчетногоПериода
		|ПОМЕСТИТЬ ВТСведенияОДоходах
		|ИЗ
		|	ВТДанныеУчета КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ПериодРегистрации,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Инвалид,
		|	СведенияОДоходах.ИспользоватьЛьготуИнвалидамПоФСС_НС,
		|	СведенияОДоходах.ВидДохода,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.ВходитВБазуФСС_НС,
		|	СведенияОДоходах.Регистратор,
		|	СведенияОДоходах.ДатаПолученияДохода
		|
		|ИМЕЮЩИЕ
		|	(СУММА(СведенияОДоходах.Сумма) <> 0
		|		ИЛИ СУММА(СведенияОДоходах.Скидка) <> 0
		|		ИЛИ СУММА(СведенияОДоходах.БазаФСС_НС) <> 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ПериодРегистрации КАК ПериодРегистрации
		|ПОМЕСТИТЬ ВТМесяцыБезОблагаемойБазы
		|ИЗ
		|	ВТСведенияОДоходах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.ПериодРегистрации МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ПериодРегистрации
		|
		|ИМЕЮЩИЕ
		|	СУММА(СведенияОДоходах.БазаФСС_НС) < 0";
		Результат = Запрос.Выполнить();
		
		Если Результат.Выгрузить()[0].Количество = 0 Тогда
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
			|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодРегистрации
			|ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы";
		Иначе
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходах.ПериодРегистрации КАК ПериодРегистрации
			|ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы
			|ИЗ
			|	ВТСведенияОДоходах КАК СведенияОДоходах
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТМесяцыБезОблагаемойБазы КАК МесяцыБезОблагаемойБазы
			|		ПО СведенияОДоходах.ПериодРегистрации = МесяцыБезОблагаемойБазы.ПериодРегистрации
			|ГДЕ
			|	СведенияОДоходах.ПериодРегистрации МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.ПериодРегистрации
			|
			|ИМЕЮЩИЕ
			|	СУММА(СведенияОДоходах.БазаФСС_НС) < 0
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизическоеЛицо";
		КонецЕсли;
		Запрос.Выполнить();
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходах.ПериодРегистрации КАК Период,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Начисление КАК Начисление,
		|	СведенияОДоходах.Регистратор КАК Регистратор,
		|	СведенияОДоходах.ГодРасчетногоПериода КАК ГодРасчетногоПериода,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ВидДохода В (&НеЯвляетсяОбъектом)
		|				ТОГДА 0
		|			КОГДА НЕ СведенияОДоходах.ВходитВБазуФСС_НС
		|				ТОГДА СведенияОДоходах.Сумма
		|			ИНАЧЕ СведенияОДоходах.Скидка
		|		КОНЕЦ) КАК НеОблагаетсяНС_ПЗ,
		|	СУММА(СведенияОДоходах.БазаФСС_НС) КАК БазаНС_ПЗ,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.Инвалид
		|				ТОГДА СведенияОДоходах.БазаФСС_НС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК БазаИнвалидаНС_ПЗ,
		|	МАКСИМУМ(СведенияОДоходах.ИспользоватьЛьготуИнвалидамПоФСС_НС) КАК ИспользоватьЛьготуИнвалидамПоФСС_НС
		|ПОМЕСТИТЬ ВТОблагаемыеБазыПоМесяцам
		|ИЗ
		|	ВТСведенияОДоходах КАК СведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезОблагаемойБазы КАК ФизлицаБезОблагаемойБазы
		|		ПО СведенияОДоходах.ФизическоеЛицо = ФизлицаБезОблагаемойБазы.ФизическоеЛицо
		|			И СведенияОДоходах.ПериодРегистрации = ФизлицаБезОблагаемойБазы.ПериодРегистрации
		|ГДЕ
		|	СведенияОДоходах.ПериодРегистрации МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И ФизлицаБезОблагаемойБазы.ФизическоеЛицо ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ГодРасчетногоПериода,
		|	СведенияОДоходах.Регистратор,
		|	СведенияОДоходах.ПериодРегистрации,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление";
		Запрос.Выполнить();
		
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Взносы2022") Или ОписаниеТаблиц.Свойство("СКЕ2022") Или ОписаниеТаблиц.Свойство("ОсновнойОКВЭД") Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) КАК Период,
		|	СписокФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЕСТЬNULL(ИсчисленныеСтраховыеВзносы.Регистратор, НЕОПРЕДЕЛЕНО) КАК Регистратор,
		|	ЕСТЬNULL(СУММА(ИсчисленныеСтраховыеВзносы.ФССНесчастныеСлучаи), 0) КАК ФССНесчастныеСлучаи
		|ПОМЕСТИТЬ ВТИсчисленоПоМесяцам
		|ИЗ
		|	ВТПериодыФизЛицОрганизаций КАК СписокФизЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИсчисленныеСтраховыеВзносы КАК ИсчисленныеСтраховыеВзносы
		|		ПО СписокФизЛиц.ГоловнаяОрганизация = ИсчисленныеСтраховыеВзносы.ГоловнаяОрганизация
		|			И СписокФизЛиц.ФизическоеЛицо = ИсчисленныеСтраховыеВзносы.ФизическоеЛицо
		|			И (НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ИсчисленныеСтраховыеВзносы.ДатаПолученияДохода, МЕСЯЦ))
		|			И (ИсчисленныеСтраховыеВзносы.Организация В (&Организация))
		|			И (ИсчисленныеСтраховыеВзносы.Период МЕЖДУ &НачалоОтчетногоПериода И &ПослеОтчетногоПериода)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезОблагаемойБазы КАК ФизлицаБезОблагаемойБазы
		|		ПО (ИсчисленныеСтраховыеВзносы.ФизическоеЛицо = ФизлицаБезОблагаемойБазы.ФизическоеЛицо)
		|ГДЕ
		|	ФизлицаБезОблагаемойБазы.ФизическоеЛицо ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокФизЛиц.ФизическоеЛицо,
		|	ИсчисленныеСтраховыеВзносы.Регистратор,
		|	НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ)";
		Запрос.Выполнить();
		
	КонецЕсли;
	
	// Титульный лист
	Если ОписаниеТаблиц.Свойство("ЧисленностьЗЛ") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СписокСотрудников.ФизическоеЛицо) КАК ЧисленностьЗЛ
		|ИЗ
		|	ВТФизЛицаОрганизаций КАК СписокСотрудников
		|ГДЕ
		|	НЕ СписокСотрудников.ВидДохода В (&НеЯвляетсяОбъектом)";
		Результат = Запрос.Выполнить();
		ОписаниеТаблиц.ЧисленностьЗЛ = 0;
		Если Не Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ОписаниеТаблиц.ЧисленностьЗЛ = Выборка.ЧисленностьЗЛ
		КонецЕсли;
	КонецЕсли;
	
	// Таблица 1 
	Если ОписаниеТаблиц.Свойство("Доходы2022") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(МАКСИМУМ(СведенияОДоходах.ИспользоватьЛьготуИнвалидамПоФСС_НС), ЛОЖЬ)
		|			ТОГДА ""Х""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК П000010000002,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.БазаНС_ПЗ + СведенияОДоходах.НеОблагаетсяНС_ПЗ), 0) КАК П000010000103,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.БазаИнвалидаНС_ПЗ), 0) КАК П000010000403,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.НеОблагаетсяНС_ПЗ), 0) КАК П000010000203,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.БазаНС_ПЗ + СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000104,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.БазаНС_ПЗ + СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000105,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.БазаНС_ПЗ + СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000106,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000404,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000405,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000406,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000204,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000205,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000206,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Начисление КАК Начисление,
		|	СведенияОДоходах.Регистратор КАК Регистратор
		|ИЗ
		|	ВТОблагаемыеБазыПоМесяцам КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор";
		
		МассивПолей = Новый Массив;
		Если Не ПодробныеДанные Тогда
			МассивПолей.Добавить("ФизическоеЛицо");
			МассивПолей.Добавить("Начисление");
			МассивПолей.Добавить("Регистратор");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
		ОписаниеТаблиц.Доходы2022 = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	Если ОписаниеТаблиц.Свойство("Взносы2022") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ИсчисленоВзносов.ФССНесчастныеСлучаи), 0) КАК П000010000903,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ИсчисленоВзносов.Период) = &Месяц1
		|					ТОГДА ИсчисленоВзносов.ФССНесчастныеСлучаи
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000904,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ИсчисленоВзносов.Период) = &Месяц2
		|					ТОГДА ИсчисленоВзносов.ФССНесчастныеСлучаи
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000905,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(ИсчисленоВзносов.Период) = &Месяц3
		|					ТОГДА ИсчисленоВзносов.ФССНесчастныеСлучаи
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000906,
		|	ИсчисленоВзносов.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ИсчисленоВзносов.Регистратор КАК Регистратор
		|ИЗ
		|	ВТИсчисленоПоМесяцам КАК ИсчисленоВзносов
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсчисленоВзносов.ФизическоеЛицо,
		|	ИсчисленоВзносов.Регистратор";
		
		МассивПолей = Новый Массив;
		Если Не ПодробныеДанные Тогда
			МассивПолей.Добавить("ФизическоеЛицо");
			МассивПолей.Добавить("Регистратор");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "ИсчисленоВзносов");
		ОписаниеТаблиц.Взносы2022 = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	
	// Таблица 1.1 - СКЕ
	Если ОписаниеТаблиц.Свойство("СКЕ2022") Или ОписаниеТаблиц.Свойство("ОсновнойОКВЭД") Тогда
		
		Если ТипЗнч(ОрганизацияДляСбораДанных) = Тип("Массив") Тогда
			Организация = ОрганизацияДляСбораДанных[0];
		Иначе
			Организация = ОрганизацияДляСбораДанных
		КонецЕсли;
		
		ИспользоватьСКЕ = ПолучитьФункциональнуюОпцию("ИспользоватьСамостоятельныеКлассификационныеЕдиницы", Новый Структура("Организация", Организация));
		
		Если ИспользоватьСКЕ Тогда
			
			УдалитьВТ = Новый Массив;
			УдалитьВТ.Добавить("ВТПериодыФизЛицОрганизаций");
			УдалитьВТ.Добавить("ВТПрименяемыеТарифыСтраховыхВзносовСрезПоследних");
			УдалитьВТ.Добавить("ВТСведенияОбИнвалидностиФизическихЛицСрезПоследних");
			УдалитьВТ.Добавить("ВТДанныеУчета");
			УдалитьВТ.Добавить("ВТСведенияОДоходах");
			ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
			
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	1 КАК Поле1
			|ИЗ
			|	ВТОблагаемыеБазыПоМесяцам КАК СведенияОДоходах
			|ГДЕ
			|	СведенияОДоходах.ГодРасчетногоПериода < &НачалоОтчетногоПериода";
			Результат = Запрос.Выполнить();
			Если Не Результат.Пустой() Тогда
				УчетСтраховыхВзносов.СформироватьВТРасширенныеСведенияОДоходахИВзносах(ДобавитьМесяц(НачалоПериода, -12), НачалоГода(НачалоПериода) - 1, ОрганизацияДляСбораДанных, Запрос.МенеджерВременныхТаблиц, Истина, Истина, Истина, , Истина, , , , ОкончаниеПериода);
				Запрос.Текст =
				"ВЫБРАТЬ
				|	ЕСТЬNULL(СведенияОДоходах.СКЕ.Наименование, """") КАК НаименованиеСКЕ,
				|	ЕСТЬNULL(СведенияОДоходах.СКЕ.КодОКВЭД2, """") КАК КодОКВЭД2,
				|	ЕСТЬNULL(СведенияОДоходах.СКЕ.НаименованиеОКВЭД2, """") КАК НаименованиеОКВЭД2,
				|	СведенияОДоходах.СтавкаНаНСиПЗ КАК СтавкаНаНСиПЗ,
				|	СведенияОДоходах.БазаФСС_НС КАК БазаНС_ПЗ,
				|	ВЫБОР
				|		КОГДА СведенияОДоходах.Инвалид
				|			ТОГДА СведенияОДоходах.БазаФСС_НС
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК БазаИнвалидаНС_ПЗ,
				|	СведенияОДоходах.ПериодРегистрации КАК Период,
				|	СведенияОДоходах.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
				|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
				|	СведенияОДоходах.Начисление КАК Начисление,
				|	СведенияОДоходах.Регистратор КАК Регистратор
				|ПОМЕСТИТЬ ДанныеПоСКЕПрошлогоГода
				|ИЗ
				|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
				|ГДЕ
				|	СведенияОДоходах.Организация В(&Организация)
				|	И СведенияОДоходах.СКЕ ССЫЛКА Справочник.СамостоятельныеКлассификационныеЕдиницы
				|	И СведенияОДоходах.ПериодРегистрации МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода";
				Запрос.Выполнить();
				УдалитьВТ = Новый Массив;
				УдалитьВТ.Добавить("ВТРасширенныеСведенияОДоходахИВзносах");
				УдалитьВТ.Добавить("ВТРазмерыТарифныхСтавок");
				УдалитьВТ.Добавить("ВТДанныеОбИнвалидности");
				УдалитьВТ.Добавить("ВТИспользуемыеТарифы");
				УдалитьВТ.Добавить("ВТОписаниеТарифов");
				ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
			Иначе 	
				Запрос.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 0
				|	"""" КАК НаименованиеСКЕ,
				|	"""" КАК КодОКВЭД2,
				|	"""" КАК НаименованиеОКВЭД2,
				|	0 КАК СтавкаНаНСиПЗ,
				|	0 КАК БазаНС_ПЗ,
				|	0 КАК БазаИнвалидаНС_ПЗ,
				|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
				|	0 КАК ФССНесчастныеСлучаи,
				|	НЕОПРЕДЕЛЕНО КАК ФизическоеЛицо,
				|	НЕОПРЕДЕЛЕНО КАК Начисление,
				|	НЕОПРЕДЕЛЕНО КАК Регистратор
				|ПОМЕСТИТЬ ДанныеПоСКЕПрошлогоГода";
				Запрос.Выполнить();
			КонецЕсли;
			
			// Получаем временные таблицы, используя общие алгоритмы.
			УчетСтраховыхВзносов.СформироватьВТРасширенныеСведенияОДоходахИВзносах(НачалоПериода, ОкончаниеПериода, ОрганизацияДляСбораДанных, Запрос.МенеджерВременныхТаблиц, Истина, Истина, Истина, , Истина, , , , ОкончаниеПериода);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(СведенияОДоходах.СКЕ.Наименование, """") КАК НаименованиеСКЕ,
			|	ЕСТЬNULL(СведенияОДоходах.СКЕ.КодОКВЭД2, """") КАК КодОКВЭД2,
			|	ЕСТЬNULL(СведенияОДоходах.СКЕ.НаименованиеОКВЭД2, """") КАК НаименованиеОКВЭД2,
			|	СведенияОДоходах.СтавкаНаНСиПЗ КАК СтавкаНаНСиПЗ,
			|	СведенияОДоходах.БазаФСС_НС КАК БазаНС_ПЗ,
			|	ВЫБОР
			|		КОГДА СведенияОДоходах.Инвалид
			|			ТОГДА СведенияОДоходах.БазаФСС_НС
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК БазаИнвалидаНС_ПЗ,
			|	СведенияОДоходах.ПериодРегистрации КАК Период,
			|	СведенияОДоходах.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходах.Начисление КАК Начисление,
			|	СведенияОДоходах.Регистратор КАК Регистратор
			|ПОМЕСТИТЬ ДанныеПоСКЕ
			|ИЗ
			|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезОблагаемойБазы КАК ФизлицаБезОблагаемойБазы
			|		ПО СведенияОДоходах.ФизическоеЛицо = ФизлицаБезОблагаемойБазы.ФизическоеЛицо
			|			И СведенияОДоходах.ПериодРегистрации = ФизлицаБезОблагаемойБазы.ПериодРегистрации
			|ГДЕ
			|	СведенияОДоходах.Организация В(&Организация)
			|	И СведенияОДоходах.СКЕ ССЫЛКА Справочник.СамостоятельныеКлассификационныеЕдиницы
			|	И СведенияОДоходах.ПериодРегистрации МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
			|	И ФизлицаБезОблагаемойБазы.ФизическоеЛицо ЕСТЬ NULL
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СведенияОДоходах.НаименованиеСКЕ,
			|	СведенияОДоходах.КодОКВЭД2,
			|	СведенияОДоходах.НаименованиеОКВЭД2,
			|	СведенияОДоходах.СтавкаНаНСиПЗ,
			|	СведенияОДоходах.БазаНС_ПЗ,
			|	СведенияОДоходах.БазаИнвалидаНС_ПЗ,
			|	СведенияОДоходах.Период,
			|	СведенияОДоходах.ФССНесчастныеСлучаи,
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор
			|ИЗ
			|	ДанныеПоСКЕПрошлогоГода КАК СведенияОДоходах
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезОблагаемойБазы КАК ФизлицаБезОблагаемойБазы
			|		ПО СведенияОДоходах.ФизическоеЛицо = ФизлицаБезОблагаемойБазы.ФизическоеЛицо
			|			И СведенияОДоходах.Период = ФизлицаБезОблагаемойБазы.ПериодРегистрации
			|ГДЕ
			|	ФизлицаБезОблагаемойБазы.ФизическоеЛицо ЕСТЬ NULL";
			Запрос.Выполнить();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("СКЕ2022") Тогда
		Если ИспользоватьСКЕ Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходах.НаименованиеОКВЭД2 КАК НаименованиеОКВЭД2,
			|	СведенияОДоходах.НаименованиеОКВЭД2 КАК П000110000102,
			|	СведенияОДоходах.КодОКВЭД2 КАК ОКВЭД,
			|	СведенияОДоходах.КодОКВЭД2 КАК П000110000103,
			|	СведенияОДоходах.НаименованиеСКЕ КАК НаименованиеСКЕ,
			|	СведенияОДоходах.НаименованиеСКЕ КАК П000110000104,
			|	СведенияОДоходах.СтавкаНаНСиПЗ КАК Тариф,
			|	СведенияОДоходах.СтавкаНаНСиПЗ КАК П000110000105,
			|	СУММА(СведенияОДоходах.БазаНС_ПЗ) КАК П000110000109,
			|	СУММА(СведенияОДоходах.БазаИнвалидаНС_ПЗ) КАК П000110000110,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П000110000111,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П000110000112,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П000110000113,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П000110000114,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П000110000115,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П000110000116,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П000110000117,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П000110000118,
			|	СУММА(СведенияОДоходах.ФССНесчастныеСлучаи) КАК П000110000119,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П000110000120,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) МЕЖДУ &Месяц1 И &Месяц3
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П000110000121,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П000110000122,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П000110000123,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П000110000124,
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходах.Начисление КАК Начисление,
			|	СведенияОДоходах.Регистратор КАК Регистратор
			|ИЗ
			|	ДанныеПоСКЕ КАК СведенияОДоходах
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.СтавкаНаНСиПЗ,
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.НаименованиеОКВЭД2,
			|	СведенияОДоходах.КодОКВЭД2,
			|	СведенияОДоходах.НаименованиеСКЕ,
			|	СведенияОДоходах.НаименованиеОКВЭД2,
			|	СведенияОДоходах.КодОКВЭД2,
			|	СведенияОДоходах.НаименованиеСКЕ,
			|	СведенияОДоходах.СтавкаНаНСиПЗ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СведенияОДоходах.СтавкаНаНСиПЗ";
			
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("Начисление");
				МассивПолей.Добавить("Регистратор");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
			
		Иначе
			
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	"""" КАК НаименованиеОКВЭД2,
			|	"""" КАК П000110000102,
			|	"""" КАК ОКВЭД,
			|	"""" КАК П000110000103,
			|	"""" КАК НаименованиеСКЕ,
			|	"""" КАК П000110000104,
			|	0 КАК Тариф,
			|	0 КАК П000110000105,
			|	0 КАК П000110000109,
			|	0 КАК П000110000110,
			|	0 КАК П000110000111,
			|	0 КАК П000110000112,
			|	0 КАК П000110000113,
			|	0 КАК П000110000114,
			|	0 КАК П000110000115,
			|	0 КАК П000110000116,
			|	0 КАК П000110000117,
			|	0 КАК П000110000118,
			|	0 КАК П000110000119,
			|	0 КАК П000110000120,
			|	0 КАК П000110000121,
			|	0 КАК П000110000122,
			|	0 КАК П000110000123,
			|	0 КАК П000110000124,
			|	НЕОПРЕДЕЛЕНО КАК ФизическоеЛицо,
			|	НЕОПРЕДЕЛЕНО КАК Начисление,
			|	НЕОПРЕДЕЛЕНО КАК Регистратор";
			
		КонецЕсли;
		ОписаниеТаблиц.СКЕ2022 = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("ОсновнойОКВЭД") Тогда
		
		Если ИспользоватьСКЕ Тогда
			ОсновныеДанные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "КодОКВЭД2,НаименованиеОКВЭД2,НаименованиеПолное");
			Запрос.УстановитьПараметр("НаименованиеОКВЭД2", ОсновныеДанные.НаименованиеОКВЭД2);
			Запрос.УстановитьПараметр("КодОКВЭД2", ОсновныеДанные.КодОКВЭД2);
			Запрос.УстановитьПараметр("НаименованиеСКЕ", Лев(ОсновныеДанные.НаименованиеПолное, 255));
			Запрос.УстановитьПараметр("СтавкаНаНСиПЗ", РегистрыСведений.СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев.ПолучитьПоследнее(ОкончаниеПериода,Новый Структура("Организация", Организация)).Ставка);
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	-СведенияОДоходах.БазаНС_ПЗ КАК БазаНС_ПЗ,
			|	-СведенияОДоходах.БазаИнвалидаНС_ПЗ КАК БазаИнвалидаНС_ПЗ,
			|	СведенияОДоходах.Период КАК Период,
			|	-СведенияОДоходах.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходах.Начисление КАК Начисление,
			|	СведенияОДоходах.Регистратор КАК Регистратор
			|ПОМЕСТИТЬ ДанныеПоОсновнойОКВЭД
			|ИЗ
			|	ДанныеПоСКЕ КАК СведенияОДоходах
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СведенияОДоходах.БазаНС_ПЗ,
			|	СведенияОДоходах.БазаИнвалидаНС_ПЗ,
			|	СведенияОДоходах.Период,
			|	0,
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор
			|ИЗ
			|	ВТОблагаемыеБазыПоМесяцам КАК СведенияОДоходах
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	0,
			|	0,
			|	СведенияОДоходах.Период,
			|	СведенияОДоходах.ФССНесчастныеСлучаи,
			|	СведенияОДоходах.ФизическоеЛицо,
			|	НЕОПРЕДЕЛЕНО,
			|	СведенияОДоходах.Регистратор
			|ИЗ
			|	ВТИсчисленоПоМесяцам КАК СведенияОДоходах
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	&НаименованиеОКВЭД2 КАК П00011ОСВЭД02,
			|	&КодОКВЭД2 КАК П00011ОСВЭД03,
			|	&КодОКВЭД2 КАК ОКВЭД,
			|	&НаименованиеСКЕ КАК П00011ОСВЭД04,
			|	&СтавкаНаНСиПЗ КАК П00011ОСВЭД05,
			|	СУММА(СведенияОДоходах.БазаНС_ПЗ) КАК П00011ОСВЭД09,
			|	СУММА(СведенияОДоходах.БазаИнвалидаНС_ПЗ) КАК П00011ОСВЭД10,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00011ОСВЭД11,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00011ОСВЭД12,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00011ОСВЭД13,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00011ОСВЭД14,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00011ОСВЭД15,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00011ОСВЭД16,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.БазаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00011ОСВЭД17,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00011ОСВЭД18,
			|	СУММА(СведенияОДоходах.ФССНесчастныеСлучаи) КАК П00011ОСВЭД19,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) < &Месяц1
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00011ОСВЭД20,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) МЕЖДУ &Месяц1 И &Месяц3
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00011ОСВЭД21,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00011ОСВЭД22,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00011ОСВЭД23,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
			|				ТОГДА СведенияОДоходах.ФССНесчастныеСлучаи
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК П00011ОСВЭД24,
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходах.Начисление КАК Начисление,
			|	СведенияОДоходах.Регистратор КАК Регистратор
			|ИЗ
			|	ДанныеПоОсновнойОКВЭД КАК СведенияОДоходах
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор";
			
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("Начисление");
				МассивПолей.Добавить("Регистратор");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
			
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	"""" КАК П00011ОСВЭД02,
			|	"""" КАК П00011ОСВЭД03,
			|	"""" КАК ОКВЭД,
			|	"""" КАК П00011ОСВЭД04,
			|	0 КАК П00011ОСВЭД05,
			|	0 КАК П00011ОСВЭД09,
			|	0 КАК П00011ОСВЭД10,
			|	0 КАК П00011ОСВЭД11,
			|	0 КАК П00011ОСВЭД12,
			|	0 КАК П00011ОСВЭД13,
			|	0 КАК П00011ОСВЭД14,
			|	0 КАК П00011ОСВЭД15,
			|	0 КАК П00011ОСВЭД16,
			|	0 КАК П00011ОСВЭД17,
			|	0 КАК П00011ОСВЭД18,
			|	0 КАК П00011ОСВЭД19,
			|	0 КАК П00011ОСВЭД20,
			|	0 КАК П00011ОСВЭД21,
			|	0 КАК П00011ОСВЭД22,
			|	0 КАК П00011ОСВЭД23,
			|	0 КАК П00011ОСВЭД24,
			|	НЕОПРЕДЕЛЕНО КАК ФизическоеЛицо,
			|	НЕОПРЕДЕЛЕНО КАК Начисление,
			|	НЕОПРЕДЕЛЕНО КАК Регистратор";
		КонецЕсли;
		ОписаниеТаблиц.ОсновнойОКВЭД = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("Платежи2022") Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				И Расчеты.РасчетыПоПособиям = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетовПоСредствамФСС.ПустаяСсылка)
		|			ТОГДА Расчеты.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ФССНесчастныеСлучаиУплачено,
		|	НАЧАЛОПЕРИОДА(Расчеты.Период, МЕСЯЦ) КАК Период,
		|	Расчеты.ПлатежноеПоручениеНомер КАК ПлатежноеПоручениеНомер,
		|	Расчеты.ПлатежноеПоручениеДата КАК ПлатежноеПоручениеДата
		|ПОМЕСТИТЬ ВТРасчетыСФондом
		|ИЗ
		|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам КАК Расчеты
		|ГДЕ
		|	Расчеты.ЭтоСтраховыеВзносы
		|	И Расчеты.Организация В(&Организация)
		|	И Расчеты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФССНесчастныеСлучаи)
		|	И Расчеты.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСФондом.ПлатежноеПоручениеНомер КАК П000920000102,
		|	РасчетыСФондом.ПлатежноеПоручениеДата КАК П000920000103,
		|	РасчетыСФондом.ФССНесчастныеСлучаиУплачено КАК П000920000104
		|ИЗ
		|	ВТРасчетыСФондом КАК РасчетыСФондом
		|ГДЕ
		|	РасчетыСФондом.ФССНесчастныеСлучаиУплачено <> 0
		|	И МЕСЯЦ(РасчетыСФондом.Период) МЕЖДУ &Месяц1 И &Месяц3
		|
		|УПОРЯДОЧИТЬ ПО
		|	П000920000103";
		ОписаниеТаблиц.Платежи2022 = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетПоказателей_4ФСС_2021(НачалоПериода, ОкончаниеПериода, ОрганизацияДляСбораДанных, ОписаниеТаблиц, ПодробныеДанные = Ложь)
	
	Если ТипЗнч(ОрганизацияДляСбораДанных) = Тип("Массив") Тогда
		Организация = ОрганизацияДляСбораДанных[0];
	Иначе
		Организация = ОрганизацияДляСбораДанных
	КонецЕсли;
	ЭтоЮридическоеЛицо = ЗарплатаКадры.ЭтоЮридическоеЛицо(Организация);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",				ОрганизацияДляСбораДанных);
	Запрос.УстановитьПараметр("ОтчитывающаясяОрганизация",	Организация);
	Запрос.УстановитьПараметр("НачалоОтчетногоПериода",		НачалоПериода);
	Запрос.УстановитьПараметр("КонецОтчетногоПериода",		ОкончаниеПериода);
	НачалоТекущегоКвартала = НачалоКвартала(ОкончаниеПериода);
	Запрос.УстановитьПараметр("Месяц1",						Месяц(НачалоТекущегоКвартала));
	Запрос.УстановитьПараметр("Месяц2",						Месяц(НачалоТекущегоКвартала) + 1);
	Запрос.УстановитьПараметр("Месяц3",						Месяц(НачалоТекущегоКвартала) + 2);
	
	НеОбъект = Новый Массив;
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ДоговорыГПХ);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ВыплатыПоДоговорамОпекиПолучающимСтраховыеПенсии);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеОткрытия);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеАудиовизуальныеПроизведения);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеДругиеМузыкальныеПроизведения);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеЛитературныеПроизведения);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеМузыкальноСценическиеПроизведение);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеНаучныеТруды);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеСкульптуры);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеГрафическиеПроизведения);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.АвторскиеИсполнениеПроизведений);
	НеОбъект.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих);
	Запрос.УстановитьПараметр("НеЯвляетсяОбъектом", НеОбъект);
	
	// ----------------------------------------------------------------------------------
	// ФОРМИРОВАНИЕ ВРЕМЕННЫХ ТАБЛИЦ
	
	Если ОписаниеТаблиц.Свойство("Доходы2017") Или ОписаниеТаблиц.Свойство("СКЕ") Тогда
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СтраховыеВзносыСведенияОДоходах.ГоловнаяОрганизация КАК ГоловнаяОрганизация
		|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СтраховыеВзносыСведенияОДоходах
		|ГДЕ
		|	СтраховыеВзносыСведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СтраховыеВзносыСведенияОДоходах.Организация В(&Организация)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СтраховыеВзносыИсчисленные.ФизическоеЛицо,
		|	СтраховыеВзносыИсчисленные.ГоловнаяОрганизация
		|ИЗ
		|	РегистрНакопления.ИсчисленныеСтраховыеВзносы КАК СтраховыеВзносыИсчисленные
		|ГДЕ
		|	СтраховыеВзносыИсчисленные.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СтраховыеВзносыИсчисленные.Организация В(&Организация)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизическоеЛицо";
		Запрос.Выполнить();
		
		// Формируем список месяцев, в разрезе которых собираем данные.
		ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, КонецМесяца(НачалоГода(НачалоПериода)), КонецМесяца(ОкончаниеПериода),,, "ВТПериодыРасширенныхСведенийОДоходах", Истина);
		
		// Получаем временные таблицы, используя общие алгоритмы.
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Периоды.Период КАК Период,
		|	СписокСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТПериодыФизЛицОрганизаций
		|ИЗ
		|	ВТФизЛицаОрганизаций КАК СписокСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыРасширенныхСведенийОДоходах КАК Периоды
		|		ПО (ИСТИНА)";
		Запрос.Выполнить();
		
		ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
		ПараметрыПостроения.ВсеЗаписи = Истина;
		
		ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
			"ПрименяемыеТарифыСтраховыхВзносов",
			Запрос.МенеджерВременныхТаблиц,
			Ложь,
			ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТПериодыФизЛицОрганизаций",
			"ГоловнаяОрганизация"),
			ПараметрыПостроения);
		
		ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
		ПараметрыПостроения.ВсеЗаписи = Истина;
		
		ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
			"СведенияОбИнвалидностиФизическихЛиц",
			Запрос.МенеджерВременныхТаблиц,
			Ложь,
			ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТПериодыФизЛицОрганизаций",
			"ФизическоеЛицо"),
			ПараметрыПостроения);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) КАК ПериодРегистрации,
		|	СписокФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЕСТЬNULL(ДанныеОбИнвалидности.Инвалидность, ЛОЖЬ) КАК Инвалид,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДанныеОбИнвалидности.Инвалидность, ЛОЖЬ)
		|			ТОГДА ИСТИНА
		|		КОГДА ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.ВидТарифа = ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ОрганизацияИнвалидов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.ОрганизацияИнвалидов
		|	КОНЕЦ КАК ИспользоватьЛьготуИнвалидамПоФСС_НС,
		|	ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)) КАК ВидДохода,
		|	ЕСТЬNULL(ДоходыПоФизлицам.Начисление, ЗНАЧЕНИЕ(ПланВидовРасчета.Начисления.ПустаяСсылка)) КАК Начисление,
		|	ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода.ВходитВБазуФСС_НС, ЛОЖЬ) КАК ВходитВБазуФСС_НС,
		|	ЕСТЬNULL(ДоходыПоФизлицам.Сумма, 0) КАК Сумма,
		|	ЕСТЬNULL(ДоходыПоФизлицам.Скидка, 0) КАК Скидка,
		|	ВЫБОР
		|		КОГДА ДоходыПоФизлицам.ФизическоеЛицо ЕСТЬ NULL
		|			ТОГДА 0
		|		КОГДА ДоходыПоФизлицам.ВидДохода.ВходитВБазуФСС_НС
		|			ТОГДА ДоходыПоФизлицам.Сумма - ВЫБОР
		|					КОГДА ДоходыПоФизлицам.ВидДохода.АвторскиеВознаграждения
		|						ТОГДА 0
		|					ИНАЧЕ ДоходыПоФизлицам.Скидка
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК БазаФСС_НС,
		|	ЕСТЬNULL(ИсторияСамостоятельныхКлассификационныхЕдиницВторичный.СКЕ, ДоходыПоФизлицам.Организация) КАК СКЕ,
		|	ЕСТЬNULL(ДоходыПоФизлицам.Регистратор, НЕОПРЕДЕЛЕНО) КАК Регистратор
		|ПОМЕСТИТЬ ВТДанныеУчета
		|ИЗ
		|	ВТПериодыФизЛицОрганизаций КАК СписокФизЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК ДоходыПоФизлицам
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСамостоятельныхКлассификационныхЕдиницВторичный КАК ИсторияСамостоятельныхКлассификационныхЕдиницВторичный
		|			ПО ДоходыПоФизлицам.Подразделение = ИсторияСамостоятельныхКлассификационныхЕдиницВторичный.СтруктурнаяЕдиница
		|				И (ДоходыПоФизлицам.Период МЕЖДУ ИсторияСамостоятельныхКлассификационныхЕдиницВторичный.ДатаНачала И ИсторияСамостоятельныхКлассификационныхЕдиницВторичный.ДатаОкончания)
		|		ПО СписокФизЛиц.ГоловнаяОрганизация = ДоходыПоФизлицам.ГоловнаяОрганизация
		|			И СписокФизЛиц.ФизическоеЛицо = ДоходыПоФизлицам.ФизическоеЛицо
		|			И (НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ДоходыПоФизлицам.Период, МЕСЯЦ))
		|			И (ДоходыПоФизлицам.Организация В (&Организация))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПрименяемыеТарифыСтраховыхВзносовСрезПоследних КАК ПрименяемыеТарифыСтраховыхВзносовСрезПоследних
		|		ПО СписокФизЛиц.ГоловнаяОрганизация = ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.ГоловнаяОрганизация
		|			И (НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.Период, МЕСЯЦ))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбИнвалидностиФизическихЛицСрезПоследних КАК ДанныеОбИнвалидности
		|		ПО (НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ДанныеОбИнвалидности.Период, МЕСЯЦ))
		|			И СписокФизЛиц.ФизическоеЛицо = ДанныеОбИнвалидности.ФизическоеЛицо
		|ГДЕ
		|	ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.ВидТарифа <> ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.АУСН)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВременнаяТаблица.СКЕ КАК Организация,
		|	ВременнаяТаблица.ПериодРегистрации КАК Период
		|ПОМЕСТИТЬ ВТПереченьСКЕ
		|ИЗ
		|	ВТДанныеУчета КАК ВременнаяТаблица";
		Запрос.Выполнить();
		
		ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
		ПараметрыПостроения.ВсеЗаписи = Истина;
			
		ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
			"СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев",
			Запрос.МенеджерВременныхТаблиц,
			Ложь,
			ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
				"ВТПереченьСКЕ",
				"Организация"),
			ПараметрыПостроения);
	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОДоходах.ПериодРегистрации КАК ПериодРегистрации,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Инвалид КАК Инвалид,
		|	СведенияОДоходах.ИспользоватьЛьготуИнвалидамПоФСС_НС КАК ИспользоватьЛьготуИнвалидамПоФСС_НС,
		|	СведенияОДоходах.ВидДохода КАК ВидДохода,
		|	СведенияОДоходах.Начисление КАК Начисление,
		|	СведенияОДоходах.ВходитВБазуФСС_НС КАК ВходитВБазуФСС_НС,
		|	ЕСТЬNULL(СтавкаВзноса.Ставка, 0) КАК СтавкаНаНСиПЗ,
		|	СУММА(СведенияОДоходах.Сумма) КАК Сумма,
		|	СУММА(СведенияОДоходах.Скидка) КАК Скидка,
		|	СУММА(СведенияОДоходах.БазаФСС_НС) КАК БазаФСС_НС,
		|	СведенияОДоходах.Регистратор КАК Регистратор,
		|	СведенияОДоходах.СКЕ КАК СКЕ
		|ПОМЕСТИТЬ ВТСведенияОДоходах
		|ИЗ
		|	ВТДанныеУчета КАК СведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаВзносаНаСтрахованиеОтНесчастныхСлучаевСрезПоследних КАК СтавкаВзноса
		|		ПО (НАЧАЛОПЕРИОДА(СведенияОДоходах.ПериодРегистрации, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СтавкаВзноса.Период, МЕСЯЦ))
		|			И СведенияОДоходах.СКЕ = СтавкаВзноса.Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ПериодРегистрации,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Инвалид,
		|	СведенияОДоходах.ИспользоватьЛьготуИнвалидамПоФСС_НС,
		|	СведенияОДоходах.ВидДохода,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.ВходитВБазуФСС_НС,
		|	СведенияОДоходах.Регистратор,
		|	ЕСТЬNULL(СтавкаВзноса.Ставка, 0),
		|	СведенияОДоходах.СКЕ
		|
		|ИМЕЮЩИЕ
		|	(СУММА(СведенияОДоходах.Сумма) <> 0
		|		ИЛИ СУММА(СведенияОДоходах.Скидка) <> 0
		|		ИЛИ СУММА(СведенияОДоходах.БазаФСС_НС) <> 0)";
		Запрос.Выполнить();
		
		РасчетЗарплаты.СоздатьВТДополнительныеСвойстваНачислений(Запрос.МенеджерВременныхТаблиц);
		ПособияНСиПЗ = Новый Массив;
		ПособияНСиПЗ.Добавить(Перечисления.ПереченьПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай);
		ПособияНСиПЗ.Добавить(Перечисления.ПереченьПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание);
		ПособияНСиПЗ.Добавить(Перечисления.ПереченьПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев);
		Запрос.УстановитьПараметр("ПособияНСиПЗ", ПособияНСиПЗ);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходах.ПериодРегистрации КАК ПериодРегистрации
		|ПОМЕСТИТЬ ВТМесяцыБезОблагаемойБазы
		|ИЗ
		|	ВТСведенияОДоходах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.ПериодРегистрации МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ПериодРегистрации
		|
		|ИМЕЮЩИЕ
		|	СУММА(СведенияОДоходах.БазаФСС_НС) < 0";
		Результат = Запрос.Выполнить();
		
		Если Результат.Выгрузить()[0].Количество = 0 Тогда
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
			|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодРегистрации
			|ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы";
		Иначе
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходах.ПериодРегистрации КАК ПериодРегистрации
			|ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы
			|ИЗ
			|	ВТСведенияОДоходах КАК СведенияОДоходах
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТМесяцыБезОблагаемойБазы КАК МесяцыБезОблагаемойБазы
			|		ПО СведенияОДоходах.ПериодРегистрации = МесяцыБезОблагаемойБазы.ПериодРегистрации
			|ГДЕ
			|	СведенияОДоходах.ПериодРегистрации МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.ПериодРегистрации
			|
			|ИМЕЮЩИЕ
			|	СУММА(СведенияОДоходах.БазаФСС_НС) < 0
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизическоеЛицо";
		КонецЕсли;
		Запрос.Выполнить();
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходах.ПериодРегистрации КАК Период,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Начисление КАК Начисление,
		|	СведенияОДоходах.СКЕ КАК СКЕ,
		|	СведенияОДоходах.СтавкаНаНСиПЗ КАК СтавкаНаНСиПЗ,
		|	СведенияОДоходах.Регистратор КАК Регистратор,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ВидДохода В (&НеЯвляетсяОбъектом)
		|				ТОГДА 0
		|			КОГДА НЕ СведенияОДоходах.ВходитВБазуФСС_НС
		|				ТОГДА СведенияОДоходах.Сумма
		|			ИНАЧЕ СведенияОДоходах.Скидка
		|		КОНЕЦ) КАК НеОблагаетсяНС_ПЗ,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеОблагаетсяЦеликомПрокуроров)
		|					И ЕСТЬNULL(СвойстваНачисленийДляУчетаСтраховыхВзносов.ВидПособияСоциальногоСтрахования, НЕОПРЕДЕЛЕНО) В (&ПособияНСиПЗ)
		|				ТОГДА СведенияОДоходах.Сумма
		|			КОГДА СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПособияЗаСчетФСС_НС)
		|				ТОГДА СведенияОДоходах.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПособияЗаСчетФСС_НС,
		|	СУММА(СведенияОДоходах.БазаФСС_НС) КАК БазаНС_ПЗ,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ИспользоватьЛьготуИнвалидамПоФСС_НС
		|				ТОГДА СведенияОДоходах.БазаФСС_НС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК БазаИнвалидаНС_ПЗ
		|ПОМЕСТИТЬ ВТОблагаемыеБазыПоМесяцам
		|ИЗ
		|	ВТСведенияОДоходах КАК СведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДополнительныеСвойстваНачислений КАК СвойстваНачисленийДляУчетаСтраховыхВзносов
		|		ПО (ВЫБОР
		|				КОГДА СведенияОДоходах.Начисление ЕСТЬ NULL
		|					ТОГДА СведенияОДоходах.ВидДохода
		|				КОГДА СведенияОДоходах.Начисление = НЕОПРЕДЕЛЕНО
		|					ТОГДА СведенияОДоходах.ВидДохода
		|				ИНАЧЕ СведенияОДоходах.Начисление
		|			КОНЕЦ = СвойстваНачисленийДляУчетаСтраховыхВзносов.Начисление)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезОблагаемойБазы КАК ФизлицаБезОблагаемойБазы
		|		ПО СведенияОДоходах.ФизическоеЛицо = ФизлицаБезОблагаемойБазы.ФизическоеЛицо
		|			И СведенияОДоходах.ПериодРегистрации = ФизлицаБезОблагаемойБазы.ПериодРегистрации
		|ГДЕ
		|	СведенияОДоходах.ПериодРегистрации МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И ФизлицаБезОблагаемойБазы.ФизическоеЛицо ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.СКЕ,
		|	СведенияОДоходах.СтавкаНаНСиПЗ,
		|	СведенияОДоходах.Регистратор,
		|	СведенияОДоходах.ПериодРегистрации,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление";
		Запрос.Выполнить();
	
	КонецЕсли;
	
	// Таблица 1 
	Если ОписаниеТаблиц.Свойство("Доходы2017") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.БазаНС_ПЗ + СведенияОДоходах.НеОблагаетсяНС_ПЗ), 0) КАК П000010000103,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.БазаИнвалидаНС_ПЗ), 0) КАК П000010000403,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.НеОблагаетсяНС_ПЗ), 0) КАК П000010000203,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.БазаНС_ПЗ + СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000104,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.БазаНС_ПЗ + СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000105,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.БазаНС_ПЗ + СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000106,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000404,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000405,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000406,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000204,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000205,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.НеОблагаетсяНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000010000206,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор
		|ИЗ
		|	ВТОблагаемыеБазыПоМесяцам КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор";
		
		МассивПолей = Новый Массив;
		Если Не ПодробныеДанные Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СведенияОДоходах.ФизическоеЛицо,", "");
			МассивПолей.Добавить("Начисление");
			МассивПолей.Добавить("Регистратор");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
		ОписаниеТаблиц.Доходы2017 = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	
	// Таблица СКЕ
	Если ОписаниеТаблиц.Свойство("СКЕ") Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СамостоятельныеКлассификационныеЕдиницы.КодОКВЭД2, """") КАК ОКВЭД,
		|	ЕСТЬNULL(СамостоятельныеКлассификационныеЕдиницы.КодОКВЭД2, """") КАК П000910000102,
		|	ЕСТЬNULL(СамостоятельныеКлассификационныеЕдиницы.КлассПрофессиональногоРиска, 0) КАК П000910000103,
		|	ЕСТЬNULL(СведенияОДоходах.СтавкаНаНСиПЗ, 0) КАК П000910000104,
		|	ЕСТЬNULL(СведенияОДоходах.СтавкаНаНСиПЗ, 0) КАК Тариф,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.БазаНС_ПЗ), 0) КАК П000910000107,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.БазаИнвалидаНС_ПЗ), 0) КАК П000910000108,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.НеОблагаетсяНС_ПЗ), 0) КАК П000910000115,
		|	ЕСТЬNULL(СУММА(СведенияОДоходах.ПособияЗаСчетФСС_НС), 0) КАК П000910000116,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.БазаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000910000109,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.БазаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000910000111,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.БазаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000910000113,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц1
		|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000910000110,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц2
		|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000910000112,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА МЕСЯЦ(СведенияОДоходах.Период) = &Месяц3
		|					ТОГДА СведенияОДоходах.БазаИнвалидаНС_ПЗ
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000910000114,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Начисление КАК Начисление,
		|	СведенияОДоходах.Регистратор КАК Регистратор
		|ИЗ
		|	ВТОблагаемыеБазыПоМесяцам КАК СведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СамостоятельныеКлассификационныеЕдиницы КАК СамостоятельныеКлассификационныеЕдиницы
		|		ПО СведенияОДоходах.СКЕ = СамостоятельныеКлассификационныеЕдиницы.Ссылка
		|ГДЕ
		|	СведенияОДоходах.СКЕ <> &ОтчитывающаясяОрганизация
		|	И ЕСТЬNULL(СведенияОДоходах.СтавкаНаНСиПЗ, 0) <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.СтавкаНаНСиПЗ,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Начисление,
		|	СведенияОДоходах.Регистратор,
		|	СамостоятельныеКлассификационныеЕдиницы.КодОКВЭД2,
		|	СамостоятельныеКлассификационныеЕдиницы.КлассПрофессиональногоРиска
		|
		|УПОРЯДОЧИТЬ ПО
		|	СамостоятельныеКлассификационныеЕдиницы.КлассПрофессиональногоРиска";
		
		МассивПолей = Новый Массив;
		Если Не ПодробныеДанные Тогда
			МассивПолей.Добавить("ФизическоеЛицо");
			МассивПолей.Добавить("Начисление");
			МассивПолей.Добавить("Регистратор");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
		
		ОписаниеТаблиц.СКЕ = Запрос.Выполнить().Выгрузить()
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолей)

	Значение = Неопределено;
	
	Для каждого КлючИЗначение Из СтруктураПолей Цикл
		Если ПоказателиОтчета.Свойство(КлючИЗначение.Ключ, Значение) Тогда
			ТипПоля = ТипЗнч(СтруктураПолей[КлючИЗначение.Ключ]);
			Если ТипПоля = Тип("Строка") Тогда
				СтруктураПолей[КлючИЗначение.Ключ] = ""
			ИначеЕсли ТипПоля = Тип("Дата") Тогда
				СтруктураПолей[КлючИЗначение.Ключ] = '00010101'
			Иначе
				СтруктураПолей[КлючИЗначение.Ключ] = 0
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучитьПереданныеДанныеОтчета(Организация, ДатаОкончания, МенеджерВременныхТаблиц, НомерКорректировки, ИмяФормы)
	
	Данные = ИнтерфейсыВзаимодействияБРО.ПерсонифицированныеСведенияОЗастрахованныхЛицахИзРасчетовПоСтраховымВзносам(Новый Структура("Организация, ДатаОкончания, ИмяФормыОтчета", Организация, ДатаОкончания, ИмяФормы));
	
	Если Данные.Количество() > 0 Тогда
		
		Физлица = Новый ТаблицаЗначений;
		Физлица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
		Физлица.Колонки.Добавить("НомерСведения", Новый ОписаниеТипов("Число"));
		Физлица.Колонки.Добавить("НомерКорректировки", Новый ОписаниеТипов("Число"));
		Физлица.Колонки.Добавить("П000030001001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1)));
		Физлица.Колонки.Добавить("П000310002001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(12)));
		Физлица.Колонки.Добавить("П000310003001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(14)));
		Физлица.Колонки.Добавить("П000310004001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Физлица.Колонки.Добавить("П000310005001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Физлица.Колонки.Добавить("П000310006001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Физлица.Колонки.Добавить("П000310007001", Новый ОписаниеТипов("Дата,Строка", , Новый КвалификаторыСтроки(1000)));
		Физлица.Колонки.Добавить("П000310008001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Физлица.Колонки.Добавить("П000310009001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Физлица.Колонки.Добавить("П000310010001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Физлица.Колонки.Добавить("П000310011001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Физлица.Колонки.Добавить("П000310011002", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		ДоходыВзносов = Новый ТаблицаЗначений;
		ДоходыВзносов.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
		ДоходыВзносов.Колонки.Добавить("НомерСведения", Новый ОписаниеТипов("Число"));
		ДоходыВзносов.Колонки.Добавить("П00321М112001", Новый ОписаниеТипов("Строка,Число", , Новый КвалификаторыСтроки(2)));
		ДоходыВзносов.Колонки.Добавить("П00321М113001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(4)));
		ДоходыВзносов.Колонки.Добавить("П00321М114001", Новый ОписаниеТипов("Число"));
		ДоходыВзносов.Колонки.Добавить("П00321М114101", Новый ОписаниеТипов("Число"));
		ДоходыВзносов.Колонки.Добавить("П00321М115001", Новый ОписаниеТипов("Число"));
		ДоходыВзносов.Колонки.Добавить("П00321М116001", Новый ОписаниеТипов("Число"));
		ДоходыВзносов.Колонки.Добавить("П00321М117001", Новый ОписаниеТипов("Число"));
		ДоходыВредныхВзносов = Новый ТаблицаЗначений;
		ДоходыВредныхВзносов.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
		ДоходыВредныхВзносов.Колонки.Добавить("НомерСведения", Новый ОписаниеТипов("Число"));
		ДоходыВредныхВзносов.Колонки.Добавить("П00322М118001", Новый ОписаниеТипов("Число"));
		ДоходыВредныхВзносов.Колонки.Добавить("П00322М119001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
		ДоходыВредныхВзносов.Колонки.Добавить("П00322М120001", Новый ОписаниеТипов("Число"));
		ДоходыВредныхВзносов.Колонки.Добавить("П00322М121001", Новый ОписаниеТипов("Число"));
		
		НомерСведения = 0;
		Для каждого ДанныеОтчета Из Данные Цикл
			Если ДанныеОтчета.НомерКорректировки >= НомерКорректировки Тогда
				Прервать;
			КонецЕсли;
			Для каждого СтрокаРаздела3 Из ДанныеОтчета.ПерсонифицированныеСведенияОЗастрахованныхЛицах.Строки Цикл
				
				СтрокаДанных = Физлица.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДанных, СтрокаРаздела3.Данные);
				СтрокаДанных.НомерСведения = НомерСведения;
				СтрокаДанных.НомерКорректировки = ДанныеОтчета.НомерКорректировки;
				Если ТипЗнч(СтрокаДанных.П000310007001) <> Тип("Дата") Тогда
					Если ЗначениеЗаполнено(СтрокаДанных.П000310007001) И СтрокаДанных.П000310007001 <> "0" Тогда
						СтрокаДанных.П000310007001 = Дата(СтрокаДанных.П000310007001);
					Иначе
						СтрокаДанных.П000310007001 = '00010101'
					КонецЕсли;
				КонецЕсли;
				
				Для каждого СтрокаПодраздела321 Из СтрокаРаздела3.ДанныеМногострочныхЧастей.П00321М1.Строки Цикл
					Если ЗначениеЗаполнено(СтрокаПодраздела321.Данные.П00321М112001) 
						И (ЗначениеЗаполнено(СтрокаПодраздела321.Данные.П00321М114001) 
							Или ЗначениеЗаполнено(СтрокаПодраздела321.Данные.П00321М114101)
							Или ЗначениеЗаполнено(СтрокаПодраздела321.Данные.П00321М115001)
							Или ЗначениеЗаполнено(СтрокаПодраздела321.Данные.П00321М116001)
							Или ЗначениеЗаполнено(СтрокаПодраздела321.Данные.П00321М117001)) Тогда
						СтрокаДанных = ДоходыВзносов.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДанных, СтрокаПодраздела321.Данные);
						СтрокаДанных.НомерСведения = НомерСведения;
						СтрокаДанных.П00321М112001 = Число(СтрокаДанных.П00321М112001);
					КонецЕсли;
				КонецЦикла;
				
				Для каждого СтрокаПодраздела322 Из СтрокаРаздела3.ДанныеМногострочныхЧастей.П00322М1.Строки Цикл
					Если ЗначениеЗаполнено(СтрокаПодраздела322.Данные.П00322М118001) Тогда
						СтрокаДанных = ДоходыВредныхВзносов.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДанных, СтрокаПодраздела322.Данные);
						СтрокаДанных.НомерСведения = НомерСведения;
					КонецЕсли;
				КонецЦикла;
				
				НомерСведения = НомерСведения + 1;
			КонецЦикла;
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(МенеджерВременныхТаблиц, Физлица, "ВТВременнаяТаблица");
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВременнаяТаблица.П000310003001 КАК П000310003001,
		|	МАКСИМУМ(ВременнаяТаблица.НомерКорректировки) КАК НомерКорректировки
		|ПОМЕСТИТЬ ВТПоследниеКорректировки
		|ИЗ
		|	ВТВременнаяТаблица КАК ВременнаяТаблица
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблица.П000310003001
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ЕСТЬNULL(ФизическиеЛица.Ссылка, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))) КАК ФизическоеЛицо,
		|	ВременнаяТаблица.НомерСведения КАК НомерСведения,
		|	"""" КАК П000030001001,
		|	ВременнаяТаблица.П000310002001 КАК П000310002001,
		|	ВременнаяТаблица.П000310003001 КАК П000310003001,
		|	ВременнаяТаблица.П000310004001 КАК П000310004001,
		|	ВременнаяТаблица.П000310005001 КАК П000310005001,
		|	ВременнаяТаблица.П000310006001 КАК П000310006001,
		|	ВременнаяТаблица.П000310007001 КАК П000310007001,
		|	ВременнаяТаблица.П000310008001 КАК П000310008001,
		|	ВременнаяТаблица.П000310009001 КАК П000310009001,
		|	ВременнаяТаблица.П000310010001 КАК П000310010001,
		|	ВременнаяТаблица.П000310011001 КАК П000310011001,
		|	ВременнаяТаблица.П000310011002 КАК П000310011002
		|ПОМЕСТИТЬ ВТФизлицаПереданные
		|ИЗ
		|	ВТВременнаяТаблица КАК ВременнаяТаблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО ВременнаяТаблица.П000310003001 = ФизическиеЛица.СтраховойНомерПФР
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоследниеКорректировки КАК ПоследниеКорректировки
		|		ПО ВременнаяТаблица.НомерКорректировки = ПоследниеКорректировки.НомерКорректировки
		|			И ВременнаяТаблица.П000310003001 = ПоследниеКорректировки.П000310003001
		|ГДЕ
		|	ПоследниеКорректировки.НомерКорректировки ЕСТЬ НЕ NULL 
		|	И ВременнаяТаблица.П000030001001 = """"
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблица.НомерСведения,
		|	ВременнаяТаблица.НомерКорректировки,
		|	ВременнаяТаблица.П000310002001,
		|	ВременнаяТаблица.П000310003001,
		|	ВременнаяТаблица.П000310004001,
		|	ВременнаяТаблица.П000310005001,
		|	ВременнаяТаблица.П000310006001,
		|	ВременнаяТаблица.П000310007001,
		|	ВременнаяТаблица.П000310008001,
		|	ВременнаяТаблица.П000310009001,
		|	ВременнаяТаблица.П000310010001,
		|	ВременнаяТаблица.П000310011001,
		|	ВременнаяТаблица.П000310011002";
		Запрос.Выполнить(); 
		ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, "ВТВременнаяТаблица");
		
		ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(МенеджерВременныхТаблиц, ДоходыВзносов, "ВТВременнаяТаблица");
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВременнаяТаблица.П00321М112001 КАК П00321М112001,
		|	ВременнаяТаблица.П00321М113001 КАК П00321М113001,
		|	ВременнаяТаблица.П00321М114001 КАК П00321М114001,
		|	ВременнаяТаблица.П00321М114101 КАК П00321М114101,
		|	ВременнаяТаблица.П00321М115001 КАК П00321М115001,
		|	ВременнаяТаблица.П00321М116001 КАК П00321М116001,
		|	ВременнаяТаблица.П00321М117001 КАК П00321М117001
		|ПОМЕСТИТЬ ВТДоходыВзносовПереданные
		|ИЗ
		|	ВТВременнаяТаблица КАК ВременнаяТаблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаПереданные КАК ФизическиеЛица
		|		ПО ВременнаяТаблица.НомерСведения = ФизическиеЛица.НомерСведения";
		Запрос.Выполнить(); 
		ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, "ВТВременнаяТаблица");
		
		ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(МенеджерВременныхТаблиц, ДоходыВредныхВзносов, "ВТВременнаяТаблица");
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВременнаяТаблица.П00322М118001 КАК П00322М118001,
		|	ВременнаяТаблица.П00322М119001 КАК П00322М119001,
		|	ВременнаяТаблица.П00322М120001 КАК П00322М120001,
		|	ВременнаяТаблица.П00322М121001 КАК П00322М121001
		|ПОМЕСТИТЬ ВТДоходыВредныхВзносовПереданные
		|ИЗ
		|	ВТВременнаяТаблица КАК ВременнаяТаблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаПереданные КАК ФизическиеЛица
		|		ПО ВременнаяТаблица.НомерСведения = ФизическиеЛица.НомерСведения";
		Запрос.Выполнить(); 
		ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, "ВТВременнаяТаблица");
		
	Иначе
		СоздатьПустыеВТПереданныхДанныхОтчета(МенеджерВременныхТаблиц)
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьПереданныеДанныеОтчетаПерсонифицированныеСведенияОФизическихЛицах(Организация, ДатаОкончания, МенеджерВременныхТаблиц, НомерКорректировки, ИмяФормы)
	
	// Данные предшествующих отчетов.
	Данные = ИнтерфейсыВзаимодействияБРО.ПерсональныеДанныеИВыплатыИзПерсонифицированныхСведенийОФизическихЛицах(Новый Структура("Организация, ДатаОкончания, ИмяФормыОтчета", Организация, ДатаОкончания, ИмяФормы));
	
	Если Данные.Количество() > 0 Тогда
		
		Физлица = Новый ТаблицаЗначений;
		Физлица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
		Физлица.Колонки.Добавить("НомерКорректировки", Новый ОписаниеТипов("Число"));
		Физлица.Колонки.Добавить("П000010001001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1)));
		Физлица.Колонки.Добавить("П000010002001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(12)));
		Физлица.Колонки.Добавить("П000010003001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(14)));
		Физлица.Колонки.Добавить("П000010004001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Физлица.Колонки.Добавить("П000010005001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Физлица.Колонки.Добавить("П000010006001", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Физлица.Колонки.Добавить("П000010007001", Новый ОписаниеТипов("Число"));
		
		Для каждого ДанныеОтчета Из Данные Цикл
			Если ДанныеОтчета.НомерКорректировки >= НомерКорректировки Тогда
				Прервать;
			КонецЕсли;
			Для каждого СтрокаРаздела Из ДанныеОтчета.ПерсональныеДанныеИВыплаты.Строки Цикл
				СтрокаДанных = Физлица.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДанных, СтрокаРаздела.Данные);
				СтрокаДанных.НомерКорректировки = ДанныеОтчета.НомерКорректировки;
			КонецЦикла;
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(МенеджерВременныхТаблиц, Физлица, "ВТВременнаяТаблица");
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВременнаяТаблица.П000010003001 КАК П000010003001,
		|	МАКСИМУМ(ВременнаяТаблица.НомерКорректировки) КАК НомерКорректировки
		|ПОМЕСТИТЬ ВТПоследниеКорректировки
		|ИЗ
		|	ВТВременнаяТаблица КАК ВременнаяТаблица
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблица.П000010003001
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ЕСТЬNULL(ФизическиеЛица.Ссылка, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))) КАК ФизическоеЛицо,
		|	"""" КАК П000010001001,
		|	ВременнаяТаблица.П000010002001 КАК П000010002001,
		|	ВременнаяТаблица.П000010003001 КАК П000010003001,
		|	ВременнаяТаблица.П000010004001 КАК П000010004001,
		|	ВременнаяТаблица.П000010005001 КАК П000010005001,
		|	ВременнаяТаблица.П000010006001 КАК П000010006001,
		|	ВременнаяТаблица.П000010007001 КАК П000010007001
		|ПОМЕСТИТЬ ВТФизлицаПереданные
		|ИЗ
		|	ВТВременнаяТаблица КАК ВременнаяТаблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО ВременнаяТаблица.П000010003001 = ФизическиеЛица.СтраховойНомерПФР
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоследниеКорректировки КАК ПоследниеКорректировки
		|		ПО ВременнаяТаблица.НомерКорректировки = ПоследниеКорректировки.НомерКорректировки
		|			И ВременнаяТаблица.П000010003001 = ПоследниеКорректировки.П000010003001
		|ГДЕ
		|	ПоследниеКорректировки.НомерКорректировки ЕСТЬ НЕ NULL 
		|	И ВременнаяТаблица.П000010001001 = """"
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблица.П000010002001,
		|	ВременнаяТаблица.П000010003001,
		|	ВременнаяТаблица.П000010004001,
		|	ВременнаяТаблица.П000010005001,
		|	ВременнаяТаблица.П000010006001,
		|	ВременнаяТаблица.П000010007001";
		Запрос.Выполнить(); 
		
	Иначе
		СоздатьПустыеВТПереданныхДанныхОтчетаПерсонифицированныеСведенияОФизическихЛицах(МенеджерВременныхТаблиц);
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьВТФизЛицаОрганизаций(МенеджерВременныхТаблиц, МассивФизическихЛиц, ГоловнаяОрганизация)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("МассивФизическихЛиц", МассивФизическихЛиц);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Ссылка В(&МассивФизическихЛиц)";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьПустыеВТПереданныхДанныхОтчета(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
	|	"""" КАК П000030001001,
	|	"""" КАК П000310002001,
	|	"""" КАК П000310003001,
	|	"""" КАК П000310004001,
	|	"""" КАК П000310005001,
	|	"""" КАК П000310006001,
	|	"""" КАК П000310007001,
	|	"""" КАК П000310008001,
	|	"""" КАК П000310009001,
	|	"""" КАК П000310010001,
	|	"""" КАК П000310011001,
	|	"""" КАК П000310011002
	|ПОМЕСТИТЬ ВТФизлицаПереданные
	|ГДЕ
	|	ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
	|	0 КАК П00321М112001,
	|	"""" КАК П00321М113001,
	|	0 КАК П00321М114001,
	|	0 КАК П00321М114101,
	|	0 КАК П00321М115001,
	|	0 КАК П00321М116001,
	|	0 КАК П00321М117001
	|ПОМЕСТИТЬ ВТДоходыВзносовПереданные
	|ГДЕ
	|	ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
	|	0 КАК П00322М118001,
	|	"""" КАК П00322М119001,
	|	0 КАК П00322М120001,
	|	0 КАК П00322М121001
	|ПОМЕСТИТЬ ВТДоходыВредныхВзносовПереданные
	|ГДЕ
	|	ЛОЖЬ";
	Запрос.Выполнить(); 
	
КонецПроцедуры

Процедура СоздатьПустыеВТПереданныхДанныхОтчетаПерсонифицированныеСведенияОФизическихЛицах(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
	|	"""" КАК П000010001001,
	|	"""" КАК П000010002001,
	|	"""" КАК П000010003001,
	|	"""" КАК П000010004001,
	|	"""" КАК П000010005001,
	|	"""" КАК П000010006001,
	|	0 КАК П000010007001
	|ПОМЕСТИТЬ ВТФизлицаПереданные
	|ГДЕ
	|	ЛОЖЬ";
	Запрос.Выполнить(); 
	
КонецПроцедуры

Процедура СформироватьВТКодКатегорииПоТарифуВидуЗЛ(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ГражданеРФ) КАК ВидЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТКатегорииПриравненныхКГражданамРФ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ПостоянноПроживающиеИностранцы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВысококвалифицированныеСпециалистыПостоянноПроживающие)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПроживающиеИностранцы) КАК ВидЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТКатегорииВременноПроживающих
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВысококвалифицированныеСпециалистыВременноПроживающие)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцыПризнанныеБеженцами)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцы) КАК ВидЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТКатегорииВременноПребывающих
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцыСДолгосрочнымиДоговорами)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВысококвалифицированныеСпециалистыИзЕАЭС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцыСтрахуемыеНаОПС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка КАК ВидТарифаСтраховыхВзносов,
	|	ВидыЗастрахованныхЛицОбязательногоСтрахования.Ссылка КАК ВидЗастрахованногоЛица,
	|	ВЫБОР
	|		КОГДА ВидыЗастрахованныхЛицОбязательногоСтрахования.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцыСтрахуемыеНаОПС)
	|			ТОГДА ""МД""
	|		КОГДА ВидыЗастрахованныхЛицОбязательногоСтрахования.Ссылка В
	|				(ВЫБРАТЬ
	|					КатегорииПриравненныхКГражданамРФ.ВидЗастрахованныхЛиц КАК ВидЗастрахованныхЛиц
	|				ИЗ
	|					ВТКатегорииПриравненныхКГражданамРФ КАК КатегорииПриравненныхКГражданамРФ)
	|			ТОГДА ВидыТарифовСтраховыхВзносов.ОсновнаяКатегорияЗЛ
	|		КОГДА ВидыЗастрахованныхЛицОбязательногоСтрахования.Ссылка В
	|				(ВЫБРАТЬ
	|					КатегорииВременноПроживающих.ВидЗастрахованныхЛиц КАК ВидЗастрахованныхЛиц
	|				ИЗ
	|					ВТКатегорииВременноПроживающих КАК КатегорииВременноПроживающих)
	|			ТОГДА ВидыТарифовСтраховыхВзносов.ВременноПроживающие
	|		КОГДА ВидыЗастрахованныхЛицОбязательногоСтрахования.Ссылка В
	|				(ВЫБРАТЬ
	|					КатегорииВременноПребывающих.ВидЗастрахованныхЛиц КАК ВидЗастрахованныхЛиц
	|				ИЗ
	|					ВТКатегорииВременноПребывающих КАК КатегорииВременноПребывающих)
	|			ТОГДА ВидыТарифовСтраховыхВзносов.ВременноПребывающие
	|		ИНАЧЕ ""-""
	|	КОНЕЦ КАК КатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТКодКатегорииПоТарифуВидуЗЛ
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов,
	|	Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования КАК ВидыЗастрахованныхЛицОбязательногоСтрахования";
	Запрос.Выполнить();

КонецПроцедуры	

Функция КодКатегорииНулевыхДоходовПоКатегорииЗЛ(КатегорияЗастрахованныхЛиц, ОкончаниеПериода, НачисленоВПоследниеТриМесяца, СоответствиеКатегорий)
	
	Если ОкончаниеПериода > '20250101' И Не НачисленоВПоследниеТриМесяца Тогда
		Возврат "НВ"	
	Иначе
		КатегорияНулевыхДоходов = СоответствиеКатегорий[КатегорияЗастрахованныхЛиц];
		Возврат ?(КатегорияНулевыхДоходов = Неопределено, КатегорияЗастрахованныхЛиц, КатегорияНулевыхДоходов);
	КонецЕсли;
	
КонецФункции

Функция КатегорииОсновногоТарифаДляМСП(ОкончаниеПериода)
	
	КатегорииОсновногоТарифа = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка КАК Ссылка,
	|	ВидыТарифовСтраховыхВзносов.ОсновнаяКатегорияЗЛ КАК ОсновнаяКатегорияЗЛ,
	|	ВидыТарифовСтраховыхВзносов.ВременноПроживающие КАК ВременноПроживающие,
	|	ВидыТарифовСтраховыхВзносов.ВременноПребывающие КАК ВременноПребывающие
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ЯвляетсяТарифомДляМСП <= &ОкончаниеПериода
	|	И ВидыТарифовСтраховыхВзносов.ЯвляетсяТарифомДляМСП <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыТарифовСтраховыхВзносов.КодФНС";
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		КатегорииОсновногоТарифа.Вставить(Выборка.ОсновнаяКатегорияЗЛ, "НР");
		КатегорииОсновногоТарифа.Вставить(Выборка.ВременноПроживающие, "ВЖНР");
		КатегорииОсновногоТарифа.Вставить(Выборка.ВременноПребывающие, "ВПНР");
	КонецЦикла;
	
	Возврат	КатегорииОсновногоТарифа
	
КонецФункции

Функция НовоеПустоеДеревоДляРСВ()
	
	ПустоеДерево = Новый ДеревоЗначений;
	ПустоеДерево.Колонки.Добавить("Данные", Новый ОписаниеТипов("Структура"));
	ПустоеДерево.Колонки.Добавить("ДанныеМногострочныхЧастей", Новый ОписаниеТипов("Структура"));
	
	Возврат ПустоеДерево
	
КонецФункции

Функция УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, ИмяТаблицы = "СведенияОДоходах")
	
	Для каждого ПолеРасшифровки Из МассивПолей Цикл
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,ИмяТаблицы + "." + ПолеРасшифровки,"Неопределено");
	КонецЦикла;
	
	Возврат ТекстЗапроса
	
КонецФункции	




#КонецОбласти

