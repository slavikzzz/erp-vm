////////////////////////////////////////////////////////////////////////////////
// Подсистема "Переработка на стороне".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

//++ НЕ УТКА

//++ Устарело_Переработка24

// Формирует данные для формирования заказов переработчикам.
//
// Параметры:
//  СписокСтрок	 - Массив - Содержит данные выбранных строк на основании которых оформляются заказы.
// 
// Возвращаемое значение:
//  Структура - Содержит данные необходимые для формирования заказов переработчикам.
//
Функция ДанныеДляФормированияЗаказовПереработчикам(СписокСтрок) Экспорт
	
	Организация = Неопределено;
	Переработчик = Неопределено;
	Склад = Неопределено;
	Подразделение = Неопределено;
	ГруппаСкладов = Неопределено;
	НаправлениеДеятельности = Неопределено;
	ВариантПриемкиТоваров = Неопределено;
	ТипРаспоряжения = Неопределено;
	ДинамическаяСтруктура = Неопределено;
	
	РеквизитыШапки = Новый Структура;
	ЭтапыГрафика = Новый Массив;
	Для каждого ДанныеСтроки Из СписокСтрок Цикл
		
		РазрешенВыборГруппы = (ДанныеСтроки.ВыборГруппы = ПредопределенноеЗначение("Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах")
								ИЛИ ДанныеСтроки.ВыборГруппы = ПредопределенноеЗначение("Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказахИНакладных"));
		
		Если (Склад <> Неопределено 
					И Склад <> ДанныеСтроки.Склад 
					И (ГруппаСкладов <> ДанныеСтроки.ГруппаСкладов
						ИЛИ НЕ РазрешенВыборГруппы)
					И ТипЗнч(ДанныеСтроки.Распоряжение) <> Тип("ДокументСсылка.ЭтапПроизводства2_2"))
			ИЛИ (ЗначениеЗаполнено(Переработчик)
					И ЗначениеЗаполнено(ДанныеСтроки.Переработчик)
					И Переработчик <> ДанныеСтроки.Переработчик) Тогда
			
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать продукцию 
												|одного переработчика, поступающую на один склад.';
												|en = 'To register the document, select products
												|of one subcontractor that are delivered to one warehouse.'"));
			Возврат Неопределено;
		КонецЕсли; 
		
		Если Организация <> Неопределено 
			И Организация <> ДанныеСтроки.Организация Тогда
			
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать заказы одной организации.';
											|en = 'To register the document, select orders of one company.'"));
			Возврат Неопределено;
		КонецЕсли; 
		
		Если НаправлениеДеятельности <> Неопределено
			И НаправлениеДеятельности <> ДанныеСтроки.НаправлениеДеятельности Тогда
			
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать заказы одного направления деятельности.';
											|en = 'To register the document, select orders of one line of business.'"));
			Возврат Неопределено;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеСтроки.ВариантПриемкиТоваров) Тогда
			Если ЗначениеЗаполнено(ВариантПриемкиТоваров)
				И ВариантПриемкиТоваров <> ДанныеСтроки.ВариантПриемкиТоваров Тогда
				ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать заказы, использующие один вариант приемки продукции.';
												|en = 'To register the document, select orders which use one goods receiving option.'"));
				Возврат Неопределено;
			КонецЕсли;
			ВариантПриемкиТоваров = ДанныеСтроки.ВариантПриемкиТоваров;
		КонецЕсли;
		
		Если ТипРаспоряжения <> Неопределено 
			И ТипРаспоряжения <> ТипЗнч(ДанныеСтроки.Распоряжение) Тогда
			
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать распоряжения одного типа.';
											|en = 'Select references of the same type to register the document.'"));
			Возврат Неопределено;
		КонецЕсли;
		
		Если ДинамическаяСтруктура <> Неопределено
			И ДинамическаяСтруктура <> ДанныеСтроки.ДинамическаяСтруктура Тогда
			
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать заказы одного вида (динамические/нединамические).';
											|en = 'To register the document, select orders of the same kind (dynamic/non-dynamic).'"));
			Возврат Неопределено;
		КонецЕсли;
		
		Организация = ДанныеСтроки.Организация;
		Склад = ДанныеСтроки.Склад;
		Подразделение = ДанныеСтроки.Подразделение;
		НаправлениеДеятельности = ДанныеСтроки.НаправлениеДеятельности;
		ГруппаСкладов = ДанныеСтроки.ГруппаСкладов;
		ТипРаспоряжения = ТипЗнч(ДанныеСтроки.Распоряжение);
		ДинамическаяСтруктура = ДанныеСтроки.ДинамическаяСтруктура;
		
		// Переработчик может быть не указан в заказе на производство
		Переработчик = ?(ЗначениеЗаполнено(ДанныеСтроки.Переработчик), ДанныеСтроки.Переработчик, Переработчик);
		
		//++ Устарело_Производство21
		Если ТипРаспоряжения = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
			ДанныеЭтапа = Новый Структура("Распоряжение,КодСтрокиЭтапыГрафик");
			ЗаполнитьЗначенияСвойств(ДанныеЭтапа, ДанныеСтроки);
			ЭтапыГрафика.Добавить(ДанныеЭтапа);
		Иначе
		//-- Устарело_Производство21	
			ЭтапыГрафика.Добавить(ДанныеСтроки.Распоряжение);
		//++ Устарело_Производство21	
		КонецЕсли; 
		//-- Устарело_Производство21
		
	КонецЦикла; 
	
	РеквизитыШапки.Вставить("Организация", Организация);
	РеквизитыШапки.Вставить("Партнер", Переработчик);
	РеквизитыШапки.Вставить("Подразделение", Подразделение);
	РеквизитыШапки.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
	//++ Устарело_Производство21
	Если ТипРаспоряжения = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
		РеквизитыШапки.Вставить("ГруппировкаЗатрат",	ПредопределенноеЗначение("Перечисление.ГруппировкиЗатратВЗаказеПереработчику.ПоЗаказамНаПроизводство"));
	Иначе
	//-- Устарело_Производство21	
		РеквизитыШапки.Вставить("ГруппировкаЗатрат", ПредопределенноеЗначение("Перечисление.ГруппировкиЗатратВЗаказеПереработчику.ПоЭтапамПроизводства"));
	//++ Устарело_Производство21	
	КонецЕсли;
	//-- Устарело_Производство21
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ЭтапыГрафика", ЭтапыГрафика);
	ДанныеЗаполнения.Вставить("РеквизитыШапки", РеквизитыШапки);
	
	Возврат ДанныеЗаполнения;
	
КонецФункции
//-- Устарело_Переработка24

// Формирует данные для формирования заказов переработчикам.
//
// Параметры:
//  СписокСтрок	 - Массив - Содержит данные выбранных строк на основании которых оформляются заказы.
// 
// Возвращаемое значение:
//  Структура - Содержит данные необходимые для формирования заказов переработчикам.
//
Функция ДанныеДляФормированияЗаказовПереработчикам2_5(СписокСтрок) Экспорт
	
	Организация = Неопределено;
	Партнер = Неопределено;
	Подразделение = Неопределено;
	ЗакупкаПодДеятельность = Неопределено;
	НаправлениеДеятельности = Неопределено;
	ВариантПриемкиТоваров = Неопределено;
	ДинамическаяСтруктура = Неопределено;
	
	РеквизитыШапки = Новый Структура;
	Распоряжения = Новый Массив;
	Для каждого ДанныеСтроки Из СписокСтрок Цикл
		
		Если Не Организация = Неопределено
			И Не Организация = ДанныеСтроки.Организация Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать этапы одной организации.';
											|en = 'To register the document, select stages of one company.'"));
			Возврат Неопределено;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(Партнер)
			И ЗначениеЗаполнено(ДанныеСтроки.Партнер)
			И Не Партнер = ДанныеСтроки.Партнер Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать этапы одного переработчика.';
											|en = 'To register the document, select stages of one subcontractor.'"));
			Возврат Неопределено;
		КонецЕсли; 
		
		Если Не Подразделение = Неопределено
			И Не Подразделение = ДанныеСтроки.Подразделение Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать этапы одного подразделения.';
											|en = 'To register the document, select stages of one business unit.'"));
			Возврат Неопределено;
		КонецЕсли; 
		
		Если Не ЗакупкаПодДеятельность = Неопределено
			И Не ЗакупкаПодДеятельность = ДанныеСтроки.ЗакупкаПодДеятельность Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать этапы одного типа налогообложения НДС.';
											|en = 'To register the document, select all the stages of the same VAT taxation type.'"));
			Возврат Неопределено;
		КонецЕсли; 
		
		Если Не НаправлениеДеятельности = Неопределено
			И Не НаправлениеДеятельности = ДанныеСтроки.НаправлениеДеятельности Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать этапы одного направления деятельности.';
											|en = 'To register the document, select stages of one line of business.'"));
			Возврат Неопределено;
		КонецЕсли;
		
		Если Не ВариантПриемкиТоваров = Неопределено
			И ЗначениеЗаполнено(ДанныеСтроки.ВариантПриемкиТоваров)
			И Не ВариантПриемкиТоваров = ДанныеСтроки.ВариантПриемкиТоваров Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать заказы, использующие один вариант приемки продукции.';
											|en = 'To register the document, select orders which use one goods receiving option.'"));
			Возврат Неопределено;
		КонецЕсли;
		
		Если Не ДинамическаяСтруктура = Неопределено
			И Не ДинамическаяСтруктура = ДанныеСтроки.ДинамическаяСтруктура Тогда
			
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать заказы одного вида (динамические/нединамические).';
											|en = 'To register the document, select orders of the same kind (dynamic/non-dynamic).'"));
			Возврат Неопределено;
		КонецЕсли;
		
		Организация = ДанныеСтроки.Организация;
		Партнер = ?(ЗначениеЗаполнено(ДанныеСтроки.Партнер), ДанныеСтроки.Партнер, Партнер);
		Подразделение = ДанныеСтроки.Подразделение;
		ЗакупкаПодДеятельность = ДанныеСтроки.ЗакупкаПодДеятельность;
		НаправлениеДеятельности = ДанныеСтроки.НаправлениеДеятельности;
		ВариантПриемкиТоваров = ДанныеСтроки.ВариантПриемкиТоваров;
		ДинамическаяСтруктура = ДанныеСтроки.ДинамическаяСтруктура;
		
		Распоряжения.Добавить(ДанныеСтроки.Распоряжение);
		
	КонецЦикла; 
	
	РеквизитыШапки.Вставить("Организация", Организация);
	РеквизитыШапки.Вставить("Партнер", Партнер);
	РеквизитыШапки.Вставить("Подразделение", Подразделение);
	РеквизитыШапки.Вставить("ЗакупкаПодДеятельность", ЗакупкаПодДеятельность);
	РеквизитыШапки.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
	РеквизитыШапки.Вставить("ГруппировкаЗатрат", ПредопределенноеЗначение("Перечисление.ГруппировкиЗатратВЗаказеПереработчику.ПоЭтапамПроизводства"));
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("РеквизитыШапки", РеквизитыШапки);
	ДанныеЗаполнения.Вставить("Распоряжения", Распоряжения);
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

//-- НЕ УТКА

#Область СозданиеНаОсновании

// Создает Документ.ПередачаТоваровХранителю на основании Документ.ЗаказаПереработчику2_5
//
// Параметры:
//  МассивСсылок - Массив -
//  ПараметрыВыполнения - Структура - содержит:
//                         * ОписаниеКоманды - Структура - содержит:
//                            ** ДополнительныеПараметры - Структура - 
//
Процедура ПередачаТоваровХранителюСоздатьНаОснованииЗаказаПереработчику(МассивСсылок, ПараметрыВыполнения) Экспорт
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"ОбщийМодуль.ПереработкаНаСторонеКлиент.ПередачаТоваровХранителюСоздатьНаОснованииЗаказаПереработчику");
	
	ПараметрыВыполненияКоманды = Новый Структура("Источник, Уникальность, Окно, НавигационнаяСсылка");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполненияКоманды, ПараметрыВыполнения.ОписаниеКоманды.ДополнительныеПараметры);
	
	ПараметрыОткрытия =
		ПереработкаНаСторонеВызовСервера.ПередачаТоваровХранителюПараметрыОткрытияФормы(МассивСсылок);
	
	Если Не ПараметрыОткрытия = Неопределено Тогда
		
		ОткрытьФорму("Документ.ПередачаТоваровХранителю.Форма.ФормаДокумента",
					ПараметрыОткрытия,
					ПараметрыВыполненияКоманды.Источник,
					ПараметрыВыполненияКоманды.Уникальность,
					ПараметрыВыполненияКоманды.Окно,
					ПараметрыВыполненияКоманды.НавигационнаяСсылка);
		
	КонецЕсли;
	
КонецПроцедуры

// Создает Документ.ПоступлениеТоваровОтХранителя на основании Документ.ПередачаТоваровХранителю
//
// Параметры:
//  МассивСсылок - Массив -
//  ПараметрыВыполнения - Структура - содержит:
//                         * ОписаниеКоманды - Структура - содержит:
//                            ** ДополнительныеПараметры - Структура - 
//
Процедура ПоступлениеТоваровОтХранителяОперацияВозвратОтПереработчикаСоздатьНаОсновании(
			МассивСсылок, ПараметрыВыполнения) Экспорт
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"ОбщийМодуль.ПереработкаНаСторонеКлиент.ПоступлениеТоваровОтХранителяОперацияВозвратОтПереработчикаСоздатьНаОсновании");
	
	ПараметрыВыполненияКоманды = Новый Структура("Источник, Уникальность, Окно, НавигационнаяСсылка");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполненияКоманды, ПараметрыВыполнения.ОписаниеКоманды.ДополнительныеПараметры);

	ИмяНакладной		  = "ПоступлениеТоваровОтХранителя";
	ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика2_5");
	
	ПараметрыОткрытия = СозданиеНаОснованииУТВызовСервера.ПараметрыОткрытияФормыНакладнойНаОснованииЗаказа(
							МассивСсылок, ИмяНакладной, ХозяйственнаяОперация);
	
	ОткрытьФорму(
		ПараметрыОткрытия.ИмяФормы,
		ПараметрыОткрытия.ПараметрыФормы,
		ПараметрыВыполненияКоманды.Источник,
		ПараметрыВыполненияКоманды.Уникальность,
		ПараметрыВыполненияКоманды.Окно,
		ПараметрыВыполненияКоманды.НавигационнаяСсылка,,
		ПараметрыОткрытия.РежимОткрытияОкнаФормы);
	
КонецПроцедуры

// Создает Документ.ПоступлениеТоваровОтХранителя на основании Документ.ЗаказПереработчику2_5
//
// Параметры:
//  МассивСсылок - Массив -
//  ПараметрыВыполнения - Структура - содержит:
//                         * ОписаниеКоманды - Структура - содержит:
//                            ** ДополнительныеПараметры - Структура - 
//
Процедура ПоступлениеТоваровОтХранителяОперацияПоступлениеОтПереработчикаСоздатьНаОсновании(
			МассивСсылок, ПараметрыВыполнения) Экспорт
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"ОбщийМодуль.ПереработкаНаСторонеКлиент.ПоступлениеТоваровОтХранителяОперацияПоступлениеОтПереработчикаСоздатьНаОсновании");
	
	ПараметрыВыполненияКоманды = Новый Структура("Источник, Уникальность, Окно, НавигационнаяСсылка");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполненияКоманды, ПараметрыВыполнения.ОписаниеКоманды.ДополнительныеПараметры);

	ИмяНакладной		  = "ПоступлениеТоваровОтХранителя";
	ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика2_5");
	
	ПараметрыОткрытия = СозданиеНаОснованииУТВызовСервера.ПараметрыОткрытияФормыНакладнойНаОснованииЗаказа(
							МассивСсылок, ИмяНакладной, ХозяйственнаяОперация);
	
	Если ПараметрыОткрытия.ПараметрыФормы.Основание.ОформлениеЧерезРМ Тогда
		
		ТекстОшибки = НСтр("ru = 'Документ не может быть оформлен. Для оформления воспользуйтесь рабочим местом ""Документы передачи в переработку (к оформлению)""';
							|en = 'The document cannot be registered. To register, use the ""Subcontracting services received - Unregistered documents"" workplace'");
		ВызватьИсключение ТекстОшибки;
		
	Иначе
		ОткрытьФорму(
			ПараметрыОткрытия.ИмяФормы,
			ПараметрыОткрытия.ПараметрыФормы,
			ПараметрыВыполненияКоманды.Источник,
			ПараметрыВыполненияКоманды.Уникальность,
			ПараметрыВыполненияКоманды.Окно,
			ПараметрыВыполненияКоманды.НавигационнаяСсылка,,
			ПараметрыОткрытия.РежимОткрытияОкнаФормы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
