//////////////////////////////////////////////////////////////////
// Процедуры и функции подсистемы "Переработка на стороне"
// связанные с хозяйственной операцией "Возврат от переработчика".
// 
//////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область УнифицированныеМетоды

#Область Заполнение

// Возвращает условию продаж
//
// Параметры:
//  Соглашение - СправочникСсылка.СоглашенияСКлиентами - 
//
// Возвращаемое значение:
//  см. ПродажиСервер.ПолучитьУсловияПродаж
//
Функция ПолучитьУсловияПродаж(Соглашение) Экспорт

	Возврат ПродажиСервер.ПолучитьУсловияПродаж(Соглашение);

КонецФункции

// Возвращает список реквизитов, по которым происходит сопоставление таблиц при заполнении по заказам/ордерам
// 
// Возвращаемое значение:
// 	Строка
//
Функция КлючевыеПоляТаблицыТоваровРаспоряжения() Экспорт
	
	Возврат "Распоряжение, Номенклатура, Характеристика, Назначение";
	
КонецФункции

#КонецОбласти

#Область Проведение

// Возвращает параметры заполнения видов запасов для документа "Поступление товаров от хранителя".
//
// Параметры:
//  Объект - ДокументОбъект.ПоступлениеТоваровОтХранителя
//
// Возвращаемое значение:
//  см. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов
//
Функция ПараметрыЗаполненияВидовЗапасов(Объект) Экспорт
	
	Перем ПараметрыЗаполнения;
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	
	ПараметрыЗаполнения.СторнируемыйДокумент = Объект.СторнируемыйДокумент;
	
	ПараметрыЗаполнения.ОтборыВидовЗапасов.Организация = Объект.Организация;
	
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов  = Новый Массив;
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
	//++ НЕ УТКА
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.МатериалДавальца);
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ПолуфабрикатДавальца);
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ПродукцияДавальца);
	//-- НЕ УТКА
	
	Возврат ПараметрыЗаполнения;

КонецФункции

// Добавляет дополнительное свойство для контроля при проведении
// 
// Параметры:
//  Объект - ДокументОбъект.ПоступлениеТоваровОтХранителя - 
//
Процедура ДобавитьДополнительноеСвойствоДляКонтроляПриПроведении(Объект) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область Округление

// Заполняет признаки ЦеховаяКладовая и НужноОкруглять в строках таблицы
// 
// Параметры:
//  Объект - ДанныеФормыСтруктура - обрабатываемая таблица
//  ПересчитатьКоличествоЕдиниц - Булево - 
//  
Процедура ЗаполнитьПризнакЦеховаяКладоваяВТаблице(Объект, ПересчитатьКоличествоЕдиниц) Экспорт
	
	ПроизводствоСервер.ЗаполнитьПризнакЦеховаяКладоваяВТаблице(Объект.Товары,, Объект.Склад);
	
	Если ПересчитатьКоличествоЕдиниц Тогда
		ПересчитатьКоличествоЕдиниц(Объект);
	КонецЕсли;
	
КонецПроцедуры

// Пересчитывает количество единиц
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - 
//
Процедура ПересчитатьКоличествоЕдиниц(Объект) Экспорт
	
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	
	СтруктураДействий = Новый Структура;
	ДобавитьДействиеПересчитатьКоличествоЕдиниц(СтруктураДействий);
	
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.Товары, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

// Добавляет действия "ЗаполнитьПризнакЦеховаяКладовая"
//
// Параметры:
//  СтруктураДействий - Структура - 
//  Склад - СправочникСсылка.Склады - 
//
Процедура ДобавитьДействиеЗаполнитьПризнакЦеховаяКладовая(СтруктураДействий, Склад) Экспорт
	
	СтруктураДействий.Вставить("ЗаполнитьПризнакЦеховаяКладовая", Новый Структура("ЗначениеСклада", Склад));
	
КонецПроцедуры

// Добавляет действие "ПересчитатьКоличествоЕдиниц"
//
// Параметры:
//  СтруктураДействий - Структура - 
//
Процедура ДобавитьДействиеПересчитатьКоличествоЕдиниц(СтруктураДействий) Экспорт
	
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличестваЕдиниц());
	
КонецПроцедуры

// Возвращает параметры перерасчета клиента единиц
//
// Возвращаемое значение:
//  Структура - см. ПроизводствоКлиентСервер.ПараметрыПересчетаКоличестваЕдиниц
//
Функция ПараметрыПересчетаКоличестваЕдиниц() Экспорт
	
	Возврат ПроизводствоКлиентСервер.ПараметрыПересчетаКоличестваЕдиниц();
	
КонецФункции

// Признак необходимости пересчета количество единиц
//
// Возвращаемое значение:
//  Булево - 
//
Функция НеобходимПересчетКоличествоЕдиниц() Экспорт

	Возврат Истина;

КонецФункции

// Возвращает параметры для округления
// 
// Параметры:
//  Склад - СправочникСсылка.Склады - 
// 
// Возвращаемое значение:
// 	Структура - элементы содержат структуру параметров округления:
//   *Товары - см. НоменклатураСервер.ПараметрыОкругленияКоличестваШтучныхТоваров
// 
Функция ПараметрыТЧДляОкругления(Склад) Экспорт
	
	ПараметрыТЧ = Новый Структура;
	
	ИмяТЧ = "Товары";
	ИмяПоляСклад = "Склад";
	ПараметрыТЧ.Вставить(ИмяТЧ, НоменклатураСервер.ПараметрыПроверкиЗаполненияКоличества());
	ПараметрыТЧ[ИмяТЧ].ИмяТЧ = ИмяТЧ;
	ПараметрыТЧ[ИмяТЧ].ДополнительныеПоля.Вставить(ИмяПоляСклад, "&" + ИмяПоляСклад);
	ПараметрыТЧ[ИмяТЧ].УсловиеОтбораСтрокПоДополнительнымПолям = 
			ПроизводствоСервер.УсловиеОтбораСтрокДляОкругления(ИмяТЧ, ИмяПоляСклад);
	ПараметрыТЧ[ИмяТЧ].ПараметрыЗапроса.Вставить(ИмяПоляСклад, Склад);
	
	Возврат ПараметрыТЧ;
	
КонецФункции

#КонецОбласти

#Область ТекстыЗапросов

#Область ТекстыЗапросовЗаполненияСпискаРаспоряжений

// Возвращает текст запроса товаров распоряжений к оформлению
//
// Параметры:
//  ИмяВременнойТаблицы - Строка -
//  ОтборПоИзмерениям   - Соответствие, Неопределено -
//
// Возвращаемое значение:
//  Строка - текст запрос
//
Функция ТекстЗапросаОстаткиТоваровКОформлению(ИмяВременнойТаблицы, ОтборПоИзмерениям = Неопределено) Экспорт
	
	Если ОтборПоИзмерениям = Неопределено Тогда
		ОтборПоИзмерениям = Новый Соответствие;
	КонецЕсли;
	
	// Распоряжения на возврат от переработчика не ведутся в Системе
	ОбщегоНазначенияУТ.ДобавитьЭлементОтбораВКоллекцию(
		ОтборПоИзмерениям,
		"ИСТИНА",
		"ЛОЖЬ",
		"=");
	
	ТекстЗапроса =
		РегистрыНакопления.ЗаказыПоставщикам.ТекстЗапросаОстатки(
			ИмяВременнойТаблицы,
			ОтборПоИзмерениям);
	
	ТекстЗапроса = СхемыЗапросов.ДобавитьПолеВыборкиВЗапрос(ТекстЗапроса, "НЕОПРЕДЕЛЕНО", "Назначение");
	ТекстЗапроса = СхемыЗапросов.ДобавитьПолеВыборкиВЗапрос(ТекстЗапроса, "НЕОПРЕДЕЛЕНО", "Серия");
	
	ТекстЗапроса = СхемыЗапросов.ИзменитьПсевдонимПоляВыборкиВЗапросе(ТекстЗапроса, "ЗаказПоставщику", "Распоряжение");
	ТекстЗапроса = СхемыЗапросов.ИзменитьПсевдонимПоляВыборкиВЗапросе(ТекстЗапроса, "КПоступлению", "КОформлению");
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

//Возвращает текст запроса данные для проверки ввода на основании
//
// Возвращаемое значение:
//  Строка - 
//
Функция ТекстЗапросаДанныеДляПроверкиВводаНаОсновании() Экспорт
	
	ТекстыЗапросов = Новый Массив;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеРаспоряжение.Ссылка                КАК Основание,
	|	НЕОПРЕДЕЛЕНО                             КАК Статус,
	|	ЛОЖЬ                                     КАК ОформлениеЧерезРМ,
	|	ВЫБОР
	|		КОГДА ДанныеРаспоряжение.Склад.ЭтоГруппа
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ ДанныеРаспоряжение.Склад
	|	КОНЕЦ                                    КАК Склад,
	|	ДанныеРаспоряжение.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.ПередачаТоваровХранителю КАК ДанныеРаспоряжение
	|ГДЕ
	|	ДанныеРаспоряжение.Ссылка В(&Распоряжения)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРаспоряжение.Ссылка                КАК Основание,
	|	ДанныеРаспоряжение.Статус                КАК Статус,
	|	ЛОЖЬ                                     КАК ОформлениеЧерезРМ,
	|	ВЫБОР
	|		КОГДА ДанныеРаспоряжение.СкладМатериалов.ЭтоГруппа
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ ДанныеРаспоряжение.СкладМатериалов
	|	КОНЕЦ                                    КАК Склад,
	|	ДанныеРаспоряжение.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.ЗаказПереработчику2_5 КАК ДанныеРаспоряжение
	|ГДЕ
	|	ДанныеРаспоряжение.Ссылка В(&Распоряжения)
	|";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	Документ.ПередачаТоваровХранителю.Товары КАК ТоварыРаспоряжения
	|ГДЕ
	|	ТоварыРаспоряжения.Ссылка В(&Распоряжения)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	Документ.ЗаказПереработчику2_5 КАК ТоварыРаспоряжения
	|ГДЕ
	|	ТоварыРаспоряжения.Ссылка В(&Распоряжения)
	|";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаДокумента.Ссылка КАК Распоряжение,
	|	ТаблицаДокумента.Склад КАК Склад
	|ПОМЕСТИТЬ ВтОстаткиКОформлению
	|ИЗ
	|	Документ.ПередачаТоваровХранителю КАК ТаблицаДокумента
	|ГДЕ
	|	ЛОЖЬ
	|";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Набор.Распоряжение                    КАК РаспоряженияКОформлению,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Склад) > 1 КАК РазныеСклады
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОстаткиКОформлению.Распоряжение КАК Распоряжение,
	|		ОстаткиКОформлению.Склад        КАК Склад
	|	ИЗ
	|		ВтОстаткиКОформлению КАК ОстаткиКОформлению
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаДокумента.Ссылка КАК Распоряжение,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.Склад.ЭтоГруппа
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|			ИНАЧЕ ТаблицаДокумента.Склад
	|		КОНЕЦ                   КАК Склад
	|	ИЗ
	|		Документ.ПередачаТоваровХранителю КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка В (&Распоряжения)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаДокумента.Ссылка КАК Распоряжение,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.СкладМатериалов.ЭтоГруппа
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|			ИНАЧЕ ТаблицаДокумента.СкладМатериалов
	|		КОНЕЦ                         КАК Склад
	|	ИЗ
	|		Документ.ЗаказПереработчику2_5 КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка В (&Распоряжения)
	|	) КАК Набор
	|
	|СГРУППИРОВАТЬ ПО
	|	Набор.Распоряжение
	|";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Возврат СтрСоединить(ТекстыЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецФункции

//Возвращает текст запроса данные заполнения накладной
//
// Возвращаемое значение:
//  Строка - 
//
Функция ТекстЗапросаДанныеЗаполненияНакладной() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	Передача.Ссылка.Организация             КАК Организация,
	|	Передача.Ссылка.Подразделение           КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Передача.Ссылка.Склад.ЭтоГруппа
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ Передача.Ссылка.Склад.ЭтоГруппа
	|	КОНЕЦ                            КАК Склад,
	|	Передача.Ссылка.Сделка                  КАК Сделка,
	|	Передача.Ссылка.Партнер                 КАК Партнер,
	|	Передача.Ссылка.Контрагент              КАК Контрагент,
	|	Передача.Ссылка.Соглашение              КАК Соглашение,
	|	Передача.Ссылка.Договор                 КАК Договор,
	|	Передача.Ссылка.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Передача.Ссылка.Валюта                  КАК Валюта,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Передача.ВидЦены) = 1
	|			ТОГДА МАКСИМУМ(Передача.ВидЦены)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|	КОНЕЦ                                           КАК ВидЦены
	|ИЗ
	|	Документ.ПередачаТоваровХранителю.Товары КАК Передача
	|ГДЕ
	|	Передача.Ссылка = &Заказ
	|
	|СГРУППИРОВАТЬ ПО
	|	Передача.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	&ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	Передача.Организация             КАК Организация,
	|	Передача.Подразделение           КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Передача.СкладМатериалов.ЭтоГруппа
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ Передача.СкладМатериалов
	|	КОНЕЦ                            КАК Склад,
	|	Передача.Сделка                  КАК Сделка,
	|	Передача.Партнер                 КАК Партнер,
	|	Передача.Контрагент              КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО                     КАК Соглашение,
	|	Передача.Договор                 КАК Договор,
	|	Передача.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Передача.Валюта                  КАК Валюта,
	|	Передача.ВидЦены                 КАК ВидЦены
	|ИЗ
	|	Документ.ЗаказПереработчику2_5 КАК Передача
	|ГДЕ
	|	Передача.Ссылка = &Заказ
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

//Возвращает текст запроса товаров документа заказ
//
// Параметры:
//  Отбор - Соответствие - 
//  ДополнятьПоТаблицеСерий - Булево -
//
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаТоварыДокументаЗаказа(Отбор, ДополнятьПоТаблицеСерий = Ложь) Экспорт
	
	ТекстЗапроса = Документы.ЗаказПереработчику2_5.ТекстЗапросаТоварыДокумента(Отбор, "ОбеспечениеМатериаламиИРаботами");
	
	Возврат ТекстЗапроса;
	
КонецФункции

//Возвращает текст запроса переданных товаров
//
// Возвращаемое значение:
//  Строка - 
//
Функция ТекстЗапросаТоварыПереданные() Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КлючиАналитики.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ КлючиАналитики
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
	|ГДЕ
	|	КлючиАналитики.МестоХранения = &Договор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВидыЗапасов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	НЕ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияПереработчика)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыПереданные.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыПереданные.НомерГТД                   КАК НомерГТД,
	|	ТоварыПереданные.КоличествоОстаток          КАК КоличествоОстаток
	|ПОМЕСТИТЬ ТоварыПереданные
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(&Период, АналитикаУчетаНоменклатуры В
	|		(ВЫБРАТЬ
	|			КлючиАналитики.Ссылка КАК Ссылка
	|		ИЗ
	|			КлючиАналитики КАК КлючиАналитики)
	|	И Организация = &Организация
	|	И ВидЗапасов В
	|		(ВЫБРАТЬ
	|			ВидыЗапасов.Ссылка КАК Ссылка
	|		ИЗ
	|			ВидыЗапасов КАК ВидыЗапасов)) КАК ТоварыПереданные
	|ГДЕ
	|	ТоварыПереданные.КоличествоОстаток > 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КлючиАналитики.Номенклатура                   КАК Номенклатура,
	|	КлючиАналитики.Характеристика                 КАК Характеристика,
	|	ВЫБОР
	|		КОГДА Товары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		ИНАЧЕ КлючиАналитики.Назначение
	|	КОНЕЦ                                         КАК Назначение,
	|	КлючиАналитики.Серия                          КАК Серия,
	|	ТоварыПереданные.НомерГТД                     КАК НомерГТД,
	|	ТоварыПереданные.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СУММА(ТоварыПереданные.КоличествоОстаток)     КАК КоличествоОсталосьПодобрать,
	|	СУММА(ТоварыПереданные.КоличествоОстаток)     КАК КоличествоОстаток
	|ИЗ
	|	ТоварыПереданные КАК ТоварыПереданные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТоварыПереданные.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Товары
	|		ПО КлючиАналитики.Номенклатура = Товары.Ссылка
	|СГРУППИРОВАТЬ ПО
	|	КлючиАналитики.Номенклатура,
	|	КлючиАналитики.Характеристика,
	|	ВЫБОР
	|		КОГДА Товары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		ИНАЧЕ КлючиАналитики.Назначение
	|	КОНЕЦ,
	|	КлючиАналитики.Серия,
	|	ТоварыПереданные.НомерГТД
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	ВЫБОР
	|		КОГДА Товары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		ИНАЧЕ КлючиАналитики.Назначение
	|	КОНЕЦ,
	|	НомерГТД
	|";

	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область Распоряжение

// Возвращает массив типов распоряжение
//
// Возвращаемое значение:
//  Массив из Тип -
//
Функция ТипыРаспоряжение() Экспорт
	
	МассивТипов = Новый Массив;
	
	Возврат МассивТипов;
	
КонецФункции

// Возвращает имя регистра заказ
//
// Возвращаемое значение:
//  Строка - 
//
Функция ИмяРегистраЗаказ() Экспорт
	
	Возврат "ЗаказыПоставщикам";
	
КонецФункции

// Возвращает имя измерение регистра остатков, который используется в качестве распоряжение
//
// Возвращаемое значение:
//  Строка - 
//
Функция ИмяИзмерениеЗаказ() Экспорт
	
	Возврат "ЗаказПоставщику";
	
КонецФункции

// Возвращает признак использование кода строки
//
// Возвращаемое значение:
//  Булево - 
//
Функция ИспользоватьКодСтроки() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Возвращает синоним заказа.
//
// Возвращаемое значение:
//  Строка - синоним заказа.
//
Функция СинонимЗаказа() Экспорт
	
	Возврат НСтр("ru = 'Заказ переработчику';
				|en = 'Subcontracting purchase order'");
	
КонецФункции

#КонецОбласти

#Область АктОРасхождениях

// Возвращает тип основания акта о расхождении
//
// Возвращаемое значение:
//  ПеречислениеСсылка.ТипыОснованияАктаОРасхождении
//
Функция ТипОснованияАкта() Экспорт
	
	Возврат Перечисления.ТипыОснованияАктаОРасхождении.ВозвратТоваровОтПереработчика;
	
КонецФункции

// Возвращает постфикс имени акта о расхождении
//
// Возвращаемое значение:
//  Строка - 
//
Функция ПостфиксИмениАкта() Экспорт
	
	Возврат НСтр("ru = 'после возврата сырья от переработчика';
				|en = 'after ""Goods return — Subcontracting services received""'");
	
КонецФункции

// Возвращает заголовок формы акта о расхождении при создании
//
// Возвращаемое значение:
//  Строка - 
//
Функция ЗаголовокФормыСозданияАкта() Экспорт
	
	Возврат НСтр("ru = 'Акт о расхождениях после возврата сырья от переработчика (Создание)';
				|en = 'Discrepancy report following ""Goods return — Subcontracting services received"" (Create)'");
	
КонецФункции

// Возвращает заголовок формы акта о расхождении
//
// Возвращаемое значение:
//  Строка - 
//
Функция ЗаголовокФормыАкта() Экспорт
	
	Возврат НСтр("ru = 'Акт о расхождениях после возврата сырья от переработчика';
				|en = 'Discrepancy report following ""Goods return — Subcontracting services received""'");
	
КонецФункции

// Возвращает подсказку договора акта о расхождении
//
// Возвращаемое значение:
//  Строка - 
//
Функция ПодсказкаДоговораАкта() Экспорт
	
	Возврат НСтр("ru = 'Договор, в рамках которого оформлен возврат';
				|en = 'Contract under which the return is recorded'");
	
КонецФункции

// Возвращает подсказку соглашения акта о расхождении
//
// Возвращаемое значение:
//  Строка - 
//
Функция ПодсказкаСоглашенияАкта() Экспорт
	
	Возврат "";
	
КонецФункции

// Возвращает заголовок документа основание
//
// Возвращаемое значение:
//  Строка - 
//
Функция ЗаголовокДокументаОснованияАкта() Экспорт
	
	Возврат НСтр("ru = 'Возврат от переработчика';
				|en = 'Materials pick-up from subcontractor'");
	
КонецФункции

// Возвращает заголовок по основаниям
//
// Параметры:
//  ДополнитьПартнером - Булево -
//
// Возвращаемое значение:
//  Строка - 
//
Функция ЗаголовокПоОснованиям(ДополнитьПартнером = Истина) Экспорт
	
	Если ДополнитьПартнером Тогда
		Возврат НСтр("ru = 'По возвратам от переработчика';
					|en = 'By picking up materials from subcontractor'");
	Иначе
		Возврат НСтр("ru = 'По возвратам';
					|en = 'By returns'");
	КонецЕсли;
	
КонецФункции

//Возвращает описание поля с комментариями
//
// Возвращаемое значение:
//  Строка - 
//
Функция КомментарийПоставщикаПодвал() Экспорт
	
	Возврат НСтр("ru = 'Комментарии переработчика по расхождениям в строке';
				|en = 'Subcontractor comments on line discrepancies'");
	
КонецФункции

//Возвращает наименование колонки, кто даёт комментарий
//
// Возвращаемое значение:
//  Строка - 
//
Функция КомментарийКлиента() Экспорт
	
	Возврат НСтр("ru = 'переработчика';
				|en = 'subcontractor'");
	
КонецФункции

#КонецОбласти

#Область ХозяйственныеОперации

// Возвращает хозяйственную операцию документа.
//
// Возвращаемое значение:
//  ПеречислениеСсылка.ХозяйственныеОперации - 
// 
Функция ХозяйственнаяОперация() Экспорт
	
	Возврат Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика2_5;
	
КонецФункции

// Возвращает хозяйственную операцию договора см. ПереработкаНаСтороне.ХозяйственнаяОперацияДоговора.
//
// Возвращаемое значение:
//  см. ПереработкаНаСтороне.ХозяйственнаяОперацияДоговора
// 
Функция ХозяйственнаяОперацияДоговора() Экспорт
	
	Возврат ПереработкаНаСтороне.ХозяйственнаяОперацияДоговора();
	
КонецФункции

#КонецОбласти

#Область ФункциональныеОпции

// Возвращает признак применяемости соглашений с поставщиками
//
// Возвращаемое значение:
//  Булево - 
//
Функция СоглашенияСПоставщикамиПрименимы() Экспорт
	
	Возврат ПереработкаНаСтороне.СоглашенияСПоставщикамиПрименимы();
	
КонецФункции

// Возвращает признак применяемости соглашений с клиентами
//
// Возвращаемое значение:
//  Булево - 
//
Функция СоглашенияСКлиентамиПрименимы() Экспорт
	
	Возврат ПереработкаНаСтороне.СоглашенияСКлиентамиПрименимы();
	
КонецФункции

// Возвращает признак использование соглашений с клиентами
//
// Возвращаемое значение:
//  Булево -
//
Функция ИспользоватьСоглашенияСКлиентами() Экспорт
	
	Возврат ПереработкаНаСтороне.ИспользоватьСоглашенияСКлиентами();

КонецФункции

// Возвращает признак использование заявки на возврат товаров от клиентов
//
// Возвращаемое значение:
//  Булево -
//
Функция ИспользоватьРаспоряжения() Экспорт
	
	Возврат Ложь;
	
КонецФункции

// Возвращает признак использование поступления по нескольким заказов.
//
// Возвращаемое значение:
//  Булево -
//
Функция ИспользоватьПоступлениеПоНесколькимЗаказам() Экспорт

	Возврат Истина;

КонецФункции

// Возвращает признак использование расширенных возможностей заказа клиента
//
// Возвращаемое значение:
//  Булево -
//
Функция ИспользоватьРасширенныеВозможностиЗаказаКлиента() Экспорт
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область Форма

//Получает договор по умолчанию.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура, ДокументОбъект - 
//  ОтборПоВалюте - Булево - 
//  ОтборПоНаправлениюДеятельности - Булево - 
//
// Возвращаемое значение:
//  СправочникСсылка.ДоговорыКонтрагентов - 
//
Функция ПолучитьДоговорПоУмолчанию(Объект, ОтборПоВалюте = Истина, ОтборПоНаправлениюДеятельности = Истина) Экспорт
	
	Возврат ПереработкаНаСтороне.ПолучитьДоговорПоУмолчанию(Объект);
	
КонецФункции

// Устанавливает доступность элемента договор.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения -
//  Объект - ДанныеФормыСтруктура -
//  Договор - СправочникСсылка.ДоговорыКонтрагентов, Неопределено -
//
Процедура УстановитьДоступностьДоговора(Форма, Объект, Договор = Неопределено) Экспорт
	
	ПереработкаНаСтороне.УстановитьДоступностьДоговора(Форма, Объект, Договор);
	
КонецПроцедуры

// Настраивает форму.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - содержит:
//           * Элементы - ВсеЭлементыФормы - содержит:
//              ** Партнер - ПолеВвода - содержит:
//                  *** Заголовок - Строка -
//              ** ТоварыПодобратьПереданныеТовары - КомандаФормы - содержит:
//                  *** Заголовок - Строка -
//              ** ЗакрытьЗаявку - КомандаФормы - содержит:
//                  *** Заголовок - Строка -
//  Номер - Число - 
//  Дата  - Дата - 
//
Процедура НастроитьФорму(Форма, Номер, Дата) Экспорт
	
	Элементы  = Форма.Элементы;
	Параметры = Форма.Параметры;
	
	Форма.АвтоЗаголовок = Ложь;
	Форма.Заголовок     = ЗаголовокФормыДокумента(Не ЗначениеЗаполнено(Параметры.Ключ), Номер, Дата);
	
	Форма.ЗаголовокФормыПодбораПереданныхТоваров = НСтр("ru = 'Подбор сырья, переданных переработчику';
														|en = 'Pick components transferred to subcontractor'");
	
	Элементы.Партнер.Заголовок                         = НСтр("ru = 'Переработчик';
																|en = 'Subcontractor'");
	Элементы.ТоварыПодобратьПереданныеТовары.Заголовок = НСтр("ru = 'Подобрать переданное сырье';
																|en = 'Pick transferred components'");
	Элементы.СтраницыЗаказ.Видимость                   = Ложь;
	
	Элементы.Соглашение.Видимость = ИспользоватьСоглашенияСКлиентами();
	
	Элементы.ТоварыЗаполнитьНомераГТД.Видимость            = Ложь;
	Элементы.ВозвратПереданнойМногооборотнойТары.Видимость = Ложь;
	Элементы.ТоварыДополнитьМногооборотнойТарой.Видимость  = Ложь;
	
	Элементы.ТоварыЗаполнитьЦеныПоДоговору.Видимость = Ложь;
	
КонецПроцедуры

// Настраивает параметры выбора и связи параметров выбора реквизитов формы.
//
// Параметры:
//  Форма  - ФормаКлиентскогоПриложения -
//  Объект - ДанныеФормыСтруктура -
//
Процедура НастроитьПараметрыВыбораЭлементов(Форма, Объект) Экспорт
	
	ПереработкаНаСтороне.НастроитьПараметрыВыбораЭлементов(Форма, Объект);
	
	Элементы = Форма.Элементы;
	
	// Вид цены
	Если Не Элементы.Найти("ВидЦены") = Неопределено Тогда
		
		МассивПараметровВыбора = Новый Массив;
		МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ИспользоватьПриВыпускеПродукции", Истина));
		МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Статус", Перечисления.СтатусыДействияВидовЦен.Действует));
		
		Элементы.ВидЦены.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает заголовок формы документа передача товаров хранителю.
//
// Параметры:
//  НовыйДокумент - Булево - 
//  Номер - Число - 
//  Дата - Дата - 
//
// Возвращаемое значение:
//  Строка - 
//
Функция ЗаголовокФормыДокумента(НовыйДокумент, Номер, Дата) Экспорт
	
	Если НовыйДокумент Тогда
		Заголовок = СтрШаблон(НСтр("ru = '%1 (создание)';
									|en = '%1 (Create)'"), ПредставлениеОбъекта());
	Иначе
		Заголовок = СтрШаблон(НСтр("ru = '%1 %2 от %3';
									|en = '%1 %2 dated %3'"), ПредставлениеОбъекта(), Номер, Дата);
	КонецЕсли;
	
	Возврат Заголовок;
	
КонецФункции

// Возвращает представление документа поступление товаров от хранителя.
//
// Возвращаемое значение:
//  Строка - 
//
Функция ПредставлениеОбъекта() Экспорт
	
	Возврат НСтр("ru = 'Возврат сырья от переработчика';
				|en = 'Goods return — Subcontracting services received'");
	
КонецФункции

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурнале

// Возвращает текст гиперссылки перехода из журнала документов в рабочее место оформления.
// 
// Параметры:
// 	Параметры - Структура - параметры формирования текста гиперссылки.
// Возвращаемое значение:
// 	ФорматированнаяСтрока, Неопределено - текст гиперссылки перехода в рабочее место оформления передач.
//
Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	ЕстьПраваНаЧтение = ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриПоступлении")
						И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКПоступлению);
		
	Если Не ЕстьПраваНаЧтение Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстГиперссылки = НСтр("ru = 'Возврат сырья';
							|en = 'Return of components'");
	ТекстСсылки = "Обработка.ЖурналДокументовПередачиВПереработку2_5.Форма.КОформлениюНакладных/СтраницаВозвратыСырья";
	
	ЕстьДокументыКОформлению = Обработки.ЖурналДокументовПередачиВПереработку2_5.ЕстьДокументыКОформлению(
									Параметры, Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика2_5);
	
	ЦветГиперссылки = ?(ЕстьДокументыКОформлению, Неопределено, ЦветаСтиля.НезаполненноеПолеТаблицы);
	
	Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,, ЦветГиперссылки,, ТекстСсылки);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти