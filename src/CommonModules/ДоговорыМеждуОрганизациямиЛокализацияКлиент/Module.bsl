#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытийФормыЭлемента

// Обработчик события ПриОткрытии формы элемента справочника Договоры
//
// Параметры:
//  Отказ - Булево - признак отказа.
//  Форма - ФормаКлиентскогоПриложения - форма, для которой выполняется обработчик.
//
Процедура ПриОткрытии(Отказ, Форма) Экспорт
	//++ Локализация

	//-- Локализация
КонецПроцедуры

// Обработчик события ОбработкаОповещения формы элемента справочника Договоры
//
// Параметры:
//  ИмяСобытия - Произвольный - имя события;
//  Параметр   - Произвольный - параметр оповещения;
//  Источник   - Произвольный - источник оповещения.
//  Форма      - ФормаКлиентскогоПриложения -//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник, Форма) Экспорт
	//++ Локализация
	
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

Процедура ОбработкаНавигационнойСсылкиФормы(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка, Форма) Экспорт
	//++ Локализация
	СтандартнаяОбработка = Ложь;
	//++ НЕ УТ
	Если НавигационнаяСсылкаФорматированнойСтроки = "НастроитьГОЗ" Тогда
		НастроитьГОЗ(Форма);
	КонецЕсли;
	//-- НЕ УТ

	//-- Локализация
КонецПроцедуры

// Параметры:
//	Элемент - ГруппаФормы, ТаблицаФормы, ПолеФормы, КнопкаФормы - ЭлементФормы
// 	Форма - ФормаКлиентскогоПриложения
Процедура ПриИзмененииРеквизита(Элемент, Форма) Экспорт
	//++ Локализация

	//++ НЕ УТ
	Если Элемент.Имя = "БанковскийСчет" Тогда
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(Форма, Элемент.Имя, Истина);
	КонецЕсли;
	//-- НЕ УТ

	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормыЭлемента

Процедура ВыполнитьКомандуЛокализации(Команда, Форма) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиКомандФормы_Контрагенты_Служебные

//++ Локализация

//++ НЕ УТ

// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - содержит:
// 		* Объект - ДанныеФормыСтруктура - Содержит:
// 			** Ссылка - СправочникСсылка.ДоговорыКонтрагентов
// 
Процедура НастроитьГОЗ(Форма)
	Объект = Форма.Объект;
	
	Попытка
		Форма.ЗаблокироватьДанныеФормыДляРедактирования();
	Исключение
		ПоказатьПредупреждение(Неопределено, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат;
	КонецПопытки;
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("НастроитьГОЗЗавершение", ЭтотОбъект, Новый Структура("Форма", Форма));
	ПараметрыОткрытияФормы = Новый Структура(ДоговорыКонтрагентовЛокализацияКлиентСервер.ИменаРеквизитовГОЗ());
	ЗаполнитьЗначенияСвойств(ПараметрыОткрытияФормы, Форма);
	ЗаполнитьЗначенияСвойств(ПараметрыОткрытияФормы, Объект);
	ПараметрыОткрытияФормы.ДоговорСсылка = Объект.Ссылка;
	
	ОткрытьФорму("ОбщаяФорма.ФормаГК",
		ПараметрыОткрытияФормы,
		Форма,,,,
		ОписаниеОповещенияОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура НастроитьГОЗЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	Если ЗначениеЗаполнено(Результат) 
		И ТипЗнч(Результат) = Тип("Структура") Тогда
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(Форма,
			"ЗаполнитьДоговорПоДаннымФормыНастройкиГОЗ",
			Истина,
			Результат);
	КонецЕсли;
	
КонецПроцедуры

//-- НЕ УТ

//-- Локализация
#КонецОбласти

#КонецОбласти


