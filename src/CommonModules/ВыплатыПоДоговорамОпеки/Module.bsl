
#Область СлужебныйПрограммныйИнтерфейс

Функция ВозрастРебенкаНаДатуРасчета(Ребенок, ДатаРасчета) Экспорт
	ВозрастНаДатуРасчета = Неопределено;
	ДатаРождения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ребенок, "ДатаРождения");
	Возврат ВыплатыПоДоговорамОпекиКлиентСервер.ВозрастНаДатуРасчета(ДатаРождения, ДатаРасчета);
КонецФункции	
	
Функция ПрожиточныйМинимумНаДату(ПрожиточныйМинимум, ДатаРасчета) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ФильтрЗначений = Новый ТаблицаЗначений;
	ФильтрЗначений.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	ФильтрЗначений.Колонки.Добавить("ПрожиточныйМинимум", Новый ОписаниеТипов("СправочникСсылка.ПрожиточныеМинимумы"));
	СтрокаФильтра = ФильтрЗначений.Добавить();
	СтрокаФильтра.Период = ДатаРасчета;	
	СтрокаФильтра.ПрожиточныйМинимум = ПрожиточныйМинимум;			
	ОписаниеФильтра = ЗарплатаКадрыПериодическиеРегистры.ОписаниеФильтраДляСоздатьВТИмяРегистраПоТаблицеЗначений(ФильтрЗначений, "ПрожиточныйМинимум", , МенеджерВременныхТаблиц);
	
	ЗначенияПоказателей = ЗарплатаКадрыПериодическиеРегистры.ТаблицаВТИмяРегистраСрезПоследних(
		"ВеличинаПрожиточногоМинимума", МенеджерВременныхТаблиц, Ложь, ОписаниеФильтра);
	
	Если ЗначенияПоказателей.Количество()=1 Тогда 
		Возврат ЗначенияПоказателей[0].Размер;
	Иначе 
		Возврат 0;
	КонецЕсли;
	
КонецФункции	

Процедура ДобавитьДанныеВыплатПоДоговорамОпеки(Запрос, Подразделение) Экспорт
	
	// Создадим ВТ с событиями начала и окончания выплаты плюс изменения МРОТ и прожиточного минимума для каждой выплаты.
	// Здесь же получим размеры выплат на основе МРОТ и прожиточного минимума на дату каждого события и установим
	// нулевой размер выплат после даты окончания выплат.
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	УсловияВыплатПоОпеке.Период КАК Период,
		|	УсловияВыплатПоОпеке.Договор КАК Договор,
		|	УсловияВыплатПоОпеке.ИдентификаторВыплаты КАК ИдентификаторВыплаты,
		|	УсловияВыплатПоОпеке.ДатаНачала КАК ДатаНачала,
		|	УсловияВыплатПоОпеке.ДатаОкончания КАК ДатаОкончания,
		|	УсловияВыплатПоОпеке.СпособРасчета КАК СпособРасчета,
		|	УсловияВыплатПоОпеке.ПрожиточныйМинимум КАК ПрожиточныйМинимум,
		|	УсловияВыплатПоОпеке.Размер КАК Размер,
		|	УсловияВыплатПоОпеке.Коэффициент КАК Коэффициент
		|ПОМЕСТИТЬ ВТУсловияВыплатПоДоговоруОпеки
		|ИЗ
		|	РегистрСведений.УсловияВыплатПоДоговоруОпеки КАК УсловияВыплатПоОпеке
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УсловияДоговораОпеки КАК УсловияДоговораОпеки
		|		ПО УсловияВыплатПоОпеке.Договор = УсловияДоговораОпеки.Договор
		|ГДЕ
		|	(УсловияДоговораОпеки.Сотрудник В (&Сотрудники)
		|			ИЛИ &БезОтбораПоСотрудникам)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	УсловияВыплатПоОпеке.ИдентификаторВыплаты КАК ИдентификаторВыплаты,
		|	МАКСИМУМ(РазмерыМРОТ.Период) КАК Период
		|ПОМЕСТИТЬ ВТРазмерыМРОТМаксимальныйПериод
		|ИЗ
		|	ВТУсловияВыплатПоДоговоруОпеки КАК УсловияВыплатПоОпеке
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК РазмерыМРОТ
		|		ПО (УсловияВыплатПоОпеке.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВыплатПоДоговорамОпеки.КоэффициентНаМРОТ))
		|			И (РазмерыМРОТ.Период <= УсловияВыплатПоОпеке.ДатаНачала)
		|
		|СГРУППИРОВАТЬ ПО
		|	УсловияВыплатПоОпеке.Договор,
		|	УсловияВыплатПоОпеке.ИдентификаторВыплаты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УсловияВыплатПоОпеке.Договор КАК Договор,
		|	УсловияВыплатПоОпеке.ИдентификаторВыплаты КАК ИдентификаторВыплаты,
		|	УсловияВыплатПоОпеке.ДатаНачала КАК Период,
		|	РазмерыМРОТ.Размер * УсловияВыплатПоОпеке.Коэффициент КАК Размер
		|ПОМЕСТИТЬ ВТРазмерыМРОТ
		|ИЗ
		|	ВТУсловияВыплатПоДоговоруОпеки КАК УсловияВыплатПоОпеке
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРазмерыМРОТМаксимальныйПериод КАК РазмерыМРОТМаксимальныйПериод
		|		ПО УсловияВыплатПоОпеке.ИдентификаторВыплаты = РазмерыМРОТМаксимальныйПериод.ИдентификаторВыплаты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК РазмерыМРОТ
		|		ПО (РазмерыМРОТМаксимальныйПериод.Период = РазмерыМРОТ.Период)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УсловияВыплатПоОпеке.Договор,
		|	УсловияВыплатПоОпеке.ИдентификаторВыплаты,
		|	РазмерыМРОТ.Период,
		|	РазмерыМРОТ.Размер * УсловияВыплатПоОпеке.Коэффициент
		|ИЗ
		|	ВТУсловияВыплатПоДоговоруОпеки КАК УсловияВыплатПоОпеке
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК РазмерыМРОТ
		|		ПО (УсловияВыплатПоОпеке.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВыплатПоДоговорамОпеки.КоэффициентНаМРОТ))
		|			И (РазмерыМРОТ.Период <= УсловияВыплатПоОпеке.ДатаОкончания)
		|			И (РазмерыМРОТ.Период > УсловияВыплатПоОпеке.ДатаНачала)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УсловияВыплатПоОпеке.Договор,
		|	УсловияВыплатПоОпеке.ИдентификаторВыплаты,
		|	ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(УсловияВыплатПоОпеке.ДатаОкончания, ДЕНЬ), СЕКУНДА, 1),
		|	0
		|ИЗ
		|	ВТУсловияВыплатПоДоговоруОпеки КАК УсловияВыплатПоОпеке
		|ГДЕ
		|	УсловияВыплатПоОпеке.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВыплатПоДоговорамОпеки.КоэффициентНаМРОТ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УсловияВыплатПоОпеке.ИдентификаторВыплаты КАК ИдентификаторВыплаты,
		|	РазмерыПрожиточныхМинимумов.ПрожиточныйМинимум КАК ПрожиточныйМинимум,
		|	МАКСИМУМ(РазмерыПрожиточныхМинимумов.Период) КАК Период
		|ПОМЕСТИТЬ ВТРазмерыПрожиточныхМинимумовМаксимальныйПериод
		|ИЗ
		|	ВТУсловияВыплатПоДоговоруОпеки КАК УсловияВыплатПоОпеке
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВеличинаПрожиточногоМинимума КАК РазмерыПрожиточныхМинимумов
		|		ПО (УсловияВыплатПоОпеке.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВыплатПоДоговорамОпеки.КоэффициентНаПрожиточныйМинимум))
		|			И (РазмерыПрожиточныхМинимумов.ПрожиточныйМинимум = УсловияВыплатПоОпеке.ПрожиточныйМинимум)
		|			И (РазмерыПрожиточныхМинимумов.Период <= УсловияВыплатПоОпеке.ДатаНачала)
		|
		|СГРУППИРОВАТЬ ПО
		|	УсловияВыплатПоОпеке.Договор,
		|	УсловияВыплатПоОпеке.ИдентификаторВыплаты,
		|	РазмерыПрожиточныхМинимумов.ПрожиточныйМинимум
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УсловияВыплатПоОпеке.Договор КАК Договор,
		|	УсловияВыплатПоОпеке.ИдентификаторВыплаты КАК ИдентификаторВыплаты,
		|	УсловияВыплатПоОпеке.ДатаНачала КАК Период,
		|	РазмерыПрожиточныхМинимумов.Размер * УсловияВыплатПоОпеке.Коэффициент КАК Размер
		|ПОМЕСТИТЬ ВТРазмерыПрожиточныхМинимумов
		|ИЗ
		|	ВТУсловияВыплатПоДоговоруОпеки КАК УсловияВыплатПоОпеке
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРазмерыПрожиточныхМинимумовМаксимальныйПериод КАК РазмерыПрожиточныхМинимумовМаксимальныйПериод
		|		ПО УсловияВыплатПоОпеке.ИдентификаторВыплаты = РазмерыПрожиточныхМинимумовМаксимальныйПериод.ИдентификаторВыплаты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВеличинаПрожиточногоМинимума КАК РазмерыПрожиточныхМинимумов
		|		ПО (РазмерыПрожиточныхМинимумовМаксимальныйПериод.ПрожиточныйМинимум = РазмерыПрожиточныхМинимумов.ПрожиточныйМинимум)
		|			И (РазмерыПрожиточныхМинимумовМаксимальныйПериод.Период = РазмерыПрожиточныхМинимумов.Период)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УсловияВыплатПоОпеке.Договор,
		|	УсловияВыплатПоОпеке.ИдентификаторВыплаты,
		|	РазмерыПрожиточныхМинимумов.Период,
		|	РазмерыПрожиточныхМинимумов.Размер * УсловияВыплатПоОпеке.Коэффициент
		|ИЗ
		|	ВТУсловияВыплатПоДоговоруОпеки КАК УсловияВыплатПоОпеке
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВеличинаПрожиточногоМинимума КАК РазмерыПрожиточныхМинимумов
		|		ПО (УсловияВыплатПоОпеке.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВыплатПоДоговорамОпеки.КоэффициентНаПрожиточныйМинимум))
		|			И (РазмерыПрожиточныхМинимумов.ПрожиточныйМинимум = УсловияВыплатПоОпеке.ПрожиточныйМинимум)
		|			И (РазмерыПрожиточныхМинимумов.Период <= УсловияВыплатПоОпеке.ДатаОкончания)
		|			И (РазмерыПрожиточныхМинимумов.Период > УсловияВыплатПоОпеке.ДатаНачала)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УсловияВыплатПоОпеке.Договор,
		|	УсловияВыплатПоОпеке.ИдентификаторВыплаты,
		|	ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(УсловияВыплатПоОпеке.ДатаОкончания, ДЕНЬ), СЕКУНДА, 1),
		|	0
		|ИЗ
		|	ВТУсловияВыплатПоДоговоруОпеки КАК УсловияВыплатПоОпеке
		|ГДЕ
		|	УсловияВыплатПоОпеке.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВыплатПоДоговорамОпеки.КоэффициентНаПрожиточныйМинимум)";
	Запрос.Выполнить();
	
	// К этим событиям надо еще добавить события приостановки/возобновления выплат и события изменения статуса получения
	// страховой пенсии. Но тогда придется включить туда еще и выплаты фиксированного размера, вместо того, чтобы просто
	// добавлять их потом к интервалам.
	//
	// Теперь преобразуем события в интервалы. Даты до являются открытой границей (не входят в интервал).
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Интервалы.Договор КАК Договор,
		|	Интервалы.ИдентификаторВыплаты КАК ИдентификаторВыплаты,
		|	Интервалы.Размер КАК Размер,
		|	Интервалы.ДатаС КАК ДатаС,
		|	МИНИМУМ(Интервалы.ДатаДо) КАК ДатаДо
		|ПОМЕСТИТЬ ВТВсеИнтервалыПоОпеке
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЛевыеДаты.Договор КАК Договор,
		|		ЛевыеДаты.ИдентификаторВыплаты КАК ИдентификаторВыплаты,
		|		ЛевыеДаты.Размер КАК Размер,
		|		ЛевыеДаты.Период КАК ДатаС,
		|		ПравыеДаты.Период КАК ДатаДо
		|	ИЗ
		|		ВТРазмерыМРОТ КАК ЛевыеДаты
		|			ПОЛНОЕ СОЕДИНЕНИЕ ВТРазмерыМРОТ КАК ПравыеДаты
		|			ПО ЛевыеДаты.Договор = ПравыеДаты.Договор
		|				И ЛевыеДаты.ИдентификаторВыплаты = ПравыеДаты.ИдентификаторВыплаты
		|				И ЛевыеДаты.Период < ПравыеДаты.Период
		|	ГДЕ
		|		НЕ(ЛевыеДаты.Период ЕСТЬ NULL
		|					ИЛИ ПравыеДаты.Период ЕСТЬ NULL)) КАК Интервалы
		|
		|СГРУППИРОВАТЬ ПО
		|	Интервалы.Договор,
		|	Интервалы.ИдентификаторВыплаты,
		|	Интервалы.Размер,
		|	Интервалы.ДатаС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Интервалы.Договор,
		|	Интервалы.ИдентификаторВыплаты,
		|	Интервалы.Размер,
		|	Интервалы.ДатаС,
		|	МИНИМУМ(Интервалы.ДатаДо)
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЛевыеДаты.Договор КАК Договор,
		|		ЛевыеДаты.ИдентификаторВыплаты КАК ИдентификаторВыплаты,
		|		ЛевыеДаты.Размер КАК Размер,
		|		ЛевыеДаты.Период КАК ДатаС,
		|		ПравыеДаты.Период КАК ДатаДо
		|	ИЗ
		|		ВТРазмерыПрожиточныхМинимумов КАК ЛевыеДаты
		|			ПОЛНОЕ СОЕДИНЕНИЕ ВТРазмерыПрожиточныхМинимумов КАК ПравыеДаты
		|			ПО ЛевыеДаты.Договор = ПравыеДаты.Договор
		|				И ЛевыеДаты.ИдентификаторВыплаты = ПравыеДаты.ИдентификаторВыплаты
		|				И ЛевыеДаты.Период < ПравыеДаты.Период
		|	ГДЕ
		|		НЕ(ЛевыеДаты.Период ЕСТЬ NULL
		|					ИЛИ ПравыеДаты.Период ЕСТЬ NULL)) КАК Интервалы
		|
		|СГРУППИРОВАТЬ ПО
		|	Интервалы.Договор,
		|	Интервалы.ИдентификаторВыплаты,
		|	Интервалы.Размер,
		|	Интервалы.ДатаС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УсловияВыплатПоОпеке.Договор,
		|	УсловияВыплатПоОпеке.ИдентификаторВыплаты,
		|	УсловияВыплатПоОпеке.Размер,
		|	УсловияВыплатПоОпеке.ДатаНачала,
		|	ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(УсловияВыплатПоОпеке.ДатаОкончания, ДЕНЬ), СЕКУНДА, 1)
		|ИЗ
		|	ВТУсловияВыплатПоДоговоруОпеки КАК УсловияВыплатПоОпеке
		|ГДЕ
		|	УсловияВыплатПоОпеке.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВыплатПоДоговорамОпеки.ФиксированныйРазмер)";
	
	Запрос.Выполнить();
	
	// Подготовим ВТ с интервалами так, чтобы в каждой строке были все даты, необходимые для расчета:
	// - суммы договора на конец расчетного месяца;
	// - суммы авансового платежа в расчетном месяце.
	// После этого рассчитаем общую сумму выплат на конец расчетного месяца и размер авансового платежа.
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Интервалы.Договор КАК Договор,
		|	Интервалы.ИдентификаторВыплаты КАК ИдентификаторВыплаты,
		|	Интервалы.Размер КАК Размер,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(&МесяцНачисления, МЕСЯЦ) > Интервалы.ДатаС
		|			ТОГДА НАЧАЛОПЕРИОДА(&МесяцНачисления, МЕСЯЦ)
		|		ИНАЧЕ Интервалы.ДатаС
		|	КОНЕЦ КАК ДатаАванса,
		|	ВЫБОР
		|		КОГДА ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ), СЕКУНДА, 1) < Интервалы.ДатаДо
		|			ТОГДА ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ), СЕКУНДА, 1)
		|		ИНАЧЕ Интервалы.ДатаДо
		|	КОНЕЦ КАК ДатаСуммы,
		|	Интервалы.ДатаС КАК ДатаС,
		|	Интервалы.ДатаДо КАК ДатаДо
		|ПОМЕСТИТЬ ВТВсеИнтервалыПоОпекеДляРасчета
		|ИЗ
		|	ВТВсеИнтервалыПоОпеке КАК Интервалы
		|ГДЕ
		|	Интервалы.ДатаС <= КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Интервалы.Договор КАК Договор,
		|	Интервалы.ИдентификаторВыплаты КАК ИдентификаторВыплаты,
		|	Интервалы.Размер КАК Размер,
		|	Интервалы.ДатаС КАК ДатаС,
		|	Интервалы.ДатаДо КАК ДатаДо,
		|	Интервалы.ДатаСуммы КАК ДатаСуммы,
		|	РАЗНОСТЬДАТ(Интервалы.ДатаС, Интервалы.ДатаДо, ДЕНЬ) КАК РазностьДат,
		|	ВЫБОР
		|		КОГДА Интервалы.ДатаДо > Интервалы.ДатаАванса
		|			ТОГДА РАЗНОСТЬДАТ(Интервалы.ДатаАванса, Интервалы.ДатаСуммы, ДЕНЬ) / (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Интервалы.ДатаАванса, МЕСЯЦ), КОНЕЦПЕРИОДА(Интервалы.ДатаАванса, МЕСЯЦ), ДЕНЬ) + 1) * Интервалы.Размер
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Аванс,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(Интервалы.ДатаС, МЕСЯЦ) = НАЧАЛОПЕРИОДА(Интервалы.ДатаСуммы, МЕСЯЦ)
		|			ТОГДА РАЗНОСТЬДАТ(Интервалы.ДатаС, Интервалы.ДатаСуммы, ДЕНЬ) / (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Интервалы.ДатаС, МЕСЯЦ), КОНЕЦПЕРИОДА(Интервалы.ДатаС, МЕСЯЦ), ДЕНЬ) + 1) * Интервалы.Размер
		|		ИНАЧЕ (РАЗНОСТЬДАТ(Интервалы.ДатаС, КОНЕЦПЕРИОДА(Интервалы.ДатаС, МЕСЯЦ), ДЕНЬ) + 1) / (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Интервалы.ДатаС, МЕСЯЦ), КОНЕЦПЕРИОДА(Интервалы.ДатаС, МЕСЯЦ), ДЕНЬ) + 1) * Интервалы.Размер + (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Интервалы.ДатаС, МЕСЯЦ), НАЧАЛОПЕРИОДА(Интервалы.ДатаСуммы, МЕСЯЦ), МЕСЯЦ) - 1) * Интервалы.Размер + РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Интервалы.ДатаСуммы, МЕСЯЦ), Интервалы.ДатаСуммы, ДЕНЬ) / (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Интервалы.ДатаСуммы, МЕСЯЦ), КОНЕЦПЕРИОДА(Интервалы.ДатаСуммы, МЕСЯЦ), ДЕНЬ) + 1) * Интервалы.Размер
		|	КОНЕЦ КАК Сумма
		|ПОМЕСТИТЬ ВТСуммыВыплатПоОпеке
		|ИЗ
		|	ВТВсеИнтервалыПоОпекеДляРасчета КАК Интервалы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СуммыВыплат.Договор КАК Договор,
		|	СУММА(СуммыВыплат.Аванс) КАК Аванс,
		|	СУММА(СуммыВыплат.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТСуммыДоговоровОпеки
		|ИЗ
		|	ВТСуммыВыплатПоОпеке КАК СуммыВыплат
		|
		|СГРУППИРОВАТЬ ПО
		|	СуммыВыплат.Договор";
	Запрос.Выполнить();
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УсловияДоговораОпеки.Организация КАК Организация,
		|	УсловияДоговораОпеки.Сотрудник КАК Сотрудник,
		|	УсловияДоговораОпеки.ФизическоеЛицо КАК ФизическоеЛицо,
		|	УсловияДоговораОпеки.Договор КАК Договор,
		|	МАКСИМУМ(УсловияДоговораОпеки.Период) КАК Период
		|ПОМЕСТИТЬ ВТУсловияДоговораОпекиМаксимальныйПериод
		|ИЗ
		|	РегистрСведений.УсловияДоговораОпеки КАК УсловияДоговораОпеки
		|ГДЕ
		|	УсловияДоговораОпеки.Период <= &ДатаСреза
		|
		|СГРУППИРОВАТЬ ПО
		|	УсловияДоговораОпеки.Организация,
		|	УсловияДоговораОпеки.Сотрудник,
		|	УсловияДоговораОпеки.ФизическоеЛицо,
		|	УсловияДоговораОпеки.Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УсловияДоговораОпеки.Регистратор КАК Регистратор,
		|	УсловияДоговораОпеки.Период КАК Период,
		|	УсловияДоговораОпеки.Организация КАК Организация,
		|	УсловияДоговораОпеки.Сотрудник КАК Сотрудник,
		|	УсловияДоговораОпеки.ФизическоеЛицо КАК ФизическоеЛицо,
		|	УсловияДоговораОпеки.Договор КАК Договор,
		|	УсловияДоговораОпеки.КодДохода КАК КодДохода,
		|	УсловияДоговораОпеки.КатегорияДохода КАК КатегорияДохода,
		|	УсловияДоговораОпеки.КодВычета КАК КодВычета,
		|	УсловияДоговораОпеки.КодДоходаСтраховыеВзносы КАК КодДоходаСтраховыеВзносы,
		|	УсловияДоговораОпеки.Подразделение КАК Подразделение,
		|	УсловияДоговораОпеки.Территория КАК Территория,
		|	УсловияДоговораОпеки.ДатаНачала КАК ДатаНачала,
		|	УсловияДоговораОпеки.СуммаВычета КАК СуммаВычета,
		|	0 КАК СуммаЕНВД,
		|	УсловияДоговораОпеки.ДатаОкончания КАК ДатаОкончания
		|ПОМЕСТИТЬ ВТУсловияДоговораОпекиСрезПоследних
		|ИЗ
		|	ВТУсловияДоговораОпекиМаксимальныйПериод КАК УсловияДоговораОпекиМаксимальныйПериод
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УсловияДоговораОпеки КАК УсловияДоговораОпеки
		|		ПО УсловияДоговораОпекиМаксимальныйПериод.Период = УсловияДоговораОпеки.Период
		|			И УсловияДоговораОпекиМаксимальныйПериод.Организация = УсловияДоговораОпеки.Организация
		|			И УсловияДоговораОпекиМаксимальныйПериод.Сотрудник = УсловияДоговораОпеки.Сотрудник
		|			И УсловияДоговораОпекиМаксимальныйПериод.ФизическоеЛицо = УсловияДоговораОпеки.ФизическоеЛицо
		|			И УсловияДоговораОпекиМаксимальныйПериод.Договор = УсловияДоговораОпеки.Договор
		|ГДЕ
		|	УсловияДоговораОпеки.Организация = &Организация
		|	И (УсловияДоговораОпеки.Сотрудник В (&Сотрудники)
		|			ИЛИ &БезОтбораПоСотрудникам)
		|	И &УсловиеПодразделение
		|	И НАЧАЛОПЕРИОДА(УсловияДоговораОпеки.ДатаНачала, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(&МесяцНачисления, МЕСЯЦ)
		|	И КОНЕЦПЕРИОДА(УсловияДоговораОпеки.ДатаОкончания, МЕСЯЦ) >= КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&МесяцНачисления КАК МесяцНачисления,
		|	УсловияДоговораОпекиСрезПоследних.Период КАК Период,
		|	УсловияДоговораОпекиСрезПоследних.Регистратор КАК Регистратор,
		|	0 КАК НомерСтроки,
		|	УсловияДоговораОпекиСрезПоследних.Организация КАК Организация,
		|	УсловияДоговораОпекиСрезПоследних.Сотрудник КАК Сотрудник,
		|	УсловияДоговораОпекиСрезПоследних.Договор КАК Договор,
		|	УсловияДоговораОпекиСрезПоследних.КодДохода КАК КодДохода,
		|	УсловияДоговораОпекиСрезПоследних.КатегорияДохода КАК КатегорияДохода,
		|	УсловияДоговораОпекиСрезПоследних.КодВычета КАК КодВычета,
		|	УсловияДоговораОпекиСрезПоследних.КодДоходаСтраховыеВзносы КАК КодДоходаСтраховыеВзносы,
		|	УсловияДоговораОпекиСрезПоследних.Подразделение КАК Подразделение,
		|	УсловияДоговораОпекиСрезПоследних.Территория КАК Территория,
		|	СуммыДоговоровОпеки.Сумма КАК Сумма,
		|	СуммыДоговоровОпеки.Аванс КАК РазмерЕжемесячногоАвансовогоПлатежа,
		|	УсловияДоговораОпекиСрезПоследних.СуммаВычета КАК СуммаВычета,
		|	ДоговорОпеки.ДатаНачала КАК ДатаНачала,
		|	ДоговорОпеки.ДатаОкончания КАК ДатаОкончания,
		|	ЛОЖЬ КАК ЗаключенСоСтудентомРаботающимВСтудотряде,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ПланируемаяДатаВыплаты,
		|	УсловияДоговораОпекиСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТУсловияВыплатПоОпеке
		|ИЗ
		|	ВТУсловияДоговораОпекиСрезПоследних КАК УсловияДоговораОпекиСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСуммыДоговоровОпеки КАК СуммыДоговоровОпеки
		|		ПО УсловияДоговораОпекиСрезПоследних.Договор = СуммыДоговоровОпеки.Договор
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВыплатыПоДоговорамОпеки КАК ДоговорОпеки
		|		ПО УсловияДоговораОпекиСрезПоследних.Договор = ДоговорОпеки.Ссылка";
	
	Если ЗначениеЗаполнено(Подразделение) Тогда
		ТекстУсловияПодразделение = "УсловияДоговораОпеки.Подразделение В ИЕРАРХИИ (&Подразделение)";
	Иначе
		ТекстУсловияПодразделение = "ИСТИНА";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПодразделение", ТекстУсловияПодразделение);
			
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос.Текст = 
		"ВЫБРАТЬ *
		|ПОМЕСТИТЬ СтарыеУсловияДоговораГПХ
		|ИЗ
		|	ВТУсловияДоговораГПХ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТУсловияДоговораГПХ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ *
		|ПОМЕСТИТЬ ВТУсловияДоговораГПХ
		|ИЗ
		|	СтарыеУсловияДоговораГПХ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ *
		|ИЗ
		|	ВТУсловияВыплатПоОпеке
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СтарыеУсловияДоговораГПХ";
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура ДобавитьУничтожениеВТ(Запрос) Экспорт
	
	Запрос.Текст = Запрос.Текст + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТУсловияВыплатПоДоговоруОпеки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТУсловияДоговораОпекиМаксимальныйПериод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТУсловияДоговораОпекиСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТУсловияВыплатПоОпеке
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСуммыДоговоровОпеки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВсеИнтервалыПоОпекеДляРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВсеИнтервалыПоОпеке
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТРазмерыПрожиточныхМинимумов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТРазмерыПрожиточныхМинимумовМаксимальныйПериод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТРазмерыМРОТ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТРазмерыМРОТМаксимальныйПериод";

КонецПроцедуры	

Процедура ЗаполнитьВсеПоляПредставленийВыплаты(Объект) Экспорт
	Для Каждого Выплата Из Объект.Выплаты Цикл 
		Выплата.ОграниченияПоВозрастуПредставление = ВыплатыПоДоговорамОпекиКлиентСервер.ОграниченияПоВозрастуПредставление(
			Выплата.ВыплачиваетсяПриВозрастеОт, Выплата.ВыплачиваетсяПриВозрастеДо, Выплата.ИсключаяДатуОт, Выплата.ВключаяДатуДо);
		Выплата.РасчетРазмераВыплатыПредставление = ВыплатыПоДоговорамОпекиКлиентСервер.РасчетРазмераВыплатыПредставление(
			Выплата.СпособРасчета, Выплата.ПрожиточныйМинимум, Выплата.Размер, Выплата.Коэффициент);
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДатаОкончанияНеМеньшеДатыНачала(ДатаНачала, ДатаОкончания, Объект, ИмяРеквизитаДатаОкончания, Отказ) Экспорт 
	
	Если ЗначениеЗаполнено(ДатаОкончания) И ДатаОкончания < ДатаНачала Тогда 
		ТекстСообщения = НСтр("ru = 'Дата окончания периода не может быть меньше даты начала';
								|en = 'Period end date cannot be less than start date'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, ИмяРеквизитаДатаОкончания, , Отказ);
	КонецЕсли;
	
КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

// Регистрирует обработчики обновления, необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - См. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления().
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия          = "3.1.29.18";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор   = Новый УникальныйИдентификатор("e4be419d-cb89-11ee-811a-4cedfb43b11a");
	Обработчик.Процедура       = "Документы.ВыплатыПоДоговорамОпеки.ОбновитьДанныеОВремениДляСреднегоФСС";
	Обработчик.Комментарий     = НСтр("ru = 'Обновление данных о времени в договорах опеки.';
										|en = 'Update data about time in guardianship contracts.'");
	
КонецПроцедуры

// См. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковПереходаСДругойПрограммы.
Процедура ПриДобавленииОбработчиковПереходаСДругойПрограммы(Обработчики) Экспорт
	
	ИмяПроцедуры = "Справочники.ВидыДоговоровАвторскогоЗаказа.СоздатьПредопределенныеВидыДоговоров";
	ОбщиеДанные  = Ложь;
	ОбновлениеБЗК.ДобавитьОбработчикПерехода(Обработчики, ИмяПроцедуры, ОбщиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ЗащитаПерсональныхДанных

// Процедура обеспечивает сбор сведений о хранении данных, 
// относящихся к персональным.
//
// Параметры:
//	ТаблицаСведений - таблица значений с полями:
//		* Объект 		- строка, содержащая полное имя объекта метаданных,
//		* ПоляРегистрации - строка, в которой перечислены имена полей регистрации, 
//							отдельные поля регистрации отделяются запятой,
//							альтернативные - символом "|",
//		* ПоляДоступа	- строка, в которой перечислены через запятую имена полей доступа.
//		* ОбластьДанных	- строка с идентификатором области данных, необязательно для заполнения.
//
Процедура ЗаполнитьСведенияОПерсональныхДанных(ТаблицаСведений) Экспорт
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ВыплатыПоДоговорамОпеки";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Выплаты.Размер,Выплаты.Коэффициент,Выплаты.Сумма";
	НовыеСведения.ОбластьДанных		= "Доходы";

	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ВыплатыПоДоговорамОпеки";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "ПолучаетСтраховуюПенсию,Выплаты.Ребенок";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
КонецПроцедуры

#КонецОбласти

#Область ДатыЗапретаИзмененияДанных

Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт
	
	ДатыЗапретаИзменения.ДобавитьСтроку(
		ИсточникиДанных, "Документ.ВыплатыПоДоговорамОпеки", "Дата", "Зарплата", "Организация");
	
КонецПроцедуры

#КонецОбласти

#Область Свойства

// См. УправлениеСвойствамиПереопределяемый.ПриПолученииПредопределенныхНаборовСвойств.
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт
	
	УправлениеСвойствамиБЗК.ЗарегистрироватьНаборСвойств(
		Наборы, "ab8ab2ec-5266-4dcd-93f9-a615a3359e7c", Метаданные.Документы.ВыплатыПоДоговорамОпеки);
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	Списки.Вставить(Метаданные.Документы.ВыплатыПоДоговорамОпеки, Истина);
	Списки.Вставить(Метаданные.Справочники.ВыплатыПоДоговорамОпекиПрисоединенныеФайлы, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область Настройки

Процедура ДополнитьФормуОсобенностиПредприятия(Форма) Экспорт
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИспользоватьВыплатыПоДоговорамОпеки", 
		Новый ОписаниеТипов("Булево"), , НСтр("ru = 'Использовать выплаты по договорам опеки';
												|en = 'Use payments under guardianship contracts'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("УчитыватьВозрастРебенкаПриВыплатахПоДоговорамОпеки", 
		Новый ОписаниеТипов("Булево"), , НСтр("ru = 'Учитывать возраст ребенка при выплатах по договорам опеки';
												|en = 'Consider the child''s age in payments under guardianship contracts'")));
	
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
	ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
	ЗначенияНастроек = РегистрыСведений.НастройкиВыплатПоДоговорамОпеки.ЗначенияНастроек();
	Форма.ИспользоватьВыплатыПоДоговорамОпеки = ЗначенияНастроек.ИспользоватьВыплатыПоДоговорамОпеки;
	Форма.УчитыватьВозрастРебенкаПриВыплатахПоДоговорамОпеки = ЗначенияНастроек.УчитыватьВозрастРебенкаПриВыплатахПоДоговорамОпеки;
	
	ГруппаВыплатыПоДоговорамОпеки = Форма.Элементы.Найти("ГруппаВыплатыПоДоговорамОпеки");
	Если ГруппаВыплатыПоДоговорамОпеки=Неопределено Тогда
		ГруппаВыплатыПоДоговорамОпеки = Форма.Элементы.Вставить("ГруппаВыплатыПоДоговорамОпеки", Тип("ГруппаФормы"), Форма.Элементы.ГруппаОсновнаяПанель);
		ГруппаВыплатыПоДоговорамОпеки.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаВыплатыПоДоговорамОпеки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ГруппаВыплатыПоДоговорамОпеки.Заголовок = НСтр("ru = 'Выплаты по договорам опеки';
														|en = 'Payments under guardianship contracts'");
		ГруппаВыплатыПоДоговорамОпеки.ОтображатьЗаголовок = Ложь;
		ГруппаВыплатыПоДоговорамОпеки.Отображение = ОтображениеОбычнойГруппы.СильноеВыделение;
	КонецЕсли;
	
	ГруппаНастройкиВыплатПоДоговорамОпеки = Форма.Элементы.Найти("ГруппаНастройкиВыплатПоДоговорамОпеки");
	Если ГруппаНастройкиВыплатПоДоговорамОпеки=Неопределено Тогда
		ГруппаНастройкиВыплатПоДоговорамОпеки = Форма.Элементы.Вставить("ГруппаНастройкиВыплатПоДоговорамОпеки", Тип("ГруппаФормы"), ГруппаВыплатыПоДоговорамОпеки);
		ГруппаНастройкиВыплатПоДоговорамОпеки.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаНастройкиВыплатПоДоговорамОпеки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ГруппаНастройкиВыплатПоДоговорамОпеки.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаНастройкиВыплатПоДоговорамОпеки.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
		ГруппаНастройкиВыплатПоДоговорамОпеки.Заголовок = НСтр("ru = 'свернуть дополнительные настройки';
																|en = 'collapse additional settings'");
		ГруппаНастройкиВыплатПоДоговорамОпеки.ЗаголовокСвернутогоОтображения = НСтр("ru = 'показать дополнительные настройки';
																					|en = 'Show additional settings'");
	КонецЕсли;
				
	Если Форма.Элементы.Найти("ИспользоватьВыплатыПоДоговорамОпеки") = Неопределено Тогда
		
		ПолеФлажка = Форма.Элементы.Вставить("ИспользоватьВыплатыПоДоговорамОпеки", Тип("ПолеФормы"), ГруппаВыплатыПоДоговорамОпеки, ГруппаНастройкиВыплатПоДоговорамОпеки);
		ПолеФлажка.ПутьКДанным = "ИспользоватьВыплатыПоДоговорамОпеки";
		ПолеФлажка.Вид = ВидПоляФормы.ПолеФлажка;
		ПолеФлажка.Заголовок = НСтр("ru = 'Использовать выплаты по договорам опеки';
									|en = 'Use payments under guardianship contracts'");
		ПолеФлажка.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		ПолеФлажка.УстановитьДействие("ПриИзменении", "Подключаемый_ИспользоватьВыплатыПоДоговорамОпекиПриИзменении");
		
	КонецЕсли;
	
	Если Форма.Элементы.Найти("УчитыватьВозрастРебенкаПриВыплатахПоДоговорамОпеки") = Неопределено Тогда
		
		ПолеФлажка = Форма.Элементы.Вставить("УчитыватьВозрастРебенкаПриВыплатахПоДоговорамОпеки", Тип("ПолеФормы"), ГруппаНастройкиВыплатПоДоговорамОпеки);
		ПолеФлажка.ПутьКДанным = "УчитыватьВозрастРебенкаПриВыплатахПоДоговорамОпеки";
		ПолеФлажка.Вид = ВидПоляФормы.ПолеФлажка;
		ПолеФлажка.Заголовок = НСтр("ru = 'Учитывать возраст ребенка при выплатах по договорам опеки';
									|en = 'Consider the child''s age in payments under guardianship contracts'");
		ПолеФлажка.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьСтруктуруПараметровНастроек(СтруктураПараметров) Экспорт
	
	СтруктураПараметров.ПараметрыНастроек.Вставить("НастройкиВыплатПоДоговорамОпеки", Истина);
	
	ЗначенияНастроек = РегистрыСведений.НастройкиВыплатПоДоговорамОпеки.ЗначенияНастроек();
	НастройкиВыплатПоДоговорамОпеки = Новый Структура;
	НастройкиВыплатПоДоговорамОпеки.Вставить("ИспользоватьВыплатыПоДоговорамОпеки", ЗначенияНастроек.ИспользоватьВыплатыПоДоговорамОпеки);
	НастройкиВыплатПоДоговорамОпеки.Вставить("УчитыватьВозрастРебенкаПриВыплатахПоДоговорамОпеки", ЗначенияНастроек.УчитыватьВозрастРебенкаПриВыплатахПоДоговорамОпеки);
	СтруктураПараметров.Вставить("НастройкиВыплатПоДоговорамОпеки", НастройкиВыплатПоДоговорамОпеки);	
	
КонецПроцедуры

Процедура ЗаписатьПараметрыНастроек(ПараметрыНастроек, Форма) Экспорт

	ПараметрыНастроек.НастройкиВыплатПоДоговорамОпеки.ИспользоватьВыплатыПоДоговорамОпеки = Форма.ИспользоватьВыплатыПоДоговорамОпеки; 
	ПараметрыНастроек.НастройкиВыплатПоДоговорамОпеки.УчитыватьВозрастРебенкаПриВыплатахПоДоговорамОпеки = Форма.УчитыватьВозрастРебенкаПриВыплатахПоДоговорамОпеки; 
	
КонецПроцедуры

Процедура ЗаписатьНастройки(Параметры) Экспорт
	
	РегистрыСведений.НастройкиВыплатПоДоговорамОпеки.УстановитьНастройки(Параметры.НастройкиВыплатПоДоговорамОпеки);
	СотрудникиФормы.ОбновитьРежимыРаботыФормы();
	
КонецПроцедуры

Процедура НастройкиПрограммыБюджетногоУчреждения(НастройкиПриложения) Экспорт

	ЗначенияНастроек = РегистрыСведений.НастройкиВыплатПоДоговорамОпеки.ЗначенияНастроек();
	НастройкиВыплатПоДоговорамОпеки = Новый Структура;
	НастройкиВыплатПоДоговорамОпеки.Вставить("ИспользоватьВыплатыПоДоговорамОпеки", ЗначенияНастроек.ИспользоватьВыплатыПоДоговорамОпеки);
	НастройкиВыплатПоДоговорамОпеки.Вставить("УчитыватьВозрастРебенкаПриВыплатахПоДоговорамОпеки", ЗначенияНастроек.УчитыватьВозрастРебенкаПриВыплатахПоДоговорамОпеки);
	НастройкиПриложения.Вставить("НастройкиВыплатПоДоговорамОпеки", НастройкиВыплатПоДоговорамОпеки);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
