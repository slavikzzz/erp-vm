

#Область СлужебныйПрограммныйИнтерфейс

Функция НовыйОписаниеТаблицыРазовыхНачислений() Экспорт
	ОписаниеТаблицы = Новый Структура;
	ОписаниеТаблицы.Вставить("ИмяТаблицы", "");
	ОписаниеТаблицы.Вставить("ИмяПоляВидРасчета");
	
	Возврат ОписаниеТаблицы;
КонецФункции

Процедура ЗаполнитьРегистраторРазовыхНачисленийПередЗаписью(ДокументОбъект) Экспорт	
	Если ДокументОбъект.Ссылка.Пустая() Тогда
		Если ДокументОбъект.ПолучитьСсылкуНового().Пустая() Тогда
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ДокументОбъект.Ссылка);
			Ссылка = МенеджерОбъекта.ПолучитьСсылку();
			ДокументОбъект.УстановитьСсылкуНового(Ссылка);
		Иначе
			Ссылка = ДокументОбъект.ПолучитьСсылкуНового();
		КонецЕсли;			
	Иначе
		Ссылка = ДокументОбъект.Ссылка;	
	КонецЕсли;	
		
	РегистраторРазовогоНачисления = РегистраторРазовогоНачисления(Ссылка);
	
	ЗаполнитьРегистраторРазовыхНачислений(ДокументОбъект, РегистраторРазовогоНачисления)
КонецПроцедуры

Процедура ЗаполнитьРегистраторРазовыхНачислений(Объект, Регистратор) Экспорт		
	МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка);
	ОписаниеТаблицРазовыхНачислений = МенеджерДокумента.ОписаниеТаблицРазовыхНачислений();
	
	Для Каждого ОписаниеТаблицы Из ОписаниеТаблицРазовыхНачислений Цикл
		ЗаполнитьРегистраторРазовогоНачисленияВТабличнойЧасти(Объект, Регистратор, ОписаниеТаблицы);
	КонецЦикла;	
КонецПроцедуры	

Процедура ПриКопированииДокумента(ДокументОбъект) Экспорт 
	ЗаполнитьРегистраторРазовыхНачислений(ДокументОбъект, ДокументОбъект.Ссылка);	
КонецПроцедуры	

Процедура СкопироватьИсправляемыйДокумент(Приемник, ИсправляемыйДокументСсылка, ИсключаемыеСвойства = "", ИсключаемыеТабличныеЧасти = "", ДанныеЗаполнения = Неопределено) Экспорт 
	ИсправлениеДокументовЗарплатаКадры.СкопироватьДокумент(Приемник, ИсправляемыйДокументСсылка, ИсключаемыеСвойства, ИсключаемыеТабличныеЧасти, ДанныеЗаполнения);	
	ПриКопированииДокумента(Приемник);
КонецПроцедуры	

Функция РегистраторРазовогоНачисления(ДокументСсылка) Экспорт 
	Если ДокументСсылка.Пустая() Тогда
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ДокументСсылка);
		Регистратор = МенеджерОбъекта.ПолучитьСсылку();
	Иначе
		Регистратор = ДокументСсылка;
	КонецЕсли;	
	
	Возврат Регистратор;
КонецФункции

Функция ЭтоРазовоеНачисление(Начисление) Экспорт
	РазовыеНачисления = РасчетЗарплатыРасширенныйПовтИсп.РазовыеНачисленияСоответствие();
	Возврат РазовыеНачисления[Начисление] <> Неопределено;
КонецФункции

Процедура ПередПомещениемДанныхОбъектаВМенеджерРасчета(ДанныеОбъекта) Экспорт
	Регистратор = РегистраторРазовогоНачисления(ДанныеОбъекта.Ссылка);
	ЗаполнитьРегистраторРазовыхНачислений(ДанныеОбъекта, Регистратор); 		
КонецПроцедуры	 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРегистраторРазовогоНачисленияВТабличнойЧасти(Объект, Регистратор, ОписаниеТаблицы)	
	ПутьКПолю = СтрРазделить(ОписаниеТаблицы.ИмяПоляВидРасчета, ".");
	
	Если ПутьКПолю.Количество() = 2 Тогда
		Если НРег(ПутьКПолю[0]) <> "объект" Тогда
			ВызватьИсключение НСтр("ru = 'Не корректный путь к реквизиту «вид расчета».';
									|en = 'Invalid path to the “compensation type” attribute.'");
		КонецЕсли;
		
		ВидРасчета = Объект[ПутьКПолю[1]];
	ИначеЕсли ПутьКПолю.Количество() <> 1 Тогда	
		ВызватьИсключение НСтр("ru = 'Не корректный путь к реквизиту «вид расчета».';
								|en = 'Invalid path to the “compensation type” attribute.'");
	Иначе
		ВидРасчета = Неопределено;
	КонецЕсли;	
	
	РазовыеНачисления = РасчетЗарплатыРасширенныйПовтИсп.РазовыеНачисленияСоответствие();

	Для Каждого СтрокаТабличнойЧасти Из Объект[ОписаниеТаблицы.ИмяТаблицы] Цикл 	
		Если ВидРасчета = Неопределено Тогда
			ВидРасчетаТекущейСтроки = СтрокаТабличнойЧасти[ПутьКПолю[0]];
		Иначе
			ВидРасчетаТекущейСтроки = ВидРасчета;	
		КонецЕсли;	
		
		ЗаполнитьРегистраторРазовогоНачисленияВСтрокеТаблицы(СтрокаТабличнойЧасти, Регистратор, ВидРасчетаТекущейСтроки, РазовыеНачисления);
	КонецЦикла;		
КонецПроцедуры	

Процедура ЗаполнитьРегистраторРазовогоНачисленияВСтрокеТаблицы(СтрокаНачислений, Регистратор, ВидРасчета, РазовыеНачисления)			
	Если Не СтрокаНачислений.РассчитыватьПоРазовымНачислениямДокумента
		И РазовыеНачисления[ВидРасчета] = Неопределено Тогда
		
		СтрокаНачислений.РегистраторРазовогоНачисления = Неопределено;
	Иначе	
		СтрокаНачислений.РегистраторРазовогоНачисления = Регистратор;
	КонецЕсли;		
КонецПроцедуры

#КонецОбласти
