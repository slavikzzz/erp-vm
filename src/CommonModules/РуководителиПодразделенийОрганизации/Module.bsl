#Область СлужебныйПрограммныйИнтерфейс

// Возвращает настройку использования руководителей подразделений организации.
//
// Возвращаемое значение:
// 		Булево
//
Функция РуководителиПодразделенийИспользуются() Экспорт

	Возврат ИнтеграцияУправлениеПерсоналом.ПубликоватьСтруктуруЮридическихЛиц()
		И (ПолучитьФункциональнуюОпцию("ИспользуетсяСервисКабинетСотрудника")
			Или ПолучитьФункциональнуюОпцию("ИспользуетсяПриложение1СПерсонал"));
	
КонецФункции

// Возвращает руководителей подразделений
// Параметры:
//	МассивПодразделений				- Массив - массив подразделений (СправочникСсылка.ПодразделенияОрганизаций), для которых необходимо получить руководителей
//	НаследованиеРуководителей		- Булево - если признак = Истина, руководителем подразделения будет считаться руководитель ближайшего родителя.
//
// Возвращаемое значение:
//	Соответствие - соответствие управленческих и регламентных подразделений.
//		* Ключ		- СправочникСсылка.ПодразделенияОрганизаций - подразделение.
//		* Значение 	- СправочникСсылка.ФизическиеЛица - физическое лицо руководителя.
//
Функция ДанныеРуководителей(МассивПодразделений, НаследованиеРуководителей = Ложь) Экспорт
	
	Руководители = Новый Соответствие;
	
	Если Не РуководителиПодразделенийИспользуются() Тогда
		Возврат Руководители;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделения", МассивПодразделений);
	Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДатаСеанса());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РуководителиСрезПоследних.Подразделение КАК Подразделение,
	|	РуководителиСрезПоследних.Руководитель КАК Руководитель
	|ИЗ
	|	РегистрСведений.ПодразделенияОрганизацииРуководители.СрезПоследних(&ДатаСреза, Подразделение В (&Подразделения)) КАК РуководителиСрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Руководители.Вставить(Выборка.Подразделение, Выборка.Руководитель);
	КонецЦикла;
	
	Если НаследованиеРуководителей Тогда
		
		ПодразделенияБезРуководителя = Новый Массив;
		Для каждого Подразделение Из МассивПодразделений Цикл
			Если Руководители[Подразделение] = Неопределено Тогда
				ПодразделенияБезРуководителя.Добавить(Подразделение);
			КонецЕсли;
		КонецЦикла;
		
		Если ПодразделенияБезРуководителя.Количество() = 0 Тогда
			Возврат Руководители;
		КонецЕсли;
		
		ПодчиненностьПодразделений = Новый ТаблицаЗначений;
		ПодчиненностьПодразделений.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
		ПодчиненностьПодразделений.Колонки.Добавить("ВышестоящееПодразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
		ПодчиненностьПодразделений.Колонки.Добавить("Уровень", Новый ОписаниеТипов("Число"));
		
		РодителиПодразделений = Новый Соответствие;
		Запрос.УстановитьПараметр("Подразделения", ПодразделенияБезРуководителя);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодразделенияОрганизаций.Ссылка КАК Ссылка,
		|	ПодразделенияОрганизаций.Родитель КАК Родитель
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|ГДЕ
		|	ПодразделенияОрганизаций.Родитель <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			РодителиПодразделений.Вставить(Выборка.Ссылка, Выборка.Родитель);
		КонецЦикла;
		
		Для каждого Подразделение Из ПодразделенияБезРуководителя Цикл
			Уровень = 0;
			Родитель = РодителиПодразделений[Подразделение];
			Пока Родитель <> Неопределено Цикл
				Уровень = Уровень + 1;
				НоваяСтрока = ПодчиненностьПодразделений.Добавить();
				НоваяСтрока.Подразделение = Подразделение;
				НоваяСтрока.ВышестоящееПодразделение = Родитель;
				НоваяСтрока.Уровень = Уровень;
				Родитель = РодителиПодразделений[Родитель];
			КонецЦикла;
		КонецЦикла;
		
		ПодразделенияОтбор = ОбщегоНазначения.ВыгрузитьКолонку(ПодчиненностьПодразделений, "ВышестоящееПодразделение", Истина);
		Запрос.УстановитьПараметр("Подразделения", ПодразделенияОтбор);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РуководителиСрезПоследних.Подразделение КАК Подразделение,
		|	РуководителиСрезПоследних.Руководитель КАК Руководитель
		|ИЗ
		|	РегистрСведений.ПодразделенияОрганизацииРуководители.СрезПоследних(&ДатаСреза, Подразделение В (&Подразделения)) КАК РуководителиСрезПоследних";
		Выборка = Запрос.Выполнить().Выбрать();
		РуководителиВсе = Новый Соответствие;
		Пока Выборка.Следующий() Цикл
			РуководителиВсе.Вставить(Выборка.Подразделение, Выборка.Руководитель);
		КонецЦикла;
		
		ПодчиненностьПодразделений.Сортировать("Подразделение,Уровень", Новый СравнениеЗначений);
		Отбор = Новый Структура("Подразделение");
		Для каждого Подразделение Из ПодразделенияБезРуководителя Цикл
			Руководитель = Неопределено;
			Отбор.Подразделение = Подразделение;
			НайденныеСтроки = ПодчиненностьПодразделений.НайтиСтроки(Отбор);
			Для Сч = 0 По НайденныеСтроки.ВГраница() Цикл
				Руководитель = РуководителиВсе[НайденныеСтроки[Сч].ВышестоящееПодразделение];
				Если ЗначениеЗаполнено(Руководитель) Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ЗначениеЗаполнено(Руководитель) Тогда
				Руководители.Вставить(Подразделение, Руководитель);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Руководители;
	
КонецФункции

#КонецОбласти


