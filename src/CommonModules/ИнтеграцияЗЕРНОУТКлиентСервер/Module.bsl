#Область ПрограммныйИнтерфейс

#Область ПогашениеСДИЗЗЕРНО

// Заполняет структуру команд для динамического формирования доступных для создания документов на основании.
// 
// Параметры:
// 	Команды - Структура - Исходящий, структура команд динамически формируемых для создания документов на основании.
//
Процедура КомандыПогашенияСДИЗ(Команды) Экспорт 
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды,"ПриобретениеТоваровУслуг",          НСтр("ru = 'Приобретение товаров и услуг';
																												|en = 'Vendor invoice'"));
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды,"ВозвратТоваровОтКлиента",           НСтр("ru = 'Возврат товаров от клиента';
																												|en = 'Sales return'"));
	ФункциональныеОпцииПриемки = "ИспользоватьОтветственноеХранениеВПроцессеЗакупки";
	
	//++ НЕ УТКА
	
	ФункциональныеОпцииПриемки = "ИспользоватьОтветственноеХранениеВПроцессеЗакупки,ИспользоватьПроизводствоИзДавальческогоСырья2_5";
	
	//-- НЕ УТКА
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды,"ВыкупПринятыхНаХранениеТоваров",    НСтр("ru = 'Выкуп принятых на хранение товаров';
																												|en = 'Redemption of goods received for storage'"),   ФункциональныеОпцииПриемки);
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды,"ПриемкаТоваровНаХранение",          НСтр("ru = 'Приемку товаров на хранение';
																												|en = 'VMI procurement'"),          ФункциональныеОпцииПриемки);
	
	//++ НЕ УТ

	//++ Устарело_Переработка24
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды,"ПоступлениеОтПереработчика",        НСтр("ru = 'Поступление от переработчика';
																												|en = 'Goods receipt — External subcontracting'"),         "ИспользоватьПроизводствоНаСтороне");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды,"ВозвратСырьяОтПереработчика",       НСтр("ru = 'Возврат сырья от переработчика';
																												|en = 'Goods return — Subcontracting services received'"),       "ИспользоватьПроизводствоНаСтороне");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды,"ПередачаСырьяПереработчику",        НСтр("ru = 'Передачу сырья переработчику';
																												|en = 'Customer stock fill-up'"),       "ИспользоватьПроизводствоНаСтороне");
	//-- Устарело_Переработка24

	//-- НЕ УТ

	//++ НЕ УТКА

	//++ Устарело_Переработка24
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды,"ПоступлениеСырьяОтДавальца",        НСтр("ru = 'Поступление сырья от давальца';
																												|en = 'Goods receipt — Subcontracting services delivered'"),        "ИспользоватьПроизводствоИзДавальческогоСырья");
	//-- Устарело_Переработка24

	//-- НЕ УТКА
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,"ПриобретениеТоваровУслуг",          НСтр("ru = 'Приобретение товаров и услуг';
																												|en = 'Vendor invoice'"));
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,"ВозвратТоваровОтКлиента",           НСтр("ru = 'Возврат товаров от клиента';
																												|en = 'Sales return'"));
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,"ПеремещениеТоваров",                НСтр("ru = 'Перемещение товаров';
																												|en = 'Goods transfer'"),                  "ИспользоватьПеремещениеТоваров");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,"ПередачаТоваровМеждуОрганизациями", НСтр("ru = 'Передачу товаров между организациями';
																												|en = 'Goods transfer between companies'"), "ИспользоватьПередачиТоваровМеждуОрганизациями");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,"ВозвратТоваровМеждуОрганизациями",  НСтр("ru = 'Возврат товаров между организациями';
																												|en = 'Goods return — Intercompany'"),  "ИспользоватьПередачиТоваровМеждуОрганизациями");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,"ВыкупПринятыхНаХранениеТоваров",    НСтр("ru = 'Выкуп принятых на хранение товаров';
																												|en = 'Redemption of goods received for storage'"),   ФункциональныеОпцииПриемки);
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,"ПриемкаТоваровНаХранение",          НСтр("ru = 'Приемку товаров на хранение';
																												|en = 'VMI procurement'"),          ФункциональныеОпцииПриемки);
	
	//++ НЕ УТ
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,"ДвижениеПродукцииИМатериалов",      НСтр("ru = 'Движение продукции и материалов';
																												|en = 'Movement of products and materials'"),      "ИспользоватьУправлениеПроизводством2_2");
	//++ Устарело_Переработка24
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,"ПоступлениеОтПереработчика",        НСтр("ru = 'Поступление от переработчика';
																												|en = 'Goods receipt — External subcontracting'"),         "ИспользоватьПроизводствоНаСтороне");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,"ВозвратСырьяОтПереработчика",       НСтр("ru = 'Возврат сырья от переработчика';
																												|en = 'Goods return — Subcontracting services received'"),       "ИспользоватьПроизводствоНаСтороне");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,"ПередачаСырьяПереработчику",        НСтр("ru = 'Передачу сырья переработчику';
																												|en = 'Customer stock fill-up'"),       "ИспользоватьПроизводствоНаСтороне");
	//-- Устарело_Переработка24

	//-- НЕ УТ

	//++ НЕ УТКА

	//++ Устарело_Переработка24
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,"ПоступлениеСырьяОтДавальца",        НСтр("ru = 'Поступление сырья от давальца';
																												|en = 'Goods receipt — Subcontracting services delivered'"),        "ИспользоватьПроизводствоИзДавальческогоСырья");
	//-- Устарело_Переработка24

	//-- НЕ УТКА
	
КонецПроцедуры

#КонецОбласти

#Область ОформлениеСДИЗЗЕРНО

// Заполняет структуру команд для динамического формирования доступных для создания документов на основании.
// 
// Параметры:
// 	Команды - Структура - Исходящий, структура команд динамически формируемых для создания документов на основании.
//
Процедура КомандыОформлениеСДИЗЗЕРНО(Команды) Экспорт 
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ФормированиеПартийЗЕРНО",           НСтр("ru = 'Формирование партий';
																												|en = 'Lot generation'"));
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "РеализацияТоваровУслуг",            НСтр("ru = 'Реализацию товаров услуг';
																												|en = 'Sales of goods services'"));
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ВозвратТоваровПоставщику",          НСтр("ru = 'Возврат товаров поставщику';
																												|en = 'Return of goods to vendor'"));
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ОтгрузкаТоваровСХранения",          НСтр("ru = 'Отгрузку товаров с хранения';
																												|en = 'VMI pick-up request from vendor'"),          "ИспользоватьОтветственноеХранениеВПроцессеЗакупки");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ПередачаТоваровХранителю",          НСтр("ru = 'Передачу товаров';
																												|en = 'Transfer of goods'"),                     "ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи,ИспользоватьКомиссиюПриПродажах" + ИнтеграцияИСУТКлиентСервер.ИмяФункицональнойОпцииИспользоватьПроизводствоНаСтороне25());
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ПередачаТоваровМеждуОрганизациями", НСтр("ru = 'Передачу товаров между организациями';
																												|en = 'Goods transfer between companies'"), "ИспользоватьПередачиТоваровМеждуОрганизациями");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ВозвратТоваровМеждуОрганизациями",  НСтр("ru = 'Возврат товаров между организациями';
																												|en = 'Goods return — Intercompany'"),  "ИспользоватьПередачиТоваровМеждуОрганизациями");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ПеремещениеТоваров",                НСтр("ru = 'Перемещение товаров';
																												|en = 'Goods transfer'"),                  "ИспользоватьПеремещениеТоваров");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ПоступлениеТоваровОтХранителя",     НСтр("ru = 'Поступление товаров от хранителя';
																												|en = 'VMI return'"),     "ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи" + ИнтеграцияИСУТКлиентСервер.ИмяФункицональнойОпцииИспользоватьПроизводствоНаСтороне25());
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ВыкупТоваровХранителем",            НСтр("ru = 'Выкуп товаров хранителем';
																												|en = 'Sales invoice — VMI sold'"),             "ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи" + ИнтеграцияИСУТКлиентСервер.ИмяФункицональнойОпцииИспользоватьПроизводствоНаСтороне25());
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды, "РеализацияТоваровУслуг",            НСтр("ru = 'Реализацию товаров услуг';
																												|en = 'Sales of goods services'"));
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды, "ВозвратТоваровПоставщику",          НСтр("ru = 'Возврат товаров поставщику';
																												|en = 'Return of goods to vendor'"));
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды, "ОтгрузкаТоваровСХранения",          НСтр("ru = 'Отгрузку товаров с хранения';
																												|en = 'VMI pick-up request from vendor'"),          "ИспользоватьОтветственноеХранениеВПроцессеЗакупки");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды, "ПередачаТоваровХранителю",          НСтр("ru = 'Передачу товаров';
																												|en = 'Transfer of goods'"),                     "ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи,ИспользоватьКомиссиюПриПродажах" + ИнтеграцияИСУТКлиентСервер.ИмяФункицональнойОпцииИспользоватьПроизводствоНаСтороне25());
	
	//++ НЕ УТ
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,  "ДвижениеПродукцииИМатериалов",     НСтр("ru = 'Движение продукции и материалов';
																												|en = 'Movement of products and materials'"),      "ИспользоватьУправлениеПроизводством2_2");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды, "ДвижениеПродукцииИМатериалов",     НСтр("ru = 'Движение продукции и материалов';
																												|en = 'Movement of products and materials'"),      "ИспользоватьУправлениеПроизводством2_2");
	
	//++ Устарело_Переработка24
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ПоступлениеОтПереработчика",        НСтр("ru = 'Поступление от переработчика';
																												|en = 'Goods receipt — External subcontracting'"),         "ИспользоватьПроизводствоНаСтороне");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ВозвратСырьяОтПереработчика",       НСтр("ru = 'Возврат сырья от переработчика';
																												|en = 'Goods return — Subcontracting services received'"),       "ИспользоватьПроизводствоНаСтороне");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ПередачаСырьяПереработчику",        НСтр("ru = 'Передачу сырья переработчику';
																												|en = 'Customer stock fill-up'"),         "ИспользоватьПроизводствоНаСтороне");
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды, "ПередачаСырьяПереработчику",       НСтр("ru = 'Передачу сырья переработчику';
																												|en = 'Customer stock fill-up'"),         "ИспользоватьПроизводствоНаСтороне");
	//-- Устарело_Переработка24
	
	//-- НЕ УТ
	
КонецПроцедуры

// Устанавливает видимость команд динамически формируемых для создания документов на основании.
// 
// Параметры:
// 	Форма   - ФормаКлиентскогоПриложения - Форма на которой находятся вызова команд.
// 	Команды - Структура - структура команд динамически формируемых для создания документов на основании.
//
Процедура УправлениеВидимостьюКомандОформлениеСДИЗЗЕРНО(Форма, Команды) Экспорт
	
	Объект          = Форма.Объект;
	ЭтоИмпорт       = (Объект.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗИмпорт"));
	ЭтоРФ           = (Объект.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ"));
	ЭтоЭлеватор     = (Объект.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭлеватор"));
	
	ТолькоПеревозка       = (Объект.Перевозка И Не Объект.Приемка И Не Объект.Отгрузка И Не Объект.Реализация);
	ТолькоПриемкаОтгрузка = (Не Объект.Перевозка И Объект.Приемка И Объект.Отгрузка И Не Объект.Реализация);
	ТолькоОтгрузка        = (Не Объект.Перевозка И Не Объект.Приемка И Объект.Отгрузка И Не Объект.Реализация);
	
	Для Каждого КлючИЗначение Из Форма.НастройкиВыполненияПодключаемыхКомандИС.Команды Цикл
		
		Если КлючИЗначение.Значение.ИмяМетаданных = "ФормированиеПартийЗЕРНО" Тогда
			Форма.Элементы[КлючИЗначение.Ключ].Видимость = ЭтоИмпорт;
		ИначеЕсли КлючИЗначение.Значение.ИмяМетаданных = "РеализацияТоваровУслуг" Тогда
			Форма.Элементы[КлючИЗначение.Ключ].Видимость = Объект.Реализация;
		ИначеЕсли КлючИЗначение.Значение.ИмяМетаданных = "ВозвратТоваровПоставщику" Тогда
			Форма.Элементы[КлючИЗначение.Ключ].Видимость = Объект.Реализация;
		ИначеЕсли КлючИЗначение.Значение.ИмяМетаданных = "ОтгрузкаТоваровСХранения" Тогда
			Форма.Элементы[КлючИЗначение.Ключ].Видимость = ТолькоОтгрузка И ЭтоЭлеватор Или ТолькоПеревозка И ЭтоРФ;
		ИначеЕсли КлючИЗначение.Значение.ИмяМетаданных = "ПередачаТоваровХранителю" Тогда
			Форма.Элементы[КлючИЗначение.Ключ].Видимость = ТолькоПеревозка Или Объект.Приемка;
		ИначеЕсли КлючИЗначение.Значение.ИмяМетаданных = "ПередачаТоваровМеждуОрганизациями" Тогда
			Форма.Элементы[КлючИЗначение.Ключ].Видимость = Объект.Реализация;
		ИначеЕсли КлючИЗначение.Значение.ИмяМетаданных = "ВозвратТоваровМеждуОрганизациями" Тогда
			Форма.Элементы[КлючИЗначение.Ключ].Видимость = Объект.Реализация;
		ИначеЕсли КлючИЗначение.Значение.ИмяМетаданных = "ПеремещениеТоваров" Тогда
			Форма.Элементы[КлючИЗначение.Ключ].Видимость = ТолькоПеревозка Или ТолькоПриемкаОтгрузка;
		ИначеЕсли КлючИЗначение.Значение.ИмяМетаданных = "ПоступлениеТоваровОтХранителя" Тогда
			Форма.Элементы[КлючИЗначение.Ключ].Видимость = ТолькоПеревозка Или ТолькоПриемкаОтгрузка;
		ИначеЕсли КлючИЗначение.Значение.ИмяМетаданных = "ВыкупТоваровХранителем" Тогда
			Форма.Элементы[КлючИЗначение.Ключ].Видимость = Объект.Реализация;
		ИначеЕсли КлючИЗначение.Значение.ИмяМетаданных = "ДвижениеПродукцииИМатериалов" Тогда
			Форма.Элементы[КлючИЗначение.Ключ].Видимость = ТолькоПеревозка;
		ИначеЕсли КлючИЗначение.Значение.ИмяМетаданных = "ПоступлениеОтПереработчика" Тогда
			Форма.Элементы[КлючИЗначение.Ключ].Видимость = ТолькоПеревозка;
		ИначеЕсли КлючИЗначение.Значение.ИмяМетаданных = "ВозвратСырьяОтПереработчика" Тогда
			Форма.Элементы[КлючИЗначение.Ключ].Видимость = ТолькоПеревозка;
		ИначеЕсли КлючИЗначение.Значение.ИмяМетаданных = "ПередачаСырьяПереработчику" Тогда
			Форма.Элементы[КлючИЗначение.Ключ].Видимость = ТолькоПеревозка;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеПартийЗЕРНО

// Заполняет структуру команд для динамического формирования доступных для создания документов на основании.
// 
// Параметры:
// 	Команды - Структура - Исходящий, структура команд динамически формируемых для создания документов на основании.
//
Процедура КомандыФормированиеПартийЗЕРНО(Команды) Экспорт 
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ВнесениеСведенийОСобранномУрожаеЗЕРНО",  НСтр("ru = 'Внесение сведений о собранном урожае';
																													|en = 'Enter information about the harvested crop'"));
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ОприходованиеИзлишковТоваров",           НСтр("ru = 'Оприходование излишков товаров';
																													|en = 'Stock surplus recognition'"));
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ПересортицаТоваров",                     НСтр("ru = 'Пересортицу товаров';
																													|en = 'Stock reclass'"));
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ПрочееОприходованиеТоваров",             НСтр("ru = 'Прочее оприходование товаров';
																													|en = 'Other receipt of goods'"),    "ИспользоватьПрочееОприходованиеТоваров");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ЗаказПоставщику",                        НСтр("ru = 'Заказ поставщику';
																													|en = 'Purchase order'"),                "ИспользоватьЗаказыПоставщикам");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ПорчаТоваровУХранителя",                 НСтр("ru = 'Порчу товаров у хранителя';
																													|en = 'VMI quality change'"),       "ИспользоватьПорчуТоваровУХранителей,ИспользоватьКачествоТоваров");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ПересортицаТоваровУХранителя",           НСтр("ru = 'Пересортицу товаров у хранителя';
																													|en = 'Stock reclass at custodian'"), "ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи" + ИнтеграцияИСУТКлиентСервер.ИмяФункицональнойОпцииИспользоватьПроизводствоНаСтороне25());
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ОприходованиеИзлишковТоваровУХранителя", НСтр("ru = 'Оприходование излишков товаров у хранителя/комиссионера';
																													|en = 'Recognize inventory surplus at custodian/consignee'"), "ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи");
//	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(
//		Команды, "ВнесениеСведенийОСобранномУрожаеЗЕРНО", НСтр("ru = 'Внесение сведений о собранном урожае'"));
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды, "ОприходованиеИзлишковТоваров", НСтр("ru = 'Оприходование излишков товаров';
																											|en = 'Stock surplus recognition'"));
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды, "ПрочееОприходованиеТоваров",   НСтр("ru = 'Прочее оприходование товаров';
																											|en = 'Other receipt of goods'"), "ИспользоватьПрочееОприходованиеТоваров");	

КонецПроцедуры

// Устанавливает видимость команд динамически формируемых для создания документов на основании.
// 
// Параметры:
// 	Форма   - ФормаКлиентскогоПриложения - Форма на которой находятся вызова команд.
// 	Команды - Структура - структура команд динамически формируемых для создания документов на основании.
//
Процедура УправлениеВидимостьюКомандФормированиеПартийЗЕРНО(Форма, Команды) Экспорт
	
	Операция = Форма.Объект.Операция;
	
	Для Каждого КлючИЗначение Из Форма.НастройкиВыполненияПодключаемыхКомандИС.Команды Цикл
		
		ИмяМетаданных = КлючИЗначение.Значение.ИмяМетаданных;
		Элемент       = Форма.Элементы[КлючИЗначение.Ключ];
		
		Если Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийЗЕРНО.ФормированиеПартииПриСбореУрожая")
			Или Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийЗЕРНО.ФормированиеПартииПоРезультатамГосмониторинга") Тогда
			Элемент.Видимость = (ИмяМетаданных = "ВнесениеСведенийОСобранномУрожаеЗЕРНО");
		ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийЗЕРНО.ФормированиеПартииИмпорт") Тогда
			Элемент.Видимость = (ИмяМетаданных = "ЗаказПоставщику");
		ИначеЕсли ИмяМетаданных = "ВнесениеСведенийОСобранномУрожаеЗЕРНО" ИЛИ ИмяМетаданных = "ЗаказПоставщику" Тогда
			Элемент.Видимость = Ложь;
		Иначе
			Элемент.Видимость = Истина;
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область СписаниеПартийЗЕРНО

// Заполняет структуру команд для динамического формирования доступных для создания документов на основании.
// 
// Параметры:
// 	Команды - Структура - Исходящий, структура команд динамически формируемых для создания документов на основании.
//
Процедура КомандыСписаниеПартийЗЕРНО(Команды) Экспорт
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,  "ВнутреннееПотребление",           НСтр("ru = 'Внутреннее потребление';
																												|en = 'Inventory consumption'"),          "ИспользоватьВнутреннееПотребление");	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,  "ПересортицаТоваров",              НСтр("ru = 'Пересортицу товаров';
																												|en = 'Stock reclass'"));
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,  "ПорчаТоваров",                    НСтр("ru = 'Порчу товаров';
																												|en = 'Stock quality change'"),                   "ИспользоватьКачествоТоваров");	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,  "СписаниеНедостачТоваров",         НСтр("ru = 'Списание недостач товаров';
																												|en = 'Stock shortage recognition'"));
		
	//++ НЕ УТ
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ПроизводствоБезЗаказа",       НСтр("ru = 'Производство без заказа';
																											|en = 'Backflush production'"),      "ИспользоватьУправлениеПроизводством2_2");
	//-- НЕ УТ
		
	//++ НЕ УТКА
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ЭтапПроизводства2_2",         НСтр("ru = 'Этап производства';
																											|en = 'Production stage'"),            "ИспользоватьУправлениеПроизводством2_2");
	//-- НЕ УТКА
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,  "ПорчаТоваровУХранителя",          НСтр("ru = 'Порчу товаров у хранителя';
																												|en = 'VMI quality change'"),            "ИспользоватьПорчуТоваровУХранителей,ИспользоватьКачествоТоваров");
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,  "ПересортицаТоваровУХранителя",    НСтр("ru = 'Пересортицу товаров у хранителя';
																												|en = 'Stock reclass at custodian'"),      "ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи" + ИнтеграцияИСУТКлиентСервер.ИмяФункицональнойОпцииИспользоватьПроизводствоНаСтороне25());
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды,  "ОтчетОСписанииТоваровУХранителя", НСтр("ru = 'Отчет о списании товаров у хранителя';
																												|en = 'Customer stock adjustment'"), "ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи" + ИнтеграцияИСУТКлиентСервер.ИмяФункицональнойОпцииИспользоватьПроизводствоНаСтороне25());
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды, "ВнутреннееПотребление",           НСтр("ru = 'Внутреннее потребление';
																												|en = 'Inventory consumption'"), "ИспользоватьВнутреннееПотребление");	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды, "СписаниеНедостачТоваров",         НСтр("ru = 'Списание недостач товаров';
																												|en = 'Stock shortage recognition'"));
		
КонецПроцедуры

#КонецОбласти

#Область ВнесениеСведенийОСобранномУрожаеЗЕРНО

// Заполняет структуру команд для динамического формирования доступных для создания документов на основании.
// 
// Параметры:
// 	Команды - Структура - Исходящий, структура команд динамически формируемых для создания документов на основании.
//
Процедура КомандыВнесениеСведенийОСобранномУрожаеЗЕРНО(Команды) Экспорт 
	
	//++ НЕ УТ
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ПроизводствоБезЗаказа",       НСтр("ru = 'Производство без заказа';
																											|en = 'Backflush production'"),      "ИспользоватьУправлениеПроизводством2_2");
	//-- НЕ УТ
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ПрочееОприходованиеТоваров",  НСтр("ru = 'Прочее оприходование товаров';
																											|en = 'Other receipt of goods'"), "ИспользоватьПрочееОприходованиеТоваров");
	
	//++ НЕ УТКА
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ЭтапПроизводства2_2",         НСтр("ru = 'Этап производства';
																											|en = 'Production stage'"),            "ИспользоватьУправлениеПроизводством2_2");
	//-- НЕ УТКА
	
	//++ НЕ УТ
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды, "ПроизводствоБезЗаказа",       НСтр("ru = 'Производство без заказа';
																											|en = 'Backflush production'"),      "ИспользоватьУправлениеПроизводством2_2");
	//-- НЕ УТ
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеПартийПриПроизводствеЗЕРНО

// Заполняет структуру команд для динамического формирования доступных для создания документов на основании.
// 
// Параметры:
// 	Команды - Структура - Исходящий, структура команд динамически формируемых для создания документов на основании.
//
Процедура КомандыФормированиеПартийПриПроизводствеЗЕРНО(Команды) Экспорт 
	
	//++ НЕ УТ
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ПроизводствоБезЗаказа", НСтр("ru = 'Производство без заказа';
																									|en = 'Backflush production'"),   "ИспользоватьУправлениеПроизводством2_2");
	//-- НЕ УТ
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "СборкаТоваров",         НСтр("ru = 'Сборку (разборку) товаров';
																									|en = 'Goods kitting (reverse kitting)'"), "ИспользоватьСборкуРазборку");
	//++ НЕ УТКА
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуВыбрать(Команды, "ЭтапПроизводства2_2",   НСтр("ru = 'Этап производства';
																									|en = 'Production stage'"),         "ИспользоватьУправлениеПроизводством2_2");
	//-- НЕ УТКА
	
	ПодключаемыеКомандыИСКлиентСервер.ДобавитьКомандуОформить(Команды, "СборкаТоваров",        НСтр("ru = 'Сборку (разборку) товаров';
																									|en = 'Goods kitting (reverse kitting)'"), "ИспользоватьСборкуРазборку");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
