#Область ПрограммныйИнтерфейс

// Обработчик команд, добавленных динамически.
//
// (См. ОтчетыКлиентПереопределяемый.ОбработчикКоманды).
//
Процедура ОбработчикКоманды(ЭтаФорма, Команда, Результат) Экспорт
	
	//++ Локализация
	ПолноеИмяОтчета = ЭтаФорма.НастройкиОтчета.ПолноеИмя;

	// Вызов подключаемых команд отчетов
	Если ПолноеИмяОтчета = "Отчет.СверкаОборотовМУиБУ" Тогда
		ПараметрыФормы = МеждународныйУчетКлиент.ПараметрыОткрытияФормНастройкиПроводок();
		ПараметрКомпоновки = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(ЭтаФорма.Отчет.КомпоновщикНастроек, "ПланСчетов");
		Если ПараметрКомпоновки <> Неопределено И ПараметрКомпоновки.Использование Тогда
			ПараметрыФормы.ПланСчетов = ПараметрКомпоновки.Значение;
		КонецЕсли;
		
		Если Команда.Имя = "НастройкаСоответствияСчетов" Тогда
			НастройкаСоответствияСчетов(ПараметрыФормы, ЭтаФорма);
		ИначеЕсли Команда.Имя = "НастройкаСоответствияСчетовИОборотов" Тогда
			ОткрытьНастройкуСоответствияСчетовИОборотов(ПараметрыФормы, ЭтаФорма);
		КонецЕсли;

	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Обработчик расшифровки табличного документа формы отчета.
//
// (См. ОтчетыКлиентПереопределяемый.ОбработкаРасшифровки)
//
Процедура ОбработкаРасшифровки(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	ПолноеИмяОтчета = ЭтаФорма.НастройкиОтчета.ПолноеИмя;

	Если ПолноеИмяОтчета = "Отчет.СверкаОборотовМУиБУ" Тогда
		СтандартнаяОбработка = Ложь;
		
		СчетСтрокиСверки = МеждународныйУчетВызовСервера.ПолучитьСчетСтрокиСверки(ЭтаФорма.ОтчетДанныеРасшифровки,Число(Расшифровка));
		Если ЗначениеЗаполнено(СчетСтрокиСверки) Тогда
			
			Если ТипЗнч(СчетСтрокиСверки) = Тип("ПланСчетовСсылка.Международный") Тогда
				ОткрытьОтчетБухгалтерскийОтчетМеждународный(ЭтаФорма.Отчет, СчетСтрокиСверки);
			ИначеЕсли ТипЗнч(СчетСтрокиСверки) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда
				АдресРасшифровки = ПоместитьВоВременноеХранилище(Неопределено, ЭтаФорма.УникальныйИдентификатор);
				ОткрытьОтчетАнализСчетаРеглУчета(ЭтаФорма.Отчет, АдресРасшифровки, СчетСтрокиСверки);
			Иначе
				ПоказатьЗначение(Неопределено, СчетСтрокиСверки);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Открывает форму просмотра проводок регламентированного учета по документу.
// 
// Параметры:
// 	Документ - ДокументСсылка - Документ, для которого необходимо открыть форму просмотра проводок.
// 	ФормаВладелец - ФормаКлиентскогоПриложения - Владелец формы просмотра проводок.
//
Процедура ОткрытьПроводкиРеглУчета(Документ, ФормаВладелец) Экспорт
	
	//++ Локализация
	ПараметрыОтбора = Новый Структура("Регистратор", Документ);
	ПараметрыФормы = Новый Структура("Отбор",        ПараметрыОтбора);
	ОткрытьФорму("Обработка.ОтражениеДокументовВРеглУчете.Форма.ПроводкиРегламентированногоУчета", ПараметрыФормы, ФормаВладелец);
	//-- Локализация
	
КонецПроцедуры

// Открывает форму настройки соответствия счетов и оборотов международного учета регламентированным.
// 
// Параметры:
// 	ПараметрыФормы - См. МеждународныйУчетКлиент.ПараметрыОткрытияФормНастройкиПроводок
// 	ФормаВладелец - ФормаКлиентскогоПриложения - Владелец формы настройки.
// 	СчетРеглУчета - ПланСчетовСсылка, 
// 	                Неопределено - Счет регламентированного учета, для которого необходимо выполнить настройку.
// 	                               Если Неопределено, то форма открывается для настройки по всем счетам.
//
Процедура ОткрытьНастройкуСоответствияСчетовИОборотов(ПараметрыФормы, ФормаВладелец, СчетРеглУчета = Неопределено) Экспорт
	
	//++ Локализация
	Если СчетРеглУчета <> Неопределено Тогда
		ПараметрыФормы.Вставить("СчетРеглУчета",   СчетРеглУчета);
	КонецЕсли;
	ОткрытьФорму("Обработка.НастройкаСоответствияСчетовИОборотовМеждународногоУчета.Форма.Форма", ПараметрыФормы, ФормаВладелец);
	//-- Локализация
	
КонецПроцедуры


#КонецОбласти

//++ Локализация

#Область СлужебныеПроцедурыИФункции

// Вызывается для отчета "СверкаОборотовМУиБУ"
//
Процедура ОткрытьОтчетАнализСчетаРеглУчета(Отчет, ДанныеРасшифровки, Счет)
	
	ИдентификаторПараметраПериод = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.ПолучитьИдентификаторПоОбъекту(
		Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодОтчета")));
	НастройкаПериод = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ИдентификаторПараметраПериод);
	
	Отбор = Новый Структура();
	Отбор.Вставить("Счет", Счет);
	
	Если НастройкаПериод.Использование Тогда
		Отбор.Вставить("Период", НастройкаПериод.Значение);
	КонецЕсли;
	
	Для Каждого Элемент Из Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если Не ПустаяСтрока(Элемент.ИдентификаторПользовательскойНастройки) Тогда
			ИдентификаторОтбора = Элемент.ИдентификаторПользовательскойНастройки;
			НастройкаОтбора = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ИдентификаторОтбора);
			Если НастройкаОтбора.Использование Тогда
				Отбор.Вставить(Строка(Элемент.ЛевоеЗначение), НастройкаОтбора.ПравоеЗначение);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	МеждународныйУчетВызовСервера.ЗаполнитьДанныеРасшифровкиАнализаСчетаХозрасчетный(ДанныеРасшифровки, Отбор);
	
	РеглУчетКлиент.ОткрытьОтчетАнализСчета(Отбор, ДанныеРасшифровки);
	
КонецПроцедуры

// Вызывается для отчета "СверкаОборотовМУиБУ"
//
Процедура ОткрытьОтчетБухгалтерскийОтчетМеждународный(Отчет, Счет)
	
	Параметры = Новый Структура;
	Параметры.Вставить("Ресурс", "Сумма");
	Параметры.Вставить("Отбор", Новый Структура);
	Отбор = Параметры.Отбор;
	
	НастройкиОтчета = Отчет.КомпоновщикНастроек.Настройки;
	НастройкиПользователя = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки;
	
	ИдентификаторПараметраПериод = НастройкиПользователя.ПолучитьИдентификаторПоОбъекту(
		НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодОтчета")));
	
	НастройкаПериод = НастройкиПользователя.Элементы.Найти(ИдентификаторПараметраПериод);
	
	Параметры.Вставить("Счет", Счет);
	Параметры.Вставить("ПериодОтчета", НастройкаПериод.Значение);
	
	Для Каждого Элемент Из Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если Не ПустаяСтрока(Элемент.ИдентификаторПользовательскойНастройки) Тогда
			ИдентификаторОтбора = Элемент.ИдентификаторПользовательскойНастройки;
			НастройкаОтбора = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ИдентификаторОтбора);
			Если НастройкаОтбора.Использование Тогда
				Отбор.Вставить(Строка(Элемент.ЛевоеЗначение), НастройкаОтбора.ПравоеЗначение);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыРасшифровки = МеждународнаяОтчетностьВызовСервера.ПараметрыОткрытияБухгалтерскогоОтчетаМеждународногоДляРасшифровки(Счет, Параметры);		
	КлючНастроек = "РасшифровкаОтчетаСверкаОборотовМУиБУ";
	ОтчетРасшифровки = Новый Структура("ИмяОтчета, ИмяВарианта", ПараметрыРасшифровки.ИмяОтчета, ПараметрыРасшифровки.ИмяВариантаОтчета);	
	МеждународныйУчетКлиент.ОткрытьРасшифровку(ОтчетРасшифровки, ПараметрыРасшифровки.КомпоновщикНастроек, КлючНастроек, КлючНастроек);
	
КонецПроцедуры

// Открывает форму настройки соответствия счетов международного учета счетам регламентированного.
// 
// Параметры:
// 	ПараметрыФормы - см. МеждународныйУчетКлиент.ПараметрыОткрытияФормНастройкиПроводок
// 	ЭтаФорма - ФормаКлиентскогоПриложения - Владелец формы настройки. 
// 	СчетРеглУчета - ПланСчетовСсылка- Счет регламентированного учета, для которого необходимо выполнить настройку.
// 	                                  Если Неопределено, то форма открывается для настройки по всем счетам.
//
Процедура НастройкаСоответствияСчетов(ПараметрыФормы, ЭтаФорма, СчетРеглУчета = Неопределено)
	
	Если СчетРеглУчета <> Неопределено Тогда
		ПараметрыФормы.Вставить("СчетРеглУчета",   СчетРеглУчета);
	КонецЕсли;
	ОткрытьФорму("Справочник.СоответствияСчетовМеждународногоУчета.Форма.ФормаНастройкиДляОтчетаСверки", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

//-- Локализация