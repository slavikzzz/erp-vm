
#Область ПрограммныйИнтерфейс

#Область ЗначенияЗаполненияДокументов

// Возвращает данные для формирование документов "Заказ на перемещение товаров" Или "Перемещение товаров", табличная часть заполняются изделиями готовыми к отгрузке со склада.
//
// Параметры:
//  ИдентификаторыСтрок - Массив - список ключей указывающих изделия в партии перемещения товаров.
//  ТолькоВНаличии - Булево - признак, если истина, то список номенклатуры запланированной к перемещению будет отфильтрован по наличию на складе отгрузки.
// Возвращаемое значение:
//  ТаблицаЗначений - содержит структуру параметров замены:
//  	* Номенклатура			 - СправочникСсылка.Номенклатура				 - номенклатура.
//  	* Характеристика		 - СправочникСсылка.ХарактеристикиНоменклатуры	 - характеристика номенклатуры.
//  	* СкладОтгрузки			 - СправочникСсылка.Склады						 - склад отгрузки.
//  	* СкладПоступления		 - СправочникСсылка.Склады						 - склад поступления.
//  	* Назначение			 - СправочникСсылка.Назначения					 - назначение.
//  	* Обособленно			 - Булево										 - признак, "обособленное обеспечение".
//  	* КоличествоУпаковок	 - Число										 - количество в упаковках.
//  	* Количество			 - Число										 - количество в ед.хранения товара.
//
Функция ТабличнаяЧастьПеремещениеИзделийПоНоменклатурномуПлану(ИдентификаторыСтрок, ТолькоВНаличии = Ложь) Экспорт

	ТабличнаяЧастьТовары = Новый Массив();
	
	ТаблицаЗначений = СтруктураЗаказаСлужебный.ТабличнаяЧастьПеремещениеИзделийПоНоменклатурномуПлану(ИдентификаторыСтрок, ТолькоВНаличии);
	
	Для каждого Строка Из ТаблицаЗначений Цикл
		
		СтрокаТовары = Новый Структура;
		
		СтрокаТовары.Вставить("ЖелаемаяДатаПоступления", Строка.ОкончаниеПоступления);
		
		СтрокаТовары.Вставить("СкладОтправитель",	  Строка.СкладОтправитель);
		СтрокаТовары.Вставить("СкладПолучатель",	  Строка.СкладПолучатель);
		СтрокаТовары.Вставить("НачалоОтгрузки",		  '00010101');
		СтрокаТовары.Вставить("ОкончаниеПоступления", '00010101');
		
		СтрокаТовары.Вставить("Номенклатура",		  Строка.Номенклатура);
		СтрокаТовары.Вставить("Характеристика",		  Строка.Характеристика);
		СтрокаТовары.Вставить("Назначение",			  Строка.Назначение);
		СтрокаТовары.Вставить(
			"ВариантОбеспечения",
			ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.СоСклада"));
			
		СтрокаТовары.Вставить("КоличествоУпаковок", Строка.Количество);
		СтрокаТовары.Вставить("Количество",         Строка.Количество);
		
		ТабличнаяЧастьТовары.Добавить(СтрокаТовары);
		
	КонецЦикла;
	
	Возврат ТабличнаяЧастьТовары;

КонецФункции

// Возвращает данные для формирование документов "Заказ на перемещение товаров" Или "Перемещение товаров", табличная часть заполняются комплектующими готовыми к отгрузке со склада.
//
// Параметры:
//  Изделие          - Структура - данные изделия для получения списка комплектующих к перемещению.
//  ЭтапПроизводства - СправочникСсылка.ЭтапыПроизводства - дополнительный отбор комплектующих по этапу производства.
//  ТолькоВНаличии - Булево - признак, если истина, то список номенклатуры запланированной к перемещению будет отфильтрован по наличию на складе отгрузки.
//  
// Возвращаемое значение:
//  ТаблицаЗначений - см.СтруктураЗаказаВызовСервера.ТабличнаяЧастьПеремещениеИзделийПоНоменклатурномуПлану
//
Функция ТабличнаяЧастьПеремещениеКомплектующихПоНоменклатурномуПлану(Изделие, ЭтапПроизводства = Неопределено, ТолькоВНаличии = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПланПотребления.КлючНоменклатура КАК КлючНоменклатура
	|ИЗ
	|	РегистрСведений.СтруктураЗаказа КАК ПланПотребления
	|ГДЕ
	|	ПланПотребления.ВидСтроки В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление))
	|	И ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрСведений.СтруктураЗаказа КАК ПланПроизводства
	|		ГДЕ
	|			&Изделие
	|			И ПланПроизводства.ВидСтроки В (
	|					ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.ПроизводствоПродукции),
	|					ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.ПроизводствоПолуфабриката))
	|			И ПланПроизводства.КлючПартия = ПланПотребления.КлючПартия)
	|	И &Этап В (ПланПотребления.Этап, НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка))";
	
	ИмяТаблицы = "ПланПроизводства";
	ИмяПараметра = "Изделие";
	
	Список = Новый Массив();
	
	Для каждого Элемент Из Изделие Цикл
		Список.Добавить(ИмяТаблицы + "." + Элемент.Ключ + " = &" + Элемент.Ключ);
	КонецЦикла;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&" + ИмяПараметра, СтрСоединить(Список, " " + "И" + " "));
	
	Для каждого Элемент Из Изделие Цикл
		Запрос.УстановитьПараметр(Элемент.Ключ, Элемент.Значение);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Этап", ЭтапПроизводства);
	
	ТабличнаяЧастьТовары = ТабличнаяЧастьПеремещениеИзделийПоНоменклатурномуПлану(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0), ТолькоВНаличии);
	
	Возврат ТабличнаяЧастьТовары;
	
КонецФункции

#КонецОбласти

#Область Прочее

// Добавляет задания к пересчету структуры заказа на производство и запускает расчет
// 
// Параметры:
// 	ЗаказыНаПроизводство - Массив, ДокументСсылка.ЗаказНаПроизводство2_2	- заказ на производство или список заказов на производство.
//
Процедура ЗапуститьПересчетСтруктурыЗаказа(ЗаказыНаПроизводство) Экспорт
	
	РегистрыСведений.ЗаданияКОчисткеСтруктурыЗаказа.ДобавитьЗадания(ЗаказыНаПроизводство);
	
	СтруктураЗаказа.ЗапуститьРасчет();
	
КонецПроцедуры

// Добавляет задания к расчету структуры заказа на производство по спецификации и запускает расчет
// 
// Параметры:
// 	Спецификация			 - СправочникСсылка.РесурсныеСпецификации			- спецификация.
// 	ЗаказыНаПроизводство	 - Массив, ДокументСсылка.ЗаказНаПроизводство2_2	- заказ на производство или список заказов на производство.
//
Процедура ЗапуститьПересчетСтруктурыЗаказаПоСпецификации(Спецификация, ЗаказыНаПроизводство) Экспорт
	
	СписокЗаказовНаПроизводство = ОбщегоНазначенияУТКлиентСервер.Массив(ЗаказыНаПроизводство);
	
	Задания = РегистрыСведений.ЗаданияКРасчетуСтруктурыЗаказаСпецификации.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	Для каждого ЗаказНаПроизводство Из СписокЗаказовНаПроизводство Цикл
		Задание = Задания.Добавить();
		Задание.Спецификация = Спецификация;
		Задание.ЗаказНаПроизводство = ЗаказНаПроизводство;
	КонецЦикла;
	
	РегистрыСведений.ЗаданияКРасчетуСтруктурыЗаказаСпецификации.ДобавитьЗаданияПолныйРасчет(Задания, Истина);
	
	СтруктураЗаказа.ЗапуститьРасчет();
	
КонецПроцедуры

// Формирует полное представление заказа на производство.
// Формат: "Заказ № %1 от %2, дата потребности %3".
//
// Параметры:
//  НомерДокумента		 - Строка	 - номер документа.
//  ДатаДокумента		 - Дата 	 - дата документа.
//  ЖелаемаяДатаВыпуска	 - Дата 	 - желаемая дата.
//
// Возвращаемое значение:
//  Строка - полное представление заказа на производство.
//
Функция ПолноеПредставлениеЗаказа(НомерДокумента, ДатаДокумента, ЖелаемаяДатаВыпуска) Экспорт
	
	НомерЗаказа = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(НомерДокумента, Ложь, Истина);
	ДатаЗаказа  = Формат(ДатаДокумента, "ДЛФ=D");
	
	Если ЖелаемаяДатаВыпуска = '00010101' Тогда
		
		Шаблон = НСтр("ru = '№ %1 от %2';
						|en = 'No. %1 from %2'");
		Текст = СтрШаблон(Шаблон, НомерЗаказа, ДатаЗаказа);
		
	Иначе
		
		Шаблон = НСтр("ru = '№ %1 от %2, желаемая дата %3';
						|en = 'No. %1 dated %2, required date %3'");
		Текст = СтрШаблон(Шаблон, НомерЗаказа, ДатаЗаказа, Формат(ЖелаемаяДатаВыпуска, "ДЛФ=D"));
		
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции

#КонецОбласти

#КонецОбласти