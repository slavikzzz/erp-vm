////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Корректировка стоимости и амортизации ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения -
// 	ВспомогательныеРеквизиты - Структура -
Процедура ДополнитьВспомогательныеРеквизиты(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль);
	ВспомогательныеРеквизиты.Вставить("ВедетсяУчетПостоянныхИВременныхРазниц", Форма.СлужебныеПараметрыФормы.ВедетсяУчетПостоянныхИВременныхРазниц);
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС -
// 	ВспомогательныеРеквизиты - Структура -
// 	СтруктураИзмененныхРеквизитов - Структура -
// 	ПараметрыРеквизитовОбъекта - Структура -
Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	СобственныеОС = (Объект.ВидИмущества <> ПредопределенноеЗначение("Перечисление.ВидыИмущества.Арендованное"));
	
	ДоступныПараметрыЗаПериод = 
		Объект.КорректировкаСПрошлойДаты
		И СобственныеОС;
	
	Если Объект.ПараметрыЗаПериодБУ.Количество() <> 0 Тогда
		МетодНачисленияАмортизацииБУ = Объект.ПараметрыЗаПериодБУ[0].МетодНачисленияАмортизацииБУ;
	Иначе
		МетодНачисленияАмортизацииБУ = Неопределено;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПараметрыЗаПериод")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НачалоПериода")
		ИЛИ ОбновитьВсе Тогда
		
		ЕстьМетодЛинейный = Ложь;
		ЕстьМетодПропорциональноОбъему = Ложь;
		ЕстьМетодУменьшаемогоОстатка = Ложь;
		ЕстьМетодПоСуммеЧиселЛетИспользования = Ложь;
		ЕстьМетодПоЕНАОФ = Ложь;
		
		Для Каждого ДанныеСтроки Из Объект.ПараметрыЗаПериодБУ Цикл
			
			Если ДанныеСтроки.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный") Тогда
				ЕстьМетодЛинейный = Истина;
			ИначеЕсли ДанныеСтроки.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции") Тогда
				ЕстьМетодПропорциональноОбъему = Истина;
			ИначеЕсли ДанныеСтроки.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка") Тогда
				ЕстьМетодУменьшаемогоОстатка = Истина;
			ИначеЕсли ДанныеСтроки.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования") Тогда
				ЕстьМетодПоСуммеЧиселЛетИспользования = Истина;
			ИначеЕсли ДанныеСтроки.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ")
				ИЛИ ДанныеСтроки.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега") Тогда
				ЕстьМетодПоЕНАОФ = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	#Область СтраницаОсновное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВидИмущества", 
			"ВидИмущества", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное");
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СобытиеОС", 
			"СобытиеОС", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И ВспомогательныеРеквизиты.ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности
			И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное");
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПрименениеЦелевогоФинансирования", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	#КонецОбласти
	
	#Область СтраницаОС

	#Область БУ
	Если СтруктураИзмененныхРеквизитов.Свойство("ПараметрыЗаПериод")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НачалоПериода")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ДоступныПараметрыЗаПериод
			И ЕстьМетодПоЕНАОФ;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУГодоваяНормаАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//	
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ДоступныПараметрыЗаПериод
			И (ЕстьМетодЛинейный
				ИЛИ ЕстьМетодУменьшаемогоОстатка
				ИЛИ ЕстьМетодПоСуммеЧиселЛетИспользования);
				
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыЗаПериодБУГрафикАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	#КонецОбласти
	
	#Область НУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСтоимости")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаАмортизации")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаПервоначальнойСтоимости")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.КорректировкаСтоимости
			И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное")
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
					
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьНУ", 
			"ОССтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.КорректировкаАмортизации
			И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное")
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.АмортизацияНУ", 
			"ОСАмортизацияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.КорректировкаПервоначальнойСтоимости
			И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное")
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ПервоначальнаяСтоимостьНУ", 
			"ОСПервоначальнаяСтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
					
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПР
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСтоимости")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаПервоначальнойСтоимости")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаАмортизации")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаПараметровРасчетаАмортизации")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.КорректировкаСтоимости 
			И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное")
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьПР", 
			"ОССтоимостьПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.КорректировкаАмортизации 
			И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное")
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.АмортизацияПР", 
			"ОСАмортизацияПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ПоказатьПолеОтдельно = ВспомогательныеРеквизиты.ПрименяетсяФСБУ6;
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.КорректировкаПараметровРасчетаАмортизации 
			И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное")
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ПРДляВычисленияАмортизации", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСПРДляВычисленияАмортизации", 
			"Видимость", 
			ЗначениеСвойства И НЕ ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСПРДляВычисленияАмортизации_Отдельно", 
			"Видимость", 
			ЗначениеСвойства И ПоказатьПолеОтдельно, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ЦФ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСтоимости")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаАмортизации")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.КорректировкаСтоимости 
			И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное")
			И Объект.ПрименениеЦелевогоФинансирования;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьЦФ", 
			"ОССтоимостьЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И Объект.КорректировкаАмортизации 
			И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное")
			И Объект.ПрименениеЦелевогоФинансирования;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.АмортизацияЦФ", 
			"ОСАмортизацияЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ЗалоговаяСтоимость
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Арендованное"); 
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ЗалоговаяСтоимость", 
			"ОСЗалоговаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	#КонецОбласти
	
	#КонецОбласти
		
	#Область ПараметрыНУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ДоступныПараметрыЗаПериод;
					
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПараметрыЗаПериодНУ", 
			"ПараметрыЗаПериодНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокПолезногоИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияНУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"МетодНачисленияАмортизацииНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизационнаяГруппа", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтоимостьНУВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПРДляВычисленияАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПРДляВычисленияАмортизацииВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизационнаяПремия", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизационнаяПремияВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ДатаВводаВЭксплуатациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизацияНУНаНачалоПериода", 
			"АмортизацияНУНаНачалоПериода", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияНУНаНачалоПериодаВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизацияПРНаНачалоПериода", 
			"АмортизацияПРНаНачалоПериода", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияПРНаНачалоПериодаВалюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДатаВводаВЭксплуатациюНУ")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ДоступныПараметрыЗаПериод
			И Объект.ДатаВводаВЭксплуатациюНУ < '200901010000';
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ФактическийСрокИспользованияДо2009", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ФактическийСрокИспользованияДо2009Расшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияДо2009", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АмортизацияДо2009Валюта", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
		
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения -
// 	СтруктураИзмененныхРеквизитов - Структура -
Процедура НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	СлужебныеПараметрыФормы = Форма.СлужебныеПараметрыФормы;

	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			?(СлужебныеПараметрыФормы.ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности,
				НСтр("ru = 'Стоимость (собственные средства)';
					|en = 'Cost (own funds)'"),
				НСтр("ru = 'Стоимость';
					|en = 'Profit'"));
				
		Элементы.ОСГруппаСтоимость.Заголовок = ЗначениеСвойства;
		
		//
		ЗначениеСвойства = 
			?(СлужебныеПараметрыФормы.ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности,
				НСтр("ru = 'Амортизация (собственные средства)';
					|en = 'Depreciation (own funds)'"),
				НСтр("ru = 'Амортизация';
					|en = 'Depreciation'"));
				
		Элементы.ОСГруппаАмортизация.Заголовок = ЗначениеСвойства;
		
	КонецЕсли;
	
	#Область СтраницаПараметры
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияДляВычисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НачалоПериода")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПараметрыЗаПериод")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ПараметрыЗаПериодБУ.Количество() > 0 Тогда
			Форма.СрокИспользованияБУРасшифровка = 
				ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(Объект.ПараметрыЗаПериодБУ[0].СрокИспользованияДляВычисленияАмортизации);
		Иначе
			Форма.СрокИспользованияБУРасшифровка = "";
		КонецЕсли;
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокПолезногоИспользованияНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КорректировкаСПрошлойДаты")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НачалоПериода")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПараметрыЗаПериод")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ПараметрыЗаПериодНУ.Количество() > 0 Тогда
			Форма.СрокИспользованияНУРасшифровка = 
				ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(Объект.ПараметрыЗаПериодНУ[0].СрокПолезногоИспользованияНУ);
		Иначе
			Форма.СрокИспользованияНУРасшифровка = "";
		КонецЕсли;
			
	КонецЕсли;
	
	#КонецОбласти
		
	#Область ПараметрыБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ВалютаРеглПредставление = СлужебныеПараметрыФормы.ВалютаРеглПредставление;
		
		Элементы.ПараметрыЗаПериодБУАмортизацияЦФ.Заголовок = СтрШаблон(НСтр("ru = 'Целевые средства в амортизации (%1)';
																			|en = 'Target funds in depreciation (%1)'"), ВалютаРеглПредставление);
		
		Элементы.ПараметрыЗаПериодБУСтоимостьПР.Заголовок = СтрШаблон(НСтр("ru = 'Постоянные разницы (%1)';
																			|en = 'Permanent differences (%1)'"), ВалютаРеглПредставление);
		Элементы.ПараметрыЗаПериодБУСтоимостьЦФ.Заголовок = СтрШаблон(НСтр("ru = 'Целевые средства в стоимости (%1)';
																			|en = 'Target funds in cost (%1)'"), ВалютаРеглПредставление);
		Элементы.ПараметрыЗаПериодБУСтоимостьПРЦФ.Заголовок = СтрШаблон(НСтр("ru = 'Постоянные разницы целевых средств (%1)';
																			|en = 'Permanent differences of target funds (%1)'"), ВалютаРеглПредставление);
		
		Элементы.ПараметрыЗаПериодБУЛиквидационнаяСтоимость.Заголовок = СтрШаблон(НСтр("ru = 'Ликвидационная стоимость (%1)';
																						|en = 'Residual value (%1)'"), ВалютаРеглПредставление);

		Элементы.ПараметрыЗаПериодБУГруппаИзменениеАмортизации.Заголовок = СтрШаблон(НСтр("ru = 'Изменение амортизации (%1)';
																							|en = 'Change depreciation (%1)'"), ВалютаРеглПредставление);

		Если НЕ Элементы.ПараметрыЗаПериодБУАмортизацияПРИзменение.Видимость
			И НЕ Элементы.ПараметрыЗаПериодБУАмортизацияЦФИзменение.Видимость
			И НЕ Элементы.ПараметрыЗаПериодБУАмортизацияПРЦФИзменение.Видимость Тогда
				
			Элементы.ПараметрыЗаПериодБУГруппаИзменениеАмортизации.ОтображатьВШапке = Ложь;
			Элементы.ПараметрыЗаПериодБУАмортизацияРеглИзменение.Заголовок = СтрШаблон(НСтр("ru = 'Изменение амортизации (%1)';
																							|en = 'Change depreciation (%1)'"), ВалютаРеглПредставление);
			
		Иначе
			Элементы.ПараметрыЗаПериодБУГруппаИзменениеАмортизации.ОтображатьВШапке = Истина;
			Элементы.ПараметрыЗаПериодБУАмортизацияРеглИзменение.Заголовок = НСтр("ru = 'БУ';
																					|en = 'AC'");
		КонецЕсли;

	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыНУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ВалютаРеглПредставление = СлужебныеПараметрыФормы.ВалютаРеглПредставление;
		
		Элементы.ПараметрыЗаПериодБУАмортизацияПР.Заголовок = СтрШаблон(НСтр("ru = 'Постоянные разницы в амортизации (%1)';
																			|en = 'Permanent differences in depreciation (%1)'"), ВалютаРеглПредставление);
		Элементы.ПараметрыЗаПериодБУПРДляВычисленияАмортизации.Заголовок = СтрШаблон(НСтр("ru = 'Постоянные разницы (%1)';
																							|en = 'Permanent differences (%1)'"), ВалютаРеглПредставление);

		Элементы.ПараметрыЗаПериодНУАмортизацияНУ.Заголовок = СтрШаблон(НСтр("ru = 'Амортизация (%1)';
																			|en = 'Depreciation (%1)'"), ВалютаРеглПредставление);
		Элементы.ПараметрыЗаПериодНУСтоимостьНУ.Заголовок = СтрШаблон(НСтр("ru = 'На начало месяца (%1)';
																			|en = 'As of the month start (%1)'"), ВалютаРеглПредставление);
		
	КонецЕсли;

	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения -
// 	ВспомогательныеРеквизиты - Структура -
// 	СписокРеквизитов - Массив -
Процедура ПриИзмененииРеквизитов(Форма, ВспомогательныеРеквизиты, СписокРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	
	// ВАЖНО: Порядок имеет значение!
	
	Если СписокРеквизитов.Найти("ОтражатьВРеглУчете") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("ОтражатьВУпрУчете") <> Неопределено Тогда
	
		Если Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Арендованное")
			И Объект.ОтражатьВУпрУчете Тогда
			Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное");
			СписокРеквизитов.Добавить("ВидИмущества");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ВидИмущества") <> Неопределено Тогда
	
		Если Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Арендованное")
			И Объект.ОтражатьВУпрУчете Тогда
				
			Объект.ОтражатьВУпрУчете = Ложь;
			СписокРеквизитов.Добавить("ОтражатьВУпрУчете");
		КонецЕсли;
		
		Если Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Арендованное")
			И Объект.КорректировкаСПрошлойДаты Тогда
				
			Объект.КорректировкаСПрошлойДаты = Ложь;
			Объект.НачалоПериода = '000101010000';
			СписокРеквизитов.Добавить("КорректировкаСПрошлойДаты,НачалоПериода");
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС -
// 	ПараметрыРеквизита - см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта
// 	Действие - Строка -
// 	ИзмененныеРеквизиты - Массив -
Процедура ЗаполнитьРеквизитыВЗависимостиОтСвойств(Объект, ПараметрыРеквизита, Действие, ИзмененныеРеквизиты) Экспорт

	//++ Локализация
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ВидИмущества" Тогда
		Если Действие = "Заполнить" Тогда
			Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное");
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли; 
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти
