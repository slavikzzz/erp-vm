#Область СлужебныеПроцедурыИФункции

// Заполняет РегламентированныйОтчетБухОтчетность по форме ФормаОтчета2025Кв1.
//
// Параметры:
//  ПараметрыОтчета - Структура - набор именованных параметров для определения вариантов заполнения отчета:
//    * Организация - СправочникСсылка.Организации
//    * ДатаНачалаПериодаОтчета - Дата
//    * ДатаКонцаПериодаОтчета - Дата, МоментВремениСУточнениемПериода -
//    * ГруппаОрганизаций - СписокЗначений из  СправочникСсылка.Организации
//    * ЗаполняемыеРазделы - Структура
//    * АдресВоВременномХранилище - Строка
//    * ЭтоБалансНекоммерческойОрганизации - Булево
//  Контейнер - ДеревоЗначений - данные разделов.
//
Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	ОсновнаяОрганизация = ПараметрыОтчета.Организация;
	
	НачалоПериодаОтчета = ПараметрыОтчета.ДатаНачалаПериодаОтчета;
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаКонцаПериодаОтчета;
	КонецПериодаОтчета = ДатаКонцаПериодаОтчета;
	
	НачалоПериодаПредыдущегоГода = НачалоГода(ДобавитьМесяц(НачалоПериодаОтчета, -12));
	ДатаКонцаПредыдущегоГода = КонецГода(НачалоПериодаПредыдущегоГода);
	КонецПериодаПредыдущегоГода = ДатаКонцаПредыдущегоГода;
	
	НачалоПериодаГодаПредшествующегоПредыдущему = НачалоГода(ДобавитьМесяц(НачалоПериодаПредыдущегоГода, -12));
	ДатаКонцаГодаПредшествующегоПредыдущему = КонецГода(НачалоПериодаГодаПредшествующегоПредыдущему);
	КонецПериодаГодаПредшествующегоПредыдущему = ДатаКонцаГодаПредшествующегоПредыдущему;
	
	ДоступныеОрганизации = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсеОрганизацииДанныеКоторыхДоступныПоRLS(Ложь);
	
	ПолныйСписокОрганизаций = Новый Массив; // Массив из СправочникСсылка.Организации
	
	Если ДоступныеОрганизации.Найти(ОсновнаяОрганизация) <> Неопределено Тогда
		ПолныйСписокОрганизаций.Добавить(ОсновнаяОрганизация);
	КонецЕсли;
	
	Если ПараметрыОтчета.Свойство("ГруппаОрганизаций") Тогда
		Для Каждого Организация Из ПараметрыОтчета.ГруппаОрганизаций Цикл
			Если ДоступныеОрганизации.Найти(Организация.Значение) <> Неопределено Тогда
				ПолныйСписокОрганизаций.Добавить(Организация.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	СчетаСРеквизитами = ЗаполнениеБухгалтерскойОтчетностиИтоги.СчетаСРеквизитами();
	
	ЗаполнятьБаланс = ПараметрыОтчета.ЗаполняемыеРазделы.Баланс;
	ЗаполнятьОИК = ПараметрыОтчета.ЗаполняемыеРазделы.ОИК;
	
	ЗаполнятьПредыдущиеПериоды = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	
	Для Каждого Организация Из ПолныйСписокОрганизаций Цикл
		// Бухгалтерский баланс.
		Если ЗаполнятьБаланс Тогда
			ПараметрыЗаполненияБаланс = НовыеПараметрыЗаполненияБаланс();
			ПараметрыЗаполненияБаланс.Организация = Организация;
			ПараметрыЗаполненияБаланс.Контейнер = Контейнер;
			ПараметрыЗаполненияБаланс.КонецОтчетногоПериода = КонецДня(ДатаКонцаПериодаОтчета);
			ПараметрыЗаполненияБаланс.ЭтоБалансНекоммерческойОрганизации =
				ПараметрыОтчета.ЭтоБалансНекоммерческойОрганизации;
			ПараметрыЗаполненияБаланс.РазделятьАвансыПоВидамАктивов =
				РегламентированнаяОтчетность.АвансыРазделеныПоВидамАктивов(Организация, ДатаКонцаПериодаОтчета);
			
			ПараметрыЗаполненияБаланс.СчетаСРеквизитами = СчетаСРеквизитами;
			
			ПараметрыЗаполненияБаланс.Графа = "04";
			ПараметрыЗаполненияБаланс.ЗаголовокГрафы =
				"На " + Формат(ДатаКонцаПериодаОтчета, "ДФ = 'дд ММММ гггг'")+ " г.";
			ПараметрыЗаполненияБаланс.НачалоПериодаОтчета = НачалоПериодаОтчета;
			ПараметрыЗаполненияБаланс.КонецПериодаОтчета = КонецПериодаОтчета;
			
			ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_БалансПоГрафе(ПараметрыЗаполненияБаланс);
			
			Если ЗаполнятьПредыдущиеПериоды Тогда
				ПараметрыЗаполненияБаланс.Графа = "05";
				ПараметрыЗаполненияБаланс.ЗаголовокГрафы =
					"На " + Формат(ДатаКонцаПредыдущегоГода, "ДФ = 'дд ММММ гггг'")+ " г.";
				ПараметрыЗаполненияБаланс.НачалоПериодаОтчета = НачалоПериодаПредыдущегоГода;
				ПараметрыЗаполненияБаланс.КонецПериодаОтчета = КонецПериодаПредыдущегоГода;
				
				ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_БалансПоГрафе(ПараметрыЗаполненияБаланс);
				
				ПараметрыЗаполненияБаланс.Графа = "06";
				ПараметрыЗаполненияБаланс.ЗаголовокГрафы =
					"На " + Формат(ДатаКонцаГодаПредшествующегоПредыдущему, "ДФ = 'дд ММММ гггг'")+ " г.";
				ПараметрыЗаполненияБаланс.НачалоПериодаОтчета = НачалоПериодаГодаПредшествующегоПредыдущему;
				ПараметрыЗаполненияБаланс.КонецПериодаОтчета = КонецПериодаГодаПредшествующегоПредыдущему;
				
				ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_БалансПоГрафе(ПараметрыЗаполненияБаланс);
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Отчет об изменениях капитала.
		Если ЗаполнятьОИК Тогда
			ПараметрыЗаполненияОИК = НовыеПараметрыЗаполненияОИК();
			ПараметрыЗаполненияОИК.Организация = Организация;
			ПараметрыЗаполненияОИК.Контейнер = Контейнер;
			ПараметрыЗаполненияОИК.НачалоОтчетногоПериода = НачалоПериодаОтчета;
			ПараметрыЗаполненияОИК.КонецОтчетногоПериода = КонецДня(ДатаКонцаПериодаОтчета);
			ПараметрыЗаполненияОИК.СчетаСРеквизитами = СчетаСРеквизитами;
			
			ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_ОИК(ПараметрыЗаполненияОИК);
			
		КонецЕсли;
		
	КонецЦикла;
	
	КонтекстОтчета = КонтекстОтчета(
		НачалоПериодаОтчета,
		КонецПериодаОтчета,
		ЗаполнятьПредыдущиеПериоды,
		НачалоПериодаПредыдущегоГода,
		КонецПериодаПредыдущегоГода,
		ПолныйСписокОрганизаций);
		
	ЗаполнитьОтчетПоНастройкам(
		Контейнер,
		ПараметрыОтчета.ЗаполняемыеРазделы,
		КонтекстОтчета,
		ПолныйСписокОрганизаций,
		ПараметрыОтчета.НастройкиЗаполненияСтрок);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Контейнер", Контейнер);
	
	ПоместитьВоВременноеХранилище(СтруктураДанных, ПараметрыОтчета.АдресВоВременномХранилище);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_БалансПоГрафе(ПараметрыЗаполнения)
	
	ИмяРаздела = "Баланс";
	
	Организация = ПараметрыЗаполнения.Организация;
	НачалоПериодаОтчета = ПараметрыЗаполнения.НачалоПериодаОтчета;
	КонецПериодаОтчета = ПараметрыЗаполнения.КонецПериодаОтчета;
	
	ОбщиеИтогиПоСчетам = РассчитатьБухгалтерскиеВеличиныФормаОтчета2025Кв1_Баланс(ПараметрыЗаполнения);
	
	ПроцессорПоказателя = НовыйПроцессорПоказателя();
	ПроцессорПоказателя.СчетаСРеквизитами = ПараметрыЗаполнения.СчетаСРеквизитами;
	ПроцессорПоказателя.ПараметрыСчетов = ПараметрыСчетов_Баланс2025Кв1();
	ПроцессорПоказателя.ТекстыРасшифровки = ТекстыРасшифровкиПоказателей(ПараметрыЗаполнения);
	ПроцессорПоказателя.РассчитанныеЗначения = БухгалтерскиеИтоги_Баланс2025Кв1(Организация,
		КонецПериодаОтчета, ОбщиеИтогиПоСчетам);
	ПроцессорПоказателя.Организация = Организация;
	ПроцессорПоказателя.ИмяРаздела = ИмяРаздела;
	ПроцессорПоказателя.НачалоПериода = НачалоПериодаОтчета;
	ПроцессорПоказателя.КонецПериода  = КонецПериодаОтчета;
	
	ПараметрыЗаполнения.ПроцессорПоказателя = ПроцессорПоказателя;
	
	ПараметрыАлгоритмов = ПараметрыАлгоритмовБаланса2025(ПараметрыЗаполнения, ОбщиеИтогиПоСчетам);
	ПараметрыЗаполнения.Вставить("Алгоритмы", АлгоритмыБО2025Кв1_Баланс(ПараметрыАлгоритмов));
	ПараметрыЗаполнения.Вставить("РассчитанныеПараметры", ОбщиеИтогиПоСчетам);
	
	ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_БалансПоГрафеПоАлгоритмам(ПараметрыЗаполнения);
	
КонецПроцедуры

// Конструктор параметров заполнения бухгалтерского баланса.
// 
// Возвращаемое значение:
//   Структура - Новые параметры заполнения баланс:
//     * Организация - СправочникСсылка.Организации 
//     * Контейнер - ДеревоЗначений
//     * СчетаСРеквизитами - ТаблицаЗначений:
//       ** УсловныйКод - Строка
//       ** Ссылка - ПланСчетовСсылка.Хозрасчетный
//       ** Код - Строка
//       ** Наименование - Строка
//     * Графа - Строка
//     * ЗаголовокГрафы - Строка
//     * НачалоПериодаОтчета - Дата
//     * КонецПериодаОтчета - Дата
//                          - МоментВремениСУточнениемПериода
//     * ПроцессорПоказателя - Структура
//     * Алгоритмы - Массив из Структура
//     * РассчитанныеПараметры - Структура
//
Функция НовыеПараметрыЗаполненияБаланс()
	
	ПараметрыЗаполнения = Новый Структура;
	
	ПараметрыЗаполнения.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	ПараметрыЗаполнения.Вставить("Контейнер", Новый ДеревоЗначений);
	ПараметрыЗаполнения.Вставить("ЭтоБалансНекоммерческойОрганизации", Ложь);
	ПараметрыЗаполнения.Вставить("РазделятьАвансыПоВидамАктивов", Ложь);
	
	ПараметрыЗаполнения.Вставить("КонецОтчетногоПериода", '0001-01-01');
	ПараметрыЗаполнения.Вставить("УчетНа70ВедетсяСводно", ЗаполнениеБухгалтерскойОтчетности.УчетНа70ВедетсяСводно());
	ПараметрыЗаполнения.Вставить("ИспользуетсяВалютныйУчет", БухгалтерскийУчетПереопределяемый.ИспользоватьВалютныйУчет());
	
	СчетаСРеквизитами = Новый ТаблицаЗначений;
	СчетаСРеквизитами.Колонки.Добавить("УсловныйКод", Новый ОписаниеТипов("Строка"));
	СчетаСРеквизитами.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	СчетаСРеквизитами.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка"));
	СчетаСРеквизитами.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ПараметрыЗаполнения.Вставить("СчетаСРеквизитами", СчетаСРеквизитами);
	
	ПараметрыЗаполнения.Вставить("Графа", "");
	ПараметрыЗаполнения.Вставить("ЗаголовокГрафы", "");
	ПараметрыЗаполнения.Вставить("НачалоПериодаОтчета", '0001-01-01');
	ПараметрыЗаполнения.Вставить("КонецПериодаОтчета", '0001-01-01');
	
	// Параметры, заполняемые и используемые в процессе заполнения отчета сведениями из ИБ.
	ПараметрыЗаполнения.Вставить("ПроцессорПоказателя", Новый Структура);
	ПараметрыЗаполнения.Вставить("Алгоритмы", Новый Массив);
	ПараметрыЗаполнения.Вставить("РассчитанныеПараметры", Новый Структура);
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция РассчитатьБухгалтерскиеВеличиныФормаОтчета2025Кв1_Баланс(ПараметрыЗаполнения)
	
	Организация = ПараметрыЗаполнения.Организация;
	НачалоПериодаОтчета = ПараметрыЗаполнения.НачалоПериодаОтчета;
	КонецПериодаОтчета = ПараметрыЗаполнения.КонецПериодаОтчета;
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериодаОтчета);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериодаОтчета);
	
	ОбщиеИтогиПоСчетам = Новый Структура;
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОбщиеИтогиПоСчетам.Вставить("СальдоИОборотыПоСчетам", СальдоИОборотыПоСчетам);
	
	СчетаДляРасчета = "76.01.1, 76.03, 76.05, 76.06, 76.09, 76.21, 76.25, 76.26, 76.29, 76.35, 76.36, 76.39, 76.41, 76.49, 76.К";
	СубконтоДляРасчета = "Контрагенты";
	
	СиО_Контрагенты = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	ОбщиеИтогиПоСчетам.Вставить("СиО_Контрагенты", СиО_Контрагенты);
	
	СчетаДляРасчета = "60.01, 60.21, 60.31, 62.01, 62.21, 62.31,
	                  |76.01.1, 76.03, 76.05, 76.06, 76.07, 76.09, 76.21, 76.25, 76.26, 76.29, 76.35, 76.36, 76.39, 76.К, 76.НА, 76.07.2";
	СубконтоДляРасчета = "Контрагенты, Договоры";
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаДляРасчета, "Лизинг, НеотфактурованныеПоставки");
	
	СиО_КонтрагентыДоговоры = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	ОбщиеИтогиПоСчетам.Вставить("СиО_КонтрагентыДоговоры", СиО_КонтрагентыДоговоры);
	
	СчетаДляРасчета = "68.01.1, 68.01.2 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10, 68.11, 68.12, 68.13, 68.15, 68.21, 68.34, 68.52,
	                  |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7,
	                  |69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.09, 69.11, 69.12";
	СубконтоДляРасчета = "ВидыПлатежейВГосБюджет";
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаДляРасчета, СубконтоДляРасчета);
	
	СиО_ВидыПлатежей = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	ОбщиеИтогиПоСчетам.Вставить("СиО_ВидыПлатежей", СиО_ВидыПлатежей);
	
	СчетаДляРасчета = "68.04.1, 68.10";
	СубконтоДляРасчета = "ВидыПлатежейВГосБюджет, УровниБюджетов";
	
	СиО_ВидыПлатежейУровниБюджетов = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	ОбщиеИтогиПоСчетам.Вставить("СиО_ВидыПлатежейУровниБюджетов", СиО_ВидыПлатежейУровниБюджетов);
	
	СчетаДляРасчета = "70, 71, 73.03";
	СубконтоДляРасчета = "РаботникиОрганизаций";
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаДляРасчета, СубконтоДляРасчета);
	
	СиО_Работники = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	ОбщиеИтогиПоСчетам.Вставить("СиО_Работники", СиО_Работники);
	
	СчетаДляРасчета = "96.09";
	СубконтоДляРасчета = "Резервы";
	
	СиО_Резервы = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	ОбщиеИтогиПоСчетам.Вставить("СиО_Резервы", СиО_Резервы);
	
	СиО_Аренда = ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_76_07(КонецПериодаОтчета, Организация);
	ОбщиеИтогиПоСчетам.Вставить("СиО_Аренда", СиО_Аренда);
	
	Возврат ОбщиеИтогиПоСчетам;
	
КонецФункции

Функция ПараметрыАлгоритмовБаланса2025(ПараметрыЗаполнения, ОбщиеИтогиПоСчетам)
	
	ПараметрыАлгоритмов = Новый Структура;
	ПараметрыАлгоритмов.Вставить("ЭтоБалансНекоммерческойОрганизации",
		ПараметрыЗаполнения.ЭтоБалансНекоммерческойОрганизации);
	ПараметрыАлгоритмов.Вставить("УчетНа70ВедетсяСводно", ПараметрыЗаполнения.УчетНа70ВедетсяСводно);
	
	Возврат ПараметрыАлгоритмов;
	
КонецФункции

Функция АлгоритмыБО2025Кв1_Баланс(ПараметрыАлгоритмов)
	
	Алгоритмы = Новый Массив;
	
	ЗаполнитьАлгоритмыБО2025Кв1_Баланс_Раздел1(Алгоритмы, ПараметрыАлгоритмов);
	ЗаполнитьАлгоритмыБО2025Кв1_Баланс_Раздел2(Алгоритмы, ПараметрыАлгоритмов);
	Если ПараметрыАлгоритмов.ЭтоБалансНекоммерческойОрганизации Тогда
		ЗаполнитьАлгоритмыБО2025Кв1_Баланс_Раздел3_НКО(Алгоритмы, ПараметрыАлгоритмов);
	Иначе
		ЗаполнитьАлгоритмыБО2025Кв1_Баланс_Раздел3(Алгоритмы, ПараметрыАлгоритмов);
	КонецЕсли;
	ЗаполнитьАлгоритмыБО2025Кв1_Баланс_Раздел4(Алгоритмы, ПараметрыАлгоритмов);
	ЗаполнитьАлгоритмыБО2025Кв1_Баланс_Раздел5(Алгоритмы, ПараметрыАлгоритмов);
	
	Возврат Алгоритмы;
	
КонецФункции

Процедура ЗаполнитьАлгоритмыБО2025Кв1_Баланс_Раздел1(Алгоритмы, ПараметрыЗаполнения)
	
	#Область Строка1110
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1110", 11101,
		"Нематериальные активы");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 04"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 05"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.05"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.08"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11101",
		"Нематериальные активы в организации");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 04"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 05"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11102",
		"Приобретение нематериальных активов");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.05"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11103",
		"Выполнение научно-исследовательских, опытно-конструкторских и технологических работ");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.08"));
	
	#КонецОбласти
	
	#Область Строка1130
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1130",
		"Нематериальные поисковые активы");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.11"));
	
	#КонецОбласти
	
	#Область Строка1140
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1140",
		"Материальные поисковые активы");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.12"));
	
	#КонецОбласти
	
	#Область Строка1150
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1150", 11501,
		"Основные средства");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 01.09")); // отражено в 1215
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 02.02")); // отражено в 1160
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 07"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.03"));
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ОсновныеСредства;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД_ПоВидуАктива 97.11", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.04.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.04.2"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11501",
		"Основные средства, пригодные к использованию");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 01.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 01.08"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 01.К"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 02.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11502",
		"Оборудование к установке");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 07"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11503",
		"Незавершенное строительство");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11504",
		"Расходы будущих периодов");
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ОсновныеСредства;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКД_ПоВидуАктива 97.11", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11505",
		"Права пользования активами");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 01.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 02.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11505",
		"Капитализированная стоимость ремонта основных средств");
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11507",
		"Незавершенные ремонты основных средств");
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11509",
		"Иные незавершенные капитальные вложения");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.04.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.04.2"));
	
	#КонецОбласти
	
	#Область Строка1160
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1160", 11601,
		"Инвестиционная недвижимость");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 03.09")); // Отражено в 1215
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 02.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11601",
		"Инвестиционная недвижимость");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКД 03.09")); // Отражено в 1215
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 02.02"));
	
	#КонецОбласти
	
	#Область Строка1170
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1170", 11701,
		"Финансовые вложения");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 58.01.1"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11701",
		"Паи и акции");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 58.01.1"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11702",
		"Долговые ценные бумаги");
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11703",
		"Предоставленные займы");

	#КонецОбласти
	
	#Область Строка1180
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1180",
		"Отложенные налоговые активы");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 09"));
	
	#КонецОбласти
	
	#Область Строка1190
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1190", 11901,
		"Прочие внеоборотные активы");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.06"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.07"));
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеВнеоборотныеАктивы;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД_ПоВидуАктива 97.11", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11901",
		"Биологические активы");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.06"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.07"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11903",
		"Расходы будущих периодов");
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеВнеоборотныеАктивы;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКД_ПоВидуАктива 97.11", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьАлгоритмыБО2025Кв1_Баланс_Раздел2(Алгоритмы, ПараметрыЗаполнения)
	
	УчетНа70ВедетсяСводно = ПараметрыЗаполнения.УчетНа70ВедетсяСводно;
	
	#Область Строка1210
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1210", 12101,
		"Запасы");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 10"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 15"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 16"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 16"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 14"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 43"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 41"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 42"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 44"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 45"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 28"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 20"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 23"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 29"));
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.Запасы;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД_ПоВидуАктива 97.11", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12101",
		"Сырье и материалы");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 10"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 15.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 16.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 16.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 14.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12102",
		"Готовая продукция");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 43"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 14.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12103",
		"Товары");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 41"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 14.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 15.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 42"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 16.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 16.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 44"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12104",
		"Товары отгруженные");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 45"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12105",
		"Незавершенное производство");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 28"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 20"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 14.04"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 21"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 23"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 29"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12106",
		"Расходы будущих периодов");
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.Запасы;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКД_ПоВидуАктива 97.11", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	#КонецОбласти
	
	#Область Строка1215
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1215",
		"Долгосрочные активы к продаже");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 01.09"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 03.09"));
	
	#КонецОбласти
	
	#Область Строка1220
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1220", 12201,
		"Налог на добавленную стоимость по приобретенным ценностям");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 19"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 19.06"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 19.11"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12201",
		"НДС по приобретенным ОС");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12202",
		"НДС по приобретенным НМА");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12203",
		"НДС по приобретенным МПЗ");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12204",
		"НДС по приобретенным услугам");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.04"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12205",
		"НДС, уплаченный при ввозе товаров на территорию РФ");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.05"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12206",
		"НДС по товарам, реализованным по ставке 0% (экспорт)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.07"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12207",
		"НДС при строительстве ОС");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.08"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12208",
		"НДС по уменьшению стоимости реализации");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.09"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12209",
		"НДС, уплачиваемый при импорте из Таможенного союза");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.10"));
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1220",
		"НДС, начисленный по отгрузке");
	АлгоритмСтроки.Вписываемый = Истина;
	АлгоритмСтроки.ГрафаНаименования = "02";
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.ОТ"));
	
	#КонецОбласти
	
	#Область Строка1230
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1230", 12301,
		"Дебиторская задолженность");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 62.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 62.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 62.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 62.31"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 62.Р"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 60.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 60.22"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 60.32"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 63"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 76.ВА"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 68.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.04.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 68.04.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.06"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.07"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.08"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.09"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.10"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.11"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.12"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.13"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.15"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.34"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.52"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 68.90"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.3"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.4"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.5"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.6"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.7"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.03.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.03.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.04"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.05.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.05.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.3"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.4"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.5"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.09"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.11"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.12"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР 69.13"));
	
	Если УчетНа70ВедетсяСводно Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 70"));
	Иначе
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Работники 70"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Работники 71.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Работники 71.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 73.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 73.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Работники 73.03"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 75.01"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.01.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.05"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.06"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.09"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.14"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.22"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.25"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.26"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.29"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.35"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.36"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.39"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Контрагенты 76.49"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.К"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.НА"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 76.НА"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.ОК"));
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ДебиторскаяЗадолженность;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД_ПоВидуАктива 97.11", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 46"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_Аренда 76.07"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12301",
		"Расчеты с покупателями и заказчиками");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 62.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 62.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 62.21"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 62.31"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 62.Р"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК_СВычетами 63"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12302",
		"Расчеты с поставщиками и подрядчиками");
	
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 60.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 60.22"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 60.32"));
	
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 76.ВА"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12303",
		"Расчеты по налогам и сборам");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.04.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 68.04.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.06"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.07"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.08"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.09"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.10"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.11"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.12"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.13"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.15"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.21"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.34"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.52"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12304",
		"Расчеты по НДС, не отраженные на ЕНС");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 68.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12305",
		"Сальдо по ЕНС");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 68.90"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12306",
		"Расчеты по социальному страхованию и обеспечению");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.3"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.4"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.5"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.6"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.7"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.03.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.03.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.04"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.05.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.05.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.3"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.4"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.5"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.09"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.11"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.12"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР 69.13"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12307",
		"Расчеты с персоналом по оплате труда");
	Если УчетНа70ВедетсяСводно Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 70"));
	Иначе
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Работники 70"));
	КонецЕсли;
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12308",
		"Расчеты с подотчетными лицами");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Работники 71.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Работники 71.21"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12309",
		"Расчеты с пероналом по прочим операциям");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 73.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 73.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Работники 73.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12310",
		"Расчеты по вкладам в уставный (складочный) капитал");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 75.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12311",
		"Расчеты с разными дебиторами и кредиторами");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.01.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.05"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.06"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.09"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.14"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.21"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.22"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.25"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.26"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.29"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.35"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.36"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.39"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Контрагенты 76.49"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.К"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.ОК"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12312",
		"Расходы будущих периодов");
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ДебиторскаяЗадолженность;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКД_ПоВидуАктива 97.11", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12313",
		"Выполненные этапы по незавершенным работам");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 46"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12314",
		"Расчеты с факторинговыми комапниями");
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12315",
		"Авансы по аренде (лизингу)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_Аренда 76.07"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12316",
		"НДС, удержанный налоговым агентом с выданной предоплаты");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.НА"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 76.НА"));
	
	#КонецОбласти
	
	#Область Строка1240
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1240", 12401,
		"Финансовые вложения (за исключением денежных эквивалентов)");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.23"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 58"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 58.01.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 59"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12401",
		"Депозитные счета");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12402",
		"Депозитные счета ( в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.23"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12403",
		"Приобретенные права в рамках оказания финансовых услуг");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 58"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКД 58.01.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 59"));
	
	#КонецОбласти
	
	#Область Строка1250
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1250", 12501,
		"Денежные средства и денежные эквиваленты");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 50"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 51"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 52"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.04"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.24"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 57"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12501",
		"Касса");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 50"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12502",
		"Расчетные счета");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 51"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12503",
		"Валютные счета");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 52"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12504",
		"Счет цифрового рубля");
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12505",
		"Аккредитивы");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12506",
		"Аккредитивы (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.21"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12507",
		"Прочие специальные счета");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.04"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.24"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12508",
		"Переводы в пути");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 57"));
	
	#КонецОбласти
	
	#Область Строка1260
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1260", 12601,
		"Прочие оборотные активы");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.06"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.11"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 68.22"));
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД_ПоВидуАктива 97.11", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 94"));

	#КонецОбласти
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12601",
		"Акцизы по оплаченным ценностям");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.06"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12602",
		"НДС по экспорту (возмещение)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 68.22"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12603",
		"Расходы будущих периодов");
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКД_ПоВидуАктива 97.11", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12604",
		"Недостачи и потери от порчи ценностей");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 94"));
	
КонецПроцедуры

Процедура ЗаполнитьАлгоритмыБО2025Кв1_Баланс_Раздел3(Алгоритмы, ПараметрыЗаполнения)
	
	#Область Строка1310
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1310",
		"Уставный капитал");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 80"));
	
	#КонецОбласти
	
	#Область Строка1320
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1320", 
		"Собственные акции, принадлежащие обществу, задолженность акционеров по оплате акций");
	АлгоритмСтроки.Вычитаемый = Истина;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 81"));
	
	#КонецОбласти
	
	#Область Строка1340
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1340", 13401,
		"Накопленная дооценка внеоборотных активов");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 83.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "13401",
		"Переоценка основных средств");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 83.01.1"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "13402",
		"Переоценка НМА");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 83.01.2"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "13403",
		"Переоценка прочих внеоборотных активов");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 83.01.3"));
	
	#КонецОбласти
	
	#Область Строка1350
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1350",
		"Добавочный капитал (без накопленной дооценки)");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 83"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 83.01"));
	
	#КонецОбласти
	
	#Область Строка1360
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1360", 13601,
		"Резервный капитал");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 82"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "13601",
		"Резервы, образованные в соответствии с законодательством");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 82.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "13602",
		"Резервы, образованные в соответствии с учредительными документами");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 82.02"));
	
	#КонецОбласти
	
	#Область Строка1370
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1370",
		"Нераспределенная прибыль (непокрытый убыток)");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 84"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 84"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 99"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 99"));
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьАлгоритмыБО2025Кв1_Баланс_Раздел3_НКО(Алгоритмы, ПараметрыЗаполнения)
	
	#Область Строка1310
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1310",
		"Паевой фонд");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 80"));
	
	#КонецОбласти
	
	#Область Строка1330
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1330",
		"Целевые средства");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 86"));
	
	#КонецОбласти
	
	#Область Строка1360
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1360",
		"Фонд недвижимого и особо ценного движимого имущества");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 83"));
	
	#КонецОбласти
	
	#Область Строка1370
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1370",
		"Резервный и иные целевые фонды");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 82"));
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1370",
		"Нераспределенная прибыль (непокрытый убыток)");
	АлгоритмСтроки.Вписываемый = Истина;
	АлгоритмСтроки.ГрафаНаименования = "02";
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 84"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 84"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 99"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 99"));
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьАлгоритмыБО2025Кв1_Баланс_Раздел4(Алгоритмы, ПараметрыЗаполнения)
	
	#Область Строка1410
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1410", 14101,
		"Заемные средства");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.23"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "14101",
		"Долгосрочные кредиты");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "14102",
		"Долгосрочные займы");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "14103",
		"Долгосрочные кредиты (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.21"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "14104",
		"Долгосрочные займы (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.23"));
	
	#КонецОбласти
	
	#Область Строка1420
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1420",
		"Отложенные налоговые обязательства");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 77"));
	
	#КонецОбласти
	
	#Область Строка1430
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1430",
		"Оценочные обязательства");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 96.09"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 96.09"));
	
	#КонецОбласти
	
	#Область Строка1450
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1450", 14501,
		"Прочие долгосрочные обязательства");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 98.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 98.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 98.04"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "14501",
		"Долгосрочные обязательства по аренде (лизингу)");
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "14502",
		"Безвозмездные поступления");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 98.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "14503",
		"Расчеты по возмещению материального ущерба");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 98.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 98.04"));
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьАлгоритмыБО2025Кв1_Баланс_Раздел5(Алгоритмы, ПараметрыЗаполнения)
	
	УчетНа70ВедетсяСводно = ПараметрыЗаполнения.УчетНа70ВедетсяСводно;
	ЭтоБалансНекоммерческойОрганизации = ПараметрыЗаполнения.ЭтоБалансНекоммерческойОрганизации;
	
	#Область Строка1510
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1510", 15101,
		"Заемные средства");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 66"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.04"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.22"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.24"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15101",
		"Краткосрочные кредиты");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15102",
		"Краткосрочные займы");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15103",
		"Краткосрочные кредиты (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.21"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15104",
		"Краткосрочные займы (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.23"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15105",
		"Проценты по займам и кредитам");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.04"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.04"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.22"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.24"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.24"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.22"));

	#КонецОбласти
	
	#Область Строка1520
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1520", 15201,
		"Кредиторская задолженность");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 60.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 60.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 60.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 60.31"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККП_КонтрагентыДоговоры 60.НП"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 62.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 62.22"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 62.32"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 76.АВ"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.04.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.04.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.06"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.07"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.08"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.09"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.10"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.11"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.12"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.13"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.15"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.32"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.34"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.42"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.52"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.90"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.3"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.4"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.5"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.6"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.7"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.03.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.03.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.04"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.05.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.05.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.3"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.4"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.5"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.09"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.11"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.12"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР 69.13"));
	
	Если УчетНа70ВедетсяСводно Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 70"));
	Иначе
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_Работники 70"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_Работники 71.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_Работники 71.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_Работники 73.03"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 75.02"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.01.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.04"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.05"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.06"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.09"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.25"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.26"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.29"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.35"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.36"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.39"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.41"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 76.41"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_Контрагенты 76.49"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.К"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.Н"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.ОК"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 98.01"));
	
	Если НЕ ЭтоБалансНекоммерческойОрганизации Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 86"));
	КонецЕсли;
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15201",
		"Расчеты с поставщиками и подрядчиками");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 60.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 60.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 60.21"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 60.31"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15202",
		"Расчеты с покупателями и заказчиками");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 62.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 62.22"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 62.32"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКД 76.АВ"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15203",
		"Расчеты по налогам и сборам");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.04.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.04.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.06"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.07"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.08"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.09"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.10"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.11"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.12"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.13"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.15"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.21"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.32"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.34"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.42"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.52"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15204",
		"Расчеты по НДС, не отраженные на ЕНС");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15205",
		"Сальдо по ЕНС");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.90"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15206",
		"Расчеты по социальному страхованию и обеспечению");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.3"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.4"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.5"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.6"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.7"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.03.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.03.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.04"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.05.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.05.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.3"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.4"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.5"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.09"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.11"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.12"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР 69.13"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15207",
		"Расчеты с персоналом по оплате труда");
	Если УчетНа70ВедетсяСводно Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 70"));
	Иначе
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_Работники 70"));
	КонецЕсли;
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15208",
		"Расчеты с подотчетными лицами");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_Работники 71.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_Работники 71.21"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15209",
		"Расчеты с персоналом по прочим операциям");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_Работники 73.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15210",
		"Задолженность участникам (учредителям) по выплате доходов");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 75.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15211",
		"Расчеты с разными дебиторами и кредиторами");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.01.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.04"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.05"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.06"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.09"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.21"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.25"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.26"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.29"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.35"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.36"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.39"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.41"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКД 76.41"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_Контрагенты 76.49"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.К"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.Н"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.ОК"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15212",
		"Доходы, полученные в счет будущих периодов");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 98.01"));
	
	Если НЕ ЭтоБалансНекоммерческойОрганизации Тогда
		АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15213",
			"Целевое финансирование");
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 86"));
	КонецЕсли;
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1520",
		"Обязательство по аренде");
	АлгоритмСтроки.Вписываемый = Истина;
	АлгоритмСтроки.ГрафаНаименования = "02";
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК_Аренда 76.07"));

	#КонецОбласти
	
	#Область Строка1540
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1540",
		"Оценочные обязательства");
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 96.01"));
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_БалансПоГрафеПоАлгоритмам(ПараметрыЗаполнения)
	
	Графа = ПараметрыЗаполнения.Графа;
	ЗаголовокГрафы = ПараметрыЗаполнения.ЗаголовокГрафы;
	
	Контейнер = ПараметрыЗаполнения.Контейнер;
	КонтейнерРаздела = Контейнер.Строки.Найти("Баланс", "Идентификатор");
	
	ПроцессорПоказателя = ПараметрыЗаполнения.ПроцессорПоказателя;
	Алгоритмы = ПараметрыЗаполнения.Алгоритмы;
	
	Для Каждого АлгоритмСтроки Из Алгоритмы Цикл
		НомерСтроки = АлгоритмСтроки.Номер;
		НаименованиеСтроки = АлгоритмСтроки.Наименование;
		
		ИнициализироватьЗаполнениеПоказателя(ПроцессорПоказателя, НомерСтроки, Графа, АлгоритмСтроки.Вписываемый);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
			НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
			
		Для Каждого Составляющая Из АлгоритмСтроки.Составляющие Цикл
			ОписаниеСоставлящей = Составляющая[0];
			ДопПараметры = Составляющая[1];
			УчестьСоставляющую(ПроцессорПоказателя, ОписаниеСоставлящей, ДопПараметры);
		КонецЦикла;
		
		УстановитьЗначениеПоказателяПоПроцессору(КонтейнерРаздела, ПроцессорПоказателя, АлгоритмСтроки);
		Если АлгоритмСтроки.Вписываемый Тогда
			УстановитьНаименованиеВписываемогоПоказателя(КонтейнерРаздела, АлгоритмСтроки);
		КонецЕсли;
		
		Если АлгоритмСтроки.Свойство("ДопСтроки") Тогда
			НомерСтроки = АлгоритмСтроки.Номер;
			ПроцессорПоказателя.Показатель.КодПоказателя = "П100010" + НомерСтроки + Графа;
			
			ИдМСЧ = "П100010" + НомерСтроки;
			ОбъявлениеМСЧ = МногострочнаяЧастьРаздела(КонтейнерРаздела, ИдМСЧ);
			СтрокиМСЧ = СтрокиМногострочнойЧасти(ОбъявлениеМСЧ);
			
			Для Инд = 1 По АлгоритмСтроки.ДопСтроки.Количество() - СтрокиМСЧ.Количество() Цикл
				СкопироватьВеткуДерева(СтрокиМСЧ[0]);
			КонецЦикла;
			
			СтрокиМСЧ = СтрокиМногострочнойЧасти(ОбъявлениеМСЧ); // актуальный набор строк многострочной части
			
			Для ИндексСтроки = 0 По АлгоритмСтроки.ДопСтроки.ВГраница() Цикл
				ДопСтрокаАлгоритма = АлгоритмСтроки.ДопСтроки[ИндексСтроки];
				СтрокаМСЧ = СтрокиМСЧ[ИндексСтроки];
				
				НаименованиеСтроки = ДопСтрокаАлгоритма.Наименование;
				
				ПроцессорПоказателя.Показатель.ЗначениеПоказателя = 0;
				ПроцессорПоказателя.Показатель.Расшифровка = Новый Массив;
				ПроцессорПоказателя.Показатель.НаименованиеПоказателя = НаименованиеСтроки;
				
				Для Каждого Составляющая Из ДопСтрокаАлгоритма.Составляющие Цикл
					ОписаниеСоставлящей = Составляющая[0];
					ДопПараметры = Составляющая[1];
					УчестьСоставляющую(ПроцессорПоказателя, ОписаниеСоставлящей, ДопПараметры);
				КонецЦикла;
				
				УстановитьЗначениеПоказателяПоПроцессору(СтрокаМСЧ, ПроцессорПоказателя, АлгоритмСтроки);
				
				// Установка наименования строки "в том числе".
				ИмяПоказателя = "П100010" + НомерСтроки + "02";
				
				ПараметрыПоискаПоказателя = Новый Структура("Тип, Идентификатор", "Показатель", ИмяПоказателя);
				СтрокиПоказателей = СтрокаМСЧ.Строки.НайтиСтроки(ПараметрыПоискаПоказателя);
				СтрокаПоказателя = СтрокиПоказателей[0];
				СтрокаПоказателя.Данные = НаименованиеСтроки;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_ОИК(ПараметрыЗаполнения)
	
	ИмяРаздела = "ОИК";
	
	Контейнер = ПараметрыЗаполнения.Контейнер;
	КонтейнерРаздела = Контейнер.Строки.Найти(ИмяРаздела, "Идентификатор");
	
	Организация = ПараметрыЗаполнения.Организация;
	
	// Даты отчетного периода.
	НачалоОтчетногоПериода = ПараметрыЗаполнения.НачалоОтчетногоПериода;
	КонецОтчетногоПериода = ПараметрыЗаполнения.КонецОтчетногоПериода;
	КонецОтчетногоГода = КонецГода(КонецОтчетногоПериода);
	
	// Даты сравнительного периода.
	КонецГодаСравнительногоПериода = ДобавитьМесяц(КонецОтчетногоГода, -12);
	КонецСравнительногоПериода = ДобавитьМесяц(КонецОтчетногоПериода, -12);
	НачалоСравнительногоПериода = НачалоГода(КонецСравнительногоПериода);
	
	// Даты года, предшествующего сравнительному.
	КонецГода_2 = ДобавитьМесяц(КонецОтчетногоГода, -24);
	
	СчетаСРеквизитами = ПараметрыЗаполнения.СчетаСРеквизитами;
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("ИмяРаздела", ИмяРаздела);
	ПараметрыРасшифровки.Вставить("КонтейнерРаздела", КонтейнерРаздела);
	ПараметрыРасшифровки.Вставить("Организация", Организация);
	
	ПараметрыОтчетовРасшифровки = Новый Структура;
	ПараметрыОтчетовРасшифровки.Вставить("Организация", Организация);
	ПараметрыОтчетовРасшифровки.Вставить("НачалоПериода", '0001-01-01');
	ПараметрыОтчетовРасшифровки.Вставить("КонецПериода", '0001-01-01');
	
	ОписаниеОборотныхСтрок = Новый Структура;
	ОписаниеОборотныхСтрок.Вставить("Строка3х11", Новый Структура("Номер, Код, Наименование", "", "",
		"Чистая прибыль (убыток)"));
	ОписаниеОборотныхСтрок.Вставить("Строка3х12", Новый Структура("Номер, Код, Наименование", "", "",
		"Переоценка внеоборотных активов"));
	ОписаниеОборотныхСтрок.Вставить("Строка3х27", Новый Структура("Номер, Код, Наименование", "", "",
		"Дивиденды"));
	ОписаниеОборотныхСтрок.Вставить("Строка3х30", Новый Структура("Номер, Код, Наименование", "", "",
		"Иные изменения за счет операций с собственниками (за исключением дивидендов) - всего"));
	ОписаниеОборотныхСтрок.Вставить("Строка3х40", Новый Структура("Номер, Код, Наименование", "", "",
		"Иные изменения - всего"));
	
	#Область РасчетБухгалтерскихИтогов
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация", Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", '0001-01-01');
	НастройкиПолученияБухитогов.Вставить("КонецПериода", '0001-01-01');
	
	НастройкиПолученияБухитогов.НачалоПериода = НачалоОтчетногоПериода;
	НастройкиПолученияБухитогов.КонецПериода =  КонецОтчетногоПериода;
	СиО_ОтчетныйПериод =
		ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОБ_ОтчетныйПериод =
		ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	НастройкиПолученияБухитогов.НачалоПериода = НачалоСравнительногоПериода;
	НастройкиПолученияБухитогов.КонецПериода =  КонецГодаСравнительногоПериода;
	СиО_Год_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	
	НастройкиПолученияБухитогов.НачалоПериода = НачалоСравнительногоПериода;
	НастройкиПолученияБухитогов.КонецПериода =  КонецСравнительногоПериода;
	СиО_СравнительныйПериод =
		ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОБ_СравнительныйПериод =
		ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	НастройкиПолученияБухитогов.НачалоПериода = НачалоГода(КонецГода_2);
	НастройкиПолученияБухитогов.КонецПериода =  КонецГода_2;
	СальдоИОборотыПоСчетам_2 =
		ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	
	#КонецОбласти
	
	ЗаголовкиГраф = Новый Соответствие;
	ЗаголовкиГраф.Вставить("04", "Уставный капитал");
	ЗаголовкиГраф.Вставить("05", "Собственные акции, принадлежащие обществу, задолженность акционеров по оплате акций");
	ЗаголовкиГраф.Вставить("06", "Накопленная дооценка внеоборотных активов");
	ЗаголовкиГраф.Вставить("07", "Добавочный капитал (без накопленной дооценки)");
	ЗаголовкиГраф.Вставить("08", "Резервный капитал");
	ЗаголовкиГраф.Вставить("09", "Нераспределенная прибыль (непокрытый убыток)");
	ЗаголовкиГраф.Вставить("10", "Резервный капитал");
	
	ПараметрыЗаполненияСтрок = Новый Структура;
	// Общие параметры для всего отчета.
	ПараметрыЗаполненияСтрок.Вставить("КонтейнерРаздела",КонтейнерРаздела);
	ПараметрыЗаполненияСтрок.Вставить("СчетаСРеквизитами", СчетаСРеквизитами);
	ПараметрыЗаполненияСтрок.Вставить("ЗаголовкиГраф", ЗаголовкиГраф);
	// Параметры для строк, заполняются в процессе заполнения.
	ПараметрыЗаполненияСтрок.Вставить("НомерСтроки", "");
	ПараметрыЗаполненияСтрок.Вставить("НаименованиеСтроки", "");
	ПараметрыЗаполненияСтрок.Вставить("СиО", Новый ТаблицаЗначений);
	ПараметрыЗаполненияСтрок.Вставить("ОБ", Новый ТаблицаЗначений);
	// Параметры заполнения для строк, меняются через ссылочные объекты.
	ПараметрыЗаполненияСтрок.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
	ПараметрыЗаполненияСтрок.Вставить("ПараметрыОтчетовРасшифровки", ПараметрыОтчетовРасшифровки);
	ПараметрыЗаполненияСтрок.Вставить("ОписаниеОборотныхСтрок", ОписаниеОборотныхСтрок);
	
	ПараметрыЗаполненияСтрок.СиО = СальдоИОборотыПоСчетам_2;
	ПараметрыОтчетовРасшифровки.НачалоПериода = НачалоГода(КонецГода_2);
	ПараметрыОтчетовРасшифровки.КонецПериода = КонецГода_2;
	
	ПараметрыЗаполненияСтрок.НомерСтроки = "3100";
	ПараметрыЗаполненияСтрок.НаименованиеСтроки = "На " + Формат(КонецГода_2, "ДЛФ=DD");
	ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_ОИК_Итоговые(ПараметрыЗаполненияСтрок);
	
	ПараметрыЗаполненияСтрок.СиО = СиО_СравнительныйПериод;
	ПараметрыЗаполненияСтрок.ОБ = ОБ_СравнительныйПериод;
	ПараметрыОтчетовРасшифровки.НачалоПериода = НачалоСравнительногоПериода;
	ПараметрыОтчетовРасшифровки.КонецПериода =  КонецСравнительногоПериода;
	
	ОписаниеОборотныхСтрок.Строка3х11.Номер = "3211";
	ОписаниеОборотныхСтрок.Строка3х12.Номер = "3212";
	ОписаниеОборотныхСтрок.Строка3х27.Номер = "3227";
	ОписаниеОборотныхСтрок.Строка3х30.Номер = "3230";
	ОписаниеОборотныхСтрок.Строка3х30.Код = "3430"; // Код строки на форме задублирован, для показателя выбран другой
	ОписаниеОборотныхСтрок.Строка3х40.Номер = "3240";
	ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_ОИК_Оборотные(ПараметрыЗаполненияСтрок);
	
	ПараметрыЗаполненияСтрок.НомерСтроки = "3250";
	ПараметрыЗаполненияСтрок.НаименованиеСтроки = "На " + Формат(КонецСравнительногоПериода, "ДЛФ=DD");
	ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_ОИК_Итоговые(ПараметрыЗаполненияСтрок);
	
	ПараметрыЗаполненияСтрок.СиО = СиО_Год_1;
	ПараметрыОтчетовРасшифровки.НачалоПериода = НачалоСравнительногоПериода;
	ПараметрыОтчетовРасшифровки.КонецПериода =  КонецГодаСравнительногоПериода;
	
	ПараметрыЗаполненияСтрок.НомерСтроки = "3200";
	ПараметрыЗаполненияСтрок.НаименованиеСтроки = "На " + Формат(КонецГодаСравнительногоПериода, "ДЛФ=DD");
	ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_ОИК_Итоговые(ПараметрыЗаполненияСтрок);
	
	ПараметрыЗаполненияСтрок.СиО = СиО_ОтчетныйПериод;
	ПараметрыЗаполненияСтрок.ОБ = ОБ_ОтчетныйПериод;
	ПараметрыОтчетовРасшифровки.НачалоПериода = НачалоОтчетногоПериода;
	ПараметрыОтчетовРасшифровки.КонецПериода =  КонецОтчетногоПериода;
	
	ОписаниеОборотныхСтрок.Строка3х11.Номер = "3311";
	ОписаниеОборотныхСтрок.Строка3х12.Номер = "3312";
	ОписаниеОборотныхСтрок.Строка3х27.Номер = "3327";
	ОписаниеОборотныхСтрок.Строка3х30.Номер = "3330";
	ОписаниеОборотныхСтрок.Строка3х30.Код = "3330";
	ОписаниеОборотныхСтрок.Строка3х40.Номер = "3340";
	ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_ОИК_Оборотные(ПараметрыЗаполненияСтрок);
	
	ПараметрыЗаполненияСтрок.НомерСтроки = "3300";
	ПараметрыЗаполненияСтрок.НаименованиеСтроки = "На " + Формат(КонецОтчетногоПериода, "ДЛФ=DD");
	ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_ОИК_Итоговые(ПараметрыЗаполненияСтрок);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_ОИК_Итоговые(ПараметрыЗаполнения)
	
	КонтейнерРаздела = ПараметрыЗаполнения.КонтейнерРаздела;
	СчетаСРеквизитами = ПараметрыЗаполнения.СчетаСРеквизитами;
	ЗаголовкиГраф = ПараметрыЗаполнения.ЗаголовкиГраф;
	
	НомерСтроки = ПараметрыЗаполнения.НомерСтроки;
	НаименованиеСтроки = ПараметрыЗаполнения.НаименованиеСтроки;
	СальдоИОборотыПоСчетам = ПараметрыЗаполнения.СиО;
	ПараметрыРасшифровки = ПараметрыЗаполнения.ПараметрыРасшифровки;
	ПараметрыОтчетовРасшифровки = ПараметрыЗаполнения.ПараметрыОтчетовРасшифровки;
	
	СКК_80 = СКК("80", СальдоИОборотыПоСчетам);
	СКД_80 = СКД("80", СальдоИОборотыПоСчетам);
	СКК_81 = СКК("81", СальдоИОборотыПоСчетам);
	СКД_81 = СКД("81", СальдоИОборотыПоСчетам);
	СКК_82 = СКК("82", СальдоИОборотыПоСчетам);
	СКД_82 = СКД("82", СальдоИОборотыПоСчетам);
	СКК_83 = СКК("83", СальдоИОборотыПоСчетам);
	СКД_83 = СКД("83", СальдоИОборотыПоСчетам);
	СКК_83_01 = СКК("83.01", СальдоИОборотыПоСчетам);
	СКД_83_01 = СКД("83.01", СальдоИОборотыПоСчетам);
	СКК_84 = СКК("84", СальдоИОборотыПоСчетам);
	СКД_84 = СКД("84", СальдоИОборотыПоСчетам);
	СКК_99 = СКК("99", СальдоИОборотыПоСчетам);
	СКД_99 = СКД("99", СальдоИОборотыПоСчетам);
	
	Графа = "04";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	ЗначениеПоказателя = СКК_80 - СКД_80;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, ЗначениеПоказателя);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!СКК " + СчетСРеквизитами("80", СчетаСРеквизитами).Код,
		СКК_80, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("80")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!СКД " + СчетСРеквизитами("80", СчетаСРеквизитами).Код,
		-СКД_80, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("80")));
	
	Графа = "05";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	ЗначениеПоказателя = СКК_81 - СКД_81;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, ЗначениеПоказателя);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!СКК " + СчетСРеквизитами("81", СчетаСРеквизитами).Код,
		СКК_81, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("81")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!СКД " + СчетСРеквизитами("81", СчетаСРеквизитами).Код,
		-СКД_81, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("81")));
	
	Графа = "06";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	ЗначениеПоказателя = СКК_83_01 - СКД_83_01;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, ЗначениеПоказателя);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!СКК " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		СКК_83_01, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!СКД " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		-СКД_83_01, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("83.01")));
	
	Графа = "07";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	ЗначениеПоказателя = СКК_83 - СКК_83_01
	                     - СКД_83 + СКД_83_01;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, ЗначениеПоказателя);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!СКК " + СчетСРеквизитами("83", СчетаСРеквизитами).Код,
		СКК_83, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("83")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!СКК " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		-СКК_83_01, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!СКД " + СчетСРеквизитами("83", СчетаСРеквизитами).Код,
		-СКД_83, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("83")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!СКД " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		СКД_83_01, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("83.01")));
	
	Графа = "08";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	ЗначениеПоказателя = СКК_82 - СКД_82;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, ЗначениеПоказателя);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!СКК " + СчетСРеквизитами("82", СчетаСРеквизитами).Код,
		СКК_82, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("82")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!СКД " + СчетСРеквизитами("82", СчетаСРеквизитами).Код,
		-СКД_82, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("82")));
	
	Графа = "09";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	ЗначениеПоказателя = СКК_84 - СКД_84 + СКК_99 - СКД_99;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, ЗначениеПоказателя);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!СКК " + СчетСРеквизитами("84", СчетаСРеквизитами).Код,
		СКК_84, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("84")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!СКД " + СчетСРеквизитами("84", СчетаСРеквизитами).Код,
		-СКД_84, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("84")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!СКК " + СчетСРеквизитами("99", СчетаСРеквизитами).Код,
		СКК_99, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("99")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!СКД " + СчетСРеквизитами("99", СчетаСРеквизитами).Код,
		-СКД_99, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("99")));
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2025Кв1_ОИК_Оборотные(ПараметрыЗаполнения)
	
	КонтейнерРаздела = ПараметрыЗаполнения.КонтейнерРаздела;
	СчетаСРеквизитами = ПараметрыЗаполнения.СчетаСРеквизитами;
	ЗаголовкиГраф = ПараметрыЗаполнения.ЗаголовкиГраф;
	
	СальдоИОборотыПоСчетам = ПараметрыЗаполнения.СиО;
	ОборотыМеждуСчетами = ПараметрыЗаполнения.ОБ;
	ПараметрыРасшифровки = ПараметрыЗаполнения.ПараметрыРасшифровки;
	ПараметрыОтчетовРасшифровки = ПараметрыЗаполнения.ПараметрыОтчетовРасшифровки;
	
	ОписаниеОборотныхСтрок = ПараметрыЗаполнения.ОписаниеОборотныхСтрок;
	
	БезРасшифровки = Новый Структура("Организация", ПараметрыОтчетовРасшифровки.Организация);
	
	#Область РасчетБухгалтерскихВеличин
	
	ОБ_99__80 = ОБ("99", "80", ОборотыМеждуСчетами);
	ОБ_80__99 = ОБ("80", "99", ОборотыМеждуСчетами);
	ОБ_99__81 = ОБ("99", "81", ОборотыМеждуСчетами);
	ОБ_81__99 = ОБ("81", "99", ОборотыМеждуСчетами);
	ОБ_99__82 = ОБ("99", "82", ОборотыМеждуСчетами);
	ОБ_82__99 = ОБ("82", "99", ОборотыМеждуСчетами);
	ОБ_99__83 = ОБ("99", "83", ОборотыМеждуСчетами);
	ОБ_83__99 = ОБ("83", "99", ОборотыМеждуСчетами);
	ОБ_99__83_01 = ОБ("99", "83.01", ОборотыМеждуСчетами);
	ОБ_83_01__99 = ОБ("83.01", "99", ОборотыМеждуСчетами);
	ОБ_99__84 = ОБ("99", "84", ОборотыМеждуСчетами);
	ОБ_84__99 = ОБ("84", "99", ОборотыМеждуСчетами);
	СКК_99 = СКК("99", СальдоИОборотыПоСчетам);
	СКД_99 = СКД("99", СальдоИОборотыПоСчетам);
	
	ОБ_01__83_01 = ОБ("01", "83.01", ОборотыМеждуСчетами);
	ОБ_83_01__01 = ОБ("83.01", "01", ОборотыМеждуСчетами);
	ОБ_02__83_01 = ОБ("02", "83.01", ОборотыМеждуСчетами);
	ОБ_83_01__02 = ОБ("83.01", "02", ОборотыМеждуСчетами);
	ОБ_03__83_01 = ОБ("03", "83.01", ОборотыМеждуСчетами);
	ОБ_83_01__03 = ОБ("83.01", "03", ОборотыМеждуСчетами);
	ОБ_04__83_01 = ОБ("04", "83.01", ОборотыМеждуСчетами);
	ОБ_83_01__04 = ОБ("83.01", "04", ОборотыМеждуСчетами);
	ОБ_05__83_01 = ОБ("05", "83.01", ОборотыМеждуСчетами);
	ОБ_83_01__05 = ОБ("83.01", "05", ОборотыМеждуСчетами);
	ОБ_07__83_01 = ОБ("07", "83.01", ОборотыМеждуСчетами);
	ОБ_83_01__07 = ОБ("83.01", "07", ОборотыМеждуСчетами);
	ОБ_08__83_01 = ОБ("08", "83.01", ОборотыМеждуСчетами);
	ОБ_83_01__08 = ОБ("83.01", "08", ОборотыМеждуСчетами);
	
	ОБ_75_02__80 = ОБ("75.02", "80", ОборотыМеждуСчетами);
	ОБ_80__75_02 = ОБ("80", "75.02", ОборотыМеждуСчетами);
	ОБ_75_02__81 = ОБ("75.02", "81", ОборотыМеждуСчетами);
	ОБ_81__75_02 = ОБ("81", "75.02", ОборотыМеждуСчетами);
	ОБ_75_02__83 = ОБ("75.02", "83", ОборотыМеждуСчетами);
	ОБ_83__75_02 = ОБ("83", "75.02", ОборотыМеждуСчетами);
	ОБ_75_02__83_01 = ОБ("75.02", "83.01", ОборотыМеждуСчетами);
	ОБ_83_01__75_02 = ОБ("83.01", "75.02", ОборотыМеждуСчетами);
	ОБ_75_02__84 = ОБ("75.02", "84", ОборотыМеждуСчетами);
	ОБ_84__75_02 = ОБ("84", "75.02", ОборотыМеждуСчетами);
	
	ОБ_75__80 = ОБ("75", "80", ОборотыМеждуСчетами);
	ОБ_80__75 = ОБ("80", "75", ОборотыМеждуСчетами);
	ОБ_75__81 = ОБ("75", "81", ОборотыМеждуСчетами);
	ОБ_81__75 = ОБ("81", "75", ОборотыМеждуСчетами);
	ОБ_75__82 = ОБ("75", "82", ОборотыМеждуСчетами);
	ОБ_82__75 = ОБ("82", "75", ОборотыМеждуСчетами);
	ОБ_75_02__82 = ОБ("75.02", "82", ОборотыМеждуСчетами);
	ОБ_82__75_02 = ОБ("82", "75.02", ОборотыМеждуСчетами);
	ОБ_75__83 = ОБ("75", "83", ОборотыМеждуСчетами);
	ОБ_83__75 = ОБ("83", "75", ОборотыМеждуСчетами);
	ОБ_75__83_01 = ОБ("75", "83.01", ОборотыМеждуСчетами);
	ОБ_83_01__75 = ОБ("83.01", "75", ОборотыМеждуСчетами);
	ОБ_75__84 = ОБ("75", "84", ОборотыМеждуСчетами);
	ОБ_84__75 = ОБ("84", "75", ОборотыМеждуСчетами);
	
	КО_80 = КО("80", СальдоИОборотыПоСчетам);
	КО_81 = КО("81", СальдоИОборотыПоСчетам);
	КО_82 = КО("82", СальдоИОборотыПоСчетам);
	КО_83 = КО("83", СальдоИОборотыПоСчетам);
	КО_83_01 = КО("83.01", СальдоИОборотыПоСчетам);
	КО_84 = КО("84", СальдоИОборотыПоСчетам);
	
	ДО_80 = ДО("80", СальдоИОборотыПоСчетам);
	ДО_81 = ДО("81", СальдоИОборотыПоСчетам);
	ДО_82 = ДО("82", СальдоИОборотыПоСчетам);
	ДО_83 = ДО("83", СальдоИОборотыПоСчетам);
	ДО_83_01 = ДО("83.01", СальдоИОборотыПоСчетам);
	ДО_84 = ДО("84", СальдоИОборотыПоСчетам);
	
	#КонецОбласти
	
	#Область Строка3х11
	
	НомерСтроки = ОписаниеОборотныхСтрок.Строка3х11.Номер;
	НаименованиеСтроки = ОписаниеОборотныхСтрок.Строка3х11.Наименование;
	
	Графа = "04";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х11_Гр04 = ОБ_99__80 - ОБ_80__99;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х11_Гр04);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("99", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("80", СчетаСРеквизитами).Код,
		ОБ_99__80, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("99"), Счет("80")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("80", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("99", СчетаСРеквизитами).Код,
		-ОБ_80__99, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("80"), Счет("99")));
	
	Графа = "05";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х11_Гр05 = ОБ_99__81 - ОБ_81__99;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х11_Гр05);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("99", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("81", СчетаСРеквизитами).Код,
		ОБ_99__81, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("99"), Счет("81")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("81", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("99", СчетаСРеквизитами).Код,
		-ОБ_81__99, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("81"), Счет("99")));
	
	Графа = "06";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х11_Гр06 = ОБ_99__83_01 - ОБ_83_01__99;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х11_Гр06);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("99", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		ОБ_99__83_01, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("99"), Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("99", СчетаСРеквизитами).Код,
		-ОБ_83_01__99, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83.01"), Счет("99")));
	
	Графа = "07";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х11_Гр07 = ОБ_99__83 - ОБ_99__83_01 - ОБ_83__99 + ОБ_83_01__99;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х11_Гр07);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("99", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83", СчетаСРеквизитами).Код,
		ОБ_99__83, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("99"), Счет("83")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("99", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		-ОБ_99__83_01, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("99"), Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("83", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("99", СчетаСРеквизитами).Код,
		-ОБ_83__99, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83"), Счет("99")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("99", СчетаСРеквизитами).Код,
		ОБ_83_01__99, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83.01"), Счет("99")));
	
	Графа = "08";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х11_Гр08 = ОБ_99__82 - ОБ_82__99;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х11_Гр08);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("99", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("82", СчетаСРеквизитами).Код,
		ОБ_99__82, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("99"), Счет("82")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("82", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("99", СчетаСРеквизитами).Код,
		-ОБ_82__99, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("82"), Счет("99")));
	
	Графа = "09";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х11_Гр09 = ОБ_99__84 - ОБ_84__99 + СКК_99 - СКД_99;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х11_Гр09);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("99", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("84", СчетаСРеквизитами).Код,
		ОБ_99__84, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("99"), Счет("84")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("84", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("99", СчетаСРеквизитами).Код,
		-ОБ_84__99, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("84"), Счет("99")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!СКК " + СчетСРеквизитами("99", СчетаСРеквизитами).Код,
		СКК_99, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("99")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!СКД " + СчетСРеквизитами("99", СчетаСРеквизитами).Код,
		-СКД_99, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("99")));
	
	#КонецОбласти
	
	#Область Строка3х12
	
	НомерСтроки = ОписаниеОборотныхСтрок.Строка3х12.Номер;
	НаименованиеСтроки = ОписаниеОборотныхСтрок.Строка3х12.Наименование;
	
	Графа = "06";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х12_Гр06 = ОБ_01__83_01 - ОБ_83_01__01
	                  + ОБ_02__83_01 - ОБ_83_01__02
	                  + ОБ_03__83_01 - ОБ_83_01__03
	                  + ОБ_04__83_01 - ОБ_83_01__04
	                  + ОБ_05__83_01 - ОБ_83_01__05
	                  + ОБ_07__83_01 - ОБ_83_01__07
	                  + ОБ_08__83_01 - ОБ_83_01__08;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х12_Гр06);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("01", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		ОБ_01__83_01, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("01"), Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("01", СчетаСРеквизитами).Код,
		-ОБ_83_01__01, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83.01"), Счет("01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		ОБ_02__83_01, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("02"), Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("02", СчетаСРеквизитами).Код,
		-ОБ_83_01__02, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83.01"), Счет("02")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("03", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		ОБ_03__83_01, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("03"), Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("03", СчетаСРеквизитами).Код,
		-ОБ_83_01__03, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83.01"), Счет("03")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("04", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		ОБ_04__83_01, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("04"), Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("04", СчетаСРеквизитами).Код,
		-ОБ_83_01__04, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83.01"), Счет("04")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("05", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		ОБ_05__83_01, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("05"), Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("05", СчетаСРеквизитами).Код,
		-ОБ_83_01__05, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83.01"), Счет("05")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("07", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		ОБ_07__83_01, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("07"), Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("07", СчетаСРеквизитами).Код,
		-ОБ_83_01__07, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83.01"), Счет("07")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("08", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		ОБ_08__83_01, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("08"), Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("08", СчетаСРеквизитами).Код,
		-ОБ_83_01__08, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83.01"), Счет("08")));
	
	#КонецОбласти
	
	#Область Строка3х27
	
	НомерСтроки = ОписаниеОборотныхСтрок.Строка3х27.Номер;
	НаименованиеСтроки = ОписаниеОборотныхСтрок.Строка3х27.Наименование;
	
	Графа = "04";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х27_Гр04 = ОБ_75_02__80 - ОБ_80__75_02;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х27_Гр04);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("80", СчетаСРеквизитами).Код,
		ОБ_75_02__80, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75.02"), Счет("80")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("80", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код,
		-ОБ_80__75_02, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("80"), Счет("75.02")));
	
	Графа = "05";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х27_Гр05 = ОБ_75_02__81 - ОБ_81__75_02;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х27_Гр05);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("81", СчетаСРеквизитами).Код,
		ОБ_75_02__81, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75.02"), Счет("81")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("81", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код,
		-ОБ_81__75_02, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("81"), Счет("75.02")));
	
	Графа = "06";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х27_Гр06 = ОБ_75_02__83_01 - ОБ_83_01__75_02;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х27_Гр06);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		ОБ_75_02__83_01, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75.02"), Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код,
		-ОБ_83_01__75_02, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83.01"), Счет("75.02")));
	
	Графа = "07";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х27_Гр07 = ОБ_75_02__83 - ОБ_75_02__83_01 - ОБ_83__75_02 + ОБ_83_01__75_02;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х27_Гр07);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83", СчетаСРеквизитами).Код,
		ОБ_75_02__83, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75.02"), Счет("83")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		-ОБ_75_02__83_01, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75.02"), Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("83", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код,
		-ОБ_83__75_02, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83"), Счет("75.02")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код,
		ОБ_83_01__75_02, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83.01"), Счет("75.02")));
	
	Графа = "09";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х27_Гр09 = ОБ_75_02__84 - ОБ_84__75_02;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х27_Гр09);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("84", СчетаСРеквизитами).Код,
		ОБ_75_02__84, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75.02"), Счет("84")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("84", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код,
		-ОБ_84__75_02, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("84"), Счет("75.02")));
	
	#КонецОбласти
	
	#Область Строка3х30
	
	НомерСтроки = ОписаниеОборотныхСтрок.Строка3х30.Номер;
	КодСтроки = ОписаниеОборотныхСтрок.Строка3х30.Код;
	НаименованиеСтроки = ОписаниеОборотныхСтрок.Строка3х30.Наименование;
	
	Графа = "04";
	ИмяПоказателя = "П000010" + КодСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х30_Гр04 = ОБ_75__80 - ОБ_75_02__80 - ОБ_80__75 + ОБ_80__75_02;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х30_Гр04);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("75", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("80", СчетаСРеквизитами).Код,
		ОБ_75__80, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75"), Счет("80")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("80", СчетаСРеквизитами).Код,
		-ОБ_75_02__80, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75.02"), Счет("80")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("80", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75", СчетаСРеквизитами).Код,
		-ОБ_80__75, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("80"), Счет("75")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("80", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код,
		ОБ_80__75_02, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("80"), Счет("75.02")));
	
	Графа = "05";
	ИмяПоказателя = "П000010" + КодСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х30_Гр05 = ОБ_75__81 - ОБ_75_02__81 - ОБ_81__75 + ОБ_81__75_02;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х30_Гр05);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("75", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("81", СчетаСРеквизитами).Код,
		ОБ_75__81, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75"), Счет("81")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("81", СчетаСРеквизитами).Код,
		-ОБ_75_02__81, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75.02"), Счет("81")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("81", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75", СчетаСРеквизитами).Код,
		-ОБ_81__75, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("81"), Счет("75")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("81", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код,
		ОБ_81__75_02, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("81"), Счет("75.02")));
	
	Графа = "06";
	ИмяПоказателя = "П000010" + КодСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х30_Гр06 = ОБ_75__83_01- ОБ_75_02__83_01 - ОБ_83_01__75  + ОБ_83_01__75_02;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х30_Гр06);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("75", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		ОБ_75__83_01, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75"), Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		-ОБ_75_02__83_01, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75.02"), Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75", СчетаСРеквизитами).Код,
		-ОБ_83_01__75, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83.01"), Счет("75")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код,
		ОБ_83_01__75_02, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83.01"), Счет("75.02")));
	
	Графа = "07";
	ИмяПоказателя = "П000010" + КодСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	ОБ_75_02__83_01_Исключение = ОБ_75_02__83 + ОБ_75__83_01 - ОБ_75_02__83_01;
	ОБ_83_01__75_02_Исключение = ОБ_83_01__75 + ОБ_83__75_02 - ОБ_83_01__75_02;
	
	Строка3х30_Гр07 = ОБ_75__83 - ОБ_75_02__83_01_Исключение
	                  - ОБ_83__75 + ОБ_83_01__75_02_Исключение;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х30_Гр07);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("75", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("83", СчетаСРеквизитами).Код,
		ОБ_75__83, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75"), Счет("83")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "Исключение оборотов по дебету счета " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код + " и кредиту счета " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		-ОБ_75_02__83_01_Исключение, БезРасшифровки);
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("83", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75", СчетаСРеквизитами).Код,
		-ОБ_83__75, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("83"), Счет("75")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "Исключение оборотов по дебету счета " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код + " и кредиту счета " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код,
		ОБ_83_01__75_02_Исключение, БезРасшифровки);
	
	Графа = "08";
	ИмяПоказателя = "П000010" + КодСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х30_Гр08 = ОБ_75__82 - ОБ_75_02__82 - ОБ_82__75 + ОБ_82__75_02;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х30_Гр08);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("75", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("82", СчетаСРеквизитами).Код,
		ОБ_75__82, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75"), Счет("82")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("82", СчетаСРеквизитами).Код,
		-ОБ_75_02__82, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75.02"), Счет("82")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("82", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75", СчетаСРеквизитами).Код,
		-ОБ_82__75, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("82"), Счет("75")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("82", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код,
		ОБ_82__75_02, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("82"), Счет("75.02")));
	
	Графа = "09";
	ИмяПоказателя = "П000010" + КодСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х30_Гр09 = ОБ_75__84 - ОБ_75_02__84 - ОБ_84__75 + ОБ_84__75_02;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х30_Гр09);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("75", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("84", СчетаСРеквизитами).Код,
		ОБ_75__84, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75"), Счет("84")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("84", СчетаСРеквизитами).Код,
		-ОБ_75_02__84, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("75.02"), Счет("84")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ОБ " + СчетСРеквизитами("84", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75", СчетаСРеквизитами).Код,
		-ОБ_84__75, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("84"), Счет("75")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ОБ " + СчетСРеквизитами("84", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("75.02", СчетаСРеквизитами).Код,
		ОБ_84__75_02, НастройкиАнализаСчета(ПараметрыОтчетовРасшифровки, Счет("84"), Счет("75.02")));
	
	#КонецОбласти
	
	#Область Строка3х40
	
	НомерСтроки = ОписаниеОборотныхСтрок.Строка3х40.Номер;
	НаименованиеСтроки = ОписаниеОборотныхСтрок.Строка3х40.Наименование;
	
	Графа = "04";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х40_Гр04 = КО_80 - ДО_80 - Строка3х11_Гр04 - Строка3х27_Гр04 - Строка3х30_Гр04;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х40_Гр04);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!КО " + СчетСРеквизитами("80", СчетаСРеквизитами).Код,
		КО_80, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("80")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ДО " + СчетСРеквизитами("80", СчетаСРеквизитами).Код,
		-ДО_80, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("80")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х11.Номер, ОписаниеОборотныхСтрок.Строка3х11.Наименование),
		-Строка3х11_Гр04, БезРасшифровки);
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х27.Номер, ОписаниеОборотныхСтрок.Строка3х27.Наименование),
		-Строка3х27_Гр04, БезРасшифровки);
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х30.Номер, ОписаниеОборотныхСтрок.Строка3х30.Наименование),
		-Строка3х30_Гр04, БезРасшифровки);
	
	Графа = "05";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х40_Гр05 = КО_81 - ДО_81 - Строка3х11_Гр05 - Строка3х27_Гр05 - Строка3х30_Гр05;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х40_Гр05);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!КО " + СчетСРеквизитами("81", СчетаСРеквизитами).Код,
		КО_81, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("81")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ДО " + СчетСРеквизитами("81", СчетаСРеквизитами).Код,
		-ДО_81, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("81")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х11.Номер, ОписаниеОборотныхСтрок.Строка3х11.Наименование),
		-Строка3х11_Гр05, БезРасшифровки);
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х27.Номер, ОписаниеОборотныхСтрок.Строка3х27.Наименование),
		-Строка3х27_Гр05, БезРасшифровки);
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х30.Номер, ОписаниеОборотныхСтрок.Строка3х30.Наименование),
		-Строка3х30_Гр05, БезРасшифровки);
	
	Графа = "06";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х40_Гр06 = КО_83_01 - ДО_83_01 - Строка3х11_Гр06 - Строка3х12_Гр06 - Строка3х27_Гр06 - Строка3х30_Гр06;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х40_Гр06);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!КО " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		КО_83_01, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ДО " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		-ДО_83_01, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х11.Номер, ОписаниеОборотныхСтрок.Строка3х11.Наименование),
		-Строка3х11_Гр06, БезРасшифровки);
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х12.Номер, ОписаниеОборотныхСтрок.Строка3х12.Наименование),
		-Строка3х12_Гр06, БезРасшифровки);
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х27.Номер, ОписаниеОборотныхСтрок.Строка3х27.Наименование),
		-Строка3х27_Гр06, БезРасшифровки);
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х30.Номер, ОписаниеОборотныхСтрок.Строка3х30.Наименование),
		-Строка3х30_Гр06, БезРасшифровки);
	
	Графа = "07";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х40_Гр07 = КО_83 - ДО_83 - КО_83_01 + ДО_83_01
	                  - Строка3х11_Гр07 - Строка3х27_Гр07 - Строка3х30_Гр07;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х40_Гр07);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!КО " + СчетСРеквизитами("83", СчетаСРеквизитами).Код,
		КО_83, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("83")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ДО " + СчетСРеквизитами("83", СчетаСРеквизитами).Код,
		-ДО_83, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("83")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!КО " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		-КО_83_01, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!ДО " + СчетСРеквизитами("83.01", СчетаСРеквизитами).Код,
		ДО_83_01, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("83.01")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х11.Номер, ОписаниеОборотныхСтрок.Строка3х11.Наименование),
		-Строка3х11_Гр07, БезРасшифровки);
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х27.Номер, ОписаниеОборотныхСтрок.Строка3х27.Наименование),
		-Строка3х27_Гр07, БезРасшифровки);
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х30.Номер, ОписаниеОборотныхСтрок.Строка3х30.Наименование),
		-Строка3х30_Гр07, БезРасшифровки);
	
	Графа = "08";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х40_Гр08 = КО_82 - ДО_82 - Строка3х11_Гр08 - Строка3х30_Гр08;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х40_Гр08);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!КО " + СчетСРеквизитами("82", СчетаСРеквизитами).Код,
		КО_82, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("82")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ДО " + СчетСРеквизитами("82", СчетаСРеквизитами).Код,
		-ДО_82, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("82")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х11.Номер, ОписаниеОборотныхСтрок.Строка3х11.Наименование),
		-Строка3х11_Гр08, БезРасшифровки);
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х30.Номер, ОписаниеОборотныхСтрок.Строка3х30.Наименование),
		-Строка3х30_Гр08, БезРасшифровки);
	
	Графа = "09";
	ИмяПоказателя = "П000010" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	Строка3х40_Гр09 = КО_84 - ДО_84 + СКК_99 - СКД_99
	                  - Строка3х11_Гр09 - Строка3х27_Гр09 - Строка3х30_Гр09;
	
	УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, Строка3х40_Гр09);
	
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!КО " + СчетСРеквизитами("84", СчетаСРеквизитами).Код,
		КО_84, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("84")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!ДО " + СчетСРеквизитами("84", СчетаСРеквизитами).Код,
		-ДО_84, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("84")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"+", "!СКК " + СчетСРеквизитами("99", СчетаСРеквизитами).Код,
		СКК_99, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("99")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", "!СКД " + СчетСРеквизитами("99", СчетаСРеквизитами).Код,
		-СКД_99, НастройкиОСВПоСчету(ПараметрыОтчетовРасшифровки, Счет("99")));
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х11.Номер, ОписаниеОборотныхСтрок.Строка3х11.Наименование),
		-Строка3х11_Гр09, БезРасшифровки);
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х27.Номер, ОписаниеОборотныхСтрок.Строка3х27.Наименование),
		-Строка3х27_Гр09, БезРасшифровки);
	ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки,
		"-", СтрШаблон("Значение показателя ""%2"" (%1) - в этой же графе",
		ОписаниеОборотныхСтрок.Строка3х30.Номер, ОписаниеОборотныхСтрок.Строка3х30.Наименование),
		-Строка3х30_Гр09, БезРасшифровки);
	
	#КонецОбласти
	
КонецПроцедуры

Функция НовыеПараметрыЗаполненияОИК()
	
	ПараметрыЗаполнения = Новый Структура;
	
	ПараметрыЗаполнения.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	ПараметрыЗаполнения.Вставить("Контейнер", Новый ДеревоЗначений);
	
	ПараметрыЗаполнения.Вставить("НачалоОтчетногоПериода", '0001-01-01');
	ПараметрыЗаполнения.Вставить("КонецОтчетногоПериода", '0001-01-01');
	
	СчетаСРеквизитами = Новый ТаблицаЗначений;
	СчетаСРеквизитами.Колонки.Добавить("УсловныйКод", Новый ОписаниеТипов("Строка"));
	СчетаСРеквизитами.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	СчетаСРеквизитами.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка"));
	СчетаСРеквизитами.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ПараметрыЗаполнения.Вставить("СчетаСРеквизитами", СчетаСРеквизитами);
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция Составляющая(ОписаниеСоставляющей, ДопПараметры = Неопределено)
	
	Составляющая = Новый Массив(2);
	Составляющая[0] = ОписаниеСоставляющей;
	Составляющая[1] = ДопПараметры;
	
	Возврат Составляющая;
	
КонецФункции

Функция ПараметрыСчетов_Баланс2025Кв1()
	
	ПараметрыСчетов = Новый Соответствие;
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("ШаблонОписания", "/по договорам с признаком отражения в балансе ""%2""/");
	ПараметрыСчета.Вставить("ОтборПоАналитике", "Субконто2.ВидАктива");
	
	ПараметрыСчетов.Вставить("60.02", ПараметрыСчета);
	ПараметрыСчетов.Вставить("60.22", ПараметрыСчета);
	ПараметрыСчетов.Вставить("60.32", ПараметрыСчета);
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("ШаблонОписания", "/по договорам с признаком отражения в балансе ""%2""/");
	
	ПараметрыСчетов.Вставить("76.ВА", ПараметрыСчета);
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("ШаблонОписания", "по расходам будущих периодов с видом актива в балансе ""%2""");
	ПараметрыСчета.Вставить("ОтборПоАналитике", "Субконто1.ВидАктива");
	
	ПараметрыСчетов.Вставить("97", ПараметрыСчета);
	ПараметрыСчетов.Вставить("97.11", ПараметрыСчета);
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("ШаблонОписания", "по расходам будущих периодов с видом актива в балансе ""%2""");
	ПараметрыСчета.Вставить("ОтборПоАналитике", "Субконто2.ВидАктива");
	
	ПараметрыСчетов.Вставить("76.01.2", ПараметрыСчета);
	ПараметрыСчетов.Вставить("76.01.9", ПараметрыСчета);
	
	Возврат ПараметрыСчетов;
	
КонецФункции

Функция ТекстыРасшифровкиПоказателей(ПараметрыЗаполнения)
	
	Тексты = Новый Соответствие;

	Возврат Тексты;

КонецФункции

Функция БухгалтерскиеИтоги_Баланс2025Кв1(Организация, КонецПериодаОтчета, ИтогиПоСчетам)
	
	СальдоИОборотыПоСчетам = ИтогиПоСчетам.СальдоИОборотыПоСчетам;
	
	РассчитанныеЗначения = Новый Соответствие;
	
	РассчитанныеЗначения.Вставить("СальдоИОборотыПоСчетам", ИтогиПоСчетам.СальдоИОборотыПоСчетам);
	РассчитанныеЗначения.Вставить("СиО_КонтрагентыДоговоры", ИтогиПоСчетам.СиО_КонтрагентыДоговоры);
	РассчитанныеЗначения.Вставить("СиО_Контрагенты", ИтогиПоСчетам.СиО_Контрагенты);
	РассчитанныеЗначения.Вставить("СиО_ВидыПлатежейУровниБюджетов", ИтогиПоСчетам.СиО_ВидыПлатежейУровниБюджетов);
	РассчитанныеЗначения.Вставить("СиО_ВидыПлатежей", ИтогиПоСчетам.СиО_ВидыПлатежей);
	РассчитанныеЗначения.Вставить("СиО_Работники", ИтогиПоСчетам.СиО_Работники);
	РассчитанныеЗначения.Вставить("СиО_Резервы", ИтогиПоСчетам.СиО_Резервы);
	РассчитанныеЗначения.Вставить("СиО_Аренда", ИтогиПоСчетам.СиО_Аренда); // Учет аренды в ERP
	
	РазделенноеСальдоСчета_02_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_02_01(КонецПериодаОтчета, Организация);
	РассчитанныеЗначения.Вставить("СКК_02_01__01_01", РазделенноеСальдоСчета_02_01.СКК_02_01__01_01); // Амортизация ОС, учитываемых на счете 01.01
	РассчитанныеЗначения.Вставить("СКК_02_01__01_08", РазделенноеСальдоСчета_02_01.СКК_02_01__01_08); // Амортизация ОС, учитываемых на счете 01.08
	
	РазделенноеСальдоСчета_02_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_02_02(КонецПериодаОтчета, Организация);
	РассчитанныеЗначения.Вставить("СКК_02_02__03_01", РазделенноеСальдоСчета_02_02.СКК_02_02__03_01); // Амортизация ОС, учитываемых на счете 03.01
	РассчитанныеЗначения.Вставить("СКК_02_02__03_02", РазделенноеСальдоСчета_02_02.СКК_02_02__03_02); // Амортизация ОС, учитываемых на счете 03.02
	РассчитанныеЗначения.Вставить("СКК_02_02__03_03", РазделенноеСальдоСчета_02_02.СКК_02_02__03_03); // Амортизация ОС, учитываемых на счете 03.03
	РассчитанныеЗначения.Вставить("СКК_02_02__03_04", РазделенноеСальдоСчета_02_02.СКК_02_02__03_04); // Амортизация ОС, учитываемых на счете 03.04
	
	СКК_СВычетами_63 = СКК("63", СальдоИОборотыПоСчетам);
	СКК_СВычетами_76_ВА = СКК("76.ВА", СальдоИОборотыПоСчетам);
	
	РассчитанныеЗначения.Вставить("СКК_СВычетами_63", СКК_СВычетами_63);
	РассчитанныеЗначения.Вставить("СКК_СВычетами_76_ВА", СКК_СВычетами_76_ВА);
	
	СтруктураСальдо97 =ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_97(КонецПериодаОтчета, Организация);
	РассчитанныеЗначения.Вставить("СКД_ПоВидуАктива_97", СтруктураСальдо97.Сальдо_97);
	РассчитанныеЗначения.Вставить("СКД_ПоВидуАктива_97_11", СтруктураСальдо97.Сальдо_97_11);
	РассчитанныеЗначения.Вставить("СКД_ПоВидуАктива_76_01_2",
		ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_76(Счет("76.01.2"), КонецПериодаОтчета, Организация));
	РассчитанныеЗначения.Вставить("СКД_ПоВидуАктива_76_01_9",
		ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_76(Счет("76.01.9"), КонецПериодаОтчета, Организация));
	
	Возврат РассчитанныеЗначения;
	
КонецФункции

Процедура УстановитьЗначениеОсновногоПоказателя(КонтейнерРаздела, ИмяПоказателя, ЗначениеПоказателя)
	
	СтрокаПоказателя = ОсновнойПоказательРаздела(КонтейнерРаздела, ИмяПоказателя);
	СтрокаПоказателя.Данные = СтрокаПоказателя.Данные + ЗначениеПоказателя;
	
КонецПроцедуры

Процедура ДобавитьРасшифровкуОсновногоПоказателя(ПараметрыРасшифровки, ИмяПоказателя, НаименованиеПоказателя,
	ЗнакОперации, НаименованиеСлагаемого, Сумма, ДополнительныеПараметры)
	
	ИмяРаздела       = ПараметрыРасшифровки.ИмяРаздела;
	КонтейнерРаздела = ПараметрыРасшифровки.КонтейнерРаздела;
	Организация      = ПараметрыРасшифровки.Организация;
	
	ПараметрыСтрокиРасшифровки = Новый Структура;
	ПараметрыСтрокиРасшифровки.Вставить("НаименованиеПоказателя", НаименованиеПоказателя);
	ПараметрыСтрокиРасшифровки.Вставить("ЗнакОперации", ЗнакОперации);
	ПараметрыСтрокиРасшифровки.Вставить("НаименованиеСлагаемого", НаименованиеСлагаемого);
	ПараметрыСтрокиРасшифровки.Вставить("Сумма", Сумма);
	ПараметрыСтрокиРасшифровки.Вставить("ИмяРаздела", ИмяРаздела);
	ПараметрыСтрокиРасшифровки.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	ПараметрыСтрокиРасшифровки.Вставить("Организация", Организация);
	
	СтрокаПоказателя = ОсновнойПоказательРаздела(КонтейнерРаздела, ИмяПоказателя);
	
	СтрокаРасшифровки = СтрокаПоказателя.Строки.Добавить();
	СтрокаРасшифровки.Тип = "Расшифровка";
	СтрокаРасшифровки.Идентификатор = "";
	СтрокаРасшифровки.Данные = ПараметрыСтрокиРасшифровки;
	
Конецпроцедуры

Функция ОсновнойПоказательРаздела(КонтейнерРаздела, ИмяПоказателя)
	
	ПараметрыПоискаПоказателя = Новый Структура("Тип, Идентификатор", "Показатель", ИмяПоказателя);
	СтрокиПоказателей = КонтейнерРаздела.Строки.НайтиСтроки(ПараметрыПоискаПоказателя);
	Возврат СтрокиПоказателей[0];
	
КонецФункции

#Область ПроцессорПоказателя
// Назначение процессора - устранить избыточность кода.
// Задачи процессора:
//   - изменение значения показателя;
//   - формирование записи в расшифровке;
//   - присваивание итогового значения.

// Конструктор процессора показателя.
//
// Возвращаемое значение:
//   Структура:
//     * СчетаСРеквизитами - ТаблицаЗначений
//     * ПараметрыСчетов - Соответствие из Произвольный
//     * ТекстыРасшифровки - Соответствие из Произвольный
//     * РассчитанныеЗначения - Соответствие из Произвольный
//     * ИмяРаздела - Строка
//     * Организация - СправочникСсылка.Организации
//     * НачалоПериода - Дата
//                     - МоментВремениСУточнениемПериода
//     * КонецПериода - Дата
//                    - МоментВремениСУточнениемПериода
//     * Показатель - Структура:
//         ** КодПоказателя - Строка
//         ** НаименованиеПоказателя - Строка
//         ** ЗначениеПоказателя - Число
//         ** Расшифровка - Массив из Структура
//
Функция НовыйПроцессорПоказателя() Экспорт
	
	ПроцессорПоказателя = Новый Структура;
	
	// Общие параметры.
	ПроцессорПоказателя.Вставить("СчетаСРеквизитами", Новый ТаблицаЗначений);
	ПроцессорПоказателя.Вставить("ПараметрыСчетов", Новый Соответствие);
	ПроцессорПоказателя.Вставить("ТекстыРасшифровки", Новый Соответствие);
	ПроцессорПоказателя.Вставить("РассчитанныеЗначения", Новый Соответствие);
	ПроцессорПоказателя.Вставить("ИмяРаздела", "");
	ПроцессорПоказателя.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	ПроцессорПоказателя.Вставить("НачалоПериода", '0001-01-01');
	ПроцессорПоказателя.Вставить("КонецПериода", '0001-01-01');
	
	// Параметры показателя.
	Показатель = Новый Структура;
	ПроцессорПоказателя.Вставить("Показатель", Показатель);
	
	Показатель.Вставить("КодПоказателя", "");
	Показатель.Вставить("НаименованиеПоказателя", "");
	Показатель.Вставить("ЗначениеПоказателя", 0);
	Показатель.Вставить("Расшифровка", Новый Массив);
	
	Возврат ПроцессорПоказателя;
	
КонецФункции

// Возвращает неинициализированные параметры для вывода расшифровки при отражении составляющей по значению.
// 
// Возвращаемое значение:
//   Структура:
//     * ТокенЗнака - Строка - принимает значение "+" или "-"
//     * ОписаниеРасшифровки - Строка
//     * НастройкаОтчетаРасшифровки - Произвольный
//
Функция НовыеПараметрыРасшифровки() Экспорт
	
	ПараметрыРасшифровки = Новый Структура;
	
	ПараметрыРасшифровки.Вставить("ТокенЗнака", "");
	ПараметрыРасшифровки.Вставить("ОписаниеРасшифровки", "");
	ПараметрыРасшифровки.Вставить("НастройкаОтчетаРасшифровки");
	
	Возврат ПараметрыРасшифровки;
	
КонецФункции

// Вносит изменения в итоговое значение показателя и формирует запись в расшифровке алгоритма по описанию алгоритма.
//
// Параметры:
//   ПроцессорПоказателя - Структура - описание параметра см. НовыйПроцессорПоказателя.
//   ОписаниеСоставляющей - Строка - символьное выражение, описывающее порядок отражения составляющей в итоговом показателе.
//   ДопПараметры - Произвольный - допольнительные параметры, требующиеся для отражения составляющей.
//
Процедура УчестьСоставляющую(ПроцессорПоказателя, ОписаниеСоставляющей, ДопПараметры = Неопределено) Экспорт
	
	СчетаСРеквизитами = ПроцессорПоказателя.СчетаСРеквизитами;
	
	СальдоИОборотыПоСчетам = ПроцессорПоказателя.РассчитанныеЗначения["СальдоИОборотыПоСчетам"];
	ОборотыМеждуСчетами    = ПроцессорПоказателя.РассчитанныеЗначения["ОборотыМеждуСчетами"];
	
	СиО_КонтрагентыДоговоры        = ПроцессорПоказателя.РассчитанныеЗначения["СиО_КонтрагентыДоговоры"];
	СиО_Контрагенты                = ПроцессорПоказателя.РассчитанныеЗначения["СиО_Контрагенты"];
	СиО_ВидыПлатежейУровниБюджетов = ПроцессорПоказателя.РассчитанныеЗначения["СиО_ВидыПлатежейУровниБюджетов"];
	СиО_ВидыПлатежей               = ПроцессорПоказателя.РассчитанныеЗначения["СиО_ВидыПлатежей"];
	СиО_Работники                  = ПроцессорПоказателя.РассчитанныеЗначения["СиО_Работники"];
	СиО_Резервы                    = ПроцессорПоказателя.РассчитанныеЗначения["СиО_Резервы"];
	СиО_Аренда                     = ПроцессорПоказателя.РассчитанныеЗначения["СиО_Аренда"];
	
	ТекстыРасшифровки = ПроцессорПоказателя.ТекстыРасшифровки;
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Организация",   ПроцессорПоказателя.Организация);
	ПараметрыРасшифровки.Вставить("НачалоПериода", ПроцессорПоказателя.НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",  ПроцессорПоказателя.КонецПериода);
	
	БезРасшифровки = Новый Структура("Организация", ПроцессорПоказателя.Организация);
	
	Составляющая = СтрЗаменить(ОписаниеСоставляющей, " ", "");
	ТокенЗнака = Лев(Составляющая, 1);
	Множитель = 1;
	Если ТокенЗнака = "-" Тогда
		Множитель = -1;
	КонецЕсли;
	Составляющая = Сред(Составляющая, 2);
	Если СтрНачинаетсяС(Составляющая, "СНД_ПоВидуАктива") Тогда
		ТокенОстатка = "СНД_ПоВидуАктива";
		ТокенСчета = Сред(Составляющая, 17);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ПараметрыСчета = ПроцессорПоказателя.ПараметрыСчетов[ТокенСчета];
		ИмяЗначения = ТокенОстатка + "_" + СтрЗаменить(ТокенСчета, ".", "_");
		ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения][ДопПараметры];
		
		Если ПараметрыСчета.Свойство("ШаблонОписания") Тогда
			ТекстШаблона = "Сальдо на начало периода по дебету счета %1 " + ПараметрыСчета.ШаблонОписания;
		Иначе
			ТекстШаблона = "Сальдо на начало периода по дебету счета %1 /объекты со значением реквизита ""Вид актива"" - ""%2""/";
		КонецЕсли;
		ШаблонРасшифровкиПоказателя = СтрШаблон(ТекстШаблона, Счет.Код, Строка(ДопПараметры));
		
		Если ПараметрыСчета.Свойство("ОтборПоАналитике") Тогда
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить(ПараметрыСчета.ОтборПоАналитике, ДопПараметры);
			НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка, ОтборПоАналитике);
		Иначе
			НастройкаОтчетаРасшифровки = БезРасшифровки;
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "ДО_ПоВидуАктива") Тогда
		ТокенОстатка = "ДО_ПоВидуАктива";
		ТокенСчета = Сред(Составляющая, 16);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ПараметрыСчета = ПроцессорПоказателя.ПараметрыСчетов[ТокенСчета];
		ИмяЗначения = ТокенОстатка + "_" + СтрЗаменить(ТокенСчета, ".", "_");
		ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения][ДопПараметры];
		
		Если ПараметрыСчета.Свойство("ШаблонОписания") Тогда
			ТекстШаблона = "Оборот по дебету счета %1 " + ПараметрыСчета.ШаблонОписания;
		Иначе
			ТекстШаблона = "Оборот по дебету счета %1 /объекты со значением реквизита ""Вид актива"" - ""%2""/";
		КонецЕсли;
		ШаблонРасшифровкиПоказателя = СтрШаблон(ТекстШаблона, Счет.Код, Строка(ДопПараметры));
		
		Если ПараметрыСчета.Свойство("ОтборПоАналитике") Тогда
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить(ПараметрыСчета.ОтборПоАналитике, ДопПараметры);
			НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка, ОтборПоАналитике);
		Иначе
			НастройкаОтчетаРасшифровки = БезРасшифровки;
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "КО_ПоВидуАктива") Тогда
		ТокенОстатка = "КО_ПоВидуАктива";
		ТокенСчета = Сред(Составляющая, 16);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ПараметрыСчета = ПроцессорПоказателя.ПараметрыСчетов[ТокенСчета];
		ИмяЗначения = ТокенОстатка + "_" + СтрЗаменить(ТокенСчета, ".", "_");
		ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения][ДопПараметры];
		
		Если ПараметрыСчета.Свойство("ШаблонОписания") Тогда
			ТекстШаблона = "Оборот по кредиту счета %1 " + ПараметрыСчета.ШаблонОписания;
		Иначе
			ТекстШаблона = "Оборот по кредиту счета %1 /объекты со значением реквизита ""Вид актива"" - ""%2""/";
		КонецЕсли;
		ШаблонРасшифровкиПоказателя = СтрШаблон(ТекстШаблона, Счет.Код, Строка(ДопПараметры));
		
		Если ПараметрыСчета.Свойство("ОтборПоАналитике") Тогда
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить(ПараметрыСчета.ОтборПоАналитике, ДопПараметры);
			НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка, ОтборПоАналитике);
		Иначе
			НастройкаОтчетаРасшифровки = БезРасшифровки;
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКД_ПоВидуАктива") Тогда
		ТокенОстатка = "СКД_ПоВидуАктива";
		ТокенСчета = Сред(Составляющая, 17);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ПараметрыСчета = ПроцессорПоказателя.ПараметрыСчетов[ТокенСчета];
		ИмяЗначения = ТокенОстатка + "_" + СтрЗаменить(ТокенСчета, ".", "_");
		ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения][ДопПараметры];
		
		Если ПараметрыСчета.Свойство("ШаблонОписания") Тогда
			ТекстШаблона = "Сальдо на конец периода по дебету счета %1 " + ПараметрыСчета.ШаблонОписания;
		Иначе
			ТекстШаблона = "Сальдо на конец периода по дебету счета %1 /объекты со значением реквизита ""Вид актива"" - ""%2""/";
		КонецЕсли;
		ШаблонРасшифровкиПоказателя = СтрШаблон(ТекстШаблона, Счет.Код, Строка(ДопПараметры));
		
		Если ПараметрыСчета.Свойство("ОтборПоАналитике") Тогда
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить(ПараметрыСчета.ОтборПоАналитике, ДопПараметры);
			НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка, ОтборПоАналитике);
		Иначе
			НастройкаОтчетаРасшифровки = БезРасшифровки;
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКК_ПоВидуАктива") Тогда
		ТокенОстатка = "СКК_ПоВидуАктива";
		Счета = Список(Сред(Составляющая, 17));
		
		Если Счета.Количество() = 1 Тогда
			// Простое разделение по аналитике внутри счета.
			ТокенСчета = Счета[0];
			Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
			ПараметрыСчета = ПроцессорПоказателя.ПараметрыСчетов[ТокенСчета];
			ИмяЗначения = ТокенОстатка + "_" + СтрЗаменить(ТокенСчета, ".", "_");
			ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения][ДопПараметры];
			
			Если ПараметрыСчета.Свойство("ШаблонОписания") Тогда
				ТекстШаблона = "Сальдо на конец периода по кредиту счета %1 " + ПараметрыСчета.ШаблонОписания;
			Иначе
				ТекстШаблона = "Сальдо на конец периода по кредиту счета %1 /объекты со значением реквизита ""Вид актива"" - ""%2""/";
			КонецЕсли;
			ШаблонРасшифровкиПоказателя = СтрШаблон(ТекстШаблона, Счет.Код, Строка(ДопПараметры));
			
			Если ПараметрыСчета.Свойство("ОтборПоАналитике") Тогда
				ОтборПоАналитике = Новый Соответствие;
				ОтборПоАналитике.Вставить(ПараметрыСчета.ОтборПоАналитике, ДопПараметры);
				НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка, ОтборПоАналитике);
			Иначе
				НастройкаОтчетаРасшифровки = БезРасшифровки;
			КонецЕсли;
			
		Иначе
			// Разделение по аналитике в связке с внешними счетами.
			ИмяЗначения = ТокенОстатка + "_" + СтрЗаменить(Счета[0], ".", "_")
			            + "__" + СтрЗаменить(Счета[1], ".", "_");
			ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения][ДопПараметры];
			ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1 по объектам, учитываемым на счете %2",
				СчетСРеквизитами(Счета[0], СчетаСРеквизитами).Код,
				СчетСРеквизитами(Счета[1], СчетаСРеквизитами).Код);
			НастройкаОтчетаРасшифровки = БезРасшифровки;
			
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКК_СВычетами") Тогда
		ТокенОстатка = "СКК_СВычетами";
		ТокенСчета = Сред(Составляющая, 14);
		ИмяЗначения = ТокенОстатка + "_" + СтрЗаменить(ТокенСчета, ".", "_");
		ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения];
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1 уменьшенное на величины, выделенные по объектам учета",
			СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами).Код);
		НастройкаОтчетаРасшифровки = БезРасшифровки;
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДР_КонтрагентыДоговоры") Тогда
		ТокенСчета = Сред(Составляющая, 25);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_КонтрагентыДоговоры);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по дебету счета %1, развернутое по субконто ""Контрагенты"", ""Договоры""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыДоговорыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККР_КонтрагентыДоговоры") Тогда
		ТокенСчета = Сред(Составляющая, 25);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_КонтрагентыДоговоры);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Контрагенты"", ""Договоры""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыДоговорыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДП_КонтрагентыДоговоры") Тогда
		// Дебетовое сальдо на активных счетах, при развертке счета по субконто.
		ТокенСчета = Сред(Составляющая, 25);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_КонтрагентыДоговоры);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Положительное сальдо на конец периода по дебету счета %1 по субконто ""Контрагенты"", ""Договоры""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыДоговорыСКДПоложительное(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККП_КонтрагентыДоговоры") Тогда
		// Кредитовое сальдо на пассивных счетах, при развертке счета по субконто.
		ТокенСчета = Сред(Составляющая, 25);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_КонтрагентыДоговоры);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Положительное сальдо на конец периода по кредиту счета %1 по субконто ""Контрагенты"", ""Договоры""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыДоговорыСККПоложительное(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДО_КонтрагентыДоговоры") Тогда
		// Кредитовое сальдо на активных счетах, при развертке счета по субконто.
		ТокенСчета = Сред(Составляющая, 25);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_КонтрагентыДоговоры);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Отрицательное сальдо на конец периода по дебету счета %1 по субконто ""Контрагенты"", ""Договоры""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыДоговорыСКДОтрицательное(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККО_КонтрагентыДоговоры") Тогда
		// Дебетовое сальдо на пассивных счетах, при развертке счета по субконто.
		ТокенСчета = Сред(Составляющая, 25);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_КонтрагентыДоговоры);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Отрицательное сальдо на конец периода по кредиту счета %1 по субконто ""Контрагенты"", ""Договоры""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыДоговорыСККОтрицательное(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДР_Контрагенты") Тогда
		ТокенСчета = Сред(Составляющая, 17);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_Контрагенты);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по дебету счета %1, развернутое по субконто ""Контрагенты""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККР_Контрагенты") Тогда
		ТокенСчета = Сред(Составляющая, 17);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_Контрагенты);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Контрагенты""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДР_ВидыПлатежейУровни") Тогда
		ТокенСчета = Сред(Составляющая, 24);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_ВидыПлатежейУровниБюджетов);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по дебету счета %1, развернутое по субконто ""Виды платежей в бюджет (фонды)"", ""Уровни бюджетов""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуВидыПлатежейУровниБюджетовРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККР_ВидыПлатежейУровни") Тогда
		ТокенСчета = Сред(Составляющая, 24);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_ВидыПлатежейУровниБюджетов);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Виды платежей в бюджет (фонды)"", ""Уровни бюджетов""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуВидыПлатежейУровниБюджетовРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДР_ВидыПлатежей") Тогда
		ТокенСчета = Сред(Составляющая, 18);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_ВидыПлатежей);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по дебету счета %1, развернутое по субконто ""Виды платежей в бюджет (фонды)""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуВидыПлатежейРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККР_ВидыПлатежей") Тогда
		ТокенСчета = Сред(Составляющая, 18);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_ВидыПлатежей);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Виды платежей в бюджет (фонды)""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуВидыПлатежейРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДР_Работники") Тогда
		ТокенСчета = Сред(Составляющая, 15);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_Работники);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по дебету счета %1, развернутое по субконто ""Работники организации""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуРаботникиРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККР_Работники") Тогда
		ТокенСчета = Сред(Составляющая, 15);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_Работники);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Работники организации""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуРаботникиРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДР_Резервы") Тогда
		ТокенСчета = Сред(Составляющая, 13);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_Резервы);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по дебету счета %1, развернутое по субконто ""Оценочные обязательства и резервы""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККР_Резервы") Тогда
		ТокенСчета = Сред(Составляющая, 13);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_Резервы);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Оценочные обязательства и резервы""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКД_Аренда") Тогда
		ТокенСчета = Сред(Составляющая, 11);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКД(Счет.Ссылка, СиО_Аренда.ДебиторскаяЗадолженность);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по дебету счета %1, развернутое по субконто ""Контрагенты"", ""Договоры"" по незаключенным договорам аренды",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);

	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКК_Аренда") Тогда
		ТокенСчета = Сред(Составляющая, 11);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКК(Счет.Ссылка, СиО_Аренда.КредиторскаяЗадолженность);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Контрагенты"", ""Договоры"" по заключенным договорам аренды",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);

	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДР") Тогда
		ТокенСчета = Сред(Составляющая, 5);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СальдоИОборотыПоСчетам);
		ШаблонРасшифровкиПоказателя = "!СКДР " + Счет.Код;
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККР") Тогда
		ТокенСчета = Сред(Составляющая, 5);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СальдоИОборотыПоСчетам);
		ШаблонРасшифровкиПоказателя = "!СККР " + Счет.Код;
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СНД") Тогда
		ТокенСчета = Сред(Составляющая, 4);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СНД(Счет.Ссылка, СальдоИОборотыПоСчетам);
		ШаблонРасшифровкиПоказателя = "!СНД " + Счет.Код;
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СНК") Тогда
		ТокенСчета = Сред(Составляющая, 4);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СНК(Счет.Ссылка, СальдоИОборотыПоСчетам);
		ШаблонРасшифровкиПоказателя = "!СНК " + Счет.Код;
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКД") Тогда
		ТокенСчета = Сред(Составляющая, 4);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКД(Счет.Ссылка, СальдоИОборотыПоСчетам);
		ШаблонРасшифровкиПоказателя = "!СКД " + Счет.Код;
		Если ДопПараметры = "НастройкиОтчетаКонтрагентыДоговоры" Тогда
			НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыДоговоры(ПараметрыРасшифровки, Счет.Ссылка);
		Иначе
			НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка);
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКК") Тогда
		ТокенСчета = Сред(Составляющая, 4);
		Если СтрНайти(ТокенСчета, "\") > 0 Тогда
			ТокеныСчетов = СтрРазделить(ТокенСчета, "\");
			ИмяЗначения = "СКК_" + СтрЗаменить(ТокеныСчетов[0], ".", "_")
			            + "__" + СтрЗаменить(ТокеныСчетов[1], ".", "_");
			ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения];
			ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1 по объектам, учитываемым на счете %2",
				СчетСРеквизитами(ТокеныСчетов[0], СчетаСРеквизитами).Код,
				СчетСРеквизитами(ТокеныСчетов[1], СчетаСРеквизитами).Код);
			НастройкаОтчетаРасшифровки = БезРасшифровки;
		Иначе
			Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
			ЗначениеСоставляющей = СКК(Счет.Ссылка, СальдоИОборотыПоСчетам);
			ШаблонРасшифровкиПоказателя = "!СКК " + Счет.Код;
			Если ДопПараметры = "НастройкиОтчетаКонтрагентыДоговоры" Тогда
				НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыДоговоры(ПараметрыРасшифровки, Счет.Ссылка);
			Иначе
				НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "ДО") Тогда
		ТокенСчета = Сред(Составляющая, 3);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = ДО(Счет.Ссылка, СальдоИОборотыПоСчетам);
		ШаблонРасшифровкиПоказателя = "!ДО " + Счет.Код;
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "КО") Тогда
		ТокенСчета = Сред(Составляющая, 3);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = КО(Счет.Ссылка, СальдоИОборотыПоСчетам);
		ШаблонРасшифровкиПоказателя = "!КО " + Счет.Код;
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "ОБ") Тогда
		Счета = СтрРазделить(Сред(Составляющая, 3), ",");
		Счета[0] = СчетСРеквизитами(Счета[0], СчетаСРеквизитами);
		Счета[1] = СчетСРеквизитами(Счета[1], СчетаСРеквизитами);
		ЗначениеСоставляющей = ОБ(Счета[0].Ссылка, Счета[1].Ссылка, ОборотыМеждуСчетами);
		ШаблонРасшифровкиПоказателя = "!ОБ " + Счета[0].Код + " " + Счета[1].Код;
		НастройкаОтчетаРасшифровки = НастройкиАнализаСчета(ПараметрыРасшифровки, Счета[0].Ссылка, Счета[1].Ссылка);
		
	Иначе
		ИмяПроцедуры = "ЗаполнениеБухгалтерскойОтчетностиОсновная.УчестьСоставляющую";
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Процедура %1:
			|Недопустимое описание составляющей показателя: %2';
			|en = 'Процедура %1:
			|Недопустимое описание составляющей показателя: %2'"),
			ИмяПроцедуры, ОписаниеСоставляющей);
		
	КонецЕсли;
	
	ПроцессорПоказателя.Показатель.ЗначениеПоказателя = ПроцессорПоказателя.Показатель.ЗначениеПоказателя
		+ Множитель * ЗначениеСоставляющей;
	
	ПараметрыСтрокиРасшифровки = Новый Структура;
	ПараметрыСтрокиРасшифровки.Вставить("НаименованиеПоказателя", ПроцессорПоказателя.Показатель.НаименованиеПоказателя);
	ПараметрыСтрокиРасшифровки.Вставить("ЗнакОперации", ТокенЗнака);
	ПараметрыСтрокиРасшифровки.Вставить("НаименованиеСлагаемого", ШаблонРасшифровкиПоказателя);
	ПараметрыСтрокиРасшифровки.Вставить("Сумма", Множитель * ЗначениеСоставляющей);
	ПараметрыСтрокиРасшифровки.Вставить("ИмяРаздела", ПроцессорПоказателя.ИмяРаздела);
	ПараметрыСтрокиРасшифровки.Вставить("ДополнительныеПараметры", НастройкаОтчетаРасшифровки);
	ПараметрыСтрокиРасшифровки.Вставить("Организация", ПроцессорПоказателя.Организация);
	
	ПроцессорПоказателя.Показатель.Расшифровка.Добавить(ПараметрыСтрокиРасшифровки);
	
	// Наименование показателя актуально только для первой строки расшифровки.
	// Принудительная очистка в вызывающем коде не требуется.
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "";
	
КонецПроцедуры

Процедура УстановитьЗначениеПоказателяПоПроцессору(КонтейнерРаздела, ПроцессорПоказателя, АлгоритмСтроки) Экспорт
	
	ИмяПоказателя = ПроцессорПоказателя.Показатель.КодПоказателя;
	
	ЗначениеПоказателя = ПроцессорПоказателя.Показатель.ЗначениеПоказателя;
	Если АлгоритмСтроки.Вычитаемый Тогда
		ЗначениеПоказателя = -ЗначениеПоказателя;
	КонецЕсли;
	
	ПараметрыПоискаПоказателя = Новый Структура("Тип, Идентификатор", "Показатель", ИмяПоказателя);
	СтрокиПоказателей = КонтейнерРаздела.Строки.НайтиСтроки(ПараметрыПоискаПоказателя, АлгоритмСтроки.Вписываемый);
	СтрокаПоказателя = СтрокиПоказателей[0];
	СтрокаПоказателя.Данные = СтрокаПоказателя.Данные + ЗначениеПоказателя;
	
	Если ПроцессорПоказателя.Показатель.Расшифровка.Количество() <> 0 Тогда
		Для Каждого ПараметрыСтрокиРасшифровки Из ПроцессорПоказателя.Показатель.Расшифровка Цикл
			СтрокаРасшифровки = СтрокаПоказателя.Строки.Добавить();
			СтрокаРасшифровки.Тип = "Расшифровка";
			СтрокаРасшифровки.Идентификатор = "";
			СтрокаРасшифровки.Данные = ПараметрыСтрокиРасшифровки;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьНаименованиеВписываемогоПоказателя(КонтейнерРаздела, АлгоритмСтроки)
	
	ИмяПоказателя = "П10001А" + АлгоритмСтроки.Номер + АлгоритмСтроки.ГрафаНаименования;
	
	ПараметрыПоискаПоказателя = Новый Структура("Тип, Идентификатор", "Показатель", ИмяПоказателя);
	СтрокиПоказателей = КонтейнерРаздела.Строки.НайтиСтроки(ПараметрыПоискаПоказателя, Истина);
	СтрокаПоказателя = СтрокиПоказателей[0];
	СтрокаПоказателя.Данные = АлгоритмСтроки.Наименование;
	
КонецПроцедуры

Процедура ИнициализироватьЗаполнениеПоказателя(ПроцессорПоказателя, НомерСтроки, НомерГрафы, Вписываемый) Экспорт
	
	Префикс         = "П00001";
	ПолныйКодНомера = "00000";
	ПолныйКодГрафы  = "00";
	
	Если Вписываемый Тогда
		Префикс         = "П10001";
		ПолныйКодНомера = "А00000";
	КонецЕсли;
	
	ПроцессорПоказателя.Показатель.КодПоказателя = Префикс
		+ Лев(ПолныйКодНомера, 5 - СтрДлина(НомерСтроки)) + НомерСтроки
		+ Лев(ПолныйКодГрафы, 2 - СтрДлина(НомерГрафы)) + НомерГрафы;
	
	ПроцессорПоказателя.Показатель.ЗначениеПоказателя = 0;
	ПроцессорПоказателя.Показатель.Расшифровка = Новый Массив;
	
КонецПроцедуры

#КонецОбласти

#Область ОбслуживаниеКонтейнера

Функция МногострочнаяЧастьРаздела(КонтейнерРаздела, ИдентификаторМСЧ)
	
	ПараметрыПоиска = Новый Структура("Тип, Идентификатор", "МногострочнаяЧасть", ИдентификаторМСЧ);
	
	Возврат КонтейнерРаздела.Строки.НайтиСтроки(ПараметрыПоиска, Истина)[0];
	
КонецФункции

// Возвращает строки многострочной части с сохранением порядка следования.
// 
// Параметры:
//   ОбъявлениеМногострочнойЧасти - СтрокаДереваЗначений
// 
// Возвращаемое значение:
//   Массив из СтрокаДереваЗначений
//
Функция СтрокиМногострочнойЧасти(ОбъявлениеМногострочнойЧасти)
	
	СтрокиМСЧ = Новый Массив;
	
	Для Каждого СтрокаМСЧ Из ОбъявлениеМногострочнойЧасти.Строки Цикл
		Если СтрокаМСЧ.Тип = "Строка" Тогда
			СтрокиМСЧ.Добавить(СтрокаМСЧ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрокиМСЧ;
	
КонецФункции

Процедура СкопироватьВеткуДерева(ИсходнаяВетка)
	
	РодительскаяВетка = ИсходнаяВетка.Родитель;
	
	НоваяВетка = РодительскаяВетка.Строки.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяВетка, ИсходнаяВетка);
	
	СкопироватьСтрокиДерева(НоваяВетка, ИсходнаяВетка)
	
КонецПроцедуры

Процедура СкопироватьСтрокиДерева(Приемник, Источник)
	
	Для Каждого СтрокаИсточника Из Источник.Строки Цикл
		СтрокаПриемника = Приемник.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПриемника, СтрокаИсточника);
		СкопироватьСтрокиДерева(СтрокаПриемника, СтрокаИсточника)
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Обертки

Функция Счет(УсловныйКод)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.Счет(УсловныйКод);
	
КонецФункции

Функция СчетСРеквизитами(УсловныйКод, СчетаСРеквизитами)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СчетСРеквизитами(УсловныйКод, СчетаСРеквизитами);
	
КонецФункции

Функция СНД(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД(Счет, СальдоИОбороты);
	
КонецФункции

Функция СНК(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СНК(Счет, СальдоИОбороты);
	
КонецФункции

Функция ДО(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО(Счет, СальдоИОбороты);
	
КонецФункции

Функция КО(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.КО(Счет, СальдоИОбороты);
	
КонецФункции

Функция ОБ(Знач СчетДт, Знач СчетКт, ОборотыМеждуСчетами)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ(СчетДт, СчетКт, ОборотыМеждуСчетами);
	
КонецФункции

Функция СКД(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД(Счет, СальдоИОбороты);
	
КонецФункции

Функция СКК(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СКК(Счет, СальдоИОбороты);
	
КонецФункции

Функция СКДР(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СКДР(Счет, СальдоИОбороты);
	
КонецФункции

Функция СККР(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СККР(Счет, СальдоИОбороты);
	
КонецФункции

Функция СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, Счета, Субконто)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, Счета, Субконто);
	
КонецФункции

Функция НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиОСВПоСчетуРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуКонтрагентыРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговоры(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуКонтрагентыДоговоры(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуКонтрагентыДоговорыРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыСКДПоложительное(ОбщиеНастройки, Счет)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуКонтрагентыДоговорыСКДПоложительное(ОбщиеНастройки, Счет);
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыСКДОтрицательное(ОбщиеНастройки, Счет)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуКонтрагентыДоговорыСКДОтрицательное(ОбщиеНастройки, Счет);
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыСККПоложительное(ОбщиеНастройки, Счет)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуКонтрагентыДоговорыСККПоложительное(ОбщиеНастройки, Счет);
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыСККОтрицательное(ОбщиеНастройки, Счет)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуКонтрагентыДоговорыСККОтрицательное(ОбщиеНастройки, Счет);
	
КонецФункции

Функция НастройкиОСВПоСчетуРаботникиРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуРаботникиРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиОСВПоСчетуВидыПлатежейРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуВидыПлатежейРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиОСВПоСчетуВидыПлатежейУровниБюджетовРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуВидыПлатежейУровниБюджетовРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиАнализаСчета(ОбщиеНастройки, Счет, КорСчет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиАнализаСчета(ОбщиеНастройки, Счет, КорСчет, ОтборПоАналитике);
	
КонецФункции

Функция ДобавитьНовыйАлгоритмСтроки(Алгоритмы, Номер, Наименование)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиОсновная.ДобавитьНовыйАлгоритмСтроки(Алгоритмы, Номер, Наименование);
	
КонецФункции

Функция ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, Номер, НумераторДопСтрок, Наименование)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиОсновная.ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, Номер,
		НумераторДопСтрок, Наименование);
	
КонецФункции

Функция Список(СписокРазделенныйЗапятыми)
	
	Возврат РегламентированнаяОтчетностьКлиентСервер.Список(СписокРазделенныйЗапятыми);
	
КонецФункции

Функция РасширенныйПериодОтчета(НачалоПериодаОтчета)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.РасширенныйПериодОтчета(НачалоПериодаОтчета);
	
КонецФункции

#КонецОбласти

#Область НастраиваемаяОтчетность

Функция КонтекстОтчета(ОтчетныйПериодНачало, ОтчетныйПериодКонец, ИспользоватьСравнительныйПериод, СравнительныйПериодНачало, Знач СравнительныйПериодКонец, Организации)
	
	КонтекстОтчета = БухгалтерскаяОтчетностьБРО.НовыйКонтекстОтчета();
	
	Если Не ЗначениеЗаполнено(Организации) Тогда
		Возврат КонтекстОтчета;
	КонецЕсли;
	
	КонтекстОтчета.Организация = Организации[0];
	БухгалтерскаяОтчетностьБРО.ЗаполнитьПериодОтчета(КонтекстОтчета.ОтчетныйПериод, ОтчетныйПериодНачало, ОтчетныйПериодКонец);
	КонтекстОтчета.Период = КонтекстОтчета.ОтчетныйПериод.КонецДата;
	
	Если ИспользоватьСравнительныйПериод Тогда
		
		СтандартнаяДлинаОтчетногоПериода = 12; // месяцев
		МесяцКонцаОтчетногоПериода = Месяц(КонтекстОтчета.ОтчетныйПериод.КонецДата);
		Если МесяцКонцаОтчетногоПериода <> СтандартнаяДлинаОтчетногоПериода Тогда
			// в ФБСУ 4 формулируется как "период предыдущего года, аналогичный отчетному периоду"
			СравнительныйПериодКонец = КонецМесяца(ДобавитьМесяц(КонтекстОтчета.ОтчетныйПериод.КонецДата, -СтандартнаяДлинаОтчетногоПериода));
		КонецЕсли;
		
		БухгалтерскаяОтчетностьБРО.ЗаполнитьПериодОтчета(КонтекстОтчета.СравнительныйПериод, СравнительныйПериодНачало, СравнительныйПериодКонец);
		
	КонецЕсли;
	
	Возврат КонтекстОтчета;
	
КонецФункции

Процедура ЗаполнитьОтчетПоНастройкам(Контейнер, ОтборРазделов, КонтекстОтчета, Организации, НастройкиФормы)
	
	Периоды = Новый Массив;
	Если КонтекстОтчета.ОтчетныйПериод.Заполнен Тогда
		Периоды.Добавить(КонтекстОтчета.ОтчетныйПериод);
	КонецЕсли;
	Если КонтекстОтчета.СравнительныйПериод.Заполнен Тогда
		Периоды.Добавить(КонтекстОтчета.СравнительныйПериод);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Периоды) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполняемыеПоказатели = АктуальныеЗаполняемыеПоказатели(КонтекстОтчета, ОтборРазделов);
	
	Если НастройкиФормы <> Неопределено Тогда
		Для Каждого ОтборРаздела Из ОтборРазделов Цикл
			НастройкиРаздела = НастройкиФормы.Разделы[ОтборРаздела.Ключ];
			Если НастройкиРаздела = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ЗаполняемыеПоказатели.Разделы.Вставить(ОтборРаздела.Ключ, НастройкиРаздела);
		КонецЦикла;
	КонецЕсли;
	
	БухгалтерскаяОтчетностьБРО.ЗаполнитьОтчет(Контейнер, ЗаполняемыеПоказатели, Периоды, Организации);
	
КонецПроцедуры

Функция АктуальныеЗаполняемыеПоказатели(КонтекстОтчета, ОтборРазделов)
	
	ЗаполняемыеПоказатели = БухгалтерскаяОтчетностьБРО.НовыйЗаполняемыеПоказатели();
	
	СохраненныеНастройки = БухгалтерскаяОтчетностьБРО.НовыйЗаполняемыеПоказатели();
	ЗаполнениеБухгалтерскойОтчетностиГибкаяНастройка.ПрочитатьСохраненныеНастройки(СохраненныеНастройки, КонтекстОтчета);
	
	Для Каждого ОтборРаздела Из ОтборРазделов Цикл
		
		Если Не ОтборРаздела.Значение Тогда
			Продолжить;
		КонецЕсли;
		
		Раздел = ОтборРаздела.Ключ;
		
		ЗаполняемыеПоказателиРаздела = СохраненныеНастройки.Разделы[Раздел];
		Если ЗаполняемыеПоказателиРаздела = Неопределено Тогда
			ЗаполняемыеПоказателиРаздела = БухгалтерскаяОтчетностьБРО.НовыйЗаполняемыеПоказателиРаздела();
			ЗаполнениеБухгалтерскойОтчетностиНастраиваемая.ОпределитьЗаполняемыеПоказатели(ЗаполняемыеПоказателиРаздела, Раздел, КонтекстОтчета);
		КонецЕсли;
		
		ЗаполняемыеПоказатели.Разделы.Вставить(Раздел, ЗаполняемыеПоказателиРаздела);
		
	КонецЦикла;
	
	Возврат ЗаполняемыеПоказатели;
	
КонецФункции

#КонецОбласти

#КонецОбласти
