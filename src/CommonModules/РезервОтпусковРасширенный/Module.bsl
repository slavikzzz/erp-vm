
#Область СлужебныеПроцедурыИФункции

Процедура НастройкиРасчетаРезервовОтпусковПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиРасчетаРезервовОтпусков.ФормироватьРезервОтпусковБУ
	|ИЗ
	|	РегистрСведений.НастройкиРасчетаРезервовОтпусков КАК НастройкиРасчетаРезервовОтпусков
	|ГДЕ
	|	НастройкиРасчетаРезервовОтпусков.ФормироватьРезервОтпусковБУ";
	
	Результат = Запрос.Выполнить();
	
	Константы.ИспользоватьРасчетРезервовОтпусков.Установить(Не Результат.Пустой());
	
КонецПроцедуры

Процедура ДополнитьФормуЭлементаСправочникаОрганизации(Форма, ИмяГруппыДляВставки = "ГруппаНастройкиРасчетаРезервовОтпусков") Экспорт
	
	Если Не ПравоДоступа("Чтение", Метаданные.РегистрыСведений.НастройкиРасчетаРезервовОтпусков) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРасчетРезервовОтпусков") Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКоманды = "НастройкиРасчетаРезервовОтпусков";
	Если Форма.Команды.Найти(ИмяКоманды) = Неопределено Тогда
		КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
		КомандаФормы.Заголовок = НСтр("ru = 'Резервы отпусков (архив)';
										|en = 'Leave reserves (archive)'");
		КомандаФормы.Действие = "Подключаемый_" + ИмяКоманды;
	КонецЕсли;
	
	ГруппаФормы = Форма.Элементы.Найти(ИмяГруппыДляВставки);
	Если Форма.Элементы.Найти(ИмяКоманды) = Неопределено Тогда
		Элемент = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ГруппаФормы);
		Элемент.Вид = ВидКнопкиФормы.Гиперссылка;
		Элемент.ИмяКоманды = ИмяКоманды;
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыРедактированияСреднегоЗаработка(ОписаниеОбъекта) Экспорт
	
	Отбор = Новый Структура();
	Отбор.Вставить("ВидВремени", Перечисления.ВидыРабочегоВремениСотрудников.ЦелодневноеНеотработанное);
	Отбор.Вставить("ВидОтпуска", ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыОтпусков.Основной"));
	
	Начисления = ПланыВидовРасчета.Начисления.НачисленияПоКатегории(
		Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска,
		Отбор);
		
	Если Начисления.Количество() <> 0 Тогда
		ВидРасчетаОсновногоОтпуска = Начисления[0];
	КонецЕсли;
	
	ДатаНачалаСобытия = КонецМесяца(ОписаниеОбъекта.ПериодРегистрации)+1;
	
	ПараметрыРедактирования = УчетСреднегоЗаработкаКлиентСервер.ПараметрыРедактированияОбщегоСреднегоЗаработкаПоДокументу();
	ПараметрыРедактирования.ДокументСсылка          = ОписаниеОбъекта.Ссылка;
	ПараметрыРедактирования.Сотрудник               = ОписаниеОбъекта.Сотрудник;
	ПараметрыРедактирования.Организация             = ОписаниеОбъекта.Организация;
	ПараметрыРедактирования.ДатаНачалаСобытия       = ДатаНачалаСобытия;
	ПараметрыРедактирования.Начисление              = ВидРасчетаОсновногоОтпуска;
	ПараметрыРедактирования.НачалоПериодаРасчета    = ОписаниеОбъекта.ДатаНачала;
	ПараметрыРедактирования.ОкончаниеПериодаРасчета = ОписаниеОбъекта.ДатаОкончания;
	
	СпособыРасчета = Новый Массив;
	Если ОстаткиОтпусков.ОтпускСотрудникаВРабочихДняхПоДоговору(ОписаниеОбъекта.Сотрудник, ОписаниеОбъекта.ПериодРегистрации) Тогда
		ОписаниеОбъекта.Вставить("СпособРасчета", Перечисления.СпособыРасчетаНачислений.ОплатаОтпускаПоШестидневке);
		СпособыРасчета.Добавить(Перечисления.СпособыРасчетаНачислений.ОплатаОтпускаПоШестидневке);
	Иначе
		ОписаниеОбъекта.Вставить("СпособРасчета", Перечисления.СпособыРасчетаНачислений.ОплатаОтпускаПоКалендарнымДням);
		СпособыРасчета.Добавить(Перечисления.СпособыРасчетаНачислений.ОплатаОтпускаПоКалендарнымДням);
	КонецЕсли;
	
	ПараметрыРедактирования.СпособыРасчета = СпособыРасчета;
	
	ПараметрыРедактирования.ФиксПериодРасчета = ЗначениеЗаполнено(ОписаниеОбъекта.ДатаНачала)
													ИЛИ ЗначениеЗаполнено(ОписаниеОбъекта.ДатаОкончания);
		
	Возврат ПараметрыРедактирования;
	
КонецФункции

#КонецОбласти