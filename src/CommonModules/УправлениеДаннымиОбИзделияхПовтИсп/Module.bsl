////////////////////////////////////////////////////////////////////////////////
// НСИ производства: Процедуры подсистемы управления данными об изделиях
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает описание источников данных операндов по менеджеру.
//
// Параметры:
//  ИмяМенеджера - Строка	 - имя менеджер справочника.
// 
// Возвращаемое значение:
//  Структура - см. Справочники.РесурсныеСпецификации.ОписаниеИсточниковДанныхОперандов
//
Функция ОписаниеИсточниковДанныхОперандов(ИмяМенеджера) Экспорт
	
	Возврат Справочники[ИмяМенеджера].ОписаниеИсточниковДанныхОперандов();
	
КонецФункции

#Область НаборыВПроизводстве

// Кэширует значение константы ИсточникСоставаНаборовВПроизводстве.
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.ИсточникиСоставаНаборовВПроизводстве - Источник состава наборов в производстве
Функция ИсточникСоставаНаборовВПроизводстве() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Константы.ИсточникСоставаНаборовВПроизводстве.Получить();
	
КонецФункции

// Определяет доступность использования наборов в производстве.
// 
// Возвращаемое значение:
//  Булево - результат
Функция ДоступноИспользованиеНаборовВПроизводстве() Экспорт
	
	ИсточникСоставаНаборовВПроизводстве = УправлениеДаннымиОбИзделияхПовтИсп.ИсточникСоставаНаборовВПроизводстве();
	
	Возврат ЗначениеЗаполнено(ИсточникСоставаНаборовВПроизводстве)
		И ИсточникСоставаНаборовВПроизводстве <> Перечисления.ИсточникиСоставаНаборовВПроизводстве.НеИспользовать;
	
КонецФункции

// Определяет доступность хранения состава набора в спецификациях.
// 
// Возвращаемое значение:
//  Булево - результат
Функция ДоступноХранениеСоставаНабораВСпецификациях() Экспорт
	
	ИсточникСоставаНаборовВПроизводстве = УправлениеДаннымиОбИзделияхПовтИсп.ИсточникСоставаНаборовВПроизводстве();
	
	Возврат (ИсточникСоставаНаборовВПроизводстве = Перечисления.ИсточникиСоставаНаборовВПроизводстве.Спецификации)
		ИЛИ (ИсточникСоставаНаборовВПроизводстве = Перечисления.ИсточникиСоставаНаборовВПроизводстве.СпецификацииИлиВариантыКомплектации);
	
КонецФункции

// Определяет доступность хранения состава набора в вариантах комплектации.
// 
// Возвращаемое значение:
//  Булево - результат
Функция ДоступноХранениеСоставаНабораВВариантахКомплектации() Экспорт
	
	ИсточникСоставаНаборовВПроизводстве = УправлениеДаннымиОбИзделияхПовтИсп.ИсточникСоставаНаборовВПроизводстве();
	
	Возврат (ИсточникСоставаНаборовВПроизводстве = Перечисления.ИсточникиСоставаНаборовВПроизводстве.ВариантыКомплектации)
		ИЛИ (ИсточникСоставаНаборовВПроизводстве = Перечисления.ИсточникиСоставаНаборовВПроизводстве.СпецификацииИлиВариантыКомплектации);
	
КонецФункции

#КонецОбласти

#Область ПараметрыНазначения

// Проверяет использование вида параметра назначения спецификаций.
//
// Параметры:
//  ВидПараметра - ПеречислениеСсылка.ВидыПараметровНазначенияСпецификаций - вид параметра, использование которого необходимо определить
//  ПроверятьФункциональнуюОпцию - Булево - определяет необходимость проверки при выключенной функциональной опции
//
// Возвращаемое значение:
//   Булево - признак использования вида параметра назначения
//
Функция ВидПараметраНазначенияИспользуется(ВидПараметра, ПроверятьФункциональнуюОпцию = Истина) Экспорт
	
	Если ПроверятьФункциональнуюОпцию
			И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПараметрыНазначенияСпецификаций") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.ПараметрыНазначенияСпецификаций КАК Т
	|ГДЕ
	|	Т.ВидПараметра В (&ВидыПараметров)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ВидыПараметров", УправлениеДаннымиОбИзделиях.ВидПараметраНазначенияВМассив(ВидПараметра));
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

// Проверяет использование параметра назначения спецификаций.
// 
// Параметры:
//  ВидПараметра - ПеречислениеСсылка.ВидыПараметровНазначенияСпецификаций - вид параметра
//  Реквизит - ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения - реквизит параметра
//  ПроверятьФункциональнуюОпцию - Булево - определяет необходимость проверки при выключенной функциональной опции
// 
// Возвращаемое значение:
//  Булево - Параметр назначения используется
Функция ПараметрНазначенияИспользуется(ВидПараметра, Реквизит, ПроверятьФункциональнуюОпцию = Истина) Экспорт
	
	Если ПроверятьФункциональнуюОпцию
			И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПараметрыНазначенияСпецификаций") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.ПараметрыНазначенияСпецификаций КАК Т
	|ГДЕ
	|	Т.ВидПараметра = &ВидПараметра
	|	И Т.Реквизит = &Реквизит";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ВидПараметра", ВидПараметра);
	Запрос.УстановитьПараметр("Реквизит",     Реквизит);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#Область ДанныеУпаковки

// Конструктор структуры данных упаковки.
// 
// Параметры:
//  Числитель - Число - числитель
//  Знаменатель - Число - знаменатель
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура - Структура данных упаковки:
// * Числитель - Число - числитель
// * Знаменатель - Число - знаменатель
Функция СтруктураДанныхУпаковки(Числитель = 1, Знаменатель = 1) Экспорт
	
	Возврат Новый ФиксированнаяСтруктура("Числитель, Знаменатель", ?(Числитель = 0, 1, Числитель), ?(Знаменатель = 0, 1, Знаменатель));
	
КонецФункции

#КонецОбласти

//++ НЕ УТКА
#Область ОписанияПодключаемыхФункций

// Возвращает описание функций используемых в конструкторе формул.
// 
// Возвращаемое значение:
//  см. УправлениеДаннымиОбИзделияхКлиентСервер.ОписаниеФункцийКонструктораФормул
//
Функция ОписаниеФункцийКонструктораФормул() Экспорт
	
	Возврат УправлениеДаннымиОбИзделияхКлиентСервер.ОписаниеФункцийКонструктораФормул();
	
КонецФункции

// Формирует массив описаний функций автовыбора.
// 
// Возвращаемое значение:
//  см. УправлениеДаннымиОбИзделиях.ОписаниеФункцийАвтовыбораХарактеристики
//
Функция ОписаниеФункцийАвтовыбораХарактеристики() Экспорт
	
	Возврат УправлениеДаннымиОбИзделиях.ОписаниеФункцийАвтовыбораХарактеристики();
	
КонецФункции

// Формирует массив описаний функций автовыбора.
// 
// Возвращаемое значение:
//  см. УправлениеДаннымиОбИзделиях.ОписаниеФункцийАвтовыбораЗначенияСвойстваНоменклатуры
//
Функция ОписаниеФункцийАвтовыбораЗначенияСвойстваНоменклатуры() Экспорт
	
	Возврат УправлениеДаннымиОбИзделиях.ОписаниеФункцийАвтовыбораЗначенияСвойстваНоменклатуры();
	
КонецФункции

#КонецОбласти
//-- НЕ УТКА

//++ НЕ УТКА
#Область ЗагрузкаПроизводственнойНСИ

// Перечень групп реквизитов элемента загружаемых данных
// Параметры:
//  Исключаемые - Булево - включать реквизиты, недоступные для интерактивной настройки
// 
// Возвращаемое значение:
//  Массив из Строка
Функция ГруппыРеквизитов(Исключаемые = Ложь) Экспорт
	
	Возврат УправлениеДаннымиОбИзделияхКлиентСервер.ГруппыРеквизитов(Исключаемые);
	
КонецФункции

// Перечень групп реквизитов шапки объекта
// Параметры:
//  Исключаемые - Булево - включать реквизиты, недоступные для интерактивной настройки
// 
// Возвращаемое значение:
//  Массив из Строка
Функция ГруппыРеквизитовШапкиОбъекта(Исключаемые = Ложь) Экспорт
	
	Возврат УправлениеДаннымиОбИзделияхКлиентСервер.ГруппыРеквизитовШапкиОбъекта(Исключаемые);
	
КонецФункции

#КонецОбласти
//-- НЕ УТКА

#Область Прочее

// Возвращает массив всех ссылочных типов, определенных в конфигурации.
//
// Возвращаемое значение:
// Массив из Тип
Функция ВсеСсылочныеТипыКонфигурации() Экспорт
	
	Результат = Новый Массив;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, Справочники.ТипВсеСсылки().Типы());
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, Документы.ТипВсеСсылки().Типы());
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, БизнесПроцессы.ТипВсеСсылки().Типы());
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, ПланыВидовХарактеристик.ТипВсеСсылки().Типы());
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, ПланыСчетов.ТипВсеСсылки().Типы());
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, ПланыВидовРасчета.ТипВсеСсылки().Типы());
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, Задачи.ТипВсеСсылки().Типы());
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, ПланыОбмена.ТипВсеСсылки().Типы());
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, Перечисления.ТипВсеСсылки().Типы());
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти