
#Область ПрограммныйИнтерфейс

Процедура СопоставитьМЧД(НаборЗаписей, НовыеЗначения, Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПереченьМЧД = МЧДкСопоставлению();
	
	Если ПереченьМЧД.Количество() = 0
		ИЛИ ПереченьМЧД.Найти(Ссылка) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Положительный = ЭлектронныйДокументооборотСКонтролирующимиОрганами.НовыйСтатусПоложительный(
		НаборЗаписей, 
		НовыеЗначения);
	
	Если НЕ Положительный Тогда
		Возврат;
	КонецЕсли;

	ИмяТипаСправочникаМашиночитаемыеДоверенностиЦБ = "МашиночитаемыеДоверенностиЦБ";
	ИмяТипаСправочникаМашиночитаемыеДоверенности = "МашиночитаемыеДоверенности";
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.МашиночитаемыеДоверенностиФНС") Тогда
		
		СопоставитьМЧДФНС(Ссылка);
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.МашиночитаемыеДоверенностиФСС") Тогда
		
		СопоставитьМЧДФСС(Ссылка);
		
	ИначеЕсли ДокументооборотСКОКлиентСервер.ПодсистемаЦБСуществует()
		И ТипЗнч(Ссылка) = Тип("СправочникСсылка." + ИмяТипаСправочникаМашиночитаемыеДоверенностиЦБ) Тогда
		
		СопоставитьМЧДЦБ(Ссылка);
		
	ИначеЕсли ДокументооборотСКОКлиентСервер.ПодсистемаЦПРРМЧДСуществует()
		И ТипЗнч(Ссылка) = Тип("СправочникСсылка." + ИмяТипаСправочникаМашиночитаемыеДоверенности) Тогда
		
		СвойстваМЧД = СвойстваМЧДизРегистраСопоставления(Ссылка);
		
		Для каждого Строка Из СвойстваМЧД Цикл
			Если Строка.Орган = Перечисления.ТипыКонтролирующихОрганов.ФТС Тогда
				СопоставитьМЧДФТС(Ссылка);
			ИначеЕсли Строка.Орган = Перечисления.ТипыКонтролирующихОрганов.ФСГС Тогда
				СопоставитьМЧДРосстат(Ссылка);
			КонецЕсли;
		
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СопоставитьМЧДРосстат(МЧД)
	
	СвойстваМЧД = СвойстваМЧДизРегистраСопоставления(МЧД);
	
	Если СвойстваМЧД.Количество() = 0 Тогда
		Возврат;
	Иначе
		СвойстваМЧД = СвойстваМЧД[0];
	КонецЕсли;
	
	ТаблицаМЧД = ДокументооборотСКОВызовСервера.МЧДОбмена(СвойстваМЧД.Организация, "ФСГС");
	
	Если СвойстваМЧД.ИспользоватьНесколько Тогда
		
		Строка = ТаблицаМЧД.Найти(СвойстваМЧД.ПредставительПользователь, "Пользователь");
		
		Если Строка = Неопределено Тогда
			Строка = ТаблицаМЧД.Добавить();
			Строка.Пользователь = СвойстваМЧД.ПредставительПользователь;
		КонецЕсли;
		
		Строка.Доверенность = СвойстваМЧД.МЧД;
		
	КонецЕсли;
	
	ДокументооборотСКОВызовСервера.ЗаписатьМЧДОбмена(
		СвойстваМЧД.Организация,
		"ФСГС",
		?(СвойстваМЧД.ИспользоватьНесколько, 2, 1),
		СвойстваМЧД.МЧД,
		ТаблицаМЧД);
	
	УдалитьМЧДизРегистраМЧДкСопоставлению(МЧД);
		
КонецПроцедуры

Процедура СопоставитьМЧДЦБ(МЧД) Экспорт
	
	УчетнаяЗапись = ДокументооборотСКОВызовСервера.УчетнаяЗаписьОрганизации(МЧД.Организация);
	
	Если НЕ ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Возврат;
	КонецЕсли;
	
	УчетнаяЗаписьОбъект = УчетнаяЗапись.ПолучитьОбъект();
	УчетнаяЗаписьОбъект.ДоверенностьЦБ = МЧД;
	УчетнаяЗаписьОбъект.Записать();
	
	УдалитьМЧДизРегистраМЧДкСопоставлению(МЧД);
	
КонецПроцедуры

Процедура УдалитьМЧДизРегистраМЧДкСопоставлению(МЧД)
	
	Набор = РегистрыСведений.МЧДкСопоставлению.СоздатьНаборЗаписей();
	Набор.Отбор.МЧД.Установить(МЧД);
	Набор.Записать();
	
КонецПроцедуры

Процедура СопоставитьМЧДФСС(МЧД)
	
	СопоставитьМЧДвНастройкахОбмена(МЧД, "ФСС", "СертификатСтрахователяОтпечаток");
		
КонецПроцедуры

Процедура СопоставитьМЧДФТС(МЧД)
	
	СопоставитьМЧДвНастройкахОбмена(МЧД, "ФТС", "СертификатАбонентаОтпечаток");
		
КонецПроцедуры

Процедура СопоставитьМЧДвНастройкахОбмена(МЧД, ОрганСтрокой, ИмяПоляОтпечатка)
	
	СвойстваМЧД = СвойстваМЧДизРегистраСопоставления(МЧД);
	
	Отбор = Новый Структура();
	Отбор.Вставить("Орган", Перечисления.ТипыКонтролирующихОрганов[ОрганСтрокой]);
	
	СвойстваМЧД = СвойстваМЧД.НайтиСтроки(Отбор);
	
	Если СвойстваМЧД.Количество() = 0 Тогда
		Возврат;
	Иначе
		СвойстваМЧД = СвойстваМЧД[0];
	КонецЕсли;
	
	НаборЗаписейНастроек = РегистрыСведений["НастройкиОбмена" + ОрганСтрокой].СоздатьНаборЗаписей();
	НаборЗаписейНастроек.Отбор.Организация.Установить(СвойстваМЧД.Организация);
	НаборЗаписейНастроек.Прочитать();
	
	Заменили = Ложь;
	
	Если СвойстваМЧД.ИспользоватьНесколько Тогда
		
		Для каждого Строка Из НаборЗаписейНастроек Цикл

			// Кейс когда у него же меняется МЧД
			Если Строка.Пользователь = СвойстваМЧД.ПредставительПользователь Тогда
				
				Заменили = Истина;
				Строка.Доверенность = СвойстваМЧД.МЧД;
				Прервать;

			КонецЕсли;
		
		КонецЦикла;
		
	КонецЕсли;
	
	// Заменяем единственного представителя на нашего
	Если НЕ Заменили И НЕ СвойстваМЧД.ИспользоватьНесколько Тогда
		Для каждого Строка Из НаборЗаписейНастроек Цикл

			Если НЕ ЗначениеЗаполнено(Строка.Пользователь) Тогда
				
				Заменили = Истина;
				
				Строка.Доверенность = СвойстваМЧД.МЧД;
				Строка[ИмяПоляОтпечатка] = СвойстваМЧД.Отпечаток;
				Прервать;
				
			КонецЕсли;
		
		КонецЦикла;
	КонецЕсли;

	// Добавляем если не найден
	Если НЕ Заменили И СвойстваМЧД.ИспользоватьНесколько Тогда
		
		НоваяЗаписьНастроек = НаборЗаписейНастроек.Добавить();
		НоваяЗаписьНастроек.Организация 		= СвойстваМЧД.Организация;
		НоваяЗаписьНастроек.Пользователь 		= СвойстваМЧД.ПредставительПользователь;
		НоваяЗаписьНастроек.ИспользоватьОбмен 	= Истина;
		НоваяЗаписьНастроек.Доверенность		= МЧД;
		НоваяЗаписьНастроек[ИмяПоляОтпечатка] 	= СвойстваМЧД.Отпечаток;
		
	КонецЕсли;
	
	НаборЗаписейНастроек.Записать();
	
	УдалитьМЧДизРегистраМЧДкСопоставлению(МЧД);
	
КонецПроцедуры

Процедура СопоставитьМЧДФНС(МЧД)
	
	СвойстваМЧД = СвойстваМЧДизРегистраСопоставления(МЧД);
	
	Для каждого Строка Из СвойстваМЧД Цикл
	
		Если Строка.ИспользоватьНесколько Тогда
				
			Если ЗначениеЗаполнено(Строка.ПредставительПользователь) Тогда
				
				ОбъектРегистрации = Строка.ИФНС.ПолучитьОбъект();
				ОбъектРегистрации.Прочитать();

				Отбор = Новый Структура();
				Отбор.Вставить("Пользователь", Строка.ПредставительПользователь);
				
				НайденныеСтроки = ОбъектРегистрации.Подписанты.НайтиСтроки(Отбор);
				Если НайденныеСтроки.Количество() > 0 Тогда
					НоваяСтрока = НайденныеСтроки[0];
				Иначе
					НоваяСтрока = ОбъектРегистрации.Подписанты.Добавить();
					НоваяСтрока.Пользователь = Строка.ПредставительПользователь;
				КонецЕсли;
				
				ЗаполнитьПредставителяВРегистрации(НоваяСтрока, МЧД);
				
				ОбъектРегистрации.Записать();
				
			КонецЕсли;
				
		Иначе
			
			ОбъектРегистрации = Строка.ИФНС.ПолучитьОбъект();
			ОбъектРегистрации.Прочитать();
			
			ЗаполнитьПредставителяВРегистрации(ОбъектРегистрации, МЧД);
			
			ОбъектРегистрации.Записать();
			
		КонецЕсли;
	
	КонецЦикла;
	
	УдалитьМЧДизРегистраМЧДкСопоставлению(МЧД);
		
КонецПроцедуры

Функция СвойстваМЧДизРегистраСопоставления(МЧД)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	*
		|ИЗ
		|	РегистрСведений.МЧДкСопоставлению КАК МЧДкСопоставлению
		|ГДЕ
		|	МЧДкСопоставлению.МЧД = &МЧД";
	
	Запрос.УстановитьПараметр("МЧД", МЧД);
	
	СвойстваМЧД = Запрос.Выполнить().Выгрузить();
	
	Возврат СвойстваМЧД;

КонецФункции

Функция МЧДкСопоставлению()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МЧДкСопоставлению.МЧД КАК МЧД
		|ИЗ
		|	РегистрСведений.МЧДкСопоставлению КАК МЧДкСопоставлению
		|ГДЕ
		|	МЧДкСопоставлению.ДатаДобавления >= &ТриМесяцаНазад
		|	И МЧДкСопоставлению.Отпечаток <> """"";
	
	Запрос.УстановитьПараметр("ТриМесяцаНазад", ТекущаяДатаСеанса() - 3*30*24*60*60);
	
	ПереченьМЧД = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("МЧД");
	
	Возврат ПереченьМЧД;

КонецФункции

Процедура ЗаполнитьПредставителяВРегистрации(Приемник, МЧД) Экспорт
	
	ЭтоВерсия5_02 = (МЧД.ВерсияФормата = "5.02");
	
	Если ЭтоВерсия5_02 Тогда
		Приемник.ДокументПредставителя = МЧД.РегистрационныйНомерДоверенности;
		
	Иначе
		Приемник.ДокументПредставителя = НСтр("ru = 'Машиночитаемая доверенность';
												|en = 'Машиночитаемая доверенность'")
			+ ?(ЗначениеЗаполнено(МЧД.НомерДоверенности),
			" " + НСтр("ru = '№';
						|en = '№'") + МЧД.НомерДоверенности, "")
			+ ?(ЗначениеЗаполнено(МЧД.ДатаВыдачи), " " + НСтр("ru = 'от';
																|en = 'от'") + " "
			+ Формат(МЧД.ДатаВыдачи, "ДФ='дд.ММ.гггг'") + " " + НСтр("ru = 'г.';
																	|en = 'г.'"), "");
	КонецЕсли;
	
	Приемник.Представитель = МЧД.Представитель;
	Приемник.УполномоченноеЛицоПредставителя = Строка(МЧД.Представитель);
	Приемник.Доверенность = МЧД;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьПолномочия(Форма) Экспорт
	
	ДеревоПолномочия = Форма.РеквизитФормыВЗначение("Полномочия");
	ДеревоПолномочия.Строки.Очистить();
	
	Если ЭтоАдресВременногоХранилища(Форма.АдресДереваПолномочий) Тогда
		
		ДеревоПолномочия = ПолучитьИзВременногоХранилища(Форма.АдресДереваПолномочий);
		
	Иначе
	
		Корень = ДеревоПолномочия.Строки;
		
		ИнициализироватьПолномочияФНС(Корень);
		ИнициализироватьПолномочияФСС(ДеревоПолномочия);
		ИнициализироватьПолномочияЦБ(Корень);
		ИнициализироватьПолномочияЕФ(Корень);
		
	КонецЕсли;
	
	Форма.ЗначениеВРеквизитФормы(ДеревоПолномочия, "Полномочия");
	
КонецПроцедуры

Процедура ИнициализироватьПолномочияФНС(Корень)
	
	УровеньВидаОргана = Корень.Добавить();
	УровеньВидаОргана.Наименование = МЧДБРОКлиентСервер.МЧД_ФНС();
	УровеньВидаОргана.ЭтоГруппа    = Истина;
	
	Таблица = Справочники.МашиночитаемыеДоверенностиФНС.Полномочия();
	Для каждого Строка Из Таблица Цикл
		НоваяСтрока = УровеньВидаОргана.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнициализироватьПолномочияФСС(Корень)
	
	ЗапросПолномочий = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Ложь КАК Пометка,
		|	ПолномочияПредставителяФСС.Код,
		|	ПолномочияПредставителяФСС.Наименование,
		|	Ложь КАК ПризнакПередоверия,
		|	ПолномочияПредставителяФСС.ДатаНачала КАК ДатаНачала,
		|	ПолномочияПредставителяФСС.ДатаОкончания КАК ДатаОкончания,
		|	ПолномочияПредставителяФСС.ПометкаУдаления КАК ПометкаУдаления
		|ИЗ
		|	Справочник.ПолномочияПредставителяФСС КАК ПолномочияПредставителяФСС
		|ГДЕ
		|	НЕ ПолномочияПредставителяФСС.ПометкаУдаления
		|УПОРЯДОЧИТЬ ПО
		|	ПолномочияПредставителяФСС.Ссылка ИЕРАРХИЯ");
	
	ДеревоПолномочий = ЗапросПолномочий.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ОбойтиРекурсивноДеревоФСС(Корень, ДеревоПолномочий);
	
КонецПроцедуры

Процедура ОбойтиРекурсивноДеревоФСС(Корень, Дерево)
	
	Для Каждого Строка Из Дерево.Строки Цикл
		
		НоваяСтрока = Корень.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		
		Если Строка.Наименование = НСтр("ru = 'Все';
										|en = 'Все'") Тогда
			НоваяСтрока.Наименование = МЧДБРОКлиентСервер.МЧД_СФР();
		КонецЕсли;
		
		Если Строка.Строки.Количество() > 0 Тогда
			ОбойтиРекурсивноДеревоФСС(НоваяСтрока, Строка);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнициализироватьПолномочияЦБ(Корень)
	
	Если НЕ ДокументооборотСКОКлиентСервер.ПодсистемаЦБСуществует() Тогда
		Возврат;
	КонецЕсли;
	
	УровеньВидаОргана = Корень.Добавить();
	УровеньВидаОргана.Наименование = МЧДБРОКлиентСервер.МЧД_ЦБ();
	УровеньВидаОргана.ЭтоГруппа 	= Истина;
	
	// определяем возможные полномочия в таблице
	Для ВидПолномочия = 1 По ДокументооборотСКОКлиентСервер.КоличествоПолномочийМЧДЦБ() Цикл
		
		ПредставлениеВида = Формат(ВидПолномочия, "ЧЦ=2; ЧВН=");
		
		НоваяСтрока = УровеньВидаОргана.Строки.Добавить();
		НоваяСтрока.Код = ПредставлениеВида;
		НоваяСтрока.Наименование = ДокументооборотСКОКлиентСервер.ОбозначениеПолномочияМЧДЦБПоКоду(ПредставлениеВида, Истина);
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнициализироватьПолномочияЕФ(Корень)
	
	УровеньВидаОргана = Корень.Добавить();
	УровеньВидаОргана.Наименование = МЧДБРОКлиентСервер.МЧД_ЕФ();
	УровеньВидаОргана.ЭтоГруппа    = Истина;
	
	Дерево = МЧДЕФСлужебный.КлассификаторПолномочийМЧДЕФ();
	
	ОбойтиРекурсивноДеревоЕФ(УровеньВидаОргана, Дерево);
	
КонецПроцедуры

Процедура ОбойтиРекурсивноДеревоЕФ(Корень, Дерево)
	
	Для Каждого Строка Из Дерево.Строки Цикл
		
		НоваяСтрока = Корень.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		
		Если Строка.Строки.Количество() > 0 Тогда
			ОбойтиРекурсивноДеревоЕФ(НоваяСтрока, Строка);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция АдресДерева(Форма, GUID) Экспорт

	ДеревоПолномочия = Форма.РеквизитФормыВЗначение("Полномочия");
	Адрес = ПоместитьВоВременноеХранилище(ДеревоПолномочия, GUID);
	Возврат Адрес;

КонецФункции

Функция ОрганыМЧДЕФ(МЧД) Экспорт
	
	ЭтоНеограниченныеПолномочия = МЧД.Полномочия.Количество() = 0;
	
	Результат = Новый Структура();
	Результат.Вставить("ДляРосстата", ЭтоНеограниченныеПолномочия);
	Результат.Вставить("ДляФСРАР", ЭтоНеограниченныеПолномочия);
	Результат.Вставить("ДляФТС", ЭтоНеограниченныеПолномочия);
	Результат.Вставить("ДляРПН", ЭтоНеограниченныеПолномочия);
			
	Если НЕ ЭтоНеограниченныеПолномочия Тогда
		Для каждого Полномочие Из МЧД.Полномочия Цикл
			
			Если Полномочие.Код = "ROSSTAT_STAT_001" Тогда
				Результат.ДляРосстата = Истина;
			ИначеЕсли Полномочие.Код = "RAR_00000001" Тогда
				Результат.ДляФСРАР = Истина;
			ИначеЕсли Полномочие.Код = "FTS_10001" ИЛИ Полномочие.Код = "FTS_10002" Тогда
				Результат.ДляФТС = Истина;
			ИначеЕсли Полномочие.Код = "RPNDZ_REPORT" ИЛИ Полномочие.Код = "RPNDZ_APPLICATION" Тогда
				Результат.ДляРПН = Истина;
			КонецЕсли;
		
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
