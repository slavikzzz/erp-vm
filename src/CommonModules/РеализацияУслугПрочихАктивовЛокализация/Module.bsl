////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Реализация услуг и прочих активов".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	МеханизмыДокумента.Добавить("ПрослеживаемостьИмпортныхТоваров");
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	
	//++ НЕ УТ
	
	ПроверитьПродажуДвижимогоИмуществаСовместноСНедвижимым(Объект, Отказ);
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов
		И ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПодготовкаКПередачеОС") Тогда
		ТекстСообщения = НСтр("ru = 'Необходимо использовать операцию ""Реализация"", т.к. документ оформлен на основании подготовки к передаче ОС версии 2.2.';
								|en = 'Use the Sale operation as the document is registered based on the preparation for FA handover 2.2.'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, "ХозяйственнаяОперация",, Отказ);
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав
		И ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПодготовкаКПередачеОС") Тогда
		
		ТекстСообщения = НСтр("ru = 'Необходимо использовать операцию ""Реализация с отложенным переходом прав"", т.к. документ оформлен на основании подготовки к передаче ОС версии 2.2.';
								|en = 'Use the ""Sale with deferred handover of rights"" operation as the document is registered based on the preparation for FA handover 2.2.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, "ХозяйственнаяОперация",, Отказ);
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов
		И ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПодготовкаКПередачеНМА") Тогда
		
		ТекстСообщения = НСтр("ru = 'Необходимо использовать операцию ""Реализация"", т.к. документ оформлен на основании подготовки к передаче НМА версии 2.2.';
								|en = 'Use the Sale operation as the document is registered based on the preparation for IA handover 2.2.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, "ХозяйственнаяОперация",, Отказ);
		
	КонецЕсли; 
	
	Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав")
		Или Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов") Тогда
		
		УчетПрослеживаемыхТоваровЛокализация.ПроверитьДанныеПрослеживаемостиНомеровГТД(Объект, Объект.ПрослеживаемыеТовары, Объект.Дата, "ПрослеживаемыеТовары");
		
	КонецЕсли;
	
	//-- НЕ УТ
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	
	//++ НЕ УТ
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ПодготовкаКПередачеНМА") Тогда
		ЗаполнитьПоДокументуПодготовкаКПередачеНМА(Объект, ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПодготовкаКПередачеОС") Тогда
		ЗаполнитьПоДокументуПодготовкаКПередачеОС(Объект, ДанныеЗаполнения);
	КонецЕсли;
	
	//-- НЕ УТ
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация

	//++ НЕ УТ

	// Регистрируем к отражению только по дате перехода права собственности
	МассивОперацийСОтложеннымПереходом = Новый Массив;
	МассивОперацийСОтложеннымПереходом.Добавить(Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности);
	МассивОперацийСОтложеннымПереходом.Добавить(Перечисления.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав);
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И МассивОперацийСОтложеннымПереходом.Найти(Объект.ХозяйственнаяОперация) <> Неопределено Тогда
		ТаблицаВыборочнойРегистрации = РеглУчетПроведениеСервер.ТаблицаВыборочнойРегистрацииКОтражению();
		РеглУчетПроведениеСервер.ДобавитьПараметрыВыборочнойРегистрацииКОтражениюВРеглУчете(
			ТаблицаВыборочнойРегистрации, Объект.Организация, Объект.ДатаПереходаПраваСобственности);
		ПроведениеДокументов.ДобавитьТаблицуДанныхДокумента(Объект,
			"ТаблицаВыборочнойРегистрацииКОтражению", ТаблицаВыборочнойРегистрации);
	КонецЕсли;
	
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.РеализацияУслугПрочихАктивов - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	//++ Локализация
	Документы.СчетФактураВыданный.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);

	//++ НЕ УТ	
	Документы.ТаможеннаяДекларацияЭкспорт.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//	КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		//++ НЕ УТ

		// Накладная (М-15)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "М15";
		КомандаПечати.Представление = НСтр("ru = 'Накладная (М-15)';
											|en = 'Invoice (M-15)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		//-- НЕ УТ
		
		// Товарная накладная (ТОРГ-12)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "ТОРГ12";
		КомандаПечати.Представление = НСтр("ru = 'Товарная накладная (ТОРГ-12)';
											|en = 'Invoice (TORG-12)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьУслуги", Истина);
		
	КонецЕсли;
	
	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура';
										|en = 'Tax invoice'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
	
	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		// Счет-фактура (в валюте)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "СчетФактураВВалюте";
		КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (в валюте)';
											|en = 'Tax invoice (in currency)'");
		КомандаПечати.ФункциональныеОпции = "ИспользоватьНесколькоВалют";
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Истина);
		
		// Универсальный передаточный документ (УПД)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "УПД";
		КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)';
											|en = 'Universal transfer document (UTD)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

//++ Локализация

// Формирует текст запроса для получения данных основания при печати Счет-фактуры.
//
// Возвращаемое значение:
//	Строка - текст запроса
//
Функция ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                                   КАК Ссылка,
	|	ДанныеДокументов.ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	ДанныеДокументов.Валюта                                   КАК Валюта,
	|	ДанныеДокументов.Организация                              КАК Организация,
	|	ДанныеДокументов.НалогообложениеНДС                       КАК НалогообложениеНДС,
	|	ДанныеДокументов.Подразделение                            КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                  КАК Склад,
	|	ДанныеДокументов.Грузоотправитель                         КАК Грузоотправитель,
	|	ДанныеДокументов.Грузополучатель                          КАК Грузополучатель,
	|	ЛОЖЬ                                                      КАК РасчетыЧерезОтдельногоКонтрагента,
	|	НЕОПРЕДЕЛЕНО                                              КАК Номенклатура,
	|	""""                                                      КАК Содержание,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)             КАК Комиссионер,
	|	ДанныеДокументов.Основание                                КАК Основание,
	|	ДанныеДокументов.ОснованиеДата                            КАК ОснованиеДата,
	|	ДанныеДокументов.ОснованиеНомер                           КАК ОснованиеНомер,
	|	ДанныеДокументов.БанковскийСчетОрганизации                КАК БанковскийСчетОрганизации,
	|	ДанныеДокументов.БанковскийСчетКонтрагента                КАК БанковскийСчетКонтрагента,
	|	ДанныеДокументов.БанковскийСчетГрузоотправителя           КАК БанковскийСчетГрузоотправителя,
	|	ДанныеДокументов.БанковскийСчетГрузополучателя            КАК БанковскийСчетГрузополучателя,
	|	ДанныеДокументов.ДоверенностьНомер                        КАК ДоверенностьНомер,
	|	ДанныеДокументов.ДоверенностьДата                         КАК ДоверенностьДата,
	|	ДанныеДокументов.ДоверенностьВыдана                       КАК ДоверенностьВыдана,
	|	ДанныеДокументов.ДоверенностьЛицо                         КАК ДоверенностьЛицо,
	|	ДанныеДокументов.Менеджер 								  КАК Менеджер,	
	|	ДанныеДокументов.Отпустил КАК Кладовщик,
	|	ДанныеДокументов.ОтпустилДолжность                        КАК ДолжностьКладовщика,
	|	ДанныеДокументов.АдресДоставки                            КАК АдресДоставки,
	|	""""                                                      КАК АдресДоставкиЗначенияПолей,
	|	""""                                                      КАК АдресДоставкиЗначение
	|
	|//ОператорПОМЕСТИТЬ
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&ДокументОснование_РеализацияУслугПрочихАктивов)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает данные для формирования печатной формы УПД
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка.РеализацияУслугПрочихАктивов - ссылки на документы, по которым необходимо
//																				получить данные.
//
// Возвращаемое значение:
//	Структура - коллекция данных, используемая при печати УПД, содержащая следующие свойства:
//		* РезультатПоШапке - РезультатЗапроса - общие данные накладной.
//		* РезультатПоТабличнойЧасти - РезультатЗапроса - данные табличной части накладной.
//		* Прослеживаемость - РезультатЗапроса - сведения о прослеживаемых товарах.
//
Функция ПолучитьДанныеДляПечатнойФормыУПД(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                  КАК Ссылка,
	|	ДанныеДокументов.Валюта                  КАК Валюта,
	|	ДанныеДокументов.Организация             КАК Организация,
	|	ДанныеДокументов.Подразделение           КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ДанныеДокументов.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	ДанныеДокументов.Дата                    КАК Период
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	УчетНДСРФ.ДополнитьЗапросПолученияДанныхДляПечатиУПД(Запрос, "ХозяйственнаяОперация");

	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	Обработки.ПечатьОбщихФорм.ПоместитьВременнуюТаблицуДанныхПоставщика(МенеджерВременныхТаблиц);
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	2 КАК СтатусУПД,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	"""" КАК СтрокаПоДокументу,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаСчетаФактуры,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Контрагент.ОбособленноеПодразделение
	|			ТОГДА ДанныеДокумента.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеПоставщика.ГоловнаяОрганизация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	0 КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.Контрагент
	|		ИНАЧЕ ДанныеДокумента.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.Организация
	|		ИНАЧЕ ДанныеДокумента.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ДанныеПоставщика.КПППоставщика КАК КПППоставщика,
	|	""""                           КАК КПППокупателя,
	|	ДанныеДокумента.Контрагент.ИНН КАК ИННПокупателя,
	|	ДанныеДокумента.АдресДоставки КАК АдресДоставки,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеДокумента.Валюта.Код КАК ВалютаКод,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЕстьПрослеживаемыеТовары,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию,
	|	ДанныеДокумента.Основание КАК Основание,
	|	ДанныеДокумента.ОснованиеДата КАК ОснованиеДата,
	|	ДанныеДокумента.ОснованиеНомер КАК ОснованиеНомер,
	|	ДанныеДокумента.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ДанныеДокумента.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	ДанныеДокумента.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	ДанныеДокумента.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
	|	ДанныеДокумента.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ДанныеДокумента.ДоверенностьДата КАК ДоверенностьДата,
	|	ДанныеДокумента.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ДанныеДокумента.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	ДанныеДокумента.Отпустил КАК Кладовщик,
	|	ДанныеДокумента.ОтпустилДолжность КАК ДолжностьКладовщика,
	|	ДанныеДокументов.ТребуетсяНаличиеСФ КАК ТребуетсяНаличиеСФ
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПоставщика КАК ДанныеПоставщика
	|		ПО ДанныеДокумента.Ссылка = ДанныеПоставщика.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
	|	ТаблицаДокумента.Содержание КАК НоменклатураНаименование,
	|	НЕОПРЕДЕЛЕНО КАК НоменклатураКод,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕдиницаИзмеренияТНВЭД,
	|	"""" КАК ЕдиницаИзмеренияТНВЭДНаименование,
	|	"""" КАК ЕдиницаИзмеренияТНВЭДКод,
	|	НЕОПРЕДЕЛЕНО КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.НомерГТД КАК НомерГТДСсылка,
	|	ЕСТЬNULL(ТаблицаДокумента.НомерГТД.ТипНомераГТД, НЕОПРЕДЕЛЕНО) КАК ТипНомераГТД,
	|	НЕОПРЕДЕЛЕНО КАК НомерГТД,
	|	НЕОПРЕДЕЛЕНО КАК СтранаПроисхождения,
	|	НЕОПРЕДЕЛЕНО КАК СтранаПроисхожденияКод,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	(ВЫБОР
	|		КОГДА ТаблицаДокумента.Количество = 0 ТОГДА ТаблицаДокумента.СуммаБезНДС
	|		ИНАЧЕ ТаблицаДокумента.СуммаБезНДС / ТаблицаДокумента.Количество КОНЕЦ) КАК Цена,
	|	ТаблицаДокумента.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаБезНДС + ТаблицаДокумента.СуммаНДС КАК СуммаСНДС,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	РеализацияУслугПрочихАктивовТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.Ссылка КАК СчетФактура,
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.НомерСтроки КАК НомерСтрокиСФ,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД КАК НомерГТД,
	|	ДанныеСтраныПросхождения.Код КАК СтранаПроисхожденияКод,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.РегистрационныйНомер КАК РНПТ,
	|	ВЫБОР
	|		КОГДА РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.РегистрационныйНомер = """"
	|			ТОГДА РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД
	|		ИНАЧЕ РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.РегистрационныйНомер
	|	КОНЕЦ												КАК НомерТовара,	
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КодТНВЭД.Код КАК КодТНВЭД,
	|	СУММА(РеализацияУслугПрочихАктивовПрослеживаемыеТовары.СуммаПоРНПТ) КАК СуммаПоРНПТ,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КодТНВЭД.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КодТНВЭД.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	СУММА(РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КоличествоПоРНПТ) КАК Количество
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов.ПрослеживаемыеТовары КАК РеализацияУслугПрочихАктивовПрослеживаемыеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РеализацияУслугПрочихАктивовТаблицаТоваров КАК РеализацияУслугПрочихАктивовТаблицаТоваров
	|			ПО РеализацияУслугПрочихАктивовПрослеживаемыеТовары.Ссылка = РеализацияУслугПрочихАктивовТаблицаТоваров.Ссылка
	|			И РеализацияУслугПрочихАктивовПрослеживаемыеТовары.ОсновноеСредство = РеализацияУслугПрочихАктивовТаблицаТоваров.АналитикаДоходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныПросхождения
	|		ПО РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.СтранаПроисхождения = ДанныеСтраныПросхождения.Ссылка 	
	|ГДЕ
	|	ЕСТЬNULL(РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.ТипНомераГТД, ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.ПустаяСсылка)) В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.Ссылка,
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.НомерСтроки,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД,
	|	ДанныеСтраныПросхождения.Код,	
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.РегистрационныйНомер,
	|	ВЫБОР
	|		КОГДА РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.РегистрационныйНомер = """"
	|			ТОГДА РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД
	|		ИНАЧЕ РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.РегистрационныйНомер
	|	КОНЕЦ,	
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КодТНВЭД,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КодТНВЭД.ЕдиницаИзмерения.Код,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КодТНВЭД.ЕдиницаИзмерения.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактура
	|
	|ИТОГИ ПО
	|	СчетФактура";
	
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru = 'счет-фактура';
																|en = 'tax invoice'"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти	= МассивРезультатов[1];
	Прослеживаемость			= МассивРезультатов[2];
	
	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("РезультатПоШапке",			РезультатПоШапке);
	ДанныеДляПечати.Вставить("РезультатПоТабличнойЧасти",	РезультатПоТабличнойЧасти);
	ДанныеДляПечати.Вставить("Прослеживаемость",			Прослеживаемость);
	
	Возврат ДанныеДляПечати;
	
КонецФункции

//++ НЕ УТ

// Функция получает данные для формирования печатной формы М15
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка.РеализацияУслугПрочихАктивов - Массив ссылок на документы, по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыМ15(ПараметрыПечати, МассивОбъектов) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                  КАК Ссылка,
	|	ДанныеДокументов.Валюта                  КАК Валюта,
	|	ДанныеДокументов.ХозяйственнаяОперация   КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Шапка.Ссылка КАК Ссылка,
	|	Шапка.Номер КАК Номер,
	|	Шапка.Дата КАК Дата,
	|	Шапка.Дата КАК ДатаСоставления,
	|	Шапка.Контрагент КАК Контрагент,
	|	Шапка.Организация КАК Организация,
	|	Шапка.Организация.Префикс КАК Префикс,
	|	Шапка.Основание КАК Основание,
	|	"""" КАК СкладНаименование,
	|	Шапка.Подразделение КАК СтруктурноеПодразделение,
	|	Шапка.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	Шапка.Валюта КАК Валюта,
	|	Шапка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	Шапка.Отпустил КАК Кладовщик,
	|	Шапка.ОтпустилДолжность КАК ДолжностьКладовщика,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
	|		ПО Шапка.Ссылка = ТаблицаДанныхДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО Шапка.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
	|	ТаблицаДокумента.Содержание КАК НоменклатураНаименование,
	|	"""" КАК НоменклатураКод,
	|	ТаблицаДокумента.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	НЕОПРЕДЕЛЕНО КАК ХарактеристикаНаименование,
	|	НЕОПРЕДЕЛЕНО КАК Упаковка,
	|	(ВЫБОР
	|		КОГДА ТаблицаДокумента.Количество = 0 ТОГДА ТаблицаДокумента.СуммаБезНДС
	|		ИНАЧЕ ТаблицаДокумента.СуммаБезНДС / ТаблицаДокумента.Количество КОНЕЦ) КАК Цена,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	0 КАК КоличествоМест,
	|	ТаблицаДокумента.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаБезНДС + ТаблицаДокумента.СуммаНДС КАК СуммаСНДС,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	РеализацияУслугПрочихАктивовТаблицаТоваров КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВнеоборотныйАктив
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаДокумента.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Возврат Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
							РезультатыЗапроса[0], РезультатыЗапроса[1]);
КонецФункции

//-- НЕ УТ

// Функция получает данные для формирования печатной формы ТОРГ - 12
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив - Массив ссылок на документы, по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыТОРГ12(ПараметрыПечати, МассивОбъектов) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                  КАК Ссылка,
	|	ДанныеДокументов.Валюта                  КАК Валюта,
	|	ДанныеДокументов.ХозяйственнаяОперация   КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Шапка.Ссылка КАК Ссылка,
	|	Шапка.Номер КАК Номер,
	|	Шапка.Дата КАК Дата,
	|	Шапка.Статус КАК Статус,
	|	Шапка.Партнер КАК Партнер,
	|	Шапка.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА Шапка.Организация.ОбособленноеПодразделение
	|			ТОГДА Шапка.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Шапка.Организация
	|	КОНЕЦ КАК Организация,
	|	Шапка.Организация.Префикс КАК Префикс,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	Шапка.Отпустил КАК Кладовщик,
	|	Шапка.ОтпустилДолжность КАК ДолжностьКладовщика,
	|	Шапка.Основание КАК Основание,
	|	Шапка.ОснованиеНомер КАК ОснованиеНомер,
	|	Шапка.ОснованиеДата КАК ОснованиеДата,
	|	ВЫБОР
	|		КОГДА Шапка.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Шапка.Контрагент
	|		ИНАЧЕ Шапка.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА Шапка.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Шапка.Организация
	|		ИНАЧЕ Шапка.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	Шапка.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	Шапка.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	Шапка.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	Шапка.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
	|	Шапка.АдресДоставки КАК АдресДоставки,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	Шапка.Валюта КАК Валюта,
	|	Шапка.ДоверенностьНомер КАК ДоверенностьНомер,
	|	Шапка.ДоверенностьДата КАК ДоверенностьДата,
	|	Шапка.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	Шапка.ДоверенностьЛицо КАК ДоверенностьЛицо
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
	|		ПО Шапка.Ссылка = ТаблицаДанныхДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО Шапка.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
	|	ТаблицаДокумента.Содержание КАК НоменклатураНаименование,
	|	"""" КАК НоменклатураКод,
	|	ТаблицаДокумента.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.ЕдиницаИзмерения.Представление КАК ВидУпаковки,
	|	1 КАК КоличествоВОдномМесте,
	|	НЕОПРЕДЕЛЕНО КАК Характеристика,
	|	"""" КАК ХарактеристикаНаименование,
	|	НЕОПРЕДЕЛЕНО КАК Упаковка,
	|	"""" КАК УпаковкаНаименование,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	(ВЫБОР
	|		КОГДА ТаблицаДокумента.Количество = 0 ТОГДА ТаблицаДокумента.СуммаБезНДС
	|		ИНАЧЕ ТаблицаДокумента.СуммаБезНДС / ТаблицаДокумента.Количество КОНЕЦ) КАК Цена,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.Количество КАК КоличествоМест,
	|	ТаблицаДокумента.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаБезНДС + ТаблицаДокумента.СуммаНДС КАК СуммаСНДС,
	|	0 КАК МассаНетто,
	|	0 КАК МассаБрутто,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	РеализацияУслугПрочихАктивовТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаДокумента.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Возврат Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
							РезультатыЗапроса[0], РезультатыЗапроса[1]);
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Валюта.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",     Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	Запрос.УстановитьПараметр("ПустаяГТД",                      Справочники.НомераГТД.ПустаяСсылка());
	
	//Получим Номер ГТД у одного прослеживаемого товара, при наличии.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ПрослеживаемыеТовары.НомерГТД) КАК НомерГТД
	|ПОМЕСТИТЬ ВтПрослеживаемыеТовары
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ПрослеживаемыеТовары.Ссылка = ДанныеДокументов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументов.Ссылка";
	Запрос.Выполнить();
	
	Если ПараметрыЗаполнения.ПересчитыватьВВалютуРегл И ПараметрыЗаполнения.АктуализироватьРасчеты Тогда
		Если НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		
			Запрос.Текст = "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
			|ИЗ
			|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
			|		ТаблицаДанныхДокументов КАК ДанныеДокументов
			|	ПО
			|		РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
			|
			|ГДЕ
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Ссылка.Организация.ВалютаРегламентированногоУчета
			|	И РасчетыСКлиентами.Активность
			|";
			ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
			МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
			
			Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
				ОкончаниеПериодаРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
				АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
				АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
				Попытка
					РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(ОкончаниеПериодаРасчета, АналитикиРасчета);
				Исключение
					ТекстСообщения = НСтр("ru = 'Печатная форма сформирована по неактуальным данным.
					|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.';
					|en = 'Print form is generated according to irrelevant data. 
					|Update AR/AP accounting manually, and then create the print form again.'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецПопытки;
			КонецЕсли;
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДанныеДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	ТаблицаДанныхДокументов КАК ДанныеДокументов
			|ГДЕ 
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Ссылка.Организация.ВалютаРегламентированногоУчета
			|	ИЛИ ДанныеДокументов.Валюта <> &ВалютаУправленческогоУчета";
			МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			РегистрыСведений.СуммыДокументовВВалютахУчета.РассчитатьСуммыДокументовВВалютахУчета(МассивДокументов);
			
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
	//++ НЕ УТ
	|	ВЫБОР 
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.АналитикаДоходов) В (ТИП(Справочник.ОбъектыЭксплуатации),
	|															ТИП(Справочник.НематериальныеАктивы)) ТОГДА
	|				ИСТИНА
	|		ИНАЧЕ
	|				ЛОЖЬ
	|	КОНЕЦ                                                   КАК ВнеоборотныйАктив,
	//-- НЕ УТ
	|	ТаблицаДокумента.Содержание                             КАК Содержание,
	|	ТаблицаДокумента.Количество                             КАК Количество,
	|	ТаблицаДокумента.Количество                             КАК КоличествоУпаковок,
	|	0                                                       КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.ЕдиницаИзмерения                       КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.ЕдиницаИзмерения                       КАК Упаковка,
	|	
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютахУчета.БазаНДСРегл,
	|		ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС
	|	) КАК СуммаБезНДС,
	|	
	|	ТаблицаДокумента.СтавкаНДС                              КАК СтавкаНДС,
	|	
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютахУчета.СуммаНДСРегл,
	|		ТаблицаДокумента.СуммаНДС
	|	) КАК СуммаНДС,
	|	ТаблицаДокумента.АналитикаДоходов КАК АналитикаДоходов,
	|
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)          КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)     КАК Серия,
	|	&ПустаяГТД                                              КАК НомерГТД,
	|	ТаблицаДокумента.КодТНВЭД                               КАК КодТНВЭД,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ                                                   КАК ЭтоТовар,
	|	ЛОЖЬ                                                    КАК ВернутьМногооборотнуюТару
	|
	|ПОМЕСТИТЬ РеализацияУслугПрочихАктивовТаблицаТоваров
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов.Доходы КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|		И СуммыДокументовВВалютахУчета.Активность
	|		И &ПересчитыватьВВалютуРегл	
	|;";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Текст запроса данных прослеживаемость.
// 
// Возвращаемое значение:
//  Строка - Текст запроса данных прослеживаемость
Функция ТекстЗапросаДанныхПрослеживаемость() Экспорт
	
	ТекстЗапроса = 
	"
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.Ссылка КАК Ссылка,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.ОсновноеСредство КАК ОсновноеСредство,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД КАК НомерГТД,
	|	ДанныеСтраныПросхождения.Код КАК СтранаПроисхожденияКод,
	|	ДанныеСтраныПросхождения.Ссылка КАК ПредставлениеСтраны,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.РегистрационныйНомер КАК РНПТ,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.СуммаПоРНПТ КАК СуммаПоРНПТ,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КодТНВЭД.Код КАК КодТНВЭД,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КодТНВЭД.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КодТНВЭД.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КоличествоПоРНПТ КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ПрослеживаемыеТовары
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов.ПрослеживаемыеТовары КАК РеализацияУслугПрочихАктивовПрослеживаемыеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныПросхождения
	|		ПО РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.СтранаПроисхождения = ДанныеСтраныПросхождения.Ссылка 	
	|ГДЕ
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.Ссылка В(&МассивОснований)
	|	И ЕСТЬNULL(РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.ТипНомераГТД, ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.ПустаяСсылка)) В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровНомераСтрокСФ.СчетФактура КАК СчетФактура,
	|	ТаблицаТоваровНомераСтрокСФ.НомерСтрокиСФ КАК НомерСтрокиСФ,
	|	ПрослеживаемыеТовары.НомерГТД КАК НомерГТД,	
	|	ПрослеживаемыеТовары.СтранаПроисхожденияКод КАК СтранаПроисхожденияКод,
	|	ПрослеживаемыеТовары.ПредставлениеСтраны КАК ПредставлениеСтраны,
	|	ПрослеживаемыеТовары.РНПТ КАК НомерТовара,
	|	СУММА(ПрослеживаемыеТовары.СуммаПоРНПТ) КАК СуммаПоРНПТ,
	|	ПрослеживаемыеТовары.КодТНВЭД КАК КодТНВЭД,
	|	ПрослеживаемыеТовары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	ПрослеживаемыеТовары.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
	|	СУММА(ПрослеживаемыеТовары.КоличествоПоРНПТ) КАК Количество
	|ИЗ
	|	ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Доходы КАК Доходы
	|		ПО ПрослеживаемыеТовары.Ссылка = Доходы.Ссылка
	|			И ПрослеживаемыеТовары.ОсновноеСредство = Доходы.АналитикаДоходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваровНомераСтрокСФ КАК ТаблицаТоваровНомераСтрокСФ
	|		ПО ПрослеживаемыеТовары.Ссылка = ТаблицаТоваровНомераСтрокСФ.ДокументОснование
	|			И (Доходы.Содержание = ТаблицаТоваровНомераСтрокСФ.Содержание)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваровНомераСтрокСФ.СчетФактура,
	|	ТаблицаТоваровНомераСтрокСФ.НомерСтрокиСФ,
	|	ПрослеживаемыеТовары.НомерГТД,
	|	ПрослеживаемыеТовары.СтранаПроисхожденияКод,
	|	ПрослеживаемыеТовары.ПредставлениеСтраны,
	|	ПрослеживаемыеТовары.РНПТ,
	|	ПрослеживаемыеТовары.КодТНВЭД,
	|	ПрослеживаемыеТовары.ЕдиницаИзмеренияКод,
	|	ПрослеживаемыеТовары.ЕдиницаИзмеренияНаименование
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактура
	|ИТОГИ ПО
	|	СчетФактура";
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- Локализация

#КонецОбласти

//++ НЕ УТ

#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	//++ Локализация
	
	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстЗадолженностьПокупателяЗаУслуги());
	ТекстыОтражения.Добавить(ТекстЗадолженностьПокупателяЗаУслугиДоПереходаПрава());
	ТекстыОтражения.Добавить(ТекстЗадолженностьПокупателяЗаУслугиПослеПереходаПрава());
	
	ТекстыОтражения.Добавить(ТекстНачислениеНДСЗаУслуги());
	ТекстыОтражения.Добавить(ТекстНачислениеНДСЗаУслугиДоПереходаПрав());
	ТекстыОтражения.Добавить(ТекстНачислениеНДСЗаУслугиПослеПереходаПрав());
	
	ТекстыОтражения.Добавить(ТекстРасходыОтСписанияАктива());
	ТекстыОтражения.Добавить(ТекстВосстановлениеАмортизационнойПремии());
	
	// Реализация ОС с отложенным переходом прав версии 2.2
	ТекстыОтражения.Добавить(ТекстПередачаАктиваДоПереходаПраваСобственности22());
	ТекстыОтражения.Добавить(ТекстРасходыОтСписанияАктиваДоПереходаПраваСобственности22());
	ТекстыОтражения.Добавить(ТекстРасходыОтСписанияАктиваПослеПереходаПраваСобственности22());
	
	// Реализация услуг по доходной аренде.
	ТекстыОтражения.Добавить(ТекстУменьшениеЧистойСтоимостиИнвестицииВАренду());
	ТекстыОтражения.Добавить(ТекстРеализацияУслугПоАрендеНУ());
	ТекстыОтражения.Добавить(ТекстНачислениеНДСПоАренде());
	
	ВнеоборотныеАктивыЛокализация.ТекстОтраженияВРеглУчетеЗакрытияРасходовОтВыбытияОС(ТекстыОтражения);
	ВнеоборотныеАктивыЛокализация.ТекстОтраженияВРеглУчетеЗакрытияРасходовОтВыбытияОССОтложеннымПереходомПрав(ТекстыОтражения);
	
	ТекстЗапроса = СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументыКОтражению.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ТаблицаРасходы.ВнеоборотныйАктив КАК ОсновноеСредство,
	|
	|	МАКСИМУМ(ТаблицаПоследнийПериод.Период) КАК ПериодСрезаПоследних
	|
	|ПОМЕСТИТЬ ПорядокУчетаОСБУ_СрезПоследних
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка)
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаРасходы
	|		ПО (ТаблицаРасходы.Ссылка = ДанныеДокумента.Ссылка)
	|			И (ТаблицаРасходы.НомерСтроки = 1)
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ТаблицаПоследнийПериод
	|		ПО (ТаблицаПоследнийПериод.Организация = ДанныеДокумента.Организация)
	|			И (ТаблицаПоследнийПериод.ОсновноеСредство = ТаблицаРасходы.ВнеоборотныйАктив)
	|			И (ТаблицаПоследнийПериод.Период <= ДанныеДокумента.Дата)
	|			И (ТаблицаПоследнийПериод.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
	|ГДЕ
	|	ТаблицаРасходы.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыКОтражению.Ссылка,
	|	ДанныеДокумента.Организация,
	|	ТаблицаРасходы.ВнеоборотныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация,
	|	ПериодСрезаПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСрезПоследних.Ссылка КАК Ссылка,
	|	ТаблицаСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаРегистраНаДату.НедвижимоеИмущество КАК НедвижимоеИмущество
	|ПОМЕСТИТЬ втПорядокУчетаОСБУ
	|ИЗ
	|	ПорядокУчетаОСБУ_СрезПоследних КАК ТаблицаСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ТаблицаРегистраНаДату
	|		ПО (ТаблицаРегистраНаДату.Организация = ТаблицаСрезПоследних.Организация)
	|			И (ТаблицаРегистраНаДату.ОсновноеСредство = ТаблицаСрезПоследних.ОсновноеСредство)
	|			И (ТаблицаРегистраНаДату.Период = ТаблицаСрезПоследних.ПериодСрезаПоследних)
	|			И (ТаблицаРегистраНаДату.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство";	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	СписокЗапросов.Добавить(Символы.ПС);
	
	Возврат СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	//-- Локализация
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#Область Проведение

Функция ТекстЗапросаТаблицаВтТаблицаВНА(ТекстыЗапроса) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация

	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПорядокУчетаОСБУ(ТекстыЗапроса, "ДанныеДокументаТаблицаРасходы");
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаВтПараметрыЦелевогоФинансированияОС(ТекстыЗапроса, "ДанныеДокументаТаблицаРасходы");
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаВтПараметрыЦелевогоФинансированияНМА(ТекстыЗапроса, "ДанныеДокументаТаблицаРасходы");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаВНА.Ссылка                       КАК Ссылка,
	|	МестонахождениеОС.Организация           КАК Организация,
	|	МестонахождениеОС.Местонахождение       КАК Подразделение,
	|	ТаблицаВНА.ВидАктива                    КАК ВидАктива,
	|	ТаблицаВНА.ВнеоборотныйАктив            КАК ВнеоборотныйАктив,
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.НедвижимоеИмущество, ЛОЖЬ) КАК НедвижимоеИмущество,
	|
	|	ПорядокУчета.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ПорядокУчета.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ТаблицаВНА.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаВНА.АналитикаРасходов КАК АналитикаРасходов,
	|
	|	ПараметрыЦФ.СтатьяДоходов КАК СтатьяДоходов,
	|	ПараметрыЦФ.АналитикаДоходов КАК АналитикаДоходов,
	|	
	|	ТаблицаВНА.ИдентификаторСтроки КАК ИдентификаторСтроки
	|	
	|ПОМЕСТИТЬ втТаблицаВНА
	|
	|ИЗ
	|	ДанныеДокументаТаблицаРасходы КАК ТаблицаВНА
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК ПорядокУчета
	|		ПО ПорядокУчета.Ссылка = ТаблицаВНА.Ссылка 
	|			И ПорядокУчета.ОсновноеСредство = ТаблицаВНА.ВнеоборотныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ПорядокУчетаОСБУ.Ссылка = ТаблицаВНА.Ссылка 
	|			И ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаВНА.ВнеоборотныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыЦелевогоФинансированияОС КАК ПараметрыЦФ
	|		ПО ПараметрыЦФ.Ссылка = ТаблицаВНА.Ссылка 
	|			И ПараметрыЦФ.ОсновноеСредство = ТаблицаВНА.ВнеоборотныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК МестонахождениеОС
	|		ПО МестонахождениеОС.Ссылка = ТаблицаВНА.Ссылка 
	|			И МестонахождениеОС.ОсновноеСредство = ТаблицаВНА.ВнеоборотныйАктив
	|
	|ГДЕ
	|	ТаблицаВНА.ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВНА.Ссылка                       КАК Ссылка,
	|	МестоУчетаНМА.Организация               КАК Организация,
	|	МестоУчетаНМА.Подразделение             КАК Подразделение,
	|	ТаблицаВНА.ВидАктива                    КАК ВидАктива,
	|	ТаблицаВНА.ВнеоборотныйАктив            КАК ВнеоборотныйАктив,
	|	ЛОЖЬ                                    КАК НедвижимоеИмущество,
	|
	|	ПорядокУчета.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ПорядокУчета.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ТаблицаВНА.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаВНА.АналитикаРасходов КАК АналитикаРасходов,
	|
	|	ПараметрыЦФ.СтатьяДоходов КАК СтатьяДоходов,
	|	ПараметрыЦФ.АналитикаДоходов КАК АналитикаДоходов,
	|	
	|	ТаблицаВНА.ИдентификаторСтроки КАК ИдентификаторСтроки
	|	
	|ИЗ
	|	ДанныеДокументаТаблицаРасходы КАК ТаблицаВНА
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПорядокУчетаНМА КАК ПорядокУчета
	|		ПО ПорядокУчета.Ссылка = ТаблицаВНА.Ссылка 
	|			И ПорядокУчета.НематериальныйАктив = ТаблицаВНА.ВнеоборотныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыЦелевогоФинансированияНМА КАК ПараметрыЦФ
	|		ПО ПараметрыЦФ.Ссылка = ТаблицаВНА.Ссылка 
	|			И ПараметрыЦФ.НематериальныйАктив = ТаблицаВНА.ВнеоборотныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестоУчетаНМА КАК МестоУчетаНМА
	|		ПО МестоУчетаНМА.Ссылка = ТаблицаВНА.Ссылка 
	|			И МестоУчетаНМА.НематериальныйАктив = ТаблицаВНА.ВнеоборотныйАктив
	|
	|ГДЕ
	|	ТаблицаВНА.ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НМА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;

КонецФункции
 
#КонецОбласти

//-- НЕ УТ

#Область ФормаДокумента

// Процедура - обработчик изменения реквизита формы.
//
// Параметры:
//	ИмяЭлемента - Строка - имя элемента формы
//	Форма - ФормаКлиентскогоПриложения - форма документа
//	ДополнительныеПараметры - Структура - дополнительные параметры обработки
//
Процедура ПриИзмененииРеквизита(ИмяЭлемента, Форма, ДополнительныеПараметры) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	//++ НЕ УТ
	ЭлементРеализацияВзаимозависимомуЛицу = Элементы.РеализацияВзаимозависимомуЛицу; // ПолеФормы
	Если ИмяЭлемента = ЭлементРеализацияВзаимозависимомуЛицу.Имя Тогда
		РеализацияВзаимозависимомуЛицуПриИзменении(Форма, ДополнительныеПараметры);
	КонецЕсли; 
	//-- НЕ УТ
	
	//-- Локализация
	
КонецПроцедуры

// Процедура - обработчик выполнения команлы формы.
// 
// Параметры:
//	ИмяКоманды - Строка - имя элемента формы
//	Форма - ФормаКлиентскогоПриложения - форма документа
//
Процедура ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Элементы = Форма.Элементы;
	
	//++ Локализация
	
	//++ НЕ УТ
	ЭлементРасходыЗаполнитьВосстановлениеАмортизационнойПремии = Элементы.РасходыЗаполнитьВосстановлениеАмортизационнойПремии; // ПолеФормы
	Если ИмяКоманды = ЭлементРасходыЗаполнитьВосстановлениеАмортизационнойПремии.Имя Тогда
		ЗаполнитьВосстановлениеАмортизационнойПремии(Форма, Истина);
	КонецЕсли; 
	//-- НЕ УТ
	
	//-- Локализация
	
КонецПроцедуры

//++ НЕ УТ

Процедура НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Соглашение")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
Процедура СоглашениеПриИзменении(Форма) Экспорт

	//++ Локализация
	ЗаполнитьПризнакРеализацииВзаимозависимомуЛицу(Форма);
	//-- Локализация
	
КонецПроцедуры

Процедура КонтрагентПриИзменении(Форма) Экспорт

	//++ Локализация
	ЗаполнитьПризнакРеализацииВзаимозависимомуЛицу(Форма);
	//-- Локализация
	
КонецПроцедуры

Процедура ПартнерПриИзменении(Форма) Экспорт

	//++ Локализация
	ЗаполнитьПризнакРеализацииВзаимозависимомуЛицу(Форма);
	//-- Локализация
	
КонецПроцедуры

Функция ТребуетсяОчиститьРеализациюНаОсновании(Объект) Экспорт

	Результат = Ложь;
	
	//++ Локализация
	Результат = (ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПодготовкаКПередачеОС")
					ИЛИ ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПодготовкаКПередачеНМА"))
				И Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияКлиенту
				И Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности;
	//-- Локализация
	
	Возврат Результат;
	
КонецФункции
 
//-- НЕ УТ

#КонецОбласти

//++ НЕ УТ

#Область Прочее

Процедура ЗаполнитьПоДокументуПодготовкаКПередачеОС2_4Завершение(Объект) Экспорт

	//++ Локализация
	
	ЗаполнитьПризнакРеализацииВзаимозависимомуЛицуВОбъекте(Объект);
	ЗаполнитьВосстановлениеАмортизационнойПремииВОбъекте(Объект, Объект.Расходы);
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

//-- НЕ УТ

//++ Локализация
#Область Фискализация

// Возвращает параметры операции фискализации чека для печати чека по документу
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма документ, из которого печатается чек - содержит:
// 	* Объект - ДокументОбъект - Документ-объект, основной параметр формы.
// Возвращаемое значение:
// 	Структура - Структура параметров операции фискализации чека
Функция ОсновныеПараметрыОперации(Форма) Экспорт
	
	ОсновныеПараметрыОперации = ФормированиеФискальныхЧековСерверПереопределяемый.СтруктураОсновныхПараметровОперации();
	
	ОсновныеПараметрыОперации.ДокументСсылка       = Форма.Объект.Ссылка;
	ОсновныеПараметрыОперации.Организация          = Форма.Объект.Организация;
	ОсновныеПараметрыОперации.Контрагент           = Форма.Объект.Контрагент;
	ОсновныеПараметрыОперации.Партнер              = Форма.Объект.Партнер;
	ОсновныеПараметрыОперации.Валюта               = Форма.Объект.Валюта;
	ОсновныеПараметрыОперации.ВалютаВзаиморасчетов = Форма.Объект.ВалютаВзаиморасчетов;
	ОсновныеПараметрыОперации.СуммаДокумента       = Форма.Объект.СуммаДокумента;
	
	Возврат ОсновныеПараметрыОперации;
	
КонецФункции

// Определяет, разрешено ли пробитие фискального чека по документу
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма документ, из которого печатается чек - содержит:
// 	* Объект - ДокументОбъект - Документ-объект, основной параметр формы.
// Возвращаемое значение:
// 	Булево - Истина, если разрешено пробитие чека
Функция РазрешеноПробитиеФискальныхЧековПоДокументу(Форма) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Форма.Объект.Контрагент)
		ИЛИ НЕ ЗначениеЗаполнено(Форма.Объект.ХозяйственнаяОперация) Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	РазрешеноПробитиеФискальныхЧековПоДокументу = Истина;
	
	ЮрФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.Объект.Контрагент, "ЮрФизЛицо");
	РазрешеноПробитиеФискальныхЧековПоДокументу = (ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо);
	
	Если Форма.Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияКлиенту
		И Форма.Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов
		И Форма.Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав Тогда
		
		РазрешеноПробитиеФискальныхЧековПоДокументу	= Ложь;
	КонецЕсли;
	
	Возврат РазрешеноПробитиеФискальныхЧековПоДокументу;
	
КонецФункции

// Формирует массив форматированных строк для формирования гиперссылки пробития фискального чека
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ-ссылка, по которому пробивается фискальный чек
// 	Форма - ФормаКлиентскогоПриложения - Форма документ, из которого печатается чек - содержит:
// 	* Объект - ДокументОбъект - Документ-объект, основной параметр формы.
// 	МассивПредставлений - Массив из ФорматированнаяСтрока - Массив форматированных строк для формирования гиперссылки
//    пробития фискального чека.
Процедура ОбновитьГиперссылкуПробитияФискальногоЧека(ДокументСсылка, Форма, МассивПредставлений) Экспорт
	
	ФискальнаяОперацияДанныеЖурнала = ФормированиеФискальныхЧековСервер.ДанныеПробитогоФискальногоЧекаПоДокументу(ДокументСсылка);
	
	Если ФискальнаяОперацияДанныеЖурнала <> Неопределено Тогда
		
		НомерЧекаККМ = ФискальнаяОперацияДанныеЖурнала.НомерЧекаККМ;
		ТекстСсылки = "ОткрытьЗаписьФискальнойОперации";
		
		ФормированиеФискальныхЧековСервер.ДобавитьВПредставлениеГиперссылкиКомандуЧекПробит(МассивПредставлений, НомерЧекаККМ, ТекстСсылки);
		
	ИначеЕсли ФормированиеФискальныхЧековСервер.ЕстьПравоНаПробитиеФискальногоЧекаПоДокументу(ДокументСсылка) Тогда
		
		Если ФормированиеФискальныхЧековСервер.ЕстьПодключенноеОборудованиеККассамОрганизации(Форма.Объект.Организация) Тогда 
			ФормированиеФискальныхЧековСервер.ДобавитьВПредставлениеГиперссылкиКомандуПробитьЧек(МассивПредставлений, "ПробитьЧек");
		Иначе
			ФормированиеФискальныхЧековСервер.ДобавитьВПредставлениеГиперссылкиСтатусЧекНеПробит(МассивПредставлений, "НастроитьОборудование");
		КонецЕсли;
		
	Иначе
		
		ФормированиеФискальныхЧековСервер.ДобавитьВПредставлениеГиперссылкиСтатусЧекНеПробит(МассивПредставлений);
		
	КонецЕсли;
	
КонецПроцедуры

// Определяет виды фискальных чеков, доступных по документу
// 
// Параметры:
// 	ВидыЧеков - ТаблицаЗначений - Таблица значений, содержащая виды фискальных чеков, доступных по документу
// 	Операция - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция по документу
// 	ИмяКомандыПробитияЧека - Строка - Имя команды пробития чека
Процедура ЗаполнитьВидыФискальныхЧековПоДокументу(ВидыЧеков, Операция, ИмяКомандыПробитияЧека) Экспорт
	
	ВидЧека = ВидыЧеков.Добавить();
	ВидЧека.ТипФискальногоДокумента = Перечисления.ТипыФискальныхДокументовККТ.КассовыйЧек;
	ВидЧека.ТипРасчетаДенежнымиСредствами = Перечисления.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств;
	ВидЧека.ВидЧекаКоррекции = Неопределено;
	
	ВидЧека = ВидыЧеков.Добавить();
	ВидЧека.ТипФискальногоДокумента = Перечисления.ТипыФискальныхДокументовККТ.КассовыйЧекКоррекции;
	ВидЧека.ТипРасчетаДенежнымиСредствами = Перечисления.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств;
	ВидЧека.ВидЧекаКоррекции = Перечисления.ВидыЧековКоррекции.НеприменениеККТ;
	
КонецПроцедуры

// Возвращает таблицу товаров для заполнения позиций строк в параметрах чека
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ для получения товарных позиций
// Возвращаемое значение:
// 	ТаблицаЗначений - Таблицу с товарными позициями с количественными и суммовыми показателями
Функция ПозицииНоменклатурыПоДокументу(ДокументСсылка) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Валюта               КАК Валюта,
	|	ДанныеДокументов.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка = &Ссылка
	|;";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Выполнить();
	
	ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	ПараметрыЗаполнения.ПересчитыватьВВалютуРегл = Истина;
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	
	|	ВЫБОР КОГДА ТаблицаДанныхДокументов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов) 
	|		И НЕ РеализацияУслугПрочихАктивовТаблицаТоваров.АналитикаДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) 
	|		ТОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.АналитикаДоходов.Представление
	|		ИНАЧЕ РеализацияУслугПрочихАктивовТаблицаТоваров.Содержание КОНЕЦ КАК Номенклатура,
	|	
	|	""""                      							  КАК Характеристика,
	|	""""                      							  КАК Упаковка,
	|	
	|	ВЫБОР
	|		КОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок = 0
	|			ТОГДА 1
	|		ИНАЧЕ РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ КАК Количество,
	|	
	|	ВЫБОР 
	|		КОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок = 0
	|			ТОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаБезНДС + РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ((РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаБезНДС + РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС) /
	|				РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК Цена,
	|	
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаБезНДС + РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС КАК Сумма,
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	РеализацияУслугПрочихАктивовТаблицаТоваров КАК РеализацияУслугПрочихАктивовТаблицаТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов ПО ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Количество             КАК Количество,
	|	ТаблицаНоменклатуры.Сумма                  КАК Сумма,
	|	ТаблицаНоменклатуры.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаНоменклатуры.СуммаНДС               КАК СуммаНДС,
	|	ТаблицаНоменклатуры.Цена                   КАК Цена,
	|	
	|	ТаблицаНоменклатуры.Номенклатура           КАК НоменклатураНаименование,
	|	ТаблицаНоменклатуры.Характеристика         КАК ХарактеристикаНаименование,
	|	ТаблицаНоменклатуры.Упаковка               КАК Упаковка,
	|	ТаблицаНоменклатуры.Упаковка               КАК УпаковкаНаименование
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНоменклатуры.НомерСтроки
	|";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Определяет систему налогообложения по документу
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ для определения системы налогообложения
// Возвращаемое значение:
// 	ПеречислениеСсылка.ТипыСистемНалогообложенияККТ - Система налогообложения по документу
Функция СистемаНалогообложенияПоДокументу(ДокументСсылка) Экспорт
	
	СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ЕНВД;
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Организация, НалогообложениеНДС");
	Если РеквизитыДокумента.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда
		СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.Патент;
	ИначеЕсли РеквизитыДокумента.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
		СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ЕНВД;
	Иначе
		СистемаНалогообложения = РозничныеПродажиЛокализация.СистемаНалогообложенияФискальнойОперации(РеквизитыДокумента.Организация);
	КонецЕсли;
	
	Возврат СистемаНалогообложения;
	
КонецФункции

// Возвращает таблицу товаров для заполнения позиций строк в параметрах чека на поставку
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ для получения товарных позиций
// Возвращаемое значение:
// 	ТаблицаЗначений - Таблица с товарными позициями с количественными и суммовыми показателями
Функция ПредметыРасчетовПоДокументу(ДокументСсылка) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Валюта               КАК Валюта,
	|	ДанныеДокументов.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка = &Ссылка
	|;";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Выполнить();
	
	ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	ПараметрыЗаполнения.ПересчитыватьВВалютуРегл = Истина;
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.НомерСтроки,
	|	ВЫБОР КОГДА ТаблицаДанныхДокументов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов) 
	|		И НЕ РеализацияУслугПрочихАктивовТаблицаТоваров.АналитикаДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) КОНЕЦ КАК ТипНоменклатуры,
	|	ЛОЖЬ                                           КАК ПодакцизныйТовар,
	|
	|	ВЫБОР КОГДА ТаблицаДанныхДокументов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов) 
	|		И НЕ РеализацияУслугПрочихАктивовТаблицаТоваров.АналитикаДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) 
	|		ТОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.АналитикаДоходов.Представление
	|		ИНАЧЕ РеализацияУслугПрочихАктивовТаблицаТоваров.Содержание КОНЕЦ КАК НоменклатураНаименование,
	|	""""                      КАК ХарактеристикаНаименование,
	|	НЕОПРЕДЕЛЕНО              КАК Упаковка,
	|	""""                      КАК УпаковкаНаименование,
	|	
	|	ВЫБОР 
	|		КОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок = 0
	|			ТОГДА 1
	|		ИНАЧЕ РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	
	|	ВЫБОР 
	|		КОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок = 0
	|			ТОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаБезНДС + РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ((РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаБезНДС + РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС) /
	|				РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК Цена,
	|	
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаБезНДС + РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС КАК СуммаСНДС,
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|
	|	0                        							 КАК СуммаСкидки
	|ИЗ
	|	РеализацияУслугПрочихАктивовТаблицаТоваров КАК РеализацияУслугПрочихАктивовТаблицаТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов ПО ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.НомерСтроки";
	
	ПредметыРасчетов = Запрос.Выполнить().Выгрузить();
	
	Возврат ПредметыРасчетов;
	
КонецФункции

#КонецОбласти
//-- Локализация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//  ДокументОбъект - ДокументОбъект.РеализацияУслугПрочихАктивов -
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
	ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

//++ НЕ УТ

//
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//
Процедура ТаблицыОтложенногоФормированияДвижений(ТекстыЗапроса) Экспорт

//++ Локализация

	#Область ОтражениеДокументовВРеглУчете
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Ссылка КАК Документ,
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(ДанныеДокумента.Период, ДЕНЬ) КАК ДатаОтражения,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете) КАК Статус
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Ссылка КАК Документ,
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(ДанныеДокумента.ДатаПереходаПраваСобственности, ДЕНЬ) КАК ДатаОтражения,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете) КАК Статус
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
	|	И ДанныеДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
	|	И НАЧАЛОПЕРИОДА(ДанныеДокумента.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ДанныеДокумента.ДатаПереходаПраваСобственности, ДЕНЬ)
	|";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	#КонецОбласти

//-- Локализация
	
КонецПроцедуры

//-- НЕ УТ

//++ Локализация

//++ НЕ УТ

Функция ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрослеживаемыеТоварыВСоставеОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПрослеживаемыеТовары.НомерСтроки								КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)							КАК ВидДвижения,
	|	&Период															КАК Период,
	|	&Организация													КАК Организация,
	|	ПрослеживаемыеТовары.НомерГТД									КАК РНПТ,
	|	ПрослеживаемыеТовары.ОсновноеСредство							КАК ОсновноеСредство,
	|	ПрослеживаемыеТовары.КодТНВЭД									КАК КодТНВЭД,
	|	ПрослеживаемыеТовары.КоличествоПоРНПТ							КАК КоличествоПоРНПТ
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|ГДЕ
	|	ПрослеживаемыеТовары.Ссылка = &Ссылка
	|	И ПрослеживаемыеТовары.НомерГТД.ТипНомераГТД = ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПрослеживаемыеТовары.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
		
КонецФункции

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		Документы.РеализацияУслугПрочихАктивов.ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	МассивТекстовЗапроса = Новый Массив;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	Если ДокументОбъект = Неопределено
	 ИЛИ ((ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности
	 		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
		  И ДокументОбъект.Статус = Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено) Тогда
	
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	&Организация КАК Организация,
		|	НАЧАЛОПЕРИОДА(&ДатаПереходаПраваСобственности, ДЕНЬ) КАК ДатаОтражения
		|ГДЕ
		|	&ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
		|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
		|	И НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(&ДатаПереходаПраваСобственности, ДЕНЬ)";
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	ТекстЗапроса = РеглУчетПроведениеСервер.ТекстЗапросаОтраженияПоОбъектамРасчетов("ДанныеДокументаТаблицаРасшифровкаПлатежа");
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = РеглУчетПроведениеСервер.ТекстЗапросаОтраженияПоДоговору("&Договор");
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	МассивТекстовЗапроса.Добавить(ДоходыИРасходыСервер.ДополнитьТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Ложь));
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ПроверитьПродажуДвижимогоИмуществаСовместноСНедвижимым(Объект, Отказ)
	
	Если Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втНедвижимоеИмущество
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Дата,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка КАК Ссылка,
	|	ОбъектыЭксплуатации.Представление КАК Представление
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|	И НЕ ОбъектыЭксплуатации.Ссылка В
	|				(ВЫБРАТЬ
	|					втНедвижимоеИмущество.ОсновноеСредство
	|				ИЗ
	|					втНедвижимоеИмущество КАК втНедвижимоеИмущество)
	|	И ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				втНедвижимоеИмущество КАК втНедвижимоеИмущество)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Представление";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("СписокОС", Объект.Расходы.ВыгрузитьКолонку("ВнеоборотныйАктив"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ШаблонСообщения = НСтр("ru = 'Основное средство ""%1"" не является недвижимым имуществом.
                            |Не допускается оформление одним документом продажи движимого и недвижимого имущества одновременно.
                            |Необходимо оформить разные документы.';
                            |en = 'The fixed asset ""%1"" is not immovable property.
                            |It is not allowed to issue one instrument of sale of movable and immovable property at the same time.
                            |Different instruments should be issued.'");
	
	Пока Выборка.Следующий() Цикл
		ДанныеСтроки = Объект.Расходы.Найти(Выборка.Ссылка, "ВнеоборотныйАктив");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.Представление);
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Расходы", ДанныеСтроки.НомерСтроки, "ВнеоборотныйАктив");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Поле, "", Отказ);
	КонецЦикла;
	
КонецПроцедуры

//-- НЕ УТ

//-- Локализация

#КонецОбласти

//++ Локализация

//++ НЕ УТ

#Область ФормаДокумента

Процедура РеализацияВзаимозависимомуЛицуПриИзменении(Форма, ДополнительныеПараметры)

	Объект = Форма.Объект;
	
	Если Объект.РеализацияВзаимозависимомуЛицу Тогда
		ЗаполнитьВосстановлениеАмортизационнойПремии(Форма);
	КонецЕсли; 
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "РеализацияВзаимозависимомуЛицу");

КонецПроцедуры

Процедура ЗаполнитьВосстановлениеАмортизационнойПремии(Форма, ТолькоВыбранныеСтроки = Ложь)

	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если ТолькоВыбранныеСтроки Тогда
		КоллекцияСтрок = РаботаСТабличнымиЧастямиКлиентСервер.ЭлементыКоллекции(
								Объект.Расходы, Элементы.Расходы.ВыделенныеСтроки);
	Иначе
		КоллекцияСтрок = Объект.Расходы;
	КонецЕсли;
	
	ЗаполнитьВосстановлениеАмортизационнойПремииВОбъекте(Объект, КоллекцияСтрок);

КонецПроцедуры

Процедура ЗаполнитьПризнакРеализацииВзаимозависимомуЛицу(Форма)

	Объект = Форма.Объект;
	
	ЗаполнитьПризнакРеализацииВзаимозависимомуЛицуВОбъекте(Объект);

	Если Объект.РеализацияВзаимозависимомуЛицу Тогда
		ЗаполнитьВосстановлениеАмортизационнойПремии(Форма);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

//-- НЕ УТ

//-- Локализация

#Область Прочее

//++ Локализация

//++ НЕ УТ

Функция ТекстЗадолженностьПокупателяЗаУслугиДоПереходаПрава()
	
	СписокЗапросов = Новый Массив;
	
	#Область ПродажаОСВерсии22
	ТекстЗапроса =
	"ВЫБРАТЬ //// Отражена задолженность покупателя до перехода права собственности (Дт <62.1, 76> :: Кт <90.1, 91.1>)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	Строки.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	
	|	Строки.СтатьяДоходов КАК СубконтоКт1,
	|	Строки.АналитикаДоходов КАК СубконтоКт2,
	|	Строки.СтавкаНДС КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК СуммаВРКт,
	|	""Задолженность покупателя до перехода права собственности"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов.Доходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка 
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки 
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСКлиентами КАК Расчеты
	|	ПО
	|		Расчеты.Ссылка = Операция.Ссылка
	|		И Расчеты.СуммаРегл <> 0
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПродажаОСВерсии24_Недвижимость
	ТекстЗапроса =
	"ВЫБРАТЬ //// Отражена задолженность покупателя до перехода права собственности (Дт <62.1, 76> :: Кт <90.1, 91.1>)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	Суммы.ОбъектРасчетов.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	Суммы.Валюта КАК ВалютаДт,
	|	Суммы.ОбъектРасчетов.Подразделение КАК ПодразделениеДт,
	|	Суммы.ОбъектРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	
	|	Суммы.ОбъектРасчетов.Контрагент КАК СубконтоДт1,
	|	Суммы.ОбъектРасчетов.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	Строки.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	
	|	Строки.СтатьяДоходов КАК СубконтоКт1,
	|	Строки.АналитикаДоходов КАК СубконтоКт2,
	|	Строки.СтавкаНДС.ПеречислениеСтавкаНДС КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК СуммаВРКт,
	|	""Задолженность покупателя до перехода права собственности"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов.Доходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаРасходы
	|	ПО
	|		ТаблицаРасходы.Ссылка = Операция.Ссылка
	|		И ТаблицаРасходы.НомерСтроки = 1
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка 
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки 
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК втПорядокУчетаОСБУ
	|	ПО втПорядокУчетаОСБУ.Ссылка = ТаблицаРасходы.Ссылка
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|	И ЕСТЬNULL(втПорядокУчетаОСБУ.НедвижимоеИмущество, ИСТИНА) = ИСТИНА";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	Возврат СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

Функция ТекстЗадолженностьПокупателяЗаУслугиПослеПереходаПрава()
	
	СписокЗапросов = Новый Массив;
	
	#Область ПродажаОСВерсии22
	ТекстЗапроса =
	"ВЫБРАТЬ //// Отражена задолженность покупателя после перехода права собственности (Дт <62.1, 76> :: Кт <90.1, 91.1>)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.ДатаПереходаПраваСобственности КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаСНДС) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр, Строки.СуммаСНДС / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, Строки.СуммаНДС) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	Строки.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	
	|	Строки.СтатьяДоходов КАК СубконтоКт1,
	|	Строки.АналитикаДоходов КАК СубконтоКт2,
	|	Строки.СтавкаНДС.ПеречислениеСтавкаНДС КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК СуммаВРКт,
	|	""Задолженность покупателя после перехода права собственности"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов.Доходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка 
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки 
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСКлиентами КАК Расчеты
	|	ПО
	|		Расчеты.Ссылка = Операция.Ссылка
	|		И Расчеты.СуммаРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПереходаПраваСобственности
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|	И Операция.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПродажаОСВерсии24_Недвижимость
	ТекстЗапроса =
	"ВЫБРАТЬ //// Отражена задолженность покупателя после перехода права собственности (Дт <62.1, 76> :: Кт <90.1, 91.1>)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.ДатаПереходаПраваСобственности КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаСНДС) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр, Строки.СуммаСНДС / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, Строки.СуммаНДС) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	Строки.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	
	|	Строки.СтатьяДоходов КАК СубконтоКт1,
	|	Строки.АналитикаДоходов КАК СубконтоКт2,
	|	Строки.СтавкаНДС.ПеречислениеСтавкаНДС КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК СуммаВРКт,
	|	""Задолженность покупателя после перехода права собственности"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов.Доходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаРасходы
	|	ПО
	|		ТаблицаРасходы.Ссылка = Операция.Ссылка
	|		И ТаблицаРасходы.НомерСтроки = 1
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка 
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки 
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСКлиентами КАК Расчеты
	|	ПО
	|		Расчеты.Ссылка = Операция.Ссылка
	|		И Расчеты.СуммаРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПереходаПраваСобственности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК втПорядокУчетаОСБУ
	|	ПО втПорядокУчетаОСБУ.Ссылка = ТаблицаРасходы.Ссылка
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|	И Операция.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
	|	И ЕСТЬNULL(втПорядокУчетаОСБУ.НедвижимоеИмущество, ИСТИНА) = ИСТИНА";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПродажаОСВерсии24_ДвижимоеИмущество
	ТекстЗапроса =
	"ВЫБРАТЬ //// Отражена задолженность покупателя после перехода права собственности (Дт <62.1, 76> :: Кт <90.1, 91.1>)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.ДатаПереходаПраваСобственности КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаСНДС) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр, Строки.СуммаСНДС / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаСНДС) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	Строки.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	
	|	Строки.СтатьяДоходов КАК СубконтоКт1,
	|	Строки.АналитикаДоходов КАК СубконтоКт2,
	|	Строки.СтавкаНДС КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Задолженность покупателя после перехода права собственности"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов.Доходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаРасходы
	|	ПО
	|		ТаблицаРасходы.Ссылка = Операция.Ссылка
	|		И ТаблицаРасходы.НомерСтроки = 1
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка 
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки 
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСКлиентами КАК Расчеты
	|	ПО
	|		Расчеты.Ссылка = Операция.Ссылка
	|		И Расчеты.СуммаРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПереходаПраваСобственности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК втПорядокУчетаОСБУ
	|	ПО втПорядокУчетаОСБУ.Ссылка = ТаблицаРасходы.Ссылка
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|	И Операция.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
	|	И ЕСТЬNULL(втПорядокУчетаОСБУ.НедвижимоеИмущество, ИСТИНА) = ЛОЖЬ";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	Возврат СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

Функция ТекстНачислениеНДСЗаУслуги()
	
	Возврат "
	|ВЫБРАТЬ //// Начислен НДС от продаж продукции, товаров, выполнения работ, оказания услуг (Дт <90.3, 91.2> :: Кт <68.2>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, Строки.СуммаНДС) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаНДСУпр, Строки.СуммаНДС / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриДоходах) КАК ВидСчетаДт,
	|	Строки.СтатьяДоходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	Строки.СтатьяДоходов КАК СубконтоДт1,
	|	Строки.АналитикаДоходов КАК СубконтоДт2,
	|	Строки.СтавкаНДС.ПеречислениеСтавкаНДС КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС) КАК СчетКт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, Строки.СуммаНДС) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДС"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.РеализацияУслугПрочихАктивов.Доходы КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО 
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки 
	|		И Суммы.СуммаНДСРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов))
	|	ИЛИ
	|		Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияУслугПоАренде)
	|		И НЕ Строки.АрендныйКомпонентДоговора
	|";
	
КонецФункции

Функция ТекстНачислениеНДСЗаУслугиДоПереходаПрав()
	
	Возврат "
	|ВЫБРАТЬ //// До перехода права собственности. Начислен НДС от продаж продукции, товаров, выполнения работ, оказания услуг (Дт <76.ОТ> :: Кт <68.2>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, Строки.СуммаНДС) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаНДСУпр, Строки.СуммаНДС / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	Строки.СтатьяДоходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНачисленныйПоОтгрузке) КАК СчетДт,
	|	
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.Ссылка КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС) КАК СчетКт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, Строки.СуммаНДС) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДС до перехода прав собственности"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.РеализацияУслугПрочихАктивов.Доходы КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО 
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки 
	|		И Суммы.СуммаНДСРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
	|";
	
КонецФункции

Функция ТекстНачислениеНДСЗаУслугиПослеПереходаПрав()
	
	Возврат "
	|ВЫБРАТЬ //// После перехода права собственности. Начислен НДС от продаж продукции, товаров, выполнения работ, оказания услуг (Дт <90.3, 91.2> :: Кт <76.ОТ>)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.ДатаПереходаПраваСобственности КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, Строки.СуммаНДС) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаНДСУпр, Строки.СуммаНДС / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриДоходах) КАК ВидСчетаДт,
	|	Строки.СтатьяДоходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	
	|	Строки.СтатьяДоходов КАК СубконтоДт1,
	|	Строки.АналитикаДоходов КАК СубконтоДт2,
	|	Строки.СтавкаНДС.ПеречислениеСтавкаНДС КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНачисленныйПоОтгрузке) КАК СчетКт,
	|	
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Ссылка КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДС после перехода прав собственности"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.РеализацияУслугПрочихАктивов.Доходы КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО 
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки 
	|		И Суммы.СуммаНДСРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПереходаПраваСобственности
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
	|	И Операция.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
	|";
	
КонецФункции

Функция ТекстРасходыОтСписанияАктива()
	
	Возврат "
	|ВЫБРАТЬ //// Расходы от списания актива (Дт <91.02> :: Кт <...>)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	Строки.НомерСтроки КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.Сумма КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница КАК СуммаНУДт,
	|	Строки.ПостояннаяРазница КАК СуммаПРДт,
	|	Строки.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаКт,
	|	Строки.СтатьяАктивовПассивов КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаАктивовПассивов) = ТИП(Справочник.ОбъектыЭксплуатации)
	|			ИЛИ ТИПЗНАЧЕНИЯ(Строки.АналитикаАктивовПассивов) = ТИП(Справочник.НематериальныеАктивы)
	|		ТОГДА Строки.АналитикаАктивовПассивов.НаправлениеДеятельности
	|		ИНАЧЕ Операция.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|	
	|	Строки.НастройкаСчетовУчета.СчетУчета КАК СчетКт,
	|	
	|	Строки.НастройкаСчетовУчета.Субконто1 КАК СубконтоКт1,
	|	Строки.НастройкаСчетовУчета.Субконто2 КАК СубконтоКт2,
	|	Строки.НастройкаСчетовУчета.Субконто3 КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница КАК СуммаНУКт,
	|	Строки.ПостояннаяРазница КАК СуммаПРКт,
	|	Строки.ВременнаяРазница КАК СуммаВРКт,
	|	
	|	""Расходы от списания актива"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов.Расходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|	И Строки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И Строки.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //// Расходы от списания актива (Дт <91.02> :: Кт <04.01>)
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл + Строки.СтоимостьЦФ КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ + Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПР + Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВР + Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ + Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПР + Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВР + Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|	
	|	""Расходы от списания нематериального актива"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СебестоимостьРеализацииНМА)
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|";
	
КонецФункции

Функция ТекстПередачаАктиваДоПереходаПраваСобственности22()
	
	Возврат "
	|ВЫБРАТЬ //// Передача актива до перехода права собственности (Дт <45.04> :: Кт <01.09>)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	Строки.НомерСтроки КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.Сумма КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПустаяСсылка) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаАктивовПассивов) = ТИП(Справочник.ОбъектыЭксплуатации)
	|			ИЛИ ТИПЗНАЧЕНИЯ(Строки.АналитикаАктивовПассивов) = ТИП(Справочник.НематериальныеАктивы)
	|		ТОГДА Строки.АналитикаАктивовПассивов.НаправлениеДеятельности
	|		ИНАЧЕ Операция.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПереданныеОбъектыНедвижимости) КАК СчетДт,
	|	
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Строки.НастройкаСчетовУчета.Субконто1 КАК СубконтоДт2,
	|	Строки.НастройкаСчетовУчета.Субконто2 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница КАК СуммаНУДт,
	|	Строки.ПостояннаяРазница КАК СуммаПРДт,
	|	Строки.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаАктивовПассивов) = ТИП(Справочник.ОбъектыЭксплуатации)
	|			ИЛИ ТИПЗНАЧЕНИЯ(Строки.АналитикаАктивовПассивов) = ТИП(Справочник.НематериальныеАктивы)
	|		ТОГДА Строки.АналитикаАктивовПассивов.НаправлениеДеятельности
	|		ИНАЧЕ Операция.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|	
	|	Строки.НастройкаСчетовУчета.СчетУчета КАК СчетКт,
	|	
	|	Строки.НастройкаСчетовУчета.Субконто1 КАК СубконтоКт1,
	|	Строки.НастройкаСчетовУчета.Субконто2 КАК СубконтоКт2,
	|	Строки.НастройкаСчетовУчета.Субконто3 КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница КАК СуммаНУКт,
	|	Строки.ПостояннаяРазница КАК СуммаПРКт,
	|	Строки.ВременнаяРазница КАК СуммаВРКт,
	|	
	|	""Передача актива до перехода права собственности"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов.Расходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|	И Строки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|";
	
КонецФункции

Функция ТекстРасходыОтСписанияАктиваДоПереходаПраваСобственности22()
	
	Возврат "
	|ВЫБРАТЬ //// Расходы от списания актива до перехода права собственности (Дт <91.02> :: Кт <45.04>)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.НастройкаСчетовУчета.Субконто1 КАК СубконтоДт2,
	|	Строки.НастройкаСчетовУчета.Субконто2 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница КАК СуммаНУДт,
	|	Строки.ПостояннаяРазница КАК СуммаПРДт,
	|	-(Строки.СуммаРегл - Строки.ВременнаяРазница) КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПустаяСсылка) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаАктивовПассивов) = ТИП(Справочник.ОбъектыЭксплуатации)
	|			ИЛИ ТИПЗНАЧЕНИЯ(Строки.АналитикаАктивовПассивов) = ТИП(Справочник.НематериальныеАктивы)
	|		ТОГДА Строки.АналитикаАктивовПассивов.НаправлениеДеятельности
	|		ИНАЧЕ Операция.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПереданныеОбъектыНедвижимости) КАК СчетКт,
	|	
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Строки.НастройкаСчетовУчета.Субконто1 КАК СубконтоКт2,
	|	Строки.НастройкаСчетовУчета.Субконто2 КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница КАК СуммаНУКт,
	|	Строки.ПостояннаяРазница КАК СуммаПРКт,
	|	-(Строки.СуммаРегл - Строки.ВременнаяРазница) КАК СуммаВРКт,
	|	
	|	""Расходы от списания актива до перехода права собственности"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов.Расходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|	И Строки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|";
	
КонецФункции

Функция ТекстРасходыОтСписанияАктиваПослеПереходаПраваСобственности22()
	
	Возврат "
	|ВЫБРАТЬ //// Расходы от списания актива после перехода права собственности (Дт <91.02> :: Кт <45.04>)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.ДатаПереходаПраваСобственности КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.Сумма КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.НастройкаСчетовУчета.Субконто1 КАК СубконтоДт2,
	|	Строки.НастройкаСчетовУчета.Субконто2 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	Строки.СуммаРегл КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПустаяСсылка) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаАктивовПассивов) = ТИП(Справочник.ОбъектыЭксплуатации)
	|			ИЛИ ТИПЗНАЧЕНИЯ(Строки.АналитикаАктивовПассивов) = ТИП(Справочник.НематериальныеАктивы)
	|		ТОГДА Строки.АналитикаАктивовПассивов.НаправлениеДеятельности
	|		ИНАЧЕ Операция.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПереданныеОбъектыНедвижимости) КАК СчетКт,
	|	
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Строки.НастройкаСчетовУчета.Субконто1 КАК СубконтоКт2,
	|	Строки.НастройкаСчетовУчета.Субконто2 КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	Строки.СуммаРегл КАК СуммаВРКт,
	|	
	|	""Расходы от списания актива после перехода права собственности"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов.Расходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|	И Операция.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
	|	И Строки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|
	|";
	
КонецФункции
 
Функция ТекстВосстановлениеАмортизационнойПремии()
	
	ТекстыОтражения = Новый Массив;
	
	#Область ВосстановлениеАмортизационнойПремии_Дт_01_09__Кт_91_01
	ТекстЗапроса =
	"ВЫБРАТЬ //// Восстановление амортизационной премии (Дт <01.09> :: Кт <91.01>)
	|	
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	СтрокиДт.СтатьяРасходов КАК АналитикаУчетаДт,
	|	СтрокиДт.Подразделение КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.СтатьяРасходов КАК СубконтоДт1,
	|	СтрокиДт.АналитикаРасходов КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	-СтрокиДт.ПостояннаяРазница КАК СуммаНУДт,
	|	СтрокиДт.ПостояннаяРазница КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	СтрокиКт.СтатьяДоходов КАК АналитикаУчетаКт,
	|	СтрокиДт.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиДт.Подразделение КАК ПодразделениеКт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.СтатьяДоходов КАК СубконтоКт1,
	|	СтрокиКт.АналитикаДоходов КАК СубконтоКт2,
	|	СтрокиДт.АналитикаРасходов КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	-СтрокиДт.ПостояннаяРазница КАК СуммаНУКт,
	|	СтрокиДт.ПостояннаяРазница КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Восстановление амортизационной премии"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиДт
	|		ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК СтрокиКт
	|		ПО СтрокиКт.Ссылка = СтрокиДт.Регистратор
	|			И СтрокиКт.ИдентификаторСтроки = СтрокиДт.ИдентификаторФинЗаписи
	|	
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеАмортизационнойПремии)
	|	И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)";
	ТекстыОтражения.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

Функция ТекстЗадолженностьПокупателяЗаУслуги()
	
	Возврат "
	|ВЫБРАТЬ //// Отражена задолженность покупателя (Дт <62.1, 76> :: Кт <90.1, 91.1>)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаСНДС) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр, Строки.СуммаСНДС / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	Строки.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	
	|	Строки.СтатьяДоходов КАК СубконтоКт1,
	|	Строки.АналитикаДоходов КАК СубконтоКт2,
	|	Строки.СтавкаНДС.ПеречислениеСтавкаНДС КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Задолженность покупателя"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов.Доходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка 
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки 
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСКлиентами КАК Расчеты
	|	ПО
	|		Расчеты.Ссылка = Операция.Ссылка
	|		И Расчеты.СуммаРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов))
	|	ИЛИ
	|		Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияУслугПоАренде)
	|		И НЕ Строки.АрендныйКомпонентДоговора
	|";
	
КонецФункции

#Область ИнвестицииВАренду
Функция ТекстУменьшениеЧистойСтоимостиИнвестицииВАренду()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ //// Уменьшение чистой стоимости инвестиции в аренду на величину платежа (Дт <62.1, 76> :: Кт <58.АП>).
	|	СтрокиКт.Регистратор КАК Ссылка,
	|	СтрокиКт.Период КАК Период,
	|	СтрокиКт.Организация КАК Организация,
	|	СтрокиКт.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|
	|	Суммы.СуммаБезНДСРегл КАК Сумма,
	|	Суммы.СуммаБезНДСУпр КАК СуммаУУ,
	|
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|
	|	СтрокиДт.ОбъектРасчетов.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	Суммы.Валюта КАК ВалютаДт,
	|
	|	СтрокиДт.ОбъектРасчетов.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.ОбъектРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	СтрокиДт.ОбъектРасчетов.Контрагент КАК СубконтоДт1,
	|	СтрокиДт.ОбъектРасчетов.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Суммы.СуммаБезНДС КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	Суммы.СуммаБезНДСРегл КАК СуммаВРДт,
	|
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеПлатежи) КАК ВидСчетаКт,
	|
	|	СтрокиКт.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	Суммы.Валюта КАК ВалютаКт,
	|
	|	СтрокиКт.Договор.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.Договор.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	СтрокиКт.ОсновноеСредство   КАК СубконтоКт1,
	|	СтрокиКт.Договор.Контрагент КАК СубконтоКт2,
	|	СтрокиКт.Договор            КАК СубконтоКт3,
	|
	|	Суммы.СуммаБезНДС КАК ВалютнаяСуммаКт, // В валюте документа.
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	Суммы.СуммаБезНДСРегл КАК СуммаВРКт,
	|	""Уменьшение чистой стоимости инвестиции в аренду на величину платежа"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами КАК СтрокиДт
	|		ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|		И СтрокиДт.СуммаРегл <> 0
	|		И СтрокиДт.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияУслугПоАренде)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИнвестицииВАренду КАК СтрокиКт
	|		ПО СтрокиКт.Регистратор = ДокументыКОтражению.Ссылка
	|		И СтрокиДт.ИдентификаторФинЗаписи = СтрокиКт.ИдентификаторФинЗаписи
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|		ПО Суммы.Регистратор = СтрокиКт.Регистратор
	|		И Суммы.ИдентификаторСтроки = СтрокиКт.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстРеализацияУслугПоАрендеНУ()
	
	Возврат "
	|ВЫБРАТЬ //// Реализация услуг по НУ (Дт <62.1, 76> :: Кт <90.1, 91.1>) НУ
	|	
	|	СтрокиКт.Регистратор КАК Ссылка,
	|	СтрокиКт.Период      КАК Период,
	|	СтрокиКт.Организация КАК Организация,
	|	СтрокиКт.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ////////////////////////////////////////////////////////////////////////
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|
	|	СтрокиДт.ОбъектРасчетов.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	Суммы.Валюта КАК ВалютаДт,
	|
	|	СтрокиДт.ОбъектРасчетов.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.ОбъектРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	СтрокиДт.ОбъектРасчетов.Контрагент КАК СубконтоДт1,
	|	СтрокиДт.ОбъектРасчетов.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Суммы.СуммаБезНДСРегл КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Суммы.СуммаБезНДСРегл КАК СуммаВРДт,
	|	
	|	// Кт ////////////////////////////////////////////////////////////////////////
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	СтрокиДоходов.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|	
	|	Суммы.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	
	|	СтрокиДоходов.СтатьяДоходов    КАК СубконтоКт1,
	|	СтрокиДоходов.АналитикаДоходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО                   КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Суммы.СуммаБезНДСРегл КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Суммы.СуммаБезНДСРегл КАК СуммаВРКт,
	|
	|	""Реализация услуг по НУ"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияУслугПрочихАктивов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|	И СтрокиДт.СуммаРегл <> 0
	|	И СтрокиДт.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияУслугПоАренде)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИнвестицииВАренду КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = ДокументыКОтражению.Ссылка
	|	И СтрокиДт.ИдентификаторФинЗаписи = СтрокиКт.ИдентификаторФинЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Доходы КАК СтрокиДоходов
	|	ПО СтрокиДоходов.Ссылка = ДокументыКОтражению.Ссылка
	|	И СтрокиДоходов.ИдентификаторСтроки = СтрокиКт.ИдентификаторСтроки
	|	И СтрокиДоходов.АрендныйКомпонентДоговора
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО Суммы.Регистратор = СтрокиКт.Регистратор
	|	И Суммы.ИдентификаторСтроки = СтрокиКт.ИдентификаторСтроки
	|	И Суммы.СуммаБезНДСРегл <> 0
	|";
	
КонецФункции

Функция ТекстНачислениеНДСПоАренде()
	Возврат "
	|ВЫБРАТЬ //// Начислен НДС по аренде (Дт <62.01> :: Кт <68.2>)
	|
	|	СтрокиКт.Регистратор КАК Ссылка,
	|	СтрокиКт.Период      КАК Период,
	|	СтрокиКт.Организация КАК Организация,
	|	СтрокиКт.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|
	|	Суммы.СуммаНДСРегл КАК Сумма,
	|	Суммы.СуммаНДСУпр  КАК СуммаУУ,
	|
	|	// Дт ////////////////////////////////////////////////////////////////////////
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|
	|	СтрокиДт.ОбъектРасчетов.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	Суммы.Валюта КАК ВалютаДт,
	|
	|	СтрокиДт.ОбъектРасчетов.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.ОбъектРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	СтрокиДт.ОбъектРасчетов.Контрагент КАК СубконтоДт1,
	|	СтрокиДт.ОбъектРасчетов.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Суммы.СуммаНДС КАК ВалютнаяСуммаДт, // В валюте документа.
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС) КАК СчетКт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДС по аренде"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|	И СтрокиДт.СуммаРегл <> 0
	|	И СтрокиДт.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияУслугПоАренде)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИнвестицииВАренду КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = ДокументыКОтражению.Ссылка
	|	И СтрокиДт.ИдентификаторФинЗаписи = СтрокиКт.ИдентификаторФинЗаписи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО Суммы.Регистратор = ДокументыКОтражению.Ссылка
	|	И Суммы.ИдентификаторСтроки = СтрокиКт.ИдентификаторСтроки
	|	И Суммы.СуммаНДСРегл <> 0
	|";
	
КонецФункции
#КонецОбласти

Процедура ЗаполнитьПоДокументуПодготовкаКПередачеОС(Объект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ДанныеЗаполнения", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияШтуки", Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("796", Ложь));
	
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Организация КАК Организация,
	|	Операция.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство,
	|	Операция.ПоддержкаОтложенногоПереходаПрав КАК ПоддержкаОтложенногоПереходаПрав,
	|	Операция.СчетВыбытияОС КАК СчетВыбытияОС,
	|	Операция.ПередачаВыполнена КАК ПередачаВыполнена,
	|	Операция.ДатаПередачи КАК ДатаПередачи,
	|	Операция.Партнер КАК Партнер,
	|	Операция.Контрагент КАК Контрагент,
	|	Операция.Валюта КАК Валюта,
	|	Операция.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	Операция.НалогообложениеНДС КАК НалогообложениеНДС,
	|	Операция.Основание КАК Основание,
	|	Операция.ОснованиеДата КАК ОснованиеДата,
	|	Операция.ОснованиеНомер КАК ОснованиеНомер,
	|	Операция.Грузоотправитель КАК Грузоотправитель,
	|	Операция.Грузополучатель КАК Грузополучатель,
	|	Операция.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	Операция.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	Операция.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	Операция.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
	|	Операция.Отпустил КАК Отпустил,
	|	Операция.ОтпустилДолжность КАК ОтпустилДолжность,
	|	Операция.Руководитель КАК Руководитель,
	|	Операция.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	ТабличнаяЧасть.Сумма КАК Цена,
	|	ТабличнаяЧасть.Сумма КАК Сумма,
	|	ТабличнаяЧасть.СтавкаНДС КАК СтавкаНДС,
	|	ТабличнаяЧасть.СуммаНДС КАК СуммаНДС,
	|	ТабличнаяЧасть.СуммаСНДС КАК СуммаСНДС
	|ПОМЕСТИТЬ втДанныеОснования
	|ИЗ
	|	Документ.ПодготовкаКПередачеОС КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеОС.ОС КАК ТабличнаяЧасть
	|		ПО Операция.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &ДанныеЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаБУ,
	|	ХозрасчетныйОстатки.СуммаНУОстаток КАК СуммаНУ,
	|	ХозрасчетныйОстатки.СуммаПРОстаток КАК СуммаПР,
	|	ХозрасчетныйОстатки.СуммаВРОстаток КАК СуммаВР
	|ПОМЕСТИТЬ втХозрасчетныйОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Дата,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.СчетВыбытияОС
	|				ИЗ
	|					втДанныеОснования КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Подразделение, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.Подразделение,
	|					Т.ОсновноеСредство
	|				ИЗ
	|					втДанныеОснования КАК Т
	|				ГДЕ
	|					Т.ПоддержкаОтложенногоПереходаПрав)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеАктивыПассивыОстатки.Аналитика КАК ОсновноеСредство,
	|	ПрочиеАктивыПассивыОстатки.СуммаОстаток КАК СуммаУпр
	|ПОМЕСТИТЬ втПрочиеАктивыПассивыОстатки
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы.Остатки(
	|			&Дата,
	|			Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства)
	|				И (Организация, Подразделение, Аналитика) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.Подразделение,
	|						Т.ОсновноеСредство
	|					ИЗ
	|						втДанныеОснования КАК Т
	|					ГДЕ
	|						Т.ПоддержкаОтложенногоПереходаПрав)) КАК ПрочиеАктивыПассивыОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеОснования.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(ПрочиеАктивыПассивыОстатки.СуммаУпр, 0) КАК СуммаУпр,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаБУ, 0) КАК СуммаБУ,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаНУ, 0) КАК СуммаНУ,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаПР, 0) КАК СуммаПР,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаВР, 0) КАК СуммаВР
	|ПОМЕСТИТЬ втДанныеСтоимости
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК ХозрасчетныйОстатки
	|		ПО втДанныеОснования.ОсновноеСредство = ХозрасчетныйОстатки.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПрочиеАктивыПассивыОстатки КАК ПрочиеАктивыПассивыОстатки
	|		ПО втДанныеОснования.ОсновноеСредство = ПрочиеАктивыПассивыОстатки.ОсновноеСредство
	|ГДЕ
	|	втДанныеОснования.ПоддержкаОтложенногоПереходаПрав
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК РеализацияНаОсновании,
	|	втДанныеОснования.Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту) КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА втДанныеОснования.ПоддержкаОтложенногоПереходаПрав
	|				И втДанныеОснования.ПередачаВыполнена
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
	|		КОГДА втДанныеОснования.ПоддержкаОтложенногоПереходаПрав
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.ВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
	|	КОНЕЦ КАК Статус,
	|	ВЫБОР
	|		КОГДА втДанныеОснования.ПоддержкаОтложенногоПереходаПрав
	|				И втДанныеОснования.ПередачаВыполнена
	|			ТОГДА втДанныеОснования.ДатаПередачи
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаПереходаПраваСобственности,
	|	втДанныеОснования.Организация КАК Организация,
	|	втДанныеОснования.Подразделение КАК Подразделение,
	|	втДанныеОснования.Партнер КАК Партнер,
	|	втДанныеОснования.Контрагент КАК Контрагент,
	|	втДанныеОснования.Валюта КАК Валюта,
	|	втДанныеОснования.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	втДанныеОснования.НалогообложениеНДС КАК НалогообложениеНДС,
	|	втДанныеОснования.Основание КАК Основание,
	|	втДанныеОснования.ОснованиеДата КАК ОснованиеДата,
	|	втДанныеОснования.ОснованиеНомер КАК ОснованиеНомер,
	|	втДанныеОснования.Грузоотправитель КАК Грузоотправитель,
	|	втДанныеОснования.Грузополучатель КАК Грузополучатель,
	|	втДанныеОснования.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	втДанныеОснования.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	втДанныеОснования.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	втДанныеОснования.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
	|	втДанныеОснования.Отпустил КАК Отпустил,
	|	втДанныеОснования.ОтпустилДолжность КАК ОтпустилДолжность,
	|	втДанныеОснования.Руководитель КАК Руководитель,
	|	втДанныеОснования.ГлавныйБухгалтер КАК ГлавныйБухгалтер
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(втДанныеОснования.ОсновноеСредство) КАК Содержание,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РеализацияОС) КАК СтатьяДоходов,
	|	втДанныеОснования.ОсновноеСредство КАК АналитикаДоходов,
	|	&ЕдиницаИзмеренияШтуки КАК ЕдиницаИзмерения,
	|	1 КАК Количество,
	|	втДанныеОснования.Сумма КАК Цена,
	|	втДанныеОснования.Сумма КАК Сумма,
	|	втДанныеОснования.СтавкаНДС КАК СтавкаНДС,
	|	втДанныеОснования.СуммаНДС КАК СуммаНДС,
	|	втДанныеОснования.СуммаСНДС КАК СуммаСНДС
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства) КАК СтатьяАктивовПассивов,
	|	втДанныеОснования.ОсновноеСредство КАК АналитикаАктивовПассивов,
	|	втДанныеОснования.СчетВыбытияОС КАК СчетУчета,
	|	втДанныеОснования.ОсновноеСредство КАК Субконто1,
	|	втДанныеСтоимости.СуммаУпр КАК Сумма,
	|	втДанныеСтоимости.СуммаБУ КАК СуммаРегл,
	|	втДанныеСтоимости.СуммаПР КАК ПостояннаяРазница,
	|	втДанныеСтоимости.СуммаВР КАК ВременнаяРазница
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДанныеСтоимости КАК втДанныеСтоимости
	|		ПО втДанныеОснования.ОсновноеСредство = втДанныеСтоимости.ОсновноеСредство
	|ГДЕ
	|	втДанныеОснования.ПоддержкаОтложенногоПереходаПрав
	|	И НЕ(втДанныеСтоимости.СуммаУпр = 0
	|				И втДанныеСтоимости.СуммаБУ = 0
	|				И втДанныеСтоимости.СуммаПР = 0
	|				И втДанныеСтоимости.СуммаВР = 0)";
	
	#КонецОбласти
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Выборка = Пакет[Пакет.Количество()-3].Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Объект, Выборка);
	КонецЕсли;
	
	Объект.Доходы.Загрузить(Пакет[Пакет.Количество()-2].Выгрузить());
	Объект.Расходы.Загрузить(Пакет[Пакет.Количество()-1].Выгрузить());
	
КонецПроцедуры

Процедура ЗаполнитьПоДокументуПодготовкаКПередачеНМА(Объект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ДанныеЗаполнения", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияШтуки", Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("796", Ложь));
	
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Организация КАК Организация,
	|	Операция.Подразделение КАК Подразделение,
	|	Операция.НематериальныйАктив КАК НематериальныйАктив,
	|	Операция.ПоддержкаОтложенногоПереходаПрав КАК ПоддержкаОтложенногоПереходаПрав,
	|	Операция.Партнер КАК Партнер,
	|	Операция.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ втДанныеОснования
	|ИЗ
	|	Документ.ПодготовкаКПередачеНМА КАК Операция
	|ГДЕ
	|	Операция.Ссылка = &ДанныеЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеОснования.НематериальныйАктив КАК НематериальныйАктив,
	|	ПорядокУчетаНМА.СчетУчета КАК СчетУчета,
	|	ЛОЖЬ КАК ЦелевыеСредства
	|ПОМЕСТИТЬ втПараметры
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|				&Дата,
	|				(Организация, НематериальныйАктив) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.НематериальныйАктив
	|					ИЗ
	|						втДанныеОснования КАК Т)) КАК ПорядокУчетаНМА
	|		ПО втДанныеОснования.НематериальныйАктив = ПорядокУчетаНМА.НематериальныйАктив
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втДанныеОснования.НематериальныйАктив,
	|	ПараметрыЦелевогоФинансированияНМАСрезПоследних.СчетУчета,
	|	ИСТИНА
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(
	|				&Дата,
	|				ПрименениеЦелевогоФинансирования
	|					И НематериальныйАктив В
	|						(ВЫБРАТЬ
	|							Т.НематериальныйАктив
	|						ИЗ
	|							втДанныеОснования КАК Т)) КАК ПараметрыЦелевогоФинансированияНМАСрезПоследних
	|		ПО втДанныеОснования.НематериальныйАктив = ПараметрыЦелевогоФинансированияНМАСрезПоследних.НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК НематериальныйАктив,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаБУ,
	|	ХозрасчетныйОстатки.СуммаНУОстаток КАК СуммаНУ,
	|	ХозрасчетныйОстатки.СуммаПРОстаток КАК СуммаПР,
	|	ХозрасчетныйОстатки.СуммаВРОстаток КАК СуммаВР
	|ПОМЕСТИТЬ втХозрасчетныйОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Дата,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.СчетУчета
	|				ИЗ
	|					втПараметры КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			(Организация, Подразделение, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.Подразделение,
	|					Т.НематериальныйАктив
	|				ИЗ
	|					втДанныеОснования КАК Т
	|				ГДЕ
	|					Т.ПоддержкаОтложенногоПереходаПрав)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеАктивыПассивыОстатки.Аналитика КАК НематериальныйАктив,
	|	ПрочиеАктивыПассивыОстатки.СуммаОстаток КАК СуммаУпр
	|ПОМЕСТИТЬ втПрочиеАктивыПассивыОстатки
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы.Остатки(
	|			&Дата,
	|			Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства)
	|				И (Организация, Подразделение, Аналитика) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.Подразделение,
	|						Т.НематериальныйАктив
	|					ИЗ
	|						втДанныеОснования КАК Т
	|					ГДЕ
	|						Т.ПоддержкаОтложенногоПереходаПрав)) КАК ПрочиеАктивыПассивыОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеОснования.НематериальныйАктив КАК НематериальныйАктив,
	|	ЕСТЬNULL(ПрочиеАктивыПассивыОстатки.СуммаУпр, 0) КАК СуммаУпр,
	|	ЕСТЬNULL(втПараметры.СчетУчета, 0) КАК СчетУчета,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаБУ, 0) КАК СуммаБУ,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаНУ, 0) КАК СуммаНУ,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаПР, 0) КАК СуммаПР,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаВР, 0) КАК СуммаВР
	|ПОМЕСТИТЬ втДанныеСтоимости
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметры КАК втПараметры
	|		ПО втДанныеОснования.НематериальныйАктив = втПараметры.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК ХозрасчетныйОстатки
	|		ПО втДанныеОснования.НематериальныйАктив = ХозрасчетныйОстатки.НематериальныйАктив
	|			И (втПараметры.СчетУчета = ХозрасчетныйОстатки.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПрочиеАктивыПассивыОстатки КАК ПрочиеАктивыПассивыОстатки
	|		ПО втДанныеОснования.НематериальныйАктив = ПрочиеАктивыПассивыОстатки.НематериальныйАктив
	|			И (НЕ втПараметры.ЦелевыеСредства)
	|ГДЕ
	|	втДанныеОснования.ПоддержкаОтложенногоПереходаПрав
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК РеализацияНаОсновании,
	|	втДанныеОснования.Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено) КАК Статус,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПереходаПраваСобственности,
	|	втДанныеОснования.Организация КАК Организация,
	|	втДанныеОснования.Подразделение КАК Подразделение,
	|	втДанныеОснования.Партнер КАК Партнер,
	|	втДанныеОснования.Контрагент КАК Контрагент
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(втДанныеОснования.НематериальныйАктив) КАК Содержание,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) КАК СтатьяДоходов,
	|	втДанныеОснования.НематериальныйАктив КАК АналитикаДоходов,
	|	&ЕдиницаИзмеренияШтуки КАК ЕдиницаИзмерения,
	|	1 КАК Количество
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы) КАК СтатьяАктивовПассивов,
	|	втДанныеОснования.НематериальныйАктив КАК АналитикаАктивовПассивов,
	|	втПараметры.СчетУчета КАК СчетУчета,
	|	втДанныеОснования.НематериальныйАктив КАК Субконто1,
	|	втДанныеСтоимости.СуммаУпр КАК Сумма,
	|	втДанныеСтоимости.СуммаБУ КАК СуммаРегл,
	|	втДанныеСтоимости.СуммаПР КАК ПостояннаяРазница,
	|	втДанныеСтоимости.СуммаВР КАК ВременнаяРазница
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметры КАК втПараметры
	|		ПО втДанныеОснования.НематериальныйАктив = втПараметры.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДанныеСтоимости КАК втДанныеСтоимости
	|		ПО втДанныеОснования.НематериальныйАктив = втДанныеСтоимости.НематериальныйАктив
	|			И (втПараметры.СчетУчета = втДанныеСтоимости.СчетУчета)
	|ГДЕ
	|	втДанныеОснования.ПоддержкаОтложенногоПереходаПрав
	|	И НЕ(втДанныеСтоимости.СуммаУпр = 0
	|				И втДанныеСтоимости.СуммаБУ = 0
	|				И втДанныеСтоимости.СуммаПР = 0
	|				И втДанныеСтоимости.СуммаВР = 0)";
	
	#КонецОбласти
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Выборка = Пакет[Пакет.Количество()-3].Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Объект, Выборка);
	КонецЕсли;
	Объект.Доходы.Загрузить(Пакет[Пакет.Количество()-2].Выгрузить());
	Объект.Расходы.Загрузить(Пакет[Пакет.Количество()-1].Выгрузить());
	
КонецПроцедуры

// Заполняет признак восстановления амортизационной премии и сумму для основных средств,
// которые реализованы ранее чем по истечении пяти лет с момента введения его в эксплуатацию лицу.
//
// Параметры:
//  Объект	 - ДокументОбъект.РеализацияУслугПрочихАктивов - Документ реализации.
//  КоллекцияСтрок	 - ДанныеФормыКоллекция, Массив	 - Строки, в которых нужно заполнить восстановление амортизационной премии.
//
Процедура ЗаполнитьВосстановлениеАмортизационнойПремииВОбъекте(Объект, КоллекцияСтрок) Экспорт

	Если НЕ Объект.РеализацияВзаимозависимомуЛицу Тогда
		Возврат;
	КонецЕсли;
	
	СписокОС = Новый Массив;
	Для каждого ДанныеСтроки Из КоллекцияСтрок Цикл
		
		Если ТипЗнч(ДанныеСтроки.ВнеоборотныйАктив) <> Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеСтроки.ВосстановитьАмортизационнуюПремию = Ложь;
		ДанныеСтроки.СуммаАмортизационнойПремии = 0;
		
		СписокОС.Добавить(ДанныеСтроки.ВнеоборотныйАктив);
		
	КонецЦикла; 
	
	Если СписокОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ СписокОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|		&КонецПериода, 
	|		ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|			И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	РАЗНОСТЬДАТ(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ, &КонецПериода, МЕСЯЦ) < 60
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ВложенныйЗапрос.СуммаАмортизационнойПремии) КАК СуммаАмортизационнойПремии
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтоимостьОСОбороты.ОсновноеСредство КАК ОсновноеСредство,
	|		СтоимостьОСОбороты.АмортизационнаяПремияПриход КАК СуммаАмортизационнойПремии
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС.Обороты(
	|				&НачалоПериода,
	|				&КонецПериодаГраница,
	|				,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК СтоимостьОСОбороты
	|	ГДЕ
	|		СтоимостьОСОбороты.АмортизационнаяПремияПриход <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОбороты.Субконто1,
	|		ХозрасчетныйОбороты.СуммаНУОборотКт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоПериода,
	|				&ДатаНачалаУчетаГраница,
	|				Период,
	|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|				Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС),
	|				,
	|				) КАК ХозрасчетныйОбороты
	|	ГДЕ
	|		&ИспользоватьВнеоборотныеАктивы2_2) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ОсновноеСредство";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("НачалоПериода", Дата(2006, 1, 1));
	Запрос.УстановитьПараметр("КонецПериода", ?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(Новый МоментВремени(Объект.Дата, Объект.Ссылка), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ИспользоватьВнеоборотныеАктивы2_2", Константы.ИспользоватьВнеоборотныеАктивы2_2.Получить());
	Запрос.УстановитьПараметр("ДатаНачалаУчетаГраница", Новый Граница(ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4(), ВидГраницы.Исключая));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		СтруктураПоиска = Новый Структура("ВнеоборотныйАктив", Выборка.ОсновноеСредство);
		СписокСтрок = Объект.Расходы.НайтиСтроки(СтруктураПоиска);
		СписокСтрок[0].ВосстановитьАмортизационнуюПремию = Истина;
		СписокСтрок[0].СуммаАмортизационнойПремии = Выборка.СуммаАмортизационнойПремии;
		
	КонецЦикла;

	Для каждого ДанныеСтроки Из КоллекцияСтрок Цикл
		
		Если ТипЗнч(ДанныеСтроки.ВнеоборотныйАктив) <> Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ДанныеСтроки.ВосстановитьАмортизационнуюПремию Тогда
			ДанныеСтроки.СтатьяДоходов = Неопределено;
			ДанныеСтроки.АналитикаДоходов = Неопределено;
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

// Устанавливает признак "Реализация взаимозависимому лицу".
//
// Параметры:
//  Объект	 - ДокументОбъект.РеализацияУслугПрочихАктивов - Документ реализации.
//
Процедура ЗаполнитьПризнакРеализацииВзаимозависимомуЛицуВОбъекте(Объект)

	Если НЕ ЗначениеЗаполнено(Объект.Организация) 
		ИЛИ НЕ ЗначениеЗаполнено(Объект.Контрагент)
		ИЛИ НЕ ПолучитьФункциональнуюОпцию("ИспользоватьУведомленияОКонтролируемыхСделках") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	1
	|ИЗ
	|	РегистрСведений.ВзаимозависимыеЛица.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И Контрагент = &Контрагент) КАК ВзаимозависимыеЛицаСрезПоследних
	|ГДЕ
	|	ВзаимозависимыеЛицаСрезПоследних.ТипВзаимозависимости В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыВзаимозависимости.ВзаимозависимыПоКодексу),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыВзаимозависимости.СамостоятельноеПризнаниеВзаимозависимости),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыВзаимозависимости.ВзаимозависимостьПоРешениюСуда))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("Дата", ?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса()));
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Объект.РеализацияВзаимозависимомуЛицу = НЕ Результат.Пустой();

КонецПроцедуры

//-- НЕ УТ

//-- Локализация

#КонецОбласти

#КонецОбласти
