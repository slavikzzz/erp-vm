
#Область ПрограммныйИнтерфейс

#Область ПроверкаРНПТВДокументах

// Запускает фоновое задание проверки РНПТ.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма документа.
//
Процедура ЗапуститьПроверкуРНПТВДокументе(Форма) Экспорт
	
	// При создании нового документа и документа без прослеживаемых товаров не запускаем проверку.
	Если Форма.РеквизитыПроверкиРНПТ.ЭтоНовыйДокумент Тогда
		// Обход особенности платформы, когда затирается редактируемое значение
		// в текущем элементе при изменении формы.
		Если НЕ ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент() Тогда
			Если ТипЗнч(Форма.ТекущийЭлемент) = Тип("ПолеФормы") И Форма.ТекущийЭлемент.Вид = ВидПоляФормы.ПолеВвода 
				И Форма.ТекущийЭлемент.ОбновлениеТекстаРедактирования <> ОбновлениеТекстаРедактирования.ПриИзмененииЗначения Тогда
				Форма.ТекущийЭлемент.ОбновлениеТекстаРедактирования = ОбновлениеТекстаРедактирования.ПриИзмененииЗначения;
			КонецЕсли;
		КонецЕсли;
		Форма.РеквизитыПроверкиРНПТ.ЭтоНовыйДокумент = Ложь;
		Возврат;
	КонецЕсли;
	
	Если Форма.РеквизитыПроверкиРНПТ.ЭтоОткрытиеСуществующегоДокумента 
		И НЕ Форма.РеквизитыПроверкиРНПТ.ЕстьПрослеживаемыеТовары Тогда
		Форма.РеквизитыПроверкиРНПТ.ЭтоОткрытиеСуществующегоДокумента = Ложь;
		Возврат;
	КонецЕсли;
	
	Форма.ПроверитьРНПТФоновоеЗадание();
	
	Если Форма.РеквизитыПроверкиРНПТ.ИнициализацияВыполненаПолностью 
		И Форма.РеквизитыПроверкиРНПТ.ЕстьПрослеживаемыеТовары Тогда
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ОбработатьРезультатПроверкиРНПТ", ИнтервалОбработкиРезультата(), Истина);
	КонецЕсли;
	
КонецПроцедуры

// Проверяет результат выполнения проверки РНПТ и вызывает прорисовку результата на форме в случае если проверка завершена.
//
// Парамеры:
//  Форма - ФормаКлиентскогоПриложения - форма документа.
//
Процедура ОбработатьРезультатПроверкиРНПТВДокументе(Форма) Экспорт
	
	Если Форма.РеквизитыПроверкиРНПТ.ИнициализацияВыполненаПолностью Тогда
		Если ПроверкаРНПТВызовСервера.ПроверкаРНПТЗавершилась(Форма.РеквизитыПроверкиРНПТ) Тогда
			Если НЕ Форма.РеквизитыПроверкиРНПТ.ОтложитьПрорисовкуРезультатаПроверкиРНПТ Тогда
				Форма.ОтобразитьРезультатПроверкиРНПТ();
				Если (Не ЗначениеЗаполнено(Форма.РеквизитыПроверкиРНПТ.СостояниеПроверкиРНПТВДокументе)
					ИЛИ Форма.РеквизитыПроверкиРНПТ.СостояниеПроверкиРНПТВДокументе = ПредопределенноеЗначение("Перечисление.СтатусыПроверкиРНПТ.Выполняется"))
					И НЕ Форма.РеквизитыПроверкиРНПТ.ОшибкаДоступаКСерверу Тогда
					Форма.ПодключитьОбработчикОжидания("Подключаемый_ЗапуститьПроверкуРНПТВДокументе", ИнтервалПолученияРезультата(), Истина);
				КонецЕсли;
			КонецЕсли;
		Иначе
			Форма.ПодключитьОбработчикОжидания("Подключаемый_ОбработатьРезультатПроверкиРНПТ", ИнтервалОбработкиРезультата(), Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Вызывает процедуру сохранения результатов проверки РНПТ документа в регистр.
//
// Парамеры:
//  Форма - ФормаКлиентскогоПриложения - форма документа.
//
Процедура СохранитьРезультатПроверкиРНПТПослеЗаписиДокумента(Форма) Экспорт
	
	Если Форма.РеквизитыПроверкиРНПТ.ИнициализацияВыполненаПолностью
		И Форма.РеквизитыПроверкиРНПТ.ПроверкаИспользуется Тогда
		Форма.СохранитьРезультатПроверкиРНПТПослеЗаписиДокумента();
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает признак того, что прорисовку документа в части проверки РНПТ нужно отложить, 
// что позволяет избежать ошибки сброса редактируемого значения при выводе результатов проверки.
//
// Парамеры:
//  Форма - ФормаКлиентскогоПриложения - форма документа.
//
Процедура ПриНачалеРедактированияТабличнойЧасти(Форма) Экспорт
	
	Если Форма.РеквизитыПроверкиРНПТ.ПроверкаИспользуется Тогда
		
		Форма.РеквизитыПроверкиРНПТ.ОтложитьПрорисовкуРезультатаПроверкиРНПТ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

// Вызывает обработку результата проверки РНПТ при изменении табличной части документа.
//
// Парамеры:
//  Форма - ФормаКлиентскогоПриложения - форма документа.
//
Процедура ПриОкончанииРедактированияТабличнойЧасти(Форма) Экспорт
	
	Если Форма.РеквизитыПроверкиРНПТ.ПроверкаИспользуется Тогда
		Форма.РеквизитыПроверкиРНПТ.ОтложитьПрорисовкуРезультатаПроверкиРНПТ = Ложь;
		Если Форма.РеквизитыПроверкиРНПТ.ЕстьПрослеживаемыеТовары Тогда
			ОбработатьРезультатПроверкиРНПТВДокументе(Форма);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Запускает отложено проверку РНПТ при открытии формы.
//
// Парамеры:
//  Форма - ФормаКлиентскогоПриложения - форма документа.
//
Процедура ПриОткрытииДокумент(Форма) Экспорт
	
	Если Форма.РеквизитыПроверкиРНПТ.ПроверкаИспользуется Тогда
		Форма.ПодключитьОбработчикОжидания(
			"Подключаемый_ЗапуститьПроверкуРНПТВДокументе",
			ИнтервалПолученияРезультата(),
			Истина);
	КонецЕсли;
	
КонецПроцедуры

// Запускает фоновое задание по поиску документов с ошибками для формы списка.
//
// Парамеры:
//  Форма - ФормаКлиентскогоПриложения - форма списка документов.
//
Процедура ЗапуститьПоискДокументовСОшибкамиРНПТ(Форма) Экспорт
	
	Форма.ПроверитьДокументыВСпискеФоновоеЗадание();
	
	Если Форма.РеквизитыПроверкиРНПТ.ИнициализацияВыполненаПолностью Тогда
		Форма.ПодключитьОбработчикОжидания(
			"Подключаемый_ОбработатьРезультатПолученияДокументовСОшибками",
			ИнтервалОбработкиРезультата(),
			Истина);
	КонецЕсли;
	
КонецПроцедуры

// В случае успешного завершения получения документов с ошибками запускает вывод информации об ошибках на форму.
//
// Парамеры:
//  Форма - ФормаКлиентскогоПриложения - форма списка документов.
//
Процедура ОбработатьРезультатПолученияДокументовСОшибками(Форма) Экспорт
	
	Если Форма.РеквизитыПроверкиРНПТ.ИнициализацияВыполненаПолностью Тогда
		
		Если ПроверкаРНПТВызовСервера.ПроверкаРНПТЗавершилась(Форма.РеквизитыПроверкиРНПТ) Тогда
			Форма.ОтобразитьРезультатПолученияДокументовСОшибками();
		Иначе
			Форма.ПодключитьОбработчикОжидания(
				"Подключаемый_ОбработатьРезультатПолученияДокументовСОшибками", ИнтервалОбработкиРезультата(), Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// При открытии формы списка документов запускает поиск документов с ошибками.
//
// Парамеры:
//  Форма - ФормаКлиентскогоПриложения - форма списка документов.
//
Процедура ПриОткрытииСписокДокументов(Форма) Экспорт
	
	Форма.ПодключитьОбработчикОжидания(
		"Подключаемый_ЗапуститьПоискДокументовСОшибкамиРНПТ", ИнтервалПолученияРезультата(), Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаРНПТВПодборе

// Запускает проверку РНПТ в форме при открытии.
//
// Парамеры:
//  Форма - ФормаКлиентскогоПриложения - форма подбора РНПТ.
//
Процедура ПриОткрытииПодбораРНПТ(Форма) Экспорт
	
	Если Форма.РеквизитыПроверкиРНПТ.ПроверкаИспользуется Тогда
		Форма.ПодключитьОбработчикОжидания(
			"Подключаемый_ЗапуститьПроверкуРНПТВПодборе", ИнтервалПолученияРезультата(), Истина);
	КонецЕсли;
	
КонецПроцедуры

// Обрабатывает результат проверки РНПТ в форме.
//
// Парамеры:
//  Форма - ФормаКлиентскогоПриложения - форма подбора РНПТ.
//  Обработано - Булево - признак того, что была обработка результата.
//
Процедура ОбработатьРезультатПроверкиРНПТВФормеПодбора(Форма, Обработано = Ложь) Экспорт

	Если Форма.РеквизитыПроверкиРНПТ.ИнициализацияВыполненаПолностью Тогда
			
			Если ПроверкаРНПТВызовСервера.ПроверкаРНПТЗавершилась(Форма.РеквизитыПроверкиРНПТ) Тогда
				Если НЕ Форма.РеквизитыПроверкиРНПТ.ОтложитьПрорисовкуРезультатаПроверкиРНПТ Тогда
					Обработано = Истина;
					Форма.ОтобразитьРезультатПроверкиРНПТ();
					Если Форма.Подбор.НайтиСтроки(Новый Структура("СостояниепроверкиРНПТ", 2)).Количество() > 0 
						И НЕ Форма.РеквизитыПроверкиРНПТ.ОшибкаДоступаКСерверу Тогда
						Форма.ПодключитьОбработчикОжидания(
							"Подключаемый_ЗапуститьПроверкуРНПТВПодборе", ИнтервалПолученияРезультата(), Истина);
					КонецЕсли;
				КонецЕсли;
			Иначе
				Форма.ПодключитьОбработчикОжидания(
					"Подключаемый_ОбработатьРезультатПроверкиРНПТ", ИнтервалОбработкиРезультата(), Истина);
			КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

// Запускает фоновое задание проверки РНПТ в форме.
//
// Парамеры:
//  Форма - ФормаКлиентскогоПриложения - форма подбора РНПТ.
//
Процедура ЗапуститьПроверкуРНПТВФормеПодбора(Форма) Экспорт
	
	Если Не Форма.РеквизитыПроверкиРНПТ.ПроверкаИспользуется Тогда
		Возврат;
	КонецЕсли;
	
	Форма.ПроверитьРНПТФоновоеЗадание();
	
	Если Форма.РеквизитыПроверкиРНПТ.ИнициализацияВыполненаПолностью Тогда
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ОбработатьРезультатПроверкиРНПТ", ИнтервалОбработкиРезультата(), Истина);
	КонецЕсли;
	
КонецПроцедуры

// Вызывает обработку результата проверки РНПТ при изменении табличной части формы подбора РНПТ.
//
// Парамеры:
//  Форма - ФормаКлиентскогоПриложения - форма подбора РНПТ.
//
Процедура ПриОкончанииРедактированияТабличнойЧастиПодбора(Форма) Экспорт
	
	Если Форма.РеквизитыПроверкиРНПТ.ПроверкаИспользуется Тогда
		Форма.РеквизитыПроверкиРНПТ.ОтложитьПрорисовкуРезультатаПроверкиРНПТ = Ложь;
		ОбработатьРезультатПроверкиРНПТВФормеПодбора(Форма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИнтервалОбработкиРезультата()
	
	Возврат 1;
	
КонецФункции

Функция ИнтервалПолученияРезультата()
	
	Возврат 2;
	
КонецФункции

#КонецОбласти







