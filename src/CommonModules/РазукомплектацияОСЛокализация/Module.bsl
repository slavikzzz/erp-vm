////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Разукомплектация ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	МеханизмыДокумента.Добавить("ИмущественныеНалоги");
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	МеханизмыДокумента.Добавить("ПрослеживаемостьИмпортныхТоваров");
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.РазукомплектацияОС - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.РазукомплектацияОС - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
		
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.РазукомплектацияОС - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.РазукомплектацияОС - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.РазукомплектацияОС - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация

	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазукомплектацияОСПолная Тогда
		
		Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
			Объект.ДополнительныеСвойства.Вставить("КонтролироватьСписаниеВНоль", Ложь);
		Иначе
			Объект.ДополнительныеСвойства.Вставить("КонтролироватьСписаниеВНоль", Истина);
		КонецЕсли;
		
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.РазукомплектацияОС - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	//++ Локализация
	
	Если Не Отказ И ПроведениеДокументов.СвойстваДокумента(Объект).РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ЗаполнитьРеквизитыОСПриПроведении(Объект, Отказ);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.РазукомплектацияОС - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.РазукомплектацияОС - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	//++ Локализация
	
	Команда = Документы.ПараметрыНачисленияЗемельногоНалога.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если Команда <> Неопределено Тогда
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(Команда, "ОтражатьВРеглУчете", Истина);
	КонецЕсли;
	
	Команда = Документы.СнятиеСРегистрацииЗемельныхУчастков.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если Команда <> Неопределено Тогда
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(Команда, "ОтражатьВРеглУчете", Истина);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команды печати.
// 
// Параметры:
// 	КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//++ Локализация
	
	// ОС-4 (Акт о списании ОС)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОС4";
	КомандаПечати.Идентификатор = "ОС4_Разукомплектация";
	КомандаПечати.Представление = НСтр("ru = 'ОС-4 (Акт о списании ОС)';
										|en = 'FA-4 (FA retirement certificate)'");
	КомандаПечати.ФункциональныеОпции = "ИспользоватьРеглУчет";
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ОтражатьВРеглУчете", Истина);
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.РазукомплектацияОСПолная);
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыОС4(МассивОбъектов) Экспорт
	
	//++ Локализация
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	1 КАК НомерСтроки,
	|	ДанныеДокумента.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втОбъектыДокументов
	|ИЗ
	|	Документ.РазукомплектацияОС КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивОбъектов)
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазукомплектацияОСПолная)
	|	И ДанныеДокумента.ОтражатьВРеглУчете
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация,
	|	Дата";
	
	Запрос.Выполнить();
	
	ВнеоборотныеАктивыЛокализация.ПолучитьСведенияОбОсновныхСредствахВДокументах(Запрос.МенеджерВременныхТаблиц, МассивОбъектов);
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.СобытиеОС КАК Состояние,
	|	"""" КАК ПричинаСписания,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.КодПоОКПО КАК КодОКПО,
	|	ДанныеДокумента.Подразделение КАК ПодразделениеОрганизации,
	|	ДанныеДокумента.МоментВремени КАК МоментВремени,
	|	втОбъектыДокументов.НомерСтроки КАК НомерСтроки,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОС,
	|	ОбъектыЭксплуатации.ЗаводскойНомер КАК ЗаводскойНомер,
	|	ВЫБОР
	|		КОГДА втСведенияОбъектовДокументов.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ТранспортныеСредства)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Автотранспорт,
	|	ОбъектыЭксплуатации.ДатаВыпуска КАК ГодВыпуска,
	|	ВЫБОР
	|		КОГДА ОбъектыЭксплуатации.НаименованиеПолное = """"
	|			ТОГДА ОбъектыЭксплуатации.Наименование
	|		ИНАЧЕ ОбъектыЭксплуатации.НаименованиеПолное
	|	КОНЕЦ КАК НаимОС,
	|	втСведенияОбъектовДокументов.ДатаПринятияКУчету КАК ДатаПринятияКУчету,
	|	втСведенияОбъектовДокументов.ДокументВводаВЭксплуатацию КАК ДокументВводаВЭксплуатацию,
	|	втСведенияОбъектовДокументов.ГруппаОС КАК ГруппаОС,
	|	втСведенияОбъектовДокументов.АмортизационнаяГруппа.Порядок КАК АмортизационнаяГруппа,
	|	втСведенияОбъектовДокументов.ПервоначальнаяСтоимостьБУ КАК НачСтоимость,
	|	втСведенияОбъектовДокументов.ИнвентарныйНомер КАК ИнвНомер,
	|	втСведенияОбъектовДокументов.ПорядокУчетаБУ КАК ПорядокПогашенияСтоимости,
	|	втСведенияОбъектовДокументов.Местонахождение КАК Подразделение,
	|	втСведенияОбъектовДокументов.МОЛ КАК МОЛ,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.СтоимостьРасход, 0) КАК Стоимость,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.АмортизацияРасход, 0) КАК НачАмортизация,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.СведенияАктуальны, ЛОЖЬ) КАК СведенияАктуальны,
	|	ОбъектыЭксплуатации.ДрагоценныеМатериалы.(
	|		ДрагоценныйМатериал КАК ДМНаименование,
	|		Количество КАК ДММасса,
	|		ЕдиницаИзмерения КАК ДМЕдиницаИзмерения
	|	) КАК ДрагоценныеМатериалы,
	|	ЛОЖЬ КАК ЧастичнаяЛиквидация
	|ИЗ
	|	Документ.РазукомплектацияОС КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыДокументов КАК втОбъектыДокументов
	|		ПО (втОбъектыДокументов.Ссылка = ДанныеДокумента.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСведенияОбъектовДокументов КАК втСведенияОбъектовДокументов
	|		ПО (втОбъектыДокументов.Ссылка = втСведенияОбъектовДокументов.Ссылка)
	|			И (втОбъектыДокументов.ОсновноеСредство = втСведенияОбъектовДокументов.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ПО (втОбъектыДокументов.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	МИНИМУМ(СведенияАктуальны),
	|	МИНИМУМ(ЧастичнаяЛиквидация)
	|ПО
	|	Ссылка";
	
	Результат = Запрос.Выполнить();
	
	Возврат Новый Структура(
		"ПоДокументам, ПоПрочимОприходованиям",
		Результат,
		Неопределено);
		
	//-- Локализация
	
КонецФункции

#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	#Область ВыделениеСтоимости
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение стоимости ОС (Дт СчетУчетаСтоимости :: Кт СчетУчетаСтоимости)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Арендатор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.ОсновноеСредство КАК СубконтоКт1,
	|	Строки.Арендатор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	Строки.СтоимостьПР КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|	""Выделение стоимости ОС"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК Операция
	|		ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И (Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ВыделениеСтоимостиЦФ_Дт_СчетУчетаСтоимости_ЦФ__Кт_СчетУчетаСтоимости_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение стоимости ОС (Дт СчетУчетаСтоимости_ЦФ :: Кт СчетУчетаСтоимости_ЦФ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|
	|	""Выделение стоимости ОС"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК Операция
	|		ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И (Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)
	|";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыделениеАмортизации_Дт_СчетУчетаАмортизации__Кт_СчетУчетаАмортизации
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение амортизации ОС (Дт СчетУчетаАмортизации :: Кт СчетУчетаАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияРегл 
	|	КОНЕЦ КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаДт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияНУ 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияПР 
	|	КОНЕЦ КАК СуммаПРДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияВР 
	|	КОНЕЦ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияНУ 
	|	КОНЕЦ КАК СуммаНУКт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияПР 
	|	КОНЕЦ КАК СуммаПРКт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияВР 
	|	КОНЕЦ КАК СуммаВРКт,
	|
	|	""Выделение амортизации ОС"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК Операция
	|		ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (Строки.Амортизация <> 0
	|		ИЛИ НЕ Строки.НачислятьИзнос 
	|			И (Строки.АмортизацияРегл <> 0
	|				ИЛИ Строки.АмортизацияНУ <> 0
	|				ИЛИ Строки.АмортизацияПР <> 0
	|				ИЛИ Строки.АмортизацияВР <> 0))
	|";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыделениеАмортизацииЦФ_Дт_СчетУчетаАмортизации_ЦФ__Кт_СчетУчетаАмортизации_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение амортизации ОС (Дт СчетУчетаАмортизации_ЦФ :: Кт СчетУчетаАмортизации_ЦФ) за счет целевого финансирования
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|
	|	""Выделение амортизации ОС"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК Операция
	|		ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)
	|";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ВыделениеИзносаИсходящиеДвижения // Дт  :: Кт 010
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение амортизации ОС исходящие проводки (Дт  :: Кт 010)
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл + Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Выделение накопленного износа ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.НачислятьИзнос
	|	И (Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыделениеИзносаВходящиеДвижения // Дт 010 :: Кт
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение амортизации ОС исходящие проводки (Дт 010 :: Кт)
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл + Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Перемещение накопленного износа ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Строки.НачислятьИзнос
	|	И (Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыделениеРезерваДооценки // (Дт 83.01 :: Кт 83.01)
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение резерва дооценки (Дт 83.01 :: Кт 83.01)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР 
	|		КОГДА Строки.РезервПереоценкиСтоимостиРегл > 0
	|			ТОГДА Строки.РезервПереоценкиСтоимостиРегл - ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизацииРегл, 0)
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР 
	|		КОГДА Строки.РезервПереоценкиСтоимости > 0
	|			ТОГДА Строки.РезервПереоценкиСтоимости - ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизации, 0)
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервДоОценкиВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервДоОценкиВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Выделение резерва дооценки"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК Операция
	|	ПО ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО ДокументыКОтражению.Ссылка = Строки.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК АмортизацияОС
	|	ПО АмортизацияОС.Регистратор = Строки.Регистратор
	|		И АмортизацияОС.ОсновноеСредство = Строки.ОсновноеСредство
	|		И (АмортизацияОС.РезервПереоценкиАмортизацииРегл > 0
	|			ИЛИ АмортизацияОС.РезервПереоценкиАмортизации > 0)
	|ГДЕ
	|	Строки.РезервПереоценкиСтоимостиРегл > 0
	|		ИЛИ Строки.РезервПереоценкиСтоимости > 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыделениеДоходыОтЦелевогоФинансирования // Дт 98 :: Кт 98
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение доходов от целевого финансирования (Дт 98 :: Кт 98)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ - ЕСТЬNULL(СтрокиАмортизация.АмортизацияЦФ, 0) КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетДт,
	|	Операция.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ + Строки.СтоимостьПРЦФ + Строки.СтоимостьВРЦФ - ЕСТЬNULL(СтрокиАмортизация.АмортизацияЦФ, 0) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ + Строки.СтоимостьПРЦФ + Строки.СтоимостьВРЦФ - ЕСТЬNULL(СтрокиАмортизация.АмортизацияЦФ, 0) КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Выделение доходов от целевого финансирования"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК Операция
	|	ПО ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО ДокументыКОтражению.Ссылка = Строки.Регистратор
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК СтрокиАмортизация
	|	ПО СтрокиАмортизация.Регистратор = Строки.Регистратор
	|		И СтрокиАмортизация.ОсновноеСредство = Строки.ОсновноеСредство
	|		И СтрокиАмортизация.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|ГДЕ
	|	(Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область Проведение

Процедура ТаблицыОтложенногоФормированияДвижений(Запрос, ТекстыЗапроса) Экспорт

	//++ Локализация
	
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Неопределено);
	
	//-- Локализация
	
КонецПроцедуры
 
// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	
	ТекстЗапросаТаблицаСобытияОСОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСпособыОтраженияРасходовПоИмущественнымНалогам(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияОС(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(Запрос, ТекстыЗапроса, Регистры);
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПолучитьДанныеДокумента(СписокЗапросов) Экспорт
	
	//++ Локализация
	
	#Область ДанныеДокументаТаблицаПрослеживаемыеТовары
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
	|	ТаблицаДокумента.НомерГТД.ТипНомераГТД КАК ТипНомераГТД,
	|	ТаблицаДокумента.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаДокумента.КоличествоПоРНПТ КАК КоличествоПоРНПТ
	|
	|ПОМЕСТИТЬ ДанныеДокументаТаблицаПрослеживаемыеТовары
	|
	|ИЗ
	|	Документ.РазукомплектацияОС.ПрослеживаемыеТовары КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (
	|		ВЫБРАТЬ
	|			ВтСписокДокументов.Ссылка
	|		ИЗ
	|			ВтСписокДокументов КАК ВтСписокДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Функция ШаблонСообщенияПроверкиОС(РезультатПроверки) Экспорт

	ШаблонСообщения = Неопределено;
	
	//++ Локализация
	
	Если РезультатПроверки.ОтличаетсяГруппаОС Тогда
		ШаблонСообщения = НСтр("ru = 'У принимаемого к учету основного средства ""%1"" должна быть аналогичная группа ОС';
								|en = 'The fixed asset ""%1"" being recognized must have a similar asset group'");
	КонецЕсли;
	
	//-- Локализация
	
	Возврат ШаблонСообщения;
	
КонецФункции

Процедура ПроверитьСтрокуТЧ(ДанныеСтроки, Объект, ВспомогательныеРеквизиты, Отказ) Экспорт

	//++ Локализация
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса, "втСписокВсехОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка             КАК Регистратор,
	|	ДанныеДокумента.Период             КАК Период,
	|	ДанныеДокумента.Организация        КАК Организация,
	|	ТаблицаОС.ОсновноеСредство         КАК ОсновноеСредство,
	|	ТаблицаРегистра.СпособПоступления  КАК СпособПоступления,
	|	ТаблицаРегистра.Контрагент         КАК Контрагент,
	
	// ПорядокУчетаБУ
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаРегистра.ПорядокУчетаБУ
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.ПорядокУчетаБУ
	|	КОНЕЦ КАК ПорядокУчетаБУ,
	
	// ПорядокУчетаНУ
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка)
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаРегистра.ПорядокУчетаНУ
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.ПорядокУчетаНУ
	|	КОНЕЦ КАК ПорядокУчетаНУ,
	
	// ПорядокУчетаУУ
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаРегистра.ПорядокУчетаУУ
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.ПорядокУчетаУУ
	|	КОНЕЦ КАК ПорядокУчетаУУ,
	
	// МетодНачисленияАмортизацииБУ
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаРегистра.МетодНачисленияАмортизацииБУ
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.МетодНачисленияАмортизацииБУ
	|	КОНЕЦ КАК МетодНачисленияАмортизацииБУ,
	
	// МетодНачисленияАмортизацииНУ
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.ПустаяСсылка)
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаРегистра.МетодНачисленияАмортизацииНУ
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.МетодНачисленияАмортизацииНУ
	|	КОНЕЦ КАК МетодНачисленияАмортизацииНУ,
	
	// СтоимостьДо2002
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|			ТОГДА 0
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаРегистра.СтоимостьДо2002
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.СтоимостьДо2002
	|	КОНЕЦ КАК СтоимостьДо2002,
	
	// АмортизацияДо2002
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|			ТОГДА 0
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаРегистра.АмортизацияДо2002
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.АмортизацияДо2002
	|	КОНЕЦ КАК АмортизацияДо2002,
	
	// АмортизацияДо2009
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|			ТОГДА 0
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаРегистра.АмортизацияДо2009
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.АмортизацияДо2009
	|	КОНЕЦ КАК АмортизацияДо2009,
	
	// ФактическийСрокИспользованияДо2009
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|			ТОГДА 0
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаРегистра.ФактическийСрокИспользованияДо2009
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.ФактическийСрокИспользованияДо2009
	|	КОНЕЦ КАК ФактическийСрокИспользованияДо2009,
	
	// ПервоначальнаяСтоимостьБУ
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.СтоимостьБУ
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.ПервоначальнаяСтоимостьБУ
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьБУ,
	
	// ПервоначальнаяСтоимостьНУ
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|			ТОГДА 0
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.СтоимостьНУ
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.ПервоначальнаяСтоимостьНУ
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьНУ,
	
	// ПервоначальнаяСтоимостьУУ
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.СтоимостьУУ
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.ПервоначальнаяСтоимостьУУ
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьУУ,
	
	// ДатаВводаВЭксплуатациюБУ
	|	ВЫБОР 
	|		КОГДА ТаблицаРегистра.ДатаВводаВЭксплуатациюБУ = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА ДАТАВРЕМЯ(1,1,1)
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаРегистра.ДатаВводаВЭксплуатациюБУ
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.ДатаВводаВЭксплуатациюБУ
	|	КОНЕЦ КАК ДатаВводаВЭксплуатациюБУ,
	
	// ДатаВводаВЭксплуатациюНУ
	|	ВЫБОР 
	|		КОГДА ТаблицаРегистра.ДатаВводаВЭксплуатациюНУ = ДАТАВРЕМЯ(1,1,1)
	|				ИЛИ ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|			ТОГДА ДАТАВРЕМЯ(1,1,1)
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаРегистра.ДатаВводаВЭксплуатациюНУ
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.ДатаВводаВЭксплуатациюНУ
	|	КОНЕЦ КАК ДатаВводаВЭксплуатациюНУ,
	
	// ДатаВводаВЭксплуатациюУУ
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаРегистра.ДатаВводаВЭксплуатациюУУ
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.ДатаВводаВЭксплуатациюУУ
	|	КОНЕЦ КАК ДатаВводаВЭксплуатациюУУ,
	
	// ДокументВводаВЭксплуатациюБУ
	|	ВЫБОР 
	|		КОГДА ТаблицаРегистра.ДатаВводаВЭксплуатациюБУ = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ДанныеДокумента.Ссылка
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.ДокументВводаВЭксплуатациюБУ
	|	КОНЕЦ КАК ДокументВводаВЭксплуатациюБУ,
	
	// ДокументВводаВЭксплуатациюНУ
	|	ВЫБОР 
	|		КОГДА ТаблицаРегистра.ДатаВводаВЭксплуатациюНУ = ДАТАВРЕМЯ(1,1,1)
	|				ИЛИ ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|			ТОГДА ДанныеДокумента.Ссылка
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.ДокументВводаВЭксплуатациюНУ
	|	КОНЕЦ КАК ДокументВводаВЭксплуатациюНУ,
	
	// ДокументВводаВЭксплуатациюУУ
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУпрУчете 
	|			ТОГДА ДанныеДокумента.Ссылка
	|		ИНАЧЕ ТаблицаРегистраНовыхОС.ДокументВводаВЭксплуатациюУУ
	|	КОНЕЦ КАК ДокументВводаВЭксплуатациюУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ДокументСнятияСУчетаБУ,
	|	НЕОПРЕДЕЛЕНО КАК ДокументСнятияСУчетаНУ,
	|	НЕОПРЕДЕЛЕНО КАК ДокументСнятияСУчетаУУ
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПервоначальныеСведенияОС КАК ТаблицаРегистра
	|		ПО ТаблицаРегистра.Ссылка = ДанныеДокумента.Ссылка
	|			И ТаблицаРегистра.ОсновноеСредство = ДанныеДокумента.ОсновноеСредство
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПервоначальныеСведенияОС КАК ТаблицаРегистраНовыхОС
	|		ПО ТаблицаРегистраНовыхОС.Ссылка = ТаблицаОС.Ссылка
	|			И ТаблицаРегистраНовыхОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                 КАК Регистратор,
	|	ДанныеДокумента.Период                                 КАК Период,
	|	ДанныеДокумента.Организация                            КАК Организация,
	|	ДанныеДокумента.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ТаблицаРегистра.СпособПоступления                      КАК СпособПоступления,
	|	ТаблицаРегистра.Контрагент                             КАК Контрагент,
	|
	|	ТаблицаРегистра.ПорядокУчетаБУ                         КАК ПорядокУчетаБУ,
	|	ТаблицаРегистра.ПорядокУчетаНУ                         КАК ПорядокУчетаНУ,
	|	ТаблицаРегистра.ПорядокУчетаУУ                         КАК ПорядокУчетаУУ,
	|	ТаблицаРегистра.МетодНачисленияАмортизацииБУ           КАК МетодНачисленияАмортизацииБУ,
	|	ТаблицаРегистра.МетодНачисленияАмортизацииНУ           КАК МетодНачисленияАмортизацииНУ,
	|	ТаблицаРегистра.СтоимостьДо2002                        КАК СтоимостьДо2002,
	|	ТаблицаРегистра.АмортизацияДо2002                      КАК АмортизацияДо2002,
	|	ТаблицаРегистра.АмортизацияДо2009                      КАК АмортизацияДо2009,
	|	ТаблицаРегистра.ФактическийСрокИспользованияДо2009     КАК ФактическийСрокИспользованияДо2009,
	|	ТаблицаРегистра.ПервоначальнаяСтоимостьБУ              КАК ПервоначальнаяСтоимостьБУ,
	|	ТаблицаРегистра.ПервоначальнаяСтоимостьНУ              КАК ПервоначальнаяСтоимостьНУ,
	|	ТаблицаРегистра.ПервоначальнаяСтоимостьУУ              КАК ПервоначальнаяСтоимостьУУ,
	|	ТаблицаРегистра.ДатаВводаВЭксплуатациюБУ               КАК ДатаВводаВЭксплуатациюБУ,
	|	ТаблицаРегистра.ДатаВводаВЭксплуатациюНУ               КАК ДатаВводаВЭксплуатациюНУ,
	|	ТаблицаРегистра.ДатаВводаВЭксплуатациюУУ               КАК ДатаВводаВЭксплуатациюУУ,
	|	ТаблицаРегистра.ДокументВводаВЭксплуатациюБУ           КАК ДокументВводаВЭксплуатациюБУ,
	|	ТаблицаРегистра.ДокументВводаВЭксплуатациюНУ           КАК ДокументВводаВЭксплуатациюНУ,
	|	ТаблицаРегистра.ДокументВводаВЭксплуатациюУУ           КАК ДокументВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ТаблицаРегистра.ДатаВводаВЭксплуатациюБУ <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА ДанныеДокумента.Ссылка 
	|		ИНАЧЕ ТаблицаРегистра.ДокументСнятияСУчетаБУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаБУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ТаблицаРегистра.ДатаВводаВЭксплуатациюНУ <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА ДанныеДокумента.Ссылка 
	|		ИНАЧЕ ТаблицаРегистра.ДокументСнятияСУчетаНУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаНУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ОтражатьВУпрУчете 
	|				И ТаблицаРегистра.ДатаВводаВЭксплуатациюУУ <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА ДанныеДокумента.Ссылка 
	|		ИНАЧЕ ТаблицаРегистра.ДокументСнятияСУчетаУУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаУУ
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтПервоначальныеСведенияОС КАК ТаблицаРегистра
	|		ПО ТаблицаРегистра.Ссылка = ДанныеДокумента.Ссылка
	|			И ТаблицаРегистра.ОсновноеСредство = ДанныеДокумента.ОсновноеСредство
	|
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазукомплектацияОСПолная)
	|";

	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции 

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПорядокУчетаОСБУ() Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                 КАК Регистратор,
	|	ДанныеДокумента.Период                                 КАК Период,
	|	ДанныеДокумента.Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                             КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.СостояниеБУ                           КАК СостояниеБУ,
	|	ПорядокУчетаОСБУ.СостояниеНУ                           КАК СостояниеНУ,
	|	ПорядокУчетаОСБУ.НачислятьАмортизациюБУ                КАК НачислятьАмортизациюБУ,
	|	ПорядокУчетаОСБУ.НачислятьАмортизациюНУ                КАК НачислятьАмортизациюНУ,
	|	ПорядокУчетаОСБУ.СтатьяРасходовБУ                      КАК СтатьяРасходовБУ,
	|	ПорядокУчетаОСБУ.АналитикаРасходовБУ                   КАК АналитикаРасходовБУ,
	|	ПорядокУчетаОСБУ.СтатьяРасходовНУ                      КАК СтатьяРасходовНУ,
	|	ПорядокУчетаОСБУ.АналитикаРасходовНУ                   КАК АналитикаРасходовНУ,
	|	ПорядокУчетаОСБУ.ПередаватьРасходыВДругуюОрганизацию   КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов         КАК ОрганизацияПолучательРасходов,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ             КАК СпособОтраженияРасходовБУ,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовНУ             КАК СпособОтраженияРасходовНУ,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа                 КАК АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество                   КАК НедвижимоеИмущество,
	|	ПорядокУчетаОСБУ.НалогообложениеНДС                    КАК НалогообложениеНДС
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ПорядокУчетаОСБУ.Ссылка = ДанныеДокумента.Ссылка
	|			И ПорядокУчетаОСБУ.ОсновноеСредство = ДанныеДокумента.ОсновноеСредство
	|
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВРеглУчете
	|	И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                 КАК Регистратор,
	|	ДанныеДокумента.Период                                 КАК Период,
	|	ДанныеДокумента.Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                             КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)       КАК СостояниеБУ,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)     КАК СостояниеНУ,
	|	ПорядокУчетаОСБУ.НачислятьАмортизациюБУ                КАК НачислятьАмортизациюБУ,
	|	ЛОЖЬ                                                   КАК НачислятьАмортизациюНУ,
	|	ПорядокУчетаОСБУ.СтатьяРасходовБУ                      КАК СтатьяРасходовБУ,
	|	ПорядокУчетаОСБУ.АналитикаРасходовБУ                   КАК АналитикаРасходовБУ,
	|	ПорядокУчетаОСБУ.СтатьяРасходовНУ                      КАК СтатьяРасходовНУ,
	|	ПорядокУчетаОСБУ.АналитикаРасходовНУ                   КАК АналитикаРасходовНУ,
	|	ПорядокУчетаОСБУ.ПередаватьРасходыВДругуюОрганизацию   КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов         КАК ОрганизацияПолучательРасходов,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ             КАК СпособОтраженияРасходовБУ,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовНУ             КАК СпособОтраженияРасходовНУ,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа                 КАК АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество                   КАК НедвижимоеИмущество,
	|	ПорядокУчетаОСБУ.НалогообложениеНДС                    КАК НалогообложениеНДС
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ПорядокУчетаОСБУ.Ссылка = ДанныеДокумента.Ссылка
	|			И ПорядокУчетаОСБУ.ОсновноеСредство = ДанныеДокумента.ОсновноеСредство
	|
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВРеглУчете
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                 КАК Регистратор,
	|	ДанныеДокумента.Период                                 КАК Период,
	|	ДанныеДокумента.Организация                            КАК Организация,
	|	ДанныеДокумента.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)         КАК СостояниеБУ,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)         КАК СостояниеНУ,
	|	ЛОЖЬ                                                   КАК НачислятьАмортизациюБУ,
	|	ЛОЖЬ                                                   КАК НачислятьАмортизациюНУ,
	|	НЕОПРЕДЕЛЕНО                                           КАК СтатьяРасходовБУ,
	|	НЕОПРЕДЕЛЕНО                                           КАК АналитикаРасходовБУ,
	|	НЕОПРЕДЕЛЕНО                                           КАК СтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО                                           КАК АналитикаРасходовНУ,
	|	ЛОЖЬ                                                   КАК ПередаватьРасходыВДругуюОрганизацию,
	|	НЕОПРЕДЕЛЕНО                                           КАК ОрганизацияПолучательРасходов,
	|	НЕОПРЕДЕЛЕНО                                           КАК СпособОтраженияРасходовБУ,
	|	НЕОПРЕДЕЛЕНО                                           КАК СпособОтраженияРасходовНУ,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа                 КАК АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество                   КАК НедвижимоеИмущество,
	|	ПорядокУчетаОСБУ.НалогообложениеНДС                    КАК НалогообложениеНДС
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ПорядокУчетаОСБУ.Ссылка = ДанныеДокумента.Ссылка
	|			И ПорядокУчетаОСБУ.ОсновноеСредство = ДанныеДокумента.ОсновноеСредство
	|
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВРеглУчете
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазукомплектацияОСПолная)
	|";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса) Экспорт

	ТекстЗапроса = Неопределено;

	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПараметрыАмортизацииОСБУ(ТекстыЗапроса, "втСписокВсехОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                 КАК Регистратор,
	|	ДанныеДокумента.Период                                 КАК Период,
	|	ДанныеДокумента.Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                             КАК ОсновноеСредство,
	|	ТаблицаРегистра.ДатаПоследнегоИзменения                КАК ДатаПоследнегоИзменения,
	|	ТаблицаРегистра.СрокПолезногоИспользованияБУ           КАК СрокПолезногоИспользованияБУ,
	|	ТаблицаРегистра.СрокПолезногоИспользованияНУ           КАК СрокПолезногоИспользованияНУ,
	|	ТаблицаРегистра.КоэффициентАмортизацииБУ               КАК КоэффициентАмортизацииБУ,
	|	ТаблицаРегистра.КоэффициентУскорения                   КАК КоэффициентУскорения,
	|	ТаблицаРегистра.ГрафикАмортизации                      КАК ГрафикАмортизации,
	|	ТаблицаРегистра.СпециальныйКоэффициент                 КАК СпециальныйКоэффициент,
	|	ТаблицаОС.ЛиквидационнаяСтоимостьРегл                  КАК ЛиквидационнаяСтоимость,
	|
	|	ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации    КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации  КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	// СтоимостьДляВычисленияАмортизации
	|	ВЫБОР 
	|		КОГДА ТаблицаРегистра.СрокПолезногоИспользованияБУ <> ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) = 0
	|						ТОГДА 0
	|					ИНАЧЕ ТаблицаРегистра.СтоимостьДляВычисленияАмортизации 
	|							* ТаблицаОС.СтоимостьБУ / (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0))
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаОС.СтоимостьБУ
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизации,
	|
	// СтоимостьДляВычисленияАмортизацииЦФ
	|	ВЫБОР 
	|		КОГДА ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ = 0
	|			ТОГДА 0
	|		КОГДА ТаблицаРегистра.СрокПолезногоИспользованияБУ <> ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) = 0
	|						ТОГДА 0
	|					ИНАЧЕ ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ 
	|							* ТаблицаОС.СтоимостьБУ / (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0))
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаОС.СтоимостьБУ * ЕСТЬNULL(ВТ_СтоимостьВНА.ДоляЦФБУ, 0)
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|
	|	ТаблицаОС.СтоимостьПР КАК ПРДляВычисленияАмортизации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК ВТ_СтоимостьВНА
	|		ПО ВТ_СтоимостьВНА.Ссылка = ДанныеДокумента.Ссылка
	|			И ВТ_СтоимостьВНА.ОбъектУчета = ДанныеДокумента.ОсновноеСредство
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтПараметрыАмортизацииОСБУ КАК ТаблицаРегистра
	|		ПО ТаблицаРегистра.Ссылка = ДанныеДокумента.Ссылка
	|			И ТаблицаРегистра.ОсновноеСредство = ДанныеДокумента.ОсновноеСредство
	|
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВРеглУчете
	|	И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                 КАК Регистратор,
	|	ДанныеДокумента.Период                                 КАК Период,
	|	ДанныеДокумента.Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                             КАК ОсновноеСредство,
	|	ТаблицаРегистра.ДатаПоследнегоИзменения                КАК ДатаПоследнегоИзменения,
	|	ТаблицаОС.СрокИспользованияБУ                          КАК СрокПолезногоИспользованияБУ,
	|	НЕОПРЕДЕЛЕНО                                           КАК СрокПолезногоИспользованияНУ,
	|	ТаблицаОС.ГодоваяНормаАмортизацииБУ                    КАК КоэффициентАмортизацииБУ,
	|	ТаблицаОС.КоэффициентУскоренияБУ                       КАК КоэффициентУскорения,
	|	ТаблицаОС.ГрафикАмортизации                            КАК ГрафикАмортизации,
	|	1                                                      КАК СпециальныйКоэффициент,
	|	ТаблицаОС.ЛиквидационнаяСтоимостьРегл                  КАК ЛиквидационнаяСтоимость,
	|
	|	ТаблицаОС.СрокИспользованияБУ                          КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаОС.ОбъемНаработки                               КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	|	ТаблицаОС.СтоимостьБУ                                  КАК СтоимостьДляВычисленияАмортизации,
	|	0                                                      КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|
	|	НЕОПРЕДЕЛЕНО                                           КАК ПРДляВычисленияАмортизации
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтПараметрыАмортизацииОСБУ КАК ТаблицаРегистра
	|		ПО ТаблицаРегистра.Ссылка = ДанныеДокумента.Ссылка
	|			И ТаблицаРегистра.ОсновноеСредство = ДанныеДокумента.ОсновноеСредство
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВРеглУчете
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                 КАК Регистратор,
	|	ДанныеДокумента.Период                                 КАК Период,
	|	ДанныеДокумента.Организация                            КАК Организация,
	|	ДанныеДокумента.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ТаблицаРегистра.ДатаПоследнегоИзменения                КАК ДатаПоследнегоИзменения,
	|	ТаблицаРегистра.СрокПолезногоИспользованияБУ           КАК СрокПолезногоИспользованияБУ,
	|	ТаблицаРегистра.СрокПолезногоИспользованияНУ           КАК СрокПолезногоИспользованияНУ,
	|	ТаблицаРегистра.КоэффициентАмортизацииБУ               КАК КоэффициентАмортизацииБУ,
	|	ТаблицаРегистра.КоэффициентУскорения                   КАК КоэффициентУскорения,
	|	ТаблицаРегистра.ГрафикАмортизации                      КАК ГрафикАмортизации,
	|	ТаблицаРегистра.СпециальныйКоэффициент                 КАК СпециальныйКоэффициент,
	|	ТаблицаРегистра.ЛиквидационнаяСтоимость                КАК ЛиквидационнаяСтоимость,
	|
	|	ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации    КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации  КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	// СтоимостьДляВычисленияАмортизации
	|	ТаблицаРегистра.СтоимостьДляВычисленияАмортизации
	|		- СУММА(ВЫБОР 
	|					КОГДА ТаблицаРегистра.СрокПолезногоИспользованияБУ <> ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации
	|						ТОГДА ВЫБОР
	|								КОГДА (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) = 0
	|									ТОГДА 0
	|								ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРегистра.СтоимостьДляВычисленияАмортизации 
	|												* ТаблицаОС.СтоимостьБУ / (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) КАК ЧИСЛО(31, 2))
	|							КОНЕЦ
	|					ИНАЧЕ  
	|						ТаблицаОС.СтоимостьБУ
	|				КОНЕЦ) КАК СтоимостьДляВычисленияАмортизации,
	|
	// СтоимостьДляВычисленияАмортизацииЦФ
	|	ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ
	|		- СУММА(ВЫБОР 
	|					КОГДА ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ = 0
	|						ТОГДА 0
	|					КОГДА ТаблицаРегистра.СрокПолезногоИспользованияБУ <> ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации
	|						ТОГДА ВЫБОР
	|								КОГДА (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) = 0
	|									ТОГДА 0
	|								ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ 
	|												* ТаблицаОС.СтоимостьБУ / (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) КАК ЧИСЛО(31, 2))
	|							КОНЕЦ
	|					ИНАЧЕ  
	|						ТаблицаОС.СтоимостьБУ
	|				КОНЕЦ) КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|
	// ПРДляВычисленияАмортизации
	|	ТаблицаРегистра.ПРДляВычисленияАмортизации 
	|		- СУММА(ТаблицаОС.СтоимостьПР) КАК ПРДляВычисленияАмортизации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК ВТ_СтоимостьВНА
	|		ПО ВТ_СтоимостьВНА.Ссылка = ДанныеДокумента.Ссылка
	|			И ВТ_СтоимостьВНА.ОбъектУчета = ДанныеДокумента.ОсновноеСредство
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтПараметрыАмортизацииОСБУ КАК ТаблицаРегистра
	|		ПО ТаблицаРегистра.Ссылка = ДанныеДокумента.Ссылка
	|			И ТаблицаРегистра.ОсновноеСредство = ДанныеДокумента.ОсновноеСредство
	|
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВРеглУчете
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазукомплектацияОСЧастичная)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.ОсновноеСредство,
	|	ТаблицаРегистра.ДатаПоследнегоИзменения,
	|	ТаблицаРегистра.СрокПолезногоИспользованияБУ,
	|	ТаблицаРегистра.СрокПолезногоИспользованияНУ,
	|	ТаблицаРегистра.КоэффициентАмортизацииБУ,
	|	ТаблицаРегистра.КоэффициентУскорения,
	|	ТаблицаРегистра.ГрафикАмортизации,
	|	ТаблицаРегистра.СпециальныйКоэффициент,
	|	ТаблицаРегистра.ЛиквидационнаяСтоимость,
	|	ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаРегистра.СтоимостьДляВычисленияАмортизации,
	|	ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ,
	|	ТаблицаРегистра.ПРДляВычисленияАмортизации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                 КАК Регистратор,
	|	ДанныеДокумента.Период                                 КАК Период,
	|	ДанныеДокумента.Организация                            КАК Организация,
	|	ДанныеДокумента.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ТаблицаРегистра.ДатаПоследнегоИзменения                КАК ДатаПоследнегоИзменения,
	|	ТаблицаРегистра.СрокПолезногоИспользованияБУ           КАК СрокПолезногоИспользованияБУ,
	|	ТаблицаРегистра.СрокПолезногоИспользованияНУ           КАК СрокПолезногоИспользованияНУ,
	|	ТаблицаРегистра.КоэффициентАмортизацииБУ               КАК КоэффициентАмортизацииБУ,
	|	ТаблицаРегистра.КоэффициентУскорения                   КАК КоэффициентУскорения,
	|	ТаблицаРегистра.ГрафикАмортизации                      КАК ГрафикАмортизации,
	|	ТаблицаРегистра.СпециальныйКоэффициент                 КАК СпециальныйКоэффициент,
	|
	|	ТаблицаРегистра.ЛиквидационнаяСтоимость 
	|		- СУММА(ТаблицаОС.ЛиквидационнаяСтоимостьРегл) КАК ЛиквидационнаяСтоимость,
	|
	|	ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	// СтоимостьДляВычисленияАмортизации
	|	ТаблицаРегистра.СтоимостьДляВычисленияАмортизации
	|		- СУММА(ВЫБОР 
	|					КОГДА ТаблицаРегистра.СрокПолезногоИспользованияБУ <> ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации
	|						ТОГДА ВЫБОР
	|								КОГДА (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) = 0
	|									ТОГДА 0
	|								ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРегистра.СтоимостьДляВычисленияАмортизации 
	|												* ТаблицаОС.СтоимостьБУ / (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) КАК ЧИСЛО(31, 2))
	|							КОНЕЦ
	|					ИНАЧЕ  
	|						ТаблицаОС.СтоимостьБУ
	|				КОНЕЦ) КАК СтоимостьДляВычисленияАмортизации,
	|
	// СтоимостьДляВычисленияАмортизацииЦФ
	|	ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ
	|		- СУММА(ВЫБОР 
	|					КОГДА ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ = 0
	|						ТОГДА 0
	|					КОГДА ТаблицаРегистра.СрокПолезногоИспользованияБУ <> ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации
	|						ТОГДА ВЫБОР
	|								КОГДА (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) = 0
	|									ТОГДА 0
	|								ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ 
	|												* ТаблицаОС.СтоимостьБУ / (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) КАК ЧИСЛО(31, 2))
	|							КОНЕЦ
	|					ИНАЧЕ  
	|						ТаблицаОС.СтоимостьБУ
	|				КОНЕЦ) КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|
	// ПРДляВычисленияАмортизации
	|	ТаблицаРегистра.ПРДляВычисленияАмортизации 
	|		- СУММА(ТаблицаОС.СтоимостьПР) КАК ПРДляВычисленияАмортизации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК ВТ_СтоимостьВНА
	|		ПО ВТ_СтоимостьВНА.Ссылка = ДанныеДокумента.Ссылка
	|			И ВТ_СтоимостьВНА.ОбъектУчета = ДанныеДокумента.ОсновноеСредство
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтПараметрыАмортизацииОСБУ КАК ТаблицаРегистра
	|		ПО ТаблицаРегистра.Ссылка = ДанныеДокумента.Ссылка
	|			И ТаблицаРегистра.ОсновноеСредство = ДанныеДокумента.ОсновноеСредство
	|
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВРеглУчете
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|	И ТаблицаОС.ЛиквидационнаяСтоимостьРегл <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.ОсновноеСредство,
	|	ТаблицаРегистра.ДатаПоследнегоИзменения,
	|	ТаблицаРегистра.СрокПолезногоИспользованияБУ,
	|	ТаблицаРегистра.СрокПолезногоИспользованияНУ,
	|	ТаблицаРегистра.КоэффициентАмортизацииБУ,
	|	ТаблицаРегистра.КоэффициентУскорения,
	|	ТаблицаРегистра.ГрафикАмортизации,
	|	ТаблицаРегистра.СпециальныйКоэффициент,
	|	ТаблицаРегистра.ЛиквидационнаяСтоимость,
	|	ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаРегистра.СтоимостьДляВычисленияАмортизации,
	|	ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ,
	|	ТаблицаРегистра.ПРДляВычисленияАмортизации
	|";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ФормаДокумента
 
Функция ТекстЗапросаДляПроверкиОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.ГруппаОС КАК ГруппаОС
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка = &ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка КАК Ссылка,
	|	ОбъектыЭксплуатации.ГруппаОС <> ИсходныйОС.ГруппаОС
	|		И ОбъектыЭксплуатации.ГруппаОС <> ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка) КАК ОтличаетсяГруппаОС
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ИсходныйОС
	|		ПО (ИсходныйОС.Ссылка = &ОсновноеСредство)
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|	И ОбъектыЭксплуатации.ГруппаОС <> ИсходныйОС.ГруппаОС
	|	И ОбъектыЭксплуатации.ГруппаОС <> ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ДополнитьРезультатПроверкиОС(Выборка, ВыборкаОС, ПараметрыВыбораОсновныхСредств) Экспорт

	//++ Локализация
	
	ОтличаетсяГруппаОС = Ложь;
	
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		ОтличаетсяГруппаОС = ОтличаетсяГруппаОС ИЛИ Выборка.ОтличаетсяГруппаОС;
	КонецЦикла;
	
	ПараметрыВыбораОсновныхСредств.Вставить("ОтличаетсяГруппаОС", ОтличаетсяГруппаОС);
	ПараметрыВыбораОсновныхСредств.ЗначенияПараметров.Вставить("ГруппаОС", ВыборкаОС.ГруппаОС);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСлужебныеПараметрыФормы(СлужебныеПараметры) Экспорт

	//++ Локализация
	
	СлужебныеПараметры.РеквизитыКоторыеДолжныСовпадать = 
		СлужебныеПараметры.РеквизитыКоторыеДолжныСовпадать
		+ ",ГруппаОС,АмортизационнаяГруппа";
		
	СлужебныеПараметры.Вставить("ГруппаОС", Перечисления.ГруппыОС.ПустаяСсылка());
	СлужебныеПараметры.Вставить("АмортизационнаяГруппа", Перечисления.АмортизационныеГруппы.ПустаяСсылка());
		
	СлужебныеПараметры.Вставить("ОтражатьВБУ", Ложь);
	СлужебныеПараметры.Вставить("ОтражатьВНУ", Ложь);
	
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата);
		Форма.ВедетсяУчетПостоянныхИВременныхРазниц =
			УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Объект.Организация, Объект.Дата);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	ДатаУчетнойПолитики = КонецМесяца(Форма.Дата) + 1;
	
	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрОрганизацияФункциональныхОпцийФормы(
		Форма, Форма.Организация, ДатаУчетнойПолитики);
	
	Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Форма.Организация, ДатаУчетнойПолитики);
	Форма.ВедетсяУчетПостоянныхИВременныхРазниц = УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Форма.Организация, ДатаУчетнойПолитики);
	
	Элементы.ДекорацияЗаголовокНУ.Заголовок = СтрШаблон(НСтр("ru = 'НУ (%1):';
															|en = 'TA (%1):'"), Строка(Форма.ВалютаРегл));
	Элементы.ДекорацияЗаголовокПР.Заголовок = СтрШаблон(НСтр("ru = 'ПР (%1):';
															|en = 'PD (%1):'"), Строка(Форма.ВалютаРегл));
	Элементы.ДекорацияЗаголовокВР.Заголовок = СтрШаблон(НСтр("ru = 'ВР (%1):';
															|en = 'TD (%1):'"), Строка(Форма.ВалютаРегл));
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
		
		Элементы.ГруппаАмортизацияБУ.ОтображатьЗаголовок = Форма.ОтражатьВРеглУчете И (Форма.ОтражатьВУпрУчете И Форма.ОтражатьВРеглУчете);
			
		Элементы.ДекорацияЗаголовокНУ.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации;
		
		Элементы.ДекорацияЗаголовокПР.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации 
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц 
			И Форма.ОтражатьВРеглУчете;
		
		Элементы.ДекорацияЗаголовокВР.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации 
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц 
			И Форма.ОтражатьВРеглУчете;
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		Или ОбновитьВсе Тогда
		
		ЗначениеВидно = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.ОсновноеСредство, "ТипОС") <> ПредопределенноеЗначение("Перечисление.ТипыОС.КомпонентАмортизации");
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции"));

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУ")
		Или ОбновитьВсе Тогда
		
		Форма.СрокИспользованияБУРасшифровка = ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(
			Форма.СрокИспользованияБУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		Или СтруктураИзмененныхРеквизитов.Свойство("Организация")
		Или ОбновитьВсе Тогда
			
		ЗначениеВидно = Не Форма.ВспомогательныеРеквизиты.ПрименяетсяФСБУ6;
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"));
			
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ДополнитьВспомогательныеРеквизиты(Объект, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата));
	
	ВспомогательныеРеквизиты.Вставить("ВедетсяУчетПостоянныхИВременныхРазниц",
		УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Объект.Организация, Объект.Дата));
		
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяФСБУ6",
		НастройкиНалоговУчетныхПолитикПовтИсп.ПрименяетсяФСБУ6(Объект.Организация, Объект.Дата));
		
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

//++ Локализация

Процедура ЗаполнитьРеквизитыОСПриПроведении(Объект, Отказ)
	
	Если НЕ ЗначениеЗаполнено(Объект.ОсновноеСредство) Тогда
		Возврат;
	КонецЕсли; 
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ОбъектыЭксплуатации");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "ОсновноеСредство");
	ЭлементБлокировки.ИсточникДанных = Объект.ОС;
	
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ОбъектыЭксплуатации");
	ЭлементБлокировки.УстановитьЗначение("Ссылка", Объект.ОсновноеСредство);
	
	Блокировка.Заблокировать();
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка КАК Ссылка,
	|	ИсходныйОС.ГруппаОС КАК ГруппаОС
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ИсходныйОС
	|		ПО (ИсходныйОС.Ссылка = &ОсновноеСредство)
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка В(&ОбъектыЭксплуатации)
	|	И ОбъектыЭксплуатации.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОбъектыЭксплуатации", Объект.ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.УстановитьПараметр("ОсновноеСредство", Объект.ОсновноеСредство);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ОбъектСправочника = Выборка.Ссылка.ПолучитьОбъект();
		Если Не ЗначениеЗаполнено(ОбъектСправочника.ГруппаОС) Тогда
			ОбъектСправочника.ГруппаОС = Выборка.ГруппаОС;
		КонецЕсли;
		Если ОбъектСправочника.Модифицированность() Тогда
			ОбъектСправочника.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСобытияОСОрганизаций(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка      КАК Регистратор,
	|	ДанныеДокумента.Период      КАК Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.СобытиеОС   КАК Событие,
	|	ТаблицаОС.ОсновноеСредство  КАК ОсновноеСредство,
	|	&НазваниеДокумента          КАК НазваниеДокумента,
	|	ДанныеДокумента.Номер       КАК НомерДокумента,
	|	0                           КАК СуммаЗатратБУ,
	|	0                           КАК СуммаЗатратНУ
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВРеглУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка       КАК Регистратор,
	|	ДанныеДокумента.Период       КАК Период,
	|	ДанныеДокумента.Организация  КАК Организация,
	|	ДанныеДокумента.СобытиеОС    КАК Событие,
	|	ДанныеДокумента.ОсновноеСредство КАК ОсновноеСредство,
	|	&НазваниеДокумента           КАК НазваниеДокумента,
	|	ДанныеДокумента.Номер        КАК НомерДокумента,
	|	СУММА(ТаблицаОС.СтоимостьБУ) КАК СуммаЗатратБУ,
	|	СУММА(ТаблицаОС.СтоимостьНУ) КАК СуммаЗатратНУ
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВРеглУчете
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.СобытиеОС,
	|	ДанныеДокумента.ОсновноеСредство,
	|	ДанныеДокумента.Номер
	|
	|ИМЕЮЩИЕ
	|	НЕ СУММА(ТаблицаОС.СтоимостьБУ) ЕСТЬ NULL
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСпособыОтраженияРасходовПоИмущественнымНалогам(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "СпособыОтраженияРасходовПоИмущественнымНалогам";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаВтСпособыОтраженияРасходовПоИмущественнымНалогам(ТекстыЗапроса, "втСписокВсехОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                   КАК Регистратор,
	|	ДанныеДокумента.Период                   КАК Период,
	|	ДанныеДокумента.Организация              КАК Организация,
	|	ТаблицаОС.ОсновноеСредство               КАК ОсновноеСредство,
	|	ТаблицаРегистра.ВидНалога                КАК ВидНалога,
	|	ТаблицаРегистра.СтатьяРасходов           КАК СтатьяРасходов,
	|	ТаблицаРегистра.СпособОтраженияРасходовЗаданДокументом КАК СпособОтраженияРасходовЗаданДокументом,
	|	ТаблицаРегистра.СпособОтраженияРасходов  КАК СпособОтраженияРасходов,
	|	ТаблицаРегистра.АналитикаРасходов        КАК АналитикаРасходов
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСпособыОтраженияРасходовПоИмущественнымНалогам КАК ТаблицаРегистра
	|		ПО ТаблицаРегистра.Ссылка = ДанныеДокумента.Ссылка
	|			И ТаблицаРегистра.ОсновноеСредство = ДанныеДокумента.ОсновноеСредство
	|
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВРеглУчете
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияОС(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПараметрыЦелевогоФинансированияОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаВтПараметрыЦелевогоФинансированияОС(ТекстыЗапроса, "втСписокВсехОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка             КАК Регистратор,
	|	ДанныеДокумента.Период             КАК Период,
	|	ТаблицаОС.ОсновноеСредство         КАК ОсновноеСредство,
	|	ТаблицаРегистра.ПрименениеЦелевогоФинансирования КАК ПрименениеЦелевогоФинансирования,
	|	ТаблицаРегистра.СтатьяДоходов      КАК СтатьяДоходов,
	|	ТаблицаРегистра.АналитикаДоходов   КАК АналитикаДоходов
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтПараметрыЦелевогоФинансированияОС КАК ТаблицаРегистра
	|		ПО ТаблицаРегистра.Ссылка = ДанныеДокумента.Ссылка
	|			И ТаблицаРегистра.ОсновноеСредство = ДанныеДокумента.ОсновноеСредство
	|
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВРеглУчете
	|	И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрослеживаемыеТоварыВСоставеОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                  КАК Регистратор,
	|	ДанныеДокумента.Период                  КАК Период,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ПрослеживаемыеТовары.НомерГТД           КАК РНПТ,
	|	ПрослеживаемыеТовары.ОсновноеСредство   КАК ОсновноеСредство,
	|	ПрослеживаемыеТовары.КодТНВЭД           КАК КодТНВЭД,
	|	ПрослеживаемыеТовары.КоличествоПоРНПТ   КАК КоличествоПоРНПТ
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|		ПО ПрослеживаемыеТовары.Ссылка = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	ПрослеживаемыеТовары.ТипНомераГТД = ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                  КАК Регистратор,
	|	ДанныеДокумента.Период                  КАК Период,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ПрослеживаемыеТовары.НомерГТД           КАК РНПТ,
	|	ДанныеДокумента.ОсновноеСредство        КАК ОсновноеСредство,
	|	ПрослеживаемыеТовары.КодТНВЭД           КАК КодТНВЭД,
	|	ПрослеживаемыеТовары.КоличествоПоРНПТ   КАК КоличествоПоРНПТ
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|		ПО ПрослеживаемыеТовары.Ссылка = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	ПрослеживаемыеТовары.ТипНомераГТД = ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
Возврат ТекстЗапроса;
	
КонецФункции

//-- Локализация

#КонецОбласти

#КонецОбласти
