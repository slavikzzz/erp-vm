#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбработкаОповещенияРегистрацииВОрганеСтатистики(Форма, ИмяСобытия, Параметр, Источник) Экспорт 

	Объект = Форма.Объект;
	СтруктурнаяЕдиница = Объект.Ссылка;
	
	Если ИмяСобытия = "ОтредактированаИстория" И СтруктурнаяЕдиница = Источник И Параметр.ИмяРегистра = "ИспользованиеРегистрацийВОрганеСтатистики" Тогда
		Если Форма[Параметр.ИмяРегистра + "НаборЗаписейПрочитан"] Тогда
			РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(Форма, СтруктурнаяЕдиница, ИмяСобытия, Параметр, Источник);
			Если Параметр.МассивЗаписей.Количество() = 0 И ИспользуетсяИерархия(Форма) Тогда
				МенеджерЗаписи = РегистрацииВОрганеСтатистикиВызовСервера.ПрочитатьРегистрациюГоловногоПодразделения(Объект.Родитель);
				ЗаполнитьЗначенияСвойств(Форма.ИспользованиеРегистрацийВОрганеСтатистикиГоловного, МенеджерЗаписи);
			КонецЕсли;
			
			УстановитьПредставлениеРегистрацииВОрганеСтатистики(Форма);
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ИзмененаРегистрацияВОрганеСтатистики" Тогда
		УстановитьПредставлениеРегистрацииВОрганеСтатистики(Форма);
	КонецЕсли;
	
КонецПроцедуры

// Открывает форму истории регистрации в органе статистики.
//
// Параметры:
//  Форма               - ФормаКлиентскогоПриложения - Форма, из которой вызвана процедура.
//  ПроверяемыеСвойства - Структура                  - Свойства Объекта записанность которых нужно проверить перед открытием истории.
//                                                     Ключ - имя свойства, значение - текущее значение свойства в форме объекта.
//
Процедура ОткрытьФормуИсторииРегистрацииВОрганеСтатистики(Форма, ПроверяемыеСвойства = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура("Форма, ЗаписатьЭлемент", Форма, Ложь);
	
	Если Не ЗначениеЗаполнено(Форма.Объект.Ссылка) Тогда
		ДополнительныеПараметры.ЗаписатьЭлемент = Истина;
	ИначеЕсли Форма.Модифицированность И ПроверяемыеСвойства <> Неопределено Тогда
		ДополнительныеПараметры.ЗаписатьЭлемент = Не РегистрацииВОрганеСтатистикиВызовСервера.СвойстваОбъектаЗаписаны(Форма.Объект.Ссылка, ПроверяемыеСвойства);
	КонецЕсли;
	
	Если ДополнительныеПараметры.ЗаписатьЭлемент Тогда
		Оповещение = Новый ОписаниеОповещения("ОткрытьФормуИсторииРегистрацииВОрганеСтатистикиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?';
							|en = 'The data has been changed. Do you want to save the changes?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Отмена);
	Иначе 
		ОткрытьФормуИсторииРегистрацииВОрганеСтатистикиЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
	КонецЕсли; 
	
КонецПроцедуры

Процедура УстановитьВидимостьРегистрацииВОрганеСтатистики(Форма, Видимость) Экспорт
	
	Форма.Элементы.ГруппаРегистрацияВОрганеСтатистики.Видимость = Видимость;
	Если Видимость Тогда
		РедактированиеПериодическихСведенийКлиентСервер.ОбновитьНаборЗаписейИстории(Форма, "ИспользованиеРегистрацийВОрганеСтатистики", Форма.Объект.Ссылка);
		УстановитьПредставлениеРегистрацииВОрганеСтатистики(Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаВыбораПоляРегистрацияРеспондента(Форма, Область) Экспорт
	
	Если Область.Защита Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.Имя = "РегистрацияРеспондента" Тогда
		
		Отбор = Новый Структура("Владелец", Форма.СтруктураРеквизитовФормы.Организация);
		Параметры = Новый Структура("Отбор, РежимВыбора, Отображение, ТекущийЭлемент", Отбор, Истина, "Список", Форма.РегистрацияРеспондента);
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбработкаВыбораРегистрацииВОрганеСтатистики", ЭтотОбъект, Новый Структура("Форма", Форма));
		ОткрытьФорму("Справочник.РегистрацииВОрганеСтатистики.ФормаВыбора",
			Параметры, Форма,,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли Область.Имя = "ИсключитьДанныеТОСП" Тогда
		
		Форма.ИсключитьДанныеОбособленныхПодразделений = Не Форма.ИсключитьДанныеОбособленныхПодразделений;
		Область.Значение = Форма.ИсключитьДанныеОбособленныхПодразделений;
		Форма.Модифицированность = Истина;
		Форма.ИсключитьДанныеОбособленныхПодразделенийПриИзменении(Неопределено);
		
	ИначеЕсли Область.Имя = "СоставРегистрации" Тогда
		
		Параметры = Новый Структура("Регистрация, ДатаАктуальности", Форма.РегистрацияРеспондента, Форма.СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		ОткрытьФорму("Справочник.РегистрацииВОрганеСтатистики.Форма.ФормаСостав",
			Параметры, Форма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьВопросОбИзмененииРегистрации(Форма) Экспорт
	
	ДополнительныеПараметры = Новый Структура("Форма", Форма);
	
	Оповещение = Новый ОписаниеОповещения("ВопросОбИзмененииРегистрацииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Регистрация наследуется от вышестоящего подразделения,
		|хотите выбрать другую регистрацию?';
		|en = 'The registration is inherited from a superior business unit.
		|Do you want to select another registration?'"), РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

Процедура ПоказатьРегистрацию(Форма, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Ключ,ТолькоПросмотр", Форма.ИспользованиеРегистрацийВОрганеСтатистики.Регистрация, Форма.ТолькоПросмотр);
	ОткрытьФорму("Справочник.РегистрацииВОрганеСтатистики.ФормаОбъекта", ПараметрыФормы, Форма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВопросОбИзмененииРегистрацииЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуИсторииРегистрацииВОрганеСтатистики(ДополнительныеПараметры.Форма);
	
КонецПроцедуры

Процедура ОткрытьФормуИсторииРегистрацииВОрганеСтатистикиЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.ЗаписатьЭлемент Тогда
		Форма = ДополнительныеПараметры.Форма;
		Оповещение = Новый ОписаниеОповещения("ОткрытьФормуИсторииРегистрацииПродолжение", ЭтотОбъект, ДополнительныеПараметры);
		Форма.ЗаписатьНаКлиенте(Ложь, Оповещение);
	Иначе
		ОткрытьФормуИсторииРегистрацииПродолжение(Ответ, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуИсторииРегистрацииПродолжение(ПараметрыЗаписи, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если ДополнительныеПараметры.ЗаписатьЭлемент И Не Форма.Записать(ПараметрыЗаписи) Тогда
		Возврат;
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиент.ОткрытьИсторию(
		"ИспользованиеРегистрацийВОрганеСтатистики", Форма.Объект.Ссылка, Форма, Форма.ТолькоПросмотр);
	
КонецПроцедуры

Функция ИспользуетсяИерархия(Форма)
	
	Возврат ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ИспользованиеРегистрацийВОрганеСтатистикиГоловного");
	
КонецФункции

Процедура УстановитьПредставлениеРегистрацииВОрганеСтатистики(Форма)
	
	Если ИспользуетсяИерархия(Форма) Тогда
		РегистрацииВОрганеСтатистикиКлиентСервер.НастроитьОтображениеРегистрацииВОрганеСтатистикиСУчетомИерархии(Форма);
	Иначе
		РегистрацииВОрганеСтатистикиКлиентСервер.НастроитьОтображениеРегистрацииВОрганеСтатистики(Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаВыбораРегистрацииВОрганеСтатистики(Ответ, ДопПараметры) Экспорт 
	
	Если Ответ <> Неопределено Тогда
		Форма = ДопПараметры.Форма;
		Форма.Модифицированность = Истина;
		Форма.РегистрацияРеспондента = Ответ;
		
		ИмяТД = "ПолеТабличногоДокументаФормаОтчета";
		Если Форма.Элементы.Найти(ИмяТД) = Неопределено Тогда
			ИмяТД = "ТабличныйДокумент";
			Если Форма.Элементы.Найти(ИмяТД) = Неопределено Тогда
				ИмяТД = "";
			КонецЕсли;
		КонецЕсли;
		
		ТабДокумент = Форма[ИмяТД];
		
		Если ЗначениеЗаполнено(Форма.РегистрацияРеспондента) Тогда
			РегистрацииВОрганеСтатистикиВызовСервера.ОпределитьНаличиеКодаРегистрацииВСправочникеОрганыФСГС(Форма.РегистрацияРеспондента);
			Если ТабДокумент.Области.Найти("ИсключитьДанныеТОСП") <> Неопределено Тогда
				РегистрацииВОрганеСтатистикиКлиентСервер.ОбновитьОбластьИсключитьТОСП(Форма, ИмяТД);
			КонецЕсли;
		КонецЕсли;
		
		Если ТабДокумент.Области.Найти("РегистрацияРеспондента") <> Неопределено Тогда
			ТабДокумент.Области.РегистрацияРеспондента.Значение = Ответ;
		КонецЕсли;
		Форма.ОбособленноеПодразделениеПриИзменении(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти