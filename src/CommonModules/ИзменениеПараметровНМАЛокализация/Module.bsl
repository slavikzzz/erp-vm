////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Изменение параметров НМА".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Добавляет в текст запроса реквизиты шапки документа.
//  Реквизиты добавляются вместо параметра "&ИзменениеПараметровНМА_РеквизитыДокумента".
//
// Параметры:
//  ТекстЗапроса - Строка	 - Исходный текст запроса.
//  ИмяТаблицы	 - Строка	 - Синоним таблицы документа в запросе.
//  	Для получения пустых значений нужно передать "Неопределено".
//
Процедура ДобавитьВТекстЗапросаРеквизитыДокумента(ТекстЗапроса, ИмяТаблицы) Экспорт

	ПоляЛокализации = "NULL";
	
	//++ Локализация
	
	ПоляЛокализации = 
	"	ДанныеДокумента.ОтражатьВНУ КАК ОтражатьВНУ,
	|	ДанныеДокумента.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|	ДанныеДокумента.НачислятьАмортизациюНУФлаг КАК НачислятьАмортизациюНУФлаг,
	|	ДанныеДокумента.СрокИспользованияНУ КАК СрокИспользованияНУ,
	|	ДанныеДокумента.СрокИспользованияНУФлаг КАК СрокИспользованияНУФлаг,
	|	ДанныеДокумента.СпециальныйКоэффициентНУ КАК СпециальныйКоэффициентНУ,
	|	ДанныеДокумента.СпециальныйКоэффициентНУФлаг КАК СпециальныйКоэффициентНУФлаг";
	
	ПоляЛокализации = СтрЗаменить(ПоляЛокализации, "Таблица", ИмяТаблицы);
	
	//-- Локализация

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИзменениеПараметровНМА_РеквизитыДокумента", ПоляЛокализации);
	
КонецПроцедуры
 
#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	МассивНепроверяемыхРеквизитов.Добавить("АмортизационныеРасходы.ОрганизацияПолучательРасходов");
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения - Строка, Неопределено - Текст, используемый для заполнения документа. 
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.ИзменениеПараметровНМА2_4 - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команды печати.
// 
// Параметры:
// 	КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	ВнеоборотныеАктивыЛокализация.ТекстОтраженияВРеглУчетеПеремещенияСтоимостиНМА(СписокЗапросов);
	ВнеоборотныеАктивыЛокализация.ТекстОтраженияВРеглУчетеПеремещенияАмортизацииНМА(СписокЗапросов);
	
	#Область ПеремещениеДоходыОтЦелевогоФинансирования // Дт 98 :: Кт 98
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение доходов от целевого финансирования (Дт 98 :: Кт 98)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияНМА) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ + Строки.СтоимостьПРЦФ + Строки.СтоимостьВРЦФ 
	|		- ЕСТЬNULL(АмортизацияНМА.АмортизацияНУЦФ, 0)
	|		- ЕСТЬNULL(АмортизацияНМА.АмортизацияПРЦФ, 0)
	|		- ЕСТЬNULL(АмортизацияНМА.АмортизацияВРЦФ, 0) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияНМА) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ + Строки.СтоимостьПРЦФ + Строки.СтоимостьВРЦФ 
	|		- ЕСТЬNULL(АмортизацияНМА.АмортизацияНУЦФ, 0)
	|		- ЕСТЬNULL(АмортизацияНМА.АмортизацияПРЦФ, 0)
	|		- ЕСТЬNULL(АмортизацияНМА.АмортизацияВРЦФ, 0) КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Перемещение доходов от целевого финансирования"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|	ПО ДокументыКОтражению.Ссылка = Строки.Регистратор
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА КАК АмортизацияНМА
	|	ПО АмортизацияНМА.Регистратор = Строки.Регистратор
	|		И АмортизацияНМА.НематериальныйАктив = Строки.НематериальныйАктив
	|		И АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|ГДЕ
	|	(Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)
	|	И Строки.НаправлениеДеятельности <> Строки.КорНаправлениеДеятельности";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	
	//-- Локализация
	
КонецПроцедуры

//
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
Процедура ТаблицыОтложенногоФормированияДвижений(ТекстыЗапроса) Экспорт
	
	//++ Локализация
	
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Неопределено);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПроверитьСтрокуАмортизационныеРасходы(Объект, ДанныеСтроки, Отказ) Экспорт

	//++ Локализация
	
	ШаблонПолучатель = НСтр("ru = 'Не заполнено поле ""Организация-получатель расходов"" в строке ""%1"" списка ""Амортизационные расходы"".';
							|en = 'The ""Expense recipient company"" field is left empty in ""%1"" line of the ""Depreciation expenses"" list.'");
	Если ДанныеСтроки.ПередаватьРасходыВДругуюОрганизацию
		И Не ЗначениеЗаполнено(ДанныеСтроки.ОрганизацияПолучательРасходов) Тогда
		Путь = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("АмортизационныеРасходы", ДанныеСтроки.НомерСтроки, "ОрганизацияПолучательРасходов");
		ТекстСообщения = СтрШаблон(ШаблонПолучатель, ДанныеСтроки.НомерСтроки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Функция ПараметрыВыбраны(Объект) Экспорт

	ПараметрыВыбраны = Ложь;
	
	//++ Локализация
	
	ПараметрыВыбраны =
		Объект.НачислятьАмортизациюНУФлаг
		ИЛИ Объект.СрокИспользованияНУФлаг
		ИЛИ Объект.СпециальныйКоэффициентНУФлаг;

	//-- Локализация
	
	Возврат ПараметрыВыбраны;
	
КонецФункции
 
#КонецОбласти

#Область ФормаДокумента

// Устанавливает условное оформление формы.
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма.
Процедура УстановитьУсловноеОформление(Форма) Экспорт

	//++ Локализация
	
	УсловноеОформление = Форма.УсловноеОформление;
	Элементы = Форма.Элементы;
	
	#Область АмортизационныеРасходыОрганизацияПолучательРасходов
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.АмортизационныеРасходыОрганизацияПолучательРасходов.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.АмортизационныеРасходы.ПередаватьРасходыВДругуюОрганизацию");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаДляЗаполненияТекущихЗначенийПараметров() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НематериальныеАктивы.Ссылка КАК НематериальныйАктив,
	|	ЕСТЬNULL(ПорядокУчетаНМА.ГруппаФинансовогоУчета, НЕОПРЕДЕЛЕНО) КАК ГруппаФинансовогоУчета,
	|	ЕСТЬNULL(ПорядокУчетаНМА.НаправлениеДеятельности, НЕОПРЕДЕЛЕНО) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ПорядокУчетаНМА.ОбъемНаработки, НЕОПРЕДЕЛЕНО) КАК ОбъемНаработки,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАУУ.СрокИспользования, 0) КАК СрокИспользованияУУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАУУ.КоэффициентУскорения, 0) КАК КоэффициентУскоренияУУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАУУ.МетодНачисленияАмортизации, НЕОПРЕДЕЛЕНО) КАК МетодНачисленияАмортизацииУУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАУУ.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимость,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАБУ.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимостьРегл,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПорядокУчетаНМАУУ.НачислятьАмортизациюУУ, ЛОЖЬ) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию)
	|	КОНЕЦ КАК ПорядокУчетаУУ,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ, ЛОЖЬ) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию)
	|	КОНЕЦ КАК ПорядокУчетаБУ,
	|	ЕСТЬNULL(ПервоначальныеСведенияНМА.ДокументПринятияКУчетуУУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК ПринятКУчетуУпр,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАБУ.СпециальныйКоэффициент, 0) КАК СпециальныйКоэффициентНУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияБУ, 0) КАК СрокИспользованияБУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияНУ, 0) КАК СрокИспользованияНУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАБУ.КоэффициентБУ, 0) КАК КоэффициентБУ,
	|	ЕСТЬNULL(ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ, 0) КАК НачислятьАмортизациюНУ,
	|	ЕСТЬNULL(ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииБУ, 0) КАК МетодНачисленияАмортизацииБУ,
	|	ЕСТЬNULL(ПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК ПринятКУчетуРегл
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииНМАУУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПараметрыАмортизацииНМАУУ
	|		ПО (ПараметрыАмортизацииНМАУУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМА
	|		ПО (ПорядокУчетаНМА.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАУУ
	|		ПО (ПорядокУчетаНМАУУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПервоначальныеСведенияНМА
	|		ПО (ПервоначальныеСведенияНМА.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАБУ
	|		ПО (ПорядокУчетаНМАБУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииНМАБУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПараметрыАмортизацииНМАБУ
	|		ПО (ПараметрыАмортизацииНМАБУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	 
КонецФункции

Процедура ДополнитьИнформациюВПодвале(Объект, ЗаголовокНадписи) Экспорт

	//++ Локализация
	
	Если ?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса()) < ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4() Тогда
		Если ЗаголовокНадписи.Количество() <> 0 Тогда
			ЗаголовокНадписи.Добавить(Символы.ПС);
		КонецЕсли;
		ЗаголовокНадписи.Добавить(НСтр("ru = 'Документ введен для перехода на учет внеоборотных активов версии 2.4';
										|en = 'Document is entered to migrate to fixed assets accounting 2.4'"));
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт
	
	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.РегламентированномУчете"),
			НСтр("ru = 'Бухгалтерском и налоговом учете';
				|en = 'Accounting and tax accounting'"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.БухгалтерскомУчете"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.НалоговомУчете"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИБухгалтерскомУчете"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ВариантОтраженияВУчете.СписокВыбора,
			Истина,
			ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИНалоговомУчете"));
			
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПервоначальныеСведенияНМА() Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Период КАК Период,
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ДанныеДокумента.Организация КАК Организация,
	|	втПервоначальныеСведенияНМА.СпособПоступления КАК СпособПоступления,
	|	втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ,
	|	втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьПР КАК ПервоначальнаяСтоимостьПР,
	|	втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьВР КАК ПервоначальнаяСтоимостьВР,
	|	втПервоначальныеСведенияНМА.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ДанныеДокумента.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	втПервоначальныеСведенияНМА.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	втПервоначальныеСведенияНМА.ДатаПриобретения КАК ДатаПриобретения,
	|	втПервоначальныеСведенияНМА.ДатаПринятияКУчетуУУ КАК ДатаПринятияКУчетуУУ,
	|	втПервоначальныеСведенияНМА.ДатаПринятияКУчетуБУ КАК ДатаПринятияКУчетуБУ,
	|	втПервоначальныеСведенияНМА.ДатаПринятияКУчетуНУ КАК ДатаПринятияКУчетуНУ,
	|	втПервоначальныеСведенияНМА.ДокументПринятияКУчетуУУ КАК ДокументПринятияКУчетуУУ,
	|	втПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ КАК ДокументПринятияКУчетуБУ,
	|	втПервоначальныеСведенияНМА.ДокументПринятияКУчетуНУ КАК ДокументПринятияКУчетуНУ,
	|	втПервоначальныеСведенияНМА.ДокументСписания КАК ДокументСписания,
	|	втПервоначальныеСведенияНМА.РезервПереоценкиСтоимости КАК РезервПереоценкиСтоимости,
	|	втПервоначальныеСведенияНМА.РезервПереоценкиАмортизации КАК РезервПереоценкиАмортизации,
	|	втПервоначальныеСведенияНМА.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	втПервоначальныеСведенияНМА.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	втПервоначальныеСведенияНМА.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	втПервоначальныеСведенияНМА.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаНМА КАК ТаблицаНМА
	|		ПО ТаблицаНМА.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияНМА КАК втПервоначальныеСведенияНМА
	|		ПО втПервоначальныеСведенияНМА.Ссылка = ТаблицаНМА.Ссылка
	|			И втПервоначальныеСведенияНМА.НематериальныйАктив = ТаблицаНМА.НематериальныйАктив
	|
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВБУ
	|	И ДанныеДокумента.МетодНачисленияАмортизацииБУФлаг
	|";
	
	//-- Локализация

	Возврат ТекстЗапроса;
		
КонецФункции

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПорядокУчетаНМАБУ() Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Период КАК Период,
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ДанныеДокумента.Организация КАК Организация,
	|	
	|	втПорядокУчетаНМАБУ.СостояниеБУ КАК СостояниеБУ,
	|	втПорядокУчетаНМАБУ.СостояниеНУ КАК СостояниеНУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ПорядокУчетаБУФлаг
	|			ТОГДА ДанныеДокумента.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|		ИНАЧЕ втПорядокУчетаНМАБУ.НачислятьАмортизациюБУ
	|	КОНЕЦ КАК НачислятьАмортизациюБУ,
	|
	|	втПорядокУчетаНМАБУ.НалогообложениеНДС КАК НалогообложениеНДС,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.НачислятьАмортизациюНУФлаг
	|			ТОГДА ДанныеДокумента.НачислятьАмортизациюНУ
	|		ИНАЧЕ втПорядокУчетаНМАБУ.НачислятьАмортизациюНУ
	|	КОНЕЦ КАК НачислятьАмортизациюНУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.АмортизационныеРасходыФлаг
	|				И ДанныеДокумента.ОтражатьВБУ
	|			ТОГДА ДанныеДокумента.Ссылка
	|		ИНАЧЕ втПорядокУчетаНМАБУ.СпособОтраженияРасходовБУ
	|	КОНЕЦ КАК СпособОтраженияРасходовБУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.АмортизационныеРасходыФлаг
	|				И ДанныеДокумента.ОтражатьВНУ
	|			ТОГДА ДанныеДокумента.Ссылка
	|		ИНАЧЕ втПорядокУчетаНМАБУ.СпособОтраженияРасходовНУ
	|	КОНЕЦ КАК СпособОтраженияРасходовНУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.АмортизационныеРасходыФлаг
	|				И ДанныеДокумента.ОтражатьВБУ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втПорядокУчетаНМАБУ.СтатьяРасходовБУ
	|	КОНЕЦ КАК СтатьяРасходовБУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.АмортизационныеРасходыФлаг
	|				И ДанныеДокумента.ОтражатьВБУ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втПорядокУчетаНМАБУ.АналитикаРасходовБУ
	|	КОНЕЦ КАК АналитикаРасходовБУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.АмортизационныеРасходыФлаг
	|				И ДанныеДокумента.ОтражатьВНУ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втПорядокУчетаНМАБУ.СтатьяРасходовНУ
	|	КОНЕЦ КАК СтатьяРасходовНУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.АмортизационныеРасходыФлаг
	|				И ДанныеДокумента.ОтражатьВНУ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втПорядокУчетаНМАБУ.АналитикаРасходовНУ
	|	КОНЕЦ КАК АналитикаРасходовНУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.АмортизационныеРасходыФлаг
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ втПорядокУчетаНМАБУ.ПередаватьРасходыВДругуюОрганизацию
	|	КОНЕЦ КАК ПередаватьРасходыВДругуюОрганизацию,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.АмортизационныеРасходыФлаг
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		ИНАЧЕ втПорядокУчетаНМАБУ.ОрганизацияПолучательРасходов
	|	КОНЕЦ КАК ОрганизацияПолучательРасходов
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаНМА КАК ТаблицаНМА
	|		ПО ТаблицаНМА.Ссылка = ДанныеДокумента.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаНМАБУ КАК втПорядокУчетаНМАБУ
	|		ПО втПорядокУчетаНМАБУ.Ссылка = ТаблицаНМА.Ссылка
	|			И втПорядокУчетаНМАБУ.НематериальныйАктив = ТаблицаНМА.НематериальныйАктив
	|
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВРеглУчете
	|	И (ДанныеДокумента.АмортизационныеРасходыФлаг
	|		ИЛИ ДанныеДокумента.НачислятьАмортизациюНУФлаг
	|		ИЛИ ДанныеДокумента.ПорядокУчетаБУФлаг)
	|";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПараметрыАмортизацииНМАБУ() Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Период КАК Период,
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ДанныеДокумента.Организация КАК Организация,
	|
	|	втПараметрыАмортизацииНМАБУ.ДатаПоследнегоИзменения КАК ДатаПоследнегоИзменения,
	|
	// СрокИспользованияДляВычисленияАмортизации 
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СрокИспользованияБУФлаг И втПараметрыАмортизацииНМАБУ.НематериальныйАктив ЕСТЬ NULL
	|			ТОГДА ДанныеДокумента.СрокИспользованияБУ
	|		КОГДА ДанныеДокумента.СрокИспользованияБУФлаг
	|				И втПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияБУ = втПараметрыАмортизацииНМАБУ.СрокИспользованияДляВычисленияАмортизации
	|			ТОГДА ДанныеДокумента.СрокИспользованияБУ
	|		КОГДА ДанныеДокумента.СрокИспользованияБУФлаг
	|			ТОГДА втПараметрыАмортизацииНМАБУ.СрокИспользованияДляВычисленияАмортизации + (ДанныеДокумента.СрокИспользованияБУ - втПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияБУ)
	|		ИНАЧЕ втПараметрыАмортизацииНМАБУ.СрокИспользованияДляВычисленияАмортизации
	|	КОНЕЦ КАК СрокИспользованияДляВычисленияАмортизации,
	|
	// ОбъемПродукцииРаботДляВычисленияАмортизации
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ОбъемНаработкиФлаг И втПараметрыАмортизацииНМАБУ.НематериальныйАктив ЕСТЬ NULL
	|			ТОГДА ДанныеДокумента.ОбъемНаработки
	|		КОГДА ДанныеДокумента.ОбъемНаработкиФлаг
	|				И ПорядокУчетаНМА.ОбъемНаработки = втПараметрыАмортизацииНМАБУ.ОбъемПродукцииРаботДляВычисленияАмортизации
	|			ТОГДА ДанныеДокумента.ОбъемНаработки
	|		КОГДА ДанныеДокумента.ОбъемНаработкиФлаг
	|			ТОГДА втПараметрыАмортизацииНМАБУ.ОбъемПродукцииРаботДляВычисленияАмортизации + (ДанныеДокумента.ОбъемНаработки - ПорядокУчетаНМА.ОбъемНаработки)
	|		ИНАЧЕ втПараметрыАмортизацииНМАБУ.ОбъемПродукцииРаботДляВычисленияАмортизации
	|	КОНЕЦ КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СрокИспользованияБУФлаг
	|			ТОГДА ДанныеДокумента.СрокИспользованияБУ
	|		ИНАЧЕ втПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияБУ
	|	КОНЕЦ КАК СрокПолезногоИспользованияБУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СрокИспользованияНУФлаг
	|			ТОГДА ДанныеДокумента.СрокИспользованияНУ
	|		ИНАЧЕ втПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияНУ
	|	КОНЕЦ КАК СрокПолезногоИспользованияНУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КоэффициентБУФлаг
	|			ТОГДА ДанныеДокумента.КоэффициентБУ
	|		ИНАЧЕ втПараметрыАмортизацииНМАБУ.КоэффициентБУ
	|	КОНЕЦ КАК КоэффициентБУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпециальныйКоэффициентНУФлаг
	|			ТОГДА ДанныеДокумента.СпециальныйКоэффициентНУ
	|		ИНАЧЕ втПараметрыАмортизацииНМАБУ.СпециальныйКоэффициент
	|	КОНЕЦ КАК СпециальныйКоэффициент,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЛиквидационнаяСтоимостьРеглФлаг
	|			ТОГДА ДанныеДокумента.ЛиквидационнаяСтоимостьРегл
	|		ИНАЧЕ втПараметрыАмортизацииНМАБУ.ЛиквидационнаяСтоимость
	|	КОНЕЦ КАК ЛиквидационнаяСтоимость
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаНМА КАК ТаблицаНМА
	|		ПО ТаблицаНМА.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыАмортизацииНМАБУ КАК втПараметрыАмортизацииНМАБУ
	|		ПО втПараметрыАмортизацииНМАБУ.Ссылка = ТаблицаНМА.Ссылка
	|			И втПараметрыАмортизацииНМАБУ.НематериальныйАктив = ТаблицаНМА.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаНМА КАК ПорядокУчетаНМА
	|		ПО ПорядокУчетаНМА.Ссылка = ТаблицаНМА.Ссылка
	|			И ПорядокУчетаНМА.НематериальныйАктив = ТаблицаНМА.НематериальныйАктив
	|
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВРеглУчете
	|	И (ДанныеДокумента.СпециальныйКоэффициентНУФлаг
	|		ИЛИ ДанныеДокумента.КоэффициентБУФлаг
	|		ИЛИ ДанныеДокумента.СрокИспользованияБУФлаг
	|		ИЛИ ДанныеДокумента.СрокИспользованияНУФлаг
	|		ИЛИ ДанныеДокумента.ОбъемНаработкиФлаг
	|		ИЛИ ДанныеДокумента.ЛиквидационнаяСтоимостьРеглФлаг)";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти
