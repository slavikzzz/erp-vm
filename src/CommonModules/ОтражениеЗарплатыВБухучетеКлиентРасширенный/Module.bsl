
#Область СлужебныйПрограммныйИнтерфейс

Процедура ОткрытьФормуИсторииБухучетЗарплатыСотрудников(Сотрудник, ВладелецФормы, ОповещениеОЗакрытии) Экспорт

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТолькоПросмотр", ВладелецФормы.Толькопросмотр);
	ПараметрыФормы.Вставить("Сотрудник", Сотрудник);
	ОткрытьФорму("РегистрСведений.БухучетЗарплатыСотрудников.Форма.ИсторияИзменений",
			ПараметрыФормы,
			ВладелецФормы,,,,
			ОповещениеОЗакрытии,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

Процедура ОткрытьФормуРедактированиеБухучетаНачисления(Форма, ОписаниеТаблицы, ВыбраннаяСтрока, НетТекущегоЗначения = Ложь) Экспорт

	ТаблицаСДанными = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ОписаниеТаблицы.ПутьКДанным);
	ТекущиеДанные = ТаблицаСДанными.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ТолькоПросмотр = Форма.Элементы[ОписаниеТаблицы.ИмяТаблицыБухучетНачислений].ТолькоПросмотр;
	Если ТекущиеДанные.Свойство("Действие") И ТекущиеДанные.Действие = ПредопределенноеЗначение("Перечисление.ДействияСНачислениямиИУдержаниями.Отменить") Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	// Значение указанное для начисления
	БухучетНачисления = ТекущиеДанные.БухучетНачисления;
	// Значение действующее до даты редактирования.
	ТекущееЗначениеБухучетНачисления = ТекущиеДанные.ТекущееЗначениеБухучетНачисления;
	// Начисление, бухучет которого редактируется.
	Начисление = ТекущиеДанные[ОписаниеТаблицы.ИмяРеквизитаВидРасчета];
	
	ДополнительныеПараметры = Новый Структура(
		"Форма, 
		|ВыбраннаяСтрока,
		|ОписаниеТаблицы");
	ДополнительныеПараметры.Форма 			= Форма;
	ДополнительныеПараметры.ВыбраннаяСтрока = ВыбраннаяСтрока;
	ДополнительныеПараметры.ОписаниеТаблицы = ОписаниеТаблицы;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("РедактированиеБухучетаНачисленияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыОткрытия = Новый Структура("ТолькоПросмотр,Начисление,БухучетНачисления,ТекущееЗначениеБухучетНачисления,НетТекущегоЗначения");
	ПараметрыОткрытия.ТолькоПросмотр 					= ТолькоПросмотр;
	ПараметрыОткрытия.Начисление 						= Начисление;
	ПараметрыОткрытия.БухучетНачисления 				= БухучетНачисления;
	ПараметрыОткрытия.ТекущееЗначениеБухучетНачисления 	= ТекущееЗначениеБухучетНачисления;
	ПараметрыОткрытия.НетТекущегоЗначения 				= НетТекущегоЗначения;
	
	ОткрытьФорму("ОбщаяФорма.РедактированиеБухучетаНачисления",
		ПараметрыОткрытия, Форма,,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры
	
Процедура РедактированиеБухучетаНачисленияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьТекущееЗначение = Результат.УстановитьТекущееЗначение;
	НовыйБухучетНачисления = Результат.НовыйБухучетНачисления;
	
	Форма 			= ДополнительныеПараметры.Форма;
	ВыбраннаяСтрока = ДополнительныеПараметры.ВыбраннаяСтрока;
	ОписаниеТаблицы = ДополнительныеПараметры.ОписаниеТаблицы;
	
	ТаблицаФормы = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ОписаниеТаблицы.ПутьКДанным);
	ТекущиеДанные = ТаблицаФормы.НайтиПоИдентификатору(ВыбраннаяСтрока); 
	Если УстановитьТекущееЗначение Тогда
		// Отменяем результат редактирования бухучета, возвращаем значение действующее до даты редактирования.
		Форма.Модифицированность = Истина;
		ТекущиеДанные.БухучетНачисления = ТекущиеДанные.ТекущееЗначениеБухучетНачисления;
		ТекстПредставления = ОтражениеЗарплатыВБухучетеКлиентСерверРасширенный.ПредставлениеБухучетаНачисления(ТекущиеДанные.БухучетНачисления, Форма.ИспользоватьСтатьиФинансирования, Форма.РаботаВБюджетномУчреждении);
		ТекущиеДанные.КомандаРедактированияБухучетаНачисления = ТекстПредставления;
		ТекущиеДанные.КомментарийБухучет = "";
	Иначе
		
		// Устанавливаем модифицированность формы если бухучет изменился, в т.ч. порядок строк.
		Форма.Модифицированность = Форма.Модифицированность Или (БухучетИзменился(ТекущиеДанные.БухучетНачисления, НовыйБухучетНачисления));
		
		ТекущиеДанные.БухучетНачисления = НовыйБухучетНачисления;
		ТекстПредставления = ОтражениеЗарплатыВБухучетеКлиентСерверРасширенный.ПредставлениеБухучетаНачисления(ТекущиеДанные.БухучетНачисления, Форма.ИспользоватьСтатьиФинансирования, Форма.РаботаВБюджетномУчреждении);
		ТекущиеДанные.КомандаРедактированияБухучетаНачисления = ТекстПредставления;
		Если ОтражениеЗарплатыВБухучетеРасширенныйВызовСервера.БухучетНачисленийИзменился(ТекущиеДанные.БухучетНачисления, ТекущиеДанные.ТекущееЗначениеБухучетНачисления) Тогда
			ТекущиеДанные.КомментарийБухучет = НСтр("ru = 'Бухучет изменен';
													|en = 'Accounting is changed'");
		Иначе
			ТекущиеДанные.КомментарийБухучет = "";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события "отменить начисление", устанавливает прежнее значение
// бухучета начисления в строке таблицы.
//
// Параметры:
// 		Форма - УправляемаяФорма
// 		ИмяТаблицы - Строка - имя таблицы формы.
//
Процедура РедактированиеСоставаНачисленийОтменитьНачисление(Форма, ИмяТаблицы) Экспорт
	
	ТекущиеДанные = Форма.Элементы[ИмяТаблицы].ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Действие = ПредопределенноеЗначение("Перечисление.ДействияСНачислениямиИУдержаниями.Отменить") Тогда
		ТекущиеДанные.БухучетНачисления = ТекущиеДанные.ТекущееЗначениеБухучетНачисления;
		ТекстПредставления = ОтражениеЗарплатыВБухучетеКлиентСерверРасширенный.ПредставлениеБухучетаНачисления(ТекущиеДанные.БухучетНачисления, Форма.ИспользоватьСтатьиФинансирования, Форма.РаботаВБюджетномУчреждении);
		ТекущиеДанные.КомандаРедактированияБухучетаНачисления = ТекстПредставления;
		ТекущиеДанные.КомментарийБухучет = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция БухучетИзменился(Коллекция1, Коллекция2)

	Если Не ЗначениеЗаполнено(Коллекция1) И Не ЗначениеЗаполнено(Коллекция2) Тогда
		Возврат Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(Коллекция1) Тогда
		Возврат Истина;
	ИначеЕсли Не ЗначениеЗаполнено(Коллекция2) Тогда
		Возврат Истина;
	ИначеЕсли Коллекция1.Количество() <> Коллекция2.Количество() Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПроверяемыеСвойства = СтрРазделить("СтатьяФинансирования,СтатьяРасходов,СпособОтраженияЗарплатыВБухучете,ДоляРаспределения",",");
	Для Индекс = 0 По Коллекция1.Количество() - 1 Цикл
		ЭлементКоллекции1 = Коллекция1[Индекс];
		ЭлементКоллекции2 = Коллекция2[Индекс];
		Для каждого ИмяСвойства Из ПроверяемыеСвойства Цикл
			Значение1 = Неопределено;
			ЭлементКоллекции1.Свойство(ИмяСвойства, Значение1);
			Значение2 = Неопределено;
			ЭлементКоллекции2.Свойство(ИмяСвойства, Значение2);
			Если Значение1  <> Значение2 Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции

#КонецОбласти

