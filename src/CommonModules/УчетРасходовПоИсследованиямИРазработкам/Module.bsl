
#Область ПрограммныйИнтерфейс

#Область ПризнаниеРасходовПоИсследованиямИРазработкам

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - см. Обработки.ОперацииЗакрытияМесяца.ИнициализироватьТаблицуОписанияЭтапов
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_ПризнаниеРасходовПоИсследованиямИРазработкам(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ПризнаниеРасходовПоИсследованиямИРазработкам);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.РасчетПартийИСебестоимости);
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Рассчитать';
										|en = 'Calculate'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"УчетРасходовПоИсследованиямИРазработкам.Использование_ПризнаниеРасходовПоИсследованиямИРазработкам");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"УчетРасходовПоИсследованиямИРазработкам.Выполнить_ПризнаниеРасходовПоИсследованиямИРазработкам");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
		Метаданные.Документы.ПризнаниеРасходовПоИсследованиямИРазработкам.Формы.РабочееМестоПризнанияРасходовПоИсследованиям.ПолноеИмя());
КонецПроцедуры

// Проверка необходимости использования этапа закрытия месяца.
//
// Параметры:
//  ПараметрыОбработчика - Структура - параметры обработчика события этапа.
Процедура Использование_ПризнаниеРасходовПоИсследованиямИРазработкам(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, 1);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	
	Запрос.Текст = ТекстЗапросаСостояниеПризнанияРасходовПоИсследованиямИРазработкам();
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияЗавершениеЭтапа", Перечисления.ХозяйственныеОперации.ЗавершениеЭтаповИсследованийИРазработок);
	Запрос.УстановитьПараметр("ТипСсылки", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПризнаниеРасходовПоИсследованиямИРазработкам"));
	
	Запрос.Выполнить();
	РазмерыВременныхТаблиц = ЗакрытиеМесяцаСервер.РазмерыВременныхТаблиц(Запрос, ПараметрыОбработчика);
	
	Если РазмерыВременныхТаблиц.вт_ОрганизацииСПризнаниемИсследований = 0 И РазмерыВременныхТаблиц.вт_ОрганизацииСЗавершениемЭтапа = 0 Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru = 'Нет организаций, для которых необходимо выполнять признание расходов по исследованиям и разработкам';
				|en = 'There are no companies that require R&D expense recognition'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	Иначе
		ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика, Истина);
	КонецЕсли;
	
	ВременнаяТаблицаОрганизаций = ПараметрыОбработчика.МенеджерВременныхТаблиц.Таблицы.Найти("вт_ОрганизацииСПризнаниемИсследований"); 
	Если Не ВременнаяТаблицаОрганизаций = Неопределено Тогда
		ОрганизацииСПризнаниемИсследований = ВременнаяТаблицаОрганизаций.ПолучитьДанные().Выгрузить();
		ЗакрытиеМесяцаСервер.УстановитьДополнительноеСвойствоОбработчика(ПараметрыОбработчика, "ОрганизацииСПризнаниемИсследований", ОрганизацииСПризнаниемИсследований);
	КонецЕсли;
	
КонецПроцедуры

// Выполнение этапа закрытия месяца.
//
// Параметры:
//  ПараметрыОбработчика - Структура - параметры обработчика события этапа.
//
Процедура Выполнить_ПризнаниеРасходовПоИсследованиямИРазработкам(ПараметрыОбработчика) Экспорт
		
	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	ДополнительныеСвойства = ПараметрыОбработчика.ДанныеЭтапа.ДополнительныеСвойства;
	
 	НачалоПериода = ЗакрытиеМесяцаСервер.НачалоРасчета(ПараметрыОбработчика.ДанныеЭтапа.Код, ПараметрыРасчета.КонецПериода,,
		ПараметрыРасчета.МассивОрганизаций);
		
	ЕстьОшибки = Ложь;
	
	Пока НачалоПериода <= ПараметрыРасчета.КонецПериода Цикл
		
		ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ЗакрытиеМесяца." 
			+ ОбщегоНазначения.ИмяЗначенияПеречисления(ПараметрыОбработчика.ДанныеЭтапа.Код));
		
		ОкончаниеПериода = КонецМесяца(НачалоПериода);
		ДоступныеОрганизации = ЗакрытиеМесяцаСервер.ДоступныеДляРасчетаОрганизации(НачалоПериода, ПараметрыРасчета.МассивОрганизаций);
		НомерЗаданияДоРасчета = ЗакрытиеМесяцаСервер.УвеличитьНомерЗадания();
		
		// Этап 1. Подготовка работы с заданиями.
		
		НачатьТранзакцию();
		
		Попытка
			ЗакрытиеМесяцаСервер.ЗаблокироватьРегистрЗаданий(НомерЗаданияДоРасчета, ДоступныеОрганизации,
				ПараметрыОбработчика.ДанныеЭтапа.Код);
			ДанныеКРасчетуЗаМесяц = ЗакрытиеМесяцаСервер.ЗаданияКРасчетуЗаМесяц(НачалоПериода, ОкончаниеПериода, НомерЗаданияДоРасчета,
				ДоступныеОрганизации, ПараметрыОбработчика.ДанныеЭтапа.Код);
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр(
					"ru = 'При выполнении расчета за период %1 произошла ошибка:
					|%2';
					|en = 'An error occurred when calculating for the %1 period:
					|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
				РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(НачалоПериода),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗакрытиеМесяцаСервер.ЗафиксироватьНаличиеПроблемыПриВыполненииРасчета(ПараметрыОбработчика, ТекстОшибки,
				ДоступныеОрганизации, НачалоПериода);
		КонецПопытки;
		
		// Этап 2. Расчет по организациям и периоду.
		
		НачатьТранзакцию();
		
		Попытка
			
			МенеджерВТ = Новый МенеджерВременныхТаблиц();
			
			КоличествоДанных = ПодготовитьДанныеДокументовПоПризнаниюРасходов(
				ДанныеКРасчетуЗаМесяц.Организация, НачалоПериода, МенеджерВТ);
				
			ОчиститьДвиженияДокументовПоПризнаниюРасходов(МенеджерВТ);
			ВыполнитьПризнаниеРасходовПоИсследованиям(НачалоПериода, ДополнительныеСвойства, МенеджерВТ);
			ВыполнитьПризнаниеРасходовПриЗавершенииЭтапа(ДанныеКРасчетуЗаМесяц.Организация, НачалоПериода, МенеджерВТ);
			СформироватьЗаданияКРасчетуСтоимостиВНА(НачалоПериода, ОкончаниеПериода, МенеджерВТ);
			
			ЗафиксироватьТранзакцию();
		Исключение
			
			ОтменитьТранзакцию();
			
			ЕстьОшибки = Истина;
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр(
					"ru = 'Выполнение признания расходов по исследованиям и разработкам за период %1 завершилось с ошибкой:
					|%2';
					|en = 'R&D expense recognition in %1 period has completed with an error:
					|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
				РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(НачалоПериода),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			ЗакрытиеМесяцаСервер.ЗафиксироватьНаличиеПроблемыПриВыполненииРасчета(ПараметрыОбработчика, ТекстОшибки,
				ДанныеКРасчетуЗаМесяц.Организация, НачалоПериода);
		КонецПопытки;
		
		
		Если ЕстьОшибки Тогда
			Прервать;
		КонецЕсли;
		
		// Этап 3. Завершение работы с заданиями.
		
		ЗакрытиеМесяцаСервер.УдалитьЗаданияКРасчетуЗаТекущийПериод(ПараметрыОбработчика, ДанныеКРасчетуЗаМесяц);
		
		НачалоПериода = ОкончаниеПериода + 1;
		
		ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоДанных/10);
			
	КонецЦикла;
	
КонецПроцедуры

// Дополняет текст запроса механизма формирования заданий закрытия месяца.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 	ТекстЗапроса - Строка - строка с текстом запроса.
// 	ТекстЗапросаВременныхТаблиц - Строка - строка с текстом запроса временных таблиц.
// 	ИменаВременныхТаблиц - Строка - массив имен создаваемых временных таблиц для последующего уничтожения.
Процедура ДополнитьТекстЗапросаЗаданийКЗакрытиюМесяца(Запрос, ТекстЗапроса, ТекстЗапросаВременныхТаблиц, ИменаВременныхТаблиц) Экспорт
	
	СоответствиеЗапросов = СоответствиеЗапросовКонтрольнымРегистрам(Запрос);
	
	Для Каждого ЭлементСоответствия Из СоответствиеЗапросов Цикл
		ЗакрытиеМесяцаСервер.ДополнитьНазванияТаблицДляЗаданий(Запрос, ЭлементСоответствия.Ключ);
		ЗакрытиеМесяцаСервер.ДополнитьТекстЗапросаЗаданий(ЭлементСоответствия.Ключ,
			ЭлементСоответствия.Значение,
			Запрос.МенеджерВременныхТаблиц.Таблицы,
			ТекстЗапроса,
			ТекстЗапросаВременныхТаблиц,
			ИменаВременныхТаблиц);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СтруктураКапитализации

// Переопределение запроса отчета СтруктураКапитализвации
// 
// Возвращаемое значение:
// 	Строка - Текст запроса для НМА
//
Функция ТекстЗапросаСтруктураКапитализацииНМА() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПрочиеРасходы.Организация					КАК Организация,
	|	ПрочиеРасходы.Подразделение					КАК Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности		КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов				КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов				КАК АналитикаРасходов,
	|	ПрочиеРасходы.Регистратор					КАК Регистратор,
	|	ПрочиеРасходы.СтатьяРасходов.ВидРасходов	КАК ВидРасходов,
	|	ПрочиеРасходы.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	СУММА(ВЫБОР
	|		КОГДА &ДанныеПоЗатратам = 1
	|			ТОГДА ПрочиеРасходы.Сумма
	|		КОГДА &ДанныеПоЗатратам = 2
	|			ТОГДА ПрочиеРасходы.СуммаУпр
	|		КОГДА &ДанныеПоЗатратам = 3
	|			ТОГДА ПрочиеРасходы.СуммаРегл
	|		ИНАЧЕ ВЫБОР
	|			КОГДА &ПоПредприятию
	|				ТОГДА ПрочиеРасходы.Сумма
	|			ИНАЧЕ ПрочиеРасходы.СуммаУпр
	|		КОНЕЦ
	|	КОНЕЦ)										КАК Сумма,
	|	СУММА(ПрочиеРасходы.ПостояннаяРазница)		КАК СуммаПР,
	|	СУММА(ПрочиеРасходы.ВременнаяРазница)		КАК СуммаВР,
	|	СУММА(ПрочиеРасходы.СуммаРегл
	|			- ПрочиеРасходы.ПостояннаяРазница
	|			- ПрочиеРасходы.ВременнаяРазница)	КАК СуммаНУ
	|ПОМЕСТИТЬ ВТДвижения
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|ГДЕ
	|	ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ПрочиеРасходы.АналитикаРасходов = &Объект
	|СГРУППИРОВАТЬ ПО
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.СтатьяРасходов.ВидРасходов,
	|	ПрочиеРасходы.ИдентификаторСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ИдентификаторСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Коэффициент) КАК Коэффициент,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Ссылка				КАК Ссылка
	|ПОМЕСТИТЬ ВТОбщийКоэффициент
	|ИЗ
	|	Документ.ПризнаниеРасходовПоИсследованиямИРазработкам.Распределение КАК
	|		ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение
	|ГДЕ
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Ссылка В
	|		(ВЫБРАТЬ
	|			ВТДвижения.Регистратор
	|		ИЗ
	|			ВТДвижения)
	|СГРУППИРОВАТЬ ПО
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвижения.Организация																	КАК Организация,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамТемыЭтапыИсследованийИРазработок.ТемаЭтап	КАК ТемаЭтап,
	|	ЕСТЬNULL(ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Коэффициент, 0) /
	|		ЕСТЬNULL(ВТОбщийКоэффициент.Коэффициент, 1)											КАК Коэффициент,
	|	ВТДвижения.Регистратор																	КАК Регистратор
	|ПОМЕСТИТЬ ВТТемыЭтапы
	|ИЗ
	|	ВТДвижения КАК ВТДвижения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбщийКоэффициент КАК ВТОбщийКоэффициент
	|		ПО ВТДвижения.Регистратор = ВТОбщийКоэффициент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПризнаниеРасходовПоИсследованиямИРазработкам.Распределение КАК
	|			ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение
	|		ПО ВТДвижения.Регистратор = ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Ссылка
	|		И ВТДвижения.ИдентификаторСтроки = ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПризнаниеРасходовПоИсследованиямИРазработкам.ТемыЭтапыИсследованийИРазработок КАК
	|			ПризнаниеРасходовПоИсследованиямИРазработкамТемыЭтапыИсследованийИРазработок
	|		ПО ВТДвижения.Регистратор = ПризнаниеРасходовПоИсследованиямИРазработкамТемыЭтапыИсследованийИРазработок.Ссылка
	|ГДЕ
	|	ВТДвижения.Регистратор ССЫЛКА Документ.ПризнаниеРасходовПоИсследованиямИРазработкам
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ТемаЭтап
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвижения.Организация				КАК Организация,
	|	ВТДвижения.Подразделение			КАК Подразделение,
	|	ВТДвижения.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	ВТДвижения.СтатьяРасходов 			КАК СтатьяРасходов,
	|	ВТДвижения.Регистратор				КАК Регистратор,
	|	ВТДвижения.ВидРасходов				КАК ВидРасходов,
	|	NULL								КАК ТемаЭтап,
	|	ВТДвижения.Сумма					КАК Сумма,
	|	ВТДвижения.СуммаПР					КАК СуммаПР,
	|	ВТДвижения.СуммаВР					КАК СуммаВР,
	|	ВТДвижения.СуммаНУ					КАК СуммаНУ
	|ИЗ
	|	ВТДвижения КАК ВТДвижения
	|ГДЕ
	|	НЕ ВТДвижения.Регистратор ССЫЛКА Документ.ПризнаниеРасходовПоИсследованиямИРазработкам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,	
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.СтатьяРасходов.ВидРасходов,
	|	ВТТемыЭтапы.ТемаЭтап,
	|	ВЫБОР
	|		КОГДА &ДанныеПоЗатратам = 1
	|			ТОГДА ПрочиеРасходы.Сумма * ВТТемыЭтапы.Коэффициент
	|		КОГДА &ДанныеПоЗатратам = 2
	|			ТОГДА ПрочиеРасходы.СуммаУпр * ВТТемыЭтапы.Коэффициент
	|		КОГДА &ДанныеПоЗатратам = 3
	|			ТОГДА ПрочиеРасходы.СуммаРегл * ВТТемыЭтапы.Коэффициент
	|		ИНАЧЕ ВЫБОР
	|			КОГДА &ПоПредприятию
	|				ТОГДА ПрочиеРасходы.Сумма * ВТТемыЭтапы.Коэффициент
	|			ИНАЧЕ ПрочиеРасходы.СуммаУпр * ВТТемыЭтапы.Коэффициент
	|		КОНЕЦ
	|	КОНЕЦ,
	|ПрочиеРасходы.ПостояннаяРазница * ВТТемыЭтапы.Коэффициент,
	|ПрочиеРасходы.ВременнаяРазница * ВТТемыЭтапы.Коэффициент,
	|(ПрочиеРасходы.СуммаРегл - ПрочиеРасходы.ПостояннаяРазница - ПрочиеРасходы.ВременнаяРазница) * ВТТемыЭтапы.Коэффициент
	|
	|ИЗ
	|	ВТТемыЭтапы КАК ВТТемыЭтапы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|		ПО ПрочиеРасходы.Организация = ПрочиеРасходы.Организация
	|		И ВТТемыЭтапы.ТемаЭтап = ПрочиеРасходы.АналитикаРасходов
	|		И ВТТемыЭтапы.Регистратор <> ПрочиеРасходы.Регистратор
	|		И ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|ГДЕ
	|	ВТТемыЭтапы.ТемаЭтап.Разработки = ИСТИНА";

	Возврат ТекстЗапроса;
	
КонецФункции

// Переопределение запроса отчета СтруктураКапитализвации
// 
// Возвращаемое значение:
// 	Строка - Текст запроса для НМА
//
Функция ТекстЗапросаСтруктураКапитализации() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПрочиеРасходы.Организация					КАК Организация,
	|	ПрочиеРасходы.Подразделение					КАК Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности		КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов				КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов				КАК АналитикаРасходов,
	|	ПрочиеРасходы.Регистратор					КАК Регистратор,
	|	ПрочиеРасходы.СтатьяРасходов.ВидРасходов	КАК ВидРасходов,
	|	НЕОПРЕДЕЛЕНО								КАК ТемаЭтап,
	|	ВЫБОР
	|		КОГДА &ДанныеПоЗатратам = 1
	|			ТОГДА ПрочиеРасходы.Сумма
	|		КОГДА &ДанныеПоЗатратам = 2
	|			ТОГДА ПрочиеРасходы.СуммаУпр
	|		КОГДА &ДанныеПоЗатратам = 3
	|			ТОГДА ПрочиеРасходы.СуммаРегл
	|		ИНАЧЕ ВЫБОР
	|			КОГДА &ПоПредприятию
	|				ТОГДА ПрочиеРасходы.Сумма
	|			ИНАЧЕ ПрочиеРасходы.СуммаУпр
	|		КОНЕЦ
	|	КОНЕЦ										КАК Сумма,
	|	ПрочиеРасходы.ПостояннаяРазница				КАК СуммаПР,
	|	ПрочиеРасходы.ВременнаяРазница				КАК СуммаВР,
	|	ПрочиеРасходы.СуммаРегл
	|			- ПрочиеРасходы.ПостояннаяРазница
	|			- ПрочиеРасходы.ВременнаяРазница	КАК СуммаНУ
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|ГДЕ
	|	ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ПрочиеРасходы.АналитикаРасходов = &Объект";

	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

// Возвращает настройки учетных политик для признания расходов по исследованиям
// 
// Параметры:
// 	НачалоПериода - Дата -
// 	МассивОрганизаций - Массив из СправочникСсылка.Организации, Неопределено - 
// Возвращаемое значение:
// 	ТаблицаЗначений - таблица с колонками:
// 		*Организация - СправочникСсылка.Организации -
// 		*СтатьяРасходов - ПланВидовХарактеристикСсылка.СтатьиРасходов - 
// 		*АналитикаРасходов - Характеристика.СтатьиРасходов -
// 		*УчетнаяПолитика - Строка -
Функция НастройкиПризнанияРасходовПоИсследованиямОрганизаций(НачалоПериода, МассивОрганизаций = Неопределено) Экспорт
	
	ТекстыЗапроса = Новый Массив;
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрОрганизации.ГоловнаяОрганизация КАК Организация,
	|	СпрОрганизации.Ссылка КАК ОбособленноеПодразделение
	|ПОМЕСТИТЬ ВтГоловныеОрганизации
	|ИЗ
	|	Справочник.Организации КАК СпрОрганизации
	|ГДЕ
	|	ВЫБОР
	|		КОГДА &ОтборПоОрганизациям
	|			ТОГДА СпрОрганизации.Ссылка В (&МассивОрганизаций)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	ТекстыЗапроса.Добавить(УчетРасходовПоИсследованиямИРазработкамЛокализация.ТекстЗапросаУчетнаяПолитикаБУ());
	ТекстыЗапроса.Добавить(ТекстЗапросаУчетнаяПолитикаУУ());
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГоловныеОрганизации.Организация КАК Организация,
	|	ЕСТЬNULL(ВтУчетнаяПолитикаБухУчета.СтатьяРасходовПоИсследованиям, НЕОПРЕДЕЛЕНО) КАК СтатьяРасходов,
	|	ЕСТЬNULL(ВтУчетнаяПолитикаБухУчета.АналитикаРасходовПоИсследованиям, НЕОПРЕДЕЛЕНО) КАК АналитикаРасходов,
	|	""БухУчет"" КАК УчетнаяПолитика
	|ИЗ
	|	ВтГоловныеОрганизации КАК ГоловныеОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУчетнаяПолитикаБухУчета КАК ВтУчетнаяПолитикаБухУчета
	|		ПО ГоловныеОрганизации.Организация = ВтУчетнаяПолитикаБухУчета.Организация
	|ГДЕ
	|	ЕСТЬNULL(ВтУчетнаяПолитикаБухУчета.УчетНИОКРПоФСБУ26, ЛОЖЬ) = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГоловныеОрганизации.Организация КАК Организация,
	|	ЕСТЬNULL(ВтУчетнаяПолитикаФинУчета.СтатьяРасходовПоИсследованиям, НЕОПРЕДЕЛЕНО) КАК СтатьяРасходов,
	|	ЕСТЬNULL(ВтУчетнаяПолитикаФинУчета.АналитикаРасходовПоИсследованиям, НЕОПРЕДЕЛЕНО) КАК АналитикаРасходов,
	|	""ФинУчет"" КАК УчетнаяПолитика
	|ИЗ
	|	ВтГоловныеОрганизации КАК ГоловныеОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУчетнаяПолитикаФинУчета КАК ВтУчетнаяПолитикаФинУчета
	|		ПО ГоловныеОрганизации.Организация = ВтУчетнаяПолитикаФинУчета.Организация
	|ГДЕ
	|	ЕСТЬNULL(ВтУчетнаяПолитикаФинУчета.ПризнаватьРасходыПоИсследованиям, ЛОЖЬ) = ИСТИНА";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	Запрос.УстановитьПараметр("ОтборПоОрганизациям", ЗначениеЗаполнено(МассивОрганизаций));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеЗаданийКЗакрытиюМесяца

Функция СоответствиеЗапросовКонтрольнымРегистрам(Запрос)
	
	СоответствиеТекстовЗапросов = Новый Соответствие();
	//++ НЕ УТ
	СоответствиеТекстовЗапросов.Вставить("ТаблицаИзмененийПрочиеРасходы", ТекстЗапросаПрочиеРасходы(Запрос));
	//-- НЕ УТ
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

Функция ТекстЗапросаПрочиеРасходы(Запрос)
	
	ИмяТаблицыДействующиеУчетныеПолитики = "ДействующиеУчетныеПолитики_ПрочиеРасходы";
	ИменаВременныхТаблиц = ИмяТаблицыДействующиеУчетныеПолитики;
	
	ТекстыЗапросаВременныхТаблиц = Новый Массив;
	ТекстыЗапросаВременныхТаблиц.Добавить(ТекстЗапросаДействующихУчетныхПолитик("ТаблицаИзмененийПрочиеРасходы", ИмяТаблицыДействующиеУчетныеПолитики));

	// Проверяется применение признания расходов по исследованиям для организации
	
	ТекстыОбъединение = Новый Массив;
	
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ДвиженияПрочиеРасходыИзменение") <> Неопределено Тогда
	
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	вт_ТаблицаИзменений.НачалоМесяца КАК Месяц,
		|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПризнаниеРасходовПоИсследованиямИРазработкам) КАК Операция,
		|	вт_ТаблицаИзменений.Организация КАК Организация,
		|	вт_ТаблицаИзменений.Регистратор КАК Документ
		|ИЗ
		|	ДвиженияПрочиеРасходыИзменение КАК вт_ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДействующиеУчетныеПолитики_ПрочиеРасходы КАК вт_УчетныеПолитикиБУ
		|		ПО вт_ТаблицаИзменений.Организация = вт_УчетныеПолитикиБУ.Организация
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТемыЭтапыИсследованийИРазработок КАК ТемыЭтапыИсследованийИРазработок
		|		ПО вт_ТаблицаИзменений.АналитикаРасходов = ТемыЭтапыИсследованийИРазработок.Ссылка
		|ГДЕ
		|	ЕСТЬNULL(вт_УчетныеПолитикиБУ.ПрименяетсяПризнаниеПоИсследованиям, ЛОЖЬ) = ИСТИНА
		|	И (вт_ТаблицаИзменений.СуммаИзменение <> 0
		|		ИЛИ вт_ТаблицаИзменений.СуммаБезНДСИзменение <> 0
		|		ИЛИ вт_ТаблицаИзменений.СуммаРеглИзменение <> 0
		|		ИЛИ вт_ТаблицаИзменений.ПостояннаяРазницаИзменение <> 0
		|		ИЛИ вт_ТаблицаИзменений.ВременнаяРазницаИзменение <> 0
		|		ИЛИ вт_ТаблицаИзменений.СуммаУпрИзменение <> 0)";
		
		ТекстыОбъединение.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	//Проверяется наличие введенных завершений этапов для организации
	
	ТекстЗапросаВременныхТаблиц =
	"ВЫБРАТЬ
	|	вт_ТаблицаИзменений.Период КАК Период,
	|	вт_ТаблицаИзменений.Организация КАК Организация,
	|	КОЛИЧЕСТВО(РеестрДокументов.Ссылка) КАК ДокументыЗавершенияЭтапа
	|ПОМЕСТИТЬ вт_ЗавершенныеЭтапы
	|ИЗ
	|	ТаблицаИзмененийПрочиеРасходы КАК вт_ТаблицаИзменений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТемыЭтапыИсследованийИРазработок КАК ТемыЭтапыИсследованийИРазработок
	|		ПО вт_ТаблицаИзменений.АналитикаРасходов = ТемыЭтапыИсследованийИРазработок.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|		ПО РеестрДокументов.ТипСсылки = &ТипСсылки
	|			И РеестрДокументов.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|			И вт_ТаблицаИзменений.Организация = РеестрДокументов.Организация
	|			И РеестрДокументов.ДатаДокументаИБ МЕЖДУ НАЧАЛОПЕРИОДА(вт_ТаблицаИзменений.Период,
	|				Месяц) И КОНЕЦПЕРИОДА(вт_ТаблицаИзменений.Период, Месяц)
	|			И РеестрДокументов.Проведен = ИСТИНА
	|ГДЕ
	|	вт_ТаблицаИзменений.Сумма <> 0
	|		ИЛИ вт_ТаблицаИзменений.СуммаБезНДС <> 0
	|		ИЛИ вт_ТаблицаИзменений.СуммаРегл <> 0
	|		ИЛИ вт_ТаблицаИзменений.ПостояннаяРазница <> 0
	|		ИЛИ вт_ТаблицаИзменений.ВременнаяРазница <> 0
	|		ИЛИ вт_ТаблицаИзменений.СуммаУпр <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ТаблицаИзменений.Период,
	|	вт_ТаблицаИзменений.Организация
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РеестрДокументов.Ссылка) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Организация";
	
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ЗавершениеЭтаповИсследованийИРазработок);
	Запрос.УстановитьПараметр("ТипСсылки", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПризнаниеРасходовПоИсследованиямИРазработкам"));
	
	ИменаВременныхТаблиц = ИменаВременныхТаблиц + ", вт_ЗавершенныеЭтапы";
	ТекстыЗапросаВременныхТаблиц.Добавить(ТекстЗапросаВременныхТаблиц);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(вт_ТаблицаИзменений.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПризнаниеРасходовПоИсследованиямИРазработкам) КАК Операция,
	|	вт_ТаблицаИзменений.Организация КАК Организация,
	|	вт_ТаблицаИзменений.Регистратор КАК Документ
	|ИЗ
	|	ТаблицаИзмененийПрочиеРасходы КАК вт_ТаблицаИзменений
	|ГДЕ
	|	(вт_ТаблицаИзменений.Организация, вт_ТаблицаИзменений.Период) В
	|		(ВЫБРАТЬ
	|			вт_ЗавершенныеЭтапы.Организация,
	|			вт_ЗавершенныеЭтапы.Период
	|		ИЗ
	|			вт_ЗавершенныеЭтапы)";
	ТекстыОбъединение.Добавить(ТекстЗапроса);
	
	ТекстЗапроса= СтрСоединить(ТекстыОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	ТекстЗапросаВременныхТаблиц = СтрСоединить(ТекстыЗапросаВременныхТаблиц, ОбщегоНазначения.РазделительПакетаЗапросов()) 
		+ ОбщегоНазначения.РазделительПакетаЗапросов();
	
	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(
		ТекстЗапроса, 
		ТекстЗапросаВременныхТаблиц,
		ИменаВременныхТаблиц);
		
	Возврат СтруктураТекстовЗапросов;
	
КонецФункции

// Текст запроса действующих учетных политики признания расходов по исследованиям.
//
// Параметры:
// 	ИмяТаблицыИзменений - Строка - имя временной таблицы изменений расчетов.
// 	ИмяПодготовленнойТаблицы - Строка - имя временной таблицы, в которую необходимо поместить действующие учетные политики.
//
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаДействующихУчетныхПолитик(ИмяТаблицыИзменений, ИмяПодготовленнойТаблицы)
	
	ТекстыЗапроса = Новый Массив;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_ТаблицаИзменений.Период КАК Период,
	|	вт_ТаблицаИзменений.Организация КАК Организация,
	|	ЕСТЬNULL(Организации.ГоловнаяОрганизация, вт_ТаблицаИзменений.Организация) КАК ОрганизацияУчетнойПолитики
	|ПОМЕСТИТЬ вт_ОрганизацииУчетнойПолитики
	|ИЗ
	|	#ТаблицаИзменений КАК вт_ТаблицаИзменений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО вт_ТаблицаИзменений.Организация = Организации.Ссылка
	|		И Организации.ОбособленноеПодразделение";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	ТекстыЗапроса.Добавить(УчетРасходовПоИсследованиямИРазработкамЛокализация.ТекстЗапросаУчетныеПолитикиБУ());
	ТекстыЗапроса.Добавить(ТекстЗапросаУчетныеПолитикиУУ());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	вт_ТаблицаИзменений.Период КАК Период,
	|	вт_ТаблицаИзменений.Организация КАК Организация,
	|	вт_УчетныеПолитикиБУ.ПрименяетсяПризнаниеПоИсследованиям КАК ПрименяетсяПризнаниеПоИсследованиям
	|ПОМЕСТИТЬ #ИмяПодготовленнойТаблицы
	|ИЗ
	|	вт_ОрганизацииУчетнойПолитики КАК вт_ТаблицаИзменений
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_УчетныеПолитикиБУ КАК вт_УчетныеПолитикиБУ
	|		ПО вт_ТаблицаИзменений.ОрганизацияУчетнойПолитики = вт_УчетныеПолитикиБУ.Организация
	|		И вт_ТаблицаИзменений.Период = вт_УчетныеПолитикиБУ.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	вт_ТаблицаИзменений.Период КАК Период,
	|	вт_ТаблицаИзменений.Организация КАК Организация,
	|	вт_УчетныеПолитикиУУ.ПрименяетсяПризнаниеПоИсследованиям
	|ИЗ
	|	вт_ОрганизацииУчетнойПолитики КАК вт_ТаблицаИзменений
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_УчетныеПолитикиУУ КАК вт_УчетныеПолитикиУУ
	|		ПО вт_ТаблицаИзменений.ОрганизацияУчетнойПолитики = вт_УчетныеПолитикиУУ.Организация
	|		И вт_ТаблицаИзменений.Период = вт_УчетныеПолитикиУУ.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_УчетныеПолитикиБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_УчетныеПолитикиУУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_ОрганизацииУчетнойПолитики";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
			
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаИзменений", ИмяТаблицыИзменений);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ИмяПодготовленнойТаблицы", ИмяПодготовленнойТаблицы);

	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует задания к расчету стоимости ОС и НМА, если была изменена сумма расходов, которая распределяется на ОС и НМА.
//
Процедура СформироватьЗаданияКРасчетуСтоимостиВНА(НачалоПериода, КонецПериода, МенеджерВТ)

	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(НачалоПериода) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Период КАК Период,
	|	Таблица.Организация КАК Организация,
	|	Таблица.АналитикаРасходов КАК ОбъектУчета,
	|	Таблица.Регистратор КАК Документ
	|ПОМЕСТИТЬ ПрочиеРасходы_ЗаданияКРасчетуСтоимостиВНАИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаИзменений.Период КАК Период,
	|		ТаблицаИзменений.Регистратор КАК Регистратор,
	|		ТаблицаИзменений.Организация КАК Организация,
	|		ТаблицаИзменений.Подразделение КАК Подразделение,
	|		ТаблицаИзменений.СтатьяРасходов КАК СтатьяРасходов,
	|		ТаблицаИзменений.АналитикаРасходов КАК АналитикаРасходов,
	|		ТаблицаИзменений.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ТаблицаИзменений.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				ТОГДА ТаблицаИзменений.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Сумма,
	|		ВЫБОР
	|			КОГДА ТаблицаИзменений.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				ТОГДА ТаблицаИзменений.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС,
	|		ВЫБОР
	|			КОГДА ТаблицаИзменений.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				ТОГДА ТаблицаИзменений.СуммаРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаРегл,
	|		ВЫБОР
	|			КОГДА ТаблицаИзменений.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				ТОГДА ТаблицаИзменений.ПостояннаяРазница
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПостояннаяРазница,
	|		ВЫБОР
	|			КОГДА ТаблицаИзменений.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				ТОГДА ТаблицаИзменений.ВременнаяРазница
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВременнаяРазница
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы КАК ТаблицаИзменений
	|	ГДЕ
	|		ТаблицаИзменений.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И (ТаблицаИзменений.РасчетПартий
	|				ИЛИ ТаблицаИзменений.РасчетСебестоимости)
	|		И (ТаблицаИзменений.АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|				ИЛИ ТаблицаИзменений.АналитикаРасходов ССЫЛКА Справочник.ОбъектыСтроительства
	|				ИЛИ ТаблицаИзменений.АналитикаРасходов ССЫЛКА Справочник.НематериальныеАктивы)
	|		И ТаблицаИзменений.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|		И (ТаблицаИзменений.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				ИЛИ ТаблицаИзменений.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|		И ТаблицаИзменений.Регистратор В
	|				(ВЫБРАТЬ
	|					ВТКэш.Ссылка
	|				ИЗ
	|					ВТКэшИзмененныеДокументы КАК ВТКэш)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаИзменений.Период,
	|		ТаблицаИзменений.Регистратор,
	|		ТаблицаИзменений.Организация,
	|		ТаблицаИзменений.Подразделение,
	|		ТаблицаИзменений.СтатьяРасходов,
	|		ТаблицаИзменений.АналитикаРасходов,
	|		ТаблицаИзменений.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ТаблицаИзменений.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				ТОГДА -ТаблицаИзменений.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТаблицаИзменений.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				ТОГДА -ТаблицаИзменений.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТаблицаИзменений.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				ТОГДА -ТаблицаИзменений.СуммаРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТаблицаИзменений.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				ТОГДА -ТаблицаИзменений.ПостояннаяРазница
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТаблицаИзменений.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				ТОГДА -ТаблицаИзменений.ВременнаяРазница
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ВТКэшПрочиеРасходы КАК ТаблицаИзменений
	|	ГДЕ
	|		(ТаблицаИзменений.АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|				ИЛИ ТаблицаИзменений.АналитикаРасходов ССЫЛКА Справочник.ОбъектыСтроительства
	|				ИЛИ ТаблицаИзменений.АналитикаРасходов ССЫЛКА Справочник.НематериальныеАктивы)
	|		И ТаблицаИзменений.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|		И (ТаблицаИзменений.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				ИЛИ ТаблицаИзменений.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|		И ТаблицаИзменений.Регистратор В
	|				(ВЫБРАТЬ
	|					ВТКэш.Ссылка
	|				ИЗ
	|					ВТКэшИзмененныеДокументы КАК ВТКэш)
	|
	|) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Период,
	|	Таблица.Регистратор,
	|	Таблица.Подразделение,
	|	Таблица.СтатьяРасходов,
	|	Таблица.Организация,
	|	Таблица.АналитикаРасходов,
	|	Таблица.НаправлениеДеятельности
	|
	|ИМЕЮЩИЕ
	|	(СУММА(Таблица.Сумма) <> 0
	|		ИЛИ СУММА(Таблица.СуммаБезНДС) <> 0
	|		ИЛИ СУММА(Таблица.СуммаРегл) <> 0
	|		ИЛИ СУММА(Таблица.ПостояннаяРазница) <> 0
	|		ИЛИ СУММА(Таблица.ВременнаяРазница) <> 0)";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Результат = Запрос.ВыполнитьПакет(); 
	Выборка = Результат.Получить(Результат.ВГраница()).Выбрать();
	Выборка.Следующий();
	
	ДанныеТаблиц = Новый Структура;
	ДанныеТаблиц.Вставить("МенеджерВременныхТаблиц", Запрос.МенеджерВременныхТаблиц);
	ДанныеТаблиц.Вставить("ПрочиеРасходы_ЗаданияКРасчетуСтоимостиВНАИзменение", Выборка.Количество > 0);
	
	РасчетСтоимостиВНА.СформироватьЗадания(Неопределено, ДанныеТаблиц);

КонецПроцедуры

#КонецОбласти

Функция ТекстЗапросаУчетнаяПолитикаУУ()
	
	Возврат
	"ВЫБРАТЬ
	|	ГоловныеОрганизации.Организация							КАК Организация,
	|	ТаблицаСрезПоследних.ПризнаватьРасходыПоИсследованиям	КАК ПризнаватьРасходыПоИсследованиям,
	|	ТаблицаСрезПоследних.СтатьяРасходовПоИсследованиям		КАК СтатьяРасходовПоИсследованиям,
	|	ТаблицаСрезПоследних.АналитикаРасходовПоИсследованиям	КАК АналитикаРасходовПоИсследованиям
	|ПОМЕСТИТЬ ВтУчетнаяПолитикаФинУчета
	|ИЗ
	|	ВтГоловныеОрганизации КАК ГоловныеОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(&НачалоПериода, 
	|			Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК ТаблицаСрезПоследних
	|		ПО ГоловныеОрганизации.Организация = ТаблицаСрезПоследних.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
КонецФункции

Функция ТекстЗапросаУчетныеПолитикиУУ()
	
	Возврат
	"ВЫБРАТЬ
	|	вт_ТаблицаИзменений.Период КАК Период,
	|	вт_ТаблицаИзменений.Организация КАК Организация,
	|	МАКСИМУМ(УчетнаяПолитикаУУ.Период) КАК ПериодУчетнойПолитикиУУ
	|ПОМЕСТИТЬ вт_ПериодыУчетнойПолитикиУУ
	|ИЗ
	|	вт_ОрганизацииУчетнойПолитики КАК вт_ТаблицаИзменений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК УчетнаяПолитикаУУ
	|		ПО вт_ТаблицаИзменений.ОрганизацияУчетнойПолитики = УчетнаяПолитикаУУ.Организация
	|		И вт_ТаблицаИзменений.Период >= УчетнаяПолитикаУУ.Период
	|СГРУППИРОВАТЬ ПО
	|	вт_ТаблицаИзменений.Период,
	|	вт_ТаблицаИзменений.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_ПериодыУчетнойПолитикиУУ.Период КАК Период,
	|	вт_ПериодыУчетнойПолитикиУУ.Организация КАК Организация,
	|	УчетнаяПолитикаУУ.ПризнаватьРасходыПоИсследованиям КАК ПрименяетсяПризнаниеПоИсследованиям
	|ПОМЕСТИТЬ вт_УчетныеПолитикиУУ
	|ИЗ
	|	вт_ПериодыУчетнойПолитикиУУ КАК вт_ПериодыУчетнойПолитикиУУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК УчетнаяПолитикаУУ
	|		ПО вт_ПериодыУчетнойПолитикиУУ.Организация = УчетнаяПолитикаУУ.Организация
	|		И вт_ПериодыУчетнойПолитикиУУ.ПериодУчетнойПолитикиУУ = УчетнаяПолитикаУУ.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_ПериодыУчетнойПолитикиУУ";
	
КонецФункции

Функция ТекстЗапросаСостояниеПризнанияРасходовПоИсследованиямИРазработкам()
	
	ТекстыЗапроса = Новый Массив;

	#Область вт_ОрганизацииСПризнаниемИсследований

	// Организации, по которым производится признание расходов по исследованиям согласно учетной политике.
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрОрганизации.ГоловнаяОрганизация КАК Организация,
	|	СпрОрганизации.Ссылка КАК ОбособленноеПодразделение
	|ПОМЕСТИТЬ ВтГоловныеОрганизации
	|ИЗ
	|	Справочник.Организации КАК СпрОрганизации
	|ГДЕ
	|	СпрОрганизации.Ссылка В (&МассивОрганизаций)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	ТекстыЗапроса.Добавить(УчетРасходовПоИсследованиямИРазработкамЛокализация.ТекстЗапросаУчетнаяПолитикаБУ());
	ТекстыЗапроса.Добавить(ТекстЗапросаУчетнаяПолитикаУУ());
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ПрочиеРасходыОстатки.Организация КАК Организация,
	|	ПрочиеРасходыОстатки.СуммаРеглОстаток КАК СуммаБУ,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОстатки.СуммаУпрОстаток <> 0
	|			ТОГДА ПрочиеРасходыОстатки.СуммаУпрОстаток
	|		КОГДА ПрочиеРасходыОстатки.СуммаОстаток <> 0
	|			ТОГДА ПрочиеРасходыОстатки.СуммаОстаток
	|		ИНАЧЕ ПрочиеРасходыОстатки.СуммаБезНДСОстаток
	|	КОНЕЦ КАК СуммаУУ
	|ПОМЕСТИТЬ вт_Остатки
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Остатки(&ГраницаКонецПериода, Организация В (&МассивОрганизаций)
	|	И АналитикаРасходов ССЫЛКА Справочник.ТемыЭтапыИсследованийИРазработок) КАК ПрочиеРасходыОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Организация,
	|	ЕСТЬNULL(ВтУчетнаяПолитикаБухУчета.УчетНИОКРПоФСБУ26, ЛОЖЬ) КАК ПризнаватьИсследования,
	|	ЕСТЬNULL(ВтУчетнаяПолитикаБухУчета.СтатьяРасходовПоИсследованиям, НЕОПРЕДЕЛЕНО) КАК СтатьяРасходов,
	|	ЕСТЬNULL(ВтУчетнаяПолитикаБухУчета.АналитикаРасходовПоИсследованиям, НЕОПРЕДЕЛЕНО) КАК АналитикаРасходов,
	|	ЕСТЬNULL(ВтУчетнаяПолитикаБухУчета.СтатьяРасходовПоИсследованиям.ТипРасходов, НЕОПРЕДЕЛЕНО) КАК ТипРасходов,
	|	""БухУчет"" КАК УчетнаяПолитика
	|ПОМЕСТИТЬ вт_ОрганизацииСПризнаниемИсследований
	|ИЗ
	|	ВтГоловныеОрганизации КАК ГоловныеОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУчетнаяПолитикаБухУчета КАК ВтУчетнаяПолитикаБухУчета
	|		ПО ГоловныеОрганизации.Организация = ВтУчетнаяПолитикаБухУчета.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_Остатки КАК вт_Остатки
	|		ПО ГоловныеОрганизации.ОбособленноеПодразделение = вт_Остатки.Организация
	|ГДЕ
	|	ЕСТЬNULL(ВтУчетнаяПолитикаБухУчета.УчетНИОКРПоФСБУ26, ЛОЖЬ) = ИСТИНА
	|	И вт_Остатки.СуммаБУ <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Организация,
	|	ЕСТЬNULL(ВтУчетнаяПолитикаФинУчета.ПризнаватьРасходыПоИсследованиям, ЛОЖЬ),
	|	ЕСТЬNULL(ВтУчетнаяПолитикаФинУчета.СтатьяРасходовПоИсследованиям, НЕОПРЕДЕЛЕНО) КАК СтатьяРасходов,
	|	ЕСТЬNULL(ВтУчетнаяПолитикаФинУчета.АналитикаРасходовПоИсследованиям, НЕОПРЕДЕЛЕНО) КАК АналитикаРасходов,
	|	ЕСТЬNULL(ВтУчетнаяПолитикаФинУчета.СтатьяРасходовПоИсследованиям.ТипРасходов, НЕОПРЕДЕЛЕНО) КАК ТипРасходов,
	|	""ФинУчет"" КАК УчетнаяПолитика
	|ИЗ
	|	ВтГоловныеОрганизации КАК ГоловныеОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУчетнаяПолитикаФинУчета КАК ВтУчетнаяПолитикаФинУчета
	|		ПО ГоловныеОрганизации.Организация = ВтУчетнаяПолитикаФинУчета.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_Остатки КАК вт_Остатки
	|		ПО ГоловныеОрганизации.ОбособленноеПодразделение = вт_Остатки.Организация
	|ГДЕ
	|	ЕСТЬNULL(ВтУчетнаяПолитикаФинУчета.ПризнаватьРасходыПоИсследованиям, ЛОЖЬ) = ИСТИНА
	|	И вт_Остатки.СуммаУУ <> 0";

	ТекстыЗапроса.Добавить(ТекстЗапроса);

	#КонецОбласти

	#Область вт_ОрганизацииСЗавершениемЭтапа

	// Организации, по которым были введены документы завершения этапа исследований и разработок.
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеестрДокументов.Организация КАК Организация
	|ПОМЕСТИТЬ вт_ОрганизацииСЗавершениемЭтапа
	|ИЗ
	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|ГДЕ
	|	РеестрДокументов.ТипСсылки = &ТипСсылки
	|	И РеестрДокументов.ХозяйственнаяОперация = &ХозяйственнаяОперацияЗавершениеЭтапа
	|	И РеестрДокументов.Организация В (&МассивОрганизаций)
	|	И РеестрДокументов.ДатаДокументаИБ МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РеестрДокументов.Проведен = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";

	ТекстыЗапроса.Добавить(ТекстЗапроса);

	#КонецОбласти

	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьТаблицуРаспределения(Документ, ДанныеРаспределения)

	Распределение = ДанныеРаспределения.СкопироватьКолонки();
	СтрокиРаспределения = ДанныеРаспределения.НайтиСтроки(Новый Структура("Ссылка", Документ));
	Для Каждого СтрокаРаспределения Из СтрокиРаспределения Цикл
		Строка = Распределение.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, СтрокаРаспределения); 
	КонецЦикла;
	
	Возврат Распределение;
		
КонецФункции

Функция ПолучитьТекстЗапросаПоПризнаниюРасходов(ХозяйственнаяОперация)
	
	ТекстыЗапроса = Новый Массив();
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПризнаниеРасходовПоИсследованиям Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		|	ОрганизацииСПризнаниемИсследований.Организация КАК Организация,
		|	ОрганизацииСПризнаниемИсследований.УчетнаяПолитика КАК УчетнаяПолитика
		|ПОМЕСТИТЬ вт_ОрганизацииСПризнаниемИсследований
		|ИЗ
		|	&ОрганизацииСПризнаниемИсследований КАК ОрганизацииСПризнаниемИсследований
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	УчетнаяПолитика
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПрочиеРасходыОстатки.Организация КАК Организация,
		|	ПрочиеРасходыОстатки.Подразделение КАК Подразделение,
		|	ПрочиеРасходыОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ПрочиеРасходыОстатки.СтатьяРасходов КАК СтатьяРасходов,
		|	ПрочиеРасходыОстатки.АналитикаРасходов КАК АналитикаРасходов,
		|	ЕСТЬNULL(вт_ДокументыПризнания.Документ,
		|		ЗНАЧЕНИЕ(Документ.ПризнаниеРасходовПоИсследованиямИразработкам.ПустаяСсылка)) КАК ДокументПризнания,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ПрочиеРасходыОстатки.СуммаОстаток КАК Сумма,
		|	ПрочиеРасходыОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
		|	ПрочиеРасходыОстатки.СуммаРеглОстаток КАК СуммаРегл,
		|	ПрочиеРасходыОстатки.СуммаУпрОстаток КАК СуммаУпр,
		|	ПрочиеРасходыОстатки.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ПрочиеРасходыОстатки.СуммаНДДОстаток КАК СуммаНДД
		|ПОМЕСТИТЬ вт_Остатки
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходы.Остатки(&ГраницаКонецПериода, Организация В (&Организации)
		|	И АналитикаРасходов ССЫЛКА Справочник.ТемыЭтапыИсследованийИРазработок
		|	И ВЫРАЗИТЬ(АналитикаРасходов КАК Справочник.ТемыЭтапыИсследованийИРазработок).Разработки = ЛОЖЬ) КАК
		|		ПрочиеРасходыОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДокументыПризнания КАК вт_ДокументыПризнания
		|		ПО ПрочиеРасходыОстатки.Организация = вт_ДокументыПризнания.Организация
		|		И ПрочиеРасходыОстатки.АналитикаРасходов = вт_ДокументыПризнания.ТемаЭтап
		|		И вт_ДокументыПризнания.ХозяйственнаяОперация = &ХозяйственнаяОперация
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_Остатки.Организация,
		|	вт_Остатки.Подразделение,
		|	вт_Остатки.НаправлениеДеятельности,
		|	вт_Остатки.СтатьяРасходов,
		|	вт_Остатки.АналитикаРасходов,
		|	вт_Остатки.ДокументПризнания,
		|	вт_Остатки.ХозяйственнаяОперация,
		|	вт_Остатки.Сумма,
		|	вт_Остатки.СуммаБезНДС,
		|	вт_Остатки.СуммаРегл,
		|	вт_Остатки.СуммаУпр,
		|	вт_Остатки.ПостояннаяРазница,
		|	вт_Остатки.СуммаНДД
		|ИЗ
		|	вт_Остатки КАК вт_Остатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_ОрганизацииСПризнаниемИсследований КАК вт_ОрганизацииСПризнаниемИсследований
		|		ПО вт_Остатки.Организация = вт_ОрганизацииСПризнаниемИсследований.Организация
		|ГДЕ
		|	вт_ОрганизацииСПризнаниемИсследований.УчетнаяПолитика = ""БухУчет""
		|	И вт_Остатки.СуммаРегл <> 0
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	вт_Остатки.Организация,
		|	вт_Остатки.Подразделение,
		|	вт_Остатки.НаправлениеДеятельности,
		|	вт_Остатки.СтатьяРасходов,
		|	вт_Остатки.АналитикаРасходов,
		|	вт_Остатки.ДокументПризнания,
		|	вт_Остатки.ХозяйственнаяОперация,
		|	вт_Остатки.Сумма,
		|	вт_Остатки.СуммаБезНДС,
		|	вт_Остатки.СуммаРегл,
		|	вт_Остатки.СуммаУпр,
		|	вт_Остатки.ПостояннаяРазница,
		|	вт_Остатки.СуммаНДД
		|ИЗ
		|	вт_Остатки КАК вт_Остатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_ОрганизацииСПризнаниемИсследований КАК вт_ОрганизацииСПризнаниемИсследований
		|		ПО вт_Остатки.Организация = вт_ОрганизацииСПризнаниемИсследований.Организация
		|ГДЕ
		|	вт_ОрганизацииСПризнаниемИсследований.УчетнаяПолитика = ""ФинУчет""
		|	И вт_Остатки.Сумма + вт_Остатки.СуммаУпр + вт_Остатки.СуммаБезНДС <> 0";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
	Иначе
		ТекстЗапроса = "ВЫБРАТЬ
		|	ПрочиеРасходыОстатки.Организация КАК Организация,
		|	ПрочиеРасходыОстатки.Подразделение КАК Подразделение,
		|	ПрочиеРасходыОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ПрочиеРасходыОстатки.СтатьяРасходов КАК СтатьяРасходов,
		|	ПрочиеРасходыОстатки.АналитикаРасходов КАК АналитикаРасходов,
		|	ЕСТЬNULL(вт_ДокументыПризнания.Документ,
		|		ЗНАЧЕНИЕ(Документ.ПризнаниеРасходовПоИсследованиямИразработкам.ПустаяСсылка)) КАК ДокументПризнания,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ПрочиеРасходыОстатки.СуммаОстаток КАК Сумма,
		|	ПрочиеРасходыОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
		|	ПрочиеРасходыОстатки.СуммаРеглОстаток КАК СуммаРегл,
		|	ПрочиеРасходыОстатки.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ПрочиеРасходыОстатки.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ПрочиеРасходыОстатки.СуммаУпрОстаток КАК СуммаУпр,
		|	ПрочиеРасходыОстатки.СуммаНДДОстаток КАК СуммаНДД
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходы.Остатки(&ГраницаКонецПериода, Организация В (&Организации)
		|	И АналитикаРасходов ССЫЛКА Справочник.ТемыЭтапыИсследованийИРазработок) КАК ПрочиеРасходыОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДокументыПризнания КАК вт_ДокументыПризнания
		|		ПО ПрочиеРасходыОстатки.Организация = вт_ДокументыПризнания.Организация
		|		И ПрочиеРасходыОстатки.АналитикаРасходов = вт_ДокументыПризнания.ТемаЭтап
		|		И (вт_ДокументыПризнания.ХозяйственнаяОперация = &ХозяйственнаяОперация)";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	вт_ДокументыПризнанияСвернуто.Документ КАК Ссылка,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Подразделение КАК Подразделение,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Коэффициент КАК Коэффициент,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.ВидПризнанияРасходовБУ КАК ВидПризнанияРасходовБУ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.СтатьяРасходовБУ КАК СтатьяРасходовБУ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.АналитикаРасходовБУ КАК АналитикаРасходовБУ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.СтатьяРасходовБУ.ПринятиеКНалоговомуУчету КАК
	|		СтатьяРасходовПринятиеКНалоговомуУчетуБУ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.ВидПризнанияРасходовНУ КАК ВидПризнанияРасходовНУ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.СтатьяРасходовБУ.ТипРасходов КАК ТипРасходовБУ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.СтатьяРасходовНУ КАК СтатьяРасходовНУ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.АналитикаРасходовНУ КАК АналитикаРасходовНУ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.СтатьяРасходовНУ.ПринятиеКНалоговомуУчету КАК
	|		СтатьяРасходовПринятиеКНалоговомуУчетуНУ,
	|	ВЫБОР
	|		КОГДА
	|			ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.ВидПризнанияРасходовУУ = ЗНАЧЕНИЕ(Перечисление.ВидыПризнанияРасходовПоИсследованиямИРазработкам.ПустаяСсылка)
	|			ТОГДА ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.ВидПризнанияРасходовБУ
	|		ИНАЧЕ ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.ВидПризнанияРасходовУУ
	|	КОНЕЦ КАК ВидПризнанияРасходовУУ,
	|	ВЫБОР
	|		КОГДА
	|			ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.ВидПризнанияРасходовУУ = ЗНАЧЕНИЕ(Перечисление.ВидыПризнанияРасходовПоИсследованиямИРазработкам.ПустаяСсылка)
	|			ТОГДА ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.СтатьяРасходовБУ
	|		ИНАЧЕ ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.СтатьяРасходовУУ
	|	КОНЕЦ КАК СтатьяРасходовУУ,
	|	ВЫБОР
	|		КОГДА
	|			ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.ВидПризнанияРасходовУУ = ЗНАЧЕНИЕ(Перечисление.ВидыПризнанияРасходовПоИсследованиямИРазработкам.ПустаяСсылка)
	|			ТОГДА ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.АналитикаРасходовБУ
	|		ИНАЧЕ ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.АналитикаРасходовУУ
	|	КОНЕЦ КАК АналитикаРасходовУУ,
	|	ВЫБОР
	|		КОГДА
	|			ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.ВидПризнанияРасходовУУ = ЗНАЧЕНИЕ(Перечисление.ВидыПризнанияРасходовПоИсследованиямИРазработкам.ПустаяСсылка)
	|			ТОГДА ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.СтатьяРасходовБУ.ТипРасходов
	|		ИНАЧЕ ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.СтатьяРасходовУУ.ТипРасходов
	|	КОНЕЦ КАК ТипРасходовУУ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	вт_ДокументыПризнанияСвернуто КАК вт_ДокументыПризнанияСвернуто
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПризнаниеРасходовПоИсследованиямИРазработкам.Распределение КАК
	|			ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение
	|		ПО вт_ДокументыПризнанияСвернуто.Документ = ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Ссылка
	|ГДЕ
	|	вт_ДокументыПризнанияСвернуто.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И вт_ДокументыПризнанияСвернуто.Этап = &Этап
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ДокументыПризнанияСвернуто.Документ КАК ДокументПризнания,
	|	вт_ДокументыПризнанияСвернуто.Организация КАК Организация,
	|	вт_ДокументыПризнанияСвернуто.Организация КАК Этап
	|ИЗ
	|	вт_ДокументыПризнанияСвернуто КАК вт_ДокументыПризнанияСвернуто
	|ГДЕ
	|	вт_ДокументыПризнанияСвернуто.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И вт_ДокументыПризнанияСвернуто.Этап = &Этап";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов()) ;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьТаблицуПризнанияРасходов()
	
	ТаблицаПризнанияРасходов =  Новый ТаблицаЗначений();
	ТаблицаПризнанияРасходов.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаПризнанияРасходов.Колонки.Добавить("ПодразделениеДт", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	ТаблицаПризнанияРасходов.Колонки.Добавить("НаправлениеДеятельностиДт", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	ТаблицаПризнанияРасходов.Колонки.Добавить("СтатьяРасходовДт", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ТаблицаПризнанияРасходов.Колонки.Добавить("АналитикаРасходовДт", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);
	ТаблицаПризнанияРасходов.Колонки.Добавить("ПодразделениеКт", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	ТаблицаПризнанияРасходов.Колонки.Добавить("НаправлениеДеятельностиКт", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	ТаблицаПризнанияРасходов.Колонки.Добавить("СтатьяРасходовКт", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ТаблицаПризнанияРасходов.Колонки.Добавить("АналитикаРасходовКт", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);
	ТаблицаПризнанияРасходов.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Строка",,,Новый КвалификаторыСтроки(36)));
	ТаблицаПризнанияРасходов.Колонки.Добавить("СуммаРегл", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
	ТаблицаПризнанияРасходов.Колонки.Добавить("СуммаУпр", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
	ТаблицаПризнанияРасходов.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
	ТаблицаПризнанияРасходов.Колонки.Добавить("СуммаБезНДС", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
	ТаблицаПризнанияРасходов.Колонки.Добавить("ПостояннаяРазница", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
	ТаблицаПризнанияРасходов.Колонки.Добавить("ВременнаяРазница", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
	ТаблицаПризнанияРасходов.Колонки.Добавить("СуммаНДД", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
	ТаблицаПризнанияРасходов.Колонки.Добавить("ПрименятьКоэффициент", Новый ОписаниеТипов("Булево")); 
	
	Возврат ТаблицаПризнанияРасходов;
	
КонецФункции

Функция ПрименяетсяПовышающийКоэффициент(ВидПризнанияРасходов)
	
	КоэффициентПрименяется = Истина;
	
	Если ВидПризнанияРасходов = Перечисления.ВидыПризнанияРасходовПоИсследованиямИРазработкам.ПереносНаДругуюТему
		Или ВидПризнанияРасходов = Перечисления.ВидыПризнанияРасходовПоИсследованиямИРазработкам.ВключитьВСоставПроизводственныхЗатрат
		Или Не ЗначениеЗаполнено(ВидПризнанияРасходов) Тогда
			КоэффициентПрименяется = Ложь;
	КонецЕсли;
	
	Возврат КоэффициентПрименяется;
	
КонецФункции

Функция ПодготовитьДанныеДокументовПоПризнаниюРасходов(Организации, Период, МенеджерВТ)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПризнаниеРасходовПоИсследованиямИРазработкам.Организация КАК Организация,
	|	ПризнаниеРасходовПоИсследованиямИРазработкам.Ссылка КАК Документ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкам.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НАЧАЛОПЕРИОДА(&КонецПериода, День) КАК ДатаОтражения
	|ПОМЕСТИТЬ ДокументыКОтражению
	|ИЗ
	|	Документ.ПризнаниеРасходовПоИсследованиямИРазработкам КАК ПризнаниеРасходовПоИсследованиямИРазработкам
	|ГДЕ
	|	ПризнаниеРасходовПоИсследованиямИРазработкам.Организация В (&Организации)
	|	И ПризнаниеРасходовПоИсследованиямИРазработкам.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПризнаниеРасходовПоИсследованиямИРазработкам.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Ссылка КАК Документ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.АналитикаРасходовБУ КАК Аналитика
	|ПОМЕСТИТЬ вт_ДокументыРеклассификации
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПризнаниеРасходовПоИсследованиямИРазработкам.Распределение КАК
	|			ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение
	|		ПО ДокументыКОтражению.Документ = ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Ссылка
	|ГДЕ
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.АналитикаРасходовБУ
	|		ССЫЛКА Справочник.ТемыЭтапыИсследованийИРазработок
	|	И
	|		ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.АналитикаРасходовБУ <> ЗНАЧЕНИЕ(Справочник.ТемыЭтапыИсследованийИРазработок.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Ссылка КАК Документ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.АналитикаРасходовНУ КАК Аналитика
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПризнаниеРасходовПоИсследованиямИРазработкам.Распределение КАК
	|			ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение
	|		ПО ДокументыКОтражению.Документ = ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Ссылка
	|ГДЕ
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.АналитикаРасходовНУ
	|		ССЫЛКА Справочник.ТемыЭтапыИсследованийИРазработок
	|	И
	|		ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.АналитикаРасходовНУ <> ЗНАЧЕНИЕ(Справочник.ТемыЭтапыИсследованийИРазработок.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Ссылка КАК Документ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.АналитикаРасходовУУ КАК Аналитика
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПризнаниеРасходовПоИсследованиямИРазработкам.Распределение КАК
	|			ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение
	|		ПО ДокументыКОтражению.Документ = ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.Ссылка
	|ГДЕ
	|	ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.АналитикаРасходовУУ
	|		ССЫЛКА Справочник.ТемыЭтапыИсследованийИРазработок
	|	И
	|		ПризнаниеРасходовПоИсследованиямИРазработкамРаспределение.АналитикаРасходовУУ <> ЗНАЧЕНИЕ(Справочник.ТемыЭтапыИсследованийИРазработок.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Аналитика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыКОтражению.Организация КАК Организация,
	|	ДокументыКОтражению.Документ КАК Документ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамТемыЭтапыИсследованийИРазработок.ТемаЭтап КАК ТемаЭтап,
	|	ДокументыКОтражению.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА вт_ДокументыРеклассификации.Документ ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ) КАК Этап
	|ПОМЕСТИТЬ вт_ДокументыПризнания
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПризнаниеРасходовПоИсследованиямИРазработкам.ТемыЭтапыИсследованийИРазработок КАК
	|			ПризнаниеРасходовПоИсследованиямИРазработкамТемыЭтапыИсследованийИРазработок
	|		ПО ДокументыКОтражению.Документ = ПризнаниеРасходовПоИсследованиямИРазработкамТемыЭтапыИсследованийИРазработок.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДокументыРеклассификации КАК вт_ДокументыРеклассификации
	|		ПО ПризнаниеРасходовПоИсследованиямИРазработкамТемыЭтапыИсследованийИРазработок.ТемаЭтап = вт_ДокументыРеклассификации.Аналитика
	|		И
	|			ПризнаниеРасходовПоИсследованиямИРазработкамТемыЭтапыИсследованийИРазработок.Ссылка <> вт_ДокументыРеклассификации.Документ
	|СГРУППИРОВАТЬ ПО
	|	ДокументыКОтражению.Организация,
	|	ДокументыКОтражению.Документ,
	|	ПризнаниеРасходовПоИсследованиямИРазработкамТемыЭтапыИсследованийИРазработок.ТемаЭтап,
	|	ДокументыКОтражению.ХозяйственнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТемаЭтап,
	|	Организация,
	|	ХозяйственнаяОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ДокументыПризнания.Документ КАК Документ,
	|	вт_ДокументыПризнания.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	вт_ДокументыПризнания.Организация КАК Организация,
	|	вт_ДокументыПризнания.Этап
	|ПОМЕСТИТЬ вт_ДокументыПризнанияСвернуто
	|ИЗ
	|	вт_ДокументыПризнания КАК вт_ДокументыПризнания
	|СГРУППИРОВАТЬ ПО
	|	вт_ДокументыПризнания.Документ,
	|	вт_ДокументыПризнания.ХозяйственнаяОперация,
	|	вт_ДокументыПризнания.Организация,
	|	вт_ДокументыПризнания.Этап
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	ХозяйственнаяОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ПрочиеРасходы.Сумма,
	|	ПрочиеРасходы.СуммаБезНДС,
	|	ПрочиеРасходы.СуммаРегл,
	|	ПрочиеРасходы.ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазница,
	|	ПрочиеРасходы.СуммаУпр
	|ПОМЕСТИТЬ ВТКэшПрочиеРасходы
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|		ПО ПрочиеРасходы.Регистратор = ДокументыКОтражению.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыКОтражению.Документ КАК Ссылка
	|ПОМЕСТИТЬ ВТКэшИзмененныеДокументы
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ДокументыПризнанияСвернуто.Документ,
	|	вт_ДокументыПризнанияСвернуто.ХозяйственнаяОперация,
	|	вт_ДокументыПризнанияСвернуто.Организация,
	|	вт_ДокументыПризнанияСвернуто.Этап
	|ИЗ
	|	вт_ДокументыПризнанияСвернуто КАК вт_ДокументыПризнанияСвернуто
	|";
	
	Запрос.УстановитьПараметр("Организации", Организации);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Период));

	Возврат Запрос.Выполнить().Выбрать().Количество();
	
КонецФункции

Процедура ОчиститьДвиженияДокументовПоПризнаниюРасходов(МенеджерВТ)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыКОтражению.Документ
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Попытка
		
		Блокировка = Новый БлокировкаДанных;

		ЭлементБлокировки = Блокировка.Добавить("Документ.ПризнаниеРасходовПоИсследованиямИРазработкам");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "Документ");

		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрочиеРасходы.НаборЗаписей");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Регистратор", "Документ");
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.НаборЗаписей");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Регистратор", "Документ");
		
		Блокировка.Заблокировать();

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

			НаборЗаписей = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Документ);
			НаборЗаписей.Записать();
			
			НаборЗаписей = РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Документ);
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
		УчетРасходовПоИсследованиямИРазработкамЛокализация.ВернутьДокументыКОтражению(МенеджерВТ);
		
	Исключение
		
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());

		ВызватьИсключение ТекстОшибки;

	КонецПопытки;

	УчетРасходовПоИсследованиямИРазработкамЛокализация.ОчиститьДвиженияДокументовПоПризнаниюРасходов(МенеджерВТ);
	
КонецПроцедуры

Процедура СформироватьДокументыПризнанияРасходовПоИсследованиям(ДанныеПризнания, ДанныеРаспределения, ДокументыРаспределения, Период, ДополнительныеСвойства, МенеджерВТ)
	
	Организации = ОбщегоНазначенияКлиентСервер.СвернутьМассив(
		ДополнительныеСвойства.ОрганизацииСПризнаниемИсследований.ВыгрузитьКолонку("Организация"));
	
	Для Каждого Организация Из Организации Цикл
		
		РаспределениеРасходовПоОрганизацииБУ = ДополнительныеСвойства.ОрганизацииСПризнаниемИсследований.НайтиСтроки(
			Новый Структура("Организация, УчетнаяПолитика", Организация, "БухУчет"));
		РаспределениеРасходовПоОрганизацииУУ = ДополнительныеСвойства.ОрганизацииСПризнаниемИсследований.НайтиСтроки(
			Новый Структура("Организация, УчетнаяПолитика", Организация, "ФинУчет"));
			
		АналитикаКПризнанию = ДанныеПризнания.Скопировать(
			Новый Структура("Организация, ДокументПризнания", Организация, Документы.ПризнаниеРасходовПоИсследованиямИРазработкам.ПустаяСсылка()),
			"АналитикаРасходов");
		АналитикаКПризнанию.Свернуть("АналитикаРасходов");
			
		Если АналитикаКПризнанию.Количество() > 0 Тогда
			
			ДокументПризнания = Документы.ПризнаниеРасходовПоИсследованиямИРазработкам.СоздатьДокумент();
			ДокументПризнания.Организация = Организация;
			ДокументПризнания.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПризнаниеРасходовПоИсследованиям;
			ДокументПризнания.Дата = КонецМесяца(Период);
	
			Для Каждого СтрокаАналитики Из АналитикаКПризнанию Цикл
				СтрокаТемы = ДокументПризнания.ТемыЭтапыИсследованийИРазработок.Добавить();
				СтрокаТемы.ТемаЭтап = СтрокаАналитики.АналитикаРасходов;
			КонецЦикла;
	
			Распределение = ДокументПризнания.Распределение.Выгрузить();
			Распределение.Колонки.Добавить("ТипРасходовУУ");
			Распределение.Колонки.Добавить("ТипРасходовБУ");
			
			СтрокаРаспределения = Распределение.Добавить();
			СтрокаРаспределения.ВидПризнанияРасходовНУ = Перечисления.ВидыПризнанияРасходовПоИсследованиямИРазработкам.НеВыполнятьПризнаниеРасходов;
			Если РаспределениеРасходовПоОрганизацииБУ.Количество() > 0 Тогда
				СтрокаРаспределения.АналитикаРасходовБУ = РаспределениеРасходовПоОрганизацииБУ[0].АналитикаРасходов;
				СтрокаРаспределения.СтатьяРасходовБУ = РаспределениеРасходовПоОрганизацииБУ[0].СтатьяРасходов;
				СтрокаРаспределения.ВидПризнанияРасходовБУ = Перечисления.ВидыПризнанияРасходовПоИсследованиямИРазработкам.ПризнаниеВСоставеТекущихРасходов;
				СтрокаРаспределения.ТипРасходовБУ = РаспределениеРасходовПоОрганизацииБУ[0].ТипРасходов;
			Иначе
				СтрокаРаспределения.ВидПризнанияРасходовБУ = Перечисления.ВидыПризнанияРасходовПоИсследованиямИРазработкам.НеВыполнятьПризнаниеРасходов;
			КонецЕсли;
			Если РаспределениеРасходовПоОрганизацииУУ.Количество() > 0 Тогда
				СтрокаРаспределения.АналитикаРасходовУУ = РаспределениеРасходовПоОрганизацииУУ[0].АналитикаРасходов;
				СтрокаРаспределения.СтатьяРасходовУУ = РаспределениеРасходовПоОрганизацииУУ[0].СтатьяРасходов;
				СтрокаРаспределения.ВидПризнанияРасходовУУ = Перечисления.ВидыПризнанияРасходовПоИсследованиямИРазработкам.ПризнаниеВСоставеТекущихРасходов;
				СтрокаРаспределения.ТипРасходовУУ = РаспределениеРасходовПоОрганизацииУУ[0].ТипРасходов;
			Иначе
				СтрокаРаспределения.ВидПризнанияРасходовУУ = Перечисления.ВидыПризнанияРасходовПоИсследованиямИРазработкам.НеВыполнятьПризнаниеРасходов;
			КонецЕсли;
			СтрокаРаспределения.Коэффициент = 1;
			
			//Дополним данные выборки данными из созданного документа
			ДокументПризнания.Распределение.Загрузить(Распределение);
			ДокументПризнания.Записать(РежимЗаписиДокумента.Проведение);
			
			СтрокаДокумент = ДокументыРаспределения.Добавить();
			СтрокаДокумент.ДокументПризнания = ДокументПризнания.Ссылка;
			СтрокаДокумент.Организация = Организация;
			
			СтрокаТаблицыРаспределения = ДанныеРаспределения.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыРаспределения, СтрокаРаспределения);
			СтрокаТаблицыРаспределения.Ссылка = ДокументПризнания.Ссылка;
			
			СтрокиДанныхПризнания = ДанныеПризнания.НайтиСтроки(Новый Структура("Организация, ДокументПризнания",
				Организация,
				Документы.ПризнаниеРасходовПоИсследованиямИРазработкам.ПустаяСсылка()));
			Для Каждого СтрокаДанныхПризнания Из СтрокиДанныхПризнания Цикл
				СтрокаДанныхПризнания.ДокументПризнания = ДокументПризнания.Ссылка;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	// Дозаполним временную таблицу с измененными документами для последующего формирования заданий к расчету стоимости ОС и НМА
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("ДокументыРаспределения", ДокументыРаспределения);
	Запрос.Текст = "
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКэшИзмененныеДокументы
	|;
	|
	|ВЫБРАТЬ
	|	ДокументыРаспределения.ДокументПризнания КАК Ссылка
	|ПОМЕСТИТЬ СозданныеДокументы
	|ИЗ
	|	&ДокументыРаспределения КАК ДокументыРаспределения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыКОтражению.Документ КАК Ссылка
	|ПОМЕСТИТЬ ВТКэшИзмененныеДокументы
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СозданныеДокументы.Ссылка
	|ИЗ
	|	СозданныеДокументы КАК СозданныеДокументы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СозданныеДокументы";
	
	Запрос.Выполнить();
		
КонецПроцедуры

Процедура ВыполнитьПризнаниеРасходовПоИсследованиям(Период, ДополнительныеСвойства, МенеджерВТ)
	
	Если ДополнительныеСвойства.Свойство("ОрганизацииСПризнаниемИсследований") 
		И ДополнительныеСвойства.ОрганизацииСПризнаниемИсследований.Количество()> 0 Тогда
		
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПризнаниеРасходовПоИсследованиям;
		ДатаРасчета = КонецМесяца(Период);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = ПолучитьТекстЗапросаПоПризнаниюРасходов(ХозяйственнаяОперация);
		Запрос.УстановитьПараметр("ГраницаКонецПериода", Новый Граница(ДатаРасчета, ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Организации", ДополнительныеСвойства.ОрганизацииСПризнаниемИсследований.ВыгрузитьКолонку("Организация"));
		Запрос.УстановитьПараметр("ОрганизацииСПризнаниемИсследований", ДополнительныеСвойства.ОрганизацииСПризнаниемИсследований);
		Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);
		Запрос.УстановитьПараметр("Этап", 1);
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ДанныеПризнания = РезультатЗапроса[2].Выгрузить();
		ДанныеПризнания.Индексы.Добавить("ДокументПризнания");
		ДанныеПризнания.Индексы.Добавить("АналитикаРасходов, ДокументПризнания");
		ДанныеПризнания.Индексы.Добавить("Организация, ДокументПризнания");
		
		ДанныеРаспределения = РезультатЗапроса[3].Выгрузить();
		ДанныеРаспределения.Индексы.Добавить("Ссылка");
		
		ДокументыРаспределения = РезультатЗапроса[4].Выгрузить();
		
		СформироватьДокументыПризнанияРасходовПоИсследованиям(
			ДанныеПризнания,
			ДанныеРаспределения,
			ДокументыРаспределения,
			Период,
			ДополнительныеСвойства,
			МенеджерВТ);
		
		ТаблицаПризнанияРасходов = ПолучитьТаблицуПризнанияРасходов();
		
		Для Каждого СтрокаДокументПризнания Из ДокументыРаспределения Цикл
			
			ДокументПризнания = СтрокаДокументПризнания.ДокументПризнания;
			
			ДвиженияПрочиеРасходы = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей();
			ДвиженияПрочиеРасходы.Отбор.Регистратор.Установить(ДокументПризнания);
			
			АналитикаКПризнанию = ДанныеПризнания.Скопировать(Новый Структура("ДокументПризнания", ДокументПризнания), "АналитикаРасходов");
			АналитикаКПризнанию.Свернуть("АналитикаРасходов");
			
			Для Каждого СтрокаАналитики Из АналитикаКПризнанию Цикл
				
				СтрокиДанных = ДанныеПризнания.НайтиСтроки(Новый Структура("АналитикаРасходов, ДокументПризнания", 
				СтрокаАналитики.АналитикаРасходов, ДокументПризнания));
				
				Если СтрокиДанных.Количество() > 0 Тогда
					
					Распределение = ПолучитьТаблицуРаспределения(ДокументПризнания, ДанныеРаспределения);
					
					Если Распределение.Количество() > 0 Тогда
						
						Для Каждого СтрокаДанных Из СтрокиДанных Цикл
							
							ТаблицаПризнанияРасходов.Очистить();
							
							МассивКоэффициентов = Распределение.ВыгрузитьКолонку("Коэффициент");
							СуммаРеглРаспределение = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДанных.СуммаРегл, МассивКоэффициентов);
							СуммаУпрРаспределение = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДанных.СуммаУпр, МассивКоэффициентов);
							СуммаРаспределение = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДанных.Сумма, МассивКоэффициентов);
							СуммаБезНДСРаспределение = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДанных.СуммаБезНДС, МассивКоэффициентов);
							ПостояннаяРазницаРаспределение = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДанных.ПостояннаяРазница, МассивКоэффициентов);
							
							Для Сч = 0 По МассивКоэффициентов.Количество() - 1 Цикл
								
								СтрокаРаспределения = Распределение[Сч];
								Сумма = ?(СуммаРаспределение = Неопределено, 0, СуммаРаспределение[Сч]);
								СуммаРегл = ?(СуммаРеглРаспределение = Неопределено, 0, СуммаРеглРаспределение[Сч]);
								СуммаУпр = ?(СуммаУпрРаспределение = Неопределено, 0, СуммаУпрРаспределение[Сч]);
								ПостояннаяРазница = ?(ПостояннаяРазницаРаспределение = Неопределено, 0, ПостояннаяРазницаРаспределение[Сч]);
								
								Если ЗначениеЗаполнено(СтрокаРаспределения.СтатьяРасходовУУ) Тогда
									Если СтрокаРаспределения.ТипРасходовУУ = Перечисления.ТипыРасходов.Производственные Тогда
										СуммаБезНДС = ?(СуммаБезНДСРаспределение = Неопределено, 0, СуммаБезНДСРаспределение[Сч]);
									Иначе
										СуммаБезНДС = 0;
									КонецЕсли;
								Иначе
									Если СтрокаРаспределения.ТипРасходовБУ = Перечисления.ТипыРасходов.Производственные Тогда
										СуммаБезНДС = ?(СуммаБезНДСРаспределение = Неопределено, 0, СуммаБезНДСРаспределение[Сч]);
									Иначе
										СуммаБезНДС = 0;
									КонецЕсли;
								КонецЕсли;
								
								//Выполнение признания расходов в БУ
								Если СтрокаРаспределения.ВидПризнанияРасходовБУ <> Перечисления.ВидыПризнанияРасходовПоИсследованиямИРазработкам.НеВыполнятьПризнаниеРасходов
									И СуммаРегл <> 0 Тогда
									
									Строка = ТаблицаПризнанияРасходов.Добавить();
									Строка.Организация = СтрокаДанных.Организация;
									Строка.ПодразделениеКт = СтрокаДанных.Подразделение;
									Строка.НаправлениеДеятельностиКт = СтрокаДанных.НаправлениеДеятельности;
									Строка.СтатьяРасходовКт = СтрокаДанных.СтатьяРасходов;
									Строка.АналитикаРасходовКт = СтрокаДанных.АналитикаРасходов;
									Строка.ПодразделениеДт = ?(ЗначениеЗаполнено(СтрокаРаспределения.Подразделение), СтрокаРаспределения.Подразделение, Строка.ПодразделениеКт);
									Строка.НаправлениеДеятельностиДт = ?(ЗначениеЗаполнено(СтрокаРаспределения.НаправлениеДеятельности), СтрокаРаспределения.НаправлениеДеятельности, Строка.НаправлениеДеятельностиКт);
									Строка.СтатьяРасходовДт = СтрокаРаспределения.СтатьяРасходовБУ;
									Строка.АналитикаРасходовДт = СтрокаРаспределения.АналитикаРасходовБУ;
									Строка.ИдентификаторСтроки = СтрокаРаспределения.ИдентификаторСтроки;
									Строка.СуммаРегл = СуммаРегл;
									Строка.ПостояннаяРазница = ?(ПостояннаяРазница > 0, ПостояннаяРазница, 0);
									Строка.ВременнаяРазница = СуммаРегл- Строка.ПостояннаяРазница;
									
								КонецЕсли;
								
								//Выполнение признания расходов в УУ
								Если СтрокаРаспределения.ВидПризнанияРасходовУУ <> Перечисления.ВидыПризнанияРасходовПоИсследованиямИРазработкам.НеВыполнятьПризнаниеРасходов Тогда
									
									Строка = ТаблицаПризнанияРасходов.Добавить();
									Строка.Организация = СтрокаДанных.Организация;
									Строка.ПодразделениеКт = СтрокаДанных.Подразделение;
									Строка.НаправлениеДеятельностиКт = СтрокаДанных.НаправлениеДеятельности;
									Строка.СтатьяРасходовКт = СтрокаДанных.СтатьяРасходов;
									Строка.АналитикаРасходовКт = СтрокаДанных.АналитикаРасходов;
									Строка.ПодразделениеДт = ?(ЗначениеЗаполнено(СтрокаРаспределения.Подразделение), СтрокаРаспределения.Подразделение, Строка.ПодразделениеКт);
									Строка.НаправлениеДеятельностиДт = ?(ЗначениеЗаполнено(СтрокаРаспределения.НаправлениеДеятельности), СтрокаРаспределения.НаправлениеДеятельности, Строка.НаправлениеДеятельностиКт);
									Строка.СтатьяРасходовДт = СтрокаРаспределения.СтатьяРасходовУУ;
									Строка.АналитикаРасходовДт = СтрокаРаспределения.АналитикаРасходовУУ;
									Строка.ИдентификаторСтроки = СтрокаРаспределения.ИдентификаторСтроки;
									
									Строка.Сумма = Сумма;
									Строка.СуммаБезНДС = СуммаБезНДС;
									Строка.СуммаУпр = СуммаУпр;
									
								КонецЕсли;
							КонецЦикла;
							
							ТаблицаПризнанияРасходов.Свернуть(
							"Организация, ПодразделениеКт, НаправлениеДеятельностиКт, СтатьяРасходовКт,
							|АналитикаРасходовКт, ПодразделениеДт, НаправлениеДеятельностиДт, СтатьяРасходовДт,
							|АналитикаРасходовДт, ИдентификаторСтроки",
							"СуммаРегл, СуммаУпр, Сумма, СуммаБезНДС, ПостояннаяРазница, ВременнаяРазница");
							
							Для Каждого СтрокаПризнанияРасходов Из ТаблицаПризнанияРасходов Цикл
								
								СтрокаСписания = ДвиженияПрочиеРасходы.Добавить();
								СтрокаСписания.ВидДвижения = ВидДвиженияНакопления.Расход;
								СтрокаСписания.Организация = СтрокаПризнанияРасходов.Организация;
								СтрокаСписания.Подразделение = СтрокаПризнанияРасходов.ПодразделениеКт;
								СтрокаСписания.НаправлениеДеятельности = СтрокаПризнанияРасходов.НаправлениеДеятельностиКт;
								СтрокаСписания.СтатьяРасходов = СтрокаПризнанияРасходов.СтатьяРасходовКт;
								СтрокаСписания.АналитикаРасходов = СтрокаПризнанияРасходов.АналитикаРасходовКт;
								СтрокаСписания.Период = ДатаРасчета;
								СтрокаСписания.ИдентификаторФинЗаписи = Новый УникальныйИдентификатор();
								СтрокаСписания.ИдентификаторСтроки = СтрокаПризнанияРасходов.ИдентификаторСтроки;
								СтрокаСписания.Сумма = СтрокаПризнанияРасходов.Сумма;
								СтрокаСписания.СуммаБезНДС = СтрокаПризнанияРасходов.СуммаБезНДС;
								СтрокаСписания.СуммаУпр = СтрокаПризнанияРасходов.СуммаУпр;
								СтрокаСписания.СуммаРегл = СтрокаПризнанияРасходов.СуммаРегл;
								СтрокаСписания.ПостояннаяРазница = СтрокаПризнанияРасходов.ПостояннаяРазница;
								СтрокаСписания.ВременнаяРазница = СтрокаПризнанияРасходов.ВременнаяРазница;
								
								СтрокаПризнания = ДвиженияПрочиеРасходы.Добавить();
								СтрокаПризнания.Организация = СтрокаДанных.Организация;
								СтрокаПризнания.ВидДвижения = ВидДвиженияНакопления.Приход;
								СтрокаПризнания.Подразделение = СтрокаПризнанияРасходов.ПодразделениеДт;
								СтрокаПризнания.НаправлениеДеятельности = СтрокаПризнанияРасходов.НаправлениеДеятельностиДт;
								СтрокаПризнания.СтатьяРасходов = СтрокаПризнанияРасходов.СтатьяРасходовДт;
								СтрокаПризнания.АналитикаРасходов = СтрокаПризнанияРасходов.АналитикаРасходовДт;
								СтрокаПризнания.Период = ДатаРасчета;
								СтрокаПризнания.ИдентификаторФинЗаписи = СтрокаСписания.ИдентификаторФинЗаписи;
								СтрокаПризнания.ИдентификаторСтроки = СтрокаПризнанияРасходов.ИдентификаторСтроки;
								СтрокаПризнания.Сумма = СтрокаПризнанияРасходов.Сумма;
								СтрокаПризнания.СуммаБезНДС = СтрокаПризнанияРасходов.СуммаБезНДС;
								СтрокаПризнания.СуммаУпр = СтрокаПризнанияРасходов.СуммаУпр;
								СтрокаПризнания.СуммаРегл = СтрокаПризнанияРасходов.СуммаРегл;
								СтрокаПризнания.ПостояннаяРазница = СтрокаПризнанияРасходов.ПостояннаяРазница;
								СтрокаПризнания.ВременнаяРазница = СтрокаПризнанияРасходов.ВременнаяРазница;
								
							КонецЦикла;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			ДвиженияПрочиеРасходы.Записать();
			
			Движения = Новый Структура("ПрочиеРасходы", ДвиженияПрочиеРасходы);
			
			СформироватьДвиженияДоходыРасходыПрочиеАктивыПассивы(
					Движения,
					ДокументПризнания,
					ДатаРасчета,
					ХозяйственнаяОперация);
			
			Если ПолучитьФункциональнуюОпцию("ФормироватьУправленческийБаланс") Тогда
				Обработки.ДвиженияАктивовПассивов.ОтразитьДокументыВУправленческомБалансе(ДокументПризнания, Движения);
			КонецЕсли;
			
			//++ НЕ УТКА
			МеждународныйУчетПроведениеСервер.ЗарегистрироватьКОтражению(
			Новый Структура("Ссылка, Движения, Дата, Организация", ДокументПризнания, Движения, ДатаРасчета, СтрокаДокументПризнания.Организация),
			Новый Структура,
			Движения);
			Если Движения.Свойство("ОтражениеДокументовВМеждународномУчете") Тогда
				ДвиженияОтраженияВМУ = Движения.ОтражениеДокументовВМеждународномУчете; //РегистрСведенийНаборЗаписей - 
				ДвиженияОтраженияВМУ.Записать();
			КонецЕсли;
			//-- НЕ УТКА

		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьПризнаниеРасходовПриЗавершенииЭтапа(Организации, Период, МенеджерВТ)
	
	ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗавершениеЭтаповИсследованийИРазработок;
	ДатаРасчета= КонецМесяца(Период);
	
	//Для ХО "Завершение этапов исследований и разработок" признание идет в два этапа:
	//первый - выполнение признания и реклассификации;
	//второй - признание по документам, в которых есть темы, на которые ранее в этом же месяце реклассифицировались расходы.
	Для Этап = 1 По 2 Цикл
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = ПолучитьТекстЗапросаПоПризнаниюРасходов(ХозяйственнаяОперация);
		Запрос.УстановитьПараметр("ГраницаКонецПериода", Новый Граница(ДатаРасчета, ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Организации", Организации);
		Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);
		Запрос.УстановитьПараметр("Этап", Этап);
	
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ДанныеПризнания = РезультатЗапроса[0].Выгрузить();
		ДанныеПризнания.Индексы.Добавить("ДокументПризнания");
		ДанныеПризнания.Индексы.Добавить("АналитикаРасходов, ДокументПризнания");
		
		ДанныеРаспределения = РезультатЗапроса[1].Выгрузить();
		ДанныеРаспределения.Индексы.Добавить("Ссылка");
			
		ДокуметыЗавершенияЭтапа = РезультатЗапроса[2].Выгрузить();
	
		ТаблицаПризнанияРасходов = ПолучитьТаблицуПризнанияРасходов();
		
		Для Каждого СтрокаДокументПризнания Из ДокуметыЗавершенияЭтапа Цикл
			
			ДокументПризнания = СтрокаДокументПризнания.ДокументПризнания;
			
			ДвиженияПрочиеРасходы = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей();
			ДвиженияПрочиеРасходы.Отбор.Регистратор.Установить(ДокументПризнания);
			
			ТаблицаДвижений = ДвиженияПрочиеРасходы.Выгрузить();
			ТаблицаДвижений.Колонки.Добавить("ПрименятьКоэффициент", Новый ОписаниеТипов("Булево"));
			
			АналитикаКПризнанию = ДанныеПризнания.Скопировать(Новый Структура("ДокументПризнания", ДокументПризнания), "АналитикаРасходов");
			АналитикаКПризнанию.Свернуть("АналитикаРасходов");
			
			Для Каждого СтрокаАналитики Из АналитикаКПризнанию Цикл
	
		 		СтрокиДанных = ДанныеПризнания.НайтиСтроки(Новый Структура("АналитикаРасходов, ДокументПризнания", 
					СтрокаАналитики.АналитикаРасходов, ДокументПризнания));
	
				Если СтрокиДанных.Количество() > 0 Тогда
	
					Распределение = ПолучитьТаблицуРаспределения(ДокументПризнания, ДанныеРаспределения);
	
					Если Распределение.Количество() > 0 Тогда
						
						Для Каждого СтрокаДанных Из СтрокиДанных Цикл
							
							ТаблицаПризнанияРасходов.Очистить();
							
							МассивКоэффициентов = Распределение.ВыгрузитьКолонку("Коэффициент");
							СуммаРеглРаспределение = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДанных.СуммаРегл, МассивКоэффициентов);
							СуммаУпрРаспределение = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДанных.СуммаУпр, МассивКоэффициентов);
							СуммаРаспределение = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДанных.Сумма, МассивКоэффициентов);
							СуммаБезНДСРаспределение = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДанных.СуммаБезНДС, МассивКоэффициентов);
							ПостояннаяРазницаРаспределение = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДанных.ПостояннаяРазница, МассивКоэффициентов);
							ВременнаяРазницаРаспределение = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДанных.ВременнаяРазница, МассивКоэффициентов);
							СуммаНДДРаспределение =  ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДанных.СуммаНДД, МассивКоэффициентов);
							
							Для Сч = 0 По МассивКоэффициентов.Количество() - 1 Цикл
								
								СтрокаРаспределения = Распределение[Сч];
								СуммаРегл = ?(СуммаРеглРаспределение = Неопределено, 0, СуммаРеглРаспределение[Сч]);
								СуммаУпр = ?(СуммаУпрРаспределение = Неопределено, 0, СуммаУпрРаспределение[Сч]);
								Сумма = ?(СуммаРаспределение = Неопределено, 0, СуммаРаспределение[Сч]);
								ПостояннаяРазница = ?(ПостояннаяРазницаРаспределение = Неопределено, 0, ПостояннаяРазницаРаспределение[Сч]);
								ВременнаяРазница = ?(ВременнаяРазницаРаспределение = Неопределено, 0, ВременнаяРазницаРаспределение[Сч]);
								СуммаНУ = СуммаРегл - ПостояннаяРазница - ВременнаяРазница;
								СуммаНДД = ?(СуммаНДДРаспределение = Неопределено, 0, СуммаНДДРаспределение[Сч]);
								
								Если ЗначениеЗаполнено(СтрокаРаспределения.СтатьяРасходовУУ) Тогда
									Если СтрокаРаспределения.ТипРасходовУУ = Перечисления.ТипыРасходов.Производственные Тогда
										СуммаБезНДС = ?(СуммаБезНДСРаспределение = Неопределено, 0, СуммаБезНДСРаспределение[Сч]);
									Иначе
										СуммаБезНДС = 0;
									КонецЕсли;
								Иначе
									Если СтрокаРаспределения.ТипРасходовБУ = Перечисления.ТипыРасходов.Производственные Тогда
										СуммаБезНДС = ?(СуммаБезНДСРаспределение = Неопределено, 0, СуммаБезНДСРаспределение[Сч]);
									Иначе
										СуммаБезНДС = 0;
									КонецЕсли;
								КонецЕсли;
								
								//Выполнение признания расходов в БУ
								Если СтрокаРаспределения.ВидПризнанияРасходовБУ <> Перечисления.ВидыПризнанияРасходовПоИсследованиямИРазработкам.НеВыполнятьПризнаниеРасходов
									И СуммаРегл <> 0 Тогда
										
									Строка = ТаблицаПризнанияРасходов.Добавить();
									Строка.ПодразделениеДт = СтрокаРаспределения.Подразделение;
									Строка.НаправлениеДеятельностиДт = СтрокаРаспределения.НаправлениеДеятельности;
									Строка.СтатьяРасходовДт = СтрокаРаспределения.СтатьяРасходовБУ;
									Строка.АналитикаРасходовДт = СтрокаРаспределения.АналитикаРасходовБУ;
									Строка.Организация = СтрокаДанных.Организация;
									Строка.ПодразделениеКт = СтрокаДанных.Подразделение;
									Строка.НаправлениеДеятельностиКт = СтрокаДанных.НаправлениеДеятельности;
									Строка.СтатьяРасходовКт = СтрокаДанных.СтатьяРасходов;
									Строка.АналитикаРасходовКт = СтрокаДанных.АналитикаРасходов;
									Строка.ИдентификаторСтроки = СтрокаРаспределения.ИдентификаторСтроки;
									Строка.ПрименятьКоэффициент = ПрименяетсяПовышающийКоэффициент(СтрокаРаспределения.ВидПризнанияРасходовНУ);
									
									Строка.СуммаРегл = СуммаРегл;
									Если ПостояннаяРазница > 0 Тогда
										Строка.ПостояннаяРазница = ПостояннаяРазница;
									КонецЕсли;
	
									Строка.ВременнаяРазница = Строка.СуммаРегл - Строка.ПостояннаяРазница;
										
								КонецЕсли;
									
								//Выполнение признания расходов в УУ
								Если СтрокаРаспределения.ВидПризнанияРасходовУУ <> Перечисления.ВидыПризнанияРасходовПоИсследованиямИРазработкам.НеВыполнятьПризнаниеРасходов Тогда
									
									Строка = ТаблицаПризнанияРасходов.Добавить();
									Строка.ПодразделениеДт = СтрокаРаспределения.Подразделение;
									Строка.НаправлениеДеятельностиДт = СтрокаРаспределения.НаправлениеДеятельности;
									Строка.СтатьяРасходовДт = СтрокаРаспределения.СтатьяРасходовУУ;
									Строка.АналитикаРасходовДт = СтрокаРаспределения.АналитикаРасходовУУ;
									Строка.Организация = СтрокаДанных.Организация;
									Строка.ПодразделениеКт = СтрокаДанных.Подразделение;
									Строка.НаправлениеДеятельностиКт = СтрокаДанных.НаправлениеДеятельности;
									Строка.СтатьяРасходовКт = СтрокаДанных.СтатьяРасходов;
									Строка.АналитикаРасходовКт = СтрокаДанных.АналитикаРасходов;
									Строка.ИдентификаторСтроки = СтрокаРаспределения.ИдентификаторСтроки;
									Строка.ПрименятьКоэффициент = ПрименяетсяПовышающийКоэффициент(СтрокаРаспределения.ВидПризнанияРасходовНУ);
									
									Строка.Сумма = Сумма;
									Строка.СуммаБезНДС = СуммаБезНДС;
									Строка.СуммаУпр = СуммаУпр;
									
								КонецЕсли;
								
								//Выполнение признания расходов в НУ
								Если СуммаНУ <> 0 И ЗначениеЗаполнено(СтрокаРаспределения.ВидПризнанияРасходовНУ) Тогда
	
									Строка = ТаблицаПризнанияРасходов.Добавить();
									Строка.ПодразделениеДт = СтрокаРаспределения.Подразделение;
									Строка.НаправлениеДеятельностиДт = СтрокаРаспределения.НаправлениеДеятельности;
									Строка.СтатьяРасходовДт = СтрокаРаспределения.СтатьяРасходовНУ;
									Строка.АналитикаРасходовДт = СтрокаРаспределения.АналитикаРасходовНУ;
									Строка.Организация = СтрокаДанных.Организация;
									Строка.ПодразделениеКт = СтрокаДанных.Подразделение;
									Строка.НаправлениеДеятельностиКт = СтрокаДанных.НаправлениеДеятельности;
									Строка.СтатьяРасходовКт = СтрокаДанных.СтатьяРасходов;
									Строка.АналитикаРасходовКт = СтрокаДанных.АналитикаРасходов;
									Строка.ИдентификаторСтроки = СтрокаРаспределения.ИдентификаторСтроки;
									Строка.ПрименятьКоэффициент = ПрименяетсяПовышающийКоэффициент(СтрокаРаспределения.ВидПризнанияРасходовНУ);
									
									СтатьяПринимаетсяКНалоговомуУчету = СтрокаРаспределения.СтатьяРасходовПринятиеКНалоговомуУчетуНУ;
										
									Если ПостояннаяРазница < 0 Тогда
										Строка.ПостояннаяРазница = ПостояннаяРазница;
									КонецЕсли;
			
									Если СтатьяПринимаетсяКНалоговомуУчету = Истина Тогда
										Строка.ВременнаяРазница = - СуммаНУ- Строка.ПостояннаяРазница;
									Иначе
										Строка.ПостояннаяРазница = Строка.ПостояннаяРазница + СуммаНУ;
										Строка.ВременнаяРазница = - Строка.ПостояннаяРазница;
									КонецЕсли;
									
								КонецЕсли;
								
								// По сумме НДД отрабатываем только реклассификации расходов в другой тип актива или тему
								// Другие случаи отрабатываются признанием расходов НДД
								Если СуммаНДД <> 0 
									И ЗначениеЗаполнено(СтрокаРаспределения.ВидПризнанияРасходовНУ) 
									И (СтрокаРаспределения.ВидПризнанияРасходовНУ = Перечисления.ВидыПризнанияРасходовПоИсследованиямИРазработкам.ПризнаниеВСоставеНМА
										ИЛИ СтрокаРаспределения.ВидПризнанияРасходовНУ = Перечисления.ВидыПризнанияРасходовПоИсследованиямИРазработкам.ПереносНаДругуюТему
										ИЛИ СтрокаРаспределения.ВидПризнанияРасходовНУ = Перечисления.ВидыПризнанияРасходовПоИсследованиямИРазработкам.ПризнаниеВСоставеРБП) Тогда
									
									Строка = ТаблицаПризнанияРасходов.Добавить();
									Строка.ПодразделениеДт = СтрокаРаспределения.Подразделение;
									Строка.НаправлениеДеятельностиДт = СтрокаРаспределения.НаправлениеДеятельности;
									Строка.СтатьяРасходовДт = СтрокаРаспределения.СтатьяРасходовНУ;
									Строка.АналитикаРасходовДт = СтрокаРаспределения.АналитикаРасходовНУ;
									Строка.Организация = СтрокаДанных.Организация;
									Строка.ПодразделениеКт = СтрокаДанных.Подразделение;
									Строка.НаправлениеДеятельностиКт = СтрокаДанных.НаправлениеДеятельности;
									Строка.СтатьяРасходовКт = СтрокаДанных.СтатьяРасходов;
									Строка.АналитикаРасходовКт = СтрокаДанных.АналитикаРасходов;
									Строка.ИдентификаторСтроки = СтрокаРаспределения.ИдентификаторСтроки;
									
									СтатьяПринимаетсяКНалоговомуУчету = СтрокаРаспределения.СтатьяРасходовПринятиеКНалоговомуУчетуНУ;
										
									Строка.СуммаНДД = СуммаНДД;
									
								КонецЕсли;
								
							КонецЦикла;
							
							ТаблицаПризнанияРасходов.Свернуть(
								"Организация, ПодразделениеКт, НаправлениеДеятельностиКт, СтатьяРасходовКт, АналитикаРасходовКт,
								|ПодразделениеДт, НаправлениеДеятельностиДт, СтатьяРасходовДт, АналитикаРасходовДт,
								|ИдентификаторСтроки, ПрименятьКоэффициент",
								"СуммаРегл, СуммаУпр, Сумма, СуммаБезНДС, ПостояннаяРазница, ВременнаяРазница, СуммаНДД");
							
							Для Каждого СтрокаПризнанияРасходов Из ТаблицаПризнанияРасходов Цикл
								
								СтрокаСписания = ТаблицаДвижений.Добавить();
								СтрокаСписания.ВидДвижения = ВидДвиженияНакопления.Расход;
								СтрокаСписания.Организация = СтрокаПризнанияРасходов.Организация;
								СтрокаСписания.Подразделение = СтрокаПризнанияРасходов.ПодразделениеКт;
								СтрокаСписания.НаправлениеДеятельности = СтрокаПризнанияРасходов.НаправлениеДеятельностиКт;
								СтрокаСписания.СтатьяРасходов = СтрокаПризнанияРасходов.СтатьяРасходовКт;
								СтрокаСписания.АналитикаРасходов = СтрокаПризнанияРасходов.АналитикаРасходовКт;
								СтрокаСписания.Период = ДатаРасчета;
								СтрокаСписания.ИдентификаторФинЗаписи = Новый УникальныйИдентификатор();
								СтрокаСписания.ИдентификаторСтроки = СтрокаПризнанияРасходов.ИдентификаторСтроки;
								СтрокаСписания.Сумма = СтрокаПризнанияРасходов.Сумма;
								СтрокаСписания.СуммаБезНДС = СтрокаПризнанияРасходов.СуммаБезНДС;
								СтрокаСписания.СуммаУпр = СтрокаПризнанияРасходов.СуммаУпр;
								СтрокаСписания.СуммаРегл = СтрокаПризнанияРасходов.СуммаРегл;
								СтрокаСписания.ПостояннаяРазница = СтрокаПризнанияРасходов.ПостояннаяРазница;
								СтрокаСписания.ВременнаяРазница = СтрокаПризнанияРасходов.ВременнаяРазница;
								СтрокаСписания.СуммаНДД = СтрокаПризнанияРасходов.СуммаНДД;
								
								СтрокаПризнания = ТаблицаДвижений.Добавить();
								СтрокаПризнания.Организация = СтрокаДанных.Организация;
								СтрокаПризнания.ВидДвижения = ВидДвиженияНакопления.Приход;
								СтрокаПризнания.Подразделение = СтрокаПризнанияРасходов.ПодразделениеДт;
								СтрокаПризнания.НаправлениеДеятельности = СтрокаПризнанияРасходов.НаправлениеДеятельностиДт;
								СтрокаПризнания.СтатьяРасходов = СтрокаПризнанияРасходов.СтатьяРасходовДт;
								СтрокаПризнания.АналитикаРасходов = СтрокаПризнанияРасходов.АналитикаРасходовДт;
								СтрокаПризнания.Период = ДатаРасчета;
								СтрокаПризнания.ИдентификаторФинЗаписи = СтрокаСписания.ИдентификаторФинЗаписи;
								СтрокаПризнания.ИдентификаторСтроки = СтрокаПризнанияРасходов.ИдентификаторСтроки;
								СтрокаПризнания.Сумма = СтрокаПризнанияРасходов.Сумма;
								СтрокаПризнания.СуммаБезНДС = СтрокаПризнанияРасходов.СуммаБезНДС;
								СтрокаПризнания.СуммаУпр = СтрокаПризнанияРасходов.СуммаУпр;
								СтрокаПризнания.СуммаРегл = СтрокаПризнанияРасходов.СуммаРегл;
								СтрокаПризнания.ПостояннаяРазница = СтрокаПризнанияРасходов.ПостояннаяРазница;
								СтрокаПризнания.ВременнаяРазница = СтрокаПризнанияРасходов.ВременнаяРазница;
								СтрокаПризнания.СуммаНДД = СтрокаПризнанияРасходов.СуммаНДД;
								СтрокаПризнания.ПрименятьКоэффициент = СтрокаПризнанияРасходов.ПрименятьКоэффициент;
								
							КонецЦикла;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если ТаблицаДвижений.Количество() > 0 Тогда
		
				УчетРасходовПоИсследованиямИРазработкамЛокализация.ПрименитьПовышающийКоэффициент(ТаблицаДвижений,
							ДокументПризнания, СтрокаДокументПризнания.Организация, ДатаРасчета);
	
				ДвиженияПрочиеРасходы.Загрузить(ТаблицаДвижений);
				ДвиженияПрочиеРасходы.УстановитьАктивность(Истина);
				ДвиженияПрочиеРасходы.Записать();
				
				Движения = Новый Структура("ПрочиеРасходы", ДвиженияПрочиеРасходы);
			
				СформироватьДвиженияДоходыРасходыПрочиеАктивыПассивы(
						Движения,
						ДокументПризнания,
						ДатаРасчета,
						ХозяйственнаяОперация);
				
				Если ПолучитьФункциональнуюОпцию("ФормироватьУправленческийБаланс") Тогда
				Обработки.ДвиженияАктивовПассивов.ОтразитьДокументыВУправленческомБалансе(ДокументПризнания, Движения);
				КонецЕсли;
				
				//++ НЕ УТКА
				МеждународныйУчетПроведениеСервер.ЗарегистрироватьКОтражению(
					Новый Структура("Ссылка, Движения, Дата, Организация", ДокументПризнания, Движения, ДатаРасчета, СтрокаДокументПризнания.Организация),
					Новый Структура,
					Движения);
				Если Движения.Свойство("ОтражениеДокументовВМеждународномУчете") Тогда
					ДвиженияОтраженияВМУ = Движения.ОтражениеДокументовВМеждународномУчете; //РегистрСведенийНаборЗаписей - 
					ДвиженияОтраженияВМУ.Записать();
				КонецЕсли;
				//-- НЕ УТКА
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

Процедура СформироватьДвиженияДоходыРасходыПрочиеАктивыПассивы(Движения, ДокументПризнания, ДатаРасчета, ХозяйственнаяОперация)
	
	ВалютаРегУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(
							ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументПризнания, "Организация"));
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПрочиеРасходы.ВидДвижения КАК ВидДвижения,
		|	ПрочиеРасходы.Организация КАК Организация,
		|	ПрочиеРасходы.Подразделение КАК Подразделение,
		|	ПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
		|	ПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
		|	ПрочиеРасходы.СуммаРегл КАК СуммаРегл,
		|	ПрочиеРасходы.Сумма КАК Сумма,
		|	ПрочиеРасходы.СуммаБезНДС КАК СуммаБезНДС,
		|	ПрочиеРасходы.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи
		|ПОМЕСТИТЬ ВТДанныеЗаписей
		|ИЗ
		|	&ПрочиеРасходы КАК ПрочиеРасходы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИдентификаторФинЗаписи
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ПриходныеДвижения.Организация КАК Организация,
		|	РасходныеДвижения.Подразделение КАК Подразделение,
		|	РасходныеДвижения.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	РасходныеДвижения.СтатьяРасходов КАК Статья,
		|	РасходныеДвижения.АналитикаРасходов КАК АналитикаРасходов,
		|	ПриходныеДвижения.Подразделение КАК КорПодразделение,
		|	ПриходныеДвижения.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	ПриходныеДвижения.СтатьяРасходов КАК КорСтатья,
		|	ПриходныеДвижения.АналитикаРасходов КАК КорАналитикаРасходов,
		|	СУММА(ПриходныеДвижения.СуммаРегл) КАК СуммаРегл,
		|	СУММА(ПриходныеДвижения.Сумма * &КоэффициентПересчетаВВалютуУпр) КАК Сумма,
		|	СУММА(ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ПриходныеДвижения.СтатьяРасходов КАК
		|			ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|		ИЛИ
		|		НЕ &УправленческийУчетОрганизаций
		|			ТОГДА 0
		|		ИНАЧЕ ПриходныеДвижения.СуммаБезНДС * &КоэффициентПересчетаВВалютуУпр
		|	КОНЕЦ) КАК СуммаУпр,
		|	СУММА(ПриходныеДвижения.Сумма) КАК СуммаВВалюте,
		|	&Валюта КАК Валюта
		|ИЗ
		|	ВТДанныеЗаписей КАК ПриходныеДвижения
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеЗаписей КАК РасходныеДвижения
		|		ПО ПриходныеДвижения.ИдентификаторФинЗаписи = РасходныеДвижения.ИдентификаторФинЗаписи
		|		И ПриходныеДвижения.ВидДвижения <> РасходныеДвижения.ВидДвижения
		|ГДЕ
		|	ПриходныеДвижения.ВидДвижения = &ВидДвиженияПриход
		|	И ПриходныеДвижения.СуммаРегл + ПриходныеДвижения.Сумма <> 0
		|СГРУППИРОВАТЬ ПО
		|	ПриходныеДвижения.Организация,
		|	РасходныеДвижения.Подразделение,
		|	РасходныеДвижения.НаправлениеДеятельности,
		|	РасходныеДвижения.СтатьяРасходов,
		|	РасходныеДвижения.АналитикаРасходов,
		|	ПриходныеДвижения.Подразделение,
		|	ПриходныеДвижения.НаправлениеДеятельности,
		|	ПриходныеДвижения.СтатьяРасходов,
		|	ПриходныеДвижения.АналитикаРасходов";
	
	Запрос.УстановитьПараметр("ПрочиеРасходы", Движения.ПрочиеРасходы.Выгрузить());
	Запрос.УстановитьПараметр("ВидДвиженияПриход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Период", ДатаРасчета);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("Валюта", ВалютаРегУчета);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр", РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
																	ВалютаРегУчета,
																	Константы.ВалютаУправленческогоУчета.Получить(), 
																	ДатаРасчета));
	Запрос.УстановитьПараметр("УправленческийУчетОрганизаций", РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций(
																	НачалоМесяца(ДатаРасчета)));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДвиженияАктивыПассивы = РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.СоздатьНаборЗаписей();
	ДвиженияАктивыПассивы.Отбор.Регистратор.Установить(ДокументПризнания);
	
	ДвиженияАктивыПассивы.Загрузить(РезультатЗапроса.Выгрузить());
	ДвиженияАктивыПассивы.Записать();

	Движения.Вставить("ДвиженияДоходыРасходыПрочиеАктивыПассивы", ДвиженияАктивыПассивы); 

КонецПроцедуры

#КонецОбласти