///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Механизм расчета себестоимости: подготовка и решение системы линейных уравнений
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Расчет стоимости в части резервов под обесценение.
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура РасчетСебестоимости_РезервыПодОбесценениеЗапасов(ПараметрыРасчета) Экспорт
	
	// Формирует временные таблицы:
	// - ВтУзлыКорректировки

	//++ НЕ УТ

	// - СвязиУзловРезервовПодОбесценениеЗапасов

	//-- НЕ УТ
	ПодготовкаДанныхДляРешенияСЛУ_РезервыПодОбесценениеЗапасов(ПараметрыРасчета);
	
	//++ НЕ УТ

	// Формирует временную таблицу:
	// - ВтТаблицаРешений_РезервыПодОбесценениеЗапасовОрганизаций
	РешитьСЛУПлатформой_РезервыПодОбесценениеЗапасовОрганизаций(ПараметрыРасчета);
	//-- НЕ УТ
	
	// Формирует временную таблицу:
	// - ВТСтоимостьПартийТоваров
	СформироватьСтоимостьПартийТоваров_РезервыПодОбесценениеЗапасов(ПараметрыРасчета);
	
	Если ПараметрыРасчета.ЗапущенРасчетПартий Тогда
			
		// Возврат в механизм расчета партий из расчета себестоимости
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Ложь);
			
		// Восстановим все расчетные кэши остатков и оборотов по всем организациям
		РасчетСебестоимостиПрикладныеАлгоритмы.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета);
		
	КонецЕсли;
	
КонецПроцедуры

// Расчет стоимости в части стоимости товаров и трудозатрат.
// Рассчитываются ресурсы регистра "Себестоимость товаров":
//	- Стоимость, СтоимостьБезНДС, СтоимостьЗабалансовая, Трудозатраты
//	- СтоимостьРегл, СтоимостьЗабалансоваяРегл, ТрудозатратыРегл
//	- СтоимостьУпр, ТрудозатратыУпр
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура РасчетСебестоимости_МатериальныеИТрудозатраты(ПараметрыРасчета) Экспорт
	
	// Формирует временные таблицы:
	// - ВтПеремещенияСписания
	ПодготовкаДанныхДляРешенияСЛУ(ПараметрыРасчета);
	
	Если ПараметрыРасчета.УчетныеПолитики.ФИФОВзвешенная.Количество() > 0 Тогда
		ПодготовитьДанныеДляРасчетаСтоимостиПоФИФО(ПараметрыРасчета); // корректировка ВтУзлыКорректировки
	КонецЕсли;
	
	// Формирует временную таблицу:
	// - ВтТаблицаРешений_СебестоимостьПредприятия
	РешитьСЛУПлатформой_СебестоимостьПредприятия(ПараметрыРасчета);
	
	// Формирует временную таблицу:
	// - ВтТаблицаРешений_СебестоимостьОрганизаций
	РешитьСЛУПлатформой_СебестоимостьОрганизаций(ПараметрыРасчета);
	
	// Обновляет временную таблицу:
	// - ВТСтоимостьПартийТоваров
	ОбновитьСтоимостьПартийТоваров_МатериальныеИТрудозатраты(ПараметрыРасчета);
	
	СохранитьСЛУ(ПараметрыРасчета);
	
	Если ПараметрыРасчета.ЗапущенРасчетПартий Тогда
			
		// Возврат в механизм расчета партий из расчета себестоимости
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Ложь);
			
		// Восстановим все расчетные кэши остатков и оборотов по всем организациям
		РасчетСебестоимостиПрикладныеАлгоритмы.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета);
		
	КонецЕсли;
	
КонецПроцедуры

// Расчет стоимости в части дополнительных расходов по товарам и в части включения/исключения НДС.
// Рассчитываются ресурсы регистра "Себестоимость товаров":
//	- ДопРасходы, ДопРасходыБезНДС
//	- СтоимостьРегл, ДопРасходыРегл
//	- СтоимостьУпр, ДопРасходыУпр
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура РасчетСебестоимости_ДополнительныеРасходы(ПараметрыРасчета) Экспорт
	
	Если ПараметрыРасчета.РежимЗакрытияМесяца = Перечисления.РежимыЗакрытияМесяца.ПредварительноеЗакрытие
	 И НЕ ПараметрыРасчета.РаспределениеДопРасходовМеждуПартиямиИТоварами Тогда
		Возврат;
	КонецЕсли;
	
	ПодготовкаДанныхДляРешенияСЛУ_ДополнительныеРасходы(ПараметрыРасчета);
	
	// Формирует временную таблицу:
	// - ТаблицаРешений
	РешитьСЛУПлатформой_ДополнительныеРасходы(ПараметрыРасчета);
		
	// Формирует временную таблицу:
	// - ВТСтоимостьПартийТоваров
	ОбновитьСтоимостьПартийТоваров_ДополнительныеРасходы(ПараметрыРасчета);
	ЗарегистрироватьСтоимость_ДополнительныеРасходы(ПараметрыРасчета);
	
	Если ПараметрыРасчета.ЗапущенРасчетПартий Тогда
		
		// Возврат в механизм расчета партий из расчета себестоимости
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Ложь);
		
		// Восстановим все расчетные кэши остатков и оборотов по всем организациям
		РасчетСебестоимостиПрикладныеАлгоритмы.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета);
		
	КонецЕсли;
	
КонецПроцедуры

// Расчет стоимости в части дополнительных расходов по товарам и в части включения/исключения НДС.
// Рассчитываются ресурсы регистра "Себестоимость товаров":
//	- ДопРасходы, ДопРасходыБезНДС
//	- СтоимостьРегл, ДопРасходыРегл
//	- СтоимостьУпр, ДопРасходыУпр
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура РасчетСебестоимости_ВключениеИсключениеНДС(ПараметрыРасчета) Экспорт
	
	Если ПараметрыРасчета.РежимЗакрытияМесяца = Перечисления.РежимыЗакрытияМесяца.ПредварительноеЗакрытие Тогда
		Возврат;
	КонецЕсли;
	
	УзлыКорректировкиВключениеИсключениеНДС(ПараметрыРасчета);
	
	// Формирует временную таблицу:
	// - ВтТаблицаРешений_СебестоимостьОрганизаций
	РешитьСЛУПлатформой_ВключениеИсключениеНДСОрганизаций(ПараметрыРасчета);
	
	// Формирует временную таблицу:
	// - ВТСтоимостьПартийТоваров
	ОбновитьСтоимостьПартийТоваров_ВключениеИсключениеНДС(ПараметрыРасчета);
	
	Если ПараметрыРасчета.ЗапущенРасчетПартий Тогда
			
		// Возврат в механизм расчета партий из расчета себестоимости
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Ложь);
			
		// Восстановим все расчетные кэши остатков и оборотов по всем организациям
		РасчетСебестоимостиПрикладныеАлгоритмы.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета);
		
	КонецЕсли;
	
КонецПроцедуры

//++ НЕ УТ

// Расчет стоимости в части постатейных производственных расходов.
// Рассчитываются ресурсы регистра "Себестоимость товаров":
//	- ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС
//	- ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл
//	- ПостояннаяРазница, ВременнаяРазница
//	- ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура РасчетСебестоимости_ПостатейныеРасходыИНалоговыйУчет(ПараметрыРасчета) Экспорт
	
	// Этап 1: подготовка и расчет себестоимости в части постатейных расходов.
	
	// Формирует временные таблицы:
	//	- ВтУзлыКорректировкиПостатейныеРасходыНЗП
	//	- ВтТаблицаСвязейПостатейныеРасходы
	ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы(ПараметрыРасчета);
	
	// Формирует временную таблицу:
	// - ВтТаблицаРешений_СебестоимостьПредприятия
	РешитьСЛУПлатформой_ПостатейныеРасходыПредприятия(ПараметрыРасчета);
	
	// Формирует временную таблицу:
	// - ВтТаблицаРешений_СебестоимостьОрганизаций
	РешитьСЛУПлатформой_ПостатейныеРасходыОрганизаций(ПараметрыРасчета);
	
	//++ Локализация
	
	// Этап 2: подготовка и расчет себестоимости в части постоянной и временной разницы.
	
	// Формирует временные таблицы:
	ПодготовкаДанныхДляРешенияСЛУНалоговыйУчет(ПараметрыРасчета);
	
	// Формирует временные таблицы:
	// - ВтТаблицаРешений_ПостояннаяРазница
	// - ТаблицаРешений_ВременнаяРазница
	// - ВтТаблицаРешений_НалоговыйУчет
	РешитьСЛУ_НалоговыйУчет_ПостояннаяРазница(ПараметрыРасчета);
	
	//-- Локализация
	
	// Этап 3: подготовка и расчет себестоимости с учетом резервов предстоящих расходов.
	// Формирует временные таблицы:
	// - РезервыПоУзлам
	// - ДетальныеРезервыПоУзлам
	ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов(ПараметрыРасчета);
	
	// Постатейные расходы корректируются на размеры резервов предстоящих расходов
	РешитьСЛУПлатформой_РезервыПредстоящихРасходов(ПараметрыРасчета);
	
	// Этап 4: Формирование таблиц стоимости партий и стоимости прочих расходов НЗП
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СкопироватьВременнуюТаблицу(ПараметрыРасчета, 
		"ВТСтоимостьПартийТоваров", "ВТСтоимостьПартийТоваровПредыдущая");
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВТСтоимостьПартийТоваров");
	
	// Формирует временную таблицу:
	// - ВТСтоимостьПартийТоваров
	ПодготовкаДанныхДляСтоимостиПартийТоваров(ПараметрыРасчета);
		
	// Формирует временные таблицы:
	// - ВтСтоимостиНезавершенногоПроизводства
	// - ВтСтоимостиНезавершенногоПроизводстваРегл
	// - РезервыПредстоящихРасходов
	ПодготовкаДанныхДляСтоимостиПрочихРасходовНЗП(ПараметрыРасчета);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, 
		"ВтТаблицаРешений_СебестоимостьПредприятия");
	
	Если ПараметрыРасчета.ЗапущенРасчетПартий Тогда
			
		// Возврат в механизм расчета партий из расчета себестоимости
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Ложь);
			
		// Восстановим все расчетные кэши остатков и оборотов по всем организациям
		РасчетСебестоимостиПрикладныеАлгоритмы.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета);
		
	КонецЕсли;
	
КонецПроцедуры

//-- НЕ УТ

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУ

#Область Описание_ПодготовкаДанныхДляРешенияСЛУ

// Этап ПодготовкаДанныхДляРешенияСЛУ выполняет подготовку временных таблиц узлов и связей для решения системы линейных
// уравнений.
// Выходные таблицы этапа:
// - ВтУзлыКорректировки - таблица узлов. Каждый узел соответствует одному набору значений измерений регистра "Себестоимость товаров".
// 		таблица формируется в этапе ПодготовкаДанныхДляРешенияСЛУРезервыПодОбесценениеЗапасов
// - ВтПеремещенияСписания - таблица связей между узлами  
//
// Правила формирования таблицы ВтУзлыКорректировки:
// Формирование первоначальной стоимости:
//	1. Движения с типом записи "Корректировка приобретения" - корректировка количества и стоимости на увеличение или уменьшение
//	2. Движения с типом записи "Списания на выпуск (сторно прошлого периода)"
//	3. Приходы с хоз операциями "Выпуск продукции", "Поступление от переработчика" и "Выпуск продукции в подразделение"
//		с нулевым количеством - рассчитанная стоимость трудозатрат
//		при предварительном закрытии месяца в первоначальную стоимость добавляем плановую стоимость продукции
//	4. Приходы по списку хозяйственных операций внешнего поступления
//	5. Расходы с типом записи "Партия" - стоимость неотфактурованной поставки
//	6. Приходы с признаком Сторно
//	7. Движения с признаком Сторно и типом записи "Исправление прошлого периода"
//	8. Движения с операцией учета "Выбытие по фиксированной стоимости" с признаком "Расчет не завершен" со знаком минус - возвраты поставщику
//		если для возврата не подобралась партия. Стоимость нужна для расчета отклонений в этапе пересортицы партий товаров.
//		Именьшается стоимость в узле на фиксированную стоимость возврата.
//	9. Движения с типом записей "Отклонение в стоимости", "Отклонение в стоимости на прочие доходы", "Отклонение в стоимости на прочие расходы",
//		"Распределение по выбывшим товарам", "Корректировка приобретения прошлого периода" со знаком минус
//		Уменьшается стоимость в узле на сумму корректировки
//	10. Движения с хоз операцией "Отчет комиссионера" и типом записи "Возврат без документа источника" со знаком минус,
//		если дата документа источника в прошлом периоде.
//		Рассчитанная стоимость возврата товаров комиссионеру от клиента, если продажа была в прошлом периоде.
//		Стоимость рассчитана в процедуре СкорректироватьСтоимостьВозвратовПрошлыхПериодов(). 

#КонецОбласти

// Этап "ПодготовкаДанныхДляРешенияСЛУ"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУ(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУ");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"ВтПеремещенияСписания");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляРешенияСЛУ(ПараметрыРасчета));
		
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ЕстьВозвратныеОтходы");
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляРешенияСЛУ(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(ТекстВтПеремещенияСписания());
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстВтЕстьВозвратныеОтходы() Экспорт
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	ДД.Организация КАК Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета
		|ПОМЕСТИТЬ ЕстьВозвратныеОтходы
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|
		//++ НЕ УТ

		//++ Устарело_Производство21
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|	И ДД.Количество < 0
		|	И ТИПЗНАЧЕНИЯ(ДД.Регистратор) В (
		|		ТИП(Документ.РаспределениеВозвратныхОтходов)
		|		,ТИП(Документ.ВыпускПродукции)
		|		)
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И НЕ ДД.Сторно
		//-- Устарело_Производство21

		//-- НЕ УТ
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	Организация
		|";
КонецФункции

Функция ТекстВтУзлыКорректировки_МатериальныеИТрудозатраты() // вт ВтУзлыКорректировки
	Возврат "
		|ВЫБРАТЬ
		|	АВТОНОМЕРЗАПИСИ()                        КАК НомерУзла,
		|	Себестоимость.Организация                КАК Организация,
		|	Себестоимость.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Себестоимость.РазделУчета                КАК РазделУчета,
		|	Себестоимость.ВидЗапасов                 КАК ВидЗапасов,
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание
		|		 И Себестоимость.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Себестоимость.Партия КОНЕЦ)    КАК Партия,
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание ТОГДА ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|		ИНАЧЕ Себестоимость.АналитикаУчетаПартий КОНЕЦ) КАК АналитикаУчетаПартий,
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Себестоимость.АналитикаФинансовогоУчета КОНЕЦ) КАК АналитикаФинансовогоУчета,
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание
		|		 И Себестоимость.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|		ИНАЧЕ Себестоимость.ВидДеятельностиНДС КОНЕЦ) КАК ВидДеятельностиНДС,
		|
		// Ресурсы для расчета себестоимости товаров предприятия.
		|	СУММА(Себестоимость.Количество)                  КАК Количество,
		|	СУММА(Себестоимость.КоличествоСписаноПоФиксСтоимости) КАК КоличествоСписаноПоФиксСтоимости,
		|	СУММА(Себестоимость.Стоимость)                   КАК Стоимость,
		|	СУММА(Себестоимость.СтоимостьБезНДС)             КАК СтоимостьБезНДС,
		|	СУММА(Себестоимость.ДопРасходы)                  КАК ДопРасходы,
		|	СУММА(Себестоимость.ДопРасходыБезНДС)            КАК ДопРасходыБезНДС,
		|	СУММА(Себестоимость.СтоимостьЗабалансовая)       КАК СтоимостьЗабалансовая,
		|	СУММА(Себестоимость.Трудозатраты)                КАК Трудозатраты,
		|	СУММА(Себестоимость.ПостатейныеПостоянныеСНДС)   КАК ПостатейныеПостоянныеСНДС,
		|	СУММА(Себестоимость.ПостатейныеПеременныеСНДС)   КАК ПостатейныеПеременныеСНДС,
		|	СУММА(Себестоимость.ПостатейныеПостоянныеБезНДС) КАК ПостатейныеПостоянныеБезНДС,
		|	СУММА(Себестоимость.ПостатейныеПеременныеБезНДС) КАК ПостатейныеПеременныеБезНДС,
		// Ресурсы для расчета себестоимости товаров организаций.
		|	СУММА(Себестоимость.СтоимостьРегл)               КАК СтоимостьРегл,
		|	СУММА(Себестоимость.ДопРасходыРегл)              КАК ДопРасходыРегл,
		|	СУММА(Себестоимость.СтоимостьЗабалансоваяРегл)   КАК СтоимостьЗабалансоваяРегл,
		|	СУММА(Себестоимость.ТрудозатратыРегл)            КАК ТрудозатратыРегл,
		|	СУММА(Себестоимость.ПостатейныеПостоянныеРегл)   КАК ПостатейныеПостоянныеРегл,
		|	СУММА(Себестоимость.ПостатейныеПеременныеРегл)   КАК ПостатейныеПеременныеРегл,
		|	СУММА(Себестоимость.РезервПодОбесценениеРегл)    КАК РезервПодОбесценениеРегл,
		|	СУММА(Себестоимость.СтоимостьУпр)                КАК СтоимостьУпр,
		|	СУММА(Себестоимость.ДопРасходыУпр)               КАК ДопРасходыУпр,
		|	СУММА(Себестоимость.ТрудозатратыУпр)             КАК ТрудозатратыУпр,
		|	СУММА(Себестоимость.ПостатейныеПостоянныеУпр)    КАК ПостатейныеПостоянныеУпр,
		|	СУММА(Себестоимость.ПостатейныеПеременныеУпр)    КАК ПостатейныеПеременныеУпр,
		|	СУММА(Себестоимость.РезервПодОбесценениеУпр)     КАК РезервПодОбесценениеУпр
		|ПОМЕСТИТЬ ВтУзлыКорректировки
		|ИЗ (
		|	ВЫБРАТЬ
		|		Себестоимость.Организация,
		|		Себестоимость.АналитикаУчетаНоменклатуры,
		|		(ВЫБОР
		|			КОГДА Себестоимость.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|			 И Себестоимость.Количество < 0
		|			 И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) // возвратные отходы учитываем по пустому разделу учета
		|			ИНАЧЕ Себестоимость.РазделУчета КОНЕЦ) КАК РазделУчета,
		|		Себестоимость.ВидЗапасов,
		|		Себестоимость.Партия,
		|		Себестоимость.АналитикаУчетаПартий,
		|		Себестоимость.АналитикаФинансовогоУчета,
		|		Себестоимость.ВидДеятельностиНДС,
		// Количество товаров одно общее для всех видов учета. 
		|		(ВЫБОР
		// Движения с типом записи "Корректировка приобретения" включаются в начальную стоимость узлов расчета, как и тип записи Партия.
		// Суммовые поля исключаем только для записей, сформированных при проведении документов.
		// Движения с признаком "РасчетСебестоимости" должны быть учтены в начальной стоимости узла.
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.Количество
		// Расходные движения с типом записи "Дополнение (прошлый период)" увеличивают количество и стоимость в узле,
		// приходные движения уменьшают количество и стоимость в узле. В движениях количество и стоимость отрицательные.
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.Количество 
		|					ИНАЧЕ Себестоимость.Количество КОНЕЦ
		// Движения по исправлению перемещения прошлого периода должны формировать начальную стоимость узла аналогично корректировке приобретения,
		// т.к. расходные движения у такого перемещения формируют начальную стоимость узла (тип записи "Исправление прошлого периода"). 
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.Количество
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.Количество
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|				ТОГДА -Себестоимость.Количество
		|		 	КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно)
		|			 И Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации)
		|			 И Себестоимость.ВидДеятельностиНДС <> Себестоимость.ВидДеятельностиНДСОтгрузки
		|			 И Себестоимость.ВидДеятельностиНДСОтгрузки <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|				ТОГДА -Себестоимость.Количество
		// Расходные движения с типами записей "Исправление прошлого периода" и "Дополнение (прошлый период)" являются
		// возвратами на склад, имеют ранее рассчитанную стоимость в прошлом периоде, и поэтому должны формировать начальную стоимость узла. 
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.Количество
		// Выбытие по фиксированной стоимости учитывается в начальной стоимости узла, если для такого выбытия не подобралась партия.
		// Условия выборки данных должны соответствовать процедуре СкорректироватьСтоимостьСписанияЗапасов в общем модуле РасчетСебестоимостиКорректировкаСтоимости
		|			КОГДА Себестоимость.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
		|			 И Себестоимость.РасчетНеЗавершен
		|			 И Себестоимость.Стоимость <> 0
		|				ТОГДА -Себестоимость.Количество
		// Добавляются движения отчета комиссионера на возврат, если продажа была отражена в прошлом периоде.
		// Условия выборки должны соответствовать запросу формирования ВтРеализацииПрошлыхПериодов в общем модуле РасчетСебестоимостиКорректировкаСтоимости
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ 0 
		|		КОНЕЦ) КАК Количество,
		// В дальнейшем исключим количество списания на расходы по фиксированной стоимости из:
		//	решения СЛУ для себестоимости предприятия (РешитьСЛУПлатформой_СебестоимостьПредприятия),
		//	решения СЛУ для себестоимости организаций (РешитьСЛУПлатформой_СебестоимостьОрганизаций),
		//	решения СЛУ для включения/исключения НДС (РешитьСЛУПлатформой_ВключениеИсключениеНДСОрганизаций),
		//	решения СЛУ для резервов под обесценение (РешитьСЛУПлатформой_РезервыПодОбесценениеЗапасовОрганизаций).
		|		ВЫБОР
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		// Исключаем количество и стоимость списания на расходы по фиксированной стоимости.
		// Список хоз. операций должен совпадать во всех исключениях с данным комментарием.
		|				И Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводстваФиксированнаяСтоимость))
		|				ТОГДА Себестоимость.Количество
		|		 	ИНАЧЕ 0 
		|		КОНЕЦ КАК КоличествоСписаноПоФиксСтоимости,
		// Данные о суммах внешних поступлений.
		// Правила формирования описаны в области Описание_ПодготовкаДанныхДляРешенияСЛУ
		// Условия формирования суммовых показателей должны соответствовать функции ТекстСебестоимостьНалоговыйУчет().
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.Стоимость
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.Стоимость
		|					КОНЕЦ
		// Расходные движения с типом записи "Дополнение (прошлый период)" увеличивают количество и стоимость в узле,
		// приходные движения уменьшают количество и стоимость в узле. В движениях количество и стоимость отрицательные.
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.Стоимость 
		|					ИНАЧЕ Себестоимость.Стоимость КОНЕЦ
		// Движения по исправлению перемещения прошлого периода должны формировать начальную стоимость узла аналогично корректировке приобретения,
		// т.к. расходные движения у такого перемещения формируют начальную стоимость узла (тип записи "Исправление прошлого периода").
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.Стоимость
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеПлановойСтоимостиВыпуска)
		|				И Себестоимость.СлужебноеВидДвиженияПриход И &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
		|				ТОГДА Себестоимость.Стоимость
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
		//++ Устарело_Переработка24
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика),
		//-- Устарело_Переработка24
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение))
		|		 	 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА (ВЫБОР
		|					КОГДА (Себестоимость.Количество = 0
		|					 ИЛИ &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие))
		|		 	 		И (НЕ &ПредварительныйРасчет ИЛИ Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия))
		|						ТОГДА Себестоимость.Стоимость
		|				ИНАЧЕ 0 КОНЕЦ)
		|			КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|			 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.Стоимость
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|			 И РассчитанныеДокументы.Регистратор ЕСТЬ НЕ NULL
		|				ТОГДА 0
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|				ТОГДА -Себестоимость.Стоимость

		// Исключаем количество и стоимость списания на расходы по фиксированной стоимости.
		// Список хоз. операций должен совпадать во всех исключениях с данным комментарием.
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|				И Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводстваФиксированнаяСтоимость))
		|				ТОГДА -Себестоимость.Стоимость
		|			КОГДА Себестоимость.Сторно И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.Стоимость
		// Расходные движения с типами записей "Исправление прошлого периода" и "Дополнение (прошлый период)" являются
		// возвратами на склад, имеют ранее рассчитанную стоимость в прошлом периоде, и поэтому должны формировать начальную стоимость узла. 
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.Стоимость
		|			КОГДА Себестоимость.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
		|			 И Себестоимость.РасчетНеЗавершен
		|				ТОГДА -Себестоимость.Стоимость
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеДоходы),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеРасходы),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|				ТОГДА -Себестоимость.Стоимость
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.Стоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Стоимость,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.СтоимостьБезНДС
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.СтоимостьБезНДС
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.СтоимостьБезНДС 
		|					ИНАЧЕ Себестоимость.СтоимостьБезНДС КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.СтоимостьБезНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеПлановойСтоимостиВыпуска)
		|				И Себестоимость.СлужебноеВидДвиженияПриход И &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
		|				ТОГДА Себестоимость.СтоимостьБезНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
		//++ Устарело_Переработка24
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика),
		//-- Устарело_Переработка24
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение))
		|		 	 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА (ВЫБОР
		|					КОГДА (Себестоимость.Количество = 0
		|					 ИЛИ &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие))
		|		 	 		И (НЕ &ПредварительныйРасчет ИЛИ Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия))
		|						ТОГДА Себестоимость.СтоимостьБезНДС
		|				ИНАЧЕ 0 КОНЕЦ)
		|			КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|			 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьБезНДС
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|			 И РассчитанныеДокументы.Регистратор ЕСТЬ НЕ NULL
		|				ТОГДА 0
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|				ТОГДА -Себестоимость.СтоимостьБезНДС
		// Исключаем количество и стоимость списания на расходы по фиксированной стоимости.
		// Список хоз. операций должен совпадать во всех исключениях с данным комментарием.
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|				И Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводстваФиксированнаяСтоимость))
		|				ТОГДА -Себестоимость.СтоимостьБезНДС
		|			КОГДА Себестоимость.Сторно И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьБезНДС
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.СтоимостьБезНДС
		|			КОГДА Себестоимость.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
		|			 И Себестоимость.РасчетНеЗавершен
		|				ТОГДА -Себестоимость.СтоимостьБезНДС
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеДоходы),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеРасходы),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|				ТОГДА -Себестоимость.СтоимостьБезНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.СтоимостьБезНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СтоимостьБезНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ДопРасходы
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ДопРасходы
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ДопРасходы 
		|					ИНАЧЕ Себестоимость.ДопРасходы КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ДопРасходы
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ДопРасходы
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ДопРасходы
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ДопРасходы
		|			КОГДА Себестоимость.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеДоходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеРасходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|			ТОГДА
		|				-Себестоимость.ДопРасходы
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ДопРасходы
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопРасходы,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ДопРасходыБезНДС
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ДопРасходыБезНДС
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ДопРасходыБезНДС 
		|					ИНАЧЕ Себестоимость.ДопРасходыБезНДС КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ДопРасходыБезНДС
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ДопРасходыБезНДС
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ДопРасходыБезНДС
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ДопРасходыБезНДС
		|			КОГДА Себестоимость.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеДоходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеРасходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|			ТОГДА
		|				-Себестоимость.ДопРасходыБезНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ДопРасходыБезНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопРасходыБезНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.СтоимостьЗабалансовая
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.СтоимостьЗабалансовая
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.СтоимостьЗабалансовая 
		|					ИНАЧЕ Себестоимость.СтоимостьЗабалансовая КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.СтоимостьЗабалансовая
		|			КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|			 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьЗабалансовая
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов)
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|			 И РассчитанныеДокументы.Регистратор ЕСТЬ НЕ NULL
		|				ТОГДА 0
		// Исключаем количество и стоимость списания на расходы по фиксированной стоимости.
		// Список хоз. операций должен совпадать во всех исключениях с данным комментарием.
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|				И Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводстваФиксированнаяСтоимость))
		|				ТОГДА -Себестоимость.СтоимостьЗабалансовая
		|			КОГДА Себестоимость.Сторно И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьЗабалансовая
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.СтоимостьЗабалансовая
		|			КОГДА Себестоимость.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
		|			 И Себестоимость.РасчетНеЗавершен
		|				ТОГДА -Себестоимость.СтоимостьЗабалансовая
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.СтоимостьЗабалансовая
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СтоимостьЗабалансовая,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.Трудозатраты
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.Трудозатраты
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.Трудозатраты 
		|					ИНАЧЕ Себестоимость.Трудозатраты КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.Трудозатраты
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.Трудозатраты
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.Трудозатраты
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.Трудозатраты
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.Трудозатраты
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Трудозатраты,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ПостатейныеПостоянныеСНДС
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ПостатейныеПостоянныеСНДС
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ПостатейныеПостоянныеСНДС 
		|					ИНАЧЕ Себестоимость.ПостатейныеПостоянныеСНДС КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ПостатейныеПостоянныеСНДС
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ПостатейныеПостоянныеСНДС
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ПостатейныеПостоянныеСНДС
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеСНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеСНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПостоянныеСНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ПостатейныеПеременныеСНДС
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ПостатейныеПеременныеСНДС
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ПостатейныеПеременныеСНДС 
		|					ИНАЧЕ Себестоимость.ПостатейныеПеременныеСНДС КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ПостатейныеПеременныеСНДС
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ПостатейныеПеременныеСНДС
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ПостатейныеПеременныеСНДС
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму ((кроме операций поступления
		// и возвратов прошлых периодов)
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеСНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеСНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПеременныеСНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ПостатейныеПостоянныеБезНДС
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ПостатейныеПостоянныеБезНДС
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ПостатейныеПостоянныеБезНДС 
		|					ИНАЧЕ Себестоимость.ПостатейныеПостоянныеБезНДС КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ПостатейныеПостоянныеБезНДС
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ПостатейныеПостоянныеБезНДС
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ПостатейныеПостоянныеБезНДС
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеБезНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеБезНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПостоянныеБезНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ПостатейныеПеременныеБезНДС
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ПостатейныеПеременныеБезНДС
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ПостатейныеПеременныеБезНДС 
		|					ИНАЧЕ Себестоимость.ПостатейныеПеременныеБезНДС КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ПостатейныеПеременныеБезНДС
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ПостатейныеПеременныеБезНДС
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ПостатейныеПеременныеБезНДС
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеБезНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеБезНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПеременныеБезНДС,
		|
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.СтоимостьРегл
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.СтоимостьРегл
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.СтоимостьРегл 
		|					ИНАЧЕ Себестоимость.СтоимостьРегл КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.СтоимостьРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеПлановойСтоимостиВыпуска)
		|				И Себестоимость.СлужебноеВидДвиженияПриход И &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
		|				ТОГДА Себестоимость.СтоимостьРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
		//++ Устарело_Переработка24
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика),
		//-- Устарело_Переработка24
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение))
		|		 	 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА (ВЫБОР
		|					КОГДА (Себестоимость.Количество = 0
		|					 ИЛИ &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие))
		|		 	 		И (НЕ &ПредварительныйРасчет ИЛИ Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия))
		|						ТОГДА Себестоимость.СтоимостьРегл
		|				ИНАЧЕ 0 КОНЕЦ)
		|			КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|			 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьРегл
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|			 И РассчитанныеДокументы.Регистратор ЕСТЬ НЕ NULL
		|				ТОГДА 0
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|				ТОГДА -Себестоимость.СтоимостьРегл
		// Исключаем количество и стоимость списания на расходы по фиксированной стоимости.
		// Список хоз. операций должен совпадать во всех исключениях с данным комментарием.
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|				И Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводстваФиксированнаяСтоимость))
		|				ТОГДА -Себестоимость.СтоимостьРегл
		|			КОГДА Себестоимость.Сторно И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьРегл
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.СтоимостьРегл
		|			КОГДА Себестоимость.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
		|			 И Себестоимость.РасчетНеЗавершен
		|				ТОГДА -Себестоимость.СтоимостьРегл
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеДоходы),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеРасходы),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|				ТОГДА -Себестоимость.СтоимостьРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.СтоимостьРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СтоимостьРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ДопРасходыРегл
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ДопРасходыРегл
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ДопРасходыРегл 
		|					ИНАЧЕ Себестоимость.ДопРасходыРегл КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ДопРасходыРегл
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ДопРасходыРегл
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ДопРасходыРегл
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ДопРасходыРегл
		// Сумма доп расходов, распределенная на выбытия товаров в прошлых периодах, должна уменьшать начальную стоимость в узле.
		|			КОГДА Себестоимость.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеДоходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеРасходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|			ТОГДА
		|				-Себестоимость.ДопРасходыРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ДопРасходыРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопРасходыРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.СтоимостьЗабалансоваяРегл
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.СтоимостьЗабалансоваяРегл
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.СтоимостьЗабалансоваяРегл 
		|					ИНАЧЕ Себестоимость.СтоимостьЗабалансоваяРегл КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.СтоимостьЗабалансоваяРегл
		|			КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|			 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьЗабалансоваяРегл
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|			 И РассчитанныеДокументы.Регистратор ЕСТЬ НЕ NULL
		|				ТОГДА 0
		// Исключаем количество и стоимость списания на расходы по фиксированной стоимости.
		// Список хоз. операций должен совпадать во всех исключениях с данным комментарием.
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|				И Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводстваФиксированнаяСтоимость))
		|				ТОГДА -Себестоимость.СтоимостьЗабалансоваяРегл
		|			КОГДА Себестоимость.Сторно И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьЗабалансоваяРегл
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.СтоимостьЗабалансоваяРегл
		|			КОГДА Себестоимость.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
		|			 И Себестоимость.РасчетНеЗавершен
		|				ТОГДА -Себестоимость.СтоимостьЗабалансоваяРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.СтоимостьЗабалансоваяРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СтоимостьЗабалансоваяРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ТрудозатратыРегл
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ТрудозатратыРегл
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ТрудозатратыРегл 
		|					ИНАЧЕ Себестоимость.ТрудозатратыРегл КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ТрудозатратыРегл
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ТрудозатратыРегл
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ТрудозатратыРегл
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ТрудозатратыРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ТрудозатратыРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ТрудозатратыРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ПостатейныеПостоянныеРегл
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ПостатейныеПостоянныеРегл
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ПостатейныеПостоянныеРегл 
		|					ИНАЧЕ Себестоимость.ПостатейныеПостоянныеРегл КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ПостатейныеПостоянныеРегл
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ПостатейныеПостоянныеРегл
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ПостатейныеПостоянныеРегл
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПостоянныеРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ПостатейныеПеременныеРегл
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ПостатейныеПеременныеРегл
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ПостатейныеПеременныеРегл 
		|					ИНАЧЕ Себестоимость.ПостатейныеПеременныеРегл КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ПостатейныеПеременныеРегл
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ПостатейныеПеременныеРегл
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ПостатейныеПеременныеРегл
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПеременныеРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.РезервПодОбесценениеРегл
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.РезервПодОбесценениеРегл
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.РезервПодОбесценениеРегл 
		|					ИНАЧЕ Себестоимость.РезервПодОбесценениеРегл КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.РезервПодОбесценениеРегл
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.РезервПодОбесценениеРегл
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.РезервПодОбесценениеРегл
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.РезервПодОбесценениеРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.РезервПодОбесценениеРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РезервПодОбесценениеРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.СтоимостьУпр
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.СтоимостьУпр
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.СтоимостьУпр 
		|					ИНАЧЕ Себестоимость.СтоимостьУпр КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.СтоимостьУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеПлановойСтоимостиВыпуска)
		|				И Себестоимость.СлужебноеВидДвиженияПриход И &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
		|				ТОГДА Себестоимость.СтоимостьУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
		//++ Устарело_Переработка24
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика),
		//-- Устарело_Переработка24
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение))
		|		 	 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА (ВЫБОР
		|					КОГДА (Себестоимость.Количество = 0
		|					 ИЛИ &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие))
		|		 	 		И (НЕ &ПредварительныйРасчет ИЛИ Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия))
		|						ТОГДА Себестоимость.СтоимостьУпр
		|				ИНАЧЕ 0 КОНЕЦ)
		|			КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|			 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьУпр
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|			 И РассчитанныеДокументы.Регистратор ЕСТЬ НЕ NULL
		|				ТОГДА 0
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|				ТОГДА -Себестоимость.СтоимостьУпр
		// Исключаем количество и стоимость списания на расходы по фиксированной стоимости.
		// Список хоз. операций должен совпадать во всех исключениях с данным комментарием.
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|				И Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводстваФиксированнаяСтоимость))
		|				ТОГДА -Себестоимость.СтоимостьУпр
		|			КОГДА Себестоимость.Сторно И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьУпр
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.СтоимостьУпр
		|			КОГДА Себестоимость.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
		|			 И Себестоимость.РасчетНеЗавершен
		|				ТОГДА -Себестоимость.СтоимостьУпр
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеДоходы),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеРасходы),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|				ТОГДА -Себестоимость.СтоимостьУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.СтоимостьУпр
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СтоимостьУпр,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ДопРасходыУпр
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ДопРасходыУпр
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ДопРасходыУпр 
		|					ИНАЧЕ Себестоимость.ДопРасходыУпр КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ДопРасходыУпр
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ДопРасходыУпр
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ДопРасходыУпр
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ДопРасходыУпр
		|			КОГДА Себестоимость.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеДоходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеРасходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|			ТОГДА
		|				-Себестоимость.ДопРасходыУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ДопРасходыУпр
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопРасходыУпр,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ТрудозатратыУпр
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ТрудозатратыУпр
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ТрудозатратыУпр 
		|					ИНАЧЕ Себестоимость.ТрудозатратыУпр КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ТрудозатратыУпр
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ТрудозатратыУпр
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ТрудозатратыУпр
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ТрудозатратыУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ТрудозатратыУпр
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ТрудозатратыУпр,
		|
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ПостатейныеПостоянныеУпр
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ПостатейныеПостоянныеУпр
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ПостатейныеПостоянныеУпр 
		|					ИНАЧЕ Себестоимость.ПостатейныеПостоянныеУпр КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ПостатейныеПостоянныеУпр
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ПостатейныеПостоянныеУпр
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ПостатейныеПостоянныеУпр
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеУпр
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПостоянныеУпр,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ПостатейныеПеременныеУпр
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ПостатейныеПеременныеУпр
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ПостатейныеПеременныеУпр 
		|					ИНАЧЕ Себестоимость.ПостатейныеПеременныеУпр КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ПостатейныеПеременныеУпр
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ПостатейныеПеременныеУпр
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ПостатейныеПеременныеУпр
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеУпр
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПеременныеУпр,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.РезервПодОбесценениеУпр
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.РезервПодОбесценениеУпр
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.РезервПодОбесценениеУпр 
		|					ИНАЧЕ Себестоимость.РезервПодОбесценениеУпр КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.РезервПодОбесценениеУпр
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.РезервПодОбесценениеУпр
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.РезервПодОбесценениеУпр
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.РезервПодОбесценениеУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.РезервПодОбесценениеУпр
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РезервПодОбесценениеУпр
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		// Условия использования данных временной таблицы ВтДатыДокументовИсточников должны соответствовать условиям
		// формирования этой таблицы в процедуре РасчетСебестоимостиКорректировкаСтоимости.СкорректироватьСтоимостьВозвратовПрошлыхПериодов().
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДатыДокументовИсточников КАК Реестр
		|		ПО Реестр.Ссылка = Себестоимость.ДокументИсточник
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
		|		ПО ЕстьВозвратныеОтходы.Организация = Себестоимость.Организация
		|			И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
		|			И ЕстьВозвратныеОтходы.ВидЗапасов = Себестоимость.ВидЗапасов
		|			И ЕстьВозвратныеОтходы.РазделУчета = Себестоимость.РазделУчета
		|
		// Условие соединения должно совпадать (кроме типа соединения)
		// с см. РасчетСебестоимостиКорректировкаСтоимости.СохранитьДвиженияРасчетаСебестоимостиРассчитанныхДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РассчитанныеДокументы КАК РассчитанныеДокументы
		|			ПО РассчитанныеДокументы.Период = Себестоимость.Период
		|			И РассчитанныеДокументы.Регистратор = Себестоимость.Регистратор
		|
		// Уменьшение количества в узле при встречных перемещениях в один и тот же узел.
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		Себестоимость.Организация                   КАК Организация,
		|		Себестоимость.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|		Себестоимость.КорРазделУчета                КАК РазделУчета,
		|		Себестоимость.КорВидЗапасов                 КАК ВидЗапасов,
		|		Себестоимость.КорПартия                     КАК Партия,
		|		Себестоимость.КорАналитикаУчетаПартий       КАК АналитикаУчетаПартий,
		|		Себестоимость.КорАналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
		|		Себестоимость.КорВидДеятельностиНДС         КАК ВидДеятельностиНДС,
		|
		|		-Себестоимость.Количество                   КАК Количество,
		|		0 КАК КоличествоСписаноПоФиксСтоимости,
		|		0 КАК Стоимость,
		|		0 КАК СтоимостьБезНДС,
		|		0 КАК ДопРасходы,
		|		0 КАК ДопРасходыБезНДС,
		|		0 КАК СтоимостьЗабалансовая,
		|		0 КАК Трудозатраты,
		|		0 КАК ПостатейныеПостоянныеСНДС,
		|		0 КАК ПостатейныеПеременныеСНДС,
		|		0 КАК ПостатейныеПостоянныеБезНДС,
		|		0 КАК ПостатейныеПеременныеБезНДС,
		|		0 КАК СтоимостьРегл,
		|		0 КАК ДопРасходыРегл,
		|		0 КАК СтоимостьЗабалансоваяРегл,
		|		0 КАК ТрудозатратыРегл,
		|		0 КАК ПостатейныеПостоянныеРегл,
		|		0 КАК ПостатейныеПеременныеРегл,
		|		0 КАК РезервПодОбесценениеРегл,
		|		0 КАК СтоимостьУпр,
		|		0 КАК ДопРасходыУпр,
		|		0 КАК ТрудозатратыУпр,
		|		0 КАК ПостатейныеПостоянныеУпр,
		|		0 КАК ПостатейныеПеременныеУпр,
		|		0 КАК РезервПодОбесценениеУпр
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|	ГДЕ
		|		 Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
		|		 И Себестоимость.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|		 И Себестоимость.КорАналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
		|		 И Себестоимость.КорРазделУчета                = Себестоимость.РазделУчета
		|		 И Себестоимость.КорВидЗапасов                 = Себестоимость.ВидЗапасов
		|		 И Себестоимость.КорПартия                     = Себестоимость.Партия
		|		 И Себестоимость.КорАналитикаУчетаПартий       = Себестоимость.АналитикаУчетаПартий
		|		 И Себестоимость.КорАналитикаФинансовогоУчета  = Себестоимость.АналитикаФинансовогоУчета
		|		 И Себестоимость.КорВидДеятельностиНДС         = Себестоимость.ВидДеятельностиНДС
		|
		// Остатки на начало расчетного периода.
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		Остатки.Организация,
		|		Остатки.АналитикаУчетаНоменклатуры,
		|		Остатки.РазделУчета,
		|		Остатки.ВидЗапасов,
		|		Остатки.Партия,
		|		Остатки.АналитикаУчетаПартий,
		|		Остатки.АналитикаФинансовогоУчета,
		|		Остатки.ВидДеятельностиНДС,
		|
		|		Остатки.КоличествоОстаток                  КАК Количество,
		|		0 КАК КоличествоСписаноПоФиксСтоимости,
		|		Остатки.СтоимостьОстаток                   КАК Стоимость,
		|		Остатки.СтоимостьБезНДСОстаток             КАК СтоимостьБезНДС,
		|		Остатки.ДопРасходыОстаток                  КАК ДопРасходы,
		|		Остатки.ДопРасходыБезНДСОстаток            КАК ДопРасходыБезНДС,
		|		Остатки.СтоимостьЗабалансоваяОстаток       КАК СтоимостьЗабалансовая,
		|		Остатки.ТрудозатратыОстаток                КАК Трудозатраты,
		|		Остатки.ПостатейныеПостоянныеСНДСОстаток   КАК ПостатейныеПостоянныеСНДС,
		|		Остатки.ПостатейныеПеременныеСНДСОстаток   КАК ПостатейныеПеременныеСНДС,
		|		Остатки.ПостатейныеПостоянныеБезНДСОстаток КАК ПостатейныеПостоянныеБезНДС,
		|		Остатки.ПостатейныеПеременныеБезНДСОстаток КАК ПостатейныеПеременныеБезНДС,
		|		Остатки.СтоимостьРеглОстаток               КАК СтоимостьРегл,
		|		Остатки.ДопРасходыРеглОстаток              КАК ДопРасходыРегл,
		|		Остатки.СтоимостьЗабалансоваяРеглОстаток   КАК СтоимостьЗабалансоваяРегл,
		|		Остатки.ТрудозатратыРеглОстаток            КАК ТрудозатратыРегл,
		|		Остатки.ПостатейныеПостоянныеРеглОстаток   КАК ПостатейныеПостоянныеРегл,
		|		Остатки.ПостатейныеПеременныеРеглОстаток   КАК ПостатейныеПеременныеРегл,
		|		Остатки.РезервПодОбесценениеРеглОстаток    КАК РезервПодОбесценениеРегл,
		|		Остатки.СтоимостьУпрОстаток                КАК СтоимостьУпр,
		|		Остатки.ДопРасходыУпрОстаток               КАК ДопРасходыУпр,
		|		Остатки.ТрудозатратыУпрОстаток             КАК ТрудозатратыУпр,
		|		Остатки.ПостатейныеПостоянныеУпрОстаток    КАК ПостатейныеПостоянныеУпр,
		|		Остатки.ПостатейныеПеременныеУпрОстаток    КАК ПостатейныеПеременныеУпр,
		|		Остатки.РезервПодОбесценениеУпрОстаток     КАК РезервПодОбесценениеУпр
		|	ИЗ
		|		РегистрНакопления.СебестоимостьТоваров.Остатки(
		|			&ГраницаНачалоПериода,
		|			Организация В (&МассивОрганизаций)
		|		) КАК Остатки
		|	) КАК Себестоимость
		|
		|СГРУППИРОВАТЬ ПО
		|	Себестоимость.Организация,
		|	Себестоимость.АналитикаУчетаНоменклатуры,
		|	Себестоимость.РазделУчета,
		|	Себестоимость.ВидЗапасов,
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание
		|		 И Себестоимость.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Себестоимость.Партия КОНЕЦ), // Партия
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание ТОГДА ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|		ИНАЧЕ Себестоимость.АналитикаУчетаПартий КОНЕЦ), // АналитикаУчетаПартий
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Себестоимость.АналитикаФинансовогоУчета КОНЕЦ), // АналитикаФинансовогоУчета
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание
		|		 И Себестоимость.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|		ИНАЧЕ Себестоимость.ВидДеятельностиНДС КОНЕЦ) // ВидДеятельностиНДС
		|
		|ИМЕЮЩИЕ
		|	СУММА(Себестоимость.Количество) <> 0
		|	ИЛИ СУММА(Себестоимость.Стоимость) <> 0
		|	ИЛИ СУММА(Себестоимость.СтоимостьБезНДС) <> 0
		|	ИЛИ СУММА(Себестоимость.ДопРасходы) <> 0
		|	ИЛИ СУММА(Себестоимость.ДопРасходыБезНДС) <> 0
		|	ИЛИ СУММА(Себестоимость.СтоимостьЗабалансовая) <> 0
		|	ИЛИ СУММА(Себестоимость.Трудозатраты) <> 0
		|	ИЛИ СУММА(Себестоимость.ПостатейныеПостоянныеСНДС) <> 0
		|	ИЛИ СУММА(Себестоимость.ПостатейныеПеременныеСНДС) <> 0
		|	ИЛИ СУММА(Себестоимость.ПостатейныеПостоянныеБезНДС) <> 0
		|	ИЛИ СУММА(Себестоимость.ПостатейныеПеременныеБезНДС) <> 0
		|	ИЛИ СУММА(Себестоимость.СтоимостьРегл) <> 0
		|	ИЛИ СУММА(Себестоимость.ДопРасходыРегл) <> 0
		|	ИЛИ СУММА(Себестоимость.СтоимостьЗабалансоваяРегл) <> 0
		|	ИЛИ СУММА(Себестоимость.ТрудозатратыРегл) <> 0
		|	ИЛИ СУММА(Себестоимость.ПостатейныеПостоянныеРегл) <> 0
		|	ИЛИ СУММА(Себестоимость.ПостатейныеПеременныеРегл) <> 0
		|	ИЛИ СУММА(Себестоимость.РезервПодОбесценениеРегл) <> 0
		|	ИЛИ СУММА(Себестоимость.СтоимостьУпр) <> 0
		|	ИЛИ СУММА(Себестоимость.ДопРасходыУпр) <> 0
		|	ИЛИ СУММА(Себестоимость.ТрудозатратыУпр) <> 0
		|	ИЛИ СУММА(Себестоимость.ПостатейныеПостоянныеУпр) <> 0
		|	ИЛИ СУММА(Себестоимость.ПостатейныеПеременныеУпр) <> 0
		|	ИЛИ СУММА(Себестоимость.РезервПодОбесценениеУпр) <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	РазделУчета,
		|	ВидЗапасов,
		|	Партия,
		|	АналитикаУчетаПартий,
		|	АналитикаФинансовогоУчета,
		|	ВидДеятельностиНДС
		|";
КонецФункции

//++ НЕ УТКА

//++ Устарело_Переработка24

Функция ТекстВтРаботыДляДавальца() // вт ВтРаботыДляДавальца
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.АналитикаУчетаПартий КАК КорАналитикаУчетаПартий
		|ПОМЕСТИТЬ ВтРаботыДляДавальца
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|	И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
		|	И ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|	И ДД.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	КорАналитикаУчетаНоменклатуры,
		|	КорВидЗапасов,
		|	КорАналитикаУчетаПартий
		|";
КонецФункции
//-- Устарело_Переработка24

//-- НЕ УТКА

Функция ТекстВтПеремещенияСписания() // вт ВтПеремещенияСписания, использует ВтРаботыДляДавальца

	Возврат "
		|ВЫБРАТЬ
		|	Себестоимость.НомерУзлаИсточник            					КАК НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник            					КАК НомерУзлаПриемник,
		|	Себестоимость.РеализацияВДругуюОрганизацию 					КАК РеализацияВДругуюОрганизацию,
		|	СУММА(Себестоимость.Количество)	           					КАК ВесДуги,
		|	МАКСИМУМ(Себестоимость.НеПеремещатьЗабалансовуюСтоимость)  	КАК НеПеремещатьЗабалансовуюСтоимость,
		|	МАКСИМУМ(Себестоимость.НеПеремещатьБалансовуюСтоимость)  	КАК НеПеремещатьБалансовуюСтоимость
		|ПОМЕСТИТЬ ВтПеремещенияСписания
		|ИЗ (
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|			 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет),
		|			 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет))
		|				ТОГДА УзлыКорректировкиПриемникРеглУчет.НомерУзла
		|			КОГДА НЕ УзлыКорректировкиПриемникПередачи.НомерУзла ЕСТЬ NULL
		|				ТОГДА УзлыКорректировкиПриемникПередачи.НомерУзла
		|			ИНАЧЕ УзлыКорректировкиПриемник.НомерУзла КОНЕЦ) КАК НомерУзлаПриемник,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями))
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК РеализацияВДругуюОрганизацию,
		|		Себестоимость.Количество,
		// Условие должно быть аналогично РасчетСебестоимостиКорректировкаСтоимости.СформироватьКорДвиженияСебестоимостьТоваровЗапросом, поля СтоимостьЗабалансовая и СтоимостьЗабалансоваяРегл
		|		ВЫБОР
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупТоваровДавальца)
		|				ТОГДА ИСТИНА
		|			КОГДА Себестоимость.ВидЗапасов.ТипЗапасов В
		|				(ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
		|		 		 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
		|		 		 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
		|			  И (НЕ Себестоимость.КорВидЗапасов.ТипЗапасов В
		|				   (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
		|		 		    ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
		|		 		    ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
		|			    ИЛИ Себестоимость.КорАналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
		|				ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ КАК НеПеремещатьЗабалансовуюСтоимость,
		|		(ВЫБОР
		|			КОГДА (ЛОЖЬ
		//++ НЕ УТКА

		//++ Устарело_Переработка24
		|				ИЛИ НЕ РаботыДляДавальца.Регистратор ЕСТЬ NULL
		//-- Устарело_Переработка24
		|				ИЛИ Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
		|				ИЛИ Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы)
		|	  			ИЛИ Себестоимость.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
		//-- НЕ УТКА
		|				) ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК НеПеремещатьБалансовуюСтоимость
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.РазделУчета                 = Себестоимость.РазделУчета
		|			И УзлыКорректировкиИсточник.ВидЗапасов                  = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация                 = Себестоимость.Организация
		|			И (УзлыКорректировкиИсточник.Партия              	    = Себестоимость.Партия
		|				ИЛИ &РегламентноеЗадание
		|		 		И Себестоимость.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
		|			И (УзлыКорректировкиИсточник.АналитикаУчетаПартий        = Себестоимость.АналитикаУчетаПартий
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиИсточник.АналитикаФинансовогоУчета   = Себестоимость.АналитикаФинансовогоУчета
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиИсточник.ВидДеятельностиНДС          = Себестоимость.ВидДеятельностиНДС
		|				ИЛИ &РегламентноеЗадание
		|		 		И Себестоимость.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры   = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемник.РазделУчета               = Себестоимость.КорРазделУчета
		|			И УзлыКорректировкиПриемник.ВидЗапасов                = Себестоимость.КорВидЗапасов
		|			И УзлыКорректировкиПриемник.Организация               = Себестоимость.Организация
		|			И (УзлыКорректировкиПриемник.Партия                    = Себестоимость.КорПартия
		|				ИЛИ &РегламентноеЗадание
		|		 		И Себестоимость.КорРазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
		|			И (УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Себестоимость.КорАналитикаУчетаПартий
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = Себестоимость.КорАналитикаФинансовогоУчета
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Себестоимость.КорВидДеятельностиНДС
		|				ИЛИ &РегламентноеЗадание
		|		 		И Себестоимость.КорРазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемникПередачи
		|		ПО
		|			УзлыКорректировкиПриемникПередачи.АналитикаУчетаНоменклатуры  = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемникПередачи.РазделУчета               = Себестоимость.КорРазделУчета
		|			И УзлыКорректировкиПриемникПередачи.ВидЗапасов                = Себестоимость.КорВидЗапасов
		|			И УзлыКорректировкиПриемникПередачи.Организация               = Себестоимость.КорОрганизация
		|			И (УзлыКорректировкиПриемникПередачи.Партия                   = Себестоимость.КорПартия
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемникПередачи.АналитикаУчетаПартий     = Себестоимость.КорАналитикаУчетаПартий
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемникПередачи.АналитикаФинансовогоУчета = Себестоимость.КорАналитикаФинансовогоУчета
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемникПередачи.ВидДеятельностиНДС        = Себестоимость.КорВидДеятельностиНДС
		|				ИЛИ &РегламентноеЗадание)
		|			И Себестоимость.РазделУчета    <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
		|			И Себестоимость.КорОрганизация <> Себестоимость.Организация
		|			И Себестоимость.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			ВтУзлыКорректировки КАК УзлыКорректировкиПриемникРеглУчет
		|		ПО
		|			УзлыКорректировкиПриемникРеглУчет.АналитикаУчетаНоменклатуры 	= Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемникРеглУчет.РазделУчета 				= Себестоимость.РазделУчета
		|			И УзлыКорректировкиПриемникРеглУчет.ВидЗапасов 					= Себестоимость.КорВидЗапасов
		|			И УзлыКорректировкиПриемникРеглУчет.Организация 				= Себестоимость.КорОрганизация
		|			И УзлыКорректировкиПриемникРеглУчет.Партия 						= Себестоимость.КорПартия
		|			И УзлыКорректировкиПриемникРеглУчет.АналитикаУчетаПартий 		= Себестоимость.КорАналитикаУчетаПартий
		|			И УзлыКорректировкиПриемникРеглУчет.АналитикаФинансовогоУчета 	= Себестоимость.КорАналитикаФинансовогоУчета
		|			И УзлыКорректировкиПриемникРеглУчет.ВидДеятельностиНДС 			= Себестоимость.КорВидДеятельностиНДС
		|
		//++ НЕ УТКА

		//++ Устарело_Переработка24
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРаботыДляДавальца КАК РаботыДляДавальца
		|			ПО РаботыДляДавальца.Регистратор                  = Себестоимость.Регистратор
		|			И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И РаботыДляДавальца.КорВидЗапасов                 = Себестоимость.КорВидЗапасов
		|			И РаботыДляДавальца.КорАналитикаУчетаПартий       = Себестоимость.КорАналитикаУчетаПартий
		//-- Устарело_Переработка24

		//-- НЕ УТКА
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
		|			ПО ЕстьВозвратныеОтходы.Организация = Себестоимость.Организация
		|			И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
		|			И ЕстьВозвратныеОтходы.ВидЗапасов = Себестоимость.ВидЗапасов
		|			И ЕстьВозвратныеОтходы.РазделУчета = Себестоимость.РазделУчета
		|	ГДЕ
		|		НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|		И Себестоимость.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
		|		И НЕ (Себестоимость.Сторно
		|			И Себестоимость.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода)))
		//++ НЕ УТ
		
		//++ Устарело_Переработка24
		|		И НЕ (Себестоимость.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика
		|			И Себестоимость.ДокументДвижения = Себестоимость.Регистратор)
		|		И НЕ (Себестоимость.Регистратор ССЫЛКА Документ.ОтчетПереработчика
		|			И Себестоимость.ДокументДвижения = Себестоимость.Регистратор)
		//-- Устарело_Переработка24
		
		//-- НЕ УТ
		|		И (НЕ УзлыКорректировкиПриемник.НомерУзла ЕСТЬ NULL
		|			ИЛИ НЕ УзлыКорректировкиПриемникПередачи.НомерУзла ЕСТЬ NULL
		|			ИЛИ НЕ УзлыКорректировкиПриемникРеглУчет.НомерУзла ЕСТЬ NULL)
		// Исключим перемещения в тот же самый узел, кроме выпуска продукции
		|		И (УзлыКорректировкиИсточник.НомерУзла <>
		|			(ВЫБОР
		|				КОГДА Себестоимость.ХозяйственнаяОперация В (
		|				 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет),
		|				 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет))
		|					ТОГДА УзлыКорректировкиПриемникРеглУчет.НомерУзла
		|				КОГДА НЕ УзлыКорректировкиПриемникПередачи.НомерУзла ЕСТЬ NULL
		|					ТОГДА УзлыКорректировкиПриемникПередачи.НомерУзла
		|				ИНАЧЕ УзлыКорректировкиПриемник.НомерУзла КОНЕЦ)
		|			ИЛИ Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции))
		// Исключаем передачу продукции на склад по фиксированной стоимости. Фиксированная стоимость уже учтена в первоначальной стоимости узла.
		|		И Себестоимость.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводстваФиксированнаяСтоимость)
		// Исключаем возвратные отходы (дуга для возвратных отходов формируется отдельным запросом).
		|		И НЕ(Себестоимость.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|			И Себестоимость.Количество < 0
		|			И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL)
		|
		// Уменьшение веса дуг при возврате товаров от клиента или при корректировке реализации в минус,
		// если при возврате не меняется вид деятельности НДС.
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
		|		ЛОЖЬ КАК РеализацияВДругуюОрганизацию,
		|		-Себестоимость.Количество КАК Количество,
		|		ЛОЖЬ КАК НеПеремещатьЗабалансовуюСтоимость,
		|		ЛОЖЬ КАК НеПеремещатьБалансовуюСтоимость
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры   = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.РазделУчета               = Себестоимость.РазделУчета
		|			И УзлыКорректировкиИсточник.ВидЗапасов                = Себестоимость.КорВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиИсточник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиИсточник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиИсточник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиИсточник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДСОтгрузки
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемник.РазделУчета               = Себестоимость.РазделУчета
		|			И УзлыКорректировкиПриемник.ВидЗапасов                = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиПриемник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиПриемник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДС
		|	ГДЕ
		|		НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|		И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно)
		|		И Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации)
		|		И НЕ Себестоимость.РазделУчета В (&ЗабалансовыеРазделыУчета)
		|		И УзлыКорректировкиИсточник.НомерУзла <> УзлыКорректировкиПриемник.НомерУзла
		|
		//++ НЕ УТКА
		
		//++ Устарело_Переработка24
		
		// В КА и УТ 11 нет производства из давальческого сырья
		// Распределение затрат на работы по выпуску продукции из давальческого сырья.
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
		|		ЛОЖЬ КАК РеализацияВДругуюОрганизацию,
		|		Себестоимость.Количество,
		|		ИСТИНА КАК НеПеремещатьЗабалансовуюСтоимость,
		|		ЛОЖЬ КАК НеПеремещатьБалансовуюСтоимость
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.РазделУчета               = Себестоимость.РазделУчета
		|			И УзлыКорректировкиИсточник.ВидЗапасов                = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиИсточник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиИсточник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиИсточник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиИсточник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДС
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРаботыДляДавальца КАК РаботыДляДавальца
		|		ПО РаботыДляДавальца.Регистратор                      = Себестоимость.Регистратор
		|			И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И РаботыДляДавальца.КорВидЗапасов                 = Себестоимость.КорВидЗапасов
		|			И РаботыДляДавальца.КорАналитикаУчетаПартий       = Себестоимость.КорАналитикаУчетаПартий
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры   = РаботыДляДавальца.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемник.РазделУчета               = РаботыДляДавальца.РазделУчета
		|			И УзлыКорректировкиПриемник.ВидЗапасов                = РаботыДляДавальца.ВидЗапасов
		|			И УзлыКорректировкиПриемник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиПриемник.Партия                    = Себестоимость.КорПартия
		|			И УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Себестоимость.КорАналитикаУчетаПартий
		|			И УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = РаботыДляДавальца.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Себестоимость.КорВидДеятельностиНДС
		|	ГДЕ
		|		НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|		И Себестоимость.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
		|		И НЕ (Себестоимость.Сторно И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода))
		//-- Устарело_Переработка24
		
		//-- НЕ УТКА

		//++ НЕ УТ

		// Распределение возвратных отходов
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
		|		ЛОЖЬ КАК РеализацияВДругуюОрганизацию,
		|		Себестоимость.Количество КАК Количество,
		|		ЛОЖЬ КАК НеПеремещатьЗабалансовуюСтоимость,
		|		ЛОЖЬ КАК НеПеремещатьБалансовуюСтоимость
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.ВидЗапасов                = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиИсточник.РазделУчета               = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|			И УзлыКорректировкиИсточник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиИсточник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиИсточник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиИсточник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДС
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры   = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемник.РазделУчета               = Себестоимость.КорРазделУчета
		|			И УзлыКорректировкиПриемник.ВидЗапасов                = Себестоимость.КорВидЗапасов
		|			И УзлыКорректировкиПриемник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиПриемник.Партия                    = Себестоимость.КорПартия
		|			И УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Себестоимость.КорАналитикаУчетаПартий
		|			И УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = Себестоимость.КорАналитикаФинансовогоУчета
		|			И УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Себестоимость.КорВидДеятельностиНДС
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
		|			ПО ЕстьВозвратныеОтходы.Организация               = Себестоимость.Организация
		|			И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
		|			И ЕстьВозвратныеОтходы.ВидЗапасов                 = Себестоимость.ВидЗапасов
		|			И ЕстьВозвратныеОтходы.РазделУчета                = Себестоимость.РазделУчета
		|	ГДЕ
		|		НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|		И Себестоимость.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		И Себестоимость.Количество < 0
		|		И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
		//-- НЕ УТ
		|	) КАК Себестоимость
		|СГРУППИРОВАТЬ ПО
		|	Себестоимость.НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник,
		|	Себестоимость.РеализацияВДругуюОрганизацию
		|";
КонецФункции

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУПоФИФОВзвешенная

Процедура ПодготовитьДанныеДляРасчетаСтоимостиПоФИФО(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);

	// Формирование таблицы узлов.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|
	|	Себестоимость.КоличествоОстаток
	|ПОМЕСТИТЬ ВТНачальныеОстатки
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаНачалоПериода,
	|			Организация В (&ОрганизацииСФИФОВзвешенная)
	|		) КАК Себестоимость
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|
	|	Себестоимость.Количество                    КАК КоличествоОстаток,
	|	Себестоимость.ДопРасходы                    КАК ДопРасходыОстаток,
	|	Себестоимость.ДопРасходыБезНДС              КАК ДопРасходыБезНДСОстаток,
	|	Себестоимость.Трудозатраты                  КАК ТрудозатратыОстаток,
	|	Себестоимость.ПостатейныеПостоянныеСНДС     КАК ПостатейныеПостоянныеСНДСОстаток,
	|	Себестоимость.ПостатейныеПостоянныеБезНДС   КАК ПостатейныеПостоянныеБезНДСОстаток,
	|	Себестоимость.ПостатейныеПеременныеСНДС     КАК ПостатейныеПеременныеСНДСОстаток,
	|	Себестоимость.ПостатейныеПеременныеБезНДС   КАК ПостатейныеПеременныеБезНДСОстаток,
	|
	|	Себестоимость.ДопРасходыРегл                КАК ДопРасходыРеглОстаток,
	|	Себестоимость.ТрудозатратыРегл              КАК ТрудозатратыРеглОстаток,
	|	Себестоимость.ПостатейныеПостоянныеРегл     КАК ПостатейныеПостоянныеРеглОстаток,
	|	Себестоимость.ПостатейныеПеременныеРегл     КАК ПостатейныеПеременныеРеглОстаток,
	|	Себестоимость.ДопРасходыУпр                 КАК ДопРасходыУпрОстаток,
	|	Себестоимость.ТрудозатратыУпр               КАК ТрудозатратыУпрОстаток,
	|	Себестоимость.ПостатейныеПостоянныеУпр      КАК ПостатейныеПостоянныеУпрОстаток,
	|	Себестоимость.ПостатейныеПеременныеУпр      КАК ПостатейныеПеременныеУпрОстаток
	|
	|ПОМЕСТИТЬ ВТКонечныеОстатки
	|ИЗ
	|	ВТКэшРасчетныеОстаткиСебестоимостьТоваров КАК Себестоимость
	|ГДЕ
	|	Себестоимость.Организация В (&ОрганизацииСФИФОВзвешенная)
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|
	|	СУММА(Себестоимость.Количество) КАК КоличествоПриход
	|ПОМЕСТИТЬ ВТПриходы
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|ГДЕ
	|	Себестоимость.СлужебноеВидДвиженияПриход
	|	И Себестоимость.Организация В (&ОрганизацииСФИФОВзвешенная)
	|	И (Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		ИЛИ НЕ &ПартионныйУчетВерсии22)
	|
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&КонецПериода, СЕКУНДА, 1) КАК Период,
	|	КонечныеОстатки.Организация,
	|	КонечныеОстатки.АналитикаУчетаНоменклатуры,
	|	КонечныеОстатки.РазделУчета,
	|	КонечныеОстатки.ВидЗапасов,
	|	КонечныеОстатки.Партия,
	|	КонечныеОстатки.АналитикаУчетаПартий,
	|	КонечныеОстатки.АналитикаФинансовогоУчета,
	|	КонечныеОстатки.ВидДеятельностиНДС,
	|
	|	(ВЫБОР
	|		КОГДА КонечныеОстатки.КоличествоОстаток > 0 ТОГДА КонечныеОстатки.КоличествоОстаток
	|		ИНАЧЕ 0 КОНЕЦ) 																		КАК КоличествоОстаток,
	|	(ВЫБОР
	|		КОГДА КонечныеОстатки.КоличествоОстаток > 0 ТОГДА КонечныеОстатки.КоличествоОстаток
	|		ИНАЧЕ 0 КОНЕЦ) 																		КАК КоличествоОстатокНаКонецПериода,
	|	ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) КАК КоличествоПриход,
	|
	|	0 КАК СтоимостьОстаток,
	|	0 КАК СтоимостьБезНДСОстаток,
	|	0 КАК СтоимостьЗабалансоваяОстаток,
	|	0 КАК СтоимостьРеглОстаток,
	|	0 КАК СтоимостьЗабалансоваяРеглОстаток,
	|	0 КАК СтоимостьУпрОстаток,
	|
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ДопРасходыОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьДопРасходыОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ДопРасходыБезНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьДопРасходыБезНДСОстаток,
	|
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ТрудозатратыОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПостоянныеСНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеСНДСОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПостоянныеБезНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеБезНДСОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПеременныеСНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеСНДСОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПеременныеБезНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеБезНДСОстаток,
	|
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ДопРасходыРеглОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыРеглОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ДопРасходыУпрОстаток /
	|					(ЕСТЬNULL(Приходы.КоличествоПриход, 0) + ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыУпрОстаток,
	|
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ТрудозатратыРеглОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыРеглОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПостоянныеРеглОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеРеглОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПеременныеРеглОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеРеглОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ТрудозатратыУпрОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыУпрОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПостоянныеУпрОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеУпрОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПеременныеУпрОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеУпрОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ВТКонечныеОстатки КАК КонечныеОстатки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТНачальныеОстатки КАК НачальныеОстатки
	|		ПО КонечныеОстатки.Организация = НачальныеОстатки.Организация
	|		И КонечныеОстатки.АналитикаУчетаНоменклатуры = НачальныеОстатки.АналитикаУчетаНоменклатуры
	|		И КонечныеОстатки.РазделУчета = НачальныеОстатки.РазделУчета
	|		И КонечныеОстатки.ВидЗапасов = НачальныеОстатки.ВидЗапасов
	|		И КонечныеОстатки.Партия = НачальныеОстатки.Партия
	|		И КонечныеОстатки.АналитикаУчетаПартий = НачальныеОстатки.АналитикаУчетаПартий
	|		И КонечныеОстатки.АналитикаФинансовогоУчета = НачальныеОстатки.АналитикаФинансовогоУчета
	|		И КонечныеОстатки.ВидДеятельностиНДС = НачальныеОстатки.ВидДеятельностиНДС
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПриходы КАК Приходы
	|		ПО КонечныеОстатки.Организация = Приходы.Организация
	|		И КонечныеОстатки.АналитикаУчетаНоменклатуры = Приходы.АналитикаУчетаНоменклатуры
	|		И КонечныеОстатки.РазделУчета = Приходы.РазделУчета
	|		И КонечныеОстатки.ВидЗапасов = Приходы.ВидЗапасов
	|		И КонечныеОстатки.Партия = Приходы.Партия
	|		И КонечныеОстатки.АналитикаУчетаПартий = Приходы.АналитикаУчетаПартий
	|		И КонечныеОстатки.АналитикаФинансовогоУчета = Приходы.АналитикаФинансовогоУчета
	|		И КонечныеОстатки.ВидДеятельностиНДС = Приходы.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВТНачальныеОстатки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВТКонечныеОстатки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВТПриходы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	1 
	|ПОМЕСТИТЬ ТаблицаПериодыПартий
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);

	Запрос.Текст =
	"
	|УНИЧТОЖИТЬ ТаблицаПериодыПартий
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	СебестоимостьТоваров.Организация                           КАК Организация,
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.РазделУчета                           КАК РазделУчета,
	|	СебестоимостьТоваров.ВидЗапасов                            КАК ВидЗапасов,
	|	СебестоимостьТоваров.Партия                                КАК Партия,
	|	СебестоимостьТоваров.АналитикаУчетаПартий                  КАК АналитикаУчетаПартий,
	|	СебестоимостьТоваров.АналитикаФинансовогоУчета             КАК АналитикаФинансовогоУчета,
	|	СебестоимостьТоваров.ВидДеятельностиНДС                    КАК ВидДеятельностиНДС,
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(СебестоимостьТоваров.Период, День)) КАК Период
	|ПОМЕСТИТЬ ТаблицаПериодыПартий
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК СебестоимостьТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК ТаблицаОстатков
	|			ПО СебестоимостьТоваров.АналитикаУчетаНоменклатуры   = ТаблицаОстатков.АналитикаУчетаНоменклатуры
	|				И СебестоимостьТоваров.РазделУчета 				 = ТаблицаОстатков.РазделУчета
	|				И СебестоимостьТоваров.ВидЗапасов  				 = ТаблицаОстатков.ВидЗапасов
	|				И СебестоимостьТоваров.Организация 				 = ТаблицаОстатков.Организация
	|				И СебестоимостьТоваров.Партия 					 = ТаблицаОстатков.Партия
	|				И СебестоимостьТоваров.АналитикаУчетаПартий 	 = ТаблицаОстатков.АналитикаУчетаПартий
	|				И СебестоимостьТоваров.АналитикаФинансовогоУчета = ТаблицаОстатков.АналитикаФинансовогоУчета
	|				И СебестоимостьТоваров.ВидДеятельностиНДС 		 = ТаблицаОстатков.ВидДеятельностиНДС
	|				И ТаблицаОстатков.КоличествоОстаток <> 0
	|ГДЕ
	|	СебестоимостьТоваров.СлужебноеВидДвиженияПриход
	|	И СебестоимостьТоваров.Стоимость <> 0
	|	И СебестоимостьТоваров.Период < ТаблицаОстатков.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.ВидЗапасов,
	|	СебестоимостьТоваров.РазделУчета,
	|	СебестоимостьТоваров.Организация,
	|	СебестоимостьТоваров.Партия,
	|	СебестоимостьТоваров.АналитикаУчетаПартий,
	|	СебестоимостьТоваров.АналитикаФинансовогоУчета,
	|	СебестоимостьТоваров.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Себестоимость.Период                                КАК Период,
	|	Себестоимость.Организация                           КАК Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета                           КАК РазделУчета,
	|	Себестоимость.ВидЗапасов                            КАК ВидЗапасов,
	|	Себестоимость.Партия                                КАК Партия,
	|	Себестоимость.АналитикаУчетаПартий                  КАК АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета             КАК АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС                    КАК ВидДеятельностиНДС,
	|	СУММА(Себестоимость.Количество)                     КАК Количество,
	|	СУММА(Себестоимость.Стоимость)                      КАК Стоимость,
	|	СУММА(Себестоимость.СтоимостьБезНДС)                КАК СтоимостьБезНДС,
	|	СУММА(Себестоимость.СтоимостьЗабалансовая)          КАК СтоимостьЗабалансовая,
	|	СУММА(Себестоимость.СтоимостьРегл)                  КАК СтоимостьРегл,
	|	СУММА(Себестоимость.СтоимостьЗабалансоваяРегл)      КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(Себестоимость.СтоимостьУпр)                   КАК СтоимостьУпр
	|ПОМЕСТИТЬ ТаблицаВнешнихПоступлений
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПериодыПартий.Период                                КАК Период,
	|		ПериодыПартий.Организация                           КАК Организация,
	|		ПериодыПартий.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|		ПериодыПартий.РазделУчета                           КАК РазделУчета,
	|		ПериодыПартий.ВидЗапасов                            КАК ВидЗапасов,
	|		ПериодыПартий.Партия                                КАК Партия,
	|		ПериодыПартий.АналитикаУчетаПартий                  КАК АналитикаУчетаПартий,
	|		ПериодыПартий.АналитикаФинансовогоУчета             КАК АналитикаФинансовогоУчета,
	|		ПериодыПартий.ВидДеятельностиНДС                    КАК ВидДеятельностиНДС,
	|		ЕСТЬNULL(Себестоимость.Количество, 0)               КАК Количество,
	|		ЕСТЬNULL(Себестоимость.Стоимость, 0)                КАК Стоимость,
	|		ЕСТЬNULL(Себестоимость.СтоимостьБезНДС, 0)          КАК СтоимостьБезНДС,
	|		ЕСТЬNULL(Себестоимость.СтоимостьЗабалансовая, 0)    КАК СтоимостьЗабалансовая,
	|		ЕСТЬNULL(Себестоимость.СтоимостьРегл, 0)            КАК СтоимостьРегл,
	|		ЕСТЬNULL(Себестоимость.СтоимостьЗабалансоваяРегл, 0) КАК СтоимостьЗабалансоваяРегл,
	|		ЕСТЬNULL(Себестоимость.СтоимостьУпр, 0)             КАК СтоимостьУпр
	|	ИЗ
	|		ТаблицаПериодыПартий КАК ПериодыПартий
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|			ПО ПериодыПартий.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
	|				И ПериодыПартий.РазделУчета               = Себестоимость.РазделУчета
	|				И ПериодыПартий.ВидЗапасов                = Себестоимость.ВидЗапасов
	|				И ПериодыПартий.Организация               = Себестоимость.Организация
	|				И ПериодыПартий.Партия                    = Себестоимость.Партия
	|				И ПериодыПартий.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
	|				И ПериодыПартий.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
	|				И ПериодыПартий.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДС
	|				И Себестоимость.СлужебноеВидДвиженияПриход
	|				И (Себестоимость.Период МЕЖДУ ПериодыПартий.Период И КОНЕЦПЕРИОДА(ПериодыПартий.Период, ДЕНЬ))
	|				И (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступлениеВнешнее))
	|				И Себестоимость.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|	) КАК Себестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Период,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаВнешнихПоступлений.Период КАК Период,
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаУчетаНоменклатуры,
	|	ТаблицаОстатков.РазделУчета,
	|	ТаблицаОстатков.ВидЗапасов,
	|	ТаблицаОстатков.Партия,
	|	ТаблицаОстатков.АналитикаУчетаПартий,
	|	ТаблицаОстатков.АналитикаФинансовогоУчета,
	|	ТаблицаОстатков.ВидДеятельностиНДС,
	|	(ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток > ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ТаблицаОстатков.КоличествоОстаток - ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|		ИНАЧЕ 0 КОНЕЦ) КАК НовыйКоличествоОстаток,
	|	ТаблицаОстатков.КоличествоОстатокНаКонецПериода,
	|	ТаблицаОстатков.КоличествоПриход,
	|
	|	ТаблицаОстатков.СтоимостьОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.Стоимость, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.Стоимость, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьОстаток,
	|
	|	ТаблицаОстатков.СтоимостьБезНДСОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьБезНДС, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьБезНДС, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьБезНДСОстаток,
	|
	|	ТаблицаОстатков.СтоимостьЗабалансоваяОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьЗабалансовая, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьЗабалансовая, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьЗабалансоваяОстаток,
	|
	|	ТаблицаОстатков.СтоимостьРеглОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьРегл, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьРегл, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьРеглОстаток,
	|
	|	ТаблицаОстатков.СтоимостьЗабалансоваяРеглОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьЗабалансоваяРегл, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьЗабалансоваяРегл, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьЗабалансоваяРеглОстаток,
	|
	|	ТаблицаОстатков.СтоимостьУпрОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьУпр, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьУпр, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьУпрОстаток,
	|
	|	ТаблицаОстатков.СтоимостьДопРасходыОстаток          КАК НоваяСтоимостьДопРасходыОстаток,
	|	ТаблицаОстатков.СтоимостьДопРасходыБезНДСОстаток    КАК НоваяСтоимостьДопРасходыБезНДСОстаток,
	|	ТаблицаОстатков.ТрудозатратыОстаток                 КАК НоваяТрудозатратыОстаток,
	|	ТаблицаОстатков.ПостатейныеПостоянныеСНДСОстаток    КАК НоваяПостатейныеПостоянныеСНДСОстаток,
	|	ТаблицаОстатков.ПостатейныеПостоянныеБезНДСОстаток  КАК НоваяПостатейныеПостоянныеБезНДСОстаток,
	|	ТаблицаОстатков.ПостатейныеПеременныеСНДСОстаток    КАК НоваяПостатейныеПеременныеСНДСОстаток,
	|	ТаблицаОстатков.ПостатейныеПеременныеБезНДСОстаток  КАК НоваяПостатейныеПеременныеБезНДСОстаток,
	|
	|	ТаблицаОстатков.ДопРасходыРеглОстаток               КАК НоваяДопРасходыРеглОстаток,
	|	ТаблицаОстатков.ТрудозатратыРеглОстаток             КАК НоваяТрудозатратыРеглОстаток,
	|	ТаблицаОстатков.ПостатейныеПостоянныеРеглОстаток    КАК НоваяПостатейныеПостоянныеРеглОстаток,
	|	ТаблицаОстатков.ПостатейныеПеременныеРеглОстаток    КАК НоваяПостатейныеПеременныеРеглОстаток,
	|
	|	ТаблицаОстатков.ДопРасходыУпрОстаток                КАК НоваяДопРасходыУпрОстаток,
	|	ТаблицаОстатков.ТрудозатратыУпрОстаток              КАК НоваяТрудозатратыУпрОстаток,
	|	ТаблицаОстатков.ПостатейныеПостоянныеУпрОстаток     КАК НоваяПостатейныеПостоянныеУпрОстаток,
	|	ТаблицаОстатков.ПостатейныеПеременныеУпрОстаток     КАК НоваяПостатейныеПеременныеУпрОстаток
	|
	|ПОМЕСТИТЬ ТаблицаНовыхОстатков
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВнешнихПоступлений КАК ТаблицаВнешнихПоступлений
	|		ПО ТаблицаОстатков.АналитикаУчетаНоменклатуры 	= ТаблицаВнешнихПоступлений.АналитикаУчетаНоменклатуры
	|			И ТаблицаОстатков.Организация 				= ТаблицаВнешнихПоступлений.Организация
	|			И ТаблицаОстатков.РазделУчета 				= ТаблицаВнешнихПоступлений.РазделУчета
	|			И ТаблицаОстатков.ВидЗапасов  				= ТаблицаВнешнихПоступлений.ВидЗапасов
	|			И ТаблицаОстатков.Партия                    = ТаблицаВнешнихПоступлений.Партия
	|			И ТаблицаОстатков.АналитикаУчетаПартий      = ТаблицаВнешнихПоступлений.АналитикаУчетаПартий
	|			И ТаблицаОстатков.АналитикаФинансовогоУчета = ТаблицаВнешнихПоступлений.АналитикаФинансовогоУчета
	|			И ТаблицаОстатков.ВидДеятельностиНДС        = ТаблицаВнешнихПоступлений.ВидДеятельностиНДС
	|			И ТаблицаОстатков.КоличествоОстаток <> 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаВнешнихПоступлений
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаНовыхОстатков.Период,
	|	ТаблицаНовыхОстатков.Организация,
	|	ТаблицаНовыхОстатков.АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыхОстатков.РазделУчета,
	|	ТаблицаНовыхОстатков.ВидЗапасов,
	|	ТаблицаНовыхОстатков.Партия,
	|	ТаблицаНовыхОстатков.АналитикаУчетаПартий,
	|	ТаблицаНовыхОстатков.АналитикаФинансовогоУчета,
	|	ТаблицаНовыхОстатков.ВидДеятельностиНДС,
	|
	|	ТаблицаНовыхОстатков.НовыйКоличествоОстаток КАК КоличествоОстаток,
	|	ТаблицаНовыхОстатков.КоличествоОстатокНаКонецПериода КАК КоличествоОстатокНаКонецПериода,
	|	ТаблицаНовыхОстатков.КоличествоПриход,
	|
	|	ТаблицаНовыхОстатков.НоваяСтоимостьОстаток                   КАК СтоимостьОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьБезНДСОстаток             КАК СтоимостьБезНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьЗабалансоваяОстаток       КАК СтоимостьЗабалансоваяОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьРеглОстаток               КАК СтоимостьРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьЗабалансоваяРеглОстаток   КАК СтоимостьЗабалансоваяРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьУпрОстаток                КАК СтоимостьУпрОстаток,
	|
	|	ТаблицаНовыхОстатков.НоваяСтоимостьДопРасходыОстаток         КАК СтоимостьДопРасходыОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьДопРасходыБезНДСОстаток   КАК СтоимостьДопРасходыБезНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяТрудозатратыОстаток                КАК ТрудозатратыОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПостоянныеСНДСОстаток   КАК ПостатейныеПостоянныеСНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПостоянныеБезНДСОстаток КАК ПостатейныеПостоянныеБезНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПеременныеСНДСОстаток   КАК ПостатейныеПеременныеСНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПеременныеБезНДСОстаток КАК ПостатейныеПеременныеБезНДСОстаток,
	|
	|	ТаблицаНовыхОстатков.НоваяДопРасходыРеглОстаток              КАК ДопРасходыРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяТрудозатратыРеглОстаток            КАК ТрудозатратыРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПостоянныеРеглОстаток   КАК ПостатейныеПостоянныеРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПеременныеРеглОстаток   КАК ПостатейныеПеременныеРеглОстаток,
	|
	|	ТаблицаНовыхОстатков.НоваяДопРасходыУпрОстаток               КАК ДопРасходыУпрОстаток,
	|	ТаблицаНовыхОстатков.НоваяТрудозатратыУпрОстаток             КАК ТрудозатратыУпрОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПостоянныеУпрОстаток    КАК ПостатейныеПостоянныеУпрОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПеременныеУпрОстаток    КАК ПостатейныеПеременныеУпрОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ТаблицаНовыхОстатков КАК ТаблицаНовыхОстатков
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаНовыхОстатков
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	ТаблицаПериодыПартий КАК ТаблицаПериодыПартий
	|";
	
	Пока Истина Цикл 
		
		// Максимальное количество выполнений запроса = максимальному количеству поступлений товара на склад.
		РезультатЗапроса = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос,,, Истина);
		
		Если РезультатЗапроса.Пустой() Тогда
			Прервать;
		КонецЕсли;
		
		РасчетСебестоимостиПротоколРасчета.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
			ПараметрыРасчета,
			РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета, "ТаблицаОстатков"));
		
	КонецЦикла;

	// Выполняется корректировка количества и стоимости внешних приходов в узел.
	Запрос.Текст = "
	|УНИЧТОЖИТЬ ТаблицаПериодыПартий
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаУзлыКорректировки.НомерУзла                  КАК НомерУзла,
	|	ТаблицаУзлыКорректировки.Организация                КАК Организация,
	|	ТаблицаУзлыКорректировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаУзлыКорректировки.РазделУчета                КАК РазделУчета,
	|	ТаблицаУзлыКорректировки.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаУзлыКорректировки.Партия                     КАК Партия,
	|	ТаблицаУзлыКорректировки.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|	ТаблицаУзлыКорректировки.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|	ТаблицаУзлыКорректировки.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.Количество
	|		ИНАЧЕ ТаблицаУзлыКорректировки.Количество
	|		 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|		 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) КОНЕЦ) КАК Количество,
	|	ТаблицаУзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК КоличествоСписаноПоФиксСтоимости,
	|
	// Ресурсы для расчета себестоимости товаров предприятия.
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.Стоимость
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.Стоимость - ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0) 
	|	КОНЕЦ                                 КАК Стоимость,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.СтоимостьБезНДС
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.СтоимостьБезНДС - ЕСТЬNULL(ТаблицаОстатков.СтоимостьБезНДСОстаток, 0) 
	|	КОНЕЦ                                 КАК СтоимостьБезНДС,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.СтоимостьЗабалансовая
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.СтоимостьЗабалансовая - ЕСТЬNULL(ТаблицаОстатков.СтоимостьЗабалансоваяОстаток, 0) 
	|	КОНЕЦ                                 КАК СтоимостьЗабалансовая,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ДопРасходы
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.Стоимость - ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ДопРасходы - ЕСТЬNULL(ТаблицаОстатков.СтоимостьДопРасходыОстаток, 0) 
	|	КОНЕЦ                                 КАК ДопРасходы,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ДопРасходыБезНДС
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьБезНДС - ЕСТЬNULL(ТаблицаОстатков.СтоимостьБезНДСОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ДопРасходыБезНДС - ЕСТЬNULL(ТаблицаОстатков.СтоимостьДопРасходыБезНДСОстаток, 0)
	|	КОНЕЦ                                 КАК ДопРасходыБезНДС,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.Трудозатраты
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.Стоимость - ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.Трудозатраты - ЕСТЬNULL(ТаблицаОстатков.ТрудозатратыОстаток, 0) 
	|	КОНЕЦ                                 КАК Трудозатраты,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПостоянныеСНДС
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.Стоимость - ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПостоянныеСНДС - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПостоянныеСНДСОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПостоянныеСНДС,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПостоянныеБезНДС
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьБезНДС - ЕСТЬNULL(ТаблицаОстатков.СтоимостьБезНДСОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПостоянныеБезНДС - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПостоянныеБезНДСОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПостоянныеБезНДС,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПеременныеСНДС
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.Стоимость - ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПеременныеСНДС - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПеременныеСНДСОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПеременныеСНДС,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПеременныеБезНДС
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьБезНДС - ЕСТЬNULL(ТаблицаОстатков.СтоимостьБезНДСОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПеременныеБезНДС - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПеременныеБезНДСОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПеременныеБезНДС,
	|
	// Ресурсы для расчета себестоимости товаров организаций (регламентированный учет).
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.СтоимостьРегл
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.СтоимостьРегл - ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0)
	|	КОНЕЦ                                 КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.СтоимостьЗабалансоваяРегл
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.СтоимостьЗабалансоваяРегл - ЕСТЬNULL(ТаблицаОстатков.СтоимостьЗабалансоваяРеглОстаток, 0) 
	|	КОНЕЦ                                 КАК СтоимостьЗабалансоваяРегл,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ДопРасходыРегл
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьРегл - ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ДопРасходыРегл - ЕСТЬNULL(ТаблицаОстатков.ДопРасходыРеглОстаток, 0)
	|	КОНЕЦ                                 КАК ДопРасходыРегл,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ТрудозатратыРегл
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьРегл - ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ТрудозатратыРегл - ЕСТЬNULL(ТаблицаОстатков.ТрудозатратыРеглОстаток, 0)
	|	КОНЕЦ                                 КАК ТрудозатратыРегл,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПостоянныеРегл
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьРегл - ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПостоянныеРегл - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПостоянныеРеглОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПостоянныеРегл,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПеременныеРегл
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьРегл - ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПеременныеРегл - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПеременныеРеглОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПеременныеРегл,
	|
	// Ресурсы для расчета себестоимости товаров организаций (управленческий учет).
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.СтоимостьУпр
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.СтоимостьУпр - ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0)
	|	КОНЕЦ                                 КАК СтоимостьУпр,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ДопРасходыУпр
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьУпр - ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ДопРасходыУпр - ЕСТЬNULL(ТаблицаОстатков.ДопРасходыУпрОстаток, 0)
	|	КОНЕЦ                                              КАК ДопРасходыУпр,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ТрудозатратыУпр
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьУпр - ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ТрудозатратыУпр - ЕСТЬNULL(ТаблицаОстатков.ТрудозатратыУпрОстаток, 0)
	|	КОНЕЦ                                 КАК ТрудозатратыУпр,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПостоянныеУпр
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьУпр - ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПостоянныеУпр - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПостоянныеУпрОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПостоянныеУпр,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПеременныеУпр
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьУпр - ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПеременныеУпр - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПеременныеУпрОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПеременныеУпр
	|
	|ПОМЕСТИТЬ ВтУзлыКорректировкиВременная
	|ИЗ
	|	ВтУзлыКорректировки КАК ТаблицаУзлыКорректировки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК ТаблицаОстатков
	|		ПО ТаблицаУзлыКорректировки.АналитикаУчетаНоменклатуры   = ТаблицаОстатков.АналитикаУчетаНоменклатуры
	|			И ТаблицаУзлыКорректировки.РазделУчета               = ТаблицаОстатков.РазделУчета
	|			И ТаблицаУзлыКорректировки.ВидЗапасов                = ТаблицаОстатков.ВидЗапасов
	|			И ТаблицаУзлыКорректировки.Организация               = ТаблицаОстатков.Организация
	|			И ТаблицаУзлыКорректировки.Партия 					 = ТаблицаОстатков.Партия
	|			И ТаблицаУзлыКорректировки.АналитикаУчетаПартий 	 = ТаблицаОстатков.АналитикаУчетаПартий
	|			И ТаблицаУзлыКорректировки.АналитикаФинансовогоУчета = ТаблицаОстатков.АналитикаФинансовогоУчета
	|			И ТаблицаУзлыКорректировки.ВидДеятельностиНДС 		 = ТаблицаОстатков.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВтУзлыКорректировки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Т.НомерУзла КАК НомерУзла,
	|	Т.Организация КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Партия КАК Партия,
	|	Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	// Ресурсы для расчета себестоимости товаров предприятия.
	|	Т.Количество                  КАК Количество,
	|	Т.КоличествоСписаноПоФиксСтоимости КАК КоличествоСписаноПоФиксСтоимости,
	|	Т.Стоимость                   КАК Стоимость,
	|	Т.СтоимостьБезНДС             КАК СтоимостьБезНДС,
	|	Т.СтоимостьЗабалансовая       КАК СтоимостьЗабалансовая,
	|	Т.ДопРасходы                  КАК ДопРасходы,
	|	Т.ДопРасходыБезНДС            КАК ДопРасходыБезНДС,
	|	Т.Трудозатраты                КАК Трудозатраты,
	|	Т.ПостатейныеПостоянныеСНДС   КАК ПостатейныеПостоянныеСНДС,
	|	Т.ПостатейныеПеременныеСНДС   КАК ПостатейныеПеременныеСНДС,
	|	Т.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	Т.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	// Ресурсы для расчета себестоимости товаров организаций.
	|	Т.СтоимостьРегл               КАК СтоимостьРегл,
	|	Т.ДопРасходыРегл              КАК ДопРасходыРегл,
	|	Т.СтоимостьЗабалансоваяРегл   КАК СтоимостьЗабалансоваяРегл,
	|	Т.ТрудозатратыРегл            КАК ТрудозатратыРегл,
	|	Т.СтоимостьУпр                КАК СтоимостьУпр,
	|	Т.ДопРасходыУпр               КАК ДопРасходыУпр,
	|	Т.ТрудозатратыУпр             КАК ТрудозатратыУпр,
	|	Т.ПостатейныеПостоянныеРегл   КАК ПостатейныеПостоянныеРегл,
	|	Т.ПостатейныеПеременныеРегл   КАК ПостатейныеПеременныеРегл,
	|	Т.ПостатейныеПостоянныеУпр    КАК ПостатейныеПостоянныеУпр,
	|	Т.ПостатейныеПеременныеУпр    КАК ПостатейныеПеременныеУпр
	|
	|ПОМЕСТИТЬ ВтУзлыКорректировки
	|ИЗ
	|	ВтУзлыКорректировкиВременная КАК Т
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	АналитикаУчетаНоменклатуры,
	|	РазделУчета,
	|	ВидЗапасов,
	|	Партия,
	|	АналитикаУчетаПартий,
	|	АналитикаФинансовогоУчета,
	|	ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВтУзлыКорректировкиВременная
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУДополнительныеРасходы

// Этап "ПодготовкаДанныхДляРешенияСЛУ_ДополнительныеРасходы"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУ_ДополнительныеРасходы(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУ_ДополнительныеРасходы");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"УзлыКорректировкиДополнительныхРасходов,
		|СвязиУзловДополнительныхРасходов,
		|СвязиУзловПроизводственныхРасходовПрошлыхПериодов,
		|УзлыСЛУ_ДополнительныеРасходы,
		|СвязиСЛУ_ДополнительныеРасходы");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстДляРешенияСЛУ_ДополнительныеРасходы(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

Функция ТекстДляРешенияСЛУ_ДополнительныеРасходы(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(РасчетСебестоимостиКорректировкаСтоимости.ТекстСуммыПрочихРасходов(ПараметрыРасчета));
	ТекстыЗапросов.Добавить(ТекстУзлыКорректировкиДополнительныхРасходов());
	ТекстыЗапросов.Добавить(ТекстСвязиУзловДополнительныхРасходов());
	ТекстыЗапросов.Добавить(ТекстСвязиУзловПроизводственныхРасходовПрошлыхПериодов());
	ТекстыЗапросов.Добавить(ТекстНачальнаяСтоимостьДополнительныхРасходов()); // вт НачальнаяСтоимостьДополнительныхРасходов
	ТекстыЗапросов.Добавить(ТекстУзлыСЛУ_ДополнительныеРасходы()); // вт УзлыСЛУ_ДополнительныеРасходы
	ТекстыЗапросов.Добавить(ТекстСвязиСЛУ_ДополнительныеРасходы()); // вт СвязиСЛУ_ДополнительныеРасходы
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстУзлыКорректировкиДополнительныхРасходов()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	МАКСИМУМ(Т.НомерУзла) КАК НомерУзла
		|ПОМЕСТИТЬ МаксимальныеНомераУзловТоваров
		|ИЗ
		|	ВтУзлыКорректировки КАК Т
		|;
		|
		|ВЫБРАТЬ
		|	АВТОНОМЕРЗАПИСИ() КАК НомерУзла,
		|	Источник.Организация,
		|	Источник.Подразделение,
		|	Источник.СтатьяРасходов,
		|	Источник.АналитикаРасходов,
		|	Источник.НаправлениеДеятельности,
		|	Источник.ВесСНДС,
		|	Источник.ВесБезНДС,
		|	Источник.ВесРегл,
		|	Источник.ВесНУ,
		|	Источник.ВесУпр,
		|	Источник.ВесНДД,
		|	Источник.УправленческийУчет,
		|	Источник.РегламентированныйУчет,
		|	Источник.НалоговыйУчет,
		|	Источник.НДД
		|ПОМЕСТИТЬ УзлыКорректировкиДополнительныхРасходовПредварительная
		|ИЗ
		|	(ВЫБРАТЬ
		|		Реквизиты.Организация,
		|		Реквизиты.Подразделение,
		|		Реквизиты.СтатьяРасходов,
		|		Реквизиты.АналитикаРасходов,
		|		Реквизиты.НаправлениеДеятельности,
		|		СУММА(ВЫБОР
		|			КОГДА Реквизиты.УправленческийУчет
		|				ТОГДА Источник.ДоляСтоимости
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесСНДС,
		|		СУММА(ВЫБОР
		|			КОГДА Реквизиты.УправленческийУчет
		|				ТОГДА Источник.ДоляСтоимостиБезНДС
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесБезНДС,
		|		СУММА(ВЫБОР
		|			КОГДА Реквизиты.РегламентированныйУчет
		|				ТОГДА Источник.ДоляСтоимостиРегл
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесРегл,
		// Вес НУ должен заполняться если документ отражается в налоговом учета или бухгалтерском учете,
		// т.к. для расходов, не принимаемых для налогового учета, признак НалоговыйУчет в документе будет выключен,
		// а постоянная разница должна будет распределится вместе с суммой регл учета.  
		|		СУММА(ВЫБОР
		|			КОГДА Реквизиты.НалоговыйУчет
		|			 ИЛИ Реквизиты.РегламентированныйУчет
		|				ТОГДА Источник.ДоляСтоимостиНУ
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесНУ,
		|		СУММА(ВЫБОР
		|			КОГДА Реквизиты.УправленческийУчет
		|				ТОГДА Источник.ДоляСтоимостиУпр
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесУпр,
		|		СУММА(ВЫБОР
		|			КОГДА Реквизиты.НДД
		|				ТОГДА Источник.ДоляСтоимостиНДД
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесНДД,
		|		МАКСИМУМ(Реквизиты.УправленческийУчет) КАК УправленческийУчет,
		|		МАКСИМУМ(Реквизиты.РегламентированныйУчет) КАК РегламентированныйУчет,
		|		МАКСИМУМ(Реквизиты.НалоговыйУчет) КАК НалоговыйУчет,
		|		МАКСИМУМ(Реквизиты.НДД) КАК НДД
		|	ИЗ
		|		ДолиДополнительныхРасходов КАК Источник
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Реквизиты
		|			ПО Источник.Регистратор = Реквизиты.Ссылка
		|
		|	СГРУППИРОВАТЬ ПО
		|		Реквизиты.Организация,
		|		Реквизиты.Подразделение,
		|		Реквизиты.СтатьяРасходов,
		|		Реквизиты.АналитикаРасходов,
		|		Реквизиты.НаправлениеДеятельности) КАК Источник
		|;
		|
		|ВЫБРАТЬ
		|	Источник.НомерУзла + ЕСТЬNULL(НомераУзлов.НомерУзла, 0) КАК НомерУзла,
		|	Источник.Организация,
		|	Источник.Подразделение,
		|	Источник.СтатьяРасходов,
		|	Источник.АналитикаРасходов,
		|	Источник.НаправлениеДеятельности,
		|	Источник.ВесСНДС,
		|	Источник.ВесБезНДС,
		|	Источник.ВесРегл,
		|	Источник.ВесНУ,
		|	Источник.ВесУпр,
		|	Источник.ВесНДД,
		|	(ВЫБОР
		|		КОГДА Источник.УправленческийУчет
		|			ТОГДА ЕСТЬNULL(СуммыРасходовУпр.Сумма, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьСНДС,
		|	(ВЫБОР
		|		КОГДА Источник.УправленческийУчет
		|			ТОГДА ЕСТЬNULL(СуммыРасходовУпр.СуммаБезНДС, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьБезНДС,
		|	(ВЫБОР
		|		КОГДА Источник.УправленческийУчет
		|			ТОГДА ЕСТЬNULL(СуммыРасходовУпр.СуммаУпр, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьУпр,
		|	(ВЫБОР
		|		КОГДА Источник.РегламентированныйУчет
		|			ТОГДА ЕСТЬNULL(СуммыРасходовРегл.СуммаРегл, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьРегл,
		|	ВЫБОР
		|		КОГДА Источник.РегламентированныйУчет
		|			ТОГДА ЕСТЬNULL(СуммыРасходовРегл.ПостояннаяРазница, 0)
		|		ИНАЧЕ 0 КОНЕЦ КАК ПостояннаяРазница,
		//++ НЕ УТ
		
		//++ Локализация
		|	ВЫБОР
		|		КОГДА Источник.НалоговыйУчет
		|			ТОГДА ЕСТЬNULL(СуммыРасходовНУ.СуммаРегл, 0) - ЕСТЬNULL(СуммыРасходовНУ.ПостояннаяРазница, 0) - ЕСТЬNULL(СуммыРасходовНУ.ВременнаяРазница, 0)
		|		ИНАЧЕ 0 КОНЕЦ +
		//-- Локализация
		
		//-- НЕ УТ
		|	0 КАК СтоимостьНУ,
		|	ЕСТЬNULL(СуммыРасходовРегл.СуммаНДД, 0) КАК СтоимостьНДД
		|ПОМЕСТИТЬ УзлыКорректировкиДополнительныхРасходов
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходовПредварительная КАК Источник
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = Источник.СтатьяРасходов
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ МаксимальныеНомераУзловТоваров КАК НомераУзлов
		|		ПО ИСТИНА
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыРасходов КАК СуммыРасходовУпр
		|		ПО СуммыРасходовУпр.Организация = Источник.Организация
		|			И СуммыРасходовУпр.СтатьяРасходов = Источник.СтатьяРасходов
		|			И СуммыРасходовУпр.АналитикаРасходов = Источник.АналитикаРасходов
		|			И СуммыРасходовУпр.Подразделение = Источник.Подразделение
		|			И СуммыРасходовУпр.НаправлениеДеятельности = Источник.НаправлениеДеятельности
		|			И Статьи.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыРасходов КАК СуммыРасходовРегл
		|		ПО СуммыРасходовРегл.Организация = Источник.Организация
		|			И СуммыРасходовРегл.СтатьяРасходов = Источник.СтатьяРасходов
		|			И СуммыРасходовРегл.АналитикаРасходов = Источник.АналитикаРасходов
		|			И СуммыРасходовРегл.Подразделение = Источник.Подразделение
		|			И СуммыРасходовРегл.НаправлениеДеятельности = Источник.НаправлениеДеятельности
		|			И Статьи.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыРасходов КАК СуммыРасходовНУ
		|		ПО СуммыРасходовНУ.Организация = Источник.Организация
		|			И СуммыРасходовНУ.СтатьяРасходов = Источник.СтатьяРасходов
		|			И СуммыРасходовНУ.АналитикаРасходов = Источник.АналитикаРасходов
		|			И СуммыРасходовНУ.Подразделение = Источник.Подразделение
		|			И СуммыРасходовНУ.НаправлениеДеятельности = Источник.НаправлениеДеятельности
		|			И Статьи.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)";
		
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст описание данных для ВТ УзлыКорректировкиДополнительныхРасходов.
// 
// Возвращаемое значение:
//  Строка - Текст описание данных для ВТ УзлыКорректировкиДополнительныхРасходов.
Функция ТекстОписаниеДанныхДляУзловКорректировкиДополнительныхРасходов() Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ ПЕРВЫЕ 0
		|	0																КАК НомерУзла,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)					КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)			КАК Подразделение,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)	КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО													КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)		КАК НаправлениеДеятельности,
		|	0 КАК ВесСНДС,
		|	0 КАК ВесБезНДС,
		|	0 КАК ВесРегл,
		|	0 КАК ВесНУ,
		|	0 КАК ВесУпр,
		|	0 КАК ВесНДД,
		|	0 КАК СтоимостьСНДС,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьУпр,
		|	0 КАК СтоимостьРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК СтоимостьНУ,
		|	0 КАК СтоимостьНДД
		|ПОМЕСТИТЬ Данные
		|"; 
		
		ТекстЗапроса = РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьЗапросОписанияДанных(ТекстЗапроса);

	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстСвязиУзловДополнительныхРасходов()
	Возврат 
		"ВЫБРАТЬ
		|	Себестоимость.НомерУзлаИсточник    КАК НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник    КАК НомерУзлаПриемник,
		|	СУММА(Себестоимость.ВесДугиСНДС)   КАК ВесДугиСНДС,
		|	СУММА(Себестоимость.ВесДугиБезНДС) КАК ВесДугиБезНДС,
		|	СУММА(Себестоимость.ВесДугиРегл)   КАК ВесДугиРегл,
		|	СУММА(Себестоимость.ВесДугиНУ)     КАК ВесДугиНУ,
		|	СУММА(Себестоимость.ВесДугиНДД)    КАК ВесДугиНДД,
		|	СУММА(Себестоимость.ВесДугиУпр)    КАК ВесДугиУпр,
		|	МАКСИМУМ(Себестоимость.ВосстанавливатьРезервы)    КАК ВосстанавливатьРезервы,
		|	МАКСИМУМ(Себестоимость.ПринимаемыеВНУ)            КАК ПринимаемыеВНУ,
		|	МАКСИМУМ(Себестоимость.НеРаспределяетсяВБухУчете) КАК НеРаспределяетсяВБухУчете,
		|	МАКСИМУМ(Себестоимость.НеРаспределяетсяВНалУчете) КАК НеРаспределяетсяВНалУчете
		|ПОМЕСТИТЬ СвязиУзловДополнительныхРасходов
		|ИЗ (
		// Списание материалов на дополнительные расходы
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла  КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла  КАК НомерУзлаПриемник,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр
		|			 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ВесДугиСНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр
		|			 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ВесДугиБезНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовРегл
		|			 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ИЛИ Себестоимость.ХозяйственнаяОперация = 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ВесДугиРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовНУ
		|			 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ИЛИ Себестоимость.ХозяйственнаяОперация = 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ВесДугиНУ,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовНУ
		|			 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ИЛИ Себестоимость.ХозяйственнаяОперация = 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ВесДугиНДД,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр
		|			 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ИЛИ Себестоимость.ХозяйственнаяОперация = 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ВесДугиУпр,
		// Условия формирования поля ВосстанавливатьРезервы должны соответствовать условиям формирования аналогичного поля
		// в процедуре СкорректироватьСтоимостьСписанияЗапасов() #Область ВтТаблицаКорректировки.
		|		(ВЫБОР
		|			КОГДА Себестоимость.Организация В (&ОрганизацииСВосстановлениемРезервовПриСписанииЗапасовНаРасходы)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ВосстанавливатьРезервы,
		|	ЕСТЬNULL(Себестоимость.СтатьяРасходовСписания.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		|	(ВЫБОР
		|		КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ)
		|		ИЛИ ЕСТЬNULL(СтатьиРасходовСписания.ВариантРаспределенияРасходовРегл, 
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) В (
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) КАК НеРаспределяетсяВБухУчете,
		|	ЕСТЬNULL(СтатьиРасходовСписания.ВариантРаспределенияРасходовНУ, 
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) В (
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) КАК НеРаспределяетсяВНалУчете
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.РазделУчета               = Себестоимость.РазделУчета
		|			И УзлыКорректировкиИсточник.ВидЗапасов                = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиИсточник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиИсточник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиИсточник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиИсточник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДС
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК КорОрганизации
		|		ПО КорОрганизации.Ссылка = Себестоимость.КорОрганизация
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.СтатьяРасходов               = Себестоимость.СтатьяРасходовСписания
		|			И УзлыКорректировкиПриемник.АналитикаРасходов         = Себестоимость.АналитикаРасходов
		|			И УзлыКорректировкиПриемник.НаправлениеДеятельности   = Себестоимость.КорНаправлениеДеятельности
		|			И УзлыКорректировкиПриемник.Подразделение             = Себестоимость.Подразделение
		|			И УзлыКорректировкиПриемник.Организация               = ЕСТЬNULL(КорОрганизации.Ссылка, Себестоимость.Организация)
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходовСписания
		|			ПО СтатьиРасходовСписания.Ссылка = Себестоимость.СтатьяРасходовСписания
		|	ГДЕ
		|		Себестоимость.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
		|													ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров),
		|													ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровДавальцаЗаСчетДавальца),
		|													ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровДавальцаНаРасходы),
		|													ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы),
		|													ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС),
		|													ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА),
		|													ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию),
		|													ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ),
		|													ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели),
		|													ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию),
		|													ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
		|													ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями))
		//++ НЕ УТ

		// Исключим выпуски по фиксированной стоимости со списанием на расходы т.к. их стоимость уже учтена в регистре прочих расходов
		|		И НЕ (Себестоимость.Регистратор Ссылка Документ.ПроизводствоБезЗаказа И Себестоимость.Стоимость > 0)
		//++ Устарело_Переработка24
		|		И НЕ (Себестоимость.Регистратор Ссылка Документ.ОтчетПереработчика И Себестоимость.Стоимость > 0)
		//-- Устарело_Переработка24
		
		//-- НЕ УТ

		//++ НЕ УТКА
		|		И НЕ (Себестоимость.Регистратор Ссылка Документ.ЭтапПроизводства2_2 И Себестоимость.Стоимость > 0)
		//-- НЕ УТКА

		// Исключение сторно списания расходов с возвратом прошлого периода, т.к. стоимость рассчитывается на шаге СкорректироватьСтоимостьВозвратовПрошлыхПериодов
		|		И НЕ (Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы) 
		|			И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов))
		|		И НЕ (Себестоимость.Сторно И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода))
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		// Распределение дополнительных расходов на товары
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
		|		(ВЫБОР
		|			КОГДА Реквизиты.УправленческийУчет ТОГДА Доли.ДоляСтоимости
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесДугиСНДС,
		|		(ВЫБОР
		|			КОГДА Реквизиты.УправленческийУчет ТОГДА Доли.ДоляСтоимостиБезНДС
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесДугиБезНДС,
		|		(ВЫБОР
		|			КОГДА Реквизиты.РегламентированныйУчет ТОГДА Доли.ДоляСтоимостиРегл
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесДугиРегл,
		|		(ВЫБОР
		|			КОГДА Реквизиты.НалоговыйУчет ТОГДА Доли.ДоляСтоимостиНУ
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесДугиНУ,
		|		(ВЫБОР
		|			КОГДА Реквизиты.НДД ТОГДА Доли.ДоляСтоимостиНДД
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесДугиНДД,
		|		(ВЫБОР
		|			КОГДА Реквизиты.УправленческийУчет ТОГДА Доли.ДоляСтоимостиУпр
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесДугиУпр,
		|		ЛОЖЬ КАК ВосстанавливатьРезервы,
		|		ЕСТЬNULL(Реквизиты.СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		|		Реквизиты.НалоговыйУчет
		|			И НЕ Реквизиты.РегламентированныйУчет КАК НеРаспределяетсяВБухУчете,
		|		Реквизиты.РегламентированныйУчет
		|			И НЕ Реквизиты.НалоговыйУчет КАК НеРаспределяетсяВНалУчете
		|	ИЗ
		|		ДолиДополнительныхРасходов КАК Доли
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Реквизиты
		|			ПО Доли.Регистратор = Реквизиты.Ссылка
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировкиИсточник
		|			ПО Реквизиты.СтатьяРасходов = УзлыКорректировкиИсточник.СтатьяРасходов
		|				И Реквизиты.АналитикаРасходов = УзлыКорректировкиИсточник.АналитикаРасходов
		|				И Реквизиты.НаправлениеДеятельности = УзлыКорректировкиИсточник.НаправлениеДеятельности
		|				И Реквизиты.Подразделение = УзлыКорректировкиИсточник.Подразделение
		|				И Реквизиты.Организация = УзлыКорректировкиИсточник.Организация
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|			ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры
		|					= Доли.КорАналитикаУчетаНоменклатуры
		|				И УзлыКорректировкиПриемник.РазделУчета               = Доли.КорРазделУчета
		|				И УзлыКорректировкиПриемник.Организация               = Доли.КорОрганизация
		|				И УзлыКорректировкиПриемник.ВидЗапасов                = Доли.КорВидЗапасов
		|				И (УзлыКорректировкиПриемник.Партия                   = Доли.КорПартия
		|					ИЛИ &РегламентноеЗадание)
		|				И (УзлыКорректировкиПриемник.АналитикаУчетаПартий     = Доли.КорАналитикаУчетаПартий
		|					ИЛИ &РегламентноеЗадание)
		|				И (УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = Доли.КорАналитикаФинансовогоУчета
		|					ИЛИ &РегламентноеЗадание)
		|				И (УзлыКорректировкиПриемник.ВидДеятельностиНДС       = Доли.КорВидДеятельностиНДС
		|					ИЛИ &РегламентноеЗадание)
		|	ГДЕ
		|		Доли.ХозяйственнаяОперация = НЕОПРЕДЕЛЕНО
		|		И Доли.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам)
		|		ИЛИ Доли.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		// Распределение дополнительных расходов на другие статьи дополнительных расходов.
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
		|		(ВЫБОР
		|			КОГДА Реквизиты.УправленческийУчет ТОГДА Доли.ДоляСтоимости
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесДугиСНДС,
		|		(ВЫБОР
		|			КОГДА Реквизиты.УправленческийУчет ТОГДА Доли.ДоляСтоимостиБезНДС
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесДугиБезНДС,
		|		(ВЫБОР
		|			КОГДА Реквизиты.РегламентированныйУчет ТОГДА Доли.ДоляСтоимостиРегл
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесДугиРегл,
		|		(ВЫБОР
		|			КОГДА Реквизиты.НалоговыйУчет ТОГДА Доли.ДоляСтоимостиНУ
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесДугиНУ,
		|		(ВЫБОР
		|			КОГДА Реквизиты.НДД ТОГДА Доли.ДоляСтоимостиНДД
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесДугиНДД,
		|		(ВЫБОР
		|			КОГДА Реквизиты.УправленческийУчет ТОГДА Доли.ДоляСтоимостиУпр
		|			ИНАЧЕ 0 КОНЕЦ) КАК ВесДугиУпр,
		|		ЛОЖЬ КАК ВосстанавливатьРезервы,
		|		ЕСТЬNULL(Реквизиты.СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		|		Реквизиты.НалоговыйУчет
		|			И НЕ Реквизиты.РегламентированныйУчет КАК НеРаспределяетсяВБухУчете,
		|		Реквизиты.РегламентированныйУчет
		|			И НЕ Реквизиты.НалоговыйУчет КАК НеРаспределяетсяВНалУчете
		|	ИЗ
		|		ДолиДополнительныхРасходов КАК Доли
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Реквизиты
		|		ПО Доли.Регистратор = Реквизиты.Ссылка
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировкиИсточник
		|		ПО Реквизиты.СтатьяРасходов = УзлыКорректировкиИсточник.СтатьяРасходов
		|			И Реквизиты.АналитикаРасходов = УзлыКорректировкиИсточник.АналитикаРасходов
		|			И Реквизиты.НаправлениеДеятельности = УзлыКорректировкиИсточник.НаправлениеДеятельности
		|			И Реквизиты.Подразделение = УзлыКорректировкиИсточник.Подразделение
		|			И Реквизиты.Организация = УзлыКорректировкиИсточник.Организация
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.СтатьяРасходов = Доли.КорСтатьяРасходов
		|			И УзлыКорректировкиПриемник.АналитикаРасходов = Доли.КорАналитикаРасходов
		|			И УзлыКорректировкиПриемник.НаправлениеДеятельности = Доли.КорНаправлениеДеятельности
		|			И УзлыКорректировкиПриемник.Подразделение = Доли.КорПодразделение
		|			И УзлыКорректировкиПриемник.Организация = Доли.КорОрганизация
		|	ГДЕ
		|		Доли.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСНалоговымАгентом)
		|		ИЛИ Доли.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам)
		|
		|	) КАК Себестоимость
		|СГРУППИРОВАТЬ ПО
		|	Себестоимость.НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник
		|";
КонецФункции

// Текст описание данных для ВТ СвязиУзловДополнительныхРасходов.
// 
// Возвращаемое значение:
//  Строка - Текст описание данных для ВТ СвязиУзловДополнительныхРасходов.
Функция ТекстОписаниеДанныхДляСвязейУзловДополнительныхРасходов() Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК НомерУзлаИсточник,
		|	0 КАК НомерУзлаПриемник,
		|	0 КАК ВесДугиСНДС,
		|	0 КАК ВесДугиБезНДС,
		|	0 КАК ВесДугиРегл,
		|	0 КАК ВесДугиНУ,
		|	0 КАК ВесДугиНДД,
		|	0 КАК ВесДугиУпр,
		|	ЛОЖЬ КАК ВосстанавливатьРезервы,
		|	ЛОЖЬ КАК ПринимаемыеВНУ,
		|	ЛОЖЬ КАК НеРаспределяетсяВБухУчете,
		|	ЛОЖЬ КАК НеРаспределяетсяВНалУчете
		|ПОМЕСТИТЬ Данные
		|"; 
		
		ТекстЗапроса = РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьЗапросОписанияДанных(ТекстЗапроса);

	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстСвязиУзловПроизводственныхРасходовПрошлыхПериодов()
	Возврат 
		"ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		Доли.КорОрганизация					КАК Организация,
		|		Доли.КорПодразделение				КАК Подразделение,
		|		Доли.КорСтатьяРасходов				КАК СтатьяРасходов,
		|		Доли.КорАналитикаРасходов			КАК АналитикаРасходов,
		|		Доли.КорНаправлениеДеятельности		КАК НаправлениеДеятельности,
		|		Доли.ДоляСтоимости                  КАК ВесДугиСНДС,
		|		Доли.ДоляСтоимостиБезНДС            КАК ВесДугиБезНДС,
		|		Доли.ДоляСтоимостиРегл              КАК ВесДугиРегл,
		|		Доли.ДоляСтоимостиНУ                КАК ВесДугиНУ,
		|		Доли.ДоляСтоимостиУпр               КАК ВесДугиУпр,
		|		Доли.ДоляСтоимостиНДД               КАК ВесДугиНДД
		|ПОМЕСТИТЬ СвязиУзловПроизводственныхРасходовПрошлыхПериодов
		|	ИЗ
		|		ДолиДополнительныхРасходов КАК Доли
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Реквизиты
		|			ПО Доли.Регистратор = Реквизиты.Ссылка
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировкиИсточник
		|			ПО Реквизиты.СтатьяРасходов = УзлыКорректировкиИсточник.СтатьяРасходов
		|				И Реквизиты.АналитикаРасходов = УзлыКорректировкиИсточник.АналитикаРасходов
		|				И Реквизиты.НаправлениеДеятельности = УзлыКорректировкиИсточник.НаправлениеДеятельности
		|				И Реквизиты.Подразделение = УзлыКорректировкиИсточник.Подразделение
		|				И Реквизиты.Организация = УзлыКорректировкиИсточник.Организация
		|
		|	ГДЕ
		|		Доли.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|		И Доли.КорСтатьяРасходов <> НЕОПРЕДЕЛЕНО
		|		И Доли.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам)";
КонецФункции

// Текст описание данных для ВТ СвязиУзловПроизводственныхРасходовПрошлыхПериодов.
// 
// Возвращаемое значение:
//  Строка - Текст описание данных для ВТ СвязиУзловПроизводственныхРасходовПрошлыхПериодов.
Функция ТекстОписаниеДанныхДляСвязейУзловПроизводственныхРасходовПрошлыхПериодов() Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ ПЕРВЫЕ 0
		|		0																КАК НомерУзлаИсточник,
		|		ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)					КАК Организация,
		|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)			КАК Подразделение,
		|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)	КАК СтатьяРасходов,
		|		НЕОПРЕДЕЛЕНО													КАК АналитикаРасходов,
		|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)		КАК НаправлениеДеятельности,
		|		0 КАК ВесДугиСНДС,
		|		0 КАК ВесДугиБезНДС,
		|		0 КАК ВесДугиРегл,
		|		0 КАК ВесДугиНУ,
		|		0 КАК ВесДугиУпр,
		|		0 КАК ВесДугиНДД
		|ПОМЕСТИТЬ Данные
		|"; 
		
		ТекстЗапроса = РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьЗапросОписанияДанных(ТекстЗапроса);

	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстНачальнаяСтоимостьДополнительныхРасходов() // вт НачальнаяСтоимостьДополнительныхРасходов
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		|	ВЫРАЗИТЬ(
		|		СУММА((ЕСТЬNULL(СтоимостьПартийТоваров.Стоимость, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.Трудозатраты, 0))
		|		* ЕСТЬNULL(Связи.ВесДугиСНДС, 0)) КАК ЧИСЛО(28,10)) КАК ДопРасходыСНДС,
		|
		|	ВЫРАЗИТЬ(
		|		СУММА((ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьБезНДС, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.Трудозатраты, 0))
		|		* ЕСТЬNULL(Связи.ВесДугиБезНДС, 0)) КАК ЧИСЛО(28,10)) КАК ДопРасходыБезНДС,
		|
		|	ВЫРАЗИТЬ(
		|		СУММА((ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
		|				+ (ВЫБОР КОГДА НЕ Связи.ВосстанавливатьРезервы
		|					ТОГДА ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеРегл, 0)
		|					ИНАЧЕ 0 КОНЕЦ))
		|		* ЕСТЬNULL(Связи.ВесДугиРегл, 0)) КАК ЧИСЛО(28,10)) КАК ДопРасходыРегл,
		|
		|	ВЫРАЗИТЬ(
		|		СУММА((ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьУпр, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыУпр, 0)
		|				+ (ВЫБОР КОГДА НЕ Связи.ВосстанавливатьРезервы
		|					ТОГДА ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеУпр, 0)
		|					ИНАЧЕ 0 КОНЕЦ))
		|		* ЕСТЬNULL(Связи.ВесДугиУпр, 0)) КАК ЧИСЛО(28,10)) КАК ДопРасходыУпр
		|
		|ПОМЕСТИТЬ НачальнаяСтоимостьДополнительныхРасходов
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|		ЛЕВОЕ СОЕДИНЕНИЕ СвязиУзловДополнительныхРасходов КАК Связи
		|		ПО УзлыКорректировки.НомерУзла = Связи.НомерУзлаПриемник
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
		|		ПО СтоимостьПартийТоваров.НомерУзла = Связи.НомерУзлаИсточник
		|
		|ГДЕ
		|	НЕ Связи.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ Связи.НомерУзлаИсточник ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|";
КонецФункции

Функция ТекстУзлыСЛУ_ДополнительныеРасходы() // вт УзлыСЛУ_ДополнительныеРасходы
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		|
		|	УзлыКорректировки.СтоимостьСНДС
		|		+ ЕСТЬNULL(СтоимостьУзлов.ДопРасходыСНДС, 0)   КАК СтоимостьСНДС,
		|	УзлыКорректировки.СтоимостьБезНДС
		|		+ ЕСТЬNULL(СтоимостьУзлов.ДопРасходыБезНДС, 0) КАК СтоимостьБезНДС,
		|	УзлыКорректировки.СтоимостьРегл
		|		+ ЕСТЬNULL(СтоимостьУзлов.ДопРасходыРегл, 0)   КАК СтоимостьРегл,
		|	УзлыКорректировки.СтоимостьУпр
		|		+ ЕСТЬNULL(СтоимостьУзлов.ДопРасходыУпр, 0)    КАК СтоимостьУпр
		|
		|ПОМЕСТИТЬ УзлыСЛУ_ДополнительныеРасходы
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|		ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьДополнительныхРасходов КАК СтоимостьУзлов
		|		ПО УзлыКорректировки.НомерУзла = СтоимостьУзлов.НомерУзла
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла            КАК НомерУзла,
		|	УзлыКорректировки.ДопРасходы           КАК СтоимостьСНДС,
		|	УзлыКорректировки.ДопРасходыБезНДС     КАК СтоимостьБезНДС,
		|	УзлыКорректировки.ДопРасходыРегл       КАК СтоимостьРегл,
		|	УзлыКорректировки.ДопРасходыУпр        КАК СтоимостьУпр
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|";
КонецФункции

Функция ТекстСвязиСЛУ_ДополнительныеРасходы() // вт СвязиСЛУ_ДополнительныеРасходы
	Возврат "
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСНДС,
		|
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС,
		|
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА ПеремещенияСписания.РеализацияВДругуюОрганизацию ТОГДА 0
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиРегл,
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА ПеремещенияСписания.РеализацияВДругуюОрганизацию ТОГДА 0
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиУпр
		|
		|ПОМЕСТИТЬ СвязиСЛУ_ДополнительныеРасходы
		|ИЗ
		|	ВтПеремещенияСписания КАК ПеремещенияСписания
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Связи.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	Связи.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|
		|	ВЫРАЗИТЬ(-Связи.ВесДугиСНДС КАК ЧИСЛО(28,10))   КАК ВесДугиСНДС,
		|	ВЫРАЗИТЬ(-Связи.ВесДугиБезНДС КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС,
		|	ВЫРАЗИТЬ(-Связи.ВесДугиРегл КАК ЧИСЛО(28,10))   КАК ВесДугиРегл,
		|	ВЫРАЗИТЬ(-Связи.ВесДугиУпр КАК ЧИСЛО(28,10))    КАК ВесДугиУпр
		|ИЗ
		|	СвязиУзловДополнительныхРасходов КАК Связи
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|
		|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиСНДС,
		|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС,
		|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиРегл,
		|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиУпр
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесСНДС КАК ЧИСЛО(28,10)) КАК ВесДугиСНДС,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесБезНДС КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесРегл КАК ЧИСЛО(28,10)) КАК ВесДугиРегл,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесУпр КАК ЧИСЛО(28,10)) КАК ВесДугиУпр
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|";
КонецФункции

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУВключениеИсключениеНДС

Процедура УзлыКорректировкиВключениеИсключениеНДС(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "УзлыКорректировкиВключениеИсключениеНДС");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	#Область ВыборкаДанных

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|	СУММА(Себестоимость.СтоимостьРегл) КАК СтоимостьРегл,
	|	СУММА(Себестоимость.СтоимостьУпр) КАК СтоимостьУпр
	|ПОМЕСТИТЬ СтоимостьНДС
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|ГДЕ
	|	Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВключениеИсключениеНДСВСтоимости)
	|	И Себестоимость.РасчетПартий
	|
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|//////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла,           
	|
	|	СтоимостьНДС.СтоимостьРегл КАК СтоимостьРегл,
	|	СтоимостьНДС.СтоимостьУпр  КАК СтоимостьУпр
	|ПОМЕСТИТЬ УзлыКорректировкиВключениеИсключениеНДС
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьНДС КАК СтоимостьНДС
	|	ПО СтоимостьНДС.Организация                   = УзлыКорректировки.Организация
	|		И СтоимостьНДС.АналитикаУчетаНоменклатуры = УзлыКорректировки.АналитикаУчетаНоменклатуры
	|		И СтоимостьНДС.РазделУчета                = УзлыКорректировки.РазделУчета
	|		И СтоимостьНДС.ВидЗапасов                 = УзлыКорректировки.ВидЗапасов
	|		И СтоимостьНДС.Партия                     = УзлыКорректировки.Партия
	|		И СтоимостьНДС.АналитикаУчетаПартий       = УзлыКорректировки.АналитикаУчетаПартий
	|		И СтоимостьНДС.АналитикаФинансовогоУчета  = УзлыКорректировки.АналитикаФинансовогоУчета
	|		И СтоимостьНДС.ВидДеятельностиНДС         = УзлыКорректировки.ВидДеятельностиНДС
	|";
	#КонецОбласти
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина, "ВтУзлыКорректировки");
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУРезервыПодОбесценениеЗапасов

// Этап "ПодготовкаДанныхДляРешенияСЛУ_РезервыПодОбесценениеЗапасов"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУ_РезервыПодОбесценениеЗапасов(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета,
		"ПодготовкаДанныхДляРешенияСЛУ_РезервыПодОбесценениеЗапасов");
	
	ТаблицыКСохранению = Новый Массив;
	ТаблицыКСохранению.Добавить("ЕстьВозвратныеОтходы");
	ТаблицыКСохранению.Добавить("ВтУзлыКорректировки");
	//++ НЕ УТКА
	
	//++ Устарело_Переработка24
	ТаблицыКСохранению.Добавить("ВтРаботыДляДавальца");
	//-- Устарело_Переработка24
	
	//-- НЕ УТКА
	
	//++ НЕ УТ
	ТаблицыКСохранению.Добавить("СвязиУзловРезервовПодОбесценениеЗапасов");
	//-- НЕ УТ

	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		СтрСоединить(ТаблицыКСохранению, ","));
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстДляРешенияСЛУ_РезервыПодОбесценениеЗапасов(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

Функция ТекстДляРешенияСЛУ_РезервыПодОбесценениеЗапасов(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(ТекстВтЕстьВозвратныеОтходы());
	ТекстыЗапросов.Добавить(ТекстВтУзлыКорректировки_МатериальныеИТрудозатраты());
	//++ НЕ УТКА
	
	//++ Устарело_Переработка24
	ТекстыЗапросов.Добавить(ТекстВтРаботыДляДавальца());
	//-- Устарело_Переработка24
	
	//-- НЕ УТКА
	
	//++ НЕ УТ
	ТекстыЗапросов.Добавить(ТекстСвязиУзловРезервовПодОбесценениеЗапасов());
	//-- НЕ УТ

	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТ

Функция ТекстСвязиУзловРезервовПодОбесценениеЗапасов()

	Возврат "
		|ВЫБРАТЬ
		|	Себестоимость.НомерУзлаИсточник            КАК НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник            КАК НомерУзлаПриемник,
		|	МАКСИМУМ(Себестоимость.ПереноситьРезерв)   КАК ПереноситьРезерв,
		//++ НЕ УТКА
		
		//++ Устарело_Переработка24
		|	МАКСИМУМ(Себестоимость.ПродукцияДавальца)  КАК ПродукцияДавальца,
		//-- Устарело_Переработка24
		
		//-- НЕ УТКА
		|	СУММА(Себестоимость.Количество)	           КАК ВесДуги
		|
		|ПОМЕСТИТЬ СвязиУзловРезервовПодОбесценениеЗапасов
		|ИЗ (
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		ЕСТЬNULL(УзлыКорректировкиПриемникПередачи.НомерУзла, УзлыКорректировкиПриемник.НомерУзла) КАК НомерУзлаПриемник,
		// Условия формирования поля ПереноситьРезерв должны соответствовать условиям формирования поля СписыватьРезервы
		// в процедуре РасчетСебестоимостиКорректировкаСтоимости.СкорректироватьСтоимостьСписанияЗапасов().
		|		(АналитикаНоменклатурыИсточник.Номенклатура = АналитикаНоменклатурыПриемник.Номенклатура
		|			И АналитикаНоменклатурыИсточник.Характеристика = АналитикаНоменклатурыПриемник.Характеристика
		|			ИЛИ Себестоимость.РазделУчета
		|				= ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|
		//++ НЕ УТКА
		
		//++ Устарело_Переработка24
		|				И РаботыДляДавальца.Регистратор ЕСТЬ NULL
		//-- Устарело_Переработка24
		
		//-- НЕ УТКА
		|			ИЛИ ТИПЗНАЧЕНИЯ(Себестоимость.Партия) = ТИП(Справочник.ПартииПроизводства)
		//++ НЕ УТКА
		
		//++ Устарело_Переработка24
		|				И РаботыДляДавальца.Регистратор ЕСТЬ NULL
		//-- Устарело_Переработка24
		
		//-- НЕ УТКА
		|		) КАК ПереноситьРезерв,
		//++ НЕ УТКА
		
		//++ Устарело_Переработка24
		|		(ВЫБОР
		|			КОГДА НЕ РаботыДляДавальца.Регистратор ЕСТЬ NULL
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПродукцияДавальца,
		//-- Устарело_Переработка24
		
		//-- НЕ УТКА
		|		Себестоимость.Количество
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.РазделУчета                 = Себестоимость.РазделУчета
		|			И УзлыКорректировкиИсточник.ВидЗапасов                  = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация                 = Себестоимость.Организация
		|			И (УзлыКорректировкиИсточник.Партия              	    = Себестоимость.Партия
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиИсточник.АналитикаУчетаПартий        = Себестоимость.АналитикаУчетаПартий
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиИсточник.АналитикаФинансовогоУчета   = Себестоимость.АналитикаФинансовогоУчета
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиИсточник.ВидДеятельностиНДС          = Себестоимость.ВидДеятельностиНДС
		|				ИЛИ &РегламентноеЗадание)
		|			И НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|			И НЕ (Себестоимость.Сторно 
		|					И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода))
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатурыИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры = АналитикаНоменклатурыИсточник.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры   = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемник.РазделУчета               = Себестоимость.КорРазделУчета
		|			И УзлыКорректировкиПриемник.ВидЗапасов                = Себестоимость.КорВидЗапасов
		|			И УзлыКорректировкиПриемник.Организация               = Себестоимость.Организация
		|			И (УзлыКорректировкиПриемник.Партия                    = Себестоимость.КорПартия
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Себестоимость.КорАналитикаУчетаПартий
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = Себестоимость.КорАналитикаФинансовогоУчета
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Себестоимость.КорВидДеятельностиНДС
		|				ИЛИ &РегламентноеЗадание)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемникПередачи
		|		ПО
		|			УзлыКорректировкиПриемникПередачи.АналитикаУчетаНоменклатуры  = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемникПередачи.РазделУчета               = Себестоимость.КорРазделУчета
		|			И УзлыКорректировкиПриемникПередачи.ВидЗапасов                = Себестоимость.КорВидЗапасов
		|			И УзлыКорректировкиПриемникПередачи.Организация               = Себестоимость.КорОрганизация
		|			И (УзлыКорректировкиПриемникПередачи.Партия                   = Себестоимость.КорПартия
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемникПередачи.АналитикаУчетаПартий     = Себестоимость.КорАналитикаУчетаПартий
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемникПередачи.АналитикаФинансовогоУчета = Себестоимость.КорАналитикаФинансовогоУчета
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемникПередачи.ВидДеятельностиНДС        = Себестоимость.КорВидДеятельностиНДС
		|				ИЛИ &РегламентноеЗадание)
		|			И Себестоимость.РазделУчета    <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
		|			И Себестоимость.КорОрганизация <> Себестоимость.Организация
		|			И Себестоимость.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатурыПриемник
		|		ПО ЕСТЬNULL(УзлыКорректировкиПриемникПередачи.АналитикаУчетаНоменклатуры, УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры) = АналитикаНоменклатурыПриемник.Ссылка
		|
		//++ НЕ УТКА
		
		//++ Устарело_Переработка24
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРаботыДляДавальца КАК РаботыДляДавальца
		|			ПО РаботыДляДавальца.Регистратор                  = Себестоимость.Регистратор
		|			И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И РаботыДляДавальца.КорВидЗапасов                 = Себестоимость.КорВидЗапасов
		|			И РаботыДляДавальца.КорАналитикаУчетаПартий       = Себестоимость.КорАналитикаУчетаПартий
		//-- Устарело_Переработка24
		
		//-- НЕ УТКА
		|	ГДЕ
		|		НЕ (УзлыКорректировкиПриемникПередачи.НомерУзла ЕСТЬ NULL И УзлыКорректировкиПриемник.НомерУзла ЕСТЬ NULL)
		|		И УзлыКорректировкиИсточник.НомерУзла <> ЕСТЬNULL(УзлыКорректировкиПриемникПередачи.НомерУзла, УзлыКорректировкиПриемник.НомерУзла)
		|		И НЕ Себестоимость.ХозяйственнаяОперация В (
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы))
		|
		// Уменьшение веса дуг при возврате товаров от клиента или при корректировке реализации в минус,
		// если при возврате не меняется вид деятельности НДС.
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
		|		ЛОЖЬ,
		//++ НЕ УТКА
		
		//++ Устарело_Переработка24
		|		ЛОЖЬ КАК ПродукцияДавальца,
		//-- Устарело_Переработка24
		
		//-- НЕ УТКА
		|		-Себестоимость.Количество КАК Количество
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры   = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.РазделУчета               = Себестоимость.РазделУчета
		|			И УзлыКорректировкиИсточник.ВидЗапасов                = Себестоимость.КорВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиИсточник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиИсточник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиИсточник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиИсточник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДСОтгрузки
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемник.РазделУчета               = Себестоимость.РазделУчета
		|			И УзлыКорректировкиПриемник.ВидЗапасов                = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиПриемник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиПриемник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДС
		|	ГДЕ
		|		НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|		И НЕ Себестоимость.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|		И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно)
		|		И Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации)
		|		И УзлыКорректировкиИсточник.НомерУзла <> УзлыКорректировкиПриемник.НомерУзла
		|
		//++ НЕ УТКА
		
		//++ Устарело_Переработка24
		
		// В КА и УТ 11 нет производства из давальческого сырья
		// Распределение затрат на работы по выпуску продукции из давальческого сырья.
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
		|		ИСТИНА КАК ПереноситьРезерв,
		|		ЛОЖЬ КАК ПродукцияДавальца,
		|		Себестоимость.Количество
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.РазделУчета               = Себестоимость.РазделУчета
		|			И УзлыКорректировкиИсточник.ВидЗапасов                = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиИсточник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиИсточник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиИсточник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиИсточник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДС
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРаботыДляДавальца КАК РаботыДляДавальца
		|		ПО РаботыДляДавальца.Регистратор                      = Себестоимость.Регистратор
		|			И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И РаботыДляДавальца.КорВидЗапасов                 = Себестоимость.КорВидЗапасов
		|			И РаботыДляДавальца.КорАналитикаУчетаПартий       = Себестоимость.КорАналитикаУчетаПартий
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры   = РаботыДляДавальца.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемник.РазделУчета               = РаботыДляДавальца.РазделУчета
		|			И УзлыКорректировкиПриемник.ВидЗапасов                = РаботыДляДавальца.ВидЗапасов
		|			И УзлыКорректировкиПриемник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиПриемник.Партия                    = Себестоимость.КорПартия
		|			И УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Себестоимость.КорАналитикаУчетаПартий
		|			И УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = РаботыДляДавальца.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Себестоимость.КорВидДеятельностиНДС
		|	ГДЕ
		|		НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|		И Себестоимость.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
		|		И НЕ (Себестоимость.Сторно И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода))
		//-- Устарело_Переработка24
		
		//-- НЕ УТКА
		|	) КАК Себестоимость
		|СГРУППИРОВАТЬ ПО
		|	Себестоимость.НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник
		|";
КонецФункции

//-- НЕ УТ

#КонецОбласти

//++ НЕ УТ

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы

#Область Описание_ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы

// В этапе ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы выполняется формирование исходных данных для решения СЛУ
// в части постатейных производственных расходов.
// 
// Важные особенности:
//	По одной аналитике расходов могут быть несколько документов "Распределение расходов" (от одного до трех)
//	с разной установкой флажков отражения в учете.
//	При этом в таблице ВтТаблицаСвязейПостатейныеРасходы будет одна строка, в которой поля будут заполнены по данным всех
//	документов "Распределение расходов".
//
// Временная таблица ВтУзлыКорректировкиПостатейныеРасходыНЗП
//	Таблица узлов постатейных производственных расходов и узлов, покрываемых резервами. 
//	Используется для формирования временных таблиц:
//	- ПриемникиРезервов, РезервыСРасходами, РезервыПредстоящихРасходов - для списания резервов предстоящих расходов
//	- НачальнаяСтоимостьПостояннаяРазница, ВтУзлыКорректировкиПостояннаяРазница, ВтТаблицаСвязейПостояннаяРазница
//	- ВтУзлыКорректировкиНУ 
//	- ВтСтоимостиНезавершенногоПроизводства, ВтСтоимостиНезавершенногоПроизводстваРегл
//
// Временная таблица НачальнаяСтоимостьПостатейныеРасходы
//	Содержит расситанную начальную стоимость в каждом узле постатейных расходов, если на постатейные расходы списана номенклатура.
//	Формируется из стоимости трех составляющих себестоимости товаров, которые уже рассчитаны на предыдущих этапах:
//	Стоимость + Доп расходы + Трудозатраты, с учетом резервов под обесценение запасов.

#КонецОбласти

// Этап "ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходыУчетНДС"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходыУчетНДС(ПараметрыРасчета) Экспорт
	
	Если НЕ РасчетСебестоимостиПовтИсп.РаспределятьПостатейныеЗатратыРекурсивно() Тогда
		Возврат;
	КонецЕсли;
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходыУчетНДС");
	
	СуществующиеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета);
	
	ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы(ПараметрыРасчета);
	
	НовыеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(
		ПараметрыРасчета,
		СуществующиеВТ + ", ВТСписаниеПостатейныхЗатрат");
	
	ПараметрыРасчета.Вставить("ВременныеТаблицыСЛУПостатейныеРасходы", НовыеВТ);
	
КонецПроцедуры
	
// Этап "ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы(ПараметрыРасчета)
	
	ПервыйЗапуск = НЕ ПараметрыРасчета.Свойство("ВременныеТаблицыСЛУПостатейныеРасходы");
	
	Если НЕ ПервыйЗапуск Тогда

		РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы");

		РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, ПараметрыРасчета.ВременныеТаблицыСЛУПостатейныеРасходы);
		ПараметрыРасчета.Удалить("ВременныеТаблицыСЛУПостатейныеРасходы");
		
	КонецЕсли;
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"ВтУзлыКорректировкиПостатейныеРасходыНЗП,
		//++ Локализация
		|ВтНезавершенноеПроизводствоВключениеИсключениеНДС,
		//-- Локализация
		|ДокументыДвиженияРезервов, РезервыПоРасходам, ВтТаблицаСвязейПостатейныеРасходы,
		|НачальнаяСтоимостьПостатейныеРасходы,
		|УзлыСЛУ_ПостатейныеРасходыПредприятия, УзлыСЛУ_ПостатейныеРасходыОрганизаций,
		|СвязиСЛУ_ПостатейныеРасходыПредприятия, СвязиСЛУ_ПостатейныеРасходыОрганизаций");
		
	//++ Локализация
	Если НЕ РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(ПараметрыРасчета, "ВТСписаниеПостатейныхЗатрат") Тогда
		
		Запрос = Новый Запрос;
		РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
		Запрос.Текст = РасчетСебестоимостиНДС.ТекстОписаниеДанныхДляРаспределениеПартийНДСФИФОСкользящаяПоПартиямПрочихРасходов();
		Запрос.Текст = РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПриемникЗапросаОписанияДанных(Запрос.Текст, "ВТСписаниеПостатейныхЗатрат");
		Запрос.Выполнить();
		
	КонецЕсли;
	//-- Локализация
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляРешенияСЛУПостатейныеРасходы(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляРешенияСЛУПостатейныеРасходы(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(РасчетСебестоимостиКорректировкаСтоимости.ТекстВтНезавершенноеПроизводство(ПараметрыРасчета));
	ТекстыЗапросов.Добавить(ТекстВтСписанияНаСтатьиИзОВЗ());
	ТекстыЗапросов.Добавить(ТекстУзлыКорректировкиПостатейныеРасходыНЗП());
	ТекстыЗапросов.Добавить(ТекстВтВыпуски());
	ТекстыЗапросов.Добавить(ТекстВтСебестоимостьТоваровСписания());
	ТекстыЗапросов.Добавить(ТекстВтУзлыКорректировкиПостатейные());
	ТекстыЗапросов.Добавить(ТекстСвязиУзловПроизводственныхРасходовСписаниеНаДругиеСтатьиРасходов());
	ТекстыЗапросов.Добавить(ТекстВспомогательныеТаблицыДляТаблицыСвязейПостатейныеРасходы());
	ТекстыЗапросов.Добавить(ТекстВтТаблицаСвязейПостатейныеРасходы());
	ТекстыЗапросов.Добавить(ТекстНачальнаяСтоимостьПостатейныеРасходы());
	ТекстыЗапросов.Добавить(ТекстСтоимостьНДС());
	ТекстыЗапросов.Добавить(ТекстУзлыСЛУ_ПостатейныеРасходыПредприятия());
	ТекстыЗапросов.Добавить(ТекстУзлыСЛУ_ПостатейныеРасходыОрганизаций());
	ТекстыЗапросов.Добавить(ТекстСвязиСЛУ_ПостатейныеРасходыПредприятия());
	ТекстыЗапросов.Добавить(ТекстСвязиСЛУ_ПостатейныеРасходыОрганизаций());
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстУзлыКорректировкиПостатейныеРасходыНЗП() // вт ВтУзлыКорректировкиПостатейныеРасходыНЗП
	
	#Область ТекстЗапросаПоследнихНомеров
	ТекстЗапросаОпределенияДанных = "
		|	ВЫБРАТЬ
		|		0 КАК НомерУзла,
		|		0 КАК НомерУзлаНЗП,
		|		0 КАК НомерУзлаРезервов,
		|		0 КАК НомерУзлаТранзитовОВЗ
		|";

	ТекстЗапросаПоследнийНомерУзлыКорректировкиДополнительныхРасходов = "
		|	ВЫБРАТЬ
		|		МАКСИМУМ(Т.НомерУзла),
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		УзлыКорректировкиДополнительныхРасходов КАК Т
		|";

	ТекстЗапросаПоследнийНомерВтУзлыКорректировки = "
		|	ВЫБРАТЬ
		|		МАКСИМУМ(Т.НомерУзла),
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		ВтУзлыКорректировки КАК Т
		|";

	ТекстЗапросаПоследнийНомерВтНезавершенноеПроизводство = "
		|	ВЫБРАТЬ
		|		0,
		|		МАКСИМУМ(Т.НомерУзла),
		|		0,
		|		0
		|	ИЗ
		|		ВтНезавершенноеПроизводство КАК Т
		|";

	ТекстЗапросаПоследнийНомерПокрываемыеРезервамиСтатьиРасходов = "
		|	ВЫБРАТЬ
		|		0,
		|		0,
		|		МАКСИМУМ(Т.НомерУзла),
		|		0
		|	ИЗ
		|		ПокрываемыеРезервамиСтатьиРасходов КАК Т
		|";

	ТекстЗапросаПоследнийНомерВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ = "
		|	ВЫБРАТЬ
		|		0,
		|		0,
		|		0,
		|		МАКСИМУМ(Т.НомерУзла)
		|	ИЗ
		|		ВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ КАК Т
		|";

	ТекстыЗапросовПоследнихНомеров = Новый Массив;
	ТекстыЗапросовПоследнихНомеров.Добавить(ТекстЗапросаОпределенияДанных);
	ТекстыЗапросовПоследнихНомеров.Добавить(ТекстЗапросаПоследнийНомерУзлыКорректировкиДополнительныхРасходов);
	ТекстыЗапросовПоследнихНомеров.Добавить(ТекстЗапросаПоследнийНомерВтУзлыКорректировки);
	ТекстыЗапросовПоследнихНомеров.Добавить(ТекстЗапросаПоследнийНомерВтНезавершенноеПроизводство);
	ТекстыЗапросовПоследнихНомеров.Добавить(ТекстЗапросаПоследнийНомерПокрываемыеРезервамиСтатьиРасходов);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОбъектамВозникновенияЗатрат") Тогда
		ТекстыЗапросовПоследнихНомеров.Добавить(ТекстЗапросаПоследнийНомерВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ);
	КонецЕсли;
	СоставЗапросовПоследнихНомеров = СтрСоединить(ТекстыЗапросовПоследнихНомеров, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());	
	
	ТекстЗапросаПоследнихНомеров = "
		|ВЫБРАТЬ
		|	МАКСИМУМ(Т.НомерУзла) КАК НомерУзла,
		|	МАКСИМУМ(Т.НомерУзлаНЗП) КАК НомерУзлаНЗП,
		|	МАКСИМУМ(Т.НомерУзлаРезервов) КАК НомерУзлаРезервов,
		|	МАКСИМУМ(Т.НомерУзлаТранзитовОВЗ) КАК НомерУзлаТранзитовОВЗ
		|ПОМЕСТИТЬ ПоследнийНомерУзла
		|ИЗ &СоставЗапросовПоследнихНомеров КАК Т";
	
	ТекстЗапросаПоследнихНомеров = СтрЗаменить(ТекстЗапросаПоследнихНомеров, "&СоставЗапросовПоследнихНомеров","("+СоставЗапросовПоследнихНомеров+")");
	#КонецОбласти
		
	#Область ТекстЗапросаУзловВтНезавершенноеПроизводство
	ТекстЗапросаУзловВтНезавершенноеПроизводство = "
		|ВЫБРАТЬ
		|	ПоследнийНомерУзла.НомерУзла
		|		+ Таблица.НомерУзла										КАК НомерУзла,
		|	Таблица.Организация                							КАК Организация,
		|	Таблица.РазделУчета                		 					КАК РазделУчета,
		|	Таблица.Партия                     							КАК Партия,
		|	Таблица.АналитикаУчетаПартий       							КАК АналитикаУчетаПартий,
		|	Таблица.КодСтрокиПродукция       							КАК КодСтрокиПродукция,
		|	Таблица.Подразделение						 				КАК Подразделение,
		|	Таблица.ВидДеятельностиНДС									КАК ВидДеятельностиНДС,
		|	Таблица.НаправлениеДеятельности    							КАК НаправлениеДеятельности,
		|	Таблица.СтатьяРасходов             							КАК СтатьяРасходов,
		|	Таблица.АналитикаРасходов          							КАК АналитикаРасходов,
		|	Таблица.СтатьяКалькуляции									КАК СтатьяКалькуляции,
		|	Таблица.Этап												КАК Этап,
		|	Таблица.ГруппаПродукции										КАК ГруппаПродукции,
		|	Таблица.ПравилоОтнесенияНаВыпуск							КАК ПравилоОтнесенияНаВыпуск,
		// Ресурсы для расчета себестоимости товаров предприятия.
		|	Таблица.Количество                 							КАК ВесПостатейные,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ИЛИ Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка)
		|			ТОГДА Таблица.Сумма
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ПостатейныеПостоянныеСНДС,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|			ТОГДА Таблица.Сумма
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ПостатейныеПеременныеСНДС,
		|
		|	Таблица.КоличествоБезНДС           							КАК ВесПостатейныеБезНДС,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ИЛИ Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка)
		|			ТОГДА Таблица.СуммаБезНДС
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ПостатейныеПостоянныеБезНДС,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|			ТОГДА Таблица.СуммаБезНДС
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ПостатейныеПеременныеБезНДС,
		// Ресурсы для расчета себестоимости товаров организаций.
		|	Таблица.КоличествоРегл                 						КАК ВесПостатейныеРегл,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ИЛИ Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка)
		|			ТОГДА Таблица.СуммаРегл
		|		ИНАЧЕ 0	КОНЕЦ)											КАК ПостатейныеПостоянныеРегл,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|			ТОГДА Таблица.СуммаРегл
		|		ИНАЧЕ 0	КОНЕЦ)											КАК ПостатейныеПеременныеРегл,
		|	Таблица.КоличествоНУ                 						КАК ВесПостатейныеНУ,
		|	Таблица.СуммаНУ          									КАК СуммаНУ,
		|	Таблица.ПостояннаяРазница          							КАК ПостояннаяРазница,
		|
		|	Таблица.КоличествоУпр                 						КАК ВесПостатейныеУпр,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ИЛИ Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка)
		|			ТОГДА Таблица.СуммаУпр
		|		ИНАЧЕ 0	КОНЕЦ)											КАК ПостатейныеПостоянныеУпр,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|			ТОГДА Таблица.СуммаУпр
		|		ИНАЧЕ 0	КОНЕЦ)											КАК ПостатейныеПеременныеУпр,
		|
		|	Таблица.КоличествоНДД										КАК ВесПостатейныеНДД,
		|	Таблица.СтоимостьНДД										КАК ПостатейныеСтоимостьНДД
		|
		|ПОМЕСТИТЬ ВтУзлыКорректировкиПостатейныеРасходыНЗП
		|ИЗ
		|	ВтНезавершенноеПроизводство КАК Таблица
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|ПО
		|	Таблица.СтатьяРасходов = Статья.Ссылка
		|ЛЕВОЕ СОЕДИНЕНИЕ ПоследнийНомерУзла КАК ПоследнийНомерУзла
		|	ПО ИСТИНА
		|ГДЕ
		|	(Таблица.Количество <> 0
		|		ИЛИ Таблица.КоличествоБезНДС <> 0
		|		ИЛИ Таблица.КоличествоРегл <> 0
		|		ИЛИ Таблица.КоличествоНУ <> 0
		|		ИЛИ Таблица.КоличествоНДД <> 0
		|		ИЛИ Таблица.КоличествоУпр <> 0
		|		ИЛИ Таблица.СуммаРегл <> 0
		|		ИЛИ Таблица.СуммаНУ <> 0
		|		ИЛИ Таблица.СуммаУпр <> 0
		|		ИЛИ Таблица.СтоимостьНДД <> 0
		|		)
		|	И Таблица.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|";
	#КонецОбласти

	#Область ТекстЗапросаУзловПокрываемыеРезервамиСтатьиРасходов
	ТекстЗапросаУзловПокрываемыеРезервамиСтатьиРасходов = "
		// Данные по прочим статьям расходов
		|ВЫБРАТЬ
		|	ПоследнийНомерУзла.НомерУзла
		|		+ ПоследнийНомерУзла.НомерУзлаНЗП
		|		+ Таблица.НомерУзла										КАК НомерУзла,
		|	Таблица.Организация                							КАК Организация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО                       							КАК Партия,
		|	НЕОПРЕДЕЛЕНО                       							КАК АналитикаУчетаПартий,
		|	0															КАК КодСтрокиПродукция,
		|	Таблица.Подразделение                       				КАК Подразделение,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)	КАК ВидДеятельностиНДС,
		|	Таблица.НаправлениеДеятельности    							КАК НаправлениеДеятельности,
		|	Таблица.СтатьяРасходов										КАК СтатьяРасходов,
		|	Таблица.АналитикаРасходов                       			КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)			КАК СтатьяКалькуляции,
		|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)			КАК Этап,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПустаяСсылка) КАК ПравилоОтнесенияНаВыпуск,
		// Ресурсы для расчета себестоимости товаров предприятия.
		|	0															КАК ВесПостатейные,
		|	0															КАК ПостатейныеПостоянныеСНДС,
		|	0															КАК ПостатейныеПеременныеСНДС,
		|	0															КАК ВесПостатейныеБезНДС,
		|	0															КАК ПостатейныеПостоянныеБезНДС,
		|	0															КАК ПостатейныеПеременныеБезНДС,
		// Ресурсы для расчета себестоимости товаров организаций.
		|	(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЗП.КоличествоРегл, 0) = 0 ТОГДА 1
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ВесПостатейныеРегл,
		|	(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЗП.КоличествоРегл, 0) = 0
		|			ТОГДА Таблица.СуммаРегл
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ПостатейныеПостоянныеРегл,
		|	0															КАК ПостатейныеПеременныеРегл,
		|	(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЗП.КоличествоНУ, 0) = 0 ТОГДА 1
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ВесПостатейныеНУ,
		|	(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЗП.КоличествоНУ, 0) = 0
		|			ТОГДА Таблица.СуммаНУ
		|		ИНАЧЕ 0 КОНЕЦ)											КАК СуммаНУ,
		|	(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЗП.КоличествоРегл, 0) = 0
		|			ТОГДА Таблица.ПостояннаяРазница
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ПостояннаяРазница,
		|
		|	(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЗП.КоличествоУпр, 0) = 0 ТОГДА 1
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ВесПостатейныеУпр,
		|	(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЗП.КоличествоУпр, 0) = 0
		|			ТОГДА Таблица.СуммаУпр
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ПостатейныеПостоянныеУпр,
		|	0															КАК ПостатейныеПеременныеУпр,
		|
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НЗП.КоличествоНДД, 0) = 0 ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ														КАК ВесПостатейныеНДД,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НЗП.КоличествоНДД, 0) = 0
		|			ТОГДА Таблица.СтоимостьНДД
		|		ИНАЧЕ 0
		|	КОНЕЦ														КАК ПостатейныеСтоимостьНДД
		|ИЗ
		|	ПокрываемыеРезервамиСтатьиРасходов КАК Таблица
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтНезавершенноеПроизводство КАК НЗП
		|	ПО Таблица.Организация = НЗП.Организация
		|		И Таблица.Подразделение = НЗП.Подразделение
		|		И Таблица.НаправлениеДеятельности = НЗП.НаправлениеДеятельности
		|		И Таблица.СтатьяРасходов = НЗП.СтатьяРасходов
		|		И Таблица.АналитикаРасходов = НЗП.АналитикаРасходов
		|		И НЗП.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПоследнийНомерУзла КАК ПоследнийНомерУзла
		|		ПО ИСТИНА
		|ГДЕ
		|	ЕСТЬNULL(НЗП.КоличествоРегл, 0) = 0
		|	ИЛИ ЕСТЬNULL(НЗП.КоличествоНУ, 0) = 0
		|	ИЛИ ЕСТЬNULL(НЗП.КоличествоУпр, 0) = 0
		|	И &РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
		|";
	#КонецОбласти

	#Область ТекстЗапросаУзловВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ
	ТекстЗапросаУзловВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ = "
		// Данные по транзитам на объекты возникновения затрат
		|	ВЫБРАТЬ
		|		ПоследнийНомерУзла.НомерУзла
		|		+ ПоследнийНомерУзла.НомерУзлаНЗП
		|		+ ПоследнийНомерУзла.НомерУзлаРезервов
		|		+ Таблица.НомерУзла											КАК НомерУзла,
		|		Таблица.Организация											КАК Организация,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|		ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)		КАК Партия,
		|		НЕОПРЕДЕЛЕНО												КАК АналитикаУчетаПартий,
		|		0															КАК КодСтрокиПродукция,	
		|		Таблица.Подразделение										КАК Подразделение,
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)  КАК ВидДеятельностиНДС,
		|		Таблица.НаправлениеДеятельности								КАК НаправлениеДеятельности,
		|		Таблица.СтатьяРасходов										КАК СтатьяРасходов,
		|		Таблица.АналитикаРасходов									КАК АналитикаРасходов,
		|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)			КАК СтатьяКалькуляции,
		|		ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)			КАК Этап,
		|		ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|		ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПустаяСсылка) КАК ПравилоОтнесенияНаВыпуск,
		|		Таблица.ПриведенныйВес										КАК ВесПостатейные,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВес = 0 
		|			И (Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ИЛИ Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка))
		|				ТОГДА ЕСТЬNULL(Т.Сумма,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПостоянныеСНДС,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВес = 0 И Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ЕСТЬNULL(Т.Сумма,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПеременныеСНДС,
		|		Таблица.ПриведенныйВес										КАК ВесПостатейныеБезНДС,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВес = 0  
		|			И (Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ИЛИ Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка))
		|				ТОГДА ЕСТЬNULL(Т.СуммаБезНДС,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПостоянныеБезНДС,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВес = 0 И Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ЕСТЬNULL(Т.СуммаБезНДС,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПеременныеБезНДС,
		|		Таблица.ПриведенныйВесРегл									КАК ВесПостатейныеРегл,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВесРегл = 0  
		|			И (Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ИЛИ Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка))
		|				ТОГДА ЕСТЬNULL(Т.СуммаРегл,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПостоянныеРегл,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВесРегл = 0 И Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ЕСТЬNULL(Т.СуммаРегл,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПеременныеРегл,
		|		Таблица.ПриведенныйВесРегл									КАК ВесПостатейныеНУ,
		|		ВЫБОР
		|			КОГДА Таблица.ПриведенныйВесРегл = 0
		|					ИЛИ Статья.ВариантРаспределенияРасходовНУ В (
		|						ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов), 
		|						ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять)
		|						)
		|				ТОГДА 0
		|			ИНАЧЕ ЕСТЬNULL(Т.СуммаРегл, 0) - ЕСТЬNULL(Т.ПостояннаяРазница, 0) - ЕСТЬNULL(Т.ВременнаяРазница, 0)
		|		КОНЕЦ КАК СуммаНУ,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВесРегл = 0
		|				ТОГДА ЕСТЬNULL(Т.ПостояннаяРазница, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостояннаяРазница,
		|		Таблица.ПриведенныйВес													КАК ВесПостатейныеУпр,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВес = 0 
		|			И (Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ИЛИ Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка))
		|				ТОГДА ЕСТЬNULL(Т.СуммаУпр,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПостоянныеУпр,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВес = 0 И Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ЕСТЬNULL(Т.СуммаУпр,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПеременныеУпр,
		|
		|	Таблица.ПриведенныйВесНДД КАК ВесПостатейныеНДД,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Таблица.ПриведенныйВесНДД, 0) <> 0
		|			ТОГДА Т.СуммаНДД
		|		ИНАЧЕ 0
		|	КОНЕЦ															КАК ПостатейныеСтоимостьНДД
		|	ИЗ
		|		ВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ КАК Таблица
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ВТКэшРасчетныеОстаткиПрочиеРасходы КАК Т
		|	ПО
		|		Таблица.Организация = Т.Организация
		|		И Таблица.Подразделение = Т.Подразделение
		|		И Таблица.НаправлениеДеятельности = Т.НаправлениеДеятельности
		|		И Таблица.СтатьяРасходов = Т.СтатьяРасходов
		|		И Таблица.АналитикаРасходов = Т.АналитикаРасходов
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|	ПО
		|		Таблица.СтатьяРасходов = Статья.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПоследнийНомерУзла КАК ПоследнийНомерУзла
		|		ПО ИСТИНА
		|
		|	ГДЕ
		|		НЕ (Таблица.Вес = 0 И Таблица.ВесРегл = 0)
		|		И &РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
		|";
	#КонецОбласти

	#Область ТекстЗапросаУзловВтСписанияНаСтатьиИзОВЗ
	ТекстЗапросаУзловВтСписанияНаСтатьиИзОВЗ = "
		// Данные по списанию на статьи из объектов возникновения затрат
		|	ВЫБРАТЬ
		|		ПоследнийНомерУзла.НомерУзла
		|			+ ПоследнийНомерУзла.НомерУзлаНЗП
		|			+ ПоследнийНомерУзла.НомерУзлаРезервов
		|			+ ПоследнийНомерУзла.НомерУзлаТранзитовОВЗ
		|			+ Таблица.НомерУзла										КАК НомерУзла,
		|		Таблица.Организация											КАК Организация,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|		ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)		КАК Партия,
		|		ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|		0															КАК КодСтрокиПродукция,	
		|		Таблица.Подразделение										КАК Подразделение,
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)  КАК ВидДеятельностиНДС,
		|		Таблица.НаправлениеДеятельности							КАК НаправлениеДеятельности,
		|		Таблица.СтатьяРасходов										КАК СтатьяРасходов,
		|		Таблица.АналитикаРасходов									КАК АналитикаРасходов,
		|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)			КАК СтатьяКалькуляции,
		|		ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)			КАК Этап,
		|		ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|		ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПустаяСсылка) КАК ПравилоОтнесенияНаВыпуск,
		// Ресурсы для расчета себестоимости товаров предприятия.
		|		0	КАК ВесПостатейные,
		|		0	КАК ПостатейныеПостоянныеСНДС,
		|		0	КАК ПостатейныеПеременныеСНДС,
		|
		|		0	КАК ВесПостатейныеБезНДС,
		|		0	КАК ПостатейныеПостоянныеБезНДС,
		|		0	КАК ПостатейныеПеременныеБезНДС,
		// Ресурсы для расчета себестоимости товаров организаций.
		|		0	КАК ВесПостатейныеРегл,
		|		0	КАК ПостатейныеПостоянныеРегл,
		|		0	КАК ПостатейныеПеременныеРегл,
		|		0	КАК ВесПостатейныеНУ,
		|		0	КАК СуммаНУ,
		|		0	КАК ПостояннаяРазница,
		|
		|		0	КАК ВесПостатейныеУпр,
		|		0	КАК ПостатейныеПостоянныеУпр,
		|		0	КАК ПостатейныеПеременныеУпр,
		|
		|		0 КАК ВесПостатейныеНДД,
		|		0 КАК ПостатейныеСтоимостьНДД
		|	ИЗ
		|		ВтСписанияНаСтатьиИзОВЗ КАК Таблица
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПоследнийНомерУзла КАК ПоследнийНомерУзла
		|		ПО ИСТИНА
		|ГДЕ
		|	&РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
		|";
	#КонецОбласти
	
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(ТекстЗапросаУзловВтНезавершенноеПроизводство);
	ТекстыЗапросов.Добавить(ТекстЗапросаУзловПокрываемыеРезервамиСтатьиРасходов);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОбъектамВозникновенияЗатрат") Тогда
		ТекстыЗапросов.Добавить(ТекстЗапросаУзловВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ);
		ТекстыЗапросов.Добавить(ТекстЗапросаУзловВтСписанияНаСтатьиИзОВЗ);
	КонецЕсли;
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());	
	
	
	ТекстЗапроса = ТекстЗапроса + "
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|";
	
	Возврат ТекстЗапросаПоследнихНомеров 
		+ ОбщегоНазначения.РазделительПакетаЗапросов()
		+ ТекстЗапроса;
	
КонецФункции

Функция ТекстВтСписанияНаСтатьиИзОВЗ()
	Возврат "
	// Данные по списанию на статьи из объектов возникновения затрат
	|	ВЫБРАТЬ
	|		АВТОНОМЕРЗАПИСИ()											КАК НомерУзла,
	|		ДД.Организация												КАК Организация,
	|		СтатьиСписания.Подразделение								КАК Подразделение,
	|		СтатьиСписания.НаправлениеДеятельности						КАК НаправлениеДеятельности,
	|		СтатьиСписания.СтатьяРасходов								КАК СтатьяРасходов,
	|		СтатьиСписания.АналитикаРасходов							КАК АналитикаРасходов
	|	ПОМЕСТИТЬ ВтСписанияНаСтатьиИзОВЗ
	|	ИЗ
	|		Документ.РаспределениеПрочихЗатрат КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеПрочихЗатрат.Списание КАК СтатьиСписания
	|	ПО
	|		ДД.Ссылка = СтатьиСписания.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтНезавершенноеПроизводство КАК НЗП
	|	ПО ДД.Организация = НЗП.Организация
	|		И СтатьиСписания.Подразделение = НЗП.Подразделение
	|		И СтатьиСписания.НаправлениеДеятельности = НЗП.НаправлениеДеятельности
	|		И СтатьиСписания.СтатьяРасходов = НЗП.СтатьяРасходов
	|		И СтатьиСписания.АналитикаРасходов = НЗП.АналитикаРасходов
	|		И НЗП.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|ГДЕ
	|	НЗП.НомерУзла ЕСТЬ NULL
	|	И (ДД.Проведен И НАЧАЛОПЕРИОДА(ДД.Дата, МЕСЯЦ) = &НачалоПериода)
	|	И ДД.РаспределятьНаСтатьи И ДД.НазначениеНастройкиРаспределения = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаОВЗ)
	|	И &РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
	|";
КонецФункции

Функция ТекстВтВыпуски()
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов, 
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС
		|ПОМЕСТИТЬ ВтВыпуски
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами))
		|
		|	И ДД.СлужебноеВидДвиженияПриход
		|	И ДД.Количество > 0
		|	И НЕ ДД.Сторно
		|	И &РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	АналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстВтСебестоимостьТоваровСписания()
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|	Себестоимость.Организация КАК Организация,
		|	ЕСТЬNULL(КорОрганизации.Ссылка, Себестоимость.Организация) КАК КорОрганизация,
		|	Себестоимость.Подразделение КАК Подразделение,
		|	Себестоимость.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	ВЫРАЗИТЬ(Себестоимость.СтатьяРасходовСписания КАК ПланВидовХарактеристик.СтатьиРасходов) КАК СтатьяРасходовСписания,
		|	Себестоимость.АналитикаРасходов КАК АналитикаРасходов,
		|	Себестоимость.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	Себестоимость.СлужебноеВидДвиженияПриход КАК СлужебноеВидДвиженияПриход,
		|	СУММА(Себестоимость.Количество) КАК Количество
		|
		|ПОМЕСТИТЬ ВтСебестоимостьТоваровСписания
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|	ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
		|		И УзлыКорректировкиИсточник.РазделУчета               = Себестоимость.РазделУчета
		|		И УзлыКорректировкиИсточник.ВидЗапасов                = Себестоимость.ВидЗапасов
		|		И УзлыКорректировкиИсточник.Организация               = Себестоимость.Организация
		|		И УзлыКорректировкиИсточник.Партия                    = Себестоимость.Партия
		|		И УзлыКорректировкиИсточник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|		И УзлыКорректировкиИсточник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|		И УзлыКорректировкиИсточник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДС
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК КорОрганизации
		|		ПО КорОрганизации.Ссылка = Себестоимость.КорОрганизация
		|ГДЕ
		|	(Себестоимость.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы)
		|	 ИЛИ Себестоимость.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровУПереработчика),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровДавальцаЗаСчетДавальца),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровДавальцаНаРасходы),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели)))
		// Исключение сторно списания расходов с возвратом прошлого периода, т.к. стоимость рассчитывается на шаге СкорректироватьСтоимостьВозвратовПрошлыхПериодов
		|	И НЕ (Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы) 
		|		И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов))
		|	И НЕ (
		|		Себестоимость.Сторно И Себестоимость.ТипЗаписи В (
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода), 
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|		)
		|	)
		|	И &РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировкиИсточник.НомерУзла,
		|	Себестоимость.Организация,
		|	ЕСТЬNULL(КорОрганизации.Ссылка, Себестоимость.Организация),
		|	Себестоимость.Подразделение,
		|	Себестоимость.КорНаправлениеДеятельности,
		|	ВЫРАЗИТЬ(Себестоимость.СтатьяРасходовСписания КАК ПланВидовХарактеристик.СтатьиРасходов),
		|	Себестоимость.АналитикаРасходов,
		|	Себестоимость.ХозяйственнаяОперация,
		|	Себестоимость.СлужебноеВидДвиженияПриход
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация, СтатьяРасходовСписания, АналитикаРасходов
		|";
	
КонецФункции

Функция ТекстВтУзлыКорректировкиПостатейные()
	Возврат "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	УзлыКорректировки.Организация КАК Организация,
	|	УзлыКорректировки.НаправлениеДеятельности,
	|	УзлыКорректировки.Подразделение,
	|	УзлыКорректировки.СтатьяРасходов КАК СтатьяРасходов,
	|	УзлыКорректировки.АналитикаРасходов КАК АналитикаРасходов,
	|	УзлыКорректировки.РазделУчета,
	|	УзлыКорректировки.СтатьяКалькуляции,
	|	УзлыКорректировки.Этап,
	|	УзлыКорректировки.ГруппаПродукции,
	|	УзлыКорректировки.ПравилоОтнесенияНаВыпуск,
	|	УзлыКорректировки.Партия,
	|	УзлыКорректировки.АналитикаУчетаПартий,
	|	УзлыКорректировки.КодСтрокиПродукция,
	|	УзлыКорректировки.ВидДеятельностиНДС
	|
	|ПОМЕСТИТЬ ВтУзлыКорректировкиПостатейные
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, СтатьяРасходов, АналитикаРасходов
	|";
КонецФункции 

Функция ТекстСвязиУзловПроизводственныхРасходовСписаниеНаДругиеСтатьиРасходов()
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|	Доли.Организация					КАК Организация,
		|	Доли.КорПодразделение				КАК Подразделение,
		|	Доли.КорСтатьяРасходов				КАК СтатьяРасходов,
		|	Доли.КорАналитикаРасходов			КАК АналитикаРасходов,
		|	Доли.КорНаправлениеДеятельности		КАК НаправлениеДеятельности,
		|	Доли.ДоляСтоимости                  КАК ВесДугиСНДС,
		|	Доли.ДоляСтоимостиБезНДС            КАК ВесДугиБезНДС,
		|	Доли.ДоляСтоимостиРегл              КАК ВесДугиРегл,
		|	Доли.ДоляСтоимостиУпр               КАК ВесДугиУпр,
		|	Доли.ДоляСтоимостиНУ                КАК ВесДугиНУ,
		|	Доли.ДоляСтоимостиНДД               КАК ВесДугиНДД
		|
		|ПОМЕСТИТЬ СвязиУзловПроизводственныхРасходовСписаниеНаДругиеСтатьиРасходов
		|ИЗ
		|	ДолиПроизводственныхРасходов КАК Доли
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Реквизиты
		|	ПО Доли.Регистратор = Реквизиты.Ссылка
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейные КАК УзлыКорректировкиИсточник
		|	ПО Реквизиты.СтатьяРасходов = УзлыКорректировкиИсточник.СтатьяРасходов
		|		И Реквизиты.АналитикаРасходов = УзлыКорректировкиИсточник.АналитикаРасходов
		|		И Реквизиты.НаправлениеДеятельности = УзлыКорректировкиИсточник.НаправлениеДеятельности
		|		И Реквизиты.Подразделение = УзлыКорректировкиИсточник.Подразделение
		|		И Реквизиты.Организация = УзлыКорректировкиИсточник.Организация
		|ГДЕ
		|	Доли.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|	И Доли.КорСтатьяРасходов <> НЕОПРЕДЕЛЕНО
		|	И Доли.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписаниеНаРасходы)
		|";
КонецФункции

Функция ТекстВспомогательныеТаблицыДляТаблицыСвязейПостатейныеРасходы()
	
	Возврат "
		// Вспомогательные таблицы для распределения производственных расходов на партии производства
		|ВЫБРАТЬ
		|	Расходы.Организация КАК Организация,
		|	Расходы.Подразделение КАК Подразделение,
		|	Расходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Расходы.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	Расходы.СтатьяРасходов КАК СтатьяРасходов,
		|	Расходы.АналитикаРасходов КАК АналитикаРасходов,
		|	Расходы.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|	Расходы.Этап КАК Этап,
		|	Расходы.ГруппаПродукции КАК ГруппаПродукции,
		|	Расходы.ПравилоОтнесенияНаВыпуск КАК ПравилоОтнесенияНаВыпуск,
		|	Расходы.ДокументВыпуска КАК ДокументВыпуска,
		|	Расходы.АналитикаПартииВыпуска КАК АналитикаПартииВыпуска,
		|	Расходы.КодСтрокиПродукция КАК КодСтрокиПродукция,
		|	Реквизиты.Подразделение КАК ПодразделениеРаспределения,
		|
		|	Расходы.ПоказательОтнесенияНаПартию,
		|	Расходы.ПоказательОтнесенияНаПартиюБезНДС,
		|	Расходы.ПоказательОтнесенияНаПартиюРегл,
		|	Расходы.ПоказательОтнесенияНаПартиюНУ,
		|	Расходы.ПоказательОтнесенияНаПартиюУпр,
		|	Расходы.ПоказательОтнесенияНаПартиюНДД,
		|	(ВЫБОР
		|		КОГДА РеквизитыСтатьи.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПостоянные,
		|	(ВЫБОР
		|		КОГДА РеквизитыСтатьи.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ)                                             КАК ПостатейныеПеременные,
		|	ЕСТЬNULL(РеквизитыСтатьи.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		|	Реквизиты.НалоговыйУчет
		|		И НЕ Реквизиты.РегламентированныйУчет КАК НеРаспределяетсяВБухУчете,
		|	Реквизиты.РегламентированныйУчет
		|		И НЕ Реквизиты.НалоговыйУчет КАК НеРаспределяетсяВНалУчете
		|ПОМЕСТИТЬ ПрочиеРасходыНЗПНаПартииПроизводства1
		|ИЗ
		|	втПрочиеРасходыНезавершенногоПроизводства КАК Расходы
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Реквизиты
		|		ПО Реквизиты.Ссылка = Расходы.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК РеквизитыСтатьи
		|		ПО РеквизитыСтатьи.Ссылка = Расходы.СтатьяРасходов
		|ГДЕ
		|	Расходы.Организация В (&МассивОрганизаций)
		|	И Расходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И (Расходы.ПоказательОтнесенияНаПартию <> 0
		|		ИЛИ Расходы.ПоказательОтнесенияНаПартиюБезНДС <> 0
		|		ИЛИ Расходы.ПоказательОтнесенияНаПартиюРегл <> 0
		|		ИЛИ Расходы.ПоказательОтнесенияНаПартиюУпр <> 0
		|		ИЛИ Расходы.ПоказательОтнесенияНаПартиюНУ <> 0
		|		ИЛИ Расходы.ПоказательОтнесенияНаПартиюНДД <> 0
		|		)
		|	И &РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяРасходов,
		|	АналитикаРасходов,
		|	ПодразделениеРаспределения,
		|	КорНаправлениеДеятельности,
		|	Организация
		|;
		|
		|ВЫБРАТЬ
		|	Т.НомерУзла,
		|	Т.Организация,
		|	Т.Подразделение,
		|	Т.НаправлениеДеятельности,
		|	Т.СтатьяРасходов,
		|	Т.АналитикаРасходов
		|ПОМЕСТИТЬ ВтУзлыКорректировкиПостатейныеПроизводственныеЗатраты
		|ИЗ
		|	ВтУзлыКорректировкиПостатейные КАК Т
		|ГДЕ
		|	Т.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяРасходов,
		|	АналитикаРасходов,
		|	Подразделение,
		|	НаправлениеДеятельности,
		|	Организация
		|;
		|
		|ВЫБРАТЬ
		|	УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|	Расходы.Организация КАК Организация,
		|	Расходы.Подразделение КАК Подразделение,
		|	Расходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Расходы.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	Расходы.СтатьяРасходов КАК СтатьяРасходов,
		|	Расходы.АналитикаРасходов КАК АналитикаРасходов,
		|	Расходы.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|	Расходы.Этап КАК Этап,
		|	Расходы.ГруппаПродукции КАК ГруппаПродукции,
		|	Расходы.ПравилоОтнесенияНаВыпуск КАК ПравилоОтнесенияНаВыпуск,
		|	Расходы.ДокументВыпуска КАК ДокументВыпуска,
		|	Расходы.АналитикаПартииВыпуска КАК АналитикаПартииВыпуска,
		|	Расходы.КодСтрокиПродукция КАК КодСтрокиПродукция,
		|
		|	Расходы.ПоказательОтнесенияНаПартию,
		|	Расходы.ПоказательОтнесенияНаПартиюБезНДС,
		|	Расходы.ПоказательОтнесенияНаПартиюРегл,
		|	Расходы.ПоказательОтнесенияНаПартиюНУ,
		|	Расходы.ПоказательОтнесенияНаПартиюУпр,
		|	Расходы.ПоказательОтнесенияНаПартиюНДД,
		|	Расходы.ПостатейныеПостоянные,
		|	Расходы.ПостатейныеПеременные,
		|	Расходы.ПринимаемыеВНУ,
		|	Расходы.НеРаспределяетсяВБухУчете,
		|	Расходы.НеРаспределяетсяВНалУчете
		|ПОМЕСТИТЬ ПрочиеРасходыНЗПНаПартииПроизводства2
		|ИЗ
		|	ПрочиеРасходыНЗПНаПартииПроизводства1 КАК Расходы
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеПроизводственныеЗатраты КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.Организация                  = Расходы.Организация
		|			И УзлыКорректировкиИсточник.Подразделение             = Расходы.ПодразделениеРаспределения
		|			И УзлыКорректировкиИсточник.НаправлениеДеятельности   = Расходы.КорНаправлениеДеятельности
		|			И УзлыКорректировкиИсточник.СтатьяРасходов            = Расходы.СтатьяРасходов
		|			И УзлыКорректировкиИсточник.АналитикаРасходов         = Расходы.АналитикаРасходов
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяРасходов,
		|	АналитикаРасходов,
		|	ДокументВыпуска,
		|	Этап,
		|	Подразделение,
		|	НаправлениеДеятельности,
		|	Организация
		|;
		|
		|ВЫБРАТЬ
		|	Т.НомерУзла,
		|	Т.Организация,
		|	Т.Подразделение,
		|	Т.НаправлениеДеятельности,
		|	Т.СтатьяРасходов,
		|	Т.АналитикаРасходов,
		|	Т.СтатьяКалькуляции,
		|	Т.Этап,
		|	Т.ГруппаПродукции,
		|	Т.ПравилоОтнесенияНаВыпуск,
		|	Т.Партия,
		|	Т.АналитикаУчетаПартий,
		|	Т.КодСтрокиПродукция,
		|	Т.ВидДеятельностиНДС
		|ПОМЕСТИТЬ ВтУзлыКорректировкиПостатейныеНЗП
		|ИЗ
		|	ВтУзлыКорректировкиПостатейные КАК Т
		|ГДЕ
		|	Т.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяРасходов,
		|	АналитикаРасходов,
		|	Партия,
		|	Этап,
		|	Подразделение,
		|	НаправлениеДеятельности,
		|	Организация
	    |
		|;
		// Вспомогательные таблицы для распределения производственных расходов на выпуск продукции
		|ВЫБРАТЬ
		|	Расходы.Регистратор КАК Регистратор,
		|	Расходы.Организация КАК Организация,
		|	Расходы.Подразделение КАК Подразделение,
		|	Расходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Расходы.РазделУчета КАК РазделУчета,
		|	Расходы.КорАналитикаУчетаПартий КАК КорАналитикаУчетаПартий,
		|	Расходы.ВидЗапасов КАК ВидЗапасов,
		|	Расходы.СтатьяРасходов КАК СтатьяРасходов,
		|	Расходы.АналитикаРасходов КАК АналитикаРасходов,
		|	Расходы.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	Расходы.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|	Расходы.Этап КАК Этап,
		|	Расходы.ГруппаПродукции КАК ГруппаПродукции,
		|	Расходы.ПравилоОтнесенияНаВыпуск КАК ПравилоОтнесенияНаВыпуск,
		|	Расходы.ДокументВыпуска КАК ДокументВыпуска,
		|	Расходы.АналитикаПартииВыпуска КАК АналитикаПартииВыпуска,
		|	Расходы.КодСтрокиПродукция КАК КодСтрокиПродукция,
		|	ЕСТЬNULL(АналитикаПродукцииБезНазначения.КлючАналитики, Расходы.АналитикаУчетаПродукции) КАК АналитикаУчетаПродукции,
		|
		|	Расходы.ПоказательОтнесенияНаВыпуск,
		|	Расходы.ПоказательОтнесенияНаВыпускБезНДС,
		|	Расходы.ПоказательОтнесенияНаВыпускРегл,
		|	Расходы.ПоказательОтнесенияНаВыпускНУ,
		|	Расходы.ПоказательОтнесенияНаВыпускУпр,
		|	Расходы.ПоказательОтнесенияНаВыпускНДД,
		|	(ВЫБОР
		|		КОГДА РеквизитыСтатьи.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ИЛИ РеквизитыСтатьи.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПостоянные,
		|	(ВЫБОР
		|		КОГДА РеквизитыСтатьи.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ)                                             КАК ПостатейныеПеременные,
		|	ЕСТЬNULL(РеквизитыСтатьи.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		// При распределении на выпуск все расходы должны быть включены в себестоимость выпущенной продукции
		// не зависимо от вариантов распределения статьи расходов в БУ и НУ. 
		// Варианты распределения учитываются только при распределении на партии производства. 
		|	ЛОЖЬ КАК НеРаспределяетсяВБухУчете,
		|	ЛОЖЬ КАК НеРаспределяетсяВНалУчете
		|ПОМЕСТИТЬ ПрочиеРасходыНЗПНаВыпуск1
		|ИЗ
		|	втПрочиеРасходыНезавершенногоПроизводства КАК Расходы
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = Расходы.АналитикаУчетаПродукции
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПродукцииБезНазначения
		|		ПО АналитикаПродукцииБезНазначения.Номенклатура     = Аналитика.Номенклатура
		|		И АналитикаПродукцииБезНазначения.Характеристика    = Аналитика.Характеристика
		|		И АналитикаПродукцииБезНазначения.Серия             = Аналитика.Серия
		|		И АналитикаПродукцииБезНазначения.МестоХранения     = Аналитика.МестоХранения
		|		И АналитикаПродукцииБезНазначения.Назначение        = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		И АналитикаПродукцииБезНазначения.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
		|		И НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтОВЗ КАК ВтОВЗ
		|		ПО Расходы.АналитикаРасходов = ВтОВЗ.ОВЗ
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК РеквизитыСтатьи
		|		ПО РеквизитыСтатьи.Ссылка = Расходы.СтатьяРасходов
		|ГДЕ
		|	Расходы.Организация В (&МассивОрганизаций)
		|	И Расходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Расходы.ДокументИсточник <> ЗНАЧЕНИЕ(Документ.РаспределениеПрочихЗатрат.ПустаяСсылка)
		|	И &РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	АналитикаУчетаПродукции
	    |
		|;
		|ВЫБРАТЬ
		|	Расходы.Регистратор КАК Регистратор,
		|	Расходы.Организация КАК Организация,
		|	Расходы.Подразделение КАК Подразделение,
		|	Расходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Расходы.РазделУчета КАК РазделУчета,
		|	Расходы.СтатьяРасходов КАК СтатьяРасходов,
		|	Расходы.АналитикаРасходов КАК АналитикаРасходов,
		|	Расходы.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	Расходы.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|	Расходы.Этап КАК Этап,
		|	Расходы.ГруппаПродукции КАК ГруппаПродукции,
		|	Расходы.ПравилоОтнесенияНаВыпуск КАК ПравилоОтнесенияНаВыпуск,
		|	Расходы.ДокументВыпуска КАК ДокументВыпуска,
		|	Расходы.АналитикаПартииВыпуска КАК АналитикаПартииВыпуска,
		|	Расходы.КодСтрокиПродукция КАК КодСтрокиПродукция,
		|	Расходы.АналитикаУчетаПродукции КАК АналитикаУчетаПродукции,
		|
		|	Выпуски.ВидЗапасов КАК ВыпускиВидЗапасов,
		|	Выпуски.Партия КАК ВыпускиПартия,
		|	Выпуски.АналитикаУчетаПартий КАК ВыпускиАналитикаУчетаПартий,
		|	Выпуски.АналитикаФинансовогоУчета КАК ВыпускиАналитикаФинансовогоУчета,
		|	Выпуски.ВидДеятельностиНДС КАК ВыпускиВидДеятельностиНДС,
		|
		|	Расходы.ПоказательОтнесенияНаВыпуск,
		|	Расходы.ПоказательОтнесенияНаВыпускБезНДС,
		|	Расходы.ПоказательОтнесенияНаВыпускРегл,
		|	Расходы.ПоказательОтнесенияНаВыпускНУ,
		|	Расходы.ПоказательОтнесенияНаВыпускУпр,
		|	Расходы.ПоказательОтнесенияНаВыпускНДД,
		|	Расходы.ПостатейныеПостоянные,
		|	Расходы.ПостатейныеПеременные,
		|	Расходы.ПринимаемыеВНУ,
		|	Расходы.НеРаспределяетсяВБухУчете,
		|	Расходы.НеРаспределяетсяВНалУчете
		|ПОМЕСТИТЬ ПрочиеРасходыНЗПНаВыпуск2
		|ИЗ
		|	ПрочиеРасходыНЗПНаВыпуск1 КАК Расходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтВыпуски КАК Выпуски
		|		ПО Выпуски.Регистратор = Расходы.Регистратор
		|			И Выпуски.АналитикаУчетаНоменклатуры = Расходы.АналитикаУчетаПродукции
		|			И Выпуски.РазделУчета              = Расходы.РазделУчета
		|			И Выпуски.АналитикаУчетаПартий     = Расходы.КорАналитикаУчетаПартий
		|			И Выпуски.ВидЗапасов               = Расходы.ВидЗапасов
		|			И (Выпуски.ВидДеятельностиНДС      = Расходы.ВидДеятельностиНДС
		|				ИЛИ Расходы.ВидДеятельностиНДС = НЕОПРЕДЕЛЕНО)
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяРасходов,
		|	АналитикаРасходов,
		|	ДокументВыпуска,
		|	Этап,
		|	Подразделение,
		|	НаправлениеДеятельности,
		|	Организация
	    |
		|;
		|ВЫБРАТЬ
		|	УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|	Расходы.Организация КАК Организация,
		|	Расходы.РазделУчета КАК РазделУчета,
		|	Расходы.АналитикаУчетаПродукции КАК АналитикаУчетаПродукции,
		|
		|	Расходы.ВыпускиВидЗапасов,
		|	Расходы.ВыпускиПартия,
		|	Расходы.ВыпускиАналитикаУчетаПартий,
		|	Расходы.ВыпускиАналитикаФинансовогоУчета,
		|	Расходы.ВыпускиВидДеятельностиНДС,
		|
		|	Расходы.ПоказательОтнесенияНаВыпуск,
		|	Расходы.ПоказательОтнесенияНаВыпускБезНДС,
		|	Расходы.ПоказательОтнесенияНаВыпускРегл,
		|	Расходы.ПоказательОтнесенияНаВыпускНУ,
		|	Расходы.ПоказательОтнесенияНаВыпускУпр,
		|	Расходы.ПоказательОтнесенияНаВыпускНДД,
		|	Расходы.ПостатейныеПостоянные,
		|	Расходы.ПостатейныеПеременные,
		|	Расходы.ПринимаемыеВНУ,
		|	Расходы.НеРаспределяетсяВБухУчете,
		|	Расходы.НеРаспределяетсяВНалУчете
		|ПОМЕСТИТЬ ПрочиеРасходыНЗПНаВыпуск3
		|ИЗ
		|	ПрочиеРасходыНЗПНаВыпуск2 КАК Расходы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеНЗП КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.Организация                 = Расходы.Организация
		|			И УзлыКорректировкиИсточник.Подразделение            = Расходы.Подразделение
		|			И УзлыКорректировкиИсточник.СтатьяРасходов           = Расходы.СтатьяРасходов
		|			И УзлыКорректировкиИсточник.АналитикаРасходов        = Расходы.АналитикаРасходов
		|			И УзлыКорректировкиИсточник.СтатьяКалькуляции        = Расходы.СтатьяКалькуляции
		|			И УзлыКорректировкиИсточник.Этап                     = Расходы.Этап
		|			И УзлыКорректировкиИсточник.ГруппаПродукции          = Расходы.ГруппаПродукции
		|			И УзлыКорректировкиИсточник.ПравилоОтнесенияНаВыпуск = Расходы.ПравилоОтнесенияНаВыпуск
		|			И УзлыКорректировкиИсточник.Партия                   = Расходы.ДокументВыпуска
		|			И УзлыКорректировкиИсточник.АналитикаУчетаПартий     = Расходы.АналитикаПартииВыпуска
		|			И УзлыКорректировкиИсточник.КодСтрокиПродукция       = Расходы.КодСтрокиПродукция
		|			И УзлыКорректировкиИсточник.ВидДеятельностиНДС       = Расходы.ВидДеятельностиНДС
		|			И УзлыКорректировкиИсточник.НаправлениеДеятельности  = Расходы.НаправлениеДеятельности
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаПродукции,
		|	РазделУчета,
		|	ВыпускиВидЗапасов,
		|	ВыпускиПартия,
		|	ВыпускиАналитикаУчетаПартий,
		|	ВыпускиАналитикаФинансовогоУчета,
		|	ВыпускиВидДеятельностиНДС
		|";
	
КонецФункции

Функция ТекстВтТаблицаСвязейПостатейныеРасходы()
	ОсновнойЗапрос = "
		|ВЫБРАТЬ
		|	Себестоимость.НомерУзлаИсточник                      КАК НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник                      КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(СУММА(Себестоимость.ВесДугиПостатейныеРасходыСНДС) КАК ЧИСЛО(31,10))   КАК ВесДугиПостатейныеРасходыСНДС,
		|	ВЫРАЗИТЬ(СУММА(Себестоимость.ВесДугиПостатейныеРасходыБезНДС) КАК ЧИСЛО(31,10)) КАК ВесДугиПостатейныеРасходыБезНДС,
		|	ВЫРАЗИТЬ(СУММА(Себестоимость.ВесДугиПостатейныеРасходыРегл) КАК ЧИСЛО(31,10))   КАК ВесДугиПостатейныеРасходыРегл,
		|	ВЫРАЗИТЬ(СУММА(Себестоимость.ВесДугиПостатейныеРасходыНУ) КАК ЧИСЛО(31,10))     КАК ВесДугиПостатейныеРасходыНУ,
		|	ВЫРАЗИТЬ(СУММА(Себестоимость.ВесДугиПостатейныеРасходыУпр) КАК ЧИСЛО(31,10))    КАК ВесДугиПостатейныеРасходыУпр,
		|	ВЫРАЗИТЬ(СУММА(Себестоимость.ВесДугиНДД) КАК ЧИСЛО(31,10))						КАК ВесДугиНДД,
		|	МАКСИМУМ(Себестоимость.ПостатейныеПостоянные)        КАК ПостатейныеПостоянные,
		|	МАКСИМУМ(Себестоимость.ПостатейныеПеременные)        КАК ПостатейныеПеременные,
		|	МАКСИМУМ(Себестоимость.ВосстанавливатьРезервы)       КАК ВосстанавливатьРезервы,
		|	МАКСИМУМ(Себестоимость.ПринимаемыеВНУ)               КАК ПринимаемыеВНУ,
		|	МАКСИМУМ(Себестоимость.НеРаспределяетсяВБухУчете)    КАК НеРаспределяетсяВБухУчете,
		|	МАКСИМУМ(Себестоимость.НеРаспределяетсяВНалУчете)	 КАК НеРаспределяетсяВНалУчете
		|ПОМЕСТИТЬ ВтТаблицаСвязейПостатейныеРасходы
		|ИЗ &СоставСвязей КАК Себестоимость
		|СГРУППИРОВАТЬ ПО
		|	Себестоимость.НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник
		|";

	#Область ТекстЗапросаСписаниеМатериаловНаСтатьи
	ТекстЗапросаСписаниеМатериаловНаСтатьи = "
		// Списание материалов на производственные статьи расходов
		|	ВЫБРАТЬ
		|		Себестоимость.НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла  КАК НомерУзлаПриемник,
		|		ВЫРАЗИТЬ((ВЫБОР
		|			КОГДА НЕ СтатьиРасходовСписания.ВариантРаспределенияРасходовУпр
		|			 В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат)
		|				)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ЧИСЛО(31,10)) КАК ВесДугиПостатейныеРасходыСНДС,
		|		ВЫРАЗИТЬ((ВЫБОР
		|			КОГДА НЕ СтатьиРасходовСписания.ВариантРаспределенияРасходовУпр
		|			 В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат)
		|				)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ЧИСЛО(31,10)) КАК ВесДугиПостатейныеРасходыБезНДС,
		|		ВЫРАЗИТЬ((ВЫБОР
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию))
		|				ТОГДА 0
		|			КОГДА НЕ СтатьиРасходовСписания.ВариантРаспределенияРасходовРегл
		|			 В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|				)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ЧИСЛО(31,10)) КАК ВесДугиПостатейныеРасходыРегл,
		|		ВЫРАЗИТЬ((ВЫБОР
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию))
		|				ТОГДА 0
		|			КОГДА НЕ СтатьиРасходовСписания.ВариантРаспределенияРасходовНУ
		|			 В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|				)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ЧИСЛО(31,10)) КАК ВесДугиПостатейныеРасходыНУ,
		|		ВЫРАЗИТЬ((ВЫБОР
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию))
		|				ТОГДА 0
		|			КОГДА НЕ СтатьиРасходовСписания.ВариантРаспределенияРасходовУпр
		|			 В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|				)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ЧИСЛО(31,10)) КАК ВесДугиПостатейныеРасходыУпр,
		|		ВЫРАЗИТЬ((ВЫБОР
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию))
		|				ТОГДА 0
		|			КОГДА НЕ СтатьиРасходовСписания.ВариантРаспределенияРасходовРегл
		|			 В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|				)
		|				И НЕ СтатьиРасходовСписания.ВариантРаспределенияРасходовНУ
		|			 В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|				)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ЧИСЛО(31,10)) КАК ВесДугиНДД,
		|
		|		(ВЫБОР
		|			КОГДА СтатьиРасходовСписания.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|					ИЛИ СтатьиРасходовСписания.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПостоянные,
		|		(ВЫБОР
		|			КОГДА СтатьиРасходовСписания.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПеременные,
		|
		// Условия формирования поля ВосстанавливатьРезервы должны соответствовать условиям формирования аналогичного поля
		// в процедуре СкорректироватьСтоимостьСписанияЗапасов() #Область ВтТаблицаКорректировки.
		|		(ВЫБОР
		|			КОГДА СтатьиРасходовСписания.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|				ТОГДА ИСТИНА
		|			КОГДА Себестоимость.Организация В (&ОрганизацииСВосстановлениемРезервовПриСписанииЗапасовНаРасходы)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ВосстанавливатьРезервы,
		|
		|		ЕСТЬNULL(СтатьиРасходовСписания.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ)
		|			ИЛИ СтатьиРасходовСписания.ВариантРаспределенияРасходовРегл В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) КАК НеРаспределяетсяВБухУчете,
		|		СтатьиРасходовСписания.ВариантРаспределенияРасходовНУ В (
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) КАК НеРаспределяетсяВНалУчете
		|	ИЗ
		|		ВтСебестоимостьТоваровСписания КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейные КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.СтатьяРасходов               = Себестоимость.СтатьяРасходовСписания
		|			И УзлыКорректировкиПриемник.АналитикаРасходов         = Себестоимость.АналитикаРасходов
		|			И УзлыКорректировкиПриемник.НаправлениеДеятельности   = Себестоимость.КорНаправлениеДеятельности
		|			И УзлыКорректировкиПриемник.Подразделение             = Себестоимость.Подразделение
		|			И УзлыКорректировкиПриемник.Организация               = Себестоимость.КорОрганизация
		|			И УзлыКорректировкиПриемник.РазделУчета               = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходовСписания
		|			ПО СтатьиРасходовСписания.Ссылка = Себестоимость.СтатьяРасходовСписания
		|";
	#КонецОбласти

	#Область ТекстЗапросаРаспределениеНаПартииПроизводства
	ТекстЗапросаРаспределениеНаПартииПроизводства = "
	// Распределение производственных расходов на партии производства
		|	ВЫБРАТЬ
		|		Расходы.НомерУзлаИсточник			КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
		|		ВЫРАЗИТЬ(Расходы.ПоказательОтнесенияНаПартию КАК ЧИСЛО(31,10)) 		 КАК ВесДугиПостатейныеРасходыСНДС,
		|		ВЫРАЗИТЬ(Расходы.ПоказательОтнесенияНаПартиюБезНДС КАК ЧИСЛО(31,10)) КАК ВесДугиПостатейныеРасходыБезНДС,
		|		ВЫРАЗИТЬ(Расходы.ПоказательОтнесенияНаПартиюРегл КАК ЧИСЛО(31,10)) 	 КАК ВесДугиПостатейныеРасходыРегл,
		|		ВЫРАЗИТЬ(Расходы.ПоказательОтнесенияНаПартиюНУ КАК ЧИСЛО(31,10)) 	 КАК ВесДугиПостатейныеРасходыНУ,
		|		ВЫРАЗИТЬ(Расходы.ПоказательОтнесенияНаПартиюУпр КАК ЧИСЛО(31,10)) 	 КАК ВесДугиПостатейныеРасходыУпр,
		|		ВЫРАЗИТЬ(Расходы.ПоказательОтнесенияНаПартиюНДД КАК ЧИСЛО(31,10)) 	 КАК ВесДугиНДД,
		|		Расходы.ПостатейныеПостоянные,
		|		Расходы.ПостатейныеПеременные,
		|		ЛОЖЬ КАК ВосстанавливатьРезервы,
		|		Расходы.ПринимаемыеВНУ,
		|		Расходы.НеРаспределяетсяВБухУчете,
		|		Расходы.НеРаспределяетсяВНалУчете
		|	ИЗ
		|		ПрочиеРасходыНЗПНаПартииПроизводства2 КАК Расходы
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеНЗП КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.Организация                 = Расходы.Организация
		|			И УзлыКорректировкиПриемник.Подразделение            = Расходы.Подразделение
		|			И УзлыКорректировкиПриемник.СтатьяРасходов           = Расходы.СтатьяРасходов
		|			И УзлыКорректировкиПриемник.НаправлениеДеятельности  = Расходы.НаправлениеДеятельности
		|			И УзлыКорректировкиПриемник.АналитикаРасходов        = Расходы.АналитикаРасходов
		|			И УзлыКорректировкиПриемник.СтатьяКалькуляции        = Расходы.СтатьяКалькуляции
		|			И УзлыКорректировкиПриемник.Этап                     = Расходы.Этап
		|			И УзлыКорректировкиПриемник.ГруппаПродукции          = Расходы.ГруппаПродукции
		|			И УзлыКорректировкиПриемник.ПравилоОтнесенияНаВыпуск = Расходы.ПравилоОтнесенияНаВыпуск
		|			И УзлыКорректировкиПриемник.Партия                   = Расходы.ДокументВыпуска
		|			И УзлыКорректировкиПриемник.АналитикаУчетаПартий     = Расходы.АналитикаПартииВыпуска
		|			И УзлыКорректировкиПриемник.КодСтрокиПродукция       = Расходы.КодСтрокиПродукция
		|";
	#КонецОбласти

	#Область ТекстЗапросаРаспределениеНаВыпускПродукции
	ТекстЗапросаРаспределениеНаВыпускПродукции = "
	// Распределение производственных расходов на выпуск продукции
		|	ВЫБРАТЬ
		|		Расходы.НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
		|		ВЫРАЗИТЬ(Расходы.ПоказательОтнесенияНаВыпуск КАК ЧИСЛО(31,10))		 КАК ВесДугиПостатейныеРасходыСНДС,
		|		ВЫРАЗИТЬ(Расходы.ПоказательОтнесенияНаВыпускБезНДС КАК ЧИСЛО(31,10)) КАК ВесДугиПостатейныеРасходыБезНДС,
		|		ВЫРАЗИТЬ(Расходы.ПоказательОтнесенияНаВыпускРегл КАК ЧИСЛО(31,10))	 КАК ВесДугиПостатейныеРасходыРегл,
		|		ВЫРАЗИТЬ(Расходы.ПоказательОтнесенияНаВыпускНУ КАК ЧИСЛО(31,10)) 	 КАК ВесДугиПостатейныеРасходыНУ,
		|		ВЫРАЗИТЬ(Расходы.ПоказательОтнесенияНаВыпускУпр КАК ЧИСЛО(31,10))	 КАК ВесДугиПостатейныеРасходыУпр,
		|		ВЫРАЗИТЬ(Расходы.ПоказательОтнесенияНаВыпускНДД КАК ЧИСЛО(31,10)) 	 КАК ВесДугиНДД,
		|		Расходы.ПостатейныеПостоянные КАК ПостатейныеПостоянные,
		|		Расходы.ПостатейныеПеременные КАК ПостатейныеПеременные,
		|		ЛОЖЬ КАК ВосстанавливатьРезервы,
		|		Расходы.ПринимаемыеВНУ КАК ПринимаемыеВНУ,
		|		Расходы.НеРаспределяетсяВБухУчете КАК НеРаспределяетсяВБухУчете,
		|		Расходы.НеРаспределяетсяВНалУчете КАК НеРаспределяетсяВНалУчете
		|	ИЗ
		|		ПрочиеРасходыНЗПНаВыпуск3 КАК Расходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры = Расходы.АналитикаУчетаПродукции
		|			И УзлыКорректировкиПриемник.РазделУчета               = Расходы.РазделУчета
		|			И УзлыКорректировкиПриемник.Организация               = Расходы.Организация
		|			И УзлыКорректировкиПриемник.ВидЗапасов                = Расходы.ВыпускиВидЗапасов
		|			И УзлыКорректировкиПриемник.Партия                    = Расходы.ВыпускиПартия
		|			И УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Расходы.ВыпускиАналитикаУчетаПартий
		|			И УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = Расходы.ВыпускиАналитикаФинансовогоУчета
		|			И УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Расходы.ВыпускиВидДеятельностиНДС
		|";
	#КонецОбласти

	#Область ТекстЗапросаСвязиУзловПроизводственныхРасходовПрошлыхПериодов
	ТекстЗапросаСвязиУзловПроизводственныхРасходовПрошлыхПериодов = "
		|// Распределение доп. расходов выбывших материалов на производственные затраты
		|	ВЫБРАТЬ
		|		Связи.НомерУзлаИсточник					КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла 	КАК НомерУзлаПриемник,
		|		ВЫРАЗИТЬ(Связи.ВесДугиСНДС КАК ЧИСЛО(31,10))   КАК ВесДугиПостатейныеРасходыСНДС,
		|		ВЫРАЗИТЬ(Связи.ВесДугиБезНДС КАК ЧИСЛО(31,10)) КАК ВесДугиПостатейныеРасходыБезНДС,
		|		ВЫРАЗИТЬ(Связи.ВесДугиРегл КАК ЧИСЛО(31,10))   КАК ВесДугиПостатейныеРасходыРегл,
		|		ВЫРАЗИТЬ(Связи.ВесДугиНУ КАК ЧИСЛО(31,10))     КАК ВесДугиПостатейныеРасходыНУ,
		|		ВЫРАЗИТЬ(Связи.ВесДугиУпр КАК ЧИСЛО(31,10))	   КАК ВесДугиПостатейныеРасходыУпр,
		|		ВЫРАЗИТЬ(Связи.ВесДугиНДД КАК ЧИСЛО(31,10))	   КАК ВесДугиНДД,
		|		(ВЫБОР
		|			КОГДА Статьи.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПостоянные,
		|		(ВЫБОР
		|			КОГДА Статьи.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПеременные,
		|		ЛОЖЬ                                              КАК ВосстанавливатьРезервы,
		|		ЕСТЬNULL(Статьи.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		|		ЕСТЬNULL(Статьи.ВариантРаспределенияРасходовРегл, 
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) В (
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) КАК НеРаспределяетсяВБухУчете,
		|		ЕСТЬNULL(Статьи.ВариантРаспределенияРасходовНУ, 
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) В (
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) КАК НеРаспределяетсяВНалУчете
		|	ИЗ
		|		СвязиУзловПроизводственныхРасходовПрошлыхПериодов КАК Связи
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейные КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.Организация                  = Связи.Организация
		|			И УзлыКорректировкиПриемник.Подразделение             = Связи.Подразделение
		|			И УзлыКорректировкиПриемник.НаправлениеДеятельности   = Связи.НаправлениеДеятельности
		|			И УзлыКорректировкиПриемник.СтатьяРасходов            = Связи.СтатьяРасходов
		|			И УзлыКорректировкиПриемник.АналитикаРасходов         = Связи.АналитикаРасходов
		|			И УзлыКорректировкиПриемник.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = Связи.СтатьяРасходов
		|ГДЕ
		|	&РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
		|";
	#КонецОбласти

	#Область ТекстЗапросаСвязиУзловПроизводственныхРасходовСписаниеНаСтатьиДопРасходов
	ТекстЗапросаСвязиУзловПроизводственныхРасходовСписаниеНаСтатьиДопРасходов = "
		|// Распределение производственных расходов на другие статьи расходов (доп. расходы по товарам).
		|	ВЫБРАТЬ
		|		Связи.НомерУзлаИсточник					КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла 	КАК НомерУзлаПриемник,
		|		ВЫРАЗИТЬ(Связи.ВесДугиСНДС КАК ЧИСЛО(31,10))   КАК ВесДугиПостатейныеРасходыСНДС,
		|		ВЫРАЗИТЬ(Связи.ВесДугиБезНДС КАК ЧИСЛО(31,10)) КАК ВесДугиПостатейныеРасходыБезНДС,
		|		ВЫРАЗИТЬ(Связи.ВесДугиРегл КАК ЧИСЛО(31,10))   КАК ВесДугиПостатейныеРасходыРегл,
		|		ВЫРАЗИТЬ(Связи.ВесДугиНУ КАК ЧИСЛО(31,10))     КАК ВесДугиПостатейныеРасходыНУ,
		|		ВЫРАЗИТЬ(Связи.ВесДугиУпр КАК ЧИСЛО(31,10))    КАК ВесДугиПостатейныеРасходыУпр,
		|		ВЫРАЗИТЬ(Связи.ВесДугиНДД КАК ЧИСЛО(31,10))	   КАК ВесДугиНДД,
		|		(ВЫБОР
		|			КОГДА Статьи.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПостоянные,
		|		(ВЫБОР
		|			КОГДА Статьи.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ)                                             КАК ПостатейныеПеременные,
		|		ЛОЖЬ                                                              КАК ВосстанавливатьРезервы,
		|		ЕСТЬNULL(Статьи.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		|		ЕСТЬNULL(Статьи.ВариантРаспределенияРасходовРегл, 
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) В (
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) КАК НеРаспределяетсяВБухУчете,
		|		ЕСТЬNULL(Статьи.ВариантРаспределенияРасходовНУ, 
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) В (
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) КАК НеРаспределяетсяВНалУчете
		|	ИЗ
		|		СвязиУзловПроизводственныхРасходовСписаниеНаДругиеСтатьиРасходов КАК Связи
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.Организация                  = Связи.Организация
		|			И УзлыКорректировкиПриемник.Подразделение             = Связи.Подразделение
		|			И УзлыКорректировкиПриемник.НаправлениеДеятельности   = Связи.НаправлениеДеятельности
		|			И УзлыКорректировкиПриемник.СтатьяРасходов            = Связи.СтатьяРасходов
		|			И УзлыКорректировкиПриемник.АналитикаРасходов         = Связи.АналитикаРасходов
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = Связи.СтатьяРасходов
		|ГДЕ
		|	&РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
		|";
	#КонецОбласти

	#Область ТекстЗапросаСвязиУзловПроизводственныхРасходовСписаниеНаДругиеПостатейныеСтатьиРасходов
	ТекстЗапросаСвязиУзловПроизводственныхРасходовСписаниеНаДругиеПостатейныеСтатьиРасходов = "
		|// Распределение производственных расходов на другие статьи расходов (постатейные).
		|	ВЫБРАТЬ
		|		Связи.НомерУзлаИсточник					КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла 	КАК НомерУзлаПриемник,
		|		ВЫРАЗИТЬ(Связи.ВесДугиСНДС КАК ЧИСЛО(31,10))   КАК ВесДугиПостатейныеРасходыСНДС,
		|		ВЫРАЗИТЬ(Связи.ВесДугиБезНДС КАК ЧИСЛО(31,10)) КАК ВесДугиПостатейныеРасходыБезНДС,
		|		ВЫРАЗИТЬ(Связи.ВесДугиРегл КАК ЧИСЛО(31,10))   КАК ВесДугиПостатейныеРасходыРегл,
		|		ВЫРАЗИТЬ(Связи.ВесДугиНУ КАК ЧИСЛО(31,10))     КАК ВесДугиПостатейныеРасходыНУ,
		|		ВЫРАЗИТЬ(Связи.ВесДугиУпр КАК ЧИСЛО(31,10))    КАК ВесДугиПостатейныеРасходыУпр,
		|		ВЫРАЗИТЬ(Связи.ВесДугиНДД КАК ЧИСЛО(31,10))	   КАК ВесДугиНДД,
		|		(ВЫБОР
		|			КОГДА Статьи.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПостоянные,
		|		(ВЫБОР
		|			КОГДА Статьи.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ)                                             КАК ПостатейныеПеременные,
		|		ЛОЖЬ                                                              КАК ВосстанавливатьРезервы,
		|		ЕСТЬNULL(Статьи.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		|		ЕСТЬNULL(Статьи.ВариантРаспределенияРасходовРегл, 
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) =
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов) КАК НеРаспределяетсяВБухУчете,
		|		ЕСТЬNULL(Статьи.ВариантРаспределенияРасходовНУ, 
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) =
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов) КАК НеРаспределяетсяВНалУчете
		|	ИЗ
		|		СвязиУзловПроизводственныхРасходовСписаниеНаДругиеСтатьиРасходов КАК Связи
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейные КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.Организация                  = Связи.Организация
		|			И УзлыКорректировкиПриемник.Подразделение             = Связи.Подразделение
		|			И УзлыКорректировкиПриемник.НаправлениеДеятельности   = Связи.НаправлениеДеятельности
		|			И УзлыКорректировкиПриемник.СтатьяРасходов            = Связи.СтатьяРасходов
		|			И УзлыКорректировкиПриемник.АналитикаРасходов         = Связи.АналитикаРасходов
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = Связи.СтатьяРасходов
		|ГДЕ
		|	&РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
		|";
	#КонецОбласти

	#Область ТекстЗапросаТранзитыМеждуОВЗ
	ТекстЗапросаТранзитыМеждуОВЗ = "
	// Транзиты между ОВЗ
	|	ВЫБРАТЬ
	|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
	|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
	|		ВЫРАЗИТЬ(ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И УзлыТранзита.Вес <> 0
	|				ТОГДА Расходы.ПриведенныйВес
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК ЧИСЛО(31,10))				КАК ВесДугиПостатейныеРасходыСНДС,
	|		ВЫРАЗИТЬ(ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И УзлыТранзита.Вес <> 0
	|				ТОГДА Расходы.ПриведенныйВес
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК ЧИСЛО(31,10))				КАК ВесДугиПостатейныеРасходыБезНДС,
	|		ВЫРАЗИТЬ(ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И УзлыТранзита.ВесРегл <> 0
	|				ТОГДА Расходы.ПриведенныйВесРегл
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК ЧИСЛО(31,10))				КАК ВесДугиПостатейныеРасходыРегл,
	|		ВЫРАЗИТЬ(ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И УзлыТранзита.ВесРегл <> 0
	|				ТОГДА Расходы.ПриведенныйВесРегл
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК ЧИСЛО(31,10))				КАК ВесДугиПостатейныеРасходыНУ,
	|		ВЫРАЗИТЬ(ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И УзлыТранзита.Вес <> 0
	|				ТОГДА Расходы.ПриведенныйВес
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК ЧИСЛО(31,10))				КАК ВесДугиПостатейныеРасходыУпр,
	|		ВЫРАЗИТЬ(ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И УзлыТранзита.ВесРегл <> 0
	|				ТОГДА Расходы.ПриведенныйВесНДД
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК ЧИСЛО(31,10))				КАК ВесДугиНДД,
	|		(ВЫБОР
	|			КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
	|					ИЛИ Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПостоянные,
	|		(ВЫБОР
	|			КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ КОНЕЦ)                                             КАК ПостатейныеПеременные,
	|		ЛОЖЬ                                                              КАК ВосстанавливатьРезервы,
	|		Статья.ПринятиеКНалоговомуУчету КАК ПринимаемыеВНУ,
	|		ЛОЖЬ                                                              КАК НеРаспределяетсяВБухУчете,
	|		ЕСТЬNULL(ВтОВЗ.ВариантРаспределенияРасходовНУ, Статья.ВариантРаспределенияРасходовНУ) В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять)
	|		) КАК НеРаспределяетсяВНалУчете
	|	ИЗ
	|		ВтТранзитРасходовМеждуОВЗ КАК Расходы
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ КАК УзлыТранзита
	|		ПО
	|			УзлыТранзита.СтатьяРасходов = Расходы.СтатьяРасходов
	|			И УзлыТранзита.АналитикаРасходов = Расходы.АналитикаРасходов
	|			И УзлыТранзита.Организация = Расходы.Организация
	|			И УзлыТранзита.Подразделение = Расходы.Подразделение
	|			И УзлыТранзита.НаправлениеДеятельности = Расходы.НаправлениеДеятельности
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтУзлыКорректировкиПостатейные КАК УзлыКорректировкиИсточник
	|		ПО
	|			УзлыКорректировкиИсточник.СтатьяРасходов = Расходы.СтатьяРасходов
	|			И УзлыКорректировкиИсточник.АналитикаРасходов = Расходы.АналитикаРасходов
	|			И УзлыКорректировкиИсточник.Организация = Расходы.Организация
	|			И УзлыКорректировкиИсточник.Подразделение = Расходы.Подразделение
	|			И УзлыКорректировкиИсточник.НаправлениеДеятельности = Расходы.НаправлениеДеятельности
	|			И УзлыКорректировкиИсточник.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейные КАК УзлыКорректировкиПриемник
	|		ПО
	|			УзлыКорректировкиПриемник.СтатьяРасходов = Расходы.СтатьяРасходов
	|			И УзлыКорректировкиПриемник.АналитикаРасходов = Расходы.КорАналитикаРасходов
	|			И УзлыКорректировкиПриемник.Организация = Расходы.Организация
	|			И УзлыКорректировкиПриемник.Подразделение = Расходы.КорПодразделение
	|			И УзлыКорректировкиПриемник.НаправлениеДеятельности = Расходы.НаправлениеДеятельности
	|			И УзлыКорректировкиПриемник.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ПланВидовХарактеристик.СтатьиРасходов КАК Статья
	|		ПО
	|			Расходы.СтатьяРасходов = Статья.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтОВЗ КАК ВтОВЗ
	|		ПО
	|			Расходы.КорАналитикаРасходов = ВтОВЗ.ОВЗ
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтДолиРаспределенияПрочихЗатрат КАК ДД
	|		ПО
	|			Расходы.ДокументДвижения = ДД.Ссылка
	|	ГДЕ
	|		&РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
	|";
	#КонецОбласти
	
	#Область ТекстЗапросаСписаниеНаСтатьиПриТранзитеИзОВЗ
	ТекстЗапросаСписаниеНаСтатьиПриТранзитеИзОВЗ = "
	// Списание на статьи при транзите из ОВЗ
	|	ВЫБРАТЬ
	|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
	|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
	|		ВЫРАЗИТЬ(ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И Таблица.Вес <> 0
	|				ТОГДА СтатьиСписания.ДоляСтоимости * Таблица.Вес
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК ЧИСЛО(31,10))						КАК ВесДугиПостатейныеРасходыСНДС,
	|		ВЫРАЗИТЬ(ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И Таблица.Вес <> 0
	|				ТОГДА СтатьиСписания.ДоляСтоимости * Таблица.Вес
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК ЧИСЛО(31,10))						КАК ВесДугиПостатейныеРасходыБезНДС,
	|		ВЫРАЗИТЬ(ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И Таблица.ВесРегл <> 0
	|				ТОГДА СтатьиСписания.ДоляСтоимости * Таблица.ВесРегл
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК ЧИСЛО(31,10))						КАК ВесДугиПостатейныеРасходыРегл,
	|		ВЫРАЗИТЬ(ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И Таблица.ВесРегл <> 0
	|				ТОГДА СтатьиСписания.ДоляСтоимости * Таблица.ВесРегл
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК ЧИСЛО(31,10))						КАК ВесДугиПостатейныеРасходыНУ,
	|		ВЫРАЗИТЬ(ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И Таблица.Вес <> 0
	|				ТОГДА СтатьиСписания.ДоляСтоимости * Таблица.Вес
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК ЧИСЛО(31,10))						КАК ВесДугиПостатейныеРасходыУпр,
	|		ВЫРАЗИТЬ(ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И Таблица.ВесРегл <> 0
	|				ТОГДА СтатьиСписания.ДоляСтоимости * Таблица.ВесРегл
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК ЧИСЛО(31,10))						КАК ВесДугиНДД,
	|		(ВЫБОР
	|			КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
	|					ИЛИ Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПостоянные,
	|		(ВЫБОР
	|			КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПеременные,
	|		ЛОЖЬ                            КАК ВосстанавливатьРезервы,
	|		Статья.ПринятиеКНалоговомуУчету КАК ПринимаемыеВНУ,
	|		ЛОЖЬ                            КАК НеРаспределяетсяВБухУчете,
	|		Статья.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности) КАК НеРаспределяетсяВНалУчете
	|	ИЗ
	|		Документ.РаспределениеПрочихЗатрат.Списание КАК СтатьиСписания
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтДолиРаспределенияПрочихЗатрат КАК ДД
	|	ПО
	|		ДД.Ссылка = СтатьиСписания.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ КАК Таблица
	|	ПО
	|		Таблица.Организация = ДД.Организация
	|		И Таблица.Подразделение = ДД.Подразделение
	|		И Таблица.АналитикаРасходов = ДД.АналитикаРасходов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтУзлыКорректировкиПостатейные КАК УзлыКорректировкиИсточник
	|		ПО
	|			УзлыКорректировкиИсточник.Организация = Таблица.Организация
	|			И УзлыКорректировкиИсточник.Подразделение = Таблица.Подразделение
	|			И УзлыКорректировкиИсточник.НаправлениеДеятельности = Таблица.НаправлениеДеятельности
	|			И УзлыКорректировкиИсточник.СтатьяРасходов = Таблица.СтатьяРасходов
	|			И УзлыКорректировкиИсточник.АналитикаРасходов = Таблица.АналитикаРасходов
	|			И УзлыКорректировкиИсточник.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейные КАК УзлыКорректировкиПриемник
	|	ПО
	|		УзлыКорректировкиПриемник.Организация = ДД.Организация
	|		И УзлыКорректировкиПриемник.Подразделение = СтатьиСписания.Подразделение
	|		И УзлыКорректировкиПриемник.НаправлениеДеятельности = СтатьиСписания.НаправлениеДеятельности
	|		И УзлыКорректировкиПриемник.СтатьяРасходов = СтатьиСписания.СтатьяРасходов
	|		И УзлыКорректировкиПриемник.АналитикаРасходов = СтатьиСписания.АналитикаРасходов
	|		И УзлыКорректировкиПриемник.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК Статья
	|	ПО
	|		УзлыКорректировкиИсточник.СтатьяРасходов = Статья.Ссылка
	|
	|	ГДЕ ДД.НазначениеНастройкиРаспределения = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаОВЗ)
	|		И ДД.РаспределятьНаСтатьи 
	|		И &РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
	|";
	#КонецОбласти

	ТекстЗапросовСостава = Новый Массив;
	ТекстЗапросовСостава.Добавить(ТекстЗапросаРаспределениеНаВыпускПродукции);
	ТекстЗапросовСостава.Добавить(ТекстЗапросаРаспределениеНаПартииПроизводства);
	ТекстЗапросовСостава.Добавить(ТекстЗапросаСвязиУзловПроизводственныхРасходовПрошлыхПериодов);
	ТекстЗапросовСостава.Добавить(ТекстЗапросаСвязиУзловПроизводственныхРасходовСписаниеНаСтатьиДопРасходов);
	ТекстЗапросовСостава.Добавить(ТекстЗапросаСвязиУзловПроизводственныхРасходовСписаниеНаДругиеПостатейныеСтатьиРасходов);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОбъектамВозникновенияЗатрат") Тогда
		
		ТекстЗапросаСписаниеМатериаловНаСтатьи = СтрЗаменить(
			ТекстЗапросаСписаниеМатериаловНаСтатьи, 
			"СтатьиРасходовСписания.ВариантРаспределенияРасходовУпр", 
			"ЕСТЬNULL(ВтОВЗ.ВариантРаспределенияРасходовУпр, 
			|	СтатьиРасходовСписания.ВариантРаспределенияРасходовУпр)");
		ТекстЗапросаСписаниеМатериаловНаСтатьи = СтрЗаменить(
			ТекстЗапросаСписаниеМатериаловНаСтатьи, 
			"СтатьиРасходовСписания.ВариантРаспределенияРасходовРегл", 
			"ЕСТЬNULL(ВтОВЗ.ВариантРаспределенияРасходовРегл, 
			|	СтатьиРасходовСписания.ВариантРаспределенияРасходовРегл)");
		ТекстЗапросаСписаниеМатериаловНаСтатьи = СтрЗаменить(
			ТекстЗапросаСписаниеМатериаловНаСтатьи, 
			"СтатьиРасходовСписания.ВариантРаспределенияРасходовНУ", 
			"ЕСТЬNULL(ВтОВЗ.ВариантРаспределенияРасходовНУ, 
			|	СтатьиРасходовСписания.ВариантРаспределенияРасходовНУ)");

		ТекстЗапросаСписаниеМатериаловНаСтатьи = ТекстЗапросаСписаниеМатериаловНаСтатьи + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ВтОВЗ КАК ВтОВЗ
		|	ПО
		|		Себестоимость.АналитикаРасходов = ВтОВЗ.ОВЗ
		|";
		
		ТекстЗапросовСостава.Добавить(ТекстЗапросаТранзитыМеждуОВЗ);
		ТекстЗапросовСостава.Добавить(ТекстЗапросаСписаниеНаСтатьиПриТранзитеИзОВЗ);
	КонецЕсли;

	ТекстЗапросовСостава.Добавить(ТекстЗапросаСписаниеМатериаловНаСтатьи);
	
	ТекстЗапроса =	СтрЗаменить(ОсновнойЗапрос, "&СоставСвязей", "("+ 
		СтрСоединить(ТекстЗапросовСостава, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении())+")");	
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстНачальнаяСтоимостьПостатейныеРасходы()
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		// Постатейные расходы предприятия с НДС
		|	ВЫРАЗИТЬ(СУММА(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянные, ЛОЖЬ)
		|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.Стоимость, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.Трудозатраты, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьДопРасходы, 0)
		|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыСНДС, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеСНДС,
		|
		|	ВЫРАЗИТЬ(СУММА(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременные, ЛОЖЬ)
		|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.Стоимость, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.Трудозатраты, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьДопРасходы, 0)
		|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыСНДС, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеСНДС,
		// Постатейные расходы предприятия без НДС
		|	ВЫРАЗИТЬ(СУММА(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянные, ЛОЖЬ)
		|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьБезНДС, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.Трудозатраты, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьДопРасходыБезНДС, 0)
		|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыБезНДС, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеБезНДС,
		|
		|	ВЫРАЗИТЬ(СУММА(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременные, ЛОЖЬ)
		|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьБезНДС, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.Трудозатраты, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьДопРасходыБезНДС, 0)
		|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыБезНДС, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеБезНДС,
		|
		// Постатейные расходы организаций (регламентированный учет)
		|	ВЫРАЗИТЬ(СУММА(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянные, ЛОЖЬ)
		|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыРегл, 0)
		|				+ (ВЫБОР КОГДА НЕ ПеремещенияСписания.ВосстанавливатьРезервы
		|					ТОГДА ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеРегл, 0)
		|					ИНАЧЕ 0 КОНЕЦ)
		|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеРегл,
		|
		|	ВЫРАЗИТЬ(СУММА(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременные, ЛОЖЬ)
		|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыРегл, 0)
		|				+ (ВЫБОР КОГДА НЕ ПеремещенияСписания.ВосстанавливатьРезервы
		|					ТОГДА ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеРегл, 0)
		|					ИНАЧЕ 0 КОНЕЦ)
		|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
		|
		// Постатейные расходы организаций (управленческий учет)
		|	ВЫРАЗИТЬ(СУММА(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянные, ЛОЖЬ)
		|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьУпр, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыУпр, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыУпр, 0)
		|				+ (ВЫБОР КОГДА НЕ ПеремещенияСписания.ВосстанавливатьРезервы
		|					ТОГДА ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеУпр, 0)
		|					ИНАЧЕ 0 КОНЕЦ)
		|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыУпр, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеУпр,
		|
		|	ВЫРАЗИТЬ(СУММА(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременные, ЛОЖЬ)
		|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьУпр, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыУпр, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыУпр, 0)
		|				+ (ВЫБОР КОГДА НЕ ПеремещенияСписания.ВосстанавливатьРезервы
		|					ТОГДА ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеУпр, 0)
		|					ИНАЧЕ 0 КОНЕЦ)
		|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыУпр, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
		|
		|ПОМЕСТИТЬ НачальнаяСтоимостьПостатейныеРасходы
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
		|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
		|		ПО СтоимостьПартийТоваров.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|";
КонецФункции

Функция ТекстСтоимостьНДС()
	Возврат " 
		|ВЫБРАТЬ
		|	Себестоимость.Организация,
		|	Себестоимость.АналитикаУчетаНоменклатуры,
		|	Себестоимость.РазделУчета,
		|	Себестоимость.ВидЗапасов,
		|	Себестоимость.Партия,
		|	Себестоимость.АналитикаУчетаПартий,
		|	Себестоимость.АналитикаФинансовогоУчета,
		|	Себестоимость.ВидДеятельностиНДС,
		|	СУММА(Себестоимость.ПостатейныеПостоянныеРегл) КАК ПостатейныеПостоянныеРегл,
		|	СУММА(Себестоимость.ПостатейныеПеременныеРегл) КАК ПостатейныеПеременныеРегл,
		|	СУММА(Себестоимость.ПостатейныеПостоянныеУпр) КАК ПостатейныеПостоянныеУпр,
		|	СУММА(Себестоимость.ПостатейныеПеременныеУпр) КАК ПостатейныеПеременныеУпр
		|ПОМЕСТИТЬ СтоимостьНДС
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|ГДЕ
		|	Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВключениеИсключениеНДСВСтоимости)
		|	И Себестоимость.РасчетПартий
		|
		|СГРУППИРОВАТЬ ПО
		|	Себестоимость.Организация,
		|	Себестоимость.АналитикаУчетаНоменклатуры,
		|	Себестоимость.РазделУчета,
		|	Себестоимость.ВидЗапасов,
		|	Себестоимость.Партия,
		|	Себестоимость.АналитикаУчетаПартий,
		|	Себестоимость.АналитикаФинансовогоУчета,
		|	Себестоимость.ВидДеятельностиНДС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстУзлыСЛУ_ПостатейныеРасходыПредприятия()
	Возврат "	
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                   КАК НомерУзла,
		// Постатейные расходы предприятия с НДС
		|	УзлыКорректировки.ПостатейныеПостоянныеСНДС   КАК ПостатейныеПостоянныеСНДС,
		|	УзлыКорректировки.ПостатейныеПеременныеСНДС   КАК ПостатейныеПеременныеСНДС,
		// Постатейные расходы предприятия без НДС
		|	УзлыКорректировки.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
		|	УзлыКорректировки.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС
		|
		|ПОМЕСТИТЬ УзлыСЛУ_ПостатейныеРасходыПредприятия
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                                       КАК НомерУзла,
		// Постатейные расходы предприятия с НДС
		|	УзлыКорректировки.ПостатейныеПостоянныеСНДС
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПостоянныеСНДС, 0)   КАК ПостатейныеПостоянныеСНДС,
		|	УзлыКорректировки.ПостатейныеПеременныеСНДС
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПеременныеСНДС, 0)   КАК ПостатейныеПеременныеСНДС,
		// Постатейные расходы предприятия без НДС
		|	УзлыКорректировки.ПостатейныеПостоянныеБезНДС
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПостоянныеБезНДС, 0) КАК ПостатейныеПостоянныеБезНДС,
		|	УзлыКорректировки.ПостатейныеПеременныеБезНДС
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПеременныеБезНДС, 0) КАК ПостатейныеПеременныеБезНДС
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостатейныеРасходы КАК НачальнаяСтоимость
		|	ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		|	0 КАК ПостатейныеПостоянныеСНДС,
		|	0 КАК ПостатейныеПеременныеСНДС,
		|	0 КАК ПостатейныеПостоянныеБезНДС,
		|	0 КАК ПостатейныеПеременныеБезНДС
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|";
КонецФункции

Функция ТекстУзлыСЛУ_ПостатейныеРасходыОрганизаций()
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                   КАК НомерУзла,
		// Заполнение полей должно соответствовать функции ТекстУзлыСЛУ_РезервыПредстоящихРасходов().
		// Постатейные расходы организаций (регламентированный учет)
		|	УзлыКорректировки.ПостатейныеПостоянныеРегл
		|		+ ЕСТЬNULL(СтоимостьНДС.ПостатейныеПостоянныеРегл, 0) КАК ПостатейныеПостоянныеРегл,
		|	УзлыКорректировки.ПостатейныеПеременныеРегл
		|		+ ЕСТЬNULL(СтоимостьНДС.ПостатейныеПеременныеРегл, 0) КАК ПостатейныеПеременныеРегл,
		// Постатейные расходы организаций (управленческий учет)
		|	УзлыКорректировки.ПостатейныеПостоянныеУпр
		|		+ ЕСТЬNULL(СтоимостьНДС.ПостатейныеПостоянныеУпр, 0) КАК ПостатейныеПостоянныеУпр,
		|	УзлыКорректировки.ПостатейныеПеременныеУпр
		|		+ ЕСТЬNULL(СтоимостьНДС.ПостатейныеПеременныеУпр, 0) КАК ПостатейныеПеременныеУпр
		|
		|ПОМЕСТИТЬ УзлыСЛУ_ПостатейныеРасходыОрганизаций
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьНДС КАК СтоимостьНДС
		|	ПО СтоимостьНДС.Организация                   = УзлыКорректировки.Организация
		|		И СтоимостьНДС.АналитикаУчетаНоменклатуры = УзлыКорректировки.АналитикаУчетаНоменклатуры
		|		И СтоимостьНДС.РазделУчета                = УзлыКорректировки.РазделУчета
		|		И СтоимостьНДС.ВидЗапасов                 = УзлыКорректировки.ВидЗапасов
		|		И СтоимостьНДС.Партия                     = УзлыКорректировки.Партия
		|		И СтоимостьНДС.АналитикаУчетаПартий       = УзлыКорректировки.АналитикаУчетаПартий
		|		И СтоимостьНДС.АналитикаФинансовогоУчета  = УзлыКорректировки.АналитикаФинансовогоУчета
		|		И СтоимостьНДС.ВидДеятельностиНДС         = УзлыКорректировки.ВидДеятельностиНДС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                                     КАК НомерУзла,
		// Постатейные расходы организаций (регламентированный учет)
		|	УзлыКорректировки.ПостатейныеПостоянныеРегл
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПостоянныеРегл, 0) КАК ПостатейныеПостоянныеРегл,
		|	УзлыКорректировки.ПостатейныеПеременныеРегл 
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПеременныеРегл, 0) КАК ПостатейныеПеременныеРегл,
		// Постатейные расходы организаций (управленческий учет)
		|	УзлыКорректировки.ПостатейныеПостоянныеУпр
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПостоянныеУпр, 0)  КАК ПостатейныеПостоянныеУпр,
		|	УзлыКорректировки.ПостатейныеПеременныеУпр
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПеременныеУпр, 0)  КАК ПостатейныеПеременныеУпр
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостатейныеРасходы КАК НачальнаяСтоимость
		|	ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Узлы должны соответствовать процедуре РешитьСЛУПлатформой_РезервыПредстоящихРасходов() #Область Узлы_СУчетомРезервов
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		|	0 КАК ПостатейныеПостоянныеРегл,
		|	0 КАК ПостатейныеПеременныеРегл,
		|	0 КАК ПостатейныеПостоянныеУпр,
		|	0 КАК ПостатейныеПеременныеУпр
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|";
КонецФункции
	
Функция ТекстСвязиСЛУ_ПостатейныеРасходыПредприятия()
	Возврат "
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСНДС,
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС
		|
		|ПОМЕСТИТЬ СвязиСЛУ_ПостатейныеРасходыПредприятия
		|ИЗ
		|	ВтПеремещенияСписания КАК ПеремещенияСписания
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыСНДС, 0) КАК ЧИСЛО(28,10))   КАК ВесДугиСНДС,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыБезНДС, 0) КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС
		|ИЗ
		|	ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Связи.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	Связи.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|
		|	ВЫРАЗИТЬ(-Связи.ВесДугиСНДС КАК ЧИСЛО(28,10))   КАК ВесДугиСНДС,
		|	ВЫРАЗИТЬ(-Связи.ВесДугиБезНДС КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС
		|ИЗ
		|	СвязиУзловДополнительныхРасходов КАК Связи
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		// Выражение ниже должно совпадать в след. местах: ТекстСвязиСЛУ_ПостатейныеРасходыОрганизаций, РешитьСЛУПлатформой_СебестоимостьПредприятия
		|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиСНДС,
		|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейные КАК ЧИСЛО(28,10))       КАК ВесДугиСНДС,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеБезНДС КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесСНДС КАК ЧИСЛО(28,10))       КАК ВесДугиСНДС,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесБезНДС КАК ЧИСЛО(28,10))     КАК ВесДугиБезНДС
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|";
КонецФункции

Функция ТекстСвязиСЛУ_ПостатейныеРасходыОрганизаций()
	Возврат "
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиРегл,
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиНУ,
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиУпр
		|
		|ПОМЕСТИТЬ СвязиСЛУ_ПостатейныеРасходыОрганизаций
		|ИЗ
		|	ВтПеремещенияСписания КАК ПеремещенияСписания
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.РеализацияВДругуюОрганизацию
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(ВЫБОР
		// Расходы не распределяются в бух. учете - стоимость регл должна остаться на источнике, 
		// кроме списания номенклатуры в узел постатейныхх расходов (соответствует приходу в регистр "Прочие расходы").
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ) И УзлыКорректировки.НомерУзла ЕСТЬ NULL
		|			ТОГДА 0 
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиРегл,
		// Расходы не распределяются в нал. учете - стоимость НУ должна остаться на источнике, 
		// кроме списания номенклатуры в узел постатейных расходов (соответствует приходу в регистр "Прочие расходы").
		// Условия формирования значения поля ВесДугиНУ должны соответствовать запросу ТекстВтТаблицаСвязейНУ().
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ) И УзлыКорректировки.НомерУзла ЕСТЬ NULL
		|			ТОГДА 0 
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыНУ, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиНУ,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыУпр, 0) КАК ЧИСЛО(28,10))    КАК ВесДугиУпр
		|ИЗ
		|	ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировки
		|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Связи.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	Связи.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|
		|	ВЫРАЗИТЬ(-Связи.ВесДугиРегл КАК ЧИСЛО(28,10))   КАК ВесДугиРегл,
		|	ВЫРАЗИТЬ(-Связи.ВесДугиНУ КАК ЧИСЛО(28,10))     КАК ВесДугиНУ,
		|	ВЫРАЗИТЬ(-Связи.ВесДугиУпр КАК ЧИСЛО(28,10))    КАК ВесДугиУпр
		|ИЗ
		|	СвязиУзловДополнительныхРасходов КАК Связи
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		// Выражение ниже должно совпадать в след. местах: ТекстСвязиСЛУ_ПостатейныеРасходыПредприятия, РешитьСЛУПлатформой_СебестоимостьПредприятия
		|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиРегл,
		|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиНУ,
		|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиУпр
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеРегл КАК ЧИСЛО(28,10))   КАК ВесДугиРегл,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеНУ КАК ЧИСЛО(28,10))     КАК ВесДугиНУ,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеУпр КАК ЧИСЛО(28,10))    КАК ВесДугиУпр
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесРегл КАК ЧИСЛО(28,10))  КАК ВесДугиРегл,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесНУ КАК ЧИСЛО(28,10))    КАК ВесДугиНУ,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесУпр КАК ЧИСЛО(28,10))   КАК ВесДугиУпр
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|";
КонецФункции

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов

#Область Описание_ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов

// В этапе ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов выполняется формирование исходных данные для расчета СЛУ 
// с учетом резервов предстоящих расходов.
// 
// Временная таблица РезервыПоРасходам
//	Исходные данные по резервам предстоящих расходов находятся во временной таблице РезервыПоРасходам. 
//	Эта временная таблица формируется в функции ТекстВтНезавершенноеПроизводство() по остаткам регистра накопления РезервыПредстоящихРасходов.
//	Эта функция которая вызывается в процедуре ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы().
//
// Временная таблица ПокрываемыеРезервамиСтатьиРасходов
//	Данные резервов предстоящих расходов сопостовляются с данными расходов, покрываемыми за счет резервов.
//	Результат сопоставления записывается во временную таблицу ПокрываемыеРезервамиСтатьиРасходов.
//	Для сопоставления используется вспомогательная временная таблица ПокрываемыеРезервамиСтатьиРасходовПредварительная,
//	в которой указаны различные аналитики резервов предстоящих расходов. Она формируется по данным таблицы РезервыПоРасходам.
//	Временная таблица ПокрываемыеРезервамиСтатьиРасходов формируется в функции ТекстВтНезавершенноеПроизводство()
// 
// Временная таблица ДокументыДвиженияРезервов
//	Для каждого вида резервов определяется один документ НачислениеСписаниеРезервовПредстоящихРасходов для которого будут 
//	сформированы движения по регистрам ПрочиеРасходы и РезервыПредстоящихРасходов.
//	Эта временная таблица формируется в функции ТекстВтНезавершенноеПроизводство()    
//
// Временная таблица ПриемникиРезервов
//	Данные по резервам предстоящих расходов дополняются номерами узлов постатейных расходов в функции ТекстПриемникиРезервов().
//	Результат сохраняется во временную таблица ПриемникиРезервов.
// 
// Временная таблица РезервыСРасходами
//	Для каждого узла постатейных расходов добавляется сумма постатейных расходов в узле в функции ТекстРезервыСРасходами(). 
//	Результат сохраняется во временной таблице РезервыСРасходами.
// 
// Временная таблица СводныеРасходыПоРезервам
//	Для каждого резерва определяется общая сумма расходов, покрываемая этим резервом, в функции ТекстСводныеРасходыПоРезервам().
//	Результат помещается во временную таблицу СводныеРасходыПоРезервам.
//
// Временная таблица ДетальныеРезервыПоУзлам
//	Сумма каждого резерва распределяется между расходами, покрываемыми за счет резерва, пропорционально суммам расхода: 
//		Резерв = (Сумма расхода / Общая сумма расходов) * Резерв. 
//	Расчет выполняется в функции ТекстДетальныеРезервыПоУзлам().
//	Результат сохраняется во временной таблице ДетальныеРезервыПоУзлам.
// 
// Временная таблица РезервыПоУзлам
//	Для каждого узла постатейных расходов рассчитывается общая сумма резерв, за счет которого покрывается этот расход. 
//	Выполняется в функции ТекстРезервыПоУзлам().
//	Результат записывается во временную таблицу РезервыПоУзлам.
// 
// Временная таблица УзлыСЛУ_РезервыПредстоящихРасходов
// Для каждого усзла расчета СЛУ формируются новые узлы по следующим правилам:
//	- Если для узла постатейных расходов нет резервов или сумма в узле отрицательная – в узле остается исходная первоначальная стоимость
//	- Если сумма постатейных расходов в узле меньше или равна сумме резерва – первоначальную стоимость в узле уменьшаем на сумму расходов
//	- Если сумма постатейных расходов в узле больше суммы резерва – первончальную стоимость в узле уменьшаем на сумму резерва,  
//		распределенного между постатейными постоянными и переменными расходами пропорционально суммам расхода.
// Например, для переменных расходов:
//	Постатейные переменные – Резерв * Постатейные переменные / (Постатейные постоянные + Постатейные переменные)
// 
// Выходными данными этапа ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов являются временные таблицы 
// РезервыПоУзлам, ДетальныеРезервыПоУзлам и УзлыСЛУ_РезервыПредстоящихРасходов.
// 
// Далее выполняется этап РешитьСЛУПлатформой_РезервыПредстоящихРасходов(). 
// В этапе выполняется решение СЛУ для постатейных расходов с учетом сумм резервов.
// В области #Область Узлы_СУчетомРезервов формируется запрос новых узлов для расчета СЛУ.
// В области #Область Связи формируется запрос связей между узлами для расчета сумм постатейных расходов с учетом резервов.
// После расчета системы линейных уравнений результат расчета загружается во временную таблицу ВтТаблицаРешений_СебестоимостьОрганизаций  
// в области #Область ВтТаблицаРешений_СебестоимостьОрганизаций
//
// Формирование движений по регистрам ПрочиеРасходы и РезервыПредстоящихРасходов формируются в 
// процедуре СкорректироватьСтоимостьСписанияРезервовПредстоящихРасходов() общего модуля РасчетСебестоимостиКорректировкаСтоимости.

#КонецОбласти

// Этап "ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"РезервыПоУзлам, ДетальныеРезервыПоУзлам, УзлыСЛУ_РезервыПредстоящихРасходов,
		|СвязиСЛУ_РезервыПредстоящихРасходов, СвязиСЛУ_РезервыПредстоящихРасходов_НУ");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляРешенияСЛУРезервыПредстоящихРасходов(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляРешенияСЛУРезервыПредстоящихРасходов(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстЗапроса = ""
		// подготовка временных таблиц
		+ ТекстПриемникиРезервов()
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстРезервыСРасходами()
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстСводныеРасходыПоРезервам()
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстДетальныеРезервыПоУзлам()
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстРезервыПоУзлам()
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстУзлыСЛУ_РезервыПредстоящихРасходов() // вт УзлыСЛУ_РезервыПредстоящихРасходов
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстСвязиСЛУ_РезервыПредстоящихРасходов()
		//++ Локализация
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстСвязиСЛУ_РезервыПредстоящихРасходов_НУ()
		//-- Локализация
		+ "";
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстПриемникиРезервов() // вт ПриемникиРезервов, использует РезервыПоРасходам
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ВидРезервов,
		|	ДД.ОбъектУчетаРезервов,
		|	Узлы.НомерУзла,
		|	ДД.РезервРегл,
		|	ДД.РезервНУ,
		|	ДД.РезервУпр
		|ПОМЕСТИТЬ ПриемникиРезервов
		|ИЗ
		|	РезервыПоРасходам КАК ДД
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК Узлы
		|		ПО Узлы.Организация            = ДД.Организация
		|		И Узлы.НаправлениеДеятельности = ДД.НаправлениеДеятельности
		|		И Узлы.Подразделение           = ДД.Подразделение
		|		И Узлы.СтатьяРасходов          = ДД.СтатьяРасходов
		|		И Узлы.АналитикаРасходов       = ДД.АналитикаРасходов
		|		И Узлы.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Узлы.НомерУзла
		|";
КонецФункции

Функция ТекстРезервыСРасходами() // вт РезервыСРасходами, использует ПриемникиРезервов
	Возврат "
		|ВЫБРАТЬ
		|	ПриемникиРезервов.Организация КАК Организация,
		|	ПриемникиРезервов.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ПриемникиРезервов.ВидРезервов КАК ВидРезервов,
		|	ПриемникиРезервов.ОбъектУчетаРезервов КАК ОбъектУчетаРезервов,
		|	ПриемникиРезервов.НомерУзла,
		|	ПриемникиРезервов.РезервРегл,
		|	ПриемникиРезервов.РезервНУ,
		|	ПриемникиРезервов.РезервУпр,
		|
		|	ВЫРАЗИТЬ((ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПеременныеРегл, 0)
		|		+ ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПостоянныеРегл, 0))
		|		* УзлыКорректировки.ВесПостатейныеРегл КАК ЧИСЛО(28,10)) КАК РасходРегл,
		|
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешенийНалоговыйУчет.ПостояннаяРазница, 0)
		|		* УзлыКорректировки.ВесПостатейныеРегл КАК ЧИСЛО(28,10)) КАК РасходПР,
		|
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешенийНалоговыйУчет.СуммаНУ, 0)
		|			* УзлыКорректировки.ВесПостатейныеНУ КАК ЧИСЛО(28,10)) КАК РасходНУ,
		|
		|	ВЫРАЗИТЬ((ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПеременныеУпр, 0)
		|		+ ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПостоянныеУпр, 0))
		|		* УзлыКорректировки.ВесПостатейныеУпр КАК ЧИСЛО(28,10)) КАК РасходУпр
		|
		|ПОМЕСТИТЬ РезервыСРасходами
		|ИЗ
		|	ПриемникиРезервов КАК ПриемникиРезервов
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|		ПО УзлыКорректировки.НомерУзла = ПриемникиРезервов.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК ВтТаблицаРешенийПостатейные
		|		ПО ВтТаблицаРешенийПостатейные.НомерУзла = ПриемникиРезервов.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_НалоговыйУчет КАК ВтТаблицаРешенийНалоговыйУчет
		|		ПО ВтТаблицаРешенийНалоговыйУчет.НомерУзла = ПриемникиРезервов.НомерУзла
		|ГДЕ
		|	(ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПеременныеРегл, 0)
		|		+ ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПостоянныеРегл, 0)) > 0
		|	ИЛИ
		|	ЕСТЬNULL(ВтТаблицаРешенийНалоговыйУчет.СуммаНУ, 0) > 0
		|	ИЛИ
		|	(ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПеременныеУпр, 0)
		|		+ ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПостоянныеУпр, 0)) > 0
		|	ИЛИ
		|	УзлыКорректировки.ПостатейныеПеременныеРегл > 0
		|	ИЛИ
		|	УзлыКорректировки.ПостатейныеПостоянныеРегл > 0
		|	ИЛИ
		|	УзлыКорректировки.СуммаНУ > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	НаправлениеДеятельности,
		|	ВидРезервов,
		|	ОбъектУчетаРезервов
		|";
КонецФункции

Функция ТекстСводныеРасходыПоРезервам() // вт СводныеРасходыПоРезервам, использует РезервыСРасходами
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ВидРезервов,
		|	ДД.ОбъектУчетаРезервов,
		|	СУММА(
		|		ВЫБОР
		|			КОГДА ДД.РасходРегл < 0 ТОГДА
		|				0
		|			ИНАЧЕ
		|				ДД.РасходРегл
		|		КОНЕЦ) КАК РасходыРегл,
		|	СУММА(
		|		ВЫБОР
		|			КОГДА ДД.РасходПР < 0 ТОГДА
		|				0
		|			ИНАЧЕ
		|				ДД.РасходПР
		|		КОНЕЦ) КАК РасходыПР,
		|	СУММА(
		|		ВЫБОР
		|			КОГДА ДД.РасходНУ < 0 ТОГДА
		|				0
		|			ИНАЧЕ
		|				ДД.РасходНУ
		|		КОНЕЦ) КАК РасходыНУ,
		|	СУММА(
		|		ВЫБОР
		|			КОГДА ДД.РасходУпр < 0 ТОГДА
		|				0
		|			ИНАЧЕ
		|				ДД.РасходУпр
		|		КОНЕЦ) КАК РасходыУпр
		|
		|ПОМЕСТИТЬ СводныеРасходыПоРезервам
		|ИЗ
		|	РезервыСРасходами КАК ДД
		|	
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ВидРезервов,
		|	ДД.ОбъектУчетаРезервов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ВидРезервов,
		|	ДД.ОбъектУчетаРезервов
		|";
КонецФункции

Функция ТекстДетальныеРезервыПоУзлам() // вт ДетальныеРезервыПоУзлам
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ВидРезервов,
		|	ДД.ОбъектУчетаРезервов,
		|	ДД.НомерУзла,
		|	ВЫРАЗИТЬ(ДД.РасходРегл КАК ЧИСЛО(28,10)) КАК РасходРегл,
		|	ВЫРАЗИТЬ(ДД.РасходПР КАК ЧИСЛО(28,10)) КАК РасходПР,
		|	ВЫРАЗИТЬ(ДД.РасходНУ КАК ЧИСЛО(28,10)) КАК РасходНУ,
		|	ВЫРАЗИТЬ(ДД.РасходУпр КАК ЧИСЛО(28,10))  КАК РасходУпр,
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		|			КОГДА Расходы.РасходыРегл = 0
		|				ТОГДА 0
		|			ИНАЧЕ
		|				ВЫРАЗИТЬ(ДД.РасходРегл / Расходы.РасходыРегл КАК ЧИСЛО(28,10)) * ДД.РезервРегл
		|		КОНЕЦ КАК ЧИСЛО(28,10)) КАК РезервРегл,
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		|			КОГДА Расходы.РасходыНУ = 0
		|				ТОГДА 0
		|			ИНАЧЕ
		|				ВЫРАЗИТЬ(ДД.РасходНУ / Расходы.РасходыНУ КАК ЧИСЛО(28,10)) * ДД.РезервНУ
		|		КОНЕЦ КАК ЧИСЛО(28,10)) КАК РезервНУ,
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		|			КОГДА Расходы.РасходыУпр = 0
		|				ТОГДА 0
		|			ИНАЧЕ
		|				ВЫРАЗИТЬ(ДД.РасходУпр / Расходы.РасходыУпр КАК ЧИСЛО(28,10)) * ДД.РезервУпр
		|		КОНЕЦ КАК ЧИСЛО(28,10)) КАК РезервУпр
		|
		|ПОМЕСТИТЬ ДетальныеРезервыПоУзлам
		|ИЗ
		|	РезервыСРасходами КАК ДД
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СводныеРасходыПоРезервам КАК Расходы
		|		ПО Расходы.Организация            = ДД.Организация
		|		И Расходы.НаправлениеДеятельности = ДД.НаправлениеДеятельности
		|		И Расходы.ВидРезервов             = ДД.ВидРезервов
		|		И Расходы.ОбъектУчетаРезервов     = ДД.ОбъектУчетаРезервов
		|";
КонецФункции

Функция ТекстРезервыПоУзлам() // вт РезервыПоУзлам, использует ДетальныеРезервыПоУзлам
	Возврат "
		|ВЫБРАТЬ
		|	ДД.НомерУзла,
		|	МАКСИМУМ(ДД.РасходРегл) КАК РасходРегл,
		|	МАКСИМУМ(ДД.РасходПР)   КАК РасходПР,
		|	МАКСИМУМ(ДД.РасходНУ)   КАК РасходНУ,
		|	МАКСИМУМ(ДД.РасходУпр)  КАК РасходУпр,
		|	СУММА(ДД.РезервРегл) КАК РезервРегл,
		|	СУММА(ДД.РезервНУ)   КАК РезервНУ,
		|	СУММА(ДД.РезервУпр)  КАК РезервУпр
		|
		|ПОМЕСТИТЬ РезервыПоУзлам
		|ИЗ
		|	ДетальныеРезервыПоУзлам КАК ДД
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.НомерУзла
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|";
КонецФункции

Функция ТекстУзлыСЛУ_РезервыПредстоящихРасходов() // вт УзлыСЛУ_РезервыПредстоящихРасходов
	Возврат "
		// В таблице узлов отражается начальная стоимость до расчета.
		// Стоимость налогового учета формируется как сумма пяти составляющих себестоимости регл учета за минусом постоянной и 
		// временной разницы.
		// Начальная стоимость регл учета берется из временной таблицы ВтУзлыКорректировки.
		// К начальной стоимости добавляется сумма включения/исключения НДС в стоимости из таблицы УзлыКорректировкиВключениеИсключениеНДС.
		// Начальная постоянная и временная разница берется из временной таблицы ВтУзлыКорректировкиНалоговыйУчет.
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                   КАК НомерУзла,
		// Заполнение полей должно соответствовать функции ТекстУзлыСЛУ_ПостатейныеРасходыОрганизаций().
		// Постатейные расходы организаций (регламентированный учет)
		|	УзлыКорректировки.ПостатейныеПостоянныеРегл
		|		+ ЕСТЬNULL(СтоимостьНДС.ПостатейныеПостоянныеРегл, 0) КАК ПостатейныеПостоянныеРегл,
		|	УзлыКорректировки.ПостатейныеПеременныеРегл
		|		+ ЕСТЬNULL(СтоимостьНДС.ПостатейныеПеременныеРегл, 0) КАК ПостатейныеПеременныеРегл,
		// Постатейные расходы организаций (управленческий учет)
		|	УзлыКорректировки.ПостатейныеПостоянныеУпр
		|		+ ЕСТЬNULL(СтоимостьНДС.ПостатейныеПостоянныеУпр, 0) КАК ПостатейныеПостоянныеУпр,
		|	УзлыКорректировки.ПостатейныеПеременныеУпр
		|		+ ЕСТЬNULL(СтоимостьНДС.ПостатейныеПеременныеУпр, 0) КАК ПостатейныеПеременныеУпр,
		|
		// Расходы организаций (постоянная разница)
		|	0 // для удобства расстановки тегов
		//++ Локализация
		|	+ ЕСТЬNULL(ВтУзлыКорректировкиНалоговыйУчет.ПостояннаяРазница, 0)
		//-- Локализация
		|	КАК ПостояннаяРазница,
		// Расходы организаций (налоговый учет)
		|	0 // для удобства расстановки тегов
		//++ Локализация
		|	+ ЕСТЬNULL(ВтУзлыКорректировкиНалоговыйУчет.СуммаНУ, 0) 
		//-- Локализация
		|	КАК РасходыНУ
		|
		|ПОМЕСТИТЬ УзлыСЛУ_РезервыПредстоящихРасходов
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьНДС КАК СтоимостьНДС
		|	ПО СтоимостьНДС.Организация                   = УзлыКорректировки.Организация
		|		И СтоимостьНДС.АналитикаУчетаНоменклатуры = УзлыКорректировки.АналитикаУчетаНоменклатуры
		|		И СтоимостьНДС.РазделУчета                = УзлыКорректировки.РазделУчета
		|		И СтоимостьНДС.ВидЗапасов                 = УзлыКорректировки.ВидЗапасов
		|		И СтоимостьНДС.Партия                     = УзлыКорректировки.Партия
		|		И СтоимостьНДС.АналитикаУчетаПартий       = УзлыКорректировки.АналитикаУчетаПартий
		|		И СтоимостьНДС.АналитикаФинансовогоУчета  = УзлыКорректировки.АналитикаФинансовогоУчета
		|		И СтоимостьНДС.ВидДеятельностиНДС         = УзлыКорректировки.ВидДеятельностиНДС
		|
		//++ Локализация
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиНалоговыйУчет КАК ВтУзлыКорректировкиНалоговыйУчет
		|		ПО ВтУзлыКорректировкиНалоговыйУчет.НомерУзла = УзлыКорректировки.НомерУзла
		//-- Локализация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Для постатейных расходов начальная стоимость уже сформирована во временной таблице УзлыСЛУ_ПостатейныеРасходыОрганизаций. 
		// Для расходов, покрываемых за счет резервов, начальной стоимостью является разница между суммой расхода и суммой резерва.
		// Если сумма резерва превышает сумму расхода, то первоначальня стоимость для расчета будет равна 0.
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                                       КАК НомерУзла,
		// Постатейные расходы организаций (регламентированный учет)
		|	ВЫБОР
		// Если для узла нет резевов или при расчете СЛУ получилась отрицательная сумма расходов в узле,
		// то для такого узла корректировку на сумму резерва не выполняем.
		// В таком узле оставляем начальную стоимость расходов.
		|		КОГДА Резервы.РезервРегл ЕСТЬ NULL
		|		 ИЛИ ЕСТЬNULL(Резервы.РасходРегл, 0) <= 0
		|		 ИЛИ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0) <=0
		|			ТОГДА ЕСТЬNULL(УзлыСЛУ.ПостатейныеПостоянныеРегл, 0)
		// Если общая сумма в узле меньше резерва - уменьшаем начальную стоимость в узле на общую сумму расхода,
		// скорректированную на отношение постоянных расходов к общей сумме расходов.
		|		КОГДА (ЕСТЬNULL(Резервы.РасходРегл, 0) - ЕСТЬNULL(Резервы.РезервРегл, 0)) <= 0
		|			ТОГДА ЕСТЬNULL(УзлыСЛУ.ПостатейныеПостоянныеРегл, 0)
		|				- ЕСТЬNULL(Резервы.РасходРегл, 0)
		|		 			* ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл, 0)
		|		 			/ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
		// Если общая сумма в узле больше резерва - уменьшаем начальную стоимость в узле на сумму резерва,
		// скорректированную на отношение постоянных расходов к общей сумме расходов.
		|		ИНАЧЕ ЕСТЬNULL(УзлыСЛУ.ПостатейныеПостоянныеРегл, 0)
		|			- ЕСТЬNULL(Резервы.РезервРегл, 0)
		|		 		* ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл, 0)
		|		 		/ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
		|	КОНЕЦ КАК ПостатейныеПостоянныеРегл,
		|
		|	ВЫБОР
		|		КОГДА Резервы.РезервРегл ЕСТЬ NULL
		|		 ИЛИ ЕСТЬNULL(Резервы.РасходРегл, 0) <= 0
		|		 ИЛИ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0) <=0
		|			ТОГДА ЕСТЬNULL(УзлыСЛУ.ПостатейныеПеременныеРегл, 0)
		// Если общая сумма в узле меньше резерва - уменьшаем начальную стоимость в узле на общую сумму расхода,
		// скорректированную на отношение переменных расходов к общей сумме расходов.
		|		КОГДА (ЕСТЬNULL(Резервы.РасходРегл, 0) - ЕСТЬNULL(Резервы.РезервРегл, 0)) <= 0
		|			ТОГДА ЕСТЬNULL(УзлыСЛУ.ПостатейныеПеременныеРегл, 0)
		|				- ЕСТЬNULL(Резервы.РасходРегл, 0)
		|		 			* ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
		|		 			/ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
		// Если общая сумма в узле больше резерва - уменьшаем начальную стоимость в узле на сумму резерва,
		// скорректированную на отношение переменных расходов к общей сумме расходов.
		|		ИНАЧЕ ЕСТЬNULL(УзлыСЛУ.ПостатейныеПеременныеРегл, 0)
		|			- ЕСТЬNULL(Резервы.РезервРегл, 0)
		|		 		* ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
		|		 		/ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
		|	КОНЕЦ КАК ПостатейныеПеременныеРегл,
		|
		// Постатейные расходы организаций (управленческий учет)
		|	ВЫБОР
		|		КОГДА Резервы.РезервУпр ЕСТЬ NULL
		|		 ИЛИ ЕСТЬNULL(Резервы.РасходУпр, 0) <= 0
		|		 ИЛИ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр + СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0) <=0
		|			ТОГДА ЕСТЬNULL(УзлыСЛУ.ПостатейныеПостоянныеУпр, 0)
		// Если общая сумма в узле меньше резерва - уменьшаем начальную стоимость в узле на общую сумму расхода,
		// скорректированную на отношение постоянных расходов к общей сумме расходов.
		|		КОГДА (ЕСТЬNULL(Резервы.РасходУпр, 0) - ЕСТЬNULL(Резервы.РезервУпр, 0)) <= 0
		|			ТОГДА ЕСТЬNULL(УзлыСЛУ.ПостатейныеПостоянныеУпр, 0)
		|				- ЕСТЬNULL(Резервы.РасходУпр, 0)
		|		 			* ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр, 0)
		|		 			/ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр + СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0)
		// Если общая сумма в узле больше резерва - уменьшаем начальную стоимость в узле на сумму резерва,
		// скорректированную на отношение постоянных расходов к общей сумме расходов.
		|		ИНАЧЕ ЕСТЬNULL(УзлыСЛУ.ПостатейныеПостоянныеУпр, 0)
		|			- ЕСТЬNULL(Резервы.РезервУпр, 0)
		|		 		* ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр, 0)
		|		 		/ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр + СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0)
		|	КОНЕЦ КАК ПостатейныеПостоянныеУпр,
		|
		|	ВЫБОР
		|		КОГДА Резервы.РезервУпр ЕСТЬ NULL
		|		 ИЛИ ЕСТЬNULL(Резервы.РасходУпр, 0) <= 0
		|		 ИЛИ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр + СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0) <=0
		|			ТОГДА ЕСТЬNULL(УзлыСЛУ.ПостатейныеПеременныеУпр, 0)
		// Если общая сумма в узле меньше резерва - уменьшаем начальную стоимость в узле на общую сумму расхода,
		// скорректированную на отношение переменных расходов к общей сумме расходов.
		|		КОГДА (ЕСТЬNULL(Резервы.РасходУпр, 0) - ЕСТЬNULL(Резервы.РезервУпр, 0)) <= 0
		|			ТОГДА ЕСТЬNULL(УзлыСЛУ.ПостатейныеПеременныеУпр, 0)
		|				- ЕСТЬNULL(Резервы.РасходУпр, 0)
		|		 			* ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0)
		|		 			/ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр + СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0)
		// Если общая сумма в узле больше резерва - уменьшаем начальную стоимость в узле на сумму резерва,
		// скорректированную на отношение переменных расходов к общей сумме расходов.
		|		ИНАЧЕ ЕСТЬNULL(УзлыСЛУ.ПостатейныеПеременныеУпр, 0)
		|			- ЕСТЬNULL(Резервы.РезервУпр, 0)
		|		 		* ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0)
		|		 		/ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр + СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0)
		|	КОНЕЦ КАК ПостатейныеПеременныеУпр,
		|
		// Любая постоянная разница в системе (даже отрицательная) считается относящейся к суммам бухгалтерского учета, 
		// т.к. возникает при наличии расхода в БУ и его отсутствии в НУ, поэтому при расчете с учетом списания резервов 
		// она получается из пропорции суммы БУ с учетом резерва к исходной сумме БУ расчетным путём по формуле:
		//		СуммаСУчетомРезерваПР = (СуммаСУчетомРезерваБУ / ИсходнаяСуммаБУ) * ИсходнаяСуммаПР,
		//		где 
		//			ИсходнаяСуммаПР			= УзлыКорректировки.ПостояннаяРазница
		//			СуммаСУчетомРезерваБУ	= (ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл) текущего запроса,
		//			ИсходнаяСуммаБУ			= (УзлыСЛУ.ПостатейныеПостоянныеРегл + УзлыСЛУ.ПостатейныеПеременныеРегл)
		|
		// Формирование начальной стоимости постоянной разницы должно соответствовать функции ТекстВтУзлыКорректировкиПостояннаяРазница().
		|	ВЫБОР 
		|		КОГДА Резервы.РезервРегл ЕСТЬ NULL
		|		 ИЛИ ЕСТЬNULL(УзлыСЛУ.ПостатейныеПостоянныеРегл + УзлыСЛУ.ПостатейныеПеременныеРегл, 0) = 0
		|			ТОГДА ВЫРАЗИТЬ(УзлыКорректировки.ПостояннаяРазница
		//++ Локализация
		|				+ ЕСТЬNULL(НачальнаяСтоимость.ПостояннаяРазница, 0)
		//-- Локализация 
		|				КАК ЧИСЛО(28, 10))
		|		ИНАЧЕ (
		|
		//	ПостатейныеПостоянныеРегл текущего запроса
		|	ВЫБОР
		|		КОГДА Резервы.РезервРегл ЕСТЬ NULL
		|		 ИЛИ ЕСТЬNULL(Резервы.РасходРегл, 0) <= 0
		|		 ИЛИ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0) <=0
		|			ТОГДА ЕСТЬNULL(УзлыСЛУ.ПостатейныеПостоянныеРегл, 0)
		|		КОГДА (ЕСТЬNULL(Резервы.РасходРегл, 0) - ЕСТЬNULL(Резервы.РезервРегл, 0)) <= 0
		|			ТОГДА ЕСТЬNULL(УзлыСЛУ.ПостатейныеПостоянныеРегл, 0)
		|				- ЕСТЬNULL(Резервы.РасходРегл, 0)
		|		 			* ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл, 0)
		|		 			/ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
		|		ИНАЧЕ ЕСТЬNULL(УзлыСЛУ.ПостатейныеПостоянныеРегл, 0)
		|			- ЕСТЬNULL(Резервы.РезервРегл, 0)
		|		 		* ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл, 0)
		|		 		/ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
		|	КОНЕЦ
		|	+
		//	ПостатейныеПеременныеРегл текущего запроса
		|	ВЫБОР
		|		КОГДА Резервы.РезервРегл ЕСТЬ NULL
		|		 ИЛИ ЕСТЬNULL(Резервы.РасходРегл, 0) <= 0
		|		 ИЛИ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0) <=0
		|			ТОГДА ЕСТЬNULL(УзлыСЛУ.ПостатейныеПеременныеРегл, 0)
		|		КОГДА (ЕСТЬNULL(Резервы.РасходРегл, 0) - ЕСТЬNULL(Резервы.РезервРегл, 0)) <= 0
		|			ТОГДА ЕСТЬNULL(УзлыСЛУ.ПостатейныеПеременныеРегл, 0)
		|				- ЕСТЬNULL(Резервы.РасходРегл, 0)
		|		 			* ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
		|		 			/ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
		|		ИНАЧЕ ЕСТЬNULL(УзлыСЛУ.ПостатейныеПеременныеРегл, 0)
		|			- ЕСТЬNULL(Резервы.РезервРегл, 0)
		|		 		* ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
		|		 		/ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
		|	КОНЕЦ
		|
		|	) / ЕСТЬNULL(УзлыСЛУ.ПостатейныеПостоянныеРегл + УзлыСЛУ.ПостатейныеПеременныеРегл, 0) * УзлыКорректировки.ПостояннаяРазница
		|	КОНЕЦ КАК ПостояннаяРазница,
		|
		|	ВЫБОР
		|		КОГДА ЛОЖЬ ТОГДА 0 // для удобства расстановки тегов
		//++ Локализация
		
		// Если для узла нет резевов или при расчете СЛУ получилась отрицательная сумма расходов в узле,
		// то для такого узла корректировку на сумму резерва не выполняем.
		// В таком узле оставляем начальную стоимость расходов из временной таблицы ВтУзлыКорректировкиПостатейныеРасходыНЗП.
		|		КОГДА Резервы.РезервНУ ЕСТЬ NULL
		|		 ИЛИ ЕСТЬNULL(Резервы.РасходНУ, 0) <= 0
		|			ТОГДА УзлыКорректировки.СуммаНУ
		// Если расходы в бухгалтерском учете распределяются на производство, а в налоговом учете - не на производство, то
		// стоимость таких расходов в НУ равна 0.
		|		КОГДА УзлыКорректировки.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат))
		|			И НЕ УзлыКорректировки.СтатьяРасходов.ВариантРаспределенияРасходовНУ В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат))
		|		ТОГДА 0
		// Если общая сумма в узле меньше резерва - уменьшаем начальную стоимость в узле на общую сумму расхода.
		|		КОГДА (ЕСТЬNULL(Резервы.РасходНУ, 0) - ЕСТЬNULL(Резервы.РезервНУ, 0)) <= 0
		|			ТОГДА УзлыКорректировки.СуммаНУ - ЕСТЬNULL(Резервы.РасходНУ, 0)
		// Из общей суммы расходов в узле вычитаем резерв. Полученная сумма используется в качестве первоначлаьной суммы для расчета.
		|		ИНАЧЕ УзлыКорректировки.СуммаНУ - ЕСТЬNULL(Резервы.РезервНУ, 0)
		//-- Локализация
		|	КОНЕЦ КАК РасходыНУ
		|
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ УзлыСЛУ_ПостатейныеРасходыОрганизаций КАК УзлыСЛУ
		|		ПО УзлыСЛУ.НомерУзла = УзлыКорректировки.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК СебестоимостьОрганизаций
		|		ПО СебестоимостьОрганизаций.НомерУзла = УзлыКорректировки.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РезервыПоУзлам КАК Резервы
		|		ПО Резервы.НомерУзла = УзлыКорректировки.НомерУзла
		|
		//++ Локализация
		|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостояннаяРазница КАК НачальнаяСтоимость
		|		ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
		//-- Локализация 
		|
		//++ Локализация
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Если дополнительные расходы возникли в результате списания номенклатуры на расходы, то стоимость НУ таких расходов
		// будет рассчитана при решении СЛУ.
		// Начальная стоимость в узле хранится в таблице УзлыКорректировкиДополнительныхРасходов.
		// Начальная постоянная разница храниться в таблице ВтУзлыКорректировкиПостояннаяРазница.
		// Начальная налоговая стоимость храниться в таблице ВтУзлыКорректировкиНУ.
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		|	0 КАК ПостатейныеПостоянныеРегл,
		|	0 КАК ПостатейныеПеременныеРегл,
		|	0 КАК ПостатейныеПостоянныеУпр,
		|	0 КАК ПостатейныеПеременныеУпр,
		// Формирование начальной стоимости постоянной разницы должно соответствовать функции ТекстВтУзлыКорректировкиПостояннаяРазница().
		|	ВЫРАЗИТЬ(
		|		СУММА(
		|			УзлыКорректировки.ПостояннаяРазница + ЕСТЬNULL(НачальнаяСтоимость.ПостояннаяРазница, 0))
		|		КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
		|	ВЫРАЗИТЬ(
		|		СУММА(
		|			ЕСТЬNULL(ВтУзлыКорректировкиНУ.СуммаНУ, 0))
		|		КАК ЧИСЛО(28,10)) КАК РасходыНУ
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиНУ КАК ВтУзлыКорректировкиНУ
		|		ПО ВтУзлыКорректировкиНУ.НомерУзла = УзлыКорректировки.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостояннаяРазница КАК НачальнаяСтоимость
		|		ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла
		//-- Локализация
		|";
КонецФункции

Функция ТекстСвязиСЛУ_РезервыПредстоящихРасходов()
	Возврат "
		|ВЫБРАТЬ
		|	Связи.НомерУзлаИсточник,
		|	Связи.НомерУзлаПриемник,
		|	Связи.ВесДугиРегл КАК ВесДугиРегл,
		|	Связи.ВесДугиУпр КАК ВесДугиУпр
		|
		|ПОМЕСТИТЬ СвязиСЛУ_РезервыПредстоящихРасходов
		|ИЗ
		|	СвязиСЛУ_ПостатейныеРасходыОрганизаций КАК Связи
		|";
КонецФункции

//++ Локализация

// Вспомогательный запрос для отображения временной таблицы ВтТаблицаСвязейНУ в отладочной обработке.
//
Функция ТекстСвязиСЛУ_РезервыПредстоящихРасходов_НУ()
	Возврат "
		|ВЫБРАТЬ
		|	ТаблицаСвязей.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ТаблицаСвязей.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаСвязей.ВесДугиНУ, 0) КАК ЧИСЛО(28,10)) КАК ВесДугиНУ
		|
		|ПОМЕСТИТЬ СвязиСЛУ_РезервыПредстоящихРасходов_НУ
		|ИЗ
		|	ВтТаблицаСвязейНУ КАК ТаблицаСвязей
		|ГДЕ
		|	НЕ ТаблицаСвязей.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ТаблицаСвязей.НомерУзлаИсточник ЕСТЬ NULL
		|";
КонецФункции

//-- Локализация

#КонецОбласти

//++ Локализация

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУНалоговыйУчет

// Этап "ПодготовкаДанныхДляРешенияСЛУНалоговыйУчет"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУНалоговыйУчет(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУНалоговыйУчет");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"ВтУзлыКорректировкиНалоговыйУчет");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляРешенияСЛУНалоговыйУчет(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляРешенияСЛУНалоговыйУчет(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстЗапроса = ""
		// подготовка временных таблиц
		+ ТекстСебестоимостьНалоговыйУчет() // вт СебестоимостьНалоговыйУчет
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстВтУзлыКорректировкиНалоговыйУчет() // вт ВтУзлыКорректировкиНалоговыйУчет
		+ "";
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстСебестоимостьНалоговыйУчет() // вт СебестоимостьНалоговыйУчет
	Возврат "
		|ВЫБРАТЬ
		|	Себестоимость.Организация                КАК Организация,
		|	Себестоимость.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Себестоимость.РазделУчета                КАК РазделУчета,
		|	Себестоимость.ВидЗапасов                 КАК ВидЗапасов,
		|	Себестоимость.Партия                     КАК Партия,
		|	Себестоимость.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
		|	Себестоимость.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
		|	Себестоимость.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
		|
		|	СУММА(Себестоимость.СтоимостьНУ)         КАК СтоимостьНУ,
		|	СУММА(Себестоимость.ПостояннаяРазница)   КАК ПостояннаяРазница,
		|	СУММА(Себестоимость.ВременнаяРазница)    КАК ВременнаяРазница
		|
		|ПОМЕСТИТЬ СебестоимостьНалоговыйУчет
		|ИЗ (
		|	ВЫБРАТЬ
		|		Себестоимость.Организация,
		|		Себестоимость.АналитикаУчетаНоменклатуры,
		|		Себестоимость.РазделУчета,
		|		Себестоимость.ВидЗапасов,
		|		Себестоимость.Партия,
		|		Себестоимость.АналитикаУчетаПартий,
		|		Себестоимость.АналитикаФинансовогоУчета,
		|		Себестоимость.ВидДеятельностиНДС,
		|
		|		(ВЫБОР
		// Включение/исключение НДС в стоимость уже учтено в ВТСтоимостьПартийТоваров, но не учтено в ВтУзлыКорректировки
		|			КОГДА Себестоимость.ТипЗаписи =
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВключениеИсключениеНДСВСтоимости)
		|			ТОГДА
		|				Себестоимость.СтоимостьРегл
		|				+ Себестоимость.ПостатейныеПостоянныеРегл
		|				+ Себестоимость.ПостатейныеПеременныеРегл
		|		КОНЕЦ) КАК СтоимостьНУ,
		// Условия формирования суммовых показателей должны соответствовать функции ТекстВтУзлыКорректировки_МатериальныеИТрудозатраты().
		|		(ВЫБОР
		// Движения с типом записи "Корректировка приобретения" включаются в начальную стоимость узлов расчета, как и тип записи Партия.
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ПостояннаяРазница
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ПостояннаяРазница
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ПостояннаяРазница 
		|					ИНАЧЕ Себестоимость.ПостояннаяРазница КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ПостояннаяРазница
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|			 И НЕ (Себестоимость.РасчетПартий И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы))
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ПостояннаяРазница
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ПостояннаяРазница
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|				ТОГДА -Себестоимость.ПостояннаяРазница
		// Исключаем количество и стоимость списания на расходы по фиксированной стоимости.
		// Список хоз. операций должен совпадать во всех исключениях с данным комментарием.
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|				И Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводстваФиксированнаяСтоимость))
		|				ТОГДА -Себестоимость.ПостояннаяРазница
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ПостояннаяРазница
		|			КОГДА Себестоимость.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
		|			 И Себестоимость.РасчетНеЗавершен
		|				ТОГДА -Себестоимость.ПостояннаяРазница
		|			КОГДА Себестоимость.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеДоходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеРасходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|			ТОГДА
		|				-Себестоимость.ПостояннаяРазница
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостояннаяРазница
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостояннаяРазница,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА Себестоимость.ВременнаяРазница
		|			КОГДА Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА
		|					ВЫБОР КОГДА
		|					 Себестоимость.РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(ПеречислениЕ.РежимыЗакрытияМесяца.ПустаяСсылка)
		|					 И НЕ Себестоимость.РасчетСебестоимости
		|						ТОГДА 0
		|						ИНАЧЕ Себестоимость.ВременнаяРазница
		|					КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
		|				ТОГДА ВЫБОР КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|					ТОГДА -Себестоимость.ВременнаяРазница 
		|					ИНАЧЕ Себестоимость.ВременнаяРазница КОНЕЦ
		|			КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
		|				ТОГДА Себестоимость.ВременнаяРазница
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|			 И НЕ (Себестоимость.РасчетПартий И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы))
		|				ТОГДА 
		|					ВЫБОР
		|						КОГДА РассчитанныеДокументы.Регистратор ЕСТЬ NULL
		|							ТОГДА Себестоимость.ВременнаяРазница
		|						КОГДА (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 			 ИЛИ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
		|							ТОГДА Себестоимость.ВременнаяРазница
		// При отключенной &ВосстанавливатьХронологическуюПоследовательностьСписанияПартий очищаем сумму (кроме операций поступления
		// и возвратов прошлых периодов) 
		// Иначе в узле приемнике уже будет сумма и решение СЛУ начнет задваивать суммы при каждом расчете себестоимости.
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|				ТОГДА -Себестоимость.ВременнаяРазница
		// Исключаем количество и стоимость списания на расходы по фиксированной стоимости.
		// Список хоз. операций должен совпадать во всех исключениях с данным комментарием.
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|				И Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводстваФиксированнаяСтоимость))
		|				ТОГДА -Себестоимость.ВременнаяРазница
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход И Себестоимость.Сторно
		|	 		 И Себестоимость.ТипЗаписи В (
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|			  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод))
		|				ТОГДА -Себестоимость.ВременнаяРазница
		|			КОГДА Себестоимость.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
		|			 И Себестоимость.РасчетНеЗавершен
		|				ТОГДА -Себестоимость.ВременнаяРазница
		|			КОГДА Себестоимость.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеДоходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеРасходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|			ТОГДА
		|				-Себестоимость.ВременнаяРазница
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ВременнаяРазница
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВременнаяРазница
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК РаспределениеДопРасходов
		|			ПО РаспределениеДопРасходов.Ссылка = Себестоимость.Регистратор
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДатыДокументовИсточников КАК Реестр
		|		ПО Реестр.Ссылка = Себестоимость.ДокументИсточник
		|
		// Условие соединения должно совпадать (кроме типа соединения)
		// с см. РасчетСебестоимостиКорректировкаСтоимости.СохранитьДвиженияРасчетаСебестоимостиРассчитанныхДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РассчитанныеДокументы КАК РассчитанныеДокументы
		|			ПО РассчитанныеДокументы.Период = Себестоимость.Период
		|			И РассчитанныеДокументы.Регистратор = Себестоимость.Регистратор
		|
		// Остатки на начало расчетного периода.
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		Остатки.Организация,
		|		Остатки.АналитикаУчетаНоменклатуры,
		|		Остатки.РазделУчета,
		|		Остатки.ВидЗапасов,
		|		Остатки.Партия,
		|		Остатки.АналитикаУчетаПартий,
		|		Остатки.АналитикаФинансовогоУчета,
		|		Остатки.ВидДеятельностиНДС,
		|
		|		0                                КАК СтоимостьНУ,
		|		Остатки.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|		Остатки.ВременнаяРазницаОстаток  КАК ВременнаяРазница
		|	ИЗ
		|		РегистрНакопления.СебестоимостьТоваров.Остатки(
		|			&ГраницаНачалоПериода,
		|			Организация В (&МассивОрганизаций)
		|		) КАК Остатки
		|	) КАК Себестоимость
		|
		|СГРУППИРОВАТЬ ПО
		|	Себестоимость.Организация,
		|	Себестоимость.АналитикаУчетаНоменклатуры,
		|	Себестоимость.РазделУчета,
		|	Себестоимость.ВидЗапасов,
		|	Себестоимость.Партия,
		|	Себестоимость.АналитикаУчетаПартий,
		|	Себестоимость.АналитикаФинансовогоУчета,
		|	Себестоимость.ВидДеятельностиНДС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	РазделУчета,
		|	ВидЗапасов,
		|	Партия,
		|	АналитикаУчетаПартий,
		|	АналитикаФинансовогоУчета,
		|	ВидДеятельностиНДС
		|";
КонецФункции	

Функция ТекстВтУзлыКорректировкиНалоговыйУчет() // вт ВтУзлыКорректировкиНалоговыйУчет
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла,           
		|	УзлыКорректировки.Организация,
		|	УзлыКорректировки.АналитикаУчетаНоменклатуры,
		|	УзлыКорректировки.РазделУчета,
		|	УзлыКорректировки.ВидЗапасов,
		|	УзлыКорректировки.Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий,
		|	УзлыКорректировки.АналитикаФинансовогоУчета,
		|	УзлыКорректировки.ВидДеятельностиНДС,
		|
		|	УзлыКорректировки.Количество,
		|	УзлыКорректировки.СтоимостьРегл
		|		+ УзлыКорректировки.ДопРасходыРегл
		|		+ УзлыКорректировки.ТрудозатратыРегл
		|		+ УзлыКорректировки.ПостатейныеПостоянныеРегл
		|		+ УзлыКорректировки.ПостатейныеПеременныеРегл
		|		+ ЕСТЬNULL(Себестоимость.СтоимостьНУ, 0)
		|		- ЕСТЬNULL(Себестоимость.ВременнаяРазница, 0)
		|		- ЕСТЬNULL(Себестоимость.ПостояннаяРазница, 0)
		|	КАК СуммаНУ,
		|	Себестоимость.ПостояннаяРазница КАК ПостояннаяРазница,
		|	Себестоимость.ВременнаяРазница  КАК ВременнаяРазница
		|
		|ПОМЕСТИТЬ ВтУзлыКорректировкиНалоговыйУчет
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ СебестоимостьНалоговыйУчет КАК Себестоимость
		|	ПО Себестоимость.Организация                   = УзлыКорректировки.Организация
		|		И Себестоимость.АналитикаУчетаНоменклатуры = УзлыКорректировки.АналитикаУчетаНоменклатуры
		|		И Себестоимость.РазделУчета                = УзлыКорректировки.РазделУчета
		|		И Себестоимость.ВидЗапасов                 = УзлыКорректировки.ВидЗапасов
		|		И Себестоимость.Партия                     = УзлыКорректировки.Партия
		|		И Себестоимость.АналитикаУчетаПартий       = УзлыКорректировки.АналитикаУчетаПартий
		|		И Себестоимость.АналитикаФинансовогоУчета  = УзлыКорректировки.АналитикаФинансовогоУчета
		|		И Себестоимость.ВидДеятельностиНДС         = УзлыКорректировки.ВидДеятельностиНДС
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|";
КонецФункции

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУПостояннаяРазница_Этап1

// Этап "ПодготовкаДанныхДляРешенияСЛУПостояннаяРазница_Этап1"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУПостояннаяРазница_Этап1(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУПостояннаяРазница_Этап1");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"НачальнаяСтоимостьПостояннаяРазница, ВтУзлыКорректировкиПостояннаяРазница, ВтТаблицаСвязейПостояннаяРазница");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляРешенияСЛУПостояннаяРазница(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляРешенияСЛУПостояннаяРазница(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстЗапроса = ""
		// подготовка временных таблиц
		+ ТекстНачальнаяСтоимостьПостояннаяРазница() // вт НачальнаяСтоимостьПостояннаяРазница
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстВтУзлыКорректировкиПостояннаяРазница() // вт ВтУзлыКорректировкиПостояннаяРазница
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстВтТаблицаСвязейПостояннаяРазница() // вт ВтТаблицаСвязейПостояннаяРазница
		+ "";
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстНачальнаяСтоимостьПостояннаяРазница() // вт НачальнаяСтоимостьПостояннаяРазница
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		|
		// Постоянная разница по расходам, не принимаемым к налоговому учету.
		|	ВЫРАЗИТЬ(СУММА(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЕ ПеремещенияСписания.ПринимаемыеВНУ, ЛОЖЬ)
		|			ТОГДА ЕСТЬNULL(ТаблицаРешений.СуммаНУ, 0)
		|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыНУ, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница
		|
		|ПОМЕСТИТЬ НачальнаяСтоимостьПостояннаяРазница
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
		|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СуммаНУ КАК ТаблицаРешений
		|		ПО ТаблицаРешений.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|ГДЕ
		|	УзлыКорректировки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|	И НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		|
		// Постоянная разница по расходам, не принимаемым к налоговому учету.
		|	ВЫРАЗИТЬ(СУММА(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЕ ПеремещенияСписания.ПринимаемыеВНУ, ЛОЖЬ)
		|			ТОГДА ЕСТЬNULL(ТаблицаРешений.СуммаНУ, 0)
		|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиНУ, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница
		|
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ СвязиУзловДополнительныхРасходов КАК ПеремещенияСписания
		|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СуммаНУ КАК ТаблицаРешений
		|		ПО ТаблицаРешений.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|";
КонецФункции	

Функция ТекстВтУзлыКорректировкиПостояннаяРазница() // вт ВтУзлыКорректировкиПостояннаяРазница
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла         КАК НомерУзла,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ПостояннаяРазница КАК ЧИСЛО(28, 10)) КАК ПостояннаяРазница
		|
		|ПОМЕСТИТЬ ВтУзлыКорректировкиПостояннаяРазница
		|ИЗ
		|	ВтУзлыКорректировкиНалоговыйУчет КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Формирование начальной стоимости постоянной разницы должно быть сделано аналогично в функции ТекстУзлыСЛУ_РезервыПредстоящихРасходов()
		// в запросе формирования временной таблицы УзлыСЛУ_РезервыПредстоящихРасходов.
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                             КАК НомерУзла,
		|		ВЫРАЗИТЬ(ЕСТЬNULL(УзлыКорректировки.ПостояннаяРазница, 0)
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостояннаяРазница, 0) КАК ЧИСЛО(28, 10)) КАК ПостояннаяРазница
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостояннаяРазница КАК НачальнаяСтоимость
		|	ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                             КАК НомерУзла,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ПостояннаяРазница
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостояннаяРазница, 0) КАК ЧИСЛО(28, 10)) КАК ПостояннаяРазница
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостояннаяРазница КАК НачальнаяСтоимость
		|	ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|";
КонецФункции

Функция ТекстВтТаблицаСвязейПостояннаяРазница() // вт ВтТаблицаСвязейПостояннаяРазница 
	Возврат "
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
		|
		|ПОМЕСТИТЬ ВтТаблицаСвязейПостояннаяРазница
		|ИЗ
		|	ВтПеремещенияСписания КАК ПеремещенияСписания
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.РеализацияВДругуюОрганизацию
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(ВЫБОР
		// Если расходы не будут распределены в бух. учете, то постоянную разницу оставляем на исходном узле (вместе с суммой бух учета).
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
		|ИЗ
		|	ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(ВЫБОР
		// Если расходы не будут распределены в бух. учете, то постоянную разницу оставляем на исходном узле (вместе с суммой бух учета).
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиРегл, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
		|ИЗ
		|	СвязиУзловДополнительныхРасходов КАК ПеремещенияСписания
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.Количество
		// Если в узле есть выпуски по фикс стоимости, которые частично списаны на расходы, то уменьшаем начальное количество
		// в узле на количество, списанное на расходы.
		|		+ (ВЫБОР КОГДА УзлыКорректировки.Количество <> УзлыКорректировки.КоличествоСписаноПоФиксСтоимости
		|			ТОГДА - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости ИНАЧЕ 0 КОНЕЦ)
		|		КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеРегл КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесРегл КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|";
КонецФункции

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУ_НалоговыйУчет_ПостатейныеРасходы

// Этап "ПодготовкаДанныхДляРешенияСЛУ_НалоговыйУчет_ПостатейныеРасходы"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУ_НалоговыйУчет_ПостатейныеРасходы(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУ_НалоговыйУчет_ПостатейныеРасходы");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"ВтУзлыКорректировкиНУ, ВтТаблицаСвязейНУ");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляРешенияСЛУ_НалоговыйУчет_ПостатейныеРасходы(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляРешенияСЛУ_НалоговыйУчет_ПостатейныеРасходы(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстЗапроса = ""
		// подготовка временных таблиц
		+ ТекстВтУзлыКорректировкиНУ() // вт ВтУзлыКорректировкиНУ
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстВтТаблицаСвязейНУ() // вт ВтТаблицаСвязейНУ
		+ "";
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстВтУзлыКорректировкиНУ() // вт ВтУзлыКорректировкиНУ
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла        КАК НомерУзла,
		|	ВЫРАЗИТЬ(УзлыКорректировки.СуммаНУ КАК ЧИСЛО(28, 10)) КАК СуммаНУ
		|ПОМЕСТИТЬ ВтУзлыКорректировкиНУ
		|ИЗ
		|	ВтУзлыКорректировкиНалоговыйУчет КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                            КАК НомерУзла,
		|	ВЫРАЗИТЬ(УзлыКорректировки.СуммаНУ КАК ЧИСЛО(28, 10)) КАК СуммаНУ
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                            КАК НомерУзла,
		|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьНУ КАК ЧИСЛО(28, 10)) КАК СуммаНУ
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|";
КонецФункции

Функция ТекстВтТаблицаСвязейНУ() // вт ВтТаблицаСвязейНУ 
	Возврат "
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиНУ
		|
		|ПОМЕСТИТЬ ВтТаблицаСвязейНУ
		|ИЗ
		|	ВтПеремещенияСписания КАК ПеремещенияСписания
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.РеализацияВДругуюОрганизацию
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		// Расходы не распределяются в нал. учете - стоимость НУ должна остаться на источнике, 
		// кроме списания номенклатуры в узел постатейных расходов (соответствует приходу в регистр "Прочие расходы").
		// Условия формирования значения поля ВесДугиНУ должны соответствовать запросу ТекстСвязиСЛУ_ПостатейныеРасходыОрганизаций()
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		|			КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ)
		|			 И УзлыКорректировки.НомерУзла ЕСТЬ NULL
		|			 ИЛИ НЕ ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА)
		|				ТОГДА 0
		|			ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыНУ, 0)
		|		КОНЕЦ
		|	КАК ЧИСЛО(28,10)) КАК ВесДугиНУ
		|ИЗ
		|	ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировки
		|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		|			КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ) ИЛИ НЕ ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА)
		|				ТОГДА 0
		|			ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиНУ, 0)
		|		КОНЕЦ
		|	КАК ЧИСЛО(28,10))
		|ИЗ
		|	СвязиУзловДополнительныхРасходов КАК ПеремещенияСписания
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.Количество
		// Если в узле есть выпуски по фикс стоимости, которые частично списаны на расходы, то уменьшаем начальное количество
		// в узле на количество, списанное на расходы.
		|		+ (ВЫБОР КОГДА УзлыКорректировки.Количество <> УзлыКорректировки.КоличествоСписаноПоФиксСтоимости
		|			ТОГДА - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости ИНАЧЕ 0 КОНЕЦ)
		|		КАК ЧИСЛО(28,10))
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеРегл КАК ЧИСЛО(28,10)) = 0 ТОГДА
		|			ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеНУ КАК ЧИСЛО(28,10))
		|		ИНАЧЕ ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеРегл КАК ЧИСЛО(28,10))
		|	КОНЕЦ
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесНУ КАК ЧИСЛО(28,10))
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|";
КонецФункции

#КонецОбласти

//-- Локализация

//-- НЕ УТ

// Расчет системы линейных уравнений
#Область ПроцедурыРешенияСЛУПлатформой

// Для совместимости с платформой ниже 8.3.14
//
// Возвращаемое значение:
//	РасчетСистемЛинейныхУравнений - компонента решения системы линейных уравнений
//
Функция ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета) Экспорт
	
	РасчетСистемЛинейныхУравнений = ОбщегоНазначения.ВычислитьВБезопасномРежиме("Новый РасчетСистемЛинейныхУравнений");
	
	РасчетСистемЛинейныхУравнений.КоличествоИтераций				  = ПараметрыРасчета.РешениеСЛУ.МаксимальноеКоличествоИтераций;
	РасчетСистемЛинейныхУравнений.ТребуемаяТочность					  = ПараметрыРасчета.РешениеСЛУ.ТребуемаяТочность;
	РасчетСистемЛинейныхУравнений.ИспользованиеВычислительныхРесурсов = ПараметрыРасчета.РешениеСЛУ.ИспользованиеВычислительныхРесурсов;
	РасчетСистемЛинейныхУравнений.ГраницаИзмененияАлгоритмаРешения    = ПараметрыРасчета.РешениеСЛУ.ГраницаИзмененияАлгоритмаРешения;
	
	Возврат РасчетСистемЛинейныхУравнений;
	
КонецФункции

// Выполняет расчет систем уравнений для показателей:
//	Стоимость, СтоимостьБезНДС, СтоимостьЗабалансовая, Трудозатраты
//		
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаРешений_СебестоимостьПредприятия"
//
Процедура РешитьСЛУПлатформой_СебестоимостьПредприятия(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_СебестоимостьПредприятия");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для себестоимости предприятия';
								|en = 'Solution for the enterprise cost'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла				    КАК НомерУзла,
	|	УзлыКорректировки.Стоимость                 КАК Стоимость,
	|	УзлыКорректировки.СтоимостьБезНДС           КАК СтоимостьБезНДС,
	|	УзлыКорректировки.СтоимостьЗабалансовая     КАК СтоимостьЗабалансовая,
	|	УзлыКорректировки.Трудозатраты              КАК Трудозатраты
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	                                          
	ЗапросСвязи = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимость,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьБезНДС,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьЗабалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьЗабалансовая,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатраты
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	// Выражение ниже должно совпадать в след. местах: ТекстСвязиСЛУ_ПостатейныеРасходыПредприятия, ТекстСвязиСЛУ_ПостатейныеРасходыОрганизаций
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимость,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьБезНДС,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьЗабалансовая,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатраты
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	ЗапросСвязи.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязи.Текст);
	
	// корректируем стоимости узлов с нулевым весом
	СтруктураПолейСЛУ = Новый Структура;
	СтруктураПолейСЛУ.Вставить("ВесДугиСтоимость", "Стоимость");
	СтруктураПолейСЛУ.Вставить("ВесДугиСтоимостьБезНДС", "СтоимостьБезНДС");
	СтруктураПолейСЛУ.Вставить("ВесДугиСтоимостьЗабалансовая", "СтоимостьЗабалансовая");
	СтруктураПолейСЛУ.Вставить("ВесДугиТрудозатраты", "Трудозатраты");

	РасчетСебестоимостиПрикладныеАлгоритмы.СкорректироватьСтоимостьУзловСЛУИзЗапросов(
		ПараметрыРасчета,
		ЗапросУзлы,
		"НомерУзла",
		ЗапросСвязи,
		"НомерУзлаИсточник, НомерУзлаПриемник",
		СтруктураПолейСЛУ,
		ПояснениеДляЗамера);
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// набор описания систем
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "Стоимость";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимость";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьБезНДС";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьБезНДС";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "Трудозатраты";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиТрудозатраты";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	
	// Загрузка решения во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"Стоимость, СтоимостьБезНДС, Трудозатраты",,"ТаблицаРешенийБаланс");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера + НСтр("ru = ' (балансовые показатели)';
									|en = ' (balance indicators)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ТаблицаРешений.Очистить();
	
	// сброс для следующего набора описаний
	РасчетСистемЛинейныхУравнений.ОписанияСистем.Очистить();
	
	// набор описания систем
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьЗабалансовая";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьЗабалансовая";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"СтоимостьЗабалансовая",,"ТаблицаРешенийЗабаланс");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера + НСтр("ru = ' (забалансовые показатели)';
									|en = ' (off-balance indicators)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ТаблицаРешений.Очистить();
	
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	Запрос = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийБаланс.Стоимость, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК Стоимость,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийБаланс.СтоимостьБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьБезНДС,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийЗабаланс.СтоимостьЗабалансовая, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьЗабалансовая,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийБаланс.Трудозатраты, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК Трудозатраты
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_СебестоимостьПредприятия
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийБаланс КАК ТаблицаРешенийБаланс
	|	ПО ТаблицаРешенийБаланс.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийЗабаланс КАК ТаблицаРешенийЗабаланс
	|	ПО ТаблицаРешенийЗабаланс.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаРешенийБаланс;
	|УНИЧТОЖИТЬ ТаблицаРешенийЗабаланс;
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	СохранитьСЛУВФайл(ПараметрыРасчета);
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//	СтоимостьРегл, СтоимостьЗабалансоваяРегл, ТрудозатратыРегл, СтоимостьУпр, ТрудозатратыУпр
//		
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаРешений_СебестоимостьОрганизаций"
//
Процедура РешитьСЛУПлатформой_СебестоимостьОрганизаций(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_СебестоимостьОрганизаций");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для себестоимости организаций';
								|en = 'Solution for cost of companies'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст =
		"ВЫБРАТЬ
		|	НачальнаяСтоимостьУзлов.НомерУзла КАК НомерУзла,
		|	СУММА(НачальнаяСтоимостьУзлов.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(НачальнаяСтоимостьУзлов.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансоваяРегл,
		|	СУММА(НачальнаяСтоимостьУзлов.ТрудозатратыРегл) КАК ТрудозатратыРегл,
		|	СУММА(НачальнаяСтоимостьУзлов.СтоимостьУпр) КАК СтоимостьУпр,
		|	СУММА(НачальнаяСтоимостьУзлов.ТрудозатратыУпр) КАК ТрудозатратыУпр
		|ИЗ
		|	(ВЫБРАТЬ
		|		УзлыКорректировки.НомерУзла КАК НомерУзла,
		|		УзлыКорректировки.СтоимостьРегл КАК СтоимостьРегл,
		|		УзлыКорректировки.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
		|		УзлыКорректировки.ТрудозатратыРегл КАК ТрудозатратыРегл,
		|		УзлыКорректировки.СтоимостьУпр КАК СтоимостьУпр,
		|		УзлыКорректировки.ТрудозатратыУпр КАК ТрудозатратыУпр
		|	ИЗ
		|		ВтУзлыКорректировки КАК УзлыКорректировки
		|	
		//++ НЕ УТ
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		УзлыКорректировки.НомерУзла,
		|		ВЫРАЗИТЬ(Стоимости.РезервПодОбесценениеРегл * СвязиРезервов.ВесДуги КАК ЧИСЛО(28, 10)),
		|		0,
		|		0,
		|		ВЫРАЗИТЬ(Стоимости.РезервПодОбесценениеУпр * СвязиРезервов.ВесДуги КАК ЧИСЛО(28, 10)),
		|		0
		|	ИЗ
		|		СвязиУзловРезервовПодОбесценениеЗапасов КАК СвязиРезервов
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировки
		|			ПО СвязиРезервов.НомерУзлаПриемник = УзлыКорректировки.НомерУзла
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК Стоимости
		|			ПО СвязиРезервов.НомерУзлаИсточник = Стоимости.НомерУзла
		|	ГДЕ
		|		НЕ СвязиРезервов.ПереноситьРезерв
		//++ НЕ УТКА
		
		//++ Устарело_Переработка24
		|		И НЕ СвязиРезервов.ПродукцияДавальца
		//-- Устарело_Переработка24
		
		//-- НЕ УТКА
		
		//-- НЕ УТ
		|	) КАК НачальнаяСтоимостьУзлов
		|
		|СГРУППИРОВАТЬ ПО
		|	НачальнаяСтоимостьУзлов.НомерУзла";
	                                          
	ЗапросСвязи = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьРегл,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьЗабалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьЗабалансоваяРегл,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатратыРегл,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьУпр,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатратыУпр
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.РеализацияВДругуюОрганизацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьЗабалансоваяРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатратыРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьУпр,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатратыУпр
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	ЗапросСвязи.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязи.Текст);
	
	// корректируем стоимости узлов с нулевым весом
	СтруктураПолейСЛУ = Новый Структура;
	СтруктураПолейСЛУ.Вставить("ВесДугиСтоимостьРегл", "СтоимостьРегл");
	СтруктураПолейСЛУ.Вставить("ВесДугиСтоимостьЗабалансоваяРегл",  "СтоимостьЗабалансоваяРегл");
	СтруктураПолейСЛУ.Вставить("ВесДугиТрудозатратыРегл",  "ТрудозатратыРегл");
	СтруктураПолейСЛУ.Вставить("ВесДугиСтоимостьУпр",  "СтоимостьУпр");
	СтруктураПолейСЛУ.Вставить("ВесДугиТрудозатратыУпр",  "ТрудозатратыУпр");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СкорректироватьСтоимостьУзловСЛУИзЗапросов(
		ПараметрыРасчета,
		ЗапросУзлы,
		"НомерУзла",
		ЗапросСвязи,
		"НомерУзлаИсточник, НомерУзлаПриемник",
		СтруктураПолейСЛУ,
		ПояснениеДляЗамера);
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// набор описания систем
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ТрудозатратыРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиТрудозатратыРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьУпр";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ТрудозатратыУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиТрудозатратыУпр";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	
	// Загрузка решения во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"СтоимостьРегл, ТрудозатратыРегл, СтоимостьУпр, ТрудозатратыУпр",,"ТаблицаРешенийБаланс");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера + НСтр("ru = ' (балансовые показатели)';
									|en = ' (balance indicators)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ТаблицаРешений.Очистить();
	
	// сброс для следующего набора описаний
	РасчетСистемЛинейныхУравнений.ОписанияСистем.Очистить();
	
	// набор описания систем
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьЗабалансоваяРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьЗабалансоваяРегл";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"СтоимостьЗабалансоваяРегл",,"ТаблицаРешенийЗабаланс");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера + НСтр("ru = ' (забалансовые показатели)';
									|en = ' (off-balance indicators)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ТаблицаРешений.Очистить();
	
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	Запрос = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийБаланс.СтоимостьРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьРегл,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийЗабаланс.СтоимостьЗабалансоваяРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьЗабалансоваяРегл,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийБаланс.ТрудозатратыРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ТрудозатратыРегл,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийБаланс.СтоимостьУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьУпр,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийБаланс.ТрудозатратыУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ТрудозатратыУпр
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_СебестоимостьОрганизаций
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийБаланс КАК ТаблицаРешенийБаланс
	|	ПО ТаблицаРешенийБаланс.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийЗабаланс КАК ТаблицаРешенийЗабаланс
	|	ПО ТаблицаРешенийЗабаланс.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаРешенийБаланс; 
	|УНИЧТОЖИТЬ ТаблицаРешенийЗабаланс; 
	|";
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//	ДопРасходы, ДопРасходыБезНДС
//		
// Результатом работы данной процедуры будет временная таблица "ТаблицаРешений".
//
Процедура РешитьСЛУПлатформой_ДополнительныеРасходы(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_ДопРасходыПредприятия");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для себестоимости предприятия';
								|en = 'Solution for the enterprise cost'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	// корректируем стоимости узлов с нулевым весом
	СтруктураПолейСЛУ = Новый Структура;
	СтруктураПолейСЛУ.Вставить("ВесДугиСНДС", "СтоимостьСНДС");
	СтруктураПолейСЛУ.Вставить("ВесДугиБезНДС", "СтоимостьБезНДС");
	СтруктураПолейСЛУ.Вставить("ВесДугиРегл", "СтоимостьРегл");
	СтруктураПолейСЛУ.Вставить("ВесДугиУпр", "СтоимостьУпр");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СкорректироватьСтоимостьУзловСЛУИзВременныхТаблиц(
		ПараметрыРасчета,
		"УзлыСЛУ_ДополнительныеРасходы",
		"НомерУзла",
		"СвязиСЛУ_ДополнительныеРасходы",
		"НомерУзлаИсточник, НомерУзлаПриемник",
		СтруктураПолейСЛУ,
		ПояснениеДляЗамера);
	
	#Область Узлы
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	УзлыКорректировки.СтоимостьСНДС КАК СтоимостьСНДС,
	|	УзлыКорректировки.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	УзлыКорректировки.СтоимостьРегл КАК СтоимостьРегл,
	|	УзлыКорректировки.СтоимостьУпр КАК СтоимостьУпр
	|ИЗ
	|	УзлыСЛУ_ДополнительныеРасходы КАК УзлыКорректировки
	|";
	
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																									|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	#КонецОбласти
	
	#Область Связи
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Связи.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	Связи.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	Связи.ВесДугиСНДС       КАК ВесДугиСНДС,
	|	Связи.ВесДугиБезНДС     КАК ВесДугиБезНДС,
	|	Связи.ВесДугиРегл       КАК ВесДугиРегл,
	|	Связи.ВесДугиУпр        КАК ВесДугиУпр
	|ИЗ
	|	СвязиСЛУ_ДополнительныеРасходы КАК Связи
	|";
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(
		ПараметрыРасчета, Запрос.Текст);
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(
		ПараметрыРасчета, Запрос,,, Истина, 
		ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	#КонецОбласти
	
	#Область РешениеСЛУ_Упр
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета,
		"РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьСНДС";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСНДС";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьБезНДС";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиБезНДС";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиУпр";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"СтоимостьСНДС, СтоимостьБезНДС, СтоимостьУпр",
		,
		"РезультатРасчетаУпр");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
		
	ТаблицаРешений.Очистить();
	
	#КонецОбласти
		
	#Область РешениеСЛУ_Регл
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета,
		"РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРегл";
	
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"СтоимостьРегл",
		,
		"РезультатРасчетаРегл");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	ТаблицаРешений.Очистить();
	
	#КонецОбласти
	
	#Область ТаблицаРешений
	
	Запрос = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесСНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчетаУпр.СтоимостьСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьСНДС,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесБезНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчетаУпр.СтоимостьБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьБезНДС,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчетаРегл.СтоимостьРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчетаУпр.СтоимостьУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьУпр
	|
	|ПОМЕСТИТЬ ТаблицаРешений
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РезультатРасчетаУпр КАК РезультатРасчетаУпр
	|		ПО РезультатРасчетаУпр.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РезультатРасчетаРегл КАК РезультатРасчетаРегл
	|		ПО РезультатРасчетаРегл.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчетаУпр.СтоимостьСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьСНДС,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчетаУпр.СтоимостьБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьБезНДС,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчетаРегл.СтоимостьРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчетаУпр.СтоимостьУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьУпр
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РезультатРасчетаУпр КАК РезультатРасчетаУпр
	|		ПО РезультатРасчетаУпр.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РезультатРасчетаРегл КАК РезультатРасчетаРегл
	|		ПО РезультатРасчетаРегл.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|/////////////////////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РезультатРасчетаУпр;
	|УНИЧТОЖИТЬ РезультатРасчетаРегл;
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	#КонецОбласти
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"УзлыСЛУ_ДополнительныеРасходы, СвязиСЛУ_ДополнительныеРасходы");
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//	СтоимостьРегл, СтоимостьУпр
//		
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаРешений_СебестоимостьОрганизаций"
//
Процедура РешитьСЛУПлатформой_ВключениеИсключениеНДСОрганизаций(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_ВключениеИсключениеНДСОрганизаций");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для себестоимости организаций';
								|en = 'Solution for cost of companies'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	#Область Узлы
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла        КАК НомерУзла,
	|	УзлыКорректировки.СтоимостьРегл    КАК СтоимостьРегл,
	|	УзлыКорректировки.СтоимостьУпр     КАК СтоимостьУпр
	|ИЗ
	|	УзлыКорректировкиВключениеИсключениеНДС КАК УзлыКорректировки";
	
	#КонецОбласти
	
	#Область Связи
	
	ЗапросСвязи = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьУпр
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.РеализацияВДругуюОрганизацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьУпр
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки";
	ЗапросСвязи.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязи.Текст);
	
	#КонецОбласти
	
	// корректируем стоимости узлов с нулевым весом
	СтруктураПолейСЛУ = Новый Структура;
	СтруктураПолейСЛУ.Вставить("ВесДугиСтоимостьРегл", "СтоимостьРегл");
	СтруктураПолейСЛУ.Вставить("ВесДугиСтоимостьУпр",  "СтоимостьУпр");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СкорректироватьСтоимостьУзловСЛУИзЗапросов(
		ПараметрыРасчета,
		ЗапросУзлы,
		"НомерУзла",
		ЗапросСвязи,
		"НомерУзлаИсточник, НомерУзлаПриемник",
		СтруктураПолейСЛУ,
		ПояснениеДляЗамера);
	
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	#Область РешениеСЛУ
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьУпр";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	#КонецОбласти
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"СтоимостьРегл, СтоимостьУпр");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.СтоимостьРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьРегл,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.СтоимостьУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьУпр
	|ПОМЕСТИТЬ ВтТаблицаРешений_СебестоимостьОрганизаций
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРешений
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	ТаблицаРешений.Очистить();
	
КонецПроцедуры

//++ НЕ УТ

// Выполняет расчет систем уравнений для показателей:
//	РезервПодОбесценениеРегл, РезервПодОбесценениеУпр
//		
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаРешений_РезервыПодОбесценениеЗапасовОрганизаций".
//
Процедура РешитьСЛУПлатформой_РезервыПодОбесценениеЗапасовОрганизаций(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_РезервыПодОбесценениеЗапасовОрганизаций");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для себестоимости организаций';
								|en = 'Solution for cost of companies'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|
	|	УзлыКорректировки.РезервПодОбесценениеРегл  КАК РезервПодОбесценениеРегл,
	|	УзлыКорректировки.РезервПодОбесценениеУпр   КАК РезервПодОбесценениеУпр
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";

	ЗапросСвязи = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	СвязиУзлов.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	СвязиУзлов.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА НЕ СвязиУзлов.ПереноситьРезерв
	|				ТОГДА 0
	|			ИНАЧЕ
	|				-СвязиУзлов.ВесДуги
	|		КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиРезервРегл,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА НЕ СвязиУзлов.ПереноситьРезерв
	|				ТОГДА 0
	|			ИНАЧЕ
	|				-СвязиУзлов.ВесДуги
	|		КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиРезервУпр
	|ИЗ
	|	СвязиУзловРезервовПодОбесценениеЗапасов КАК СвязиУзлов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиРезервРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество - УзлыКорректировки.КоличествоСписаноПоФиксСтоимости КАК ЧИСЛО(28,10)) КАК ВесДугиРезервУпр
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	ЗапросСвязи.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязи.Текст);
	
	// корректируем стоимости узлов с нулевым весом
	СтруктураПолейСЛУ = Новый Структура;
	СтруктураПолейСЛУ.Вставить("ВесДугиРезервРегл", "РезервПодОбесценениеРегл");
	СтруктураПолейСЛУ.Вставить("ВесДугиРезервУпр",  "РезервПодОбесценениеУпр");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СкорректироватьСтоимостьУзловСЛУИзЗапросов(
		ПараметрыРасчета,
		ЗапросУзлы,
		"НомерУзла",
		ЗапросСвязи,
		"НомерУзлаИсточник, НомерУзлаПриемник",
		СтруктураПолейСЛУ,
		ПояснениеДляЗамера);
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "РезервПодОбесценениеРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРезервРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "РезервПодОбесценениеУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРезервУпр";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"РезервПодОбесценениеРегл, РезервПодОбесценениеУпр",
		,
		"ТаблицаРешений_Резервы");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	Запрос = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.РезервПодОбесценениеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК РезервПодОбесценениеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.РезервПодОбесценениеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК РезервПодОбесценениеУпр
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_РезервыПодОбесценениеЗапасовОрганизаций
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_Резервы КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаРешений_Резервы 
	|";
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//	ПостатейныеПостоянныеСНДС, ПостатейныеПеременныеСНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеБезНДС
//		
// Результатом работы данной процедуры будут временные таблицы:
// - "ВтТаблицаРешений_СебестоимостьПредприятия"
//
Процедура РешитьСЛУПлатформой_ПостатейныеРасходыПредприятия(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_ПостатейныеРасходыПредприятия");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для постатейных расходов предприятия';
								|en = 'Solution for the enterprise itemized expenses'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	#Область Узлы
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                   КАК НомерУзла,
	// Постатейные расходы предприятия с НДС
	|	УзлыКорректировки.ПостатейныеПостоянныеСНДС   КАК ПостатейныеПостоянныеСНДС,
	|	УзлыКорректировки.ПостатейныеПеременныеСНДС   КАК ПостатейныеПеременныеСНДС,
	// Постатейные расходы предприятия без НДС
	|	УзлыКорректировки.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	УзлыКорректировки.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС
	|ИЗ
	|	УзлыСЛУ_ПостатейныеРасходыПредприятия КАК УзлыКорректировки
	|";
	
	#КонецОбласти
	
	#Область Связи
	                                          
	ЗапросСвязи = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	Связи.НомерУзлаИсточник,
	|	Связи.НомерУзлаПриемник,
	|	Связи.ВесДугиСНДС,
	|	Связи.ВесДугиБезНДС
	|ИЗ
	|	СвязиСЛУ_ПостатейныеРасходыПредприятия КАК Связи
	|";
	ЗапросСвязи.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязи.Текст);
	
	#КонецОбласти
	
	#Область РешениеСЛУ
	
	// корректируем стоимости узлов с нулевым весом
	СтруктураПолейСЛУ = Новый Структура;
	СтруктураПолейСЛУ.Вставить("ВесДугиСНДС", "ПостатейныеПостоянныеСНДС, ПостатейныеПеременныеСНДС");
	СтруктураПолейСЛУ.Вставить("ВесДугиБезНДС", "ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеБезНДС");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СкорректироватьСтоимостьУзловСЛУИзВременныхТаблиц(
		ПараметрыРасчета,
		"УзлыСЛУ_ПостатейныеРасходыПредприятия",
		"НомерУзла",
		"СвязиСЛУ_ПостатейныеРасходыПредприятия",
		"НомерУзлаИсточник, НомерУзлаПриемник",
		СтруктураПолейСЛУ,
		ПояснениеДляЗамера);
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// набор описания систем
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПостоянныеСНДС";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСНДС";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПеременныеСНДС";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСНДС";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	
	// Загрузка решения во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостатейныеПостоянныеСНДС, ПостатейныеПеременныеСНДС",,"ТаблицаРешенийСНДС");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера + НСтр("ru = ' (с НДС)';
									|en = ' (including VAT)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ТаблицаРешений.Очистить();
	
	// сброс для следующего набора описаний
	РасчетСистемЛинейныхУравнений.ОписанияСистем.Очистить();
	
	// набор описания систем
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПостоянныеБезНДС";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиБезНДС";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПеременныеБезНДС";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиБезНДС";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	
	// Загрузка решения во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеБезНДС",,"ТаблицаРешенийБезНДС");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера + НСтр("ru = ' (без НДС)';
									|en = ' (VAT exclusive)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ТаблицаРешений.Очистить();
	
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	#КонецОбласти
	
	#Область ВтТаблицаРешений_СебестоимостьПредприятия
	
	Запрос = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийСНДС.ПостатейныеПостоянныеСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеСНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийСНДС.ПостатейныеПеременныеСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеСНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийБезНДС.ПостатейныеПостоянныеБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеБезНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийБезНДС.ПостатейныеПеременныеБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеБезНДС
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_СебестоимостьПредприятия
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийСНДС КАК ТаблицаРешенийСНДС
	|	ПО ТаблицаРешенийСНДС.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийБезНДС КАК ТаблицаРешенийБезНДС
	|	ПО ТаблицаРешенийБезНДС.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейные = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийСНДС.ПостатейныеПостоянныеСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеСНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейные = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийСНДС.ПостатейныеПеременныеСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеСНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеБезНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийБезНДС.ПостатейныеПостоянныеБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеБезНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеБезНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийБезНДС.ПостатейныеПеременныеБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеБезНДС
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийСНДС КАК ТаблицаРешенийСНДС
	|	ПО ТаблицаРешенийСНДС.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийБезНДС КАК ТаблицаРешенийБезНДС
	|	ПО ТаблицаРешенийБезНДС.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесСНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийСНДС.ПостатейныеПостоянныеСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеСНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесСНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийСНДС.ПостатейныеПеременныеСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеСНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесБезНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийБезНДС.ПостатейныеПостоянныеБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеБезНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесБезНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийБезНДС.ПостатейныеПеременныеБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеБезНДС
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийСНДС КАК ТаблицаРешенийСНДС
	|	ПО ТаблицаРешенийСНДС.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийБезНДС КАК ТаблицаРешенийБезНДС
	|	ПО ТаблицаРешенийБезНДС.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"УзлыСЛУ_ПостатейныеРасходыПредприятия, СвязиСЛУ_ПостатейныеРасходыПредприятия,
		|ТаблицаРешенийСНДС, ТаблицаРешенийБезНДС");
	
	#КонецОбласти
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//	ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр
//		
// Результатом работы данной процедуры будут временные таблицы:
// - "ВтТаблицаРешений_СебестоимостьОрганизаций"
//
Процедура РешитьСЛУПлатформой_ПостатейныеРасходыОрганизаций(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_ПостатейныеРасходыОрганизаций");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для постатейных расходов организаций';
								|en = 'Solution for the company itemized expenses'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	#Область Узлы
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                   КАК НомерУзла,
	// Постатейные расходы организаций (регламентированный учет)
	|	УзлыКорректировки.ПостатейныеПостоянныеРегл   КАК ПостатейныеПостоянныеРегл,
	|	УзлыКорректировки.ПостатейныеПеременныеРегл   КАК ПостатейныеПеременныеРегл,
	// Постатейные расходы организаций (управленческий учет)
	|	УзлыКорректировки.ПостатейныеПостоянныеУпр    КАК ПостатейныеПостоянныеУпр,
	|	УзлыКорректировки.ПостатейныеПеременныеУпр    КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	УзлыСЛУ_ПостатейныеРасходыОрганизаций КАК УзлыКорректировки
	|";
	
	#КонецОбласти
	
	// Связи должны соответствовать процедуре РешитьСЛУПлатформой_РезервыПредстоящихРасходов() #Область Связи
	#Область Связи

	ЗапросСвязи = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	Связи.НомерУзлаИсточник,
	|	Связи.НомерУзлаПриемник,
	|	Связи.ВесДугиРегл,
	|	Связи.ВесДугиУпр
	|ИЗ
	|	СвязиСЛУ_ПостатейныеРасходыОрганизаций КАК Связи
	|";
	
	#КонецОбласти
	
	#Область РешениеСЛУОбщаяЧасть
	
	// корректируем стоимости узлов с нулевым весом
	СтруктураПолейСЛУ = Новый Структура;
	СтруктураПолейСЛУ.Вставить("ВесДугиРегл", "ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл");
	СтруктураПолейСЛУ.Вставить("ВесДугиУпр", "ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СкорректироватьСтоимостьУзловСЛУИзВременныхТаблиц(
		ПараметрыРасчета,
		"УзлыСЛУ_ПостатейныеРасходыОрганизаций",
		"НомерУзла",
		"СвязиСЛУ_ПостатейныеРасходыОрганизаций",
		"НомерУзлаИсточник, НомерУзлаПриемник",
		СтруктураПолейСЛУ,
		ПояснениеДляЗамера);
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	#КонецОбласти
	
	#Область РешениеСЛУ_Регл
	
	// описание систем 
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПостоянныеРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПеременныеРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРегл";
	
	// решение
	
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	
	// загрузка решения во временную таблицу
	
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл",
		,
		"ТаблицаРешений_СебестоимостьОрганизацийРегл");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	ТаблицаРешений.Очистить();
	
	#КонецОбласти
	
	#Область РешениеСЛУ_Упр
	
	// сброс параметров предыдущего расчета
	
	РасчетСистемЛинейныхУравнений.ОписанияСистем.Очистить();
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПостоянныеУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиУпр";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПеременныеУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиУпр";
	
	// решение
	
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	
	// загрузка решения во временную таблицу
	
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр",
		,
		"ТаблицаРешений_СебестоимостьОрганизацийУпр");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	ТаблицаРешений.Очистить();
	
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	#КонецОбласти
	
	#Область ВтТаблицаРешений_СебестоимостьОрганизаций
	
	// Объединение решений во одну временную таблицу.
	Запрос = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПостоянныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПеременныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПостоянныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПеременныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_СебестоимостьОрганизаций
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизацийРегл КАК ТаблицаРешенийРегл
	|	ПО ТаблицаРешенийРегл.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизацийУпр КАК ТаблицаРешенийУпр
	|	ПО ТаблицаРешенийУпр.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПостоянныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПеременныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПостоянныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПеременныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизацийРегл КАК ТаблицаРешенийРегл
	|	ПО ТаблицаРешенийРегл.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизацийУпр КАК ТаблицаРешенийУпр
	|	ПО ТаблицаРешенийУпр.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПостоянныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПеременныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПостоянныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПеременныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизацийРегл КАК ТаблицаРешенийРегл
	|	ПО ТаблицаРешенийРегл.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизацийУпр КАК ТаблицаРешенийУпр
	|	ПО ТаблицаРешенийУпр.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ТаблицаРешений_СебестоимостьОрганизацийРегл, ТаблицаРешений_СебестоимостьОрганизацийУпр");
	
	#КонецОбласти
	
КонецПроцедуры

// Выполняет корректировку предстоящих расходов на сумму резервов для показателей:
//		ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл, 
//		ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр,
//		Временная разница (для суммы резерва в налоговом учете).
//
Процедура РешитьСЛУПлатформой_РезервыПредстоящихРасходов(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_РезервыПредстоящихРасходов");
	
	ПояснениеДляЗамера = НСтр("ru = 'Резервы предстоящих расходов';
								|en = 'Provisions and contingent liabilities'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДД.НомерУзла
	|ПОМЕСТИТЬ ЕстьРезервыПоУзлам
	|ИЗ
	|	ДетальныеРезервыПоУзлам КАК ДД
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	// Если таблица ДетальныеРезервыПоУзлам пустая, то нет смысла считать резервы
	КоличествоСтрокРезервыПоУзлам = 
			РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета.МенеджерВременныхТаблиц, "ЕстьРезервыПоУзлам");
			
	Если КоличествоСтрокРезервыПоУзлам = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	#Область Узлы_СУчетомРезервов
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                   КАК НомерУзла,
	// Постатейные расходы организаций (регламентированный учет)
	|	УзлыКорректировки.ПостатейныеПостоянныеРегл   КАК ПостатейныеПостоянныеРегл,
	|	УзлыКорректировки.ПостатейныеПеременныеРегл   КАК ПостатейныеПеременныеРегл,
	// Постатейные расходы организаций (управленческий учет)
	|	УзлыКорректировки.ПостатейныеПостоянныеУпр    КАК ПостатейныеПостоянныеУпр,
	|	УзлыКорректировки.ПостатейныеПеременныеУпр    КАК ПостатейныеПеременныеУпр,
	// Расходы организаций (налоговый учет)
	|	УзлыКорректировки.ПостояннаяРазница           КАК ПостояннаяРазница,
	// Расходы организаций (налоговый учет)
	|	УзлыКорректировки.РасходыНУ                   КАК РасходыНУ
	|ИЗ
	|	УзлыСЛУ_РезервыПредстоящихРасходов КАК УзлыКорректировки
	|";
	
	#КонецОбласти
	
	// Связи должны соответствовать процедуре РешитьСЛУПлатформой_ПостатейныеРасходыОрганизаций() #Область Связи
	#Область Связи
	                                          
	ЗапросСвязи = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	Связи.НомерУзлаИсточник,
	|	Связи.НомерУзлаПриемник,
	|	Связи.ВесДугиРегл,
	|	Связи.ВесДугиУпр
	|ИЗ
	|	СвязиСЛУ_РезервыПредстоящихРасходов КАК Связи
	|";
	ЗапросСвязи.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязи.Текст);
	
	#КонецОбласти
	
	#Область РешениеСЛУ
	
	// корректируем стоимости узлов с нулевым весом
	СтруктураПолейСЛУ = Новый Структура;
	СтруктураПолейСЛУ.Вставить("ВесДугиРегл", "ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл, ПостояннаяРазница");
	СтруктураПолейСЛУ.Вставить("ВесДугиУпр", "ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СкорректироватьСтоимостьУзловСЛУИзВременныхТаблиц(
		ПараметрыРасчета,
		"УзлыСЛУ_РезервыПредстоящихРасходов",
		"НомерУзла",
		"СвязиСЛУ_РезервыПредстоящихРасходов",
		"НомерУзлаИсточник, НомерУзлаПриемник",
		СтруктураПолейСЛУ,
		ПояснениеДляЗамера);
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// набор описания систем
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПостоянныеРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПеременныеРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостояннаяРазница";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРегл";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	
	// Загрузка решения во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл, ПостояннаяРазница",,"ТаблицаРешенийРегл");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера + НСтр("ru = ' (регл. показатели)';
									|en = ' (local indicators)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ТаблицаРешений.Очистить();
	
	// сброс для следующего набора описаний
	РасчетСистемЛинейныхУравнений.ОписанияСистем.Очистить();
	
	// набор описания систем
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПостоянныеУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиУпр";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПеременныеУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиУпр";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр",,"ТаблицаРешенийУпр");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера + НСтр("ru = ' (упр. показатели)';
									|en = ' (manag. indicators)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ТаблицаРешений.Очистить();

	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	#КонецОбласти

	#Область ВтТаблицаРешений_СебестоимостьОрганизаций
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВтТаблицаРешений_СебестоимостьОрганизаций");
	
	Запрос = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПостоянныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПеременныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПостоянныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПеременныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_СебестоимостьОрганизаций
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийРегл КАК ТаблицаРешенийРегл
	|	ПО ТаблицаРешенийРегл.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийУпр КАК ТаблицаРешенийУпр
	|	ПО ТаблицаРешенийУпр.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПостоянныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПеременныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПостоянныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПеременныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийРегл КАК ТаблицаРешенийРегл
	|	ПО ТаблицаРешенийРегл.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийУпр КАК ТаблицаРешенийУпр
	|	ПО ТаблицаРешенийУпр.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПостоянныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПеременныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПостоянныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПеременныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийРегл КАК ТаблицаРешенийРегл
	|	ПО ТаблицаРешенийРегл.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийУпр КАК ТаблицаРешенийУпр
	|	ПО ТаблицаРешенийУпр.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРешенийРегл;
	|УНИЧТОЖИТЬ ТаблицаРешенийУпр;
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	ТаблицаРешений.Очистить();
	
	#КонецОбласти
	
	//++ Локализация
	
	#Область Связи_НалоговыйУчет
	                                          
	ЗапросНалоговыйУчет = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросНалоговыйУчет, ПараметрыРасчета);
	
	ЗапросНалоговыйУчет.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаСвязей.НомерУзлаИсточник,
	|	ТаблицаСвязей.НомерУзлаПриемник,
	|	ТаблицаСвязей.ВесДугиНУ
	|ИЗ
	|	СвязиСЛУ_РезервыПредстоящихРасходов_НУ КАК ТаблицаСвязей
	|";
	
	#КонецОбласти
	
	#Область РешениеСЛУ_НалоговыйУчет
	
	// корректируем стоимости узлов с нулевым весом
	СтруктураПолейСЛУ = Новый Структура;
	СтруктураПолейСЛУ.Вставить("ВесДугиНУ", "РасходыНУ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СкорректироватьСтоимостьУзловСЛУИзВременныхТаблиц(
		ПараметрыРасчета,
		"УзлыСЛУ_РезервыПредстоящихРасходов",
		"НомерУзла",
		"СвязиСЛУ_РезервыПредстоящихРасходов_НУ",
		"НомерУзлаИсточник, НомерУзлаПриемник",
		СтруктураПолейСЛУ,
		ПояснениеДляЗамера);
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросНалоговыйУчет,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																												|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "РасходыНУ";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиНУ";
	
	// решение
	ТаблицаРешенийНУ = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	#КонецОбласти
	
	#Область ВтТаблицаРешений_НалоговыйУчет
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"РасходыНУ",
		,
		"ТаблицаРешенийНУ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешенийНУ,
		ПояснениеДляЗамера);
	
	Запрос = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	// Временная разница рассчитывается как разница между суммами регламентированного и налогового учета за минусом постойнной разницы:
	// ВР = БУ - НУ - ПР
	// Стоимость регл учета берется из временной таблицу ВТСтоимостьПартийТоваров в части стоимости материалов, доп расходов и трудозатрат.
	// В части постатейных затрат стоимость береся из временной таблицы ВтТаблицаРешений_СебестоимостьОрганизаций.
	// Постатейные расходы уже рассчитаны в этапе РешитьСЛУПлатформой_ПостатейныеРасходыОрганизаций.
	// Сумма постоянной разницы берется из временной таблицы ВтТаблицаРешений_НалоговыйУчет. 
	// Постоянная разница уже рассчитана в этапе РешитьСЛУПлатформой_НалоговыйУчет
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ЕСТЬNULL(ТаблицаРешенийНУ.РасходыНУ, 0) КАК СуммаНУ,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СебестоимостьОрганизаций.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
	|		+ ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл + СтоимостьПартийТоваров.ДопРасходыРегл + СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
	|		- ЕСТЬNULL(ТаблицаРешенийНУ.РасходыНУ, 0) - ЕСТЬNULL(СебестоимостьОрганизаций.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_НалоговыйУчетСРезервами
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_НалоговыйУчет КАК ТаблицаРешений
	|		ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийНУ КАК ТаблицаРешенийНУ
	|		ПО ТаблицаРешенийНУ.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК СебестоимостьОрганизаций
	|		ПО СебестоимостьОрганизаций.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
	|		ПО СтоимостьПартийТоваров.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеНУ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийНУ.РасходыНУ, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СуммаНУ,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СебестоимостьОрганизаций.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеНУ = 0 И УзлыКорректировки.ВесПостатейныеРегл = 0
	|			ТОГДА 0
	// Если для узла нет резевов или при расчете СЛУ получилась отрицательная сумма расходов в узле,
	// то для такого узла сумму временной разницы рассчитываем по полной формуле ВР = БУ - НУ - ПР.
	|		КОГДА Резервы.РезервНУ ЕСТЬ NULL
	|		 ИЛИ ЕСТЬNULL(Резервы.РасходНУ, 0) <= 0
	|			ТОГДА ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
	|		- ЕСТЬNULL(ТаблицаРешенийНУ.РасходыНУ, 0) - ЕСТЬNULL(СебестоимостьОрганизаций.ПостояннаяРазница, 0)
	// Сумма временной разницы определяется по формуле: БУ = НУ + ПР + ВР
	//	ВР = БУ - НУ - ПР 
	// Если расходы в налоговом учете распределяются на производство, а в бухгатерском учете - не на производство, то
	// стоимость таких расходов в НУ определяется только постоянной и временной разницами, т.к. в БУ при распределении
	// на производство стоимость таких расходов равны 0. 
	|		КОГДА НЕ УзлыКорректировки.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат))
	|			И УзлыКорректировки.СтатьяРасходов.ВариантРаспределенияРасходовНУ В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат))
	|		ТОГДА - ЕСТЬNULL(ТаблицаРешенийНУ.РасходыНУ, 0) - ЕСТЬNULL(СебестоимостьОрганизаций.ПостояннаяРазница, 0)
	// Если расходы в бухгалтерском учете распределяются на производство, а в налоговом учете - не на производство, то
	// стоимость таких расходов в НУ равна 0.
	|		КОГДА УзлыКорректировки.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат))
	|			И НЕ УзлыКорректировки.СтатьяРасходов.ВариантРаспределенияРасходовНУ В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат))
	|		ТОГДА ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
	|			- ЕСТЬNULL(СебестоимостьОрганизаций.ПостояннаяРазница, 0)
	|		ИНАЧЕ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
	|		- ЕСТЬNULL(ТаблицаРешенийНУ.РасходыНУ, 0) - ЕСТЬNULL(СебестоимостьОрганизаций.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_НалоговыйУчет КАК ТаблицаРешений
	|		ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийНУ КАК ТаблицаРешенийНУ
	|		ПО ТаблицаРешенийНУ.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК СебестоимостьОрганизаций
	|		ПО СебестоимостьОрганизаций.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РезервыПоУзлам КАК Резервы
	|		ПО Резервы.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Сумма регламентированного учета дополнительных расходов по товарам складывается из суммы, рассчитанной на этапе РешитьСЛУПлатформой_ДополнительныеРасходы.
	// Такая сумма хрантся в таблице СтоимостьДополнительныхРасходов.
	// И стоимости постатейных расходов, рассчитанных на этапе РешитьСЛУПлатформой_РезервыПредстоящихРасходов.
	// Стоимость рассчитанных постатейных расходов хранится в таблице ВтТаблицаРешений_СебестоимостьОрганизаций.
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесНУ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийНУ.РасходыНУ, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СуммаНУ,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СебестоимостьОрганизаций.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесНУ = 0 И УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьДополнительныхРасходов.СтоимостьРегл, 0)
	|		+ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
	|		- ЕСТЬNULL(ТаблицаРешенийНУ.РасходыНУ, 0) - ЕСТЬNULL(СебестоимостьОрганизаций.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_НалоговыйУчет КАК ТаблицаРешений
	|		ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешенийНУ КАК ТаблицаРешенийНУ
	|		ПО ТаблицаРешенийНУ.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК СебестоимостьОрганизаций
	|		ПО СебестоимостьОрганизаций.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьДополнительныхРасходов КАК СтоимостьДополнительныхРасходов
	|		ПО СтоимостьДополнительныхРасходов.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	УзлыКорректировки.СуммаНУ КАК СуммаНУ,
	|	УзлыКорректировки.ПостояннаяРазница КАК ПостояннаяРазница,
	|	УзлыКорректировки.ВременнаяРазница КАК ВременнаяРазница
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_НалоговыйУчет
	|ИЗ
	|	ВтТаблицаРешений_НалоговыйУчетСРезервами КАК УзлыКорректировки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРешенийНУ;
	|УНИЧТОЖИТЬ ВтТаблицаРешений_НалоговыйУчетСРезервами;
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	ТаблицаРешенийНУ.Очистить();
	
	#КонецОбласти
	
	//-- Локализация
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, 
		"УзлыСЛУ_РезервыПредстоящихРасходов, СвязиСЛУ_РезервыПредстоящихРасходов");
	
КонецПроцедуры

//++ Локализация

// Выполняет расчет систем уравнений для показателей:
//	ПостояннаяРазница, ВременнаяРазница
//		
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаРешений_НалоговыйУчет"
//
Процедура РешитьСЛУ_НалоговыйУчет_ПостояннаяРазница(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	ПодготовкаДанныхДляРешенияСЛУ_НалоговыйУчет_ПостатейныеРасходы(ПараметрыРасчета);
	
	#Область УзлыНУ
	
	ЗапросУзлыНУ = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросУзлыНУ, ПараметрыРасчета);
	
	ЗапросУзлыНУ.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(УзлыКорректировки.СуммаНУ КАК ЧИСЛО(28, 10)) КАК СуммаНУ
	|ИЗ
	|	ВтУзлыКорректировкиНУ КАК УзлыКорректировки
	|";
	ЗапросУзлыНУ.Текст = 
		РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросУзлыНУ.Текст);
	
	#КонецОбласти
	
	#Область СвязиНУ
	                                          
	ЗапросСвязиВременнаяРазница = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросСвязиВременнаяРазница, ПараметрыРасчета);
	
	ЗапросСвязиВременнаяРазница.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(ПеремещенияСписания.ВесДугиНУ КАК ЧИСЛО(28,10)) КАК ВесДугиНУ
	|ИЗ
	|	ВтТаблицаСвязейНУ КАК ПеремещенияСписания
	|";
	ЗапросСвязиВременнаяРазница.Текст = 
		РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязиВременнаяРазница.Текст);
	
	#КонецОбласти
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_НалоговыйУчет");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для налогового учета';
								|en = 'Solution for taxation accounting'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	// корректируем стоимости узлов с нулевым весом
	СтруктураПолейСЛУ = Новый Структура;
	СтруктураПолейСЛУ.Вставить("ВесДугиНУ", "СуммаНУ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СкорректироватьСтоимостьУзловСЛУИзВременныхТаблиц(
		ПараметрыРасчета,
		"ВтУзлыКорректировкиНУ",
		"НомерУзла",
		"ВтТаблицаСвязейНУ",
		"НомерУзлаИсточник, НомерУзлаПриемник",
		СтруктураПолейСЛУ,
		ПояснениеДляЗамера);
	
	// источники данных
	МатрицаУзловНУ  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(
		ПараметрыРасчета, ЗапросУзлыНУ,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																					|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязейВременнаяРазница = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(
		ПараметрыРасчета, ЗапросСвязиВременнаяРазница,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																									|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РешитьСЛУПлатформой_НалоговыйУчет(ПараметрыРасчета, ПояснениеДляЗамера, МатрицаУзловНУ, МатрицаСвязейВременнаяРазница);
	
	ПодготовкаДанныхДляРешенияСЛУПостояннаяРазница_Этап1(ПараметрыРасчета);
	
	#Область УзлыПостояннаяРазница_Шаг1
	
	ЗапросУзлыПостояннаяРазница = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросУзлыПостояннаяРазница, ПараметрыРасчета);
	
	ЗапросУзлыПостояннаяРазница.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла         КАК НомерУзла,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ПостояннаяРазница КАК ЧИСЛО(28, 10)) КАК ПостояннаяРазница
	|ИЗ
	|	ВтУзлыКорректировкиПостояннаяРазница КАК УзлыКорректировки
	|";
	
	#КонецОбласти
	
	#Область СвязиПостояннаяРазница
	                                          
	ЗапросСвязиПостояннаяРазница = Новый Запрос();
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(ЗапросСвязиПостояннаяРазница, ПараметрыРасчета);
	
	ЗапросСвязиПостояннаяРазница.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(ПеремещенияСписания.ВесДугиПостояннаяРазница КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
	|ИЗ
	|	ВтТаблицаСвязейПостояннаяРазница КАК ПеремещенияСписания
	|";
	ЗапросСвязиПостояннаяРазница.Текст = 
		РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязиПостояннаяРазница.Текст);
	#КонецОбласти
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_ПостоянныеРазницы_Этап1");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для постоянных разниц (этап 1)';
								|en = 'Solution for permanent differences (stage 1)'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	// корректируем стоимости узлов с нулевым весом
	СтруктураПолейСЛУ = Новый Структура;
	СтруктураПолейСЛУ.Вставить("ВесДугиПостояннаяРазница", "ПостояннаяРазница");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СкорректироватьСтоимостьУзловСЛУИзВременныхТаблиц(
		ПараметрыРасчета,
		"ВтУзлыКорректировкиПостояннаяРазница",
		"НомерУзла",
		"ВтТаблицаСвязейПостояннаяРазница",
		"НомерУзлаИсточник, НомерУзлаПриемник",
		СтруктураПолейСЛУ,
		ПояснениеДляЗамера);
	
	// источники данных
	МатрицаУзловПостояннаяРазница  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(
		ПараметрыРасчета, ЗапросУзлыПостояннаяРазница,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																									|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязейПостояннаяРазница = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(
		ПараметрыРасчета, ЗапросСвязиПостояннаяРазница,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																									|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РешитьСЛУПлатформой_ПостояннаяРазница(ПараметрыРасчета, ПояснениеДляЗамера, МатрицаУзловПостояннаяРазница, МатрицаСвязейПостояннаяРазница);
	
	// Пересчитаем полученный результат НУ в эквивалент временной разницы
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаРешенийНУ.НомерУзла	КАК НомерУзла,
		|	ВЫРАЗИТЬ(
		|		ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
		|		+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
		|		+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыРегл, 0)
		|		+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеРегл, 0)
		|		+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеРегл, 0)
		|		+ ЕСТЬNULL(СтоимостьДопРасходов.СтоимостьРегл, 0)
		|		
		|		- ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0)
		|		- ТаблицаРешенийНУ.СуммаНУ
		|	КАК ЧИСЛО (28,10))	КАК ВременнаяРазница
		|ПОМЕСТИТЬ ТаблицаРешений_ВременнаяРазница
		|ИЗ
		|	ТаблицаРешений_СуммаНУ КАК ТаблицаРешенийНУ
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
		|		ПО СтоимостьПартийТоваров.НомерУзла = ТаблицаРешенийНУ.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК ТаблицаРешений
		|		ПО ТаблицаРешений.НомерУзла = ТаблицаРешенийНУ.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьДополнительныхРасходов КАК СтоимостьДопРасходов
		|		ПО СтоимостьДопРасходов.НомерУзла = ТаблицаРешенийНУ.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ПостояннаяРазница КАК ТаблицаРешенийПостояннаяРазница
		|		ПО ТаблицаРешенийПостояннаяРазница.НомерУзла = ТаблицаРешенийНУ.НомерУзла";
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	#Область ВтТаблицаРешений_НалоговыйУчет
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийНУ.СуммаНУ, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СуммаНУ,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийВременнаяРазница.ВременнаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_НалоговыйУчет
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СуммаНУ КАК ТаблицаРешенийНУ
	|		ПО ТаблицаРешенийНУ.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ПостояннаяРазница КАК ТаблицаРешенийПостояннаяРазница
	|		ПО ТаблицаРешенийПостояннаяРазница.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ВременнаяРазница КАК ТаблицаРешенийВременнаяРазница
	|		ПО ТаблицаРешенийВременнаяРазница.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеНУ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийНУ.СуммаНУ, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СуммаНУ,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеРегл = 0 И УзлыКорректировки.ВесПостатейныеНУ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийВременнаяРазница.ВременнаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СуммаНУ КАК ТаблицаРешенийНУ
	|		ПО ТаблицаРешенийНУ.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ПостояннаяРазница КАК ТаблицаРешенийПостояннаяРазница
	|		ПО ТаблицаРешенийПостояннаяРазница.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ВременнаяРазница КАК ТаблицаРешенийВременнаяРазница
	|		ПО ТаблицаРешенийВременнаяРазница.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесНУ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийНУ.СуммаНУ, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СуммаНУ,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0 и УзлыКорректировки.ВесНУ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийВременнаяРазница.ВременнаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СуммаНУ КАК ТаблицаРешенийНУ
	|		ПО ТаблицаРешенийНУ.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ПостояннаяРазница КАК ТаблицаРешенийПостояннаяРазница
	|		ПО ТаблицаРешенийПостояннаяРазница.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ВременнаяРазница КАК ТаблицаРешенийВременнаяРазница
	|		ПО ТаблицаРешенийВременнаяРазница.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, 
		"ТаблицаРешений_ПостояннаяРазница, ТаблицаРешений_ВременнаяРазница, ТаблицаРешений_СуммаНУ");
		
	#КонецОбласти
		
КонецПроцедуры

Процедура РешитьСЛУПлатформой_ПостояннаяРазница(ПараметрыРасчета, ПояснениеДляЗамера, МатрицаУзлов, МатрицаСвязей)
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостояннаяРазница";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиПостояннаяРазница";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостояннаяРазница",
		,
		"ТаблицаРешений_ПостояннаяРазница");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
КонецПроцедуры

Процедура РешитьСЛУПлатформой_НалоговыйУчет(ПараметрыРасчета, ПояснениеДляЗамера, МатрицаУзлов, МатрицаСвязей)
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СуммаНУ";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиНУ";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"СуммаНУ",
		,
		"ТаблицаРешений_СуммаНУ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
КонецПроцедуры

//-- Локализация

//-- НЕ УТ

Процедура СохранитьСЛУ(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "СохранитьСЛУ", "");
		
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(Т.НомерУзла), -1) + 1 КАК НомерУзла
	|ИЗ
	|	ВтУзлыКорректировкиСебестоимости КАК Т";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ПервыйНомерУзла = Выборка.НомерУзла;
	
	Запрос.УстановитьПараметр("ПервыйНомерУзла", ПервыйНомерУзла);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла + &ПервыйНомерУзла 	КАК НомерУзла,
	|	УзлыКорректировки.Организация                	КАК Организация,
	|	УзлыКорректировки.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
	|	УзлыКорректировки.РазделУчета                	КАК РазделУчета,
	|	УзлыКорректировки.ВидЗапасов                 	КАК ВидЗапасов,
	|	УзлыКорректировки.Партия					 	КАК Партия,
	|	УзлыКорректировки.АналитикаУчетаПартий		 	КАК АналитикаУчетаПартий,
	|	УзлыКорректировки.АналитикаФинансовогоУчета	 	КАК АналитикаФинансовогоУчета,
	|	УзлыКорректировки.ВидДеятельностиНДС		 	КАК ВидДеятельностиНДС,
	|
	|	УзлыКорректировки.Количество          		 	КАК Вес
	|ПОМЕСТИТЬ ВТТекущиеУзлы
	|ИЗ
	|	ВТУзлыКорректировки КАК УзлыКорректировки
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник + &ПервыйНомерУзла КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник + &ПервыйНомерУзла КАК НомерУзлаПриемник,
	|	ПеремещенияСписания.ВесДуги                              КАК Вес
	|ПОМЕСТИТЬ ВТТекущиеСвязи
	|ИЗ
	|	ВТПеремещенияСписания КАК ПеремещенияСписания
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТУзлыКорректировки КАК УзлыПриемник
	|		ПО УзлыПриемник.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|ГДЕ
	|	НЕ ПеремещенияСписания.РеализацияВДругуюОрганизацию
	|	И НЕ ЕСТЬNULL(УзлыПриемник.РазделУчета, НЕОПРЕДЕЛЕНО) В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиКОформлениюСписания))
	|	И НЕ (ЕСТЬNULL(УзлыПриемник.РазделУчета, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		И ЕСТЬNULL(УзлыПриемник.ВидЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца))
	|";
	
	Запрос.Выполнить();
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ОбъединитьВременныеТаблицы(
		ПараметрыРасчета,
		"ВТТекущиеУзлы",
		"ВтУзлыКорректировкиСебестоимости",
		"НомерУзла, Организация, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов,
			|Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС, Вес",
		"",
		"НомерУзла",
		Истина);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ОбъединитьВременныеТаблицы(
		ПараметрыРасчета,
		"ВТТекущиеСвязи",
		"ВтСвязиУзловКорректировкиСебестоимости",
		"НомерУзлаИсточник, НомерУзлаПриемник, Вес",
		"",
		"НомерУзлаИсточник",
		Истина);
	
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
КонецПроцедуры
//
// Сохраняет временные таблицы, используемые для решения СЛУ, в файлы на диск.
//
Процедура СохранитьСЛУВФайл(ПараметрыРасчета, РасчетСтоимостиРегл = Ложь)
	
	ИмяКаталога = СокрЛП(ПараметрыРасчета.ВыгрузкаДанныхРасчета.КаталогДляСохраненияДанныхСЛУ);
	
	Если НЕ ЗначениеЗаполнено(ИмяКаталога) Тогда
		Возврат; // выгрузка СЛУ не требуется
	КонецЕсли;
	
	Попытка
		ТекстОшибки = "";
		СоздатьКаталог(ИмяКаталога);
	Исключение
		ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	ИмяКаталога = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяКаталога);
	Каталог     = Новый Файл(ИмяКаталога);
	
	Если НЕ Каталог.Существует() ИЛИ НЕ Каталог.ЭтоКаталог() Тогда
		
		ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не найден каталог для сохранения данных СЛУ: ""%1""
				|%2';
				|en = 'Directory for saving LES data is not found: ""%1""
				|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
			РасчетСебестоимостиПротоколРасчета.ПредставлениеЗначения(ИмяКаталога),
			ТекстОшибки);
		
		РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
			ТекстДляПротокола);
		
		Возврат; // каталог для выгрузки не найден
		
	КонецЕсли;
	
	ФорматВыгрузки = СокрЛП(НРег(ПараметрыРасчета.ВыгрузкаДанныхРасчета.ФорматСохраненияДанныхСЛУ));
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Если ФорматВыгрузки = "mxl" Тогда
		
		// ВтУзлыКорректировки и ВтТаблицаРешений выгружаем в один файл "...Узлы".
		//	- одноименным колонкам этих таблиц присвоим префиксы "Узел" и "Решение" соответственно
		// ВтПеремещенияСписания выгружаем в файл "...Дуги".
		
		ШаблонИмениФайла =
			Формат(ТекущаяДатаСеанса() - Дата(1,1,1), "ЧЦ=12; ЧВН=; ЧГ=")      // дата-время выгрузки
			+ "_" + ?(ПараметрыРасчета.ПредварительныйРасчет, "Предварительный", "Фактический") // какой вид расчета
			+ "_" + ?(РасчетСтоимостиРегл, "Регл", "Упр")					   // какую себестоимость рассчитываем
			+ "_%1.mxl";													   // какую временную таблицу выгружаем
		
		// Получим данные из временных таблиц
		Запрос.Текст =
		"ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла					 	КАК НомерУзла,
		|	УзлыКорректировки.Организация                	КАК Организация,
		|	УзлыКорректировки.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
		|	УзлыКорректировки.РазделУчета                	КАК РазделУчета,
		|	УзлыКорректировки.ВидЗапасов                 	КАК ВидЗапасов,
		|	УзлыКорректировки.Партия					 	КАК Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий		 	КАК АналитикаУчетаПартий,
		|	УзлыКорректировки.АналитикаФинансовогоУчета	 	КАК АналитикаФинансовогоУчета,
		|	УзлыКорректировки.ВидДеятельностиНДС		 	КАК ВидДеятельностиНДС,
		|
		|	УзлыКорректировки.Количество          		 	КАК Количество,
		|	УзлыКорректировки.Стоимость                     КАК УзелСтоимость,
		|	УзлыКорректировки.СтоимостьБезНДС               КАК УзелСтоимостьБезНДС,
		|	УзлыКорректировки.Трудозатраты                  КАК ТрудозатратыГраф_1,
		|	УзлыКорректировки.СтоимостьЗабалансовая 		КАК УзелСтоимостьЗабалансовая,
		|
		|	СебестоимостьПредприятия.Стоимость              КАК РешениеСтоимость,
		|	СебестоимостьПредприятия.СтоимостьБезНДС        КАК РешениеСтоимостьБезНДС,
		|	СебестоимостьПредприятия.Трудозатраты           КАК РешениеТрудозатраты,
		|	СебестоимостьПредприятия.СтоимостьЗабалансовая 	КАК РешениеСтоимостьЗабалансовая
		|ИЗ
		|	ВТУзлыКорректировки КАК УзлыКорректировки
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьПредприятия КАК СебестоимостьПредприятия
		|		ПО СебестоимостьПредприятия.НомерУзла = УзлыКорректировки.НомерУзла
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерУзла
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник 		     КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник 		     КАК НомерУзлаПриемник,
		|	ПеремещенияСписания.РеализацияВДругуюОрганизацию КАК РеализацияВДругуюОрганизацию,
		|	ПеремещенияСписания.ВесДуги                      КАК ВесДуги,
		|	ПеремещенияСписания.НеПеремещатьЗабалансовуюСтоимость            КАК НеПеремещатьЗабалансовуюСтоимость,
		|	ПеремещенияСписания.НеПеремещатьБалансовуюСтоимость		     КАК НеПеремещатьБалансовуюСтоимость
		|ИЗ
		|	ВТПеремещенияСписания КАК ПеремещенияСписания
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерУзлаПриемник,
		|	НомерУзлаИсточник
		|";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		// Сохраним первый файл
		ТекстДляПротокола = ОбщегоНазначенияУТ.СохранитьТаблицуЗначенийВФайл(
			РезультатЗапроса[0].Выгрузить(),
			ИмяКаталога + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонИмениФайла, "Узлы"));
		
		Если ЗначениеЗаполнено(ТекстДляПротокола) Тогда  // ошибка записи файла
			
			РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
				ПараметрыРасчета,
				Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
				ТекстДляПротокола);
			
		КонецЕсли;
		
		// Сохраним второй файл
		ТекстДляПротокола = ОбщегоНазначенияУТ.СохранитьТаблицуЗначенийВФайл(
			РезультатЗапроса[1].Выгрузить(),
			ИмяКаталога + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонИмениФайла, "Дуги"));
		
		Если ЗначениеЗаполнено(ТекстДляПротокола) Тогда
			
			РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
				ПараметрыРасчета,
				Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
				ТекстДляПротокола);
			
		КонецЕсли;
		
	ИначеЕсли ФорматВыгрузки = "csv" Тогда
		// ВтУзлыКорректировки - свободные члены
		// ВтПеремещенияСписания - коэффициенты; НомерУзлаИсточник - № уравнения, НомерУзлаПриемник - № элемента
		//
		// СЛУ из n неизвестных:
		// А(1,1)*Х1 + А(1,2)*Х2 + ... А(1,n)*Xn = B1
		// А(2,1)*Х1 + А(2,2)*Х2 + ... А(2,n)*Xn = B2
		// ...
		// А(n,1)*Х1 + А(n,2)*Х2 + ... А(n,n)*Xn = Bn
		//
		// Формат строки файла CSV:
		// <Свободный коэффициент В>[,(<Номер неизвестного X>, <Коэффициент А>)]
		// Для каждого уравнения обязательно есть строка, при этом порядковый номер строки = номеру уравнения
		
		ФайлСЛУ = Новый ТекстовыйДокумент;
		
		ШаблонИмениФайла =
			Формат(ТекущаяДатаСеанса() - Дата(1,1,1), "ЧЦ=12; ЧВН=; ЧГ=")      // дата-время выгрузки
			+ "_" + ?(ПараметрыРасчета.ПредварительныйРасчет, "Предв", "Факт") // какой вид расчета
			+ "_" + ?(РасчетСтоимостиРегл, "Регл", "Упр")					   // какую себестоимость рассчитываем
			+ "_СЛУ.csv";													   // какую временную таблицу выгружаем
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НомераУравнения.НомерУзла КАК НомерУравнения,
		|	ЕСТЬNULL(Коэффициенты.НомерУзлаПриемник, 0) КАК НомерНеизвестного,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(Коэффициенты.ВесДуги, 0) КАК ЧИСЛО(28,10)) КАК КоэффициентНеизвестного,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА НомераУравнения.Количество = 0
		|				ТОГДА 0
		|			КОГДА ЕСТЬNULL(Коэффициенты.НеПеремещатьБалансовуюСтоимость, ЛОЖЬ)
		|				ТОГДА 0
		|			ИНАЧЕ НомераУравнения.Стоимость
		|		КОНЕЦ КАК ЧИСЛО(28,10)) КАК СвободныйКоэффициент
		|ИЗ
		|	ВтУзлыКорректировки КАК НомераУравнения
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтПеремещенияСписания КАК Коэффициенты
		|		ПО НомераУравнения.НомерУзла = Коэффициенты.НомерУзлаИсточник
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерУравнения,
		|	НомерНеизвестного
		|ИТОГИ
		|	МИНИМУМ(СвободныйКоэффициент)
		|ПО
		|	НомерУравнения";
		
		Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
		
		ВыборкаУравнений = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаУравнений.Следующий() Цикл
			
			СтрокаФайла = СокрЛП(Формат(ВыборкаУравнений.СвободныйКоэффициент, "ЧРД=.; ЧН=0; ЧГ=0"));
			
			ВыборкаНеизвестных = ВыборкаУравнений.Выбрать();
			
			Пока ВыборкаНеизвестных.Следующий() Цикл
				
				Если ВыборкаНеизвестных.НомерНеизвестного = NULL Тогда
					Прервать; // в этом уравнении нет ненулевых коэффициентов
				КонецЕсли;
				
				// <Свободный коэффициент В>[,(<Номер неизвестного X>, <Коэффициент А>)]
				СтрокаФайла = СтрокаФайла
					+ ",("
					+ СокрЛП(Формат(ВыборкаНеизвестных.НомерНеизвестного, "ЧДЦ=; ЧН=0; ЧГ=0"))
					+ ","
					+ СокрЛП(Формат(ВыборкаНеизвестных.КоэффициентНеизвестного, "ЧРД=.; ЧН=0; ЧГ=0"))
					+ ")";
				
			КонецЦикла;
			
			ФайлСЛУ.ДобавитьСтроку(СтрокаФайла);
			
		КонецЦикла;
		
		Попытка
			ФайлСЛУ.Записать(ИмяКаталога + ШаблонИмениФайла);
		Исключение
			
			ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось записать файл ""%1""
					|%2';
					|en = 'Cannot save the ""%1"" file
					|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
				ИмяКаталога + ШаблонИмениФайла,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
				ПараметрыРасчета,
				Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
				ТекстДляПротокола);
			
		КонецПопытки;
		
	Иначе
		
		ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Неверный формат выгрузки СЛУ: %1';
				|en = 'Incorrect LES export format: %1'", ОбщегоНазначения.КодОсновногоЯзыка()),
			ФорматВыгрузки);
		
		РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
			ТекстДляПротокола);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Формирование таблицы ВтСтоимостьПартийТоваров

#Область ПроцедурыЭтапов_ЗарегистрироватьСтоимость

Процедура ОбновитьСтоимостьПартийТоваров_МатериальныеИТрудозатраты(ПараметрыРасчета)

	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ОбновитьСтоимостьПартийТоваров_МатериальныеИТрудозатраты");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО                                 КАК ДокументДвижения,
		|	&НачалоПериода                               КАК Период,
		|	СтоимостьПартийТоваров.НомерУзла                  КАК НомерУзла,
		// Измерения
		|	СтоимостьПартийТоваров.Организация                КАК Организация,
		|	СтоимостьПартийТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	СтоимостьПартийТоваров.ВидЗапасов                 КАК ВидЗапасов,
		|	СтоимостьПартийТоваров.РазделУчета                КАК РазделУчета,
		|	СтоимостьПартийТоваров.Партия                     КАК Партия,
		|	СтоимостьПартийТоваров.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
		|	СтоимостьПартийТоваров.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
		|	СтоимостьПартийТоваров.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
		// Ресурсы
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.Стоимость, 0) КАК ЧИСЛО(28,10))                 КАК Стоимость,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.СтоимостьБезНДС, 0) КАК ЧИСЛО(28,10))           КАК СтоимостьБезНДС,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.СтоимостьЗабалансовая, 0) КАК ЧИСЛО(28,10))     КАК СтоимостьЗабалансовая,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьДопРасходы,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьДопРасходыБезНДС,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.Трудозатраты, 0) КАК ЧИСЛО(28,10))              КАК Трудозатраты,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеСНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеБезНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеСНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеБезНДС,
		|
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.СтоимостьРегл, 0) КАК ЧИСЛО(28,10))             КАК СтоимостьРегл,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.СтоимостьЗабалансоваяРегл, 0) КАК ЧИСЛО(28,10)) КАК СтоимостьЗабалансоваяРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ДопРасходыРегл,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.ТрудозатратыРегл, 0) КАК ЧИСЛО(28,10))          КАК ТрудозатратыРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеРегл,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.СтоимостьРегл, 0) КАК ЧИСЛО(28,10))             КАК СтоимостьНУ,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостояннаяРазница,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ВременнаяРазница,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьНДД,
		|	СтоимостьПартийТоваров.РезервПодОбесценениеРегл                                            КАК РезервПодОбесценениеРегл,
		|
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.СтоимостьУпр, 0) КАК ЧИСЛО(28,10))              КАК СтоимостьУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ДопРасходыУпр,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.ТрудозатратыУпр, 0) КАК ЧИСЛО(28,10))           КАК ТрудозатратыУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеУпр,
		|	СтоимостьПартийТоваров.РезервПодОбесценениеУпр                                             КАК РезервПодОбесценениеУпр
		|
		|ПОМЕСТИТЬ СтоимостьПартийТоваровПредварительная
		|ИЗ
		|	ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьПредприятия КАК СебестоимостьПредприятия
		|		ПО СебестоимостьПредприятия.НомерУзла = СтоимостьПартийТоваров.НомерУзла
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК СебестоимостьОрганизаций
		|		ПО СебестоимостьОрганизаций.НомерУзла = СтоимостьПартийТоваров.НомерУзла
		|;
		|/////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	*
		|ПОМЕСТИТЬ ВТСтоимостьПартийТоваров
		|ИЗ
		|	СтоимостьПартийТоваровПредварительная КАК СтоимостьПартийТоваров
		|;
		|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, 
		"СтоимостьПартийТоваровПредварительная");
		
	// Добавим в протокол информацию об узлах с нулевыми весами и ненулевыми суммами
	Если ПараметрыРасчета.Свойство("УзлыСНулевымиВесами") Тогда
		УзлыСНулевымиВесами = ПараметрыРасчета.УзлыСНулевымиВесами;
	Иначе
		УзлыСНулевымиВесами = Новый Массив;
	КонецЕсли;
	Запрос.УстановитьПараметр("НекорректныеУзлы", УзлыСНулевымиВесами);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Партия КАК Партия,
	|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС
	|ИЗ
	|	ВТСтоимостьПартийТоваров КАК Т
	|ГДЕ
	|	Т.НомерУзла В (&НекорректныеУзлы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	АналитикаУчетаНоменклатуры,
	|	Партия,
	|	ВидДеятельностиНДС
	|";
	
	СтрокаПротокола = "";
	
	Если ЗначениеЗаполнено(УзлыСНулевымиВесами) Тогда
		
		Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
		
		Пока Выборка.Следующий() Цикл
			
			СтрокаПротокола = СтрокаПротокола + ?(СтрокаПротокола = "", "", Символы.ПС)
				+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Организация: ""%1"", Аналитика номенклатуры: ""%2"", Партия: ""%3"", Вид деятельности НДС: ""%4"",';
						|en = 'Company: ""%1"", Item dimension: ""%2"", Lot: ""%3"", VAT activity type: ""%4"",'"),
					Выборка.Организация,
					Выборка.АналитикаУчетаНоменклатуры,
					Выборка.Партия,
					Выборка.ВидДеятельностиНДС);
					
		КонецЦикла;
		
		Если ЗначениеЗаполнено(СтрокаПротокола) Тогда
			
			СтрокаПротокола =
				НСтр("ru = 'Стоимость некоторых аналитик номенклатуры не может быть рассчитана при решении СЛУ
					|по причине некорректных данных СЛУ (нулевой вес узла и ненулевая стоимость).';
					|en = 'Стоимость некоторых аналитик номенклатуры не может быть рассчитана при решении СЛУ
					|по причине некорректных данных СЛУ (нулевой вес узла и ненулевая стоимость).'")
				+ Символы.ПС + СтрокаПротокола;
			
			РасчетСебестоимостиПротоколРасчета.ДополнительнаяИнформация(ПараметрыРасчета, СтрокаПротокола);
		
		КонецЕсли;
		
	КонецЕсли;
	
	// Добавим в протокол информацию об узлах с переполнением поля
	
	Если НЕ ЗначениеЗаполнено(ПараметрыРасчета.УзлыСПереполнениемПоля) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПротокола = "";
	
	Запрос.УстановитьПараметр("НекорректныеУзлы", ПараметрыРасчета.УзлыСПереполнениемПоля);
	
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаПротокола = СтрокаПротокола + ?(СтрокаПротокола = "", "", Символы.ПС)
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Организация: ""%1"", Аналитика номенклатуры: ""%2"", Партия: ""%3"", Вид деятельности НДС: ""%4"",';
					|en = 'Company: ""%1"", Item dimension: ""%2"", Lot: ""%3"", VAT activity type: ""%4"",'"),
				Выборка.Организация,
				Выборка.АналитикаУчетаНоменклатуры,
				Выборка.Партия,
				Выборка.ВидДеятельностиНДС);
				
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(СтрокаПротокола) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПротокола =
		НСтр("ru = 'Стоимость некоторых аналитик номенклатуры не может быть рассчитана при решении СЛУ.
			|Возможные причины: превышение расходов над приходами и начальными остатками или зацикливание движений.';
			|en = 'The cost of some item dimensions can not be calculated when solving LES.
			|Possible causes: consumption exceeding receipts and beginning inventories or looping records.'")
		+ Символы.ПС + СтрокаПротокола;
	
	РасчетСебестоимостиПротоколРасчета.ДополнительнаяИнформация(ПараметрыРасчета, СтрокаПротокола);
		
КонецПроцедуры

Процедура ОбновитьСтоимостьПартийТоваров_ДополнительныеРасходы(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ОбновитьСтоимостьПартийТоваров_ДополнительныеРасходы");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО                                     КАК ДокументДвижения,
	|	&НачалоПериода                                   КАК Период,
	|	СтоимостьПартийТоваров.НомерУзла                 КАК НомерУзла,
	// Измерения
	|	СтоимостьПартийТоваров.Организация                КАК Организация,
	|	СтоимостьПартийТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СтоимостьПартийТоваров.ВидЗапасов                 КАК ВидЗапасов,
	|	СтоимостьПартийТоваров.РазделУчета                КАК РазделУчета,
	|	СтоимостьПартийТоваров.Партия                     КАК Партия,
	|	СтоимостьПартийТоваров.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|	СтоимостьПартийТоваров.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|	СтоимостьПартийТоваров.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	// Ресурсы
	|	СтоимостьПартийТоваров.Стоимость                                        КАК Стоимость,
	|	СтоимостьПартийТоваров.СтоимостьБезНДС                                  КАК СтоимостьБезНДС,
	|	СтоимостьПартийТоваров.СтоимостьЗабалансовая                            КАК СтоимостьЗабалансовая,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьСНДС, 0) КАК ЧИСЛО(28,10))    КАК СтоимостьДопРасходы,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьБезНДС, 0) КАК ЧИСЛО(28,10))  КАК СтоимостьДопРасходыБезНДС,
	|	СтоимостьПартийТоваров.Трудозатраты                                     КАК Трудозатраты,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПостоянныеСНДС,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПостоянныеБезНДС,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПеременныеСНДС,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПеременныеБезНДС,
	|
	|	СтоимостьПартийТоваров.СтоимостьРегл                                    КАК СтоимостьРегл,
	|	СтоимостьПартийТоваров.СтоимостьЗабалансоваяРегл                        КАК СтоимостьЗабалансоваяРегл,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьРегл, 0) КАК ЧИСЛО(28,10))    КАК ДопРасходыРегл,
	|	СтоимостьПартийТоваров.ТрудозатратыРегл                                 КАК ТрудозатратыРегл,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПеременныеРегл,
	|	СтоимостьПартийТоваров.СтоимостьРегл                                    КАК СтоимостьНУ,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ВременнаяРазница,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК СтоимостьНДД,
	|	СтоимостьПартийТоваров.РезервПодОбесценениеРегл                         КАК РезервПодОбесценениеРегл,
	|
	|	СтоимостьПартийТоваров.СтоимостьУпр                                     КАК СтоимостьУпр,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьУпр, 0) КАК ЧИСЛО(28,10))     КАК ДопРасходыУпр,
	|	СтоимостьПартийТоваров.ТрудозатратыУпр                                  КАК ТрудозатратыУпр,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПеременныеУпр,
	|	СтоимостьПартийТоваров.РезервПодОбесценениеУпр                          КАК РезервПодОбесценениеУпр
	|
	|ПОМЕСТИТЬ СтоимостьПартийТоваровПредварительная
	|ИЗ
	|	ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений КАК ТаблицаРешений
	|		ПО ТаблицаРешений.НомерУзла = СтоимостьПартийТоваров.НомерУзла
	|;
	|/////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТСтоимостьПартийТоваров
	|ИЗ
	|	СтоимостьПартийТоваровПредварительная КАК СтоимостьПартийТоваров
	|;
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, 
		"СуммыРасходов, СтоимостьПартийТоваровПредварительная");
	
КонецПроцедуры

Процедура ЗарегистрироватьСтоимость_ДополнительныеРасходы(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ЗарегистрироватьСтоимость_ДополнительныеРасходы");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Узлы.НомерУзла,
	// Измерения
	|	Узлы.Организация,
	|	Узлы.Подразделение,
	|	Узлы.НаправлениеДеятельности,
	|	Узлы.СтатьяРасходов,
	|	Узлы.АналитикаРасходов,
	// Ресурсы
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьСНДС, 0) КАК ЧИСЛО(28,10))    КАК СтоимостьСНДС,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьБезНДС, 0) КАК ЧИСЛО(28,10))  КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьРегл, 0) КАК ЧИСЛО(28,10))    КАК СтоимостьРегл,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьУпр, 0) КАК ЧИСЛО(28,10))     КАК СтоимостьУпр
	|ПОМЕСТИТЬ СтоимостьДополнительныхРасходов
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК Узлы
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений КАК ТаблицаРешений
	|		ПО ТаблицаРешений.НомерУзла = Узлы.НомерУзла
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

// Текст описание данных для ВТ СтоимостьДополнительныхРасходов.
// 
// Возвращаемое значение:
//  Строка - Текст описание данных для ВТ СтоимостьДополнительныхРасходов.
Функция ТекстОписаниеДанныхДляСтоимостиДополнительныхРасходов() Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ
		|	0 КАК НомерУзла,
		// Измерения
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)					КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)			КАК Подразделение,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)		КАК НаправлениеДеятельности,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)	КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО													КАК АналитикаРасходов,
		// Ресурсы
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10)) КАК СтоимостьСНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10)) КАК СтоимостьБезНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10)) КАК СтоимостьРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10)) КАК СтоимостьУпр
		|ПОМЕСТИТЬ Данные
		|"; 
		
		ТекстЗапроса = РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьЗапросОписанияДанных(ТекстЗапроса);

	Возврат ТекстЗапроса;
КонецФункции

Процедура ОбновитьСтоимостьПартийТоваров_ВключениеИсключениеНДС(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ЗарегистрироватьСтоимость_ВключениеИсключениеНДС");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО                                     КАК ДокументДвижения,
	|	&НачалоПериода                                   КАК Период,
	|	СтоимостьПартийТоваров.НомерУзла                 КАК НомерУзла,
	// Измерения
	|	СтоимостьПартийТоваров.Организация                КАК Организация,
	|	СтоимостьПартийТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СтоимостьПартийТоваров.ВидЗапасов                 КАК ВидЗапасов,
	|	СтоимостьПартийТоваров.РазделУчета                КАК РазделУчета,
	|	СтоимостьПартийТоваров.Партия                     КАК Партия,
	|	СтоимостьПартийТоваров.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|	СтоимостьПартийТоваров.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|	СтоимостьПартийТоваров.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	// Ресурсы
	|	СтоимостьПартийТоваров.Стоимость                                                  КАК Стоимость,
	|	СтоимостьПартийТоваров.СтоимостьБезНДС                                            КАК СтоимостьБезНДС,
	|	СтоимостьПартийТоваров.СтоимостьЗабалансовая                                      КАК СтоимостьЗабалансовая,
	|	СтоимостьПартийТоваров.СтоимостьДопРасходы                                        КАК СтоимостьДопРасходы,
	|	СтоимостьПартийТоваров.СтоимостьДопРасходыБезНДС                                  КАК СтоимостьДопРасходыБезНДС,
	|	СтоимостьПартийТоваров.Трудозатраты                                               КАК Трудозатраты,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПостоянныеСНДС,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПостоянныеБезНДС,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПеременныеСНДС,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПеременныеБезНДС,
	|
	|	ВЫРАЗИТЬ(СтоимостьПартийТоваров.СтоимостьРегл
	|		+ ЕСТЬNULL(СебестоимостьОрганизаций.СтоимостьРегл, 0) КАК ЧИСЛО(28,10))       КАК СтоимостьРегл,
	|	СтоимостьПартийТоваров.СтоимостьЗабалансоваяРегл                                  КАК СтоимостьЗабалансоваяРегл,
	|	СтоимостьПартийТоваров.ДопРасходыРегл                                             КАК ДопРасходыРегл,
	|	СтоимостьПартийТоваров.ТрудозатратыРегл                                           КАК ТрудозатратыРегл,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(СтоимостьПартийТоваров.СтоимостьРегл
	|		+ ЕСТЬNULL(СебестоимостьОрганизаций.СтоимостьРегл, 0) КАК ЧИСЛО(28,10))       КАК СтоимостьНУ,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ВременнаяРазница,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК СтоимостьНДД,
	|	СтоимостьПартийТоваров.РезервПодОбесценениеРегл                                   КАК РезервПодОбесценениеРегл,
	|
	|	ВЫРАЗИТЬ(СтоимостьПартийТоваров.СтоимостьУпр
	|		+ ЕСТЬNULL(СебестоимостьОрганизаций.СтоимостьУпр, 0) КАК ЧИСЛО(28,10))        КАК СтоимостьУпр,
	|	СтоимостьПартийТоваров.ДопРасходыУпр                                              КАК ДопРасходыУпр,
	|	СтоимостьПартийТоваров.ТрудозатратыУпр                                            КАК ТрудозатратыУпр,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПеременныеУпр,
	|	СтоимостьПартийТоваров.РезервПодОбесценениеУпр                                    КАК РезервПодОбесценениеУпр
	|
	|ПОМЕСТИТЬ СтоимостьПартийТоваровПредварительная
	|ИЗ
	|	ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК СебестоимостьОрганизаций
	|		ПО СебестоимостьОрганизаций.НомерУзла = СтоимостьПартийТоваров.НомерУзла
	|;
	|/////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТСтоимостьПартийТоваров
	|ИЗ
	|	СтоимостьПартийТоваровПредварительная КАК СтоимостьПартийТоваров";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, 
		"ВтТаблицаРешений_СебестоимостьОрганизаций, СтоимостьПартийТоваровПредварительная");
	
КонецПроцедуры

Процедура СформироватьСтоимостьПартийТоваров_РезервыПодОбесценениеЗапасов(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СформироватьСтоимостьПартийТоваров_РезервыПодОбесценениеЗапасов");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО                                 КАК ДокументДвижения,
		|	&НачалоПериода                               КАК Период,
		|	УзлыКорректировки.НомерУзла                  КАК НомерУзла,
		// Измерения
		|	УзлыКорректировки.Организация                КАК Организация,
		|	УзлыКорректировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	УзлыКорректировки.ВидЗапасов                 КАК ВидЗапасов,
		|	УзлыКорректировки.РазделУчета                КАК РазделУчета,
		|	УзлыКорректировки.Партия                     КАК Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
		|	УзлыКорректировки.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
		|	УзлыКорректировки.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
		// Ресурсы
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))                                                               КАК Стоимость,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))                                                               КАК СтоимостьБезНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))                                                               КАК СтоимостьЗабалансовая,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьДопРасходы,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьДопРасходыБезНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))                                                               КАК Трудозатраты,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеСНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеБезНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеСНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеБезНДС,
		|
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))                                                               КАК СтоимостьЗабалансоваяРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ДопРасходыРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))                                                               КАК ТрудозатратыРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьНУ,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостояннаяРазница,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ВременнаяРазница,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьНДД,
		|	ВЫРАЗИТЬ(&РезервПодОбесценениеРегл КАК ЧИСЛО(28,10))                                       КАК РезервПодОбесценениеРегл,
		|
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ДопРасходыУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))                                                               КАК ТрудозатратыУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеУпр,
		|	ВЫРАЗИТЬ(&РезервПодОбесценениеУпр КАК ЧИСЛО(28,10))                                        КАК РезервПодОбесценениеУпр
		|ПОМЕСТИТЬ ВТСтоимостьПартийТоваров
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		//++ НЕ УТ
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_РезервыПодОбесценениеЗапасовОрганизаций КАК ТаблицаРешенийОрганизаций
		|		ПО ТаблицаРешенийОрганизаций.НомерУзла = УзлыКорректировки.НомерУзла
		//-- НЕ УТ
		|";
		
	//++ НЕ УТ
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РезервПодОбесценениеРегл", "ЕСТЬNULL(ТаблицаРешенийОрганизаций.РезервПодОбесценениеРегл, 0)");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РезервПодОбесценениеУпр", "ЕСТЬNULL(ТаблицаРешенийОрганизаций.РезервПодОбесценениеУпр, 0)");
	//-- НЕ УТ
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РезервПодОбесценениеРегл", "0");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РезервПодОбесценениеУпр", "0");
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляСтоимостиПартийТоваров

// Этап "ПодготовкаДанныхДляСтоимостиПартийТоваров"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляСтоимостиПартийТоваров(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляСтоимостиПартийТоваров");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"ВтСтоимостьПартийТоваров");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляСтоимостиПартийТоваров(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляСтоимостиПартийТоваров(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстЗапроса = "" 
		+ ТекстСтоимостьПартийТоваров()
		+ "";
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстСтоимостьПартийТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	СтоимостьПартийТоваров.НомерУзла                 КАК НомерУзла,
		// Измерения
		|	СтоимостьПартийТоваров.Организация                КАК Организация,
		|	СтоимостьПартийТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	СтоимостьПартийТоваров.ВидЗапасов                 КАК ВидЗапасов,
		|	СтоимостьПартийТоваров.РазделУчета                КАК РазделУчета,
		|	СтоимостьПартийТоваров.Партия                     КАК Партия,
		|	СтоимостьПартийТоваров.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
		|	СтоимостьПартийТоваров.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
		|	СтоимостьПартийТоваров.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
		// Ресурсы
		|	СтоимостьПартийТоваров.Стоимость                                                             КАК Стоимость,
		|	СтоимостьПартийТоваров.СтоимостьДопРасходы                                                   КАК СтоимостьДопРасходы,
		|	СтоимостьПартийТоваров.СтоимостьЗабалансовая                                                 КАК СтоимостьЗабалансовая,
		|	СтоимостьПартийТоваров.СтоимостьБезНДС                                                       КАК СтоимостьБезНДС,
		|	СтоимостьПартийТоваров.СтоимостьДопРасходыБезНДС                                             КАК СтоимостьДопРасходыБезНДС,
		|	СтоимостьПартийТоваров.Трудозатраты                                                          КАК Трудозатраты,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.ПостатейныеПостоянныеСНДС, 0) КАК ЧИСЛО(28,10))   КАК ПостатейныеПостоянныеСНДС,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.ПостатейныеПеременныеСНДС, 0) КАК ЧИСЛО(28,10))   КАК ПостатейныеПеременныеСНДС,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.ПостатейныеПостоянныеБезНДС, 0) КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеБезНДС,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.ПостатейныеПеременныеБезНДС, 0) КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеБезНДС,
		|
		|	СтоимостьПартийТоваров.СтоимостьРегл                                                         КАК СтоимостьРегл,
		|	СтоимостьПартийТоваров.СтоимостьЗабалансоваяРегл                                             КАК СтоимостьЗабалансоваяРегл,
		|	СтоимостьПартийТоваров.ДопРасходыРегл                                                        КАК ДопРасходыРегл,
		|	СтоимостьПартийТоваров.ТрудозатратыРегл                                                      КАК ТрудозатратыРегл,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл, 0) КАК ЧИСЛО(28,10))   КАК ПостатейныеПостоянныеРегл,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0) КАК ЧИСЛО(28,10))   КАК ПостатейныеПеременныеРегл,
		|
		|	ВЫРАЗИТЬ(
		//++ Локализация
		|	ЕСТЬNULL(СебестоимостьНалоговыйУчет.СуммаНУ, 0) +
		//-- Локализация
		|	0 КАК ЧИСЛО(28,10))                                                                          КАК СтоимостьНУ,
		|	ВЫРАЗИТЬ(
		//++ Локализация
		|	ЕСТЬNULL(СебестоимостьНалоговыйУчет.ПостояннаяРазница, 0) +
		//-- Локализация
		|	0 КАК ЧИСЛО(28,10))                                                                          КАК ПостояннаяРазница,
		|	ВЫРАЗИТЬ(
		//++ Локализация
		|	ЕСТЬNULL(СебестоимостьНалоговыйУчет.ВременнаяРазница, 0) +
		//-- Локализация
		|	0 КАК ЧИСЛО(28,10))                                                                          КАК ВременнаяРазница,
		// Стоимости НДД на данном этапе еще нет. См. РасчетСебестоимостиНДД.РасчетСебестоимости_СтоимостьНДД
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))																 КАК СтоимостьНДД,
		|	СтоимостьПартийТоваров.РезервПодОбесценениеРегл                                              КАК РезервПодОбесценениеРегл,
		|
		|	СтоимостьПартийТоваров.СтоимостьУпр                                                          КАК СтоимостьУпр,
		|	СтоимостьПартийТоваров.ДопРасходыУпр                                                         КАК ДопРасходыУпр,
		|	СтоимостьПартийТоваров.ТрудозатратыУпр                                                       КАК ТрудозатратыУпр,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр, 0) КАК ЧИСЛО(28,10))    КАК ПостатейныеПостоянныеУпр,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0) КАК ЧИСЛО(28,10))    КАК ПостатейныеПеременныеУпр,
		|	СтоимостьПартийТоваров.РезервПодОбесценениеУпр                                               КАК РезервПодОбесценениеУпр
		|
		|ПОМЕСТИТЬ ВтСтоимостьПартийТоваров
		|ИЗ
		|	ВТСтоимостьПартийТоваровПредыдущая КАК СтоимостьПартийТоваров
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьПредприятия КАК СебестоимостьПредприятия
		|		ПО СебестоимостьПредприятия.НомерУзла = СтоимостьПартийТоваров.НомерУзла
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК СебестоимостьОрганизаций
		|		ПО СебестоимостьОрганизаций.НомерУзла = СтоимостьПартийТоваров.НомерУзла
		//++ Локализация
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_НалоговыйУчет КАК СебестоимостьНалоговыйУчет
		|		ПО СебестоимостьНалоговыйУчет.НомерУзла = СтоимостьПартийТоваров.НомерУзла
		//-- Локализация
		|
		// Индексация соответствует таблице ВТКэшРасчетныеОборотыСебестоимостьТоваров
		// РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеРегистра() #Область ИндексыРегистра
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	Организация,
		|	Партия
		|";
КонецФункции

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляСтоимостиПрочихРасходовНЗП

// Этап "ПодготовкаДанныхДляСтоимостиПрочихРасходовНЗП"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляСтоимостиПрочихРасходовНЗП(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляСтоимостиПрочихРасходовНЗП");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"ВтСтоимостиНезавершенногоПроизводства, ВтСтоимостиНезавершенногоПроизводстваРегл, РезервыПредстоящихРасходов,
		|ВтСтоимостиДополнительныхРасходов, ВтСтоимостиДополнительныхРасходовРегл");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляСтоимостиПрочихРасходовНЗП(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляСтоимостиПрочихРасходовНЗП(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстЗапроса = ""
		+ ВтСтоимостиНезавершенногоПроизводства()
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ВтСтоимостиНезавершенногоПроизводстваРегл()
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + РезервыПредстоящихРасходов()
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ВтСтоимостиДополнительныхРасходовПостатейные()
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ВтСтоимостиДополнительныхРасходовПостатейныеРегл()
		+ "";
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ВтСтоимостиНезавершенногоПроизводства()
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.РазделУчета 					  КАК РазделУчета,
		|	УзлыКорректировки.Организация 					  КАК Организация,
		|	УзлыКорректировки.Подразделение                   КАК Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности		  КАК НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов 				  КАК СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов 			  КАК АналитикаРасходов,
		|	УзлыКорректировки.СтатьяКалькуляции 			  КАК СтатьяКалькуляции,
		|	УзлыКорректировки.Этап 							  КАК Этап,
		|	УзлыКорректировки.ГруппаПродукции 				  КАК ГруппаПродукции,
		|	УзлыКорректировки.ПравилоОтнесенияНаВыпуск 		  КАК ПравилоОтнесенияНаВыпуск,
		|	УзлыКорректировки.Партия 						  КАК Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий 			  КАК АналитикаУчетаПартий,
		|	УзлыКорректировки.КодСтрокиПродукция 			  КАК КодСтрокиПродукция,
		
		|	0                                                 КАК Стоимость,
		|	0                                                 КАК СтоимостьДопРасходы,
		|	0                                                 КАК Трудозатраты,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеСНДС)	  КАК ПостатейныеПостоянныеСНДС,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеСНДС)	  КАК ПостатейныеПеременныеСНДС,
		|	0                                                 КАК СтоимостьЗабалансовая,
		
		|	0                                                 КАК СтоимостьБезНДС,
		|	0                                                 КАК СтоимостьДопРасходыБезНДС,
		|	0                                                 КАК ТрудозатратыБезНДС,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеБезНДС) КАК ПостатейныеПостоянныеБезНДС,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеБезНДС) КАК ПостатейныеПеременныеБезНДС
		|
		|ПОМЕСТИТЬ ВтСтоимостиНезавершенногоПроизводства
		|ИЗ
		|	ВтТаблицаРешений_СебестоимостьПредприятия КАК ТаблицаРешений
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|		ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
		|ГДЕ
		|	(ТаблицаРешений.ПостатейныеПостоянныеСНДС <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПеременныеСНДС <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПостоянныеБезНДС <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПеременныеБезНДС <> 0)
		|	И УзлыКорректировки.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
		|	И УзлыКорректировки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|	И УзлыКорректировки.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.РазделУчета,
		|	УзлыКорректировки.Организация,
		|	УзлыКорректировки.Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов,
		|	УзлыКорректировки.СтатьяКалькуляции,
		|	УзлыКорректировки.Этап,
		|	УзлыКорректировки.ГруппаПродукции,
		|	УзлыКорректировки.ПравилоОтнесенияНаВыпуск,
		|	УзлыКорректировки.Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий,
		|	УзлыКорректировки.КодСтрокиПродукция
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Партия,
		|	АналитикаУчетаПартий,
		|	СтатьяРасходов,
		|	АналитикаРасходов,
		|	Подразделение,
		|	Этап
		|";
КонецФункции

Функция ВтСтоимостиНезавершенногоПроизводстваРегл()
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла 				КАК НомерУзла,
		|	УзлыКорректировки.РазделУчета 				КАК РазделУчета,
		|	УзлыКорректировки.Организация 				КАК Организация,
		|	УзлыКорректировки.Подразделение             КАК Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности	КАК НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов 			КАК СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов 		КАК АналитикаРасходов,
		|	УзлыКорректировки.СтатьяКалькуляции 		КАК СтатьяКалькуляции,
		|	УзлыКорректировки.Этап 						КАК Этап,
		|	УзлыКорректировки.ГруппаПродукции 			КАК ГруппаПродукции,
		|	УзлыКорректировки.ПравилоОтнесенияНаВыпуск 	КАК ПравилоОтнесенияНаВыпуск,
		|	УзлыКорректировки.Партия					КАК Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий		КАК АналитикаУчетаПартий,
		|	УзлыКорректировки.КодСтрокиПродукция		КАК КодСтрокиПродукция,
		
		|	0 КАК СтоимостьРегл,
		|	0 КАК ДопРасходыРегл,
		|	0 КАК ТрудозатратыРегл,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеРегл) КАК ПостатейныеПостоянныеРегл,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеРегл) КАК ПостатейныеПеременныеРегл,
		|	ВЫБОР 
		|		КОГДА МАКСИМУМ(УзлыКорректировки.ВесПостатейныеРегл) = 0 ТОГДА 0
		|		ИНАЧЕ СУММА(ЕСТЬNULL(РезервыПоУзлам.РезервРегл, 0)) / МАКСИМУМ(УзлыКорректировки.ВесПостатейныеРегл)
		|	КОНЕЦ КАК РезервРегл,
		|	0 КАК СтоимостьЗабалансоваяРегл,
		|	СУММА(ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.СуммаНУ, 0))           КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ПостояннаяРазница, 0)) КАК ПостояннаяРазница,
		|	СУММА(ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ВременнаяРазница, 0))  КАК ВременнаяРазница,
		
		|	0 КАК СтоимостьУпр,
		|	0 КАК ДопРасходыУпр,
		|	0 КАК ТрудозатратыУпр,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеУпр) КАК ПостатейныеПостоянныеУпр,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеУпр) КАК ПостатейныеПеременныеУпр,
		|	ВЫБОР 
		|		КОГДА МАКСИМУМ(УзлыКорректировки.ВесПостатейныеУпр) = 0 ТОГДА 0
		|		ИНАЧЕ СУММА(ЕСТЬNULL(РезервыПоУзлам.РезервУпр, 0)) / МАКСИМУМ(УзлыКорректировки.ВесПостатейныеУпр)
		|	КОНЕЦ КАК РезервУпр,
		|	0 КАК СтоимостьНДД
		|
		|ПОМЕСТИТЬ ВтСтоимостиНезавершенногоПроизводстваРегл
		|ИЗ
		|	ВтТаблицаРешений_СебестоимостьОрганизаций КАК ТаблицаРешений
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|	ПО УзлыКорректировки.НомерУзла = ТаблицаРешений.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_НалоговыйУчет КАК ТаблицаРешений_НалоговыйУчет
		|	ПО ТаблицаРешений_НалоговыйУчет.НомерУзла = ТаблицаРешений.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РезервыПоУзлам КАК РезервыПоУзлам
		|		ПО ТаблицаРешений.НомерУзла = РезервыПоУзлам.НомерУзла
		|ГДЕ
		|	(ТаблицаРешений.ПостатейныеПостоянныеРегл <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПеременныеРегл <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПостоянныеУпр <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПеременныеУпр <> 0
		|		ИЛИ ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.СуммаНУ, 0) <> 0
		|		ИЛИ ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ПостояннаяРазница, 0) <> 0
		|		ИЛИ ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ВременнаяРазница, 0) <> 0)
		|	И УзлыКорректировки.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
		|	И УзлыКорректировки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|	И УзлыКорректировки.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла,
		|	УзлыКорректировки.РазделУчета,
		|	УзлыКорректировки.Организация,
		|	УзлыКорректировки.Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов,
		|	УзлыКорректировки.СтатьяКалькуляции,
		|	УзлыКорректировки.Этап,
		|	УзлыКорректировки.ГруппаПродукции,
		|	УзлыКорректировки.ПравилоОтнесенияНаВыпуск,
		|	УзлыКорректировки.Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий,
		|	УзлыКорректировки.КодСтрокиПродукция
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Партия,
		|	АналитикаУчетаПартий,
		|	СтатьяРасходов,
		|	АналитикаРасходов,
		|	Подразделение,
		|	Этап
		|";
КонецФункции

Функция ВтСтоимостиДополнительныхРасходовПостатейные()
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.Организация КАК Организация,
		|	УзлыКорректировки.Подразделение КАК Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов КАК СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов КАК АналитикаРасходов,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеСНДС)   КАК ПостатейныеПостоянныеСНДС,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеСНДС)   КАК ПостатейныеПеременныеСНДС,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеБезНДС) КАК ПостатейныеПостоянныеБезНДС,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеБезНДС) КАК ПостатейныеПеременныеБезНДС
		|ПОМЕСТИТЬ ВтСтоимостиДополнительныхРасходов
		|ИЗ
		|	ВтТаблицаРешений_СебестоимостьПредприятия КАК ТаблицаРешений
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|		ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
		|ГДЕ
		|	ТаблицаРешений.ПостатейныеПеременныеСНДС + ТаблицаРешений.ПостатейныеПостоянныеСНДС <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПеременныеБезНДС + ТаблицаРешений.ПостатейныеПостоянныеБезНДС <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.Организация,
		|	УзлыКорректировки.Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	УзлыКорректировки.Организация,
		|	УзлыКорректировки.Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов
		|";
КонецФункции

Функция ВтСтоимостиДополнительныхРасходовПостатейныеРегл()
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		|	УзлыКорректировки.Организация КАК Организация,
		|	УзлыКорректировки.Подразделение КАК Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов КАК СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов КАК АналитикаРасходов,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеРегл)   КАК ПостатейныеПостоянныеРегл,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеРегл)   КАК ПостатейныеПеременныеРегл,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеУпр)    КАК ПостатейныеПостоянныеУпр,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеУпр)    КАК ПостатейныеПеременныеУпр,
		|
		|	СУММА(ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.СуммаНУ, 0))          КАК СтоимостьНУ,
		|	СУММА(ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ПостояннаяРазница, 0))	КАК ПостояннаяРазница,
		|	СУММА(ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ВременнаяРазница, 0))	КАК ВременнаяРазница,
		|	0																	КАК СтоимостьНДД
		|ПОМЕСТИТЬ ВтСтоимостиДополнительныхРасходовРегл
		|ИЗ
		|	ВтТаблицаРешений_СебестоимостьОрганизаций КАК ТаблицаРешений
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|	ПО УзлыКорректировки.НомерУзла = ТаблицаРешений.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_НалоговыйУчет КАК ТаблицаРешений_НалоговыйУчет
		|	ПО ТаблицаРешений_НалоговыйУчет.НомерУзла = ТаблицаРешений.НомерУзла
		|
		|ГДЕ
		|	ТаблицаРешений.ПостатейныеПеременныеРегл + ТаблицаРешений.ПостатейныеПостоянныеРегл <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПеременныеУпр + ТаблицаРешений.ПостатейныеПостоянныеУпр <> 0
		|		ИЛИ ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.СуммаНУ, 0) <> 0
		|		ИЛИ ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ПостояннаяРазница, 0) <> 0
		|		ИЛИ ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ВременнаяРазница, 0) <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла,
		|	УзлыКорректировки.Организация,
		|	УзлыКорректировки.Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла,
		|	УзлыКорректировки.Организация,
		|	УзлыКорректировки.Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов
		|";
КонецФункции

Функция РезервыПредстоящихРасходов()
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ВидРезервов,
		|	ДД.ОбъектУчетаРезервов,
		|	Узлы.Подразделение,
		|	Узлы.СтатьяРасходов,
		|	Узлы.АналитикаРасходов,
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		|			КОГДА ДД.РасходРегл = 0 ИЛИ РезервыПоУзлам.РезервРегл = 0
		|				ТОГДА 0
		|			ИНАЧЕ
		|				ВЫРАЗИТЬ(ДД.РасходРегл /
		|					ВЫБОР
		|						КОГДА ДД.РасходРегл < РезервыПоУзлам.РезервРегл
		|							ТОГДА РезервыПоУзлам.РезервРегл
		|						ИНАЧЕ ДД.РасходРегл
		|					КОНЕЦ КАК ЧИСЛО(28,10))
		|		КОНЕЦ * ДД.РезервРегл КАК ЧИСЛО(28,10)) КАК СуммаРегл,
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		|			КОГДА ДД.РасходПР = 0 ИЛИ РезервыПоУзлам.РезервРегл = 0
		|				ТОГДА 0
		|			ИНАЧЕ
		|				ВЫРАЗИТЬ(ДД.РасходПР /
		|					ВЫБОР
		|						КОГДА ДД.РасходПР < РезервыПоУзлам.РезервРегл
		|							ТОГДА РезервыПоУзлам.РезервРегл
		|						ИНАЧЕ ДД.РасходПР
		|					КОНЕЦ КАК ЧИСЛО(28,10))
		|		КОНЕЦ * ДД.РезервРегл КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		|			КОГДА ДД.РасходНУ = 0 ИЛИ РезервыПоУзлам.РезервНУ = 0
		|				ТОГДА 0
		|			ИНАЧЕ
		|				ВЫРАЗИТЬ(ДД.РасходНУ /
		|					ВЫБОР
		|						КОГДА ДД.РасходНУ < РезервыПоУзлам.РезервНУ
		|							ТОГДА РезервыПоУзлам.РезервНУ
		|						ИНАЧЕ ДД.РасходНУ
		|					КОНЕЦ КАК ЧИСЛО(28,10))
		|		КОНЕЦ * ДД.РезервНУ КАК ЧИСЛО(28,10)) КАК СуммаНУ,
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		|			КОГДА ДД.РасходУпр = 0 ИЛИ РезервыПоУзлам.РезервУпр = 0
		|				ТОГДА 0
		|			ИНАЧЕ
		|				ВЫРАЗИТЬ(ДД.РасходУпр /
		|					ВЫБОР
		|						КОГДА ДД.РасходУпр < РезервыПоУзлам.РезервУпр
		|							ТОГДА РезервыПоУзлам.РезервУпр
		|						ИНАЧЕ ДД.РасходУпр
		|					КОНЕЦ КАК ЧИСЛО(28,10))
		|		КОНЕЦ * ДД.РезервУпр КАК ЧИСЛО(28,10)) КАК СуммаУпр
		|ПОМЕСТИТЬ РезервыПредстоящихРасходов
		|ИЗ
		|	ДетальныеРезервыПоУзлам КАК ДД
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РезервыПоУзлам КАК РезервыПоУзлам
		|		ПО ДД.НомерУзла = РезервыПоУзлам.НомерУзла
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК Узлы
		|		ПО ДД.НомерУзла = Узлы.НомерУзла
		|";
КонецФункции

#КонецОбласти

//-- НЕ УТ

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляСтоимостиТоваров

// Этап "ПодготовкаДанныхДляСтоимостиТоваров"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляСтоимостиТоваров(ПараметрыРасчета) Экспорт
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляСтоимостиТоваров");
	
	// 1. Инициализация структуры данных для расчета
	//	- формирует структуру ПараметрыРасчета.РаспределениеПартий.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьТрансляциюПартий(
		ПараметрыРасчета,
		Неопределено,
		Метаданные.РегистрыСведений.СтоимостьТоваров.Имя);
		
	ПараметрыРасчета.Вставить("ИдетРасчетСебестоимости", Истина);
		
	// 2. Получение исходных данных для трансляции
	// 	- формирует временную таблицу Данные.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьДанныеЭтапаРасчета(
		ПараметрыРасчета,
		ТекстЗапросаДляСтоимостиТоваров(ПараметрыРасчета));
		
	ПараметрыРасчета.Вставить("ИдетРасчетСебестоимости", Ложь);
		
	// 3. Помещение данных в таблицу-приемник и очистка вспомогательных временных таблиц.
	// 	- формирует движения по регистру сведений СтоимостьТоваров.
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьРаспределениеПартий(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляСтоимостиТоваров(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстЗапроса = ""
		// подготовка временных таблиц
		+ ТекстВТОборотыКоличествоСПартиями()
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстВТОборотыКоличествоБезПартий()
		+ ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстВТСтоимостьПартийТоваровСКоличеством() // использует ВТОборотыКоличествоСПартиями
		+ ОбщегоНазначения.РазделительПакетаЗапросов()
		// выборка данных
		+ ТекстОписаниеДанныхДляСтоимостиТоваров() 
		+ ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() + ТекстСтоимостьТоваров()
		+ "";
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстВТОборотыКоличествоСПартиями()
	Возврат "
		|ВЫБРАТЬ
		|	Т.АналитикаУчетаНоменклатуры,
		|	Т.РазделУчета,
		|	Т.ВидЗапасов,
		|	Т.Организация,
		|	Т.Партия,
		|	Т.АналитикаУчетаПартий,
		|	Т.АналитикаФинансовогоУчета,
		|	Т.ВидДеятельностиНДС,
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА Т.КоличествоРасход <> 0 ТОГДА Т.КоличествоРасход
		|		ИНАЧЕ Т.КоличествоОстаток
		|	КОНЕЦ КАК ЧИСЛО(15,3)) КАК Количество
		|ПОМЕСТИТЬ ВТОборотыКоличествоСПартиями
		|ИЗ
		|(ВЫБРАТЬ
		|	ДанныеПоКоличеству.АналитикаУчетаНоменклатуры,
		|	ДанныеПоКоличеству.РазделУчета,
		|	ДанныеПоКоличеству.ВидЗапасов,
		|	ДанныеПоКоличеству.Организация,
		|	ДанныеПоКоличеству.Партия,
		|	ДанныеПоКоличеству.АналитикаУчетаПартий,
		|	ДанныеПоКоличеству.АналитикаФинансовогоУчета,
		|	ДанныеПоКоличеству.ВидДеятельностиНДС,
		|	СУММА(ДанныеПоКоличеству.КоличествоРасход)  КАК КоличествоРасход,
		|	СУММА(ДанныеПоКоличеству.КоличествоОстаток) КАК КоличествоОстаток
		|ИЗ
		|	(ВЫБРАТЬ
		|		Обороты.АналитикаУчетаНоменклатуры,
		|		Обороты.РазделУчета КАК РазделУчета,
		|		Обороты.ВидЗапасов,
		|		Обороты.Организация,
		|		Обороты.Партия,
		|		Обороты.АналитикаУчетаПартий,
		|		Обороты.АналитикаФинансовогоУчета,
		|		Обороты.ВидДеятельностиНДС,
		|		Обороты.Количество 	КАК КоличествоРасход,
		|		0 					КАК КоличествоОстаток
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Обороты
		|	ГДЕ
		|		НЕ Обороты.СлужебноеВидДвиженияПриход
		|		И Обороты.АналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Остатки.АналитикаУчетаНоменклатуры,
		|		Остатки.РазделУчета,
		|		Остатки.ВидЗапасов,
		|		Остатки.Организация,
		|		Остатки.Партия,
		|		Остатки.АналитикаУчетаПартий,
		|		Остатки.АналитикаФинансовогоУчета,
		|		Остатки.ВидДеятельностиНДС,
		|		0 					КАК КоличествоРасход,
		|		Остатки.Количество 	КАК КоличествоОстаток
		|	ИЗ
		|		ВТКэшРасчетныеОстаткиСебестоимостьТоваров КАК Остатки
		|	ГДЕ
		|		Остатки.АналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|	) КАК ДанныеПоКоличеству
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеПоКоличеству.АналитикаУчетаНоменклатуры,
		|	ДанныеПоКоличеству.Организация,
		|	ДанныеПоКоличеству.ВидЗапасов,
		|	ДанныеПоКоличеству.РазделУчета,
		|	ДанныеПоКоличеству.Партия,
		|	ДанныеПоКоличеству.АналитикаУчетаПартий,
		|	ДанныеПоКоличеству.АналитикаФинансовогоУчета,
		|	ДанныеПоКоличеству.ВидДеятельностиНДС
		|) КАК Т
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	Организация,
		|	Партия
		|";
КонецФункции

Функция ТекстВТОборотыКоличествоБезПартий() // использует ВТОборотыКоличествоСПартиями
	Возврат "
		|ВЫБРАТЬ
		|	Обороты.АналитикаУчетаНоменклатуры,
		|	Обороты.РазделУчета,
		|	Обороты.ВидЗапасов,
		|	Обороты.Организация,
		|	СУММА(ВЫРАЗИТЬ(Обороты.Количество КАК ЧИСЛО(15,3))) КАК Количество
		|ПОМЕСТИТЬ ВТОборотыКоличествоБезПартий
		|ИЗ
		|	ВТОборотыКоличествоСПартиями КАК Обороты
		|
		|СГРУППИРОВАТЬ ПО
		|	Обороты.АналитикаУчетаНоменклатуры,
		|	Обороты.РазделУчета,
		|	Обороты.ВидЗапасов,
		|	Обороты.Организация
		|
		|ИМЕЮЩИЕ
		|	СУММА(Обороты.Количество) <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	Организация
		|";
КонецФункции

Функция ТекстВТСтоимостьПартийТоваровСКоличеством() // использует ВТОборотыКоличествоСПартиями
	Возврат "
		|ВЫБРАТЬ
		|	СтоимостьТоваров.Организация КАК Организация,
		|	СтоимостьТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	СтоимостьТоваров.ВидЗапасов КАК ВидЗапасов,
		|	СтоимостьТоваров.РазделУчета КАК РазделУчета,
		|
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.Стоимость
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК Стоимость,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьБезНДС
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК СтоимостьБезНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьЗабалансовая
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК СтоимостьЗабалансовая,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьДопРасходы
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК СтоимостьДопРасходы,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьДопРасходыБезНДС
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК СтоимостьДопРасходыБезНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.Трудозатраты
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК Трудозатраты,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеСНДС
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК ПостатейныеПостоянныеСНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеБезНДС
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК ПостатейныеПостоянныеБезНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеСНДС
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК ПостатейныеПеременныеСНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеБезНДС
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК ПостатейныеПеременныеБезНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьРегл
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК СтоимостьРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьЗабалансоваяРегл
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК СтоимостьЗабалансоваяРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостояннаяРазница
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК ПостояннаяРазница,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ВременнаяРазница
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК ВременнаяРазница,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (31,10))                            КАК СтоимостьНДД,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ДопРасходыРегл
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК ДопРасходыРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ТрудозатратыРегл
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК ТрудозатратыРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеРегл
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК ПостатейныеПостоянныеРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеРегл
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК ПостатейныеПеременныеРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьУпр
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК СтоимостьУпр,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ДопРасходыУпр
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК ДопРасходыУпр,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ТрудозатратыУпр
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК ТрудозатратыУпр,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеУпр
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК ПостатейныеПостоянныеУпр,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеУпр
		|			* ОборотыСПартиями.Количество КАК ЧИСЛО(31,10))) КАК ПостатейныеПеременныеУпр
		|
		|ПОМЕСТИТЬ ВТСтоимостьПартийТоваровСКоличеством
		|ИЗ
		|	ВТСтоимостьПартийТоваров КАК СтоимостьТоваров
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОборотыКоличествоСПартиями КАК ОборотыСПартиями
		|		ПО ОборотыСПартиями.АналитикаУчетаНоменклатуры  = СтоимостьТоваров.АналитикаУчетаНоменклатуры
		|		И ОборотыСПартиями.РазделУчета 					= СтоимостьТоваров.РазделУчета
		|		И ОборотыСПартиями.ВидЗапасов 					= СтоимостьТоваров.ВидЗапасов
		|		И ОборотыСПартиями.Организация 					= СтоимостьТоваров.Организация
		|		И (ОборотыСПартиями.Партия 						= СтоимостьТоваров.Партия
		|			ИЛИ &РегламентноеЗадание)
		|		И (ОборотыСПартиями.АналитикаУчетаПартий 		= СтоимостьТоваров.АналитикаУчетаПартий
		|			ИЛИ &РегламентноеЗадание)
		|		И (ОборотыСПартиями.АналитикаФинансовогоУчета 	= СтоимостьТоваров.АналитикаФинансовогоУчета
		|			ИЛИ &РегламентноеЗадание)
		|		И (ОборотыСПартиями.ВидДеятельностиНДС 			= СтоимостьТоваров.ВидДеятельностиНДС
		|			ИЛИ &РегламентноеЗадание)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтоимостьТоваров.АналитикаУчетаНоменклатуры,
		|	СтоимостьТоваров.РазделУчета,
		|	СтоимостьТоваров.ВидЗапасов,
		|	СтоимостьТоваров.Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	Организация
		|";
КонецФункции

Функция ТекстОписаниеДанныхДляСтоимостиТоваров()
	
	ТекстЗапроса = "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	СтоимостьТоваров.Регистратор,
		|	СтоимостьТоваров.Период,
		|
		|	СтоимостьТоваров.Организация,
		|	СтоимостьТоваров.АналитикаУчетаНоменклатуры,
		|	СтоимостьТоваров.ВидЗапасов,
		|	СтоимостьТоваров.РазделУчета,
		|
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьЗабалансовая,
		|	0 КАК СтоимостьДопРасходы,
		|	0 КАК СтоимостьДопРасходыБезНДС,
		|	0 КАК Трудозатраты,
		|	0 КАК ПостатейныеПостоянныеСНДС,
		|	0 КАК ПостатейныеПостоянныеБезНДС,
		|	0 КАК ПостатейныеПеременныеСНДС,
		|	0 КАК ПостатейныеПеременныеБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК СтоимостьЗабалансоваяРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	0 КАК СтоимостьНДД,
		|	0 КАК ДопРасходыРегл,
		|	0 КАК ТрудозатратыРегл,
		|	0 КАК ПостатейныеПостоянныеРегл,
		|	0 КАК ПостатейныеПеременныеРегл,
		|	0 КАК СтоимостьУпр,
		|	0 КАК ДопРасходыУпр,
		|	0 КАК ТрудозатратыУпр,
		|	0 КАК ПостатейныеПостоянныеУпр,
		|	0 КАК ПостатейныеПеременныеУпр
		|
		|ПОМЕСТИТЬ Данные
		|ИЗ
		|	РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
		|";
		
	ТекстЗапроса = РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьЗапросОписанияДанных(ТекстЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстСтоимостьТоваров() // использует ВТСтоимостьПартийТоваровСКоличеством, ВТОборотыКоличествоБезПартий
	Возврат "
		|ВЫБРАТЬ
		|	ДокументыРасчетаСебестоимости.Ссылка													КАК Регистратор,
		|	&НачалоПериода 																			КАК Период,
		|
		|	СтоимостьТоваров.Организация 															КАК Организация,
		|	СтоимостьТоваров.АналитикаУчетаНоменклатуры 											КАК АналитикаУчетаНоменклатуры,
		|	СтоимостьТоваров.ВидЗапасов 															КАК ВидЗапасов,
		|	СтоимостьТоваров.РазделУчета 															КАК РазделУчета,
		|
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.Стоимость
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК Стоимость,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьБезНДС
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьБезНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьЗабалансовая
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьЗабалансовая,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьДопРасходы
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьДопРасходы,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьДопРасходыБезНДС
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьДопРасходыБезНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.Трудозатраты
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК Трудозатраты,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеСНДС
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПостоянныеСНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеБезНДС
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПостоянныеБезНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеСНДС
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПеременныеСНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеБезНДС
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПеременныеБезНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьРегл
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьЗабалансоваяРегл
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьЗабалансоваяРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостояннаяРазница
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостояннаяРазница,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ВременнаяРазница
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ВременнаяРазница,
		|	СУММА(
		|		ВЫРАЗИТЬ(
		|			СтоимостьТоваров.СтоимостьНДД
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьНДД,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ДопРасходыРегл
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ДопРасходыРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ТрудозатратыРегл
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ТрудозатратыРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеРегл
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПостоянныеРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеРегл
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПеременныеРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьУпр
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьУпр,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ДопРасходыУпр
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ДопРасходыУпр,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ТрудозатратыУпр
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ТрудозатратыУпр,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеУпр
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПостоянныеУпр,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеУпр
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПеременныеУпр
		|ИЗ
		|	ВТСтоимостьПартийТоваровСКоличеством КАК СтоимостьТоваров
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
		|		ПО СтоимостьТоваров.Организация = ДокументыРасчетаСебестоимости.Организация
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОборотыКоличествоБезПартий КАК Обороты
		|		ПО Обороты.АналитикаУчетаНоменклатуры   = СтоимостьТоваров.АналитикаУчетаНоменклатуры
		|		И Обороты.РазделУчета 					= СтоимостьТоваров.РазделУчета
		|		И Обороты.ВидЗапасов 					= СтоимостьТоваров.ВидЗапасов
		|		И Обороты.Организация 					= СтоимостьТоваров.Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументыРасчетаСебестоимости.Ссылка,
		|	СтоимостьТоваров.АналитикаУчетаНоменклатуры,
		|	СтоимостьТоваров.РазделУчета,
		|	СтоимостьТоваров.ВидЗапасов,
		|	СтоимостьТоваров.Организация
		|";
КонецФункции

#КонецОбласти

#Область Тестирование

// Дополняет список этапов расчета.
// 
// Параметры:
// 	СписокЭтапов - СписокЗначений - 
//
Процедура ДополнитьЭтапыСПодготовкойДанныхДляСледующихЭтапов(СписокЭтапов) Экспорт
	
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУ");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУ_ДополнительныеРасходы");
	//++ НЕ УТ
	СписокЭтапов.Добавить("ПодготовкаДанныхДляСтоимостиПартийТоваров");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУ_РезервыПодОбесценениеЗапасов");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходыУчетНДС");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУНалоговыйУчет");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУПостояннаяРазница_Этап1");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУ_НалоговыйУчет_ПостатейныеРасходы");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляСтоимостиПрочихРасходовНЗП");
	//-- НЕ УТ
	
КонецПроцедуры

// Дополняет список этапов расчета.
// 
// Параметры:
// 	СписокЭтапов - СписокЗначений - 
//
Процедура ДополнитьЭтапыСТрансляциейПартий(СписокЭтапов) Экспорт
	
	СписокЭтапов.Добавить("ПодготовкаДанныхДляСтоимостиТоваров");
	
КонецПроцедуры

Процедура ТекстЗапросаДляРасчетаЭтапа(ИмяЭтапа, ПараметрыРасчета, ТекстЗапроса) Экспорт
	
	Если ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУ" Тогда
		ТекстЗапроса = ТекстЗапросаДляРешенияСЛУ(ПараметрыРасчета);
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУ_РезервыПодОбесценениеЗапасов" Тогда
		ТекстЗапроса = ТекстДляРешенияСЛУ_РезервыПодОбесценениеЗапасов(ПараметрыРасчета);
	//++ НЕ УТ
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляСтоимостиПартийТоваров" Тогда
		ТекстЗапроса = ТекстЗапросаДляСтоимостиПартийТоваров(ПараметрыРасчета);
	//-- НЕ УТ
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУ_ДополнительныеРасходы" Тогда
		ТекстЗапроса = ТекстДляРешенияСЛУ_ДополнительныеРасходы(ПараметрыРасчета);
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляСтоимостиТоваров" Тогда
		ТекстЗапроса = ТекстЗапросаДляСтоимостиТоваров(ПараметрыРасчета);
	//++ НЕ УТ
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы" Тогда
		ТекстЗапроса = ТекстЗапросаДляРешенияСЛУПостатейныеРасходы(ПараметрыРасчета);
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходыУчетНДС" Тогда
		ТекстЗапроса = ТекстЗапросаДляРешенияСЛУПостатейныеРасходы(ПараметрыРасчета);
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов" Тогда
		ТекстЗапроса = ТекстЗапросаДляРешенияСЛУРезервыПредстоящихРасходов(ПараметрыРасчета);
	//++ Локализация
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУНалоговыйУчет" Тогда
		ТекстЗапроса = ТекстЗапросаДляРешенияСЛУНалоговыйУчет(ПараметрыРасчета);
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУПостояннаяРазница_Этап1" Тогда
		ТекстЗапроса = ТекстЗапросаДляРешенияСЛУПостояннаяРазница(ПараметрыРасчета);
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУ_НалоговыйУчет_ПостатейныеРасходы" Тогда
		ТекстЗапроса = ТекстЗапросаДляРешенияСЛУ_НалоговыйУчет_ПостатейныеРасходы(ПараметрыРасчета);
	//-- Локализация
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляСтоимостиПрочихРасходовНЗП" Тогда
		ТекстЗапроса = ТекстЗапросаДляСтоимостиПрочихРасходовНЗП(ПараметрыРасчета);
	//-- НЕ УТ
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
