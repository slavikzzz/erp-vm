
#Область ПрограммныйИнтерфейс

#Область ПараметрыОбеспечения

// Возвращает параметры обеспечения номенклатуры
//
// Параметры:
//  Номенклатура	 - СправочникСсылка.Номенклатура - Номенклатура для которой нужно получить параметры обеспечения.
//  Характеристика	 - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика номенклатуры.
//  Подразделение	 - СправочникСсылка.СтруктураПредприятия - Подразделение для которого нужно получить параметры обеспечения.
// 
// Возвращаемое значение:
//  Структура - Содержит свойства: Склад.
//
Функция ПараметрыОбеспеченияНоменклатуры(Номенклатура, Характеристика, Подразделение) Экспорт

	ТаблицаМатериалов = Новый ТаблицаЗначений;
	ТаблицаМатериалов.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаМатериалов.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаМатериалов.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	
	СтрокаМатериал = ТаблицаМатериалов.Добавить();
	СтрокаМатериал.Номенклатура = Номенклатура; 
	СтрокаМатериал.Характеристика = Характеристика;
	СтрокаМатериал.Подразделение = Подразделение;
	
	ПараметрыОбеспечения = ПараметрыОбеспеченияСпискаНоменклатуры(ТаблицаМатериалов);
	
	НастройкаОбеспечения = Новый Структура;
	НастройкаОбеспечения.Вставить("Склад", ПараметрыОбеспечения[0].Склад);

	Возврат НастройкаОбеспечения;
	
КонецФункции

// Возвращает параметры обеспечения списка номенклатуры
//
// Параметры:
//  ТаблицаМатериалов	 - ТаблицаЗначений - содержит колонки Номенклатура, Характеристика, Подразделение
// 
// Возвращаемое значение:
//  ТаблицаЗначений - содержит колонки Склад.
//
Функция ПараметрыОбеспеченияСпискаНоменклатуры(ТаблицаМатериалов) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаМатериалов.Номенклатура КАК Справочник.Номенклатура)                 КАК Номенклатура,
	|	ВЫРАЗИТЬ(ТаблицаМатериалов.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
	|	ВЫРАЗИТЬ(ТаблицаМатериалов.Подразделение КАК Справочник.СтруктураПредприятия)        КАК Подразделение
	|ПОМЕСТИТЬ ВТТаблицаМатериалов
	|ИЗ
	|	&ТаблицаМатериалов КАК ТаблицаМатериалов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаМатериалов.Номенклатура   КАК Номенклатура,
	|	ТаблицаМатериалов.Характеристика КАК Характеристика,
	|	ТаблицаМатериалов.Подразделение КАК Подразделение,
	|	&ТекстПоляСкладМатериалов КАК Склад
	|ИЗ
	|	ВТТаблицаМатериалов КАК ТаблицаМатериалов,
	|
	|	#ТекстСоединенияДляПолученияСкладаМатериалов";
	
	ТекстЗапросаДляПолученияСклада = ТекстЗапросаНастройкиПередачиМатериалов(
		"ТаблицаМатериалов", "Подразделение", Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.ПоСхемамОбеспечения);
						
	ТекстЗапроса = СтрЗаменить(
						ТекстЗапроса, 
						"#ТекстСоединенияДляПолученияСкладаМатериалов",
						ТекстЗапросаДляПолученияСклада.ТекстСоединения);
						
	ТекстЗапроса = СтрЗаменить(
						ТекстЗапроса, 
						"&ТекстПоляСкладМатериалов",
						ТекстЗапросаДляПолученияСклада.ТекстПолеСклад);
	
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаМатериалов", ТаблицаМатериалов);
	Запрос.УстановитьПараметр("СкладПоУмолчанию", Справочники.Склады.СкладПоУмолчанию());
	
	УстановитьПривилегированныйРежим(Истина);
	ПараметрыОбеспечения = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ПараметрыОбеспечения;
	
КонецФункции

//++ НЕ УТКА

// Возвращает параметры обеспечения материала в этапе производства
//
// Параметры:
//  Номенклатура					 - СправочникСсылка.Номенклатура												 - Номенклатура для которой нужно получить параметры обеспечения.
//  Характеристика					 - СправочникСсылка.ХарактеристикиНоменклатуры									 - Характеристика номенклатуры.
//  Производится					 - Булево																		 - Признак того что материал производится (является полуфабрикатом).
//  Подразделение					 - СправочникСсылка.СтруктураПредприятия										 - Подразделение для которого нужно получить параметры обеспечения.
//  ИсточникПолученияПолуфабриката	 - СправочникСсылка.ЭтапыПроизводства, СправочникСсылка.РесурсныеСпецификации	 - Определяет как производится полуфабрикат.
//  ЗаказНаПроизводство				 - ДокументСсылка.ЗаказНаПроизводство2_2										 - Заказ на производство, для получения списка заказов давальца и поиска в них номенклатуры.
//  										Если номенклатура найдена, возвращается вариант обеспечения "Обеспечивать обособленно".
// 
// Возвращаемое значение:
//  Структура - Содержит свойства: Склад, ВариантОбеспечения.
//
Функция ПараметрыОбеспеченияМатериалаЭтапа(Номенклатура, Характеристика, Производится, Подразделение, ИсточникПолученияПолуфабриката, ЗаказНаПроизводство) Экспорт
	
	ТаблицаМатериалов = Новый ТаблицаЗначений;
	ТаблицаМатериалов.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	ТаблицаМатериалов.Колонки.Добавить("ИсточникПолученияПолуфабриката", Новый ОписаниеТипов("СправочникСсылка.ЭтапыПроизводства,СправочникСсылка.РесурсныеСпецификации"));
	ТаблицаМатериалов.Колонки.Добавить("Производится", Новый ОписаниеТипов("Булево"));
	ТаблицаМатериалов.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаМатериалов.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	
	СтрокаМатериал = ТаблицаМатериалов.Добавить();
	СтрокаМатериал.Номенклатура = Номенклатура;
	СтрокаМатериал.Характеристика = Характеристика;
	СтрокаМатериал.Производится = Производится;
	СтрокаМатериал.Подразделение = Подразделение;
	СтрокаМатериал.ИсточникПолученияПолуфабриката = ИсточникПолученияПолуфабриката;
	
	ПараметрыОбеспечения = ПараметрыОбеспеченияМатериаловЭтапа(ТаблицаМатериалов, ЗаказНаПроизводство)[0];
	
	Результат = Новый Структура("Склад, ВариантОбеспечения, Обособленно");
	ЗаполнитьЗначенияСвойств(Результат, ПараметрыОбеспечения);
	
	Возврат Результат;
	
КонецФункции

// Возвращает параметры обеспечения материалов в этапах производства
//
// Параметры:
//   ТаблицаМатериалов 	- ТаблицаЗначений - таблица материалов этапа.
//							Обязательные поля: Номенклатура, Характеристика,
//									Подразделение, Производится, ИсточникПолученияПолуфабриката
//   ЗаказНаПроизводство - ДокументСсылка.ЗаказНаПроизводство2_2 - Заказ на производство, для получения списка заказов
//                         давальца и поиска в них номенклатуры. Если номенклатура найдена, возвращается вариант
//                         обеспечения "Обеспечивать обособленно".
//
// Возвращаемое значение:
//   ТаблицаЗначений - таблица материалов дополненная колонками: Склад, ВариантОбеспечения.
//
Функция ПараметрыОбеспеченияМатериаловЭтапа(ТаблицаМатериалов, ЗаказНаПроизводство) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(МатериалыИУслуги.Номенклатура КАК Справочник.Номенклатура)                 КАК Номенклатура,
	|	ВЫРАЗИТЬ(МатериалыИУслуги.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
	|	ВЫРАЗИТЬ(МатериалыИУслуги.Производится КАК БУЛЕВО)                                  КАК Производится,
	|	ВЫРАЗИТЬ(МатериалыИУслуги.Подразделение КАК Справочник.СтруктураПредприятия)        КАК Подразделение,
	|	МатериалыИУслуги.ИсточникПолученияПолуфабриката                                     КАК ИсточникПолученияПолуфабриката,
	|	ВЫБОР 
	|		КОГДА ВЫРАЗИТЬ(МатериалыИУслуги.Производится КАК БУЛЕВО) = ИСТИНА
	|				И МатериалыИУслуги.ИсточникПолученияПолуфабриката <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации)
	|		КОГДА ВЫРАЗИТЬ(МатериалыИУслуги.Производится КАК БУЛЕВО) = ИСТИНА
	|				И МатериалыИУслуги.ИсточникПолученияПолуфабриката = ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.Обеспечивать)
	|	КОНЕЦ КАК СпособПолученияМатериала,
	|	ЛОЖЬ  КАК Обособленно
	|ПОМЕСТИТЬ ВТМатериалыИУслуги
	|ИЗ
	|	&ТаблицаМатериалов КАК МатериалыИУслуги
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|"
	+ Документы.ЗаказНаПроизводство2_2.ТекстЗапросаВтСпособыПолученияМатериалов2_2()
	+ ОбщегоНазначения.РазделительПакетаЗапросов()
	+ "
	|ВЫБРАТЬ
	|	МатериалыИУслуги.Номенклатура         КАК Номенклатура,
	|	МатериалыИУслуги.Характеристика       КАК Характеристика,
	|	&ТекстПолеСклад                       КАК Склад,
	|	&ТекстПолеВариантОбеспечения          КАК ВариантОбеспечения,
	|	&ТекстПолеОбособленно                 КАК Обособленно
	|ИЗ
	|	ВТМатериалыИУслуги КАК МатериалыИУслуги
	|
	|		// Сюда подставляется запрос для получения склада, варианта обеспечения
	|		,ТекстСоединенияПараметрыОбеспечения
	|
	//++ Устарело_Производство21
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ПроизводимоеВПроцессеИзделие
	|		ПО ПроизводимоеВПроцессеИзделие.Ссылка = МатериалыИУслуги.ИсточникПолученияПолуфабриката
	|			И МатериалыИУслуги.Производится 
	|			И ПроизводимоеВПроцессеИзделие.Номенклатура = МатериалыИУслуги.Номенклатура
	|			И (ПроизводимоеВПроцессеИзделие.Характеристика = МатериалыИУслуги.Характеристика
	|				ИЛИ ПроизводимоеВПроцессеИзделие.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	//-- Устарело_Производство21
	|";
	
	ВыполнитьПодстановкуПараметровОбеспеченияМатериалов(ТекстЗапроса,
		"МатериалыИУслуги",,,
		Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.ПоСхемамОбеспечения);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаМатериалов", ТаблицаМатериалов);
	Запрос.УстановитьПараметр("Распоряжения", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ЗаказНаПроизводство));
	Запрос.УстановитьПараметр("Распоряжение", ЗаказНаПроизводство);
	Запрос.УстановитьПараметр("Назначение", Справочники.Назначения.ПустаяСсылка());
	Запрос.УстановитьПараметр("СкладПоУмолчанию", Справочники.Склады.СкладПоУмолчанию());
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
	
	УстановитьПривилегированныйРежим(Истина);
	ПараметрыОбеспечения = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ПараметрыОбеспечения;
	
КонецФункции

// Добавляет запрос для получения данных, необходимых для заполнения обеспечения в этапе.
//
// Параметры:
//  СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.Действия
//  ОписаниеЗапроса - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОписаниеЗапроса
//  КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//
Процедура ДополнитьТекстЗапросаЗаполнитьОбеспечениеВЭтапеПроизводстваПакетно(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения) Экспорт
	
	ПараметрыДействия = Неопределено;
	
	Если ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
		"ПроверитьЗаполнитьОбеспечениеВЭтапеПроизводства",
		СтруктураДействий,
		КэшированныеЗначения) Тогда
	
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Производится   КАК Производится,
		|	Таблица.Подразделение  КАК Подразделение,
		|	Таблица.ИсточникПолученияПолуфабриката КАК ИсточникПолученияПолуфабриката,
		|	ВЫБОР 
		|		КОГДА Таблица.Производится
		|			И МатериалыИУслуги.ИсточникПолученияПолуфабриката <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации)
		|		КОГДА Таблица.Производится
		|			И МатериалыИУслуги.ИсточникПолученияПолуфабриката = ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.Обеспечивать)
		|	КОНЕЦ КАК СпособПолученияМатериала,
		|	ЛОЖЬ  КАК Обособленно
		|ПОМЕСТИТЬ ВТСтрокиКЗаполнениюОбеспечения
		|ИЗ
		|	ВтИсточникДанных КАК Таблица
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подразделение,
		|	Номенклатура,
		|	Характеристика";
		ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "ВТСтрокиКЗаполнениюОбеспечения");
		
		ТекстЗапроса = Документы.ЗаказНаПроизводство2_2.ТекстЗапросаВтСпособыПолученияМатериалов2_2();
		ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "ВтСпособыПолученияМатериалов");
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	МатериалыИУслуги.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
		|	&ТекстПолеВариантОбеспечения           КАК ВариантОбеспечения,
		|	&ТекстПолеСклад                        КАК Склад,
		|	&ТекстПолеОбособленно                  КАК Обособленно
		|ИЗ
		|	ВТСтрокиКЗаполнениюОбеспечения КАК МатериалыИУслуги
		|
		|		// Сюда подставляется запрос для получения склада, варианта обеспечения
		|		,ТекстСоединенияПараметрыОбеспечения
		|
		//++ Устарело_Производство21
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ПроизводимоеВПроцессеИзделие
		|		ПО ПроизводимоеВПроцессеИзделие.Ссылка = МатериалыИУслуги.ИсточникПолученияПолуфабриката
		|			И МатериалыИУслуги.Производится 
		|			И ПроизводимоеВПроцессеИзделие.Номенклатура = МатериалыИУслуги.Номенклатура
		|			И (ПроизводимоеВПроцессеИзделие.Характеристика = МатериалыИУслуги.Характеристика
		|				ИЛИ ПроизводимоеВПроцессеИзделие.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		//-- Устарело_Производство21
		|";
		
		ВыполнитьПодстановкуПараметровОбеспеченияМатериалов(ТекстЗапроса,
			"МатериалыИУслуги",,,
			Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.ПоСхемамОбеспечения);
		
		ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "ПараметрыОбеспеченияВЭтапеПроизводства");
		
		ОписаниеЗапроса.ПараметрыЗапроса.Вставить("Распоряжения",
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыДействия.ЗаказНаПроизводство));
		ОписаниеЗапроса.ПараметрыЗапроса.Вставить("Распоряжение", ПараметрыДействия.ЗаказНаПроизводство);
		
	КонецЕсли;
	
КонецПроцедуры

// Добавляет запрос для получения данных, необходимых для заполнения склада в производственных документах.
//
// Параметры:
//  СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.Действия
//  ОписаниеЗапроса - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОписаниеЗапроса
//  КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//
Процедура ДополнитьТекстЗапросаЗаполнитьСкладПроизводства(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения) Экспорт
	
	ПараметрыДействия = Неопределено;
	
	Если Не ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
		"ПроверитьЗаполнитьСкладПроизводства",
		СтруктураДействий,
		КэшированныеЗначения,
		ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
	|	&ТекстПоляСкладМатериалов КАК Склад
	|ИЗ
	|	ВтИсточникДанных КАК Таблица,
	|
	|	#ТекстСоединенияДляПолученияСкладаМатериалов";
	
	ТекстЗапросаДляПолученияСклада = ТекстЗапросаНастройкиПередачиМатериалов(
		"Таблица", "Подразделение", Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.ПоСхемамОбеспечения);
						
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		"#ТекстСоединенияДляПолученияСкладаМатериалов",
		ТекстЗапросаДляПолученияСклада.ТекстСоединения);
						
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		"&ТекстПоляСкладМатериалов",
		ТекстЗапросаДляПолученияСклада.ТекстПолеСклад);
	
	ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "ПараметрыЗаполненияСкладаПроизводства");
	
КонецПроцедуры

//-- НЕ УТКА

#КонецОбласти

#Область Прочее

// Функция возвращает структуру способа получения материалов по умолчанию
// 
// Возвращаемое значение:
//  Структура - способы получения материалов по умолчанию.
//
Функция СтруктураСпособыПолученияМатериаловПоУмолчанию() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Склад", ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
	Результат.Вставить("ЗаказатьНаСклад", Истина);
	Результат.Вставить("ВариантОбеспечения", ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.НеТребуется"));
	Результат.Вставить("Обособленно", Ложь);
	Результат.Вставить("Запланировать", Ложь);
	
	Результат.Вставить("ДатаПотребности", '00010101');
	
	Возврат Результат;
	
КонецФункции

// Функция возвращает пустую таблицу, для выборки способов получения материалов в производство.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица материалов.
//
Функция СоздатьИсточникВыбораСпособовПолученияМатериалов() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	
	Таблица.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0)));
	
	Таблица.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Таблица.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	
	Таблица.Колонки.Добавить("ПроизводитсяВПроцессе", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ПроизводствоНаСтороне", Новый ОписаниеТипов("Булево"));
	
	Таблица.Колонки.Добавить(
		"СпособПолученияМатериала", 
		Новый ОписаниеТипов("ПеречислениеСсылка.СпособыПолученияМатериаловВСпецификации"));
	
	Таблица.Колонки.Добавить(
		"ИсточникПолученияПолуфабриката", 
		Новый ОписаниеТипов("СправочникСсылка.ЭтапыПроизводства,СправочникСсылка.РесурсныеСпецификации"));
	
	Возврат Таблица;
	
КонецФункции

// Функция возвращает способ получения материала для этапа производства по умолчанию.
//
// Параметры:
//  ДанныеЗаказа	 - Структура - структура данных заказа:
//  	* Распоряжение           - ДокументСсылка.ЗаказНаПроизводство2_2 - заказ на производство
//  	* ПодразделениеДиспетчер - СправочникСсылка.СтруктураПредприятия - Подразделение, ответственное за выполнение заказа
//  	* Назначение             - СправочникСсылка.Назначения - назначение обособленной потребности
//  	* НачатьНеРанее          - Дата - дата, не ранее которой необходимо начать производить.
//  ДанныеМатериала	 - Структура - структура данных материала:
//  	* Подразделение          - СправочникСсылка.СтруктураПредприятия - подразделение-получатель
//  	* ПроизводствоНаСтороне  - Булево - признак, что производство выполняется на стороне
//  	* Номенклатура           - СправочникСсылка.Номенклатура - материала, для которого определяется настройка
//  	* Характеристика         - СправочникСсылка.ХарактеристикиНоменклатуры - характеристика материала, для которого определяется настройка
//   МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит временные таблицы используемые для получения способа обеспечения:
//        ВтСпособыПолученияМатериалов - Временная таблица с полями Номенклатура, Характеристика, Назначение, Склад, Обособленно.
//  ВариантЗаполненияОбеспечения	 - ПеречислениеСсылка.ВариантыЗаполненияОбеспеченияПроизводства - Вариант заполнения обеспечения
// 
// Возвращаемое значение:
//  Структура - Содержит свойства:
//  	* Склад - СправочникСсылка.Склады - Склад, с которого передаются материалы в подразделение.
//  	* ЗаказатьНаСклад - Булево - признак, материал необходимо заказать на склад
//  	* ВариантОбеспечения - ПеречислениеСсылка.ВариантыОбеспечения - вариант обеспечения
//  	* Запланировать - Булево - признак, материал возможно.
//
Функция СпособПолученияМатериалаПоУмолчанию(ДанныеЗаказа, ДанныеМатериала, МенеджерВременныхТаблиц = Неопределено, ВариантЗаполненияОбеспечения = Неопределено) Экспорт
	
	НастройкаПередачиМатериалов = СтруктураСпособыПолученияМатериаловПоУмолчанию();
	
	Если ЗначениеЗаполнено(ДанныеМатериала.Подразделение)
		И ЗначениеЗаполнено(ДанныеМатериала.Номенклатура) Тогда
		
		ТаблицаМатериалов = Новый ТаблицаЗначений;
		ТаблицаМатериалов.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
		ТаблицаМатериалов.Колонки.Добавить("ПроизводствоНаСтороне", Новый ОписаниеТипов("Булево"));
		ТаблицаМатериалов.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаМатериалов.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТаблицаМатериалов.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
		
		ЗаполнитьЗначенияСвойств(ТаблицаМатериалов.Добавить(), ДанныеМатериала);
		ЗаполнитьЗначенияСвойств(НастройкаПередачиМатериалов, СпособыПолученияМатериаловПоУмолчанию(ДанныеЗаказа,ТаблицаМатериалов,,ВариантЗаполненияОбеспечения)[0]);
		
	КонецЕсли;
	
	Возврат Новый ФиксированнаяСтруктура(НастройкаПередачиМатериалов);
	
КонецФункции

// Функция возвращает способы получения материалов для этапов производства по умолчанию.
//
// Параметры:
//   ДанныеЗаказа - Структура - структура данных заказа:
//       * Распоряжение           - ДокументСсылка.ЗаказНаПроизводство, ДокументСсылка.ЗаказНаПроизводство2_2 - заказ на
//           производство
//       * ПодразделениеДиспетчер - СправочникСсылка.СтруктураПредприятия - Подразделение, ответственное за выполнение заказа
//       * Назначение             - СправочникСсылка.Назначения - назначение обособленной потребности
//       * НачатьНеРанее          - Дата - дата, не ранее которой необходимо начать производить.
//   ТаблицаМатериалов - ТаблицаЗначений - таблица материалов этапа
//							Обязательные поля: Номенклатура, Характеристика, Подразделение, ПроизводствоНаСтороне,
//							Дополнительные поля: ПроизводитсяВПроцессе, СпособПолученияМатериала, ИсточникПолученияПолуфабриката.
//
//   МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит временные таблицы используемые для получения способа обеспечения:
//        ВтСпособыПолученияМатериалов - Временная таблица с полями Номенклатура, Характеристика, Назначение, Склад, Обособленно.
//  ВариантЗаполненияОбеспечения	 - ПеречислениеСсылка.ВариантыЗаполненияОбеспеченияПроизводства - Вариант заполнения обеспечения
//
// Возвращаемое значение:
//   - ТаблицаЗначений - таблица материалов, дополненная способами получения материалов:
//       * НомерСтроки - Число - номер строки исходной таблицы
//       * Номенклатура - СправочникСсылка.Номенклатура - материала, для которого определяется настройка
//       * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - характеристика материала, для которого
//                                                                        определяется настройка
//       * Подразделение - СправочникСсылка.СтруктураПредприятия - подразделение-получатель 
//       * ПроизводствоНаСтороне - Булево - признак, что производство выполняется на стороне
//       * Склад - СправочникСсылка.Склады - Склад, с которого передаются материалы в подразделение. 
//       * ЗаказатьНаСклад - Булево - признак, материал необходимо заказать на склад
//       * ВариантОбеспечения - ПеречислениеСсылка.ВариантыОбеспечения - вариант обеспечения
//       * Запланировать - Булево - признак, материал возможно.
//
Функция СпособыПолученияМатериаловПоУмолчанию(ДанныеЗаказа, ТаблицаМатериалов, МенеджерВременныхТаблиц = Неопределено, ВариантЗаполненияОбеспечения = Неопределено) Экспорт
	
	Если ТаблицаМатериалов.Колонки.Найти("Склад") = Неопределено Тогда
		ТаблицаМатериалов.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	КонецЕсли;
	
	ТекстЗапроса = "";
	
	Если МенеджерВременныхТаблиц = Неопределено Тогда
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВтСпособыПолученияМатериалов") = Неопределено Тогда
		ТекстЗапроса = ТекстЗапроса
			+ ТекстЗапросаВТСпособыПолученияМатериаловПустая();
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВтФорматыСкладов") = Неопределено Тогда
		ТекстЗапроса = ТекстЗапроса
			+ Справочники.ФорматыМагазинов.ТекстЗапросаВтФорматыСкладов(Ложь);
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	&ТекстПолеНомерСтроки                                                               КАК НомерСтроки,
		|	ВЫРАЗИТЬ(МатериалыИУслуги.Номенклатура КАК Справочник.Номенклатура)                 КАК Номенклатура,
		|	ВЫРАЗИТЬ(МатериалыИУслуги.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
		|	ВЫРАЗИТЬ(МатериалыИУслуги.Подразделение КАК Справочник.СтруктураПредприятия)        КАК Подразделение,
		|	ВЫРАЗИТЬ(МатериалыИУслуги.ПроизводствоНаСтороне КАК БУЛЕВО)                         КАК ПроизводствоНаСтороне,
		|	ВЫРАЗИТЬ(МатериалыИУслуги.Склад КАК Справочник.Склады)                              КАК Склад,
		|	&ТекстПолеПроизводитсяВПроцессе                                                     КАК ПроизводитсяВПроцессе,
		|	&ТекстПолеСпособПолученияМатериала                                                  КАК СпособПолученияМатериала,
		|	ЛОЖЬ                                                                                КАК Обособленно,
		|	&ТекстПолеИсточникПолученияПолуфабриката                                            КАК ИсточникПолученияПолуфабриката
		|ПОМЕСТИТЬ ВТМатериалыИУслуги
		|ИЗ
		|	&ТаблицаМатериалов КАК МатериалыИУслуги
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подразделение,
		|	Номенклатура,
		|	Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МатериалыИУслуги.НомерСтроки           КАК НомерСтроки,
		|	МатериалыИУслуги.Номенклатура          КАК Номенклатура,
		|	МатериалыИУслуги.Характеристика        КАК Характеристика,
		|	МатериалыИУслуги.Подразделение         КАК Подразделение,
		|	МатериалыИУслуги.ПроизводствоНаСтороне КАК ПроизводствоНаСтороне,
		
		// Начало. Склад
		|	ВЫБОР КОГДА МатериалыИУслуги.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) ТОГДА
		|		&ТекстПолеСклад
		|	ИНАЧЕ
		|		МатериалыИУслуги.Склад
		|	КОНЕЦ КАК Склад,
		// Конец. Склад
		
		// Начало. Заказать на склад
		|	ВЫБОР 
		|		КОГДА МатериалыИУслуги.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ИЛИ МатериалыИУслуги.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
		|																	ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
		|			ТОГДА ЛОЖЬ
		|		КОГДА МатериалыИУслуги.ПроизводитсяВПроцессе ТОГДА
		|			ВЫБОР
		//++ Устарело_Производство21 
		|				КОГДА ВЫРАЗИТЬ(МатериалыИУслуги.Подразделение КАК Справочник.СтруктураПредприятия).СпособПолученияПолуфабрикатов = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияПолуфабрикатовПроизводимыхВПроцессе.Напрямую)
		|					ТОГДА ЛОЖЬ
		//-- Устарело_Производство21
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.ЭтапыПроизводства
		|						И ВЫРАЗИТЬ(МатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.ЭтапыПроизводства).Подразделение = МатериалыИУслуги.Подразделение
		|					ТОГДА ЛОЖЬ
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.ЭтапыПроизводства
		|						И ВЫРАЗИТЬ(МатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.ЭтапыПроизводства).Подразделение <> МатериалыИУслуги.Подразделение
		|					ТОГДА ИСТИНА
		//++ Устарело_Производство21 
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.РесурсныеСпецификации
		|						И ПроизводимоеВПроцессеИзделие.Этап.Подразделение <> МатериалыИУслуги.Подразделение
		|					ТОГДА ИСТИНА
		//-- Устарело_Производство21
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ
		//++ Устарело_Производство21
		|		КОГДА &ТекстПолеОснование = ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство)
		|				ИЛИ МатериалыИУслуги.ПроизводствоНаСтороне
		|			ТОГДА ИСТИНА
		//-- Устарело_Производство21
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                                       КАК ЗаказатьНаСклад,
		// Конец. Заказать на склад

		// Начало. Вариант обеспечения
		|	&ТекстПолеВариантОбеспечения                                КАК ВариантОбеспечения,
		|	&ТекстПолеОбособленно                                       КАК Обособленно,
		// Конец. Вариант обеспечения
		
		|	&ДатаПотребности КАК ДатаПотребности,
		|	ВЫБОР
		|		КОГДА (&ПодразделениеДиспетчер = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|				ИЛИ ЕСТЬNULL(СпрСпособОбеспечения.ИсточникОбеспеченияПотребностей, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|					В (&ПодразделениеДиспетчер,
		|					   НЕОПРЕДЕЛЕНО,
		|					   ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)))
		|				И ЕСТЬNULL(СпрСпособОбеспечения.ТипОбеспечения, ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Производство)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                                       КАК Запланировать
		|ИЗ
		|	ВТМатериалыИУслуги КАК МатериалыИУслуги
		|
		|		// Сюда подставляется запрос для получения склада, варианта обеспечения
		|		,ТекстСоединенияПараметрыОбеспечения
		|
		//++ Устарело_Производство21
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ПроизводимоеВПроцессеИзделие
		|		ПО ПроизводимоеВПроцессеИзделие.Ссылка = МатериалыИУслуги.ИсточникПолученияПолуфабриката
		|			И МатериалыИУслуги.ПроизводитсяВПроцессе
		|			И ПроизводимоеВПроцессеИзделие.Номенклатура = МатериалыИУслуги.Номенклатура
		|			И (ПроизводимоеВПроцессеИзделие.Характеристика = МатериалыИУслуги.Характеристика
		|				ИЛИ ПроизводимоеВПроцессеИзделие.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		//-- Устарело_Производство21
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
		|		ПО ВЫБОР КОГДА МатериалыИУслуги.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) ТОГДА
		|				&ТекстПолеСклад
		|			ИНАЧЕ
		|				МатериалыИУслуги.Склад
		|			КОНЕЦ = СпрСклады.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОбеспеченияПотребностей КАК СпрСпособОбеспечения
		|		ПО &ПодстановкаОсновногоСпособаОбеспечения
		|";
		
	Если ТаблицаМатериалов.Колонки.Найти("ПроизводитсяВПроцессе") <> Неопределено Тогда
		ТекстПолеПроизводитсяВПроцессе = "МатериалыИУслуги.ПроизводитсяВПроцессе";
	Иначе
		ТекстПолеПроизводитсяВПроцессе = "Ложь";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеПроизводитсяВПроцессе",
		ТекстПолеПроизводитсяВПроцессе);
		
	// ТекстПолеНомерСтроки
	Если ТаблицаМатериалов.Колонки.Найти("НомерСтроки") <> Неопределено Тогда
		ТекстПолеНомерСтроки = "МатериалыИУслуги.НомерСтроки";
	Иначе
		ТекстПолеНомерСтроки = "0";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеНомерСтроки",
		ТекстПолеНомерСтроки);
		
	// ТекстПолеСпособПолученияМатериала
	Если ТаблицаМатериалов.Колонки.Найти("СпособПолученияМатериала") <> Неопределено Тогда
		ТекстПолеСпособПолученияМатериала = "МатериалыИУслуги.СпособПолученияМатериала";
	Иначе
		ТекстПолеСпособПолученияМатериала = "ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.Обеспечивать)";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеСпособПолученияМатериала",
		ТекстПолеСпособПолученияМатериала);
	
	// ТекстПолеИсточникПолученияПолуфабриката
	Если ТаблицаМатериалов.Колонки.Найти("ИсточникПолученияПолуфабриката") <> Неопределено Тогда
		ТекстПолеИсточникПолученияПолуфабриката = "МатериалыИУслуги.ИсточникПолученияПолуфабриката";
	Иначе
		ТекстПолеИсточникПолученияПолуфабриката = 
			"ВЫБОР 
			|	КОГДА ИСТИНА
			|		ТОГДА ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
			|КОНЕЦ";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеИсточникПолученияПолуфабриката",
		ТекстПолеИсточникПолученияПолуфабриката);
		
	ВыполнитьПодстановкуПараметровОбеспеченияМатериалов(ТекстЗапроса,
		"МатериалыИУслуги",
		"СпособПолученияМатериала",,
		ВариантЗаполненияОбеспечения);
		
	ПоляСоединения = "МатериалыИУслуги.Номенклатура, МатериалыИУслуги.Характеристика,СпрСклады.Ссылка";
	ИмяПараметра   = "ПодстановкаОсновногоСпособаОбеспечения";
	
	ТекстЗапроса = РегистрыСведений.СхемыОбеспечения.ПодставитьСоединениеДляПолученияСпособаОбеспечения(
		ТекстЗапроса, ИмяПараметра, ПоляСоединения);

	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("ПодразделениеДиспетчер", ДанныеЗаказа.ПодразделениеДиспетчер);
	Запрос.УстановитьПараметр("СкладПоУмолчанию", Справочники.Склады.СкладПоУмолчанию());
	
	Если ДанныеЗаказа.Свойство("ДатаПотребности") Тогда
		Запрос.УстановитьПараметр("ДатаПотребности", ДанныеЗаказа.ДатаПотребности);
	ИначеЕсли ДанныеЗаказа.Свойство("НачатьНеРанее") Тогда
		Запрос.УстановитьПараметр("ДатаПотребности", ДанныеЗаказа.НачатьНеРанее);
	Иначе
		Запрос.УстановитьПараметр("ДатаПотребности", '00010101');
	КонецЕсли;
	
	Если ДанныеЗаказа.Свойство("Распоряжение") Тогда
		Запрос.УстановитьПараметр("Распоряжение", ДанныеЗаказа.Распоряжение);
	Иначе
		Запрос.УстановитьПараметр("Распоряжение", Неопределено);
	КонецЕсли;
	
	Если ДанныеЗаказа.Свойство("Назначение") Тогда
		Запрос.УстановитьПараметр("Назначение", ДанныеЗаказа.Назначение);
	Иначе
		Запрос.УстановитьПараметр("Назначение", Справочники.Назначения.ПустаяСсылка());
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаМатериалов", ТаблицаМатериалов);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Результат = Запрос.Выполнить().Выгрузить();
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц, "ВТМатериалыИУслуги");
	
	Возврат Результат;
	
КонецФункции

//++ НЕ УТКА

// Обновляет данные при изменении обеспечения этапов производства
//
// Параметры:
//  МассивЗаказов	 - Массив			 - содержит ссылки на документы.
//
Процедура ПриИзмененииОбеспечения(МассивЗаказов) Экспорт
	
	Для каждого Элемент Из ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивЗаказов) Цикл
		Если Элемент.Ключ = "Документ.ЭтапПроизводства2_2" Тогда
			
			РегистрыСведений.СостоянияЭтаповПроизводства.ОбновитьСостояниеОбеспечения(Элемент.Значение);
			УправлениеПроизводством.ПроверитьСрокиОбеспеченияЭтапов(Элемент.Значение);
			Прервать;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//-- НЕ УТКА

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

//++ НЕ УТКА
#Область НазначениеВЭтапе

Функция ПараметрыДействияЗаполнитьНазначениеОбеспеченияВЭтапеПроизводства(Объект, ВыходныеИзделия, КешированныеЗначения = Неопределено) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("НазначениеМатериалы", Справочники.Назначения.ПустаяСсылка());
	Результат.Вставить("НазначениеПолуфабрикаты", Справочники.Назначения.ПустаяСсылка());
	
	Если ЭтоЭтапНаМногоНазначений(Объект) Тогда
		
		Если ТипЗнч(КешированныеЗначения) = Тип("Структура")
			И КешированныеЗначения.Свойство("НазначениеМатериалы") Тогда
			Результат.НазначениеМатериалы = КешированныеЗначения.НазначениеМатериалы;
		Иначе
			Если ВыходныеИзделия <> Неопределено
				И ВыходныеИзделия.Количество() > 0 Тогда
				
				ТекстЗапроса =
					"ВЫБРАТЬ
					|	Изделия.Назначение КАК Назначение,
					|	&Распоряжение      КАК Распоряжение
					|ПОМЕСТИТЬ ВТИзделия
					|ИЗ
					|	&Изделия КАК Изделия
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ВЫБОР
					|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ &ТекстПоляНазначениеМатериалов) > 1
					|			ТОГДА ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
					|		ИНАЧЕ МАКСИМУМ(&ТекстПоляНазначениеМатериалов)
					|	КОНЕЦ КАК НазначениеМатериалы
					|ИЗ
					|	ВТИзделия КАК Изделия";
				
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
					"&ТекстПоляНазначениеМатериалов",
					СтруктураЗаказаПроведениеДокументов.ТекстПоляНазначениеМатериалов(
						"Изделия.Распоряжение", "Изделия.Назначение"));
				
				Таблица = ?(ТипЗнч(ВыходныеИзделия) = Тип("ТаблицаЗначений"),
					ВыходныеИзделия.Скопировать(Новый Структура("Отменено", Ложь), "Назначение"),
					ВыходныеИзделия.Выгрузить(Новый Структура("Отменено", Ложь), "Назначение"));
				
				Запрос = Новый Запрос(ТекстЗапроса);
				Запрос.УстановитьПараметр("Изделия", Таблица);
				Запрос.УстановитьПараметр("Распоряжение", Объект.Распоряжение);
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					Результат.НазначениеМатериалы = Выборка.НазначениеМатериалы;
				КонецЕсли;
				
			ИначеЕсли ЗначениеЗаполнено(Объект.ПартияПроизводства) Тогда
				
				ТекстЗапроса =
					"ВЫБРАТЬ
					|	ВЫБОР
					|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ &ТекстПоляНазначениеМатериалов) > 1
					|			ТОГДА ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
					|		ИНАЧЕ МАКСИМУМ(&ТекстПоляНазначениеМатериалов)
					|	КОНЕЦ КАК НазначениеМатериалы
					|ИЗ
					|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Изделия
					|ГДЕ
					|	Изделия.Ссылка.ПартияПроизводства = &ПартияПроизводства
					|	И Изделия.Ссылка.Проведен
					|	И НЕ Изделия.Отменено";
				
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
					"&ТекстПоляНазначениеМатериалов",
					СтруктураЗаказаПроведениеДокументов.ТекстПоляНазначениеМатериалов(
						"Изделия.Ссылка.Распоряжение", "Изделия.Назначение"));
				
				Запрос = Новый Запрос(ТекстЗапроса);
				Запрос.УстановитьПараметр("ПартияПроизводства", Объект.ПартияПроизводства);
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					Результат.НазначениеМатериалы = Выборка.НазначениеМатериалы;
				КонецЕсли;
				
			КонецЕсли;
			Если ТипЗнч(КешированныеЗначения) = Тип("Структура") Тогда
				КешированныеЗначения.Вставить("НазначениеМатериалы", Результат.НазначениеМатериалы);
			КонецЕсли;
		КонецЕсли;
		
		Результат.НазначениеПолуфабрикаты = Объект.Назначение;
		
	Иначе
		
		Если ТипЗнч(КешированныеЗначения) = Тип("Структура")
			И КешированныеЗначения.Свойство("СхемаОбособления") Тогда
			СхемаОбособления = КешированныеЗначения.СхемаОбособления;
		Иначе
			СхемаОбособления = Документы.ЗаказНаПроизводство2_2.СхемаОбособления(
				Объект.Распоряжение,
				Объект.НазначениеПродукция);
			Если ТипЗнч(КешированныеЗначения) = Тип("Структура") Тогда
				КешированныеЗначения.Вставить("СхемаОбособления", СхемаОбособления);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СхемаОбособления.НазначениеМатериалы) Тогда
			НазначениеМатериалы = СхемаОбособления.НазначениеМатериалы;
		Иначе
			НазначениеМатериалы = Объект.Назначение;
		КонецЕсли;
		
		Если СхемаОбособления.ОбособлениеПолуфабрикатовПоНазначениюЭтаповНеИспользуется Тогда
			НазначениеПолуфабрикаты = НазначениеМатериалы;
		Иначе
			НазначениеПолуфабрикаты = Объект.Назначение;
		КонецЕсли;
		
		Результат.НазначениеМатериалы = НазначениеМатериалы;
		Результат.НазначениеПолуфабрикаты = НазначениеПолуфабрикаты;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция НазначениеОбеспеченияЭтапаПроизводстваПоСхеме(СхемаОбособления, ОбъектНазначение) Экспорт
	
	НазначениеМатериалы = ОбъектНазначение;
	НазначениеПолуфабрикаты = ОбъектНазначение;
	
	Если СхемаОбособления <> Неопределено Тогда
		Если ЗначениеЗаполнено(СхемаОбособления.НазначениеМатериалы) Тогда
			НазначениеМатериалы = СхемаОбособления.НазначениеМатериалы;
		КонецЕсли;
		Если СхемаОбособления.ОбособлениеПолуфабрикатовПоНазначениюЭтаповНеИспользуется Тогда
			НазначениеПолуфабрикаты = НазначениеМатериалы;
		КонецЕсли;
	КонецЕсли;
	
	Результат = Новый Структура();
	Результат.Вставить("НазначениеМатериалы", НазначениеМатериалы);
	Результат.Вставить("НазначениеПолуфабрикаты", НазначениеПолуфабрикаты);
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьНазначениеПолуфабрикатовВЭтапеПроизводства(Объект) Экспорт
	
	Если Объект.ДинамическаяСтруктура Тогда
		
		НазначениеПолуфабрикаты = Объект.Назначение;
		
	Иначе
		
		СхемаОбособления = Документы.ЗаказНаПроизводство2_2.СхемаОбособления(
			Объект.Распоряжение,
			Объект.НазначениеПродукция);
		
		Если СхемаОбособления.ОбособлениеПолуфабрикатовПоНазначениюЭтаповНеИспользуется Тогда
			Если ЗначениеЗаполнено(СхемаОбособления.НазначениеМатериалы) Тогда
				НазначениеПолуфабрикаты = СхемаОбособления.НазначениеМатериалы;
			Иначе
				НазначениеПолуфабрикаты = Объект.Назначение;
			КонецЕсли;
		Иначе
			НазначениеПолуфабрикаты = Объект.Назначение;
		КонецЕсли;
		
	КонецЕсли;
	
	НайденныеСтроки = Объект.ОбеспечениеМатериаламиИРаботами.НайтиСтроки(Новый Структура("Производится", Истина));
	Для каждого Строка Из НайденныеСтроки Цикл
		Строка.НазначениеОбеспечения = НазначениеПолуфабрикаты;
		Строка.Назначение = НазначениеПолуфабрикаты;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьНазначениеМатериаловСпецификации(ДанныеСпецификации, Этап, НазначенияМатериалов, НазначениеПолуфабрикаты) Экспорт
	
	СтруктураПоиска = Новый Структура("Этап", Этап);
	
	ТипСтрокиПромежуточныйПолуфабрикат = Справочники.РесурсныеСпецификации.ТипСтрокиПромежуточныйПолуфабрикат();
	
	Для Сч = 1 По 2 Цикл
		
		ИмяТаблицы = ?(Сч = 1, "ВходящиеИзделия", "МатериалыИУслуги");
		
		Если Не ДанныеСпецификации.Свойство(ИмяТаблицы) Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого Строка Из ДанныеСпецификации[ИмяТаблицы].НайтиСтроки(СтруктураПоиска) Цикл
			
			Если Строка.Производится Или Строка.ТипСтроки = ТипСтрокиПромежуточныйПолуфабрикат Тогда
				Строка.НазначениеОбеспечения = НазначениеПолуфабрикаты;
				Если Строка.Обособленно Тогда
					Строка.Назначение = Строка.НазначениеОбеспечения;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			
			База = Строка.Количество;
			
			МаксИндекс = НазначенияМатериалов.Количество()-1;
			Для Индекс = 0 По МаксИндекс Цикл
				
				ЗначенияЗаполнения = НазначенияМатериалов[Индекс];
				Если Индекс = МаксИндекс
					Или ЗначенияЗаполнения.Коэффициент = 1 Тогда
					Строка.НазначениеОбеспечения = ЗначенияЗаполнения.Назначение;
					Если Строка.Обособленно Тогда
						Строка.Назначение = Строка.НазначениеОбеспечения;
					КонецЕсли;
				Иначе
					
					Количество = Мин(Строка.Количество, Окр(База * ЗначенияЗаполнения.Коэффициент, 3));
					Если Количество = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					Если Количество = Строка.Количество Тогда
						Строка.НазначениеОбеспечения = ЗначенияЗаполнения.Назначение;
						Если Строка.Обособленно Тогда
							Строка.Назначение = Строка.НазначениеОбеспечения;
						КонецЕсли;
						Прервать;
					Иначе
						НоваяСтрока = ДанныеСпецификации[ИмяТаблицы].Вставить(
							ДанныеСпецификации[ИмяТаблицы].Индекс(Строка));
						ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка,, "Количество, КоличествоУпаковок");
						НоваяСтрока.НазначениеОбеспечения = ЗначенияЗаполнения.Назначение;
						Если НоваяСтрока.Обособленно Тогда
							НоваяСтрока.Назначение = НоваяСтрока.НазначениеОбеспечения;
						КонецЕсли;
						НоваяСтрока.Количество = Количество;
						НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Количество
							* НоваяСтрока.ДанныеУпаковки.Знаменатель / НоваяСтрока.ДанныеУпаковки.Числитель;
						
						Строка.Количество = Строка.Количество - Количество;
						Строка.КоличествоУпаковок = Строка.Количество
							* Строка.ДанныеУпаковки.Знаменатель / Строка.ДанныеУпаковки.Числитель;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция КоэффицентыНазначенийОбеспеченияВЭтапеПроизводства(Объект, ВыходныеИзделия) Экспорт
	
	Если Не ЭтоЭтапНаМногоНазначений(Объект) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый Массив;
	
	Если ВыходныеИзделия.Количество() > 0 Тогда
		ТекстыЗапроса.Добавить(
			"ВЫБРАТЬ
			|	&Распоряжение          КАК Распоряжение,
			|	&Спецификация          КАК Спецификация,
			|	ВЫРАЗИТЬ(Изделия.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
			|	Изделия.Характеристика КАК Характеристика,
			|	Изделия.Назначение     КАК Назначение,
			|	Изделия.Количество     КАК Количество
			|ПОМЕСТИТЬ ВТИзделия
			|ИЗ
			|	&Изделия КАК Изделия");
		Запрос.УстановитьПараметр("Изделия", ВыходныеИзделия);
		Запрос.УстановитьПараметр("Распоряжение", Объект.Распоряжение);
		Запрос.УстановитьПараметр("Спецификация", Объект.Спецификация);
	ИначеЕсли ЗначениеЗаполнено(Объект.ПартияПроизводства) Тогда
		ТекстыЗапроса.Добавить(
			"ВЫБРАТЬ
			|	Изделия.Ссылка.Распоряжение КАК Распоряжение,
			|	Изделия.Ссылка.Спецификация КАК Спецификация,
			|	Изделия.Номенклатура        КАК Номенклатура,
			|	Изделия.Характеристика      КАК Характеристика,
			|	Изделия.Назначение          КАК Назначение,
			|	Изделия.Количество          КАК Количество
			|ПОМЕСТИТЬ ВТИзделия
			|ИЗ
			|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Изделия
			|ГДЕ
			|	Изделия.Ссылка.ПартияПроизводства = &ПартияПроизводства
			|	И Изделия.Ссылка.Проведен
			|	И НЕ Изделия.Отменено");
		Запрос.УстановитьПараметр("ПартияПроизводства", Объект.ПартияПроизводства);
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	&ТекстПоляНазначениеМатериалов КАК Назначение,
		|	СУММА(
		|		ВЫБОР
		|			КОГДА СпецификацииИзделий.КоличествоУпаковокНаЕдиницуПартииЗапуска * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 0
		|				ТОГДА 0
		|			ИНАЧЕ Изделия.Количество / СпецификацииИзделий.КоличествоУпаковокНаЕдиницуПартииЗапуска * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1)
		|		КОНЕЦ)                     КАК Количество
		|ПОМЕСТИТЬ ВТНазначения
		|ИЗ
		|	ВТИзделия КАК Изделия
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпецификацииИзделий КАК СпецификацииИзделий
		|	ПО Изделия.Спецификация = СпецификацииИзделий.Спецификация
		|		И Изделия.Номенклатура.ВидНоменклатуры = СпецификацииИзделий.ВидНоменклатуры
		|		И СпецификацииИзделий.Номенклатура   В (Изделия.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|		И СпецификацииИзделий.Характеристика В (Изделия.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|
		|СГРУППИРОВАТЬ ПО
		|	&ТекстПоляНазначениеМатериалов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(НазначенияПартий.Количество)  КАК Количество
		|ПОМЕСТИТЬ ВТНазначенияИтоги
		|ИЗ
		|	ВТНазначения КАК НазначенияПартий
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Назначения.Назначение КАК Назначение,
		|	Назначения.Количество / НазначенияИтоги.Количество КАК Коэффициент
		|ИЗ
		|	ВТНазначения КАК Назначения
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНазначенияИтоги КАК НазначенияИтоги
		|	ПО ИСТИНА
		|ГДЕ
		|	Назначения.Количество <> 0");
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ";");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстПоляНазначениеМатериалов",
		СтруктураЗаказаПроведениеДокументов.ТекстПоляНазначениеМатериалов(
			"Изделия.Распоряжение", "Изделия.Назначение"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"СпецификацииИзделий.Упаковка", "СпецификацииИзделий.Номенклатура"));
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ЗаполнитьСписокВыбораНазначенийВЭтапеПроизводства(Объект, ВыходныеИзделия, СписокВыбора, КешированныеЗначения = Неопределено) Экспорт
	
	СписокВыбора.Очистить();
	
	Если ЭтоЭтапНаМногоНазначений(Объект) Тогда
		
		Если ТипЗнч(КешированныеЗначения) = Тип("Структура")
			И КешированныеЗначения.Свойство("Назначения") Тогда
			СписокВыбора.ЗагрузитьЗначения(КешированныеЗначения.Назначения);
		Иначе
			Если ВыходныеИзделия <> Неопределено
				И ВыходныеИзделия.Количество() > 0 Тогда
				
				ТекстЗапроса =
					"ВЫБРАТЬ
					|	Изделия.Назначение КАК Назначение,
					|	&Распоряжение      КАК Распоряжение
					|ПОМЕСТИТЬ ВТИзделия
					|ИЗ
					|	&Изделия КАК Изделия
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	&ТекстПоляНазначениеМатериалов КАК Назначение
					|ИЗ
					|	ВТИзделия КАК Изделия";
				
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
					"&ТекстПоляНазначениеМатериалов",
					СтруктураЗаказаПроведениеДокументов.ТекстПоляНазначениеМатериалов(
						"Изделия.Распоряжение", "Изделия.Назначение"));
				
				Таблица = ?(ТипЗнч(ВыходныеИзделия) = Тип("ТаблицаЗначений"),
					ВыходныеИзделия.Скопировать(Новый Структура("Отменено", Ложь), "Назначение"),
					ВыходныеИзделия.Выгрузить(Новый Структура("Отменено", Ложь), "Назначение"));
				
				Запрос = Новый Запрос(ТекстЗапроса);
				Запрос.УстановитьПараметр("Изделия", Таблица);
				Запрос.УстановитьПараметр("Распоряжение", Объект.Распоряжение);
				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					СписокВыбора.Добавить(Выборка.Назначение);
				КонецЦикла;
				
			ИначеЕсли ЗначениеЗаполнено(Объект.ПартияПроизводства) Тогда
				
				ТекстЗапроса =
					"ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	&ТекстПоляНазначениеМатериалов КАК Назначение
					|ИЗ
					|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Изделия
					|ГДЕ
					|	Изделия.Ссылка.ПартияПроизводства = &ПартияПроизводства
					|	И Изделия.Ссылка.Проведен
					|	И НЕ Изделия.Отменено";
				
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
					"&ТекстПоляНазначениеМатериалов",
					СтруктураЗаказаПроведениеДокументов.ТекстПоляНазначениеМатериалов(
						"Изделия.Ссылка.Распоряжение", "Изделия.Назначение"));
				
				Запрос = Новый Запрос(ТекстЗапроса);
				Запрос.УстановитьПараметр("ПартияПроизводства", Объект.ПартияПроизводства);
				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					СписокВыбора.Добавить(Выборка.Назначение);
				КонецЦикла;
				
			КонецЕсли;
			
			Если ТипЗнч(КешированныеЗначения) = Тип("Структура") Тогда
				КешированныеЗначения.Вставить("Назначения", СписокВыбора.ВыгрузитьЗначения());
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Если ТипЗнч(КешированныеЗначения) = Тип("Структура")
			И КешированныеЗначения.Свойство("СхемаОбособления") Тогда
			СхемаОбособления = КешированныеЗначения.СхемаОбособления;
		Иначе
			СхемаОбособления = Документы.ЗаказНаПроизводство2_2.СхемаОбособления(
				Объект.Распоряжение,
				Объект.НазначениеПродукция);
			Если ТипЗнч(КешированныеЗначения) = Тип("Структура") Тогда
				КешированныеЗначения.Вставить("СхемаОбособления", СхемаОбособления);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СхемаОбособления.НазначениеМатериалы) Тогда
			СписокВыбора.Добавить(СхемаОбособления.НазначениеМатериалы);
		Иначе
			СписокВыбора.Добавить(Объект.Назначение);
		КонецЕсли;
		
	КонецЕсли;
	
	Если СписокВыбора.НайтиПоЗначению(Объект.Назначение) = Неопределено Тогда
		СписокВыбора.Добавить(Объект.Назначение);
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоЭтапНаМногоНазначений(Объект)
	
	Возврат Объект.ДинамическаяСтруктура 
		И Не ЗначениеЗаполнено(Объект.НазначениеПродукция)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Распоряжение, "УкрупненныйЗаказПоНазначениямПродукции");
	
КонецФункции

#КонецОбласти
//-- НЕ УТКА

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ НЕ УТКА

#Область Действия

Процедура ЗаполнитьСкладВСтрокеЭтапаПроизводства(ТекущаяСтрока, ПараметрыДействия) Экспорт
	
	ПараметрыОбеспечения = ОбеспечениеПроизводства.ПараметрыОбеспеченияНоменклатуры(
								ТекущаяСтрока.Номенклатура,
								ТекущаяСтрока.Характеристика,
								ПараметрыДействия.Подразделение);
								
	СписокПолей = СтрРазделить(ПараметрыДействия.ИмяПоляСклад, ",");
	Для каждого ИмяПоляСклад Из СписокПолей Цикл
		ТекущаяСтрока[ИмяПоляСклад] = ПараметрыОбеспечения.Склад;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

//-- НЕ УТКА

#Область ТекстыЗапросов

// Возвращает текст запроса с помощью которого можно получить склад материалов.
//
// Параметры:
//  ИмяТаблицыМатериалы			 - Строка - Псевдоним таблицы "материалов". Таблица должна содержать
//		поля Номенклатура, Характеристика, Подразделение (не обязательно).
//  ИмяПоляПодразделение		 - Строка - Имя поля "Подразделение" в таблице материалов.
//		Если подразделение определяется параметром, то перед именем нужно добавить "&".
//  ВариантЗаполненияОбеспечения	 - ПеречислениеСсылка.ВариантыЗаполненияОбеспеченияПроизводства - Вариант заполнения обеспечения
// 
// Возвращаемое значение:
//  Структура - содержит тексты запросов:
//  	* ТекстПолеСклад - Строка - текст для получения поля "Склад".
//++ Устарело_Производство21
//  	* ТекстПолеОснование - Строка - текст для получения поля "ОснованиеДляПолучения".
//-- Устарело_Производство21
//  	* ТекстСоединения - Строка - текст соединений.
//
Функция ТекстЗапросаНастройкиПередачиМатериалов(ИмяТаблицыМатериалы, ИмяПоляПодразделение = Неопределено, ВариантЗаполненияОбеспечения = Неопределено) Экспорт
	
	Если ВариантЗаполненияОбеспечения = Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.НеЗаполнять Тогда
		
		ТекстПолеСклад     = "ЛОЖЬ";
		//++ Устарело_Производство21
		ТекстПолеОснование = "ЛОЖЬ";
		//-- Устарело_Производство21
		ТекстСоединения    = "";
		
	Иначе
		
		//++ Устарело_Производство21	
		Если ВариантЗаполненияОбеспечения = Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.ПоСхемамОбеспечения Тогда
		//-- Устарело_Производство21	
			
			ТекстПолеСклад = 
			"ВЫБОР
			|	КОГДА ЕСТЬNULL(НастройкаДетальная.МетодОбеспеченияПотребностей, 
			|			ЕСТЬNULL(НастройкаГруппировки.МетодОбеспеченияПотребностей, 
			|			ЕСТЬNULL(НастройкаОбщая.МетодОбеспеченияПотребностей, 
			|			ЕСТЬNULL(НастройкаГруппировкиОбщейНастройки.МетодОбеспеченияПотребностей, NULL)))) В (
			|					ЗНАЧЕНИЕ(Перечисление.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаМинМакс),
			|					ЗНАЧЕНИЕ(Перечисление.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаНаСрокПоНорме),
			|					ЗНАЧЕНИЕ(Перечисление.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаНаСрокПоСтатистике))
			|		ТОГДА ЕСТЬNULL(НастройкаДетальная.Склад, 
			|			ЕСТЬNULL(ПринадлежностьГруппе.Склад, 
			|			ЕСТЬNULL(НастройкаОбщая.Склад, 
			|			ЕСТЬNULL(ПринадлежностьГруппеОбщейНастройки.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))))
			|	ИНАЧЕ ЕСТЬNULL(СхемыОбеспеченияПроизводства.Склад, &СкладПоУмолчанию)
			|КОНЕЦ";
			
			//++ Устарело_Производство21
			ТекстПолеОснование = 
				"ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство)";
			//-- Устарело_Производство21
			
			ТекстСоединения = "
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспеченияПроизводства КАК СхемыОбеспеченияПроизводства
			|		ПО ТаблицаМатериалы.Номенклатура.СхемаОбеспечения = СхемыОбеспеченияПроизводства.СхемаОбеспечения
			|			И ТаблицаМатериалы.Подразделение = СхемыОбеспеченияПроизводства.Подразделение
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
			|		ПО &ПодстановкаТоварногоОграничения";
			
			ПоляСоединенияТоварныеОграничения = 
				"ТаблицаМатериалы.Номенклатура,ТаблицаМатериалы.Характеристика,ТаблицаМатериалы.Подразделение";
			
			ТекстСоединения = РегистрыСведений.ТоварныеОграничения.ПодставитьСоединениеПоддержанияЗапасовВКладовых(
									ТекстСоединения, "ПодстановкаТоварногоОграничения", ПоляСоединенияТоварныеОграничения);
		//++ Устарело_Производство21
		Иначе
			
			ТекстПолеСклад = 
			"ЕСТЬNULL(НастройкаПередачиХарактеристика.Склад,
			|				ЕСТЬNULL(НастройкаПередачиНоменклатура.Склад, 
			|				ЕСТЬNULL(НастройкаПередачиСклад.Склад, &СкладПоУмолчанию)))";
			
			ТекстПолеОснование = 
			"ЕСТЬNULL(НастройкаПередачиХарактеристика.ОснованиеДляПолучения,
			|				ЕСТЬNULL(НастройкаПередачиНоменклатура.ОснованиеДляПолучения,
			|				ЕСТЬNULL(НастройкаПередачиСклад.ОснованиеДляПолучения,
			|						ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство))))";
						
			ТекстСоединения = "
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиМатериаловВПроизводство КАК НастройкаПередачиХарактеристика
			|		ПО ТаблицаМатериалы.Подразделение = НастройкаПередачиХарактеристика.Подразделение
			|			И ТаблицаМатериалы.Номенклатура = НастройкаПередачиХарактеристика.Номенклатура
			|			И ТаблицаМатериалы.Характеристика = НастройкаПередачиХарактеристика.Характеристика
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиМатериаловВПроизводство КАК НастройкаПередачиНоменклатура
			|		ПО ТаблицаМатериалы.Подразделение = НастройкаПередачиНоменклатура.Подразделение
			|			И ТаблицаМатериалы.Номенклатура = НастройкаПередачиНоменклатура.Номенклатура
			|			И (НастройкаПередачиНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиМатериаловВПроизводство КАК НастройкаПередачиСклад
			|		ПО ТаблицаМатериалы.Подразделение = НастройкаПередачиСклад.Подразделение
			|			И (НастройкаПередачиСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
			|			И (НастройкаПередачиСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
			|			И (НастройкаПередачиХарактеристика.Подразделение ЕСТЬ NULL )
			|			И (НастройкаПередачиНоменклатура.Подразделение ЕСТЬ NULL )";
			
		КонецЕсли;
		//-- Устарело_Производство21
		
		Если ИмяПоляПодразделение <> Неопределено Тогда
			Если Лев(ИмяПоляПодразделение, 1) = "&" Тогда
				ТекстСоединения = СтрЗаменить(ТекстСоединения, "ТаблицаМатериалы.Подразделение", ИмяПоляПодразделение);
			ИначеЕсли ИмяПоляПодразделение <> "Подразделение" Тогда
				ТекстСоединения = СтрЗаменить(ТекстСоединения, "ТаблицаМатериалы.Подразделение", "ТаблицаМатериалы." + ИмяПоляПодразделение);
			КонецЕсли; 
		КонецЕсли;
		
		Если ИмяТаблицыМатериалы <> "ТаблицаМатериалы" Тогда
			ТекстПолеСклад  = СтрЗаменить(ТекстПолеСклад,  "ТаблицаМатериалы", ИмяТаблицыМатериалы);
			ТекстСоединения = СтрЗаменить(ТекстСоединения, "ТаблицаМатериалы", ИмяТаблицыМатериалы);
		КонецЕсли;
		
	КонецЕсли;
	
	ШаблоныЗапроса = Новый Структура;
	ШаблоныЗапроса.Вставить("ТекстПолеСклад",     ТекстПолеСклад);
	//++ Устарело_Производство21
	ШаблоныЗапроса.Вставить("ТекстПолеОснование", ТекстПолеОснование);
	//-- Устарело_Производство21
	ШаблоныЗапроса.Вставить("ТекстСоединения",    ТекстСоединения);
	
	Возврат ШаблоныЗапроса;
	
КонецФункции

// Формирует текст запроса инициализирующий временную таблицу ВтСпособыПолученияМатериалов.
// 
// Возвращаемое значение:
//   - Строка - текст запроса
//
Функция ТекстЗапросаВТСпособыПолученияМатериаловПустая() Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)      КАК Распоряжение,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)                 КАК Назначение,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)               КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                     КАК Склад,
		|	ИСТИНА                                                       КАК Обособленно
		|ПОМЕСТИТЬ ВтСпособыПолученияМатериалов
		|ГДЕ
		|	ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует текст запроса для получения полей Склад, ВариантОбеспечения
//
// Параметры:
//  ИмяТаблицыМатериалы			 - Строка - Псевдоним таблицы "материалов". Таблица должна содержать
//		поля Номенклатура, Характеристика, Подразделение (не обязательно).
//  ИмяПоляСпособПолученияМатериала	 - Строка - имя поля в котором содержится способ получения.
//  ИмяПоляПодразделение			 - Строка - имя поля в котором содержится ссылка на подразделение,
//		например "Этап.Подразделение".
//  ВариантЗаполненияОбеспечения	 - ПеречислениеСсылка.ВариантыЗаполненияОбеспеченияПроизводства - Вариант заполнения обеспечения
// 
// Возвращаемое значение:
//  Структура - содержит тексты запросов:
//  	* ТекстПолеСклад - Строка - текст для получения поля "Склад".
//  	* ТекстПолеВариантОбеспечения - Строка - текст для получения поля "ВариантОбеспечения".
//++ Устарело_Производство21
//  	* ТекстПолеОснование - Строка - текст для получения поля "ОснованиеДляПолучения".
//-- Устарело_Производство21
//  	* ТекстСоединения - Строка - текст соединений.
//
Функция ТекстЗапросаПараметрыОбеспечения(ИмяТаблицыМатериалы, ИмяПоляСпособПолученияМатериала = Неопределено, ИмяПоляПодразделение = Неопределено, ВариантЗаполненияОбеспечения = Неопределено)
	
	Если ВариантЗаполненияОбеспечения = Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.НеЗаполнять Тогда
		
		ТекстПолеСклад              = "ЛОЖЬ";
		ТекстПолеВариантОбеспечения = "ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)";
		ТекстПолеОбособленно        = "ЛОЖЬ";
		//++ Устарело_Производство21
		ТекстПолеОснование          = "ЛОЖЬ";
		//-- Устарело_Производство21
		ТекстСоединения             = "";
		
	Иначе
		
		//++ Устарело_Производство21
		Если ВариантЗаполненияОбеспечения = Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.ПоСхемамОбеспечения Тогда
		//-- Устарело_Производство21
			
			// В версии 2.2. 
			// - ПФ всегда идут через склад
			// - Для получения склада используются схемы обеспечения
			
			// Склад
			#Область ТекстПолеСклад
			ТекстПолеСклад =
			"ВЫБОР
			|		КОГДА МатериалыИУслуги.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|				ИЛИ ВЫРАЗИТЬ(МатериалыИУслуги.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры В (
			|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
			|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
			|		КОГДА НЕ ПереопределениеОбеспечения1.Склад ЕСТЬ NULL
			|				И ПереопределениеОбеспечения1.Склад <> НЕОПРЕДЕЛЕНО
			|			ТОГДА ПереопределениеОбеспечения1.Склад
			|		ИНАЧЕ &ТекстПоляСкладМатериалов
			|	КОНЕЦ";
			#КонецОбласти
			
			// ВариантОбеспечения
			#Область ТекстПолеВариантОбеспечения
			
			ТекстПолеВариантОбеспечения = 
			"ВЫБОР
			|		КОГДА МатериалыИУслуги.СпособПолученияМатериала В (ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации),
			|															ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе)) ТОГДА
			|
			|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению)
			|			
			|		КОГДА МатериалыИУслуги.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.Обеспечивать)
			|				И МатериалыИУслуги.Обособленно ТОГДА
			|
			|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению)
			|
			|		КОГДА МатериалыИУслуги.Номенклатура.ОбособленнаяЗакупкаПродажа ТОГДА
			|
			|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению)
			|
			|		КОГДА МатериалыИУслуги.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
			|																ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) ТОГДА
			|			
			|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
			|
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению)
			|	
			|	КОНЕЦ";
			
			#КонецОбласти
		
			// Обособленно
			#Область Обособленно
			
			ТекстПолеОбособленно =
			"ВЫБОР
			|		КОГДА МатериалыИУслуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара) ТОГДА
			|			
			|			ЛОЖЬ
			|		
			|		КОГДА НЕ ПереопределениеОбеспечения1.Обособленно ЕСТЬ NULL
			|			И ПереопределениеОбеспечения1.Обособленно <> НЕОПРЕДЕЛЕНО ТОГДА
			|
			|			ПереопределениеОбеспечения1.Обособленно
			|		
			|		КОГДА НЕ ПереопределениеОбеспечения2.Обособленно ЕСТЬ NULL
			|			И ПереопределениеОбеспечения2.Обособленно <> НЕОПРЕДЕЛЕНО ТОГДА
			|
			|			ПереопределениеОбеспечения2.Обособленно
			|
			|		КОГДА МатериалыИУслуги.Номенклатура.ОбособленнаяЗакупкаПродажа ТОГДА
			|
			|			ИСТИНА
			|
			|		КОГДА МатериалыИУслуги.Обособленно ТОГДА
			|
			|			ИСТИНА
			|";
			
			//++ НЕ УТКА
			Если НЕ ПолучитьФункциональнуюОпцию("ДинамическаяСтруктураЗаказовНаПроизводство") Тогда
				ТекстПолеОбособленно = ТекстПолеОбособленно + "
				|
				|		КОГДА МатериалыИУслуги.СпособПолученияМатериала В (ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации),
				|															ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе)) ТОГДА
				|			ИСТИНА
				|		
				|		ИНАЧЕ ЛОЖЬ
				|	
				|	КОНЕЦ";
			Иначе
			//-- НЕ УТКА
				ТекстПолеОбособленно = ТекстПолеОбособленно + "
				|		
				|		ИНАЧЕ ЛОЖЬ
				|	
				|	КОНЕЦ";
			//++ НЕ УТКА
			КонецЕсли;
			//-- НЕ УТКА
			
			#КонецОбласти
		//++ Устарело_Производство21
		Иначе // По настройкам передачи в производство
			
			// Склад
			#Область ТекстПолеСклад
			ТекстПолеСклад =
			"ВЫБОР 
			|		КОГДА МатериалыИУслуги.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|			ИЛИ МатериалыИУслуги.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
			|																ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
			|		КОГДА НЕ ПереопределениеОбеспечения.Склад ЕСТЬ NULL ТОГДА
			|			ПереопределениеОбеспечения.Склад";
			
			Если ИмяПоляСпособПолученияМатериала <> Неопределено Тогда
				ТекстПолеСклад = ТекстПолеСклад + "
				|		КОГДА МатериалыИУслуги.СпособПолученияМатериала В (ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации),
				|															ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе)) ТОГДА
				|			ВЫБОР
				|				КОГДА СпрПодразделение.СпособПолученияПолуфабрикатов = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияПолуфабрикатовПроизводимыхВПроцессе.Напрямую)
				|					ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
				|				КОГДА МатериалыИУслуги.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе)
				|						И ВЫРАЗИТЬ(МатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.ЭтапыПроизводства).Подразделение = МатериалыИУслуги.Подразделение
				|					ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
				|				КОГДА МатериалыИУслуги.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе)
				|						И ВЫРАЗИТЬ(МатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.ЭтапыПроизводства).Подразделение <> МатериалыИУслуги.Подразделение
				|					ТОГДА &ТекстПоляСкладМатериалов
				|				КОГДА МатериалыИУслуги.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации)
				|						И ПроизводимоеВПроцессеИзделие.Этап.Подразделение <> МатериалыИУслуги.Подразделение
				|					ТОГДА &ТекстПоляСкладМатериалов
				|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
				|			КОНЕЦ";
			КонецЕсли; 
			
			Если ВариантЗаполненияОбеспечения = Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.ПоНастройкамПередачиВПроизводствоДляПланов Тогда
				
				ТекстПолеСклад = ТекстПолеСклад + "
				|		ИНАЧЕ &ТекстПоляСкладМатериалов
				|	КОНЕЦ";
				
			Иначе
				
				ТекстПолеСклад = ТекстПолеСклад + "
				|		КОГДА &ТекстПолеОснование = ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство)
				|			ТОГДА &ТекстПоляСкладМатериалов
				|		КОГДА ИСТИНА
				|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
				|	КОНЕЦ";
				
			КонецЕсли;
			#КонецОбласти
			
			// ВариантОбеспечения
			#Область ТекстПолеВариантОбеспечения
			ТекстПолеВариантОбеспечения = "ВЫБОР";
			ТекстПолеОбособленно = "ВЫБОР";
			Если ИмяПоляСпособПолученияМатериала <> Неопределено Тогда
				ТекстПолеВариантОбеспечения = ТекстПолеВариантОбеспечения + "
				|		КОГДА МатериалыИУслуги.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.Обеспечивать)
				|				И МатериалыИУслуги.Обособленно
				|
				|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению)
				|
				|		КОГДА МатериалыИУслуги.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
				|																ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) ТОГДА
				|			
				|			ВЫБОР 
				|				КОГДА МатериалыИУслуги.Номенклатура.ОбособленнаяЗакупкаПродажа 
				|						ИЛИ МатериалыИУслуги.СпособПолученияМатериала В (ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации),
				|																			ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе))
				|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению)
				|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
				|			КОНЕЦ
				|			
				|		КОГДА МатериалыИУслуги.СпособПолученияМатериала В (ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации),
				|															ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе)) ТОГДА
				|			ВЫБОР
				|				КОГДА МатериалыИУслуги.Подразделение.СпособПолученияПолуфабрикатов = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияПолуфабрикатовПроизводимыхВПроцессе.Напрямую)
				|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
				|				КОГДА МатериалыИУслуги.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе)
				|						И ВЫРАЗИТЬ(МатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.ЭтапыПроизводства).Подразделение = МатериалыИУслуги.Подразделение
				|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
				|				КОГДА МатериалыИУслуги.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе)
				|						И ВЫРАЗИТЬ(МатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.ЭтапыПроизводства).Подразделение <> МатериалыИУслуги.Подразделение
				|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению)
				|				КОГДА МатериалыИУслуги.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации)
				|						И ПроизводимоеВПроцессеИзделие.Этап.Подразделение <> МатериалыИУслуги.Подразделение
				|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению)
				|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
				|			КОНЕЦ";
				
				ТекстПолеОбособленно = ТекстПолеОбособленно + "
				|		КОГДА МатериалыИУслуги.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.Обеспечивать)
				|				И МатериалыИУслуги.Обособленно
				|	
				|			ТОГДА ИСТИНА
				|		
				|		КОГДА МатериалыИУслуги.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
				|																ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) ТОГДА
				|			
				|			ВЫБОР 
				|				КОГДА МатериалыИУслуги.Номенклатура.ОбособленнаяЗакупкаПродажа 
				|						ИЛИ МатериалыИУслуги.СпособПолученияМатериала В (ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации),
				|																			ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе))
				|					ТОГДА ИСТИНА
				|				ИНАЧЕ ЛОЖЬ
				|			КОНЕЦ
				|			
				|		КОГДА МатериалыИУслуги.СпособПолученияМатериала В (ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации),
				|															ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе))
				|		
				|			ТОГДА ИСТИНА
				|			
				|";
			КонецЕсли;
			
			ТекстПолеВариантОбеспечения = ТекстПолеВариантОбеспечения + "
			|
			|		КОГДА МатериалыИУслуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара) ТОГДА
			|			
			|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению)
			|			
			|		КОГДА НЕ ПереопределениеОбеспечения.Номенклатура ЕСТЬ NULL ТОГДА
			|
			|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению)
			|		
			|		КОГДА МатериалыИУслуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
			|				И &ТекстПолеОснование = ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство) ТОГДА
			|		
			|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению)
			|	
			|		ИНАЧЕ
			|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
			|	КОНЕЦ";
			
			ТекстПолеОбособленно = ТекстПолеОбособленно + "
			|
			|		КОГДА МатериалыИУслуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара) ТОГДА
			|			
			|			ЛОЖЬ
			|		
			|		КОГДА НЕ ПереопределениеОбеспечения.Номенклатура ЕСТЬ NULL ТОГДА
			|
			|			ПереопределениеОбеспечения.Обособленно
			|		
			|		КОГДА МатериалыИУслуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
			|				И &ТекстПолеОснование = ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство) ТОГДА
			|		
			|			МатериалыИУслуги.Номенклатура.ОбособленнаяЗакупкаПродажа 
			|	
			|		ИНАЧЕ
			|			ЛОЖЬ
			|	КОНЕЦ";
			
			#КонецОбласти
			
		КонецЕсли;
		//-- Устарело_Производство21
		
		ТекстЗапросаДляПолученияСклада = ТекстЗапросаНастройкиПередачиМатериалов(
											ИмяТаблицыМатериалы, 
											ИмяПоляПодразделение,
											ВариантЗаполненияОбеспечения);
											
		ТекстПолеСклад = СтрЗаменить(
							ТекстПолеСклад, 
							"&ТекстПоляСкладМатериалов",
							ТекстЗапросаДляПолученияСклада.ТекстПолеСклад);
		
		//++ Устарело_Производство21
		ТекстПолеОснование = ТекстЗапросаДляПолученияСклада.ТекстПолеОснование;
							
		ТекстПолеСклад = СтрЗаменить(
							ТекстПолеСклад, 
							"&ТекстПолеОснование",
							ТекстПолеОснование);
		
		ТекстПолеВариантОбеспечения = СтрЗаменить(
							ТекстПолеВариантОбеспечения, 
							"&ТекстПолеОснование",
							ТекстПолеОснование);
		
		ТекстПолеОбособленно = СтрЗаменить(
							ТекстПолеОбособленно, 
							"&ТекстПолеОснование",
							ТекстПолеОснование);
		//-- Устарело_Производство21
		
		//++ Устарело_Производство21
		Если ВариантЗаполненияОбеспечения = Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.ПоСхемамОбеспечения Тогда
		//-- Устарело_Производство21
			
			ТекстСоединения = ТекстЗапросаДляПолученияСклада.ТекстСоединения + " 
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСпособыПолученияМатериалов КАК ПереопределениеОбеспечения1
			|		ПО ПереопределениеОбеспечения1.Номенклатура = МатериалыИУслуги.Номенклатура
			|			И ПереопределениеОбеспечения1.Характеристика = МатериалыИУслуги.Характеристика
			|			И ПереопределениеОбеспечения1.Распоряжение = &Распоряжение
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСпособыПолученияМатериалов КАК ПереопределениеОбеспечения2
			|		ПО ПереопределениеОбеспечения2.Распоряжение = &Распоряжение
			|			И ПереопределениеОбеспечения2.Номенклатура = НЕОПРЕДЕЛЕНО
			|			И ПереопределениеОбеспечения2.Характеристика = НЕОПРЕДЕЛЕНО
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК СпрПодразделение
			|		ПО СпрПодразделение.Ссылка = МатериалыИУслуги.Подразделение";
		
		//++ Устарело_Производство21
		Иначе
			
			ТекстСоединения = ТекстЗапросаДляПолученияСклада.ТекстСоединения + " 
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСпособыПолученияМатериалов КАК ПереопределениеОбеспечения
			|		ПО ПереопределениеОбеспечения.Номенклатура = МатериалыИУслуги.Номенклатура
			|			И ПереопределениеОбеспечения.Характеристика = МатериалыИУслуги.Характеристика
			|			И ПереопределениеОбеспечения.Распоряжение = &Распоряжение
			|			И ПереопределениеОбеспечения.Назначение = &Назначение
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК СпрПодразделение
			|		ПО СпрПодразделение.Ссылка = МатериалыИУслуги.Подразделение";
			
		КонецЕсли;
		//-- Устарело_Производство21
		
		Если ИмяПоляСпособПолученияМатериала <> Неопределено 
			И ИмяПоляСпособПолученияМатериала <> "СпособПолученияМатериала" Тогда
			
			ТекстПолеСклад = СтрЗаменить(
				ТекстПолеСклад,
				"МатериалыИУслуги.СпособПолученияМатериала",
				"МатериалыИУслуги." + ИмяПоляСпособПолученияМатериала);
			
			ТекстПолеВариантОбеспечения = СтрЗаменить(
				ТекстПолеВариантОбеспечения,
				"МатериалыИУслуги.СпособПолученияМатериала",
				"МатериалыИУслуги." + ИмяПоляСпособПолученияМатериала);
			
			//++ Устарело_Производство21
			ТекстПолеОбособленно = СтрЗаменить(
								ТекстПолеОбособленно, 
								"&ТекстПолеОснование",
								ТекстПолеОснование);
			//-- Устарело_Производство21
		
		КонецЕсли;
			
		Если ИмяПоляПодразделение <> Неопределено Тогда 
			
			Если Лев(ИмяПоляПодразделение, 1) = "&" Тогда
				
				ТекстПолеСклад = СтрЗаменить(
					ТекстПолеСклад,
					"МатериалыИУслуги.Подразделение",
					ИмяПоляПодразделение);
				
				ТекстПолеВариантОбеспечения = СтрЗаменить(
					ТекстПолеВариантОбеспечения,
					"МатериалыИУслуги.Подразделение",
					ИмяПоляПодразделение);
					
				ТекстПолеОбособленно = СтрЗаменить(
					ТекстПолеОбособленно,
					"МатериалыИУслуги.Подразделение",
					ИмяПоляПодразделение);
					
				ТекстСоединения = СтрЗаменить(
					ТекстСоединения,
					"МатериалыИУслуги.Подразделение",
					ИмяПоляПодразделение);
					
			ИначеЕсли ИмяПоляПодразделение <> "Подразделение" Тогда
				
				ТекстПолеСклад = СтрЗаменить(
					ТекстПолеСклад,
					"МатериалыИУслуги.Подразделение",
					"МатериалыИУслуги." + ИмяПоляПодразделение);
				
				ТекстПолеВариантОбеспечения = СтрЗаменить(
					ТекстПолеВариантОбеспечения,
					"МатериалыИУслуги.Подразделение",
					"МатериалыИУслуги." + ИмяПоляПодразделение);
					
				ТекстПолеОбособленно = СтрЗаменить(
					ТекстПолеОбособленно,
					"МатериалыИУслуги.Подразделение",
					"МатериалыИУслуги." + ИмяПоляПодразделение);
					
				ТекстСоединения = СтрЗаменить(
					ТекстСоединения,
					"МатериалыИУслуги.Подразделение",
					"МатериалыИУслуги." + ИмяПоляПодразделение);
					
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИмяТаблицыМатериалы <> "МатериалыИУслуги" Тогда
			ТекстПолеСклад              = СтрЗаменить(ТекстПолеСклад,              "МатериалыИУслуги", ИмяТаблицыМатериалы);
			ТекстПолеВариантОбеспечения = СтрЗаменить(ТекстПолеВариантОбеспечения, "МатериалыИУслуги", ИмяТаблицыМатериалы);
			ТекстПолеОбособленно        = СтрЗаменить(ТекстПолеОбособленно,        "МатериалыИУслуги", ИмяТаблицыМатериалы);
			ТекстСоединения             = СтрЗаменить(ТекстСоединения,             "МатериалыИУслуги", ИмяТаблицыМатериалы);
		КонецЕсли;
		
	КонецЕсли;

	ШаблоныЗапроса = Новый Структура();
	ШаблоныЗапроса.Вставить("ТекстПолеСклад",              ТекстПолеСклад);
	ШаблоныЗапроса.Вставить("ТекстПолеВариантОбеспечения", ТекстПолеВариантОбеспечения);
	ШаблоныЗапроса.Вставить("ТекстПолеОбособленно",        ТекстПолеОбособленно);
	//++ Устарело_Производство21
	ШаблоныЗапроса.Вставить("ТекстПолеОснование",          ТекстПолеОснование);
	//-- Устарело_Производство21
	ШаблоныЗапроса.Вставить("ТекстСоединения",             ТекстСоединения);

	Возврат ШаблоныЗапроса;
	
КонецФункции

Процедура ВыполнитьПодстановкуПараметровОбеспеченияМатериалов(ТекстЗапроса,
	ИмяТаблицы,
	ИмяПоляСпособПолученияМатериала = Неопределено,
	ИмяПоляПодразделение = Неопределено,
	ВариантЗаполненияОбеспечения = Неопределено) Экспорт
	
	ТекстыПараметрыОбеспечения = ТекстЗапросаПараметрыОбеспечения(
		ИмяТаблицы,
		ИмяПоляСпособПолученияМатериала,
		ИмяПоляПодразделение,
		ВариантЗаполненияОбеспечения);
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		",ТекстСоединенияПараметрыОбеспечения",
		ТекстыПараметрыОбеспечения.ТекстСоединения);
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеСклад",
		ТекстыПараметрыОбеспечения.ТекстПолеСклад);
	
	//++ Устарело_Производство21
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеОснование",
		ТекстыПараметрыОбеспечения.ТекстПолеОснование);
	//-- Устарело_Производство21
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеВариантОбеспечения",
		ТекстыПараметрыОбеспечения.ТекстПолеВариантОбеспечения);
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеОбособленно",
		ТекстыПараметрыОбеспечения.ТекстПолеОбособленно);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ВариантЗаполненияОбеспеченияПоВерсииПроизводства(Знач ИспользоватьПроизводство2_2 = Неопределено) Экспорт
	
	Если ИспользоватьПроизводство2_2 = Неопределено Тогда
		ИспользоватьПроизводство2_2 = ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеПроизводством2_2")
	КонецЕсли;
	
	Если ИспользоватьПроизводство2_2 Тогда
		Возврат Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.ПоСхемамОбеспечения;
	//++ Устарело_Производство21	
	Иначе
		Возврат Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.ПоНастройкамПередачиВПроизводство;
	//-- Устарело_Производство21	
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти
