////////////////////////////////////////////////////////////////////////////////
// Подсистема "Дистанционная работа"
// Серверные процедуры и функции форм документов.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура СотрудникиОбновитьЭлементыФормы(Форма) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТекущийВидДоговораПредставление(Форма);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ТекущийВидДоговора",
		"Видимость",
		ЗначениеЗаполнено(Форма.ТекущийВидДоговора));
	
КонецПроцедуры

Процедура ДобавитьВМассивСоздаваемыеРеквизитыФормыСотрудника(МассивДобавляемыхРеквизитов) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("РаботаетДистанционно", Новый ОписаниеТипов("Булево"), , НСтр("ru = 'Дистанционная работа';
																															|en = 'Remote work'"), Ложь));
	
	Для Каждого ДобавляемыйРеквизит Из МассивДобавляемыхРеквизитов Цикл
		Если ДобавляемыйРеквизит.Имя = "ТекущийВидДоговора" Тогда
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ТекущийВидДоговора", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыДоговоровССотрудниками"), , НСтр("ru = 'Вид договора';
																																								|en = 'Contract kind'"), Ложь));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ТекущийВидДоговораПредставление", Новый ОписаниеТипов("Строка"), , НСтр("ru = 'Вид договора';
																																		|en = 'Contract kind'"), Ложь));
	
КонецПроцедуры

Процедура ДобавитьКлючиСтруктурыТекущихКадровыхДанныхСотрудника(КлючиСтруктурыТекущихКадровыхДанныхСотрудника, НуженВидДоговора = Истина) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	КлючиСтруктурыТекущихКадровыхДанныхСотрудника = КлючиСтруктурыТекущихКадровыхДанныхСотрудника + ",РаботаетДистанционно";
	
	НуженВидДоговора = НуженВидДоговора
						И СтрНайти(КлючиСтруктурыТекущихКадровыхДанныхСотрудника, "ТекущийВидДоговора") = 0;
	
	Если НуженВидДоговора Тогда
		КлючиСтруктурыТекущихКадровыхДанныхСотрудника = КлючиСтруктурыТекущихКадровыхДанныхСотрудника + ",ТекущийВидДоговора";
	КонецЕсли;
		
КонецПроцедуры

Процедура ФормаСотрудникаДобавитьЭлементыФормы(Форма) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементГруппаТекущийВидДоговора = Форма.Элементы.Найти("ГруппаТекущийВидДоговора");
	Если ЭлементГруппаТекущийВидДоговора = Неопределено Тогда
		
		ЭлементГруппаТекущийВидДоговора = Форма.Элементы.Вставить("ГруппаТекущийВидДоговора", Тип("ГруппаФормы"),
			Форма.Элементы.РабочееМесто, Форма.Элементы.ГруппаСостояниеСотрудника);
		ЭлементГруппаТекущийВидДоговора.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппаТекущийВидДоговора.Отображение = ОтображениеОбычнойГруппы.Нет;
		ЭлементГруппаТекущийВидДоговора.ОтображатьЗаголовок = Ложь;
		ЭлементГруппаТекущийВидДоговора.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		
	КонецЕсли;
	
	Элемент = Форма.Элементы.Найти("ТекущийВидДоговора");
	Если Элемент = Неопределено Тогда
		Элемент = Форма.Элементы.Добавить("ТекущийВидДоговора", Тип("ПолеФормы"), ЭлементГруппаТекущийВидДоговора);
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.АвтоМаксимальнаяШирина = Ложь;
		Элемент.МаксимальнаяШирина = 30;
		Элемент.ТолькоПросмотр = Истина;
		Элемент.ПутьКДанным = "ТекущийВидДоговораПредставление";
	КонецЕсли;
	
	СотрудникиОбновитьЭлементыФормы(Форма);
	
КонецПроцедуры

Процедура ПриемНаРаботуДополнитьФорму(Форма) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементПраваяОбъединеннаяГруппа = Форма.Элементы.Найти("ПраваяОбъединеннаяГруппа");
	Если ЭлементПраваяОбъединеннаяГруппа = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элемент = Форма.Элементы.Найти("РаботаетДистанционно");
	Если Элемент = Неопределено Тогда
		Элемент = Форма.Элементы.Вставить("РаботаетДистанционно", Тип("ПолеФормы"), ЭлементПраваяОбъединеннаяГруппа,
			Форма.Элементы.ГруппаНадписьПраваНаОтпуск);
		Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		Элемент.ПутьКДанным = "Объект.РаботаетДистанционно";
		Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_РаботаетДистанционноПриИзменении");
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьДистанционнуюРаботуРабочегоМеста(Форма) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	Объект = Форма.Объект;
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		Если Не Объект.ИзменитьДистанционнуюРаботу Тогда
			Объект.РаботаетДистанционно = Форма.ТекущаяДистанционнаяРабота;
		КонецЕсли;
	Иначе
		Если Не Объект.ИзменитьДистанционнуюРаботу Тогда
			Объект.РаботаетДистанционно = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьПоляОтбораПериодическихДанных(ПоляОтбораПериодическихДанных, Отбор) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	ПоляОтбораПериодическихДанных.Вставить("ДистанционнаяРаботаСотрудников", Отбор);
	
КонецПроцедуры

Процедура УстановитьТекущуюДистанционнуюРаботу(Форма, ТекущиеКадровыеДанные = Неопределено) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	Форма.ТекущаяДистанционнаяРабота = ?(ТекущиеКадровыеДанные = Неопределено, Ложь, ТекущиеКадровыеДанные.РаботаетДистанционно);
	
КонецПроцедуры

Процедура КадровыйПереводУстановитьДоступностьЭлементовИзмененияДанныхСотрудника(Форма) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ИзменитьДистанционнуюРаботу",
		"Доступность",
		ЗначениеЗаполнено(Форма.Объект.Сотрудник));
		
КонецПроцедуры

Процедура КадровыйПереводДополнитьФорму(Форма, ДобавлятьЭлементыФормы = Истина, ДобавлятьРеквизитыФормы = Истина, ОтложенноеИзменение = Ложь) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементПозицияГруппа = Форма.Элементы.Найти("ПозицияГруппа");
	Если ЭлементПозицияГруппа = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Если ДобавлятьРеквизитыФормы Тогда
		
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ТекущаяДистанционнаяРабота", Новый ОписаниеТипов("Булево")));
		
		МассивИменРеквизитовФормы = Новый Массив;
		ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
		ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы,, ОтложенноеИзменение);
		
	КонецЕсли;
	
	ЭлементДистанционнаяРаботаГруппа = Форма.Элементы.Найти("ДистанционнаяРаботаГруппа");
	Если ЭлементДистанционнаяРаботаГруппа = Неопределено Тогда
		
		ЭлементДистанционнаяРаботаГруппа = Форма.Элементы.Вставить("ДистанционнаяРаботаГруппа", Тип("ГруппаФормы"),
			ЭлементПозицияГруппа, Форма.Элементы.ТерриторияГруппа);
		ЭлементДистанционнаяРаботаГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементДистанционнаяРаботаГруппа.Отображение = ОтображениеОбычнойГруппы.Нет;
		ЭлементДистанционнаяРаботаГруппа.ОтображатьЗаголовок = Ложь;
		ЭлементДистанционнаяРаботаГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		
	КонецЕсли;
	
	Элемент = Форма.Элементы.Найти("ИзменитьДистанционнуюРаботу");
	Если Элемент = Неопределено Тогда
		
		Элемент = Форма.Элементы.Вставить("ИзменитьДистанционнуюРаботу", Тип("ПолеФормы"), ЭлементДистанционнаяРаботаГруппа);
		Элемент.ШрифтЗаголовка = ШрифтыСтиля.ВажнаяНадписьШрифт;
		Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		Элемент.ПутьКДанным = "Объект.ИзменитьДистанционнуюРаботу";
		Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ИзменитьДистанционнуюРаботуПриИзменении");
		
	КонецЕсли;
	
	Элемент = Форма.Элементы.Найти("РаботаетДистанционно");
	Если Элемент = Неопределено Тогда
		
		Элемент = Форма.Элементы.Вставить("РаботаетДистанционно", Тип("ПолеФормы"), ЭлементДистанционнаяРаботаГруппа);
		Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		Элемент.ПутьКДанным = "Объект.РаботаетДистанционно";
		Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_РаботаетДистанционноПриИзменении");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КадровыйПереводСотрудникПриИзменении(Форма) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	Форма.Объект.ИзменитьДистанционнуюРаботу = Ложь;
	
КонецПроцедуры

Процедура КадровыйПереводИзменитьДистанционнуюРаботуПриИзменении(Форма) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	Объект = Форма.Объект;
	
	Если Не Объект.ИзменитьДистанционнуюРаботу Тогда
		Объект.РаботаетДистанционно = Форма.ТекущаяДистанционнаяРабота;
	КонецЕсли;
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(Форма, Объект);
	
КонецПроцедуры

Процедура КадровыйДокументОбновитьРеквизитИКоманды(Форма, ЭтоПеревод = Ложь) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	Объект = Форма.Объект;
	
	ОбновитьКоманды = Ложь;
	ПрежнееЗначениеРаботаетДистанционно = Объект.РаботаетДистанционно;
	
	Если ЭтоПеревод Тогда
		ПрежнееЗначениеИзменитьДистанционнуюРаботу = Объект.ИзменитьДистанционнуюРаботу;
		
		Объект.ИзменитьДистанционнуюРаботу = (Объект.Сотрудники.НайтиСтроки(
			Новый Структура("ИзменитьДистанционнуюРаботу", Истина)).Количество() > 0);
		Объект.РаботаетДистанционно = (Объект.Сотрудники.НайтиСтроки(
			Новый Структура("ИзменитьДистанционнуюРаботу,РаботаетДистанционно", Истина, Истина)).Количество() > 0);
		ОбновитьКоманды = Не ПрежнееЗначениеИзменитьДистанционнуюРаботу = Объект.ИзменитьДистанционнуюРаботу 
					  Или Не ПрежнееЗначениеРаботаетДистанционно = Объект.РаботаетДистанционно;
	Иначе
		Объект.РаботаетДистанционно = (Объект.Сотрудники.НайтиСтроки(
			Новый Структура("РаботаетДистанционно", Истина)).Количество() > 0);
		ОбновитьКоманды = Не ПрежнееЗначениеРаботаетДистанционно = Объект.РаботаетДистанционно;
	КонецЕсли;
	
	Если ОбновитьКоманды Тогда
		ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(Форма, Объект);
	КонецЕсли;
	
КонецПроцедуры

Процедура КадровыйПереводДополнитьРасшифровкуСтрокиСотрудника(Форма, ИдентификаторСтрокиСотрудника, ТекстРасшифровки) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	Объект = Форма.Объект;
	СтрокаСотрудника = Объект.Сотрудники.НайтиПоИдентификатору(ИдентификаторСтрокиСотрудника);
	
	Если СтрокаСотрудника.ИзменитьДистанционнуюРаботу Тогда
		ТекстРасшифровки = ?(ПустаяСтрока(ТекстРасшифровки), "", ТекстРасшифровки + "; ") + НСтр("ru = 'Изменена дистанционная работа';
																								|en = 'Remote work is changed'");
	КонецЕсли;
		
КонецПроцедуры

Процедура ДополнитьФормуПеремещенияВДругоеПодразделение(Форма) Экспорт
	
	Если Не ДистанционнаяРабота.ИспользуетсяДистанционнаяРабота() Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементГруппаРаботаетДистанционно = Форма.Элементы.Найти("ДистанционнаяРаботаГруппа");
	Если ЭлементГруппаРаботаетДистанционно = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элемент = Форма.Элементы.Найти("РаботаетДистанционно");
	Если Элемент = Неопределено Тогда
		Элемент = Форма.Элементы.Вставить("РаботаетДистанционно", Тип("ПолеФормы"), ЭлементГруппаРаботаетДистанционно);
		Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент.ПутьКДанным = "Объект.Сотрудники.РаботаетДистанционно";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьТекущийВидДоговораПредставление(Форма)
	
	Если Форма.ТекущийВидДоговора = Перечисления.ВидыДоговоровССотрудниками.ПустаяСсылка() Тогда
		ТекущийВидДоговораПредставление = "";
	Иначе
		ТекущийВидДоговораПредставление = Строка(Форма.ТекущийВидДоговора);
		
		Если Форма.РаботаетДистанционно Тогда
			ТекущийВидДоговораПредставление = ТекущийВидДоговораПредставление + " " + НСтр("ru = '(Дистанционная работа)';
																							|en = '(Remote work)'");
		КонецЕсли;
	КонецЕсли;
	
	Форма.ТекущийВидДоговораПредставление = ТекущийВидДоговораПредставление;
	
КонецПроцедуры

#КонецОбласти
