////////////////////////////////////////////////////////////////////////////////
//
//   Расширенная реализация подсистемы персонифицированного учета.
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура СоздатьВТЗарегистрированныеКорректировкиСтажа(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод) Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НеобходимыеКорректировкиСтажаПФР.Организация,
	|	НеобходимыеКорректировкиСтажаПФР.ОтчетныйПериод КАК КорректируемыйПериод,
	|	НеобходимыеКорректировкиСтажаПФР.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТЗарегистрированныеКорректировкиСтажа
	|ИЗ
	|	РегистрСведений.НеобходимыеКорректировкиСтажаПФР КАК НеобходимыеКорректировкиСтажаПФР
	|ГДЕ
	|	НеобходимыеКорректировкиСтажаПФР.Организация = &Организация
	|	И НеобходимыеКорректировкиСтажаПФР.ОтчетныйПериод < &ОтчетныйПериод";	
	Запрос.Выполнить();
КонецПроцедуры

Процедура СоздатьВТЗаписиСтажаПоДаннымУчета(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ОкончаниеОтчетногоПериода, ПараметрыПолученияДанных, ПараметрыОтбора) Экспорт
	
	ПараметрыОтбораСтажа = УчетСтажаПФР.ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР();
	ПараметрыОтбораСтажа.Организация = Организация;
	ПараметрыОтбораСтажа.НачалоПериода = ОтчетныйПериод;
	ПараметрыОтбораСтажа.ОкончаниеПериода = ОкончаниеОтчетногоПериода;
	
	Если ПараметрыОтбора.СписокФизическихЛиц <> Неопределено Тогда	
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("СписокФизическихЛиц", ПараметрыОтбора.СписокФизическихЛиц);
		Если ТипЗнч(Организация) = Тип("Массив") Тогда
			ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Организация[0]);
		Иначе
			ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Организация);
		КонецЕсли;
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФильтрДляФормированияСтажа
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Ссылка В(&СписокФизическихЛиц)";
		
		Запрос.Выполнить();
		
		ПараметрыОтбораСтажа.ИмяВТОтбор = "ВТФильтрДляФормированияСтажа";
		ПараметрыОтбораСтажа.ИзмеренияОтбора.Добавить("ФизическоеЛицо");
		ПараметрыОтбораСтажа.ИзмеренияОтбора.Добавить("ГоловнаяОрганизация");
		
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК Поле1
		|ИЗ
		|	РегистрСведений.ЗаписиОСтажеДоНачалаЭксплуатации КАК ЗаписиОСтажеДоНачалаЭксплуатации
		|ГДЕ
		|	ЗаписиОСтажеДоНачалаЭксплуатации.ДатаОкончанияПериода >= &НачалоПериода";
	Запрос.УстановитьПараметр("НачалоПериода", ОтчетныйПериод);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() И ОтчетныйПериод >= '20130101' Тогда
		УчетСтажаПФР.СоздатьВТДанныеУчетаСтажаПФР(МенеджерВременныхТаблиц, ПараметрыОтбораСтажа, "ВТЗаписиСтажаПоДаннымУчета");
		Возврат;
	Иначе
		УчетСтажаПФР.СоздатьВТДанныеУчетаСтажаПФР(МенеджерВременныхТаблиц, ПараметрыОтбораСтажа, "ВТЗаписиСтажаПоДаннымУчетаВременная");
	КонецЕсли;
	
	Если ОтчетныйПериод < '20130101' Тогда	
		СоздатьВТЗаписиСтажаПоДаннымУчетаБезВыделенияГПХ(МенеджерВременныхТаблиц);
	Иначе
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаписиСтажаПоДаннымУчета.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	ЗаписиСтажаПоДаннымУчета.Организация КАК Организация,
			|	ЗаписиСтажаПоДаннымУчета.ОтчетныйПериод КАК ОтчетныйПериод,
			|	ЗаписиСтажаПоДаннымУчета.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ЗаписиСтажаПоДаннымУчета.ТипДоговора КАК ТипДоговора,
			|	ЗаписиСтажаПоДаннымУчета.ДатаНачалаПериода КАК ДатаНачалаПериода,
			|	ЕСТЬNULL(ЗаписиСтажаПоДаннымУчета.ОснованиеВыслугиЛет, ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка)) КАК ОснованиеВыслугиЛет,
			|	ЕСТЬNULL(ЗаписиСтажаПоДаннымУчета.ОсобыеУсловияТруда, ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)) КАК ОсобыеУсловияТруда,
			|	ЕСТЬNULL(ЗаписиСтажаПоДаннымУчета.КодПозицииСписка, ЗНАЧЕНИЕ(Справочник.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.ПустаяСсылка)) КАК КодПозицииСписка,
			|	ЕСТЬNULL(ЗаписиСтажаПоДаннымУчета.КлассПодклассУсловийТруда, ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка)) КАК КлассПодклассУсловийТруда,
			|	ЕСТЬNULL(ЗаписиСтажаПоДаннымУчета.НомерРабочегоМеста, """") КАК НомерРабочегоМеста,
			|	ЕСТЬNULL(ЗаписиСтажаПоДаннымУчета.ТерриториальныеУсловия, ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПустаяСсылка)) КАК ТерриториальныеУсловия,
			|	ЕСТЬNULL(ЗаписиСтажаПоДаннымУчета.ТерриториальныеУсловияДополнительные, ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПустаяСсылка)) КАК ТерриториальныеУсловияДополнительные,
			|	ЕСТЬNULL(ЗаписиСтажаПоДаннымУчета.РайонныйКоэффициент, 0) КАК РайонныйКоэффициент,
			|	ЗаписиСтажаПоДаннымУчета.ПараметрТерриториальныхУсловий КАК ПараметрТерриториальныхУсловий,
			|	ЗаписиСтажаПоДаннымУчета.ТретийПараметрВыслугиЛет КАК ТретийПараметрВыслугиЛет,
			|	ЗаписиСтажаПоДаннымУчета.ЗамещениеГосударственныхМуниципальныхДолжностей КАК ЗамещениеГосударственныхМуниципальныхДолжностей,
			|	ЗаписиСтажаПоДаннымУчета.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
			|	ЗаписиСтажаПоДаннымУчета.ТретийПараметрИсчисляемогоСтажа КАК ТретийПараметрИсчисляемогоСтажа,
			|	ЗаписиСтажаПоДаннымУчета.ОснованиеИсчисляемогоСтажа КАК ОснованиеИсчисляемогоСтажа,
			|	ЗаписиСтажаПоДаннымУчета.ПервыйПараметрИсчисляемогоСтажа КАК ПервыйПараметрИсчисляемогоСтажа,
			|	ЗаписиСтажаПоДаннымУчета.ВторойПараметрИсчисляемогоСтажа КАК ВторойПараметрИсчисляемогоСтажа,
			|	ЗаписиСтажаПоДаннымУчета.ПервыйПараметрВыслугиЛет КАК ПервыйПараметрВыслугиЛет,
			|	ЗаписиСтажаПоДаннымУчета.ВторойПараметрВыслугиЛет КАК ВторойПараметрВыслугиЛет,
			|	ЗаписиСтажаПоДаннымУчета.ФиксСтаж КАК ФиксСтаж,
			|	ЗаписиСтажаПоДаннымУчета.ПрерываниеСтажа КАК ПрерываниеСтажа,
			|	ЗаписиСтажаПоДаннымУчета.СложныйСтаж КАК СложныйСтаж
			|ИЗ
			|	ВТЗаписиСтажаПоДаннымУчетаВременная КАК ЗаписиСтажаПоДаннымУчета
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ГоловнаяОрганизация,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.Организация,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ОтчетныйПериод,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ФизическоеЛицо,
			|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ПустаяСсылка),
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ДатаНачалаПериода,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ОснованиеВыслугиЛет,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ОсобыеУсловияТруда,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.КодПозицииСписка,
			|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка),
			|	"""",
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ТерриториальныеУсловия,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ТерриториальныеУсловияДополнительные,
			|	0,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ПараметрТерриториальныхУсловий,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ТретийПараметрВыслугиЛет,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ЗамещениеГосударственныхМуниципальныхДолжностей,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ДатаОкончанияПериода,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ТретийПараметрИсчисляемогоСтажа,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ОснованиеИсчисляемогоСтажа,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ПервыйПараметрИсчисляемогоСтажа,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ВторойПараметрИсчисляемогоСтажа,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ПервыйПараметрВыслугиЛет,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ВторойПараметрВыслугиЛет,
			|	ЛОЖЬ,
			|	ЛОЖЬ,
			|	ИСТИНА
			|ИЗ
			|	РегистрСведений.ЗаписиОСтажеДоНачалаЭксплуатации КАК ЗаписиОСтажеДоНачалаЭксплуатации
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФильтр КАК Фильтр
			|		ПО (&УсловияСвязиПоИзмерениям)
			|ГДЕ
			|	ЗаписиОСтажеДоНачалаЭксплуатации.Организация В(&Организация)
			|	И ЗаписиОСтажеДоНачалаЭксплуатации.ДатаОкончанияПериода >= &НачалоПериода
			|	И ЗаписиОСтажеДоНачалаЭксплуатации.ДатаНачалаПериода <= &ОкончаниеПериода
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаНачалаПериода";
		
		Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОтбораСтажа.НачалоПериода);
		Запрос.УстановитьПараметр("ОкончаниеПериода", ПараметрыОтбораСтажа.ОкончаниеПериода);
		Запрос.УстановитьПараметр("Организация", Организация);
		Если ПараметрыОтбораСтажа.ИмяВТОтбор = Неопределено Тогда
			ПодстрокаЗамены = "ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФильтр КАК Фильтр
							   |		ПО (&УсловияСвязиПоИзмерениям)";
			Запрос.Текст = СтрЗаменить(Запрос.Текст, ПодстрокаЗамены, "");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТФильтр", ПараметрыОтбораСтажа.ИмяВТОтбор);
			
			УсловиеСвязи = "";
			Для Каждого ИзмерениеФильтра Из ПараметрыОтбораСтажа.ИзмеренияОтбора Цикл 
				УсловиеСвязи = УсловиеСвязи + "
											|	И ЗаписиОСтажеДоНачалаЭксплуатации." + ИзмерениеФильтра + " = Фильтр." + ИзмерениеФильтра;
			КонецЦикла;
			
			УсловиеСвязи = Сред(УсловиеСвязи, 4);
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловияСвязиПоИзмерениям", УсловиеСвязи);
		КонецЕсли;
		
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьЗапросУничтоженияВременнойТаблицы(Запрос.Текст, "ВТЗаписиСтажаПоДаннымУчетаВременная");
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		ТаблицаСтажа = Результат.Выгрузить();
		ОбъединитьЗаписиНепрерывногоСтажа(ТаблицаСтажа, Ложь);
		ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(МенеджерВременныхТаблиц, ТаблицаСтажа, "ВТЗаписиСтажаПоДаннымУчета");
		
	КонецЕсли;
	
КонецПроцедуры	

Процедура СоздатьВТЗаписиСтажаПоДаннымУчетаБезВыделенияГПХ(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеУчетаСтажаПФРВременная.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеУчетаСтажаПФРВременная.ТипДоговора КАК ТипДоговора,
	|	ДанныеУчетаСтажаПФРВременная.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ДанныеУчетаСтажаПФРВременная.ОснованиеВыслугиЛет КАК ОснованиеВыслугиЛет,
	|	ДанныеУчетаСтажаПФРВременная.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
	|	ДанныеУчетаСтажаПФРВременная.КодПозицииСписка КАК КодПозицииСписка,
	|	ДанныеУчетаСтажаПФРВременная.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
	|	ДанныеУчетаСтажаПФРВременная.ТерриториальныеУсловияДополнительные КАК ТерриториальныеУсловияДополнительные,
	|	ДанныеУчетаСтажаПФРВременная.ПараметрТерриториальныхУсловий КАК ПараметрТерриториальныхУсловий,
	|	ДанныеУчетаСтажаПФРВременная.РайонныйКоэффициент КАК РайонныйКоэффициент,
	|	ДанныеУчетаСтажаПФРВременная.ТретийПараметрВыслугиЛет КАК ТретийПараметрВыслугиЛет,
	|	ДанныеУчетаСтажаПФРВременная.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
	|	ДанныеУчетаСтажаПФРВременная.ТретийПараметрИсчисляемогоСтажа КАК ТретийПараметрИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ОснованиеИсчисляемогоСтажа КАК ОснованиеИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ПервыйПараметрИсчисляемогоСтажа КАК ПервыйПараметрИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ВторойПараметрИсчисляемогоСтажа КАК ВторойПараметрИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ПервыйПараметрВыслугиЛет КАК ПервыйПараметрВыслугиЛет,
	|	ДанныеУчетаСтажаПФРВременная.ВторойПараметрВыслугиЛет КАК ВторойПараметрВыслугиЛет,
	|	ЛОЖЬ КАК ПрерываниеСтажа
	|ИЗ
	|	ВТЗаписиСтажаПоДаннымУчетаВременная КАК ДанныеУчетаСтажаПФРВременная
	|ГДЕ
	|	ДанныеУчетаСтажаПФРВременная.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	ДатаНачалаПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеУчетаСтажаПФРВременная.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеУчетаСтажаПФРВременная.ТипДоговора КАК ТипДоговора,
	|	ДанныеУчетаСтажаПФРВременная.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ДанныеУчетаСтажаПФРВременная.ОснованиеВыслугиЛет КАК ОснованиеВыслугиЛет,
	|	ДанныеУчетаСтажаПФРВременная.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
	|	ДанныеУчетаСтажаПФРВременная.КодПозицииСписка КАК КодПозицииСписка,
	|	ДанныеУчетаСтажаПФРВременная.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
	|	ДанныеУчетаСтажаПФРВременная.ТерриториальныеУсловияДополнительные КАК ТерриториальныеУсловияДополнительные,
	|	ДанныеУчетаСтажаПФРВременная.ПараметрТерриториальныхУсловий КАК ПараметрТерриториальныхУсловий,
	|	ДанныеУчетаСтажаПФРВременная.РайонныйКоэффициент КАК РайонныйКоэффициент,
	|	ДанныеУчетаСтажаПФРВременная.ТретийПараметрВыслугиЛет КАК ТретийПараметрВыслугиЛет,
	|	ДанныеУчетаСтажаПФРВременная.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
	|	ДанныеУчетаСтажаПФРВременная.ТретийПараметрИсчисляемогоСтажа КАК ТретийПараметрИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ОснованиеИсчисляемогоСтажа КАК ОснованиеИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ПервыйПараметрИсчисляемогоСтажа КАК ПервыйПараметрИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ВторойПараметрИсчисляемогоСтажа КАК ВторойПараметрИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ПервыйПараметрВыслугиЛет КАК ПервыйПараметрВыслугиЛет,
	|	ДанныеУчетаСтажаПФРВременная.ВторойПараметрВыслугиЛет КАК ВторойПараметрВыслугиЛет,
	|	ЛОЖЬ КАК ПрерываниеСтажа
	|ИЗ
	|	ВТЗаписиСтажаПоДаннымУчетаВременная КАК ДанныеУчетаСтажаПФРВременная
	|ГДЕ
	|	ДанныеУчетаСтажаПФРВременная.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ГражданскоПравовой)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	ДатаНачалаПериода";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаСтажа = Результат[0].Выгрузить();
	ТаблицаСтажаПоДоговорам = Результат[1].Выгрузить();
	
	ТаблицаСтажаПоДоговорам.Сортировать("ФизическоеЛицо,ДатаНачалаПериода");
	ПредшествующееФизЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
	МассивСтрок = Новый Массив;
	СтрокСтажа = 0;
	СтруктураПоиска = Новый Структура("ТипДоговора, ФизическоеЛицо");
	НомерСтроки = ТаблицаСтажаПоДоговорам.Количество();
	Пока НомерСтроки > 0 Цикл
		
		ТекущаяЗапись = ТаблицаСтажаПоДоговорам[НомерСтроки - 1];
		
		Если ТекущаяЗапись.ФизическоеЛицо <> ПредшествующееФизЛицо Тогда
			ЗаполнитьЗначенияСвойств(СтруктураПоиска,ТекущаяЗапись);
			МассивСтрок = ТаблицаСтажа.НайтиСтроки(СтруктураПоиска);
			ПредшествующееФизЛицо = ТекущаяЗапись.ФизическоеЛицо;
		КонецЕсли;
		
		СтрокСтажа = МассивСтрок.Количество();
		Если СтрокСтажа = 0 Тогда
			ЗаполнитьЗначенияСвойств(ТаблицаСтажа.Добавить(),ТекущаяЗапись);
			НомерСтроки = НомерСтроки - 1;
			Продолжить;
		КонецЕсли;
		
		ДатаНачалаПериода = НачалоДня(ТекущаяЗапись.ДатаНачалаПериода);
		ДатаОкончанияПериода = КонецДня(ТекущаяЗапись.ДатаОкончанияПериода);
		
		Для Сч = 1 По СтрокСтажа Цикл
			
			СтрокаСтажа = МассивСтрок[СтрокСтажа - Сч];
			ДатаНачалаСтрокиСтажа = НачалоДня(СтрокаСтажа.ДатаНачалаПериода);
			ДатаОкончанияСтрокиСтажа = КонецДня(СтрокаСтажа.ДатаОкончанияПериода);
			
			Если ДатаНачалаСтрокиСтажа > ДатаОкончанияПериода Тогда
			ИначеЕсли ДатаНачалаСтрокиСтажа > ДатаНачалаПериода Тогда
				Если ДатаОкончанияСтрокиСтажа < ДатаОкончанияПериода Тогда
					НоваяСтрока = ТаблицаСтажа.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущаяЗапись);
					НоваяСтрока.ДатаНачалаПериода = ДатаОкончанияСтрокиСтажа + 1;
					НоваяСтрока.ДатаОкончанияПериода = ДатаОкончанияПериода;
				КонецЕсли;
				ДатаОкончанияПериода = НачалоДня(СтрокаСтажа.ДатаНачалаПериода - 1);
			Иначе
				Если ДатаОкончанияСтрокиСтажа >= ДатаНачалаПериода Тогда
					ДатаНачалаПериода = ДатаОкончанияСтрокиСтажа + 1;
				КонецЕсли;
				Прервать;
			КонецЕсли;
			МассивСтрок.Удалить(СтрокСтажа - Сч);
		КонецЦикла;
		
		Если ДатаОкончанияПериода >= ДатаНачалаПериода Тогда
			НоваяСтрока = ТаблицаСтажа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущаяЗапись);
			НоваяСтрока.ДатаНачалаПериода = ДатаНачалаПериода;
			НоваяСтрока.ДатаОкончанияПериода = ДатаОкончанияПериода;
		КонецЕсли;
		
		НомерСтроки = НомерСтроки - 1;
	КонецЦикла;
	
	ТаблицаСтажа.Сортировать("ФизическоеЛицо, ДатаНачалаПериода");
	ОбъединитьЗаписиНепрерывногоСтажа(ТаблицаСтажа);

	Запрос.УстановитьПараметр("ПериодыРаботыСорт", ТаблицаСтажа);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныйСтаж.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ПустаяСсылка) КАК ТипДоговора,
	|	ИсходныйСтаж.ДатаНачалаПериода,
	|	ИсходныйСтаж.ДатаОкончанияПериода,
	|	ИсходныйСтаж.ОсобыеУсловияТруда,
	|	ИсходныйСтаж.КодПозицииСписка,
	|	ИсходныйСтаж.ТретийПараметрИсчисляемогоСтажа,
	|	ИсходныйСтаж.ОснованиеВыслугиЛет,
	|	ИсходныйСтаж.ТерриториальныеУсловия,
	|	ИсходныйСтаж.ТерриториальныеУсловияДополнительные,
	|	ИсходныйСтаж.ПараметрТерриториальныхУсловий,
	|	ИсходныйСтаж.РайонныйКоэффициент,
	|	ИсходныйСтаж.ТретийПараметрВыслугиЛет,
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка) КАК КлассПодклассУсловийТруда,
	|	"""" КАК НомерРабочегоМеста,
	|	ЗНАЧЕНИЕ(Справочник.ОснованияИсчисляемогоСтраховогоСтажа.ПустаяСсылка) КАК ОснованиеИсчисляемогоСтажа,
	|	ЗНАЧЕНИЕ(Справочник.ЗамещениеГосударственныхМуниципальныхДолжностейПФР.ПустаяСсылка) КАК ЗамещениеГосударственныхМуниципальныхДолжностей,
	|	"""" КАК ПервыйПараметрИсчисляемогоСтажа,
	|	"""" КАК ВторойПараметрИсчисляемогоСтажа,
	|	"""" КАК ПервыйПараметрВыслугиЛет,
	|	"""" КАК ВторойПараметрВыслугиЛет,
	|	ЛОЖЬ КАК ФиксСтаж,
	|	ЛОЖЬ КАК ПрерываниеСтажа,
	|	ИСТИНА КАК СложныйСтаж
	|ПОМЕСТИТЬ ВТЗаписиСтажаПоДаннымУчета
	|ИЗ
	|	&ПериодыРаботыСорт КАК ИсходныйСтаж";

	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура ОбъединитьЗаписиНепрерывногоСтажа(ТаблицаСтажа, УчитыватьТипДоговора = Истина)
	НомерСтроки = ТаблицаСтажа.Количество() - 1;
	Пока НомерСтроки > 0 Цикл
		
		ТекущаяЗапись = ТаблицаСтажа[НомерСтроки];
		ПредшествующаяЗапись = ТаблицаСтажа[НомерСтроки - 1];
		
		Если ТекущаяЗапись.ФизическоеЛицо = ПредшествующаяЗапись.ФизическоеЛицо // Если совпадает ФизическоеЛицо.
			И (ТекущаяЗапись.ТипДоговора = ПредшествующаяЗапись.ТипДоговора
			ИЛИ Не УчитыватьТипДоговора)
			И (ТекущаяЗапись.ДатаНачалаПериода = КонецДня(ПредшествующаяЗапись.ДатаОкончанияПериода)+1 
			// Если записи непрерывны (идут друг за другом по времени)
			ИЛИ КонецДня(ТекущаяЗапись.ДатаНачалаПериода) = КонецДня(ПредшествующаяЗапись.ДатаОкончанияПериода))
			// и совпадают параметры стажа.
			И ТекущаяЗапись.ОсобыеУсловияТруда = ПредшествующаяЗапись.ОсобыеУсловияТруда
			И СокрЛП(ТекущаяЗапись.КодПозицииСписка) = СокрЛП(ПредшествующаяЗапись.КодПозицииСписка)
			И ТекущаяЗапись.ОснованиеВыслугиЛет = ПредшествующаяЗапись.ОснованиеВыслугиЛет
			И ТекущаяЗапись.ТерриториальныеУсловия = ПредшествующаяЗапись.ТерриториальныеУсловия
			И ТекущаяЗапись.ПараметрТерриториальныхУсловий = ПредшествующаяЗапись.ПараметрТерриториальныхУсловий
			И ТекущаяЗапись.ТретийПараметрИсчисляемогоСтажа = ПредшествующаяЗапись.ТретийПараметрИсчисляемогоСтажа
			И ТекущаяЗапись.ТретийПараметрВыслугиЛет = ПредшествующаяЗапись.ТретийПараметрВыслугиЛет
			И Не ТекущаяЗапись.ПрерываниеСтажа Тогда
			// объединим записи в одну
			ПредшествующаяЗапись.ДатаОкончанияПериода = ТекущаяЗапись.ДатаОкончанияПериода;
			ТаблицаСтажа.Удалить(ТекущаяЗапись);
		КонецЕсли;
		НомерСтроки = НомерСтроки - 1;
	КонецЦикла;
КонецПроцедуры

Функция КвартальнаяОтчетностьПерераспределятьВзносыАвтоматически() Экспорт 
	Возврат Ложь;	
КонецФункции

Процедура КвартальнаяОтчетностьПФРДополнитьКомандыФормы(Форма) Экспорт
	Команда = Форма.Команды.Добавить("НеобходимыеКорректировкиСтажа");
	Команда.Действие = "Подключаемый_ВыполнитьНазначеннуюКоманду";
	Команда.Заголовок = НСтр("ru = 'Зарегистрированные изменения стажа';
							|en = 'Registered changes of length of service'");

	Гиперссылка = Форма.Элементы.Добавить("НеобходимыеКорректировкиСтажа", Тип("КнопкаФормы"), Форма.Элементы.Шапка);
	Гиперссылка.Вид  = ВидКнопкиФормы.Гиперссылка;
	Гиперссылка.ИмяКоманды = "НеобходимыеКорректировкиСтажа";	
	
КонецПроцедуры

Процедура КвартальнаяОтчетностьПФРОбновитьДанныеФормы(Форма) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Форма.Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НеобходимыеКорректировкиСтажаПФР.Организация
	|ИЗ
	|	РегистрСведений.НеобходимыеКорректировкиСтажаПФР КАК НеобходимыеКорректировкиСтажаПФР
	|ГДЕ
	|	НеобходимыеКорректировкиСтажаПФР.Организация = &Организация";
	
	Если Запрос.Выполнить().Пустой() Тогда
		Форма.Элементы.НеобходимыеКорректировкиСтажа.Видимость = Ложь;	
	Иначе
		Форма.Элементы.НеобходимыеКорректировкиСтажа.Видимость = Истина;	
	КонецЕсли;	
КонецПроцедуры

Функция ПараметрыДляСоздатьВТСотрудникиОрганизации(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, СписокФизическихЛиц) Экспорт
	
	ПараметрыПолученияСотрудников = ПерсонифицированныйУчетБазовый.ПараметрыДляСоздатьВТСотрудникиОрганизации(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, СписокФизическихЛиц);
	
	// Если используются договоры ГПХ, то проверяем должны ли они попадать в СЗВ_М
	Если ПараметрыПолученияСотрудников.Свойство("РаботникиПоДоговорамГПХ") Тогда
		
		ПараметрыПолученияСотрудников.Вставить("СписокСотрудников", Неопределено);
		Если СписокФизическихЛиц <> Неопределено Тогда
			ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыПолученияСотрудников.Отборы, "ФизическоеЛицо", "В", СписокФизическихЛиц);
		КонецЕсли;
		
		// Сотрудники по трудовым договорам
		ПараметрыПолученияСотрудников.РаботникиПоДоговорамГПХ = Неопределено;
		КадровыйУчет.СоздатьВТРабочиеМестаСотрудников(МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудников, "ВТРаботникиПоТрудовымДоговорам");
		
		// Сотрудники по договорам ГПХ
		ПараметрыПолученияСотрудников.РаботникиПоДоговорамГПХ = Истина;
		ПараметрыПолученияСотрудников.РаботникиПоТрудовымДоговорам = Неопределено;
		КадровыйУчет.СоздатьВТРабочиеМестаСотрудников(МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудников, "ВТРаботникиПоДоговорамГПХ");
		
		// Соберем список физических лиц:
		// - все с трудовыми договорами
		// - с договорами ГПХ, облагаемыми страховыми взносами.
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("НеоблагаемыеВидыДоходов", УчетСтраховыхВзносовРасширенный.ВидыДоходовНеоблагаемыеСтраховымиВзносами());
		Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Сотрудники.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФильтрФизическихЛиц
		|ИЗ
		|	ВТРаботникиПоТрудовымДоговорам КАК Сотрудники
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	УсловияДоговораГПХСрезПоследних.ФизическоеЛицо
		|ИЗ
		|	РегистрСведений.УсловияДоговораГПХ.СрезПоследних(
		|			КОНЕЦПЕРИОДА(&ОтчетныйПериод, МЕСЯЦ),
		|			(Сотрудник, ФизическоеЛицо, Договор) В
		|					(ВЫБРАТЬ
		|						Договорники.Сотрудник,
		|						Договорники.ФизическоеЛицо,
		|						Договорники.ДокументОснование
		|					ИЗ
		|						ВТРаботникиПоДоговорамГПХ КАК Договорники)
		|				И НЕ КодДоходаСтраховыеВзносы В (&НеоблагаемыеВидыДоходов)) КАК УсловияДоговораГПХСрезПоследних
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПлановыеНачисленияПоДоговорам.ФизическоеЛицо
		|ИЗ
		|	ВТРаботникиПоДоговорамГПХ КАК Договорники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияПоДоговорам КАК ПлановыеНачисленияПоДоговорам
		|		ПО Договорники.Сотрудник = ПлановыеНачисленияПоДоговорам.Сотрудник
		|			И Договорники.ФизическоеЛицо = ПлановыеНачисленияПоДоговорам.ФизическоеЛицо
		|			И Договорники.ДокументОснование = ПлановыеНачисленияПоДоговорам.Договор
		|			И (НЕ ПлановыеНачисленияПоДоговорам.КодДоходаСтраховыеВзносы В (&НеоблагаемыеВидыДоходов))";
		УстановитьПривилегированныйРежим(Истина);
		Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		
		// Переопределим параметры получения сотрудников организации
		ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоВременнойТаблице();
		ПараметрыПолученияСотрудников.Организация = Организация;
		ПараметрыПолученияСотрудников.НачалоПериода = НачалоМесяца(ОтчетныйПериод);
		ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецМесяца(ОтчетныйПериод);
		ПараметрыПолученияСотрудников.КадровыеДанные = "ГоловнаяОрганизация, ЯвляетсяПрокурором, ЯвляетсяВоеннослужащим, РаботаетВСтуденческомОтряде, ВидЗастрахованногоЛица, СтраховойНомерПФР";
		ПараметрыПолученияСотрудников.РаботникиПоДоговорамГПХ = Истина;
		ПараметрыПолученияСотрудников.ИмяВТФизическиеЛица = "ВТФильтрФизическихЛиц";
		
		УдалитьВТ = Новый Массив;
		УдалитьВТ.Добавить("ВТРаботникиПоТрудовымДоговорам");
		УдалитьВТ.Добавить("ВТРаботникиПоДоговорамГПХ");
		ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
		
	КонецЕсли;
	
	Возврат ПараметрыПолученияСотрудников;
	
КонецФункции

Процедура СоздатьВТДосрочноеНазначениеПенсииДляСЗВ_СТАЖ(МенеджерВременныхТаблиц, Организация, Год, ЗаписиОСтаже) Экспорт
	
	ФизическиеЛица = Новый Массив;
	  
	ОснованияВыслугиЛетСотрудников = Новый ТаблицаЗначений;
	ОснованияВыслугиЛетСотрудников.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ОснованияВыслугиЛетСотрудников.Колонки.Добавить("ОсобыеУсловияТруда", Новый ОписаниеТипов("СправочникСсылка.ОсобыеУсловияТрудаПФР,СправочникСсылка.ОсобыеУсловияТрудаДляСЗВКПФР"));
	ОснованияВыслугиЛетСотрудников.Колонки.Добавить("ОснованиеВыслугиЛет", Новый ОписаниеТипов("СправочникСсылка.ОснованияДосрочногоНазначенияПенсии,СправочникСсылка.ОснованияДосрочногоНазначенияПенсииДляСЗВК"));
	ОснованияВыслугиЛетСотрудников.Колонки.Добавить("КодПозицииСписка", Новый ОписаниеТипов("СправочникСсылка.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения"));
	
	Для Каждого СтрокаСотрудника Из ЗаписиОСтаже Цикл 
		Если Не ЗначениеЗаполнено(СтрокаСотрудника.ОсобыеУсловияТруда)
			И Не ЗначениеЗаполнено(СтрокаСотрудника.ОснованиеВыслугиЛет) Тогда 
			Продолжить;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ОснованияВыслугиЛетСотрудников.Добавить(), СтрокаСотрудника);
		ФизическиеЛица.Добавить(СтрокаСотрудника.Сотрудник);
	КонецЦикла;
	
	ОснованияВыслугиЛетСотрудников.Свернуть("Сотрудник,ОсобыеУсловияТруда,ОснованиеВыслугиЛет,КодПозицииСписка");
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ОснованияВыслугиЛетСотрудников", ОснованияВыслугиЛетСотрудников);
	
	Если ОснованияВыслугиЛетСотрудников.Количество() = 0 Тогда 
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 0
		               |	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
		               |	ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка) КАК Должность,
		               |	0 КАК КоличествоРаботающих,
		               |	0 КАК КоличествоРабочихМест,
		               |	ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка) КАК ОсобыеУсловияТруда,
		               |	ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка) КАК ОснованиеДосрочногоНазначенияПенсии,
		               |	ЗНАЧЕНИЕ(Справочник.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.ПустаяСсылка) КАК КодПозицииСписка,
		               |	"""" КАК ХарактерВыполняемыхРабот,
		               |	"""" КАК ПервичныеДокументы
		               |ПОМЕСТИТЬ ВТДосрочноеНазначениеПенсии
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	0 КАК ВсегоРаботающихДНП,
		               |	0 КАК ВсегоРабочихМестДНП
		               |ПОМЕСТИТЬ ВТИтоговыеСведения";
		Запрос.Выполнить();
		Возврат;
	КонецЕсли;
	
	ОтчетныйПериод = Дата(Год, 1, 1);
	
	Организации = УчетСтраховыхВзносов.ОрганизацииДляКонсолидацииОтчетовПоВзносам(Организация, ОтчетныйПериод);
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	
	ПараметрыПолученияСотрудников.Организация = Организации;
	ПараметрыПолученияСотрудников.НачалоПериода = ОтчетныйПериод; 
	ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецГода(ОтчетныйПериод); 
	ПараметрыПолученияСотрудников.КадровыеДанные = "ФизическоеЛицо, Подразделение, Должность, ДолжностьПоШтатномуРасписанию";
	
	КадровыйУчет.ДополнитьИменаКадровыхДанных(ПараметрыПолученияСотрудников.КадровыеДанные);
	
	Если ПараметрыПолученияСотрудников.Свойство("РаботникиПоДоговорамГПХ") Тогда
		ПараметрыПолученияСотрудников.РаботникиПоДоговорамГПХ = Истина;
	КонецЕсли;	
	
	ПараметрыПолученияСотрудников.СписокФизическихЛиц = ФизическиеЛица;
	
	УстановитьПривилегированныйРежим(Истина);
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Ложь, ПараметрыПолученияСотрудников);
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание") Тогда 
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ОснованияВыслугиЛетСотрудников.Сотрудник КАК ФизическоеЛицо,
		               |	ОснованияВыслугиЛетСотрудников.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
		               |	ОснованияВыслугиЛетСотрудников.ОснованиеВыслугиЛет КАК ОснованиеДосрочногоНазначенияПенсии,
		               |	ОснованияВыслугиЛетСотрудников.КодПозицииСписка КАК КодПозицииСписка
		               |ПОМЕСТИТЬ ВТОснованияВыслугиЛет
		               |ИЗ
		               |	&ОснованияВыслугиЛетСотрудников КАК ОснованияВыслугиЛетСотрудников
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СотрудникиОрганизации.Подразделение КАК Подразделение,
		               |	СотрудникиОрганизации.Должность КАК Должность,
		               |	СотрудникиОрганизации.ФизическоеЛицо КАК ФизическоеЛицо,
		               |	СотрудникиОрганизации.Должность.ОсобыеУсловияТрудаПФР КАК ОсобыеУсловияТруда,
		               |	СотрудникиОрганизации.Должность.ОснованиеДосрочногоНазначенияПенсии КАК ОснованиеДосрочногоНазначенияПенсии,
		               |	СотрудникиОрганизации.Должность.КодПозицииСпискаПФР КАК КодПозицииСписка
		               |ПОМЕСТИТЬ ВТКадровыеДанные
		               |ИЗ
		               |	ВТСотрудникиОрганизации КАК СотрудникиОрганизации
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ОснованияВыслугиЛет.ФизическоеЛицо КАК ФизическоеЛицо,
		               |	ОснованияВыслугиЛет.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
		               |	ОснованияВыслугиЛет.ОснованиеДосрочногоНазначенияПенсии КАК ОснованиеДосрочногоНазначенияПенсии,
		               |	ОснованияВыслугиЛет.КодПозицииСписка КАК КодПозицииСписка
		               |ПОМЕСТИТЬ ВТНеучтенныеСотрудники
		               |ИЗ
		               |	ВТОснованияВыслугиЛет КАК ОснованияВыслугиЛет
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанные КАК КадровыеДанные
		               |		ПО ОснованияВыслугиЛет.ФизическоеЛицо = КадровыеДанные.ФизическоеЛицо
		               |			И ОснованияВыслугиЛет.ОсобыеУсловияТруда = КадровыеДанные.ОсобыеУсловияТруда
		               |			И ОснованияВыслугиЛет.ОснованиеДосрочногоНазначенияПенсии = КадровыеДанные.ОснованиеДосрочногоНазначенияПенсии
		               |			И ОснованияВыслугиЛет.КодПозицииСписка = КадровыеДанные.КодПозицииСписка
		               |ГДЕ
		               |	КадровыеДанные.ФизическоеЛицо ЕСТЬ NULL
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	КадровыеДанные.Подразделение КАК Подразделение,
		               |	КадровыеДанные.Должность КАК Должность,
		               |	КадровыеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		               |	ОснованияВыслугиЛет.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
		               |	ОснованияВыслугиЛет.ОснованиеДосрочногоНазначенияПенсии КАК ОснованиеДосрочногоНазначенияПенсии,
		               |	ОснованияВыслугиЛет.КодПозицииСписка КАК КодПозицииСписка
		               |ПОМЕСТИТЬ ВТДанныеСотрудников
		               |ИЗ
		               |	ВТКадровыеДанные КАК КадровыеДанные
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОснованияВыслугиЛет КАК ОснованияВыслугиЛет
		               |		ПО КадровыеДанные.ФизическоеЛицо = ОснованияВыслугиЛет.ФизическоеЛицо
		               |			И КадровыеДанные.ОсобыеУсловияТруда = ОснованияВыслугиЛет.ОсобыеУсловияТруда
		               |			И КадровыеДанные.ОснованиеДосрочногоНазначенияПенсии = ОснованияВыслугиЛет.ОснованиеДосрочногоНазначенияПенсии
		               |			И КадровыеДанные.КодПозицииСписка = ОснованияВыслугиЛет.КодПозицииСписка
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	КадровыеДанные.Подразделение,
		               |	КадровыеДанные.Должность,
		               |	КадровыеДанные.ФизическоеЛицо,
		               |	КадровыеДанные.ОсобыеУсловияТруда,
		               |	КадровыеДанные.ОснованиеДосрочногоНазначенияПенсии,
		               |	КадровыеДанные.КодПозицииСписка
		               |ИЗ
		               |	ВТКадровыеДанные КАК КадровыеДанные
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНеучтенныеСотрудники КАК НеучтенныеСотрудники
		               |		ПО КадровыеДанные.ФизическоеЛицо = НеучтенныеСотрудники.ФизическоеЛицо
		               |			И КадровыеДанные.ОснованиеДосрочногоНазначенияПенсии = НеучтенныеСотрудники.ОснованиеДосрочногоНазначенияПенсии
		               |			И (НеучтенныеСотрудники.ОсобыеУсловияТруда = ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка))
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	КадровыеДанные.Подразделение,
		               |	КадровыеДанные.Должность,
		               |	КадровыеДанные.ФизическоеЛицо,
		               |	КадровыеДанные.ОсобыеУсловияТруда,
		               |	КадровыеДанные.ОснованиеДосрочногоНазначенияПенсии,
		               |	КадровыеДанные.КодПозицииСписка
		               |ИЗ
		               |	ВТКадровыеДанные КАК КадровыеДанные
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНеучтенныеСотрудники КАК НеучтенныеСотрудники
		               |		ПО КадровыеДанные.ФизическоеЛицо = НеучтенныеСотрудники.ФизическоеЛицо
		               |			И КадровыеДанные.ОсобыеУсловияТруда = НеучтенныеСотрудники.ОсобыеУсловияТруда
		               |			И (НеучтенныеСотрудники.ОснованиеДосрочногоНазначенияПенсии = ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка))
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеСотрудников.Подразделение КАК Подразделение,
		               |	ДанныеСотрудников.Должность КАК Должность,
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеСотрудников.ФизическоеЛицо) КАК КоличествоРаботающих,
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеСотрудников.ФизическоеЛицо) КАК КоличествоРабочихМест,
		               |	ДанныеСотрудников.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
		               |	ДанныеСотрудников.ОснованиеДосрочногоНазначенияПенсии КАК ОснованиеДосрочногоНазначенияПенсии,
		               |	ДанныеСотрудников.КодПозицииСписка КАК КодПозицииСписка,
		               |	Должности.ХарактерВыполняемыхРаботПФР КАК ХарактерВыполняемыхРабот,
		               |	Должности.ПервичныеДокументыПФР КАК ПервичныеДокументы
		               |ПОМЕСТИТЬ ВТДосрочноеНазначениеПенсии
		               |ИЗ
		               |	ВТДанныеСотрудников КАК ДанныеСотрудников
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
		               |		ПО ДанныеСотрудников.Должность = Должности.Ссылка
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ДанныеСотрудников.Подразделение,
		               |	ДанныеСотрудников.Должность,
		               |	ДанныеСотрудников.ОсобыеУсловияТруда,
		               |	ДанныеСотрудников.ОснованиеДосрочногоНазначенияПенсии,
		               |	ДанныеСотрудников.КодПозицииСписка,
		               |	Должности.ХарактерВыполняемыхРаботПФР,
		               |	Должности.ПервичныеДокументыПФР
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СотрудникиОрганизации.ФизическоеЛицо) КАК ВсегоРаботающихДНП,
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СотрудникиОрганизации.ФизическоеЛицо) КАК ВсегоРабочихМестДНП
		               |ПОМЕСТИТЬ ВТИтоговыеСведения
		               |ИЗ
		               |	ВТСотрудникиОрганизации КАК СотрудникиОрганизации";
					   
	
		Запрос.Выполнить();
		Возврат;
	
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию
	               |ИЗ
	               |	ВТСотрудникиОрганизации КАК СотрудникиОрганизации";
	
	ПозицииШтатногоРасписания = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ДолжностьПоШтатномуРасписанию");
	
	ПараметрыПостроения = УправлениеШтатнымРасписанием.ПараметрыПостроенияВТШтатноеРасписание(КонецГода(ОтчетныйПериод), Организации, , ПозицииШтатногоРасписания);
	
	УстановитьПривилегированныйРежим(Истина);
	УправлениеШтатнымРасписанием.СоздатьВТШтатноеРасписание(
		Запрос.МенеджерВременныхТаблиц, Ложь, ПараметрыПостроения, "Подразделение,Должность,КоличествоСтавок,ОсобыеУсловияТрудаПФР,ОснованиеДосрочногоНазначенияПенсии,КодПозицииСпискаПФР,ХарактерВыполняемыхРаботПФР,ПервичныеДокументыПФР");
	УстановитьПривилегированныйРежим(Ложь);
	
	СоздатьВТДосрочноеНазначениеПенсии(Запрос, Организации, Истина);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ДосрочноеНазначениеПенсии.КоличествоРаботающих) КАК ВсегоРаботающихДНП,
	               |	СУММА(ДосрочноеНазначениеПенсии.КоличествоРабочихМест) КАК ВсегоРабочихМестДНП
	               |ПОМЕСТИТЬ ВТИтоговыеСведения
	               |ИЗ
	               |	ВТДосрочноеНазначениеПенсии КАК ДосрочноеНазначениеПенсии";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТЗамещениеГосударственныхДолжностей(МенеджерВременныхТаблиц) Экспорт 
	
	Если ИспользоватьЗамещениеГосударственныхМуниципальныхДолжностей()
		И ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		Модуль.СоздатьВТЗамещениеГосударственныхДолжностей(МенеджерВременныхТаблиц);
	Иначе 
		ПерсонифицированныйУчетБазовый.СоздатьВТЗамещениеГосударственныхДолжностей(МенеджерВременныхТаблиц);
	КонецЕсли;
	
КонецПроцедуры

Функция ИспользоватьЗамещениеГосударственныхМуниципальныхДолжностей() Экспорт 
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьГосударственнуюСлужбу") Или ПолучитьФункциональнуюОпцию("ИспользоватьМуниципальнуюСлужбу");
	
КонецФункции

Процедура ЗаполнитьДанныеДосрочногоНазначенияПенсии(Объект, Организация, ОтчетныйПериод, ОкончаниеОтчетногоПериода) Экспорт
	
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	
	Организации = УчетСтраховыхВзносов.ОрганизацииДляКонсолидацииОтчетовПоВзносам(Организация, ОтчетныйПериод);
	
	ПараметрыПолученияСотрудников.Организация = Организации;
	ПараметрыПолученияСотрудников.НачалоПериода = ОтчетныйПериод;
	ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецДня(ОкончаниеОтчетногоПериода); 
	ПараметрыПолученияСотрудников.КадровыеДанные = "ФизическоеЛицо, Подразделение, Должность, ДолжностьПоШтатномуРасписанию";
	
	КадровыйУчет.ДополнитьИменаКадровыхДанных(ПараметрыПолученияСотрудников.КадровыеДанные);
	
	Если ПараметрыПолученияСотрудников.Свойство("РаботникиПоДоговорамГПХ") Тогда
		ПараметрыПолученияСотрудников.РаботникиПоДоговорамГПХ = Истина;
	КонецЕсли;	
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьПривилегированныйРежим(Истина);
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(МенеджерВременныхТаблиц, Ложь, ПараметрыПолученияСотрудников);
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание") Тогда 
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	СотрудникиОрганизации.Подразделение КАК Подразделение,
		               |	СотрудникиОрганизации.Должность КАК Должность,
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СотрудникиОрганизации.ФизическоеЛицо) КАК КоличествоРаботающих
		               |ПОМЕСТИТЬ ВТДанныеСотрудников
		               |ИЗ
		               |	ВТСотрудникиОрганизации КАК СотрудникиОрганизации
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	СотрудникиОрганизации.Подразделение,
		               |	СотрудникиОрганизации.Должность
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеСотрудников.Подразделение КАК Подразделение,
		               |	ДанныеСотрудников.Должность КАК Должность,
		               |	ДанныеСотрудников.КоличествоРаботающих КАК КоличествоРаботающих,
		               |	ДанныеСотрудников.КоличествоРаботающих КАК КоличествоРабочихМест,
		               |	Должности.ОсобыеУсловияТрудаПФР КАК ОснованиеВыслугиЛет,
		               |	Должности.ОснованиеДосрочногоНазначенияПенсии КАК ОснованиеДосрочногоНазначенияПенсии,
		               |	Должности.КодПозицииСпискаПФР КАК КодПозицииСписка,
		               |	Должности.ХарактерВыполняемыхРаботПФР КАК ХарактерВыполняемыхРабот,
		               |	Должности.ПервичныеДокументыПФР КАК ПервичныеДокументы
		               |ИЗ
		               |	ВТДанныеСотрудников КАК ДанныеСотрудников
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
		               |		ПО ДанныеСотрудников.Должность = Должности.Ссылка
		               |			И (Должности.ОсобыеУсловияТрудаПФР <> ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
		               |				ИЛИ Должности.ОснованиеДосрочногоНазначенияПенсии <> ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка))";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл 
			НоваяСтрока = Объект.ДосрочноеНазначениеПенсии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СотрудникиОрганизации.ФизическоеЛицо) КАК ВсегоРаботающихДНП,
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СотрудникиОрганизации.ФизическоеЛицо) КАК ВсегоРабочихМестДНП
		               |ИЗ
		               |	ВТСотрудникиОрганизации КАК СотрудникиОрганизации
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
		               |		ПО СотрудникиОрганизации.Должность = Должности.Ссылка
		               |			И (Должности.ОсобыеУсловияТрудаПФР <> ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
		               |				ИЛИ Должности.ОснованиеДосрочногоНазначенияПенсии <> ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка))";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда 
			ЗаполнитьЗначенияСвойств(Объект, Выборка);
		КонецЕсли;
		
		Возврат;
	
	КонецЕсли;
	
	ПараметрыПостроения = УправлениеШтатнымРасписанием.ПараметрыПостроенияВТШтатноеРасписание(КонецГода(ОтчетныйПериод), Организации);
	
	УстановитьПривилегированныйРежим(Истина);
	
	УправлениеШтатнымРасписанием.СоздатьВТШтатноеРасписание(
		Запрос.МенеджерВременныхТаблиц, Ложь, ПараметрыПостроения, "Подразделение,Должность,КоличествоСтавок,ОсобыеУсловияТрудаПФР,ОснованиеДосрочногоНазначенияПенсии,КодПозицииСпискаПФР,ХарактерВыполняемыхРаботПФР,ПервичныеДокументыПФР");
	
	УстановитьПривилегированныйРежим(Ложь);
	
	СоздатьВТДосрочноеНазначениеПенсии(Запрос, Организации);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДосрочноеНазначениеПенсии.*
		|ИЗ
		|	ВТДосрочноеНазначениеПенсии КАК ДосрочноеНазначениеПенсии";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		НоваяСтрока = Объект.ДосрочноеНазначениеПенсии.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ДосрочноеНазначениеПенсии.КоличествоРаботающих) КАК ВсегоРаботающихДНП,
	               |	СУММА(ДосрочноеНазначениеПенсии.КоличествоРабочихМест) КАК ВсегоРабочихМестДНП
	               |ИЗ
	               |	ВТДосрочноеНазначениеПенсии КАК ДосрочноеНазначениеПенсии";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		ЗаполнитьЗначенияСвойств(Объект, Выборка);
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьВТДосрочноеНазначениеПенсии(Запрос, Организации, ИспользуетсяФильтр = Ложь)
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ОхранаТруда") Тогда
		СтандартнаяОбработка = Истина;
		МодульОхранаТруда = ОбщегоНазначения.ОбщийМодуль("ОхранаТруда");
		МодульОхранаТруда.СоздатьВТДосрочноеНазначениеПенсии(Запрос, Организации, СтандартнаяОбработка, ИспользуетсяФильтр);
		Если Не СтандартнаяОбработка Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ
		|	ПозицииШтатногоРасписания.Подразделение КАК Подразделение,
		|	ПозицииШтатногоРасписания.Должность КАК Должность,
		|	СУММА(ПозицииШтатногоРасписания.КоличествоСтавок) КАК КоличествоРабочихМест,
		|	ПозицииШтатногоРасписания.ОсобыеУсловияТрудаПФР КАК ОсобыеУсловияТруда,
		|	ПозицииШтатногоРасписания.ОснованиеДосрочногоНазначенияПенсии КАК ОснованиеДосрочногоНазначенияПенсии,
		|	ПозицииШтатногоРасписания.КодПозицииСпискаПФР КАК КодПозицииСписка,
		|	ПозицииШтатногоРасписания.ХарактерВыполняемыхРаботПФР КАК ХарактерВыполняемыхРабот,
		|	ПозицииШтатногоРасписания.ПервичныеДокументыПФР КАК ПервичныеДокументы
		|ПОМЕСТИТЬ ВТДанныеШтатногоРасписания
		|ИЗ
		|	ВТШтатноеРасписание КАК ПозицииШтатногоРасписания
		|ГДЕ
		|	(ПозицииШтатногоРасписания.ОсобыеУсловияТрудаПФР <> ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
		|	ИЛИ
		|		ПозицииШтатногоРасписания.ОснованиеДосрочногоНазначенияПенсии <> ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка))
		|СГРУППИРОВАТЬ ПО
		|	ПозицииШтатногоРасписания.Подразделение,
		|	ПозицииШтатногоРасписания.Должность,
		|	ПозицииШтатногоРасписания.ОсобыеУсловияТрудаПФР,
		|	ПозицииШтатногоРасписания.ОснованиеДосрочногоНазначенияПенсии,
		|	ПозицииШтатногоРасписания.КодПозицииСпискаПФР,
		|	ПозицииШтатногоРасписания.ХарактерВыполняемыхРаботПФР,
		|	ПозицииШтатногоРасписания.ПервичныеДокументыПФР
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СотрудникиОрганизации.Подразделение КАК Подразделение,
		|	СотрудникиОрганизации.Должность КАК Должность,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СотрудникиОрганизации.ФизическоеЛицо) КАК КоличествоРаботающих,
		|	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию.ОсобыеУсловияТрудаПФР КАК ОсобыеУсловияТруда,
		|	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию.ОснованиеДосрочногоНазначенияПенсии КАК
		|		ОснованиеДосрочногоНазначенияПенсии,
		|	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию.КодПозицииСпискаПФР КАК КодПозицииСписка
		|ПОМЕСТИТЬ ВТДанныеСотрудников
		|ИЗ
		|	ВТСотрудникиОрганизации КАК СотрудникиОрганизации
		|СГРУППИРОВАТЬ ПО
		|	СотрудникиОрганизации.Подразделение,
		|	СотрудникиОрганизации.Должность,
		|	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию.ОсобыеУсловияТрудаПФР,
		|	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию.ОснованиеДосрочногоНазначенияПенсии,
		|	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию.КодПозицииСпискаПФР
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеШтатногоРасписания.Подразделение КАК Подразделение,
		|	ДанныеШтатногоРасписания.Должность КАК Должность,
		|	ЕСТЬNULL(ДанныеСотрудников.КоличествоРаботающих, 0) КАК КоличествоРаботающих,
		|	ДанныеШтатногоРасписания.КоличествоРабочихМест КАК КоличествоРабочихМест,
		|	ДанныеШтатногоРасписания.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
		|	ДанныеШтатногоРасписания.ОснованиеДосрочногоНазначенияПенсии КАК ОснованиеДосрочногоНазначенияПенсии,
		|	ДанныеШтатногоРасписания.КодПозицииСписка КАК КодПозицииСписка,
		|	ДанныеШтатногоРасписания.ХарактерВыполняемыхРабот КАК ХарактерВыполняемыхРабот,
		|	ДанныеШтатногоРасписания.ПервичныеДокументы КАК ПервичныеДокументы
		|ПОМЕСТИТЬ ВТДосрочноеНазначениеПенсии
		|ИЗ
		|	ВТДанныеШтатногоРасписания КАК ДанныеШтатногоРасписания
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСотрудников КАК ДанныеСотрудников
		|		ПО ДанныеШтатногоРасписания.Подразделение = ДанныеСотрудников.Подразделение
		|		И ДанныеШтатногоРасписания.Должность = ДанныеСотрудников.Должность
		|		И ДанныеШтатногоРасписания.ОсобыеУсловияТруда = ДанныеСотрудников.ОсобыеУсловияТруда
		|		И ДанныеШтатногоРасписания.ОснованиеДосрочногоНазначенияПенсии = ДанныеСотрудников.ОснованиеДосрочногоНазначенияПенсии
		|		И ДанныеШтатногоРасписания.КодПозицииСписка = ДанныеСотрудников.КодПозицииСписка";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура УстановитьСвязиПараметровВыбораСотрудников(ЭлементФормы) Экспорт 
	
КонецПроцедуры

Процедура СоздатьВТКадровыеДанныеФизическихЛицДоНачалаЭксплуатации(МенеджерВременныхТаблиц, Организация, НачалоПериода, ОкончаниеПериода) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК Поле1
		|ИЗ
		|	РегистрСведений.ЗаписиОСтажеДоНачалаЭксплуатации КАК ЗаписиОСтажеДоНачалаЭксплуатации
		|ГДЕ
		|	&УсловиеПоОрганизации
		|	И ЗаписиОСтажеДоНачалаЭксплуатации.ДатаОкончанияПериода > &НачалоПериода";
	Если ЗначениеЗаполнено(Организация) Тогда
		Если ТипЗнч(Организация) = Тип("Массив") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоОрганизации", "ЗаписиОСтажеДоНачалаЭксплуатации.Организация В(&Организация)");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоОрганизации", "ЗаписиОСтажеДоНачалаЭксплуатации.Организация = &Организация");
		КонецЕсли;
		Запрос.УстановитьПараметр("Организация", Организация);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоОрганизации", "ИСТИНА");
	КонецЕсли;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	Если Результат.Пустой() Тогда
		ПерсонифицированныйУчетБазовый.СоздатьВТКадровыеДанныеФизическихЛицДоНачалаЭксплуатации(МенеджерВременныхТаблиц);
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаписиОСтажеДоНачалаЭксплуатации.ФизическоеЛицо КАК ФизическоеЛицо,
		|	&ОкончаниеПериода КАК Период
		|ПОМЕСТИТЬ ВТФизическиеЛица
		|ИЗ
		|	РегистрСведений.ЗаписиОСтажеДоНачалаЭксплуатации КАК ЗаписиОСтажеДоНачалаЭксплуатации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиОрганизации КАК СотрудникиОрганизации
		|		ПО ЗаписиОСтажеДоНачалаЭксплуатации.ФизическоеЛицо = СотрудникиОрганизации.ФизическоеЛицо
		|ГДЕ
		|	&УсловиеПоОрганизации
		|	И ЗаписиОСтажеДоНачалаЭксплуатации.ДатаОкончанияПериода > &НачалоПериода
		|	И СотрудникиОрганизации.ФизическоеЛицо ЕСТЬ NULL";
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Если ЗначениеЗаполнено(Организация) Тогда
		Если ТипЗнч(Организация) = Тип("Массив") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоОрганизации", "ЗаписиОСтажеДоНачалаЭксплуатации.Организация В(&Организация)");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоОрганизации", "ЗаписиОСтажеДоНачалаЭксплуатации.Организация = &Организация");
		КонецЕсли;
		Запрос.УстановитьПараметр("Организация", Организация);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоОрганизации", "ИСТИНА");
	КонецЕсли;
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(МенеджерВременныхТаблиц, "ВТФизическиеЛица");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, "Фамилия, Имя, Отчество, СтраховойНомерПФР, Страна, ИНН, ДатаРождения, ВидЗастрахованногоЛица");
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, "ВТФизическиеЛица");
	
КонецПроцедуры

Процедура ЗаписатьТерриториальныеУсловияДополнительныеПФР(СтруктурнаяЕдиница, РаботаВСельскомХозяйстве) Экспорт
	
	Отбор = Новый Структура("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	Выборка = РегистрыСведений.ТерриториальныеУсловияДополнительныеПФР.Выбрать(Отбор);
	
	БылоРаботаВСельскомХозяйстве = Ложь;
	Если Выборка.Следующий() И Выборка.ТерриториальныеУсловияПФР = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ТерриториальныеУсловияПФР.СЕЛО") Тогда 
		БылоРаботаВСельскомХозяйстве = Истина;
	КонецЕсли;
	
	Если РаботаВСельскомХозяйстве = БылоРаботаВСельскомХозяйстве Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ТерриториальныеУсловияДополнительныеПФР.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.СтруктурнаяЕдиница.Установить(СтруктурнаяЕдиница);
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.СтруктурнаяЕдиница = СтруктурнаяЕдиница;
	НоваяЗапись.ТерриториальныеУсловияПФР = ?(РаботаВСельскомХозяйстве, ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ТерриториальныеУсловияПФР.СЕЛО"), Неопределено);
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ЗаполнитьДанныеРуководителя(Объект) Экспорт
	
	ЗапрашиваемыеЗначения = Новый Структура("Руководитель, ДолжностьРуководителя");
	ЗапрашиваемыеЗначения.Вставить("Организация", Объект.Организация);
	ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗапрашиваемыеЗначения);
	
	ЗаполнитьЗначенияСвойств(Объект, ЗапрашиваемыеЗначения, "Руководитель, ДолжностьРуководителя");
	
КонецПроцедуры

Процедура ЗаполнитьРазрядыКатегорииДокументовТрудовыхКнижек(ПараметрыОбновления) Экспорт
	
	ОбработкаЗавершена = Истина;
	
	Запрос = Новый Запрос;
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Мероприятия КАК СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия
		|ГДЕ
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.УдалитьРазрядКатегория <> """"
		|	И СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.РазрядКатегория = ЗНАЧЕНИЕ(Справочник.РазрядыКатегорииДолжностей.ПустаяСсылка)
		|	И НЕ СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Ссылка В (&МассивОбновленных)";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 0 Тогда
	
		ОбработкаЗавершена = Ложь;
		Пока Выборка.Следующий() Цикл
			
			МассивОбновленных.Добавить(Выборка.Ссылка);
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД", "Ссылка", Выборка.Ссылка) Тогда
				Продолжить;
			КонецЕсли;
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если ДокументОбъект.ПереименованиеОрганизации Тогда
				ДанныеСотрудников = ЭлектронныеТрудовыеКнижки.ДанныеТрудовойДеятельностиСотрудниковОрганизации(
					Истина, ДокументОбъект.Организация, ДокументОбъект.ДатаПереименования, КонецДня(ДокументОбъект.ДатаПереименования), Истина);
			Иначе
				ДанныеСотрудников = ЭлектронныеТрудовыеКнижки.ДанныеТрудовойДеятельностиСотрудниковОрганизации(
					Истина, ДокументОбъект.Организация, ДокументОбъект.ОтчетныйПериод, КонецМесяца(ДокументОбъект.ОтчетныйПериод), Истина);
			КонецЕсли;
			
			Для Каждого ДанныеСотрудника Из ДанныеСотрудников Цикл
				
				Для Каждого ЗаписьТрудовойДеятельности Из ДанныеСотрудника.ТрудоваяДеятельность Цикл
					
					Если ЗначениеЗаполнено(ЗаписьТрудовойДеятельности.РазрядКатегория) Тогда
						
						СтруктураПоиска = Новый Структура("ДатаМероприятия,ВидМероприятия,Подразделение,Должность");
						ЗаполнитьЗначенияСвойств(СтруктураПоиска, ЗаписьТрудовойДеятельности);
						
						НайденныеСтроки = ДокументОбъект.Мероприятия.НайтиСтроки(СтруктураПоиска);
						Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
							Если Не ПустаяСтрока(НайденнаяСтрока.УдалитьРазрядКатегория) Тогда
								НайденнаяСтрока.РазрядКатегория = ЗаписьТрудовойДеятельности.РазрядКатегория;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", ОбработкаЗавершена);
	
КонецПроцедуры

Процедура ЗаполнитьЗаписиОСтажеСЗВК(Объект, ФизическиеЛица) Экспорт
	
	Если ФизическиеЛица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
		
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФизическиеЛица.Ссылка КАК ФизическоеЛицо
	               |ПОМЕСТИТЬ ВТСотрудники
	               |ИЗ
	               |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |ГДЕ
	               |	ФизическиеЛица.Ссылка В(&ФизическиеЛица)";
	
	Запрос.Выполнить();
	
	ОписаниеВТ = Новый Структура("ИмяВременнойТаблицыОтборовФизическихЛиц,ИмяПоляФизическоеЛицо", "ВТСотрудники", "ФизическоеЛицо");
	Запрос = КадровыйУчетРасширенный.ЗапросВТТрудоваяДеятельностьФизическихЛиц(Истина, ОписаниеВТ);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТрудоваяДеятельностьФизическихЛиц.ФизическоеЛицо КАК Сотрудник,
	               |	ВЫБОР
	               |		КОГДА ТрудоваяДеятельностьФизическихЛиц.ДатаНачала < ДАТАВРЕМЯ(2002, 1, 1)
	               |			ТОГДА ДАТАВРЕМЯ(2002, 1, 1)
	               |		ИНАЧЕ ТрудоваяДеятельностьФизическихЛиц.ДатаНачала
	               |	КОНЕЦ КАК ДатаНачалаПериода,
	               |	ТрудоваяДеятельностьФизическихЛиц.ДатаОкончания КАК ДатаОкончанияПериода,
	               |	ТрудоваяДеятельностьФизическихЛиц.Организация КАК ОрганизацияТрудовойДеятельности,
	               |	ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельностиСЗВК.ТДКРЫМ) КАК ВидДеятельности,
	               |	1 КАК НомерОсновнойЗаписи
	               |ИЗ
	               |	ВТТрудоваяДеятельностьФизическихЛиц КАК ТрудоваяДеятельностьФизическихЛиц
	               |ГДЕ
	               |	ТрудоваяДеятельностьФизическихЛиц.ДатаНачала < ДАТАВРЕМЯ(2015, 1, 1)
	               |	И ТрудоваяДеятельностьФизическихЛиц.ДатаОкончания >= ДАТАВРЕМЯ(2002, 1, 1)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТрудоваяДеятельностьФизическихЛиц.ФизическоеЛицо,
	               |	ТрудоваяДеятельностьФизическихЛиц.ДатаНачала";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТаблицаЗаписейОСтажеПоСотруднику = Объект.ЗаписиОСтаже.Выгрузить().СкопироватьКолонки();
	Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
		
		НоваяСтрока = Неопределено;
		ЗаписьОСтаже = Неопределено;
		
		НомерПериода = 1;
		ТаблицаЗаписейОСтажеПоСотруднику.Очистить();
		
		Пока Выборка.Следующий() Цикл
			
			Если НоваяСтрока <> Неопределено 
				И НоваяСтрока.ОрганизацияТрудовойДеятельности = Выборка.ОрганизацияТрудовойДеятельности
				И КонецДня(НоваяСтрока.ДатаОкончанияПериода) + 1 = Выборка.ДатаНачалаПериода Тогда
				НоваяСтрока.ДатаОкончанияПериода = ?(Выборка.ДатаОкончанияПериода > Дата(2014, 12, 31),
					Дата(2014, 12, 31), Выборка.ДатаОкончанияПериода);
				ЗаписьОСтаже.ДатаОкончанияПериода = НоваяСтрока.ДатаОкончанияПериода;
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = Объект.ЗаписиОСтаже.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.НомерПериодаТрудовойДеятельности = НомерПериода;
			Если НоваяСтрока.ДатаОкончанияПериода > Дата(2014, 12, 31) Тогда
				НоваяСтрока.ДатаОкончанияПериода = Дата(2014, 12, 31)
			КонецЕсли;
			
			ЗаписьОСтаже = ТаблицаЗаписейОСтажеПоСотруднику.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьОСтаже, НоваяСтрока);
			НомерПериода = НомерПериода + 1;
			
		КонецЦикла;
		
		ТаблицаИтоговогоСтажаПоСотруднику = ПерсонифицированныйУчет.ПолучитьТаблицуИтоговСтажаПоСотруднику(ТаблицаЗаписейОСтажеПоСотруднику, Выборка.Сотрудник);
		Для Каждого СтрокаИтоговогоСтажа Из ТаблицаИтоговогоСтажаПоСотруднику Цикл
			НоваяСтрока = Объект.СведенияДляОценкиПенсионныхПрав.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаИтоговогоСтажа);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры	

Процедура СоздатьЗапросРабочиеМестаСЗВ_ДСО(Запрос, РеквизитыДокумента) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РабочиеМестаСотрудников.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию
	               |ИЗ
	               |	ВТРабочиеМестаСотрудников КАК РабочиеМестаСотрудников";
	
	ПозицииШтатногоРасписания = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ДолжностьПоШтатномуРасписанию");
	
	Организации = УчетСтраховыхВзносов.ОрганизацииДляКонсолидацииОтчетовПоВзносам(РеквизитыДокумента.Организация, РеквизитыДокумента.ОтчетныйПериод);
	ПараметрыПостроения = УправлениеШтатнымРасписанием.ПараметрыПостроенияВТШтатноеРасписание(КонецГода(РеквизитыДокумента.ОтчетныйПериод), Организации, , ПозицииШтатногоРасписания);
	
	УстановитьПривилегированныйРежим(Истина);
	УправлениеШтатнымРасписанием.СоздатьВТШтатноеРасписание(
		Запрос.МенеджерВременныхТаблиц, Ложь, ПараметрыПостроения, "ВидСтажаЛетныхЭкипажей,ВидСтажаШахтеров");
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РабочиеМеста.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РабочиеМеста.Сотрудник КАК Сотрудник,
		|	РабочиеМеста.Период КАК ДатаНачалаПериода,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОкончанияПериода,
		|	РабочиеМеста.ВидСобытия КАК ВидСобытия,
		|	ВЫБОР
		|		КОГДА РабочиеМеста.Должность В (&СписокДолжностей)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВключатьВСтаж,
		|	ВЫБОР
		|		КОГДА РабочиеМеста.Должность.ЯвляетсяДолжностьюЛетногоЭкипажа
		|			ТОГДА ШтатноеРасписание.ВидСтажаЛетныхЭкипажей
		|		ИНАЧЕ ШтатноеРасписание.ВидСтажаШахтеров
		|	КОНЕЦ КАК ВидСтажа
		|ИЗ
		|	ВТРабочиеМестаСотрудников КАК РабочиеМеста
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТШтатноеРасписание КАК ШтатноеРасписание
		|		ПО РабочиеМеста.ДолжностьПоШтатномуРасписанию = ШтатноеРасписание.ПозицияШтатногоРасписания
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	Сотрудник,
		|	ДатаНачалаПериода";
	
КонецПроцедуры

Процедура ЗаполнитьПериодыИзмененияТерриторий(МенеджерВременныхТаблиц) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеТерритории") Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СотрудникиПериоды.Сотрудник КАК Сотрудник,
		|	ТерриторииСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НАЧАЛОПЕРИОДА(ТерриторииСотрудников.ДатаНачала, ДЕНЬ) КАК Период
		|ПОМЕСТИТЬ ВТТерриторииСотрудниковПериоды
		|ИЗ
		|	ВТСотрудникиПериоды КАК СотрудникиПериоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТерриторииСотрудниковИнтервальный КАК ТерриторииСотрудников
		|		ПО СотрудникиПериоды.Сотрудник = ТерриторииСотрудников.Сотрудник
		|			И (ТерриторииСотрудников.ДатаНачала МЕЖДУ СотрудникиПериоды.НачалоПериода И СотрудникиПериоды.ОкончаниеПериода)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтборСотрудниковРК.Сотрудник КАК Сотрудник,
		|	ОтборСотрудниковРК.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ОтборСотрудниковРК.Период КАК Период
		|ПОМЕСТИТЬ ВТОтборСотрудниковРКПредварительно
		|ИЗ
		|	ВТОтборСотрудниковРК КАК ОтборСотрудниковРК
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТерриторииСотрудниковПериоды.Сотрудник,
		|	ТерриторииСотрудниковПериоды.ФизическоеЛицо,
		|	ТерриторииСотрудниковПериоды.Период
		|ИЗ
		|	ВТТерриторииСотрудниковПериоды КАК ТерриторииСотрудниковПериоды
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОтборСотрудниковРК
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтборСотрудниковРКПредварительно.Сотрудник КАК Сотрудник,
		|	ОтборСотрудниковРКПредварительно.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ОтборСотрудниковРКПредварительно.Период КАК Период
		|ПОМЕСТИТЬ ВТОтборСотрудниковРК
		|ИЗ
		|	ВТОтборСотрудниковРКПредварительно КАК ОтборСотрудниковРКПредварительно";
	
	Запрос.Выполнить();
	
	ИменаВТ = Новый Массив;
	ИменаВТ.Добавить("ВТТерриторииСотрудниковПериоды");
	ИменаВТ.Добавить("ВТОтборСотрудниковРКПредварительно");
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, ИменаВТ);
	
КонецПроцедуры

#КонецОбласти
