#Область ПрограммныйИнтерфейс

// Возвращает признак необходимости применения для организации ПБУ18.
// Параметры:
//	Организация - Массив, СписокЗначений, СправочникСсылка.Организации - организация, для которой определяется необходимость применения ПБУ18;
//	Период - Дата - дата, на начало месяца которой определяется необходимость применения ПБУ18.
//
// Возвращаемое значение:
//	Булево - Истина, если организация на дату применяет ПБУ18. В противном случае - ложь.
//
Функция ПоддержкаПБУ18(Знач Организация, Период) Экспорт
	Результат = Ложь;
	//++ НЕ УТ

	//++ Локализация
	
	Организация = НастройкиНалоговУчетныхПолитик.ОбработанныйПараметрОрганизация(Организация);
	
	НаДату = ?(ЗначениеЗаполнено(Период), Период, НачалоМесяца(ТекущаяДатаСеанса()));
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();

	НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицДействующимиПараметрамиНалоговУчетныхПолитик(
		Метаданные.РегистрыСведений.УчетнаяПолитикаБухУчета.Имя,
		МенеджерВременныхТаблиц,
		НаДату,
		"втДанныеПолитик",
		Организация);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИСТИНА
	|ИЗ
	|	втДанныеПолитик КАК Т
	|ГДЕ
	|	Т.ПрименяетсяПБУ18 = ИСТИНА
	|";
	
	Результат = НЕ Запрос.Выполнить().Пустой();
	
	//-- Локализация

	//-- НЕ УТ
	
	Возврат Результат;
	
КонецФункции

// Возвращает признак ведения учета постоянных разниц.
//
// Параметры:
//	Организация - Массив, СписокЗначений, СправочникСсылка.Организации - организация, для которой определяется признак;
//	Период - Дата - дата, на начало месяца которой определяется признак.
//
// Возвращаемое значение:
//	Булево - Истина, если организация ведет учет постоянных разниц.
//
Функция ВедетсяУчетПостоянныхИВременныхРазниц(Знач Организация, Период) Экспорт
	
	Результат = Ложь;
	//++ НЕ УТ

	//++ Локализация
	
	Организация = НастройкиНалоговУчетныхПолитик.ОбработанныйПараметрОрганизация(Организация);
	
	НаДату = ?(ЗначениеЗаполнено(Период), Период, НачалоМесяца(ТекущаяДатаСеанса()));
	
	Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации")
		ИЛИ НЕ ЗначениеЗаполнено(Организация) Тогда
		
		ПараметрыФО = Новый Структура;
		
		// Если организация/список организаций не заполнен
		// получаем глобальное значение по всем организациям.
		// Поэтому заполняем параметр "организация" только в случае заполненного значения
		Если ЗначениеЗаполнено(Организация) Тогда
			УстановитьПривилегированныйРежим(Истина);
			ПараметрыФО.Вставить(
				"Организация",
				ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация));
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли;
		
		ПараметрыФО.Вставить("Период", НачалоМесяца(НаДату));
	
		ВедетсяУчетПостоянныхИВременныхРазниц = ПолучитьФункциональнуюОпцию("ВедетсяУчетПостоянныхИВременныхРазниц", ПараметрыФО);
		ВедетсяУчетПостоянныхИВременныхРазницОбщая = ПолучитьФункциональнуюОпцию("ВедетсяУчетПостоянныхИВременныхРазницОбщая");
		
		Результат = ВедетсяУчетПостоянныхИВременныхРазниц Или ВедетсяУчетПостоянныхИВременныхРазницОбщая;
	
	Иначе
		
		// Заполненный список организаций
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();

		НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицДействующимиПараметрамиНалоговУчетныхПолитик(
			Метаданные.РегистрыСведений.УчетнаяПолитикаБухУчета.Имя,
			МенеджерВременныхТаблиц,
			НаДату,
			"втДанныеПолитик",
			Организация);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИСТИНА
		|ИЗ
		|	втДанныеПолитик КАК Т
		|ГДЕ
		|	Т.ВедетсяУчетПостоянныхИВременныхРазниц = ИСТИНА
		|";
		
		Результат = НЕ Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	//-- Локализация

	//-- НЕ УТ
	
	Возврат Результат;
	
КонецФункции

// Возвращает применяемый вариант учета отложенного налога по организации на дату
//
// Параметры:
//  Период		 - Дата - Дата, на которую требуется определение
//  Организация	 - СправочникСсылка.Организации - Организация, по которой требуется определение
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.ВариантыУчетаОтложенногоНалога - 
//
Функция ВариантУчетаОтложенногоНалога(Период, Знач Организация) Экспорт
	
	Результат = Неопределено;
	
	//++ НЕ УТ

	//++ Локализация
	Если ЗначениеЗаполнено(Организация) Тогда
		
		НаДату = ?(ЗначениеЗаполнено(Период), Период, НачалоМесяца(ТекущаяДатаСеанса()));
		ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
			"УчетнаяПолитикаБухУчета",
			Организация,
			НачалоМесяца(НаДату),
			Ложь);
			
		Результат = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			ПараметрыУчетнойПолитики,
			"ВариантУчетаОтложенногоНалога");
			
	КонецЕсли;
	//-- Локализация

	//-- НЕ УТ
	
	Возврат Результат;
	
КонецФункции

// Возвращает варианты налогообложения прибыли, настроенные для организации. 
//
// Параметры:
// 	Организация - СправочникСсылка.Организации - Организация, для которой необходимо получить признак учетной политики
// 	Период 		- Дата, Неопределено - Дата действия учетной политики
// 	КодМестаПредставления - Строка - Дополнительный отбор по коду места предоставления. Необязательный
//
// Возвращаемое значение:
//  Массив из СправочникСсылка.ВариантыНалогообложенияПрибыли
// 
Функция ВариантыНалогообложенияПрибыли(Организация, Период, КодМестаПредставления = Неопределено) Экспорт
	
	ВариантыНалогообложенияПрибыли = Неопределено;
	
	//++ НЕ УТ

	//++ Локализация
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВариантыНалогообложенияПрибыли.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВариантыНО
		|ИЗ
		|	Справочник.ВариантыНалогообложенияПрибыли КАК ВариантыНалогообложенияПрибыли
		|ГДЕ
		|	ВЫБОР
		|		КОГДА &КодМестаПредставления <> НЕОПРЕДЕЛЕНО
		|			ТОГДА ВариантыНалогообложенияПрибыли.КодМестаПредставления = &КодМестаПредставления
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалогообложениеПрибылиОрганизаций.ВариантНалогообложенияПрибыли КАК ВариантНалогообложенияПрибыли
		|ИЗ
		|	РегистрСведений.НалогообложениеПрибылиОрганизаций.СрезПоследних(&Период, Организация = &Организация
		|	И ВариантНалогообложенияПрибыли В
		|		(ВЫБРАТЬ
		|			ВариантыНО.Ссылка
		|		ИЗ
		|			ВариантыНО КАК ВариантыНО)) КАК НалогообложениеПрибылиОрганизаций";
	
	Запрос.УстановитьПараметр("КодМестаПредставления", КодМестаПредставления);
	Запрос.УстановитьПараметр("Организация",           Организация);
	Запрос.УстановитьПараметр("Период",                Период);
	
	РезультатЗапроса = Запрос.Выполнить();

	Если Не РезультатЗапроса.Пустой() Тогда
		ВариантыНалогообложенияПрибыли = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ВариантНалогообложенияПрибыли");
		ПараметрыПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаНалогаНаПрибыль",
			Организация,
			Период);
		Если ПараметрыПолитики <> Неопределено Тогда
			ВариантыНалогообложенияПрибыли.Добавить(ПараметрыПолитики.ОсновнойВариантНалогообложенияПрибыли);
		КонецЕсли;
		ВариантыНалогообложенияПрибыли = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(ВариантыНалогообложенияПрибыли);
		ИндексПустого = ВариантыНалогообложенияПрибыли.Найти(Справочники.ВариантыНалогообложенияПрибыли.ПустаяСсылка());
		Если ИндексПустого <> Неопределено Тогда
			ВариантыНалогообложенияПрибыли.Удалить(ИндексПустого);
		КонецЕсли;
		Если ВариантыНалогообложенияПрибыли.Количество() = 1 Тогда
			ВариантыНалогообложенияПрибыли = Неопределено;
		КонецЕсли;
	КонецЕсли;
	//-- Локализация

	//-- НЕ УТ
	Возврат ВариантыНалогообложенияПрибыли;
	
КонецФункции

// Возвращает признак применения для организации ФСБУ 25/2018.
// Параметры:
//	Организация - Массив, СписокЗначений, СправочникСсылка.Организации - организация, для которой определяется применение ФСБУ 25/2018;
//	Период - Дата - дата, на начало месяца которой определяется применение ФСБУ 25/2018.
//
// Возвращаемое значение:
//	Булево - Истина, если организация на дату применяет ФСБУ 25/2018. В противном случае - ложь.
//
Функция ПрименяетсяФСБУ25(Знач Организация, Период) Экспорт
	Результат = Ложь;
	//++ НЕ УТ

	//++ Локализация
	
	Организация = НастройкиНалоговУчетныхПолитик.ОбработанныйПараметрОрганизация(Организация);
	
	НаДату = ?(ЗначениеЗаполнено(Период), Период, НачалоМесяца(ТекущаяДатаСеанса()));
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();

	НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицДействующимиПараметрамиНалоговУчетныхПолитик(
		Метаданные.РегистрыСведений.УчетнаяПолитикаФинансовогоУчета.Имя,
		МенеджерВременныхТаблиц,
		НаДату,
		"втДанныеПолитик",
		Организация);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИСТИНА
	|ИЗ
	|	втДанныеПолитик КАК Т
	|ГДЕ
	|	Т.УчетАрендыПоФСБУ25_2018 = ИСТИНА
	|";
	
	Результат = НЕ Запрос.Выполнить().Пустой();
	
	//-- Локализация

	//-- НЕ УТ
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция СистемаНалогообложенияОрганизации(Организация, ДатаДействия = Неопределено, ПоУмолчанию = Истина) Экспорт
	
	СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая;
	Если ТипЗнч(Организация) = Тип("Массив") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	//++ Локализация
	Если НЕ ЗначениеЗаполнено(ДатаДействия) Тогда
		ДатаДействия = НачалоМесяца(ТекущаяДатаСеанса());
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСрезПоследних.СистемаНалогообложения КАК СистемаНалогообложения
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&Период,
	|		Организация = ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).ГоловнаяОрганизация) КАК ТаблицаСрезПоследних
	|";
	Запрос.УстановитьПараметр("Период", ДатаДействия);
	Запрос.УстановитьПараметр("Организация", Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СистемаНалогообложения = Выборка.СистемаНалогообложения;
	ИначеЕсли Не ПоУмолчанию Тогда
		СистемаНалогообложения = Неопределено;
	КонецЕсли;
	//-- Локализация
	Возврат СистемаНалогообложения;
	
КонецФункции

// Возвращает применяет ли организация патенты на указанную дату
//
// Параметры:
//  Организация	 - СправочникСсылка.Организации - Организация, по которой требуется определение
//  ДатаДействия		 - Дата - Дата, на которую требуется определение
// 
// Возвращаемое значение:
//  Булево - использует организация патенты на указанную дату
//
Функция ОрганизацияПрименяетПатенты(Организация, ДатаДействия = Неопределено) Экспорт
	
	ПрименяетсяПСН = Ложь;
	Если ТипЗнч(Организация) = Тип("Массив") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	//++ Локализация
	Если НЕ ЗначениеЗаполнено(ДатаДействия) Тогда
		ДатаДействия = НачалоМесяца(ТекущаяДатаСеанса());
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСрезПоследних.ПрименяетсяПСН КАК ПрименяетсяПСН
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&Период,
	|		Организация = ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).ГоловнаяОрганизация) КАК ТаблицаСрезПоследних
	|";
	Запрос.УстановитьПараметр("Период", ДатаДействия);
	Запрос.УстановитьПараметр("Организация", Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПрименяетсяПСН = Выборка.ПрименяетсяПСН;
	КонецЕсли;
	//-- Локализация
	Возврат ПрименяетсяПСН;
	
КонецФункции

Процедура ДополнитьДоступныеПараметрыНалоговУчетныхПолитик(Список, Знач Организации, Дата = Неопределено) Экспорт
	//++ Локализация
	ПоВсемОрганизациям = Ложь;
	СистемаНалогообложенияОрганизации = Неопределено;
	ПрименяетсяУСН = Ложь;

	Если ТипЗнч(Организации) = Тип("Массив")
		ИЛИ ТипЗнч(Организации) = Тип("СписокЗначений") Тогда
		ПоВсемОрганизациям = Истина;
		Если Организации.Количество() = 1 Тогда
			Организации = Организации[0];
		КонецЕсли;
	КонецЕсли;
		
	Если ТипЗнч(Организации) = Тип("СправочникСсылка.Организации") Тогда
		СистемаНалогообложенияОрганизации = НастройкиНалоговУчетныхПолитикПовтИсп.СистемаНалогообложенияОрганизации(Организации, Дата, Истина);
		ПрименяетсяУСН = СистемаНалогообложенияОрганизации = Перечисления.СистемыНалогообложения.Упрощенная;
	КонецЕсли;
	
	Список.Добавить("НастройкиСистемыНалогообложения");
	//++ НЕ УТ
	Список.Добавить("СтавкиНалогаНаИмущество");
	//-- НЕ УТ
	Если ЗначениеЗаполнено(СистемаНалогообложенияОрганизации)
		Или ПоВсемОрганизациям Тогда
		//++ НЕ УТ
		Список.Добавить("УчетнаяПолитикаБухУчета");
		Если ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
			Если НЕ ПрименяетсяУСН Или ПоВсемОрганизациям Тогда
				Список.Добавить("НастройкиУчетаНалогаНаПрибыль");
			КонецЕсли;
		КонецЕсли;
		//-- НЕ УТ
		Если ПрименяетсяУСН Или ПоВсемОрганизациям Тогда
			Список.Добавить("НастройкиУчетаУСН"); 
			Список.Добавить("НастройкиУчетаНДСПриУСН");
		КонецЕсли;
		
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

Процедура ТекстыЗапросовПолученияСтатистикиУчетнойПолитики(ТекстыЗапросов) Экспорт
	
	//++ Локализация
	//Регистр НастройкиСистемыНалогообложения
	ПоказателиСтатистики = "СистемаНалогообложения,
							|ПрименяетсяЕНВД,
							|ЯвляетсяПлательщикомНДПИ,
							|ПрименяетсяУСН";
	НастройкиНалоговУчетныхПолитик.ДополнитьТекстыЗапросаПоказателейСтатистики("НастройкиСистемыНалогообложения", ПоказателиСтатистики, ТекстыЗапросов);
	
	//НастройкиУчетаНДС
	ПоказателиСтатистики = "ПрименяетсяУчетНДСПоФактическомуИспользованию,
							|ПрименяетсяОсвобождениеОтУплатыНДС,
							|РаздельныйУчетТоваровПоНалогообложениюНДС,
							|РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС,
							|УчетНДСДлительногоЦиклаПроизводства,
							|УчетНДСВКосмическойДеятельности,
							|ФормироватьНДСПредъявленныйПриВключенииВСтоимость,
							|РаспределятьНДСВМесяцеОсуществленияКапВложений,
							|ПериодичностьФормированияВычетовИВосстановленийНДС,
							|Учитывать5ПроцентныйПорог,
							|ВариантУчетаНДСПриИзмененииВидаДеятельности,
							|ПравилоОтбораАвансовДляРегистрацииСчетовФактур";
	НастройкиНалоговУчетныхПолитик.ДополнитьТекстыЗапросаПоказателейСтатистики("НастройкиУчетаНДС", ПоказателиСтатистики, ТекстыЗапросов);
	
	//++ НЕ УТ

	//УчетнаяПолитикаБухУчета
	ПоказателиСтатистики = "ВедетсяУчетПостоянныхИВременныхРазниц,
							|ИспользоватьСчет40,
							|ЗабалансовыйУчетТМЦВЭксплуатации,
							|СборкаТоваровЧерезСчет20,
							|ВзаимозачетЧерезСчет76,
							|ВидРазницПБУ18РезервовПоСомнительнымДолгам,
							|ПроводкиПоРаботникам,
							|ПрименяетсяФСБУ6,
							|ПрименяетсяФСБУ14,
							|УчетНИОКРПоФСБУ26,
							|ПорядокНачисленияАмортизацииОС,
							|ПорядокНачисленияАмортизацииАренда,
							|ПорядокНачисленияАмортизацииНМА,
							|СтатьяРасходовПоИсследованиям,
							|АналитикаРасходовПоИсследованиям,
							|НастройкаЗаполненияБухОтчетности";
	НастройкиНалоговУчетныхПолитик.ДополнитьТекстыЗапросаПоказателейСтатистики("УчетнаяПолитикаБухУчета", ПоказателиСтатистики, ТекстыЗапросов);
	
	//НастройкиУчетаНалогаНаПрибыль
	ПоказателиСтатистики = "ПорядокУплатыАвансовПоНалогуНаПрибыль,
							|ПрименяютсяРазныеСтавкиНалогаНаПрибыль,
							|БазаРаспределенияРасходовПоВидамДеятельности,
							|ФормироватьРезервыПоСомнительнымДолгамНУ,
							|ПериодичностьРезервовПоСомнительнымДолгамНУ,
							|ВключатьВСоставНалоговыхРасходовАрендныеПлатежи,
							|МетодНачисленияАмортизацииНУ,
							|ОсновнойВариантНалогообложенияПрибыли,
							|РаздельныйУчетПоНалогуНаПрибыль,
							|ПоказательОпределенияДолиПрибыли,
							|УплачиватьНалогПоГруппамОбособленныхПодразделений";
	НастройкиНалоговУчетныхПолитик.ДополнитьТекстыЗапросаПоказателейСтатистики("НастройкиУчетаНалогаНаПрибыль", ПоказателиСтатистики, ТекстыЗапросов);
	
	//НастройкиУчетаУСН
	ПоказателиСтатистики = "БазаРаспределенияРасходовПоВидамДеятельности,
							|ОбъектНалогообложенияУСН,
							|ПрименяетсяУСНДоходыМинусРасходы";
	НастройкиНалоговУчетныхПолитик.ДополнитьТекстыЗапросаПоказателейСтатистики("НастройкиУчетаУСН", ПоказателиСтатистики, ТекстыЗапросов);
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

// Функция - агрегатор сведений о настройках налогового учета на определенную дату
//
// Параметры:
//  Период       - Дата - дата чтения настроек.
//  Организация  - СправочникСсылка.Организации - организация,
//                 для которой требуется получить настройки.
// 
// Возвращаемое значение:
//  Неопределено, ТаблицаЗначений - если нет ни одной записи настроек учета неопределено, иначе таблица.
//
Функция УчетнаяПолитикаНалоговыйУчет(Период, Организация) Экспорт
	//++ НЕ УТ

	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      Период);
	Запрос.УстановитьПараметр("Организации", Организация);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрОрганизации.ГоловнаяОрганизация КАК Организация,
	|	СпрОрганизации.Ссылка КАК ОбособленноеПодразделение
	|ПОМЕСТИТЬ
	|	ВтГоловныеОрганизации
	|ИЗ
	|	Справочник.Организации КАК СпрОрганизации
	|ГДЕ
	|	СпрОрганизации.Ссылка В (&Организации)
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация;
	|
	|ВЫБРАТЬ
	|	НастройкиСистемыНалогообложенияСрезПоследних.Период КАК Период,
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Организация,
	|	НастройкиСистемыНалогообложенияСрезПоследних.ПрименяетсяЕНВД КАК ПлательщикЕНВД,
	|	УчетнаяПолитикаБухУчетаСрезПоследних.ВариантУчетаОтложенногоНалога КАК ВариантУчетаОтложенногоНалога,
	|	УчетнаяПолитикаБухУчетаСрезПоследних.ВедетсяУчетПостоянныхИВременныхРазниц КАК ВедетсяУчетПостоянныхИВременныхРазниц,
	|	НастройкиСистемыНалогообложенияСрезПоследних.ПлательщикНалогаНаПрибыль КАК ПлательщикНалогаНаПрибыль,
	|	НастройкиСистемыНалогообложенияСрезПоследних.ПрименяетсяУСН КАК ПрименяетсяУСН,
	|	НастройкиУчетаУСНСрезПоследних.ПрименяетсяУСНДоходыМинусРасходы КАК ПрименяетсяУСНДоходыМинусРасходы
	|ИЗ
	|	ВтГоловныеОрганизации КАК ГоловныеОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&Период, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК НастройкиСистемыНалогообложенияСрезПоследних
	|		ПО НастройкиСистемыНалогообложенияСрезПоследних.Организация = ГоловныеОрганизации.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаУСН.СрезПоследних(&Период, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК НастройкиУчетаУСНСрезПоследних
	|		ПО НастройкиСистемыНалогообложенияСрезПоследних.Организация = ГоловныеОрганизации.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(&Период, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК УчетнаяПолитикаБухУчетаСрезПоследних
	|		ПО УчетнаяПолитикаБухУчетаСрезПоследних.Организация = ГоловныеОрганизации.Организация";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Возврат Результат.Выгрузить();
	КонецЕсли;
	//-- Локализация

	//-- НЕ УТ
	Возврат Неопределено;
КонецФункции

// Возвращает признак использования раздельного учета товаров по налогообложению НДС. 
//
// Параметры:
// 	Организация - СправочникСсылка.Организации - Организация, для которой необходимо получить признак учетной политики
// 	Период 		- Дата, Неопределено - Дата действия учетной политики, если Неопределено, то на текущую дату
//
// Возвращаемое значение:
//	Булево - Значение признака
// 
Функция РаздельныйУчетТоваровПоНалогообложениюНДС(Организация, Период = Неопределено) Экспорт
	
	РаздельныйУчетТоваровПоНалогообложениюНДС = Ложь;
	
	//++ Локализация
	ПараметрыПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаНДС",
		Организация,
		Период);
		
	РаздельныйУчетТоваровПоНалогообложениюНДС = ?(ПараметрыПолитики <> Неопределено, ПараметрыПолитики.РаздельныйУчетТоваровПоНалогообложениюНДС, Ложь);
	//-- Локализация
	Возврат РаздельныйУчетТоваровПоНалогообложениюНДС;
	
КонецФункции

// Возвращает признак использования раздельного учета ВНА по налогообложению НДС. 
//
// Параметры:
// 	Организация - СправочникСсылка.Организации - Организация, для которой необходимо получить признак учетной политики
// 	Период 		- Дата, Неопределено - Дата действия учетной политики, если Неопределено, то на текущую дату
//
// Возвращаемое значение:
//	Булево - Значение признака
// 
Функция РаздельныйУчетВНАПоНалогообложениюНДС(Организация, Период = Неопределено) Экспорт
	
	РаздельныйУчетВНАПоНалогообложениюНДС = Ложь;
	
	//++ Локализация
	ПараметрыПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаНДС",
		Организация,
		Период);
		
	РаздельныйУчетВНАПоНалогообложениюНДС = ?(ПараметрыПолитики <> Неопределено, ПараметрыПолитики.РаздельныйУчетВНАПоНалогообложениюНДС, Ложь);
	//-- Локализация
	Возврат РаздельныйУчетВНАПоНалогообложениюНДС;
	
КонецФункции

// Возвращает признак использования раздельного учета постатейных производственных затрат по налогообложению НДС. 
//
// Параметры:
// 	Организация - СправочникСсылка.Организации - Организация, для которой необходимо получить признак учетной политики
// 	Период 		- Дата, Неопределено - Дата действия учетной политики, если Неопределено, то на текущую дату
//
// Возвращаемое значение:
//	Булево - Значение признака
// 
Функция РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС(Организация, Период = Неопределено) Экспорт
	
	РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС = Ложь;
	
	//++ Локализация
	ПараметрыПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаНДС",
		Организация,
		Период);
		
	РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС = ?(ПараметрыПолитики <> Неопределено, ПараметрыПолитики.РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС, Ложь);
	//-- Локализация
	Возврат РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС;
	
КонецФункции

Процедура НастройкиУчетаНДСПередЗаписью(СтрокаНабора) Экспорт
	//++ Локализация
	СтрокаНабора.РаздельныйУчетВНАПоНалогообложениюНДС = СтрокаНабора.РаздельныйУчетТоваровПоНалогообложениюНДС;
	//-- Локализация
КонецПроцедуры

// Получает актуальные данные учетной политики налогового учета. 
//
// Параметры:
//	Форма - Структура - ФормаЗаписи регистра сведений УчетнаяПолитикаФинансовогоУчета:
// 	 * Запись - РегистрСведенийМенеджерЗаписи.УчетнаяПолитикаФинансовогоУчета - 
// 	 * ПрименяетсяУСН - Булево -
//	 * ПрименяетсяУСНДоходыМинусРасходы - Булево - 
//
Процедура ПрочитатьЗаписьРегистра_УчетнаяПолитикаФинУчета(Форма) Экспорт
	
	//++ Локализация
	ДействующиеПараметры = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиСистемыНалогообложения",
		Форма.Запись.Организация,
		Форма.Запись.Период,
		Истина);
		
	Если ЗначениеЗаполнено(ДействующиеПараметры) Тогда
		Форма.ПрименяетсяУСН = ДействующиеПараметры.ПрименяетсяУСН;
	Иначе
		Форма.ПрименяетсяУСН = Ложь;
	КонецЕсли;
	

	ДействующиеПараметрыУСН = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаУСН",
		Форма.Запись.Организация,
		Форма.Запись.Период,
		Истина);
		
	Если ЗначениеЗаполнено(ДействующиеПараметрыУСН) Тогда
		Форма.ПрименяетсяУСНДоходыМинусРасходы = ДействующиеПараметрыУСН.ПрименяетсяУСНДоходыМинусРасходы;
	Иначе
		Форма.ПрименяетсяУСНДоходыМинусРасходы = Ложь;
	КонецЕсли;
	//-- Локализация

КонецПроцедуры
 
#КонецОбласти

//++ НЕ УТ

#Область СлужебныеПроцедурыИФункции

Функция ПрименяетсяФСБУ14(Организация, Период) Экспорт
	
	ЗначениеНастройки = Неопределено;
	
	//++ Локализация
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.ПрименяетсяФСБУ14 КАК ПрименяетсяФСБУ14
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(
		|		&Период, 
		|		Организация = ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).ГоловнаяОрганизация) КАК Т");
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Новый Граница(Период, ВидГраницы.Включая));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПрименяетсяФСБУ14;
	КонецЕсли;
	
	ЗначениеНастройки = Ложь;
	
	//-- Локализация

	Возврат ЗначениеНастройки;
	
КонецФункции

Функция ПрименяетсяФСБУ6(Организация, Период) Экспорт
	
	ПрименяетсяФСБУ6 = Неопределено;
	
	//++ Локализация
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.ПрименяетсяФСБУ6 КАК ПрименяетсяФСБУ6
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(
		|		&Период, 
		|		Организация = ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).ГоловнаяОрганизация) КАК Т");
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Новый Граница(Период, ВидГраницы.Включая));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПрименяетсяФСБУ6;
	КонецЕсли;
	
	ПрименяетсяФСБУ6 = Ложь;
	
	//-- Локализация

	Возврат ПрименяетсяФСБУ6;
	
КонецФункции

//++ Локализация

Функция ПорядокНачисленияАмортизацииОСБУ(Организация, Период) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.ПорядокНачисленияАмортизацииОС КАК ПорядокНачисленияАмортизацииОС
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(
		|		&Период, 
		|		Организация = ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).ГоловнаяОрганизация) КАК Т");
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Новый Граница(Период, ВидГраницы.Включая));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПорядокНачисленияАмортизацииОС;
	КонецЕсли;
	
	Возврат Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
	
КонецФункции

Функция НачалоПримененияФСБУ14(Организация) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(УчетнаяПолитика.Период), ДАТАВРЕМЯ(1,1,1)) КАК Период
	|ИЗ
	|	Справочник.Организации КАК СпрОрганизации
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаБухУчета КАК УчетнаяПолитика
	|		ПО УчетнаяПолитика.Организация = СпрОрганизации.ГоловнаяОрганизация
	|		
	|ГДЕ
	|	УчетнаяПолитика.ПрименяетсяФСБУ14
	|	И СпрОрганизации.Ссылка = &Организация";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);


	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Период;
	Иначе
		Возврат '000101010000';
	КонецЕсли;
	
КонецФункции

//-- Локализация

Функция РеглУчетВНАВедетсяНезависимо(Организация, Период) Экспорт

	Результат = Неопределено;
	//++ Локализация
	Результат = Истина;
	//-- Локализация
	
	Возврат Результат;
	
КонецФункции

Функция ПорядокНачисленияАмортизацииОСРегл(Организация, Период) Экспорт
	
	ПорядокНачисленияАмортизацииРегл = Неопределено;
	
	//++ Локализация
	
	ПараметрыПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
		"УчетнаяПолитикаБухУчета", Организация, Период);
		
	ПорядокНачисленияАмортизацииРегл = ПараметрыПолитики.ПорядокНачисленияАмортизацииОС;
	//-- Локализация

	Возврат ПорядокНачисленияАмортизацииРегл;
		
КонецФункции

Процедура ДополнитьНастройкиУчетаВнеоборотныхАктивов(Организация, Период, НастройкиУчета) Экспорт
	
	//++ Локализация
	
	ПараметрыПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
		"УчетнаяПолитикаБухУчета", Организация, Период);
		
	НастройкиУчета.Вставить("ПрименяетсяФСБУ6", ПараметрыПолитики.ПрименяетсяФСБУ6);
	НастройкиУчета.Вставить("ПорядокНачисленияАмортизацииОСРегл", ПараметрыПолитики.ПорядокНачисленияАмортизацииОС);
	НастройкиУчета.Вставить("ПорядокНачисленияАмортизацииНМАРегл", ПараметрыПолитики.ПорядокНачисленияАмортизацииНМА);
	НастройкиУчета.Вставить("ПорядокНачисленияАмортизацииАрендаРегл", ПараметрыПолитики.ПорядокНачисленияАмортизацииАренда);
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

//-- НЕ УТ
