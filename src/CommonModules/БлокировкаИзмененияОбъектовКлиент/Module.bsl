#Область ПрограммныйИнтерфейс

// Разблокирует форму документа для редактирования.
//
// Параметры:
//  УправляемаяФорма - ФормаКлиентскогоПриложения - форма объекта.
//  СсылкаНаОбъект   - ДокументСсылка
//
Процедура РазблокироватьФормуОбъекта(УправляемаяФорма, СсылкаНаОбъект) Экспорт
	
	Если Не БлокировкаИзмененияОбъектовКлиентСервер.ФормаПроинициализирована(УправляемаяФорма) Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(УправляемаяФорма, "ПараметрыБлокировкиИзмененияОбъекта") Тогда
		
		ДопустимоОтключать = Истина;
		Для Каждого ОписаниеБлокировки Из УправляемаяФорма.ПараметрыБлокировкиИзмененияОбъекта Цикл
			
			Если Не ОписаниеБлокировки.ДопустимоОтключать Тогда
				ПоказатьПредупреждение(, ОписаниеБлокировки.ПояснениеОтказаОтключения);
				ДопустимоОтключать = Ложь;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ДопустимоОтключать Тогда
			
			РезультатУправлениеПечатью = КадровыйЭДОКлиент.РазблокироватьФормуОбъекта(УправляемаяФорма, СсылкаНаОбъект);
			Если ПустаяСтрока(РезультатУправлениеПечатью) Тогда
				
				УправляемаяФорма.ТолькоПросмотр = Ложь;
				
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
					УправляемаяФорма.Элементы,
					"РазблокироватьФормуДляИзмененияОбъекта",
					"Видимость",
					Ложь);
				
				БлокировкаИзмененияОбъектовКлиентСервер.ОбновитьГруппуБлокировкиИзмененияОбъекта(УправляемаяФорма, , Истина);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Разблокирует объекты выделенных строк списка документов для редактирования.
//
// Параметры:
//  УправляемаяФорма - ФормаКлиентскогоПриложения - форма объекта.
//  Список           - ДинамическийСписок
//  ВыделенныеСтроки - Массив
//
Процедура РазблокироватьОбъектыСписка(УправляемаяФорма, Список, ВыделенныеСтроки) Экспорт
	
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектыДляРазблокировки = Новый Массив;
	Для Каждого КлючСтроки Из ВыделенныеСтроки Цикл
		
		Если ТипЗнч(ВыделенныеСтроки) = Тип("Строка") Тогда
			Значение = Список.НайтиПоИдентификатору(КлючСтроки);
		Иначе
			Значение = КлючСтроки;
		КонецЕсли;
		
		Если Значение <> Неопределено Тогда
			ОбъектыДляРазблокировки.Добавить(Значение);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ОбъектыДляРазблокировки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'При снятии блокировки будут удалены все подписанные ЭП (электронной подписью) печатные формы.';
						|en = 'If you remove the lock, all the digitally signed print forms will be deleted.'");
	
	ПараметрыВопроса = СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю();
	ПараметрыВопроса.Заголовок = НСтр("ru = 'Отмена блокировки документов';
										|en = 'Cancel document locking'");
	ПараметрыВопроса.ПредлагатьБольшеНеЗадаватьЭтотВопрос = Ложь;
	
	КнопкиОтвета = Новый СписокЗначений;
	КнопкиОтвета.Добавить(Истина, НСтр("ru = 'Продолжить';
										|en = 'Continue'"));
	КнопкиОтвета.Добавить(Ложь, НСтр("ru = 'Отмена';
									|en = 'Cancel'"));
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("УправляемаяФорма", УправляемаяФорма);
	ДополнительныеПараметры.Вставить("ОбъектыДляРазблокировки", ОбъектыДляРазблокировки);
	
	СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(
		Новый ОписаниеОповещения("ОбработатьОтветНаВопросОРазблокировкеОбъектовСписка", ЭтотОбъект, ДополнительныеПараметры),
		ТекстВопроса, КнопкиОтвета, ПараметрыВопроса);
	
КонецПроцедуры

// Разблокирует форму списка, открытую в режиме просмотра.
//
// Параметры:
//  УправляемаяФорма - ФормаКлиентскогоПриложения - форма объекта.
//
Процедура РазблокироватьФормуСписка(УправляемаяФорма) Экспорт
	
	Если УправляемаяФорма.ТолькоПросмотр Тогда
		
		УправляемаяФорма.ТолькоПросмотр = Ложь;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			УправляемаяФорма.Элементы,
			"РазблокироватьОбъектыДляИзменения",
			"Видимость",
			Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбработатьОтветНаВопросОРазблокировкеОбъектовСписка(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Или Результат.Значение <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = БлокировкаИзмененияОбъектовВызовСервера.ДлительнаяОперацияРазблокировкиОбъектовСписка(
		ДополнительныеПараметры.ОбъектыДляРазблокировки, ДополнительныеПараметры.УправляемаяФорма.УникальныйИдентификатор);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ДополнительныеПараметры.УправляемаяФорма);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Идет отмена блокировки';
											|en = 'Unlocking'");
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Разблокировано';
																|en = 'Unlocked'");
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Отмена блокировки';
															|en = 'Cancel locking'");
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершитьРазблокировкуОбъектовСписка", ЭтотОбъект, ДополнительныеПараметры);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

Процедура ЗавершитьРазблокировкуОбъектовСписка(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	Иначе
		ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ДополнительныеПараметры.УправляемаяФорма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
