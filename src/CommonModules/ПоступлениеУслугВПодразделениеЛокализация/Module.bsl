
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
#Область ОтражениеПроизводственныхЗатрат  // (Дт 20 :: Кт 60.НП)
	ОтражениеПроизводственныхЗатрат = "
	|ВЫБРАТЬ // Отражение производственных затрат (Дт 20 :: Кт 60.НП)
	|
	|	Операция.Ссылка КАК Ссылка,
	// Период, Организация, ИдентификаторСтроки
	|	Операция.Дата			КАК Период,
	|	Операция.Организация	КАК Организация,
	|	НЕОПРЕДЕЛЕНО			КАК ИдентификаторСтроки,
	|
	// Сумма
	|	ПроизводственныеЗатраты.СтоимостьРегл + ПроизводственныеЗатраты.ДопРасходыРегл КАК Сумма,
	|	ПроизводственныеЗатраты.СтоимостьУпр + ПроизводственныеЗатраты.ДопРасходыУпр КАК СуммаУУ,
	|
	// ДТ - Вид счета, Аналитика учета, Место учета
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	ПроизводственныеЗатраты.АналитикаУчетаНоменклатуры.Подразделение КАК МестоУчетаДт,
	|
	// ДТ - Валюта, Подразделение, Счет
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	ПроизводственныеЗатраты.АналитикаУчетаНоменклатуры.Подразделение КАК ПодразделениеДт,
	|	ПроизводственныеЗатраты.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	// ДТ - Субконто
	|	ПроизводственныеЗатраты.АналитикаУчетаНоменклатуры.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	// ДТ - Валютная сумма, Количество, Суммы ПР,ВР,НУ
	|	0 КАК ВалютнаяСуммаДт,
	|	ПроизводственныеЗатраты.Количество КАК КоличествоДт,
	|	ПроизводственныеЗатраты.СтоимостьРегл 
	|		+ ПроизводственныеЗатраты.ДопРасходыРегл 
	|		- ПроизводственныеЗатраты.ПостояннаяРазница 
	|		- ПроизводственныеЗатраты.ВременнаяРазница	КАК СуммаНУДт,
	|	ПроизводственныеЗатраты.ПостояннаяРазница КАК СуммаПРДт,
	|	ПроизводственныеЗатраты.ВременнаяРазница КАК СуммаВРДт,
	|	
	// КТ - Вид счета, Аналитика учета, Место учета
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НеотфактурованныеПоставки) КАК ВидСчетаКт,
	|	Операция.Договор.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	// КТ - Валюта, Подразделение, Счет
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	Операция.Договор.Подразделение КАК ПодразделениеКт,
	|	Операция.Договор.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	// КТ - Субконто
	|	НеотфактурованныеПоставки.АналитикаУчетаНоменклатуры.Номенклатура КАК СубконтоКт1,
	|	Операция.Контрагент 				КАК СубконтоКт2,
	|	Операция.Договор 					КАК СубконтоКт3,
	|
	// КТ - Валютная сумма, Количество, Суммы ПР,ВР,НУ
	|	0 КАК ВалютнаяСуммаКт,
	|	НеотфактурованныеПоставки.Количество КАК КоличествоКт,
	|	НеотфактурованныеПоставки.СтоимостьРегл 
	|		+ НеотфактурованныеПоставки.ДопРасходыРегл 
	|		- НеотфактурованныеПоставки.ПостояннаяРазница 
	|		- НеотфактурованныеПоставки.ВременнаяРазница	КАК СуммаНУКт,
	|	НеотфактурованныеПоставки.ПостояннаяРазница КАК СуммаПРКт,
	|	НеотфактурованныеПоставки.ВременнаяРазница КАК СуммаВРКт,
	|
	|	""Отражение производственных затрат"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеУслугВПодразделение КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрНакопления.СебестоимостьТоваров КАК НеотфактурованныеПоставки
	|	ПО 
	|		НеотфактурованныеПоставки.Регистратор = Операция.Ссылка
	|		И НеотфактурованныеПоставки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И НеотфактурованныеПоставки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
	|		И НЕ НеотфактурованныеПоставки.Сторно
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрНакопления.СебестоимостьТоваров КАК ПроизводственныеЗатраты
	|	ПО 
	|		ПроизводственныеЗатраты.Регистратор = Операция.Ссылка
	|		И ПроизводственныеЗатраты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И ПроизводственныеЗатраты.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И ПроизводственныеЗатраты.ИдентификаторФинЗаписи = НеотфактурованныеПоставки.ИдентификаторФинЗаписи
	|		И ПроизводственныеЗатраты.НастройкаХозяйственнойОперации = НеотфактурованныеПоставки.НастройкаХозяйственнойОперации
	|		И НЕ ПроизводственныеЗатраты.Сторно
	|";
#КонецОбласти

#Область ОтражениеПрочихРасходов  // (Дт 25, 26, 20 :: Кт 60.НП)
	ОтражениеПрочихРасходов = "
	|ВЫБРАТЬ // Отражение прочих расходов (Дт 25, 26, 20 :: Кт 60.НП)
	|
	|	Операция.Ссылка КАК Ссылка,
	// Период, Организация, ИдентификаторСтроки
	|	Операция.Дата			КАК Период,
	|	Операция.Организация	КАК Организация,
	|	НЕОПРЕДЕЛЕНО			КАК ИдентификаторСтроки,
	|
	// Сумма
	|	ДвиженияПрочиеРасходы.СуммаРегл КАК Сумма,
	|	ДвиженияПрочиеРасходы.СуммаУпр КАК СуммаУУ,
	|
	// ДТ - Вид счета, Аналитика учета, Место учета
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	ДвиженияПрочиеРасходы.СтатьяРасходов КАК АналитикаУчетаДт,
	|	ДвиженияПрочиеРасходы.Подразделение КАК МестоУчетаДт,
	|
	// ДТ - Валюта, Подразделение, Счет
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	ДвиженияПрочиеРасходы.Подразделение КАК ПодразделениеДт,
	|	ДвиженияПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	// ДТ - Субконто
	|	ДвиженияПрочиеРасходы.СтатьяРасходов КАК СубконтоДт1,
	|	ДвиженияПрочиеРасходы.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			И ЕСТЬNULL(ОбъектыСтроительства.СпособСтроительства, ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка)
	|		ТОГДА ОбъектыСтроительства.СпособСтроительства
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			И ЕСТЬNULL(ОбъектыСтроительства.СпособСтроительства, ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	// ДТ - Валютная сумма, Количество, Суммы ПР,ВР,НУ
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ДвиженияПрочиеРасходы.СуммаРегл
	|		- ДвиженияПрочиеРасходы.ПостояннаяРазница 
	|		- ДвиженияПрочиеРасходы.ВременнаяРазница	КАК СуммаНУДт,
	|	ДвиженияПрочиеРасходы.ПостояннаяРазница КАК СуммаПРДт,
	|	ДвиженияПрочиеРасходы.ВременнаяРазница КАК СуммаВРДт,
	|	
	// КТ - Вид счета, Аналитика учета, Место учета
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НеотфактурованныеПоставки) КАК ВидСчетаКт,
	|	Операция.Договор.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	// КТ - Валюта, Подразделение, Счет
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	Операция.Договор.Подразделение КАК ПодразделениеКт,
	|	Операция.Договор.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	// КТ - Субконто
	|	НеотфактурованныеПоставки.АналитикаУчетаНоменклатуры.Номенклатура КАК СубконтоКт1,
	|	Операция.Контрагент 				КАК СубконтоКт2,
	|	Операция.Договор 					КАК СубконтоКт3,
	|
	// КТ - Валютная сумма, Количество, Суммы ПР,ВР,НУ
	|	0 КАК ВалютнаяСуммаКт,
	|	НеотфактурованныеПоставки.Количество КАК КоличествоКт,
	|	НеотфактурованныеПоставки.СтоимостьРегл 
	|		+ НеотфактурованныеПоставки.ДопРасходыРегл 
	|		- НеотфактурованныеПоставки.ПостояннаяРазница 
	|		- НеотфактурованныеПоставки.ВременнаяРазница	КАК СуммаНУКт,
	|	НеотфактурованныеПоставки.ПостояннаяРазница КАК СуммаПРКт,
	|	НеотфактурованныеПоставки.ВременнаяРазница КАК СуммаВРКт,
	|
	|	""Отражение прочих расходов"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеУслугВПодразделение КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрНакопления.СебестоимостьТоваров КАК НеотфактурованныеПоставки
	|	ПО 
	|		НеотфактурованныеПоставки.Регистратор = Операция.Ссылка
	|		И НеотфактурованныеПоставки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И НеотфактурованныеПоставки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
	|		И НЕ НеотфактурованныеПоставки.Сторно
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрНакопления.ПрочиеРасходы КАК ДвиженияПрочиеРасходы
	|	ПО 
	|		ДвиженияПрочиеРасходы.Регистратор = Операция.Ссылка
	|		И ДвиженияПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И ДвиженияПрочиеРасходы.ИдентификаторФинЗаписи = НеотфактурованныеПоставки.ИдентификаторФинЗаписи
	|		И ДвиженияПрочиеРасходы.НастройкаХозяйственнойОперации = НеотфактурованныеПоставки.НастройкаХозяйственнойОперации
	|		И НЕ ДвиженияПрочиеРасходы.Сторно
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ДвиженияПрочиеРасходы.СтатьяРасходов = СтатьиРасходов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО
	|		ДвиженияПрочиеРасходы.АналитикаРасходов = ОбъектыСтроительства.Ссылка
	|";
#КонецОбласти
	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ОтражениеПроизводственныхЗатрат);
	ТекстыОтражения.Добавить(ОтражениеПрочихРасходов);
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	//-- Локализация
	Возврат "";
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

// Заполняет массив допустимых наименований входящих документов.
//
// Параметры:
//  МассивНаименований	 - Массив - массив наименования входящих документов.
//
Процедура ДополнитьНаименованияВходящихДокументов(МассивНаименований) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры
//++ Локализация

//++ НЕ УТ

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТ

//-- Локализация

#КонецОбласти

#КонецОбласти
