
#Область ПрограммныйИнтерфейс


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция АдресРегФайлаПоУчетнойЗаписи(УчетнаяЗапись) Экспорт
	
	Возврат РегФайлКАНаВремяВызоваПовтИсп.АдресРегФайлаПоИдентификаторуАбонента(УчетнаяЗапись.ИдентификаторАбонента);

КонецФункции

Функция АдресРегФайлаПоИдентификаторуАбонента(Знач ИдентификаторАбонента) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторАбонентаНормализованный = 
		ДокументооборотСКО.ИдентификаторАбонентаДляЗапросаРегФайла(ИдентификаторАбонента);
	
	СпецоператорСвязи = Перечисления.СпецоператорыСвязи.КалугаАстрал;
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	Результат = КонтекстЭДОСервер.ПолучитьФайлАвтонастройки(СпецоператорСвязи, ИдентификаторАбонентаНормализованный);
	Если Результат.Выполнено Тогда
		Возврат Результат.Настройки;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Процедура ЗаполнитьПраваВладельцаИзРегФайла(Форма, Строка, УчетнаяЗапись) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Адрес = АдресРегФайлаПоУчетнойЗаписи(УчетнаяЗапись);
	Если НЕ ЗначениеЗаполнено(Адрес) Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	ДокументDOM = ФайлАвтонастрокиВФорматеDOMПоАдресу(Адрес);
	
	ИскомыйУзел = Неопределено; 
	
	УзлыВладелецыЭЦП = ДокументDOM.ПолучитьЭлементыПоИмени("ВладелецЭЦП");
	Для каждого УзелДанныеВладельцаЭЦП Из УзлыВладелецыЭЦП Цикл
		
		Если Строка.СНИЛС = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(УзелДанныеВладельцаЭЦП, "СНИЛС") Тогда
			ИскомыйУзел = УзелДанныеВладельцаЭЦП;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	УзлыПотенциальныеВладелецыЭЦП = ДокументDOM.ПолучитьЭлементыПоИмени("ПотенциальныйПользователь");
	Для каждого УзелДанныеВладельцаЭЦП Из УзлыПотенциальныеВладелецыЭЦП Цикл
		
		Если Строка.СНИЛС = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(УзелДанныеВладельцаЭЦП, "СНИЛС") Тогда
			ИскомыйУзел = УзелДанныеВладельцаЭЦП;
			Строка.ЭтоПотенциальныйПользователь = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ИскомыйУзел = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДоступныеОрганы = ДоступныеОрганыВладельцаИзРегФайла(ИскомыйУзел);
	ЗаполнитьЗначенияСвойств(Строка, ДоступныеОрганы);
	
	Строка.ЭтоШифровальщик = ЭтоШифровальщикИзРегФайла(ИскомыйУзел);
	Строка.ЭтоАдмин = ЭтоАдминИзРегФайла(ИскомыйУзел);
	
	Форма.ЕстьДоступКоВсемГосОрганам = ЕстьДоступКоВсемГосОрганамПоРегФайлу(ИскомыйУзел, УчетнаяЗапись);
	
КонецПроцедуры

Функция СНИЛСЕстьВРегФайле(СНИЛС, УчетнаяЗапись) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СНИЛС) ИЛИ НЕ ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Адрес = АдресРегФайлаПоУчетнойЗаписи(УчетнаяЗапись);
	Если НЕ ЗначениеЗаполнено(Адрес) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ДвДанные = ПолучитьИзВременногоХранилища(Адрес);
	Текст = ПолучитьСтрокуИзДвоичныхДанных(ДвДанные, "windows-1251");
	
	// Ищем до блока <Сертификаты>, потому что может быть найден в блоке <ПредыдущиеСертификаты>
	// Но нам предыдущие пользователи не нужны
	Граница = СтрНайти(Врег(Текст), Врег("<Сертификаты>"));
	Если Граница > 0 Тогда
		Текст = Лев(Врег(Текст), Граница);
	КонецЕсли;
	
	Есть = СтрНайти(Врег(Текст), Врег(СНИЛС));
	Возврат Есть > 0;

КонецФункции

Функция ЭтоМультиРежимИзРегФайла(ДокументDOM) Экспорт
	
	ЭтоМультиРежим = ЭлектронныйДокументооборотСКонтролирующимиОрганами.ПолучитьЗначениеУзлаXML(
		ДокументDOM, 
		"ЭтоМногопользовательскийРежим",
		,,,
		Тип("Булево"));
		
	Булево = Новый ОписаниеТипов("Булево");
	ЭтоМультиРежим = Булево.ПривестиЗначение(ЭтоМультиРежим);
		
	Возврат ЭтоМультиРежим;

КонецФункции

Функция ЭтоМультиРежимПоАдресуРегФайла(Адрес) Экспорт
	
	ДокументDOM = ДокументDOMПоАдресу(Адрес);
	ЭтоМультиРежим = ЭтоМультиРежимИзРегФайла(ДокументDOM);
		
	Возврат ЭтоМультиРежим;

КонецФункции

Процедура ЗаполнитьСертификатыУчетнойЗаписиИзРегФайла(Запись, ДокументDOM) Экспорт
	
	ЭтоМультиРежим = ЭтоМультиРежимИзРегФайла(ДокументDOM);
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	
	Если ЭтоМультиРежим Тогда
		
		ИНН = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДокументDOM, "ИНН");
		КПП = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДокументDOM, "КПП");

		ВладелецыЭЦП = ДокументDOM.ПолучитьЭлементыПоИмени("ВладелецЭЦП");
		Для каждого ДанныеВладельцаЭЦП Из ВладелецыЭЦП Цикл
			
			Отпечаток = СокрЛП(КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДанныеВладельцаЭЦП, "Отпечаток"));
			СНИЛС = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДанныеВладельцаЭЦП, "СНИЛС");
			
			Если Мультирежим.ЭтоСНИЛСРуководителя(СНИЛС, ИНН, КПП) Тогда
				Запись.СертификатРуководителя  = Отпечаток;
				Запись.СертификатДляШифрования = Отпечаток;
			КонецЕсли;
			
			Если Мультирежим.ЭтоСНИЛСГлБухгалтер(СНИЛС, ИНН, КПП) Тогда
				Запись.СертификатГлавногоБухгалтера = Отпечаток;
			КонецЕсли;
				
		КонецЦикла;
		
	Иначе
		
		Отпечаток = ОтпечатокMYИзРегФайла1ПР(ДокументDOM);
		
		Если СокрЛП(Запись.СертификатРуководителя) <> Отпечаток Тогда
			Запись.СертификатРуководителя = Отпечаток;
		КонецЕсли;
		
		Если СокрЛП(Запись.СертификатГлавногоБухгалтера) <> Отпечаток Тогда
			Запись.СертификатГлавногоБухгалтера = Отпечаток;
		КонецЕсли;
		
		Если СокрЛП(Запись.СертификатДляШифрования) <> Отпечаток Тогда
			Запись.СертификатДляШифрования = Отпечаток;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ОтпечатокПользователяПоАдресуРегФайла(Адрес, Знач Пользователь = Неопределено) Экспорт
	
	ДокументDOM = ДокументDOMПоАдресу(Адрес);
	Отпечаток   = ОтпечатокMYИзРегФайлаПоПользователю(ДокументDOM, Пользователь);
	
	Возврат Отпечаток;
	
КонецФункции

Функция ДокументDOMПоАдресу(Адрес) Экспорт
	
	ДвДанные = ПолучитьИзВременногоХранилища(Адрес);
	ВременныйФайл = ПолучитьИмяВременногоФайла();
	ДвДанные.Записать(ВременныйФайл);
	
	ДокументDOM = ЭлектронныйДокументооборотСКонтролирующимиОрганами.ЗагрузитьФайлXML(ВременныйФайл);
	
	Возврат ДокументDOM;
	
КонецФункции

Функция ОтпечатокMYИзРегФайлаПоПользователю(ДокументDOM, Знач Пользователь = Неопределено) Экспорт
	
	ЭтоМультиРежим = ЭтоМультиРежимИзРегФайла(ДокументDOM);

	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	
	Если ЭтоМультиРежим Тогда
		
		Если НЕ ЗначениеЗаполнено(Пользователь) Тогда
			Пользователь = Пользователи.ТекущийПользователь();
		КонецЕсли;
		
		ФизЛицо = Мультирежим.ФизЛицоПоПользователюИзСправочникаПользователи(Пользователь);
		Если НЕ ЗначениеЗаполнено(ФизЛицо) Тогда
			Возврат "";
		КонецЕсли;
		
		ИНН = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДокументDOM, "ИНН");
		КПП = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДокументDOM, "КПП");
		
		Организация = КонтекстЭДОСервер.ОпределитьОрганизациюПоИННиКПП(ИНН, КПП);
		
		СНИЛС = МультирежимВызовСервера.СНИЛСФизЛица(ФизЛицо, Организация);
		Отпечаток = ОтпечатокMYИзРегФайлаПоСНИЛС(ДокументDOM, СНИЛС);
		
	Иначе
		
		Отпечаток = ОтпечатокMYИзРегФайла1ПР(ДокументDOM);
		
	КонецЕсли;
	
	ВОзврат Отпечаток;
		
КонецФункции

Функция ОтпечатокMYИзРегФайлаПоСНИЛС(ДокументDOM, СНИЛС = "") Экспорт
	
	ЭтоМультиРежим = ЭтоМультиРежимИзРегФайла(ДокументDOM);

	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	
	Если ЭтоМультиРежим Тогда
	
		Если НЕ ЗначениеЗаполнено(СНИЛС) Тогда
			Возврат "";
		КонецЕсли;
		
		ВладелецыЭЦП = ДокументDOM.ПолучитьЭлементыПоИмени("ВладелецЭЦП");
		Для каждого ДанныеВладельцаЭЦП Из ВладелецыЭЦП Цикл
			
			СНИЛСВладельца = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДанныеВладельцаЭЦП, "СНИЛС");
			
			Если СНИЛСВладельца = СНИЛС Тогда
				Отпечаток = СокрЛП(КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДанныеВладельцаЭЦП, "Отпечаток"));
				Возврат Отпечаток;
			КонецЕсли;
				
		КонецЦикла;
		
	Иначе
		
		Отпечаток = ОтпечатокMYИзРегФайла1ПР(ДокументDOM);
		Возврат Отпечаток;
		
	КонецЕсли;
	
	Возврат "";
		
КонецФункции

Функция ОтпечатокMYИзРегФайла1ПР(ДокументDOM) Экспорт
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	
	Узел = ДокументDOM.ПолучитьЭлементыПоИмени("ВладелецЭЦП")[0];
	Отпечаток = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(Узел, "Отпечаток");
	
	Возврат Отпечаток;
		
КонецФункции

Функция ОтпечатокMyИзРегФайлаПоЗаявлению(ДокументDOM, СсылкаНаЗаявление) Экспорт
	
	ВладелецЭЦПСНИЛС = ВладелецЭЦПСНИЛСДляАвтонастройки(ДокументDOM, СсылкаНаЗаявление);
	
	Если НЕ ЗначениеЗаполнено(ВладелецЭЦПСНИЛС) Тогда
		Возврат "";
	КонецЕсли;
	
	ФизЛицо = Мультирежим.ФизЛицоПоСНИЛС(ВладелецЭЦПСНИЛС);
	
	Если НЕ ЗначениеЗаполнено(ФизЛицо) Тогда
		Возврат "";
	КонецЕсли;
	
	Пользователь = Мультирежим.ПользовательПоФизЛицуИзСправочникаПользователи(ФизЛицо);
	Если НЕ ЗначениеЗаполнено(Пользователь) Тогда
		Возврат "";
	КонецЕсли;
	
	Отпечаток = ОтпечатокMYИзРегФайлаПоПользователю(ДокументDOM, Пользователь);
	Возврат Отпечаток;
	
КонецФункции

Функция ДоступенОрганВладельцуВРегФайле(УзелВладелецЭЦП, ОрганСтрокой) Экспорт
	
	Реквизит = МультирежимКлиентСервер.РеквизитПоОргануСтрокой(ОрганСтрокой);
	
	ДоступныеОрганы = ДоступныеОрганыВладельцаИзРегФайла(УзелВладелецЭЦП);
	Доступен = ДоступныеОрганы[Реквизит] = Истина;
		
	Возврат Доступен;
	
КонецФункции

Функция ДоступныеОрганыВладельцаИзРегФайла(УзелВладелецЭЦП) Экспорт
	
	Результат = ОрганыИзРегФайла(УзелВладелецЭЦП, "Направление");
	Возврат Результат;
	
КонецФункции

Функция ДоступныеОрганыОрганизацииИзРегФайла(ДокументDOM) Экспорт
	
	Результат = ОрганыИзРегФайла(ДокументDOM, "Получатель");
	Возврат Результат;
	
КонецФункции

Функция ОрганыИзРегФайла(УзелИсточник, ИмяУзла) Экспорт
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	
	Результат = МультирежимКлиентСервер.СтруктураНаправлений();
	
	ДоступныеНаправления = УзелИсточник.ПолучитьЭлементыПоИмени(ИмяУзла);
	Для каждого ДоступноеНаправление Из ДоступныеНаправления Цикл
		
		ТипПолучателя = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДоступноеНаправление, "ТипПолучателя");
		
		Если ТипПолучателя = "ФНС" Тогда
			Результат.СдаватьВФНС = Истина;
		КонецЕсли;
		
		Если ТипПолучателя = "ПФР" Тогда
			Результат.СдаватьВПФР = Истина;
		КонецЕсли;
		
		Если ТипПолучателя = "ФСС" Тогда
			Результат.СдаватьВФСС = Истина;
		КонецЕсли;
		
		Если ТипПолучателя = "ФСГС" Тогда
			Результат.СдаватьВРосстат = Истина;
		КонецЕсли;
		
		Если ТипПолучателя = "ЦБ" Тогда
			Результат.СдаватьВЦБ = Истина;
		КонецЕсли;
		
		Если ТипПолучателя = "ОИВ" Тогда
			Результат.ПодатьЗаявкуНаСертификатДляФСРАР = Истина;
		КонецЕсли;
		
		Если ТипПолучателя = "РПН" Тогда
			Результат.ПодатьЗаявкуНаПодключениеРПН = Истина;
		КонецЕсли;
		
		Если ТипПолучателя = "ФТС" Тогда
			Результат.ПодатьЗаявкуНаПодключениеФТС = Истина;
		КонецЕсли;
	
	КонецЦикла;
		
	Возврат Результат;
	
КонецФункции

Функция ЕстьДоступКоВсемГосОрганамПоРегФайлу(УзелВладелецЭЦП, УчетнаяЗапись) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОрганыВладельца = ДоступныеОрганыВладельцаИзРегФайла(УзелВладелецЭЦП);
	ОрганыУчетки    = Мультирежим.ГосОрганыУчетнойЗаписиИзРегистра(УчетнаяЗапись);
	
	Идентичны = ОбщегоНазначения.КоллекцииИдентичны(ОрганыВладельца, ОрганыУчетки);
	Возврат Идентичны;
		
КонецФункции

Функция ЭтоШифровальщикИзРегФайла(УзелВладелецЭЦП) Экспорт
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	
	ЭтоШифровальщик = Ложь;
	
	ДоступныеНаправления = УзелВладелецЭЦП.ПолучитьЭлементыПоИмени("Направление");
	Для каждого ДоступноеНаправление Из ДоступныеНаправления Цикл
		
		ТипПолучателя = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДоступноеНаправление, "ТипПолучателя");
		
		Если ТипПолучателя = "ФНС" Тогда
			
			ЭтоШифровальщик = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДоступноеНаправление, "ЭтоШифровальщик");
			Если ЭтоШифровальщик <> "" Тогда
				ЭтоШифровальщик = XMLЗначение(Тип("Булево"), КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДоступноеНаправление, "ЭтоШифровальщик"));
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЭтоШифровальщик;
	
КонецФункции

Функция ЭтоАдминИзРегФайла(УзелВладелецЭЦП) Экспорт
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	ЭтоАдмин = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(УзелВладелецЭЦП, "ЭтоАдмин");
	
	Возврат ЭтоАдмин;
	
КонецФункции

// Учетная запись уже должна быть быть в базе
// Не подходит для восстановления учетки
//
Функция СНИЛСВладельцаЭЦППоИдентификаторуАбонента(ДокументDOM, ВыводитьСообщение = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторАбонента = ЭлектронныйДокументооборотСКонтролирующимиОрганами.ПолучитьЗначениеУзлаXML(ДокументDOM, "ИдентификаторАбонента");
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	УчетнаяЗапись = КонтекстЭДОСервер.УчетнаяЗаписьПоИдентификатору(ИдентификаторАбонента);
	Если НЕ ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Если ВыводитьСообщение Тогда
			ДлительнаяОтправкаКлиентСервер.ВывестиОшибку(НСтр("ru = 'Не удалось определить учетную запись по идентификатору ';
																|en = 'Не удалось определить учетную запись по идентификатору '") + ИдентификаторАбонента);
		КонецЕсли;
		Возврат "";
	КонецЕсли;
	
	Пользователь = Пользователи.ТекущийПользователь();
	ВладелецЭЦПСНИЛС = Мультирежим.ПраваНаУчетнуюЗапись(УчетнаяЗапись, Пользователь).СНИЛС;
	
	Возврат ВладелецЭЦПСНИЛС;
	
КонецФункции

Функция ВладелецЭЦПСНИЛСДляАвтонастройки(ДокументDOM, СсылкаНаЗаявление = Неопределено, ВыводитьСообщение = Ложь) Экспорт
	
	ЭтоАвтонастройкаИзЗаявления = ЗначениеЗаполнено(СсылкаНаЗаявление);
	Если ЭтоАвтонастройкаИзЗаявления Тогда
		
		// Попытка #1. По заявлению
		ВладелецЭЦПСНИЛС = Мультирежим.СНИЛСВладельцаЭЦПИзЗаявления(СсылкаНаЗаявление);
		Возврат ВладелецЭЦПСНИЛС;
		
	Иначе
		
		// Попытка #2. По учетке. Не подходит для восстановления учетки
		ВладелецЭЦПСНИЛС = СНИЛСВладельцаЭЦППоИдентификаторуАбонента(ДокументDOM, ВыводитьСообщение);
		Если ЗначениеЗаполнено(ВладелецЭЦПСНИЛС) Тогда
			Возврат ВладелецЭЦПСНИЛС;
		КонецЕсли;
		
		// Попытка #3. По ИНН и КПП организации и текущему пользователю
		ВладелецЭЦПСНИЛС = Мультирежим.СНИЛСВладельцаЭЦППоИННиКПП(ДокументDOM, ВыводитьСообщение);
		Если ЗначениеЗаполнено(ВладелецЭЦПСНИЛС) Тогда
			Возврат ВладелецЭЦПСНИЛС;
		КонецЕсли;
		
		Возврат "";
		
	КонецЕсли;
	
КонецФункции

Функция ОтпечатокСертификатаВладельцаДляОргана(ДокументDOM, Орган) Экспорт

	ЭтоМультиРежим = ЭтоМультиРежимИзРегФайла(ДокументDOM);
		
	Если ЭтоМультиРежим Тогда
		Узел = ДокументDOM.ПолучитьЭлементыПоИмени("ВладелецЭЦП");
		Отпечатки = Мультирежим.СоответствиеПользователейОтпечаткам(ДокументDOM, Узел, Ложь, ЭтоМультиРежим, Орган);
		Возврат Отпечатки;
	Иначе
		Отпечаток = ОтпечатокMYИзРегФайла1ПР(ДокументDOM);
		Возврат Отпечаток;
	КонецЕсли;
			
КонецФункции

Функция ОтпечатокТекущегоПользователяПоОргану(ДокументDOM, Орган) Экспорт

	ЭтоМультиРежим = ЭтоМультиРежимИзРегФайла(ДокументDOM);
	Отпечатки      = ОтпечатокСертификатаВладельцаДляОргана(ДокументDOM, Орган);
	Пользователь   = Пользователи.ТекущийПользователь();
	
	Если ЭтоМультиРежим Тогда
		Для каждого Строка Из Отпечатки Цикл
			Если Строка.Значение = Пользователь Тогда
				Возврат Строка.Ключ;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Отпечаток = ОтпечатокMYИзРегФайла1ПР(ДокументDOM);
		Возврат Отпечаток;
	КонецЕсли;
	
	Возврат "";
			
КонецФункции

Функция ОрганизацияИзРегФайла(ДокументDOM, ВыводитьСообщение = Ложь) Экспорт
	
	ИНН = ЭлектронныйДокументооборотСКонтролирующимиОрганами.ПолучитьЗначениеУзлаXML(ДокументDOM, "ИНН");
	
	ЭтоИП = СтрДлина(ИНН) = 12;
	
	Если ЭтоИП Тогда
		КПП = "";
	Иначе
		КПП = ЭлектронныйДокументооборотСКонтролирующимиОрганами.ПолучитьЗначениеУзлаXML(ДокументDOM, "КПП");
	КонецЕсли;
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	Организация = КонтекстЭДОСервер.ОпределитьОрганизациюПоИННиКПП(ИНН, КПП);
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Возврат Организация;
	Иначе
		Если ВыводитьСообщение Тогда
			Текст = НСтр("ru = 'Не удалось определить организацию по ИНН %1 и КПП %2';
						|en = 'Не удалось определить организацию по ИНН %1 и КПП %2'");
			Текст = СтрШаблон(Текст, ИНН, КПП);
			ДлительнаяОтправкаКлиентСервер.ВывестиОшибку(Текст);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция УзелВладелецЭЦПИзРегФайлаПоСНИЛС(ДокументDOM, СНИЛС = "") Экспорт
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	
	Если НЕ ЗначениеЗаполнено(СНИЛС) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВладелецыЭЦП = ДокументDOM.ПолучитьЭлементыПоИмени("ВладелецЭЦП");
	Для каждого ДанныеВладельцаЭЦП Из ВладелецыЭЦП Цикл
		
		СНИЛС = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДанныеВладельцаЭЦП, "СНИЛС");
		
		Если СНИЛС = СНИЛС Тогда
			Возврат ДанныеВладельцаЭЦП;
		КонецЕсли;
			
	КонецЦикла;
		
	Возврат Неопределено;
		
КонецФункции

Функция КоличествоВладельцевВРегФайле(ДокументDOM) Экспорт
	
	УзлыВладелецыЭЦП = ДокументDOM.ПолучитьЭлементыПоИмени("ВладелецЭЦП");
	Возврат УзлыВладелецыЭЦП.Количество();

КонецФункции

Функция НаправленияУчетнойЗаписи(ДокументDOM) Экспорт

	Получатели = ДокументDOM.ПолучитьЭлементыПоИмени("Получатель");
	
	ПодключенныеНаправления = Новый ТаблицаЗначений;
	
	ПодключенныеНаправления.Колонки.Добавить("ТипПолучателя");
	ПодключенныеНаправления.Колонки.Добавить("КодПолучателя");
	ПодключенныеНаправления.Колонки.Добавить("КПП");
	
	Для Каждого Получатель из Получатели Цикл
		
		Тип = ЭлектронныйДокументооборотСКонтролирующимиОрганами.ПолучитьЗначениеУзлаXML(Получатель,"ТипПолучателя");
		Код = ЭлектронныйДокументооборотСКонтролирующимиОрганами.ПолучитьЗначениеУзлаXML(Получатель,"КодПолучателя");
		
		Если Тип = "ФНС" Тогда
			ПереченьКПП = Получатель.ПолучитьЭлементыПоИмени("КПП");
			
			Если ПереченьКПП.Количество() = 0 Тогда
				
				ТипПолучателя 	= Перечисления.ТипыКонтролирующихОрганов[Тип];
				КПППолучателя	= "";
				КодПолучателя 	= Код;
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("ТипПолучателя", 	ТипПолучателя);
				СтруктураПоиска.Вставить("КПП", 			КПППолучателя);
				СтруктураПоиска.Вставить("КодПолучателя", 	КодПолучателя);
				
				Если ПодключенныеНаправления.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда 
				
					НоваяСтрока = ПодключенныеНаправления.Добавить();
					
					НоваяСтрока.ТипПолучателя 	= ТипПолучателя;
					НоваяСтрока.КПП 			= КПППолучателя;
					НоваяСтрока.КодПолучателя 	= Код;
					
				КонецЕсли;
				
			Иначе
				
				Для каждого КПП Из ПереченьКПП Цикл
					
					ТипПолучателя 	= Перечисления.ТипыКонтролирующихОрганов[Тип];
					КПППолучателя	= XMLЗначение(Тип("Строка"), КПП.ТекстовоеСодержимое);
					КодПолучателя 	= Код;
					
					СтруктураПоиска = Новый Структура;
					СтруктураПоиска.Вставить("ТипПолучателя", 	ТипПолучателя);
					СтруктураПоиска.Вставить("КПП", 			КПППолучателя);
					СтруктураПоиска.Вставить("КодПолучателя", 	КодПолучателя);
					
					Если ПодключенныеНаправления.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда 
					
						НоваяСтрока = ПодключенныеНаправления.Добавить();
						
						НоваяСтрока.ТипПолучателя 	= ТипПолучателя;
						НоваяСтрока.КПП 			= КПППолучателя;
						НоваяСтрока.КодПолучателя 	= Код;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		ИначеЕсли Тип <> "ЭЛН" Тогда
			
			Если Тип = "ПФР" И Получатель.ПолучитьЭлементыПоИмени("СхемаОтправкиМПД").Количество() > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если Метаданные.Перечисления.ТипыКонтролирующихОрганов.ЗначенияПеречисления.Найти(Тип) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ТипПолучателя 	= Перечисления.ТипыКонтролирующихОрганов[Тип];
			КПППолучателя	= "";
			КодПолучателя 	= Код;
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("ТипПолучателя", 	ТипПолучателя);
			СтруктураПоиска.Вставить("КПП", 			КПППолучателя);
			СтруктураПоиска.Вставить("КодПолучателя", 	КодПолучателя);
			
			Если ПодключенныеНаправления.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда 
			
				НоваяСтрока = ПодключенныеНаправления.Добавить();
				
				НоваяСтрока.ТипПолучателя 	= ТипПолучателя;
				НоваяСтрока.КПП 			= КПППолучателя;
				НоваяСтрока.КодПолучателя 	= Код;
				
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;
	
	Возврат ПодключенныеНаправления;
			
КонецФункции

Функция ФайлАвтонастрокиВФорматеDOMПоАдресу(АдресРегФайла) Экспорт
	
	ДвДанные = ПолучитьИзВременногоХранилища(АдресРегФайла);
	ФайлDOM  = ФайлАвтонастрокиВФорматеDOMПоДвДанным(ДвДанные);
	
	Возврат ФайлDOM;
	
КонецФункции

Функция ФайлАвтонастрокиВФорматеDOMПоДвДанным(ДвДанные) Экспорт
	
	ИмяВременногоФайлаОбновлений = ПолучитьИмяВременногоФайла("xml");
	ДвДанные.Записать(ИмяВременногоФайлаОбновлений);
	ФайлDOM = ЭлектронныйДокументооборотСКонтролирующимиОрганами.ЗагрузитьФайлXML(ИмяВременногоФайлаОбновлений);
		
	Если ФайлDOM = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОперацииСФайламиЭДКО.УдалитьВременныйФайл(ИмяВременногоФайлаОбновлений);
	
	Возврат ФайлDOM;
	
КонецФункции

Функция КонтактыИзУчетнойЗаписи(АдресРегФайла, СНИЛС) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("ТелефонОсновной", "");
	Результат.Вставить("ЭлектроннаяПочтаОрганизации", "");
	Результат.Вставить("ТелефонМобильный", "");
	Результат.Вставить("ЭлектроннаяПочта", "");
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	
	ДокументDOM  = ФайлАвтонастрокиВФорматеDOMПоАдресу(АдресРегФайла);
	Результат.ТелефонОсновной = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДокументDOM,"ТелефонОсновной");
	Результат.ТелефонОсновной = ЭлектроннаяПодписьВМоделиСервисаКлиентСервер.ПолучитьПредставлениеТелефона(Результат.ТелефонОсновной);
	
	Результат.ЭлектроннаяПочтаОрганизации = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(ДокументDOM,"ЭлектроннаяПочта");
	
	УзелВладелец = УзелВладелецЭЦПИзРегФайлаПоСНИЛС(ДокументDOM, СНИЛС);
	
	Результат.ТелефонМобильный = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(УзелВладелец,"ТелефонМобильный");
	Результат.ТелефонМобильный = ЭлектроннаяПодписьВМоделиСервисаКлиентСервер.ПолучитьПредставлениеТелефона(Результат.ТелефонМобильный);
	
	Результат.ЭлектроннаяПочта = КонтекстЭДОСервер.ПолучитьЗначениеУзлаXML(УзелВладелец,"ЭлектроннаяПочта");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти