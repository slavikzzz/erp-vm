#Область СлужебныйПрограммныйИнтерфейс

// АПК:558-выкл Кандидаты в публичный программный интерфейс.
// АПК:559-выкл Кандидаты в публичный программный интерфейс.

// Проверяет корректность заполнения начала и окончания периода в объекте или строке таблицы формы.
//
// Параметры:
//   Форма      - УправляемаяФорма - Форма с датами начала и окончания.
//   ПутьКОбъекту         - Строка - Полный путь к реквизиту формы с датами начала и окончания.
//   ИмяПоляДатыНачала    - Строка - Имя реквизита строки табличной части, в котором хранится дата начала периода.
//   ИмяПоляДатыОкончания - Строка - Имя реквизита строки табличной части, в котором хранится дата окончания.
//   ПредставлениеВРодительномПадеже - Строка - Представление (заголовок) периода в родительном падеже.
//
// Возвращаемое значение:
//   Булево - Признак того, что поля успешно прошли проверку.
//       Возвращает Ложь если была выявлена ошибка.
//
Функция ПериодСоответствуетТребованиям(Форма, ПутьКОбъекту, ИмяПоляДатыНачала, ИмяПоляДатыОкончания, ПредставлениеВРодительномПадеже) Экспорт
	Объект = ОбщегоНазначенияБЗККлиентСервер.ЗначениеСвойства(Форма, ПутьКОбъекту);
	ТекстОшибки = ТекстОшибкиЗаполненияПериода(Объект[ИмяПоляДатыНачала], Объект[ИмяПоляДатыОкончания]);
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ТекстОшибки = СтрШаблон(ТекстОшибки, ПредставлениеВРодительномПадеже);
		СообщенияБЗККлиентСервер.СообщитьОбОшибкеВФорме(Ложь, ТекстОшибки, ИмяПоляДатыНачала, ПутьКОбъекту, Форма);
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции

// Проверяет номер расчетного счета на соответствие БИКу и корреспондентскому счету банка.
//
// Параметры:
//   НомерСчета            - Строка
//   БИК                   - Строка
//   КорреспондентскийСчет - Строка
//
// Возвращаемое значение:
//   Структура - Результат проверки:
//       * Успех - Булево - Если Истина, то номер счета прошел проверку. В пояснении будут подробности.
//       * Пояснение - Строка - Текст для вывода результатов в интерфейсе.
//
Функция РезультатПроверкиНомераСчета(Знач НомерСчета, Знач БИК, Знач КорреспондентскийСчет) Экспорт
	РезультатПроверки = Новый Структура("Успех, Пояснение");
	
	НомерСчетаСтрока = НомерСчета;
	
	Если ПустаяСтрока(НомерСчетаСтрока) Тогда
		РезультатПроверки.Успех = Ложь;
		РезультатПроверки.Пояснение = НСтр("ru = 'Не заполнен номер счета.';
											|en = 'Account number cannot be blank.'");
		Возврат РезультатПроверки;
	КонецЕсли;
	
	Если СтрДлина(НомерСчетаСтрока) <> 20 Тогда
		РезультатПроверки.Успех = Ложь;
		РезультатПроверки.Пояснение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В номере счета %1 символов, а должно быть 20.';
				|en = 'Account number contains %1 characters instead of 20.'"),
			СтрДлина(НомерСчетаСтрока));
		Возврат РезультатПроверки;
	КонецЕсли;
	
	// См. "Порядок расчета контрольного ключа в номере лицевого счета" (утв. Банком России 08.09.1997 N 515).
	// Алфавитное значение 6-го разряда счета (в случае использования клиринговой валюты) заменяется на цифровое:
	Разряд6 = Сред(НомерСчетаСтрока, 6, 1);
	Если СтрНайти("0123456789", Разряд6) = 0 Тогда
		АлфавитныеЗначения6гоРазряда = СтрРазделить("А,В,С,Е,Н,К,М,Р,Т,Х", ",", Ложь);
		Индекс = АлфавитныеЗначения6гоРазряда.Найти(Разряд6);
		Если Индекс <> Неопределено Тогда
			НомерСчетаСтрока = Лев(НомерСчетаСтрока, 5) + Формат(Индекс, "ЧН=") + Сред(НомерСчетаСтрока, 7);
		КонецЕсли;
	КонецЕсли;
	
	ЛишниеСимволы = СтроковыеФункцииБЗККлиентСервер.УдалитьЦифрыИзСтроки(НомерСчетаСтрока);
	Если Не ПустаяСтрока(ЛишниеСимволы) Тогда
		Если СтрДлина(ЛишниеСимволы) = 1 Тогда
			Пояснение = НСтр("ru = 'В номере счета должны быть только цифры (%1 - не цифра).';
							|en = 'Account number should contain numbers only (%1 is not a number).'");
		Иначе
			Пояснение = НСтр("ru = 'В номере счета должны быть только цифры (%1 - не цифры).';
							|en = 'Account number should contain numbers only (%1 are not numbers).'");
		КонецЕсли;
		РезультатПроверки.Успех = Ложь;
		РезультатПроверки.Пояснение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Пояснение, ЛишниеСимволы);
		Возврат РезультатПроверки;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(БИК) Тогда
		РезультатПроверки.Успех = Ложь;
		РезультатПроверки.Пояснение = НСтр("ru = 'Не заполнен БИК банка.';
											|en = 'Bank BIC cannot be blank.'");
		Возврат РезультатПроверки;
	ИначеЕсли СтрДлина(БИК) <> 9 Тогда
		Пояснение = НСтр("ru = 'БИК банка занимает %1 символов, а должно быть 9.';
						|en = 'The bank BIC consists of %1 characters instead of 9.'");
		РезультатПроверки.Успех = Ложь;
		РезультатПроверки.Пояснение = СтрШаблон(Пояснение, СтрДлина(БИК));
		Возврат РезультатПроверки;
	Иначе
		ЛишниеСимволы = СтроковыеФункцииБЗККлиентСервер.УдалитьЦифрыИзСтроки(БИК);
		Если Не ПустаяСтрока(ЛишниеСимволы) Тогда
			Если СтрДлина(ЛишниеСимволы) = 1 Тогда
				Пояснение = НСтр("ru = 'В БИК банка должны быть только цифры (%1 - не цифра).';
								|en = 'Bank BIC should contain numbers only (%1 is not a number).'");
			Иначе
				Пояснение = НСтр("ru = 'В БИК банка должны быть только цифры (%1 - не цифры).';
								|en = 'Bank BIC should contain numbers only (%1 are not numbers).'");
			КонецЕсли;
			РезультатПроверки.Успех = Ложь;
			РезультатПроверки.Пояснение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Пояснение, ЛишниеСимволы);
			Возврат РезультатПроверки;
		КонецЕсли;
	КонецЕсли;
	
	Если Не РегламентированныеДанныеКлиентСервер.КонтрольныйКлючЛицевогоСчетаСоответствуетТребованиям(
			НомерСчетаСтрока,
			БИК,
			ЗначениеЗаполнено(КорреспондентскийСчет)) Тогда
		РезультатПроверки.Успех = Ложь;
		РезультатПроверки.Пояснение = НСтр("ru = 'Ошибка в номере счета или в БИК банка. Не совпадает контрольное число.';
											|en = 'Account number or bank BIC error. Checksum does not match.'");
		Возврат РезультатПроверки;
	КонецЕсли;
	
	РезультатПроверки.Успех = Истина;
	РезультатПроверки.Пояснение = НСтр("ru = 'Номер счета соответствует требованиям.';
										|en = 'Account number meets the requirements.'");
	Возврат РезультатПроверки;
КонецФункции

// Проверяет номер банковской карты.
//
// Параметры:
//   НомерКарты                         - Строка
//   ЭтоНациональныйПлатежныйИнструмент - Булево, Неопределено
//
// Возвращаемое значение:
//   Структура - Результат проверки:
//       * Успех - Булево - Если Истина, то номер карты прошел проверку. В тексте будут подробности.
//       * Текст - Строка - Текст для вывода результатов в интерфейсе.
//
Функция РезультатПроверкиНомераКарты(Знач НомерКарты, Знач ЭтоНациональныйПлатежныйИнструмент = Неопределено) Экспорт
	РезультатПроверки = Новый Структура("Успех, Текст");
	НомерКарты = СокрЛП(НомерКарты);
	Длина = СтрДлина(НомерКарты);
	
	Если Длина = 0 Тогда
		РезультатПроверки.Успех = Ложь;
		РезультатПроверки.Текст = НСтр("ru = 'Не заполнен номер карты.';
										|en = 'Card number is not filled in.'");
		Возврат РезультатПроверки;
	КонецЕсли;
	
	Если ЭтоНациональныйПлатежныйИнструмент = Неопределено Тогда
		ЭтоНациональныйПлатежныйИнструмент = НомерКартыЭтоНациональныйПлатежныйИнструмент(НомерКарты);
	КонецЕсли;
	
	МинимальнаяДлина = ?(ЭтоНациональныйПлатежныйИнструмент, 16, 13);
	Если Длина < МинимальнаяДлина Тогда
		РезультатПроверки.Успех = Ложь;
		РезультатПроверки.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В номере карты %1 символов, а должно быть не менее %2.';
				|en = 'The card number has %1 characters but it must contain at least %2.'"),
			Длина,
			МинимальнаяДлина);
		Возврат РезультатПроверки;
	КонецЕсли;
	Если Длина > 19 Тогда
		РезультатПроверки.Успех = Ложь;
		РезультатПроверки.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В номере карты %1 символов, а должно быть не более 19.';
				|en = 'The card number has %1 characters but it must contain 19 characters at most.'"),
			Длина);
		Возврат РезультатПроверки;
	КонецЕсли;
	
	ЛишниеСимволы = СтроковыеФункцииБЗККлиентСервер.УдалитьЦифрыИзСтроки(НомерКарты);
	Если Не ПустаяСтрока(ЛишниеСимволы) Тогда
		Если СтрДлина(ЛишниеСимволы) = 1 Тогда
			Текст = НСтр("ru = 'В номере карты должны быть только цифры (%1 - не цифра).';
						|en = 'The card number must contain only digits (%1 is not a digit).'");
		Иначе
			Текст = НСтр("ru = 'В номере карты должны быть только цифры (%1 - не цифры).';
						|en = 'The card number must contain only digits (%1 are not a digits).'");
		КонецЕсли;
		РезультатПроверки.Успех = Ложь;
		РезультатПроверки.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, ЛишниеСимволы);
		Возврат РезультатПроверки;
	КонецЕсли;
	
	Сумма = 0;
	Для Индекс = 1 По Длина Цикл
		Цифра = Число(Сред(НомерКарты, Длина - Индекс + 1, 1));
		Если Индекс % 2 = 0 Тогда
			Цифра = Цифра * 2;
			Если Цифра > 9 Тогда
				Цифра = (Цифра % 10) + 1;
			КонецЕсли
		КонецЕсли;
		Сумма = Сумма + Цифра;
	КонецЦикла;
	КонтрольнаяЦифраВерна = (Сумма % 10 = 0);
	Если Не КонтрольнаяЦифраВерна Тогда
		РезультатПроверки.Успех = Ложь;
		РезультатПроверки.Текст = НСтр("ru = 'Не совпадает контрольная сумма';
										|en = 'Checksum mismatch'");
		Возврат РезультатПроверки;
	КонецЕсли; 
	
	РезультатПроверки.Успех = Истина;
	РезультатПроверки.Текст = НСтр("ru = 'Номер карты соответствует требованиям.';
									|en = 'The card number meets the requirements.'");
	Возврат РезультатПроверки;
КонецФункции

Функция НомерКартыЭтоНациональныйПлатежныйИнструмент(Знач НомерКарты) Экспорт
	БИН = Лев(НомерКарты, 4);
	Возврат (БИН = "2200" Или БИН = "2201" Или БИН = "2202" Или БИН = "2203" Или БИН = "2204");
КонецФункции

// АПК:559-вкл
// АПК:558-вкл

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает шаблон текста ошибки заполнения периода.
//
// Параметры:
//   ДатаНачала    - Дата - Дата начала периода.
//   ДатаОкончания - Дата - Дата окончания периода.
//
// Возвращаемое значение:
//   Строка - Если пустая строка, значит период соответствует требованиям.
//       Если не пустая строка, то возвращается шаблон текста ошибки с одним параметром "%1".
//       В качестве параметра "%1" предполагается подстановка заголовка поля ввода периода в родительном падеже.
//
Функция ТекстОшибкиЗаполненияПериода(ДатаНачала, ДатаОкончания) Экспорт
	Если Не ЗначениеЗаполнено(ДатаНачала) Тогда
		Возврат НСтр("ru = 'Не заполнена дата начала %1.';
					|en = 'Start date %1 is empty.'");
	ИначеЕсли Не ЗначениеЗаполнено(ДатаОкончания) Тогда
		Возврат НСтр("ru = 'Не заполнена дата окончания %1.';
					|en = 'End date %1 is not filled in.'");
	ИначеЕсли ДатаНачала > ДатаОкончания Тогда
		Возврат НСтр("ru = 'Дата начала %1 больше даты окончания.';
					|en = 'Start date %1 is greater than the end date.'");
	ИначеЕсли Год(ДатаНачала) + 100 < Год(ДатаОкончания) Тогда
		Возврат НСтр("ru = 'Период %1 превышает 100 лет.';
					|en = 'Period %1 exceeds 100 years.'");
	КонецЕсли;
	Возврат "";
КонецФункции

#КонецОбласти
