
#Область СлужебныйПрограммныйИнтерфейс

Процедура РасчетРезервовНачисленияВДанныеФормы(ТаблицаПриемник, ТаблицаИсточник, Организация, ВидОперации, ПозицииВставки = Неопределено, ЗаполнятьПоказатели = Истина) Экспорт
	
	ПозицииСотрудников = Неопределено;
	СоответствиеОбходовСотрудников = Неопределено;
	
	Если ПозицииВставки <> Неопределено Тогда
		Если Не ПозицииВставки.Свойство("Начисления", ПозицииСотрудников) Тогда
			ПозицииСотрудников = Новый Соответствие;
			ПозицииВставки.Вставить("Начисления", ПозицииСотрудников);
		КонецЕсли;
		СоответствиеОбходовСотрудников = Новый Соответствие;
	КонецЕсли;
	
	ОтборСтрок = Новый Структура();
	ОтборСтрок.Вставить("Сотрудник", ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаИсточник, "Сотрудник", Истина));
	ОтборСтрок.Вставить("Подразделение", ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаИсточник, "Подразделение", Истина));
	ОтборСтрок.Вставить("ИдентификаторСтрокиВидаРасчета", ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаИсточник, "ИдентификаторСтрокиВидаРасчета", Истина));
	РасчетЗарплаты.ЗаменитьСтрокиНаНовыеДанные(ТаблицаПриемник, ТаблицаИсточник, "Сотрудник,Подразделение,ИдентификаторСтрокиВидаРасчета", , ОтборСтрок);
	
	Для Каждого СтрокаТаблицыИсточника Из ТаблицаИсточник Цикл
		Для Каждого СтрокаТаблицыПриемника Из ТаблицаПриемник Цикл
			Если СтрокаТаблицыИсточника.ИдентификаторСтрокиВидаРасчета = СтрокаТаблицыПриемника.ИдентификаторСтрокиВидаРасчета Тогда
				Для Каждого СтрокаТаблицыПоказателей Из СтрокаТаблицыИсточника.Показатели Цикл
					Если СтрокаТаблицыПоказателей.ИдентификаторСтрокиВидаРасчета = СтрокаТаблицыПриемника.ИдентификаторСтрокиВидаРасчета Тогда
						НомерПоказателя = СтрокаТаблицыИсточника.Показатели.Индекс(СтрокаТаблицыПоказателей) + 1;
						СтрокаТаблицыПриемника["Показатель" + НомерПоказателя] = СтрокаТаблицыПоказателей.Показатель;
						СтрокаТаблицыПриемника["Значение" + НомерПоказателя]  = СтрокаТаблицыПоказателей.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура РасчетРезервовВзносыВДанныеФормы(ТаблицаПриемник, ТаблицаИсточник, ПозицииВставки = Неопределено) Экспорт
	
	ПозицииФизическихЛиц = Неопределено;
	СоответствиеОбходовФизическихЛиц = Неопределено;	
	
	Если ПозицииВставки <> Неопределено Тогда
		Если Не ПозицииВставки.Свойство("Взносы", ПозицииФизическихЛиц) Тогда
			ПозицииФизическихЛиц = Новый Соответствие;
			ПозицииВставки.Вставить("Взносы", ПозицииФизическихЛиц);
		КонецЕсли;
		СоответствиеОбходовФизическихЛиц = Новый Соответствие;
	КонецЕсли;
	
	ОтборСтрок = Новый Структура();
	ОтборСтрок.Вставить("ФизическоеЛицо", ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаИсточник, "ФизическоеЛицо", Истина));
	РасчетЗарплаты.ЗаменитьСтрокиНаНовыеДанные(ТаблицаПриемник, ТаблицаИсточник, "ФизическоеЛицо", , ОтборСтрок);
	
КонецПроцедуры

Процедура РасчетРезервовРасчетВДанныеФормы(ТаблицаПриемник, ТаблицаИсточник, ПозицииВставки = Неопределено) Экспорт
	
	ПозицииСотрудников = Неопределено;
	СоответствиеОбходовСотрудников = Неопределено;
	
	Если ПозицииВставки <> Неопределено Тогда
		Если Не ПозицииВставки.Свойство("РасчетРезервов", ПозицииСотрудников) Тогда
			ПозицииСотрудников = Новый Соответствие;
			ПозицииВставки.Вставить("РасчетРезервов", ПозицииСотрудников);
		КонецЕсли;
		СоответствиеОбходовСотрудников = Новый Соответствие;
	КонецЕсли;
	
	ОтборСтрок = Новый Структура();
	ОтборСтрок.Вставить("Сотрудник", ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаИсточник, "Сотрудник", Истина));
	РасчетЗарплаты.ЗаменитьСтрокиНаНовыеДанные(ТаблицаПриемник, ТаблицаИсточник, "Сотрудник", , ОтборСтрок);
	
КонецПроцедуры

Процедура ОценочныеОбязательстваПоСотрудникамВДанныеФормы(ТаблицаПриемник, ТаблицаИсточник, ПозицииВставки = Неопределено) Экспорт
	
	ПозицииСотрудников = Неопределено;
	СоответствиеОбходовСотрудников = Неопределено;
	
	Если ПозицииВставки <> Неопределено Тогда
		Если Не ПозицииВставки.Свойство("ОценочныеОбязательстваПоСотрудникам", ПозицииСотрудников) Тогда
			ПозицииСотрудников = Новый Соответствие;
			ПозицииВставки.Вставить("ОценочныеОбязательстваПоСотрудникам", ПозицииСотрудников);
		КонецЕсли;
		СоответствиеОбходовСотрудников = Новый Соответствие;
	КонецЕсли;
			
	ОтборСтрок = Новый Структура();
	ОтборСтрок.Вставить("Сотрудник", ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаИсточник, "Сотрудник", Истина));
	ОтборСтрок.Вставить("Подразделение", ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаИсточник, "Подразделение", Истина));
	ОтборСтрок.Вставить("СпособОтраженияЗарплатыВБухучете", ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаИсточник, "СпособОтраженияЗарплатыВБухучете", Истина));
	РасчетЗарплаты.ЗаменитьСтрокиНаНовыеДанные(ТаблицаПриемник, ТаблицаИсточник, "Сотрудник,Подразделение,СпособОтраженияЗарплатыВБухучете", , ОтборСтрок);
	
КонецПроцедуры

Процедура ОценочныеОбязательстваВДанныеФормы(ТаблицаПриемник, ТаблицаИсточник, Очищать) Экспорт
	
	Если Очищать Тогда
		ТаблицаПриемник.Очистить();
		Для Каждого СтрокаИсточник Из ТаблицаИсточник Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаПриемник.Добавить(), СтрокаИсточник);
		КонецЦикла;
	Иначе
		
		ТаблицаРезервов = ТаблицаИсточник.Скопировать(Новый Структура("КорректировкаОбязательств", Ложь));
		ТаблицаРезервов.Свернуть("Подразделение,
			|СпособОтраженияЗарплатыВБухУчете, СтатьяФинансирования",
			"СуммаРезерва,СуммаРезерваНУ,СуммаРезерваСтраховыхВзносов,СуммаРезерваСтраховыхВзносовНУ,
			|СуммаРезерваФССНесчастныеСлучаи,СуммаРезерваФССНесчастныеСлучаиНУ");
		
		МасивСтрокКУдалению = Новый Массив;
		Отбор = Новый Структура("Подразделение,
			|СпособОтраженияЗарплатыВБухУчете, СтатьяФинансирования");
		Для Каждого СтрокаИсточник Из ТаблицаРезервов Цикл
			ЗаполнитьЗначенияСвойств(Отбор, СтрокаИсточник);
			МассивСтрок = ТаблицаПриемник.НайтиСтроки(Отбор);
			Если МассивСтрок.Количество() = 0 Тогда
				ЗаполнитьЗначенияСвойств(ТаблицаПриемник.Добавить(), СтрокаИсточник);
			Иначе
				ДанныеЗаполненые = Ложь;
				Для Каждого СтрокаМассива Из МассивСтрок Цикл
					Если Не СтрокаМассива.ФиксСтрока И Не СтрокаМассива.ФиксРасчет И Не СтрокаМассива.ФиксЗаполнение Тогда
						Если Не ДанныеЗаполненые Тогда
							ЗаполнитьЗначенияСвойств(СтрокаМассива, СтрокаИсточник);
							ДанныеЗаполненые = Истина;
						Иначе
							МасивСтрокКУдалению.Добавить(СтрокаМассива);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		Для Каждого СтрокаПриемник Из ТаблицаПриемник Цикл
			Если Не СтрокаПриемник.ФиксСтрока И Не СтрокаПриемник.ФиксРасчет И Не СтрокаПриемник.ФиксЗаполнение Тогда
				ЗаполнитьЗначенияСвойств(Отбор, СтрокаПриемник);
				МассивСтрок = ТаблицаИсточник.НайтиСтроки(Отбор);
				Если МассивСтрок.Количество() = 0 Тогда
					МасивСтрокКУдалению.Добавить(СтрокаПриемник);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если МасивСтрокКУдалению.Количество() > 0 Тогда
			Для Каждого СтрокаМассива Из МасивСтрокКУдалению Цикл
				ТаблицаПриемник.Удалить(СтрокаМассива);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
