#Область СлужебныйПрограммныйИнтерфейс

Процедура НаименованиеДокументаПриИзменении(Организация, ВидДокумента, НаименованиеДокумента) Экспорт
	
	ЭлектронныеТрудовыеКнижкиВызовСервера.НаименованиеДокументаПриИзмененииНаСервере(
		Организация, ВидДокумента, НаименованиеДокумента);
	
КонецПроцедуры

Процедура НаименованиеДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	ЗарплатаКадрыКлиент.ОткрытьФормуСпискаЗначенийСтроковогоРеквизита(Элемент,
		СтандартнаяОбработка, "НаименованиеДокументаТК", НСтр("ru = 'Наименования документов';
																|en = 'Document descriptions'"),
		НСтр("ru = 'Наименование документа';
			|en = 'Document name'"));
	
КонецПроцедуры

Процедура НаименованиеДокументаОбработкаВыбора(Реквизит, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		Реквизит = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

Процедура НаименованиеДокументаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка) Экспорт
	
	ЗарплатаКадрыКлиент.ПодборЗначенияСтроковогоРеквизита(Текст, ДанныеВыбора, СтандартнаяОбработка, "НаименованиеДокументаТК");
	
КонецПроцедуры

Процедура ОткрытьФормуВыбораОтправленныхСобытийФизическогоЛицаОрганизации(Владелец, ФизическоеЛицо, Организация, ДатаДокумента, ОписаниеОповещения = Неопределено) Экспорт
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Организация", Организация);
	ПараметрыОткрытия.Вставить("ФизическоеЛицо", ФизическоеЛицо);
	ПараметрыОткрытия.Вставить("ДатаДокумента", ДатаДокумента);
	
	ОткрытьФорму("РегистрСведений.МероприятияТрудовойДеятельности.Форма.ФормаВыбораСобытий",
		ПараметрыОткрытия, Владелец, Истина, , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура СохранитьСТДРНаДиск(СсылкаНаДокумент, ДополнительныеПараметрыСохранения) Экспорт
	
	ДанныеФайловСТДР = ЭлектронныеТрудовыеКнижкиВызовСервера.ДанныеФайловСТДР(
		СсылкаНаДокумент, ДополнительныеПараметрыСохранения.Форма.УникальныйИдентификатор);
	
	Если ДанныеФайловСТДР.Количество() > 0
		И ЗначениеЗаполнено(ДанныеФайловСТДР[0].Ссылка) Тогда
		
		СохранитьПрисоединенныеФайлыСТДРНаДиск(ДанныеФайловСТДР);
		Возврат;
		
	КонецЕсли;
	
	ИспользоватьЭлектронныеПодписи = Ложь;
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ЭлектроннаяПодпись") Тогда
		МодульЭлектроннаяПодписьКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ЭлектроннаяПодписьКлиент");
		ИспользоватьЭлектронныеПодписи = МодульЭлектроннаяПодписьКлиент.ИспользоватьЭлектронныеПодписи();
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СсылкаНаДокумент", СсылкаНаДокумент);
	ДополнительныеПараметры.Вставить("ДанныеФайловСТДР", ДанныеФайловСТДР);
	ДополнительныеПараметры.Вставить("ИдентификаторФормы", ДополнительныеПараметрыСохранения.Форма.УникальныйИдентификатор);
	
	Если Не ИспользоватьЭлектронныеПодписи Тогда
		
		Если ДанныеФайловСТДР.Количество() < 2 Тогда
			ТекстВопроса = НСтр("ru = 'Согласно порядку заполнения форма СТД-Р в электронном виде должна быть подписана усиленной квалифицированной электронной подписью.
				|На компьютере не используются средства для подписания файлов.
				|Сохранить не подписанный файл СТД-Р?';
				|en = 'According to the filling in procedure the STD-R form in electronic form must be signed with a strong qualified digital signature.
				|No tools for signing files are used on the PC.
				|Save the unsigned STD-R file?'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Согласно порядку заполнения форма СТД-Р в электронном виде должна быть подписана усиленной квалифицированной электронной подписью.
				|На компьютере не используются средства для подписания файлов.
				|Сохранить не подписанные файлы СТД-Р?';
				|en = 'According to the filling in procedure the STD-R form in electronic form must be signed with a strong qualified digital signature.
				|No tools for signing files are used on the PC.
				|Save the unsigned STD-R files?'");
		КонецЕсли;
		
		Оповещение = Новый ОписаниеОповещения("СохранитьСТДРНаДискБезИспользованияЭлектроннойПодписи",
			ЭлектронныеТрудовыеКнижкиКлиент, ДополнительныеПараметры);
		
		ПоказатьВопрос(Оповещение , ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	Иначе
		
		Если ДанныеФайловСТДР.Количество() < 2 Тогда
			ТекстВопроса = НСтр("ru = 'Согласно порядку заполнения форма СТД-Р в электронном виде должна быть подписана усиленной квалифицированной электронной подписью.
				|Подписать файл СТД-Р?';
				|en = 'According to the filling in procedure the STD-R form in electronic form must be signed with a strong qualified digital signature.
				|Save the unsigned STD-R file?'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Согласно порядку заполнения форма СТД-Р в электронном виде должна быть подписана усиленной квалифицированной электронной подписью.
				|Подписать файлы СТД-Р?';
				|en = 'According to the filling in procedure the STD-R form in electronic form must be signed with a strong qualified digital signature.
				|Save the unsigned STD-R files?'");
		КонецЕсли;
		
		Оповещение = Новый ОписаниеОповещения("СохранитьСТДРНаДискСИспользованиемЭлектроннойПодписи",
			ЭлектронныеТрудовыеКнижкиКлиент, ДополнительныеПараметры);
		
		ПоказатьВопрос(Оповещение , ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьСТДРНаДискБезИспользованияЭлектроннойПодписи(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Или Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьПрисоединенныеФайлыСТДРНаДиск(ДополнительныеПараметры.ДанныеФайловСТДР);
	
КонецПроцедуры

Процедура СохранитьСТДРНаДискСИспользованиемЭлектроннойПодписи(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Или Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если ДополнительныеПараметры.ДанныеФайловСТДР.Количество() < 2 Тогда
			Состояние(НСтр("ru = 'Выполняется подписание файла СТД-Р.';
							|en = 'STD-R file signing in progress.'"));
		Иначе
			Состояние(НСтр("ru = 'Выполняется подписание файлов СТД-Р.';
							|en = 'STD-R files signing in progress.'"));
		КонецЕсли;
		
		ДополнительныеПараметры.Вставить("ИндексФайла", 0);
		ПодписатьСТДР(ДополнительныеПараметры);
		
	Иначе
		СохранитьПрисоединенныеФайлыСТДРНаДиск(ДополнительныеПараметры.ДанныеФайловСТДР);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодписатьСТДР(ДополнительныеПараметры)
	
	ДанныеФайлаСТДР = ДополнительныеПараметры.ДанныеФайловСТДР[ДополнительныеПараметры.ИндексФайла];
	
	Оповещение = Новый ОписаниеОповещения("ПодписатьСледующийФайлСТДР", ЭтотОбъект, ДополнительныеПараметры);
	
	ИнтерфейсыВзаимодействияБРОКлиент.ПодписатьФайлXMLDSig(
		Оповещение, ДанныеФайлаСТДР.Организация, ДанныеФайлаСТДР.Хранение);
	
КонецПроцедуры

Процедура ПодписатьСледующийФайлСТДР(Результат, ДополнительныеПараметры) Экспорт
	
	ДанныеФайлаСТДР = ДополнительныеПараметры.ДанныеФайловСТДР[ДополнительныеПараметры.ИндексФайла];
	
	Если Результат <> Неопределено Тогда
		ДополнительныеПараметры.Вставить("ОповеститьОЗаписи", Истина);
		ДанныеФайлаСТДР.Хранение = Результат;
		ЭлектронныеТрудовыеКнижкиВызовСервера.ОбновитьФайлСТДР(
			ДополнительныеПараметры.СсылкаНаДокумент,
			ДанныеФайлаСТДР.Хранение,
			ДанныеФайлаСТДР.ИмяФайла,
			ДанныеФайлаСТДР.Ссылка);
	Иначе
		
		ТекстПредупреждения = СтрШаблон(
			НСтр("ru = 'Не удалось подписать файл СТД-Р по организации %1';
				|en = 'Cannot sign an STD-R file for %1 company'"),
			ДанныеФайлаСТДР.Организация);
		
		ПоказатьПредупреждение(, ТекстПредупреждения);
		
	КонецЕсли;
	
	ДополнительныеПараметры.ИндексФайла = ДополнительныеПараметры.ИндексФайла + 1;
	Если ДополнительныеПараметры.ИндексФайла < ДополнительныеПараметры.ДанныеФайловСТДР.Количество() Тогда
		ПодписатьСТДР(ДополнительныеПараметры);
	Иначе
		Если ДополнительныеПараметры.Свойство("ОповеститьОЗаписи") Тогда
			ПрисоединенныеФайлы = Новый Массив;
			Для Каждого ДанныеФайлаСТДР Из ДополнительныеПараметры.ДанныеФайловСТДР Цикл
				Если ЗначениеЗаполнено(ДанныеФайлаСТДР.Ссылка) Тогда
					ПрисоединенныеФайлы.Добавить(ДанныеФайлаСТДР.Ссылка);
				КонецЕсли;
			КонецЦикла;
			Оповестить("ЗаписьФайлаСТДР", ПрисоединенныеФайлы, ДополнительныеПараметры.ИдентификаторФормы);
		КонецЕсли;
		СохранитьПрисоединенныеФайлыСТДРНаДиск(ДополнительныеПараметры.ДанныеФайловСТДР);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРегистрациюОтменыМероприятий(Организация, ДанныеОтменяемыхМероприятий, ОписаниеОповещения = Неопределено) Экспорт
	
	Если ДанныеОтменяемыхМероприятий <> Неопределено
		И ДанныеОтменяемыхМероприятий.Количество() > 0 Тогда
		
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Организация", Организация);
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ОтменяемыеМероприятия", ДанныеОтменяемыхМероприятий);
		ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		ОткрытьФорму("Документ.РегистрацияТрудовойДеятельности.ФормаОбъекта", ПараметрыОткрытия, ЭтотОбъект,
			Истина, , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРегистраторМероприятия(ДанныеРегистраторов, ОписаниеОповещения = Неопределено) Экспорт
	
	Если ДанныеРегистраторов <> Неопределено
		И ДанныеРегистраторов.Количество() > 0 Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Ключ", ДанныеРегистраторов[0].Регистратор);
		
		ИмяФормыДокумента = СтрШаблон(
			"Документ.%1.ФормаОбъекта",
			ЭлектронныеТрудовыеКнижкиВызовСервера.ИмяОбъектаМетаданных(ПараметрыОткрытия.Ключ));
		
		ОткрытьФорму(ИмяФормыДокумента, ПараметрыОткрытия, ЭтотОбъект, Истина, , ,
			ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СохранитьПрисоединенныеФайлыСТДРНаДиск(ДанныеФайловСТДР)
	
	ФайлыДляСохранения = Новый Массив;
	Для Каждого ДанныеФайла Из ДанныеФайловСТДР Цикл
		ФайлыДляСохранения.Добавить(Новый ОписаниеПередаваемогоФайла(
			ДанныеФайла.ИмяФайла + ".xml", ДанныеФайла.Хранение));
	КонецЦикла;
	
	ПараметрыСохранения = ФайловаяСистемаКлиент.ПараметрыСохраненияФайлов();
	ФайловаяСистемаКлиент.СохранитьФайлы(, ФайлыДляСохранения, ПараметрыСохранения);
	
КонецПроцедуры

#КонецОбласти
