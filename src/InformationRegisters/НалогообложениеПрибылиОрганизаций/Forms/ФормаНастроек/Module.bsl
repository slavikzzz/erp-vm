
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("Организация") Или Не Параметры.Свойство("Период") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Организация", Организация);
	Параметры.Свойство("Период",      Период);
	ПериодИсходный = Период;
	
	Если Не ПравоДоступа("Редактирование", Метаданные.РегистрыСведений.НалогообложениеПрибылиОрганизаций) Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ЗаполнитьДанныеНастроек();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если СтрНайти(ИсточникВыбора.ИмяФормы, "СтатьиДоходов") <> 0
		Или СтрНайти(ИсточникВыбора.ИмяФормы, "Номенклатура") <> 0 Тогда
		
		СтрокаНастройки = Настройки_ОбъектыУчета.Добавить();
		СтрокаНастройки.ОбъектНастройки = ВыбранноеЗначение;
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ПроверкаЗаполненияТаблицы(Настройки_Подразделения, "Настройки_Подразделения",
		НСтр("ru = 'Подразделение';
			|en = 'Business unit'"), Отказ);
	ПроверкаЗаполненияТаблицы(Настройки_ОбъектыУчета, "Настройки_ОбъектыУчета",
		НСтр("ru = 'Статья дохода/Номенклатура';
			|en = 'Income item/Items'"), Отказ);
	ПроверкаЗаполненияТаблицы(Настройки_НаправленияДеятельности, "Настройки_НаправленияДеятельности",
		НСтр("ru = 'Направление деятельности';
			|en = 'Line of business'"), Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодобратьНоменклатуру(Команда)
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВыбора",,
		ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСтатьиДоходов(Команда)
	
	ОткрытьФорму("ПланВидовХарактеристик.СтатьиДоходов.ФормаВыбора",,
		ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьНастройки(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьНастройкиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьИЗакрыть(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьНастройкиНаСервере();
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ОчиститьСообщения();
	
	Если Не ЗначениеЗаполнено(Период) Тогда
		Период = ПериодИсходный;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Период не может быть пустым.';
														|en = 'Period cannot be empty.'"));
		Возврат;
	КонецЕсли;
	
	Если Период = ПериодИсходный Тогда
		Возврат;
	КонецЕсли;
	
	ПериодИсходный = Период;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПриИзмененииПериодаЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Загрузить настройки на новую дату?
												|Текущие настройки будут удалены.';
												|en = 'Import settings as of the new date?
												|Current settings will be deleted.'"), РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаДляОбособленногоПодразделенияПриИзменении(Элемент)
	
	ОчиститьСообщения();
	
	Если Модифицированность Тогда
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("НовоеЗначение", НастройкаДляОбособленногоПодразделения);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПрименитьНастройкиЗавершение", ЭтотОбъект, ПараметрыОповещения);
		
		НастройкаДляОбособленногоПодразделения = Не НастройкаДляОбособленногоПодразделения;
		
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Есть несохраненные настройки.
												|Записать изменения перед продолжением?';
												|en = 'There are unsaved settings.
												|Save the changes first?'"), РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		НастройкаДляОбособленногоПодразделенияНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбособленноеПодразделениеПриИзменении(Элемент)
	
	ОчиститьСообщения();
	
	Если ЗначениеЗаполнено(ОбособленноеПодразделениеИсходное)
		И ОбособленноеПодразделениеИсходное = ОбособленноеПодразделение Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПрименитьНастройкиЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Есть несохраненные настройки.
												|Записать изменения перед продолжением?';
												|en = 'There are unsaved settings.
												|Save the changes first?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		НастройкаДляОбособленногоПодразделенияНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьДоступностьЭлементов()

	Элементы.ОбособленноеПодразделение.Доступность = НастройкаДляОбособленногоПодразделения;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеНастроек()
	
	Настройки_Подразделения.Очистить();
	Настройки_ОбъектыУчета.Очистить();
	Настройки_НаправленияДеятельности.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НалогообложениеПрибылиОрганизаций.Подразделение КАК ОбъектНастройки,
		|	НалогообложениеПрибылиОрганизаций.ВариантНалогообложенияПрибыли КАК ВариантНалогообложенияПрибыли
		|ИЗ
		|	РегистрСведений.НалогообложениеПрибылиОрганизаций.СрезПоследних(&Период, Организация = &Организация
		|	И Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК НалогообложениеПрибылиОрганизаций
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалогообложениеПрибылиОрганизаций.ОбъектУчета КАК ОбъектНастройки,
		|	НалогообложениеПрибылиОрганизаций.ВариантНалогообложенияПрибыли КАК ВариантНалогообложенияПрибыли
		|ИЗ
		|	РегистрСведений.НалогообложениеПрибылиОрганизаций.СрезПоследних(&Период, Организация = &Организация
		|	И ОбъектУчета <> ВЫБОР
		|		КОГДА ОбъектУчета ССЫЛКА Справочник.Номенклатура
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|		КОГДА ОбъектУчета ССЫЛКА ПланВидовХарактеристик.СтатьиДоходов
		|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
		|	КОНЕЦ) КАК НалогообложениеПрибылиОрганизаций
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалогообложениеПрибылиОрганизаций.НаправлениеДеятельности КАК ОбъектНастройки,
		|	НалогообложениеПрибылиОрганизаций.ВариантНалогообложенияПрибыли КАК ВариантНалогообложенияПрибыли
		|ИЗ
		|	РегистрСведений.НалогообложениеПрибылиОрганизаций.СрезПоследних(&Период, Организация = &Организация
		|	И НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК
		|		НалогообложениеПрибылиОрганизаций";
	
	Запрос.УстановитьПараметр("Организация", ?(НастройкаДляОбособленногоПодразделения, ОбособленноеПодразделение, Организация));
	Запрос.УстановитьПараметр("Период",      Период);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Если Не РезультатыЗапроса[0].Пустой() Тогда
		Настройки_Подразделения.Загрузить(РезультатыЗапроса[0].Выгрузить());
	КонецЕсли;
	
	Если Не РезультатыЗапроса[1].Пустой() Тогда
		Настройки_ОбъектыУчета.Загрузить(РезультатыЗапроса[1].Выгрузить());
	КонецЕсли;
	
	Если Не РезультатыЗапроса[2].Пустой() Тогда
		Настройки_НаправленияДеятельности.Загрузить(РезультатыЗапроса[2].Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПриИзмененииПериодаЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьДанныеНастроек();

КонецПроцедуры

&НаСервере
Процедура ПрименитьНастройкиНаСервере()
	
	Если НастройкаДляОбособленногоПодразделения И ЗначениеЗаполнено(ОбособленноеПодразделениеИсходное) Тогда
		ТекущаяОрганизация = ОбособленноеПодразделениеИсходное;
	ИначеЕсли НастройкаДляОбособленногоПодразделения Тогда
		ТекущаяОрганизация = ОбособленноеПодразделение;
	Иначе
		ТекущаяОрганизация = Организация;
	КонецЕсли;
	
	БлокировкаДанных = Новый БлокировкаДанных();
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.НалогообложениеПрибылиОрганизаций");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Организация", ТекущаяОрганизация);
	
	НачатьТранзакцию();
	
	Попытка
		
		БлокировкаДанных.Заблокировать();
		
		НаборЗаписей = РегистрыСведений.НалогообложениеПрибылиОрганизаций.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Организация.Установить(ТекущаяОрганизация);
		НаборЗаписей.Отбор.Период.Установить(НачалоМесяца(Период));
		НаборЗаписей.Прочитать();
		
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать(); // Очистка текущих настроек
		
		Для Каждого СтрокаНастроек Из Настройки_Подразделения Цикл
			Запись = НаборЗаписей.Добавить();
			Запись.Организация   = ТекущаяОрганизация;
			Запись.Период        = Период;
			Запись.Подразделение = СтрокаНастроек.ОбъектНастройки;
			Запись.ВариантНалогообложенияПрибыли = СтрокаНастроек.ВариантНалогообложенияПрибыли;
		КонецЦикла;
		
		Для Каждого СтрокаНастроек Из Настройки_ОбъектыУчета Цикл
			Запись = НаборЗаписей.Добавить();
			Запись.Организация   = ТекущаяОрганизация;
			Запись.Период        = Период;
			Запись.ОбъектУчета   = СтрокаНастроек.ОбъектНастройки;
			Запись.ВариантНалогообложенияПрибыли = СтрокаНастроек.ВариантНалогообложенияПрибыли;
		КонецЦикла;
		
		Для Каждого СтрокаНастроек Из Настройки_НаправленияДеятельности Цикл
			Запись = НаборЗаписей.Добавить();
			Запись.Организация = ТекущаяОрганизация;
			Запись.Период      = Период;
			Запись.НаправлениеДеятельности       = СтрокаНастроек.ОбъектНастройки;
			Запись.ВариантНалогообложенияПрибыли = СтрокаНастроек.ВариантНалогообложенияПрибыли;
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
		ЗафиксироватьТранзакцию();
		Модифицированность = Ложь;
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ШаблонСообщения = НСтр("ru = 'Изменение настроек не выполнено по причине:
								|%1';
								|en = 'Cannot change the settings due to:
								|%1'");
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ШаблонСообщения, КраткоеПредставлениеОшибки(ИнформацияОбОшибке())));
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверкаЗаполненияТаблицы(ТаблицаНастроек, ПредставлениеТаблицы, ПредставлениеОбъектаНастроек, Отказ)
	
	ШаблонСообщения = НСтр("ru = 'Не заполнено значение %1';
							|en = '%1 value is not filled'");
	
	Индекс = 0;
	Для Каждого СтрокаНастройки Из ТаблицаНастроек Цикл
		Если Не ЗначениеЗаполнено(СтрокаНастройки.ОбъектНастройки) Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ШаблонСообщения, ПредставлениеОбъектаНастроек),,
				СтрШаблон("%1[%2].ОбъектНастройки", ПредставлениеТаблицы, Индекс),, Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаНастройки.ВариантНалогообложенияПрибыли) Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ШаблонСообщения, НСтр("ru = 'Вариант налогообложения прибыли';
																					|en = 'Profit taxation option'")),,
				СтрШаблон("%1[%2].ВариантНалогообложенияПрибыли", ПредставлениеТаблицы, Индекс),, Отказ);
		КонецЕсли;
		
		Индекс = Индекс + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПрименитьНастройкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Или Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПрименитьНастройкиНаСервере();
	КонецЕсли;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("НовоеЗначение") Тогда
		НастройкаДляОбособленногоПодразделения = ДополнительныеПараметры.НовоеЗначение;
	КонецЕсли;
	НастройкаДляОбособленногоПодразделенияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура НастройкаДляОбособленногоПодразделенияНаСервере()

	Настройки_НаправленияДеятельности.Очистить();
	Настройки_ОбъектыУчета.Очистить();
	Настройки_Подразделения.Очистить();
	
	Если Не НастройкаДляОбособленногоПодразделения Тогда
		ОбособленноеПодразделение = Неопределено;
		ОбособленноеПодразделениеИсходное = Неопределено;
	КонецЕсли;
	
	Если ОбособленноеПодразделениеИсходное <> ОбособленноеПодразделение Тогда
		ОбособленноеПодразделениеИсходное = ОбособленноеПодразделение;
	КонецЕсли;
	
	ЗаполнитьДанныеНастроек();
	УстановитьДоступностьЭлементов();
	
	Модифицированность = Ложь;

КонецПроцедуры

#КонецОбласти
