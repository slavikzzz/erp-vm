#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализируются параметры для получения настроек налогообложения прибыли
// 
// Возвращаемое значение:
// 	Структура - содержит:
// 		
// 		* МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - обязательно, если нужен результат запроса
// 		                          - Неопределено - когда нужен только сформированный текст запроса
// 		* Период                  - Дата - актуальные данные на дату.
// 		
// 		// Для поиска значений настроек налогообложения по отбору. Отбор может не использоваться,
// 		// а может быть как по временной таблице, так и по значениям.
// 		// Если в описании поля указано "(обязательно)", значит при использовании выбранного метода отбора
// 		// нельзя оставлять поле пустыми.
// 		* ОтборПоЗначениям - Структура - для отбора по значениям должно быть заполнено хотя бы одно поле. Содержит:
// 			** Организация   - СправочникСсылка.Организации - 
// 			** Подразделение - СправочникСсылка.СтруктураПредприятия - 
// 			** ОбъектУчета   - СправочникСсылка.Номенклатура, ПланВидовХарактеристикСсылка.СтатьиДоходов -
// 			** НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - 
// 		* ОтборПоВременнойТаблице - Структура - содержит:
// 			** ИмяТаблицы                      - Строка - имя временной таблицы (обязательно)
// 			** ИмяПоля_Организация             - Строка - имя колонки "Организация" (обязательно)
// 			** ИмяПоля_Период                  - Строка - имя колонки "Период" (обязательно, если параметр "Период" пустой)
// 			// для отбора по временной таблицы должно быть заполнено как минимум имя одного из полей ниже.
// 			** ИмяПоля_Подразделение           - Строка - имя колонки "Подразделение"
// 			** ИмяПоля_ОбъектУчета             - Строка - имя колонки "ОбъектУчета"
// 			** ИмяПоля_НаправлениеДеятельности - Строка - имя колонки "НаправлениеДеятельности"
// 		
// 		// Дополнительные параметры.
// 		* СохранитьСлужебнуюВТ_ОтборНастроек - Булево - Если "Истина", построенная служебная таблица отбора
// 		                                      не уничтожается, с целью дальнейшего ее использования.
//
Функция НовыйПараметрыПолученияНастроекНалогообложенияПрибыли() Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	СтруктураНастроек.Вставить("Период",                  Дата(1,1,1));
	СтруктураНастроек.Вставить("МенеджерВременныхТаблиц", Неопределено);
	
	// Для поиска значения настройки налогообложения
	
	// - отбор по временной таблице
	ОтборПоВременнойТаблице = Новый Структура;
	ОтборПоВременнойТаблице.Вставить("ИмяТаблицы",                      "");
	ОтборПоВременнойТаблице.Вставить("ИмяПоля_Организация",             "");
	ОтборПоВременнойТаблице.Вставить("ИмяПоля_Период",                  "");
	ОтборПоВременнойТаблице.Вставить("ИмяПоля_Подразделение",           "");
	ОтборПоВременнойТаблице.Вставить("ИмяПоля_ОбъектУчета",             "");
	ОтборПоВременнойТаблице.Вставить("ИмяПоля_НаправлениеДеятельности", "");
	
	СтруктураНастроек.Вставить("ОтборПоВременнойТаблице", ОтборПоВременнойТаблице);
	
	// - отбор по значениям
	ОтборПоЗначениям = Новый Структура;
	ОтборПоЗначениям.Вставить("Организация",             Справочники.Организации.ПустаяСсылка());
	ОтборПоЗначениям.Вставить("Подразделение",           Справочники.СтруктураПредприятия.ПустаяСсылка());
	ОтборПоЗначениям.Вставить("ОбъектУчета",             Неопределено);
	ОтборПоЗначениям.Вставить("НаправлениеДеятельности", Справочники.НаправленияДеятельности.ПустаяСсылка());
	
	СтруктураНастроек.Вставить("ОтборПоЗначениям", ОтборПоЗначениям);
	
	// Дополнительные параметры
	СтруктураНастроек.Вставить("СохранитьСлужебнуюВТ_ОтборНастроек", Ложь);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Создается временная таблица "НастройкиНалогообложенияПрибылиПоПриоритетам"
// Содержит колонки:
// 
// 	* Организация             - СправочникСсылка.Организации,
// 	* Период                  - Дата - актуальные данные на дату
// 	
// 	// Значения из переданного отбора. Если отбор отсутствует, будут пустые значения
// 	* Подразделение           - СправочникСсылка.СтруктураПредприятия,
// 	* ОбъектУчета             - СправочникСсылка.Номенклатура, ПланВидовХарактеристикСсылка.СтатьиДоходов,
// 	* НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности,
// 	
// 	// Ключи подобранной настройки
// 	* ПриоритетНастройки      - Число - приоритет ключей настройки. Диапазон значений:
// 		10 < x < 20 - настройка произведена по направлению деятельности
// 		20 < x < 30 - настройка произведена по объекту учета
// 		30 < x < 40 - настройка произведена по подразделению
// 	* КлючНастройкиПодразделение           - СправочникСсылка.СтруктураПредприятия,
// 	* КлючНастройкиОбъектУчета             - СправочникСсылка.Номенклатура, ПланВидовХарактеристикСсылка.СтатьиДоходов,
// 	* КлючНастройкиНаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности,
// 	
// 	* ВариантНалогообложенияПрибыли  - СправочникСсылка.ВариантыНалогообложенияПрибыли.
// 
// Параметры:
// 	ПараметрыПолученияНастроек - см. НовыйПараметрыПолученияНастроекНалогообложенияПрибыли
//
Процедура ПодготовитьВТ_НастройкиНалогообложенияПрибылиПоПриоритетам(ПараметрыПолученияНастроек) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыПолученияНастроек.МенеджерВременныхТаблиц;
	
	Запрос.Текст = ТекстЗапроса_НастройкиНалогообложенияПрибылиПоПриоритетам(ПараметрыПолученияНастроек);
	
	НастройкиНалогообложения_УстановитьПараметрыЗапроса(Запрос, ПараметрыПолученияНастроек);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Создается временная таблица "НастройкиНалогообложенияПрибыли"
// Содержит колонки:
// 
// 	* Организация             - СправочникСсылка.Организации,
// 	* Период                  - Дата - актуальные данные на дату
// 	
// 	// Значения из переданного отбора. Если отбор отсутствует, будут пустые значения
// 	* Подразделение           - СправочникСсылка.СтруктураПредприятия,
// 	* ОбъектУчета             - СправочникСсылка.Номенклатура, ПланВидовХарактеристикСсылка.СтатьиДоходов,
// 	* НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности,
// 	
// 	// Ключи подобранной настройки
// 	* КлючНастройкиПодразделение           - СправочникСсылка.СтруктураПредприятия,
// 	* КлючНастройкиОбъектУчета             - СправочникСсылка.Номенклатура, ПланВидовХарактеристикСсылка.СтатьиДоходов,
// 	* КлючНастройкиНаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности,
// 	
// 	* ВариантНалогообложенияПрибыли  - СправочникСсылка.ВариантыНалогообложенияПрибыли.
// 
// Параметры:
// 	ПараметрыПолученияНастроек - см. НовыйПараметрыПолученияНастроекНалогообложенияПрибыли
//
Процедура ПодготовитьВТ_НастройкиНалогообложенияПрибыли(ПараметрыПолученияНастроек) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыПолученияНастроек.МенеджерВременныхТаблиц;
	
	Запрос.Текст = ТекстЗапроса_НастройкиНалогообложенияПрибыли(ПараметрыПолученияНастроек);
	
	НастройкиНалогообложения_УстановитьПараметрыЗапроса(Запрос, ПараметрыПолученияНастроек);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Текст запроса создания временной таблицы "НастройкиНалогообложенияПрибылиПоПриоритетам"
// Содержит колонки:
// 
// 	* Организация             - СправочникСсылка.Организации,
// 	* Период                  - Дата - актуальные данные на дату
// 	
// 	// Значения из переданного отбора. Если отбор отсутствует, будут пустые значения
// 	* Подразделение           - СправочникСсылка.СтруктураПредприятия,
// 	* ОбъектУчета             - СправочникСсылка.Номенклатура, ПланВидовХарактеристикСсылка.СтатьиДоходов,
// 	* НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности,
// 	
// 	// Ключи подобранной настройки
// 	* КлючНастройкиПодразделение           - СправочникСсылка.СтруктураПредприятия,
// 	* КлючНастройкиОбъектУчета             - СправочникСсылка.Номенклатура, ПланВидовХарактеристикСсылка.СтатьиДоходов,
// 	* КлючНастройкиНаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности,
// 	
// 	// Сведения о подобранной настройке
// 	* ПриоритетНастройки      - Число - приоритет ключей настройки. Диапазон значений:
// 		10 < x < 20 - настройка произведена по направлению деятельности
// 		20 < x < 30 - настройка произведена по объекту учета
// 		30 < x < 40 - настройка произведена по подразделению
// 	* ЭтоНастройкаИсключения  - Булево - Если "Истина", то заполнено одновременно более 1-ого ключа настройки
// 	
// 	* ВариантНалогообложенияПрибыли  - СправочникСсылка.ВариантыНалогообложенияПрибыли.
//
// Обязательные параметры для выполнения запроса - см НастройкиНалогообложения_УстановитьПараметрыЗапроса().
//
// Параметры:
// 	ПараметрыПолученияНастроек - см. НовыйПараметрыПолученияНастроекНалогообложенияПрибыли
//
// Возвращаемое значение:
// 	Строка - текст запроса
//
Функция ТекстЗапроса_НастройкиНалогообложенияПрибылиПоПриоритетам(ПараметрыПолученияНастроек) Экспорт
	
	МетодОтбораНастроек = НастройкиНалогообложения_ОпределитьМетодОтбора(ПараметрыПолученияНастроек);
	
	ТекстЗапроса_ОтборНастроек = 
		НастройкиНалогообложения_ЗапросОтборНастроек(ПараметрыПолученияНастроек, МетодОтбораНастроек);
	
	ТекстЗапроса = ТекстЗапроса_ОтборНастроек + ОбщегоНазначения.РазделительПакетаЗапросов() +
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация                          КАК Организация,
	|	Т.Период                               КАК Период,
	|
	|	Т.Подразделение                        КАК Подразделение,
	|	Т.ОбъектУчета                          КАК ОбъектУчета,
	|	Т.НаправлениеДеятельности              КАК НаправлениеДеятельности,
	|
	|	Т.КлючНастройкиПериод                  КАК КлючНастройкиПериод,
	|	Т.КлючНастройкиПодразделение           КАК КлючНастройкиПодразделение,
	|	Т.КлючНастройкиОбъектУчета             КАК КлючНастройкиОбъектУчета,
	|	Т.КлючНастройкиНаправлениеДеятельности КАК КлючНастройкиНаправлениеДеятельности,
	|
	|	Т.ПриоритетНастройки                   КАК ПриоритетНастройки,
	|	ВЫБОР
	|		КОГДА
	|				(Т.КлючНастройкиПодразделение <> &ПустойПодразделение
	|					И Т.КлючНастройкиОбъектУчета <> &ПустойОбъектУчета)
	|
	|				ИЛИ (Т.КлючНастройкиОбъектУчета <> &ПустойОбъектУчета
	|					И Т.КлючНастройкиНаправлениеДеятельности <> &ПустойНаправлениеДеятельности)
	|
	|				ИЛИ (Т.КлючНастройкиПодразделение <> &ПустойПодразделение
	|					И Т.КлючНастройкиНаправлениеДеятельности <> &ПустойНаправлениеДеятельности)
	|			ТОГДА
	|				ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                  КАК ЭтоНастройкаИсключения,
	|
	|	Т.ВариантНалогообложенияПрибыли        КАК ВариантНалогообложенияПрибыли
	|
	|ПОМЕСТИТЬ НастройкиНалогообложенияПрибылиПоПриоритетам_БезСрезаПоследних
	|ИЗ
	|	&ТекстЗапросаПоПриоритетамВложенный КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Период,
	|	Подразделение,
	|	ОбъектУчета,
	|	НаправлениеДеятельности,
	|	КлючНастройкиПодразделение,
	|	КлючНастройкиОбъектУчета,
	|	КлючНастройкиНаправлениеДеятельности,
	|	ПриоритетНастройки
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеНастройки.Организация                          КАК Организация,
	|	ВсеНастройки.Период                               КАК Период,
	|
	|	ВсеНастройки.Подразделение                        КАК Подразделение,
	|	ВсеНастройки.ОбъектУчета                          КАК ОбъектУчета,
	|	ВсеНастройки.НаправлениеДеятельности              КАК НаправлениеДеятельности,
	|
	|	ВсеНастройки.КлючНастройкиПодразделение           КАК КлючНастройкиПодразделение,
	|	ВсеНастройки.КлючНастройкиОбъектУчета             КАК КлючНастройкиОбъектУчета,
	|	ВсеНастройки.КлючНастройкиНаправлениеДеятельности КАК КлючНастройкиНаправлениеДеятельности,
	|
	|	ВсеНастройки.ПриоритетНастройки                   КАК ПриоритетНастройки,
	|	ВсеНастройки.ЭтоНастройкаИсключения               КАК ЭтоНастройкаИсключения,
	|
	|	ВсеНастройки.ВариантНалогообложенияПрибыли        КАК ВариантНалогообложенияПрибыли
	|
	|ПОМЕСТИТЬ НастройкиНалогообложенияПрибылиПоПриоритетам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.Организация,
	|		Т.Период,
	|		Т.Подразделение,
	|		Т.ОбъектУчета,
	|		Т.НаправлениеДеятельности,
	|		Т.КлючНастройкиПодразделение,
	|		Т.КлючНастройкиОбъектУчета,
	|		Т.КлючНастройкиНаправлениеДеятельности,
	|		Т.ПриоритетНастройки,
	|		МАКСИМУМ(Т.КлючНастройкиПериод) КАК КлючНастройкиПериод
	|	ИЗ
	|		НастройкиНалогообложенияПрибылиПоПриоритетам_БезСрезаПоследних КАК Т
	|
	|	СГРУППИРОВАТЬ ПО
	|		Т.Организация,
	|		Т.Период,
	|		Т.Подразделение,
	|		Т.ОбъектУчета,
	|		Т.НаправлениеДеятельности,
	|		Т.КлючНастройкиПодразделение,
	|		Т.КлючНастройкиОбъектУчета,
	|		Т.КлючНастройкиНаправлениеДеятельности,
	|		Т.ПриоритетНастройки
	|
	|	) КАК ОтборПоследнихНастроек
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НастройкиНалогообложенияПрибылиПоПриоритетам_БезСрезаПоследних КАК ВсеНастройки
	|	ПО
	|		ОтборПоследнихНастроек.Организация                            = ВсеНастройки.Организация
	|		И ОтборПоследнихНастроек.Период                               = ВсеНастройки.Период
	|		И ОтборПоследнихНастроек.Подразделение                        = ВсеНастройки.Подразделение
	|		И ОтборПоследнихНастроек.ОбъектУчета                          = ВсеНастройки.ОбъектУчета
	|		И ОтборПоследнихНастроек.НаправлениеДеятельности              = ВсеНастройки.НаправлениеДеятельности
	|		И ОтборПоследнихНастроек.КлючНастройкиПодразделение           = ВсеНастройки.КлючНастройкиПодразделение
	|		И ОтборПоследнихНастроек.КлючНастройкиОбъектУчета             = ВсеНастройки.КлючНастройкиОбъектУчета
	|		И ОтборПоследнихНастроек.КлючНастройкиНаправлениеДеятельности = ВсеНастройки.КлючНастройкиНаправлениеДеятельности
	|		И ОтборПоследнихНастроек.ПриоритетНастройки                   = ВсеНастройки.ПриоритетНастройки
	|		И ОтборПоследнихНастроек.КлючНастройкиПериод                  = ВсеНастройки.КлючНастройкиПериод
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Подразделение,
	|	ОбъектУчета,
	|	НаправлениеДеятельности,
	|	Период,
	|	ПриоритетНастройки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НастройкиНалогообложенияПрибылиПоПриоритетам_БезСрезаПоследних
	|";
	
	Если НЕ ПараметрыПолученияНастроек.СохранитьСлужебнуюВТ_ОтборНастроек Тогда
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() + "УНИЧТОЖИТЬ ОтборНастроек";
	КонецЕсли;
	
	ТекстЗапросаПоПриоритетамВложенный = "("
		+ НастройкиНалогообложения_ЗапросПриоритета_ПоНаправлениюДеятельности(МетодОтбораНастроек)
		+ ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()
		+ НастройкиНалогообложения_ЗапросПриоритета_ПоОбъектуУчета(МетодОтбораНастроек)
		+ ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()
		+ НастройкиНалогообложения_ЗапросПриоритета_ПоПодразделению(МетодОтбораНастроек)
		+ ")";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаПоПриоритетамВложенный", ТекстЗапросаПоПриоритетамВложенный);
	
	
	// Во всех текстах запроса, в том числе и вложенных, заменяем условные обозначения пустых значений
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПустойПодразделение", ПустойПодразделение(Истина));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПустойОбъектУчета", ПустойОбъектУчета(Истина));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПустойНаправлениеДеятельности", ПустойНаправлениеДеятельности(Истина));
	
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса создания временной таблицы "НастройкиНалогообложенияПрибыли"
// Содержит колонки:
// 
// 	* Организация             - СправочникСсылка.Организации,
// 	* Период                  - Дата - актуальные данные на дату
// 	
// 	// Значения из переданного отбора. Если отбор отсутствует, будут пустые значения
// 	* Подразделение           - СправочникСсылка.СтруктураПредприятия,
// 	* ОбъектУчета             - СправочникСсылка.Номенклатура, ПланВидовХарактеристикСсылка.СтатьиДоходов,
// 	* НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности,
// 	
// 	// Ключи подобранной настройки
// 	* КлючНастройкиПодразделение           - СправочникСсылка.СтруктураПредприятия,
// 	* КлючНастройкиОбъектУчета             - СправочникСсылка.Номенклатура, ПланВидовХарактеристикСсылка.СтатьиДоходов,
// 	* КлючНастройкиНаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности,
// 	
// 	* ВариантНалогообложенияПрибыли  - СправочникСсылка.ВариантыНалогообложенияПрибыли.
// 
// Параметры:
// 	ПараметрыПолученияНастроек - см. НовыйПараметрыПолученияНастроекНалогообложенияПрибыли
//
// Возвращаемое значение:
// 	Строка - текст запроса
//
Функция ТекстЗапроса_НастройкиНалогообложенияПрибыли(ПараметрыПолученияНастроек) Экспорт
	
	ТекстЗапросаПоПриоритетам = ТекстЗапроса_НастройкиНалогообложенияПрибылиПоПриоритетам(ПараметрыПолученияНастроек);
	
	ТекстЗапроса = ТекстЗапросаПоПриоритетам + ОбщегоНазначения.РазделительПакетаЗапросов() +
	"ВЫБРАТЬ
	|	ВсеНастройки.Организация                          КАК Организация,
	|	ВсеНастройки.Период                               КАК Период,
	|
	|	ВсеНастройки.Подразделение                        КАК Подразделение,
	|	ВсеНастройки.ОбъектУчета                          КАК ОбъектУчета,
	|	ВсеНастройки.НаправлениеДеятельности              КАК НаправлениеДеятельности,
	|
	|	ВсеНастройки.КлючНастройкиПодразделение           КАК КлючНастройкиПодразделение,
	|	ВсеНастройки.КлючНастройкиОбъектУчета             КАК КлючНастройкиОбъектУчета,
	|	ВсеНастройки.КлючНастройкиНаправлениеДеятельности КАК КлючНастройкиНаправлениеДеятельности,
	|
	|	ВсеНастройки.ВариантНалогообложенияПрибыли        КАК ВариантНалогообложенияПрибыли
	|
	|ПОМЕСТИТЬ НастройкиНалогообложенияПрибыли
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.Организация,
	|		Т.Период,
	|		Т.Подразделение,
	|		Т.ОбъектУчета,
	|		Т.НаправлениеДеятельности,
	|		МИНИМУМ(Т.ПриоритетНастройки) КАК МаксимальныйПриоритетНастройки
	|	ИЗ
	|		НастройкиНалогообложенияПрибылиПоПриоритетам КАК Т
	|
	|	СГРУППИРОВАТЬ ПО
	|		Т.Организация,
	|		Т.Период,
	|		Т.Подразделение,
	|		Т.ОбъектУчета,
	|		Т.НаправлениеДеятельности
	|		
	|	) КАК ОтборМаксимальногоПриоритетаНастройки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НастройкиНалогообложенияПрибылиПоПриоритетам КАК ВсеНастройки
	|	ПО
	|		ОтборМаксимальногоПриоритетаНастройки.Организация                       =
	|			ВсеНастройки.Организация
	|		И  ОтборМаксимальногоПриоритетаНастройки.Подразделение                  =
	|			ВсеНастройки.Подразделение
	|		И  ОтборМаксимальногоПриоритетаНастройки.ОбъектУчета                    =
	|			ВсеНастройки.ОбъектУчета
	|		И  ОтборМаксимальногоПриоритетаНастройки.НаправлениеДеятельности        =
	|			ВсеНастройки.НаправлениеДеятельности
	|		И  ОтборМаксимальногоПриоритетаНастройки.Период                         =
	|			ВсеНастройки.Период
	|		И  ОтборМаксимальногоПриоритетаНастройки.МаксимальныйПриоритетНастройки =
	|			ВсеНастройки.ПриоритетНастройки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Подразделение,
	|	ОбъектУчета,
	|	НаправлениеДеятельности,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НастройкиНалогообложенияПрибылиПоПриоритетам
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции


#Область ПроверкаНаличияНастроекПоИзмерениям

// Возвращает структуру признаков наличия настроек по разным измерениям
// 
// Параметры:
// 	Организация  - СправочникСсылка.Организации -
// 	НаДату       - Неопределено, Дата - актуальные данные на дату
//
// Возвращаемое значение:
// 	Структура - признак наличия настроек. Содержит:
// 		* ЕстьНастройкиПоПодразделениям           - Булево -
// 		* ЕстьНастройкиПоОбъектамУчета            - Булево -
// 		* ЕстьНастройкиПоНаправлениямДеятельности - Булево -
//
Функция ЕстьНастройкиПоИзмерениям(Организация, Знач НаДату = Неопределено) Экспорт
	
	Результат = ЕстьНастройкиПоИзмерениямСлужебный(Организация, Истина, Истина, Истина, НаДату);
	
	Возврат Результат;
	
КонецФункции

// Возвращает признак наличия настроек по подразделениям
// 
// Параметры:
// 	Организация  - СправочникСсылка.Организации -
// 	НаДату       - Неопределено, Дата - актуальные данные на дату
//
// Возвращаемое значение:
// 	Булево - признак наличия настроек
//
Функция ЕстьНастройкиПоПодразделениям(Организация, Знач НаДату = Неопределено) Экспорт
	
	Результат = ЕстьНастройкиПоИзмерениямСлужебный(Организация, Истина, Ложь, Ложь, НаДату);
	
	Возврат Результат.ЕстьНастройкиПоПодразделениям;
	
КонецФункции

// Возвращает признак наличия настроек по объектам учета (номенклатуре, статьям доходов)
// 
// Параметры:
// 	Организация  - СправочникСсылка.Организации -
// 	НаДату       - Неопределено, Дата - актуальные данные на дату
//
// Возвращаемое значение:
// 	Булево - признак наличия настроек
//
Функция ЕстьНастройкиПоОбъектамУчета(Организация, Знач НаДату = Неопределено) Экспорт
	
	Результат = ЕстьНастройкиПоИзмерениямСлужебный(Организация, Ложь, Истина, Ложь, НаДату);
	
	Возврат Результат.ЕстьНастройкиПоОбъектамУчета;
	
КонецФункции

// Возвращает признак наличия настроек по направлениям деятельности
// 
// Параметры:
// 	Организация  - СправочникСсылка.Организации -
// 	НаДату       - Неопределено, Дата - актуальные данные на дату
//
// Возвращаемое значение:
// 	Булево - признак наличия настроек
//
Функция ЕстьНастройкиПоНаправлениямДеятельности(Организация, Знач НаДату = Неопределено) Экспорт
	
	Результат = ЕстьНастройкиПоИзмерениямСлужебный(Организация, Ложь, Ложь, Истина, НаДату);
	
	Возврат Результат.ЕстьНастройкиПоНаправлениямДеятельности;
	
КонецФункции

#КонецОбласти

#Область ОпределениеПустыхЗначений

// Возвращает значение пустого подразделения либо в объектном виде, либо строкой для запроса
// 
// Параметры:
// 	СтроковоеЗначениеВЗапросе - Булево - Если "Истина", будет возвращена строка для запроса
//
// Возвращаемое значение:
// 	Строка, СправочникСсылка.СтруктураПредприятия -
//
Функция ПустойПодразделение(СтроковоеЗначениеВЗапросе = Ложь) Экспорт
	
	Если СтроковоеЗначениеВЗапросе = Истина Тогда
		Возврат "ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)";
	Иначе
		Возврат Справочники.СтруктураПредприятия.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

// Возвращает значение пустого подразделения либо в объектном виде, либо строкой для запроса
// 
// Параметры:
// 	СтроковоеЗначениеВЗапросе - Булево - Если "Истина", будет возвращена строка для запроса
//
// Возвращаемое значение:
// 	Строка, Неопределено -
//
Функция ПустойОбъектУчета(СтроковоеЗначениеВЗапросе = Ложь) Экспорт
	
	Если СтроковоеЗначениеВЗапросе = Истина Тогда
		Возврат "НЕОПРЕДЕЛЕНО";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Возвращает значение пустого подразделения либо в объектном виде, либо строкой для запроса
// 
// Параметры:
// 	СтроковоеЗначениеВЗапросе - Булево - Если "Истина", будет возвращена строка для запроса
//
// Возвращаемое значение:
// 	Строка, СправочникСсылка.НаправленияДеятельности -
//
Функция ПустойНаправлениеДеятельности(СтроковоеЗначениеВЗапросе = Ложь) Экспорт
	
	Если СтроковоеЗначениеВЗапросе = Истина Тогда
		Возврат "ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)";
	Иначе
		Возврат Справочники.НаправленияДеятельности.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает структуру с возможными методами отбора. У определенного метода будет значение "Истина"
// 
// Параметры:
// 	ПараметрыПолученияНастроек - см. НовыйПараметрыПолученияНастроекНалогообложенияПрибыли
//
// Возвращаемое значение:
// 	Структура - содержит:
// 		* ОтборТолькоПоОрганизации - Булево
// 		* ОтборПоВременнойТаблице  - Булево
// 		* ОтборПоЗначениям         - Булево
//
Функция НастройкиНалогообложения_ОпределитьМетодОтбора(ПараметрыПолученияНастроек)
	
	МетодОтбора = Новый Структура;
	МетодОтбора.Вставить("ОтборТолькоПоОрганизации", Ложь);
	МетодОтбора.Вставить("ОтборПоВременнойТаблице",  Ложь);
	МетодОтбора.Вставить("ОтборПоЗначениям",         Ложь);
	
	Если ЗначениеЗаполнено(ПараметрыПолученияНастроек.ОтборПоВременнойТаблице.ИмяТаблицы) Тогда
		
		МетодОтбора.ОтборПоВременнойТаблице = Истина;
	
	ИначеЕсли ЗначениеЗаполнено(ПараметрыПолученияНастроек.ОтборПоЗначениям.Подразделение)
			ИЛИ ЗначениеЗаполнено(ПараметрыПолученияНастроек.ОтборПоЗначениям.ОбъектУчета)
			ИЛИ ЗначениеЗаполнено(ПараметрыПолученияНастроек.ОтборПоЗначениям.НаправлениеДеятельности)
		Тогда
		
		МетодОтбора.ОтборПоЗначениям = Истина;
		
	Иначе
		
		МетодОтбора.ОтборТолькоПоОрганизации = Истина;
		
	КонецЕсли;
	
	Возврат МетодОтбора;
	
КонецФункции

// Возвращает текст запроса создания таблицы "ОтборНастроек"
// 
// Параметры:
// 	ПараметрыПолученияНастроек - см. НовыйПараметрыПолученияНастроекНалогообложенияПрибыли
// 	МетодОтбораНастроек - см. НастройкиНалогообложения_ОпределитьМетодОтбора
//
// Возвращаемое значение:
// 	Строка - текст запроса
//
Функция НастройкиНалогообложения_ЗапросОтборНастроек(ПараметрыПолученияНастроек, МетодОтбораНастроек)
	
	Если МетодОтбораНастроек.ОтборТолькоПоОрганизации Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(&Период КАК Дата)                                КАК Период,
		|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации)         КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)    КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО                                              КАК ОбъектУчета,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности
		|ПОМЕСТИТЬ ОтборНастроек
		|";
	
	ИначеЕсли МетодОтбораНастроек.ОтборПоЗначениям Тогда 
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(&Период КАК Дата)                                                КАК Период,
		|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации)                         КАК Организация,
		|	ВЫРАЗИТЬ(&Подразделение КАК Справочник.СтруктураПредприятия)              КАК Подразделение,
		|	&ОбъектУчета                                                              КАК ОбъектУчета,
		|	ВЫРАЗИТЬ(&НаправлениеДеятельности КАК Справочник.НаправленияДеятельности) КАК НаправлениеДеятельности
		|ПОМЕСТИТЬ ОтборНастроек
		|";
	
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	&Поле_Период                  КАК Период,
		|	&Поле_Организация             КАК Организация,
		|	&Поле_Подразделение           КАК Подразделение,
		|	&Поле_ОбъектУчета             КАК ОбъектУчета,
		|	&Поле_НаправлениеДеятельности КАК НаправлениеДеятельности
		|ПОМЕСТИТЬ ОтборНастроек
		|ИЗ
		|	ИмяТаблицы КАК ОтборНастроек
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Период
		|";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ИмяТаблицы",
									ПараметрыПолученияНастроек.ОтборПоВременнойТаблице.ИмяТаблицы);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&Поле_Организация",
									ПараметрыПолученияНастроек.ОтборПоВременнойТаблице.ИмяПоля_Организация);
		
		Если ЗначениеЗаполнено(ПараметрыПолученияНастроек.ОтборПоВременнойТаблице.ИмяПоля_Период) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&Поле_Период",
									ПараметрыПолученияНастроек.ОтборПоВременнойТаблице.ИмяПоля_Период);
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Поле_Период", "&Период");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПараметрыПолученияНастроек.ОтборПоВременнойТаблице.ИмяПоля_Подразделение) Тогда
			Поле_Подразделение = ПараметрыПолученияНастроек.ОтборПоВременнойТаблице.ИмяПоля_Подразделение;
		Иначе
			Поле_Подразделение = "&ПустойПодразделение";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПараметрыПолученияНастроек.ОтборПоВременнойТаблице.ИмяПоля_ОбъектУчета) Тогда
			Поле_ОбъектУчета = ПараметрыПолученияНастроек.ОтборПоВременнойТаблице.ИмяПоля_ОбъектУчета;
		Иначе
			Поле_ОбъектУчета = "&ПустойОбъектУчета";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПараметрыПолученияНастроек.ОтборПоВременнойТаблице.ИмяПоля_НаправлениеДеятельности) Тогда
			Поле_НаправлениеДеятельности =
				ПараметрыПолученияНастроек.ОтборПоВременнойТаблице.ИмяПоля_НаправлениеДеятельности;
		Иначе
			Поле_НаправлениеДеятельности = "&ПустойНаправлениеДеятельности";
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&Поле_Подразделение",
									Поле_Подразделение);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&Поле_ОбъектУчета",
									Поле_ОбъектУчета);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&Поле_НаправлениеДеятельности",
									Поле_НаправлениеДеятельности);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса получения настроек с указанным условием отбора приоритета
// 
// Параметры:
// 	Приоритет                   - Строка - приоритет настройки
// 	КомбинацияОтбораПриоритета  - Строка - отбор по приоритету направления, объекта учета или подразделения
// 	ПоляУсловийОтбора           - Строка - Поля отбора по временной таблице "ОтборНастроек", перечисленных через запятую
//
// Возвращаемое значение:
// 	Строка - текст запроса
//
Функция НастройкиНалогообложения_ЗапросПриоритета(Приоритет, КомбинацияОтбораПриоритета, Знач ПоляУсловийОтбора)
	
	ПоляУсловийОтбора  = СтрЗаменить(ПоляУсловийОтбора, " ", "");
	мПоляУсловийОтбора = СтрРазделить(ПоляУсловийОтбора, ",");
	
	ШаблонЗапроса =
	"ВЫБРАТЬ
	|	&Приоритет                                                    КАК ПриоритетНастройки,
	|	НастройкиНалогообложения.Организация                          КАК Организация,
	|	ОтборНастроек.Период                                          КАК Период,
	|
	|	ОтборНастроек.Подразделение                                   КАК Подразделение,
	|	ОтборНастроек.ОбъектУчета                                     КАК ОбъектУчета,
	|	ОтборНастроек.НаправлениеДеятельности                         КАК НаправлениеДеятельности,
	|
	|	НастройкиНалогообложения.Подразделение                        КАК КлючНастройкиПодразделение,
	|	НастройкиНалогообложения.ОбъектУчета                          КАК КлючНастройкиОбъектУчета,
	|	НастройкиНалогообложения.НаправлениеДеятельности              КАК КлючНастройкиНаправлениеДеятельности,
	|	НастройкиНалогообложения.Период                               КАК КлючНастройкиПериод,
	|
	|	НастройкиНалогообложения.ВариантНалогообложенияПрибыли        КАК ВариантНалогообложенияПрибыли
	|
	|ИЗ
	|	РегистрСведений.НалогообложениеПрибылиОрганизаций КАК НастройкиНалогообложения
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборНастроек КАК ОтборНастроек
	|		ПО &СоединениеСТаблицейОтбораНастроек
	|		И  НастройкиНалогообложения.Период <= ОтборНастроек.Период
	|
	|ГДЕ
	|	&КомбинацияОтбораПриоритета
	|";
	
	ШаблонСоединениеСТаблицейОтбораНастроек   = "НастройкиНалогообложения.%1 = ОтборНастроек.%1";
	мТекстовСоединениеСТаблицейОтбораНастроек = Новый Массив;
	
	Для каждого ПолеОтбора Из мПоляУсловийОтбора Цикл
		мТекстовСоединениеСТаблицейОтбораНастроек.Добавить(
			СтрШаблон(ШаблонСоединениеСТаблицейОтбораНастроек, ПолеОтбора));
	КонецЦикла;
	
	СоединениеСТаблицейОтбораНастроек = СтрСоединить(мТекстовСоединениеСТаблицейОтбораНастроек, " И ");
	
	ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&Приоритет",                         Приоритет);
	ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&КомбинацияОтбораПриоритета",        КомбинацияОтбораПриоритета);
	ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&СоединениеСТаблицейОтбораНастроек", СоединениеСТаблицейОтбораНастроек);
	
	Возврат ШаблонЗапроса;
	
КонецФункции

// Возвращает текст запроса получения настроек по направлению деятельности с указанным приоритетом
// 
// Параметры:
// 	МетодОтбораНастроек - см. НастройкиНалогообложения_ОпределитьМетодОтбора
//
// Возвращаемое значение:
// 	Строка - Описание
//
Функция НастройкиНалогообложения_ЗапросПриоритета_ПоНаправлениюДеятельности(МетодОтбораНастроек)
	
	КомбинацияОтбораПриоритета = "НЕ НастройкиНалогообложения.НаправлениеДеятельности = &ПустойНаправлениеДеятельности";
	
	мТекстовЗапроса = Новый Массив;
	
	Если МетодОтбораНастроек.ОтборТолькоПоОрганизации Тогда
		
		// Приоритет 1.1
		Приоритет                  = "11";
		ПоляУсловийОтбора          = "Организация";
		
		ТекстЗапроса = НастройкиНалогообложения_ЗапросПриоритета(
			Приоритет,
			КомбинацияОтбораПриоритета,
			ПоляУсловийОтбора);
		
		мТекстовЗапроса.Добавить(ТекстЗапроса);
	
	Иначе
		
		// Приоритет 1.1
		Приоритет                  = "11";
		ПоляУсловийОтбора          = "Организация, Подразделение, ОбъектУчета, НаправлениеДеятельности";
		КомбинацияОтбораПриоритетаВторичный = КомбинацияОтбораПриоритета
												+ " И НЕ НастройкиНалогообложения.Подразделение = &ПустойПодразделение"
												+ " И НЕ НастройкиНалогообложения.ОбъектУчета = &ПустойОбъектУчета";
		
		ТекстЗапроса = НастройкиНалогообложения_ЗапросПриоритета(
			Приоритет,
			КомбинацияОтбораПриоритетаВторичный,
			ПоляУсловийОтбора);
		
		мТекстовЗапроса.Добавить(ТекстЗапроса);
		
		// Приоритет 1.2
		Приоритет         = "12";
		ПоляУсловийОтбора = "Организация, ОбъектУчета, НаправлениеДеятельности";
		КомбинацияОтбораПриоритетаВторичный = КомбинацияОтбораПриоритета
												+ " И НастройкиНалогообложения.Подразделение = &ПустойПодразделение"
												+ " И НЕ НастройкиНалогообложения.ОбъектУчета = &ПустойОбъектУчета";
		
		ТекстЗапроса = НастройкиНалогообложения_ЗапросПриоритета(
			Приоритет,
			КомбинацияОтбораПриоритетаВторичный,
			ПоляУсловийОтбора);
		
		мТекстовЗапроса.Добавить(ТекстЗапроса);
		
		// Приоритет 1.3
		Приоритет         = "13";
		ПоляУсловийОтбора = "Организация, Подразделение, НаправлениеДеятельности";
		КомбинацияОтбораПриоритетаВторичный = КомбинацияОтбораПриоритета
												+ " И НЕ НастройкиНалогообложения.Подразделение = &ПустойПодразделение"
												+ " И НастройкиНалогообложения.ОбъектУчета = &ПустойОбъектУчета";
		
		ТекстЗапроса = НастройкиНалогообложения_ЗапросПриоритета(
			Приоритет,
			КомбинацияОтбораПриоритетаВторичный,
			ПоляУсловийОтбора);
		
		мТекстовЗапроса.Добавить(ТекстЗапроса);
		
		// Приоритет 1.4
		Приоритет        = "14";
		ПоляУсловийОтбора = "Организация, НаправлениеДеятельности";
		КомбинацияОтбораПриоритетаВторичный = КомбинацияОтбораПриоритета
												+ " И НастройкиНалогообложения.Подразделение = &ПустойПодразделение"
												+ " И НастройкиНалогообложения.ОбъектУчета = &ПустойОбъектУчета";
		
		ТекстЗапроса = НастройкиНалогообложения_ЗапросПриоритета(
			Приоритет,
			КомбинацияОтбораПриоритетаВторичный,
			ПоляУсловийОтбора);
		
		мТекстовЗапроса.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(мТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса получения настроек по объекту учета с указанным приоритетом
// 
// Параметры:
// 	МетодОтбораНастроек - см. НастройкиНалогообложения_ОпределитьМетодОтбора
//
// Возвращаемое значение:
// 	Строка - Описание
//
Функция НастройкиНалогообложения_ЗапросПриоритета_ПоОбъектуУчета(МетодОтбораНастроек)
	
	КомбинацияОтбораПриоритета = "(НЕ НастройкиНалогообложения.ОбъектУчета = &ПустойОбъектУчета
	|			И НастройкиНалогообложения.НаправлениеДеятельности = &ПустойНаправлениеДеятельности)";
	
	мТекстовЗапроса = Новый Массив;
	
	Если МетодОтбораНастроек.ОтборТолькоПоОрганизации Тогда
		
		// Приоритет 2.1
		Приоритет         = "21";
		ПоляУсловийОтбора = "Организация";
		
		ТекстЗапроса = НастройкиНалогообложения_ЗапросПриоритета(
			Приоритет,
			КомбинацияОтбораПриоритета,
			ПоляУсловийОтбора);
		
		мТекстовЗапроса.Добавить(ТекстЗапроса);
	
	Иначе
		
		// Приоритет 2.1
		Приоритет        = "21";
		ПоляУсловийОтбора = "Организация, Подразделение, ОбъектУчета";
		КомбинацияОтбораПриоритетаВторичный =
			КомбинацияОтбораПриоритета + " И НЕ НастройкиНалогообложения.Подразделение = &ПустойПодразделение";
		
		ТекстЗапроса = НастройкиНалогообложения_ЗапросПриоритета(
			Приоритет,
			КомбинацияОтбораПриоритетаВторичный,
			ПоляУсловийОтбора);
		
		мТекстовЗапроса.Добавить(ТекстЗапроса);
		
		// Приоритет 2.2
		Приоритет        = "22";
		ПоляУсловийОтбора = "Организация, ОбъектУчета";
		КомбинацияОтбораПриоритетаВторичный =
			КомбинацияОтбораПриоритета + " И НастройкиНалогообложения.Подразделение = &ПустойПодразделение";
		
		ТекстЗапроса = НастройкиНалогообложения_ЗапросПриоритета(
			Приоритет,
			КомбинацияОтбораПриоритетаВторичный,
			ПоляУсловийОтбора);
		
		мТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(мТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса получения настроек по подразделению с указанным приоритетом
// 
// Параметры:
// 	МетодОтбораНастроек - см. НастройкиНалогообложения_ОпределитьМетодОтбора
//
// Возвращаемое значение:
// 	Строка - Описание
//
Функция НастройкиНалогообложения_ЗапросПриоритета_ПоПодразделению(МетодОтбораНастроек)
	
	КомбинацияОтбораПриоритета = "(НЕ НастройкиНалогообложения.Подразделение = &ПустойПодразделение
	|			И НастройкиНалогообложения.ОбъектУчета = &ПустойОбъектУчета
	|			И НастройкиНалогообложения.НаправлениеДеятельности = &ПустойНаправлениеДеятельности)";
	
	мТекстовЗапроса = Новый Массив;
	
	Если МетодОтбораНастроек.ОтборТолькоПоОрганизации Тогда
		
		// Приоритет 3.1
		Приоритет         = "31";
		ПоляУсловийОтбора = "Организация";
		
		ТекстЗапроса = НастройкиНалогообложения_ЗапросПриоритета(
			Приоритет,
			КомбинацияОтбораПриоритета,
			ПоляУсловийОтбора);
		
		мТекстовЗапроса.Добавить(ТекстЗапроса);
	
	Иначе
		
		// Приоритет 3.1
		Приоритет        = "31";
		ПоляУсловийОтбора = "Организация, Подразделение";
		
		ТекстЗапроса = НастройкиНалогообложения_ЗапросПриоритета(
			Приоритет,
			КомбинацияОтбораПриоритета,
			ПоляУсловийОтбора);
		
		мТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(мТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Устанавливает параметры запроса получения настроек налогообложения прибыли
// 
// Параметры:
// 	Запрос                     - Запрос -
// 	ПараметрыПолученияНастроек - см. НовыйПараметрыПолученияНастроекНалогообложенияПрибыли
//
Процедура НастройкиНалогообложения_УстановитьПараметрыЗапроса(Запрос, ПараметрыПолученияНастроек)
	
	// Обязательные параметры
	Запрос.УстановитьПараметр("Период", ПараметрыПолученияНастроек.Период);
	
	// В любом случае устанавливаем параметры из отбора по значениям.
	// Если отбор настроек производится по временной таблице, данные значения не повлияют на результат
	Запрос.УстановитьПараметр("Организация",
		ПараметрыПолученияНастроек.ОтборПоЗначениям.Организация);
	Запрос.УстановитьПараметр("Подразделение",
		ПараметрыПолученияНастроек.ОтборПоЗначениям.Подразделение);
	Запрос.УстановитьПараметр("ОбъектУчета",
		ПараметрыПолученияНастроек.ОтборПоЗначениям.ОбъектУчета);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",
		ПараметрыПолученияНастроек.ОтборПоЗначениям.НаправлениеДеятельности);
	
КонецПроцедуры

// Возвращает признак наличия настроек по измерениям.
// Если в параметре необходимость получения данных измерения не установлена в истину,
// то результат по этому измерению будет не актуален.
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации -
// 	НаДату - Неопределено - Описание
//
// 	ПоПодразделениям           - Булево - необходимо проверить наличие по подразделениям
// 	ПоОбъектамУчета            - Булево - необходимо проверить наличие по объектам учета
// 	ПоНаправлениямДеятельности - Булево - необходимо проверить наличие по направлениям деятельности
//
// Возвращаемое значение:
// 	Структура - признак наличия настроек. Содержит:
// 		* ЕстьНастройкиПоПодразделениям           - Булево -
// 		* ЕстьНастройкиПоОбъектамУчета            - Булево -
// 		* ЕстьНастройкиПоНаправлениямДеятельности - Булево -
//
Функция ЕстьНастройкиПоИзмерениямСлужебный(
	Организация, ПоПодразделениям, ПоОбъектамУчета, ПоНаправлениямДеятельности, Знач НаДату = Неопределено)
	
	
	Результат = Новый Структура;
	Результат.Вставить("ЕстьНастройкиПоПодразделениям",           Ложь);
	Результат.Вставить("ЕстьНастройкиПоОбъектамУчета",            Ложь);
	Результат.Вставить("ЕстьНастройкиПоНаправлениямДеятельности", Ложь);
	
	Если Не ЗначениеЗаполнено(НаДату) Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	&ВидНастроекПоПодразделениям                           КАК ВидНастроек,
	|	НастройкиНалогообложения.ВариантНалогообложенияПрибыли КАК ВариантНалогообложенияПрибыли
	|ИЗ
	|	РегистрСведений.НалогообложениеПрибылиОрганизаций.СрезПоследних(
	|		&НаДату,
	|		&ПоПодразделениям
	|		И Организация = &Организация
	|		И Подразделение <> &ПустойПодразделение
	|	) КАК НастройкиНалогообложения
	|
	|ГДЕ
	|	НастройкиНалогообложения.ВариантНалогообложенияПрибыли <> &ПустойВариантНалогообложения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	&ВидНастроекПоОбъектамУчета,
	|	НастройкиНалогообложения.ВариантНалогообложенияПрибыли
	|ИЗ
	|	РегистрСведений.НалогообложениеПрибылиОрганизаций.СрезПоследних(
	|		&НаДату,
	|		&ПоОбъектамУчета
	|		И Организация = &Организация
	|		И ОбъектУчета <> &ПустойОбъектУчета
	|	) КАК НастройкиНалогообложения
	|
	|ГДЕ
	|	НастройкиНалогообложения.ВариантНалогообложенияПрибыли <> &ПустойВариантНалогообложения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	&ВидНастроекПоНаправлениямДеятельности,
	|	НастройкиНалогообложения.ВариантНалогообложенияПрибыли
	|ИЗ
	|	РегистрСведений.НалогообложениеПрибылиОрганизаций.СрезПоследних(
	|		&НаДату,
	|		&ПоНаправлениямДеятельности
	|		И Организация = &Организация
	|		И НаправлениеДеятельности <> &ПустойНаправлениеДеятельности
	|	) КАК НастройкиНалогообложения
	|
	|ГДЕ
	|	НастройкиНалогообложения.ВариантНалогообложенияПрибыли <> &ПустойВариантНалогообложения
	|";
	
	
	// установка входящих параметров
	
	Запрос.УстановитьПараметр("Организация",       Организация);
	Запрос.УстановитьПараметр("НаДату",            НаДату);
	
	Запрос.УстановитьПараметр("ПоПодразделениям",           ПоПодразделениям);
	Запрос.УстановитьПараметр("ПоОбъектамУчета",            ПоОбъектамУчета);
	Запрос.УстановитьПараметр("ПоНаправлениямДеятельности", ПоНаправлениямДеятельности);
	
	
	// установка пустых значений
	
	Запрос.УстановитьПараметр("ПустойПодразделение",           ПустойПодразделение());
	Запрос.УстановитьПараметр("ПустойОбъектУчета",             ПустойОбъектУчета());
	Запрос.УстановитьПараметр("ПустойНаправлениеДеятельности", ПустойНаправлениеДеятельности());
	
	Запрос.УстановитьПараметр("ПустойВариантНалогообложения",
		Справочники.ВариантыНалогообложенияПрибыли.ПустаяСсылка());
	
	
	// установка входящих параметров
	
	Запрос.УстановитьПараметр("Организация",       Организация);
	Запрос.УстановитьПараметр("НаДату",            НаДату);
	
	Запрос.УстановитьПараметр("ПоПодразделениям",           ПоПодразделениям);
	Запрос.УстановитьПараметр("ПоОбъектамУчета",            ПоОбъектамУчета);
	Запрос.УстановитьПараметр("ПоНаправлениямДеятельности", ПоНаправлениямДеятельности);
	
	
	// установка видов настроек
	Запрос.УстановитьПараметр("ВидНастроекПоПодразделениям",           1);
	Запрос.УстановитьПараметр("ВидНастроекПоОбъектамУчета",            2);
	Запрос.УстановитьПараметр("ВидНастроекПоНаправлениямДеятельности", 3);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ВидНастроек = 1 Тогда
			Результат.ЕстьНастройкиПоПодразделениям = Истина;
		ИначеЕсли Выборка.ВидНастроек = 2 Тогда
			Результат.ЕстьНастройкиПоОбъектамУчета = Истина;
		ИначеЕсли Выборка.ВидНастроек = 3 Тогда
			Результат.ЕстьНастройкиПоНаправлениямДеятельности = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли