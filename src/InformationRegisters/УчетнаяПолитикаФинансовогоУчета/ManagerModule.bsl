#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает значения по умолчанию для ресурсов регистра.
// Имена ключей структуры должны строго соответствовать именам ресурсов регистра.
// 
// Возвращаемое значение:
// 	Структура - структура значений ресурсов регистра.
Функция ЗначенияПоУмолчанию() Экспорт
	
	СтруктураЗначений = Новый Структура;
	
	СтруктураЗначений.Вставить("МетодОценкиСтоимостиТоваров", Перечисления.МетодыОценкиСтоимостиТоваров.СредняяЗаМесяц);
	СтруктураЗначений.Вставить("УчетГотовойПродукцииПоПлановойСтоимости", Ложь);
	СтруктураЗначений.Вставить("ФормироватьРезервыПоСомнительнымДолгам", Ложь);
	СтруктураЗначений.Вставить("ПериодичностьРезервовПоСомнительнымДолгам", Перечисления.Периодичность.Месяц);
	СтруктураЗначений.Вставить("ПризнаватьРасходыПоИсследованиям", Ложь);
	СтруктураЗначений.Вставить("СтатьяРасходовПоИсследованиям", Неопределено);
	СтруктураЗначений.Вставить("АналитикаРасходовПоИсследованиям", Неопределено);
	СтруктураЗначений.Вставить("ИспользоватьВыделениеДолгосрочныхАктивовОбязательств", Ложь);
	СтруктураЗначений.Вставить("ДлительностьОперационногоЦикла", 12);
	СтруктураЗначений.Вставить("УчетАрендыПоФСБУ25_2018", Истина);
	СтруктураЗначений.Вставить("УчетДисконтированнойКредиторскойЗадолженностиПоставщикам", Ложь);
	СтруктураЗначений.Вставить("СтатьяСписанияПроцентныхРасходов", Неопределено);
	СтруктураЗначений.Вставить("АналитикаСписанияПроцентныхРасходов", Неопределено);
	СтруктураЗначений.Вставить("УчетДисконтированияРезервовПредстоящихРасходов", Ложь);
	СтруктураЗначений.Вставить("СтатьяСписанияПроцентныхРасходовДисконтированияРезервов", Неопределено);
	СтруктураЗначений.Вставить("АналитикаСписанияПроцентныхРасходовДисконтированияРезервов", Неопределено);
	СтруктураЗначений.Вставить("СрокДляПримененияДисконтирования", 0);
	СтруктураЗначений.Вставить("УчетнаяПолитикаСуществует", Ложь);
	СтруктураЗначений.Вставить("МесяцНачалаФинансовогоГода", 1);
	СтруктураЗначений.Вставить("ДетализироватьМатериальныеИПостатейныеЗатратыВСебестоимостиТоваров", Ложь);
	СтруктураЗначений.Вставить("ВосстанавливатьРезервПриСписанииЗапасовНаРасходы", Истина);
	СтруктураЗначений.Вставить("ПорядокОценкиЗадолженности", Неопределено);
	СтруктураЗначений.Вставить("СтатьяПроцентныхДоходовФинансовойАренды", Неопределено);
	СтруктураЗначений.Вставить("АналитикаПроцентныхДоходовФинансовойАренды", Неопределено);
	СтруктураЗначений.Вставить("СтатьяДоходовДляУслугФинансовойАренды", Неопределено);
	СтруктураЗначений.Вставить("АналитикаДоходовДляУслугФинансовойАренды", Неопределено);
	
	//++ НЕ УТ
	СтруктураЗначений.Вставить("ПорядокУчетаВНА", Перечисления.ПорядокУчетаВНА.ПоСтандартамМУ);
	СтруктураЗначений.Вставить("ПорядокНачисленияАмортизацииОС", Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету);
	СтруктураЗначений.Вставить("ПорядокНачисленияАмортизацииНМА", Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету);
	СтруктураЗначений.Вставить("ПорядокНачисленияАмортизацииАренда", Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету);
	
	Если ПолучитьФункциональнуюОпцию("РегламентированныйУчетВНА") Тогда
		СтруктураЗначений.Вставить("ПорядокУчетаВНАРегл", Перечисления.ПорядокУчетаВНАРегл.Независимый);
		СтруктураЗначений.Вставить("ПорядокНачисленияАмортизацииОСРегл", Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету);
		СтруктураЗначений.Вставить("ПорядокНачисленияАмортизацииНМАРегл", Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету);
		СтруктураЗначений.Вставить("ПорядокНачисленияАмортизацииАрендаРегл", Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету);
	Иначе
		СтруктураЗначений.Вставить("ПорядокУчетаВНАРегл", Перечисления.ПорядокУчетаВНАРегл.СовпадаетСУпрУчетом);
		СтруктураЗначений.Вставить("ПорядокНачисленияАмортизацииОСРегл", Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету);
		СтруктураЗначений.Вставить("ПорядокНачисленияАмортизацииНМАРегл", Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету);
		СтруктураЗначений.Вставить("ПорядокНачисленияАмортизацииАрендаРегл", Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету);
	КонецЕсли;
	
	СтруктураЗначений.Вставить("ВариантПроводокПоОбесценениюВНА", Перечисления.ВариантыПроводокПоОбесценениюВНА.ДоначислятьКорректировкуОбесценения);
	//-- НЕ УТ
	
	Возврат СтруктураЗначений
	
КонецФункции

// Возвращает представление начала финансового года
// 
// Параметры:
//  МесяцНачалаФинансовогоГода - Число - Порядковый номер месяца
// 
// Возвращаемое значение:
//  Строка - Представление месяца начала финансового года
Функция ПредставлениеНачалаФинансовогоГода(МесяцНачалаФинансовогоГода) Экспорт
	
	Если МесяцНачалаФинансовогоГода = 1 Тогда
		Возврат НСтр("ru = 'Январь';
					|en = 'January'");
	ИначеЕсли МесяцНачалаФинансовогоГода = 2 Тогда
		Возврат НСтр("ru = 'Февраль';
					|en = 'February'");
	ИначеЕсли МесяцНачалаФинансовогоГода = 3 Тогда
		Возврат НСтр("ru = 'Март';
					|en = 'March'");
	ИначеЕсли МесяцНачалаФинансовогоГода = 4 Тогда
		Возврат НСтр("ru = 'Апрель';
					|en = 'April'");
	ИначеЕсли МесяцНачалаФинансовогоГода = 5 Тогда
		Возврат НСтр("ru = 'Май';
					|en = 'May'");
	ИначеЕсли МесяцНачалаФинансовогоГода = 6 Тогда
		Возврат НСтр("ru = 'Июнь';
					|en = 'June'");
	ИначеЕсли МесяцНачалаФинансовогоГода = 7 Тогда
		Возврат НСтр("ru = 'Июль';
					|en = 'July'");
	ИначеЕсли МесяцНачалаФинансовогоГода = 8 Тогда
		Возврат НСтр("ru = 'Август';
					|en = 'August'");
	ИначеЕсли МесяцНачалаФинансовогоГода = 9 Тогда
		Возврат НСтр("ru = 'Сентябрь';
					|en = 'September'");
	ИначеЕсли МесяцНачалаФинансовогоГода = 10 Тогда
		Возврат НСтр("ru = 'Октябрь';
					|en = 'October'");
	ИначеЕсли МесяцНачалаФинансовогоГода = 11 Тогда
		Возврат НСтр("ru = 'Ноябрь';
					|en = 'November'");
	ИначеЕсли МесяцНачалаФинансовогоГода = 12 Тогда
		Возврат НСтр("ru = 'Декабрь';
					|en = 'December'");
	Иначе
		Возврат НСтр("ru = 'Неопределено';
					|en = 'Undefined'");
	КонецЕсли;
	
КонецФункции

// Возращает текст запроса по данным регистра.
// 
// Возвращаемое значение:
// 	Строка - Текст запроса.
Функция ТекстЗапросаДействующиеПараметрыНалоговУчетныхПолитик() Экспорт
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР КОГДА ТаблицаСрезПоследних.Период ЕСТЬ NULL Тогда
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		ИСТИНА
	|	КОНЕЦ КАК УчетнаяПолитикаСуществует,
	|	ТаблицаСрезПоследних.Период КАК Период,
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Организация,
	|	ТаблицаСрезПоследних.МетодОценкиСтоимостиТоваров КАК МетодОценкиСтоимостиТоваров,
	|	ТаблицаСрезПоследних.ФормироватьРезервыПоСомнительнымДолгам КАК ФормироватьРезервыПоСомнительнымДолгам,
	|	ТаблицаСрезПоследних.ПериодичностьРезервовПоСомнительнымДолгам КАК ПериодичностьРезервовПоСомнительнымДолгам,
	|	ТаблицаСрезПоследних.УчетГотовойПродукцииПоПлановойСтоимости КАК УчетГотовойПродукцииПоПлановойСтоимости,
	|	ТаблицаСрезПоследних.ПризнаватьРасходыПоИсследованиям КАК ПризнаватьРасходыПоИсследованиям,
	|	ТаблицаСрезПоследних.СтатьяРасходовПоИсследованиям КАК СтатьяРасходовПоИсследованиям,
	|	ТаблицаСрезПоследних.АналитикаРасходовПоИсследованиям КАК АналитикаРасходовПоИсследованиям,
	|	ТаблицаСрезПоследних.ИспользоватьВыделениеДолгосрочныхАктивовОбязательств,
	|	ТаблицаСрезПоследних.ДлительностьОперационногоЦикла,
	|	ТаблицаСрезПоследних.ПорядокУчетаВНА КАК ПорядокУчетаВНА,
	|	ТаблицаСрезПоследних.ПорядокНачисленияАмортизацииОС КАК ПорядокНачисленияАмортизацииОС,
	|	ТаблицаСрезПоследних.ПорядокНачисленияАмортизацииНМА КАК ПорядокНачисленияАмортизацииНМА,
	|	ТаблицаСрезПоследних.ПорядокНачисленияАмортизацииАренда КАК ПорядокНачисленияАмортизацииАренда,
	|	ТаблицаСрезПоследних.ПорядокУчетаВНАРегл КАК ПорядокУчетаВНАРегл,
	|	ТаблицаСрезПоследних.ПорядокНачисленияАмортизацииОСРегл КАК ПорядокНачисленияАмортизацииОСРегл,
	|	ТаблицаСрезПоследних.ПорядокНачисленияАмортизацииНМАРегл КАК ПорядокНачисленияАмортизацииНМАРегл,
	|	ТаблицаСрезПоследних.ПорядокНачисленияАмортизацииАрендаРегл КАК ПорядокНачисленияАмортизацииАрендаРегл,
	|	ТаблицаСрезПоследних.УчетАрендыПоФСБУ25_2018 КАК УчетАрендыПоФСБУ25_2018,
	|	ТаблицаСрезПоследних.ВариантПроводокПоОбесценениюВНА КАК ВариантПроводокПоОбесценениюВНА,
	|	ТаблицаСрезПоследних.МесяцНачалаФинансовогоГода КАК МесяцНачалаФинансовогоГода,
	|	ТаблицаСрезПоследних.УчетДисконтированнойКредиторскойЗадолженностиПоставщикам КАК УчетДисконтированнойКредиторскойЗадолженностиПоставщикам,
	|	ТаблицаСрезПоследних.СтатьяСписанияПроцентныхРасходов КАК СтатьяСписанияПроцентныхРасходов,
	|	ТаблицаСрезПоследних.АналитикаСписанияПроцентныхРасходов КАК АналитикаСписанияПроцентныхРасходов,
	|	ТаблицаСрезПоследних.СтатьяСписанияПроцентныхРасходовДисконтированияРезервов КАК СтатьяСписанияПроцентныхРасходовДисконтированияРезервов,
	|	ТаблицаСрезПоследних.АналитикаСписанияПроцентныхРасходовДисконтированияРезервов КАК АналитикаСписанияПроцентныхРасходовДисконтированияРезервов,
	|	ТаблицаСрезПоследних.УчетДисконтированияРезервовПредстоящихРасходов КАК УчетДисконтированияРезервовПредстоящихРасходов,
	|	ТаблицаСрезПоследних.СрокДляПримененияДисконтирования КАК СрокДляПримененияДисконтирования,
	|	ТаблицаСрезПоследних.ДетализироватьМатериальныеИПостатейныеЗатратыВСебестоимостиТоваров,
	|	ТаблицаСрезПоследних.ВосстанавливатьРезервПриСписанииЗапасовНаРасходы,
	|	ТаблицаСрезПоследних.ПорядокОценкиЗадолженности КАК ПорядокОценкиЗадолженности,
	|	ТаблицаСрезПоследних.СтатьяПроцентныхДоходовФинансовойАренды,
	|	ТаблицаСрезПоследних.АналитикаПроцентныхДоходовФинансовойАренды,
	|	ТаблицаСрезПоследних.СтатьяДоходовДляУслугФинансовойАренды,
	|	ТаблицаСрезПоследних.АналитикаДоходовДляУслугФинансовойАренды
	|ИЗ
	|	ВтГоловныеОрганизации КАК ГоловныеОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(&Период, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК ТаблицаСрезПоследних
	|		ПО ГоловныеОрганизации.Организация = ТаблицаСрезПоследних.Организация
	|";
	Возврат ТекстЗапроса
	
КонецФункции

// Формирует текстовое описание установленных параметров.
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации - ссылка на организацию.
// 	ДатаДействия - Дата - период действия настроек.
// 	ДействующиеНастройки - Структура - действующие параметры учетной политики.
// Возвращаемое значение:
// 	Строка - Описание действующих параметров строкой.
Функция ОписаниеДействующихПараметров(Организация, ДатаДействия = Неопределено, ДействующиеНастройки = Неопределено) Экспорт
	
	Если ДействующиеНастройки = Неопределено Тогда
		ДействующиеНастройки = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
			"УчетнаяПолитикаФинансовогоУчета",
			Организация,
			ДатаДействия,
			Ложь);
	КонецЕсли;
	СтрокаШаблон = "%1: %2." + Символы.ПС;
	СтрокаШаблонБулево = "%1." + Символы.ПС;
	Если НЕ ЗначениеЗаполнено(ДействующиеНастройки) Тогда
		СтрокаОписанияНастроек = НСтр("ru = 'Не заданы параметры.';
										|en = 'Parameters are not specified.'");
		Возврат СтрокаОписанияНастроек;
	КонецЕсли;
	
	СтрокаОписанияНастроек = СтрШаблон(СтрокаШаблон, 
		НСтр("ru = 'Начало финансового года';
			|en = 'Fiscal year start'"),
		ПредставлениеНачалаФинансовогоГода(ДействующиеНастройки.МесяцНачалаФинансовогоГода));
	
	СтрокаОписанияНастроек = СтрокаОписанияНастроек 
		+ СтрШаблон(СтрокаШаблон, 
			НСтр("ru = 'Метод оценки стоимости товаров';
				|en = 'Inventory valuation method'"),
			ДействующиеНастройки.МетодОценкиСтоимостиТоваров);
	
	Если ДействующиеНастройки.УчетГотовойПродукцииПоПлановойСтоимости Тогда
		СтрокаОписанияНастроек = СтрокаОписанияНастроек
			+ СтрШаблон(СтрокаШаблонБулево,
				НСтр("ru = 'Готовая продукция учитывается по плановой стоимости';
					|en = 'Finished products are accounted for at standard cost'"));
	КонецЕсли;
	
	//++ НЕ УТ
	
	Если ПолучитьФункциональнуюОпцию("ФормироватьРезервыПодОбесценениеЗапасов") Тогда
		Если ДействующиеНастройки.ВосстанавливатьРезервПриСписанииЗапасовНаРасходы Тогда
			СтрокаОписанияНастроек = СтрокаОписанияНастроек
				+ СтрШаблон(СтрокаШаблонБулево,
					НСтр("ru = 'При списании запасов на расходы резервы восстанавливаются (уменьшают себестоимость продаж)';
						|en = 'When writing off inventory to expenses, provisions are reversed (reduce the cost of goods sold)'"));
		Иначе
			СтрокаОписанияНастроек = СтрокаОписанияНастроек
				+ СтрШаблон(СтрокаШаблонБулево,
					НСтр("ru = 'При списании запасов на расходы сумма расходов уменьшается на сумму резерва';
						|en = 'When writing off inventory to expenses, the expense amount is reduced by the provision amount'"));
		КонецЕсли;
	КонецЕсли;
	
	//-- НЕ УТ
	
	Если ДействующиеНастройки.ИспользоватьВыделениеДолгосрочныхАктивовОбязательств Тогда
		
		СтрокаОписанияНастроек = СтрокаОписанияНастроек
			+ СтрШаблон(СтрокаШаблонБулево,
				НСтр("ru = 'Используется выделение долгосрочных активов/обязательств';
					|en = 'Allocation of long-term assets/liabilities is used'"));
		
		СтрокаОписанияНастроек = СтрокаОписанияНастроек
			+ СтрШаблон(СтрокаШаблон,
				НСтр("ru = 'Длительность операционного цикла в месяцах';
					|en = 'Operating cycle duration in months'"),
				ДействующиеНастройки.ДлительностьОперационногоЦикла);

	КонецЕсли;
	
	//++ НЕ УТ
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		
		РегламентированныйУчетВНА = ПолучитьФункциональнуюОпцию("РегламентированныйУчетВНА");
				
		Если РегламентированныйУчетВНА Тогда
			
			Если ДействующиеНастройки.ПорядокУчетаВНА = Перечисления.ПорядокУчетаВНА.ПоСтандартамМУ Тогда
				СтрокаОписанияНастроек = СтрокаОписанияНастроек
					+ СтрШаблон(СтрокаШаблонБулево,
						НСтр("ru = 'Учет ОС и НМА в управленческом учете ведется по стандартам международного учета';
							|en = 'Fixed and intangible assets are accounted in management accounting as per international accounting standards'"));
			Иначе
				СтрокаОписанияНастроек = СтрокаОписанияНастроек
					+ СтрШаблон(СтрокаШаблонБулево,
						НСтр("ru = 'Учет ОС и НМА в управленческом учете ведется по ПБУ 6/01 и 14/2007';
							|en = 'Fixed and intangible assets are accounted in management accounting as per PBU 6/01 and 14/2017'"));
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДействующиеНастройки.ПорядокНачисленияАмортизацииОС = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца
			И ДействующиеНастройки.ПорядокНачисленияАмортизацииНМА = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца
			И ДействующиеНастройки.ПорядокНачисленияАмортизацииАренда = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца Тогда
			
			СтрокаОписанияНастроек = СтрокаОписанияНастроек
				+ СтрШаблон(СтрокаШаблонБулево,
					НСтр("ru = 'Амортизация ОС и НМА в управленческом учете начисляется с первого числа месяца, следующего за месяцем принятия к учету';
						|en = 'Fixed asset depreciation and intangible asset amortization in management accounting is charged from the first day of the month following the month of recognition'"));
			
		ИначеЕсли ДействующиеНастройки.ПорядокНачисленияАмортизацииОС = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету
			И ДействующиеНастройки.ПорядокНачисленияАмортизацииНМА = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету
			И ДействующиеНастройки.ПорядокНачисленияАмортизацииАренда = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету Тогда
			
			СтрокаОписанияНастроек = СтрокаОписанияНастроек
				+ СтрШаблон(СтрокаШаблонБулево,
					НСтр("ru = 'Амортизация ОС и НМА в управленческом учете начисляется с даты принятия к учету';
						|en = 'Fixed asset depreciation and intangible asset amortization in management accounting is charged from the date of recognition'"));
					
		Иначе
			
			Если ДействующиеНастройки.ПорядокНачисленияАмортизацииОС = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца Тогда
			
				СтрокаОписанияНастроек = СтрокаОписанияНастроек
					+ СтрШаблон(СтрокаШаблонБулево,
						НСтр("ru = 'Амортизация собственных ОС в управленческом учете начисляется с первого числа месяца, следующего за месяцем принятия к учету';
							|en = 'Own fixed asset depreciation in management accounting is charged from the first day of the month following the month of recognition'"));
			Иначе
				
				СтрокаОписанияНастроек = СтрокаОписанияНастроек
					+ СтрШаблон(СтрокаШаблонБулево,
						НСтр("ru = 'Амортизация собственных ОС в управленческом учете начисляется с даты принятия к учету';
							|en = 'Own fixed asset depreciation in management accounting is charged from the date of recognition'"));
						
			КонецЕсли;
					
			Если ДействующиеНастройки.ПорядокНачисленияАмортизацииАренда = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца Тогда
			
				СтрокаОписанияНастроек = СтрокаОписанияНастроек
					+ СтрШаблон(СтрокаШаблонБулево,
						НСтр("ru = 'Амортизация арендованных ОС в управленческом учете начисляется с первого числа месяца, следующего за месяцем принятия к учету';
							|en = 'Leased fixed asset depreciation in management accounting is charged from the first day of the month following the month of recognition'"));
			Иначе
				
				СтрокаОписанияНастроек = СтрокаОписанияНастроек
					+ СтрШаблон(СтрокаШаблонБулево,
						НСтр("ru = 'Амортизация арендованных ОС в управленческом учете начисляется с даты принятия к учету';
							|en = 'Leased fixed asset depreciation in management accounting is charged from the date of recognition'"));
						
			КонецЕсли;
					
			Если ДействующиеНастройки.ПорядокНачисленияАмортизацииНМА = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца Тогда
			
				СтрокаОписанияНастроек = СтрокаОписанияНастроек
					+ СтрШаблон(СтрокаШаблонБулево,
						НСтр("ru = 'Амортизация НМА в управленческом учете начисляется с первого числа месяца, следующего за месяцем принятия к учету';
							|en = 'Intangible asset amortization in management accounting is charged from the first day of the month following the month of recognition'"));
			Иначе
				
				СтрокаОписанияНастроек = СтрокаОписанияНастроек
					+ СтрШаблон(СтрокаШаблонБулево,
						НСтр("ru = 'Амортизация НМА в управленческом учете начисляется с даты принятия к учету';
							|en = 'Intangible asset amortization in management accounting is charged from the date of recognition'"));
						
			КонецЕсли;
					
		КонецЕсли;
		
		Если НЕ РегламентированныйУчетВНА Тогда
			
			Если ДействующиеНастройки.ПорядокУчетаВНАРегл = Перечисления.ПорядокУчетаВНАРегл.Независимый Тогда
			
				СтрокаОписанияНастроек = СтрокаОписанияНастроек
					+ СтрШаблон(СтрокаШаблонБулево,
						НСтр("ru = 'Учет ОС и НМА в регламентированном учете ведется независимо от управленческого учета';
							|en = 'Accounting for fixed assets and intangible assets in local accounting is carried out independently from management accounting'"));
						
				Если ДействующиеНастройки.ПорядокНачисленияАмортизацииОСРегл = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца
					И ДействующиеНастройки.ПорядокНачисленияАмортизацииНМАРегл = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца
					И ДействующиеНастройки.ПорядокНачисленияАмортизацииАрендаРегл = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца Тогда
					
					СтрокаОписанияНастроек = СтрокаОписанияНастроек
						+ СтрШаблон(СтрокаШаблонБулево,
							НСтр("ru = 'Амортизация ОС и НМА в регламентированном учете начисляется с первого числа месяца, следующего за месяцем принятия к учету';
								|en = 'Fixed asset depreciation and intangible asset amortization in local accounting is charged from the first day of the month following the month of recognition'"));
					
				ИначеЕсли ДействующиеНастройки.ПорядокНачисленияАмортизацииОСРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету
					И ДействующиеНастройки.ПорядокНачисленияАмортизацииНМАРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету
					И ДействующиеНастройки.ПорядокНачисленияАмортизацииАрендаРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету Тогда
					
					СтрокаОписанияНастроек = СтрокаОписанияНастроек
						+ СтрШаблон(СтрокаШаблонБулево,
							НСтр("ru = 'Амортизация ОС и НМА в регламентированном учете начисляется с даты принятия к учету';
								|en = 'Fixed asset depreciation and intangible asset amortization in local accounting is charged from the date of recognition'"));
							
				Иначе
					
					Если ДействующиеНастройки.ПорядокНачисленияАмортизацииОСРегл = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца Тогда
					
						СтрокаОписанияНастроек = СтрокаОписанияНастроек
							+ СтрШаблон(СтрокаШаблонБулево,
								НСтр("ru = 'Амортизация собственных ОС в регламентированном учете начисляется с первого числа месяца, следующего за месяцем принятия к учету';
									|en = 'Own fixed asset depreciation in local accounting is charged from the first day of the month following the month of recognition'"));
					Иначе
						
						СтрокаОписанияНастроек = СтрокаОписанияНастроек
							+ СтрШаблон(СтрокаШаблонБулево,
								НСтр("ru = 'Амортизация собственных ОС в регламентированном учете начисляется с даты принятия к учету';
									|en = 'Own fixed asset depreciation in local accounting is charged from the date of recognition'"));
								
					КонецЕсли;
							
					Если ДействующиеНастройки.ПорядокНачисленияАмортизацииАрендаРегл = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца Тогда
					
						СтрокаОписанияНастроек = СтрокаОписанияНастроек
							+ СтрШаблон(СтрокаШаблонБулево,
								НСтр("ru = 'Амортизация арендованных ОС в регламентированном учете начисляется с первого числа месяца, следующего за месяцем принятия к учету';
									|en = 'Leased fixed asset depreciation in local accounting is charged from the first day of the month following the month of recognition'"));
					Иначе
						
						СтрокаОписанияНастроек = СтрокаОписанияНастроек
							+ СтрШаблон(СтрокаШаблонБулево,
								НСтр("ru = 'Амортизация арендованных ОС в регламентированном учете начисляется с даты принятия к учету';
									|en = 'Leased fixed asset depreciation in local accounting is charged from the date of recognition'"));
								
					КонецЕсли;
							
					Если ДействующиеНастройки.ПорядокНачисленияАмортизацииНМАРегл = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца Тогда
					
						СтрокаОписанияНастроек = СтрокаОписанияНастроек
							+ СтрШаблон(СтрокаШаблонБулево,
								НСтр("ru = 'Амортизация НМА в регламентированном учете начисляется с первого числа месяца, следующего за месяцем принятия к учету';
									|en = 'Intangible asset amortization in local accounting is charged from the first day of the month following the month of recognition'"));
					Иначе
						
						СтрокаОписанияНастроек = СтрокаОписанияНастроек
							+ СтрШаблон(СтрокаШаблонБулево,
								НСтр("ru = 'Амортизация НМА в регламентированном учете начисляется с даты принятия к учету';
									|en = 'Intangible asset amortization in local accounting is charged from the date of recognition'"));
								
					КонецЕсли;
							
				КонецЕсли;
				
			Иначе
				
				СтрокаОписанияНастроек = СтрокаОписанияНастроек
					+ СтрШаблон(СтрокаШаблонБулево,
						НСтр("ru = 'Учет ОС и НМА в регламентированном учете совпадает с управленческим учетом';
							|en = 'Accounting of fixed assets and intangible assets in local accounting matches the management accounting'"));
						
			КонецЕсли;
			
		КонецЕсли;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьОбесценениеВНА") Тогда
			Если ДействующиеНастройки.ВариантПроводокПоОбесценениюВНА
				= Перечисления.ВариантыПроводокПоОбесценениюВНА.ДоначислятьКорректировкуОбесценения Тогда
				СтрокаОписанияНастроек = СтрокаОписанияНастроек + СтрШаблон(СтрокаШаблонБулево, НСтр(
					"ru = 'Амортизация ОС и НМА с обесценением начисляется на стоимость с учетом обесценения. Корректировка обесценения доначисляется';
					|en = 'Fixed and intangible assets depreciation with impairment is accumulated to the cost including impairment. The impairment adjustment is accrued additionally'"));
			Иначе
				СтрокаОписанияНастроек = СтрокаОписанияНастроек + СтрШаблон(СтрокаШаблонБулево, НСтр(
					"ru = 'Амортизация ОС и НМА с обесценением начисляется на полную стоимость. Корректировка обесценения сторнируется';
					|en = 'Fixed and intangible assets depreciation with impairment is accumulated to the full cost. The impairment adjustment is reversed'"));
			КонецЕсли;
		КонецЕсли;
		
		Если ДействующиеНастройки.ПризнаватьРасходыПоИсследованиям Тогда
			
			СтрокаОписанияНастроек = СтрокаОписанияНастроек
				+ СтрШаблон(СтрокаШаблонБулево,
					НСтр("ru = 'Расходы по исследованиям учитываются в текущем периоде';
						|en = 'Research expenses are recognized in the current period'"));
			
			СтрокаОписанияНастроек = СтрокаОписанияНастроек
				+ СтрШаблон(СтрокаШаблон,
					НСтр("ru = 'Статья расходов по исследованиям';
						|en = 'Research expense item'"),
					ДействующиеНастройки.СтатьяРасходовПоИсследованиям);
			
	
			СтрокаОписанияНастроек = СтрокаОписанияНастроек
				+ СтрШаблон(СтрокаШаблон,
					НСтр("ru = 'Аналитика расходов по исследованиям';
						|en = 'Research expense dimension'"),
					ДействующиеНастройки.АналитикаРасходовПоИсследованиям);
	
		КонецЕсли;
		
	КонецЕсли;
	
	//-- НЕ УТ
	
	Если ДействующиеНастройки.УчетДисконтированнойКредиторскойЗадолженностиПоставщикам 
		И ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
			
			СтрокаОписанияНастроек = СтрокаОписанияНастроек
				+ СтрШаблон(СтрокаШаблонБулево,
					НСтр("ru = 'Ведется учет дисконтированной кредиторской задолженности поставщикам';
						|en = 'Accounting for discounted accounts payable to vendors is kept'"));
			
			СтрокаОписанияНастроек = СтрокаОписанияНастроек
				+ СтрШаблон(СтрокаШаблон,
					НСтр("ru = 'Статья списания процентных расходов дисконтирования';
						|en = 'Write-off item of discounting interest expenses'"),
					ДействующиеНастройки.СтатьяСписанияПроцентныхРасходов);
			
 			
			СтрокаОписанияНастроек = СтрокаОписанияНастроек
				+ СтрШаблон(СтрокаШаблон,
					НСтр("ru = 'Аналитика списания процентных расходов дисконтирования';
						|en = 'Write-off dimension of discounting interest expenses'"),
					ДействующиеНастройки.АналитикаСписанияПроцентныхРасходов);
			
	КонецЕсли;
	
	Если ДействующиеНастройки.ФормироватьРезервыПоСомнительнымДолгам Тогда
		
		СтрокаОписанияНастроек = СтрокаОписанияНастроек
			+ СтрШаблон(СтрокаШаблонБулево,
				НСтр("ru = 'Формируются резервы по сомнительным долгам';
					|en = 'Loss allowance is generated'"));
		
		СтрокаОписанияНастроек = СтрокаОписанияНастроек
			+ СтрШаблон(СтрокаШаблон,
				НСтр("ru = 'Периодичность резервов по сомнительным долгам';
					|en = 'Frequency of loss allowance'"),
				ДействующиеНастройки.ПериодичностьРезервовПоСомнительнымДолгам);
		
	КонецЕсли;
	
	ОписаниеДействующихПараметровЛокализация(СтрокаОписанияНастроек, Организация, ДатаДействия, ДействующиеНастройки);
	
	Возврат СтрокаОписанияНастроек
	
КонецФункции

// Возвращает актуальные значения порядка оценки задолженности по организации на дату.
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации - ссылка на организацию.
// 	Период - Дата - период действия настроек.
// 
// Возвращаемое значение:
//  ТаблицаЗначений, Неопределено - таблица оценки задолженности.
Функция ПорядокОценкиЗадолженности(Организация, Период) Экспорт
	
	ДействующиеНастройки = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
		"УчетнаяПолитикаФинансовогоУчета", Организация, Период, Истина);
	
	Если ДействующиеНастройки <> Неопределено
		И ДействующиеНастройки.ПорядокОценкиЗадолженности <> Неопределено Тогда
			ХранилищеПорядокОценкиЗадолженности = ДействующиеНастройки.ПорядокОценкиЗадолженности; //ХранилищеЗначения
		Возврат ХранилищеПорядокОценкиЗадолженности.Получить();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

// Возвращает параметры выбора статей и аналитик.
// 
// Параметры:
//  ПризнаватьРасходыПоИсследованиям - Булево.
//  УчетДисконтированнойКредиторскойЗадолженностиПоставщикам - Булево.
//  УчетРезервовПредстоящихРасходов - Булево.
//  УчетФинАренды - Булево.
//  
// Возвращаемое значение:
//  Массив из см. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики
//
Функция ПараметрыВыбораСтатейИАналитик(ПризнаватьРасходыПоИсследованиям, УчетДисконтированнойКредиторскойЗадолженностиПоставщикам,
		УчетРезервовПредстоящихРасходов, УчетФинАренды) Экспорт
	
	МассивПараметров = Новый Массив;
	
	#Область СтатьяРасходовПоИсследованиям
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Запись";
	ПараметрыВыбора.Статья      = "СтатьяРасходовПоИсследованиям";
	
	ПараметрыВыбора.ДоступностьПоОперации = ПризнаватьРасходыПоИсследованиям = Истина;
	ПараметрыВыбора.СкрыватьСтатьюНедоступнуюПоОперации = Ложь;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовПоИсследованиям";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовПоИсследованиям");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовПоИсследованиям");
	
	МассивПараметров.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	#Область СтатьяСписанияПроцентныхРасходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Запись";
	ПараметрыВыбора.Статья      = "СтатьяСписанияПроцентныхРасходов";
	
	ПараметрыВыбора.ДоступностьПоОперации = 
		УчетДисконтированнойКредиторскойЗадолженностиПоставщикам 
		И ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов");
	ПараметрыВыбора.СкрыватьСтатьюНедоступнуюПоОперации = Ложь;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаСписанияПроцентныхРасходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяСписанияПроцентныхРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаСписанияПроцентныхРасходов");
	
	МассивПараметров.Добавить(ПараметрыВыбора);
	#КонецОбласти 
	
	//++ НЕ УТ
	#Область СтатьяСписанияПроцентныхРасходовДисконтированияРезервов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Запись";
	ПараметрыВыбора.Статья      = "СтатьяСписанияПроцентныхРасходовДисконтированияРезервов";
	
	ПараметрыВыбора.ДоступностьПоОперации = УчетРезервовПредстоящихРасходов;
	ПараметрыВыбора.СкрыватьСтатьюНедоступнуюПоОперации = Ложь;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаСписанияПроцентныхРасходовДисконтированияРезервов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ЗаписьСтатьяСписанияПроцентныхРасходовДисконтированияРезервов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("ЗаписьАналитикаСписанияПроцентныхРасходовДисконтированияРезервов");
	
	МассивПараметров.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	#Область СтатьяПроцентныхДоходовФинансовойАренды
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Запись";
	ПараметрыВыбора.Статья      = "СтатьяПроцентныхДоходовФинансовойАренды";
	
	ПараметрыВыбора.ДоступностьПоОперации = УчетФинАренды;
	ПараметрыВыбора.СкрыватьСтатьюНедоступнуюПоОперации = Ложь;
	
	ПараметрыВыбора.ВыборСтатьиДоходов = Истина;
	ПараметрыВыбора.АналитикаДоходов = "АналитикаПроцентныхДоходовФинансовойАренды";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ЗаписьСтатьяПроцентныхДоходовФинансовойАренды");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("ЗаписьАналитикаПроцентныхДоходовФинансовойАренды");
	
	МассивПараметров.Добавить(ПараметрыВыбора);
	#КонецОбласти 
	
	#Область СтатьяДоходовДляУслугФинансовойАренды
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Запись";
	ПараметрыВыбора.Статья      = "СтатьяДоходовДляУслугФинансовойАренды";
	
	ПараметрыВыбора.ДоступностьПоОперации = УчетФинАренды;
	ПараметрыВыбора.СкрыватьСтатьюНедоступнуюПоОперации = Ложь;
	
	ПараметрыВыбора.ВыборСтатьиДоходов = Истина;
	ПараметрыВыбора.АналитикаДоходов = "АналитикаДоходовДляУслугФинансовойАренды";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ЗаписьСтатьяДоходовДляУслугФинансовойАренды");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("ЗаписьАналитикаДоходовДляУслугФинансовойАренды");
	
	МассивПараметров.Добавить(ПараметрыВыбора);
	#КонецОбласти 
	//-- НЕ УТ
	
	Возврат МассивПараметров;
	
КонецФункции

Процедура ОписаниеДействующихПараметровЛокализация(СтрокаОписанияНастроек, Организация, ДатаДействия, ДействующиеНастройки)
	
	//++ Локализация
	
	СтрокаШаблон = "%1: %2." + Символы.ПС;
	СтрокаШаблонБулево = "%1." + Символы.ПС;

	//++ НЕ УТ
	
	Если ДействующиеНастройки.УчетАрендыПоФСБУ25_2018 Тогда
		
		СтрокаОписанияНастроек = СтрокаОписанияНастроек
			+ СтрШаблон(СтрокаШаблонБулево,
				НСтр("ru = 'Учет аренды ведется по ФСБУ 25/2018';
					|en = 'Lease accounting is carried out according to FSBU 25/2018'"));
	КонецЕсли;

	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
