
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Параметры.Свойство("ВедущийОбъект", ОбъектВладелец);
	Если Не ЗначениеЗаполнено(ОбъектВладелец) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ОбъектВладелец) = Тип("СправочникСсылка.Организации") Тогда
		ОрганизацияВладельцаРегистрацииВНалоговомОргане = ОбъектВладелец;
	Иначе
		ОрганизацияВладельцаРегистрацииВНалоговомОргане = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектВладелец, "Владелец");
	КонецЕсли;
	
	ВладелецРегистрацииВНалоговомОргане = ЗарплатаКадры.ГоловнаяОрганизация(ОрганизацияВладельцаРегистрацииВНалоговомОргане);
	
	// Если объект еще не заблокирован для изменений и есть права на изменение набора
	// попытаемся установить блокировку.
	Если НЕ ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ИсторияРегистрацийВНалоговомОргане) Тогда
		
		ТолькоПросмотр = Истина;
		
	КонецЕсли; 
	
	Если ТолькоПросмотр Тогда
		
		Элементы.НаборЗаписей.ТолькоПросмотр = Истина;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, 
			"ФормаКомандаОК",
			"Доступность",
			Ложь);
			
		Элементы.ФормаКомандаОтмена.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;
	
	Для Каждого ЗаписьНабора Из Параметры.МассивЗаписей Цикл
		
		Если НЕ ЗначениеЗаполнено(ЗаписьНабора.РегистрацияВНалоговомОргане) Тогда
			Продолжить;
		КонецЕсли; 
		
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), ЗаписьНабора);
		
	КонецЦикла;
	
	НаборЗаписей.Сортировать("Период");
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(НаборЗаписей, "Период", "ПериодСтрокой");
	
	ДатаОтсчетаПериодическихСведений = ЗарплатаКадрыКлиентСервер.ДатаОтсчетаПериодическихСведенийСПериодомМесяц();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененаРегистрацияВНалоговомОргане" И Параметр.Владелец = ВладелецРегистрацииВНалоговомОргане Тогда
		
		Если ЗначениеЗаполнено(Параметр.Ссылка) Тогда
			Элементы.НаборЗаписей.ТекущиеДанные.РегистрацияВНалоговомОргане = Параметр.Ссылка;
		ИначеЕсли НЕ ЗначениеЗаполнено(Элементы.НаборЗаписей.ТекущиеДанные.РегистрацияВНалоговомОргане) Тогда
			Элементы.НаборЗаписей.ТекущаяСтрока = Неопределено;
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыНаборЗаписей

&НаКлиенте
Процедура НаборЗаписейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя <> "НаборЗаписейПериодСтрокой" Тогда
		
		Если Элемент.ТекущиеДанные <> Неопределено
			И ЗначениеЗаполнено(Элемент.ТекущиеДанные.РегистрацияВНалоговомОргане) Тогда
			
			ПараметрыОткрытия = Новый Структура("Ключ", Элемент.ТекущиеДанные.РегистрацияВНалоговомОргане);
			ОткрытьФорму("Справочник.РегистрацииВНалоговомОргане.ФормаОбъекта", ПараметрыОткрытия, ЭтаФорма);
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
	
		ПараметрыОткрытия = Новый Структура;
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			
			ЗначенияЗаполнения = Новый Структура;
			ЗначенияЗаполнения.Вставить("Владелец", ВладелецРегистрацииВНалоговомОргане);
			
			Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.РегистрацияВНалоговомОргане) Тогда
				
				ДанныеТекущейРегистрации = ДанныеРегистрации(Элемент.ТекущиеДанные.РегистрацияВНалоговомОргане);
				Для каждого ЭлементКоллекции Из ДанныеТекущейРегистрации Цикл
					ЗначенияЗаполнения.Вставить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
				КонецЦикла;
					
			КонецЕсли;
			
			ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
			
			Элемент.ТекущиеДанные.СтруктурнаяЕдиница = ОбъектВладелец;
			Элемент.ТекущиеДанные.РегистрацияВНалоговомОргане = ПредопределенноеЗначение("Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка");
			Элемент.ТекущиеДанные.Период = ПериодНовойЗаписи();
			
			ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(Элемент.ТекущиеДанные, "Период", "ПериодСтрокой");
			
		КонецЕсли;
		
		ОткрытьФорму("Справочник.РегистрацииВНалоговомОргане.ФормаОбъекта", ПараметрыОткрытия, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		
		Если НЕ ОтменаРедактирования Тогда
		
			Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Период) Тогда
				
				СообщениеОбОшибке = НСтр("ru = 'Необходимо указать дату сведений';
										|en = 'Enter information date'");
				ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,,"НаборЗаписей.Период", , Отказ);
				
			Иначе
				
				НайденныеСтроки = НаборЗаписей.НайтиСтроки(Новый Структура("Период", Элемент.ТекущиеДанные.Период));
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					
					Если НайденнаяСтрока <> Элемент.ТекущиеДанные Тогда
						СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанной датой сведений';
												|en = 'The record with the specified information date already exists'");
						ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,,"НаборЗаписей.Период", , Отказ);
						Прервать;
					КонецЕсли; 
					
				КонецЦикла;
				
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		
		Если Элемент.ТекущиеДанные <> Неопределено
			И НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.РегистрацияВНалоговомОргане) Тогда
			
			НаборЗаписей.Удалить(Элемент.ТекущиеДанные);
			
		КонецЕсли; 
		
	Иначе
		РедактированиеПериодическихСведенийКлиент.УпорядочитьНаборЗаписейВФорме(ЭтаФорма);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПериодСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(Элементы.НаборЗаписей.ТекущиеДанные, "Период", "ПериодСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, Элементы.НаборЗаписей.ТекущиеДанные, "Период", "ПериодСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПериодСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(Элементы.НаборЗаписей.ТекущиеДанные, "Период", "ПериодСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПериодСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПериодСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьПоОрганизации(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	Отборы = Новый Структура("Владелец", ВладелецРегистрацииВНалоговомОргане);
	ПараметрыОткрытия.Вставить("Отбор", Отборы);
	
	Оповещение = Новый ОписаниеОповещения("ДобавитьПоОрганизацииЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.РегистрацииВНалоговомОргане.ФормаВыбора", ПараметрыОткрытия, , Истина, , , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	РедактированиеПериодическихСведенийКлиент.ОповеститьОЗавершении(ЭтаФорма, "ИсторияРегистрацийВНалоговомОргане", ОбъектВладелец);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
 
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("НаборЗаписейПериодСтрокой");
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НаборЗаписей.Период");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("ДатаОтсчетаПериодическихСведений");
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", "");
	
КонецПроцедуры
 
&НаСервереБезКонтекста
Функция ДанныеРегистрации(РегистрацияВНалоговомОргане)
	
	ДанныеРегистрации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегистрацияВНалоговомОргане,
		"Код,Наименование,НаименованиеИФНС,КодПоОКАТО,КодПоОКТМО,НаименованиеОбособленногоПодразделения,Представитель,УполномоченноеЛицоПредставителя,ДокументПредставителя,Доверенность");
				
	Возврат ДанныеРегистрации;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьПоОрганизацииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Запись = НаборЗаписей.Добавить();
		Запись.СтруктурнаяЕдиница = ОбъектВладелец;
		Запись.РегистрацияВНалоговомОргане = Результат;
		Запись.Период = ПериодНовойЗаписи();
		
		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(Запись, "Период", "ПериодСтрокой");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПериодНовойЗаписи()
	
	НовыйПериод = НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса());
	
	Если НаборЗаписей.Количество() > 1 Тогда
		ПоследнийПериод = НаборЗаписей.Получить(НаборЗаписей.Количество() - 2).Период;
	Иначе
		ПоследнийПериод = '00010101000000';
	КонецЕсли;
	
	Если НовыйПериод <= ПоследнийПериод Тогда
		НовыйПериод = ДобавитьМесяц(ПоследнийПериод, 1);
	КонецЕсли;
	
	Возврат НовыйПериод;
	
КонецФункции

#КонецОбласти
