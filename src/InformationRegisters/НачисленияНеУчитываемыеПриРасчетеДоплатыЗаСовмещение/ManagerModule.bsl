#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиПравилРегистрации

// См. ЗарплатаКадрыРасширенныйСинхронизацияДанных.ШаблонОбработчика
Процедура ПриЗаполненииНастроекОбработчиковПравилРегистрации(Настройки) Экспорт
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляРегламентированныхДанных(Настройки);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьНастройки(Начисления, НастройкиРасчетаЗарплаты) Экспорт
	
	Если Не НастройкиРасчетаЗарплаты.ИспользоватьСовмещениеПрофессийДолжностей Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НеучитываемыеНачисления.Начисление КАК Начисление,
		|	СУММА(НеучитываемыеНачисления.Флаг) КАК Флаг
		|ИЗ
		|	(ВЫБРАТЬ
		|		НачисленияНеУчитываемыеПриРасчетеДоплатыЗаСовмещение.Начисление КАК Начисление,
		|		-1 КАК Флаг
		|	ИЗ
		|		РегистрСведений.НачисленияНеУчитываемыеПриРасчетеДоплатыЗаСовмещение КАК НачисленияНеУчитываемыеПриРасчетеДоплатыЗаСовмещение
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Начисления.Ссылка,
		|		1
		|	ИЗ
		|		ПланВидовРасчета.Начисления КАК Начисления
		|	ГДЕ
		|		Начисления.Ссылка В(&Начисления)) КАК НеучитываемыеНачисления
		|
		|СГРУППИРОВАТЬ ПО
		|	НеучитываемыеНачисления.Начисление
		|
		|ИМЕЮЩИЕ
		|	СУММА(НеучитываемыеНачисления.Флаг) <> 0";
	
	Запрос.УстановитьПараметр("Начисления", Начисления);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.НачисленияНеУчитываемыеПриРасчетеДоплатыЗаСовмещение.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Начисление = Выборка.Начисление;
		Если Выборка.Флаг > 0 Тогда
			МенеджерЗаписи.Записать();
		Иначе
			МенеджерЗаписи.Удалить();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПервоначальныеНастройкиПоДокументам(ПараметрыОбновления) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СовмещениеТабличнаяЧасть.Ссылка КАК Ссылка,
		|	СовмещениеТабличнаяЧасть.Ссылка.МоментВремени КАК МоментВремени,
		|	СовмещениеТабличнаяЧасть.Начисление КАК Начисление,
		|	СовмещениеТабличнаяЧасть.Использовать КАК Использовать,
		|	""ФОТСовмещаемый"" КАК ИмяТаблицы
		|ПОМЕСТИТЬ ВТРегистраторы
		|ИЗ
		|	Документ.Совмещение.ФОТСовмещаемый КАК СовмещениеТабличнаяЧасть
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СовмещениеТабличнаяЧасть.Ссылка,
		|	СовмещениеТабличнаяЧасть.Ссылка.МоментВремени,
		|	СовмещениеТабличнаяЧасть.Начисление,
		|	СовмещениеТабличнаяЧасть.Использовать,
		|	""ФОТСовмещающегоСотрудника""
		|ИЗ
		|	Документ.Совмещение.ФОТСовмещающегоСотрудника КАК СовмещениеТабличнаяЧасть
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СовмещениеТабличнаяЧасть.Начисление КАК Начисление
		|ИЗ
		|	ВТРегистраторы КАК СовмещениеТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК СовмещениеСтаршие
		|		ПО СовмещениеТабличнаяЧасть.Начисление = СовмещениеСтаршие.Начисление
		|			И СовмещениеТабличнаяЧасть.ИмяТаблицы = СовмещениеСтаршие.ИмяТаблицы
		|			И СовмещениеТабличнаяЧасть.МоментВремени < СовмещениеСтаршие.МоментВремени
		|ГДЕ
		|	СовмещениеСтаршие.Ссылка ЕСТЬ NULL
		|	И НЕ СовмещениеТабличнаяЧасть.Использовать";
	
	НаборЗаписей = РегистрыСведений.НачисленияНеУчитываемыеПриРасчетеДоплатыЗаСовмещение.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли