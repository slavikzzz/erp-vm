
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Позволяет указать объекты метаданных, для которых задана логика ограничения доступа к данным.
//
// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
		"РазрешитьЧтениеИзменение
		|ГДЕ
		|	ЗначениеРазрешено(УчетнаяЗаписьМаркетплейса.Организация)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Очищает записи регистра по учетной записи и складу при изменении значения.
//
// Параметры:
//   УчетнаяЗапись - СправочникСсылка.УчетныеЗаписиМаркетплейсов - учетная запись подключения к сервису.
//   Склад         - СправочникСсылка.Склады, Неопределено - склад.
//
Процедура ОчиститьЗаписиПоСкладу(Знач УчетнаяЗапись, Знач Склад = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Склад) Тогда
		Склады = ИнтеграцияСМаркетплейсамиСервер.ПолучитьСопоставленныеСклады(
			УчетнаяЗапись,
			Истина);
		
	Иначе
		Склады = Новый Массив;
		Склады.Добавить(Склад);
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		Для Каждого Склад Из Склады Цикл
			БлокировкаДанных = Новый БлокировкаДанных;
			ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.ОстаткиТоваровМаркетплейсов");
			ЭлементБлокировкиДанных.УстановитьЗначение("УчетнаяЗаписьМаркетплейса", УчетнаяЗапись);
			ЭлементБлокировкиДанных.УстановитьЗначение("Склад",                     Склад);
			БлокировкаДанных.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.ОстаткиТоваровМаркетплейсов.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.УчетнаяЗаписьМаркетплейса.Установить(УчетнаяЗапись);
			НаборЗаписей.Отбор.Склад.Установить(Склад);
			
			НаборЗаписей.Записать();
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(ИнтеграцияСЯндексМаркетСервер.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,,,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

// Очищает записи регистра по учетной записи, номенклатуре и характеристике при изменении значений или смене статуса.
//
// Параметры:
//   УчетнаяЗапись  - СправочникСсылка.УчетныеЗаписиМаркетплейсов - учетная запись подключения к сервису.
//   Номенклатура   - СправочникСсылка.Номенклатура - номенклатура.
//   Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - характеристика.
//
Процедура ОчиститьЗаписиПоНоменклатуреИХарактеристике(Знач УчетнаяЗапись, Знач Номенклатура, Знач Характеристика) Экспорт
	
	Если Не ЗначениеЗаполнено(УчетнаяЗапись)
			Или Не ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.ОстаткиТоваровМаркетплейсов");
		ЭлементБлокировкиДанных.УстановитьЗначение("УчетнаяЗаписьМаркетплейса", УчетнаяЗапись);
		ЭлементБлокировкиДанных.УстановитьЗначение("Номенклатура",              Номенклатура);
		ЭлементБлокировкиДанных.УстановитьЗначение("Характеристика",            Характеристика);
		БлокировкаДанных.Заблокировать();
		
		НаборЗаписей = РегистрыСведений.ОстаткиТоваровМаркетплейсов.СоздатьНаборЗаписей(); 
		НаборЗаписей.Отбор.УчетнаяЗаписьМаркетплейса.Установить(УчетнаяЗапись);
		НаборЗаписей.Отбор.Номенклатура.Установить(Номенклатура);
		НаборЗаписей.Отбор.Характеристика.Установить(Характеристика);
		
		НаборЗаписей.Записать();
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(ИнтеграцияСЯндексМаркетСервер.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,,,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
