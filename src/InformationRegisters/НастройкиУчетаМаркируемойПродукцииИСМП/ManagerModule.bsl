#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает даты раздельного контроля по маркируемой продукции, установленные согласно текущему законодательству.
// В дальнейшем пользователь может управлять датами через рабочее место Интеграция ИС МП (обувь, одежда, табак...)
// 
// Параметры:
//  ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - вид маркируемой продукции
// 
// Возвращаемое значение:
//  Структура - См. ОбщегоНазначенияИСМПКлиентСервер.ИнициализироватьНастройкуДатРаздельногоКонтроля:
// * ВидПродукции                             - ПеречислениеСсылка.ВидыПродукцииИС
// * ДатаКонтрольПроизводства                 - Дата - Дата обязательной маркировки, необходимость распечатки кодов и ввода в оборот
// * ДатаКонтрольВыводИзОборота               - Дата - Дата начала обязательной маркировки при выводе из оборота по прочим причинам (не являющимся продажей в розницу)
// * ДатаРозницаУведомительныйРежим           - Дата - Дата начала действия уведомительного режима
// * ДатаРозницаРазрешительныйРежим           - Дата - Дата начала действия разрешительного режима онлайн
// * ДатаРозницаЛокальныйРазрешительныйРежим  - Дата - Дата начала действия локального разрешительного режима
// * ДатаОптКонтрольПоштучно                  - Дата - Дата начала обязательной маркировки при продаже поштучно
// * ДатаОптКонтрольОСУ                       - Дата - Дата начала обязательной маркировки при продаже по ОСУ
// * ДатаЗапретПродажиНемаркированныхОстатков - Дата - Дата завершения продажи немаркированных остатков маркируемой продукции
// * ДатаПрослеживаемостьПеремещенияМеждуМОД  - Дата - Дата обязательного контроля перемещений между МОД.
Функция ДатыРаздельногоКонтроляМаркируемойПродукцииПоУмолчанию(ВидМаркируемойПродукции) Экспорт
	
	СтруктураДат = ОбщегоНазначенияИСМПКлиентСервер.ИнициализироватьНастройкуДатРаздельногоКонтроля();
	СтруктураДат.ВидПродукции = ВидМаркируемойПродукции;
	
	Если ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Табак Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2020, 07, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2020, 07, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2019, 07, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2020, 07, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2024, 04, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2020, 07, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Обувь Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2021, 07, 15);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2020, 07, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2020, 07, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2020, 07, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2024, 11, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2020, 07, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ЛегкаяПромышленность Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2021, 01, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2021, 01, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2021, 01, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2022, 01, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2024, 11, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2021, 01, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ЛегкаяПромышленность2025 Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2025, 08, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2025, 03, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2025, 03, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2021, 06, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2023, 12, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2021, 06, 01);
		СтруктураДат.ДатаОптКонтрольОСУ                       = Дата(2022, 09, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2026, 11, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2024, 05, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2022, 09, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Шины Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2021, 03, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2020, 12, 15);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2020, 11, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2022, 01, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2024, 11, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2020, 11, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Фотоаппараты Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2020, 12, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2020, 10, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2020, 10, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2022, 01, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2024, 11, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2020, 10, 01);
		
		Возврат СтруктураДат;
	
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Велосипеды Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2024, 09, 01);
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2025, 03, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
	
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КреслаКоляски Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2024, 09, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2025, 03, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2023, 10, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2024, 09, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2024, 09, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ТехническиеСредстваРеабилитации Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2025, 03, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2025, 03, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2024, 10, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2025, 09, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МедицинскиеИзделия Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2024, 09, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2024, 09, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2023, 10, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2025, 09, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2024, 09, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МедицинскиеИзделия20 Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 09, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Духи Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2021, 10, 31);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2020, 10, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2020, 10, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2022, 01, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2024, 11, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2020, 10, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.АльтернативныйТабак Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2021, 07, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2021, 07, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2020, 07, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2021, 07, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2024, 04, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2021, 07, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.УпакованнаяВода Тогда
		
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2022, 11, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2021, 12, 01);
		СтруктураДат.ДатаОптКонтрольОСУ                       = Дата(2022, 11, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2024, 05, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2023, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Антисептики Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2024, 10, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2024, 03, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2023, 10, 01);
		СтруктураДат.ДатаОптКонтрольОСУ                       = Дата(2024, 05, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2025, 09, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2024, 11, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2024, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ДезинфицирующиеСредства Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2025, 09, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2025, 09, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 03, 01);
		СтруктураДат.ДатаОптКонтрольОСУ                       = Дата(2025, 09, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2026, 03, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 09, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2025, 09, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.БАДы Тогда
		
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2024, 03, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2023, 10, 01);
		СтруктураДат.ДатаОптКонтрольОСУ                       = Дата(2024, 05, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2025, 09, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2024, 11, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2024, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.БАДы2025 Тогда
		
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2025, 09, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 03, 01);
		СтруктураДат.ДатаОптКонтрольОСУ                       = Дата(2025, 03, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2025, 09, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 09, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2025, 09, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.НикотиносодержащаяПродукция Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2023, 10, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2022, 03, 15);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2022, 03, 15);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2023, 04, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2024, 04, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2022, 03, 15);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Пиво Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2024, 04, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2025, 03, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2023, 04, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2024, 04, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2024, 01, 15);
		СтруктураДат.ДатаПрослеживаемостьПеремещенияМеждуМОД  = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПивоВПотребительскихУпаковках Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2025, 01, 15);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2025, 09, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2023, 10, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2025, 09, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 03, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2024, 11, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2024, 06, 01);
		СтруктураДат.ДатаПрослеживаемостьПеремещенияМеждуМОД  = Дата(2025, 09, 01);
		
		Возврат СтруктураДат;
	
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПродукцияИзНатуральногоМеха Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2016, 08, 12);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2023, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.СоковаяПродукция Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2024, 06, 01);
		СтруктураДат.ДатаОптКонтрольОСУ                       = Дата(2024, 11, 05);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2026, 03, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 06, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2025, 02, 05);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2025, 02, 05);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.БезалкогольныеНапитки Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2023, 12, 01);
		СтруктураДат.ДатаОптКонтрольОСУ                       = Дата(2024, 11, 05);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2026, 03, 01);
		СтруктураДат.ДатаРозницаЛокальныйРазрешительныйРежим  = Дата(2025, 06, 01);
		СтруктураДат.ДатаРозницаРазрешительныйРежим           = Дата(2025, 06, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2024, 11, 05);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.БезалкогольноеПиво Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2025, 10, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2026, 03, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2024, 10, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2026, 03, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2025, 04, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МорепродуктыПодконтрольныеВЕТИС Тогда
		
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2026, 06, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2024, 05, 01);
		СтруктураДат.ДатаОптКонтрольОСУ                       = Дата(2025, 04, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2025, 06, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2025, 04, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КормаДляЖивотныхПодконтрольныеВЕТИС
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КормаДляЖивотныхБезВЕТИС Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2024, 10, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2025, 09, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2024, 10, 01);
		СтруктураДат.ДатаОптКонтрольОСУ                       = Дата(2025, 09, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2026, 12, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2025, 09, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КормаДляЖивотныхВлажныеПодконтрольныеВЕТИС
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КормаДляЖивотныхВлажныеБезВЕТИС Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2025, 03, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2025, 09, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 03, 01);
		СтруктураДат.ДатаОптКонтрольОСУ                       = Дата(2025, 09, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2026, 12, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2025, 09, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КонсервированнаяПродукцияПодконтрольнаяВЕТИС
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КонсервированнаяПродукцияБезВЕТИС Тогда
		
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2027, 10, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2024, 12, 01);
		СтруктураДат.ДатаОптКонтрольОСУ                       = Дата(2026, 10, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2027, 10, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2026, 10, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.РастительныеМасла Тогда
		
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2026, 11, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2024, 10, 01);
		СтруктураДат.ДатаОптКонтрольОСУ                       = Дата(2025, 11, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2026, 11, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2025, 11, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ВетеринарныеПрепараты Тогда
		
		СтруктураДат.ДатаЗапретПродажиНемаркированныхОстатков = Дата(2024, 10, 01);
		СтруктураДат.ДатаКонтрольВыводИзОборота               = Дата(2025, 09, 01);
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2024, 10, 01);
		СтруктураДат.ДатаОптКонтрольПоштучно                  = Дата(2026, 03, 01);
		СтруктураДат.ДатаРозницаУведомительныйРежим           = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПарфюмерныеИКосметическиеСредстваИБытоваяХимия Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.РадиоэлектроннаяПродукция Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 09, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ТелефоныИНоутбуки Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 09, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПечатныеПлаты Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 09, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ИгрыИИгрушкиДляДетей Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2024, 12, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ОптоволокноИОптоволоконнаяПродукция Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2024, 12, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ТитановаяМеталлопродукция Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2024, 04, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МясоПодконтрольноеВЕТИС Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПечатнаяПродукция Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 09, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.СтроительныеМатериалы Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2024, 12, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ОтопительныеПриборы Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Бакалея Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.АлкогольнаяПродукцияДо9Процентов Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 09, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПиротехническиеИзделияИСредстваПожарнойБезопасности Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КабельнаяПродукция Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МоторныеМасла Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 03, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПолимерныеТрубы Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 09, 01);
		
		Возврат СтруктураДат;
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.СладостиИКондитерскиеИзделия Тогда
		
		СтруктураДат.ДатаКонтрольПроизводства                 = Дата(2025, 09, 01);
		
		Возврат СтруктураДат;
		
	КонецЕсли;
	
	Возврат СтруктураДат;
	
КонецФункции

// Функция возвращает описание структуры разделенных дат контроля маркируемой продукции
// 	по всем учитываемым видам маркируемой продукции
// 
// Возвращаемое значение:
//  Массив из см. ОбщегоНазначенияИСМПКлиентСервер.ИнициализироватьНастройкуДатРаздельногоКонтроля
Функция ДатыРаздельногоКонтроля() Экспорт
	
	ДанныеНастроек = ДанныеДатРаздельногоКонтроля();
	Возврат ДанныеНастроек;
	
КонецФункции

// Функция возвращает описание структуры разделенных дат контроля маркируемой продукции
// 	по выбранному виду маркируемой продукции
// Параметры:
//  ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС
// 
// Возвращаемое значение:
//  см. ОбщегоНазначенияИСМПКлиентСервер.ИнициализироватьНастройкуДатРаздельногоКонтроля
Функция ДатыРаздельногоКонтроляМаркируемойПродукции(ВидМаркируемойПродукции) Экспорт
	
	ДанныеНастроек = ДанныеДатРаздельногоКонтроля(ВидМаркируемойПродукции);
	
	Если ДанныеНастроек.Количество() Тогда
		СтруктураДат = ДанныеНастроек[0];
	Иначе
		СтруктураДат = ОбщегоНазначенияИСМПКлиентСервер.ИнициализироватьНастройкуДатРаздельногоКонтроля();
	КонецЕсли;
	
	Возврат СтруктураДат;
	
КонецФункции

Процедура ЗаписатьНастройкуУчетаВидаПродукции(НастройкаУчета, Отказ, ЗапуститьФоновоеОбновлениеНастроекРазрешительногоРежима = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВидПродукции.Установить(НастройкаУчета.ВидПродукции);
	
	НаборЗаписей.Прочитать();
	СтруктураДатКонтроля = ДатыРаздельногоКонтроляМаркируемойПродукцииПоУмолчанию(НастройкаУчета.ВидПродукции);
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		СтрокаНабора = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаНабора, НастройкаУчета);
		
	Иначе
		
		СтрокаНабора = НаборЗаписей.Получить(0);
		ЗаполнитьЗначенияСвойств(СтрокаНабора, НастройкаУчета);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НастройкаУчета.ДатаКонтрольПроизводства) Тогда
		
		СтрокаНабора.ДатаКонтрольПроизводства   = СтруктураДатКонтроля.ДатаКонтрольПроизводства;
		НастройкаУчета.ДатаКонтрольПроизводства = СтрокаНабора.ДатаКонтрольПроизводства;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НастройкаУчета.ДатаКонтрольВыводИзОборота) Тогда
		
		СтрокаНабора.ДатаКонтрольВыводИзОборота   = СтруктураДатКонтроля.ДатаКонтрольВыводИзОборота;
		НастройкаУчета.ДатаКонтрольВыводИзОборота = СтрокаНабора.ДатаКонтрольВыводИзОборота;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НастройкаУчета.ДатаРозницаУведомительныйРежим) Тогда
		
		СтрокаНабора.ДатаРозницаУведомительныйРежим   = СтруктураДатКонтроля.ДатаРозницаУведомительныйРежим;
		НастройкаУчета.ДатаРозницаУведомительныйРежим = СтрокаНабора.ДатаРозницаУведомительныйРежим;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НастройкаУчета.ДатаРозницаРазрешительныйРежим) Тогда
		
		СтрокаНабора.ДатаРозницаРазрешительныйРежим   = СтруктураДатКонтроля.ДатаРозницаРазрешительныйРежим;
		НастройкаУчета.ДатаРозницаРазрешительныйРежим = СтрокаНабора.ДатаРозницаРазрешительныйРежим;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НастройкаУчета.ДатаРозницаЛокальныйРазрешительныйРежим) Тогда
		
		СтрокаНабора.ДатаРозницаЛокальныйРазрешительныйРежим   = СтруктураДатКонтроля.ДатаРозницаЛокальныйРазрешительныйРежим;
		НастройкаУчета.ДатаРозницаЛокальныйРазрешительныйРежим = СтрокаНабора.ДатаРозницаЛокальныйРазрешительныйРежим;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НастройкаУчета.ДатаОптКонтрольПоштучно) Тогда
		
		СтрокаНабора.ДатаОптКонтрольПоштучно   = СтруктураДатКонтроля.ДатаОптКонтрольПоштучно;
		НастройкаУчета.ДатаОптКонтрольПоштучно = СтрокаНабора.ДатаОптКонтрольПоштучно;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НастройкаУчета.ДатаОптКонтрольОСУ) Тогда
		
		СтрокаНабора.ДатаОптКонтрольОСУ   = СтруктураДатКонтроля.ДатаОптКонтрольОСУ;
		НастройкаУчета.ДатаОптКонтрольОСУ = СтрокаНабора.ДатаОптКонтрольОСУ;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НастройкаУчета.ДатаЗапретПродажиНемаркированныхОстатков) Тогда
		
		СтрокаНабора.ДатаЗапретПродажиНемаркированныхОстатков   = СтруктураДатКонтроля.ДатаЗапретПродажиНемаркированныхОстатков;
		НастройкаУчета.ДатаЗапретПродажиНемаркированныхОстатков = СтрокаНабора.ДатаЗапретПродажиНемаркированныхОстатков;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НастройкаУчета.ДатаПрослеживаемостьПеремещенияМеждуМОД) Тогда
		
		СтрокаНабора.ДатаПрослеживаемостьПеремещенияМеждуМОД   = СтруктураДатКонтроля.ДатаПрослеживаемостьПеремещенияМеждуМОД;
		НастройкаУчета.ДатаПрослеживаемостьПеремещенияМеждуМОД = СтрокаНабора.ДатаПрослеживаемостьПеремещенияМеждуМОД;
		
	КонецЕсли;
	
	Если НастройкаУчета.ДатаРозницаРазрешительныйРежим > НастройкаУчета.ДатаРозницаЛокальныйРазрешительныйРежим
		И ЗначениеЗаполнено(НастройкаУчета.ДатаРозницаЛокальныйРазрешительныйРежим) Тогда
		
		НастройкаУчета.ДатаРозницаРазрешительныйРежим = НастройкаУчета.ДатаРозницаЛокальныйРазрешительныйРежим;
		
	КонецЕсли;
	
	Если НастройкаУчета.ДатаРозницаУведомительныйРежим > НастройкаУчета.ДатаРозницаРазрешительныйРежим
		И ЗначениеЗаполнено(НастройкаУчета.ДатаРозницаРазрешительныйРежим) Тогда
		
		НастройкаУчета.ДатаРозницаУведомительныйРежим = НастройкаУчета.ДатаРозницаРазрешительныйРежим;
		
	КонецЕсли;
	
	Если НЕ НаборЗаписей.ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Попытка
		
		НаборЗаписей.Записать(Истина);
		
		Если НаборЗаписей.ДополнительныеСвойства.Свойство("ЗапуститьФоновоеОбновлениеНастроекРазрешительногоРежима")
			И НаборЗаписей.ДополнительныеСвойства.ЗапуститьФоновоеОбновлениеНастроекРазрешительногоРежима Тогда
			ЗапуститьФоновоеОбновлениеНастроекРазрешительногоРежима = НаборЗаписей.ДополнительныеСвойства.ЗапуститьФоновоеОбновлениеНастроекРазрешительногоРежима;
		КонецЕсли;
		
	Исключение
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ОбщегоНазначения.СообщитьПользователю(ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке),,,, Отказ);
		
	КонецПопытки;
	
КонецПроцедуры

// Возвращает признак - ведется ли в программе учет продукции, требующей обязательной онлайн проверки.
// 
// Возвращаемое значение:
//  Булево - Признак, что в программе ведется учет продукции, требующей обязательной онлайн проверки
Функция ВедетсяУчетПродукцииТребующейОбязательнойОнлайнПроверки() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции
		|ИЗ
		|	РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
		|ГДЕ
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ВестиУчетПродукции
		|	И НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаРазрешительныйРежим <> ДАТАВРЕМЯ(1, 1, 1)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

// Возвращает список учитываемых в программе товарных групп, требующих согласно № 381-ФЗ "Об основах торговой деятельности 
//   в Российской Федерации" обязательного учета в ГИС МТ при розничной продаже
// 
// Возвращаемое значение:
//  СписокЗначений из ПеречислениеСсылка.ВидыПродукцииИС - Список учитываемой продукции, требующей обязательной проверки при продаже в розницу
Функция СписокУчитываемойПродукцииТребующейОбязательнойПроверкиПриПродажеВРозницу() Экспорт
	
	СписокПродукции                    = Новый СписокЗначений();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции                КАК ВидПродукции,
		|	ПРЕДСТАВЛЕНИЕ(НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции) КАК Представление
		|ИЗ
		|	РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
		|ГДЕ
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ВестиУчетПродукции
		|	И НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаРазрешительныйРежим <> ДАТАВРЕМЯ(1, 1, 1)";
	
	РезультатЗапроса       = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокПродукции.Добавить(ВыборкаДетальныеЗаписи.ВидПродукции, ВыборкаДетальныеЗаписи.Представление);
	КонецЦикла;
	
	СписокПродукции.СортироватьПоПредставлению();
	
	Возврат СписокПродукции;
	
КонецФункции

// Возвращает список товарных групп для обязательной проверки онлайн разрешительного режима
//  при розничной продажи на конкретную дату
// 
// Параметры:
//  НаДату - Дата - дата проверки
// 
// Возвращаемое значение:
//  Массив из ПеречислениеСсылка.ВидыПродукцииИС
Функция СписокУчитываемойПродукцииТребующейОбязательнойОнлайнПроверкиПриПродажеВРозницуНаДату(НаДату = Неопределено) Экспорт
	
	МассивПродукции = Новый Массив();
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции
		|ИЗ
		|	РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
		|ГДЕ
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ВестиУчетПродукции
		|	И ВЫБОР
		|		КОГДА &НаДату = НЕОПРЕДЕЛЕНО
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаРазрешительныйРежим <= &НаДату
		|		И НЕ НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаРазрешительныйРежим = ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ";
	
	Запрос.УстановитьПараметр("НаДату",                              НаДату);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивПродукции.Добавить(ВыборкаДетальныеЗаписи.ВидПродукции);
	КонецЦикла;
	
	Возврат МассивПродукции;
	
КонецФункции

// Возвращает список товарных групп для обязательной проверки оффлайн разрешительного режима
//  при розничной продажи на конкретную дату
// 
// Параметры:
//  НаДату - Дата - дата проверки
// 
// Возвращаемое значение:
//  Массив из ПеречислениеСсылка.ВидыПродукцииИС
Функция СписокУчитываемойПродукцииТребующейОбязательнойОффлайнПроверкиПриПродажеВРозницуНаДату(НаДату = Неопределено) Экспорт
	
	МассивПродукции = Новый Массив();
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции
		|ИЗ
		|	РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
		|ГДЕ
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ВестиУчетПродукции
		|	И ВЫБОР
		|		КОГДА &НаДату = НЕОПРЕДЕЛЕНО
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаЛокальныйРазрешительныйРежим <= &НаДату
		|		И НЕ НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаЛокальныйРазрешительныйРежим = ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ";
	
	Запрос.УстановитьПараметр("НаДату",                              НаДату);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивПродукции.Добавить(ВыборкаДетальныеЗаписи.ВидПродукции);
	КонецЦикла;
	
	Возврат МассивПродукции;
	
КонецФункции

// Возвращает список учитываемых товарных групп перемещения между МОД на конкретную дату.
// 
// Параметры:
//  НаДату - Дата - дата проверки
// 
// Возвращаемое значение:
//  Массив из ПеречислениеСсылка.ВидыПродукцииИС
Функция СписокУчитываемойПродукцииПоддерживающейПеремещениеМеждуМОД(НаДату = Неопределено) Экспорт
	
	МассивПродукции = Новый Массив();
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции
		|ИЗ
		|	РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
		|ГДЕ
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ВестиУчетПродукции
		|	И НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции В (&ВидыПродукцииПеремещенияМеждуМОД)
		|	И ВЫБОР
		|		КОГДА &НаДату = НЕОПРЕДЕЛЕНО
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ НастройкиУчетаМаркируемойПродукцииИСМП.ДатаПрослеживаемостьПеремещенияМеждуМОД <= &НаДату
		|		И НЕ НастройкиУчетаМаркируемойПродукцииИСМП.ДатаПрослеживаемостьПеремещенияМеждуМОД = ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ";
	
	Запрос.УстановитьПараметр("НаДату",                           НаДату);
	Запрос.УстановитьПараметр("ВидыПродукцииПеремещенияМеждуМОД", ОбщегоНазначенияИСМПКлиентСерверПовтИсп.ВидыПродукцииВнутреннегоПеремещенияМеждуМОД());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивПродукции.Добавить(ВыборкаДетальныеЗаписи.ВидПродукции);
	КонецЦикла;
	
	Возврат МассивПродукции;
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюЗаполнениеДатМаркировки(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП";
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	Данные = Новый ТаблицаЗначений();
	СтрокаИзмерений = "";
	
	Для Каждого ИзмерениеРегистра Из Метаданные.РегистрыСведений.НастройкиУчетаМаркируемойПродукцииИСМП.Измерения Цикл
		Данные.Колонки.Добавить(ИзмерениеРегистра.Имя, ИзмерениеРегистра.Тип);
		СтрокаИзмерений = СтрокаИзмерений + ?(ЗначениеЗаполнено(СтрокаИзмерений), ", ", "") + ИзмерениеРегистра.Имя;
	КонецЦикла;
	
	Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(Параметры.ВерсияПодсистемыНаНачалоОбновления, "10.1.2.100") < 0 Тогда
		
		Данные_ЗаполнитьДатуНачалаОбязательнойМаркировки = ДанныеКОбработкеДляПереходаНаНовуюВерсию_ЗаполнитьДатуНачалаОбязательнойМаркировки();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Данные_ЗаполнитьДатуНачалаОбязательнойМаркировки, Данные);
		
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(Параметры.ВерсияПодсистемыНаНачалоОбновления, "10.1.30.1") < 0 Тогда
		
		Данные_ЗаполнитьДатуРазрешительногоРежима = ДанныеКОбработкеДляПереходаНаНовуюВерсию_ЗаполнитьДатуРазрешительногоРежима();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Данные_ЗаполнитьДатуРазрешительногоРежима, Данные);
		
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(Параметры.ВерсияПодсистемыНаНачалоОбновления, "10.1.35.1") < 0 Тогда
		
		Данные_ЗаполнитьДатуЛокальнойПроверкиРазрешительногоРежима = ДанныеКОбработкеДляПереходаНаНовуюВерсию_ЗаполнитьДатуЛокальнойПроверкиРазрешительногоРежима();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Данные_ЗаполнитьДатуЛокальнойПроверкиРазрешительногоРежима, Данные);
		
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(Параметры.ВерсияПодсистемыНаНачалоОбновления, "10.1.35.2") < 0 Тогда
		
		Данные_ЗаполнитьНастройкуРаздельногоКонтроляДат = ДанныеКОбработкеДляПереходаНаНовуюВерсию_ЗаполнитьНастройкуРаздельногоКонтроляДат();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Данные_ЗаполнитьНастройкуРаздельногоКонтроляДат, Данные);
		
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(Параметры.ВерсияПодсистемыНаНачалоОбновления, "10.1.35.17") < 0 Тогда
		
		Данные_ЗаполнитьДатуКонтроляПеремещенийМеждуМОД = ДанныеКОбработкеДляПереходаНаНовуюВерсию_ЗаполнитьДатуКонтроляПеремещенийМеждуМОД();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Данные_ЗаполнитьДатуКонтроляПеремещенийМеждуМОД, Данные);
		
	КонецЕсли;
	
	Данные.Свернуть(СтрокаИзмерений);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюДатыОбязательнойМаркировки(Параметры) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыПродукцииИС.Ссылка КАК ВидПродукции
	|ИЗ
	|	Перечисление.ВидыПродукцииИС КАК ВидыПродукцииИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
	|		ПО НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции = ВидыПродукцииИС.Ссылка
	|ГДЕ
	|	НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции ЕСТЬ NULL
	|	И ВидыПродукцииИС.Ссылка В (&ВидыПродукцииИСМП)";
	Запрос.УстановитьПараметр("ВидыПродукцииИСМП", ОбщегоНазначенияИСКлиентСервер.ВидыПродукцииИСМП(Истина));
	ТаблицаИзмерений = Запрос.Выполнить().Выгрузить();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП";
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ТаблицаИзмерений, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюРазрешительныйРежим(Параметры) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыПродукцииИС.Ссылка КАК ВидПродукции
	|ИЗ
	|	Перечисление.ВидыПродукцииИС КАК ВидыПродукцииИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
	|		ПО НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции = ВидыПродукцииИС.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаРазрешительныйРежим, ДАТАВРЕМЯ(1, 1,
	|		1)) = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВидыПродукцииИС.Ссылка В (&ВидыПродукцииИСМП)";
	Запрос.УстановитьПараметр("ВидыПродукцииИСМП", ОбщегоНазначенияИСМПКлиентСерверПовтИсп.ВидыПродукцийОбязательнойПроверкиПередРозничнойПродажей());
	ТаблицаИзмерений = Запрос.Выполнить().Выгрузить();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП";
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ТаблицаИзмерений, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюЛокальнаяПроверкаРазрешительногоРежима(Параметры) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыПродукцииИС.Ссылка КАК ВидПродукции
	|ИЗ
	|	Перечисление.ВидыПродукцииИС КАК ВидыПродукцииИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
	|		ПО НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции = ВидыПродукцииИС.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаЛокальныйРазрешительныйРежим,
	|		ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВидыПродукцииИС.Ссылка В (&ВидыПродукцииИСМП)";
	Запрос.УстановитьПараметр("ВидыПродукцииИСМП", ОбщегоНазначенияИСМПКлиентСерверПовтИсп.ВидыПродукцийОбязательнойПроверкиПередРозничнойПродажей());
	ТаблицаИзмерений = Запрос.Выполнить().Выгрузить();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП";
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ТаблицаИзмерений, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюРаздельныйКонтрольДат(Параметры) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыПродукцииИС.Ссылка КАК ВидПродукции
	|ИЗ
	|	Перечисление.ВидыПродукцииИС КАК ВидыПродукцииИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
	|		ПО НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции = ВидыПродукцииИС.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаКонтрольВыводИзОборота, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|	И ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаУведомительныйРежим, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1,
	|		1, 1)
	|	И ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаОптКонтрольПоштучно, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|	И ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаОптКонтрольОСУ, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|	И ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаЗапретПродажиНемаркированныхОстатков, ДАТАВРЕМЯ(1, 1,
	|		1)) = ДАТАВРЕМЯ(1, 1, 1)";
	ТаблицаИзмерений = Запрос.Выполнить().Выгрузить();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП";
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ТаблицаИзмерений, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюУстановкаДатыКонтроляПеремещенийМеждуМОД(Параметры) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыПродукцииИС.Ссылка КАК ВидПродукции
	|ИЗ
	|	Перечисление.ВидыПродукцииИС КАК ВидыПродукцииИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
	|		ПО НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции = ВидыПродукцииИС.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаПрослеживаемостьПеремещенияМеждуМОД,
	|		ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВидыПродукцииИС.Ссылка В (&ВидыПродукцииИСМП)";
	Запрос.УстановитьПараметр("ВидыПродукцииИСМП", ОбщегоНазначенияИСКлиентСервер.ВидыПродукцииПрослеживаемогоПеремещенияМеждуМОД());
	ТаблицаИзмерений = Запрос.Выполнить().Выгрузить();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП";
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ТаблицаИзмерений, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюЗаполнениеДатМаркировки(Параметры) Экспорт
	
	ПолноеИмяРегистра  = "РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП";
	МетаданныеРегистра = Метаданные.РегистрыСведений.НастройкиУчетаМаркируемойПродукцииИСМП;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.УстановитьЗначение("ВидПродукции", Выборка.ВидПродукции);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			Записать = Ложь;
			
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор["ВидПродукции"].Установить(Выборка.ВидПродукции);
			НаборЗаписей.Прочитать();
			
			СтруктураДатКонтроля = ДатыРаздельногоКонтроляМаркируемойПродукцииПоУмолчанию(Выборка.ВидПродукции);
			
			Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(Параметры.ВерсияПодсистемыНаНачалоОбновления, "10.1.2.100") < 0 Тогда
				ОбработатьДанные_ЗаполнитьДатуНачалаОбязательнойМаркировки(НаборЗаписей, СтруктураДатКонтроля, Выборка.ВидПродукции, Записать);
			КонецЕсли;
			
			Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(Параметры.ВерсияПодсистемыНаНачалоОбновления, "10.1.30.1") < 0 Тогда
				ОбработатьДанные_ЗаполнитьДатуРазрешительногоРежима(НаборЗаписей, СтруктураДатКонтроля, Выборка.ВидПродукции, Записать);
			КонецЕсли;
			
			Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(Параметры.ВерсияПодсистемыНаНачалоОбновления, "10.1.35.1") < 0 Тогда
				ОбработатьДанные_ЗаполнитьДатуЛокальнойПроверкиРазрешительногоРежима(НаборЗаписей, СтруктураДатКонтроля, Выборка.ВидПродукции, Записать);
			КонецЕсли;
			
			Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(Параметры.ВерсияПодсистемыНаНачалоОбновления, "10.1.35.2") < 0 Тогда
				ОбработатьДанные_ЗаполнитьНастройкуРаздельногоКонтроляДат(НаборЗаписей, СтруктураДатКонтроля, Выборка.ВидПродукции, Записать);
			КонецЕсли;
			
			Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(Параметры.ВерсияПодсистемыНаНачалоОбновления, "10.1.35.17") < 0 Тогда
				ОбработатьДанные_ЗаполнитьДатуКонтроляПеремещенийМеждуМОД(НаборЗаписей, СтруктураДатКонтроля, Выборка.ВидПродукции, Записать);
			КонецЕсли;
			
			Если Записать Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			
			ТекстСообщения = НСтр("ru = 'Не удалось установить дату начала обязательной маркировки по виду продукции: %1 по причине: %2';
									|en = 'Не удалось установить дату начала обязательной маркировки по виду продукции: %1 по причине: %2'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.ВидПродукции, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение, МетаданныеРегистра,, ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюДатыОбязательнойМаркировки(Параметры) Экспорт
	
	ПолноеИмяРегистра  = "РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП";
	МетаданныеРегистра = Метаданные.РегистрыСведений.НастройкиУчетаМаркируемойПродукцииИСМП;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра             = ПолноеИмяРегистра;
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.УстановитьЗначение("ВидПродукции", Выборка.ВидПродукции);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор["ВидПродукции"].Установить(Выборка.ВидПродукции);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				
				НоваяСтрока = НаборЗаписей.Добавить();
				
				СтруктураДатКонтроля = ДатыРаздельногоКонтроляМаркируемойПродукцииПоУмолчанию(Выборка.ВидПродукции);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДатКонтроля);
				
				НоваяСтрока.ВидПродукции = Выборка.ВидПродукции;
				
			КонецЕсли;
			
			Если НаборЗаписей.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей, ДополнительныеПараметры);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			
			ТекстСообщения = НСтр("ru = 'Не удалось установить дату начала обязательной маркировки по виду продукции: %1 по причине: %2';
									|en = 'Не удалось установить дату начала обязательной маркировки по виду продукции: %1 по причине: %2'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.ВидПродукции, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение, МетаданныеРегистра,, ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюРазрешительныйРежим(Параметры) Экспорт
	
	ПолноеИмяРегистра  = "РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП";
	МетаданныеРегистра = Метаданные.РегистрыСведений.НастройкиУчетаМаркируемойПродукцииИСМП;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра             = ПолноеИмяРегистра;
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.УстановитьЗначение("ВидПродукции", Выборка.ВидПродукции);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор["ВидПродукции"].Установить(Выборка.ВидПродукции);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				
				НоваяСтрока = НаборЗаписей.Добавить();
				НоваяСтрока.ВидПродукции                                    = Выборка.ВидПродукции;
				
				СтруктураДатКонтроля = ДатыРаздельногоКонтроляМаркируемойПродукцииПоУмолчанию(Выборка.ВидПродукции);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДатКонтроля);
				
			Иначе
				
				НоваяСтрока = НаборЗаписей[0];
				
				СтруктураДатКонтроля = ДатыРаздельногоКонтроляМаркируемойПродукцииПоУмолчанию(Выборка.ВидПродукции);
				НоваяСтрока.ДатаРозницаРазрешительныйРежим = СтруктураДатКонтроля.ДатаРозницаРазрешительныйРежим;
				
			КонецЕсли;
			
			Если НаборЗаписей.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей, ДополнительныеПараметры);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			
			ТекстСообщения = НСтр("ru = 'Не удалось установить дату начала действия разрешительного режима розничной продажи по виду продукции: %1 по причине: %2';
									|en = 'Не удалось установить дату начала действия разрешительного режима розничной продажи по виду продукции: %1 по причине: %2'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.ВидПродукции, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение, МетаданныеРегистра,, ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюЛокальнаяПроверкаРазрешительныйРежим(Параметры) Экспорт
	
	ПолноеИмяРегистра  = "РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП";
	МетаданныеРегистра = Метаданные.РегистрыСведений.НастройкиУчетаМаркируемойПродукцииИСМП;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра             = ПолноеИмяРегистра;
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.УстановитьЗначение("ВидПродукции", Выборка.ВидПродукции);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор["ВидПродукции"].Установить(Выборка.ВидПродукции);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				
				НоваяСтрока = НаборЗаписей.Добавить();
				НоваяСтрока.ВидПродукции                                    = Выборка.ВидПродукции;
				
				СтруктураДатКонтроля = ДатыРаздельногоКонтроляМаркируемойПродукцииПоУмолчанию(Выборка.ВидПродукции);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДатКонтроля);
				
			Иначе
				
				НоваяСтрока = НаборЗаписей[0];
				
				СтруктураДатКонтроля = ДатыРаздельногоКонтроляМаркируемойПродукцииПоУмолчанию(Выборка.ВидПродукции);
				НоваяСтрока.ДатаРозницаЛокальныйРазрешительныйРежим = СтруктураДатКонтроля.ДатаРозницаЛокальныйРазрешительныйРежим;
				
			КонецЕсли;
			
			Если НаборЗаписей.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей, ДополнительныеПараметры);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			
			ТекстСообщения = НСтр("ru = 'Не удалось установить дату начала действия локальной проверки разрешительного режима розничной продажи по виду продукции: %1 по причине: %2';
									|en = 'Не удалось установить дату начала действия локальной проверки разрешительного режима розничной продажи по виду продукции: %1 по причине: %2'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.ВидПродукции, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение, МетаданныеРегистра,, ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюРаздельныйКонтрольДат(Параметры) Экспорт
	
	ПолноеИмяРегистра  = "РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП";
	МетаданныеРегистра = Метаданные.РегистрыСведений.НастройкиУчетаМаркируемойПродукцииИСМП;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра             = ПолноеИмяРегистра;
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.УстановитьЗначение("ВидПродукции", Выборка.ВидПродукции);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор["ВидПродукции"].Установить(Выборка.ВидПродукции);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				
				НоваяСтрока = НаборЗаписей.Добавить();
				НоваяСтрока.ВидПродукции                                    = Выборка.ВидПродукции;
				
				СтруктураДатКонтроля = ДатыРаздельногоКонтроляМаркируемойПродукцииПоУмолчанию(Выборка.ВидПродукции);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДатКонтроля);
				
			Иначе
				
				НоваяСтрока = НаборЗаписей[0];
				
				СтруктураДатКонтроля = ДатыРаздельногоКонтроляМаркируемойПродукцииПоУмолчанию(Выборка.ВидПродукции);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДатКонтроля,, "ДатаРозницаРазрешительныйРежим, ДатаРозницаЛокальныйРазрешительныйРежим");
				
			КонецЕсли;
			
			Если НаборЗаписей.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей, ДополнительныеПараметры);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			
			ТекстСообщения = НСтр("ru = 'Не удалось установить раздельные даты контроля по виду продукции: %1 по причине: %2';
									|en = 'Не удалось установить раздельные даты контроля по виду продукции: %1 по причине: %2'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.ВидПродукции, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение, МетаданныеРегистра,, ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюУстановкаДатыКонтроляПеремещенийМеждуМОД(Параметры) Экспорт
	
	ПолноеИмяРегистра  = "РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП";
	МетаданныеРегистра = Метаданные.РегистрыСведений.НастройкиУчетаМаркируемойПродукцииИСМП;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра             = ПолноеИмяРегистра;
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.УстановитьЗначение("ВидПродукции", Выборка.ВидПродукции);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор["ВидПродукции"].Установить(Выборка.ВидПродукции);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				
				НоваяСтрока = НаборЗаписей.Добавить();
				НоваяСтрока.ВидПродукции                                    = Выборка.ВидПродукции;
				
				СтруктураДатКонтроля = ДатыРаздельногоКонтроляМаркируемойПродукцииПоУмолчанию(Выборка.ВидПродукции);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДатКонтроля);
				
			Иначе
				
				НоваяСтрока = НаборЗаписей[0];
				
				СтруктураДатКонтроля = ДатыРаздельногоКонтроляМаркируемойПродукцииПоУмолчанию(Выборка.ВидПродукции);
				НоваяСтрока.ДатаПрослеживаемостьПеремещенияМеждуМОД = СтруктураДатКонтроля.ДатаПрослеживаемостьПеремещенияМеждуМОД;
				
			КонецЕсли;
			
			Если НаборЗаписей.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей, ДополнительныеПараметры);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			
			ТекстСообщения = НСтр("ru = 'Не удалось установить дату начала действия контроля перемещений между МОД по виду продукции: %1 по причине: %2';
									|en = 'Не удалось установить дату начала действия контроля перемещений между МОД по виду продукции: %1 по причине: %2'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.ВидПродукции, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение, МетаданныеРегистра,, ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#Область УстаревшиеПроцедурыИФункции

// Устарела. Начальное заполнение даты начала обязательного учета маркируемой продукции
// 
// Параметры:
// 	ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид маркируемой продукции.
// Возвращаемое значение:
// 	Дата - Дата начала учета.
Функция ДатаНачалаУчетаМаркируемойПродукции(ВидМаркируемойПродукции) Экспорт
	
	Если ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Табак Тогда
		
		Возврат '20190301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Обувь Тогда
		
		Возврат '20200701';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ЛегкаяПромышленность Тогда
		
		Возврат '20210101';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ЛегкаяПромышленность2025 Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
		
		Возврат '20200301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС Тогда
		
		Возврат '20200301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Шины Тогда
		
		Возврат '20201101';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Фотоаппараты Тогда
		
		Возврат '20201001';
	
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Велосипеды Тогда
		
		Возврат '20200601';
	
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КреслаКоляски
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ТехническиеСредстваРеабилитации
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МедицинскиеИзделия Тогда
		
		Возврат '20210601';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МедицинскиеИзделия20 Тогда
		
		Возврат '20250901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Духи Тогда
		
		Возврат '20201001';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.АльтернативныйТабак Тогда
		
		Возврат '20200701';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.УпакованнаяВода Тогда
		
		Возврат '20210301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Антисептики Тогда
		
		Возврат '20220901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ДезинфицирующиеСредства Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.БАДы Тогда
		
		Возврат '20220901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.БАДы2025 Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.НикотиносодержащаяПродукция Тогда
		
		Возврат '20220901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Пиво
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПивоВПотребительскихУпаковках Тогда
		
		Возврат '20220901';
	
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПродукцияИзНатуральногоМеха Тогда
		
		Возврат '20220901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.СоковаяПродукция
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.БезалкогольныеНапитки Тогда
		
		Возврат '20230301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.БезалкогольноеПиво Тогда
		
		Возврат '20230301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МорепродуктыПодконтрольныеВЕТИС Тогда
		
		Возврат '20240101';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КормаДляЖивотныхПодконтрольныеВЕТИС
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КормаДляЖивотныхБезВЕТИС
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КонсервированнаяПродукцияПодконтрольнаяВЕТИС
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КонсервированнаяПродукцияБезВЕТИС
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.РастительныеМасла
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ВетеринарныеПрепараты Тогда
		
		Возврат '20240901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КормаДляЖивотныхВлажныеПодконтрольныеВЕТИС
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КормаДляЖивотныхВлажныеБезВЕТИС Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПарфюмерныеИКосметическиеСредстваИБытоваяХимия
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.РадиоэлектроннаяПродукция Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ТелефоныИНоутбуки Тогда
		
		Возврат '20250901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПечатныеПлаты Тогда
		
		Возврат '20250901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ИгрыИИгрушкиДляДетей
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ОптоволокноИОптоволоконнаяПродукция Тогда
		
		Возврат '20241202';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ТитановаяМеталлопродукция Тогда
		
		Возврат '20240401';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МясоПодконтрольноеВЕТИС Тогда
		
		Возврат '20260101';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПечатнаяПродукция Тогда
		
		Возврат '20250901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.СтроительныеМатериалы Тогда
		
		Возврат '20241202';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ОтопительныеПриборы Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Бакалея Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.АлкогольнаяПродукцияДо9Процентов Тогда
		
		Возврат '20250901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПиротехническиеИзделияИСредстваПожарнойБезопасности Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КабельнаяПродукция Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МоторныеМасла Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПолимерныеТрубы Тогда
		
		Возврат '20250901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.СладостиИКондитерскиеИзделия Тогда
		
		Возврат '20250901';
		
	КонецЕсли;
	
КонецФункции

// Устарела. Начальное заполнение даты начала действия разрешительного режима маркируемой продукции
// 
// Параметры:
// 	ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид маркируемой продукции.
// Возвращаемое значение:
// 	Дата - Дата начала действия разрешительного режима.
Функция ДатаНачалаДействияРазрешительногоРежимаНаККТ(ВидМаркируемойПродукции) Экспорт
	
	Если ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Табак Тогда
		
		Возврат '20240401';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Обувь Тогда
		
		Возврат '20241101';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ЛегкаяПромышленность Тогда
		
		Возврат '20241101';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ЛегкаяПромышленность2025 Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
		
		Возврат '20240501';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС Тогда
		
		Возврат '20240501';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Шины Тогда
		
		Возврат '20241101';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Фотоаппараты Тогда
		
		Возврат '20241101';

	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Духи Тогда
		
		Возврат '20241101';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.АльтернативныйТабак Тогда
		
		Возврат '20240401';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.УпакованнаяВода Тогда
		
		Возврат '20240501';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Антисептики Тогда
		
		Возврат '20241101';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ДезинфицирующиеСредства Тогда
		
		Возврат '20250901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.БАДы Тогда
		
		Возврат '20241101';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.БАДы2025 Тогда
		
		Возврат '20250901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.НикотиносодержащаяПродукция Тогда
		
		Возврат '20240401';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Пиво
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ПивоВПотребительскихУпаковках Тогда
		
		Возврат '20240401';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.СоковаяПродукция
		Или ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.БезалкогольныеНапитки Тогда
		
		Возврат '20250205';
		
	КонецЕсли;
	
КонецФункции

// Устарела. Начальное заполнение даты начала действия локальной проверки разрешительного режима маркируемой продукции
// 
// Параметры:
// 	ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид маркируемой продукции.
// Возвращаемое значение:
// 	Дата - Дата начала действия оффлайн-разрешительного режима.
Функция ДатаНачалаДействияЛокальнойПроверкиРазрешительногоРежимаНаККТ(ВидМаркируемойПродукции) Экспорт
	
	Если ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Табак Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.НикотиносодержащаяПродукция Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.АльтернативныйТабак Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.УпакованнаяВода Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Пиво Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.СоковаяПродукция Тогда
		
		Возврат '20250601';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Антисептики Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ДезинфицирующиеСредства Тогда
		
		Возврат '20250901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.БАДы Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.БАДы2025 Тогда
		
		Возврат '20250901';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Обувь Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ЛегкаяПромышленность Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ЛегкаяПромышленность2025 Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Фотоаппараты Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Шины Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Духи Тогда
		
		Возврат '20250301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.БезалкогольныеНапитки Тогда
		
		Возврат '20250601';
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция возвращает описание структуры разделенных дат контроля маркируемой продукции
// 	по выбранному или по всем видам маркируемой продукции
// Параметры:
//  ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС
// 
// Возвращаемое значение:
//  Массив Из см. ОбщегоНазначенияИСМПКлиентСервер.ИнициализироватьНастройкуДатРаздельногоКонтроля
Функция ДанныеДатРаздельногоКонтроля(ВидМаркируемойПродукции = Неопределено)
	
	МассивНастроек = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции                             КАК ВидПродукции,
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ДатаКонтрольПроизводства                 КАК ДатаКонтрольПроизводства,
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ДатаКонтрольВыводИзОборота               КАК ДатаКонтрольВыводИзОборота,
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаУведомительныйРежим           КАК ДатаРозницаУведомительныйРежим,
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаРазрешительныйРежим           КАК ДатаРозницаРазрешительныйРежим,
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаЛокальныйРазрешительныйРежим  КАК ДатаРозницаЛокальныйРазрешительныйРежим,
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ДатаОптКонтрольПоштучно                  КАК ДатаОптКонтрольПоштучно,
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ДатаОптКонтрольОСУ                       КАК ДатаОптКонтрольОСУ,
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ДатаЗапретПродажиНемаркированныхОстатков КАК ДатаЗапретПродажиНемаркированныхОстатков,
		|	НастройкиУчетаМаркируемойПродукцииИСМП.ДатаПрослеживаемостьПеремещенияМеждуМОД  КАК ДатаПрослеживаемостьПеремещенияМеждуМОД
		|ИЗ
		|	РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
		|ГДЕ
		|	&ОтборПоВидуМаркируемойПродукции
		|	И НастройкиУчетаМаркируемойПродукцииИСМП.ВестиУчетПродукции";
	
	Если ЗначениеЗаполнено(ВидМаркируемойПродукции) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоВидуМаркируемойПродукции", "НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции = &ВидПродукции");
		Запрос.УстановитьПараметр("ВидПродукции", ВидМаркируемойПродукции);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоВидуМаркируемойПродукции", "ИСТИНА");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтруктураДат = ОбщегоНазначенияИСМПКлиентСервер.ИнициализироватьНастройкуДатРаздельногоКонтроля();
		ЗаполнитьЗначенияСвойств(СтруктураДат, ВыборкаДетальныеЗаписи);
		
		МассивНастроек.Добавить(СтруктураДат);
		
	КонецЦикла;
	
	Возврат МассивНастроек;
	
КонецФункции

Функция ДанныеКОбработкеДляПереходаНаНовуюВерсию_ЗаполнитьДатуНачалаОбязательнойМаркировки()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыПродукцииИС.Ссылка КАК ВидПродукции
	|ИЗ
	|	Перечисление.ВидыПродукцииИС КАК ВидыПродукцииИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
	|		ПО НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции = ВидыПродукцииИС.Ссылка
	|ГДЕ
	|	НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции ЕСТЬ NULL
	|	И ВидыПродукцииИС.Ссылка В (&ВидыПродукцииИСМП)";
	Запрос.УстановитьПараметр("ВидыПродукцииИСМП", ОбщегоНазначенияИСКлиентСервер.ВидыПродукцииИСМП(Истина));
	ТаблицаИзмерений = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаИзмерений;
	
КонецФункции

Функция ДанныеКОбработкеДляПереходаНаНовуюВерсию_ЗаполнитьДатуРазрешительногоРежима()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыПродукцииИС.Ссылка КАК ВидПродукции
	|ИЗ
	|	Перечисление.ВидыПродукцииИС КАК ВидыПродукцииИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
	|		ПО НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции = ВидыПродукцииИС.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаРазрешительныйРежим, ДАТАВРЕМЯ(1, 1,
	|		1)) = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВидыПродукцииИС.Ссылка В (&ВидыПродукцииИСМП)";
	Запрос.УстановитьПараметр("ВидыПродукцииИСМП", ОбщегоНазначенияИСМПКлиентСерверПовтИсп.ВидыПродукцийОбязательнойПроверкиПередРозничнойПродажей());
	ТаблицаИзмерений = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаИзмерений;
	
КонецФункции

Функция ДанныеКОбработкеДляПереходаНаНовуюВерсию_ЗаполнитьДатуЛокальнойПроверкиРазрешительногоРежима()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыПродукцииИС.Ссылка КАК ВидПродукции
	|ИЗ
	|	Перечисление.ВидыПродукцииИС КАК ВидыПродукцииИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
	|		ПО НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции = ВидыПродукцииИС.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаЛокальныйРазрешительныйРежим,
	|		ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВидыПродукцииИС.Ссылка В (&ВидыПродукцииИСМП)";
	Запрос.УстановитьПараметр("ВидыПродукцииИСМП", ОбщегоНазначенияИСМПКлиентСерверПовтИсп.ВидыПродукцийОбязательнойПроверкиПередРозничнойПродажей());
	ТаблицаИзмерений = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаИзмерений;
	
КонецФункции

Функция ДанныеКОбработкеДляПереходаНаНовуюВерсию_ЗаполнитьНастройкуРаздельногоКонтроляДат()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыПродукцииИС.Ссылка КАК ВидПродукции
	|ИЗ
	|	Перечисление.ВидыПродукцииИС КАК ВидыПродукцииИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
	|		ПО НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции = ВидыПродукцииИС.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаКонтрольВыводИзОборота, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|	И ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаРозницаУведомительныйРежим, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1,
	|		1, 1)
	|	И ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаОптКонтрольПоштучно, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|	И ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаОптКонтрольОСУ, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|	И ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаЗапретПродажиНемаркированныхОстатков, ДАТАВРЕМЯ(1, 1,
	|		1)) = ДАТАВРЕМЯ(1, 1, 1)";
	ТаблицаИзмерений = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаИзмерений;
	
КонецФункции

Функция ДанныеКОбработкеДляПереходаНаНовуюВерсию_ЗаполнитьДатуКонтроляПеремещенийМеждуМОД()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыПродукцииИС.Ссылка КАК ВидПродукции
	|ИЗ
	|	Перечисление.ВидыПродукцииИС КАК ВидыПродукцииИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
	|		ПО НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции = ВидыПродукцииИС.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(НастройкиУчетаМаркируемойПродукцииИСМП.ДатаПрослеживаемостьПеремещенияМеждуМОД,
	|		ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВидыПродукцииИС.Ссылка В (&ВидыПродукцииИСМП)";
	Запрос.УстановитьПараметр("ВидыПродукцииИСМП", ОбщегоНазначенияИСКлиентСервер.ВидыПродукцииПрослеживаемогоПеремещенияМеждуМОД());
	ТаблицаИзмерений = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаИзмерений;
	
КонецФункции

Процедура ОбработатьДанные_ЗаполнитьДатуНачалаОбязательнойМаркировки(НаборЗаписей, СтруктураДатКонтроля, ВидПродукции, Записать)
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		НоваяСтрока = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДатКонтроля);
		
		НоваяСтрока.ВидПродукции = ВидПродукции;
		Записать = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьДанные_ЗаполнитьДатуРазрешительногоРежима(НаборЗаписей, СтруктураДатКонтроля, ВидПродукции, Записать)
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		НоваяСтрока = НаборЗаписей.Добавить();
		НоваяСтрока.ВидПродукции = ВидПродукции;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДатКонтроля);
		Записать = Истина;
		
	Иначе
		
		НоваяСтрока = НаборЗаписей[0];
		
		Если Не ЗначениеЗаполнено(НоваяСтрока.ДатаРозницаРазрешительныйРежим) И ЗначениеЗаполнено(СтруктураДатКонтроля.ДатаРозницаРазрешительныйРежим) Тогда
			НоваяСтрока.ДатаРозницаРазрешительныйРежим = СтруктураДатКонтроля.ДатаРозницаРазрешительныйРежим;
			Записать = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьДанные_ЗаполнитьДатуЛокальнойПроверкиРазрешительногоРежима(НаборЗаписей, СтруктураДатКонтроля, ВидПродукции, Записать)
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		НоваяСтрока = НаборЗаписей.Добавить();
		НоваяСтрока.ВидПродукции = ВидПродукции;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДатКонтроля);
		Записать = Истина;
		
	Иначе
		
		НоваяСтрока = НаборЗаписей[0];
		
		Если Не ЗначениеЗаполнено(НоваяСтрока.ДатаРозницаЛокальныйРазрешительныйРежим) И ЗначениеЗаполнено(СтруктураДатКонтроля.ДатаРозницаЛокальныйРазрешительныйРежим) Тогда
			НоваяСтрока.ДатаРозницаЛокальныйРазрешительныйРежим = СтруктураДатКонтроля.ДатаРозницаЛокальныйРазрешительныйРежим;
			Записать = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьДанные_ЗаполнитьНастройкуРаздельногоКонтроляДат(НаборЗаписей, СтруктураДатКонтроля, ВидПродукции, Записать)
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		НоваяСтрока = НаборЗаписей.Добавить();
		НоваяСтрока.ВидПродукции = ВидПродукции;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДатКонтроля);
		Записать = Истина;
		
	Иначе
		
		НоваяСтрока = НаборЗаписей[0];
		
		Если Не ЗначениеЗаполнено(НоваяСтрока.ДатаКонтрольВыводИзОборота) И ЗначениеЗаполнено(СтруктураДатКонтроля.ДатаКонтрольВыводИзОборота) Тогда
			НоваяСтрока.ДатаКонтрольВыводИзОборота = СтруктураДатКонтроля.ДатаКонтрольВыводИзОборота;
			Записать = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(НоваяСтрока.ДатаРозницаУведомительныйРежим) И ЗначениеЗаполнено(СтруктураДатКонтроля.ДатаРозницаУведомительныйРежим) Тогда
			НоваяСтрока.ДатаРозницаУведомительныйРежим = СтруктураДатКонтроля.ДатаРозницаУведомительныйРежим;
			Записать = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(НоваяСтрока.ДатаОптКонтрольПоштучно) И ЗначениеЗаполнено(СтруктураДатКонтроля.ДатаОптКонтрольПоштучно) Тогда
			НоваяСтрока.ДатаОптКонтрольПоштучно = СтруктураДатКонтроля.ДатаОптКонтрольПоштучно;
			Записать = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(НоваяСтрока.ДатаОптКонтрольОСУ) И ЗначениеЗаполнено(СтруктураДатКонтроля.ДатаОптКонтрольОСУ) Тогда
			НоваяСтрока.ДатаОптКонтрольОСУ = СтруктураДатКонтроля.ДатаОптКонтрольОСУ;
			Записать = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(НоваяСтрока.ДатаЗапретПродажиНемаркированныхОстатков) И ЗначениеЗаполнено(СтруктураДатКонтроля.ДатаЗапретПродажиНемаркированныхОстатков) Тогда
			НоваяСтрока.ДатаЗапретПродажиНемаркированныхОстатков = СтруктураДатКонтроля.ДатаЗапретПродажиНемаркированныхОстатков;
			Записать = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьДанные_ЗаполнитьДатуКонтроляПеремещенийМеждуМОД(НаборЗаписей, СтруктураДатКонтроля, ВидПродукции, Записать)
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		НоваяСтрока = НаборЗаписей.Добавить();
		НоваяСтрока.ВидПродукции = ВидПродукции;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДатКонтроля);
		Записать = Истина;
		
	Иначе
		
		НоваяСтрока = НаборЗаписей[0];
		
		Если Не ЗначениеЗаполнено(НоваяСтрока.ДатаПрослеживаемостьПеремещенияМеждуМОД) И ЗначениеЗаполнено(СтруктураДатКонтроля.ДатаПрослеживаемостьПеремещенияМеждуМОД) Тогда
			НоваяСтрока.ДатаПрослеживаемостьПеремещенияМеждуМОД = СтруктураДатКонтроля.ДатаПрослеживаемостьПеремещенияМеждуМОД;
			Записать = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли