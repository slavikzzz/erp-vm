#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// СтандартныеПодсистемы.УправлениеДоступом
// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
//
// Параметры:
//  Ограничение - Структура:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                          Если пустая строка, значит, доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                          Если пустая строка, значит, доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                          если Истина, тогда не записывать ключи доступа,
//                                          а использовать ключи доступа владельца (требуется,
//                                          чтобы ограничение было строго по объекту-владельцу).
//   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - также
//                                          как у параметра ПоВладельцуБезЗаписиКлючейДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Менеджер = "РегистрСведений.ОперацииСПодключаемымОборудованием";
	МенеджерОборудованияВызовСервераПереопределяемый.ПриЗаполненииОграниченияДоступа(Менеджер, Ограничение);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецЕсли

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Выполняет удаление записей регистра за прошлые месяцы, для ускорения очистки
// 
// Параметры:
//   ДатаОчистки - Дата - Дата в месяце до которой будет выполнена очистка, 
//     удаление записей будет выполнено до конца месяца переданной даты.
Процедура ОчиститьРегистрЗаПрошлыеМесяцы(ДатаОчистки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ОперацииСПодключаемымОборудованием.ГодМесяц КАК ГодМесяц
		|ИЗ
		|	РегистрСведений.ОперацииСПодключаемымОборудованием КАК ОперацииСПодключаемымОборудованием
		|ГДЕ
		|	ОперацииСПодключаемымОборудованием.ГодМесяц < &ГодМесяцОчистки";
	
	ГодМесяцОчистки = Год(ДатаОчистки) * 100 + Месяц(ДатаОчистки);
	Запрос.УстановитьПараметр("ГодМесяцОчистки", ГодМесяцОчистки);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ОперацииСПодключаемымОборудованием");
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ГодМесяц","ГодМесяц");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		НаборЗаписей = СоздатьНаборЗаписей();
		Выборка      = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НаборЗаписей.Очистить();
			НаборЗаписей.Отбор.ГодМесяц.Установить(Выборка.ГодМесяц);
			НаборЗаписей.Записать(Истина);
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ОбщегоНазначенияБПО.ЗаписатьОшибкуВЖурналРегистрации(
			НСтр("ru = 'Очистка операций с оборудованием.';
				|en = 'Очистка операций с оборудованием.'", ОбщегоНазначенияБПО.КодОсновногоЯзыка()));
	КонецПопытки
	
КонецПроцедуры

// Выполняет удаление записей регистра в месяце переданной даты
// 
// Параметры:
//   ДатаОчистки - Дата - Дата до которой в месяце даты будет выполнена очистка
//     удаление записей будет выполнено с начала месяца, по переданную дату.
Процедура ОчиститьРегистрЗаТекущийМесяц(ДатаОчистки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОперацииСПодключаемымОборудованием.Дата КАК Дата,
		|	ОперацииСПодключаемымОборудованием.Оборудование КАК Оборудование
		|ИЗ
		|	РегистрСведений.ОперацииСПодключаемымОборудованием КАК ОперацииСПодключаемымОборудованием
		|ГДЕ
		|	ОперацииСПодключаемымОборудованием.ГодМесяц = &ГодМесяцОчистки
		|	И ОперацииСПодключаемымОборудованием.Дата < &ДатаОчистки";
	
	ГодМесяцОчистки = Год(ДатаОчистки) * 100 + Месяц(ДатаОчистки);
	Запрос.УстановитьПараметр("ГодМесяцОчистки", ГодМесяцОчистки);
	Запрос.УстановитьПараметр("ДатаОчистки",     ДатаОчистки);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ОперацииСПодключаемымОборудованием");
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Оборудование","Оборудование");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Дата","Дата");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		НаборЗаписей = СоздатьНаборЗаписей();
		Выборка      = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НаборЗаписей.Очистить();
			НаборЗаписей.Отбор.Оборудование.Установить(Выборка.Оборудование);
			НаборЗаписей.Отбор.Дата.Установить(Выборка.Дата);
			НаборЗаписей.Записать(Истина);
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ОбщегоНазначенияБПО.ЗаписатьОшибкуВЖурналРегистрации(
			НСтр("ru = 'Очистка операций с оборудованием.';
				|en = 'Очистка операций с оборудованием.'", ОбщегоНазначенияБПО.КодОсновногоЯзыка()));
	КонецПопытки
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли