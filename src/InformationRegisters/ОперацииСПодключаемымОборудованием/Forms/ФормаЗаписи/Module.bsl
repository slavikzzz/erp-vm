#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОригиналВходящихПараметров = Истина;
	ОригиналИсходящихПараметров = Истина;
	ЗаполнитьПараметры();
	Если Запись.Результат Тогда
		Операция = Запись.Операция;
	Иначе
		Операция = СтрШаблон(НСтр("ru = '%1 (ошибка выполнения)';
									|en = '%1 (ошибка выполнения)'"), Запись.Операция);
	Конецесли;
	
	Если Запись.Результат Тогда
		Элементы.ГруппаОшибка.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ФормаСообщениеВТехПоддержку.Видимость = ОбщегоНазначенияБПО.ИспользуетсяСообщенияВСлужбуТехническойПоддержки()
			И ОбщегоНазначенияБПОСлужебныйВызовСервера.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
			
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОригиналВходящихПараметровПриИзменении(Элемент)
	Если ОригиналВходящихПараметров Тогда
		ВходящиеПараметры = ВходящиеПараметрыФормат;
	Иначе
		ВходящиеПараметры = Запись.ВходящиеПараметры;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОригиналИсходящихПараметровПриИзменении(Элемент)
	Если ОригиналИсходящихПараметров Тогда
		ИсходящиеПараметры = ИсходящиеПараметрыФормат;
	Иначе
		ИсходящиеПараметры = Запись.ИсходящиеПараметры;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПараметры()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОперацииСПодключаемымОборудованием.ВходящиеПараметры КАК ВходящиеПараметры,
		|	ОперацииСПодключаемымОборудованием.ИсходящиеПараметры КАК ИсходящиеПараметры
		|ИЗ
		|	РегистрСведений.ОперацииСПодключаемымОборудованием КАК ОперацииСПодключаемымОборудованием
		|ГДЕ
		|	ОперацииСПодключаемымОборудованием.Оборудование = &Оборудование
		|	И ОперацииСПодключаемымОборудованием.Дата = &Дата
		|	И ОперацииСПодключаемымОборудованием.НомерОперации = &НомерОперации
		|	И ОперацииСПодключаемымОборудованием.ГодМесяц = &ГодМесяц";
	
	Запрос.УстановитьПараметр("ГодМесяц", Запись.ГодМесяц);
	Запрос.УстановитьПараметр("Дата", Запись.Дата);
	Запрос.УстановитьПараметр("НомерОперации", Запись.НомерОперации);
	Запрос.УстановитьПараметр("Оборудование", Запись.Оборудование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		//ВходящиеПараметрыОригинал = Выборка.ВходящиеПараметры.Получить();
		//ИсходящиеПараметрыОригинал = Выборка.ИсходящиеПараметры.Получить();
		Если ЗначениеЗаполнено(Запись.ВходящиеПараметры) Тогда
			ВходящиеПараметрыФормат = ЛогированиеОперацийБПО.ФорматПараметраЛогирования(Запись.ВходящиеПараметры);
		Иначе
			Элементы.ОригиналВходящихПараметров.Видимость = Ложь;
		КонецЕсли;
		Если ЗначениеЗаполнено(Запись.ИсходящиеПараметры) Тогда
			ИсходящиеПараметрыФормат = ЛогированиеОперацийБПО.ФорматПараметраЛогирования(Запись.ИсходящиеПараметры);
		Иначе
			Элементы.ОригиналИсходящихПараметров.Видимость = Ложь;
		КонецЕсли;
		
		ВходящиеПараметры = ВходящиеПараметрыФормат;
		ИсходящиеПараметры = ИсходящиеПараметрыФормат;
		//ВходящиеПараметры = УбратьМаскируемыеСимволы(Выборка.ВходящиеПараметры.Получить());
		//ИсходящиеПараметры = УбратьМаскируемыеСимволы(Выборка.ИсходящиеПараметры.Получить());
	КонецЦикла;
	
	
КонецПроцедуры

#КонецОбласти

