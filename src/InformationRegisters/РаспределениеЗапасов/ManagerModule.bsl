#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Склад)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - См. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.РаспределениеЗапасов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.17.95";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("d05af858-ca38-4f1b-a9fc-ae8050472af0");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.РаспределениеЗапасов.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Синхронизирует записи регистра сведений ""Распределение запасов"" с остатками в регистре накопления ""Запасы и потребности""';
									|en = 'Synchronizes records of the ""Inventory allocation"" information register with the balance in the ""Inventory and demands"" accumulation register'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыСведений.РаспределениеЗапасов.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ЗапасыИПотребности.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.РаспределениеЗапасов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.ЗапасыИПотребности.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = "РегистрСведений.РаспределениеЗапасов";
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.Вставить("ЭтоНезависимыйРегистрСведений", Истина);
	ДополнительныеПараметры.Вставить("ПолноеИмяРегистра", "РегистрСведений.РаспределениеЗапасов");
	
	Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Заказ КАК Заказ
		|ПОМЕСТИТЬ ОтрицательныеОстатки
		|ИЗ(
		|	ВЫБРАТЬ
		|		Остатки.Номенклатура КАК Номенклатура,
		|		Остатки.Характеристика КАК Характеристика,
		|		Остатки.Склад КАК Склад,
		|		Остатки.Назначение КАК Назначение,
		|		Остатки.Заказ КАК Заказ,
		|		Остатки.ДатаСобытия КАК ДатаСобытия
		|	ИЗ
		|		РегистрНакопления.ЗапасыИПотребности.Остатки КАК Остатки
		|	ГДЕ
		|		Остатки.ЗаказаноОстаток < 0
		|			ИЛИ Остатки.ПоступитОстаток < 0) КАК Таблица
		|ИНДЕКСИРОВАТЬ ПО
		|	Заказ
		|;
		|
		|/////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Движения.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ОшибкиВСуществующихДвиженияхДокументов
		|ИЗ
		|	РегистрНакопления.ЗапасыИПотребности КАК Движения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтрицательныеОстатки КАК ОтрицательныеОстатки
		|		ПО ОтрицательныеОстатки.Заказ = Движения.Заказ
		|ГДЕ
		|	Движения.Активность
		|		И Движения.Заказ <> НЕОПРЕДЕЛЕНО
		|		И Движения.Сторно
		|		И (Движения.Заказано < 0 ИЛИ Движения.Поступит < 0)
		|		И ТИПЗНАЧЕНИЯ(Движения.Регистратор) В(
		|			ТИП(Документ.СборкаТоваров),
		|			ТИП(Документ.ПоступлениеТоваровОтХранителя),
		|			ТИП(Документ.ПриемкаТоваровНаХранение),
		//++ НЕ УТ
		|			ТИП(Документ.ПроизводствоБезЗаказа),
		|			ТИП(Документ.ДвижениеПродукцииИМатериалов),
		//-- НЕ УТ
		|			ТИП(Документ.ПрочееОприходованиеТоваров),
		|			ТИП(Документ.ПеремещениеТоваров),
		|			ТИП(Документ.Сторно))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СторноДокументы.Ссылка КАК Регистратор
		|ИЗ
		|	Документ.Сторно КАК СторноДокументы
		|ГДЕ
		|	СторноДокументы.СторнируемыйДокумент.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровОтХранителя.ПустаяСсылка)
		|	И ИСТИНА В(
		|		ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА КАК ЕстьЗаписи
		|		ИЗ
		|			РегистрНакопления.ЗапасыИПотребности КАК ДанныеРегистра
		|				
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК СборкиТоваров
		|				ПО ДанныеРегистра.Заказ = СборкиТоваров.Ссылка
		|				 И СборкиТоваров.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.СборкаТоваров.ПустаяСсылка)
		|				
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровОтХранителя КАК ПоступленияТоваровОтХранителя
		|				ПО ДанныеРегистра.Заказ = ПоступленияТоваровОтХранителя.Ссылка
		|				 И ПоступленияТоваровОтХранителя.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровОтХранителя.ПустаяСсылка)
		|				
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриемкаТоваровНаХранение КАК ПриемкиТоваровНаХранение
		|				ПО ДанныеРегистра.Заказ = ПриемкиТоваровНаХранение.Ссылка
		|				 И ПриемкиТоваровНаХранение.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.ПриемкаТоваровНаХранение.ПустаяСсылка)
		|				
		//++ НЕ УТ
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа КАК ПроизводстваБезЗаказа
		|				ПО ДанныеРегистра.Заказ = ПроизводстваБезЗаказа.Ссылка
		|				 И ПроизводстваБезЗаказа.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.ПроизводствоБезЗаказа.ПустаяСсылка)
		|				
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов КАК ДвиженияПродукцииИМатериалов
		|				ПО ДанныеРегистра.Заказ = ДвиженияПродукцииИМатериалов.Ссылка
		|				 И ДвиженияПродукцииИМатериалов.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.ДвижениеПродукцииИМатериалов.ПустаяСсылка)
		//-- НЕ УТ
		|				
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК ПрочиеОприходованиеТоваров
		|				ПО ДанныеРегистра.Заказ = ПрочиеОприходованиеТоваров.Ссылка
		|				 И ПрочиеОприходованиеТоваров.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.ПрочееОприходованиеТоваров.ПустаяСсылка)
		|				
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещенияТоваров
		|				ПО ДанныеРегистра.Заказ = ПеремещенияТоваров.Ссылка
		|				 И ПеремещенияТоваров.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка)
		|		ГДЕ
		|			ДанныеРегистра.Регистратор = СторноДокументы.Ссылка
		// Исправляется ситуация, когда сторнировались расчетные записи
		|		 	И (ДанныеРегистра.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					И ДанныеРегистра.Сторно
		// Исправляется ошибка в тексте запроса движений, когда в качестве распоряжения в графике бралась ссылка на документ, а не на исправляемый документ
		|				ИЛИ НЕ СборкиТоваров.Ссылка ЕСТЬ NULL
		|				ИЛИ НЕ ПоступленияТоваровОтХранителя.Ссылка ЕСТЬ NULL
		|				ИЛИ НЕ ПриемкиТоваровНаХранение.Ссылка ЕСТЬ NULL
		//++ НЕ УТ
		|				ИЛИ НЕ ПроизводстваБезЗаказа.Ссылка ЕСТЬ NULL
		|				ИЛИ НЕ ДвиженияПродукцииИМатериалов.Ссылка ЕСТЬ NULL
		//-- НЕ УТ
		|				ИЛИ НЕ ПрочиеОприходованиеТоваров.Ссылка ЕСТЬ NULL
		|				ИЛИ НЕ ПеремещенияТоваров.Ссылка ЕСТЬ NULL))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СборкиТоваров.Ссылка КАК Регистратор
		|ИЗ
		|	Документ.СборкаТоваров КАК СборкиТоваров
		|	
		|ГДЕ
		|	СборкиТоваров.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.СборкаТоваров.ПустаяСсылка)
		|	И ИСТИНА В(
		|		ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА КАК ЕстьЗаписи
		|		ИЗ
		|			РегистрНакопления.ЗапасыИПотребности КАК ДанныеРегистра
		|		ГДЕ
		|			ДанныеРегистра.Регистратор = СборкиТоваров.Ссылка
		// Исправляется ситуация, когда сторнировались расчетные записи
		|		 	И (ДанныеРегистра.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					И ДанныеРегистра.Сторно
		// Исправляется ошибка в тексте запроса движений, когда в качестве распоряжения в графике бралась ссылка на документ, а не на исправляемый документ
		|				ИЛИ ТИПЗНАЧЕНИЯ(ДанныеРегистра.Заказ) = ТИП(Документ.СборкаТоваров)
		|					И ДанныеРегистра.Заказ <> ЗНАЧЕНИЕ(Документ.СборкаТоваров.ПустаяСсылка)
		|					И ДанныеРегистра.Заказ <> СборкиТоваров.ИсправляемыйДокумент))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоступленияТоваровОтХранителя.Ссылка КАК Регистратор
		|ИЗ
		|	Документ.ПоступлениеТоваровОтХранителя КАК ПоступленияТоваровОтХранителя
		|	
		|ГДЕ
		|	ПоступленияТоваровОтХранителя.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровОтХранителя.ПустаяСсылка)
		|	И ИСТИНА В(
		|		ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА КАК ЕстьЗаписи
		|		ИЗ
		|			РегистрНакопления.ЗапасыИПотребности КАК ДанныеРегистра
		|		ГДЕ
		|			ДанныеРегистра.Регистратор = ПоступленияТоваровОтХранителя.Ссылка
		// Исправляется ситуация, когда сторнировались расчетные записи
		|		 	И (ДанныеРегистра.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					И ДанныеРегистра.Сторно
		// Исправляется ошибка в тексте запроса движений, когда в качестве распоряжения в графике бралась ссылка на документ, а не на исправляемый документ
		|				ИЛИ ТИПЗНАЧЕНИЯ(ДанныеРегистра.Заказ) = ТИП(Документ.ПоступлениеТоваровОтХранителя)
		|					И ДанныеРегистра.Заказ <> ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровОтХранителя.ПустаяСсылка)
		|					И ДанныеРегистра.Заказ <> ПоступленияТоваровОтХранителя.ИсправляемыйДокумент))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПриемкиТоваровНаХранение.Ссылка КАК Регистратор
		|ИЗ
		|	Документ.ПриемкаТоваровНаХранение КАК ПриемкиТоваровНаХранение
		|	
		|ГДЕ
		|	ПриемкиТоваровНаХранение.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.ПриемкаТоваровНаХранение.ПустаяСсылка)
		|	И ИСТИНА В(
		|		ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА КАК ЕстьЗаписи
		|		ИЗ
		|			РегистрНакопления.ЗапасыИПотребности КАК ДанныеРегистра
		|		ГДЕ
		|			ДанныеРегистра.Регистратор = ПриемкиТоваровНаХранение.Ссылка
		// Исправляется ситуация, когда сторнировались расчетные записи
		|		 	И (ДанныеРегистра.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					И ДанныеРегистра.Сторно
		// Исправляется ошибка в тексте запроса движений, когда в качестве распоряжения в графике бралась ссылка на документ, а не на исправляемый документ
		|				ИЛИ ТИПЗНАЧЕНИЯ(ДанныеРегистра.Заказ) = ТИП(Документ.ПриемкаТоваровНаХранение)
		|					И ДанныеРегистра.Заказ <> ЗНАЧЕНИЕ(Документ.ПриемкаТоваровНаХранение.ПустаяСсылка)
		|					И ДанныеРегистра.Заказ <> ПриемкиТоваровНаХранение.ИсправляемыйДокумент))
		|
		//++ НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПроизводстваБезЗаказа.Ссылка КАК Регистратор
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа КАК ПроизводстваБезЗаказа
		|	
		|ГДЕ
		|	ПроизводстваБезЗаказа.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.ПроизводствоБезЗаказа.ПустаяСсылка)
		|	И ИСТИНА В(
		|		ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА КАК ЕстьЗаписи
		|		ИЗ
		|			РегистрНакопления.ЗапасыИПотребности КАК ДанныеРегистра
		|		ГДЕ
		|			ДанныеРегистра.Регистратор = ПроизводстваБезЗаказа.Ссылка
		// Исправляется ситуация, когда сторнировались расчетные записи
		|		 	И (ДанныеРегистра.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					И ДанныеРегистра.Сторно
		// Исправляется ошибка в тексте запроса движений, когда в качестве распоряжения в графике бралась ссылка на документ, а не на исправляемый документ
		|				ИЛИ ТИПЗНАЧЕНИЯ(ДанныеРегистра.Заказ) = ТИП(Документ.ПроизводствоБезЗаказа)
		|					И ДанныеРегистра.Заказ <> ЗНАЧЕНИЕ(Документ.ПроизводствоБезЗаказа.ПустаяСсылка)
		|					И ДанныеРегистра.Заказ <> ПроизводстваБезЗаказа.ИсправляемыйДокумент))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДвиженияПродукцииИМатериалов.Ссылка КАК Регистратор
		|ИЗ
		|	Документ.ДвижениеПродукцииИМатериалов КАК ДвиженияПродукцииИМатериалов
		|	
		|ГДЕ
		|	ДвиженияПродукцииИМатериалов.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.ДвижениеПродукцииИМатериалов.ПустаяСсылка)
		|	И ИСТИНА В(
		|		ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА КАК ЕстьЗаписи
		|		ИЗ
		|			РегистрНакопления.ЗапасыИПотребности КАК ДанныеРегистра
		|		ГДЕ
		|			ДанныеРегистра.Регистратор = ДвиженияПродукцииИМатериалов.Ссылка
		// Исправляется ситуация, когда сторнировались расчетные записи
		|		 	И (ДанныеРегистра.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					И ДанныеРегистра.Сторно
		// Исправляется ошибка в тексте запроса движений, когда в качестве распоряжения в графике бралась ссылка на документ, а не на исправляемый документ
		|				ИЛИ ТИПЗНАЧЕНИЯ(ДанныеРегистра.Заказ) = ТИП(Документ.ДвижениеПродукцииИМатериалов)
		|					И ДанныеРегистра.Заказ <> ЗНАЧЕНИЕ(Документ.ДвижениеПродукцииИМатериалов.ПустаяСсылка)
		|					И ДанныеРегистра.Заказ <> ДвиженияПродукцииИМатериалов.ИсправляемыйДокумент))
		//-- НЕ УТ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПрочиеОприходованиеТоваров.Ссылка КАК Регистратор
		|ИЗ
		|	Документ.ПрочееОприходованиеТоваров КАК ПрочиеОприходованиеТоваров
		|	
		|ГДЕ
		|	ПрочиеОприходованиеТоваров.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.ПрочееОприходованиеТоваров.ПустаяСсылка)
		|	И ИСТИНА В(
		|		ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА КАК ЕстьЗаписи
		|		ИЗ
		|			РегистрНакопления.ЗапасыИПотребности КАК ДанныеРегистра
		|		ГДЕ
		|			ДанныеРегистра.Регистратор = ПрочиеОприходованиеТоваров.Ссылка
		// Исправляется ситуация, когда сторнировались расчетные записи
		|		 	И (ДанныеРегистра.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					И ДанныеРегистра.Сторно
		// Исправляется ошибка в тексте запроса движений, когда в качестве распоряжения в графике бралась ссылка на документ, а не на исправляемый документ
		|				ИЛИ ТИПЗНАЧЕНИЯ(ДанныеРегистра.Заказ) = ТИП(Документ.ПрочееОприходованиеТоваров)
		|					И ДанныеРегистра.Заказ <> ЗНАЧЕНИЕ(Документ.ПрочееОприходованиеТоваров.ПустаяСсылка)
		|					И ДанныеРегистра.Заказ <> ПрочиеОприходованиеТоваров.ИсправляемыйДокумент))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПеремещенияТоваров.Ссылка КАК Регистратор
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ПеремещенияТоваров
		|	
		|ГДЕ
		|	ПеремещенияТоваров.ИсправляемыйДокумент <> ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка)
		|	И ИСТИНА В(
		|		ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА КАК ЕстьЗаписи
		|		ИЗ
		|			РегистрНакопления.ЗапасыИПотребности КАК ДанныеРегистра
		|		ГДЕ
		|			ДанныеРегистра.Регистратор = ПеремещенияТоваров.Ссылка
		// Исправляется ситуация, когда сторнировались расчетные записи
		|		 	И (ДанныеРегистра.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					И ДанныеРегистра.Сторно
		// Исправляется ошибка в тексте запроса движений, когда в качестве распоряжения в графике бралась ссылка на документ, а не на исправляемый документ
		|				ИЛИ ТИПЗНАЧЕНИЯ(ДанныеРегистра.Заказ) = ТИП(Документ.ПеремещениеТоваров)
		|					И ДанныеРегистра.Заказ <> ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка)
		|					И ДанныеРегистра.Заказ <> ПеремещенияТоваров.ИсправляемыйДокумент))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПриобретенияТоваровУслуг.Ссылка КАК Регистратор
		|ИЗ
		|	Документ.ПриобретениеТоваровУслуг КАК ПриобретенияТоваровУслуг
		|ГДЕ
		|	ПриобретенияТоваровУслуг.Проведен
		|		И ПриобретенияТоваровУслуг.ХозяйственнаяОперация В(
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути))
		|		И ИСТИНА В(
		|			ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА КАК ЕстьНеверныеДвижения
		|			ИЗ
		|				РегистрНакопления.ЗапасыИПотребности КАК Движения
		|			ГДЕ
		|				Движения.Регистратор = ПриобретенияТоваровУслуг.Ссылка
		// Исправляется ситуация, когда при двухходовой схеме оформления закупок документ приобретения делал движения по работам
		|				И (Движения.Склад = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|						И Движения.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		// Исправляется ситуация, когда при двухходовой схеме вариант приемки по договорам или соглашениям а график открывался по заказу или накладной
		|					ИЛИ ПриобретенияТоваровУслуг.ВариантПриемкиТоваров В(
		|							ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоЗаказамИНакладным),
		|							ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.МожетПроисходитьБезЗаказовИНакладных),
		|							ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоНакладным))
		|						И Движения.Заказано > 0
		|						И Движения.Заказ <> ПриобретенияТоваровУслуг.Соглашение
		|					ИЛИ ПриобретенияТоваровУслуг.ВариантПриемкиТоваров В(
		|							ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамБезЗаказовИНакладных),
		|							ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамПослеЗаказовИлиНакладных),
		|							ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамПослеНакладных))
		|						И Движения.Заказано > 0
		|						И Движения.Заказ <> ПриобретенияТоваровУслуг.Договор))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказыПоставщику.Ссылка КАК Регистратор
		|ИЗ
		|	Документ.ЗаказПоставщику КАК ЗаказыПоставщику
		|ГДЕ
		|	ЗаказыПоставщику.Проведен
		|		И ЗаказыПоставщику.ХозяйственнаяОперация В(
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути))
		|		И ИСТИНА В(
		|			ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА КАК ЕстьНеверныеДвижения
		|			ИЗ
		|				РегистрНакопления.ЗапасыИПотребности КАК Движения
		|			ГДЕ
		|				Движения.Регистратор = ЗаказыПоставщику.Ссылка
		// Исправляется ситуация, когда при двухходовой схеме вариант приемки по договорам или соглашениям а график открывался по заказу
		|				И (ЗаказыПоставщику.ВариантПриемкиТоваров В(
		|							ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоЗаказамИНакладным),
		|							ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.МожетПроисходитьБезЗаказовИНакладных),
		|							ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоНакладным))
		|						И Движения.Заказано > 0
		|						И Движения.Заказ <> ЗаказыПоставщику.Соглашение
		|					ИЛИ ЗаказыПоставщику.ВариантПриемкиТоваров В(
		|							ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамБезЗаказовИНакладных),
		|							ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамПослеЗаказовИлиНакладных),
		|							ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамПослеНакладных))
		|						И Движения.Заказано > 0
		|						И Движения.Заказ <> ЗаказыПоставщику.Договор))
		|;
		|
		|ВЫБРАТЬ
		|	ОстаткиПоДвижениям.Номенклатура КАК Номенклатура,
		|	ОстаткиПоДвижениям.Характеристика КАК Характеристика,
		|	ОстаткиПоДвижениям.Склад КАК Склад,
		|	ОстаткиПоДвижениям.Назначение КАК Назначение,
		|	ОстаткиПоДвижениям.Заказ КАК Заказ,
		|	ОстаткиПоДвижениям.ДатаСобытия КАК ДатаСобытия,
		|	ОстаткиПоДвижениям.ВНаличииОстаток КАК ВНаличии,
		|	ОстаткиПоДвижениям.ПоступитОстаток КАК Поступит,
		|	ОстаткиПоДвижениям.ЗаказаноОстаток КАК Заказано,
		|	ОстаткиПоДвижениям.РезервироватьНаСкладеОстаток КАК РезервироватьНаСкладе,
		|	ОстаткиПоДвижениям.РезервироватьПоМереПоступленияОстаток КАК РезервироватьПоМереПоступления,
		|	ОстаткиПоДвижениям.ОтложитьРезервированиеОстаток КАК ОтложитьРезервирование,
		|	ОстаткиПоДвижениям.КОбеспечениюОстаток КАК КОбеспечению,
		|	ОстаткиПоДвижениям.НеОбеспечиватьОстаток КАК НеОбеспечивать
		|ПОМЕСТИТЬ ОстаткиПоДвижениям
		|ИЗ
		|	РегистрНакопления.ЗапасыИПотребности.Остатки КАК ОстаткиПоДвижениям
		|ГДЕ
		|	ОстаткиПоДвижениям.ВНаличииОстаток <> 0
		|		ИЛИ ОстаткиПоДвижениям.ПоступитОстаток <> 0
		|		ИЛИ ОстаткиПоДвижениям.ЗаказаноОстаток <> 0
		|		ИЛИ ОстаткиПоДвижениям.РезервироватьНаСкладеОстаток <> 0
		|		ИЛИ ОстаткиПоДвижениям.РезервироватьПоМереПоступленияОстаток <> 0
		|		ИЛИ ОстаткиПоДвижениям.ОтложитьРезервированиеОстаток <> 0
		|		ИЛИ ОстаткиПоДвижениям.КОбеспечениюОстаток <> 0
		|		ИЛИ ОстаткиПоДвижениям.НеОбеспечиватьОстаток <> 0
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, Заказ, ДатаСобытия
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиПоДвижениям.Номенклатура КАК Номенклатура,
		|	ОстаткиПоДвижениям.Характеристика КАК Характеристика,
		|	ОстаткиПоДвижениям.Склад КАК Склад,
		|	СУММА(ОстаткиПоДвижениям.ВНаличии) КАК ВНаличии
		|ПОМЕСТИТЬ ВНаличииПоДвижениям
		|ИЗ
		|	ОстаткиПоДвижениям КАК ОстаткиПоДвижениям
		|ГДЕ
		|	ОстаткиПоДвижениям.Заказ = НЕОПРЕДЕЛЕНО
		|	И ОстаткиПоДвижениям.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
		|	И ОстаткиПоДвижениям.ВНаличии <> 0
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиПоДвижениям.Номенклатура,
		|	ОстаткиПоДвижениям.Характеристика,
		|	ОстаткиПоДвижениям.Склад
		|ИМЕЮЩИЕ
		|	СУММА(ОстаткиПоДвижениям.ВНаличии) <> 0
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Набор.Номенклатура КАК Номенклатура,
		|	Набор.Характеристика КАК Характеристика,
		|	Набор.Склад КАК Склад,
		|	Набор.Назначение КАК Назначение
		|ИЗ
		|	(ВЫБРАТЬ
		|		Движения.Номенклатура КАК Номенклатура,
		|		Движения.Характеристика КАК Характеристика,
		|		Движения.Склад КАК Склад,
		|		Движения.Назначение КАК Назначение
		|	ИЗ
		|		ОшибкиВСуществующихДвиженияхДокументов КАК Документы
		|			
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыИПотребности КАК Движения
		|			ПО Движения.Регистратор = Документы.Регистратор
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Движения.Номенклатура КАК Номенклатура,
		|		Движения.Характеристика КАК Характеристика,
		|		Движения.Склад КАК Склад,
		|		Движения.Назначение КАК Назначение
		|	ИЗ
		|		ОстаткиПоДвижениям КАК Движения
		|		
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВНаличииПоДвижениям КАК ВНаличииПоДвижениям
		|			ПО ВНаличииПоДвижениям.Номенклатура = Движения.Номенклатура
		|			 И ВНаличииПоДвижениям.Характеристика = Движения.Характеристика
		|			 И ВНаличииПоДвижениям.Склад = Движения.Склад
		|			 И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Движения.Назначение
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК Сведения
		|			ПО Сведения.Номенклатура = Движения.Номенклатура
		|			 И Сведения.Характеристика = Движения.Характеристика
		|			 И Сведения.Склад = Движения.Склад
		|			 И Сведения.Назначение = Движения.Назначение
		|			 И (
						// Расхождения в наличии.
		|				ЕСТЬNULL(ВНаличииПоДвижениям.ВНаличии, 0) <> 0
		|						И Движения.Заказ = НЕОПРЕДЕЛЕНО
		|						И Движения.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
		|						И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
		|						И Сведения.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
		|						И Сведения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
		|						И Сведения.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
		|						И Сведения.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1)
		|						И Сведения.ВНаличии = ЕСТЬNULL(ВНаличииПоДвижениям.ВНаличии, 0)
						// Расхождения запаса на складе.
		|					ИЛИ Движения.ВНаличии <> 0
		|						И Движения.Заказ = НЕОПРЕДЕЛЕНО
		|						И Движения.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
		|						И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
		|						И Сведения.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
		|						И Сведения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
		|						И Сведения.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
		|						И Сведения.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1)
		|						И Сведения.Запас = Движения.ВНаличии
							// Расхождения ожидаемых поступлений.
		|					ИЛИ Движения.Поступит <> 0
		|						И Движения.Заказ <> НЕОПРЕДЕЛЕНО
		|						И Движения.ДатаСобытия <> ДАТАВРЕМЯ(1, 1, 1)
		|						И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление)
		|						И Сведения.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
		|						И Сведения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
		|						И Сведения.ЗаказНаПоступление = Движения.Заказ
		|						И Сведения.ДатаПоступления = Движения.ДатаСобытия
		|						И Сведения.Запас = Движения.Поступит
							// Расхождения запланированных поступлений.
		|					ИЛИ Движения.Заказано <> 0 И Движения.Заказано - Движения.Поступит > 0
		|						И Движения.Заказ <> НЕОПРЕДЕЛЕНО
		|						И Движения.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
		|						И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное)
		|						И Сведения.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
		|						И Сведения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
		|						И Сведения.ЗаказНаПоступление = Движения.Заказ
		|						И Сведения.ДатаПоступления = Движения.ДатаСобытия
		|						И Сведения.Запас = Движения.Заказано - Движения.Поступит
							// Расхождения ожидаемых отгрузок.
		|					ИЛИ (Движения.РезервироватьНаСкладе <> 0
		|							ИЛИ Движения.РезервироватьПоМереПоступления <> 0
		|							ИЛИ Движения.ОтложитьРезервирование <> 0
		|							ИЛИ Движения.КОбеспечению <> 0
		|							ИЛИ Движения.НеОбеспечивать <> 0)
		|						И Движения.Заказ <> НЕОПРЕДЕЛЕНО
		|						И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
		|						И Сведения.ЗаказНаОтгрузку = Движения.Заказ
		|						И Сведения.ЖелаемаяДатаОтгрузки = Движения.ДатаСобытия
		|						И Сведения.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
		|						И Сведения.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1)
		|						И Сведения.Резервировать = Движения.РезервироватьНаСкладе
		|						И Сведения.РезервироватьПоМереПоступления = Движения.РезервироватьПоМереПоступления
		|						И Сведения.ОтложитьРезервирование = Движения.ОтложитьРезервирование
		|						И Сведения.КОбеспечениюБезРезерва = Движения.КОбеспечению
		|						И Сведения.НеОбеспечивать = Движения.НеОбеспечивать)
		|	ГДЕ
		|		(ЕСТЬNULL(ВНаличииПоДвижениям.ВНаличии, 0) <> 0
		|					И Движения.Заказ = НЕОПРЕДЕЛЕНО
		|					И Движения.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ Движения.ВНаличии <> 0
		|					И Движения.Заказ = НЕОПРЕДЕЛЕНО
		|					И Движения.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ Движения.Поступит <> 0
		|					И Движения.Заказ <> НЕОПРЕДЕЛЕНО
		|					И Движения.ДатаСобытия <> ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ Движения.Заказано <> 0 И Движения.Заказано - Движения.Поступит > 0
		|					И Движения.Заказ <> НЕОПРЕДЕЛЕНО
		|					И Движения.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ (Движения.РезервироватьНаСкладе <> 0
		|						ИЛИ Движения.РезервироватьПоМереПоступления <> 0
		|						ИЛИ Движения.ОтложитьРезервирование <> 0
		|						ИЛИ Движения.КОбеспечению <> 0
		|						ИЛИ Движения.НеОбеспечивать <> 0)
		|					И Движения.Заказ <> НЕОПРЕДЕЛЕНО)
		|				И Сведения.Номенклатура ЕСТЬ NULL
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Сведения.Номенклатура КАК Номенклатура,
		|		Сведения.Характеристика КАК Характеристика,
		|		Сведения.Склад КАК Склад,
		|		Сведения.Назначение КАК Назначение
		|	ИЗ
		|		РегистрСведений.РаспределениеЗапасов КАК Сведения
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВНаличииПоДвижениям КАК ВНаличииПоДвижениям
		|			ПО ВНаличииПоДвижениям.Номенклатура = Сведения.Номенклатура
		|			 И ВНаличииПоДвижениям.Характеристика = Сведения.Характеристика
		|			 И ВНаличииПоДвижениям.Склад = Сведения.Склад
		|			 И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Сведения.Назначение
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоДвижениям КАК Движения
		|			ПО Движения.Номенклатура = Сведения.Номенклатура
		|			 И Движения.Характеристика = Сведения.Характеристика
		|			 И Движения.Склад = Сведения.Склад
		|			 И Движения.Назначение = Сведения.Назначение
		|			 И (
						// Расхождения запаса на складе.
		|					Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
		|						И Сведения.Запас <> 0
		|						И Движения.Заказ = НЕОПРЕДЕЛЕНО
		|						И Движения.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
		|						И Движения.ВНаличии = Сведения.Запас
							// Расхождения ожидаемых поступлений.
		|					ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление)
		|						И Сведения.Запас <> 0
		|						И Движения.Заказ = Сведения.ЗаказНаПоступление
		|						И Движения.ДатаСобытия = Сведения.ДатаПоступления
		|						И Движения.Поступит = Сведения.Запас
							// Расхождения запланированных поступлений.
		|					ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное)
		|						И Сведения.Запас <> 0
		|						И Движения.Заказ = Сведения.ЗаказНаПоступление
		|						И Движения.ДатаСобытия = Сведения.ДатаПоступления
		|						И Движения.Заказано <> 0 И Движения.Заказано - Движения.Поступит = Сведения.Запас
							// Расхождения ожидаемых отгрузок.
		|					ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
		|						И Движения.Заказ = Сведения.ЗаказНаОтгрузку
		|						И Движения.ДатаСобытия = Сведения.ЖелаемаяДатаОтгрузки
		|						И Движения.РезервироватьНаСкладе = Сведения.Резервировать
		|						И Движения.РезервироватьПоМереПоступления = Сведения.РезервироватьПоМереПоступления
		|						И Движения.ОтложитьРезервирование = Сведения.ОтложитьРезервирование
		|						И Движения.КОбеспечению = Сведения.КОбеспечениюБезРезерва
		|						И Движения.НеОбеспечивать = Сведения.НеОбеспечивать)
		|	ГДЕ
		|		(Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
		|					И Сведения.Запас <> 0
		|				ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление)
		|					И Сведения.Запас <> 0
		|				ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное)
		|					И Сведения.Запас <> 0
		|				ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка))
		|			И Движения.Номенклатура ЕСТЬ NULL
		|		ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
		|				И Сведения.ВНаличии <> 0
		|				И ВНаличииПоДвижениям.Номенклатура ЕСТЬ NULL
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВНаличииПоДвижениям.Номенклатура КАК Номенклатура,
		|		ВНаличииПоДвижениям.Характеристика КАК Характеристика,
		|		ВНаличииПоДвижениям.Склад КАК Склад,
		|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение
		|	ИЗ
		|		ВНаличииПоДвижениям КАК ВНаличииПоДвижениям
		|		
		|			ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоДвижениям КАК Движения
		|			ПО Движения.Номенклатура = ВНаличииПоДвижениям.Номенклатура
		|			 И Движения.Характеристика = ВНаличииПоДвижениям.Характеристика
		|			 И Движения.Склад = ВНаличииПоДвижениям.Склад
		|			 И Движения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК Сведения
		|			ПО Сведения.Номенклатура = ВНаличииПоДвижениям.Номенклатура
		|			 И Сведения.Характеристика = ВНаличииПоДвижениям.Характеристика
		|			 И Сведения.Склад = ВНаличииПоДвижениям.Склад
		|			 И Сведения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
					// Расхождения в наличии.
		|			 И (Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
		|					И Сведения.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
		|					И Сведения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
		|					И Сведения.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
		|					И Сведения.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1)
		|					И Сведения.ВНаличии = ВНаличииПоДвижениям.ВНаличии)
		|	ГДЕ
		|		Движения.Номенклатура ЕСТЬ NULL
		|			И ВНаличииПоДвижениям.ВНаличии <> 0
		|			И Сведения.Номенклатура ЕСТЬ NULL
		//++ НЕ УТКА
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Движения.Номенклатура КАК Номенклатура,
		|		Движения.Характеристика КАК Характеристика,
		|		Движения.Склад КАК Склад,
		|		Движения.Назначение КАК Назначение
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ТабЧасть.Ссылка         КАК Регистратор,
		|			ТабЧасть.Номенклатура   КАК Номенклатура,
		|			ТабЧасть.Характеристика КАК Характеристика,
		|			ТабЧасть.Подразделение  КАК Склад,
		|			ТабЧасть.Назначение     КАК Назначение,
		|			ТабЧасть.Количество     КАК Количество
		|		ИЗ
		|			Документ.ОтчетДавальцу2_5.Продукция КАК ТабЧасть
		|		ГДЕ
		|			ТабЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			И (ТабЧасть.КодСтроки = 0
		|				ИЛИ НЕ ТабЧасть.Ссылка.ОтчетПоЗаказам)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			Движения.Регистратор    КАК Регистратор,
		|			Движения.Номенклатура   КАК Номенклатура,
		|			Движения.Характеристика КАК Характеристика,
		|			Движения.Склад          КАК Склад,
		|			Движения.Назначение     КАК Назначение,
		|			-Движения.ВНаличии      КАК Количество
		|		ИЗ
		|			РегистрНакопления.ЗапасыИПотребности КАК Движения
		|		ГДЕ
		|			ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ОтчетДавальцу2_5)
		|			И Движения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|		) КАК Движения
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Движения.Регистратор,
		|		Движения.Номенклатура,
		|		Движения.Характеристика,
		|		Движения.Склад,
		|		Движения.Назначение
		|	
		|	ИМЕЮЩИЕ
		|		СУММА(Движения.Количество) < 0
		//-- НЕ УТКА
		|) КАК Набор
		|";
	
	Запрос = Новый Запрос(Текст);
	РегистрируемыеИзмерения = Запрос.Выполнить().Выгрузить();
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, РегистрируемыеИзмерения, ДополнительныеПараметры);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Акты.Ссылка КАК Ссылка,
		|	Акты.СкладПолучатель КАК СкладПолучатель
		|ПОМЕСТИТЬ АктыВозвратБезОформления
		|ИЗ
		|	Документ.АктОРасхожденияхПослеПеремещения КАК Акты
		|ГДЕ
		|	Акты.Проведен
		|	И Акты.Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	И Акты.СкладПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении
		|	И Акты.СкладПолучатель.ДатаНачалаОрдернойСхемыПриПоступлении <= Акты.Дата
		// Исправляется ситуация, когда акт о расхождениях после перемещения не списывал возвращаемый излишек товара со склада оприходованный по ордерной схеме приемки.
		|	И ИСТИНА В(
		|		ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА КАК ЕстьВозвратБезОформления
		|		ИЗ
		|			Документ.АктОРасхожденияхПослеПеремещения.Товары КАК ТабЧасть
		|		ГДЕ
		|			ТабЧасть.Ссылка = Акты.Ссылка
		|			И ТабЧасть.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ОприходоватьСейчас))
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка, СкладПолучатель
		|;
		|
		|///////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриобретенияТоваровУслуг.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ПриобретенияБезГрафика
		|ИЗ
		|	Документ.ПриобретениеТоваровУслуг КАК ПриобретенияТоваровУслуг
		|ГДЕ
		|	ПриобретенияТоваровУслуг.Проведен
		|		И ПриобретенияТоваровУслуг.ПоступлениеПоЗаказам
		|		И ПриобретенияТоваровУслуг.ХозяйственнаяОперация В(
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки))
		|		И ПриобретенияТоваровУслуг.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
		|		И ИСТИНА В(
		|			ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА КАК ЕстьСтроки
		|			ИЗ
		|				Документ.ПриобретениеТоваровУслуг.Товары КАК Товары
		|			ГДЕ
		|				Товары.Ссылка = ПриобретенияТоваровУслуг.Ссылка
		|				И НЕ Товары.СписатьНаРасходы
		|				И Товары.КодСтроки <> 0
		|				И Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
		|		И НЕ ИСТИНА В(
		|			ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА КАК ЕстьДвижения
		|			ИЗ
		|				РегистрНакопления.ЗапасыИПотребности КАК Движения
		|			ГДЕ
		|				Движения.Регистратор = ПриобретенияТоваровУслуг.Ссылка
		// Исправляется ситуация, когда при двухходовой схеме оформления закупок нет движения по открытию графика поступления работы при приемке по накладным
		|				И Движения.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И Движения.Заказано > 0)
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|///////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Акты.Ссылка КАК Ссылка,
		|	Акты.СкладПолучатель КАК СкладПолучатель
		|ПОМЕСТИТЬ АктыБезЗакрытияГрафика
		|ИЗ
		|	Документ.АктОРасхожденияхПослеПеремещения КАК Акты
		|ГДЕ
		|	Акты.Проведен
		|	И Акты.Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	И Акты.СкладПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении
		|	И Акты.СкладПолучатель.ДатаНачалаОрдернойСхемыПриПоступлении <= Акты.Дата
		// Исправляется ситуация, когда акт о расхождениях после перемещения не корректировал график поступления на ордерный склад
		|	И ИСТИНА В(
		|		ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА КАК ЕстьСтрокиДляЗакрытияГрафика
		|		ИЗ
		|			Документ.АктОРасхожденияхПослеПеремещения.Товары КАК ТабЧасть
		|		ГДЕ
		|			ТабЧасть.Ссылка = Акты.Ссылка
		|			И ТабЧасть.Действие В(
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.НедостачаНеПризнана),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПерепоставленноеДарится),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ОприходоватьСейчас)))
		|	И НЕ ИСТИНА В(
		|		ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА КАК ЕстьДвиженияПоЗакрытиюГрафика
		|		ИЗ
		|			РегистрНакопления.ЗапасыИПотребности КАК Движения
		|		ГДЕ
		|			Движения.Регистратор = Акты.Ссылка
		|			И Движения.Склад = Акты.СкладПолучатель
		|			И Движения.Активность
		|			И Движения.ЗакрытьГрафикПоступления <> 0)
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка, СкладПолучатель
		|;
		|
		|///////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Расхождения.Номенклатура КАК Номенклатура,
		|	Расхождения.Характеристика КАК Характеристика,
		|	Расхождения.Назначение КАК Назначение,
		|	Расхождения.Склад КАК Склад
		|ПОМЕСТИТЬ АналитикиСНазначением
		|ИЗ (
		|	ВЫБРАТЬ
		|		Акты.Ссылка КАК Регистратор,
		|		ТабЧасть.Номенклатура КАК Номенклатура,
		|		ТабЧасть.Характеристика КАК Характеристика,
		|		ТабЧасть.Назначение КАК Назначение,
		|		Акты.СкладПолучатель КАК Склад,
		|		-(ТабЧасть.Количество - ТабЧасть.КоличествоПоДокументу) КАК ПриходПоДокументу,
		|		0 КАК ПриходПоРегистру
		|	ИЗ
		|		АктыВозвратБезОформления КАК Акты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПослеПеремещения.Товары КАК ТабЧасть
		|			ПО ТабЧасть.Ссылка = Акты.Ссылка
		|			 И ТабЧасть.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ОприходоватьСейчас)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Акты.Ссылка КАК Регистратор,
		|		ТабЧасть.Номенклатура КАК Номенклатура,
		|		ТабЧасть.Характеристика КАК Характеристика,
		|		ТабЧасть.Назначение КАК Назначение,
		|		Акты.СкладПолучатель КАК Склад,
		|		ТабЧасть.КоличествоПоДокументу - ТабЧасть.Количество КАК ПриходПоДокументу,
		|		0 КАК ПриходПоРегистру
		|	ИЗ
		|		АктыВозвратБезОформления КАК Акты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПослеПеремещения.Товары КАК ТабЧасть
		|			ПО ТабЧасть.Ссылка = Акты.Ссылка
		|	ГДЕ
		|		(НЕ Акты.СкладПолучатель.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
		|			ИЛИ Акты.СкладПолучатель.ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач > ТабЧасть.Ссылка.Дата)
		|		И ТабЧасть.Действие В(
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.НедостачаНеПризнана),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПерепоставленноеДарится))
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Движения.Регистратор КАК Регистратор,
		|		Движения.Номенклатура КАК Номенклатура,
		|		Движения.Характеристика КАК Характеристика,
		|		Движения.Назначение КАК Назначение,
		|		Движения.Склад КАК Склад,
		|		0 КАК ПриходПоДокументу,
		|		ВЫБОР
		|			КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА Движения.ВНаличии
		|			ИНАЧЕ - Движения.ВНаличии
		|		КОНЕЦ КАК ПриходПоРегистру
		|	ИЗ
		|		АктыВозвратБезОформления КАК Акты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыИПотребности КАК Движения
		|			ПО Движения.Регистратор = Акты.Ссылка
		|			 И Движения.Активность
		|			 И Движения.ВНаличии <> 0
		|			 И Движения.Склад = Акты.СкладПолучатель) КАК Расхождения
		|СГРУППИРОВАТЬ ПО
		|	Расхождения.Регистратор,
		|	Расхождения.Номенклатура,
		|	Расхождения.Характеристика,
		|	Расхождения.Назначение,
		|	Расхождения.Склад
		|ИМЕЮЩИЕ
		|	СУММА(Расхождения.ПриходПоДокументу) <> СУММА(Расхождения.ПриходПоРегистру)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Назначение КАК Назначение,
		|	Акты.СкладПолучатель КАК Склад
		|ИЗ
		|	АктыБезЗакрытияГрафика КАК Акты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПослеПеремещения.Товары КАК ТабЧасть
		|		ПО ТабЧасть.Ссылка = Акты.Ссылка
		|		И ТабЧасть.Действие В(
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.НедостачаНеПризнана),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПерепоставленноеДарится),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ОприходоватьСейчас))
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Назначение КАК Назначение,
		|	ТабЧасть.Склад КАК Склад
		|ИЗ
		|	ПриобретенияБезГрафика КАК Приобретения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ТабЧасть
		|		ПО ТабЧасть.Ссылка = Приобретения.Ссылка
		|		И НЕ ТабЧасть.СписатьНаРасходы
		|ИНДЕКСИРОВАТЬ ПО
		|	Назначение
		|;
		|
		|/////////////////////////////
		|ВЫБРАТЬ
		|	Аналитики.Номенклатура КАК Номенклатура,
		|	Аналитики.Характеристика КАК Характеристика,
		|	Аналитики.Назначение КАК Назначение,
		|	Аналитики.Склад КАК Склад
		|ИЗ
		|	АналитикиСНазначением КАК Аналитики
		|ГДЕ
		|	Аналитики.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Аналитики.Номенклатура КАК Номенклатура,
		|	Аналитики.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	Аналитики.Склад КАК Склад
		|ИЗ
		|	АналитикиСНазначением КАК Аналитики";
	РегистрируемыеИзмерения = Запрос.Выполнить().Выгрузить();
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, РегистрируемыеИзмерения, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.РаспределениеЗапасов";
	
	Если Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра) Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Неопределено, "РегистрНакопления.ЗапасыИПотребности") Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;

	ТаблицаОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	Для Каждого Строка Из ТаблицаОбновляемыеДанные Цикл
		
		Набор = Неопределено;
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных();
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РаспределениеЗапасов");
			ЭлементБлокировки.УстановитьЗначение("Номенклатура", Строка.Номенклатура);
			ЭлементБлокировки.УстановитьЗначение("Характеристика", Строка.Характеристика);
			ЭлементБлокировки.УстановитьЗначение("Склад", Строка.Склад);
			ЭлементБлокировки.УстановитьЗначение("Назначение", Строка.Назначение);
			
			Блокировка.Заблокировать();
			
			Набор = РаспределениеЗапасов.ОбновлениеИБПоТовару(Строка);
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(Набор);
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			Если Набор = Неопределено Тогда
				Набор = СоздатьНаборЗаписей();
				Набор.Отбор.Номенклатура.Установить(Строка.Номенклатура);
				Набор.Отбор.Характеристика.Установить(Строка.Характеристика);
				Набор.Отбор.Склад.Установить(Строка.Склад);
				Набор.Отбор.Назначение.Установить(Строка.Назначение);
			КонецЕсли;
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Набор);
		КонецПопытки;
		
	КонецЦикла;
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
