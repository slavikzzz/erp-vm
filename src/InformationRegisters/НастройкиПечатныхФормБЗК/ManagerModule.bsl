#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция Настройки() Экспорт
	
	НастройкиФорм = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиПечатныхФорм.ИдентификаторПечатнойФормы КАК ИдентификаторПечатнойФормы,
		|	НастройкиПечатныхФорм.СодержимоеДокумента КАК СодержимоеДокумента,
		|	НастройкиПечатныхФорм.БлокировкаСУсловием КАК БлокировкаСУсловием,
		|	НастройкиПечатныхФорм.НаСписокСотрудников КАК НаСписокСотрудников,
		|	НастройкиПечатныхФорм.КодДокументаКадровогоМероприятия КАК КодДокументаКадровогоМероприятия,
		|	НастройкиПечатныхФорм.ВариантПодписания КАК ВариантПодписания,
		|	НастройкиПечатныхФорм.Наименование КАК Наименование
		|ИЗ
		|	РегистрСведений.НастройкиПечатныхФормБЗК КАК НастройкиПечатныхФорм";
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	Пока Выборка.Следующий() Цикл
		НастрокиФормы = Новый Структура(
			"СодержимоеДокумента,
			|БлокировкаСУсловием,
			|НаСписокСотрудников,
			|КодДокументаКадровогоМероприятия,
			|ВариантПодписания,
			|Наименование");
		ЗаполнитьЗначенияСвойств(НастрокиФормы, Выборка);
		НастройкиФорм.Вставить(Выборка.ИдентификаторПечатнойФормы, НастрокиФормы);
	КонецЦикла;
	
	Возврат НастройкиФорм;
	
КонецФункции

Процедура ЗаполнитьНастройки() Экспорт
	
	ОбновитьНастройкиПечатныхФорм();
	
КонецПроцедуры

Процедура ЗаполнитьВариантПодписания() Экспорт
	
	ОбновитьНастройкиПечатныхФорм();
	ЗаполнитьВариантПодписанияПользовательскихПечатныхФорм();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьНастройкиПечатныхФорм(ОбновитьЗаписи = Ложь)
	
	НачатьТранзакцию();
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.НастройкиПечатныхФормБЗК");
		Блокировка.Заблокировать();
		
		НаборЗаписей = РегистрыСведений.НастройкиПечатныхФормБЗК.СоздатьНаборЗаписей();
		НаборЗаписей.Прочитать();
		
		ТаблицаНабора = НаборЗаписей.Выгрузить();
		
		ЗаписатьНабор = Ложь;
		НастройкиПечатныхФормПоУмолчанию = КадровыйЭДО.ОписанияНастроекПечатныхФормПоУмолчанию();
		Для Каждого НастройкиПечатнойФормы Из НастройкиПечатныхФормПоУмолчанию Цикл
			
			ЗаписьИдентификатора = ТаблицаНабора.Найти(НастройкиПечатнойФормы.ИдентификаторПечатнойФормы, "ИдентификаторПечатнойФормы");
			Если ЗаписьИдентификатора = Неопределено Тогда
				ЗаписатьНабор = Истина;
				ЗаписьИдентификатора = ТаблицаНабора.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьИдентификатора, НастройкиПечатнойФормы);
			ИначеЕсли ОбновитьЗаписи Тогда
				ЗаписатьНабор = Истина;
				ЗаполнитьЗначенияСвойств(ЗаписьИдентификатора, НастройкиПечатнойФормы);
			Иначе
				Для Каждого Колонка Из НастройкиПечатныхФормПоУмолчанию.Колонки Цикл
					Если Колонка.Имя = "ВариантПодписания"
						И ЗаписьИдентификатора.ВариантПодписания <> НастройкиПечатнойФормы.ВариантПодписания Тогда
						
						ЗаписатьНабор = Истина;
						ЗаписьИдентификатора.ВариантПодписания = НастройкиПечатнойФормы.ВариантПодписания;
					ИначеЕсли Колонка.Имя = "Наименование"
						И Не ЗаписьИдентификатора.ПользовательскоеНаименование Тогда
						
						ЗаписатьНабор = Истина;
						ЗаписьИдентификатора.Наименование = НастройкиПечатнойФормы.Наименование;
					ИначеЕсли Не ЗначениеЗаполнено(ЗаписьИдентификатора[Колонка.Имя])
							И ЗначениеЗаполнено(НастройкиПечатнойФормы[Колонка.Имя]) Тогда
						
						ЗаписатьНабор = Истина;
						ЗаписьИдентификатора[Колонка.Имя] = НастройкиПечатнойФормы[Колонка.Имя];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если Не ЗаписьИдентификатора.Предопределенный Тогда
				ЗаписатьНабор = Истина;
				ЗаписьИдентификатора.Предопределенный = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЗаписатьНабор Тогда
			НаборЗаписей.Загрузить(ТаблицаНабора);
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(
			КадровыйЭДО.ИмяСобытияЖурналаРегистрации(
				НСтр("ru = 'Ошибка заполнения настроек печатных форм';
					|en = 'An error occurred when filling print form settings'", ОбщегоНазначения.КодОсновногоЯзыка())),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыСведений.НастройкиПечатныхФормБЗК,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаполнитьВариантПодписанияПользовательскихПечатныхФорм()
	
	НачатьТранзакцию();
	Попытка
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	НастройкиПечатныхФормБЗК.ИдентификаторПечатнойФормы КАК ИдентификаторПечатнойФормы
			|ИЗ
			|	РегистрСведений.НастройкиПечатныхФормБЗК КАК НастройкиПечатныхФормБЗК
			|ГДЕ
			|	НастройкиПечатныхФормБЗК.ВариантПодписания = ЗНАЧЕНИЕ(Перечисление.ВариантыПодписанияДокументовКЭДО.ПустаяСсылка)";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.НастройкиПечатныхФормБЗК.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ИдентификаторПечатнойФормы.Установить(Выборка.ИдентификаторПечатнойФормы);
			НаборЗаписей.Прочитать();
			НаборЗаписей[0].ВариантПодписания = Перечисления.ВариантыПодписанияДокументовКЭДО.Требуется;
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(
			КадровыйЭДО.ИмяСобытияЖурналаРегистрации(
				НСтр("ru = 'Ошибка заполнения настроек печатных форм';
					|en = 'An error occurred when filling print form settings'", ОбщегоНазначения.КодОсновногоЯзыка())),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыСведений.НастройкиПечатныхФормБЗК,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

Процедура УстановитьВариантПодписанияПечатнойФормы(ИдентификаторПечатнойФормы, ВариантПодписания) Экспорт
	
	НаборЗаписей = РегистрыСведений.НастройкиПечатныхФормБЗК.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИдентификаторПечатнойФормы.Установить(ИдентификаторПечатнойФормы);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() > 0 Тогда
		НаборЗаписей[0].ВариантПодписания = ВариантПодписания;
		НаборЗаписей.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
