
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиПравилРегистрации

// См. ЗарплатаКадрыРасширенныйСинхронизацияДанных.ШаблонОбработчика
Процедура ПриЗаполненииНастроекОбработчиковПравилРегистрации(Настройки) Экспорт
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляРегламентированныхДанных(Настройки);
КонецПроцедуры

#КонецОбласти

Процедура ПараметрыОбновленияИсточникаПодключаемыхХарактеристикЗарплатаКадры(ПараметрыОбновления) Экспорт
	
	ПараметрыОбновления.ИмяРегистра = "КатегорииДолжностейПолучателейСтимулирующихВыплатФСС";
	ПараметрыОбновления.ИдентификаторИсточника = "СтимВыплатыФСС";
	ПараметрыОбновления.ИмяОбъекта = "Должность";
	ПараметрыОбновления.ИмяПланаВидовХарактеристик = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДолжностиБЗКРасширенный.ИмяПланаВидовПодключаемыхХарактеристикЗарплатаКадры());
	ПараметрыОбновления.ИмяПланаВидовХарактеристик.Добавить(Справочники.ШтатноеРасписание.ИмяПланаВидовПодключаемыхХарактеристикЗарплатаКадры());
	
	ПараметрыОбновления.Реквизиты.Добавить("КатегорияПолучателяСтимулирующихВыплатФСС");
	ПараметрыОбновления.Реквизиты.Добавить("ОтдельнаяКатегорияМедицинскихРаботников");
	ПараметрыОбновления.Реквизиты = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ПараметрыОбновления.Реквизиты);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьПодключаемыеХарактеристики(ПараметрыОбновления = Неопределено) Экспорт
	
	ИсточникиХарактеристик = Новый Массив;
	ИсточникиХарактеристик.Добавить("КатегорииДолжностейПолучателейСтимулирующихВыплатФСС");
	
	ПодключаемыеХарактеристикиЗарплатаКадры.ОбновитьНаборыПодключаемыхХарактеристик(
		Истина, ИсточникиХарактеристик, ПараметрыОбновления);
	
КонецПроцедуры

Функция КатегорииДолжностей(Должности = Неопределено) Экспорт
	
	КатегорииДолжностей = Новый Соответствие();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Должности",Должности);
	Запрос.УстановитьПараметр("ПоВсемДолжностям", Должности = Неопределено);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КатегорииДолжностейПолучателейСтимулирующихВыплатФСС.Должность КАК Должность,
	|	КатегорииДолжностейПолучателейСтимулирующихВыплатФСС.КатегорияПолучателяСтимулирующихВыплатФСС КАК КатегорияПолучателяСтимулирующихВыплатФСС,
	|	КатегорииДолжностейПолучателейСтимулирующихВыплатФСС.ОтдельнаяКатегорияМедицинскихРаботников КАК ОтдельнаяКатегорияМедицинскихРаботников
	|ИЗ
	|	РегистрСведений.КатегорииДолжностейПолучателейСтимулирующихВыплатФСС КАК КатегорииДолжностейПолучателейСтимулирующихВыплатФСС
	|ГДЕ
	|	(&ПоВсемДолжностям
	|			ИЛИ КатегорииДолжностейПолучателейСтимулирующихВыплатФСС.Должность В (&Должности))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		КатегорииДолжностей.Вставить(Выборка.Должность, Новый Структура("КатегорияПолучателяСтимулирующихВыплатФСС,ОтдельнаяКатегорияМедицинскихРаботников",Выборка.КатегорияПолучателяСтимулирующихВыплатФСС,Выборка.ОтдельнаяКатегорияМедицинскихРаботников));
	КонецЦикла;
	
	Возврат КатегорииДолжностей;
	
КонецФункции

Процедура ОчиститьПустыеСоответствия(ПараметрыОбновления = Неопределено) Экспорт
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КатегорииДолжностейПолучателейСтимулирующихВыплатФСС.Должность КАК Должность
	|ИЗ
	|	РегистрСведений.КатегорииДолжностейПолучателейСтимулирующихВыплатФСС КАК КатегорииДолжностейПолучателейСтимулирующихВыплатФСС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииПолучателейСтимулирующихВыплатФСС КАК КатегорииПолучателейСтимулирующихВыплатФСС
	|		ПО КатегорииДолжностейПолучателейСтимулирующихВыплатФСС.КатегорияПолучателяСтимулирующихВыплатФСС = КатегорииПолучателейСтимулирующихВыплатФСС.Ссылка
	|ГДЕ
	|	КатегорииПолучателейСтимулирующихВыплатФСС.Ссылка ЕСТЬ NULL";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл 
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрыСведений.КатегорииДолжностейПолучателейСтимулирующихВыплатФСС.НаборЗаписей", "Должность", Выборка.Должность) Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.КатегорииДолжностейПолучателейСтимулирующихВыплатФСС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Должность.Установить(Выборка.Должность);
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли




