#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает типы налогообложения НДС по экспорту.
// 
// Параметры:
// Возвращаемое значение:
// 	ТипыПродажаНаЭкспорт - Массив - Типы налогообложения НДС по экспорту.
//
Функция ТипыНалогообложенияНДС() Экспорт
	
	ТипыПродажаНаЭкспорт = Новый Массив();
	ТипыПродажаНаЭкспорт.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	ТипыПродажаНаЭкспорт.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
	ТипыПродажаНаЭкспорт.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
	
	Возврат ТипыПродажаНаЭкспорт;
	
КонецФункции

// Обновляет состояние документа "Реализация товаров и услуг" в регистре
//
// Параметры:
//   РеализацииЭкспорт - Ссылка на документ реализации.
//
Процедура ОбновитьСостояние(Знач РеализацииЭкспорт) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетТаможенныхДекларацийНаЭкспорт") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	РеализацииЭкспорт = ОбщегоНазначенияКлиентСервер.СвернутьМассив(РеализацииЭкспорт);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложеннаяТаблица.Организация,
	|	ВложеннаяТаблица.РеализацияЭкспорт,
	|	ВложеннаяТаблица.ДатаРеализации,
	|	ВложеннаяТаблица.Контрагент,
	|	ВложеннаяТаблица.Валюта,
	|	СУММА(ВложеннаяТаблица.СуммаДокумента) КАК СуммаДокумента
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеОснованийСчетовФактур.Организация               КАК Организация,
	|		ДанныеОснованийСчетовФактур.Регистратор               КАК РеализацияЭкспорт,
	|		НАЧАЛОПЕРИОДА(ДанныеОснованийСчетовФактур.Дата, ДЕНЬ) КАК ДатаРеализации,
	|		ДанныеОснованийСчетовФактур.Контрагент                КАК Контрагент,
	|		ДанныеОснованийСчетовФактур.Валюта                    КАК Валюта,
	|		ДанныеОснованийСчетовФактур.СуммаБезНДС 
	|		    + ДанныеОснованийСчетовФактур.СуммаНДС            КАК СуммаДокумента
	|	ИЗ
	|		РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|		
	|	ГДЕ
	|		ДанныеОснованийСчетовФактур.Регистратор В (&РеализацииЭкспорт)
	|		И ДанныеОснованийСчетовФактур.НалогообложениеНДС В (&ПродажаНаЭкспорт)
	|		И НЕ ЕСТЬNULL(ДанныеОснованийСчетовФактур.Контрагент.СтранаРегистрации.УчастникЕАЭС, ЛОЖЬ)
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеОснованийСчетовФактур.Организация,
	|		ДанныеОснованийСчетовФактур.Регистратор,
	|		НАЧАЛОПЕРИОДА(ДанныеОснованийСчетовФактур.Дата, ДЕНЬ),
	|		ДанныеОснованийСчетовФактур.Контрагент,
	|		ДанныеОснованийСчетовФактур.Валюта,
	|		- (ДанныеОснованийСчетовФактур.СуммаБезНДС + ДанныеОснованийСчетовФактур.СуммаНДС)
	|	ИЗ
	|		РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.ТаможеннаяДекларацияЭкспорт.ДокументыОснования КАК ДекларацииЭкспорт
	|		ПО
	|			ДанныеОснованийСчетовФактур.Регистратор = ДекларацииЭкспорт.ДокументОснование
	|				И ДекларацииЭкспорт.Ссылка.Проведен
	|	ГДЕ
	|		ДанныеОснованийСчетовФактур.Регистратор В (&РеализацииЭкспорт)
	|		И ДанныеОснованийСчетовФактур.НалогообложениеНДС В (&ПродажаНаЭкспорт)
	|		И НЕ ЕСТЬNULL(ДанныеОснованийСчетовФактур.Контрагент.СтранаРегистрации.УчастникЕАЭС, ЛОЖЬ)
	|) КАК ВложеннаяТаблица
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВложеннаяТаблица.Организация,
	|	ВложеннаяТаблица.РеализацияЭкспорт,
	|	ВложеннаяТаблица.ДатаРеализации,
	|	ВложеннаяТаблица.Контрагент,
	|	ВложеннаяТаблица.Валюта
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложеннаяТаблица.СуммаДокумента) > 0
	|";
	
	Запрос.УстановитьПараметр("РеализацииЭкспорт", РеализацииЭкспорт);
	ТипыПродажаНаЭкспорт = ТипыНалогообложенияНДС();
	Запрос.УстановитьПараметр("ПродажаНаЭкспорт",  ТипыПродажаНаЭкспорт);
	
	ТаможенныеДекларацииКРегистрации = Запрос.Выполнить().Выгрузить();
	ТаможенныеДекларацииКРегистрации.Индексы.Добавить("РеализацияЭкспорт");
	
	Для каждого РеализацияЭкспорт Из РеализацииЭкспорт Цикл
		
		МенеджерЗаписи = РегистрыСведений.ТаможенныеДекларацииЭкспортКРегистрации.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.РеализацияЭкспорт = РеализацияЭкспорт;
		
		Строка = ТаможенныеДекларацииКРегистрации.Найти(РеализацияЭкспорт, "РеализацияЭкспорт");
		
		Если Строка = Неопределено Тогда
			МенеджерЗаписи.Удалить();
		Иначе
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Строка);
			МенеджерЗаписи.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли