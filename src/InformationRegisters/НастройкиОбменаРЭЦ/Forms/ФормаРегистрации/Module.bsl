&НаКлиенте
Перем КонтекстЭДО;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОрганизацияСсылка") Тогда
		Организация = Параметры.ОрганизацияСсылка;
		МестоХраненияКлюча = КриптографияЭДКОКлиентСервер.КонтекстМоделиХраненияКлюча(Организация);
	КонецЕсли;
	
	Если Параметры.Свойство("Сертификат") Тогда
		Сертификат = Параметры.Сертификат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДО = Результат.КонтекстЭДО;
	
	КонтекстЭДО.УправлениеОтображениемОрганизации(ЭтаФорма, Организация);
	
	ПараметрыОтображенияСертификатов = Новый Массив;
	
	ПараметрыОтображенияСертификата = Новый Структура;
	ПараметрыОтображенияСертификата.Вставить("ПолеВвода", 								Элементы.СертификатПредставление);
	ПараметрыОтображенияСертификата.Вставить("Сертификат", 								Сертификат);
	ПараметрыОтображенияСертификата.Вставить("ИмяРеквизитаПредставлениеСертификата", 	"СертификатПредставление");
	
	ПараметрыОтображенияСертификатов.Добавить(ПараметрыОтображенияСертификата);
	
	КриптографияЭДКОКлиент.ОтобразитьПредставленияСертификатов(ПараметрыОтображенияСертификатов, ЭтотОбъект, МестоХраненияКлюча);
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения(
		"СертификатНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент));

	КриптографияЭДКОКлиент.ВыбратьСертификат(
		Оповещение, МестоХраненияКлюча, Сертификат, "My");
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Элемент = ДополнительныеПараметры.Элемент;
	
	Если Результат.Выполнено Тогда
		Сертификат = Результат.ВыбранноеЗначение.Отпечаток;
		
		КриптографияЭДКОКлиент.ОтобразитьПредставлениеСертификата(
			МестоХраненияКлюча,
			Элемент, 
			Результат.ВыбранноеЗначение.Отпечаток,
			ЭтотОбъект,
			"СертификатПредставление");
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатОчистка(Элемент, СтандартнаяОбработка)
	
	Сертификат = "";
	
	КриптографияЭДКОКлиент.ОтобразитьПредставлениеСертификата(
		МестоХраненияКлюча, Элементы.Сертификат, 
		Сертификат, ЭтотОбъект, "СертификатПредставление");
		
КонецПроцедуры

&НаКлиенте
Процедура СертификатОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Сертификат = Новый Структура("Отпечаток", Сертификат);
	КриптографияЭДКОКлиентСервер.КонтекстМоделиХраненияКлюча(МестоХраненияКлюча, Сертификат);
	
	КриптографияЭДКОКлиент.ПоказатьСертификат(Сертификат);
			
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	МестоХраненияКлюча = КриптографияЭДКОКлиентСервер.КонтекстМоделиХраненияКлюча(Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура Зарегистрироваться(Команда)
	
	Отказ = Не ПроверитьЗаполнение(); 
	
	Если Не Отказ Тогда  
		ОбработкаОповещения = Новый ОписаниеОповещения("Зарегистрироваться_Завершение", ЭтотОбъект); 
		ПараметрыДляСледующихШагов = Новый Структура;
		Если ТекущийШаг = 1 Тогда
			ПараметрыДляСледующихШагов.Вставить("execution", ТекущийExecution);
			ПараметрыДляСледующихШагов.Вставить("otpCode", ОдноразовыйКод);
			ПараметрыДляСледующихШагов.Вставить("Шаг", 5);
		Иначе
			ПараметрыДляСледующихШагов.Вставить("Шаг", 1);
		КонецЕсли;
		ДокументооборотСРЭЦКлиент.РегистрацияВСервисе(Логин, Пароль, Организация, Сертификат, ПараметрыДляСледующихШагов, ОбработкаОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Зарегистрироваться_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Выполнено = Истина Тогда     
		Если ТекущийШаг = 0 Тогда
			ТекущийExecution = Результат.ОбъектОтвет.execution;
			ТекущийШаг = 1;   
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Шаг2;
			Элементы.Зарегистрироваться.Заголовок = НСтр("ru = 'Зарегистрироваться';
														|en = 'Зарегистрироваться'");
		Иначе     
			ЗаписатьНастройки();
			Закрыть(Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройки() 
	
	МЗ = РегистрыСведений.НастройкиОбменаРЭЦ.СоздатьМенеджерЗаписи();
	МЗ.ИспользоватьОбмен = Истина;
	МЗ.Организация = Организация;
	МЗ.СертификатАбонентаОтпечаток = Сертификат;
	
	МЗ.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)          
	
	Если СтрНайти(Логин, "@") = 0 Или СтрНайти(Логин, ".") = 0 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю();
	    Сообщение.Текст = НСтр("ru = 'В поле ""Логин"" нужно ввести E-mail';
								|en = 'В поле ""Логин"" нужно ввести E-mail'");
	    Сообщение.Поле = "Логин";
	    Сообщение.Сообщить();
	КонецЕсли;
	
	Если Пароль <> ПарольПовторно Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю();
	    Сообщение.Текст = НСтр("ru = 'Пароли не совпадают';
								|en = 'Пароли не совпадают'");
	    Сообщение.Поле = "ПарольПовторно";
	    Сообщение.Сообщить();
	КонецЕсли; 
	
	Если СтрДлина(Пароль) < 7 Или ВРег(Пароль) = Пароль Или НРег(Пароль) = Пароль Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю();
	    Сообщение.Текст = НСтр("ru = 'Пароли слишком простой. Требуется более 6 символов, включая заглавные и строчные буквы';
								|en = 'Пароли слишком простой. Требуется более 6 символов, включая заглавные и строчные буквы'");
	    Сообщение.Поле = "Пароль";
	    Сообщение.Сообщить();
	КонецЕсли;         
	
КонецПроцедуры



