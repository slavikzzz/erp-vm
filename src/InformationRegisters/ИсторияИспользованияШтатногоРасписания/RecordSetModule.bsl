#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТекущийНабор.Дата,
	|	ТекущийНабор.ПозицияШтатногоРасписания
	|ПОМЕСТИТЬ ВТТекущийНабор
	|ИЗ
	|	&ТекущийНабор КАК ТекущийНабор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияИспользованияШтатногоРасписания.Дата КАК Дата,
	|	ИсторияИспользованияШтатногоРасписания.ПозицияШтатногоРасписания КАК ПозицияШтатногоРасписания
	|ПОМЕСТИТЬ ВТВсеПозиции
	|ИЗ
	|	РегистрСведений.ИсторияИспользованияШтатногоРасписания КАК ИсторияИспользованияШтатногоРасписания
	|ГДЕ
	|	ИсторияИспользованияШтатногоРасписания.Регистратор = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТТекущийНабор.Дата,
	|	ВТТекущийНабор.ПозицияШтатногоРасписания
	|ИЗ
	|	ВТТекущийНабор КАК ВТТекущийНабор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеПозиции.ПозицияШтатногоРасписания
	|ИЗ
	|	ВТВсеПозиции КАК ВсеПозиции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВсеПозиции.Дата) КАК Дата
	|ИЗ
	|	ВТВсеПозиции КАК ВсеПозиции";
	
	Запрос.УстановитьПараметр("ТекущийНабор", ЭтотОбъект);
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	МассивОбновляемыхПозиций = РезультатЗапроса[РезультатЗапроса.Количество() - 2].Выгрузить().ВыгрузитьКолонку("ПозицияШтатногоРасписания");
	ДополнительныеСвойства.Вставить("МассивОбновляемыхПозиций", МассивОбновляемыхПозиций);
	
	Выборка = РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выбрать();
	Выборка.Следующий();
	ДополнительныеСвойства.Вставить("ДатаОбновления", Выборка.Дата);
	
	ЗарплатаКадрыПериодическиеРегистры.КонтрольИзмененийПередЗаписью(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("МассивОбновляемыхПозиций")
		И ДополнительныеСвойства.МассивОбновляемыхПозиций.Количество() > 0 Тогда
		
		СписокПозицийШтатногоРасписания = ДополнительныеСвойства.МассивОбновляемыхПозиций;
		
		// Обновление вторичных данных позиций штатного расписания.
		РегистрыСведений.ИсторияИспользованияШтатногоРасписания.ОбновитьТекущиеСведенияПозицииШтатногоРасписания(
			СписокПозицийШтатногоРасписания);
		
		ОбновитьСведенияДолжностей(СписокПозицийШтатногоРасписания);
		
		РегистрыСведений.ИсторияИспользованияШтатногоРасписания.ОбновитьСведенияПодразделенийПоСпискуПозиций(СписокПозицийШтатногоРасписания);
		
	КонецЕсли;
	
	РегистраторНабора = Отбор.Регистратор.Значение;
	Если ТипЗнч(РегистраторНабора) = Тип("ДокументСсылка.ИзменениеШтатногоРасписания")
		Или ТипЗнч(РегистраторНабора) = Тип("ДокументСсылка.УтверждениеШтатногоРасписания") Тогда
		
		РеквизитыРегистратора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегистраторНабора, "Организация,Подразделение");
		Подразделение = ?(ЗначениеЗаполнено(РеквизитыРегистратора.Подразделение), РеквизитыРегистратора.Подразделение, Неопределено);
		
		Справочники.ШтатноеРасписание.ОбновитьСтруктуруШтатногоРасписанияПоДаннымПодразделений(
			РеквизитыРегистратора.Организация, Подразделение);
		Справочники.ШтатноеРасписание.ОбновитьСтруктуруШтатногоРасписанияПоДаннымПозиций(
			РеквизитыРегистратора.Организация, Подразделение);
		
	КонецЕсли;
	
	ЗарплатаКадрыПериодическиеРегистры.КонтрольИзмененийПриЗаписи(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает признак сформированности таблицы изменений
//
Функция ТаблицаИзменившихсяДанныхНабораСформирована() Экспорт
	Возврат ЗарплатаКадрыПериодическиеРегистры.ТаблицаИзменившихсяДанныхНабораСформирована(ЭтотОбъект);
КонецФункции

// Возвращает таблицу изменений регистра
//
Функция ТаблицаИзменившихсяДанныхНабора() Экспорт
	Возврат ЗарплатаКадрыПериодическиеРегистры.ТаблицаИзменившихсяДанныхНабора(ЭтотОбъект);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьСведенияДолжностей(СписокПозицийШтатногоРасписания)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокПозицийШтатногоРасписания", СписокПозицийШтатногоРасписания);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ШтатноеРасписание.Должность КАК Должность
		|ПОМЕСТИТЬ ВТОбновляемыеДолжности
		|ИЗ
		|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
		|ГДЕ
		|	ШтатноеРасписание.Ссылка В(&СписокПозицийШтатногоРасписания)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбновляемыеДолжности.Должность,
		|	МИНИМУМ(ИсторияИспользованияШтатногоРасписания.Дата) КАК Дата
		|ПОМЕСТИТЬ ВТМинимальныеДатыИспользованияДолжностей
		|ИЗ
		|	ВТОбновляемыеДолжности КАК ОбновляемыеДолжности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияИспользованияШтатногоРасписания КАК ИсторияИспользованияШтатногоРасписания
		|		ПО ОбновляемыеДолжности.Должность = ИсторияИспользованияШтатногоРасписания.ПозицияШтатногоРасписания.Должность
		|			И (ИсторияИспользованияШтатногоРасписания.Используется)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбновляемыеДолжности.Должность
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбновляемыеДолжности.Должность,
		|	ИсторияИспользованияШтатногоРасписания.ПозицияШтатногоРасписания,
		|	МАКСИМУМ(ИсторияИспользованияШтатногоРасписания.Дата) КАК Дата
		|ПОМЕСТИТЬ ВТМаксимальныеДатыИзменений
		|ИЗ
		|	ВТОбновляемыеДолжности КАК ОбновляемыеДолжности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияИспользованияШтатногоРасписания КАК ИсторияИспользованияШтатногоРасписания
		|		ПО ОбновляемыеДолжности.Должность = ИсторияИспользованияШтатногоРасписания.ПозицияШтатногоРасписания.Должность
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсторияИспользованияШтатногоРасписания.ПозицияШтатногоРасписания,
		|	ОбновляемыеДолжности.Должность
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксимальныеДатыИзменений.Должность,
		|	МАКСИМУМ(ИсторияИспользованияШтатногоРасписания.Используется) КАК Используется
		|ПОМЕСТИТЬ ВТПоследниеИспользованияДолжностей
		|ИЗ
		|	ВТМаксимальныеДатыИзменений КАК МаксимальныеДатыИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияИспользованияШтатногоРасписания КАК ИсторияИспользованияШтатногоРасписания
		|		ПО МаксимальныеДатыИзменений.ПозицияШтатногоРасписания = ИсторияИспользованияШтатногоРасписания.ПозицияШтатногоРасписания
		|			И МаксимальныеДатыИзменений.Дата = ИсторияИспользованияШтатногоРасписания.Дата
		|
		|СГРУППИРОВАТЬ ПО
		|	МаксимальныеДатыИзменений.Должность
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоследниеИспользованияДолжностей.Должность,
		|	МАКСИМУМ(МаксимальныеДатыИзменений.Дата) КАК Дата
		|ПОМЕСТИТЬ ВТДатыЗакрытияДолжностей
		|ИЗ
		|	ВТМаксимальныеДатыИзменений КАК МаксимальныеДатыИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоследниеИспользованияДолжностей КАК ПоследниеИспользованияДолжностей
		|		ПО МаксимальныеДатыИзменений.Должность = ПоследниеИспользованияДолжностей.Должность
		|			И (НЕ ПоследниеИспользованияДолжностей.Используется)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоследниеИспользованияДолжностей.Должность
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбновляемыеДолжности.Должность,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(МинимальныеДатыИспользованияДолжностей.Дата, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ВведенаВШтатноеРасписание,
		|	ЕСТЬNULL(МинимальныеДатыИспользованияДолжностей.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВвода,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(МинимальныеДатыИспользованияДолжностей.Дата, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ ЕСТЬNULL(ДатыЗакрытияДолжностей.Дата, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ИсключенаИзШтатногоРасписания,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(МинимальныеДатыИспользованияДолжностей.Дата, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ ЕСТЬNULL(ДатыЗакрытияДолжностей.Дата, ДАТАВРЕМЯ(1, 1, 1))
		|	КОНЕЦ КАК ДатаИсключения
		|ПОМЕСТИТЬ ВТИспользуемостьДолжностей
		|ИЗ
		|	ВТОбновляемыеДолжности КАК ОбновляемыеДолжности
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМинимальныеДатыИспользованияДолжностей КАК МинимальныеДатыИспользованияДолжностей
		|		ПО ОбновляемыеДолжности.Должность = МинимальныеДатыИспользованияДолжностей.Должность
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыЗакрытияДолжностей КАК ДатыЗакрытияДолжностей
		|		ПО ОбновляемыеДолжности.Должность = ДатыЗакрытияДолжностей.Должность
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИспользуемостьДолжностей.Должность,
		|	ИспользуемостьДолжностей.ВведенаВШтатноеРасписание,
		|	ИспользуемостьДолжностей.ДатаВвода,
		|	ИспользуемостьДолжностей.ИсключенаИзШтатногоРасписания,
		|	ИспользуемостьДолжностей.ДатаИсключения
		|ИЗ
		|	ВТИспользуемостьДолжностей КАК ИспользуемостьДолжностей
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
		|		ПО ИспользуемостьДолжностей.Должность = Должности.Ссылка
		|ГДЕ
		|	(ИспользуемостьДолжностей.ВведенаВШтатноеРасписание <> Должности.ВведенаВШтатноеРасписание
		|			ИЛИ ИспользуемостьДолжностей.ДатаВвода <> Должности.ДатаВвода
		|			ИЛИ ИспользуемостьДолжностей.ИсключенаИзШтатногоРасписания <> Должности.ИсключенаИзШтатногоРасписания
		|			ИЛИ ИспользуемостьДолжностей.ДатаИсключения <> Должности.ДатаИсключения)";
		
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ДолжностьОбъект = Выборка.Должность.ПолучитьОбъект();
			
			Попытка 
				ДолжностьОбъект.Заблокировать();
			Исключение
				
				ТекстИсключенияЗаписи = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Не удалось изменить должность ""%1"".
					|Возможно, должность редактируется другим пользователем';
					|en = 'Cannot change the ""%1"" position.
					|Maybe, the position is being edited by another user'"),
					ДолжностьОбъект.Наименование);
					
				ВызватьИсключение ТекстИсключенияЗаписи;
				
			КонецПопытки;	
			
			ЗаполнитьЗначенияСвойств(ДолжностьОбъект, Выборка);
			
			Если НЕ ДолжностьОбъект.ИсключенаИзШтатногоРасписания И ДолжностьОбъект.ПометкаУдаления Тогда
				ДолжностьОбъект.ПометкаУдаления = Ложь;
			КонецЕсли;
			
			ДолжностьОбъект.Записать();
			
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли