#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записывает данные в регистр.
//
// Параметры:
//  Корректировки	 - ТаблицаЗначений					 - данные для записи.
//  ПланПроизводства - ДокументСсылка.ПланПроизводства	 - документ, к которому относятся корректировки.
//  Замещать		 - Булево							 - режим замещения существующих записей
//
Процедура ЗаписатьКорректировки(Корректировки, ПланПроизводства, Замещать = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(Корректировки) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Замещать Тогда
		
		Если Корректировки.Количество() > 10 Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ОтменаКорректировокПланаПроизводства.*
			|ИЗ
			|	РегистрСведений.ОтменаКорректировокПланаПроизводства КАК ОтменаКорректировокПланаПроизводства
			|ГДЕ
			|	ОтменаКорректировокПланаПроизводства.ПланПроизводства = &ПланПроизводства
			|");
			Запрос.УстановитьПараметр("ПланПроизводства", ПланПроизводства);
			
			ВсеКорректировки = Запрос.Выполнить().Выгрузить();
			
			Если ВсеКорректировки.Количество() = 0 Тогда
				
				ВсеКорректировки = Корректировки;
				
			Иначе
				
				СтруктураПоиска = Новый Структура(СтрСоединить(СписокИзмерений(), ","));
				
				Для каждого Строка Из Корректировки Цикл
					
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
					НайденныеСтроки = ВсеКорректировки.НайтиСтроки(СтруктураПоиска);
					
					Если НайденныеСтроки.Количество() = 0 Тогда
						ЗаполнитьЗначенияСвойств(ВсеКорректировки.Добавить(), Строка);
					Иначе
						ЗаполнитьЗначенияСвойств(НайденныеСтроки[0], Строка);
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			НаборЗаписей = РегистрыСведений.ОтменаКорректировокПланаПроизводства.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ПланПроизводства.Установить(ПланПроизводства);
			НаборЗаписей.Загрузить(ВсеКорректировки);
			НаборЗаписей.Записать(Истина);
			
		Иначе
			
			СписокИзмерений = СписокИзмерений();
			
			Для каждого Строка Из Корректировки Цикл
				
				НаборЗаписей = РегистрыСведений.ОтменаКорректировокПланаПроизводства.СоздатьНаборЗаписей();
				
				Для каждого ИмяПоля Из СписокИзмерений Цикл
					НаборЗаписей.Отбор[ИмяПоля].Использование = Истина;
					НаборЗаписей.Отбор[ИмяПоля].ВидСравнения  = ВидСравнения.Равно;
					НаборЗаписей.Отбор[ИмяПоля].Значение      = Строка[ИмяПоля];
				КонецЦикла;
				
				НаборЗаписей.Прочитать();
				
				Если НаборЗаписей.Количество() = 0 Тогда
					ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Строка);
				Иначе
					ЗаполнитьЗначенияСвойств(НаборЗаписей[0], Строка);
				КонецЕсли;
				
				НаборЗаписей.Записать(Истина);
				
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		
		НаборЗаписей = РегистрыСведений.ОтменаКорректировокПланаПроизводства.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ПланПроизводства.Установить(ПланПроизводства);
		НаборЗаписей.Загрузить(Корректировки);
		НаборЗаписей.Записать(Истина);
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Очищает данные в регистре.
//
// Параметры:
//  ПланПроизводства - ДокументСсылка.ПланПроизводства - документ, к которому относятся корректировки.
//
Процедура ОчиститьКорректировки(ПланПроизводства) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.ОтменаКорректировокПланаПроизводства КАК Таблица
	|ГДЕ
	|	Таблица.ПланПроизводства = &ПланПроизводства
	|");
	Запрос.УстановитьПараметр("ПланПроизводства", ПланПроизводства);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ОтменаКорректировокПланаПроизводства.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПланПроизводства.Установить(ПланПроизводства);
	НаборЗаписей.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Проверяет наличие отмененных ручных корректровок плана производства.
//
// Параметры:
//  ПланПроизводства - ДокументСсылка.ПланПроизводства - документ для проверки.
// 
// Возвращаемое значение:
//  Булево - Истина если по плану производства имеются отмененные корректировки.
//
Функция ЕстьОтмененныеКорректировки(ПланПроизводства) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.ОтменаКорректировокПланаПроизводства КАК Таблица
	|ГДЕ
	|	Таблица.ПланПроизводства = &ПланПроизводства
	|");
	Запрос.УстановитьПараметр("ПланПроизводства", ПланПроизводства);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СписокИзмерений()
	
	СписокИзмерений = Новый Массив();
	
	Для каждого Поле Из Метаданные.РегистрыСведений.ОтменаКорректировокПланаПроизводства.Измерения Цикл
		СписокИзмерений.Добавить(Поле.Имя);
	КонецЦикла;
	
	Возврат СписокИзмерений;
	
КонецФункции

#КонецОбласти

#КонецЕсли