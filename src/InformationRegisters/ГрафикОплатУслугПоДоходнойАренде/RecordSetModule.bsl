#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УслугаПоАрендеИтог = 0;
	
	ТаблицаРегистра = Выгрузить();
	ТаблицаРегистра.Сортировать("Дата");
	
	Для каждого СтрокаНабора Из ТаблицаРегистра Цикл
		
		УслугаПоАрендеИтог = УслугаПоАрендеИтог + СтрокаНабора.УслугаПоАренде;
		СтрокаНабора.УслугаПоАрендеИтог = УслугаПоАрендеИтог;
		
	КонецЦикла;
	
	Загрузить(ТаблицаРегистра);
	
	ТаблицаРегистра.Колонки.Договор.Имя = "ОбъектОплаты";
	ТаблицаРегистра.Свернуть("ОбъектОплаты,АктуальныеУсловияДоговора");
	
	ДополнительныеСвойства.Вставить("ТаблицаОбъектовОплаты", ТаблицаРегистра);
	
	ПодготовитьДанныеДляФормированияЗаданийПередЗаписью();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	РегистрыСведений.ГрафикПлатежей.РассчитатьГрафикПлатежейПоФинансовымИнструментам(
		ДополнительныеСвойства.ТаблицаОбъектовОплаты.ВыгрузитьКолонку("ОбъектОплаты"),
		ДополнительныеСвойства.ТаблицаОбъектовОплаты.ВыгрузитьКолонку("АктуальныеУсловияДоговора"));
	УстановитьПривилегированныйРежим(Ложь);
	
	ПодготовитьДанныеДляФормированияЗаданийПриЗаписи();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьДанныеДляФормированияЗаданийПередЗаписью()
	
	Если Не ПроведениеДокументов.КонтролироватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	// Текущее состояние набора помещается во временную таблицу,
	// чтобы при записи получить изменение нового набора относительно текущего.
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ГрафикОплатУслугПоАренде.Регистратор КАК Регистратор,
	|	ГрафикОплатУслугПоАренде.АктуальныеУсловияДоговора КАК АктуальныеУсловияДоговора,
	|	ГрафикОплатУслугПоАренде.Договор КАК Договор,
	|	ГрафикОплатУслугПоАренде.Дата КАК Дата,
	|	ГрафикОплатУслугПоАренде.УслугаПоАренде КАК УслугаПоАренде,
	|	ГрафикОплатУслугПоАренде.УслугаПоАрендеНДС КАК УслугаПоАрендеНДС
	|ПОМЕСТИТЬ ГрафикОплатУслугПоДоходнойАрендеПередЗаписью
	|ИЗ
	|	РегистрСведений.ГрафикОплатУслугПоДоходнойАренде КАК ГрафикОплатУслугПоАренде
	|ГДЕ
	|	ГрафикОплатУслугПоАренде.Регистратор = &Регистратор
	|	И НЕ &ЭтоНовый
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый", ДополнительныеСвойства.СвойстваДокумента.ЭтоНовый);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПодготовитьДанныеДляФормированияЗаданийПриЗаписи()
	
	Если Не ПроведениеДокументов.КонтролироватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу для последующей записи в регистрах заданий.
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Таблица.Регистратор КАК Регистратор,
	|	Таблица.АктуальныеУсловияДоговора КАК АктуальныеУсловияДоговора,
	|	Таблица.Договор КАК Договор,
	|	Таблица.Дата КАК Дата
	|ПОМЕСТИТЬ ТаблицаИзмененийГрафикОплатУслугПоДоходнойАренде
	|ИЗ
	|	(ВЫБРАТЬ
	|		ГрафикОплатУслугПоАренде.Регистратор КАК Регистратор,
	|		ГрафикОплатУслугПоАренде.АктуальныеУсловияДоговора КАК АктуальныеУсловияДоговора,
	|		ГрафикОплатУслугПоАренде.Договор КАК Договор,
	|		ГрафикОплатУслугПоАренде.Дата КАК Дата,
	|		ГрафикОплатУслугПоАренде.УслугаПоАренде КАК УслугаПоАренде,
	|		ГрафикОплатУслугПоАренде.УслугаПоАрендеНДС КАК УслугаПоАрендеНДС
	|	ИЗ
	|		ГрафикОплатУслугПоДоходнойАрендеПередЗаписью КАК ГрафикОплатУслугПоАренде
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ГрафикОплатУслугПоАренде.Регистратор,
	|		ГрафикОплатУслугПоАренде.АктуальныеУсловияДоговора,
	|		ГрафикОплатУслугПоАренде.Договор,
	|		ГрафикОплатУслугПоАренде.Дата,
	|		-ГрафикОплатУслугПоАренде.УслугаПоАренде,
	|		-ГрафикОплатУслугПоАренде.УслугаПоАрендеНДС
	|	ИЗ
	|		РегистрСведений.ГрафикОплатУслугПоДоходнойАренде КАК ГрафикОплатУслугПоАренде
	|	ГДЕ
	|		ГрафикОплатУслугПоАренде.Регистратор = &Регистратор) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Регистратор,
	|	Таблица.АктуальныеУсловияДоговора,
	|	Таблица.Договор,
	|	Таблица.Дата
	|
	|ИМЕЮЩИЕ
	|	(СУММА(Таблица.УслугаПоАренде) <> 0
	|		ИЛИ СУММА(Таблица.УслугаПоАрендеНДС) <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ГрафикОплатУслугПоДоходнойАрендеПередЗаписью";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.ВыполнитьПакет();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли