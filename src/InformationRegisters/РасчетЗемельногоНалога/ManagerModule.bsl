#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ОбработчикиОбновления

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	ДобавитьОбработчикОбновленияДляПереходаНаВерсиюАлгоритмаС2020(Обработчики);
КонецПроцедуры

// Добавить обработчик обновления для перехода на версию алгоритма с2020.
// 
// Параметры:
//  Обработчики - ТаблицаЗначений - Обработчики:
// * НачальноеЗаполнение - Булево - 
// * Версия - Строка - 
// * Процедура - Строка - 
// * РежимВыполнения - Строка - 
// * ОбщиеДанные - Булево - 
// * УправлениеОбработчиками - Булево - 
// * Комментарий - Строка - 
// * Идентификатор - УникальныйИдентификатор - 
// * БлокируемыеОбъекты - Строка - 
// * НовыеОбъекты - Строка - 
// * ПроцедураПроверки - Строка - 
// * ПроцедураЗаполненияДанныхОбновления - Строка - 
// * ЗапускатьТолькоВГлавномУзле - Булево - 
// * ЗапускатьИВПодчиненномУзлеРИБСФильтрами - Булево - 
// * ЧитаемыеОбъекты - Строка - 
// * ИзменяемыеОбъекты - Строка - 
// * ПриоритетыВыполнения - ТаблицаЗначений - 
// * Многопоточный - Булево - 
// * Порядок - ПеречислениеСсылка.ПорядокОбработчиковОбновления - 
// * НеВыполнятьПриПереходеСДругойПрограммы - Булево - 
// * ВыполнятьВГруппеОбязательных - Булево - 
// * Приоритет - Число - 
// * МонопольныйРежим - Неопределено, Булево - 
Процедура ДобавитьОбработчикОбновленияДляПереходаНаВерсиюАлгоритмаС2020(Обработчики) Экспорт
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.РасчетЗемельногоНалога.ЗаполнитьДаннымиПрежнегоРегистра";
	Обработчик.Версия = "2.5.17.36";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("bfca94b9-977e-414c-8738-929a852c655e");
	Обработчик.Многопоточный = Истина;
	Обработчик.Порядок = Перечисления.ПорядокОбработчиковОбновления.Обычный;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.РасчетЗемельногоНалога.ЗарегистрироватьДанныеКОбработкеДляЗаполненияДанными";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";

	ТекстКомментария = НСтр("ru = 'Заполняет регистр ""Расчет земельного налога"":
	|- с %1 данные по расчету земельного налога заполняются по данным расчетов, полученным из предыдущей версии регистра.';
	|en = 'Fills the ""Land value tax calculation"" register:
	|- starting from %1, the data on calculating the land value tax is filled by calculation data obtained from the previous version of the register.'");

	ТекстКомментария = СтрШаблон(ТекстКомментария,
						Формат(РасчетИмущественныхНалоговКлиентСервер.НачалоПримененияНовогоРасчетаЗемельногоНалога(), "ДЛФ=D;"));

	Обработчик.Комментарий = ТекстКомментария;

	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.РегламентнаяОперация.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.КорректировкаРегистров.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");

	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.РасчетЗемельногоНалога.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");

	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыСведений.РасчетЗемельногоНалога.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
КонецПроцедуры

// Зарегистрировать данные к обработке для заполнения данными.
// 
// Параметры:
//  Параметры - Структура - Параметры
Процедура ЗарегистрироватьДанныеКОбработкеДляЗаполненияДанными(Параметры) Экспорт
	ПолноеИмяОбъекта = Метаданные.РегистрыСведений.РасчетЗемельногоНалога.ПолноеИмя();
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяОбъекта;
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Период");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Период");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиРегистраторыРегистра();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяОбъекта;
	
	// Требуется заполнить новый регистр с 01.01.2020.
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор
	|ИЗ
	|	РегистрСведений.РасчетЗемельногоНалогаДо2020 КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ПериодРасчета >= &НачалоПримененияНовогоРасчетаЗемельногоНалога";

	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("НачалоПримененияНовогоРасчетаЗемельногоНалога",
								РасчетИмущественныхНалоговКлиентСервер.НачалоПримененияНовогоРасчетаЗемельногоНалога());

	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
		Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор"), ДополнительныеПараметры);
		
КонецПроцедуры
	
// Заполняет регистр по данным прежнего регистра при обновлении
// 
// Параметры:
//  Параметры - Структура - см. описание БСП
Процедура ЗаполнитьДаннымиПрежнегоРегистра(Параметры) Экспорт
	
	// Переносим записи из прежнего регистра в новый порциями, начиная с даты перехода на новый расчет налога.
	ДатаПерехода = РасчетИмущественныхНалоговКлиентСервер.НачалоПримененияНовогоРасчетаЗемельногоНалога();
	
	// Все записи по каждому отдельному документу (регистратору) нужно переносить одновременно.
	// Поэтому используем такой прием:
	// - выбираем все записи последнего по времени регистратора (определяем по ПериодРасчета в записях)
	// - считаем количество записей по этому регистратору
	// - контролируем, чтобы общее количество обрабатываемых записей соответствовало условному размеру порции (1000):
	//	 если этот рамер достигнут и есть еще необработанные регистраторы, то обработчик будет запущен еще раз
	// - непосредственно сам перенос записей выполняется по каждому регистратору отдельно
	// 
	// В итоге фактический размер порции может превышать 1000 записей.
	// НАПРИМЕР: в 1000 наиболее "свежих" записей попала только одна из 20 записей документа А (она оказалась 1000-й по порядку).
	// В итоге в данном примере в порции будет обработано 1019 записей (в т.ч. все записи документа А).
	
	// На первой итерации обработчика считаем общее количество регистраторов - это количество объектов к обработке.
	Если Не ЗначениеЗаполнено(Параметры.ПрогрессВыполнения.ВсегоОбъектов) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасчетЗемельногоНалогаДо2020.Регистратор), 0) КАК КоличествоРегистраторов
		|ИЗ
		|	РегистрСведений.РасчетЗемельногоНалогаДо2020 КАК РасчетЗемельногоНалогаДо2020
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО РасчетЗемельногоНалогаДо2020.Организация = Организации.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
		|		ПО РасчетЗемельногоНалогаДо2020.ОсновноеСредство = ОсновныеСредства.Ссылка
		|ГДЕ
		|	РасчетЗемельногоНалогаДо2020.ПериодРасчета >= &ДатаПерехода";
		
		Запрос.УстановитьПараметр("ДатаПерехода", ДатаПерехода);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		Параметры.ПрогрессВыполнения.ВсегоОбъектов = Выборка.КоличествоРегистраторов;
		
		Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
	 		Параметры.ОбработкаЗавершена = Истина;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ОстатокПорции = 1000;
	КоличествоОбрабатываемыхЗаписей = 0;
	КоличествоОшибок = 0;
	
	// Созданные элементы справочника льгот кэшируем в виде таблицы в параметрах
	Если Параметры.Свойство("Льготы") Тогда
		Льготы = Параметры.Льготы;
	Иначе
		Льготы = Новый ТаблицаЗначений;
		Льготы.Колонки.Добавить("ОснованиеЛьготы", Новый ОписаниеТипов("СправочникСсылка.ОснованияЛьготПоИмущественнымНалогам"));
		Льготы.Колонки.Добавить("КодЛьготы", ОбщегоНазначения.ОписаниеТипаСтрока(7));
		Льготы.Колонки.Добавить("ВидЛьготы", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЛьготПоИмущественнымНалогам"));
		Льготы.Колонки.Добавить("ПроцентУменьшения", ОбщегоНазначения.ОписаниеТипаЧисло(5, 2, ДопустимыйЗнак.Неотрицательный));
		Льготы.Колонки.Добавить("КодРегиона", ОбщегоНазначения.ОписаниеТипаЧисло(2, 0, ДопустимыйЗнак.Неотрицательный));
		Льготы.Колонки.Добавить("КодПоОКТМО", ОбщегоНазначения.ОписаниеТипаСтрока(11));
		Льготы.Колонки.Добавить("УстановленаМестнымНормативнымАктом", Новый ОписаниеТипов("Булево"));
		
		Параметры.Вставить("Льготы", Льготы);
	КонецЕсли;
	 
 	// Получим параметры начисления земельного налога с учетом исправлений и поместим их во временную таблицу 1 раз.
	ТекстЗапросаВТПараметрыНачисленияЗемельногоНалогаЗаписи = 
		РасчетИмущественныхНалоговУП.ТекстЗапросаЗаписиРегистраСУчетомИсправлений("ПараметрыНачисленияЗемельногоНалога", 
																			"ПараметрыНачисленияЗемельногоНалогаСУчетомИсправлений");
																			
	МенеджерВТ = Новый МенеджерВременныхТаблиц();
	ЗапросВТ = Новый Запрос();
	ЗапросВТ.МенеджерВременныхТаблиц  = МенеджерВТ;
	
	ЗапросВТ.УстановитьПараметр("НачалоПериода", ДатаПерехода);
	ЗапросВТ.УстановитьПараметр("КонецПериода", ДатаПерехода);
	ЗапросВТ.УстановитьПараметр("ДатаДокумента", Дата(1,1,1));
	ЗапросВТ.УстановитьПараметр("СписокОС", Справочники.ОбъектыЭксплуатации.ПустаяСсылка());
	ЗапросВТ.УстановитьПараметр("БезОтбораОС", Истина);
	
	ТекстЗапросаВТПараметрыНачисленияЗемельногоНалогаЗаписи = 
		СтрЗаменить(ТекстЗапросаВТПараметрыНачисленияЗемельногоНалогаЗаписи,
						"ДанныеРегистра.Организация = &Организация",
						"ИСТИНА");
		
	ЗапросВТ.Текст = ТекстЗапросаВТПараметрыНачисленияЗемельногоНалогаЗаписи;
	ЗапросВТ.Выполнить();
	
	Пока ОстатокПорции > 0 Цикл  //Может быть прерван и раньше.
		
		// Выбираем наиболее "свежий" (по периоду записей) документ (регистратор) к обработке.
		// Так как записи прежнего регистра не удаляем, то в качестве признака необходимости обработки движений
		// документа используем наличие записей в прежнем регистре и отсутствие записей в новом.
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РасчетЗемельногоНалогаДо2020.Регистратор КАК Регистратор,
		|	РасчетЗемельногоНалогаДо2020.ПериодРасчета КАК ПериодРасчета,
		|	МЕСЯЦ(РасчетЗемельногоНалогаДо2020.ПериодРасчета) = 12 КАК ГодовойРасчет,
		|	РасчетЗемельногоНалогаДо2020.Организация КАК Организация
		|ИЗ
		|	РегистрСведений.РасчетЗемельногоНалогаДо2020 КАК РасчетЗемельногоНалогаДо2020
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетЗемельногоНалога КАК РасчетЗемельногоНалога
		|		ПО РасчетЗемельногоНалогаДо2020.Регистратор = РасчетЗемельногоНалога.Регистратор
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО РасчетЗемельногоНалогаДо2020.Организация = Организации.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
		|		ПО РасчетЗемельногоНалогаДо2020.ОсновноеСредство = ОсновныеСредства.Ссылка
		|ГДЕ
		|	РасчетЗемельногоНалога.Регистратор ЕСТЬ NULL
		|	И РасчетЗемельногоНалогаДо2020.ПериодРасчета >= &ДатаПерехода
		|
		|УПОРЯДОЧИТЬ ПО
		|	РасчетЗемельногоНалогаДо2020.ПериодРасчета УБЫВ,
		|	РасчетЗемельногоНалогаДо2020.Регистратор УБЫВ";
		
		Запрос.УстановитьПараметр("ДатаПерехода", ДатаПерехода);
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			// Нет больше записей для переноса
			Параметры.ОбработкаЗавершена = Истина;
			Возврат;
		КонецЕсли;
		
		ВыборкаРегистратор = Результат.Выбрать();
		ВыборкаРегистратор.Следующий();
		
		Регистратор = ВыборкаРегистратор.Регистратор;
		
		НачатьТранзакцию();
		
		Попытка
			
			// Блокируем записи нового регистра по организации за период расчета.
			// Так как в течение квартала должен быть только 1 расчет налога, то блокируем записи за весь квартал.
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РасчетЗемельногоНалога");
			
			ДиапазонПериод = Новый Диапазон(НачалоКвартала(ВыборкаРегистратор.ПериодРасчета), КонецКвартала(ВыборкаРегистратор.ПериодРасчета));
			ЭлементБлокировки.УстановитьЗначение("ПериодРасчета", ДиапазонПериод);
			ЭлементБлокировки.УстановитьЗначение("Организация", ВыборкаРегистратор.Организация);
			
			Блокировка.Заблокировать();
			
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
			
			Запрос.УстановитьПараметр("Регистратор", Регистратор);
			
			// Считаем общее количество записей по регистратору в прежнем регистре - для контроля порции обрабатываемых данных.
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(КОЛИЧЕСТВО(*), 0) КАК КоличествоЗаписей
			|ИЗ
			|	РегистрСведений.РасчетЗемельногоНалогаДо2020 КАК РасчетЗемельногоНалогаДо2020
			|ГДЕ
			|	РасчетЗемельногоНалогаДо2020.Регистратор = &Регистратор";
			
			ИтогиПоРегистратору = Запрос.Выполнить().Выбрать();
			ИтогиПоРегистратору.Следующий();
			
			// Даже если ниже при записи наборов возникнет ошибка, все равно учитываем записи регистратора в общем размере порции.
			КоличествоОбрабатываемыхЗаписей = ИтогиПоРегистратору.КоличествоЗаписей;
			ОстатокПорции = ОстатокПорции - КоличествоОбрабатываемыхЗаписей;
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	РасчетЗемельногоНалога.ПериодРасчета КАК ПериодРасчета,
			|	РасчетЗемельногоНалога.Организация КАК Организация,
			|	РасчетЗемельногоНалога.ИФНС КАК ИФНС,
			|	РасчетЗемельногоНалога.ИФНС.КодРегиона КАК КодРегиона,
			|	РасчетЗемельногоНалога.ОсновноеСредство КАК ОсновноеСредство,
			|	РасчетЗемельногоНалога.ПериодСтроительства КАК ПериодСтроительства,
			|	ВЫБОР
			|		КОГДА РасчетЗемельногоНалога.ПериодСтроительства = ""1""
			|			ТОГДА 2
			|		КОГДА РасчетЗемельногоНалога.ПериодСтроительства = ""2""
			|			ТОГДА 4
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК ПовышающийКоэффициент,
			|	РасчетЗемельногоНалога.КадастроваяСтоимость КАК КадастроваяСтоимость,
			|	РасчетЗемельногоНалога.КадастровыйНомер КАК КадастровыйНомер,
			|	РасчетЗемельногоНалога.КБК КАК КБК,
			|	РасчетЗемельногоНалога.КодПоОКТМО КАК КодПоОКТМО,
			|	РасчетЗемельногоНалога.КодКатегорииЗемель КАК КодКатегорииЗемель,
			|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
			|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
			|	РасчетЗемельногоНалога.УменьшениеНалоговойБазыНаСумму КАК УменьшениеНалоговойБазыНаСумму,
			|	ВЫБОР
			|		КОГДА
			|			РасчетЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе = ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.УменьшениеНалоговойБазы)
			|			ТОГДА РасчетЗемельногоНалога.НеОблагаемаяНалогомСумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК НеОблагаемаяНалогомСумма,
			|	РасчетЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе КАК НалоговаяЛьготаПоНалоговойБазе,
			|	РасчетЗемельногоНалога.ДоляНеоблагаемойПлощадиЧислитель КАК ДоляНеоблагаемойПлощадиЧислитель,
			|	РасчетЗемельногоНалога.ДоляНеоблагаемойПлощадиЗнаменатель КАК ДоляНеоблагаемойПлощадиЗнаменатель,
			|	ВЫБОР
			|		КОГДА
			|			РасчетЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеОблагаемаяНалогомПлощадь)
			|			ТОГДА 0
			|		КОГДА РасчетЗемельногоНалога.ДоляНеоблагаемойПлощадиЧислитель = 0
			|		ИЛИ РасчетЗемельногоНалога.ДоляНеоблагаемойПлощадиЗнаменатель = 0
			|			ТОГДА 0
			|		КОГДА
			|			РасчетЗемельногоНалога.ДоляНеоблагаемойПлощадиЗнаменатель >= РасчетЗемельногоНалога.ДоляНеоблагаемойПлощадиЧислитель
			|			ТОГДА РасчетЗемельногоНалога.КадастроваяСтоимость * (1 -
			|				(ВЫРАЗИТЬ((РасчетЗемельногоНалога.КоличествоМесяцевВладения -
			|				РасчетЗемельногоНалога.КоличествоМесяцевПримененияЛьготы) / РасчетЗемельногоНалога.КоличествоМесяцевВладения КАК
			|				ЧИСЛО(5, 4))))
			|		ИНАЧЕ РасчетЗемельногоНалога.КадастроваяСтоимость * РасчетЗемельногоНалога.ДоляНеоблагаемойПлощадиЧислитель /
			|			РасчетЗемельногоНалога.ДоляНеоблагаемойПлощадиЗнаменатель * (1 -
			|			(ВЫРАЗИТЬ((РасчетЗемельногоНалога.КоличествоМесяцевВладения -
			|			РасчетЗемельногоНалога.КоличествоМесяцевПримененияЛьготы) / РасчетЗемельногоНалога.КоличествоМесяцевВладения КАК
			|			ЧИСЛО(5, 4))))
			|	КОНЕЦ КАК КадастроваяСтоимостьНеоблагаемойДоли,
			|	РасчетЗемельногоНалога.КоличествоМесяцевПримененияЛьготы КАК КоличествоМесяцевПримененияЛьготы,
			|	ВЫБОР
			|		КОГДА РасчетЗемельногоНалога.СниженнаяНалоговаяСтавка <> 0
			|			ТОГДА РасчетЗемельногоНалога.СниженнаяНалоговаяСтавка
			|		ИНАЧЕ РасчетЗемельногоНалога.НалоговаяСтавка
			|	КОНЕЦ КАК НалоговаяСтавка,
			|	ВЫРАЗИТЬ(РасчетЗемельногоНалога.КадастроваяСтоимость * ВЫБОР
			|		КОГДА РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель > 0
			|		И РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель > 0
			|			ТОГДА РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель /
			|				РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель
			|		ИНАЧЕ 1
			|	КОНЕЦ * РасчетЗемельногоНалога.КоличествоМесяцевВладения / 12 * ВЫБОР
			|		КОГДА РасчетЗемельногоНалога.КоличествоМесяцевВладения > 0
			|			ТОГДА РасчетЗемельногоНалога.КоличествоМесяцевИспользования / РасчетЗемельногоНалога.КоличествоМесяцевВладения
			|		ИНАЧЕ 1
			|	КОНЕЦ * ВЫБОР
			|		КОГДА РасчетЗемельногоНалога.СниженнаяНалоговаяСтавка <> 0
			|			ТОГДА РасчетЗемельногоНалога.СниженнаяНалоговаяСтавка
			|		ИНАЧЕ РасчетЗемельногоНалога.НалоговаяСтавка
			|	КОНЕЦ / 100 * ВЫБОР
			|		КОГДА РасчетЗемельногоНалога.ПериодСтроительства = ""1""
			|			ТОГДА 2
			|		КОГДА РасчетЗемельногоНалога.ПериодСтроительства = ""2""
			|			ТОГДА 4
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК ЧИСЛО(15, 0)) КАК СуммаНалогаБезЛьгот,
			|	ВЫБОР
			|		КОГДА &ГодовойРасчет
			|			ТОГДА РасчетЗемельногоНалога.СуммаНалогаКУплате + РасчетЗемельногоНалога.СуммаАвансовыхПлатежей1Кв +
			|				РасчетЗемельногоНалога.СуммаАвансовыхПлатежей2Кв + РасчетЗемельногоНалога.СуммаАвансовыхПлатежей3Кв
			|		ИНАЧЕ РасчетЗемельногоНалога.СуммаНалогаКУплате
			|	КОНЕЦ КАК СуммаНалога,
			|	ВЫБОР
			|		КОГДА &ГодовойРасчет
			|			ТОГДА РасчетЗемельногоНалога.СуммаАвансовыхПлатежей1Кв + РасчетЗемельногоНалога.СуммаАвансовыхПлатежей2Кв +
			|				РасчетЗемельногоНалога.СуммаАвансовыхПлатежей3Кв
			|		ИНАЧЕ РасчетЗемельногоНалога.СуммаНалогаКУплате
			|	КОНЕЦ КАК СуммаАвансовыхПлатежей,
			|	РасчетЗемельногоНалога.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
			|	РасчетЗемельногоНалога.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395 КАК
			|		КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
			|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога КАК
			|		СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
			|	РасчетЗемельногоНалога.ПредставлениеНалоговойЛьготы КАК ПредставлениеНалоговойЛьготы,
			|	РасчетЗемельногоНалога.СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка,
			|	РасчетЗемельногоНалога.ПроцентУменьшенияСуммыНалога КАК ПроцентУменьшенияСуммыНалога,
			|	РасчетЗемельногоНалога.КоличествоМесяцевИспользования КАК КоличествоМесяцевИспользования,
			|	РасчетЗемельногоНалога.СуммаОсвобожденияОтУплатыНалога КАК СуммаОсвобожденияОтУплатыНалога
			|ПОМЕСТИТЬ ВТ_ПрежнийРегистр
			|ИЗ
			|	РегистрСведений.РасчетЗемельногоНалогаДо2020 КАК РасчетЗемельногоНалога
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
			|		ПО РасчетЗемельногоНалога.Организация = Организации.Ссылка
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
			|		ПО РасчетЗемельногоНалога.ОсновноеСредство = ОсновныеСредства.Ссылка
			|ГДЕ
			|	РасчетЗемельногоНалога.Активность
			|	И РасчетЗемельногоНалога.Регистратор = &Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РегистрацияЗемельныхУчастков.Период КАК Период,
			|	РегистрацияЗемельныхУчастков.ОсновноеСредство КАК ОсновноеСредство,
			|	РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу КАК ВключатьВНалоговуюБазу
			|ПОМЕСТИТЬ РегистрацияЗемельныхУчастков_Записи
			|ИЗ
			|	ПараметрыНачисленияЗемельногоНалогаСУчетомИсправлений КАК РегистрацияЗемельныхУчастков
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПрежнийРегистр КАК РасчетНалога
			|		ПО РегистрацияЗемельныхУчастков.Организация = РасчетНалога.Организация
			|		И РегистрацияЗемельныхУчастков.ОсновноеСредство = РасчетНалога.ОсновноеСредство
			|		И (РегистрацияЗемельныхУчастков.Период <= &ПериодРасчета)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РасчетНалога.ОсновноеСредство КАК ОсновноеСредство,
			|	МАКСИМУМ(ЕСТЬNULL(РегистрацияЗемельныхУчастков.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК
			|		ДатаПоследнегоСнятияСРегистрационногоУчета
			|ПОМЕСТИТЬ ДатыПоследнегоСнятияСРегистрационногоУчета
			|ИЗ
			|	ВТ_ПрежнийРегистр КАК РасчетНалога
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрацияЗемельныхУчастков_Записи КАК РегистрацияЗемельныхУчастков
			|		ПО РасчетНалога.ОсновноеСредство = РегистрацияЗемельныхУчастков.ОсновноеСредство
			|		И (РегистрацияЗемельныхУчастков.Период <= &ПредельнаяДатаВозникновенияПрава)
			|		И (НЕ РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу)
			|СГРУППИРОВАТЬ ПО
			|	РасчетНалога.ОсновноеСредство
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыПоследнегоСнятияСРегистрационногоУчета.ОсновноеСредство КАК ОсновноеСредство,
			|	МИНИМУМ(РегистрацияЗемельныхУчастков.Период) КАК ДатаРегистрацииЗемли
			|ПОМЕСТИТЬ ДатыРегистрации
			|ИЗ
			|	ДатыПоследнегоСнятияСРегистрационногоУчета КАК ДатыПоследнегоСнятияСРегистрационногоУчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрацияЗемельныхУчастков_Записи КАК РегистрацияЗемельныхУчастков
			|		ПО ДатыПоследнегоСнятияСРегистрационногоУчета.ОсновноеСредство = РегистрацияЗемельныхУчастков.ОсновноеСредство
			|		И
			|			ДатыПоследнегоСнятияСРегистрационногоУчета.ДатаПоследнегоСнятияСРегистрационногоУчета < РегистрацияЗемельныхУчастков.Период
			|		И (РегистрацияЗемельныхУчастков.Период <= &ПредельнаяДатаВозникновенияПрава)
			|		И (РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу)
			|СГРУППИРОВАТЬ ПО
			|	ДатыПоследнегоСнятияСРегистрационногоУчета.ОсновноеСредство
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыПоследнегоСнятияСРегистрационногоУчета.ОсновноеСредство КАК ОсновноеСредство,
			|	МАКСИМУМ(РегистрацияЗемельныхУчастков.Период) КАК ДатаРегистрацииЗемли
			|ПОМЕСТИТЬ НедействующиеРегистрации
			|ИЗ
			|	ДатыПоследнегоСнятияСРегистрационногоУчета КАК ДатыПоследнегоСнятияСРегистрационногоУчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрацияЗемельныхУчастков_Записи КАК РегистрацияЗемельныхУчастков
			|		ПО ДатыПоследнегоСнятияСРегистрационногоУчета.ОсновноеСредство = РегистрацияЗемельныхУчастков.ОсновноеСредство
			|		И
			|			ДатыПоследнегоСнятияСРегистрационногоУчета.ДатаПоследнегоСнятияСРегистрационногоУчета > РегистрацияЗемельныхУчастков.Период
			|		И (РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу)
			|СГРУППИРОВАТЬ ПО
			|	ДатыПоследнегоСнятияСРегистрационногоУчета.ОсновноеСредство
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыРегистрации.ОсновноеСредство КАК ОсновноеСредство,
			|	ЕСТЬNULL(ДатыРегистрации.ДатаРегистрацииЗемли, НедействующиеРегистрации.ДатаРегистрацииЗемли) КАК
			|		ДатаРегистрацииЗемли,
			|	ДатыПоследнегоСнятияСРегистрационногоУчета.ДатаПоследнегоСнятияСРегистрационногоУчета КАК ДатаСнятияСУчета
			|ПОМЕСТИТЬ РегистрацииИСнятияСУчета
			|ИЗ
			|	ДатыРегистрации КАК ДатыРегистрации
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДатыПоследнегоСнятияСРегистрационногоУчета КАК ДатыПоследнегоСнятияСРегистрационногоУчета
			|		ПО ДатыРегистрации.ОсновноеСредство = ДатыПоследнегоСнятияСРегистрационногоУчета.ОсновноеСредство
			|		ЛЕВОЕ СОЕДИНЕНИЕ НедействующиеРегистрации КАК НедействующиеРегистрации
			|		ПО ДатыРегистрации.ОсновноеСредство = НедействующиеРегистрации.ОсновноеСредство
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство
			|;
			|
			|ВЫБРАТЬ
			|	ДанныеРегистра.Период КАК Период,
			|	ДанныеРегистра.Регистратор КАК Регистратор,
			|	ДанныеРегистра.Организация КАК Организация,
			|	ДанныеРегистра.ОсновноеСредство КАК ОсновноеСредство,
			|	ДанныеРегистра.ДатаРегистрацииПравНаОбъектНедвижимости КАК ДатаРегистрацииПравНаОбъектНедвижимости
			|
			|ПОМЕСТИТЬ ПараметрыНачисленияЗемельногоНалогаСрезПоследних
			|
			|ИЗ
			|	(ВЫБРАТЬ
			|		МАКСИМУМ(ДанныеРегистра.Регистратор) КАК Регистратор,
			|		ДанныеРегистра_СрезПериодИсправления.Период КАК Период,
			|		ДанныеРегистра_СрезПериодИсправления.Организация КАК Организация,
			|		ДанныеРегистра_СрезПериодИсправления.ОсновноеСредство КАК ОсновноеСредство
			|	ИЗ
			|		(ВЫБРАТЬ
			|			МАКСИМУМ(ЕСТЬNULL(НАЧАЛОПЕРИОДА(ДанныеРегистраИсправление.ДатаИсправления, ДЕНЬ), ДАТАВРЕМЯ(1,1,1))) КАК ДатаИсправления,
			|			ДанныеРегистра_СрезПериод.Период КАК Период,
			|			ДанныеРегистра_СрезПериод.Организация КАК Организация,
			|			ДанныеРегистра_СрезПериод.ОсновноеСредство КАК ОсновноеСредство
			|		ИЗ
			|			(ВЫБРАТЬ
			|				МАКСИМУМ(ДанныеРегистра.Период) КАК Период,
			|				ДанныеРегистра.Организация КАК Организация,
			|				ДанныеРегистра.ОсновноеСредство КАК ОсновноеСредство
			|			ИЗ
			|				(ВЫБРАТЬ
			|					ДанныеРегистра.Период КАК Период,
			|					ДанныеРегистра.Организация КАК Организация,
			|					ДанныеРегистра.ОсновноеСредство КАК ОсновноеСредство
			|				ИЗ
			|					РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ДанныеРегистра
			|				ГДЕ
			|					ДанныеРегистра.Период <= &ПредельнаяДатаВозникновенияПрава
			|					И ДанныеРегистра.ДатаИсправления <= &ПредельнаяДатаВозникновенияПрава
			|					И ДанныеРегистра.Организация = &Организация
			|					И ДанныеРегистра.Активность
			|
			|				) КАК ДанныеРегистра
			|
			|			СГРУППИРОВАТЬ ПО
			|				ДанныеРегистра.Организация,
			|				ДанныеРегистра.ОсновноеСредство
			|
			|			) КАК ДанныеРегистра_СрезПериод
			|
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ДанныеРегистраИсправление
			|			ПО НАЧАЛОПЕРИОДА(ДанныеРегистраИсправление.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеРегистра_СрезПериод.Период, ДЕНЬ)
			|				И ДанныеРегистраИсправление.Организация = ДанныеРегистра_СрезПериод.Организация
			|				И ДанныеРегистраИсправление.ОсновноеСредство = ДанныеРегистра_СрезПериод.ОсновноеСредство
			|				И ДанныеРегистраИсправление.ДатаИсправления <= &ПредельнаяДатаВозникновенияПрава
			|				И ДанныеРегистраИсправление.ДатаИсправления <> ДАТАВРЕМЯ(1,1,1)
			|				И ДанныеРегистраИсправление.Активность
			|
			|		СГРУППИРОВАТЬ ПО
			|			ДанныеРегистра_СрезПериод.Период,
			|			ДанныеРегистра_СрезПериод.Организация,
			|			ДанныеРегистра_СрезПериод.ОсновноеСредство
			|
			|		) КАК ДанныеРегистра_СрезПериодИсправления
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ДанныеРегистра
			|		ПО ДанныеРегистра.Организация = ДанныеРегистра_СрезПериодИсправления.Организация
			|			И ДанныеРегистра.ОсновноеСредство = ДанныеРегистра_СрезПериодИсправления.ОсновноеСредство
			|			И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеРегистра_СрезПериодИсправления.Период, ДЕНЬ)
			|			И ДанныеРегистра.ДатаИсправления = ДанныеРегистра_СрезПериодИсправления.ДатаИсправления
			|			И ДанныеРегистра.Активность
			|
			|	СГРУППИРОВАТЬ ПО
			|		ДанныеРегистра_СрезПериодИсправления.Период,
			|		ДанныеРегистра_СрезПериодИсправления.Организация,
			|		ДанныеРегистра_СрезПериодИсправления.ОсновноеСредство
			|
			|	) КАК ДанныеРегистра_СрезРегистратор
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ДанныеРегистра
			|	ПО ДанныеРегистра.Регистратор = ДанныеРегистра_СрезРегистратор.Регистратор
			|		И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеРегистра_СрезРегистратор.Период, ДЕНЬ)
			|		И ДанныеРегистра.Организация = ДанныеРегистра_СрезРегистратор.Организация
			|		И ДанныеРегистра.ОсновноеСредство = ДанныеРегистра_СрезРегистратор.ОсновноеСредство
			|		И ДанныеРегистра.Активность
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство,
			|	Организация
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
			|	РегистрацияЗемельныхУчастковСрезПоследних.ДатаРегистрацииПравНаОбъектНедвижимости КАК
			|		ДатаРегистрацииПравНаОбъектНедвижимости
			|ПОМЕСТИТЬ ДатыРегистрацииПравНаНедвижимость
			|ИЗ
			|	ПараметрыНачисленияЗемельногоНалогаСрезПоследних КАК РегистрацияЗемельныхУчастковСрезПоследних
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РасчетНалога.ПериодРасчета КАК ПериодРасчета,
			|	РасчетНалога.Организация КАК Организация,
			|	РасчетНалога.ОсновноеСредство КАК ОсновноеСредство,
			|	АВТОНОМЕРЗАПИСИ() КАК Ключ
			|ПОМЕСТИТЬ ГруппировкаПоОбъектам
			|ИЗ
			|	ВТ_ПрежнийРегистр КАК РасчетНалога
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство,
			|	Организация,
			|	ПериодРасчета
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РасчетЗемельногоНалога.ПериодРасчета КАК ПериодРасчета,
			|	РасчетЗемельногоНалога.Организация КАК Организация,
			|	РасчетЗемельногоНалога.ОсновноеСредство КАК ОсновноеСредство,
			|	РасчетЗемельногоНалога.КадастровыйНомер КАК КадастровыйНомер,
			|	РасчетЗемельногоНалога.КБК КАК КБК,
			|	РасчетЗемельногоНалога.ИФНС КАК ИФНС,
			|	РасчетЗемельногоНалога.КодРегиона КАК КодРегиона,
			|	РасчетЗемельногоНалога.КодПоОКТМО КАК КодПоОКТМО,
			|	РасчетЗемельногоНалога.КодКатегорииЗемель КАК КодКатегорииЗемель,
			|	РасчетЗемельногоНалога.КадастроваяСтоимость КАК КадастроваяСтоимость,
			|	РасчетЗемельногоНалога.НеОблагаемаяНалогомСумма + РасчетЗемельногоНалога.КадастроваяСтоимостьНеоблагаемойДоли КАК
			|		НеоблагаемаяКадастроваяСтоимость,
			|	РасчетЗемельногоНалога.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
			|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
			|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
			|	РасчетЗемельногоНалога.КоличествоМесяцевИспользования КАК КоличествоМесяцевИспользования,
			|	РасчетЗемельногоНалога.НалоговаяСтавка КАК НалоговаяСтавка,
			|	РасчетЗемельногоНалога.СуммаНалогаБезЛьгот КАК СуммаНалогаБезЛьгот,
			|	РасчетЗемельногоНалога.СуммаНалогаБезЛьгот - РасчетЗемельногоНалога.СуммаНалога КАК СуммаЛьгот,
			|	РасчетЗемельногоНалога.СуммаНалога КАК СуммаНалога,
			|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей КАК СуммаАвансовыхПлатежей,
			|	РасчетЗемельногоНалога.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
			|	ЕСТЬNULL(РегистрацииИСнятияСУчета.ДатаРегистрацииЗемли, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаРегистрации,
			|	ЕСТЬNULL(РегистрацииИСнятияСУчета.ДатаСнятияСУчета, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаСнятияСУчета,
			|	ЕСТЬNULL(ДатыРегистрацииПравНаНедвижимость.ДатаРегистрацииПравНаОбъектНедвижимости, ДАТАВРЕМЯ(1, 1, 1)) КАК
			|		ДатаРегистрацииПравНаОбъектНедвижимости,
			|	РасчетЗемельногоНалога.ПредставлениеНалоговойЛьготы КАК ПредставлениеНалоговойЛьготы,
			|	РасчетЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе КАК НалоговаяЛьготаПоНалоговойБазе,
			|	РасчетЗемельногоНалога.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395 КАК
			|		КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
			|	РасчетЗемельногоНалога.СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка,
			|	РасчетЗемельногоНалога.ПроцентУменьшенияСуммыНалога КАК ПроцентУменьшенияСуммыНалога,
			|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога КАК
			|		СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
			|	ГруппировкаПоОбъектам.Ключ КАК КлючГруппировки,
			|	1 КАК КоличествоЗаписей
			|ИЗ
			|	ВТ_ПрежнийРегистр КАК РасчетЗемельногоНалога
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ГруппировкаПоОбъектам КАК ГруппировкаПоОбъектам
			|		ПО РасчетЗемельногоНалога.ОсновноеСредство = ГруппировкаПоОбъектам.ОсновноеСредство
			|		И РасчетЗемельногоНалога.Организация = ГруппировкаПоОбъектам.Организация
			|		И РасчетЗемельногоНалога.ПериодРасчета = ГруппировкаПоОбъектам.ПериодРасчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрацииИСнятияСУчета КАК РегистрацииИСнятияСУчета
			|		ПО РасчетЗемельногоНалога.ОсновноеСредство = РегистрацииИСнятияСУчета.ОсновноеСредство
			|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыРегистрацииПравНаНедвижимость КАК ДатыРегистрацииПравНаНедвижимость
			|		ПО РасчетЗемельногоНалога.ОсновноеСредство = ДатыРегистрацииПравНаНедвижимость.ОсновноеСредство
			|ИТОГИ
			|	МАКСИМУМ(ПериодРасчета),
			|	МАКСИМУМ(Организация),
			|	МАКСИМУМ(ОсновноеСредство),
			|	СУММА(КоличествоМесяцевИспользования),
			|	МАКСИМУМ(ДатаРегистрации),
			|	СУММА(КоличествоЗаписей)
			|ПО
			|	КлючГруппировки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТ_ПрежнийРегистр;
			|УНИЧТОЖИТЬ ГруппировкаПоОбъектам;
			|УНИЧТОЖИТЬ РегистрацииИСнятияСУчета;
			|УНИЧТОЖИТЬ ДатыРегистрацииПравНаНедвижимость;
			|УНИЧТОЖИТЬ ПараметрыНачисленияЗемельногоНалогаСрезПоследних;
			|УНИЧТОЖИТЬ НедействующиеРегистрации;
			|УНИЧТОЖИТЬ ДатыРегистрации;
			|УНИЧТОЖИТЬ ДатыПоследнегоСнятияСРегистрационногоУчета;
			|УНИЧТОЖИТЬ РегистрацияЗемельныхУчастков_Записи;
			|";
			
			Запрос.УстановитьПараметр("Организация", ВыборкаРегистратор.Организация);
			Запрос.УстановитьПараметр("ПериодРасчета", ВыборкаРегистратор.ПериодРасчета);
			Запрос.УстановитьПараметр("ГодовойРасчет", ВыборкаРегистратор.ГодовойРасчет);
			// Постановки и снятия с учета, произошедшие после 15 числа последнего месяца периода, не учитываются в расчете
			// интервалов владения.
			Запрос.УстановитьПараметр("ПредельнаяДатаВозникновенияПрава", 
				Дата(Год(ВыборкаРегистратор.ПериодРасчета),
					Месяц(ВыборкаРегистратор.ПериодРасчета),
					15,
					23, 59, 59));
					
			ВыборкаПоОбъектам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			НовыйРегистр = СоздатьНаборЗаписей();
			
			НовыйРегистр.Отбор.Регистратор.Установить(Регистратор);
			
			Пока ВыборкаПоОбъектам.Следующий() Цикл
				
				// Если запись одна, то грубо считаем, что ДатаСведений = ДатаРегистрации (см ниже).
				// Если записей несколько, то пробуем раскидать даты сведений по отчетному перироду на основании
				// количества месяцев применения конктретной записи расчета.
				// Если сумма по КоличествоМесяцевИспользования больше длины периода (такие ошибки могли возникать в
				// прежнем расчете), то устанавливаем ДатаСведений техногенно: начинаем от начала периода и просто
				// инкрементируем дату для каждой следующей записи.
				
				Если ВыборкаПоОбъектам.КоличествоЗаписей > 1 Тогда
					НачалоПериода = НачалоКвартала(ВыборкаПоОбъектам.ПериодРасчета);
					МесяцевВПериоде = 3;
					Если Месяц(КонецКвартала(ВыборкаПоОбъектам.ПериодРасчета)) = 12 Тогда
						НачалоПериода = НачалоГода(ВыборкаПоОбъектам.ПериодРасчета);
						МесяцевВПериоде = 12;
					КонецЕсли;
				КонецЕсли;
				
				ВыборкаЗаписей = ВыборкаПоОбъектам.Выбрать();
				ДатаСведений = НачалоПериода;
				Пока ВыборкаЗаписей.Следующий() Цикл
					НоваяЗапись = НовыйРегистр.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяЗапись, ВыборкаЗаписей);
					
					Если ВыборкаПоОбъектам.КоличествоЗаписей = 1 Тогда
						// Считаем, что ничего не менялось с даты регистрации участка
						НоваяЗапись.ДатаСведений = НоваяЗапись.ДатаРегистрации;
					Иначе // Более одной записи.
						НоваяЗапись.ДатаСведений = ДатаСведений;
						Если ВыборкаПоОбъектам.КоличествоМесяцевИспользования > МесяцевВПериоде Тогда
							ДатаСведений = ДобавитьМесяц(ДатаСведений, 1);
						Иначе
							ДатаСведений = ДобавитьМесяц(ДатаСведений, ВыборкаЗаписей.КоличествоМесяцевИспользования);
						КонецЕсли;
					КонецЕсли;
				
					// Заполняем ссылки на справочник льгот.
					ЕстьЛьготаПоНалоговойБазе = Ложь;
					ЕстьЛьготаПоСуммеНалога = Ложь;
					ЕстьЛьготаПоНалоговойСтавке = Ложь;
							
					// Про логику переноса льгот в новые объекты см. в
					// РегистрыСведений.РегистрацияЗемельныхУчастков.ЗаполнитьДанныеЛьгот().
					Если ВыборкаЗаписей.НалоговаяЛьготаПоНалоговойБазе =
						Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияПоСтатье395 Тогда
					 			
						ЕстьЛьготаПоНалоговойБазе = Истина;
						
						ПоискЛьготыПоНалоговойБазе = Новый Структура;
						ПоискЛьготыПоНалоговойБазе.Вставить("КодЛьготы", ВыборкаЗаписей.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395);
						ПоискЛьготыПоНалоговойБазе.Вставить("ВидЛьготы", Перечисления.ВидыЛьготПоИмущественнымНалогам.Освобождение);
				
					ИначеЕсли ВыборкаЗаписей.НалоговаяЛьготаПоНалоговойБазе =
						Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияМестное Тогда
					 			
						ЕстьЛьготаПоНалоговойБазе = Истина;
						
						// Это местная льгота в виде освобождения. Код 3022400.
						ПоискЛьготыПоНалоговойБазе = ЛьготыПоИмущественнымНалогам.ПоискМестнойЛьготы(
							ВыборкаЗаписей.КодРегиона,
							ВыборкаЗаписей.КодПоОКТМО);
						ПоискЛьготыПоНалоговойБазе.Вставить("КодЛьготы", "3022400");
						ПоискЛьготыПоНалоговойБазе.Вставить("ВидЛьготы", Перечисления.ВидыЛьготПоИмущественнымНалогам.Освобождение);
					
					ИначеЕсли ВыборкаЗаписей.НалоговаяЛьготаПоНалоговойБазе =
						Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеОблагаемаяНалогомПлощадь Тогда
							
						ЕстьЛьготаПоНалоговойБазе = Истина;
						
						// Это местная льгота в виде необлагаемой доли площади. Код 3022300.
						ПоискЛьготыПоНалоговойБазе = ЛьготыПоИмущественнымНалогам.ПоискМестнойЛьготы(
							ВыборкаЗаписей.КодРегиона,
							ВыборкаЗаписей.КодПоОКТМО);
						ПоискЛьготыПоНалоговойБазе.Вставить("КодЛьготы", "3022300");
						ПоискЛьготыПоНалоговойБазе.Вставить("ВидЛьготы", Перечисления.ВидыЛьготПоИмущественнымНалогам.ДоляНеоблагаемойПлощади);
					
					ИначеЕсли ВыборкаЗаписей.НалоговаяЛьготаПоНалоговойБазе =
						Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.УменьшениеНалоговойБазы Тогда
							
						ЕстьЛьготаПоНалоговойБазе = Истина;
						
						// Это местная льгота в виде налогового вычета. Код 3022100.
						ПоискЛьготыПоНалоговойБазе = ЛьготыПоИмущественнымНалогам.ПоискМестнойЛьготы(
							ВыборкаЗаписей.КодРегиона,
							ВыборкаЗаписей.КодПоОКТМО);
						ПоискЛьготыПоНалоговойБазе.Вставить("КодЛьготы", "3022100");
						ПоискЛьготыПоНалоговойБазе.Вставить("ВидЛьготы", Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму);
							
					КонецЕсли;
					
					Если ВыборкаЗаписей.ПроцентУменьшенияСуммыНалога > 0
						 Или ВыборкаЗаписей.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога > 0 Тогда
						
						ЕстьЛьготаПоСуммеНалога = Истина;
						
						// Это местная льгота в виде уменьшения суммы налога. Код 3022200.
						ПоискЛьготыПоСуммеНалога = ЛьготыПоИмущественнымНалогам.ПоискМестнойЛьготы(
							ВыборкаЗаписей.КодРегиона,
							ВыборкаЗаписей.КодПоОКТМО);
						ПоискЛьготыПоСуммеНалога.Вставить("КодЛьготы", "3022200");
						Если ВыборкаЗаписей.ПроцентУменьшенияСуммыНалога > 0 Тогда
							ПоискЛьготыПоСуммеНалога.Вставить("ВидЛьготы", Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент);
							ПоискЛьготыПоСуммеНалога.Вставить("ПроцентУменьшения", ВыборкаЗаписей.ПроцентУменьшенияСуммыНалога);
						Иначе
							// Снижение суммы налога на фиксированную сумму
							ПоискЛьготыПоСуммеНалога.Вставить("ВидЛьготы", Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаСумму);
						КонецЕсли;
					
					КонецЕсли;
					
					Если ВыборкаЗаписей.СниженнаяНалоговаяСтавка > 0 Тогда
						
						ЕстьЛьготаПоНалоговойСтавке = Истина;
						
						// Это местная льгота в виде уменьшения ставки налога. Код 3022500.
						ПоискЛьготыПоНалоговойСтавке = ЛьготыПоИмущественнымНалогам.ПоискМестнойЛьготы(
							ВыборкаЗаписей.КодРегиона,
							ВыборкаЗаписей.КодПоОКТМО);
						ПоискЛьготыПоНалоговойСтавке.Вставить("КодЛьготы", "3022500");
						ПоискЛьготыПоНалоговойСтавке.Вставить("ВидЛьготы", Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеСтавкиДоУказанной);
					
					КонецЕсли;
					
					Если ЕстьЛьготаПоНалоговойБазе Тогда
						НоваяЗапись.ОснованиеЛьготыПоНалоговойБазе = ЛьготыПоИмущественнымНалогам.НайтиИлиСоздатьЛьготу(
							Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог,
							ПоискЛьготыПоНалоговойБазе,
							Льготы);
					КонецЕсли;
						
					Если ЕстьЛьготаПоСуммеНалога Тогда
						НоваяЗапись.ОснованиеЛьготыСнижениеСуммыНалога = ЛьготыПоИмущественнымНалогам.НайтиИлиСоздатьЛьготу(
							Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог,
							ПоискЛьготыПоСуммеНалога,
							Льготы);
					КонецЕсли;
					
					Если ЕстьЛьготаПоНалоговойСтавке Тогда
						НоваяЗапись.ОснованиеЛьготыСнижениеСтавки = ЛьготыПоИмущественнымНалогам.НайтиИлиСоздатьЛьготу(
							Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог,
							ПоискЛьготыПоНалоговойСтавке,
							Льготы);
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Если НовыйРегистр.Количество() > 0 Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НовыйРегистр, Истина);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
			Параметры.ПрогрессВыполнения.ОбработаноОбъектов = Параметры.ПрогрессВыполнения.ОбработаноОбъектов + 1;
			КоличествоОбрабатываемыхЗаписей = 0;
			
		Исключение
			
			ОтменитьТранзакцию();
			
			// Если не удалось перенести записи в новый регистр, повторим попытку снова (позже).
			КоличествоОшибок = КоличествоОшибок + 1;
			
			// Учтем необработанные записи в общем размере порции.
			
			// Возможно, ошибка возникла уже после того, как было рассчитано количество записей регистратора.
			// В этом случае КоличествоОбрабатываемыхЗаписей не равно 0. В ином случае рассчитаем количество записей здесь.
			Если КоличествоОбрабатываемыхЗаписей = 0 Тогда
							
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("Регистратор", Регистратор);
				
				Запрос.Текст =
				"ВЫБРАТЬ
				|	ЕСТЬNULL(КОЛИЧЕСТВО(*), 0) КАК КоличествоЗаписей
				|ИЗ
				|	РегистрСведений.РасчетЗемельногоНалогаДо2020 КАК РасчетЗемельногоНалогаДо2020
				|ГДЕ
				|	РасчетЗемельногоНалогаДо2020.Регистратор = &Регистратор";
				
				ИтогиПоРегистратору = Запрос.Выполнить().Выбрать();
				ИтогиПоРегистратору.Следующий();
				
				ОстатокПорции = ОстатокПорции - ИтогиПоРегистратору.КоличествоЗаписей;
				
			КонецЕсли;	
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось перенести данные в регистр ""Расчет земельного налога"" по документу: %1 по причине:
			|%2';
			|en = 'Cannot transfer data to the ""Land value tax calculation"" register for the %1 document. Reason:
			|%2'"), 
			Строка(Регистратор),
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Регистратор.Метаданные(),
				Регистратор,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла; 
	
	Параметры.ОбработкаЗавершена = (Параметры.ПрогрессВыполнения.ОбработаноОбъектов = Параметры.ПрогрессВыполнения.ВсегоОбъектов);
	
	Если КоличествоОшибок > 0 Тогда
				
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре ""РегистрСведений.РасчетЗемельногоНалога.ЗаполнитьДаннымиПрежнегоРегистра""
			|не удалось перенести данные из прежнего регистра. Количество ошибок: %1';
			|en = 'The ""РегистрСведений.РасчетЗемельногоНалога.ЗаполнитьДаннымиПрежнегоРегистра""
			|procedure failed to transfer data from the previous register. Total errors: %1'"),
			КоличествоОшибок);
			
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли