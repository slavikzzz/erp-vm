#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Удаляет из регистра сведений РегистрацииВНалоговомОргане записи, которые стали
//	некорректными после изменения организации в элементе справочника РегистрацииВНалоговомОргане.
//
//	Параметры:
//		РегистрацияВНалоговомОргане - СправочникОбъект.РегистрацииВНалоговомОргане - регистрация в налоговом органе,
//			для которой необходимо выполнить актуализацию.
//
Процедура АктуализироватьСоставРегистрацииВНалоговомОргане(РегистрацияВНалоговомОргане) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегистрацииВНалоговомОргане.Подразделение,
	|	РегистрацииВНалоговомОргане.Организация
	|ИЗ
	|	РегистрСведений.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане = &Ссылка
	|	И РегистрацииВНалоговомОргане.Организация.ГоловнаяОрганизация <> &Владелец";
	
	Запрос.УстановитьПараметр("Ссылка",   РегистрацияВНалоговомОргане.Ссылка);
	Запрос.УстановитьПараметр("Владелец", РегистрацияВНалоговомОргане.Владелец);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Запись = РегистрыСведений.РегистрацииВНалоговомОргане.СоздатьМенеджерЗаписи();
		Запись.Организация = Выборка.Организация;
		Запись.Подразделение = Выборка.Подразделение;
		
		Запись.Удалить();
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует временную таблицу, содержащую данные подразделений на дату документа:
// 	* Подразделение
// 	* Организация
// 	* РегистрацияВНалоговомОргане
//
//	Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Организация,
//		Подразделение,
//		Период.
//
Процедура ПоместитьВременнуюТаблицуДанныеПодразделений(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДанныхДокументов.Ссылка КАК Ссылка,
		|	ДанныеРегистрацийОрганизаций.Подразделение КАК Подразделение,
		|	ДанныеРегистрацийОрганизаций.Организация КАК Организация,
		|	МАКСИМУМ(ДанныеРегистрацийОрганизаций.Период) КАК Период
		|ПОМЕСТИТЬ МаксимумыДанныхПодразделений
		|ИЗ
		|	РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеРегистрацийОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
		|		ПО ДанныеРегистрацийОрганизаций.Подразделение = ТаблицаДанныхДокументов.Подразделение
		|		И ДанныеРегистрацийОрганизаций.Организация = ТаблицаДанныхДокументов.Организация
		|		И ДанныеРегистрацийОрганизаций.Период <= ТаблицаДанныхДокументов.Период
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|		ПО ДанныеРегистрацийОрганизаций.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка
		|		И (РегистрацииВНалоговомОргане.ДатаСнятияСУчета > ДанныеРегистрацийОрганизаций.Период
		|		ИЛИ РегистрацииВНалоговомОргане.ДатаСнятияСУчета = ДАТАВРЕМЯ(1, 1, 1))
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДанныхДокументов.Ссылка,
		|	ДанныеРегистрацийОрганизаций.Подразделение,
		|	ДанныеРегистрацийОрганизаций.Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подразделение,
		|	Организация,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДанныхДокументов.Ссылка КАК Ссылка,
		|	ДанныеРегистрацийОрганизаций.Организация КАК Организация,
		|	МАКСИМУМ(ДанныеРегистрацийОрганизаций.Период) КАК Период
		|ПОМЕСТИТЬ МаксимумыДанныхОрганизаций
		|ИЗ
		|	РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеРегистрацийОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
		|		ПО ДанныеРегистрацийОрганизаций.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|		И ДанныеРегистрацийОрганизаций.Организация = ТаблицаДанныхДокументов.Организация
		|		И ДанныеРегистрацийОрганизаций.Период <= ТаблицаДанныхДокументов.Период
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|		ПО ДанныеРегистрацийОрганизаций.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка
		|		И (РегистрацииВНалоговомОргане.ДатаСнятияСУчета > ДанныеРегистрацийОрганизаций.Период
		|		ИЛИ РегистрацииВНалоговомОргане.ДатаСнятияСУчета = ДАТАВРЕМЯ(1, 1, 1))
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДанныхДокументов.Ссылка,
		|	ДанныеРегистрацийОрганизаций.Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Период
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксимумыДанныхПодразделений.Ссылка КАК Ссылка,
		|	РегистрацииВНалоговомОргане.Подразделение КАК Подразделение,
		|	РегистрацииВНалоговомОргане.Организация КАК Организация,
		|	РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
		|ПОМЕСТИТЬ ДанныеПодразделений
		|ИЗ
		|	РегистрСведений.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксимумыДанныхПодразделений КАК МаксимумыДанныхПодразделений
		|		ПО (РегистрацииВНалоговомОргане.Подразделение = МаксимумыДанныхПодразделений.Подразделение
		|		И РегистрацииВНалоговомОргане.Организация = МаксимумыДанныхПодразделений.Организация
		|		И РегистрацииВНалоговомОргане.Период = МаксимумыДанныхПодразделений.Период)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Подразделение,
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксимумыДанныхОрганизаций.Ссылка КАК Ссылка,
		|	РегистрацииВНалоговомОргане.Организация КАК Организация,
		|	РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
		|ПОМЕСТИТЬ ДанныеОрганизаций
		|ИЗ
		|	РегистрСведений.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксимумыДанныхОрганизаций КАК МаксимумыДанныхОрганизаций
		|		ПО (РегистрацииВНалоговомОргане.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|		И РегистрацииВНалоговомОргане.Организация = МаксимумыДанныхОрганизаций.Организация
		|		И РегистрацииВНалоговомОргане.Период = МаксимумыДанныхОрганизаций.Период)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ МаксимумыДанныхПодразделений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ МаксимумыДанныхОрганизаций
		|";
	
	РезультатЗапроса = Запрос.Выполнить();
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти


//++ НЕ УТ

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.РегистрацииВНалоговомОргане.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.15.18";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("f6acc5dc-d1e9-438b-803c-fa2f73117225");
	Обработчик.ПроцедураЗаполненияДанныхОбновления =
		"РегистрыСведений.РегистрацииВНалоговомОргане.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Порядок = Перечисления.ПорядокОбработчиковОбновления.Некритичный;
	Обработчик.Комментарий = 
		НСтр("ru = 'Заполняет регистр ""Регистрации подразделений"" по данным регистра ""История регистраций в налоговом органе""';
			|en = 'Fills the ""Business unit registration"" register by the "" History of registrations with tax authority"" register data'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыСведений.ИсторияРегистрацийВНалоговомОргане.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.РегистрацииВНалоговомОргане.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыСведений.ИсторияРегистрацийВНалоговомОргане.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.РегистрацииВНалоговомОргане";
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИсторияРегистрацийВНалоговомОргане.Период КАК Период,
	|	ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница КАК Организация
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистрацийВНалоговомОргане
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ПО (ИсторияРегистрацийВНалоговомОргане.Период = РегистрацииВНалоговомОргане.Период
	|				И ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница = РегистрацииВНалоговомОргане.Организация)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница) = ТИП(Справочник.Организации)
	|	И РегистрацииВНалоговомОргане.Период ЕСТЬ NULL";
	
	Данные = Запрос.Выполнить().Выгрузить();
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные, ДополнительныеПараметры);
	
КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.РегистрацииВНалоговомОргане;
	ПолноеИмяОбъекта  = МетаданныеОбъекта.ПолноеИмя();

	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ИмяВременнойТаблицы = "ВТДанныеДляОбработки";
	ДополнительныеПараметры.ВыбиратьПорциями = Ложь;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуИзмеренийНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь,
		ПолноеИмяОбъекта,
		МенеджерВременныхТаблиц,
		ДополнительныеПараметры);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДляОбработки.Период КАК Период,
	|	ДанныеДляОбработки.Организация КАК Организация
	|ИЗ
	|	ВТДанныеДляОбработки КАК ДанныеДляОбработки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НачатьТранзакцию();
			
			Попытка
				
				БлокировкаДанных = Новый БлокировкаДанных;
				
				ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.ИсторияРегистрацийВНалоговомОргане");
				ЭлементБлокировкиДанных.УстановитьЗначение("Период", Выборка.Период);
				ЭлементБлокировкиДанных.УстановитьЗначение("СтруктурнаяЕдиница", Выборка.Организация);
				ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Разделяемый;
				
				ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.РегистрацииВНалоговомОргане");
				ЭлементБлокировкиДанных.УстановитьЗначение("Период", Выборка.Период);
				ЭлементБлокировкиДанных.УстановитьЗначение("Организация", Выборка.Организация);
				ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
				
				БлокировкаДанных.Заблокировать();
				
				ДанныеРегистра = РегистрыСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(Выборка.Период, Новый Структура("СтруктурнаяЕдиница", Выборка.Организация));
				
				НаборЗаписей = РегистрыСведений.РегистрацииВНалоговомОргане.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
				НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
				
				Если ДанныеРегистра.Количество() > 0 Тогда
					
					НоваяЗапись = НаборЗаписей.Добавить();
					НоваяЗапись.Период = Выборка.Период;
					НоваяЗапись.Организация = Выборка.Организация;
					НоваяЗапись.РегистрацияВНалоговомОргане = ДанныеРегистра[0].РегистрацияВНалоговомОргане;
					
				КонецЕсли;
				
				// Добавляем дополнительное свойство, для последующего исключения выполнения
				//    обработки в процедуре ЗакрытиеМесяцаСервер.ПроверитьНеобходимостьПереоценки
				НаборЗаписей.ДополнительныеСвойства.Вставить("ЗаписьПриОбновленииИнформационнойБазы");
				
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				
				ТекстСообщения = НСтр("ru = 'Не удалось записать данные в регистр %ИмяРегистра% по причине: %Причина%';
										|en = 'Cannot write data to register %ИмяРегистра%. Reason: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", ПолноеИмяОбъекта);
				
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта, Неопределено, ТекстСообщения);
				
				ВызватьИсключение;
				
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

//-- НЕ УТ


#КонецОбласти

#КонецЕсли