//++ Устарело_Производство21
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	//++ НЕ УТКА
	УстановитьУсловноеОформление();
	//-- НЕ УТКА
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Если НЕ ПолучитьФункциональнуюОпцию("УправлениеПредприятием") Тогда
		Отказ = Истина;
		ВызватьИсключение НСтр("ru = 'Форма не используется в данной конфигурации';
								|en = 'Form is not used in this configuration'");
	КонецЕсли; 
	
	//++ НЕ УТКА
	ИспользоватьНесколькоСкладов = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладов");
	СкладПоУмолчанию = ОбщегоНазначенияУТ.ПолучитьПроверитьСкладПоУмолчанию();
	
	Подразделение  = Параметры.Подразделение;
	Номенклатура   = Параметры.Номенклатура;
	Характеристика = Параметры.Характеристика;
	
	ХарактеристикиИспользуются = Справочники.Номенклатура.ХарактеристикиИспользуются(Номенклатура);
	Если НЕ ХарактеристикиИспользуются Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Характеристика", "Видимость", Ложь);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.СпособыНастройкиПередачиМатериаловВПроизводство.ОпределяетсяНастройкойДляПодразделения) КАК СпособНастройки,
	|	НастройкаПодразделение.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство) КАК ОснованиеДляПолучения
	|ИЗ
	|	РегистрСведений.НастройкаПередачиМатериаловВПроизводство КАК НастройкаПодразделение
	|ГДЕ
	|	НастройкаПодразделение.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И НастройкаПодразделение.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	И НастройкаПодразделение.Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.СпособыНастройкиПередачиМатериаловВПроизводство.НастраиваетсяИндивидуально) КАК СпособНастройки,
	|	НастройкаНоменклатура.Склад,
	|	НастройкаНоменклатура.ОснованиеДляПолучения
	|ИЗ
	|	РегистрСведений.НастройкаПередачиМатериаловВПроизводство КАК НастройкаНоменклатура
	|ГДЕ
	|	НастройкаНоменклатура.Номенклатура = &Номенклатура
	|	И НастройкаНоменклатура.Характеристика = &Характеристика
	|	И НастройкаНоменклатура.Подразделение = &Подразделение";
	
	Запрос.УстановитьПараметр("Подразделение",  Подразделение);
	Запрос.УстановитьПараметр("Номенклатура",   Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СпособНастройки = Перечисления.СпособыНастройкиПередачиМатериаловВПроизводство.ОпределяетсяНастройкойДляПодразделения;
	ЕстьНастройкиДляПодразделения = Ложь;
	ОснованиеДляПолучения = Перечисления.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство;
	Пока Выборка.Следующий() Цикл
		Если Выборка.СпособНастройки = Перечисления.СпособыНастройкиПередачиМатериаловВПроизводство.ОпределяетсяНастройкойДляПодразделения Тогда
			СкладПодразделение = Выборка.Склад;
			ОснованиеДляПолученияПодразделение = Выборка.ОснованиеДляПолучения;
			ЕстьНастройкиДляПодразделения = Истина;
		Иначе
			СпособНастройки = Перечисления.СпособыНастройкиПередачиМатериаловВПроизводство.НастраиваетсяИндивидуально;
			Склад = Выборка.Склад;
			ОснованиеДляПолучения = Выборка.ОснованиеДляПолучения;
		КонецЕсли;
	КонецЦикла;
	
	УстановитьСпособНастройки(ЭтаФорма);
	//-- НЕ УТКА
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	//++ НЕ УТКА
	Если Модифицированность Тогда
		
		Если ЗавершениеРаботы Тогда
			Отказ = Истина;
			ТекстПредупреждения = НСтр("ru = 'Данные в форме были изменены.
											|Можно продолжить работу и сохранить изменения, 
											|либо завершить работу без сохранения изменений.';
											|en = 'Data in the form was changed. 
											|You can continue working and save the changes
											|or close the form without saving changes.'");
			Возврат;
		КонецЕсли; 
	
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
		
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?';
							|en = 'The data has changed. Do you want to save the changes?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПередЗакрытием", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли; 
	//-- НЕ УТКА
	
	Возврат; // пустой обработчик
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	//++ НЕ УТКА
	Если СпособНастройки = Перечисления.СпособыНастройкиПередачиМатериаловВПроизводство.ОпределяетсяНастройкойДляПодразделения Тогда
		МассивНепроверяемыхРеквизитов = Новый Массив;
		МассивНепроверяемыхРеквизитов.Добавить("Склад");
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	КонецЕсли; 
	//-- НЕ УТКА
	
	Возврат; // пустой обработчик
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпособНастройкиПриИзменении(Элемент)
	
	//++ НЕ УТКА
	УстановитьСпособНастройки(ЭтаФорма);
	//-- НЕ УТКА
	
	Возврат; // пустой обработчик
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	//++ НЕ УТКА
	Если ЗаписатьНастройку() Тогда
		Закрыть(Истина);
	КонецЕсли; 
	//-- НЕ УТКА
	
	Возврат; // пустой обработчик
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	
	//++ НЕ УТКА
	ЗаписатьНастройку();
	//-- НЕ УТКА
	
	Возврат; // пустой обработчик
	
КонецПроцедуры
 
#КонецОбласти

//++ НЕ УТКА

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Склад.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СпособНастройки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;

	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСпособНастройки(Форма)

	ИменаЭлементов = "Склад,ОснованиеДляПолучения2,ОснованиеДляПолучения3";
	ОпределяетсяНастройкойДляПодразделения = ПредопределенноеЗначение("Перечисление.СпособыНастройкиПередачиМатериаловВПроизводство.ОпределяетсяНастройкойДляПодразделения");
	Доступность = (Форма.СпособНастройки <> ОпределяетсяНастройкойДляПодразделения);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Форма.Элементы, ИменаЭлементов, "Доступность", Доступность);
	
КонецПроцедуры

&НаКлиенте
Функция ЗаписатьНастройку()

	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗаписатьНастройкуНаСервере() Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Оповестить("Запись_НастройкаПередачиМатериаловВПроизводство");
	
	Возврат Истина;

КонецФункции
 
&НаСервере
Функция ЗаписатьНастройкуНаСервере()

	Если СпособНастройки = Перечисления.СпособыНастройкиПередачиМатериаловВПроизводство.ОпределяетсяНастройкойДляПодразделения Тогда
		
		Попытка
		
			МенеджерЗаписи = РегистрыСведений.НастройкаПередачиМатериаловВПроизводство.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Подразделение  = Подразделение;
			МенеджерЗаписи.Номенклатура   = Номенклатура;
			МенеджерЗаписи.Характеристика = Характеристика;
			
			МенеджерЗаписи.Удалить();;
		
		Исключение
			Возврат Ложь;
		КонецПопытки; 
		
	Иначе
		
		Попытка
		
			МенеджерЗаписи = РегистрыСведений.НастройкаПередачиМатериаловВПроизводство.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Подразделение  = Подразделение;
			МенеджерЗаписи.Номенклатура   = Номенклатура;
			МенеджерЗаписи.Характеристика = Характеристика;
			МенеджерЗаписи.Склад          = ?(ИспользоватьНесколькоСкладов, Склад, СкладПоУмолчанию);
			МенеджерЗаписи.ОснованиеДляПолучения = ОснованиеДляПолучения;
			
			МенеджерЗаписи.Записать();
		
		Исключение
			Возврат Ложь;
		КонецПопытки; 

	КонецЕсли; 
	
	Модифицированность = Ложь;
	
	Возврат Истина;

КонецФункции

&НаКлиенте
Процедура ВопросПередЗакрытием(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Если ЗаписатьНастройку() Тогда
			Закрыть();
		КонецЕсли;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

//-- НЕ УТКА

//-- Устарело_Производство21