
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Заголовок = Параметры.Заголовок;
	
	Если ЗначениеЗаполнено(Параметры.СтруктураДляОтбора.ИсточникОтчета) Тогда
		
		Если ТипЗнч(Параметры.СтруктураДляОтбора.Справочник) = Тип("Строка") Тогда
			
			ОтборДинамическогоСписка();
			
			Если ЗначениеЗаполнено(Параметры.СтруктураДляОтбора.Код) Тогда
				
				СтруктураКонструктораКлюча = Новый Структура;
				СтруктураКонструктораКлюча.Вставить("ИсточникОтчета", Параметры.СтруктураДляОтбора.ИсточникОтчета);
				СтруктураКонструктораКлюча.Вставить("Справочник",	  Параметры.СтруктураДляОтбора.Справочник);
				СтруктураКонструктораКлюча.Вставить("Код",			  Параметры.СтруктураДляОтбора.Код);
				СтруктураКонструктораКлюча.Вставить("Фильтр",		  Параметры.СтруктураДляОтбора.Фильтр);
				
				МассивКонструктораКлюча = Новый Массив;
				МассивКонструктораКлюча.Добавить(СтруктураКонструктораКлюча);
				КлючЗаписиРегистра = Новый("РегистрСведенийКлючЗаписи.ОбщиеСправочникиШаблоновОтчетовСтатистики", МассивКонструктораКлюча);
				Элементы.Список.ТекущаяСтрока = КлючЗаписиРегистра;
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Параметры.СтруктураДляОтбора.Справочник) = Тип("Структура") Тогда
		
			Список.ПроизвольныйЗапрос = Истина;
			Список.ТекстЗапроса = "ВЫБРАТЬ
			                      |	ОбщиеСправочникиШаблоновОтчетовСтатистики.Код КАК Код
			                      |ПОМЕСТИТЬ ВТ_Доп
			                      |ИЗ
			                      |	РегистрСведений.ОбщиеСправочникиШаблоновОтчетовСтатистики КАК ОбщиеСправочникиШаблоновОтчетовСтатистики
			                      |ГДЕ
			                      |	ОбщиеСправочникиШаблоновОтчетовСтатистики.ИсточникОтчета = &ИсточникОтчета
			                      |	И ОбщиеСправочникиШаблоновОтчетовСтатистики.Справочник = &СправочникТабДоп
			                      |;
			                      |
			                      |////////////////////////////////////////////////////////////////////////////////
			                      |ВЫБРАТЬ
			                      |	ОбщиеСправочникиШаблоновОтчетовСтатистики.ИсточникОтчета КАК ИсточникОтчета,
			                      |	ОбщиеСправочникиШаблоновОтчетовСтатистики.Код КАК Код,
			                      |	ОбщиеСправочникиШаблоновОтчетовСтатистики.Наименование КАК Наименование
			                      |ИЗ
			                      |	РегистрСведений.ОбщиеСправочникиШаблоновОтчетовСтатистики КАК ОбщиеСправочникиШаблоновОтчетовСтатистики
			                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Доп КАК ВТ_Доп
			                      |		ПО ОбщиеСправочникиШаблоновОтчетовСтатистики.Код = ВТ_Доп.Код
			                      |ГДЕ
			                      |	ОбщиеСправочникиШаблоновОтчетовСтатистики.ИсточникОтчета = &ИсточникОтчета
			                      |	И ОбщиеСправочникиШаблоновОтчетовСтатистики.Справочник = &СправочникТабОсн";
			
			Список.Параметры.УстановитьЗначениеПараметра("ИсточникОтчета", Параметры.СтруктураДляОтбора.ИсточникОтчета);
			Список.Параметры.УстановитьЗначениеПараметра("СправочникТабДоп", Параметры.СтруктураДляОтбора.Справочник.ТабДоп);
			Список.Параметры.УстановитьЗначениеПараметра("СправочникТабОсн", Параметры.СтруктураДляОтбора.Справочник.ТабОсн);
			
			Если ЗначениеЗаполнено(Параметры.СтруктураДляОтбора.Код) Тогда
				
				СтруктураКонструктораКлюча = Новый Структура;
				СтруктураКонструктораКлюча.Вставить("ИсточникОтчета", Параметры.СтруктураДляОтбора.ИсточникОтчета);
				СтруктураКонструктораКлюча.Вставить("Справочник",	  Параметры.СтруктураДляОтбора.Справочник.ТабОсн);
				СтруктураКонструктораКлюча.Вставить("Код",			  Параметры.СтруктураДляОтбора.Код);
				СтруктураКонструктораКлюча.Вставить("Фильтр",		  Параметры.СтруктураДляОтбора.Фильтр);
				
				МассивКонструктораКлюча = Новый Массив;
				МассивКонструктораКлюча.Добавить(СтруктураКонструктораКлюча);
				КлючЗаписиРегистра = Новый("РегистрСведенийКлючЗаписи.ОбщиеСправочникиШаблоновОтчетовСтатистики", МассивКонструктораКлюча);
				Элементы.Список.ТекущаяСтрока = КлючЗаписиРегистра;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	ВыбратьЗаписьПоТекущейСтроке();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВыбратьЗаписьПоТекущейСтроке();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЗаписьПоТекущейСтроке()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ПараметрыИсточника = Новый Структура;
		
		ПараметрыИсточника.Вставить("Код", 			ТекущиеДанные.Код);
		ПараметрыИсточника.Вставить("Название", ТекущиеДанные.Наименование);
		
		ОповеститьОВыборе(ПараметрыИсточника);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтборДинамическогоСписка()
	
	ГруппаОтбораИЛИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(Список.Отбор.Элементы, Неопределено, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	ГруппаОтбораИ1  = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ГруппаОтбораИЛИ, Неопределено, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	ГруппаОтбораИ2  = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ГруппаОтбораИЛИ, Неопределено, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	
	УстановитьОтборСписка(ГруппаОтбораИ1, "ИсточникОтчета", Параметры.СтруктураДляОтбора.ИсточникОтчета);
	УстановитьОтборСписка(ГруппаОтбораИ1, "Справочник", Параметры.СтруктураДляОтбора.Справочник);
	
	Если ЗначениеЗаполнено(Параметры.СтруктураДляОтбора.Фильтр) Тогда
		УстановитьОтборСписка(ГруппаОтбораИ1, "Фильтр", Параметры.СтруктураДляОтбора.Фильтр);
	КонецЕсли;
	
	УстановитьОтборСписка(ГруппаОтбораИ2, "ИсточникОтчета", Параметры.СтруктураДляОтбора.ИсточникОтчета);
	УстановитьОтборСписка(ГруппаОтбораИ2, "Справочник", Параметры.СтруктураДляОтбора.Справочник);
	УстановитьОтборСписка(ГруппаОтбораИ2, "Код", "");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСписка(ОтборСписка, ИмяПоля, ПравоеЗначение, ВидСравненияОтбора = Неопределено)
	
	Если ВидСравненияОтбора = Неопределено Тогда
		ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;
	
	МассивЭлементов = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(ОтборСписка, ИмяПоля);
	Если МассивЭлементов.Количество() = 0 Тогда
		ЭлементОтбора = ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ОтборСписка, ИмяПоля, ВидСравненияОтбора);
	Иначе
		ЭлементОтбора = МассивЭлементов[0];
	КонецЕсли;
	
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ВидСравнения = ВидСравненияОтбора;
	ЭлементОтбора.ПравоеЗначение = ПравоеЗначение;
	
КонецПроцедуры
