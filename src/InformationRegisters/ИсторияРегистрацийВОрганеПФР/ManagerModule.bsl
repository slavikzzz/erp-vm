
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеОрганизации(Организация, Период = Неопределено) Экспорт
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ИзмеренияДаты = Новый ТаблицаЗначений;
	ИзмеренияДаты.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ИзмеренияДаты.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	
	НоваяСтрока = ИзмеренияДаты.Добавить();
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = ?(Период = Неопределено, ТекущаяДатаСеанса(), Период);
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ИсторияРегистрацийВОрганеПФР",
		МенеджерВременныхТаблиц,
		Истина,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(ИзмеренияДаты));
	
	Таблица = МенеджерВременныхТаблиц.Таблицы["ВТИсторияРегистрацийВОрганеПФРСрезПоследних"].ПолучитьДанные().Выгрузить();
	Если Таблица.Количество() = 0 Тогда
		Возврат Таблица.Добавить();
	Иначе
		Возврат Таблица[0];
	КонецЕсли;
КонецФункции

Процедура ЗаписатьДанные(Организация, ЗначенияРесурсов, ДатаНачала = Неопределено) Экспорт
	
	Ресурсы = ОбщегоНазначенияБЗК.ЗначенияСвойств(ЗначенияРесурсов, "РегистрационныйНомерПФР, РегистрационныйНомерСФР");
	Если ТипЗнч(Ресурсы.РегистрационныйНомерПФР) <> Тип("Строка")
		Или Не ЗначениеЗаполнено(Ресурсы.РегистрационныйНомерПФР) Тогда
		Ресурсы.Удалить("РегистрационныйНомерПФР");
	КонецЕсли;
	Если ТипЗнч(Ресурсы.РегистрационныйНомерСФР) <> Тип("Строка")
		Или Не ЗначениеЗаполнено(Ресурсы.РегистрационныйНомерСФР) Тогда
		Ресурсы.Удалить("РегистрационныйНомерСФР");
	КонецЕсли;
	Если Ресурсы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Набор = РегистрыСведений.ИсторияРегистрацийВОрганеПФР.СоздатьНаборЗаписей();
	Набор.Отбор.Организация.Установить(Организация);
	Если ДатаНачала <> Неопределено Тогда
		Набор.Отбор.Период.Установить(НачалоКвартала(ДатаНачала));
	КонецЕсли;
	Набор.Прочитать();
	
	Если Набор.Количество() = 0 Тогда
		Запись = Набор.Добавить();
		Запись.Организация = Организация;
		Запись.Период      = ?(ДатаНачала = Неопределено, '19000101', НачалоКвартала(ДатаНачала));
	ИначеЕсли Набор.Количество() = 1 Тогда
		Запись = Набор[0];
	Иначе // ДатаНачала = Неопределено и найдено несколько записей. Требуется найти последнюю запись.
		Период = '00010101';
		Для Каждого ТекущаяЗапись Из Набор Цикл
			Если Период < ТекущаяЗапись.Период Тогда
				Запись = ТекущаяЗапись;
				Период = ТекущаяЗапись.Период;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Запись, Ресурсы);
	
	Набор.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти


#КонецЕсли
