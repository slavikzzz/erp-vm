
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.ПараметрыАмортизацииНМАБУ.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.13.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("a460d88a-bb59-4cc5-b1c7-c3eecca5ff7e");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ПараметрыАмортизацииНМАБУ.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Порядок = Перечисления.ПорядокОбработчиковОбновления.Обычный;
	Обработчик.Комментарий = НСтр("ru = 'Обновляет регистр ""Параметры амортизации НМА (бухгалтерский и налоговый учет)"":
								  |- в международной версии заполняет по данным упр. учета.
								  |- заполняет новые ресурсы ""Срок использования для вычисления амортизации"", ""Объем продукции (работ) для исчисления амортизации"", ""Дата последнего изменения"".';
								  |en = 'Updates the ""Intangible asset amortization parameters (bookkeeping and tax accounting)"" register:
								  |- In the international version, it fills the register based on management accounting data.
								  |- Fills the new resources: ""Useful life (for depreciation calculation)"", ""Volume of the products (works) for calculating depreciation"", and ""Last change date"".'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ИзменениеПараметровНМА2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПеремещениеНМА2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПринятиеКУчетуНМА2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СписаниеНМА2_4.ПолноеИмя());

	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.ПараметрыАмортизацииНМАБУ.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыСведений.ПараметрыАмортизацииНМАБУ.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "РегистрСведений.ПараметрыАмортизацииНМАБУ";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиРегистра.Регистратор
	|ИЗ
	|	(ВЫБРАТЬ
	|		РегистрИсточник.Регистратор
	|	ИЗ
	|		РегистрСведений.ПараметрыАмортизацииНМАУУ КАК РегистрИсточник
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииНМАБУ КАК РегистрПриемник
	|			ПО РегистрПриемник.Регистратор = РегистрИсточник.Регистратор
	|
	|	ГДЕ
	|		РегистрПриемник.Регистратор ЕСТЬ NULL
	|		И &ЭтоМеждународнаяВерсия
	|		И НЕ &РеглУчетВНАВедетсяНезависимо
	|		И НЕ РегистрИсточник.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ЗаписиРегистра.Регистратор
	|	ИЗ
	|		РегистрСведений.ПараметрыАмортизацииНМАБУ КАК ЗаписиРегистра
	|	ГДЕ
	|		ЗаписиРегистра.ДатаПоследнегоИзменения = ДАТАВРЕМЯ(1,1,1)
	|		И НЕ ЗаписиРегистра.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	//++ Локализация
	|		И НЕ ЗаписиРегистра.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|		И НЕ ЗаписиРегистра.Регистратор ССЫЛКА Документ.ИзменениеПараметровНМА
	|		И НЕ ЗаписиРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА
	//-- Локализация
	|
	|	) КАК ЗаписиРегистра
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ЭтоМеждународнаяВерсия", НЕ ПолучитьФункциональнуюОпцию("ЛокализацияРФ"));
	Запрос.УстановитьПараметр("РеглУчетВНАВедетсяНезависимо", НастройкиНалоговУчетныхПолитикПовтИсп.РеглУчетВНАВедетсяНезависимо());

	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"РегистрСведений.ПараметрыАмортизацииНМАБУ.ОбработатьДанныеДляПереходаНаНовуюВерсию");
		
	ОбъектовОбработано = ВнеоборотныеАктивы.СформироватьДвиженияПриОбновленииИБ("ПараметрыАмортизацииНМАБУ", Параметры);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, ОбъектовОбработано);	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
