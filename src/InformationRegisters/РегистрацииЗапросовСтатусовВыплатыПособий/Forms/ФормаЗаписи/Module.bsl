#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Запись.ИсходящийДокумент) Тогда
		ОбновитьЭлементыФормы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если ЗначениеЗаполнено(Запись.ИсходящийДокумент) Тогда
		ТолькоПросмотр = Истина;
	Иначе
		Элементы.ИсходныйДокументГруппа.Поведение = ПоведениеОбычнойГруппы.Обычное;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ОбновитьЭлементыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ОтветНаЗапросФССДляРасчетаПособия"
		И (Источник = Запись.ИсходящийДокумент Или Не ЗначениеЗаполнено(Источник)) Тогда
		ПодключитьОбработчикОжиданияПрочитать();
		
	ИначеЕсли ИмяСобытия = СЭДОФССКлиент.ИмяСобытияПослеПолученияСообщенийОтФСС()
		Или ИмяСобытия = СЭДОФССКлиент.ИмяСобытияПослеОтправкиПодтвержденияПолучения() Тогда
		ПодключитьОбработчикОжиданияПрочитать();
		
	ИначеЕсли ИмяСобытия = "Запись_РегистрацииОтветовНаЗапросыФССДляРасчетаПособий"
		И (Источник = Запись.ИсходящийДокумент Или Не ЗначениеЗаполнено(Источник)) Тогда
		ПодключитьОбработчикОжиданияПрочитать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущаяЗапись, ПараметрыЗаписи)
	Менеджер = РегистрыСведений.РегистрацииЗапросовСтатусовВыплатыПособий;
	Менеджер.ЗаполнитьСостояниеРегистрации(ТекущаяЗапись);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_РегистрацииОтветовНаЗапросыФССДляРасчетаПособий", Запись.ИсходящийДокумент, Запись.ИсходящийДокумент);
	СЭДОФССКлиент.ОповеститьОНеобходимостиОбновитьТекущиеДела();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоясняющаяНадписьВШапкеОбработкаНавигационнойСсылки(Элемент, Адрес, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Адрес = "1" Тогда
		ПараметрыФормы = Новый Структура("Ключ", Запись.ИсходящийДокумент);
		ОткрытьФорму("Документ.ЗапросСтатусовВыплатыПособия.ФормаОбъекта", ПараметрыФормы);
	ИначеЕсли Адрес = "2" Тогда
		ПараметрыФормы = Новый Структура("Ключ", Запись.РегистрацияСсылка);
		ОткрытьФорму("Документ.СтатусыВыплатыПособия.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДоставкаИдентификаторТекстXML(Команда)
	СЭДОФССКлиент.ПоказатьТекстXML(Запись.ИдентификаторСообщения);
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияИдентификаторТекстXML(Команда)
	СЭДОФССКлиент.ПоказатьТекстXML(Запись.РегистрацияИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВозможностьРедактирования(Команда)
	ТолькоПросмотр = Ложь;
	ОбновитьЭлементыФормы();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодключитьОбработчикОжиданияПрочитать()
	ОтключитьОбработчикОжидания("ОбработчикОжиданияПрочитать");
	ПодключитьОбработчикОжидания("ОбработчикОжиданияПрочитать", 0.2, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияПрочитать()
	Если Не Модифицированность Тогда
		Прочитать();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыФормы()
	Элементы.ДоставкаИдентификаторТекстXML.Видимость    = ЗначениеЗаполнено(Запись.ИдентификаторСообщения);
	Элементы.РегистрацияИдентификаторТекстXML.Видимость = ЗначениеЗаполнено(Запись.РегистрацияИдентификатор);
	
	ОтправленОператору = (Запись.ОтправленОператору Или ЗначениеЗаполнено(Запись.ДатаОтправкиОператору));
	Элементы.ОтправленОператору.Видимость          = Не ТолькоПросмотр Или ОтправленОператору;
	Элементы.ДатаОтправкиОператору.Видимость       = Не ТолькоПросмотр Или ОтправленОператору;
	Элементы.ДоставкаИдентификаторПакета.Видимость = Не ТолькоПросмотр Или ОтправленОператору
		Или ЗначениеЗаполнено(Запись.ДоставкаИдентификаторПакета);
	
	Элементы.ОшибкиЛогическогоКонтроляГруппа.Видимость = Не ТолькоПросмотр
		Или Запись.ЕстьОшибкиФЛК;
	
	Если РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца Тогда
		Элементы.КоманднаяПанельПодвал.Видимость = Истина;
		Элементы.КомандыЗаписиИПроведения.Видимость = Ложь;
		КнопкаЗакрыть = Элементы.КнопкаЗакрытьВПодвале;
	Иначе
		Элементы.КоманднаяПанельПодвал.Видимость = Ложь;
		Элементы.КомандыЗаписиИПроведения.Видимость = Истина;
		КнопкаЗакрыть = Элементы.КнопкаЗакрытьВШапке;
	КонецЕсли;
	
	Если Запись.ДоставкаУспех
		И Не ЗначениеЗаполнено(Запись.РегистрацияИдентификатор)
		И Не Запись.ЕстьОшибкиФЛК Тогда
		Элементы.ПолучитьНовыеСообщенияСЭДОФСС.КнопкаПоУмолчанию = Истина;
	Иначе
		КнопкаЗакрыть.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	ЕстьРегистрация = ЗначениеЗаполнено(Запись.РегистрацияСсылка);
	Элементы.НадписьВШапкеЕстьСсылкаРегистрации.Видимость = ТолькоПросмотр И ЕстьРегистрация;
	Элементы.НадписьВШапкеНетСсылкиРегистрации.Видимость = ТолькоПросмотр И Не ЕстьРегистрация;
	
	Если ТолькоПросмотр И (Запись.ЕстьОшибкиФЛК Или ЗначениеЗаполнено(Запись.РегистрацияИдентификатор)) Тогда
		Положение = ПоложениеКнопкиВКоманднойПанели.ВДополнительномПодменю;
	Иначе
		Положение = ПоложениеКнопкиВКоманднойПанели.ВКоманднойПанелиИВДополнительномПодменю;
	КонецЕсли;
	Элементы.ПолучитьНовыеСообщенияСЭДОФСС.ПоложениеВКоманднойПанели = Положение;
	
	Элементы.ДоставкаТекстОшибки.Видимость = Не ТолькоПросмотр
		Или ЗначениеЗаполнено(Запись.ДоставкаТекстОшибки);
	Элементы.ТекстОшибкиФЛК.Видимость = Не ТолькоПросмотр
		Или ЗначениеЗаполнено(Запись.ТекстОшибкиФЛК);
	Элементы.РегистрацияТекстОшибки.Видимость = Не ТолькоПросмотр
		Или ЗначениеЗаполнено(Запись.РегистрацияТекстОшибки);
	
	КлючСохраненияПоложенияОкна = ?(ТолькоПросмотр,
		Формат(ОтправленОператору, "БЛ=0; БИ=1") + Формат(Запись.ЕстьОшибкиФЛК, "БЛ=0; БИ=1"),
		"");
	
КонецПроцедуры

#КонецОбласти
