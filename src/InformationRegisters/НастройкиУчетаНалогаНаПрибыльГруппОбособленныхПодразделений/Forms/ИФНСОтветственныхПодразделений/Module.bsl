#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.Организация) Тогда
		Отказ = Истина;
	КонецЕсли;	
	
	// Инициализируем параметры формы
	Организация         = Параметры.Организация;
	ГоловнаяОрганизация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация);
	
	Период = Параметры.Период;
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДатаСеанса();
	КонецЕсли;	
	
	Период = КонецМесяца(Период);
	
	ПериодСтрокой = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
		НачалоМесяца(Период),
		Период,
		Истина);
		
	// Настраиваем форму
	ШаблонЗаголовка = НСтр("ru = 'Налог на прибыль: получатели деклараций (%1)';
							|en = 'Income tax: declaration recipients (%1)'");
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗаголовка, ГоловнаяОрганизация);
		
	Если НЕ ПравоДоступа("Изменение", Метаданные.РегистрыСведений.НастройкиУчетаНалогаНаПрибыльГруппОбособленныхПодразделений) Тогда
		Элементы.Регионы.ТолькоПросмотр = Истина;
	КонецЕсли;	
		
	ЗаполнитьТаблицуРегионов();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НастройкиНалогаНаПрибыльГруппыОбособленныхПодразделений" Тогда
		
		Если НЕ Параметр.Свойство("Организация") ИЛИ Параметр.Организация = ГоловнаяОрганизация Тогда
			
			КодРегионаТекущейСтроки = 0;
			ТекущиеДанные = Элементы.Регионы.ТекущиеДанные;
			Если ТекущиеДанные <> Неопределено Тогда
				КодРегионаТекущейСтроки = ТекущиеДанные.КодРегиона;
			КонецЕсли;	
			
			ЗаполнитьТаблицуРегионов();
			
			Если КодРегионаТекущейСтроки <> 0 Тогда
				
				НайденныеРегионы = Регионы.НайтиСтроки(Новый Структура("КодРегиона", КодРегионаТекущейСтроки));
				
				Если НайденныеРегионы.Количество() > 0 Тогда
					Элементы.Регионы.ТекущаяСтрока = НайденныеРегионы[0].ПолучитьИдентификатор();
				КонецЕсли;
				
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПериодЗавершениеВыбора", ЭтотОбъект);
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("НачалоПериода", НачалоМесяца(Период));
	ПараметрыВыбора.Вставить("КонецПериода",  КонецМесяца(Период));
	ПараметрыВыбора.Вставить("ВидПериода",    ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц"));
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаМесяц", ПараметрыВыбора, ЭтотОбъект, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодСтрокойОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияВНалоговомОрганеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанные = Элементы.Регионы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение = ТекущиеДанные.РегистрацияВНалоговомОргане Тогда
		Возврат;
	КонецЕсли;
		
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("Период", 						Период);
	СтруктураЗаписи.Вставить("Организация", 				ГоловнаяОрганизация);
	СтруктураЗаписи.Вставить("КодРегиона", 					ТекущиеДанные.КодРегиона);
	СтруктураЗаписи.Вставить("РегистрацияВНалоговомОргане", ВыбранноеЗначение);
	
	Попытка
		ЗаписатьНастройкуГруппОбособленныхПодразделений(СтруктураЗаписи);
	Исключение
		// Отменим выбор
		СтандартнаяОбработка = Ложь; 
		ВызватьИсключение ОписаниеОшибки();
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияВНалоговомОрганеОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УменьшитьПериод(Команда)
	
	ДобавитьМесяцСервер(-1);
	
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьПериод(Команда)
	
	ДобавитьМесяцСервер(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияИзменений(Команда)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Организация", ГоловнаяОрганизация);
	
	ПараметрыФормыИстории = Новый Структура;
	
	Если Элементы.Регионы.ТекущиеДанные <> Неопределено Тогда
		Отбор.Вставить("КодРегиона", Элементы.Регионы.ТекущиеДанные.КодРегиона);
	КонецЕсли;	
		
	ПараметрыФормыИстории.Вставить("Отбор", Отбор);
		
	ОткрытьФорму("РегистрСведений.НастройкиУчетаНалогаНаПрибыльГруппОбособленныхПодразделений.ФормаСписка", 
		ПараметрыФормыИстории,
		ЭтотОбъект,
		ГоловнаяОрганизация);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуРегионов()
	
	Регионы.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Создаем таблицу регионов
	НалоговыйУчетОбособленныхПодразделений.СоздатьТаблицуРегионов(МенеджерВременныхТаблиц, ГоловнаяОрганизация, Период);
	
	// Полученную таблицу регионов соединяем с действующими настройками налога на прибыль
	// Первым по порядку идет регион, где зарегистрирована головная организация
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация",   ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Период",        Период);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Регионы.КодРегиона КАК КодРегиона,
	|	ЕСТЬNULL(РегистрНастроек.РегистрацияВНалоговомОргане, ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)) КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	Регионы КАК Регионы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаНалогаНаПрибыльГруппОбособленныхПодразделений.СрезПоследних(&Период, Организация = &Организация) КАК РегистрНастроек
	|		ПО Регионы.КодРегиона = РегистрНастроек.КодРегиона
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регионы.РегионГО УБЫВ,
	|	КодРегиона";
		
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;	
	
	// Заполним классификатор регионов для формирования наименований регионов
	ЗаполнитьКлассификаторРегионов();
	
	ВыборкаПоРегионам = РезультатЗапроса.Выбрать();
	ШаблонПредставления = НСтр("ru = '%1, %2 %3';
								|en = '%1, %2 %3'");  //например: "77, Москва г" 
	ПоискВКлассификаторе = Новый Структура("КодСубъектаРФ");
	
	Пока ВыборкаПоРегионам.Следующий() Цикл
		
		СтрокаРегиона = Регионы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаРегиона, ВыборкаПоРегионам, "КодРегиона, РегистрацияВНалоговомОргане");
		
		ПоискВКлассификаторе.КодСубъектаРФ = ВыборкаПоРегионам.КодРегиона;
		СтрокиКлассификатора = КлассификаторСубъектовРФ.НайтиСтроки(ПоискВКлассификаторе);
		Если СтрокиКлассификатора.Количество() > 0 Тогда
			Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредставления,
				СтрокиКлассификатора[0].КодСубъектаРФ,
				СтрокиКлассификатора[0].Наименование,
				СтрокиКлассификатора[0].Сокращение);
		Иначе
			Представление = ВыборкаПоРегионам.КодРегиона;	
		КонецЕсли;	
		
		СтрокаРегиона.Наименование = Представление;
	
	КонецЦикла; 
		
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьКлассификаторРегионов()
	
	Если КлассификаторСубъектовРФ.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;	
			
	КлассификаторСубъектовРФ.Загрузить(АдресныйКлассификатор.СубъектыРФ());
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура ЗаписатьНастройкуГруппОбособленныхПодразделений(СтруктураЗаписи)
	
	Запись = РегистрыСведений.НастройкиУчетаНалогаНаПрибыльГруппОбособленныхПодразделений.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, СтруктураЗаписи);	
	Запись.Записать(Истина);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьМесяцСервер(ЧислоМесяцев)
		
	Период = КонецМесяца(ДобавитьМесяц(Период, ЧислоМесяцев));
	ПериодСтрокой = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
		НачалоМесяца(Период),
		Период,
		Истина);
	
	ЗаполнитьТаблицуРегионов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодЗавершениеВыбора(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		
		ПериодСтрокой = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
			НачалоМесяца(РезультатВыбора.КонецПериода),
			КонецМесяца(РезультатВыбора.КонецПериода),
			Истина);
			
		Если КонецМесяца(Период) <> РезультатВыбора.КонецПериода Тогда
			Период = РезультатВыбора.КонецПериода;
			ЗаполнитьТаблицуРегионов();
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
