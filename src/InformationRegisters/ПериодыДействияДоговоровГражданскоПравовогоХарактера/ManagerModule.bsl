#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьОбновлениеЗависимыхДанныхПриОбменеПередЗаписью(Объект) Экспорт
	
	ОбновляемыеСотрудникиПередЗаписью(Объект);
	ОрганизацииСотрудниковПередЗаписью(Объект);
	
КонецПроцедуры

Процедура ПодготовитьОбновлениеЗависимыхДанныхПриОбменеПриЗаписи(Объект) Экспорт
	
	ТаблицаАнализаИзменений = ТаблицаАнализаИзменений(Объект);
	Объект.ДополнительныеСвойства.Вставить("ТаблицаАнализаИзменений", ТаблицаАнализаИзменений);
	
КонецПроцедуры

Функция ТаблицаАнализаИзменений(НаборЗаписей) Экспорт
	
	ТаблицаАнализаИзменений = КадровыйУчет.ТаблицаАнализаИзменений();
	
	Если НаборЗаписей.ДополнительныеСвойства.Свойство("ОрганизацииСотрудников") Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = НаборЗаписей.ДополнительныеСвойства.ОрганизацииСотрудников;
		
		Запрос.УстановитьПараметр("Сотрудники", НаборЗаписей.ВыгрузитьКолонку("Сотрудник"));
		Запрос.УстановитьПараметр("Регистратор", НаборЗаписей.Отбор.Регистратор.Значение);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник КАК Сотрудник,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Организация КАК Организация
		|ПОМЕСТИТЬ ВТТекущиеОрганизацииСотрудников
		|ИЗ
		|	РегистрСведений.ПериодыДействияДоговоровГражданскоПравовогоХарактера КАК ПериодыДействияДоговоровГражданскоПравовогоХарактера
		|ГДЕ
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Регистратор = &Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ТекущиеОрганизацииСотрудников.Сотрудник, ОрганизацииСотрудников.Сотрудник) КАК Сотрудник,
		|	ЕСТЬNULL(ТекущиеОрганизацииСотрудников.Организация, ОрганизацииСотрудников.Организация) КАК Организация,
		|	ВЫБОР
		|		КОГДА ТекущиеОрганизацииСотрудников.Сотрудник ЕСТЬ NULL
		|			ТОГДА -1
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ФлагИзменений
		|ИЗ
		|	ВТТекущиеОрганизацииСотрудников КАК ТекущиеОрганизацииСотрудников
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТОрганизацииСотрудников КАК ОрганизацииСотрудников
		|		ПО ТекущиеОрганизацииСотрудников.Сотрудник = ОрганизацииСотрудников.Сотрудник
		|			И ТекущиеОрганизацииСотрудников.Организация = ОрганизацииСотрудников.Организация
		|ГДЕ
		|	ЕСТЬNULL(ОрганизацииСотрудников.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) <> ЕСТЬNULL(ТекущиеОрганизацииСотрудников.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(ТаблицаАнализаИзменений.Добавить(), Выборка);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТаблицаАнализаИзменений;
	
КонецФункции

Процедура ОбновляемыеСотрудникиПередЗаписью(НаборЗаписей) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийНабор", НаборЗаписей.Выгрузить());
	Запрос.УстановитьПараметр("Регистратор", НаборЗаписей.Отбор.Регистратор.Значение);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТДанныеНабора
	|ИЗ
	|	&ТекущийНабор КАК ПериодыДействияДоговоровГражданскоПравовогоХарактера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТВсеСотрудникиРегистратора
	|ИЗ
	|	РегистрСведений.ПериодыДействияДоговоровГражданскоПравовогоХарактера КАК ПериодыДействияДоговоровГражданскоПравовогоХарактера
	|ГДЕ
	|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Регистратор = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеНабора.Сотрудник
	|ИЗ
	|	ВТДанныеНабора КАК ДанныеНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеСотрудникиРегистратора.Сотрудник КАК Сотрудник
	|ИЗ
	|	ВТВсеСотрудникиРегистратора КАК ВсеСотрудникиРегистратора";
	
	НаборЗаписей.ДополнительныеСвойства.Вставить("ОбновляемыеСотрудники", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник"));
	
КонецПроцедуры

Процедура ОрганизацииСотрудниковПередЗаписью(НаборЗаписей) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Сотрудники", НаборЗаписей.ВыгрузитьКолонку("Сотрудник"));
	Запрос.УстановитьПараметр("Регистратор", НаборЗаписей.Отбор.Регистратор.Значение);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник КАК Сотрудник,
	|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Организация КАК Организация
	|ПОМЕСТИТЬ ВТОрганизацииСотрудников
	|ИЗ
	|	РегистрСведений.ПериодыДействияДоговоровГражданскоПравовогоХарактера КАК ПериодыДействияДоговоровГражданскоПравовогоХарактера
	|ГДЕ
	|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Регистратор = &Регистратор";
	
	Запрос.Выполнить();
	
	НаборЗаписей.ДополнительныеСвойства.Вставить("ОрганизацииСотрудников", Запрос.МенеджерВременныхТаблиц);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
