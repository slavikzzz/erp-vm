
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает величину средней зарплаты по переданным коду региона, коду ОКВЭД и дате.
//
// Параметры:
//  КодРегиона - Строка - код субъекта РФ, для которого нужно получить данные.
//  КодОКВЭД - Строка - код вида деятельности, для которого нужно получить данные.
//  Дата - Дата - дата, на которую необходимо получить данные.
// Возвращаемое значение:
//  Неопределено - данные не найдены.
//  Число - величина средней зарплаты.
//
Функция ВеличинаЗарплаты(КодРегиона, КодОКВЭД, Дата) Экспорт
	
	ГодДанных = Год(Дата);
	ИерархияКодовОКВЭД = КлассификаторОКВЭД2КодВИерархии(КодОКВЭД);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(СредняяЗарплатаПоРегионамИОКВЭД.Год) КАК Год
	|ПОМЕСТИТЬ ГодПолученияДанных
	|ИЗ
	|	РегистрСведений.СредняяЗарплатаПоРегионамИОКВЭД КАК СредняяЗарплатаПоРегионамИОКВЭД
	|ГДЕ
	|	СредняяЗарплатаПоРегионамИОКВЭД.Год <= &ГодДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СредняяЗарплатаПоРегионамИОКВЭД.СредняяЗарплата КАК СредняяЗарплата
	|ИЗ
	|	РегистрСведений.СредняяЗарплатаПоРегионамИОКВЭД КАК СредняяЗарплатаПоРегионамИОКВЭД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ГодПолученияДанных КАК ГодПолученияДанных
	|		ПО СредняяЗарплатаПоРегионамИОКВЭД.Год = ГодПолученияДанных.Год
	|ГДЕ
	|	СредняяЗарплатаПоРегионамИОКВЭД.КодРегиона = &КодРегиона
	|	И СредняяЗарплатаПоРегионамИОКВЭД.КодОКВЭД В(&СписокОКВЭД)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СредняяЗарплатаПоРегионамИОКВЭД.КодОКВЭД УБЫВ";
	
	Запрос.УстановитьПараметр("ГодДанных", ГодДанных);
	Запрос.УстановитьПараметр("КодРегиона", КодРегиона);
	Запрос.УстановитьПараметр("СписокОКВЭД", ИерархияКодовОКВЭД);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.СредняяЗарплата;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции


// Формирует массив кодов ОКВЭД, исходя из возможной иерархии - от исходного к наиболее общему.
//
// Параметры:
//  Код - Строка - код ОКВЭД.
//
// Возвращаемое значение:
//  Массив - Массив - возможные коды ОКВЭД с учетом иерархии, от исходного к общему.
//
// Пример:
//  КодВИерархии("01.11.15") вернет массив ["01.11.15", "01.11.1", "01.11", "01.1", "01"]
//
Функция КлассификаторОКВЭД2КодВИерархии(Знач Код) Экспорт
	
	Код = СокрЛП(Код);
	Результат = Новый Массив;
	Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрЗаменить(Код, ".", "")) Тогда 
		Возврат Результат; // Корректный код может содержать только цифры и точки
	КонецЕсли;
	
	ДлинаКода = СтрДлина(Код); 
	Для Позиция = 0 По ДлинаКода Цикл
		
		ЧастьКода = Лев(Код, ДлинаКода - Позиция);
		Если СтрЗаканчиваетсяНа(ЧастьКода, ".") Тогда 
			Продолжить; // На точку код оканчиваться не может
		КонецЕсли;
		
		Результат.Добавить(ЧастьКода);
		Если ДлинаКода - Позиция <= 2 Тогда 
			Прервать; // Кодов из 1 символа не бывает
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// См. РаботаСКлассификаторамиПереопределяемый.ПриДобавленииКлассификаторов.
//
Процедура ПриДобавленииКлассификаторов(Классификаторы) Экспорт
	
	Описатель = РаботаСКлассификаторами.ОписаниеКлассификатора();
	Описатель.Наименование = НСтр("ru = 'Средняя зарплата по регионам и ОКВЭД';
									|en = 'Average salary by regions and OKVED'");
	Описатель.Идентификатор = ИдентификаторВСервисеКлассификаторов();
	
	Классификаторы.Добавить(Описатель);
	
КонецПроцедуры

// См. РаботаСКлассификаторамиПереопределяемый.ПриЗагрузкеКлассификатора.
//
Процедура ПриЗагрузкеКлассификатора(Идентификатор, Версия, Адрес, Обработан) Экспорт
	
	Если Идентификатор <> ИдентификаторВСервисеКлассификаторов() Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
		Поток = ДвоичныеДанные.ОткрытьПотокДляЧтения();
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.ОткрытьПоток(Поток);
		ДанныеКлассификатора = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		ЗаписатьДанные(ДанныеКлассификатора);
		Обработан = Истина;
		
	Исключение
		
		Обработан = Ложь;
		ЗаписьЖурналаРегистрации("ЗагрузкаКлассификатора",
			УровеньЖурналаРегистрации.Ошибка, 
			Метаданные.РегистрыСведений.СредняяЗарплатаПоРегионамИОКВЭД, ,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьДанные(ДанныеКлассификатора)
	
	ТипЧисло = Тип("Число");
	Набор = РегистрыСведений.СредняяЗарплатаПоРегионамИОКВЭД.СоздатьНаборЗаписей();
	Для каждого Элемент Из ДанныеКлассификатора.classifierData Цикл
		
		ЧастиСтроки = СтрРазделить(Элемент, ";", Истина);
		Год = XMLЗначение(ТипЧисло, ЧастиСтроки[0]);
		КодРегиона = ЧастиСтроки[1];
		КодОКВЭД = ЧастиСтроки[2];
		СредняяЗарплата = XMLЗначение(ТипЧисло, ЧастиСтроки[3]);
		
		Запись = Набор.Добавить();
		Запись.Год = Год;
		Запись.КодРегиона = КодРегиона;
		Запись.КодОКВЭД = КодОКВЭД;
		Запись.СредняяЗарплата = СредняяЗарплата;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Истина);
	Набор.Записать();
	
КонецПроцедуры

Функция ИдентификаторВСервисеКлассификаторов()

	Возврат "AverageSalaryByRegionAndOKVED";

КонецФункции

#КонецОбласти

#КонецЕсли
