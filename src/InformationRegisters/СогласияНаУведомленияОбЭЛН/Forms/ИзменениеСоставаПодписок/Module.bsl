#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.ВключитьПодписку Тогда
		Элементы.Список.Заголовок = НСтр("ru = 'Сотрудники, для которых требуется включить подписку на уведомления об изменении состояний ЭЛН';
										|en = 'Employees to enable the subscription to ESLR status changes notifications for'");
		Элементы.Подтверждаю.Видимость = Истина;
		Элементы.ФормаИзменитьПодписку.Доступность = Ложь;
		Элементы.ФормаИзменитьПодписку.КнопкаПоУмолчанию = Ложь;
	Иначе
		Элементы.Список.Заголовок = НСтр("ru = 'Сотрудники, для которых требуется отключить подписку на уведомления об изменении состояний ЭЛН';
										|en = 'Employees to disable the subscription to ESLR status changes notifications for'");
		Подтверждаю = Истина;
		Элементы.Подтверждаю.Видимость = Ложь;
		Элементы.ФормаИзменитьПодписку.Доступность = Истина;
		Элементы.ФормаИзменитьПодписку.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	ЭлементУО = ОбщегоНазначенияБЗК.ДобавитьУсловноеОформление(ЭтотОбъект, "СписокСтраховойНомерПФР");
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ЭлементУО, "Текст", НСтр("ru = '<Не заполнен>';
																						|en = '<Not populated>'"));
	ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ЭлементУО, "Список.СтраховойНомерПФР", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	ЭлементУО = ОбщегоНазначенияБЗК.ДобавитьУсловноеОформление(ЭтотОбъект, "СписокИндексКартинки, СписокКратко");
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ЭлементУО, "Видимость", Ложь);
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ЭлементУО, "Отображать", Ложь);
	ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ЭлементУО, "Список.ПоказыватьРезультат", "=", Ложь);
	
	ЭлементУО = ОбщегоНазначенияБЗК.ДобавитьУсловноеОформление(ЭтотОбъект, "СписокИспользование");
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ЭлементУО, "Видимость", Ложь);
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ЭлементУО, "Отображать", Ложь);
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ЭлементУО, "Доступность", Ложь);
	ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ЭлементУО, "Список.ПоказыватьРезультат", "=", Истина);
	ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ЭлементУО, "Список.Использование", "=", Ложь);
	
	ЗаполнитьСписок("ПриСозданииНаСервере");
	
	Если Параметры.ВключитьПодписку Тогда
		Если Список.Количество() > 1 Тогда
			Заголовок = НСтр("ru = 'Включение подписок на уведомления об изменении состояний ЭЛН в ФСС';
							|en = 'Enable subscriptions to notifications about the ESLR status changes in the SSF'");
			Элементы.ФормаИзменитьПодписку.Заголовок = НСтр("ru = 'Включить подписки';
															|en = 'Enable subscriptions'");
		Иначе
			Заголовок = НСтр("ru = 'Включение подписки на уведомления об изменении состояний ЭЛН в ФСС';
							|en = 'Enable a subscription to notifications about the ESLR status changes in the SSF'");
			Элементы.ФормаИзменитьПодписку.Заголовок = НСтр("ru = 'Включить подписку';
															|en = 'Enable subscription'");
		КонецЕсли;
	Иначе
		Если Список.Количество() > 1 Тогда
			Заголовок = НСтр("ru = 'Отключение подписок на уведомления об изменении состояний ЭЛН в ФСС';
							|en = 'Disabling subscriptions to ESLR status changes notifications in the SSF'");
			Элементы.ФормаИзменитьПодписку.Заголовок = НСтр("ru = 'Отключить подписку';
															|en = 'Disable subscription'");
		Иначе
			Заголовок = НСтр("ru = 'Отключение подписки на уведомления об изменении состояний ЭЛН в ФСС';
							|en = 'Disabling subscription to ESLR status changes notifications in SSF'");
			Элементы.ФормаИзменитьПодписку.Заголовок = НСтр("ru = 'Отключить подписки';
															|en = 'Disable subscriptions'");
		КонецЕсли;
	КонецЕсли;
	
	КлючСохраненияПоложенияОкна = 
		Формат(Элементы.Подтверждаю.Видимость, "БЛ=0; БИ=1")
		+ Формат(Элементы.Страхователь.Видимость, "БЛ=0; БИ=1");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не Параметры.ВключитьПодписку И Параметры.ЗаполнитьПоДаннымУчета И Список.Количество() = 0 Тогда
		Отказ = Истина;
		ПоказатьОповещениеПользователя(НСтр("ru = 'Отключать подписки на ЭЛН не требуется';
											|en = 'Disabling ESLR subscriptions is not required'"), , , БиблиотекаКартинок.Информация32);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_СогласиеНаУведомлениеОбЭЛН"
		Или ИмяСобытия = "Запись_ОтзывСогласияНаУведомлениеОбЭЛН"
		Или ИмяСобытия = "Запись_Увольнение"
		Или ИмяСобытия = "Запись_УвольнениеСписком"
		Или ИмяСобытия = "Запись_ФизическиеЛица"
		Или ИмяСобытия = "Запись_Сотрудники" Тогда
		ОтключитьОбработчикОжидания("ЗаполнитьСписокНаКлиенте");
		ПодключитьОбработчикОжидания("ЗаполнитьСписокНаКлиенте", 0.1, Истина);
	ИначеЕсли ИмяСобытия = СЭДОФССКлиент.ИмяСобытияПослеПолученияСообщенийОтФСС() Тогда
		ПроверитьНаличиеОтветовОтФСС();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПодтверждаюПриИзменении(Элемент)
	Элементы.ФормаИзменитьПодписку.Доступность = Подтверждаю;
	Элементы.ФормаИзменитьПодписку.КнопкаПоУмолчанию = Подтверждаю;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(ТаблицаФормы, ИдентификаторСтроки, ПолеФормы, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлементСписка = ТаблицаФормы.ДанныеСтроки(ИдентификаторСтроки);
	Если ЭлементСписка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ПолеФормы = Элементы.СписокСтраховойНомерПФР Тогда
		ПоказатьЗначение(, ЭлементСписка.ФизическоеЛицо);
	ИначеЕсли ПолеФормы = Элементы.СписокСогласие Тогда
		Если ЗначениеЗаполнено(ЭлементСписка.Согласие) Тогда
			СЭДОФССРасширенныйКлиент.ОткрытьСогласие(ЭлементСписка.Согласие);
		КонецЕсли;
	ИначеЕсли ПолеФормы = Элементы.СписокДатаОтзываСогласия
		Или ПолеФормы = Элементы.СписокОснованиеОтзываСогласия Тогда
		Если ЗначениеЗаполнено(ЭлементСписка.ОснованиеОтзываСогласия) Тогда
			ПоказатьЗначение(, ЭлементСписка.ОснованиеОтзываСогласия);
		КонецЕсли;
	ИначеЕсли ПолеФормы = Элементы.СписокКратко
		Или ПолеФормы = Элементы.СписокИндексКартинки Тогда
		Если ЭлементСписка.Подробно = "{ОткрытьСогласие}" Тогда
			СЭДОФССРасширенныйКлиент.ОткрытьСогласие(ЭлементСписка.Согласие, ЭлементСписка.Страхователь, ЭлементСписка.ФизическоеЛицо);
		Иначе
			Если ЭлементСписка.ИндексКартинки = 5 Тогда
				ЗаголовокТекста = НСтр("ru = 'Подробная информация об ошибке';
										|en = 'Detailed error report'");
				Картинка = БиблиотекаКартинок.Предупреждение32;
			Иначе
				ЗаголовокТекста = НСтр("ru = 'Подробная информация';
										|en = 'Detailed information'");
				Картинка = БиблиотекаКартинок.Успешно32;
			КонецЕсли;
			Текст = ?(ЗначениеЗаполнено(ЭлементСписка.Подробно), ЭлементСписка.Подробно, ЭлементСписка.Кратко);
			ИнформированиеПользователяКлиент.ПоказатьПодробности(Текст, ЗаголовокТекста, Картинка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВключитьВсе(Команда)
	Для Каждого ЭлементСписка Из Список Цикл
		Если ЭлементСписка.ПоказыватьРезультат Тогда
			Продолжить;
		КонецЕсли;
		ЭлементСписка.Использование = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсе(Команда)
	Для Каждого ЭлементСписка Из Список Цикл
		ЭлементСписка.Использование = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПодписку(Команда)
	Если Не Подтверждаю Тогда
		ТекстОшибки = НСтр("ru = 'Требуется подтверждение';
							|en = 'Confirmation is required'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "Подтверждаю");
		Возврат;
	КонецЕсли;
	
	// Дата отправки для пользователя - момент нажатия на кнопку.
	ДатаОтправки = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	Контекст = Новый Структура("Организации", Новый Массив);
	
	ОрганизацииИСНИЛС = Новый Соответствие;
	ОтправляемыеСтроки = Список.НайтиСтроки(Новый Структура("Использование, ЗапросОтправлен", Истина, Ложь));
	Для Каждого ЭлементСписка Из ОтправляемыеСтроки Цикл
		СНИЛС = ОрганизацииИСНИЛС[ЭлементСписка.Страхователь];
		Если СНИЛС = Неопределено Тогда
			СНИЛС = Новый Массив;
			ОрганизацииИСНИЛС.Вставить(ЭлементСписка.Страхователь, СНИЛС);
			Контекст.Организации.Добавить(ЭлементСписка.Страхователь);
		КонецЕсли;
		СНИЛС.Добавить(УчетПособийСоциальногоСтрахованияКлиентСервер.СНИЛСВФорматеФСС(ЭлементСписка.СтраховойНомерПФР));
		ЭлементСписка.ЗапросОтправлен = Истина;
		ЭлементСписка.ПоказыватьРезультат = Истина;
	КонецЦикла;
	
	Обработчик = Новый ОписаниеОповещения("ПослеОтправкиЗапросовВФСС", ЭтотОбъект, Контекст);
	Если Параметры.ВключитьПодписку Тогда
		ЭлектронныйДокументооборотСФССКлиент.ПодписатьСотрудниковОрганизацийНаУведомленияПоЭЛН(Обработчик, ОрганизацииИСНИЛС);
	Иначе
		ЭлектронныйДокументооборотСФССКлиент.ОтписатьСотрудниковОрганизацийОтУведомленийПоЭЛН(Обработчик, ОрганизацииИСНИЛС);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьСписокНаКлиенте()
	ЗаполнитьСписок("ЗаполнитьСписокНаКлиенте");
	Отказ = Ложь;
	ПриОткрытии(Отказ);
	Если Отказ И Открыта() Тогда
		Закрыть(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписок(ИмяСобытия)
	Если Параметры.ЗаполнитьПоДаннымУчета Тогда
		
		Если Параметры.ВключитьПодписку Тогда
			Требования = РегистрыСведений.СогласияНаУведомленияОбЭЛН.ТребованияПоВключениюПодписокНаЭЛН();
		Иначе
			Требования = РегистрыСведений.СогласияНаУведомленияОбЭЛН.ТребованияПоОтключениюПодписокНаЭЛН();
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ПриСозданииНаСервере" Тогда
		МассивОснований = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "МассивОснований");
		
		Если ТипЗнч(МассивОснований) = Тип("СправочникСсылка.Сотрудники")
			Или ТипЗнч(МассивОснований[0]) = Тип("СправочникСсылка.Сотрудники") Тогда
			
			Если ТипЗнч(МассивОснований) = Тип("СправочникСсылка.Сотрудники") Тогда
				МассивСотрудников = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(МассивОснований);
			Иначе
				МассивСотрудников = МассивОснований;
			КонецЕсли;
			КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, МассивСотрудников, "Организация, ФизическоеЛицо");
			
			Требования = КадровыеДанные.Скопировать();
			СЭДОФСС.ЗаполнитьСтрахователяВТаблицеЗначений(Требования);
			
		ИначеЕсли ТипЗнч(МассивОснований[0]) = Тип("ДокументСсылка.СогласиеНаУведомлениеОбЭЛН") Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СогласиеНаУведомлениеОбЭЛН.Страхователь КАК Страхователь,
			|	СогласиеНаУведомлениеОбЭЛН.ФизическоеЛицо КАК ФизическоеЛицо
			|ИЗ
			|	Документ.СогласиеНаУведомлениеОбЭЛН КАК СогласиеНаУведомлениеОбЭЛН
			|ГДЕ
			|	СогласиеНаУведомлениеОбЭЛН.Ссылка В(&МассивОснований)";
			Запрос.УстановитьПараметр("МассивОснований", МассивОснований);
			Требования = Запрос.Выполнить().Выгрузить();
			
		Иначе
			
			Требования = Неопределено;
			
		КонецЕсли;
		
	Иначе
		
		Требования = Список.Выгрузить().Скопировать(, "Страхователь, ФизическоеЛицо");
		
	КонецЕсли;
	
	Если Требования = Неопределено Или Требования.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Требования.Страхователь КАК Страхователь,
	|	Требования.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТТребования
	|ИЗ
	|	&Требования КАК Требования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Требования.Страхователь КАК Страхователь,
	|	Требования.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ФизическиеЛица.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	ИСТИНА КАК Использование,
	|	ЛОЖЬ КАК ПоказыватьРезультат,
	|	0 КАК ИндексКартинки,
	|	ВЫБОР
	|		КОГДА Согласия.ДатаОтзываСогласия ЕСТЬ NULL
	|				ИЛИ Согласия.ДатаОтзываСогласия = &МаксимальнаяДата
	|			ТОГДА &ПустаяДата
	|		ИНАЧЕ Согласия.ДатаОтзываСогласия
	|	КОНЕЦ КАК ДатаОтзываСогласия,
	|	ВЫБОР
	|		КОГДА Согласия.Подписано
	|			ТОГДА Согласия.Согласие
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СогласиеНаУведомлениеОбЭЛН.ПустаяСсылка)
	|	КОНЕЦ КАК Согласие,
	|	Согласия.Состояние КАК Состояние,
	|	Согласия.ОснованиеОтзываСогласия КАК ОснованиеОтзываСогласия
	|ИЗ
	|	ВТТребования КАК Требования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО Требования.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СогласияНаУведомленияОбЭЛН КАК Согласия
	|		ПО Требования.ФизическоеЛицо = Согласия.ФизическоеЛицо
	|			И Требования.Страхователь = Согласия.Страхователь";
	
	Запрос.УстановитьПараметр("Требования", Требования);
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	Запрос.УстановитьПараметр("МаксимальнаяДата", НачалоДня(ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата()));
	
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	Список.Загрузить(ТаблицаЗначений);
	Для Каждого ЭлементСписка Из Список Цикл
		Если Не РегламентированныеДанныеКлиентСервер.СтраховойНомерПФРСоответствуетТребованиям(
				ЭлементСписка.СтраховойНомерПФР,
				ЭлементСписка.Кратко) Тогда
			ЭлементСписка.Использование = Ложь;
			ЭлементСписка.ПоказыватьРезультат = Истина;
			ЭлементСписка.ИндексКартинки = 5;
		ИначеЕсли Параметры.ВключитьПодписку
			И ЭлементСписка.Состояние <> Перечисления.СостоянияСогласийНаУведомленияОбЭЛН.Подписано Тогда
			Если ЗначениеЗаполнено(ЭлементСписка.Состояние) Тогда
				ЭлементСписка.Кратко = СтрШаблон(НСтр("ru = 'Согласие %1';
														|en = 'Consent %1'"), НРег(Строка(ЭлементСписка.Состояние)));
			Иначе
				ЭлементСписка.Кратко = НСтр("ru = 'Не оформлено согласие сотрудника на уведомление об ЭЛН';
											|en = 'The employee''s consent to ESLR notification has not been recorded'");
			КонецЕсли;
			ЭлементСписка.Подробно = "{ОткрытьСогласие}";
			ЭлементСписка.Использование = Ложь;
			ЭлементСписка.ПоказыватьРезультат = Истина;
			ЭлементСписка.ИндексКартинки = 5;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаЗначений.Свернуть("Страхователь");
	Страхователи = ТаблицаЗначений.ВыгрузитьКолонку("Страхователь");
	Если Страхователи.Количество() = 1 Тогда
		Элементы.Страхователь.Видимость = Истина;
		Элементы.СписокСтрахователь.Видимость = Ложь;
		Страхователь = Страхователи[0];
	Иначе
		Элементы.Страхователь.Видимость = Ложь;
		Элементы.СписокСтрахователь.Видимость = Истина;
	КонецЕсли;
	
	Если Элементы.Подтверждаю.Видимость Тогда
		Если Список.Количество() <= 1 Тогда
			Элементы.Подтверждаю.Заголовок = 
				НСтр("ru = 'Подтверждаю получение согласия от сотрудника на получение оповещения.
					|Обязуюсь в течении одного рабочего для с момента увольнения сотрудника отключить подписку по нему.
					|Принимаю условия об отключении от сервиса в случае выявления нарушений.';
					|en = 'I confirm the receipt of consent from the employee to receive a notification.
					|I undertake to disable the subscription for the employee within one business day after employee dismissal.
					|I accept the terms of disconnection from the service in case of violations.'");
		Иначе
			Элементы.Подтверждаю.Заголовок = 
				НСтр("ru = 'Подтверждаю получение согласия от сотрудников на получение оповещения.
					|Обязуюсь в течении одного рабочего для с момента увольнения сотрудника отключить подписку по нему.
					|Принимаю условия об отключении от сервиса в случае выявления нарушений.';
					|en = 'I confirm the receipt of consent from the employees to receive a notification.
					|I undertake to disable the subscription for the employee within one business day after employee dismissal.
					|I accept the terms of disconnection from the service in case of violations.'");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтправкиЗапросовВФСС(РезультатыОтправкиЗапросов, Контекст) Экспорт
	ПослеОтправкиЗапросовВФССНаСервере(РезультатыОтправкиЗапросов, Контекст);
	Если РезультатыОтправкиЗапросов.БылиОшибки Тогда
		ИнформированиеПользователяКлиент.ПоказатьПодробности(
			СтрСоединить(РезультатыОтправкиЗапросов.Ошибки, Символы.ПС + Символы.ПС),
			НСтр("ru = 'Информация об ошибках';
				|en = 'Error details'"),
			БиблиотекаКартинок.Предупреждение32);
	Иначе
		СЭДОФССКлиент.ПолучитьСообщенияИзФСС(Контекст.Организации);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеОтправкиЗапросовВФССНаСервере(Знач РезультатыОтправкиЗапросов, Контекст)
	Если Параметры.ВключитьПодписку Тогда
		ТекстЖурнала = НСтр("ru = 'Результат отправки запрос в ФСС от имени организации %1 на включение подписки на уведомления об ЭЛН:';
							|en = 'The result of sending a request to SSF on behalf of the company %1 to enable the subscription to ESLR notifications:'");
	Иначе
		ТекстЖурнала = НСтр("ru = 'Результат отправки запрос в ФСС от имени организации %1 на отключение подписки на уведомления об ЭЛН:';
							|en = 'The result of sending a request to SSF on behalf of the company %1 to disable the subscription to ESLR notifications:'");
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из РезультатыОтправкиЗапросов.РезультатыОперации Цикл
		Страхователь = КлючИЗначение.Ключ;
		РезультатСвязиСФСС = КлючИЗначение.Значение;
		
		ШаблонЗаполнения = Новый Структура("Успех, Использование, Кратко, Подробно, ИндексКартинки");
		ШаблонЗаполнения.Успех = РезультатСвязиСФСС.Выполнено;
		ШаблонЗаполнения.Использование = Не ШаблонЗаполнения.Успех;
		ШаблонЗаполнения.Подробно = СокрЛП(РезультатСвязиСФСС.ОписаниеОшибки);
		ШаблонЗаполнения.Кратко = СтрПолучитьСтроку(ШаблонЗаполнения.Подробно, СтрЧислоСтрок(ШаблонЗаполнения.Подробно));
		Если ШаблонЗаполнения.Успех Тогда
			Если Параметры.ВключитьПодписку Тогда
				ШаблонЗаполнения.ИндексКартинки = 3;
			Иначе
				ШаблонЗаполнения.ИндексКартинки = 4;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ШаблонЗаполнения.Кратко) Тогда
				ШаблонЗаполнения.Кратко = НСтр("ru = 'Запрос успешно отправлен. Ожидается ответ от ФСС.';
												|en = 'The request was successfully sent. Waiting for response from SSF.'");
			КонецЕсли;
			ТекстЖурнала = ТекстЖурнала + ШаблонЗаполнения.Кратко;
		Иначе
			ШаблонЗаполнения.ИндексКартинки = 5;
			ТекстЖурнала = ТекстЖурнала + ШаблонЗаполнения.Подробно;
		КонецЕсли;
		
		ФизическиеЛица = Новый Массив;
		ОтправляемыеСтроки = Список.НайтиСтроки(Новый Структура("Использование, ЗапросОтправлен, Страхователь", Истина, Истина, Страхователь));
		Для Каждого ЭлементСписка Из ОтправляемыеСтроки Цикл
			
			ЗаполнитьЗначенияСвойств(ЭлементСписка, ШаблонЗаполнения);
			
			ФизическиеЛица.Добавить(ЭлементСписка.ФизическоеЛицо);
			
			ЗаписьЖурналаРегистрации(
				СЭДОФССРасширенный.ИмяСобытияЖурнала(),
				УровеньЖурналаРегистрации.Информация,
				Метаданные.Справочники.Сотрудники,
				ЭлементСписка.ФизическоеЛицо,
				СтрШаблон(ТекстЖурнала, ЭлементСписка.Страхователь));
			
		КонецЦикла;
		
		Если РезультатСвязиСФСС.Выполнено Тогда
			РегистрыСведений.ПодпискиНаУведомленияОбЭЛН.ПослеОтправкиЗапросаНаИзменениеПодписки(
				Страхователь,
				ФизическиеЛица,
				ДатаОтправки,
				Параметры.ВключитьПодписку,
				РезультатСвязиСФСС.ИдентификаторЗапроса);
		КонецЕсли;
		
		// Подготовка к отображению результата.
		Если Список.НайтиСтроки(Новый Структура("Использование, ЗапросОтправлен", Истина, Ложь)).Количество() = 0 Тогда
			Элементы.СписокСтраховойНомерПФР.Видимость = Ложь;
			Элементы.СписокСогласие.Видимость = Ложь;
			Элементы.СписокДатаОтзываСогласия.Видимость = Ложь;
			Элементы.СписокОснованиеОтзываСогласия.Видимость = Ложь;
			Элементы.ФормаОтмена.Видимость = Ложь;
			Элементы.ФормаЗакрыть.Видимость = Истина;
			Элементы.ФормаИзменитьПодписку.Видимость = Ложь;
			Элементы.ТаблицаФормыВключитьВсе.Видимость = Ложь;
			Элементы.ТаблицаФормыОтключитьВсе.Видимость = Ложь;
			Элементы.СписокИспользование.Видимость = Ложь;
			Элементы.Подтверждаю.Видимость = Ложь;
			Элементы.Список.ОтборСтрок = Новый ФиксированнаяСтруктура("ЗапросОтправлен", Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьНаличиеОтветовОтФСС()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Список.Страхователь КАК Страхователь,
	|	Список.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСписок
	|ИЗ
	|	&Список КАК Список
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодпискиНаУведомленияОбЭЛН.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПодпискиНаУведомленияОбЭЛН.Страхователь КАК Страхователь,
	|	ПодпискиНаУведомленияОбЭЛН.Действует КАК Действует,
	|	ПодпискиНаУведомленияОбЭЛН.ДатаОтправки КАК ДатаОтправки,
	|	ПодпискиНаУведомленияОбЭЛН.ТекстОшибки КАК ТекстОшибки,
	|	ПодпискиНаУведомленияОбЭЛН.БудетДействовать КАК БудетДействовать
	|ИЗ
	|	ВТСписок КАК ВТСписок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодпискиНаУведомленияОбЭЛН КАК ПодпискиНаУведомленияОбЭЛН
	|		ПО ВТСписок.ФизическоеЛицо = ПодпискиНаУведомленияОбЭЛН.ФизическоеЛицо
	|			И ВТСписок.Страхователь = ПодпискиНаУведомленияОбЭЛН.Страхователь";
	Запрос.УстановитьПараметр("Список", Список.Выгрузить(Новый Структура("Успех", Истина), "ФизическоеЛицо, Страхователь"));
	
	ТаблицаРегистра = Запрос.Выполнить().Выгрузить();
	Фильтр = Новый Структура("ФизическоеЛицо, Страхователь");
	ДатаОтправкиЗагруженногоСообщения = РегистрыСведений.ПодпискиНаУведомленияОбЭЛН.ДатаОтправкиЗагруженногоСообщения();
	Для Каждого СтрокаРегистра Из ТаблицаРегистра Цикл
		
		Если СтрокаРегистра.ДатаОтправки = ДатаОтправкиЗагруженногоСообщения
			И СтрокаРегистра.Действует = СтрокаРегистра.БудетДействовать Тогда
			Если Параметры.ВключитьПодписку Тогда
				ИндексКартинки = 3;
				Кратко         = НСтр("ru = 'Подписка включена.';
										|en = 'Subscription enabled'");
			Иначе
				ИндексКартинки = 4;
				Кратко         = НСтр("ru = 'Подписка отключена.';
										|en = 'Subscription disabled.'");
			КонецЕсли;
			Подробно = "";
		ИначеЕсли ЗначениеЗаполнено(СтрокаРегистра.ТекстОшибки) Тогда
			Подробно       = СтрокаРегистра.ТекстОшибки;
			Кратко         = СтрПолучитьСтроку(Подробно, 1);
			ИндексКартинки = 5;
		Иначе
			Продолжить; // Ответ не получен.
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Фильтр, СтрокаРегистра);
		Найденные = Список.НайтиСтроки(Фильтр);
		Для Каждого ЭлементСписка Из Найденные Цикл
			ЭлементСписка.Кратко         = Кратко;
			ЭлементСписка.Подробно       = Подробно;
			ЭлементСписка.ИндексКартинки = ИндексКартинки;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
