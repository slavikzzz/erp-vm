#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = Метаданные.РегистрыСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.ПолноеИмя();
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	СтавкиНалогаНаПрибыльСрезПоследних.Организация КАК Организация,
	|	СтавкиНалогаНаПрибыльСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СтавкиНалогаНаПрибыльСрезПоследних.Период КАК ПериодТекущейЗаписи,
	|	СтавкиНалогаНаПрибыльСрезПоследних.СтавкаСубъектРФ КАК СтавкаСубъектРФТекущейЗаписи
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СрезПоследних(ДОБАВИТЬКДАТЕ(&Период%1, СЕКУНДА, -1)) КАК СтавкиНалогаНаПрибыльСрезПоследних
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ КАК СтавкиНалогаНаПрибыль%1
	|	ПО
	|		СтавкиНалогаНаПрибыль%1.Период = &Период%1
	|		И СтавкиНалогаНаПрибыльСрезПоследних.Организация = СтавкиНалогаНаПрибыль%1.Организация
	|		И СтавкиНалогаНаПрибыльСрезПоследних.РегистрацияВНалоговомОргане = СтавкиНалогаНаПрибыль%1.РегистрацияВНалоговомОргане
	|		
	|ГДЕ
	|	СтавкиНалогаНаПрибыль%1.Период ЕСТЬ NULL
	|";
	
	Разделитель = 
	"
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|";
	
	Запрос = Новый Запрос;
	МассивЗапросы = Новый Массив;
	ТекущийГод = Дата('20170101');
	Пока РегистрыСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.ПрименяютсяВременныеСтавкиНалога(ТекущийГод) Цикл
		
		ТекущийГодСтрока = Формат(Год(ТекущийГод),"ЧГ=0");
		
		МассивЗапросы.Добавить(СтрШаблон(ШаблонЗапроса, ТекущийГодСтрока));
		
		Параметр = СтрШаблон("Период%1", ТекущийГодСтрока);
		Запрос.УстановитьПараметр(Параметр, ТекущийГод);
		
		ТекущийГод = КонецГода(ТекущийГод) + 1;
	КонецЦикла;
	
	Запрос.Текст = СтрСоединить(МассивЗапросы, Разделитель);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	ТаблицаРегистрации = Таблица.СкопироватьКолонки("Организация, РегистрацияВНалоговомОргане");
	
	Для каждого Строка Из Таблица Цикл
		ТекущаяСтавкаПоУмолчанию = РегистрыСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.ЗначениеПоУмолчаниюРегиональныйБюджет(Строка.ПериодТекущейЗаписи);
		Если ТекущаяСтавкаПоУмолчанию <> Строка.СтавкаСубъектРФТекущейЗаписи Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТаблицаРегистрации.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ТаблицаРегистрации, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ;
	ПолноеИмяРегистра = МетаданныеРегистра.ПолноеИмя();
	
	ДополнительныеПараметрыВыборкиДанныхДляОбработки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь, 
		ПолноеИмяРегистра, 
		ДополнительныеПараметрыВыборкиДанныхДляОбработки);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Организация", Выборка.Организация);
			ЭлементБлокировки.УстановитьЗначение("РегистрацияВНалоговомОргане", Выборка.РегистрацияВНалоговомОргане);
			Блокировка.Заблокировать();
			
			ШаблонЗапроса = 
			"ВЫБРАТЬ
			|	&Период%1 КАК Период,
			|	СтавкиНалогаНаПрибыльСрезПоследних.Организация КАК Организация,
			|	СтавкиНалогаНаПрибыльСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
			|	СтавкиНалогаНаПрибыльСрезПоследних.Период КАК ПериодТекущейЗаписи,
			|	СтавкиНалогаНаПрибыльСрезПоследних.СтавкаСубъектРФ КАК СтавкаСубъектРФТекущейЗаписи
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СрезПоследних(ДОБАВИТЬКДАТЕ(&Период%1, СЕКУНДА, -1), 
			|			Организация = &Организация 
			|			И РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане) КАК СтавкиНалогаНаПрибыльСрезПоследних
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ КАК СтавкиНалогаНаПрибыль%1
			|	ПО
			|		СтавкиНалогаНаПрибыль%1.Период = &Период%1
			|		И СтавкиНалогаНаПрибыльСрезПоследних.Организация = СтавкиНалогаНаПрибыль%1.Организация
			|		И СтавкиНалогаНаПрибыльСрезПоследних.РегистрацияВНалоговомОргане = СтавкиНалогаНаПрибыль%1.РегистрацияВНалоговомОргане
			|		
			|ГДЕ
			|	СтавкиНалогаНаПрибыль%1.Период ЕСТЬ NULL
			|";
			
			Разделитель = 
			"
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Организация", Выборка.Организация);
			Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", Выборка.РегистрацияВНалоговомОргане);
			
			МассивЗапросы = Новый Массив;
			
			ТекущийГод = Дата('20170101');
			Пока РегистрыСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.ПрименяютсяВременныеСтавкиНалога(ТекущийГод) Цикл
				
				ТекущийГодСтрока = Формат(Год(ТекущийГод),"ЧГ=0");
				
				МассивЗапросы.Добавить(СтрШаблон(ШаблонЗапроса, ТекущийГодСтрока));
				
				Параметр = СтрШаблон("Период%1", ТекущийГодСтрока);
				Запрос.УстановитьПараметр(Параметр, ТекущийГод);
				
				ТекущийГод = КонецГода(ТекущийГод) + 1;
			КонецЦикла;
			
			Запрос.Текст = СтрСоединить(МассивЗапросы, Разделитель);
			
			ТаблицаДляЗаписи = Запрос.Выполнить().Выгрузить();
			Если Не ЗначениеЗаполнено(ТаблицаДляЗаписи) Тогда
				
				ТаблицаДляЗаписи.Колонки.Удалить("Период");
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(
					ТаблицаДляЗаписи, 
					ДополнительныеПараметрыВыборкиДанныхДляОбработки, 
					Параметры.Очередь);
				
			Иначе
				
				НаборЗаписей = РегистрыСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
				НаборЗаписей.Отбор.РегистрацияВНалоговомОргане.Установить(Выборка.РегистрацияВНалоговомОргане);
				НаборЗаписей.Прочитать();
				
				Для каждого Строка Из ТаблицаДляЗаписи Цикл
					ТекущаяСтавкаПоУмолчанию = РегистрыСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.ЗначениеПоУмолчаниюРегиональныйБюджет(Строка.ПериодТекущейЗаписи);
					Если ТекущаяСтавкаПоУмолчанию <> Строка.СтавкаСубъектРФТекущейЗаписи Тогда
						Продолжить;
					КонецЕсли;
					НоваяЗапись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяЗапись, Строка);
					НоваяЗапись.СтавкаСубъектРФ = РегистрыСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.ЗначениеПоУмолчаниюРегиональныйБюджет(Строка.Период);
				КонецЦикла;
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			Шаблон = НСтр("ru = 'Не удалось записать данные в регистр %1 по Организации ""%2"" и РегистрацияВНалоговомОргане ""%3"", по причине: %4';
							|en = 'Cannot write data to the %1 register for the ""%2"" Company and РегистрацияВНалоговомОргане ""%3"" due to: %4'");
			ТекстСообщения = 
				СтрШаблон(Шаблон, 
					ПолноеИмяРегистра, 
					Выборка.Организация, 
					Выборка.РегистрацияВНалоговомОргане, 
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеРегистра, 
				, 
				ТекстСообщения);
			
		КонецПопытки;
			
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
