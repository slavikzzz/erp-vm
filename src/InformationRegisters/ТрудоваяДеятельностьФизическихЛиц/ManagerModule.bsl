
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиПравилРегистрации

// См. ЗарплатаКадрыРасширенныйСинхронизацияДанных.ШаблонОбработчика
Процедура ПриЗаполненииНастроекОбработчиковПравилРегистрации(Настройки) Экспорт
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляНезависимогоРегистра(Настройки, "ФизическоеЛицо", "ОбщиеДанные");
КонецПроцедуры

#КонецОбласти

// Заполняет трудовую деятельность физического лица.
// 
// Параметры:
//  ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//  ТрудоваяДеятельность - Массив из Структура - см. НоваяТрудоваяДеятельность
Процедура ЗаполнитьТрудовуюДеятельностьФизическогоЛица(ФизическоеЛицо, ТрудоваяДеятельность) Экспорт
	
	Если ТрудоваяДеятельность.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ТрудоваяДеятельностьФизическихЛиц.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
	
	Для Каждого ТекущаяСтрока Из ТрудоваяДеятельность Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ТекущаяСтрока);
		НоваяЗапись.ФизическоеЛицо = ФизическоеЛицо;
	КонецЦикла;
		
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Создает новую структуру для сведений о трудовой деятельности.
// 
// Возвращаемое значение:
//  Структура:
//   * ФизическоеЛицо - СправочникСсылка.ФизическиеЛица -
//   * НомерПоПорядку - Число -
//   * Организация - Строка -
//   * ДатаНачала - Дата -
//   * ДатаОкончания - Дата -
//   * Должность - Строка -
//   * Обязанности - Строка -
//   * СфераДеятельностиКомпании - Строка -
//   * АдресОрганизации - Строка -
//   * ИдентификаторЗаписи - УникальныйИдентификатор -
Функция НоваяТрудоваяДеятельность() Экспорт
	Возврат ОбщегоНазначенияБЗК.СтруктураПоИмениРегистраСведений("ТрудоваяДеятельностьФизическихЛиц");
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьИдентификаторыЗаписей(ПараметрыОбновления) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ИдентификаторЗаписи", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	ТрудоваяДеятельностьФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФизическиеЛица
		|ИЗ
		|	РегистрСведений.ТрудоваяДеятельностьФизическихЛиц КАК ТрудоваяДеятельностьФизическихЛиц
		|ГДЕ
		|	ТрудоваяДеятельностьФизическихЛиц.ИдентификаторЗаписи = &ИдентификаторЗаписи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТФизическиеЛица КАК ФизическиеЛица";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	Иначе
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(
				ПараметрыОбновления, "РегистрСведений.ТрудоваяДеятельностьФизическихЛиц", "ФизическоеЛицо", Выборка.ФизическоеЛицо) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			НаборЗаписей = РегистрыСведений.ТрудоваяДеятельностьФизическихЛиц.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ФизическоеЛицо.Установить(Выборка.ФизическоеЛицо);
			
			НаборЗаписей.Прочитать();
			Для Каждого Запись Из НаборЗаписей Цикл
				Запись.ИдентификаторЗаписи = Новый УникальныйИдентификатор;
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
