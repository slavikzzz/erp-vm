#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает значения по умолчанию для ресурсов регистра.
// Имена ключей структуры должны строго соответствовать именам ресурсов регистра.
// 
// Параметры:
// Возвращаемое значение:
// 	Структура - структура значений ресурсов регистра.
Функция ЗначенияПоУмолчанию() Экспорт
	СтруктураЗначений = Новый Структура;
	
	СтруктураЗначений.Вставить("ПорядокУплатыАвансовПоНалогуНаПрибыль", Перечисления.ПорядокУплатыАвансовПоНалогуНаПрибыль.Ежеквартально);
	СтруктураЗначений.Вставить("БазаРаспределенияКосвенныхРасходовПоВидамДеятельности", 
		Перечисления.БазыРаспределенияКосвенныхРасходовПоВидамДеятельности.ДоходыОтРеализации);
	СтруктураЗначений.Вставить("ФормироватьРезервыПоСомнительнымДолгамНУ", Ложь);
	СтруктураЗначений.Вставить("ПериодичностьРезервовПоСомнительнымДолгамНУ", Неопределено);
	СтруктураЗначений.Вставить("ВключатьВСоставНалоговыхРасходовАрендныеПлатежи", Ложь);
	СтруктураЗначений.Вставить("МетодНачисленияАмортизацииНУ", Перечисления.МетодыНачисленияАмортизации.Линейный);
	СтруктураЗначений.Вставить("ОсновнойВариантНалогообложенияПрибыли",
		Справочники.ВариантыНалогообложенияПрибыли.ОбщиеУсловияНалогообложения);
	СтруктураЗначений.Вставить("РаздельныйУчетПоНалогуНаПрибыль", Ложь);
	СтруктураЗначений.Вставить("ПоказательОпределенияДолиПрибыли",
		Перечисления.ПоказателиДляОпределенияДолиПрибыли.РасходыНаОплатуТруда);
	СтруктураЗначений.Вставить("УплачиватьНалогПоГруппамОбособленныхПодразделений", Ложь);
	СтруктураЗначений.Вставить("УчетнаяПолитикаСуществует", Ложь);
	
	Возврат СтруктураЗначений
КонецФункции

// Возращает текст запроса по данным регистра.
// 
// Возвращаемое значение:
// 	Строка - Текст запроса.
Функция ТекстЗапросаДействующиеПараметрыНалоговУчетныхПолитик() Экспорт
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР КОГДА ТаблицаСрезПоследних.Период ЕСТЬ NULL Тогда
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		ИСТИНА
	|	КОНЕЦ КАК УчетнаяПолитикаСуществует,
	|	ТаблицаСрезПоследних.Период КАК Период,
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Организация,
	|	ТаблицаСрезПоследних.ПорядокУплатыАвансовПоНалогуНаПрибыль,
	|	ТаблицаСрезПоследних.БазаРаспределенияКосвенныхРасходовПоВидамДеятельности,
	|	ТаблицаСрезПоследних.ФормироватьРезервыПоСомнительнымДолгамНУ,
	|	ТаблицаСрезПоследних.ПериодичностьРезервовПоСомнительнымДолгамНУ,
	|	ТаблицаСрезПоследних.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи,
	|	ТаблицаСрезПоследних.МетодНачисленияАмортизацииНУ,
	|	ТаблицаСрезПоследних.ОсновнойВариантНалогообложенияПрибыли,
	|	ТаблицаСрезПоследних.РаздельныйУчетПоНалогуНаПрибыль,
	|	ТаблицаСрезПоследних.ПоказательОпределенияДолиПрибыли,
	|	ТаблицаСрезПоследних.УплачиватьНалогПоГруппамОбособленныхПодразделений,
	|	ТаблицаСрезПоследних.ДатаНезависимогоПризнанияДоходовРасходов
	|ИЗ
	|	ВтГоловныеОрганизации КАК ГоловныеОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(&Период, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК ТаблицаСрезПоследних
	|		ПО ГоловныеОрганизации.Организация = ТаблицаСрезПоследних.Организация
	|";
	
	Возврат ТекстЗапроса
	
КонецФункции

// Формирует текстовое описание установленных параметров.
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации - ссылка на организацию.
// 	ДатаДействия - Дата - период действия настроек.
// 	ДействующиеНастройки - Структура - действующие параметры учетной политики.
// Возвращаемое значение:
// 	Строка - Описание действующих параметров строкой.
Функция ОписаниеДействующихПараметров(Организация, ДатаДействия = Неопределено, ДействующиеНастройки = Неопределено) Экспорт
	
	Период = ?(ЗначениеЗаполнено(ДатаДействия), ДатаДействия, ТекущаяДатаСеанса());
	
	СтрокаОписанияНастроек = "";
	
	Если ДействующиеНастройки = Неопределено Тогда
		ДействующиеНастройки = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
			"НастройкиУчетаНалогаНаПрибыль",
			Организация,
			ДатаДействия,
			Ложь);
	КонецЕсли;
	СтрокаШаблон = "%1: %2.";
	Если НЕ ЗначениеЗаполнено(ДействующиеНастройки) Тогда
		СтрокаОписанияНастроек = НСтр("ru = 'Не заданы параметры.';
										|en = 'Parameters are not specified.'");
		Возврат СтрокаОписанияНастроек;
	КонецЕсли;
	
	МассивСтрокОписания = Новый Массив;
	
	ПараметрыСистемыНалогообложения = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
			"НастройкиСистемыНалогообложения",
			Организация,
			ДатаДействия,
			Истина);
	Если ПараметрыСистемыНалогообложения.ПрименяетсяЕНВД Тогда
		МассивСтрокОписания.Добавить(
			СтрШаблон("%1: %2.",  
				НСтр("ru = 'База распределения косвенных расходов';
					|en = 'Base of indirect expense allocation'"),
				ДействующиеНастройки.БазаРаспределенияКосвенныхРасходовПоВидамДеятельности));	
	КонецЕсли;
	
	Если ДействующиеНастройки.ФормироватьРезервыПоСомнительнымДолгамНУ Тогда	
		МассивСтрокОписания.Добавить( 
			СтрШаблон(НСтр("ru = 'Начисляются резервы по сомнительным долгам с периодичностью ""%1""';
							|en = 'Reserves for doubtful debts are accrued with a frequency of ""%1""'"),
				ДействующиеНастройки.ПериодичностьРезервовПоСомнительнымДолгамНУ));
	КонецЕсли;
		
	Если ДействующиеНастройки.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи Тогда
		МассивСтрокОписания.Добавить(НСтр("ru = 'Применяется автоматическое включение лизинговых платежей в расходы';
											|en = 'Automatic inclusion of lease payments in expenses is applied'"));
	КонецЕсли;
	
	МассивСтрокОписания.Добавить( 
		СтрШаблон(СтрокаШаблон, 
			НСтр("ru = 'Метод начисления амортизации';
				|en = 'Depreciation method'"),
			ДействующиеНастройки.МетодНачисленияАмортизацииНУ));
	
	МассивСтрокОписания.Добавить( 
		СтрШаблон(СтрокаШаблон, 
			НСтр("ru = 'Показатель определения доли прибыли по ст. 288 НК РФ';
				|en = 'Profit share indicators according to art. 288 of the RF Tax Code'"),
			ДействующиеНастройки.ПоказательОпределенияДолиПрибыли));
	
	Если РеглУчетКлиентСервер.ДатаВходитВПериодУчетаКурсовыхРазницНУПо67ФЗ(Период)
		И ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов")
		И ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют") Тогда
		
		ПредставлениеДаты = ?(ЗначениеЗаполнено(ДействующиеНастройки.ДатаНезависимогоПризнанияДоходовРасходов),
			Формат(ДействующиеНастройки.ДатаНезависимогоПризнанияДоходовРасходов, НСтр("ru = 'ДФ=''ММ гггг''';
																						|en = 'DF=''MM yyyy'''")), НСтр("ru = 'не указана';
																													|en = 'not specified'"));
		МассивСтрокОписания.Добавить(СтрШаблон(СтрокаШаблон,
			НСтр("ru = 'Дата начала независимого признания доходов и расходов';
				|en = 'Start date of independent income and expense recognition'"), ПредставлениеДаты));
		
	КонецЕсли;

	Возврат СтрСоединить(МассивСтрокОписания, Символы.ПС);
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

//++ Локализация
#Область КурсовыеРазницы67ФЗ

// Возвращает дату начала года вступления в силу закона 67-ФЗ
// Возвращаемое значение:
//  Дата
Функция НачалоВступленияВСилу67ФЗ() Экспорт
	
	Возврат Дата(2022,1,1);
	
КонецФункции

// Возвращает дату начала применения закона 67-ФЗ по доходам.
// 
// Параметры:
//  Организация - СправочникСсылка.Организации
// 
// Возвращаемое значение:
//  Дата
Функция НачалоПрименения67ФЗПоДоходам(Организация) Экспорт
	
	Результат = Неопределено;
	
	Отбор = Новый Структура("Организация", Организация);
	Данные = РегистрыСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(ТекущаяДатаСеанса(), Отбор);
	Если Данные.Количество() > 0 Тогда
		Результат = Данные[0].ДатаНезависимогоПризнанияДоходовРасходов;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Результат = НачалоВступленияВСилу67ФЗ();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает дату начала применения закона 67-ФЗ по расходам.
// Возвращаемое значение:
//  Дата
Функция НачалоПрименения67ФЗПоРасходам() Экспорт
	
	Возврат Дата(2023,1,1);
	
КонецФункции

#КонецОбласти
//-- Локализация
#КонецОбласти

#КонецОбласти

#КонецЕсли
