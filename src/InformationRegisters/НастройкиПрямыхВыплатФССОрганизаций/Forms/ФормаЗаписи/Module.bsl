#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ПравоДоступа("Изменение", Метаданные.РегистрыСведений.НастройкиПрямыхВыплатФССОрганизаций) Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ПрочитатьПараметры();
	
	Если Не ЗначениеЗаполнено(Запись.Организация) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ПрочитатьДанные();
	
	СостояниеФормы = СостояниеФормы_ДанныеПрочитаны();
	
	Заголовок = СтрШаблон(НСтр("ru = '%1: Настройки прямых выплат ФСС';
								|en = '%1: SSF direct payments settings'"), Запись.Организация);
	
	Команда = Метаданные.РегистрыСведений.НастройкиПрямыхВыплатФСССотрудников.Команды.ФормаСписка;
	Элементы.НастройкиПрямыхВыплатФССПояснение.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(
		НСтр("ru = 'Выбранные способы используются по порядку при заполнении заявлений сотрудников на выплату пособий.
			|См. также <a href = ""ПоказатьСпособыПрямыхВыплатФизическихЛиц"">%1</a>. Уточнить способ выплаты пособий можно в карточке сотрудника.';
			|en = 'The selected methods are used in sequence when completing employee benefits applications.
			|See also <a href = ""ПоказатьСпособыПрямыхВыплатФизическихЛиц"">%1</a>. You can clarify the benefits payment method in the employee''s card.'"),
		Команда.Представление());
	
	НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(КлючЗаписи());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьЗарплатныйПроектПриИзменении(Элемент)
	ЗаписатьНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ЗарплатныйПроектПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Запись.ЗарплатныйПроект) Тогда
		Запись.ИспользоватьЗарплатныйПроект = Истина;
	Иначе
		Запись.ИспользоватьЗарплатныйПроект = Ложь;
	КонецЕсли;
	ЗаписатьНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗарплатныйБанковскийСчетПриИзменении(Элемент)
	ЗаписатьНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОсновноеМестоРаботыПриИзменении(Элемент)
	ЗаписатьНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПрямыхВыплатФССПояснениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	УчетПособийСоциальногоСтрахованияКлиент.ПоказатьСпособыПрямыхВыплатФизическихЛиц(
		Запись.Организация,
		ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Состояние_формы

&НаСервере
Функция СостояниеФормы_ДанныеПрочитаны()
	Возврат "";
КонецФункции

&НаСервере
Функция СостояниеФормы_ИзмененияСохранены()
	Возврат Новый ФорматированнаяСтрока(БиблиотекаКартинок.ИзмененияСохранены,
		" ", НСтр("ru = 'Изменения сохранены';
					|en = 'Changes are saved'"), СуффиксСостоянияФормы());
КонецФункции

&НаСервере
Функция СуффиксСостоянияФормы()
	Возврат " " + Формат(ТекущаяДатаСеанса(), "ДФ=HH:mm:ss") + ".";
КонецФункции

#КонецОбласти

&НаСервере
Процедура ПрочитатьПараметры()
	Ключ = ОбщегоНазначенияБЗК.ЗначениеСвойства(Параметры, "Ключ");
	Если ТипЗнч(Ключ) = Тип("РегистрСведенийКлючЗаписи.НастройкиПрямыхВыплатФССОрганизаций") Тогда
		ЗаполнитьЗначенияСвойств(Параметры, Ключ);
	КонецЕсли;
	Запись.Организация = Параметры.Организация;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанные()
	Структура = РегистрыСведений.НастройкиПрямыхВыплатФССОрганизаций.Прочитать(Запись.Организация);
	ЗаполнитьЗначенияСвойств(Запись, Структура, , "Организация");
КонецПроцедуры

&НаСервере
Функция КлючЗаписи()
	Измерения = Новый Структура("Организация", Запись.Организация);
	Возврат РегистрыСведений.НастройкиПрямыхВыплатФССОрганизаций.СоздатьКлючЗаписи(Измерения);
КонецФункции

&НаКлиенте
Процедура ЗаписатьНаКлиенте()
	Если Не ЗаписатьНаСервере() Тогда
		Возврат;
	КонецЕсли;
	Структура = Новый Структура("Организация, ГоловнаяОрганизация", Запись.Организация, ГоловнаяОрганизация);
	Оповестить("Запись_НастройкиПрямыхВыплатФССОрганизаций", Структура, ЭтотОбъект);
КонецПроцедуры

&НаСервере
Функция ЗаписатьНаСервере()
	Если Не РегистрыСведений.НастройкиПрямыхВыплатФССОрганизаций.ЗаписатьМенеджерЗаписи(Запись) Тогда
		Возврат Ложь;
	КонецЕсли;
	ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Запись.Организация);
	СостояниеФормы = СостояниеФормы_ИзмененияСохранены();
	Возврат Истина;
КонецФункции

#КонецОбласти
