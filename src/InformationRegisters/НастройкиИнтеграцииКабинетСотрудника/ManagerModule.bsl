#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция НастройкиИнтеграции() Экспорт
	
	Настройки = РегистрыСведений.НастройкиИнтеграцииКабинетСотрудника.СоздатьМенеджерЗаписи();
	Настройки.Прочитать();
	
	СтруктураНастроек = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(
							Настройки, Метаданные.РегистрыСведений.НастройкиИнтеграцииКабинетСотрудника);
	
	Если Не ЗначениеЗаполнено(СтруктураНастроек.ДнейСохраненияПубликации) Тогда
		СтруктураНастроек.ДнейСохраненияПубликации = 5;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтруктураНастроек.СпособПолученияСогласияНаПрисоединениеККЭДО) Тогда
		СтруктураНастроек.СпособПолученияСогласияНаПрисоединениеККЭДО = Перечисления.СпособыПолученияСогласияНаПрисоединениеККЭДО.БумажныйДокумент;	
	КонецЕсли;
	
	Возврат СтруктураНастроек;

КонецФункции

Процедура СохранитьНовыеВидыКонтактнойИнформации(ВидКИМобильныйТелефон, ВидКИАдресЭлектроннойПочты) Экспорт

	Настройки = НастройкиИнтеграции();
	Настройки.ВидКонтактнойИнформацииМобильныйТелефон = ВидКИМобильныйТелефон;
	Настройки.ВидКонтактнойИнформацииАдресЭлектроннойПочты = ВидКИАдресЭлектроннойПочты;
	
	НаборЗаписей = РегистрыСведений.НастройкиИнтеграцииКабинетСотрудника.СоздатьНаборЗаписей();
	ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Настройки);
	НаборЗаписей.Записать();

КонецПроцедуры

Процедура СохранитьЗначениеИспользуетсяКадровыйЭДО(ИспользуетсяКадровыйЭДО) Экспорт

	Настройки = НастройкиИнтеграции();
	Настройки.ИспользуетсяКадровыйЭДО = ИспользуетсяКадровыйЭДО;
	
	НаборЗаписей = РегистрыСведений.НастройкиИнтеграцииКабинетСотрудника.СоздатьНаборЗаписей();
	ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Настройки);
	НаборЗаписей.ДополнительныеСвойства.Вставить("ОбновитьНастройкиФункциональностьСервиса");
	НаборЗаписей.Записать();

КонецПроцедуры

Процедура СохранитьЗначениеДнейСохраненияПубликации(ДнейСохраненияПубликации) Экспорт

	Настройки = НастройкиИнтеграции();
	Настройки.ДнейСохраненияПубликации = ДнейСохраненияПубликации;
	
	НаборЗаписей = РегистрыСведений.НастройкиИнтеграцииКабинетСотрудника.СоздатьНаборЗаписей();
	ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Настройки);
	НаборЗаписей.Записать();

КонецПроцедуры

Процедура СохранитьЗначениеКоординаторОбсуждений(НовоеЗначение) Экспорт

	Настройки = НастройкиИнтеграции();
	Настройки.КоординаторОбсуждений = НовоеЗначение;
	
	НаборЗаписей = РегистрыСведений.НастройкиИнтеграцииКабинетСотрудника.СоздатьНаборЗаписей();
	ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Настройки);
	НаборЗаписей.Записать();

КонецПроцедуры

Процедура СохранитьЗначениеИдентификаторПриложенияСовместногоИспользования(НовоеЗначение) Экспорт

	Настройки = НастройкиИнтеграции();
	Настройки.ИдентификаторПриложенияСовместногоИспользования = НовоеЗначение;
	
	НаборЗаписей = РегистрыСведений.НастройкиИнтеграцииКабинетСотрудника.СоздатьНаборЗаписей();
	ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Настройки);
	НаборЗаписей.Записать();

КонецПроцедуры

Процедура СохранитьЗначениеСпособПолученияСогласияНаПрисоединениеККЭДО(СпособПолучения) Экспорт
	
	Настройки = НастройкиИнтеграции();
	Настройки.СпособПолученияСогласияНаПрисоединениеККЭДО = СпособПолучения;
	
	НаборЗаписей = РегистрыСведений.НастройкиИнтеграцииКабинетСотрудника.СоздатьНаборЗаписей();
	ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Настройки);
	НаборЗаписей.ДополнительныеСвойства.Вставить("ОбновитьНастройкиФункциональностьСервиса");
	НаборЗаписей.Записать();

КонецПроцедуры

Процедура СохранитьЗначениеВариантОтчетаРасчетныйЛисток(ВариантОтчетаРасчетныйЛисток) Экспорт
	Настройки = НастройкиИнтеграции();
	Настройки.ВариантОтчетаРасчетныйЛисток = ВариантОтчетаРасчетныйЛисток;
	СохранитьНастройки(Настройки);
КонецПроцедуры

Процедура СохранитьЗначениеВариантОтчетаРасчетныйЛистокЗаПервуюПоловину(ВариантОтчетаРасчетныйЛистокЗаПервуюПоловину) Экспорт
	Настройки = НастройкиИнтеграции();
	Настройки.ВариантОтчетаРасчетныйЛистокЗаПервуюПоловину = ВариантОтчетаРасчетныйЛистокЗаПервуюПоловину;
	СохранитьНастройки(Настройки);
КонецПроцедуры

Процедура СохранитьЗначениеФормироватьРасчетныеЛистыОтдельнымЗапросом(ФормироватьРасчетныеЛистыОтдельнымЗапросом) Экспорт
	Настройки = НастройкиИнтеграции();
	Настройки.ФормироватьРасчетныеЛистыОтдельнымЗапросом = ФормироватьРасчетныеЛистыОтдельнымЗапросом;
	СохранитьНастройки(Настройки);
КонецПроцедуры

Процедура СохранитьНастройки(Настройки)
	НаборЗаписей = РегистрыСведений.НастройкиИнтеграцииКабинетСотрудника.СоздатьНаборЗаписей();
	ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Настройки);
	НаборЗаписей.Записать();
КонецПроцедуры

#КонецОбласти

#КонецЕсли

