#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция КомментарииФайла(ЭлектронныйДокумент) Экспорт
	
	Комментарии = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПрисоединенныйФайл", ЭлектронныйДокумент);
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователи.ТекущийПользователь());
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КомментарииФайлов.Исполнитель КАК Исполнитель,
		|	КомментарииФайлов.ДатаКомментария КАК ДатаКомментария,
		|	КомментарииФайлов.Комментарий КАК Комментарий,
		|	ВЫБОР
		|		КОГДА ЗапланированныеДействия.ПрисоединенныйФайл ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Ознакомиться
		|ИЗ
		|	РегистрСведений.КомментарииФайловДокументовКЭДО КАК КомментарииФайлов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗапланированныеДействияСФайламиДокументовКЭДО КАК ЗапланированныеДействия
		|		ПО КомментарииФайлов.ПрисоединенныйФайл = ЗапланированныеДействия.ПрисоединенныйФайл
		|			И (ЗапланированныеДействия.Исполнитель = &ТекущийПользователь)
		|			И (ЗапланированныеДействия.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСФайламиДокументовКЭДО.Ознакомиться))
		|ГДЕ
		|	КомментарииФайлов.ПрисоединенныйФайл = &ПрисоединенныйФайл
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаКомментария,
		|	Исполнитель,
		|	Комментарий";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Комментарий = Новый Структура("Исполнитель,ДатаКомментария,Комментарий,Ознакомиться");
		ЗаполнитьЗначенияСвойств(Комментарий, Выборка);
		
		Комментарии.Добавить(Комментарий);
		
	КонецЦикла;
	
	Возврат Комментарии;
	
КонецФункции

Процедура ДобавитьКомментарийФайла(ПрисоединенныйФайл, ТекстКомментария, ТекущийПользователь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
		
	ФайлыКОбработке = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПрисоединенныйФайл);
	
	// Регистрируется комментарий причины отказа в подписании
	НаборЗаписей = РегистрыСведений.КомментарииФайловДокументовКЭДО.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПрисоединенныйФайл.Установить(ПрисоединенныйФайл);
	НаборЗаписей.Отбор.Исполнитель.Установить(ТекущийПользователь);
	
	Запись = НаборЗаписей.Добавить();
	Запись.ПрисоединенныйФайл = ПрисоединенныйФайл;
	Запись.Исполнитель = ТекущийПользователь;
	Запись.Комментарий = ТекстКомментария;
	Запись.ДатаКомментария = ТекущаяДатаСеанса();
	
	НаборЗаписей.Записать();
	
	// Отменяются все запланированные действия
	РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.УдалитьФайлыИзОбработки(ФайлыКОбработке);
	
	// Планируются ознакомления всех пользователей, ранее подписавших электронный документ
	ОзнакомляемыеОтветственные = Новый Массив;
	ПодписиФайла = ЭлектроннаяПодпись.УстановленныеПодписи(ПрисоединенныйФайл);
	Для Каждого СвойстваПодписи Из ПодписиФайла Цикл
		Если ЗначениеЗаполнено(СвойстваПодписи.УстановившийПодпись) Тогда
			ОзнакомляемыеОтветственные.Добавить(СвойстваПодписи.УстановившийПодпись);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыДанныхФайла = РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла();
	ПараметрыДанныхФайла.ПолучатьСсылкуНаДвоичныеДанные = Ложь;
	ДанныеФайла = РаботаСФайлами.ДанныеФайла(ПрисоединенныйФайл, ПараметрыДанныхФайла);
	Если ЗначениеЗаполнено(ДанныеФайла.Владелец) Тогда
		МетаданныеВладельца = ДанныеФайла.Владелец.Метаданные();
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Ответственный", МетаданныеВладельца) Тогда
			ОтветственныйВладельца = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеФайла.Владелец, "Ответственный");
			Если ЗначениеЗаполнено(ОтветственныйВладельца)
				И ОзнакомляемыеОтветственные.Найти(ОтветственныйВладельца) = Неопределено Тогда
				
				ОзнакомляемыеОтветственные.Добавить(ОтветственныйВладельца);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОзнакомляемыеОтветственные) Тогда
		РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.ЗарегистрироватьОбработкуФайловИсполнителям(
			ФайлыКОбработке,
			Перечисления.ДействияСФайламиДокументовКЭДО.Ознакомиться,
			ОзнакомляемыеОтветственные,
			Истина);
		КонецЕсли;
		
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли