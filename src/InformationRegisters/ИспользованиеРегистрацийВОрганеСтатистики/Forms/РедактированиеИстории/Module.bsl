
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Параметры.Свойство("ВедущийОбъект", ОбъектВладелец);
	Если Не ЗначениеЗаполнено(ОбъектВладелец) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ТипыРеспондентов = Справочники.РегистрацииВОрганеСтатистики.ОписаниеТиповРеспондентовРосстата();
	Если Не ТипыРеспондентов.СодержитТип(ТипЗнч(ОбъектВладелец)) Тогда
		Элементы.НаборЗаписейДобавить.Доступность = Ложь;
	КонецЕсли;
	
	Если ТипЗнч(ОбъектВладелец) = Тип("СправочникСсылка.Организации") Тогда
		ОрганизацияВладельцаРегистрации = ОбъектВладелец;
	Иначе
		ОрганизацияВладельцаРегистрации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектВладелец, "Владелец");
	КонецЕсли;
	ВладелецРегистрации = ОрганизацияВладельцаРегистрации;
	
	// Если объект еще не заблокирован для изменений и есть права на изменение набора
	// попытаемся установить блокировку.
	Если НЕ ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ИспользованиеРегистрацийВОрганеСтатистики) Тогда
		
		ТолькоПросмотр = Истина;
		
	КонецЕсли; 
	
	Если ТолькоПросмотр Тогда
		
		Элементы.НаборЗаписей.ТолькоПросмотр = Истина;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, 
			"ФормаКомандаОК",
			"Доступность",
			Ложь);
			
		Элементы.ФормаКомандаОтмена.КнопкаПоУмолчанию = Истина;
		Элементы.НаборЗаписейДобавитьИзИзвестных.Доступность = Ложь;
		Элементы.НаборЗаписейДобавить.Доступность = Ложь;
		
	КонецЕсли;
	
	Для Каждого ЗаписьНабора Из Параметры.МассивЗаписей Цикл
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), ЗаписьНабора);
	КонецЦикла;
	
	НаборЗаписей.Сортировать("Период");
	
	Для Каждого СтрокаТабличнойЧасти Из НаборЗаписей Цикл
		ЗаполнитьМесяцПоДате(СтрокаТабличнойЧасти);
	КонецЦикла;
	
	ДатаОтсчетаПериодическихСведений = ДатаОтсчетаПериодическихСведенийСПериодомМесяц();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьИзИзвестных(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	Отборы = Новый Структура("Владелец", ВладелецРегистрации);
	ПараметрыОткрытия.Вставить("Отбор", Отборы);
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	
	Оповещение = Новый ОписаниеОповещения("ДобавитьЗаписьЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.РегистрацииВОрганеСтатистики.ФормаВыбора",
		ПараметрыОткрытия,, Истина,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура Добавить(Команда)
	
	Если ЗначениеЗаполнено(ОбъектВладелец) Тогда
		Отказ = Истина;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("СтруктурнаяЕдиница", ОбъектВладелец);
		
		Оповещение = Новый ОписаниеОповещения("ДобавитьЗаписьЗавершение", ЭтотОбъект);
		ОткрытьФорму("Справочник.РегистрацииВОрганеСтатистики.ФормаОбъекта",
			ПараметрыОткрытия,, Истина,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	РедактированиеПериодическихСведенийКлиент.ОповеститьОЗавершении(ЭтаФорма, "ИспользованиеРегистрацийВОрганеСтатистики", ОбъектВладелец);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНаборЗаписей

&НаКлиенте
Процедура НаборЗаписейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя <> "НаборЗаписейПериодСтрокой" Тогда
		
		Если Элемент.ТекущиеДанные <> Неопределено
			И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Регистрация) Тогда
			
			ПараметрыОткрытия = Новый Структура("Ключ,ТолькоПросмотр", Элемент.ТекущиеДанные.Регистрация, ТолькоПросмотр);
			ОткрытьФорму("Справочник.РегистрацииВОрганеСтатистики.ФормаОбъекта", ПараметрыОткрытия, ЭтаФорма);
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		
		Если НЕ ОтменаРедактирования Тогда
		
			Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Период) Тогда
				
				СообщениеОбОшибке = НСтр("ru = 'Необходимо указать дату сведений';
										|en = 'Enter information date'");
				ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,,"НаборЗаписей.Период", , Отказ);
				
			Иначе
				
				НайденныеСтроки = НаборЗаписей.НайтиСтроки(Новый Структура("Период", Элемент.ТекущиеДанные.Период));
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					
					Если НайденнаяСтрока <> Элемент.ТекущиеДанные Тогда
						СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанной датой сведений';
												|en = 'The record with the specified information date already exists'");
						ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,,"НаборЗаписей.Период", , Отказ);
						Прервать;
					КонецЕсли; 
					
				КонецЦикла;
				
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		
		Если Элемент.ТекущиеДанные <> Неопределено
			И НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Регистрация) Тогда
			
			НаборЗаписей.Удалить(Элемент.ТекущиеДанные);
			
		КонецЕсли; 
		
	Иначе
		РедактированиеПериодическихСведенийКлиент.УпорядочитьНаборЗаписейВФорме(ЭтаФорма);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПериодСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(Элементы.НаборЗаписей.ТекущиеДанные, "Период", "ПериодСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, Элементы.НаборЗаписей.ТекущиеДанные, "Период", "ПериодСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПериодСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(Элементы.НаборЗаписей.ТекущиеДанные, "Период", "ПериодСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПериодСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПериодСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьМесяцПоДате(СтрокаТаблицы)
	
	СтрокаТаблицы.ПериодСтрокой = Формат(СтрокаТаблицы.Период, "ДФ='ММММ гггг'");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДатаОтсчетаПериодическихСведенийСПериодомМесяц()
	
	Возврат КонецМесяца('18991231000000') + 1
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
 
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("НаборЗаписейПериодСтрокой");
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НаборЗаписей.Период");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Новый ПолеКомпоновкиДанных("ДатаОтсчетаПериодическихСведений");
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", "");
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗаписьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Запись = НаборЗаписей.Добавить();
		Запись.СтруктурнаяЕдиница = ОбъектВладелец;
		Запись.Регистрация = Результат;
		Запись.Период = ПериодНовойЗаписи();
		
		ЗаполнитьМесяцПоДате(Запись);
		
		Элементы.НаборЗаписей.ТекущаяСтрока = Запись.ПолучитьИдентификатор();
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПериодНовойЗаписи()
	
	НовыйПериод = НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса());
	
	Если НаборЗаписей.Количество() > 1 Тогда
		ПоследнийПериод = НаборЗаписей.Получить(НаборЗаписей.Количество() - 2).Период;
	Иначе
		ПоследнийПериод = '00010101000000';
	КонецЕсли;
	
	Если НовыйПериод <= ПоследнийПериод Тогда
		НовыйПериод = ДобавитьМесяц(ПоследнийПериод, 1);
	КонецЕсли;
	
	Возврат НовыйПериод;
	
КонецФункции

&НаКлиенте
Процедура НаборЗаписейРегистрацияОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Ключ,ТолькоПросмотр", Элементы.НаборЗаписей.ТекущиеДанные.Регистрация, ТолькоПросмотр);
	ОткрытьФорму("Справочник.РегистрацииВОрганеСтатистики.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти
