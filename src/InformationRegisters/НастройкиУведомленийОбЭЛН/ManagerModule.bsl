
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиПравилРегистрации

// См. ЗарплатаКадрыРасширенныйСинхронизацияДанных.ШаблонОбработчика
Процедура ПриЗаполненииНастроекОбработчиковПравилРегистрации(Настройки) Экспорт
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляНезависимогоРегистра(Настройки, "Организация",
		"РегламентированныеДанные");
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НастройкиОрганизации(Организация) Экспорт
	Массив = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация);
	Возврат НастройкиОрганизаций(Массив)[0];
КонецФункции

Функция НастройкиОрганизаций(Организации) Экспорт
	ТаблицаКэш = СЭДОФССРасширенныйПовтИсп.НастройкиУведомленийОбЭЛН();
	
	Найденные = Новый Массив;
	ОрганизацииДляДобавленияВКэш = Новый Массив;
	Для Каждого Организация Из Организации Цикл
		СтрокаТаблицы = ТаблицаКэш.Найти(Организация, "Организация");
		Если СтрокаТаблицы = Неопределено Тогда
			ОрганизацииДляДобавленияВКэш.Добавить(Организация);
		Иначе
			Найденные.Добавить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	Если ОрганизацииДляДобавленияВКэш.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Данные.Организация КАК Организация,
		|	Данные.СоздаватьБольничныеПоЭЛН КАК СоздаватьБольничныеПоЭЛН,
		|	Данные.СоздаватьОтсутствияПоЭЛН КАК СоздаватьОтсутствияПоЭЛН,
		|	Данные.УтверждатьОтсутствияПоЭЛН КАК УтверждатьОтсутствияПоЭЛН
		|ИЗ
		|	РегистрСведений.НастройкиУведомленийОбЭЛН КАК Данные
		|ГДЕ
		|	Данные.Организация В(&Организации)";
		Запрос.УстановитьПараметр("Организации", ОрганизацииДляДобавленияВКэш);
		
		УстановитьПривилегированныйРежим(Истина);
		ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
		УстановитьПривилегированныйРежим(Ложь);
		
		Для Каждого Организация Из ОрганизацииДляДобавленияВКэш Цикл
			СтрокаТаблицы = ТаблицаКэш.Добавить();
			СтрокаТаблицы.Организация = Организация;
			СтрокаТаблицыЗапроса = ТаблицаЗапроса.Найти(Организация, "Организация");
			Если СтрокаТаблицыЗапроса = Неопределено Тогда
				СтрокаТаблицы.СоздаватьБольничныеПоЭЛН  = Истина;
				СтрокаТаблицы.СоздаватьОтсутствияПоЭЛН  = Истина;
				СтрокаТаблицы.УтверждатьОтсутствияПоЭЛН = Истина;
			Иначе
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗапроса);
			КонецЕсли;
			Найденные.Добавить(СтрокаТаблицы);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТаблицаКэш.Скопировать(Найденные);
КонецФункции

Функция ПустаяТаблицаНастроек() Экспорт
	ТаблицаЗначений = Новый ТаблицаЗначений;
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.НастройкиУведомленийОбЭЛН;
	Для Каждого Реквизит Из МетаданныеРегистра.Измерения Цикл
		ТаблицаЗначений.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);
	КонецЦикла;
	Для Каждого Реквизит Из МетаданныеРегистра.Ресурсы Цикл
		ТаблицаЗначений.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);
	КонецЦикла;
	
	Возврат ТаблицаЗначений;
КонецФункции

Процедура ЗаписатьНастройкиОрганизации(Организация, Настройки) Экспорт
	Менеджер = СоздатьМенеджерЗаписи();
	Менеджер.Организация = Организация;
	ИменаРесурсов = "СоздаватьБольничныеПоЭЛН, СоздаватьОтсутствияПоЭЛН, УтверждатьОтсутствияПоЭЛН";
	ЗаполнитьЗначенияСвойств(Менеджер, Настройки, ИменаРесурсов);
	Менеджер.Записать(Истина);
	ТаблицаКэш = СЭДОФССРасширенныйПовтИсп.НастройкиУведомленийОбЭЛН();
	СтрокаТаблицы = ТаблицаКэш.Найти(Организация, "Организация");
	Если СтрокаТаблицы <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Менеджер);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли
