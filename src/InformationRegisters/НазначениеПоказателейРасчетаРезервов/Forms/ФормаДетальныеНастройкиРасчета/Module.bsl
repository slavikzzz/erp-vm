
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация             = Параметры.Организация;
	ПараметрыРасчетаРезерва = Параметры.ПараметрыРасчетаРезерва;
	НачалоПериода           = НачалоДня(Параметры.НачалоПериода);
	КонецПериода            = КонецДня(Параметры.КонецПериода);
	НазначениеПоказателя    = Параметры.НазначениеПоказателя;
	ВидРасчетаРезерва       = Параметры.ВидРасчетаРезерва;
	
	Если ЗначениеЗаполнено(ВидРасчетаРезерва) Тогда
		Заголовок = СтрШаблон(НСтр("ru = '%1 (детальные настройки расчета)';
									|en = '%1 (detailed calculation settings)'"), ВидРасчетаРезерва);
	Иначе
		Заголовок = НСтр("ru = 'Детальные настройки расчета';
						|en = 'Detailed calculation settings'");
	КонецЕсли;
	
	ОтображатьСтраницы = Истина;
	Если Не ЗначениеЗаполнено(НазначениеПоказателя) Тогда
		ОтображатьСтраницы = ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание");
	Иначе
		ОтображатьСтраницы = Ложь;
	КонецЕсли;
	
	ПрочитатьЗначенияПоказателей();
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		ВопросСохранитьИзменения(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыВидыРасчетовПодразделений

&НаКлиенте
Процедура ВидыРасчетовПодразделенийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элементы.ВидыРасчетовПодразделений.ТекущиеДанные.ВидРасчетаРезерва = ВидРасчетаРезерва;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыВидыРасчетовПозицийШтатногоРасписания

&НаКлиенте
Процедура ВидыРасчетовПозицийШтатногоРасписанияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элементы.ВидыРасчетовПозицийШтатногоРасписания.ТекущиеДанные.ВидРасчетаРезерва = ВидРасчетаРезерва;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если ПроверитьЗаполнениеРеквизитов() Тогда
		ЗаписатьЗначенияПоказателей();
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВопросСохранитьИзменения(Закрытие)
	
	ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?';
						|en = 'The data has changed. Do you want to save the changes?'");
	Оповещение = Новый ОписаниеОповещения("ВопросСохранитьИзмененияЗавершение", ЭтотОбъект, Новый Структура("Закрытие", Закрытие));
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьИзмененияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если ПроверитьЗаполнениеРеквизитов() Тогда
			ЗаписатьЗначенияПоказателей();
			Закрыть();
		КонецЕсли;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеРеквизитов()
	
	Отказ = Ложь;
	
	ШаблонСообщения = НСтр("ru = 'В строке %1 списка ""%2"" не заполнена колонка ""%3""';
							|en = 'Column ""%3"" in line %1 of list ""%2"" is not filled.'");
	
	ИмяТаблицы = НСтр("ru = 'Подразделения';
						|en = 'Business units'");
	Для Каждого СтрокаТаблицы Из ВидыРасчетовПодразделений Цикл
		НомерСтроки = ВидыРасчетовПодразделений.Индекс(СтрокаТаблицы) +1;
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Подразделение) Тогда
			ИмяКолонки = НСтр("ru = 'Подразделение';
								|en = 'Business unit'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НомерСтроки, ИмяТаблицы, ИмяКолонки);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "ВидыРасчетовПодразделений.Подразделение",, Отказ);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ВидРасчетаРезерва) Тогда
			ИмяКолонки = НСтр("ru = 'Вид расчета резерва';
								|en = 'Payroll fund calculation type'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НомерСтроки, ИмяТаблицы, ИмяКолонки);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "ВидыРасчетовПодразделений.ВидРасчетаРезерва",, Отказ);
		КонецЕсли;
	КонецЦикла;
	
	ИмяТаблицы = НСтр("ru = 'Позиции штатного расписания';
						|en = 'Headcount positions'");
	Для Каждого СтрокаТаблицы Из ВидыРасчетовПозицийШтатногоРасписания Цикл
		НомерСтроки = ВидыРасчетовПозицийШтатногоРасписания.Индекс(СтрокаТаблицы) +1;
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ПозицияШтатногоРасписания) Тогда
			ИмяКолонки = НСтр("ru = 'Позиция штатного расписания';
								|en = 'Headcount position'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НомерСтроки, ИмяТаблицы, ИмяКолонки);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "ВидыРасчетовПозицийШтатногоРасписания.ПозицияШтатногоРасписания",, Отказ);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ВидРасчетаРезерва) Тогда
			ИмяКолонки = НСтр("ru = 'Вид расчета резерва';
								|en = 'Payroll fund calculation type'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НомерСтроки, ИмяТаблицы, ИмяКолонки);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "ВидыРасчетовПозицийШтатногоРасписания.ВидРасчетаРезерва",, Отказ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Не Отказ;
	
КонецФункции

&НаСервере
Процедура ЗаписатьЗначенияПоказателей()
	
	НаборЗаписей = РегистрыСведений.НазначениеПоказателейРасчетаРезервов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Отбор.ПараметрыРасчетаРезерва.Установить(ПараметрыРасчетаРезерва);
	НаборЗаписей.Отбор.ВидРасчетаРезерва.Установить(ВидРасчетаРезерва);
	НаборЗаписей.Очистить();
	
	Для Каждого СтрокаТаблицы Из ВидыРасчетовПодразделений Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Подразделение) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Организация             = Организация;
		НоваяЗапись.ПараметрыРасчетаРезерва = ПараметрыРасчетаРезерва;
		НоваяЗапись.ВидРасчетаРезерва       = ВидРасчетаРезерва;
		НоваяЗапись.ВладелецВидаРасчета     = СтрокаТаблицы.Подразделение;
		
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из ВидыРасчетовПозицийШтатногоРасписания Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ПозицияШтатногоРасписания) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Организация             = Организация;
		НоваяЗапись.ПараметрыРасчетаРезерва = ПараметрыРасчетаРезерва;
		НоваяЗапись.ВидРасчетаРезерва       = ВидРасчетаРезерва;
		НоваяЗапись.ВладелецВидаРасчета     = СтрокаТаблицы.ПозицияШтатногоРасписания;
		
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЗначенияПоказателей()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",             Организация);
	Запрос.УстановитьПараметр("ПараметрыРасчетаРезерва", ПараметрыРасчетаРезерва);
	Запрос.УстановитьПараметр("ВидРасчетаРезерва",       ВидРасчетаРезерва);
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НазначениеПоказателейРасчетаРезервов.Организация КАК Организация,
	|	НазначениеПоказателейРасчетаРезервов.ПараметрыРасчетаРезерва КАК ПараметрыРасчетаРезерва,
	|	НазначениеПоказателейРасчетаРезервов.ВладелецВидаРасчета КАК Подразделение,
	|	НазначениеПоказателейРасчетаРезервов.ВидРасчетаРезерва КАК ВидРасчетаРезерва
	|ИЗ
	|	РегистрСведений.НазначениеПоказателейРасчетаРезервов КАК НазначениеПоказателейРасчетаРезервов
	|ГДЕ
	|	НазначениеПоказателейРасчетаРезервов.Организация = &Организация
	|	И НазначениеПоказателейРасчетаРезервов.ПараметрыРасчетаРезерва = &ПараметрыРасчетаРезерва
	|	И НазначениеПоказателейРасчетаРезервов.ВладелецВидаРасчета ССЫЛКА Справочник.ПодразделенияОрганизаций
	|	И НазначениеПоказателейРасчетаРезервов.ВидРасчетаРезерва = &ВидРасчетаРезерва
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НазначениеПоказателейРасчетаРезервов.Организация КАК Организация,
	|	НазначениеПоказателейРасчетаРезервов.ПараметрыРасчетаРезерва КАК ПараметрыРасчетаРезерва,
	|	НазначениеПоказателейРасчетаРезервов.ВладелецВидаРасчета КАК ПозицияШтатногоРасписания,
	|	НазначениеПоказателейРасчетаРезервов.ВидРасчетаРезерва КАК ВидРасчетаРезерва
	|ИЗ
	|	РегистрСведений.НазначениеПоказателейРасчетаРезервов КАК НазначениеПоказателейРасчетаРезервов
	|ГДЕ
	|	НазначениеПоказателейРасчетаРезервов.Организация = &Организация
	|	И НазначениеПоказателейРасчетаРезервов.ПараметрыРасчетаРезерва = &ПараметрыРасчетаРезерва
	|	И НазначениеПоказателейРасчетаРезервов.ВладелецВидаРасчета ССЫЛКА Справочник.ШтатноеРасписание
	|	И НазначениеПоказателейРасчетаРезервов.ВидРасчетаРезерва = &ВидРасчетаРезерва";
	
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.ВыполнитьПакет();
	
	ВидыРасчетовПодразделений.Загрузить(Результат[0].Выгрузить());
	ВидыРасчетовПозицийШтатногоРасписания.Загрузить(Результат[1].Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	Если Не ОтображатьСтраницы Тогда
		Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НазначениеПоказателя) Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВидыРасчетовПодразделений;
	ИначеЕсли НазначениеПоказателя = Перечисления.НазначенияПоказателейРасчетаРезервовПоОплатеТруда.ДляПодразделения Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВидыРасчетовПодразделений;
		Элементы.ВидыРасчетовПодразделенийВидРасчетаРезерва.Видимость = Ложь;
	Иначе
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВидыРасчетовПозицийШтатногоРасписания;
		Элементы.ВидыРасчетовПозицийШтатногоРасписанияВидРасчетаРезерва.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
