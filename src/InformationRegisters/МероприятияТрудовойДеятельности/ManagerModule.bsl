#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиОбновления

Процедура СформироватьНаборыЗаписейМероприятияТрудовойДеятельности(ПараметрыОбновления = Неопределено) Экспорт
	
	Если ПараметрыОбновления = Неопределено Или Не ПараметрыОбновления.Свойство("РегистраторыДвижений") Тогда
		
		РегистраторыДвижений = Новый Массив;
		Если ПараметрыОбновления <> Неопределено Тогда
			ПараметрыОбновления.Вставить("РегистраторыДвижений", РегистраторыДвижений);
		КонецЕсли;
		
		РегистраторыДвижений.Добавить("КадровыйПеревод");
		РегистраторыДвижений.Добавить("ПриемНаРаботу");
		РегистраторыДвижений.Добавить("Увольнение");
		
		// Мероприятия, введенные в СЗВ_ТД обрабатываем в последнюю очередь
		РегистраторыДвижений.Добавить("РегистрацияТрудовойДеятельности");
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Ссылка.Организация КАК Организация,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Сотрудник КАК ФизическоеЛицо,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ДатаМероприятия КАК ДатаМероприятия,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ВидМероприятия КАК ВидМероприятия,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Сведения КАК Сведения,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Должность КАК Должность,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.РазрядКатегория КАК РазрядКатегория,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Подразделение КАК Подразделение,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ТрудоваяФункция КАК ТрудоваяФункция,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ДатаДокументаОснования КАК ДатаДокументаОснования,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.НомерДокументаОснования КАК НомерДокументаОснования,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.СерияДокументаОснования КАК СерияДокументаОснования,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.НаименованиеВторогоДокументаОснования КАК НаименованиеВторогоДокументаОснования,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ДатаВторогоДокументаОснования КАК ДатаВторогоДокументаОснования,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.СерияВторогоДокументаОснования КАК СерияВторогоДокументаОснования,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.НомерВторогоДокументаОснования КАК НомерВторогоДокументаОснования,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольнения КАК ОснованиеУвольнения,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ДатаС КАК ДатаС,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ДатаПо КАК ДатаПо,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ИдМероприятия КАК ИдМероприятия,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.СотрудникЗаписи КАК Сотрудник,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Ссылка КАК Ссылка,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Ссылка.Дата КАК Дата,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.НомерСтроки КАК НомерСтроки,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ПредставлениеДолжности КАК ПредставлениеДолжности,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ПредставлениеПодразделения КАК ПредставлениеПодразделения,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольненияТекстОснования КАК ОснованиеУвольненияТекстОснования,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольненияСтатья КАК ОснованиеУвольненияСтатья,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольненияЧасть КАК ОснованиеУвольненияЧасть,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольненияПункт КАК ОснованиеУвольненияПункт,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольненияПодпункт КАК ОснованиеУвольненияПодпункт,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольненияАбзац КАК ОснованиеУвольненияАбзац,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.КодПоОКЗ КАК КодПоОКЗ,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОписаниеДолжности КАК ОписаниеДолжности
			|ИЗ
			|	Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Мероприятия КАК СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия
			|ГДЕ
			|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Ссылка.Проведен
			|	И СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ДатаОтмены = ДАТАВРЕМЯ(1, 1, 1)";
		
		МероприятияТрудовойДеятельности = Запрос.Выполнить().Выгрузить();
		МероприятияТрудовойДеятельности.Колонки.Добавить("Учтено", Новый ОписаниеТипов("Булево"));
		МероприятияТрудовойДеятельности.Индексы.Добавить("ФизическоеЛицо,Сотрудник,Организация,ДатаМероприятия,ВидМероприятия");
		
		Если ПараметрыОбновления <> Неопределено Тогда
			ПараметрыОбновления.Вставить("МероприятияТрудовойДеятельности", МероприятияТрудовойДеятельности);
		КонецЕсли;
		
	Иначе
		РегистраторыДвижений = ПараметрыОбновления.РегистраторыДвижений;
		МероприятияТрудовойДеятельности = ПараметрыОбновления.МероприятияТрудовойДеятельности;
	КонецЕсли;
	
	Если ПараметрыОбновления = Неопределено Тогда
		ОбрабатываемыеРегистраторы = ОбщегоНазначения.СкопироватьРекурсивно(РегистраторыДвижений);
	Иначе
		Если РегистраторыДвижений.Количество() = 0 Тогда
			ОбрабатываемыеРегистраторы = Новый Массив;
		Иначе
			ОбрабатываемыеРегистраторы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РегистраторыДвижений[0]);
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого ИмяРегистратора Из ОбрабатываемыеРегистраторы Цикл
		
		Документы[ИмяРегистратора].СформироватьНаборыЗаписейМероприятияТрудовойДеятельности(МероприятияТрудовойДеятельности, ПараметрыОбновления);
		Если ПараметрыОбновления = Неопределено Тогда
			РегистраторыДвижений.Удалить(0);
		ИначеЕсли ПараметрыОбновления.ОбработкаЗавершена Тогда
			
			РегистраторыДвижений.Удалить(0);
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если РегистраторыДвижений.Количество() = 0 Тогда
		Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.СформироватьНаборыЗаписейМероприятияТрудовойДеятельностиПереданные(ПараметрыОбновления);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЗаписиМероприятий(Мероприятия, МероприятияТрудовойДеятельности, РеквизитыПроверки = "") Экспорт
	
	Для Каждого Мероприятие Из Мероприятия Цикл
		
		СтруктураПоиска = Новый Структура("ФизическоеЛицо,Сотрудник,Организация,ДатаМероприятия,ВидМероприятия");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Мероприятие);
		
		ИменаДополнительныхРеквизитов = СтрРазделить(РеквизитыПроверки, ",");
		НайденныеМероприятия = МероприятияТрудовойДеятельности.НайтиСтроки(СтруктураПоиска);
		Для Каждого НайденноеМероприятие Из НайденныеМероприятия Цикл
			
			Если НайденноеМероприятие.Учтено Тогда
				Продолжить;
			КонецЕсли;
			
			Если НачалоДня(Мероприятие.ДатаДокументаОснования) <> НайденноеМероприятие.ДатаДокументаОснования
				Или ЗначениеЗаполнено(Мероприятие.НаименованиеДокументаОснования)
					И ЗначениеЗаполнено(НайденноеМероприятие.НаименованиеДокументаОснования)
					И Мероприятие.НаименованиеДокументаОснования <> НайденноеМероприятие.НаименованиеДокументаОснования Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			МероприятиеНайдено = Истина;
			Для Каждого ИмяРеквизита Из ИменаДополнительныхРеквизитов Цикл
				
				Если Мероприятие[ИмяРеквизита] <> НайденноеМероприятие[ИмяРеквизита] Тогда
					МероприятиеНайдено = Ложь;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если МероприятиеНайдено Тогда
				
				ЗаполнитьЗначенияСвойств(Мероприятие, НайденноеМероприятие);
				НайденноеМероприятие.Учтено = Истина;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(Мероприятие.ИдМероприятия) Тогда
			Мероприятие.ИдМероприятия = Новый УникальныйИдентификатор();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВосстановлениеПереданныхИдентификаторов(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Мероприятия.Регистратор КАК Регистратор,
		|	Мероприятия.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияПрочие.ИдМероприятия КАК ИдМероприятияПрочие
		|ПОМЕСТИТЬ ВТМероприятияКЗаменеИдентификаторов
		|ИЗ
		|	РегистрСведений.МероприятияТрудовойДеятельности КАК Мероприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияПереданные
		|		ПО Мероприятия.Организация = МероприятияПереданные.Организация
		|			И Мероприятия.ИдМероприятия = МероприятияПереданные.ИдМероприятия
		|			И Мероприятия.Отменено = МероприятияПереданные.Отменено
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПрочие КАК МероприятияПрочие
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияПереданныеПрочие
		|			ПО МероприятияПрочие.Организация = МероприятияПереданныеПрочие.Организация
		|				И МероприятияПрочие.ИдМероприятия = МероприятияПереданныеПрочие.ИдМероприятия
		|				И (НЕ МероприятияПереданныеПрочие.Отменено)
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияПереданныеПрочиеОтмененные
		|			ПО МероприятияПрочие.Организация = МероприятияПереданныеПрочиеОтмененные.Организация
		|				И МероприятияПрочие.ИдМероприятия = МероприятияПереданныеПрочиеОтмененные.ИдМероприятия
		|				И (МероприятияПереданныеПрочиеОтмененные.Отменено)
		|		ПО Мероприятия.ФизическоеЛицо = МероприятияПрочие.ФизическоеЛицо
		|			И Мероприятия.Организация = МероприятияПрочие.Организация
		|			И Мероприятия.Сотрудник = МероприятияПрочие.Сотрудник
		|			И Мероприятия.ДатаМероприятия = МероприятияПрочие.ДатаМероприятия
		|			И Мероприятия.ВидМероприятия = МероприятияПрочие.ВидМероприятия
		|			И Мероприятия.Сведения = МероприятияПрочие.Сведения
		|			И Мероприятия.Подразделение = МероприятияПрочие.Подразделение
		|			И Мероприятия.Должность = МероприятияПрочие.Должность
		|			И Мероприятия.РазрядКатегория = МероприятияПрочие.РазрядКатегория
		|			И Мероприятия.КодПоРееструДолжностей = МероприятияПрочие.КодПоРееструДолжностей
		|			И Мероприятия.ТрудоваяФункция = МероприятияПрочие.ТрудоваяФункция
		|			И (ВЫБОР
		|				КОГДА Мероприятия.НаименованиеДокументаОснования = """"
		|					ТОГДА ИСТИНА
		|				КОГДА МероприятияПрочие.НаименованиеДокументаОснования = """"
		|					ТОГДА ИСТИНА
		|				КОГДА Мероприятия.НаименованиеДокументаОснования = МероприятияПрочие.НаименованиеДокументаОснования
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ)
		|			И Мероприятия.ДатаДокументаОснования = МероприятияПрочие.ДатаДокументаОснования
		|			И Мероприятия.СерияДокументаОснования = МероприятияПрочие.СерияДокументаОснования
		|			И Мероприятия.НомерДокументаОснования = МероприятияПрочие.НомерДокументаОснования
		|			И Мероприятия.НаименованиеВторогоДокументаОснования = МероприятияПрочие.НаименованиеВторогоДокументаОснования
		|			И Мероприятия.ДатаВторогоДокументаОснования = МероприятияПрочие.ДатаВторогоДокументаОснования
		|			И Мероприятия.СерияВторогоДокументаОснования = МероприятияПрочие.СерияВторогоДокументаОснования
		|			И Мероприятия.НомерВторогоДокументаОснования = МероприятияПрочие.НомерВторогоДокументаОснования
		|			И (ВЫБОР
		|				КОГДА Мероприятия.ОснованиеУвольнения = ЗНАЧЕНИЕ(Справочник.ОснованияУвольнения.ПустаяСсылка)
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				КОГДА Мероприятия.ОснованиеУвольнения = ЗНАЧЕНИЕ(Справочник.ОснованияУвольненияПользовательские.ПустаяСсылка)
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ Мероприятия.ОснованиеУвольнения
		|			КОНЕЦ = ВЫБОР
		|				КОГДА МероприятияПрочие.ОснованиеУвольнения = ЗНАЧЕНИЕ(Справочник.ОснованияУвольнения.ПустаяСсылка)
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				КОГДА МероприятияПрочие.ОснованиеУвольнения = ЗНАЧЕНИЕ(Справочник.ОснованияУвольненияПользовательские.ПустаяСсылка)
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ МероприятияПрочие.ОснованиеУвольнения
		|			КОНЕЦ)
		|			И Мероприятия.ДатаС = МероприятияПрочие.ДатаС
		|			И Мероприятия.ДатаПо = МероприятияПрочие.ДатаПо
		|			И Мероприятия.ЯвляетсяСовместителем = МероприятияПрочие.ЯвляетсяСовместителем
		|			И Мероприятия.ПредставлениеДолжности = МероприятияПрочие.ПредставлениеДолжности
		|			И Мероприятия.ПредставлениеПодразделения = МероприятияПрочие.ПредставлениеПодразделения
		|			И Мероприятия.ОснованиеУвольненияТекстОснования = МероприятияПрочие.ОснованиеУвольненияТекстОснования
		|			И Мероприятия.ОснованиеУвольненияСтатья = МероприятияПрочие.ОснованиеУвольненияСтатья
		|			И Мероприятия.ОснованиеУвольненияЧасть = МероприятияПрочие.ОснованиеУвольненияЧасть
		|			И Мероприятия.ОснованиеУвольненияПункт = МероприятияПрочие.ОснованиеУвольненияПункт
		|			И Мероприятия.ОснованиеУвольненияПодпункт = МероприятияПрочие.ОснованиеУвольненияПодпункт
		|			И Мероприятия.ОснованиеУвольненияАбзац = МероприятияПрочие.ОснованиеУвольненияАбзац
		|			И Мероприятия.КодПоОКЗ = МероприятияПрочие.КодПоОКЗ
		|			И Мероприятия.ТерриториальныеУсловия = МероприятияПрочие.ТерриториальныеУсловия
		|			И Мероприятия.ОписаниеДолжности = МероприятияПрочие.ОписаниеДолжности
		|ГДЕ
		|	НЕ Мероприятия.Регистратор В (&МассивОбновленных)
		|	И НЕ Мероприятия.Отменено
		|	И МероприятияПереданные.ИдМероприятия ЕСТЬ NULL
		|	И НЕ МероприятияПрочие.ИдМероприятия ЕСТЬ NULL
		|	И МероприятияПереданныеПрочиеОтмененные.ИдМероприятия ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	МероприятияКЗаменеИдентификаторов.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТРегистраторыКОбновлению
		|ИЗ
		|	ВТМероприятияКЗаменеИдентификаторов КАК МероприятияКЗаменеИдентификаторов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	РегистраторыКОбновлению.Регистратор КАК Регистратор
		|ИЗ
		|	ВТРегистраторыКОбновлению КАК РегистраторыКОбновлению";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МероприятияКЗаменеИдентификаторов.Регистратор КАК Регистратор,
		|	МероприятияКЗаменеИдентификаторов.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияКЗаменеИдентификаторов.ИдМероприятияПрочие КАК ИдМероприятияПрочие
		|ИЗ
		|	ВТРегистраторыКОбновлению КАК РегистраторыКОбновлению
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМероприятияКЗаменеИдентификаторов КАК МероприятияКЗаменеИдентификаторов
		|		ПО РегистраторыКОбновлению.Регистратор = МероприятияКЗаменеИдентификаторов.Регистратор
		|
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		
		МассивОбновленных.Добавить(Выборка.Регистратор);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрСведений.МероприятияТрудовойДеятельности.НаборЗаписей", "Регистратор", Выборка.Регистратор) Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.МероприятияТрудовойДеятельности.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.Прочитать();
		
		ТаблицаНабора = НаборЗаписей.Выгрузить();
		
		Пока Выборка.Следующий() Цикл
			
			СтрокиНабора = ТаблицаНабора.НайтиСтроки(Новый Структура("ИдМероприятия,Отменено", Выборка.ИдМероприятия, Ложь));
			Для Каждого СтрокаНабора Из СтрокиНабора Цикл
				
				СтрокаНабора.ИдМероприятия = Выборка.ИдМероприятияПрочие;
				
				НаборПрочих = РегистрыСведений.МероприятияТрудовойДеятельностиПрочие.СоздатьНаборЗаписей();
				НаборПрочих.Отбор.ФизическоеЛицо.Установить(СтрокаНабора.ФизическоеЛицо);
				НаборПрочих.Отбор.Организация.Установить(СтрокаНабора.Организация);
				НаборПрочих.Прочитать();
				
				ТаблицаНабораПрочих = НаборПрочих.Выгрузить();
				СтрокиНабораПрочих = ТаблицаНабораПрочих.НайтиСтроки(Новый Структура("ИдМероприятия", Выборка.ИдМероприятияПрочие));
				СтрокиСНовымИдМероприятия = ТаблицаНабораПрочих.НайтиСтроки(Новый Структура("ИдМероприятия", Выборка.ИдМероприятия));
				Для Каждого СтрокаНабораПрочих Из СтрокиНабораПрочих Цикл
					
					Если СтрокиСНовымИдМероприятия.Количество() > 0 Тогда
						ТаблицаНабораПрочих.Удалить(СтрокаНабораПрочих);
					Иначе
						СтрокаНабораПрочих.ИдМероприятия = Выборка.ИдМероприятия;
					КонецЕсли;
					
				КонецЦикла;
				
				НаборПрочих.Загрузить(ТаблицаНабораПрочих);
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборПрочих);
				
			КонецЦикла;
			
		КонецЦикла;
		
		НаборЗаписей.Загрузить(ТаблицаНабора);
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
