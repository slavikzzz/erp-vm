#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция ФайлыНаПодписьПользователя(ТолькоРазрешенные, Знач Исполнитель = Неопределено, Знач ВключаяОзнакомления = Ложь) Экспорт
	
	Если Исполнитель = Неопределено Тогда
		Исполнитель = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДействияПользователя = Новый Массив;
	ДействияПользователя.Добавить(Перечисления.ДействияСФайламиДокументовКЭДО.Подписать);
	Если ВключаяОзнакомления Тогда
		ДействияПользователя.Добавить(Перечисления.ДействияСФайламиДокументовКЭДО.Ознакомиться);
	КонецЕсли;
	
	СоздатьВТФайлыКОбработкеСДаннымиПечатныхФорм(
		ТолькоРазрешенные,
		Запрос.МенеджерВременныхТаблиц,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Исполнитель),
		ДействияПользователя);
	
	Запрос.УстановитьПараметр("Исполнитель", Исполнитель);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("МаксимальныйПериодОжидания", МаксимальныйПериодОжидания());
	Запрос.УстановитьПараметр("ДействияПользователя", ДействияПользователя);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПечатныеФормыКОбработке.ПрисоединенныйФайл КАК ФайлОбъекта,
		|	ПодписанныеФормы.ИдентификаторПечатнойФормы КАК ИдентификаторПечатнойФормы,
		|	ТаблицаРегистра.ПрисоединенныйФайл.ВладелецФайла КАК Владелец,
		|	ТаблицаРегистра.Действие КАК Действие,
		|	ВЫБОР
		|		КОГДА РАЗНОСТЬДАТ(ТаблицаРегистра.ДатаЗадания, &ТекущаяДата, МИНУТА) > &МаксимальныйПериодОжидания
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Просрочено,
		|	ВЫБОР
		|		КОГДА ПодписанныеФормы.ПрисоединенныйФайл ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПечатнаяФорма,
		|	ПодписанныеФормы.Оригинал КАК Оригинал,
		|	ПодписанныеФормы.Название КАК Название,
		|	ПодписанныеФормы.Организация КАК Организация,
		|	ПодписанныеФормы.Сотрудник КАК Сотрудник,
		|	ПодписанныеФормы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПодписанныеФормы.Номер КАК Номер,
		|	ПодписанныеФормы.Дата КАК Дата
		|ИЗ
		|	ВТФайлыКОбработкеСДаннымиПечатныхФорм КАК ПечатныеФормыКОбработке
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗапланированныеДействияСФайламиДокументовКЭДО КАК ТаблицаРегистра
		|		ПО ПечатныеФормыКОбработке.ПрисоединенныйФайл = ТаблицаРегистра.ПрисоединенныйФайл
		|			И (ТаблицаРегистра.Исполнитель = &Исполнитель)
		|			И (ТаблицаРегистра.Действие В (&ДействияПользователя))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗапланированныеДействияСФайламиДокументовКЭДО КАК ПредыдущаяОчередность
		|		ПО (ТаблицаРегистра.ПрисоединенныйФайл = ПредыдущаяОчередность.ПрисоединенныйФайл)
		|			И (ТаблицаРегистра.ОжидаетПодписания = ПредыдущаяОчередность.Исполнитель)
		|			И (ТаблицаРегистра.Действие = ПредыдущаяОчередность.Действие)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодписанныеПечатныеФормы КАК ПодписанныеФормы
		|		ПО ПечатныеФормыКОбработке.ПрисоединенныйФайл = ПодписанныеФормы.ПрисоединенныйФайл
		|ГДЕ
		|	ТаблицаРегистра.Исполнитель = &Исполнитель
		|	И ПредыдущаяОчередность.Исполнитель ЕСТЬ NULL
		|	И ТаблицаРегистра.Действие В(&ДействияПользователя)";
	
	УстановитьПривилегированныйРежим(Истина);
	ФайлыНаПодпись = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ФайлыНаПодпись;
	
КонецФункции

Функция ЗаданияОбработки(ТолькоРазрешенные, Действия = Неопределено) Экспорт
	
	Задания = Новый Соответствие;
	
	ДействияСФайламиДокументовКЭДО = Новый Массив;
	ДействияСФайламиДокументовКЭДО.Добавить(Перечисления.ДействияСФайламиДокументовКЭДО.ЗаписатьНаДиск);
	
	Если РаботаСПочтовымиСообщениями.ДоступнаОтправкаПисем() Тогда
		ДействияСФайламиДокументовКЭДО.Добавить(Перечисления.ДействияСФайламиДокументовКЭДО.ОтправитьПоПочте);
	КонецЕсли;
	
	Если ИнтеграцияСРаботаВРоссии.ДоступнаПередачаДокументовНаРаботаВРоссии() Тогда
		ДействияСФайламиДокументовКЭДО.Добавить(Перечисления.ДействияСФайламиДокументовКЭДО.ПередатьНаРаботаВРоссии);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТФайлыКОбработке(
		ТолькоРазрешенные,
		Запрос.МенеджерВременныхТаблиц,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
			Справочники.Пользователи.ПустаяСсылка()),
		ДействияСФайламиДокументовКЭДО);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ФайлыКОбработке.Действие КАК Действие,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ФайлыКОбработке.ПрисоединенныйФайл) КАК КоличествоПечатныхФорм
		|ИЗ
		|	ВТФайлыКОбработке КАК ФайлыКОбработке
		|ГДЕ
		|	ФайлыКОбработке.КоличествоПодписантов = 0
		|	И &ОтборПоДействию
		|
		|СГРУППИРОВАТЬ ПО
		|	ФайлыКОбработке.Действие
		|
		|УПОРЯДОЧИТЬ ПО
		|	Действие";
	
	Если Действия = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоДействию", "(ИСТИНА)");
	Иначе
		Запрос.УстановитьПараметр("Действия", Действия);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоДействию", "ФайлыКОбработке.Действие В (&Действия)");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.Следующий() Цикл
		Задания.Вставить(Выборка.Действие, Выборка.КоличествоПечатныхФорм);
	КонецЦикла;
	
	Возврат Задания;
	
КонецФункции

Процедура ЗарегистрироватьОбработкуФайловИсполнителям(ФайлыКОбработке, Действие, Исполнители, УведомитьИсполнителей = Ложь) Экспорт
	
	Для Каждого ФайлКОбработке Из ФайлыКОбработке Цикл
		
		ОжидаетПодписания = Неопределено;
		Для Каждого Исполнитель Из Исполнители Цикл
			
			НаборЗаписей = РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ПрисоединенныйФайл.Установить(ФайлКОбработке);
			НаборЗаписей.Отбор.Исполнитель.Установить(Исполнитель);
			НаборЗаписей.Отбор.Действие.Установить(Действие);
			
			Запись = НаборЗаписей.Добавить();
			Запись.ПрисоединенныйФайл = ФайлКОбработке;
			Запись.ДатаЗадания        = ТекущаяДатаСеанса();
			Запись.Исполнитель        = Исполнитель;
			Запись.Действие           = Действие;
			
			Если Действие = Перечисления.ДействияСФайламиДокументовКЭДО.Подписать Тогда
				Запись.ОжидаетПодписания  = ОжидаетПодписания;
			КонецЕсли;
			
			УстановитьПривилегированныйРежим(Истина);
			НаборЗаписей.Записать();
			УстановитьПривилегированныйРежим(Ложь);
			
			ОжидаетПодписания = Запись.Исполнитель;
			
		КонецЦикла;
	КонецЦикла;
	
	Если УведомитьИсполнителей Тогда
		ОбсужденияБЗК.ЗапланироватьУведомления(Исполнители);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьОбработкуФайлов(ФайлыКОбработке, Действие = Неопределено, Исполнители = Неопределено) Экспорт
	
	Если Исполнители <> Неопределено Тогда
		ЗарегистрироватьОбработкуФайловИсполнителям(
			ФайлыКОбработке, Перечисления.ДействияСФайламиДокументовКЭДО.Подписать, Исполнители, Истина);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Действие)
		И Действие <> Перечисления.ДействияСФайламиДокументовКЭДО.Подписать Тогда
		
		Для Каждого ФайлКОбработке Из ФайлыКОбработке Цикл
			
			НаборЗаписей = РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ПрисоединенныйФайл.Установить(ФайлКОбработке);
			НаборЗаписей.Отбор.Действие.Установить(Действие);
			
			Запись = НаборЗаписей.Добавить();
			Запись.ПрисоединенныйФайл = ФайлКОбработке;
			Запись.ДатаЗадания        = ТекущаяДатаСеанса();
			Запись.Действие           = Действие;
			
			УстановитьПривилегированныйРежим(Истина);
			НаборЗаписей.Записать();
			УстановитьПривилегированныйРежим(Ложь);
			
			Если ПолучитьФункциональнуюОпцию("ИспользуетсяСервисКабинетСотрудника")
				И Действие <> Перечисления.ДействияСФайламиДокументовКЭДО.ПередатьВКабинетСотрудников Тогда
				
				НаборЗаписей = РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ПрисоединенныйФайл.Установить(ФайлКОбработке);
				НаборЗаписей.Отбор.Действие.Установить(Перечисления.ДействияСФайламиДокументовКЭДО.ПередатьВКабинетСотрудников);
				
				Запись = НаборЗаписей.Добавить();
				Запись.ПрисоединенныйФайл = ФайлКОбработке;
				Запись.ДатаЗадания        = ТекущаяДатаСеанса();
				Запись.Действие           = Перечисления.ДействияСФайламиДокументовКЭДО.ПередатьВКабинетСотрудников;
				
				УстановитьПривилегированныйРежим(Истина);
				НаборЗаписей.Записать();
				УстановитьПривилегированныйРежим(Ложь);
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьФайлыИзОбработки(ФайлыКОбработке, Действие = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Исполнители = Новый Массив;
	Для Каждого ФайлКОбработке Из ФайлыКОбработке Цикл
		
		Набор = РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.СоздатьНаборЗаписей();
		Набор.Отбор.ПрисоединенныйФайл.Установить(ФайлКОбработке);
		Если ЗначениеЗаполнено(Действие) Тогда
			Набор.Отбор.Действие.Установить(Действие);
		КонецЕсли;
		
		Если Действие = Неопределено Или Действие = Перечисления.ДействияСФайламиДокументовКЭДО.Подписать Тогда
			
			Набор.Прочитать();
			Исполнители = Набор.ВыгрузитьКолонку("Исполнитель");
			Набор.Очистить();
			
		КонецЕсли;
		
		Набор.Записать();
		
	КонецЦикла;
	
	ОбсужденияБЗК.ЗапланироватьУведомления(Исполнители);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура УдалитьФайлыИзОбработкиПользователя(ФайлыКОбработке, Исполнитель = Неопределено, Действие = Неопределено) Экспорт
	
	Если Исполнитель = Неопределено Тогда
		Исполнитель = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого ФайлКОбработке Из ФайлыКОбработке Цикл
		
		Набор = РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.СоздатьНаборЗаписей();
		Набор.Отбор.ПрисоединенныйФайл.Установить(ФайлКОбработке);
		Набор.Отбор.Исполнитель.Установить(Исполнитель);
		Если ЗначениеЗаполнено(Действие) Тогда
			Набор.Отбор.Действие.Установить(Действие);
		Иначе
			Набор.Отбор.Действие.Установить(Перечисления.ДействияСФайламиДокументовКЭДО.Подписать);
		КонецЕсли;
		Набор.Записать();
		
	КонецЦикла;
	
	ОбсужденияБЗК.ЗапланироватьУведомления(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Исполнитель));
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура УдалитьФайлИзОбработкиПользователя(ФайлКОбработке, Знач Исполнитель = Неопределено, Знач Действие = Неопределено) Экспорт
	
	Если Исполнитель = Неопределено Тогда
		Исполнитель = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Если Действие = Неопределено Тогда
		Действие = Перечисления.ДействияСФайламиДокументовКЭДО.Подписать;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОжидаетПодписания = Неопределено;
	
	Набор = РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.СоздатьНаборЗаписей();
	Набор.Отбор.ПрисоединенныйФайл.Установить(ФайлКОбработке);
	Набор.Отбор.Исполнитель.Установить(Исполнитель);
	Набор.Отбор.Действие.Установить(Действие);
	Набор.Прочитать();
	Если Набор.Количество() > 0 Тогда
		ОжидаетПодписания = Набор[0].ОжидаетПодписания;
		Набор.Очистить();
		Набор.Записать();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОжидаетПодписания) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ФайлКОбработке", ФайлКОбработке);
		Запрос.УстановитьПараметр("ОжидаетПодписания", Исполнитель);
		Запрос.УстановитьПараметр("Действие", Действие);
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ЗапланированныеДействияСФайламиДокументовКЭДО.ПрисоединенныйФайл КАК ПрисоединенныйФайл,
			|	ЗапланированныеДействияСФайламиДокументовКЭДО.Исполнитель КАК Исполнитель,
			|	ЗапланированныеДействияСФайламиДокументовКЭДО.Действие КАК Действие,
			|	ЗапланированныеДействияСФайламиДокументовКЭДО.ДатаЗадания КАК ДатаЗадания,
			|	ЗапланированныеДействияСФайламиДокументовКЭДО.ОжидаетПодписания КАК ОжидаетПодписания
			|ИЗ
			|	РегистрСведений.ЗапланированныеДействияСФайламиДокументовКЭДО КАК ЗапланированныеДействияСФайламиДокументовКЭДО
			|ГДЕ
			|	ЗапланированныеДействияСФайламиДокументовКЭДО.ПрисоединенныйФайл = &ФайлКОбработке
			|	И ЗапланированныеДействияСФайламиДокументовКЭДО.ОжидаетПодписания = &ОжидаетПодписания
			|	И ЗапланированныеДействияСФайламиДокументовКЭДО.Действие = &Действие";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Набор = РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.СоздатьНаборЗаписей();
			Набор.Отбор.ПрисоединенныйФайл.Установить(Выборка.ПрисоединенныйФайл);
			Набор.Отбор.Исполнитель.Установить(Выборка.Исполнитель);
			Набор.Отбор.Действие.Установить(Выборка.Действие);
			Набор.Прочитать();
			Если Набор.Количество() > 0 Тогда
				Набор[0].ОжидаетПодписания = ОжидаетПодписания;
				Набор.Записать();
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	ОбсужденияБЗК.ЗапланироватьУведомления(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Исполнитель));
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ИзменитьИсполнителя(ФайлКОбработке, Исполнитель, Действие, НовыйИсполнитель) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФайлКОбработке", ФайлКОбработке);
	Запрос.УстановитьПараметр("Исполнитель", Исполнитель);
	Запрос.УстановитьПараметр("Действие", Действие);
	Запрос.УстановитьПараметр("НовыйИсполнитель", НовыйИсполнитель);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗапланированныеДействияСФайламиДокументовКЭДО.ПрисоединенныйФайл КАК ПрисоединенныйФайл,
		|	ЗапланированныеДействияСФайламиДокументовКЭДО.Исполнитель КАК Исполнитель,
		|	ЗапланированныеДействияСФайламиДокументовКЭДО.Действие КАК Действие,
		|	ЗапланированныеДействияСФайламиДокументовКЭДО.ДатаЗадания КАК ДатаЗадания,
		|	ЗапланированныеДействияСФайламиДокументовКЭДО.ОжидаетПодписания КАК ОжидаетПодписания,
		|	ИСТИНА КАК ИсходноеДействие
		|ИЗ
		|	РегистрСведений.ЗапланированныеДействияСФайламиДокументовКЭДО КАК ЗапланированныеДействияСФайламиДокументовКЭДО
		|ГДЕ
		|	ЗапланированныеДействияСФайламиДокументовКЭДО.ПрисоединенныйФайл = &ФайлКОбработке
		|	И ЗапланированныеДействияСФайламиДокументовКЭДО.Исполнитель = &Исполнитель
		|	И ЗапланированныеДействияСФайламиДокументовКЭДО.Действие = &Действие
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапланированныеДействияСФайламиДокументовКЭДО.ПрисоединенныйФайл,
		|	ЗапланированныеДействияСФайламиДокументовКЭДО.Исполнитель,
		|	ЗапланированныеДействияСФайламиДокументовКЭДО.Действие,
		|	ЗапланированныеДействияСФайламиДокументовКЭДО.ДатаЗадания,
		|	ЗапланированныеДействияСФайламиДокументовКЭДО.ОжидаетПодписания,
		|	ЛОЖЬ
		|ИЗ
		|	РегистрСведений.ЗапланированныеДействияСФайламиДокументовКЭДО КАК ЗапланированныеДействияСФайламиДокументовКЭДО
		|ГДЕ
		|	ЗапланированныеДействияСФайламиДокументовКЭДО.ПрисоединенныйФайл = &ФайлКОбработке
		|	И ЗапланированныеДействияСФайламиДокументовКЭДО.ОжидаетПодписания = &Исполнитель
		|	И ЗапланированныеДействияСФайламиДокументовКЭДО.Исполнитель <> &НовыйИсполнитель";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ИсходноеДействие Тогда
			// Удаление исходной записи
			Набор = РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.СоздатьНаборЗаписей();
			Набор.Отбор.ПрисоединенныйФайл.Установить(Выборка.ПрисоединенныйФайл);
			Набор.Отбор.Действие.Установить(Выборка.Действие);
			Набор.Отбор.Исполнитель.Установить(Выборка.Исполнитель);
			Набор.Записать();
		КонецЕсли;
		
		Набор = РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.СоздатьНаборЗаписей();
		Набор.Отбор.ПрисоединенныйФайл.Установить(Выборка.ПрисоединенныйФайл);
		Набор.Отбор.Действие.Установить(Выборка.Действие);
		
		Если Выборка.ИсходноеДействие Тогда
			Набор.Отбор.Исполнитель.Установить(НовыйИсполнитель);
		Иначе
			Набор.Отбор.Исполнитель.Установить(Выборка.Исполнитель);
		КонецЕсли;
		
		Запись = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Если Выборка.ИсходноеДействие Тогда
			Запись.Исполнитель = НовыйИсполнитель;
		Иначе
			Запись.ОжидаетПодписания = НовыйИсполнитель;
		КонецЕсли;
		
		Набор.Записать();
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Функция ФайлыКОбработке(ТолькоРазрешенные, Действия) Экспорт
	
	ФайлыДействий = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТФайлыКОбработке(
		ТолькоРазрешенные,
		Запрос.МенеджерВременныхТаблиц,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
			Справочники.Пользователи.ПустаяСсылка()),
		Действия);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ФайлыКОбработке.ПрисоединенныйФайл КАК ПрисоединенныйФайл,
		|	ФайлыКОбработке.Имя КАК Имя,
		|	ФайлыКОбработке.Расширение КАК Расширение,
		|	ФайлыКОбработке.Размер КАК Размер,
		|	ФайлыКОбработке.ПодписанЭП КАК ПодписанЭП,
		|	ФайлыКОбработке.Действие КАК Действие
		|ИЗ
		|	ВТФайлыКОбработке КАК ФайлыКОбработке
		|ГДЕ
		|	ФайлыКОбработке.КоличествоПодписантов = 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Действие,
		|	Имя,
		|	Расширение,
		|	Размер";
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.СледующийПоЗначениюПоля("Действие") Цикл
		
		СписокФайлов = Новый СписокЗначений;
		ФайлыДействий.Вставить(Выборка.Действие, СписокФайлов);
		
		Пока Выборка.Следующий() Цикл
			
			РаботаСФайламиБЗК.ДобавитьФайлВСписок(
				СписокФайлов,
				Выборка.ПрисоединенныйФайл,
				Выборка.Имя,
				Выборка.Расширение,
				Выборка.Размер,
				Выборка.ПодписанЭП);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ФайлыДействий;
	
КонецФункции

Функция КоличествоЗависшихЗаданийОбработки(ТолькоРазрешенные) Экспорт
	
	Возврат ФайлыСБольшимиСрокамиОжидания(ТолькоРазрешенные).Количество();
	
КонецФункции

Функция ФайлыСБольшимиСрокамиОжидания(ТолькоРазрешенные) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТФайлыКОбработкеСДаннымиПечатныхФорм(ТолькоРазрешенные, Запрос.МенеджерВременныхТаблиц);
	
	Запрос.УстановитьПараметр("ДатаОтсчета", ЗарплатаКадрыКлиентСервер.ДатаОтсчетаПериодическихСведений());
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("КритическийПериодОжидания", КритическийПериодОжидания());
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПечатныеФормыКОбработке.ПрисоединенныйФайл КАК ПрисоединенныйФайл,
		|	ПечатныеФормыКОбработке.ВладелецФайла КАК ВладелецФайла,
		|	ПечатныеФормыКОбработке.Имя КАК Имя,
		|	ПечатныеФормыКОбработке.Расширение КАК Расширение,
		|	ПечатныеФормыКОбработке.Размер КАК Размер,
		|	ПечатныеФормыКОбработке.ПодписанЭП КАК ПодписанЭП,
		|	ТаблицаРегистра.Исполнитель КАК Исполнитель,
		|	ТаблицаРегистра.Действие КАК Действие,
		|	ТаблицаРегистра.ДатаЗадания КАК ДатаЗадания,
		|	ВЫБОР
		|		КОГДА ТаблицаРегистра.ДатаЗадания < &ДатаОтсчета
		|			ТОГДА 0
		|		ИНАЧЕ РАЗНОСТЬДАТ(ТаблицаРегистра.ДатаЗадания, &ТекущаяДата, МИНУТА)
		|	КОНЕЦ КАК ОжиданиеМинут
		|ИЗ
		|	ВТФайлыКОбработкеСДаннымиПечатныхФорм КАК ПечатныеФормыКОбработке
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗапланированныеДействияСФайламиДокументовКЭДО КАК ТаблицаРегистра
		|		ПО ПечатныеФормыКОбработке.ПрисоединенныйФайл = ТаблицаРегистра.ПрисоединенныйФайл
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ТаблицаРегистра.ДатаЗадания < &ДатаОтсчета
		|				ТОГДА 0
		|			ИНАЧЕ РАЗНОСТЬДАТ(ТаблицаРегистра.ДатаЗадания, &ТекущаяДата, МИНУТА)
		|		КОНЕЦ > &КритическийПериодОжидания";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции


Функция НаправленияНаПодпись(ФайлПечатнойФормы) Экспорт
	
	ЗапланированныеДействия = ОжидающиеИсполнителей(ФайлПечатнойФормы, Перечисления.ДействияСФайламиДокументовКЭДО.Подписать);
	ЗапланированныеДействияФайла = ЗапланированныеДействия.Получить(ФайлПечатнойФормы);
	Если ЗапланированныеДействияФайла <> Неопределено Тогда
		ДействияПодписать = ЗапланированныеДействияФайла.Получить(Перечисления.ДействияСФайламиДокументовКЭДО.Подписать);
		Если ДействияПодписать <> Неопределено Тогда
			Возврат ДействияПодписать;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Новый Массив;
	
КонецФункции

Функция ОжидающиеИсполнителей(ФайлыПечатныхФорм, Действия = Неопределено) Экспорт
	
	Если Действия = Неопределено Тогда
		Действия = Новый Массив;
		Действия.Добавить(Перечисления.ДействияСФайламиДокументовКЭДО.Подписать);
		Действия.Добавить(Перечисления.ДействияСФайламиДокументовКЭДО.Ознакомиться);
	КонецЕсли;
	
	Результат = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФайлыПечатныхФорм", ФайлыПечатныхФорм);
	Запрос.УстановитьПараметр("Действия", Действия);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаРегистра.ПрисоединенныйФайл КАК ПрисоединенныйФайл,
		|	ТаблицаРегистра.Исполнитель КАК Исполнитель,
		|	ТаблицаРегистра.ДатаЗадания КАК ДатаЗадания,
		|	ТаблицаРегистра.Действие КАК Действие
		|ИЗ
		|	РегистрСведений.ЗапланированныеДействияСФайламиДокументовКЭДО КАК ТаблицаРегистра
		|ГДЕ
		|	ТаблицаРегистра.ПрисоединенныйФайл В(&ФайлыПечатныхФорм)
		|	И ТаблицаРегистра.Действие В(&Действия)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПрисоединенныйФайл,
		|	Действие,
		|	Исполнитель";
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.СледующийПоЗначениюПоля("ПрисоединенныйФайл") Цикл
		
		ДанныеФайла = Результат.Получить(Выборка.ПрисоединенныйФайл);
		Если ДанныеФайла = Неопределено Тогда
			ДанныеФайла = Новый Соответствие;
			Результат.Вставить(Выборка.ПрисоединенныйФайл, ДанныеФайла);
		КонецЕсли;
		Пока Выборка.СледующийПоЗначениюПоля("Действие") Цикл
			
			ДанныеДействия = ДанныеФайла.Получить(Выборка.Действие);
			Если ДанныеДействия = Неопределено Тогда
				ДанныеДействия = Новый Массив;
				ДанныеФайла.Вставить(Выборка.Действие, ДанныеДействия);
			КонецЕсли;
			Пока Выборка.Следующий() Цикл
				ДанныеИсполнителя = Новый Структура("Исполнитель,ДатаЗадания");
				ЗаполнитьЗначенияСвойств(ДанныеИсполнителя, Выборка);
				
				ДанныеДействия.Добавить(ДанныеИсполнителя);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ОбновитьУведомленияОНеобходимостиПодписанияФайловДокументовКЭДО(Знач Исполнители) Экспорт
	
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(
		Исполнители, Справочники.Пользователи.ПустаяСсылка());
	
	Если Не ЗначениеЗаполнено(Исполнители) Тогда
		Возврат;
	КонецЕсли;
	
	Исполнители = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Исполнители);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТФайлыКОбработкеСДаннымиПечатныхФорм(
		Ложь,
		Запрос.МенеджерВременныхТаблиц,
		Исполнители,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Перечисления.ДействияСФайламиДокументовКЭДО.Подписать));
	
	Запрос.УстановитьПараметр("Исполнители", Исполнители);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("МаксимальныйПериодОжидания", МаксимальныйПериодОжидания());
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаРегистра.Исполнитель КАК Исполнитель,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаРегистра.ПрисоединенныйФайл) КАК ОбщееКоличествоФайлов,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
		|			КОГДА ТаблицаРегистра.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСФайламиДокументовКЭДО.Подписать)
		|				ТОГДА ТаблицаРегистра.ПрисоединенныйФайл
		|			ИНАЧЕ NULL
		|		КОНЕЦ) КАК КоличествоФайловНаПодпись,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
		|			КОГДА ТаблицаРегистра.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСФайламиДокументовКЭДО.Ознакомиться)
		|				ТОГДА ТаблицаРегистра.ПрисоединенныйФайл
		|			ИНАЧЕ NULL
		|		КОНЕЦ) КАК КоличествоФайловНаОзнакомление,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
		|			КОГДА РАЗНОСТЬДАТ(ТаблицаРегистра.ДатаЗадания, &ТекущаяДата, МИНУТА) > &МаксимальныйПериодОжидания
		|				ТОГДА ТаблицаРегистра.ПрисоединенныйФайл
		|			ИНАЧЕ NULL
		|		КОНЕЦ) КАК КоличествоПросроченныхФайлов
		|ИЗ
		|	РегистрСведений.ЗапланированныеДействияСФайламиДокументовКЭДО КАК ТаблицаРегистра
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФайлыКОбработкеСДаннымиПечатныхФорм КАК ПечатныеФормыКОбработке
		|		ПО (ПечатныеФормыКОбработке.ПрисоединенныйФайл = ТаблицаРегистра.ПрисоединенныйФайл)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодписанныеПечатныеФормы КАК ПодписанныеФормы
		|		ПО ТаблицаРегистра.ПрисоединенныйФайл = ПодписанныеФормы.ПрисоединенныйФайл
		|ГДЕ
		|	ТаблицаРегистра.Исполнитель В(&Исполнители)
		|	И ТаблицаРегистра.Действие В (ЗНАЧЕНИЕ(Перечисление.ДействияСФайламиДокументовКЭДО.Подписать), ЗНАЧЕНИЕ(Перечисление.ДействияСФайламиДокументовКЭДО.Ознакомиться))
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаРегистра.Исполнитель";
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	Пока Выборка.Следующий() Цикл
		КадровыйЭДО.УведомитьОНеобходимостиПодписанияФайловДокументовКЭДО(
			Выборка.ОбщееКоличествоФайлов,
			Выборка.КоличествоФайловНаПодпись,
			Выборка.КоличествоФайловНаОзнакомление,
			Выборка.КоличествоПросроченныхФайлов,
			Выборка.Исполнитель);
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(Исполнители, Выборка.Исполнитель);
	КонецЦикла;
	
	// Удаление уведомления когда все подписано
	Для Каждого Исполнитель Из Исполнители Цикл
		КадровыйЭДО.УведомитьОНеобходимостиПодписанияФайловДокументовКЭДО(0, 0, 0, 0, Исполнитель);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СоздатьВТФайлыКОбработке(ТолькоРазрешенные, МенеджерВременныхТаблиц, Исполнители, Действия)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	СоздатьВТФайлыКОбработкеСДаннымиПечатныхФорм(
		ТолькоРазрешенные,
		Запрос.МенеджерВременныхТаблиц,
		Исполнители,
		Действия);
	
	Запрос.УстановитьПараметр("ДействияСФайламиДокументовКЭДО", Действия);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПечатныеФормыКОбработке.ПрисоединенныйФайл КАК ПрисоединенныйФайл,
		|	ПечатныеФормыКОбработке.Имя КАК Имя,
		|	ПечатныеФормыКОбработке.Расширение КАК Расширение,
		|	ПечатныеФормыКОбработке.Размер КАК Размер,
		|	ПечатныеФормыКОбработке.ПодписанЭП КАК ПодписанЭП,
		|	ТаблицаРегистра.Действие КАК Действие,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаРегистраПодписей.Исполнитель) КАК КоличествоПодписантов
		|ПОМЕСТИТЬ ВТФайлыКОбработке
		|ИЗ
		|	ВТФайлыКОбработкеСДаннымиПечатныхФорм КАК ПечатныеФормыКОбработке
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗапланированныеДействияСФайламиДокументовКЭДО КАК ТаблицаРегистра
		|		ПО ПечатныеФормыКОбработке.ПрисоединенныйФайл = ТаблицаРегистра.ПрисоединенныйФайл
		|			И (ТаблицаРегистра.Действие В (&ДействияСФайламиДокументовКЭДО))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗапланированныеДействияСФайламиДокументовКЭДО КАК ТаблицаРегистраПодписей
		|		ПО ПечатныеФормыКОбработке.ПрисоединенныйФайл = ТаблицаРегистраПодписей.ПрисоединенныйФайл
		|			И (ТаблицаРегистраПодписей.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСФайламиДокументовКЭДО.Подписать))
		|
		|СГРУППИРОВАТЬ ПО
		|	ПечатныеФормыКОбработке.ПрисоединенныйФайл,
		|	ПечатныеФормыКОбработке.Имя,
		|	ПечатныеФормыКОбработке.Расширение,
		|	ПечатныеФормыКОбработке.Размер,
		|	ПечатныеФормыКОбработке.ПодписанЭП,
		|	ТаблицаРегистра.Действие";
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура СоздатьВТФайлыКОбработкеСДаннымиПечатныхФорм(ТолькоРазрешенные, МенеджерВременныхТаблиц, Исполнители = Неопределено, Действия = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаРегистра.ПрисоединенныйФайл КАК ПрисоединенныйФайл
		|ИЗ
		|	РегистрСведений.ЗапланированныеДействияСФайламиДокументовКЭДО КАК ТаблицаРегистра
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДокументКадровогоЭДО КАК ДокументКадровогоЭДО
		|		ПО ТаблицаРегистра.ПрисоединенныйФайл = ДокументКадровогоЭДО.ЭлектронныйДокумент
		|ГДЕ
		|	&ОтборПоИсполнителям
		|	И &ОтборПоДействиям
		|	И НЕ ДокументКадровогоЭДО.ПометкаУдаления";
	
	Если Исполнители = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоИсполнителям", "(ИСТИНА)");
	Иначе
		Запрос.УстановитьПараметр("Исполнители", Исполнители);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоИсполнителям", "ТаблицаРегистра.Исполнитель В (&Исполнители)");
	КонецЕсли;
	
	Если Действия = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоДействиям", "(ИСТИНА)");
	Иначе
		Запрос.УстановитьПараметр("Действия", Действия);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоДействиям", "ТаблицаРегистра.Действие В(&Действия)");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ФайлыПечатныхФорм = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПрисоединенныйФайл");
	УстановитьПривилегированныйРежим(Ложь);
	
	ТекстыЗапросов = Новый Массив;
	Если ФайлыПечатныхФорм.Количество() > 0 Тогда
		
		ФайлыПоТипам = ОбщегоНазначенияБЗК.ОбъектыПоТипам(ФайлыПечатныхФорм);
		Для Каждого ОписаниеФайловТипа Из ФайлыПоТипам Цикл
			
			МетаданныеСправочника = Метаданные.НайтиПоТипу(ОписаниеФайловТипа.Ключ);
			Если Не ПравоДоступа("Просмотр", МетаданныеСправочника) Тогда
				Продолжить;
			КонецЕсли;
			
			ТекстЗапроса =
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ТаблицаСправочника.Ссылка КАК ПрисоединенныйФайл,
				|	ТаблицаСправочника.ВладелецФайла КАК ВладелецФайла,
				|	ТаблицаСправочника.Наименование КАК Имя,
				|	ТаблицаСправочника.Расширение КАК Расширение,
				|	ТаблицаСправочника.Размер КАК Размер,
				|	ТаблицаСправочника.ПодписанЭП КАК ПодписанЭП
				|ПОМЕСТИТЬ ВТФайлыКОбработкеСДаннымиПечатныхФорм
				|ИЗ
				|	Справочник.УвольнениеПрисоединенныеФайлы КАК ТаблицаСправочника
				|ГДЕ
				|	ТаблицаСправочника.Ссылка В(&ПрисоединенныеФайлы)";
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Справочник.УвольнениеПрисоединенныеФайлы",
				МетаданныеСправочника.ПолноеИмя());
			
			ИмяПараметра = "ПрисоединенныеФайлы" + Формат(ТекстыЗапросов.Количество(), "ЧН=; ЧГ=");
			Запрос.УстановитьПараметр(ИмяПараметра, ОписаниеФайловТипа.Значение);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПрисоединенныеФайлы", "&" + ИмяПараметра);
			
			Если ТекстыЗапросов.Количество() > 0 Тогда
				
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТФайлыКОбработкеСДаннымиПечатныхФорм", "");
				
			КонецЕсли;
			
			ТекстыЗапросов.Добавить(ТекстЗапроса);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТекстыЗапросов.Количество() = 0 Тогда
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК ПрисоединенныйФайл,
			|	НЕОПРЕДЕЛЕНО КАК ВладелецФайла,
			|	"""" КАК Имя,
			|	"""" КАК Расширение,
			|	0 КАК Размер,
			|	ЛОЖЬ КАК ПодписанЭП
			|ПОМЕСТИТЬ ВТФайлыКОбработкеСДаннымиПечатныхФорм
			|ГДЕ
			|	ЛОЖЬ";
		
	Иначе
		
		Запрос.Текст = СтрСоединить(ТекстыЗапросов, Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС);
		ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
		
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция МаксимальныйПериодОжидания()
	Возврат 2 * ЗарплатаКадрыКлиентСервер.ДлительностьСутокВСекундах() / 60;
КонецФункции

Функция КритическийПериодОжидания()
	Возврат 4 * ЗарплатаКадрыКлиентСервер.ДлительностьСутокВСекундах() / 60;
КонецФункции

#КонецОбласти

#КонецЕсли