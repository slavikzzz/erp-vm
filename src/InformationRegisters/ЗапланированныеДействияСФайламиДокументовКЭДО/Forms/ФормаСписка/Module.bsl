#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("ПрисоединенныйФайл") Тогда
		
		Заголовок = НСтр("ru = 'Запланированные действия';
						|en = 'Planned actions'");
		АвтоЗаголовок = Ложь;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ПрисоединенныйФайл",
			"Видимость",
			Ложь);
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ФормаИзменитьИсполнителя",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ФормаОтменитьЗадание",
			"Видимость",
			Ложь);
		
	КонецЕсли;
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Список.Исполнитель");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.ПравоеЗначение	= Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Регламентное задание>';
																			|en = '<Scheduled job>'"));
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЦвет);
	
	ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Исполнитель");
	ОформляемоеПоле.Использование = Истина;
	
	// БлокировкаИзмененияОбъектов
	БлокировкаИзмененияОбъектов.ПриСозданииНаСервереЗаблокированнойФормыСписка(ЭтотОбъект, Элементы.ФормаКоманднаяПанель);
	// Конец БлокировкаИзмененияОбъектов
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// БлокировкаИзмененияОбъектов

&НаКлиенте
Процедура Подключаемый_РазблокироватьОбъекты(Команда)
	
	БлокировкаИзмененияОбъектовКлиент.РазблокироватьФормуСписка(ЭтотОбъект);
	
КонецПроцедуры

// Конец БлокировкаИзмененияОбъектов

&НаКлиенте
Процедура ИзменитьИсполнителя(Команда)
	
	ОчиститьСообщения();
	Если Элементы.Список.ВыделенныеСтроки.Количество() > 0 Тогда
		
		Если Элементы.Список.ВыделенныеСтроки.Количество() > 10 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Исполнителя можно изменить только в одной записи';
					|en = 'You can change an assignee only in one record'"));
			Возврат;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Элементы.Список.ДанныеСтроки(Элементы.Список.ВыделенныеСтроки[0]).Исполнитель) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Исходная запись не содержат исполнителя';
					|en = 'The initial record does not contain an assignee'"));
		КонецЕсли;
		
		Оповещение = Новый ОписаниеОповещения("ПослеВыбораНовогоИсполнителя", ЭтотОбъект);
		КадровыйЭДОКлиент.ОткрытьФормыВыбораПодписантовПечатныхФорм(
			ЭтотОбъект, Организация, Оповещение, , Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗадание(Команда)
	
	Если Элементы.Список.ВыделенныеСтроки.Количество() > 0 Тогда
		ОтменитьЗаданияНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОтменитьЗаданияНаСервере()
	
	Для Каждого КлючЗаписи Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Если ЗначениеЗаполнено(КлючЗаписи.Исполнитель) Тогда
			РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.УдалитьФайлИзОбработкиПользователя(
				КлючЗаписи.ПрисоединенныйФайл,
				КлючЗаписи.Исполнитель,
				КлючЗаписи.Действие);
		Иначе
			РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.УдалитьФайлыИзОбработки(
				ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(КлючЗаписи.ПрисоединенныйФайл),
				КлючЗаписи.Действие);
		КонецЕсли;
		
	КонецЦикла;
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьИсполнителяНаСервере(НовыйИсполнитель)
	
	Для Каждого КлючЗаписи Из Элементы.Список.ВыделенныеСтроки Цикл
		Если ЗначениеЗаполнено(КлючЗаписи.Исполнитель) Тогда
			РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.ИзменитьИсполнителя(
				КлючЗаписи.ПрисоединенныйФайл, КлючЗаписи.Исполнитель, КлючЗаписи.Действие, НовыйИсполнитель);
		КонецЕсли;
	КонецЦикла;
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораНовогоИсполнителя(НовыйИсполнитель, ДополнительныеПараметры) Экспорт
	
	Если НовыйИсполнитель <> Неопределено Тогда
		ИзменитьИсполнителяНаСервере(НовыйИсполнитель[0]);
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
