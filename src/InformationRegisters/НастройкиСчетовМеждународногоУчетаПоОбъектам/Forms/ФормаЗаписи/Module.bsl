
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Запись.ИсходныйКлючЗаписи) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПриЧтенииСозданииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Элементы.Организация.Видимость И Не ЗначениеЗаполнено(Запись.Организация)
		И Элементы.МестоУчета.Видимость И Не ЗначениеЗаполнено(Запись.МестоУчета) Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Поле ""Организация"" или ""%1"" должно быть заполнено.';
										|en = 'The ""Company"" or ""%1"" field is required.'"), Элементы.МестоУчета.Заголовок);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
	ИначеЕсли Элементы.Организация.Видимость И Не ЗначениеЗаполнено(Запись.Организация) И Не Элементы.МестоУчета.Видимость Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Поле ""Организация"" должна быть заполнено.';
				|en = 'The ""Company"" field is required.'"), ,  "Запись.Организация", , Отказ);
	ИначеЕсли Элементы.МестоУчета.Видимость И Не ЗначениеЗаполнено(Запись.МестоУчета) И Не Элементы.Организация.Видимость Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Поле ""%1"" должно быть заполнено.';
										|en = 'The ""%1"" field is required.'"), Элементы.МестоУчета.Заголовок);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Запись.МестоУчета", , Отказ);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_НастройкиСчетовМеждународногоУчетаПоОбъектам");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбъектФинансовогоУчетаПриИзменении(Элемент)
	ОбъектФинансовогоУчетаПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура ТипНастройкиПриИзменении(Элемент)
	ТипНастройкиПриИзмененииСервер();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	ОписаниеОбъектовУчета.Загрузить(Перечисления.ОбъектыФинансовогоУчета.РасширенноеОписаниеОбъектовУчетаДляНастройки());
	УправлениеФормой()
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	НастройкаИсключения = (Запись.ТипНастройки = Перечисления.ТипыНастроекОтраженияВМеждународномУчете.ИсключениеПоОбъектуУчета);
	
	Элементы.Организация.Видимость = НастройкаИсключения;
	
	Элементы.ТипНастройки.ТолькоПросмотр = Параметры.НеИзменятьТипНастройки;
	Элементы.ОбъектФинансовогоУчета.ТолькоПросмотр = Параметры.НеИзменятьОбъектУчета;
	
	ОписанияОбъектаУчета = ОписаниеОбъектовУчета.НайтиСтроки(Новый Структура("ОбъектУчета", Запись.ОбъектУчета));
	Если ОписанияОбъектаУчета.Количество() > 0 Тогда
		ОписаниеОбъектаУчета = ОписанияОбъектаУчета[0];
		ВыделениеДолгосрочныхАктивовОбязательств = ОписаниеОбъектаУчета.ВыделениеДолгосрочныхАктивовОбязательств;
		ОбъектУчетаНесобственныхЦенностей = ОписаниеОбъектаУчета.НесобственныеЦенности;
		
		Элементы.ОбъектНастройки.Видимость = ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки.Типы().Количество() > 0;
		Элементы.ОбъектНастройки.ОграничениеТипа = ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки;
		Элементы.ОбъектНастройки.Заголовок = Перечисления.ОбъектыФинансовогоУчета.ЗаголовокОбъектаНастройкиПоОписаниюТипов(ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки);
		Элементы.ОбъектНастройки.ПараметрыВыбора = Перечисления.ОбъектыФинансовогоУчета.ПараметрыВыбораОбъектаНастрйки(ОписаниеОбъектаУчета.ОтборОбъектовНастройки);
		
		Элементы.МестоУчета.Видимость = НастройкаИсключения И ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета.Типы().Количество() > 0;
		Элементы.МестоУчета.ОграничениеТипа = ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета;
		Элементы.МестоУчета.Заголовок = Перечисления.ОбъектыФинансовогоУчета.ЗаголовокМестаУчета(ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета);
	Иначе
		ВыделениеДолгосрочныхАктивовОбязательств = Ложь;
		Элементы.ОбъектНастройки.Видимость = Ложь;
		Элементы.МестоУчета.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.Организация.АвтоОтметкаНезаполненного = НЕ Элементы.МестоУчета.Видимость;
	Элементы.Организация.ПодсказкаВвода = ?(Элементы.МестоУчета.Видимость, НСтр("ru = 'Все';
																				|en = 'All'"), "");
	
	Элементы.МестоУчета.АвтоОтметкаНезаполненного = НЕ Элементы.Организация.Видимость;
	Элементы.МестоУчета.ПодсказкаВвода = ?(Элементы.Организация.Видимость, НСтр("ru = 'Все';
																				|en = 'All'"), "");
	
	Если НЕ ВыделениеДолгосрочныхАктивовОбязательств Тогда
	ИначеЕсли НЕ ЗначениеЗаполнено(Запись.НастройкаФормированияПроводок) Тогда
		ВыделениеДолгосрочныхАктивовОбязательств = Ложь;
	Иначе
		ВыделениеДолгосрочныхАктивовОбязательств = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Запись.НастройкаФормированияПроводок, "ИспользоватьВыделениеДолгосрочныхАктивовОбязательств");
	КонецЕсли;
	
	Элементы.ГруппаСчетаУчета.ОтображатьЗаголовок = ВыделениеДолгосрочныхАктивовОбязательств;
	Элементы.СчетУчетаДолгосрочный.Видимость = ВыделениеДолгосрочныхАктивовОбязательств;
	Элементы.СчетУчета.Заголовок = ?(ВыделениеДолгосрочныхАктивовОбязательств, НСтр("ru = 'Краткосрочный';
																					|en = 'Short-term'"), "");
	
КонецПроцедуры

&НаСервере
Процедура ОбъектФинансовогоУчетаПриИзмененииСервер()
	
	ОписанияОбъектаУчета = ОписаниеОбъектовУчета.НайтиСтроки(Новый Структура("ОбъектУчета", Запись.ОбъектУчета));
	Если ОписанияОбъектаУчета.Количество() > 0 Тогда
		ОписаниеОбъектаУчета = ОписанияОбъектаУчета[0];
		Запись.МестоУчета = ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета.ПривестиЗначение(Запись.МестоУчета);
	КонецЕсли;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ТипНастройкиПриИзмененииСервер()
	Если Запись.ТипНастройки <> Перечисления.ТипыНастроекОтраженияВМеждународномУчете.ИсключениеПоОбъектуУчета Тогда
		Запись.Организация = Неопределено;
		Запись.МестоУчета = Неопределено;
	КонецЕсли;
	УправлениеФормой();
КонецПроцедуры

#КонецОбласти

