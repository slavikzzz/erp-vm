
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Организация                   = Параметры.Организация;
	ПараметрыРасчетаРезерва       = Параметры.ПараметрыРасчетаРезерва;
	ВидРасчетаРезерва             = Параметры.ВидРасчетаРезерва;
	ДатаНачалаОтбора              = Параметры.ДатаНачалаОтбора;
	АдресОбщихПоказателей         = Параметры.АдресОбщихПоказателей;
	АдресПоказателейПодразделений = Параметры.АдресПоказателейПодразделений;
	АдресПоказателейСотрудников   = Параметры.АдресПоказателейСотрудников;
	
	МассивПоказателей = ПолучитьИзВременногоХранилища(АдресОбщихПоказателей);
	Если МассивПоказателей.Количество() > 0 Тогда
		ДополнитьФорму(МассивПоказателей);
		ЗаполнитьПоказатели(МассивПоказателей);
	КонецЕсли;
	Если МассивПоказателей.Количество() = 0 Тогда
		Элементы.ГруппаОбщиеПоказатели.Видимость = Ложь;
	КонецЕсли;
	
	ПоказателиОрганизации = Новый ФиксированныйМассив(МассивПоказателей);
	
	ПоказателиПодразделенийПараметры.Загрузить(ПолучитьИзВременногоХранилища(АдресПоказателейПодразделений));
	Если ПоказателиПодразделенийПараметры.Количество() = 0 Тогда
		Элементы.ГруппаПоказателиПодразделений.Видимость = Ложь;
	Иначе
		Элементы.ПоказателиПодразделенийПоказатель.СписокВыбора.ЗагрузитьЗначения(
			ОбщегоНазначения.ВыгрузитьКолонку(ПоказателиПодразделенийПараметры, "Показатель", Истина));
	КонецЕсли;
	
	ПоказателиСотрудниковПараметры.Загрузить(ПолучитьИзВременногоХранилища(АдресПоказателейСотрудников));
	Если ПоказателиСотрудниковПараметры.Количество() = 0 Тогда
		Элементы.ГруппаПоказателиСотрудников.Видимость = Ложь;
	Иначе
		Элементы.ПоказателиСотрудниковПоказатель.СписокВыбора.ЗагрузитьЗначения(
			ОбщегоНазначения.ВыгрузитьКолонку(ПоказателиСотрудниковПараметры, "Показатель", Истина));
	КонецЕсли;
		
	ПрочитатьЗначенияПоказателей();
	
	КоличествоДоступныхСтраниц = (МассивПоказателей.Количество() > 0)
		+ (ПоказателиПодразделенийПараметры.Количество() > 0)
		+ (ПоказателиСотрудниковПараметры.Количество() > 0);
	
	Если КоличествоДоступныхСтраниц <= 1 Тогда
		Элементы.ПоказателиСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	Элементы.ГруппаПоказателиОтсутствуют.Видимость = КоличествоДоступныхСтраниц = 0; 
	
	Элементы.ФормаОК.Доступность = Не ТолькоПросмотр;
	
	КлючСохраненияПоложенияОкна = Строка(КоличествоПоказателей + КоличествоДоступныхСтраниц);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		ВопросСохранитьИзменения(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыПоказателиСотрудников

&НаКлиенте
Процедура ПоказателиСотрудниковПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ПоказателиСотрудников.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элементы.ПоказателиСотрудниковЗначение.ФорматРедактирования = "ЧДЦ=" + ТекущиеДанные.Точность;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказателиСотрудниковПоказательПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПоказателиСотрудников.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = ПоказателиСотрудниковПараметры.НайтиСтроки(Новый Структура("Показатель", ТекущиеДанные.Показатель));
	ТекущиеДанные.Точность = МассивСтрок[0].Точность;
	Элементы.ПоказателиСотрудников.ПодчиненныеЭлементы.ПоказателиСотрудниковЗначение.ФорматРедактирования = "ЧДЦ=" + ТекущиеДанные.Точность;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыПоказателиПодразделений

&НаКлиенте
Процедура ПоказателиПодразделенийПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ПоказателиПодразделений.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элементы.ПоказателиПодразделенийЗначение.ФорматРедактирования = "ЧДЦ=" + ТекущиеДанные.Точность;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказателиПодразделенийПоказательПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПоказателиПодразделений.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = ПоказателиПодразделенийПараметры.НайтиСтроки(Новый Структура("Показатель", ТекущиеДанные.Показатель));
	ТекущиеДанные.Точность = МассивСтрок[0].Точность;
	Элементы.ПоказателиПодразделений.ПодчиненныеЭлементы.ПоказателиПодразделенийЗначение.ФорматРедактирования = "ЧДЦ=" + ТекущиеДанные.Точность;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если ПроверитьЗаполнениеРеквизитов() Тогда
		ЗаписатьЗначенияПоказателей();
		Закрыть(Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	Для ЗначениеТочности = 0 по 5 Цикл
		
		ЭлементОформления = УсловноеОформление.Элементы.Добавить();
		ЭлементОформления.Использование = Истина;
		
		ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.Использование		= Истина;
		ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПоказателиПодразделений.Точность");
		ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение	= ЗначениеТочности;
		
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Формат", "ЧДЦ=" + ЗначениеТочности);
		
		ОформляемоеПоле =  ЭлементОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПоказателиПодразделенийЗначение");
		ОформляемоеПоле.Использование = Истина;
		
	КонецЦикла;
	
	Для ЗначениеТочности = 0 по 5 Цикл
		
		ЭлементОформления = УсловноеОформление.Элементы.Добавить();
		ЭлементОформления.Использование = Истина;
		
		ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.Использование		= Истина;
		ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПоказателиСотрудников.Точность");
		ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение	= ЗначениеТочности;
		
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Формат", "ЧДЦ=" + ЗначениеТочности);
		
		ОформляемоеПоле =  ЭлементОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПоказателиСотрудниковЗначение");
		ОформляемоеПоле.Использование = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьФорму(МассивПоказателей)

	КоличествоПоказателей = МассивПоказателей.Количество();
	ФиксированнаяСумма = КоличествоПоказателей = 0;
	
	РеквизитыПоказателей = Новый Соответствие;
	Если КоличествоПоказателей <> 0 Тогда 
		РеквизитыПоказателей = РезервыПоОплатеТрудаРасширенный.СведенияОПоказателяхРасчетаРезервов(МассивПоказателей);
	КонецЕсли;
	
	КоличествоПоказателей = ?(ФиксированнаяСумма, 1, КоличествоПоказателей);
	
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(ЭтотОбъект, МассивИменРеквизитовФормы);
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	МассивТиповПоказателей = Новый Массив;
	МассивТиповПоказателей.Добавить(Тип("СправочникСсылка.ПоказателиРасчетаЗарплаты"));
	МассивТиповПоказателей.Добавить(Тип("СправочникСсылка.ПоказателиРасчетаРезервовПоОплатеТруда"));
	
	Для Сч = 1 По КоличествоПоказателей Цикл
		
		ПоказательРеквизит = Новый РеквизитФормы(
			"Показатель" + Сч, Новый ОписаниеТипов(МассивТиповПоказателей));
		ДобавляемыеРеквизиты.Добавить(ПоказательРеквизит);
		
		НаименованиеПоказателя = ?(ФиксированнаяСумма, 
			НСтр("ru = 'Сумма';
				|en = 'Amount'"), ?(ЗначениеЗаполнено(РеквизитыПоказателей[МассивПоказателей[Сч-1]].КраткоеНаименование), 
			РеквизитыПоказателей[МассивПоказателей[Сч-1]].КраткоеНаименование, РеквизитыПоказателей[МассивПоказателей[Сч-1]].Наименование));
		
		ЗначениеРеквизит = Новый РеквизитФормы("Показатель" + Сч + "Значение",
			Справочники.ПоказателиРасчетаЗарплаты.ОписаниеТиповЗначенияПоказателяРасчетаЗарплаты());
		ЗначениеРеквизит.СохраняемыеДанные = Истина;
		ДобавляемыеРеквизиты.Добавить(ЗначениеРеквизит);
		
	КонецЦикла;
	
	ЗарплатаКадры.ИзменитьРеквизитыФормы(ЭтотОбъект, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
	ТипЧисло = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2));
	
	Для Сч = 1 По КоличествоПоказателей Цикл
		
		Значение = Элементы.Добавить("Показатель" + Сч + "Значение", Тип("ПолеФормы"), Элементы.ПоказателиГруппа);
		Значение.Вид = ВидПоляФормы.ПолеВвода;
		Значение.ПутьКДанным = "Показатель" + Сч + "Значение";
		Значение.РастягиватьПоГоризонтали = Ложь;
		Значение.Ширина = 16;
		Значение.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
		Значение.Заголовок = РеквизитыПоказателей[МассивПоказателей[Сч-1]].Наименование;
		
		ТипПоказателя = ?(ФиксированнаяСумма, ТипЧисло, РеквизитыПоказателей[МассивПоказателей[Сч-1]].ТипПоказателяПриРасчете);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "Показатель" + Сч + "Значение", "ОграничениеТипа", ТипПоказателя);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоказатели(МассивПоказателей)
	
	Сч = 1;
	Для Каждого Показатель Из МассивПоказателей Цикл 
		ЭтотОбъект["Показатель" + Сч] = Показатель;
		Сч = Сч + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьИзменения(Закрытие)
	
	ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?';
						|en = 'The data has changed. Do you want to save the changes?'");
	Оповещение = Новый ОписаниеОповещения("ВопросСохранитьИзмененияЗавершение", ЭтотОбъект, Новый Структура("Закрытие", Закрытие));
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьИзмененияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если ПроверитьЗаполнениеРеквизитов() Тогда
			ЗаписатьЗначенияПоказателей();
			Закрыть(Истина);
		КонецЕсли;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеРеквизитов()
	
	Отказ = Ложь;
	
	ШаблонСообщения = НСтр("ru = 'В строке %1 списка ""%2"" не заполнена колонка ""%3""';
							|en = 'Column ""%3"" in line %1 of list ""%2"" is not filled.'");
	
	ИмяТаблицы = НСтр("ru = 'Показатели подразделений';
						|en = 'Business unit indicators '");
	Для Каждого СтрокаТаблицы Из ПоказателиПодразделений Цикл
		НомерСтроки = ПоказателиПодразделений.Индекс(СтрокаТаблицы) +1;
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Подразделение) Тогда
			ИмяКолонки = НСтр("ru = 'Подразделение';
								|en = 'Business unit'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НомерСтроки, ИмяТаблицы, ИмяКолонки);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "ПоказателиПодразделений.Подразделение",, Отказ);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Показатель) Тогда
			ИмяКолонки = НСтр("ru = 'Показатель';
								|en = 'Indicator'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НомерСтроки, ИмяТаблицы, ИмяКолонки);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "ПоказателиПодразделений.Показатель",, Отказ);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Значение) Тогда
			ИмяКолонки = НСтр("ru = 'Значение';
								|en = 'Value'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НомерСтроки, ИмяТаблицы, ИмяКолонки);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "ПоказателиПодразделений.Значение",, Отказ);
		КонецЕсли;
	КонецЦикла;
	
	ИмяТаблицы = НСтр("ru = 'Показатели сотрудников';
						|en = 'Employee indicators'");
	Для Каждого СтрокаТаблицы Из ПоказателиСотрудников Цикл
		НомерСтроки = ПоказателиСотрудников.Индекс(СтрокаТаблицы) +1;
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Позиция) Тогда
			ИмяКолонки = НСтр("ru = 'Позиция';
								|en = 'Position'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НомерСтроки, ИмяТаблицы, ИмяКолонки);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "ПоказателиСотрудников.ПозицияШтатногоРасписания",, Отказ);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Показатель) Тогда
			ИмяКолонки = НСтр("ru = 'Показатель';
								|en = 'Indicator'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НомерСтроки, ИмяТаблицы, ИмяКолонки);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "ПоказателиСотрудников.ВидРасчетаРезерва",, Отказ);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Значение) Тогда
			ИмяКолонки = НСтр("ru = 'Значение';
								|en = 'Value'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НомерСтроки, ИмяТаблицы, ИмяКолонки);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "ПоказателиСотрудников.Значение",, Отказ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Не Отказ;
	
КонецФункции

&НаСервере
Процедура ПрочитатьЗначенияПоказателей()
	
	ПоказателиРасчетаПодразделений = ОбщегоНазначения.ВыгрузитьКолонку(ПоказателиПодразделенийПараметры, "Показатель", Истина);
	ПоказателиРасчетаСотрудников   = ОбщегоНазначения.ВыгрузитьКолонку(ПоказателиСотрудниковПараметры, "Показатель", Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",                    Организация);
	Запрос.УстановитьПараметр("ПараметрыРасчетаРезерва",        ПараметрыРасчетаРезерва);
	Запрос.УстановитьПараметр("ВидРасчетаРезерва",              ВидРасчетаРезерва);
	Запрос.УстановитьПараметр("ПоказателиРасчетаОрганизации",   ПоказателиОрганизации);
	Запрос.УстановитьПараметр("ПоказателиРасчетаПодразделений", ПоказателиПодразделенийПараметры.Выгрузить());
	Запрос.УстановитьПараметр("ПоказателиРасчетаСотрудников",   ПоказателиСотрудниковПараметры.Выгрузить());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоказателиРасчетаПодразделений.Показатель КАК Показатель,
	|	ПоказателиРасчетаПодразделений.Точность КАК Точность
	|ПОМЕСТИТЬ ВТ_ПоказателиРасчетаПодразделений
	|ИЗ
	|	&ПоказателиРасчетаПодразделений КАК ПоказателиРасчетаПодразделений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоказателиРасчетаСотрудников.Показатель КАК Показатель,
	|	ПоказателиРасчетаСотрудников.Точность КАК Точность
	|ПОМЕСТИТЬ ВТ_ПоказателиРасчетаСотрудников
	|ИЗ
	|	&ПоказателиРасчетаСотрудников КАК ПоказателиРасчетаСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПоказателейРасчетаРезервов.Организация КАК Организация,
	|	ЗначенияПоказателейРасчетаРезервов.ПараметрыРасчетаРезерва КАК ПараметрыРасчетаРезерва,
	|	ЗначенияПоказателейРасчетаРезервов.ВладелецВидаРасчета КАК ВладелецВидаРасчета,
	|	ЗначенияПоказателейРасчетаРезервов.ПоказательРасчета КАК Показатель,
	|	ЗначенияПоказателейРасчетаРезервов.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейРасчетаРезервов КАК ЗначенияПоказателейРасчетаРезервов
	|ГДЕ
	|	ЗначенияПоказателейРасчетаРезервов.Организация = &Организация
	|	И ЗначенияПоказателейРасчетаРезервов.ПараметрыРасчетаРезерва = &ПараметрыРасчетаРезерва
	|	И ЗначенияПоказателейРасчетаРезервов.ВладелецВидаРасчета ССЫЛКА Справочник.Организации
	|	И ЗначенияПоказателейРасчетаРезервов.ПоказательРасчета В(&ПоказателиРасчетаОрганизации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПоказателейРасчетаРезервов.Организация КАК Организация,
	|	ЗначенияПоказателейРасчетаРезервов.ПараметрыРасчетаРезерва КАК ПараметрыРасчетаРезерва,
	|	ЗначенияПоказателейРасчетаРезервов.ВладелецВидаРасчета КАК Подразделение,
	|	ЗначенияПоказателейРасчетаРезервов.ПоказательРасчета КАК Показатель,
	|	ЗначенияПоказателейРасчетаРезервов.Значение КАК Значение,
	|	ВТ_ПоказателиРасчетаПодразделений.Точность КАК Точность
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейРасчетаРезервов КАК ЗначенияПоказателейРасчетаРезервов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоказателиРасчетаПодразделений КАК ВТ_ПоказателиРасчетаПодразделений
	|		ПО ЗначенияПоказателейРасчетаРезервов.ПоказательРасчета = ВТ_ПоказателиРасчетаПодразделений.Показатель
	|ГДЕ
	|	ЗначенияПоказателейРасчетаРезервов.Организация = &Организация
	|	И ЗначенияПоказателейРасчетаРезервов.ПараметрыРасчетаРезерва = &ПараметрыРасчетаРезерва
	|	И ЗначенияПоказателейРасчетаРезервов.ВладелецВидаРасчета ССЫЛКА Справочник.ПодразделенияОрганизаций
	|	И ЗначенияПоказателейРасчетаРезервов.ПоказательРасчета В
	|			(ВЫБРАТЬ
	|				ВТ_ПоказателиРасчетаПодразделений.Показатель
	|			ИЗ
	|				ВТ_ПоказателиРасчетаПодразделений)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПоказателейРасчетаРезервов.Организация КАК Организация,
	|	ЗначенияПоказателейРасчетаРезервов.ПараметрыРасчетаРезерва КАК ПараметрыРасчетаРезерва,
	|	ЗначенияПоказателейРасчетаРезервов.ВладелецВидаРасчета КАК Позиция,
	|	ЗначенияПоказателейРасчетаРезервов.ПоказательРасчета КАК Показатель,
	|	ЗначенияПоказателейРасчетаРезервов.Значение КАК Значение,
	|	ВТ_ПоказателиРасчетаСотрудников.Точность КАК Точность
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейРасчетаРезервов КАК ЗначенияПоказателейРасчетаРезервов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоказателиРасчетаСотрудников КАК ВТ_ПоказателиРасчетаСотрудников
	|		ПО ЗначенияПоказателейРасчетаРезервов.ПоказательРасчета = ВТ_ПоказателиРасчетаСотрудников.Показатель
	|ГДЕ
	|	ЗначенияПоказателейРасчетаРезервов.Организация = &Организация
	|	И ЗначенияПоказателейРасчетаРезервов.ПараметрыРасчетаРезерва = &ПараметрыРасчетаРезерва
	|	И ЗначенияПоказателейРасчетаРезервов.ВладелецВидаРасчета ССЫЛКА Справочник.ШтатноеРасписание
	|	И ЗначенияПоказателейРасчетаРезервов.ПоказательРасчета В
	|			(ВЫБРАТЬ
	|				ВТ_ПоказателиРасчетаСотрудников.Показатель
	|			ИЗ
	|				ВТ_ПоказателиРасчетаСотрудников)";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаПоказателей = Результат[2].Выбрать();
	Пока ВыборкаПоказателей.Следующий() Цикл
		Для Сч = 1 По КоличествоПоказателей Цикл
			Если ВыборкаПоказателей.Показатель = ЭтотОбъект["Показатель" + Сч] Тогда
				ЭтотОбъект["Показатель" + Сч + "Значение"] = ВыборкаПоказателей.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ВыборкаПоказателей = Результат[3].Выбрать();
	Пока ВыборкаПоказателей.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ПоказателиПодразделений.Добавить(), ВыборкаПоказателей);
	КонецЦикла;
	
	ВыборкаПоказателей = Результат[4].Выбрать();
	Пока ВыборкаПоказателей.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ПоказателиСотрудников.Добавить(), ВыборкаПоказателей);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЗначенияПоказателей()
	
	НаборЗаписей = РегистрыСведений.ЗначенияПоказателейРасчетаРезервов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Отбор.ПараметрыРасчетаРезерва.Установить(ПараметрыРасчетаРезерва);
	НаборЗаписей.Отбор.ВидРасчетаРезерва.Установить(ВидРасчетаРезерва);
	НаборЗаписей.Очистить();
	
	Для Сч = 1 По КоличествоПоказателей Цикл
		
		ЗначениеПоказателя = ЭтотОбъект["Показатель" + Сч + "Значение"];
		Если ЗначениеПоказателя = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Организация             = Организация;
		НоваяЗапись.ПараметрыРасчетаРезерва = ПараметрыРасчетаРезерва;
		НоваяЗапись.ВладелецВидаРасчета     = Организация;
		НоваяЗапись.ПоказательРасчета       = ЭтотОбъект["Показатель" + Сч];
		НоваяЗапись.ВидРасчетаРезерва       = ВидРасчетаРезерва;
		НоваяЗапись.Значение               = ЗначениеПоказателя;
		
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из ПоказателиПодразделений Цикл
		
		ЗначениеПоказателя = СтрокаТаблицы.Значение;
		Если ЗначениеПоказателя = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Организация             = Организация;
		НоваяЗапись.ПараметрыРасчетаРезерва = ПараметрыРасчетаРезерва;
		НоваяЗапись.ВладелецВидаРасчета     = СтрокаТаблицы.Подразделение;
		НоваяЗапись.ПоказательРасчета       = СтрокаТаблицы.Показатель;
		НоваяЗапись.ВидРасчетаРезерва       = ВидРасчетаРезерва;
		НоваяЗапись.Значение                = ЗначениеПоказателя;
		
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из ПоказателиСотрудников Цикл
		
		ЗначениеПоказателя = СтрокаТаблицы.Значение;
		Если ЗначениеПоказателя = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Организация             = Организация;
		НоваяЗапись.ПараметрыРасчетаРезерва = ПараметрыРасчетаРезерва;
		НоваяЗапись.ВладелецВидаРасчета     = СтрокаТаблицы.Позиция;
		НоваяЗапись.ПоказательРасчета       = СтрокаТаблицы.Показатель;
		НоваяЗапись.ВидРасчетаРезерва       = ВидРасчетаРезерва;
		НоваяЗапись.Значение                = ЗначениеПоказателя;
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

#КонецОбласти
