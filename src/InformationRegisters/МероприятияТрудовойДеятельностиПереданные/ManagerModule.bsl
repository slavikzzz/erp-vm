#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиОбновления

Процедура ИсправитьДвиженияНеПринятыхДокументов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МероприятияТрудовойДеятельностиПереданные.Регистратор.Организация КАК Организация,
		|	МероприятияТрудовойДеятельностиПереданные.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияТрудовойДеятельностиПереданные.Отменено КАК Отменено,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ МероприятияТрудовойДеятельностиПереданные.Регистратор) КАК КоличествоПовторов
		|ПОМЕСТИТЬ ВТНеУникальныеМероприятия
		|ИЗ
		|	РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияТрудовойДеятельностиПереданные
		|
		|СГРУППИРОВАТЬ ПО
		|	МероприятияТрудовойДеятельностиПереданные.ИдМероприятия,
		|	МероприятияТрудовойДеятельностиПереданные.Отменено,
		|	МероприятияТрудовойДеятельностиПереданные.Регистратор.Организация
		|
		|ИМЕЮЩИЕ
		|	(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ МероприятияТрудовойДеятельностиПереданные.Регистратор) > 1
		|		ИЛИ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ МероприятияТрудовойДеятельностиПереданные.НомерСтроки) > 1)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МероприятияТрудовойДеятельностиПереданные.Регистратор.Организация КАК Организация,
		|	МероприятияТрудовойДеятельностиПереданные.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТРегистраторы
		|ИЗ
		|	ВТНеУникальныеМероприятия КАК НеУникальныеМероприятия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияТрудовойДеятельностиПереданные
		|		ПО НеУникальныеМероприятия.Организация = МероприятияТрудовойДеятельностиПереданные.Регистратор.Организация
		|			И НеУникальныеМероприятия.ИдМероприятия = МероприятияТрудовойДеятельностиПереданные.ИдМероприятия
		|			И НеУникальныеМероприятия.Отменено = МероприятияТрудовойДеятельностиПереданные.Отменено
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МероприятияТрудовойДеятельностиПереданные.Регистратор.Организация КАК Организация,
		|	МероприятияТрудовойДеятельностиПереданные.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТПринятыеРегистраторы
		|ИЗ
		|	ВТРегистраторы КАК Регистраторы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияТрудовойДеятельностиПереданные
		|		ПО Регистраторы.Регистратор = МероприятияТрудовойДеятельностиПереданные.Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	МероприятияТрудовойДеятельностиПереданные.Регистратор,
		|	МероприятияТрудовойДеятельностиПереданные.Регистратор.Организация
		|
		|ИМЕЮЩИЕ
		|	МАКСИМУМ(МероприятияТрудовойДеятельностиПереданные.ПринятоВПФР) = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Регистраторы.Организация КАК Организация,
		|	Регистраторы.Регистратор КАК Регистратор
		|ИЗ
		|	ВТРегистраторы КАК Регистраторы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПринятыеРегистраторы КАК ПринятыеРегистраторы
		|		ПО Регистраторы.Регистратор = ПринятыеРегистраторы.Регистратор
		|ГДЕ
		|	ПринятыеРегистраторы.Регистратор ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не ЗарплатаКадры.ВТСодержитСтроки(Запрос.МенеджерВременныхТаблиц, "ВТНеУникальныеМероприятия") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НеУникальныеМероприятия.Организация КАК Организация,
		|	НеУникальныеМероприятия.ИдМероприятия КАК ИдМероприятия,
		|	НеУникальныеМероприятия.Отменено КАК Отменено,
		|	НеУникальныеМероприятия.КоличествоПовторов КАК КоличествоПовторов
		|ИЗ
		|	ВТНеУникальныеМероприятия КАК НеУникальныеМероприятия";
	
	НеУникальныеМероприятия = Запрос.Выполнить().Выгрузить();
	
	ИдентификаторыОбработанныхМероприятий = Новый Соответствие;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МероприятияТрудовойДеятельностиПереданные.Регистратор.Организация КАК Организация,
		|	МероприятияТрудовойДеятельностиПереданные.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияТрудовойДеятельностиПереданные.Отменено КАК Отменено,
		|	МероприятияТрудовойДеятельностиПереданные.Регистратор КАК Регистратор,
		|	НАЧАЛОПЕРИОДА(МероприятияТрудовойДеятельностиПереданные.Регистратор.Дата, ДЕНЬ) КАК РегистраторДата
		|ИЗ
		|	РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияТрудовойДеятельностиПереданные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПринятыеРегистраторы КАК ПринятыеРегистраторы
		|		ПО МероприятияТрудовойДеятельностиПереданные.Регистратор = ПринятыеРегистраторы.Регистратор
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	МероприятияТрудовойДеятельностиПереданные.Регистратор.Дата,
		|	МероприятияТрудовойДеятельностиПереданные.Регистратор";
	
	ВыборкаПринятых = Запрос.Выполнить().Выбрать();
	Пока ВыборкаПринятых.СледующийПоЗначениюПоля("Организация") Цикл
		
		ИдентификаторыОрганизации = ИдентификаторыОбработанныхМероприятий.Получить(ВыборкаПринятых.Организация);
		Если ИдентификаторыОрганизации = Неопределено Тогда
			ИдентификаторыОрганизации = Новый Соответствие;
			ИдентификаторыОбработанныхМероприятий.Вставить(ВыборкаПринятых.Организация, ИдентификаторыОрганизации);
		КонецЕсли;
		
		Пока ВыборкаПринятых.СледующийПоЗначениюПоля("РегистраторДата") Цикл
			
			Пока ВыборкаПринятых.СледующийПоЗначениюПоля("Регистратор") Цикл
				
				НаборЗаписей = РегистрыСведений.МероприятияТрудовойДеятельностиПереданные.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПринятых.Регистратор);
				НаборЗаписей.Прочитать();
				
				Пока ВыборкаПринятых.Следующий() Цикл
					
					ДанныеИдентификатора = ИдентификаторыОрганизации.Получить(ВыборкаПринятых.ИдМероприятия);
					Если ДанныеИдентификатора = Неопределено Тогда
						ДанныеИдентификатора = Новый Структура("Отмененное,НеОтмененное");
					КонецЕсли;
					
					Если ВыборкаПринятых.Отменено Тогда
						ДанныеИдентификатора.Отмененное = Истина;
					Иначе
						ДанныеИдентификатора.НеОтмененное = Истина;
					КонецЕсли;
					
					ИдентификаторыОрганизации.Вставить(ВыборкаПринятых.ИдМероприятия, ДанныеИдентификатора);
					
					СтруктураПоиска = Новый Структура("Организация,ИдМероприятия,Отменено");
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаПринятых);
					
					НайденныеСтроки = НеУникальныеМероприятия.НайтиСтроки(СтруктураПоиска);
					
					МаксимальноеКоличествоДублей = 0;
					СтрокаСМаксимальнымКоличеством = Неопределено;
					Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
						Если МаксимальноеКоличествоДублей < НайденнаяСтрока.КоличествоПовторов Тогда
							МаксимальноеКоличествоДублей = НайденнаяСтрока.КоличествоПовторов;
							СтрокаСМаксимальнымКоличеством = НайденнаяСтрока;
						КонецЕсли;
					КонецЦикла;
					
					Для Каждого Запись Из НаборЗаписей Цикл
						
						Если Запись.ИдМероприятия = ВыборкаПринятых.ИдМероприятия
							И Запись.Отменено = ВыборкаПринятых.Отменено Тогда
							
							Если МаксимальноеКоличествоДублей > 1 Тогда
								НаборЗаписей.Удалить(Запись);
								СтрокаСМаксимальнымКоличеством.КоличествоПовторов = СтрокаСМаксимальнымКоличеством.КоличествоПовторов - 1;
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЦикла;
				
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
		
		ИдентификаторыОрганизации = ИдентификаторыОбработанныхМероприятий.Получить(Выборка.Организация);
		Если ИдентификаторыОрганизации = Неопределено Тогда
			ИдентификаторыОрганизации = Новый Соответствие;
			ИдентификаторыОбработанныхМероприятий.Вставить(Выборка.Организация, ИдентификаторыОрганизации);
		КонецЕсли;
		
		Пока Выборка.Следующий() Цикл
			
			НаборЗаписей = РегистрыСведений.МероприятияТрудовойДеятельностиПереданные.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.Прочитать();
			
			ЗаписиКУдалению = Новый Массив;
			ЗаписиКСохранению = Новый Массив;
			ИдентификаторыНабора = Новый Соответствие;
			
			Для Каждого Запись Из НаборЗаписей Цикл
				
				ДанныеИдентификатора = ИдентификаторыОрганизации.Получить(Запись.ИдМероприятия);
				Если ДанныеИдентификатора = Неопределено Тогда
					ДанныеИдентификатора = Новый Структура("Отмененное,НеОтмененное");
				КонецЕсли;
				
				Если Запись.Отменено Тогда
					
					Если ДанныеИдентификатора.Отмененное = Истина Тогда
						ЗаписиКУдалению.Добавить(Запись);
						Продолжить;
					КонецЕсли;
					
					ДанныеИдентификатора.Отмененное = Истина;
					
				Иначе
					
					Если ДанныеИдентификатора.НеОтмененное = Истина Тогда
						ЗаписиКУдалению.Добавить(Запись);
						Продолжить;
					КонецЕсли;
					
					ДанныеИдентификатора.НеОтмененное = Истина;
					
				КонецЕсли;
				
				СтруктураПоиска = Новый Структура("Организация,ИдМероприятия,Отменено");
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, Запись);
				СтруктураПоиска.Организация = Выборка.Организация;
				
				НайденныеСтроки = НеУникальныеМероприятия.НайтиСтроки(СтруктураПоиска);
				Если НайденныеСтроки.Количество() > 0
					И НайденныеСтроки[0].КоличествоПовторов > 1 Тогда
					
					ЗаписиКСохранению.Добавить(Запись);
					ИдентификаторыНабора.Вставить(Запись.ИдМероприятия, ДанныеИдентификатора);
					
					НайденныеСтроки[0].КоличествоПовторов = НайденныеСтроки[0].КоличествоПовторов - 1;
					
				Иначе
					ИдентификаторыОрганизации.Вставить(Запись.ИдМероприятия, ДанныеИдентификатора);
				КонецЕсли;
				
			КонецЦикла;
			
			Если ЗаписиКУдалению.Количество() > 0 Тогда
				
				Для Каждого Запись Из ЗаписиКУдалению Цикл
					НаборЗаписей.Удалить(Запись);
				КонецЦикла;
				
				Для Каждого Запись Из ЗаписиКСохранению Цикл
					НаборЗаписей.Удалить(Запись);
				КонецЦикла;
				
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
				
			Иначе
				
				Для Каждого ИдентификаторНабора Из ИдентификаторыНабора Цикл
					ИдентификаторыОрганизации.Вставить(ИдентификаторНабора.Ключ, ИдентификаторНабора.Значение);
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьОрганизации() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МероприятияПереданные.Регистратор КАК Регистратор,
		|	МероприятияПереданные.Регистратор.Организация КАК Организация
		|ИЗ
		|	РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияПереданные
		|ГДЕ
		|	МероприятияПереданные.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.МероприятияТрудовойДеятельностиПереданные.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.Прочитать();
		
		Для Каждого Запись Из НаборЗаписей Цикл
			Запись.Организация = Выборка.Организация;
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли