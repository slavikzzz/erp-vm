#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	УдалитьЗаписиЗаработанныхОтпусков();
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура УдалитьЗаписиЗаработанныхОтпусков()

	// Подготовка таблицы изменившихся записей.
	// В отличие от других источников вторичного регистра - изменение ввода остатков требует полного пересчета прав.
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("НаборЗаписей", Выгрузить());
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	НаборЗаписей.Сотрудник КАК Сотрудник,
	               |	НаборЗаписей.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	               |	НаборЗаписей.Состояние КАК Состояние,
	               |	НаборЗаписей.ДатаОстатка КАК ДатаОстатка,
	               |	НаборЗаписей.КоличествоДней КАК КоличествоДней
	               |ПОМЕСТИТЬ НовыйНабор
	               |ИЗ
	               |	&НаборЗаписей КАК НаборЗаписей
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОтсутствияСдвигающиеРабочийГод.Сотрудник КАК Сотрудник,
	               |	ОтсутствияСдвигающиеРабочийГод.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	               |	ОтсутствияСдвигающиеРабочийГод.Состояние КАК Состояние,
	               |	ОтсутствияСдвигающиеРабочийГод.ДатаОстатка КАК ДатаОстатка,
	               |	ОтсутствияСдвигающиеРабочийГод.КоличествоДней КАК КоличествоДней
	               |ПОМЕСТИТЬ СтарыйНабор
	               |ИЗ
	               |	РегистрСведений.ОтсутствияСдвигающиеРабочийГод КАК ОтсутствияСдвигающиеРабочийГод
	               |ГДЕ
	               |	ОтсутствияСдвигающиеРабочийГод.Регистратор = &Регистратор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(НовыйНабор.Сотрудник, СтарыйНабор.Сотрудник) КАК Сотрудник,
	               |	ЕСТЬNULL(НовыйНабор.ВидЕжегодногоОтпуска, СтарыйНабор.ВидЕжегодногоОтпуска) КАК ВидЕжегодногоОтпуска,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(НовыйНабор.КоличествоДней, 0) <> ЕСТЬNULL(СтарыйНабор.КоличествоДней, 0)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК БылиИзменения
	               |ПОМЕСТИТЬ СравнительныйНабор
	               |ИЗ
	               |	НовыйНабор КАК НовыйНабор
	               |		ПОЛНОЕ СОЕДИНЕНИЕ СтарыйНабор КАК СтарыйНабор
	               |		ПО НовыйНабор.Сотрудник = СтарыйНабор.Сотрудник
	               |			И НовыйНабор.ВидЕжегодногоОтпуска = СтарыйНабор.ВидЕжегодногоОтпуска
	               |			И НовыйНабор.Состояние = СтарыйНабор.Состояние
	               |			И НовыйНабор.ДатаОстатка = СтарыйНабор.ДатаОстатка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	СравнительныйНабор.Сотрудник КАК Сотрудник,
	               |	СравнительныйНабор.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	               |	ДАТАВРЕМЯ(1, 1, 1) КАК Период
	               |ИЗ
	               |	СравнительныйНабор КАК СравнительныйНабор
	               |ГДЕ
	               |	СравнительныйНабор.БылиИзменения = ИСТИНА";
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	ОстаткиОтпусков.УдалитьЗаписиЗаработанныхОтпусков(ТаблицаЗапроса);
	
КонецПроцедуры

#КонецОбласти 

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли