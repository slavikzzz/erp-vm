#Область ОписаниеПеременных

#Область ПеременныеМодуля

&НаКлиенте
Перем СтруктураСохраняемыхРеквизитов;

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Запись, ЭтотОбъект);
	
	Если Параметры.Ключ.Пустой() Тогда
		Запись.Период = НачалоГода(ОбщегоНазначенияБП.ПолучитьРабочуюДату());
		Если Запись.Организация.Пустая() Тогда
			Запись.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
		КонецЕсли;
	КонецЕсли;
	
	ПоВсемНалоговымОрганам = ?(ЗначениеЗаполнено(Запись.РегистрацияВНалоговомОргане), 0, 1);
	
	УстановитьГоловнуюОрганизацию(ЭтаФорма);
	УстановитьДоступностьНалоговогоОргана(ЭтаФорма);
	
	ЭтаФорма.Элементы.ПоВсемНалоговымОрганам.ТолькоПросмотр = 
		НЕ ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ПорядокУплатыНалоговНаМестах);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(Запись.Организация) Тогда
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(,, НСтр("ru = 'Организация';
																						|en = 'Company'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.Организация", "", Отказ);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Запись.Налог) Тогда
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(,, НСтр("ru = 'Вид налога';
																						|en = 'Tax kind'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.Налог", "", Отказ);
	КонецЕсли;
	Если ПоВсемНалоговымОрганам = 0	И Запись.РегистрацияВНалоговомОргане.Пустая() Тогда
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(,, НСтр("ru = 'Налоговый орган';
																						|en = 'Tax authority'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.РегистрацияВНалоговомОргане", "", Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормКлиент.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если НЕ Отказ И НЕ ТекущийОбъект.Выбран() Тогда

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период",						Запись.Период);
		Запрос.УстановитьПараметр("Организация",				Запись.Организация);
		Запрос.УстановитьПараметр("Налог",						Запись.Налог);
		Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане",Запись.РегистрацияВНалоговомОргане);

		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПорядокУплатыНалоговНаМестах.Период
		|ИЗ
		|	РегистрСведений.ПорядокУплатыНалоговНаМестах КАК ПорядокУплатыНалоговНаМестах
		|ГДЕ
		|	ПорядокУплатыНалоговНаМестах.Период = &Период
		|	И ПорядокУплатыНалоговНаМестах.Организация = &Организация
		|	И ПорядокУплатыНалоговНаМестах.Налог = &Налог
		|	И ПорядокУплатыНалоговНаМестах.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане";
		
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			
			Если ЗначениеЗаполнено(Запись.РегистрацияВНалоговомОргане) Тогда
				ТекстСообщения = НСтр("ru = 'На %1 в налоговом органе <%2> по виду налога <%3> уже есть запись в организации <%4>';
										|en = 'There is <%4> company entry in <%2> tax authority for the <%3> tax kind on %1'");
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
					Формат(Запись.Период, "ДФ=dd.MM.yyyy"),
					СокрЛП(Запись.РегистрацияВНалоговомОргане),
					СокрЛП(Запись.Налог),
					СокрЛП(Запись.Организация));
			Иначе
				ТекстСообщения = НСтр("ru = 'На %1 по всем налоговым органам по виду налога <%2> уже есть запись в организации <%3>';
										|en = 'There is <%3> company entry for all tax authorities for the <%2> tax kind on %1'");
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
					Формат(Запись.Период, "ДФ=dd.MM.yyyy"),
					СокрЛП(Запись.Налог),
					СокрЛП(Запись.Организация));
			КонецЕсли;
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоВсемНалоговымОрганамПриИзменении(Элемент)
	
	Если ПоВсемНалоговымОрганам = 1 Тогда
		СохранитьЗначениеРеквизитаФормы("РегистрацияВНалоговомОргане", ЭтаФорма, Запись, СтруктураСохраняемыхРеквизитов);
	Иначе
		ВосстановитьЗначениеРеквизитаФормы("РегистрацияВНалоговомОргане", Запись, СтруктураСохраняемыхРеквизитов);
	КонецЕсли;
	
	УстановитьДоступностьНалоговогоОргана(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьГоловнуюОрганизацию(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СохранитьЗначениеРеквизитаФормы(ИмяРеквизита, Форма, Данные, СтруктураРеквизитов) Экспорт

	Если НЕ Форма.Элементы[ИмяРеквизита].Доступность Тогда
		Возврат;
	КонецЕсли;

	СтруктураРеквизитов.Вставить(ИмяРеквизита, Данные[ИмяРеквизита]);

	Данные[ИмяРеквизита] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Данные[ИмяРеквизита]));

КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьЗначениеРеквизитаФормы(ИмяРеквизита, Данные, СтруктураРеквизитов) Экспорт

	Если СтруктураРеквизитов.Свойство(ИмяРеквизита) Тогда
		Данные[ИмяРеквизита] = СтруктураРеквизитов[ИмяРеквизита];
	КонецЕсли;

КонецПроцедуры

#Область НастройкаФормы

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьНалоговогоОргана(Форма)
	
	Элементы = Форма.Элементы; 
	
	ПоВсемНалоговымОрганам = Форма.ПоВсемНалоговымОрганам = 1;
		
	Элементы.РегистрацияВНалоговомОргане.Доступность = НЕ ПоВсемНалоговымОрганам;
	Элементы.РегистрацияВНалоговомОргане.АвтоОтметкаНезаполненного = НЕ ПоВсемНалоговымОрганам;
	Элементы.РегистрацияВНалоговомОргане.ОтметкаНезаполненного = НЕ ПоВсемНалоговымОрганам И Форма.Запись.РегистрацияВНалоговомОргане.Пустая();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьГоловнуюОрганизацию(Форма)
	
	Форма.ГоловнаяОрганизация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Форма.Запись.Организация);
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Инициализация

СтруктураСохраняемыхРеквизитов = Новый Структура; // Пустая структура

#КонецОбласти
