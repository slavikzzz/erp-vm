
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("ЗаказНаПроизводство", ЗаказНаПроизводство) Тогда
		ТекстИсключения = НСтр("ru = 'Не переданы обязательные параметры';
								|en = 'Required parameters are not passed'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОтчет;
	ПараметрыОжидания = Неопределено;
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НачатьОжиданиеДлительнойОперации Тогда
		ПодключитьОбработчикОжидания("НачатьОжиданиеДлительнойОперацииПриОткрытии", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТабличныйДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(
		АдресРасшифровки,
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
	
	ДоступныеДействия = Новый Массив;
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("РезультатОбработкаРасшифровкиЗавершение", ЭтотОбъект);
	
	ОбработкаРасшифровки.ПоказатьВыборДействия(
		ОписаниеОповещения,
		Расшифровка,
		ДоступныеДействия,
		,
		Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровкиЗавершение(ВыполненноеДействие, ПараметрВыполненногоДействия, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрВыполненногоДействия) И ЭтоСсылкаСправочникаДокумента(ПараметрВыполненногоДействия) Тогда
		
		ПоказатьЗначение(, ПараметрВыполненногоДействия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоСсылкаСправочникаДокумента(Значение)
	
	ТипЗначения = ТипЗнч(Значение);
	
	Возврат Справочники.ТипВсеСсылки().СодержитТип(ТипЗначения) ИЛИ Документы.ТипВсеСсылки().СодержитТип(ТипЗначения);
	
КонецФункции

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОтчет;
	ПараметрыОжидания = Неопределено;
	
	ОбновитьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Пересчитать(Команда)
	
	ПересчитатьНаСервере();
	
	ПараметрыОжидания = Новый Структура;
	ПараметрыОжидания.Вставить("МаксимальныйИнтервал", 30);
	ПараметрыОжидания.Вставить("ТекущийИнтервал", 1);
	ПараметрыОжидания.Вставить("КоэффициентУвеличенияИнтервала", 1.4);
	
	ПодключитьОбработчикОжидания("Подключаемый_ПроверитьЗавершениеРасчета", 1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НачатьОжиданиеДлительнойОперацииПриОткрытии()
	
	НачатьОжиданиеДлительнойОперации("ОбновитьВФонеЗавершение");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНаКлиенте() Экспорт
	
	ОбновитьНаСервере();
	
	Если НачатьОжиданиеДлительнойОперации Тогда
		НачатьОжиданиеДлительнойОперации("ОбновитьВФонеЗавершение");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	ТабличныйДокумент.Очистить();
	
	Если ДлительнаяОперация <> Неопределено Тогда
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ДлительнаяОперация.ИдентификаторЗадания);
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания =
		НСтр("ru = 'Заполнение журнала ошибок расчета нормативного графика';
			|en = 'Fill the error log of the target schedule calculation'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.НормативныйГрафикСтруктурыЗаказа.ВывестиЖурналОшибок",
		Новый Структура("Заказ", ЗаказНаПроизводство),
		ПараметрыВыполнения);
	
	Если ДлительнаяОперация.Статус = "Выполняется" Тогда
		НачатьОжиданиеДлительнойОперации = Истина;
	Иначе
		ОбработатьРезультатВыполненияВФоне(ДлительнаяОперация);
		НачатьОжиданиеДлительнойОперации = Ложь;
		ДлительнаяОперация = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВФонеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ДлительнаяОперация = Неопределено;
	
	Если Результат <> Неопределено Тогда
		ОбработатьРезультатВыполненияВФоне(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатВыполненияВФоне(Результат)
	
	Если Результат.Статус = "Выполнено" Тогда
		
		ДанныеЗаполнения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			
			ТабличныйДокумент = ДанныеЗаполнения.ТабличныйДокумент;
			
			АдресСхемы       = ПоместитьВоВременноеХранилище(ДанныеЗаполнения.СхемаКомпоновкиДанных, УникальныйИдентификатор);
			АдресРасшифровки = ПоместитьВоВременноеХранилище(ДанныеЗаполнения.ДанныеРасшифровки, УникальныйИдентификатор);
			
			Элементы.ТабличныйДокумент.РежимМасштабированияПросмотра = РежимМасштабированияПросмотра.Обычный;
			
		КонецЕсли;
	
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьОжиданиеДлительнойОперации(ИмяПроцедуры)
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		ДлительнаяОперация,
		Новый ОписаниеОповещения(ИмяПроцедуры, ЭтотОбъект));
	
	НачатьОжиданиеДлительнойОперации = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьНаСервере()
	
	РегистрыСведений.НормативныйГрафикСтруктурыЗаказа.ПересчитатьГрафикЗаказа(ЗаказНаПроизводство);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьЗавершениеРасчета()
	
	Если ПараметрыОжидания <> Неопределено Тогда
		
		Если РасчетЗавершен(ЗаказНаПроизводство) Тогда
			
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОтчет;
			ПараметрыОжидания = Неопределено;
			ОбновитьНаКлиенте();
			
		Иначе
			
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОжидание;
			
			Если ПараметрыОжидания.ТекущийИнтервал < ПараметрыОжидания.МаксимальныйИнтервал Тогда
				ПараметрыОжидания.ТекущийИнтервал = ПараметрыОжидания.ТекущийИнтервал
					* ПараметрыОжидания.КоэффициентУвеличенияИнтервала;
				Если ПараметрыОжидания.ТекущийИнтервал > ПараметрыОжидания.МаксимальныйИнтервал Тогда
					ПараметрыОжидания.ТекущийИнтервал = ПараметрыОжидания.МаксимальныйИнтервал;
				КонецЕсли;
			КонецЕсли;
			
			ПодключитьОбработчикОжидания(
				"Подключаемый_ПроверитьЗавершениеРасчета",
				ПараметрыОжидания.ТекущийИнтервал,
				Истина);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РасчетЗавершен(ЗаказНаПроизводство)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА
		|ИЗ
		|	РегистрСведений.ПротоколРасчетаСтруктурыЗаказа КАК ПротоколРасчета
		|ГДЕ
		|	ПротоколРасчета.ЗаказНаПроизводство = &ЗаказНаПроизводство
		|	И ПротоколРасчета.ТипОшибки = ЗНАЧЕНИЕ(Перечисление.ТипыОшибокРасчетаСтруктурыЗаказаНаПроизводство.ОшибкаРасчетаНормативногоГрафика)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ИСТИНА
		|ГДЕ
		|	ИСТИНА НЕ В (
		|		ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА
		|		ИЗ
		|			РегистрСведений.ЗаданияКРасчетуСтруктурыЗаказаНормативныйГрафик КАК Задания
		|		ГДЕ
		|			Задания.ЗаказНаПроизводство = &ЗаказНаПроизводство)");
	Запрос.УстановитьПараметр("ЗаказНаПроизводство", ЗаказНаПроизводство);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти
