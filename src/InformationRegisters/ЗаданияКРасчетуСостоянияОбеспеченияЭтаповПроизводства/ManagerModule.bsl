#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Выполняет задания к расчету состояния обеспечения этапов производства.
//
// Параметры:
//  Задания - ТаблицаЗначений - колонки соответствуют измерениям, ресурсам и реквизитам регистра сведений
//                              "ЗаданияКРасчетуСостоянияОбеспеченияЭтаповПроизводства", есть и служебные колонки:
//             * ОбъектРасчета          - ДокументСсылка.ЗаказНаПроизводство2_2 -
//             * ИдентификаторЗаписи    - УникальныйИдентификатор -
//             * УдалитьДеньРегистрации - Число  -
//             * ДатаЗаписи             - Дата   -
//             * ИдентификаторЗадания   - УникальныйИдентификатор - служебная
//             * ДатаЗадания            - Дата                    - служебная
//  ИдентификаторыНеОбработанныхЗаписей - Соответствие из УникальныйИдентификатор - ключ, это идентификатор 
//                                                                                   не выполненных (выдающих ошибку при
//                                                                                   выполнении) записей регистра
//                                                                                   сведений очереди заданий
//                                                                                   (измерение ИдентификаторЗаписи
//                                                                                   регистра сведений очереди заданий),
//                                                                                  значение, это представление ошибки.
//  ДополнительныеСвойства - Неопределено, Структура - дополнительные свойства выполнения заданий.
//
Процедура ОбработатьЗадание(Задания, ИдентификаторыНеОбработанныхЗаписей, ДополнительныеСвойства = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Задания.ОбъектРасчета КАК ОбъектРасчета,
	|	Задания.ДатаЗадания   КАК ДатаЗадания
	|ПОМЕСТИТЬ Задания
	|ИЗ
	|	&Задания КАК Задания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задания.ОбъектРасчета
	|ИЗ
	|	Задания КАК Задания
	|СГРУППИРОВАТЬ ПО
	|	Задания.ОбъектРасчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	МИНИМУМ(ДатаЗадания),
	|	ОбъектРасчета";
	
	Запрос.УстановитьПараметр("Задания", Задания);
	
	Ошибки = Новый Соответствие;
	
	РегистрыСведений.СостоянияЭтаповПроизводства.ОбновитьСостояниеОбеспечения(
		Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ОбъектРасчета"),
		Ошибки);
	
	Если Ошибки.Количество() > 0 Тогда
		
		ПоляОшибки   = Новый Структура("ОбъектРасчета");
		ДанныеОшибки = Новый Структура("ОбъектРасчета");
		
		Задания.Индексы.Добавить("ОбъектРасчета");
		
		Для каждого Ошибка Из Ошибки Цикл
			
			ДанныеОшибки.ОбъектРасчета = Ошибка.Ключ;
			
			ТекстОшибки = ОтложенныеЗадания.ТекстОшибкиВыполнения(ПоляОшибки, ДанныеОшибки, Ошибка.Значение);
			
			НайденныеСтроки = Задания.НайтиСтроки(ДанныеОшибки);
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				ИдентификаторыНеОбработанныхЗаписей.Вставить(НайденнаяСтрока.ИдентификаторЗаписи, ТекстОшибки);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
