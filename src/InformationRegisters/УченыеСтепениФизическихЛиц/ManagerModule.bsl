#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиПравилРегистрации

// См. ЗарплатаКадрыРасширенныйСинхронизацияДанных.ШаблонОбработчика
Процедура ПриЗаполненииНастроекОбработчиковПравилРегистрации(Настройки) Экспорт
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляНезависимогоРегистра(Настройки, "ФизическоеЛицо", "ОбщиеДанные");
КонецПроцедуры

#КонецОбласти

// Заполняет ученые степени физического лица.
// 
// Параметры:
//  ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//  УченыеСтепени - Массив из Структура - см. НовыйТрудоваяДеятельность
Процедура ЗаполнитьУченыеСтепениФизическогоЛица(ФизическоеЛицо, УченыеСтепени) Экспорт
	
	Если УченыеСтепени.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.УченыеСтепениФизическихЛиц.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
	
	Для Каждого ТекущаяСтрока Из УченыеСтепени Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ТекущаяСтрока);
		НоваяЗапись.ФизическоеЛицо = ФизическоеЛицо;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Создает новую структуру для сведений об ученой степени.
// 
// Возвращаемое значение:
//  Структура:
//   * ФизическоеЛицо - СправочникСсылка.ФизическиеЛица -
//   * НомерПоПорядку - Число -
//   * УченаяСтепень - СправочникСсылка.УченыеСтепени -
//   * ДатаПрисужденияУченойСтепени - Дата -
//   * ДиссертационныйСовет - Строка -
//   * ДипломСерияНомер - Строка -
//   * ДипломВыданОрганизация - Строка -
Функция НоваяУченаяСтепень() Экспорт
	Возврат ОбщегоНазначенияБЗК.СтруктураПоИмениРегистраСведений("УченыеСтепениФизическихЛиц");
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПредставлениеУченойСтепениФизическогоЛица(ФизическоеЛицоСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	УченыеСтепениФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо1,
		|	УченыеСтепениФизическихЛиц.НомерПоПорядку,
		|	УченыеСтепениФизическихЛиц.УченаяСтепень,
		|	УченыеСтепениФизическихЛиц.ДатаПрисужденияУченойСтепени,
		|	УченыеСтепениФизическихЛиц.ДиссертационныйСовет,
		|	УченыеСтепениФизическихЛиц.ДипломСерияНомер,
		|	УченыеСтепениФизическихЛиц.ДипломВыданОрганизация
		|ИЗ
		|	РегистрСведений.УченыеСтепениФизическихЛиц КАК УченыеСтепениФизическихЛиц
		|ГДЕ
		|	УченыеСтепениФизическихЛиц.ФизическоеЛицо = &ФизическоеЛицоСсылка";
		
	Запрос.УстановитьПараметр("ФизическоеЛицоСсылка", ФизическоеЛицоСсылка);
	
	Возврат ПредставлениеУченойСтепениПоКоллекцииЗаписей(Запрос.Выполнить().Выгрузить());
	
КонецФункции

Функция ПредставлениеУченойСтепениПоКоллекцииЗаписей(НаборЗаписей) Экспорт
	
	ПредставлениеУченыеСтепени = "";
	
	ПоследняяУченаяСтепень = Неопределено;
	Для Каждого СтрокаУченыеСтепени Из НаборЗаписей Цикл
		Если ПоследняяУченаяСтепень = Неопределено ИЛИ ПоследняяУченаяСтепень.ДатаПрисужденияУченойСтепени < СтрокаУченыеСтепени.ДатаПрисужденияУченойСтепени Тогда
			ПоследняяУченаяСтепень = СтрокаУченыеСтепени;
		КонецЕсли; 
	КонецЦикла;
	
	Если ПоследняяУченаяСтепень <> Неопределено Тогда
		ПредставлениеУченыеСтепени = ?(ЗначениеЗаполнено(ПоследняяУченаяСтепень.УченаяСтепень), Строка(ПоследняяУченаяСтепень.УченаяСтепень), "");
		ПредставлениеУченыеСтепени = ПредставлениеУченыеСтепени + ?(ЗначениеЗаполнено(ПоследняяУченаяСтепень.ДатаПрисужденияУченойСтепени), ?(ПустаяСтрока(ПредставлениеУченыеСтепени), "", ", ") + Формат(ПоследняяУченаяСтепень.ДатаПрисужденияУченойСтепени, "ДЛФ=D"), "");
		ПредставлениеУченыеСтепени = ПредставлениеУченыеСтепени + ?(ЗначениеЗаполнено(ПоследняяУченаяСтепень.ДиссертационныйСовет), ?(ПустаяСтрока(ПредставлениеУченыеСтепени), "", ", ") + Строка(ПоследняяУченаяСтепень.ДиссертационныйСовет), "");
	КонецЕсли;
	
	Если ПустаяСтрока(ПредставлениеУченыеСтепени) Тогда
		ПредставлениеУченыеСтепени = НСтр("ru = 'Ученые степени не присуждались';
											|en = 'Academic degrees were not conferred'");
	КонецЕсли; 
	
	Возврат ПредставлениеУченыеСтепени;
	
КонецФункции

#КонецОбласти

#КонецЕсли