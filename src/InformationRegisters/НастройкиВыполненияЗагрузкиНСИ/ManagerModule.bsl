#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записывает "внешние" настройки источника, не хранящиеся непосредственно в элементе справочника 
// 
// Параметры:
//  ИсточникДанных - СправочникСсылка.ИсточникиЗагрузкиПроизводственнойНСИ
//  Настройки - Структура
//  ОбновитьНастройкиЗаданий - Булево
Процедура ЗаписатьНастройкиИсточника(ИсточникДанных, Настройки, ОбновитьНастройкиЗаданий = Ложь) Экспорт
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИсточникДанных.Установить(ИсточникДанных);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() Тогда
		Запись = НаборЗаписей[0];
	Иначе
		Запись = НаборЗаписей.Добавить();
		Запись.ИсточникДанных = ИсточникДанных;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Запись, Настройки);
	
	Если ОбновитьНастройкиЗаданий Тогда
		ПроверитьОбновитьНастройкиЗаданий(Запись, Настройки);
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Таблица состояния загрузки по источникам
// 
// Параметры:
//  ИсточникиДанных - СправочникСсылка.ИсточникиЗагрузкиПроизводственнойНСИ
// 
// Возвращаемое значение:
//  ТаблицаЗначений
Функция СостояниеЗагрузки(ИсточникиДанных) Экспорт
	
	ПроблемныеСостояния = Перечисления.ЗагрузкаНСИСостояния.ПроблемныеСостояния();
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Т1.Ссылка                                                 КАК ИсточникДанных,
	|	ЛОЖЬ                                                      КАК АвтозагрузкаИспользуется,
	|	НЕОПРЕДЕЛЕНО                                              КАК АвтозагрузкаРасписание,
	|	ISNULL(Т2.АвтозагрузкаИдентификаторЗадания, НЕОПРЕДЕЛЕНО) КАК АвтозагрузкаИдентификаторЗадания,
	|	ISNULL(Т2.ДатаНачала, ДАТАВРЕМЯ(1, 1, 1))                 КАК ДатаНачала,
	|	ISNULL(Т2.ДатаОкончания, ДАТАВРЕМЯ(1, 1, 1))              КАК ДатаОкончания,
	|	ISNULL(Т2.КоличествоОшибок, 0)                            КАК КоличествоОшибок,
	|	ISNULL(Т2.Состояние, &НеВыполнялась)                      КАК Состояние,
	|	ЛОЖЬ                                                      КАК СостояниеПроблемное
	|ИЗ
	|	Справочник.ИсточникиЗагрузкиПроизводственнойНСИ КАК Т1
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиВыполненияЗагрузкиНСИ КАК Т2
	|		ПО Т1.Ссылка = Т2.ИсточникДанных
	|ГДЕ
	|	Т1.Ссылка В (&ИсточникиДанных)";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ИсточникиДанных", ИсточникиДанных);
	Запрос.УстановитьПараметр("НеВыполнялась", Перечисления.ЗагрузкаНСИСостояния.НеВыполнялась);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для каждого Строка Из Результат Цикл
		Справочники.ИсточникиЗагрузкиПроизводственнойНСИ.ЗаполнитьНастройкиАвтозагрузки(Строка);
		Если ПроблемныеСостояния.НайтиПоЗначению(Строка.Состояние) <> Неопределено Тогда
			Строка.СостояниеПроблемное = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьОбновитьНастройкиЗаданий(Запись, Настройки)
	
	Задание = РегламентныеЗаданияСервер.Задание(Запись.АвтозагрузкаИдентификаторЗадания);
	
	Если НЕ Запись.Используется
			ИЛИ Настройки.Свойство("АвтозагрузкаУдалитьЗадание") Тогда
		Если Задание <> Неопределено Тогда 
			РегламентныеЗаданияСервер.УдалитьЗадание(Задание);
			Запись.АвтозагрузкаИдентификаторЗадания = ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Изменения = Новый Структура;
	
	Использование = Неопределено;
	Если Настройки.Свойство("АвтозагрузкаИспользуется", Использование) Тогда
		Если Использование = Истина
				ИЛИ Задание <> Неопределено Тогда
			Изменения.Вставить("Использование", Использование);
		КонецЕсли;
	КонецЕсли;
	
	Расписание = Неопределено;
	Если Настройки.Свойство("АвтозагрузкаРасписание", Расписание) Тогда
		Если Расписание <> Неопределено
				ИЛИ Задание <> Неопределено Тогда
			Изменения.Вставить("Расписание", Расписание);
		КонецЕсли;
	КонецЕсли;
	
	Если Изменения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Задание = Неопределено Тогда
		
		КлючЗадания = Обработки.ЗагрузкаПроизводственнойНСИ.КлючВыполненияДействияВФоне(
			Запись.ИсточникДанных,
			Обработки.ЗагрузкаПроизводственнойНСИ.ДействиеЗагрузитьДанные());
		
		ПараметрыПроцедуры = Новый Массив;
		ПараметрыПроцедуры.Добавить(Запись.ИсточникДанных);
		
		ПараметрыЗадания = Новый Структура;
		ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.ЗагрузкаПроизводственнойНСИ);
		ПараметрыЗадания.Вставить("Использование", Ложь);
		ПараметрыЗадания.Вставить("Наименование", Обработки.ЗагрузкаПроизводственнойНСИ.КлючСобытияЖурналаРегистрации(Запись.ИсточникДанных));
		ПараметрыЗадания.Вставить("Параметры", ПараметрыПроцедуры);
		ПараметрыЗадания.Вставить("Ключ", КлючЗадания);
		
		Задание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
		Запись.АвтозагрузкаИдентификаторЗадания = РегламентныеЗаданияСервер.УникальныйИдентификатор(Задание);
		
	КонецЕсли;
	
	РегламентныеЗаданияСервер.ИзменитьЗадание(Задание, Изменения);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли