#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиПравилРегистрации

// См. ЗарплатаКадрыРасширенныйСинхронизацияДанных.ШаблонОбработчика
Процедура ПриЗаполненииНастроекОбработчиковПравилРегистрации(Настройки) Экспорт
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляРегламентированныхДанных(Настройки);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// См. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления.
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.РегистрыСведений.РазмерыГосударственныхПособий) Тогда
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.1.30.129";
		Обработчик.Процедура = "РегистрыСведений.РазмерыГосударственныхПособий.НачальноеЗаполнение";
		Обработчик.ОбщиеДанные = Истина;
		Обработчик.НачальноеЗаполнение = Истина;
		Обработчик.РежимВыполнения = "Оперативно";
		
	КонецЕсли;
КонецПроцедуры

// Начальное заполнение и обновление информационной базы.
Процедура НачальноеЗаполнение() Экспорт
	Обновить(ПолучитьМакет("ПредопределенныеЗначения").ПолучитьТекст());
КонецПроцедуры

// Заполняет максимальные размеры ежемесячных страховых выплат.
Процедура Обновить(ТекстXML) Экспорт
	ЗарплатаКадры.ОбновитьКлассификатор(ТекстXML);
КонецПроцедуры

#КонецОбласти

#КонецЕсли