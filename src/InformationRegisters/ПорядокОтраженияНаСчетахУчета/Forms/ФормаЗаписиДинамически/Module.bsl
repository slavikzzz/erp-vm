#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Запись, ЭтотОбъект);
	
	Если Параметры.Свойство("ВозвратЗначенияБезЗаписи") Тогда
		ВозвратЗначенияБезЗаписи = Параметры.ВозвратЗначенияБезЗаписи;
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоУказаниеСчетов") Тогда
		ТолькоУказаниеСчетов = Параметры.ТолькоУказаниеСчетов;
	КонецЕсли;
	
	Если Параметры.Свойство("ЭтоНовый") Тогда
		НоваяЗапись = Параметры.ЭтоНовый;
	КонецЕсли;
	
	КэшДанныхМеханизмов = Новый Структура;
	АналитикаУчетаПараметр = Неопределено;
	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		Параметры.ЗначенияЗаполнения.Свойство("АналитикаУчета", АналитикаУчетаПараметр);
		Если ТипЗнч(АналитикаУчетаПараметр)= Тип("СправочникСсылка.ВидыПодарочныхСертификатов") Тогда
			Параметры.ЗначенияЗаполнения.Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(АналитикаУчетаПараметр, "Организация");
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("НастройкаСчетовУчета") Тогда
		ПараметрыНастройкиСчетовУчета = Параметры.НастройкаСчетовУчета;
	ИначеЕсли АналитикаУчетаПараметр <> Неопределено Или Параметры.Свойство("РазделыУчета") Тогда
		Если АналитикаУчетаПараметр <> Неопределено Тогда
			РазделыУчетаПоАналитикеУчета = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.РазделыУчетаПоАналитикеУчета(АналитикаУчетаПараметр);
		Иначе
			РазделыУчетаПоАналитикеУчета = ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СписокРазделовСчетовУчета());
		КонецЕсли;
		РазделыУчета = ?(Параметры.Свойство("РазделыУчета") И Параметры.РазделыУчета.Количество() < РазделыУчетаПоАналитикеУчета.Количество(), Параметры.РазделыУчета, РазделыУчетаПоАналитикеУчета);
		ПараметрыНастройкиСчетовУчета = НастройкаСчетовУчетаСервер.ПараметрыНастройкиСчетовУчета(РазделыУчета);
	Иначе
		ПараметрыНастройкиСчетовУчета = НастройкаСчетовУчетаСервер.ПараметрыНастройкиСчетовУчета();
	КонецЕсли;
	УточнитьПараметрыНастройкиСчетовДляТекущейФормы(ПараметрыНастройкиСчетовУчета);
	ОбщегоНазначенияУТ.СохранитьДанныеМеханизмаВКэшФормы(ЭтотОбъект, "НастройкаСчетовУчета", ПараметрыНастройкиСчетовУчета);
	
	НастройкаСчетовУчетаСервер.ЗаполнениеРеквизитовФормы(ЭтотОбъект);
	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		ЗаполнитьЗначенияСвойств(Запись, Параметры.ЗначенияЗаполнения);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ЗначенияЗаполнения);
	КонецЕсли;
	КлючСохраненияПоложенияОкна = КэшДанныхМеханизмов.НастройкаСчетовУчета.СписокРазделовУчета.Получить(0).Значение;
	
	Если ЗначениеЗаполнено(Запись.АналитикаУчета) Тогда
		ПереопределитьФормуПоАналитикеУчета();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.АналитикаУчета) Тогда
		НастройкаСчетовУчетаСервер.ЗаполнитьРеквизитыНастройкиСчетовУчетаПоДаннымАналитики(ПараметрыНастройкиСчетовУчета, Запись.АналитикаУчета);
	ИначеЕсли Не ТолькоУказаниеСчетов Тогда
		Для каждого Реквизит Из ПараметрыНастройкиСчетовУчета.РеквизитыАналитики Цикл
			Если СтрНачинаетсяС(Реквизит.Ключ, "СчетУчета") Тогда
				ИмяРеквизита = НастройкаСчетовУчетаКлиентСервер.ИмяРеквизитаНаФорме(ПараметрыНастройкиСчетовУчета, , СтрЗаменить(Реквизит.Ключ, "СчетУчета_", ""));
				ПараметрыНастройкиСчетовУчета.РеквизитыАналитики.Вставить(Реквизит.Ключ, ЭтотОбъект[ИмяРеквизита]);
			КонецЕсли;
			Если СтрНачинаетсяС(Реквизит.Ключ, "Субконто") Тогда
				ИмяРеквизита = НастройкаСчетовУчетаКлиентСервер.ИмяРеквизитаНаФорме(ПараметрыНастройкиСчетовУчета, , СтрЗаменить(Реквизит.Ключ, "Субконто_", ""), "Субконто");
				ПараметрыНастройкиСчетовУчета.РеквизитыАналитики.Вставить(Реквизит.Ключ, ЭтотОбъект[ИмяРеквизита]);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Элементы.АналитикаУчета.ТолькоПросмотр = ЗначениеЗаполнено(Запись.АналитикаУчета);
	Элементы.Организация.ТолькоПросмотр = ЗначениеЗаполнено(Запись.Организация);
	Элементы.МестоУчета.ТолькоПросмотр = ЗначениеЗаполнено(Запись.МестоУчета);
	
	НастройкаСчетовУчетаСервер.УстановитьНастройкиСчетовУчетаВФорме(ЭтотОбъект);
	
	Элементы.ГруппаИзмерения.Видимость = Не ТолькоУказаниеСчетов;
	
	РазделыУчетаСтрокой = НастройкаСчетовУчетаКлиентСервер.ЗаголовокПоРазделамУчета(КэшДанныхМеханизмов.НастройкаСчетовУчета.СписокРазделовУчета);
	Если ТолькоУказаниеСчетов Тогда
		ЭтотОбъект.АвтоЗаголовок = Ложь;
		Заголовок = НСтр("ru = 'Настройка отражения оперативных документов в регл. учете';
						|en = 'Set up recording of operational documents in local accounting'");
	Иначе
		МассивЗаголовка = Новый Массив;
		МассивЗаголовка.Добавить(НСтр("ru = 'Порядок отражения на счетах учета';
										|en = 'Procedure of recording on GL accounts'"));
		Если ЗначениеЗаполнено(РазделыУчетаСтрокой) Тогда
			МассивЗаголовка.Добавить(РазделыУчетаСтрокой);
		КонецЕсли;
		Если НоваяЗапись Тогда
			МассивЗаголовка.Добавить(НСтр("ru = '(создание)';
											|en = '(create)'"));
		КонецЕсли;
		Если МассивЗаголовка.Количество() > 1 Тогда
			ЭтотОбъект.АвтоЗаголовок = Ложь;
			Заголовок = СтрСоединить(МассивЗаголовка, " ");
		КонецЕсли;
	КонецЕсли;
	
	Если КэшДанныхМеханизмов.НастройкаСчетовУчета.СписокРазделовУчета.Количество() > 1 Тогда
		Элементы.РазделыУчета.Видимость = Истина;
	КонецЕсли;
	РазделыУчетаСтрокой = Новый ФорматированнаяСтрока(НастройкаСчетовУчетаКлиентСервер.ЗаголовокПоРазделамУчета(КэшДанныхМеханизмов.НастройкаСчетовУчета.СписокРазделовУчета),,,, "ОткрытьВыборРазделовУчета");
	НастройкаСчетовУчетаКлиентСервер.УстановитьВидимостьРаздела(ЭтотОбъект, КэшДанныхМеханизмов.НастройкаСчетовУчета.СписокРазделовУчета);
	
	Если НоваяЗапись Тогда
		Элементы.Организация.ПодсказкаВвода = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Настройка = КэшДанныхМеханизмов.НастройкаСчетовУчета;
	СтруктураСчетовУчета = Новый Структура;
	Для каждого НастройкаРаздела Из Настройка.НастройкиРазделов Цикл
		
		НастройкаСчетовУчетаКлиентСервер.ЗаполнитьСчетаУчетаНастройкамиРаздела(НастройкаРаздела.Ключ, СтруктураСчетовУчета, Настройка, ЭтотОбъект);
		
	КонецЦикла;
	
	СтруктураИзмерений = НастройкаСчетовУчетаКлиентСервер.ИнициализироватьСтруктуруИзмеренийРегистра();
	ЗаполнитьЗначенияСвойств(СтруктураИзмерений, Запись);
	
	РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СохранитьЗначенияСчетовУчета(СтруктураИзмерений, СтруктураСчетовУчета, Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	НастройкаСчетовУчетаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если Не ВозвратЗначенияБезЗаписи И Не ТолькоУказаниеСчетов Тогда
		РедактируемыеРазделы = КэшДанныхМеханизмов.НастройкаСчетовУчета.СписокРазделовУчета;
		РедактируемыеРазделы = ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(РедактируемыеРазделы);
		Оповестить("ЗаконченаНастройкаСчетовУчета", РедактируемыеРазделы);
	КонецЕсли;
	
КонецПроцедуры // ПослеЗаписи()

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Раздел = НастройкаСчетовУчетаКлиентСервер.РазделУчетаПоНастройкам(КэшДанныхМеханизмов.НастройкаСчетовУчета);
	НастройкиРаздела = КэшДанныхМеханизмов.НастройкаСчетовУчета.НастройкиРазделов.Получить(Раздел);
	НастройкиАналитикиУчета = НастройкиРаздела.СвойстваАналитики;
	Если Запись.АналитикаУчета = Неопределено И НастройкиАналитикиУчета.ТипЗначения <> Неопределено Тогда
		Запись.АналитикаУчета = НастройкиАналитикиУчета.ТипЗначения.ПривестиЗначение(Запись.АналитикаУчета);
	КонецЕсли;
	
	Если ВозвратЗначенияБезЗаписи Или ТолькоУказаниеСчетов Тогда
		
		Если Не ТолькоУказаниеСчетов Тогда
			Если Не ЗначениеЗаполнено(Запись.Организация) И НастройкиРаздела.СвойстваОрганизации.Используется Тогда
				Текст = НСтр("ru = 'Поле ""Организация"" не заполнено';
							|en = '""Company"" is required'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, Параметры.Ключ, "Запись.Организация", "Запись.Организация", Отказ);
				Возврат;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Запись.АналитикаУчета) И НастройкиАналитикиУчета.Используется И НастройкиАналитикиУчета.ПредставлениеПустого = Неопределено Тогда
				Текст = НСтр("ru = 'Поле ""%1"" не заполнено';
							|en = 'Field %1 is required'");
				Текст = СтрШаблон(Текст, НастройкиАналитикиУчета.Заголовок);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, Параметры.Ключ, "Запись.АналитикаУчета", "Запись.АналитикаУчета", Отказ);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Для каждого ЭлементНастройки Из НастройкиРаздела.ЭлементыНастройки Цикл
			ТипЭлемента = НастройкаСчетовУчетаКлиентСервер.ПрефиксЭлементаНастройки(ЭлементНастройки.Значение);
			ИмяЭлемента = СтрЗаменить(ЭлементНастройки.Значение, ТипЭлемента + "_", "");
			Если ТипЭлемента = "Субконто" И ЭлементНастройки.Пометка Тогда
				ИмяРеквизитаСчета = НастройкаСчетовУчетаКлиентСервер.ИмяРеквизитаНаФорме(КэшДанныхМеханизмов.НастройкаСчетовУчета, Раздел, ИмяЭлемента);
				ЭтоСчетПрочиеДоходыРасходы = БухгалтерскийУчетВызовСервераПовтИсп.ЭтоСчетПрочиеДоходы(ЭтотОбъект[ИмяРеквизитаСчета])
					ИЛИ БухгалтерскийУчетВызовСервераПовтИсп.ЭтоСчетПрочиеРасходы(ЭтотОбъект[ИмяРеквизитаСчета]);
				ИмяРеквизитаСубконто = НастройкаСчетовУчетаКлиентСервер.ИмяРеквизитаНаФорме(
						КэшДанныхМеханизмов.НастройкаСчетовУчета, Раздел, ИмяЭлемента, ТипЭлемента);
				Если ЭтоСчетПрочиеДоходыРасходы И Не ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизитаСубконто]) Тогда
					ТекстОшибки = НСтр("ru = 'Поле ""%1"" не заполнено';
										|en = 'Field %1 is required'");
					ТекстОшибки = СтрШаблон(ТекстОшибки, ЭлементНастройки.Представление);
					ИмяЭлементаНаФорме = НастройкаСчетовУчетаКлиентСервер.ИмяЭлементаНаФорме(
						КэшДанныхМеханизмов.НастройкаСчетовУчета, Раздел, ИмяЭлемента, ТипЭлемента);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Параметры.Ключ, ИмяЭлементаНаФорме, , Отказ);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		Отказ = Истина;
		Модифицированность = Ложь;
		
		Настройка = КэшДанныхМеханизмов.НастройкаСчетовУчета;
		Если ТолькоУказаниеСчетов Тогда
			СтруктураВозврата = Новый Структура;
		Иначе
			СтруктураВозврата = НастройкаСчетовУчетаКлиентСервер.ИнициализироватьСтруктуруИзмеренийРегистра();
			ЗаполнитьЗначенияСвойств(СтруктураВозврата, Запись);
			// Дополним структура реквизитами аналитики:
			Для каждого РеквизитАналитики Из Настройка.РеквизитыАналитики Цикл
				Если НастройкаСчетовУчетаКлиентСервер.ЭтоНеРеквизитАналитики(РеквизитАналитики.Ключ) Тогда
					Продолжить;
				КонецЕсли;
				СтруктураВозврата.Вставить(РеквизитАналитики.Ключ, РеквизитАналитики.Значение);
			КонецЦикла;
		КонецЕсли;
		Для каждого НастройкаРаздела Из Настройка.НастройкиРазделов Цикл
			НастройкаСчетовУчетаКлиентСервер.ЗаполнитьСчетаУчетаНастройкамиРаздела(НастройкаРаздела.Ключ, СтруктураВозврата, Настройка, ЭтотОбъект);
		КонецЦикла;
		
		Закрыть(СтруктураВозврата);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьВыборРазделовУчета" Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОграничиватьВыборУказаннымиЗначениями", Истина);
		ПараметрыФормы.Вставить("ОписаниеТипов", Новый ОписаниеТипов("Строка"));
		ПараметрыФормы.Вставить("ЗначенияДляВыбора", КэшДанныхМеханизмов.НастройкаСчетовУчета.СписокРазделовУчета);
		ПараметрыФормы.Вставить("Представление", НСтр("ru = 'Разделы учета для вывода';
														|en = 'Accounting sections to display'"));
		СписокОтмеченных = Новый СписокЗначений;
		СписокОтмеченных.ЗагрузитьЗначения(ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(ПараметрыФормы.ЗначенияДляВыбора));
		ПараметрыФормы.Вставить("Отмеченные", СписокОтмеченных);
		ОповещениеОЗавершенииОтметки = Новый ОписаниеОповещения("УстановитьРазделыУчета", ЭтотОбъект);
		ОткрытьФорму("ОбщаяФорма.ВводЗначенийСпискомСФлажками", ПараметрыФормы, ЭтотОбъект, ЭтотОбъект.УникальныйИдентификатор,,, ОповещениеОЗавершенииОтметки);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_ПриИзмененииСчетаУчета(Элемент)
	
	НастройкаСчетовУчетаКлиентСервер.УстановитьСвойстваЭлементовНастройкиСчетовУчета(ЭтотОбъект, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НастройкаСчетовУчетаКлиент.НачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УточнитьПараметрыНастройкиСчетовДляТекущейФормы(ПараметрыНастройки)
	
	ПараметрыНастройки.ПрефиксЭлементовФормы = "";
	ПараметрыНастройки.ИмяГруппыНастроекСчетовУчета = "ГруппаСчетовУчета";
	ПараметрыНастройки.ПрефиксПутиКДанным = "";
	ПараметрыНастройки.ПрефиксПутиКДаннымРеквизитов = "Реквизит_";
	ПараметрыНастройки.РедактированиеВСписке = Ложь;
	ПараметрыНастройки.РазбитьПоРазделамЭлементы = ПараметрыНастройки.СписокРазделовУчета.Количество() > 1;
	ПараметрыНастройки.Вставить("МенятьОбщие");
	ПараметрыНастройки.СоздаватьВСлучаеОтсутствия = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПереопределитьФормуПоАналитикеУчета()
	
	ПараметрыНастройкиСчетовУчета = КэшДанныхМеханизмов.НастройкаСчетовУчета;
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запись.АналитикаУчета);
	МенеджерОбъекта.ЗаполнитьСоответствиеРеквизитовНастройкиСчетовУчета(ПараметрыНастройкиСчетовУчета.ПутиКРеквизитамАналитики);
	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРазделыУчета(СписокРазделовУчета, ДополнительныеПараметры = Неопределено) Экспорт

	Если СписокРазделовУчета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КэшДанныхМеханизмов.НастройкаСчетовУчета.СписокРазделовУчета = СписокРазделовУчета;
	РазделыУчетаСтрокой = Новый ФорматированнаяСтрока(НастройкаСчетовУчетаКлиентСервер.ЗаголовокПоРазделамУчета(КэшДанныхМеханизмов.НастройкаСчетовУчета.СписокРазделовУчета),,,, "ОткрытьВыборРазделовУчета");
	НастройкаСчетовУчетаКлиентСервер.УстановитьВидимостьРаздела(ЭтотОбъект, КэшДанныхМеханизмов.НастройкаСчетовУчета.СписокРазделовУчета);
	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаУчетаПриИзменении(Элемент)
	
	ПереопределитьФормуПоАналитикеУчета();
	Раздел = НастройкаСчетовУчетаКлиентСервер.РазделУчетаПоНастройкам(КэшДанныхМеханизмов.НастройкаСчетовУчета);
	НастройкаСчетовУчетаКлиентСервер.УстановитьСвойстваИзмеренийНаФорме(ЭтотОбъект, Раздел);
	НастройкаСчетовУчетаКлиентСервер.УстановитьСвойстваЭлементовНастройкиСчетовУчета(ЭтотОбъект, Истина);
	
КонецПроцедуры

#КонецОбласти
