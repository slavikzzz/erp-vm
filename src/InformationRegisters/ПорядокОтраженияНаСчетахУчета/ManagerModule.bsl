#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записывает значения счетов учета по заданным измерениям.
//
//	Параметры:
//		СтруктураИзмерений - Структура - измерения регистра, по которым производится запись, в случае записи счетов учета
//			по НСИ (ГФУ номенклатуры, кассы и т.д.) заполняется лишь "АналитикаУчета".
//			см. НастройкаСчетовУчетаКлиентСервер.ИнициализироватьСтруктуруИзмеренийРегистра();
//		СтруктураСчетов - Структура - все записываемые счета, структура со следующими ключами и значениями:
//			* Ключ - Строка - Имя настройки счета учета (идентично имени счета в перечислении ВидыСчетовРегл),
//					см. СписокСчетовУчетаПоРазделуУчета();
//			* Значение - ПланСчетов.Хозрасчетный - значение счета;
//		Отказ - Булево - признак успешной записи.
//
Процедура СохранитьЗначенияСчетовУчета(СтруктураИзмерений, СтруктураСчетов, Отказ = Ложь, Загрузка = Ложь) Экспорт
	
	Если СтруктураИзмерений.МестоУчета <> Неопределено И СтруктураИзмерений.МестоУчета.Пустая() Тогда
		СтруктураИзмерений.МестоУчета = Неопределено;
	КонецЕсли;
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") И СтруктураИзмерений.Организация.Пустая()
		И СтруктураИзмерений.МестоУчета <> Неопределено Тогда
		СтруктураИзмерений.Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(СтруктураИзмерений.Организация);
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		
		БлокировкаНастройкиСчетовУчета = Новый БлокировкаДанных;
		
		ЭлементБлокировки = БлокировкаНастройкиСчетовУчета.Добавить("РегистрСведений.ПорядокОтраженияНаСчетахУчета");
		ЭлементБлокировки.Режим = ?(Загрузка, РежимБлокировкиДанных.Исключительный, РежимБлокировкиДанных.Разделяемый);
		Для каждого ЭлементИзмерения Из СтруктураИзмерений Цикл
			ЭлементБлокировки.УстановитьЗначение(ЭлементИзмерения.Ключ, ЭлементИзмерения.Значение);
		КонецЦикла;
		
		БлокировкаНастройкиСчетовУчета.Заблокировать();
		
		Если СтруктураСчетов.Количество() = 0 Тогда

			ПорядокОтраженияСчетов = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СоздатьНаборЗаписей();
			
			Для каждого ЭлементИзмерения Из СтруктураИзмерений Цикл
				ПорядокОтраженияСчетов.Отбор[ЭлементИзмерения.Ключ].Установить(ЭлементИзмерения.Значение);
			КонецЦикла;
			
			ПорядокОтраженияСчетов.Записать();
		КонецЕсли;
		
		Для каждого Счет Из СтруктураСчетов Цикл
			
			Если СтрНачинаетсяС(Счет.Ключ, "Субконто_") ИЛИ СтрНачинаетсяС(Счет.Ключ, "ДопПоле_") Тогда
				Продолжить;
			КонецЕсли;
			
			ПорядокОтраженияСчетов = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СоздатьНаборЗаписей();
			Если Загрузка Тогда
				ПорядокОтраженияСчетов.ОбменДанными.Загрузка = Истина;
			КонецЕсли;
			
			Для каждого ЭлементИзмерения Из СтруктураИзмерений Цикл
				ПорядокОтраженияСчетов.Отбор[ЭлементИзмерения.Ключ].Установить(ЭлементИзмерения.Значение);
			КонецЦикла;
			
			ИмяСчета = Счет.Ключ;
			Долгосрочный = Ложь;
			Если Не СтруктураИзмерений.Свойство("Долгосрочный", Долгосрочный) 
				Или Не Долгосрочный Тогда
				Долгосрочный = СтрНачинаетсяС(Счет.Ключ, "СчетУчетаДолгосрочный_");
				ПорядокОтраженияСчетов.Отбор["Долгосрочный"].Установить(Долгосрочный);
				ИмяСчета = СтрЗаменить(ИмяСчета, "Долгосрочный", "");
			КонецЕсли;
			ИмяСчета = СтрЗаменить(ИмяСчета, "СчетУчета_", "");
			ЗаписываемыйВидСчета = Перечисления.ВидыСчетовРеглУчета[ИмяСчета];
			ПорядокОтраженияСчетов.Отбор["ВидСчета"].Установить(ЗаписываемыйВидСчета);
			ИспользуютсяМалоценныеТМЦ = НастройкаСчетовУчетаКлиентСервер.ИспользуютсяМалоценныеТМЦ(ИмяСчета)
				И СтруктураСчетов.Свойство("ДопПоле_ОтноситсяКМалоценнымТМЦ");
			
			Если Не Счет.Значение.Пустая() ИЛИ ИспользуютсяМалоценныеТМЦ И СтруктураСчетов["ДопПоле_ОтноситсяКМалоценнымТМЦ"] Тогда
				
				НоваяЗаписьСчета = ПорядокОтраженияСчетов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗаписьСчета, СтруктураИзмерений);
				НоваяЗаписьСчета.ВидСчета = ЗаписываемыйВидСчета;
				НоваяЗаписьСчета.СчетУчета = Счет.Значение;
				НоваяЗаписьСчета.Долгосрочный = Долгосрочный;
				Если НастройкаСчетовУчетаКлиентСервер.СчетИспользуетСубконто(ИмяСчета) И СтруктураСчетов.Свойство("Субконто_"+ИмяСчета) Тогда
					НоваяЗаписьСчета.Субконто = СтруктураСчетов["Субконто_"+ИмяСчета];
				КонецЕсли;
				Если ИспользуютсяМалоценныеТМЦ Тогда
					НоваяЗаписьСчета.ОтноситсяКМалоценнымТМЦ = СтруктураСчетов["ДопПоле_ОтноситсяКМалоценнымТМЦ"];
				КонецЕсли;
				
			КонецЕсли;
			
			ПорядокОтраженияСчетов.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ИмяСобытия = НСтр("ru = 'Запись порядка отражения на счетах учета';
							|en = 'Save procedure of recording on GL accounts'", ОбщегоНазначения.КодОсновногоЯзыка());
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, Метаданные.РегистрыСведений.ПорядокОтраженияНаСчетахУчета, , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Отказ = Истина;
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Возвращает значения счетов учета для НСИ (ГФУ номенклатуры, кассы и т.д.).
//
//	Параметры:
//		АналитикаУчета - ОпределяемыйТип.НастройкаСчетовУчетаАналитикаУчета - НСИ настройки счетов учета;
//		СчетаУчета - Массив - массив имен настроек счетов учета (идентично имени счета в перечислении ВидыСчетовРегл),
//			  см. СписокСчетовУчетаПоРазделуУчета(). Если не заполнен - заполняется всеми доступными счетами для данной НСИ;
//
//	Возвращаемое значение:
//		Структура - структура со следующими ключами и значениями:
//			* Ключ - Строка - Имя настройки счета учета (идентично имени счета в перечислении ВидыСчетовРегл),
//					см. СписокСчетовУчетаПоРазделуУчета() с префиксом "СчетУчета_", так же может содержать
//					имя доп. настройки счета учета, см. ЭлементыНастройкиСчетовУчетаПоРазделуУчета() с префиксом "Субконто_" или "ДопПоле_";
//			* Значение - ПланСчетов.Хозрасчетный - если в качестве ключа указан счет учета,
//					- ЛюбаяСсылка - если в качестве ключа указано субконто.
//
Функция СтруктураЗначенийПоАналитикеУчета(АналитикаУчета, СчетаУчета = Неопределено) Экспорт
	
	Если СчетаУчета = Неопределено Тогда
		
		РазделыУчета = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.РазделыУчетаПоАналитикеУчета(АналитикаУчета);
		ПараметрыНастройкиСчетовУчета = НастройкаСчетовУчетаСервер.ПараметрыНастройкиСчетовУчета(РазделыУчета);
		НастройкиРазделов = ПараметрыНастройкиСчетовУчета.НастройкиРазделов;
		СчетаУчета = Новый Массив;
		
		Для каждого НастройкаРаздела Из НастройкиРазделов Цикл
			СчетаРаздела = ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(НастройкаРаздела.ЭлементыНастройки);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаУчета, СчетаРаздела, Истина);
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = СоставитьДинамическийТекстЗапросаПолученияСчетовУчета(СчетаУчета);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеВыборкиПереопределяемый",
		"ПорядокОтраженияНаСчетахУчета.Организация = &Организация И ПорядокОтраженияНаСчетахУчета.АналитикаУчета = &АналитикаУчета И ПорядокОтраженияНаСчетахУчета.МестоУчета = &МестоУчета");
	Запрос.УстановитьПараметр("АналитикаУчета", АналитикаУчета);
	Запрос.УстановитьПараметр("Организация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("МестоУчета", Неопределено);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураВозврата = Новый Структура;
	СтруктураИзмерений = НастройкаСчетовУчетаКлиентСервер.ИнициализироватьСтруктуруИзмеренийРегистра();
	Для каждого Колонка Из РезультатЗапроса.Колонки Цикл
		Если НЕ СтруктураИзмерений.Свойство(Колонка.Имя) Тогда
			СтруктураВозврата.Вставить(Колонка.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, Выборка);
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Добавляет временную таблицу с данными по счетам учета с учетом настроек исключений.
//
//	Параметры:
//		ВременныеТаблицы - МенеджерВременныхТаблиц - менеджер временных таблиц, куда необходимо добавить таблицу с данными настроек счетов учета.
//			должен содержать таблицу в параметре "ИмяИсходнойВременнойТаблицы";
//		СчетаУчета - Массив, Строка - массив строк имен счетов учета, или строка имен, разделенных запятыми.
//			* Значение - Строка - Имя настройки счета учета (идентично имени счета в перечислении ВидыСчетовРегл,
//					см. СписокСчетовУчетаПоРазделуУчета();
//		ИмяИсходнойВременнойТаблицы - Строка - имя временной таблицы, откуда необходимо брать информацию по измерениям,
//			должна содержать следующие поля:
//				* Организация - СправочникСсылка.Организации - организация для которой необходимо получить значение настройки счетов учета;
//				* АналитикаУчета - ОпределяемыйТип.НастройкаСчетовУчетаАналитикаУчета - НСИ для которой необходимо получить значение настройки счетов учета;
//				* МестоУчета - ОпределяемыйТип.НастройкаСчетовУчетаМестоУчета - место учета для которого необходимо получить значение настройки счетов учета;
//		ИмяТаблицыРезультата - Строка - Имя временной таблицы, куда необходимо поместить результат. Получается добавлением к ВТ ИмяИсходнойВременнойТаблицы
//			счетов учета с именами полей вида "СчетУчета_%ИмяВидаСчетаУчета%".
//
Процедура ДобавитьВременнуюТаблицуПорядкаОтраженияСчетовУчета(ВременныеТаблицы, СчетаУчета, ИмяИсходнойВременнойТаблицы = "ИсходнаяТаблица", ИмяТаблицыРезультата = "ПорядокОтраженияНаСчетахУчета") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	Запрос.Текст = ТекстТаблицыПорядкаОтраженияСчетовУчета(СчетаУчета, ИмяИсходнойВременнойТаблицы, ИмяТаблицыРезультата);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Возвращает текст формирования временной таблицы с данными по счетам учета с учетом настроек исключений.
//
//	Параметры:
//		СчетаУчета - Массив, Строка - массив строк имен счетов учета, или строка имен, разделенных запятыми.
//			* Значение - Строка - Имя настройки счета учета (идентично имени счета в перечислении ВидыСчетовРегл,
//					см. СписокСчетовУчетаПоРазделуУчета();
//		ИмяИсходнойВременнойТаблицы - Строка - имя временной таблицы, откуда необходимо брать информацию по измерениям,
//			должна содержать следующие поля:
//				* Организация - СправочникСсылка.Организации - организация для которой необходимо получить значение настройки счетов учета;
//				* АналитикаУчета - ОпределяемыйТип.НастройкаСчетовУчетаАналитикаУчета - НСИ для которой необходимо получить значение настройки счетов учета;
//				* МестоУчета - ОпределяемыйТип.НастройкаСчетовУчетаМестоУчета - место учета для которого необходимо получить значение настройки счетов учета;
//		ИмяТаблицыРезультата - Строка - Имя временной таблицы, куда необходимо поместить результат. Получается добавлением к ВТ ИмяИсходнойВременнойТаблицы
//			счетов учета с именами полей вида "СчетУчета_%ИмяВидаСчетаУчета%".
//
//	Возвращаемое значение:
//		Строка - текст запроса для встраивания в основной текст запроса.
//
Функция ТекстТаблицыПорядкаОтраженияСчетовУчета(СчетаУчета, ИмяИсходнойВременнойТаблицы = "ИсходнаяТаблица", ИмяТаблицыРезультата = "ПорядокОтраженияНаСчетахУчета") Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИсходныеДанные.Организация,
	|	ИсходныеДанные.АналитикаУчета,
	|	ИсходныеДанные.МестоУчета,
	|	&ПоляПереопределяемый
	|ПОМЕСТИТЬ ИмяВременнойТаблицыПереопределяемый
	|ИЗ
	|	ИмяИсходнойВременнойТаблицыПереопределяемый КАК ИсходныеДанные
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Перечисление.ВидыСчетовРеглУчета КАК ВидыСчетовРеглУчета
	|	ПО 
	|		ВидыСчетовРеглУчета.Ссылка В (&ВидыСчетов)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПорядокОтраженияНаСчетахУчетаПереопределяемый КАК ПорядокОтраженияНаСчетахУчетаПереопределяемый
	|	ПО
	|		ПорядокОтраженияНаСчетахУчетаПереопределяемый.ВидСчета = ВидыСчетовРеглУчета.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсходныеДанные.Организация,
	|	ИсходныеДанные.АналитикаУчета,
	|	ИсходныеДанные.МестоУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИсходныеДанные.Организация,
	|	ИсходныеДанные.АналитикаУчета,
	|	ИсходныеДанные.МестоУчета";
	
	ШаблонПоля = "МАКСИМУМ(ВЫБОР
	|		КОГДА ВидыСчетовРеглУчета.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.%1)
	|			ТОГДА ПорядокОтраженияНаСчетахУчетаПереопределяемый.%2
	|		ИНАЧЕ %3
	|	КОНЕЦ) КАК %2_%1";
	
	МассивТекстовПолей = Новый Массив;
	МассивТекстовВидовСчетов = Новый Массив;
	
	Если ТипЗнч(СчетаУчета) = Тип("Строка") Тогда
		СчетаУчета = СтрРазделить(СчетаУчета, ",");
	КонецЕсли;
	Для каждого СчетУчета Из СчетаУчета Цикл
		ТипЭлементаНастройки = НастройкаСчетовУчетаКлиентСервер.ЗначениеУмолчанияПоТипуЭлемента("СчетУчета");
		ТекстСчета = СтрШаблон(ШаблонПоля, СчетУчета, "СчетУчета", ТипЭлементаНастройки);
		МассивТекстовПолей.Добавить(ТекстСчета);
		
		Если НастройкаСчетовУчетаКлиентСервер.СчетИспользуетСубконто(СчетУчета) Тогда
			ТипЭлементаНастройки = НастройкаСчетовУчетаКлиентСервер.ЗначениеУмолчанияПоТипуЭлемента("Субконто");
			ТекстСубконто = СтрШаблон(ШаблонПоля, СчетУчета, "Субконто", ТипЭлементаНастройки);
			МассивТекстовПолей.Добавить(ТекстСубконто);
		КонецЕсли;
		
		МассивТекстовВидовСчетов.Добавить(СтрШаблон("ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.%1)", СчетУчета));
		
	КонецЦикла;
	
	ТекстСчетовУчета = СтрСоединить(МассивТекстовПолей, ","+Символы.ПС+Символы.Таб);
	ТекстВидовСчетов = СтрСоединить(МассивТекстовВидовСчетов, ","+Символы.ПС+Символы.Таб);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляПереопределяемый", ТекстСчетовУчета);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВидыСчетов", ТекстВидовСчетов);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВременнойТаблицыПереопределяемый", ИмяТаблицыРезультата);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяИсходнойВременнойТаблицыПереопределяемый", ИмяИсходнойВременнойТаблицы);
	
	#Область ПереопределениеТекстаЗапросаВЗависимостиОтРазделов
	РазделыУчета = Новый Массив;
	Для каждого СчетУчета Из СчетаУчета Цикл
		РазделыУчета.Добавить(НастройкаСчетовУчетаКлиентСервер.РазделУчетаПоИмениСчета(СчетУчета));
	КонецЦикла;
	РазделыУчета = ОбщегоНазначенияКлиентСервер.СвернутьМассив(РазделыУчета);
	ПутиКИзмерениям = НастройкаСчетовУчетаКлиентСервер.ИнициализироватьСтруктуруИзмеренийРегистра();
	ПутиКИзмерениям.Организация = "ИсходныеДанные.Организация";
	ПутиКИзмерениям.АналитикаУчета = "ИсходныеДанные.АналитикаУчета";
	ПутиКИзмерениям.МестоУчета = "ИсходныеДанные.МестоУчета";
	ПереопределитьТекстЗапросаПоРазделамУчета(ТекстЗапроса, РазделыУчета, ПутиКИзмерениям);
	#КонецОбласти
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Переопределяет обращение к временной таблице "ПорядокОтраженияНаСчетахУчетаПереопределяемый" на обращение к регистру сведений, с учетом иерархии настроек.
//
//	Параметры:
//		ТекстЗапроса - Строка - текст запроса, в котором встречается обращение к таблице которую необходимо переопределить.
//			Условия:
//			-	в тексте запроса должно быть только одно обращение к таблице "ПорядокОтраженияНаСчетахУчетаПереопределяемый", в противном случае текст необходимо разделить;
//			-	в тексте запроса допускается отбор по виду счета только на равенство, например: "ПорядокОтраженияНаСчетахУчетаПереопределяемый.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы)".
//			-	в тексте запроса должны быть перечислены все измерения регистра сведений настроек счетов, обращения к измерениям должно находиться справа, например:
//					"И ПорядокОтраженияНаСчетахУчетаПереопределяемый.Организация = ПсевдонимТаблицыСвязи.ИмяПоляОрганизация".
//
Процедура ПереопределитьВТекстеЗапросаПорядокОтраженияСчетаУчета(ТекстЗапроса) Экспорт
	
	ПозицияОпределенияПорядкаОтраженияВЗапросе = СтрНайти(ТекстЗапроса, "ПорядокОтраженияНаСчетахУчетаПереопределяемый КАК ПорядокОтраженияНаСчетахУчетаПереопределяемый");
	Если ПозицияОпределенияПорядкаОтраженияВЗапросе = 0 Тогда
		// В тексте запроса нет обращений к настройкам порядка отражения счетов, не переопределяем текст запроса.
		Возврат;
	КонецЕсли;
	
	ЗначениеВидаСчета = ЗначениеРавенстваИзмеренияПорядкаОтражения(ТекстЗапроса, "ВидСчета", ПозицияОпределенияПорядкаОтраженияВЗапросе);
	Если ЗначениеВидаСчета = Неопределено И СтрНачинаетсяС(ЗначениеВидаСчета, "ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.") Тогда
		// Не нашли регламентируемое обращение к виду счета, не переопределяем текст запроса.
		Возврат;
	КонецЕсли;
	
	ИмяВидаСчета = СтрЗаменить(ЗначениеВидаСчета, "ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.", "");
	ИмяВидаСчета = СтрЗаменить(ИмяВидаСчета, ")", "");
	
	РазделУчета = НастройкаСчетовУчетаКлиентСервер.РазделУчетаПоИмениСчета(ИмяВидаСчета);
	Если РазделУчета = Неопределено Тогда
		// Счет учета является не настраиваемым, не переопределяем текст запроса.
		Возврат;
	КонецЕсли;
	
	ПутиКИзмерениям = НастройкаСчетовУчетаКлиентСервер.ИнициализироватьСтруктуруИзмеренийРегистра();
	ПутиКИзмерениям.Организация = ЗначениеРавенстваИзмеренияПорядкаОтражения(ТекстЗапроса, "Организация", ПозицияОпределенияПорядкаОтраженияВЗапросе);
	ПутиКИзмерениям.АналитикаУчета = ЗначениеРавенстваИзмеренияПорядкаОтражения(ТекстЗапроса, "АналитикаУчета", ПозицияОпределенияПорядкаОтраженияВЗапросе);
	ПутиКИзмерениям.МестоУчета = ЗначениеРавенстваИзмеренияПорядкаОтражения(ТекстЗапроса, "МестоУчета", ПозицияОпределенияПорядкаОтраженияВЗапросе);
	ПутиКИзмерениям.Долгосрочный = ЗначениеРавенстваИзмеренияПорядкаОтражения(ТекстЗапроса, "Долгосрочный", ПозицияОпределенияПорядкаОтраженияВЗапросе);
	Если ПутиКИзмерениям.Долгосрочный = Неопределено Тогда 
		ПутиКИзмерениям.Удалить("Долгосрочный");
	КонецЕсли;
	
	// Проверим регламентируемое обращение к измерениям в запросе, в случае ошибки - не переопределяем текст запроса:
	Для каждого Измерение Из ПутиКИзмерениям Цикл
		Если Измерение.Значение = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	РазделыУчета = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РазделУчета);
	
	// Заменим в запросе обращение к переопределяемой таблице настроек обращением на основании которого будет переопределяться запрос по разделам учета
	Если ПутиКИзмерениям.Свойство("Долгосрочный") Тогда 
		ПозицияОкончанияОбращенияКПереопределениюПорядкаОтражения = СтрНайти(ТекстЗапроса, Символы.ПС, , ПозицияОпределенияПорядкаОтраженияВЗапросе, 6);
	Иначе
		ПозицияОкончанияОбращенияКПереопределениюПорядкаОтражения = СтрНайти(ТекстЗапроса, Символы.ПС, , ПозицияОпределенияПорядкаОтраженияВЗапросе, 5);
	КонецЕсли;
	ТекстОбращенияКПереопределениюПорядкаОтражения = Сред(ТекстЗапроса, ПозицияОпределенияПорядкаОтраженияВЗапросе, ПозицияОкончанияОбращенияКПереопределениюПорядкаОтражения - ПозицияОпределенияПорядкаОтраженияВЗапросе);
	ТекстЗамены = "Перечисление.ВидыСчетовРеглУчета КАК ВидыСчетовРеглУчета
	|	ПО 
	|		ВидыСчетовРеглУчета.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.%1)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПорядокОтраженияНаСчетахУчетаПереопределяемый КАК ПорядокОтраженияНаСчетахУчетаПереопределяемый
	|	ПО
	|		ПорядокОтраженияНаСчетахУчетаПереопределяемый.ВидСчета = ВидыСчетовРеглУчета.Ссылка";
	ТекстЗамены = СтрШаблон(ТекстЗамены, ИмяВидаСчета);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстОбращенияКПереопределениюПорядкаОтражения, ТекстЗамены);
	
	ПереопределитьТекстЗапросаПоРазделамУчета(ТекстЗапроса, РазделыУчета, ПутиКИзмерениям);
	
КонецПроцедуры

// Возвращает значения счетов учета и субконто для раздела учета и измерений регистра. Значение возвращается с учетом приоритетов:
// 	Если не будет найдено соответствие по переданным измерениям, включая организацию и место учета, будет подставлено значение для
// 	измерений только с учетом Аналитики и организации, если и в этом случае не будет найдено значений, подставится значение только по аналитике.
//
//	Параметры:
//		РазделУчета - Строка - имя раздела учета, см. СписокРазделовСчетовУчета();
//		СтруктураИзмерений - Структура - измерения регистра, по которым производится запись, в случае записи счетов учета
//			по НСИ (ГФУ номенклатуры, кассы и т.д.) заполняется лишь "АналитикаУчета".
//			см. НастройкаСчетовУчетаКлиентСервер.ИнициализироватьСтруктуруИзмеренийРегистра();
//		СчетаУчета - Массив, Строка - массив имен настроек счетов учета (идентично имени счета в перечислении ВидыСчетовРегл),
//			  см. СписокСчетовУчетаПоРазделуУчета(). Если передана строка - будет выполнено преобразование в массив с разделителем ",".
//			  Если не передано - заполняется всеми доступными счетами для данному разделу учета; 
//
//	Возвращаемое значение:
//		Структура - структура со следующими ключами и значениями:
//			* Ключ - Строка - Имя настройки счета учета (идентично имени счета в перечислении ВидыСчетовРегл),
//					см. СписокСчетовУчетаПоРазделуУчета(), так же может содержать
//					имя доп. настройки счета учета, см. ЭлементыНастройкиСчетовУчетаПоРазделуУчета() с префиксом "Субконто_" или "ДопПоле_";
//			* Значение - ПланСчетов.Хозрасчетный - если в качестве ключа указан счет учета,
//					- ЛюбаяСсылка - если в качестве ключа указано субконто.
//
Функция НастройкаОтраженияРаздела(РазделУчета, СтруктураИзмерений, СчетаУчета = Неопределено) Экспорт
	
	Если СчетаУчета = Неопределено Тогда
		СчетаУчета = Новый Массив;
		ПараметрыНастройкиСчетовУчета = НастройкаСчетовУчетаСервер.ПараметрыНастройкиСчетовУчета(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РазделУчета));
		НастройкаРаздела = ПараметрыНастройкиСчетовУчета.НастройкиРазделов.Получить(0);
		СчетаУчета = ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(НастройкаРаздела.ЭлементыНастройки);
	ИначеЕсли ТипЗнч(СчетаУчета) = Тип("Строка") Тогда
		СчетаУчета = СтрРазделить(СчетаУчета, ",");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", СтруктураИзмерений.Организация);
	Запрос.УстановитьПараметр("АналитикаУчета", СтруктураИзмерений.АналитикаУчета);
	Запрос.УстановитьПараметр("МестоУчета", СтруктураИзмерений.МестоУчета);
	ВидыСчетов = Новый Массив;
	Для каждого ИмяСчета Из СчетаУчета Цикл
		ТипЭлемента = НастройкаСчетовУчетаКлиентСервер.ПрефиксЭлементаНастройки(ИмяСчета);
		Если ТипЭлемента = "СчетУчета" Тогда
			ВидыСчетов.Добавить(Перечисления.ВидыСчетовРеглУчета[ИмяСчета]);
		КонецЕсли;
	КонецЦикла;
	Запрос.УстановитьПараметр("ВидыСчетов", ВидыСчетов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(НастройкиПоМестуУчета.Организация, ЕСТЬNULL(НастройкиПоОрганизации.Организация, ЕСТЬNULL(НастройкиПоАналитике.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)))) КАК Организация,
	|	ЕСТЬNULL(НастройкиПоМестуУчета.АналитикаУчета, ЕСТЬNULL(НастройкиПоОрганизации.АналитикаУчета, ЕСТЬNULL(НастройкиПоАналитике.АналитикаУчета, НЕОПРЕДЕЛЕНО))) КАК АналитикаУчета,
	|	ЕСТЬNULL(НастройкиПоМестуУчета.МестоУчета, ЕСТЬNULL(НастройкиПоОрганизации.МестоУчета, ЕСТЬNULL(НастройкиПоАналитике.МестоУчета, НЕОПРЕДЕЛЕНО))) КАК МестоУчета,
	|	ВидыСчетов.Ссылка КАК ВидСчета,
	|	ЕСТЬNULL(НастройкиПоМестуУчета.СчетУчета, ЕСТЬNULL(НастройкиПоОрганизации.СчетУчета, ЕСТЬNULL(НастройкиПоАналитике.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)))) КАК СчетУчета,
	|	ЕСТЬNULL(НастройкиПоМестуУчета.Субконто, ЕСТЬNULL(НастройкиПоОрганизации.Субконто, ЕСТЬNULL(НастройкиПоАналитике.Субконто, НЕОПРЕДЕЛЕНО))) КАК Субконто
	|ИЗ
	|	Перечисление.ВидыСчетовРеглУчета КАК ВидыСчетов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоМестуУчета
	|	ПО 
	|		НастройкиПоМестуУчета.ВидСчета = ВидыСчетов.Ссылка
	|		И НастройкиПоМестуУчета.Организация = &Организация
	|		И НастройкиПоМестуУчета.АналитикаУчета = &АналитикаУчета
	|		И НастройкиПоМестуУчета.МестоУчета = &МестоУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоОрганизации
	|	ПО 
	|		НастройкиПоОрганизации.ВидСчета = ВидыСчетов.Ссылка
	|		И НастройкиПоОрганизации.Организация = &Организация
	|		И НастройкиПоОрганизации.АналитикаУчета = &АналитикаУчета
	|		И НастройкиПоОрганизации.МестоУчета = НЕОПРЕДЕЛЕНО
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоАналитике
	|	ПО 
	|		НастройкиПоАналитике.ВидСчета = ВидыСчетов.Ссылка
	|		И НастройкиПоАналитике.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И НастройкиПоАналитике.АналитикаУчета = &АналитикаУчета
	|		И НастройкиПоАналитике.МестоУчета = НЕОПРЕДЕЛЕНО
	|ГДЕ
	|	ВидыСчетов.Ссылка В (&ВидыСчетов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктураВозврата = Новый Структура;
	Пока Выборка.Следующий() Цикл
		ИмяВидаСчета = XMLСтрока(Выборка.ВидСчета);
		СтруктураВозврата.Вставить(ИмяВидаСчета, Выборка.СчетУчета);
		Если НастройкаСчетовУчетаКлиентСервер.СчетИспользуетСубконто(ИмяВидаСчета) Тогда
			СтруктураВозврата.Вставить("Субконто_"+ИмяВидаСчета, Выборка.Субконто);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Возвращает массив разделов учета, которые могут применяться для переденной Аналитики (НСИ - ГФУ номенклатуры, кассы и т.д.).
//
//	Параметры:
//		АналитикаУчета - ОпределяемыйТип.НастройкаСчетовУчетаАналитикаУчета - НСИ настройки счетов учета;
//		АнализироватьАналитику - Булево - признак выполнения запроса к реквизитам аналитики, если для данной аналитики используется
//			сразу несколько разделов, для получения конкретного значения.
//
//	Возвращаемое значение:
//		Массив - Строка - массив имен разделов настроек счетов учета, см. СписокРазделовСчетовУчета().
// 
Функция РазделыУчетаПоАналитикеУчета(АналитикаУчета, АнализироватьАналитику = Ложь) Экспорт
	
	СоответствиеТиповАналитикУчетаРазделамУчета = Новый Соответствие;

	СоответствиеТиповАналитикУчетаРазделамУчета.Вставить(Тип("СправочникСсылка.ГруппыФинансовогоУчетаДоходовРасходов"), "Доходы,Расходы");
	СоответствиеТиповАналитикУчетаРазделамУчета.Вставить(Тип("СправочникСсылка.БанковскиеСчетаОрганизаций"), "ДенежныеСредства");
	СоответствиеТиповАналитикУчетаРазделамУчета.Вставить(Тип("СправочникСсылка.Кассы"), "ДенежныеСредства");
	СоответствиеТиповАналитикУчетаРазделамУчета.Вставить(Тип("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры"), "НоменклатураСобственная,НоменклатураПереданная,НоменклатураПринятая");
	СоответствиеТиповАналитикУчетаРазделамУчета.Вставить(Тип("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов"), "РасчетыСПартнерами");
	СоответствиеТиповАналитикУчетаРазделамУчета.Вставить(Тип("СправочникСсылка.Резервы"), "Резервы");
	СоответствиеТиповАналитикУчетаРазделамУчета.Вставить(Тип("СправочникСсылка.КатегорииЭксплуатации"), "ТМЦВЭксплуатации");
	СоответствиеТиповАналитикУчетаРазделамУчета.Вставить(Тип("СправочникСсылка.ГруппыФинансовогоУчетаВнеоборотныхАктивов"), "ВнеоборотныеАктивы");
	СоответствиеТиповАналитикУчетаРазделамУчета.Вставить(Тип("СправочникСсылка.ВидыПодарочныхСертификатов"), "ПодарочныеСертификаты");
	СоответствиеТиповАналитикУчетаРазделамУчета.Вставить(Тип("СправочникСсылка.ГруппыАналитическогоУчетаНоменклатуры"), "Производство");
	СоответствиеТиповАналитикУчетаРазделамУчета.Вставить(Тип("СправочникСсылка.ДоговорыЭквайринга"), "Эквайринг");
	
	РазделыУчета = СоответствиеТиповАналитикУчетаРазделамУчета.Получить(ТипЗнч(АналитикаУчета));
	
	Если РазделыУчета = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если РазделыУчета = "РасчетыСПартнерами" Тогда
		Если АнализироватьАналитику Тогда
			РазделыУчета = РазделыУчетаПоВидуРасчетов(АналитикаУчета);
		Иначе
			РазделыУчета = СтрСоединить(Справочники.ГруппыФинансовогоУчетаРасчетов.ВидыРасчетов(), ",");
		КонецЕсли;
	КонецЕсли;
	
	Если РазделыУчета = "Доходы,Расходы" И АнализироватьАналитику Тогда
		РеквизитыАналитикиУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(АналитикаУчета, РазделыУчета);
		Если РеквизитыАналитикиУчета.Доходы Тогда
			РазделыУчета = "Доходы";
		ИначеЕсли РеквизитыАналитикиУчета.Расходы Тогда
			РазделыУчета = "Расходы";
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтрРазделить(РазделыУчета, ",");
	
КонецФункции

// Возвращает список счетов учета для переданного раздела.
//
//	Параметры:
//		РазделУчета - Строка - имя раздела учета, см. СписокРазделовСчетовУчета();
//
//	Возвращаемое значение:
//		СписокЗначений - список значений со следующими элементами:
//			Значение - Строка - Имя настройки счета учета (идентично имени счета в перечислении ВидыСчетовРегл);
//			Представление - Строка - представление этой настройки в интерфейсе;
//			Пометка - Булево - Признак применения этой настройки, как правило зависит от ФО, если установлен в ЛОЖЬ, такая
//				настройка будет скрываться с формы.
//
Функция СписокСчетовУчетаПоРазделуУчета(РазделУчета) Экспорт
	
	СчетаУчетаРегл = Новый СписокЗначений;
	
	ИспользуетсяЕНВД = ПолучитьФункциональнуюОпцию("ИспользуетсяЕНВД");
	
	КомиссияМеждуОрганизациями = ?(ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями"),
		ОбщегоНазначенияУТПовтИсп.ИспользуетсяСпособПередачиТоваровМеждуОрганизациями(
			Перечисления.СпособыПередачиТоваров.ПередачаНаКомиссию), ЛОЖЬ);
	
	Если РазделУчета = "Расходы" Или РазделУчета = "ДоходыРасходы" Тогда
		СчетаУчетаРегл.Добавить("Расходы", НСтр("ru = 'Счет учета';
												|en = 'Ledger account'"), Истина);
		Если ИспользуетсяЕНВД Тогда
			СчетаУчетаРегл.Добавить("СписаниеРасходовОСНО", НСтр("ru = 'Счет списания (ОСНО)';
																|en = 'Write-off account (GTS)'"), Истина);
			СчетаУчетаРегл.Добавить("СписаниеРасходовЕНВД", НСтр("ru = 'Счет списания (ЕНВД)';
																|en = 'Write-off account (UTII)'"), Истина);
		Иначе
			СчетаУчетаРегл.Добавить("СписаниеРасходовОСНО", НСтр("ru = 'Счет списания';
																|en = 'Write-off account'"), Истина);
			СчетаУчетаРегл.Добавить("СписаниеРасходовЕНВД", НСтр("ru = 'Счет списания (ЕНВД)';
																|en = 'Write-off account (UTII)'"), Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Если РазделУчета = "Доходы" Или РазделУчета = "ДоходыРасходы" Тогда
		СчетаУчетаРегл.Добавить("Доходы", НСтр("ru = 'Счет учета';
												|en = 'Ledger account'"), Истина);
	КонецЕсли;
	
	Если РазделУчета = "ДенежныеСредства" Тогда
		СчетаУчетаРегл.Добавить("ДенежныеСредства", НСтр("ru = 'Счет учета';
														|en = 'Ledger account'"), Истина);
	КонецЕсли;
	
	Если РазделУчета = "НоменклатураСобственная" Или РазделУчета = "Номенклатура" Тогда
		
		СчетаУчетаРегл.Добавить("НаСкладе", НСтр("ru = 'На складе';
												|en = 'In warehouse'"), Истина);
		Заголовок = ?(ИспользуетсяЕНВД, НСтр("ru = 'Выручки (ОСНО)';
											|en = 'Revenue (GTS)'"), НСтр("ru = 'Выручки';
																			|en = 'Revenue'"));
		СчетаУчетаРегл.Добавить("ВыручкаОтПродаж", Заголовок, Истина);
		СчетаУчетаРегл.Добавить("ВыручкаОтПродажЕНВД", НСтр("ru = 'Выручки (ЕНВД)';
															|en = 'Revenue (UTII)'"), ИспользуетсяЕНВД);
		СчетаУчетаРегл.Добавить("ВыручкаРаздельныйНУ", НСтр("ru = 'Выручки (варианты НУ)';
															|en = 'Revenues (TA options)'"),
			РаздельныйУчетПоНалогуНаПрибыльПовтИсп.ИспользоваласьНастройкаРаздельныйУчет());
		Заголовок = ?(ИспользуетсяЕНВД, НСтр("ru = 'Себестоимости (ОСНО)';
											|en = 'Cost (GTS)'"), НСтр("ru = 'Себестоимости';
																					|en = 'Cost'"));
		СчетаУчетаРегл.Добавить("СебестоимостьПродаж", Заголовок, Истина);
		СчетаУчетаРегл.Добавить("СебестоимостьПродажЕНВД", НСтр("ru = 'Себестоимости (ЕНВД)';
																|en = 'Costs (UTII)'"), ИспользуетсяЕНВД);
		СчетаУчетаРегл.Добавить("НДСПриПродаже", НСтр("ru = 'При продаже';
														|en = 'On sale'"), Истина);
		СчетаУчетаРегл.Добавить("РеализацияБезПереходаПраваСобственности", НСтр("ru = 'Отгруженных';
																				|en = 'Shipped'"), ПолучитьФункциональнуюОпцию("ИспользоватьОтгрузкуБезПереходаПраваСобственности"));
		СчетаУчетаРегл.Добавить("НДСПриОтгрузкеБезПереходаПраваСобственности", НСтр("ru = 'При отгрузке';
																					|en = 'On shipment'"), ПолучитьФункциональнуюОпцию("ИспользоватьОтгрузкуБезПереходаПраваСобственности"));
		СчетаУчетаРегл.Добавить("РезервыПодОбесценениеТМЦ", НСтр("ru = 'Резервы под обесценение ТМЦ';
																|en = 'Provisions for impairment of inventory'"), ПолучитьФункциональнуюОпцию("ФормироватьРезервыПодОбесценениеЗапасов"));
	КонецЕсли;
	
	Если РазделУчета = "НоменклатураПереданная" Или РазделУчета = "Номенклатура" Тогда
			
		ИспользоватьПроизводствоНаСторонеСтарое = Ложь;
		//++ Устарело_Переработка24
		ИспользоватьПроизводствоНаСторонеСтарое = ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне");
		//-- Устарело_Переработка24
		
		СчетаУчетаРегл.Добавить("ЗатратыНаПриобретениеТМЦ", НСтр("ru = 'Затраты на приобретение';
																|en = 'Acquisition costs'"), ПолучитьФункциональнуюОпцию("ИспользоватьТоварыВПутиОтПоставщиков"));
		СчетаУчетаРегл.Добавить("ПередачаВПереработку", НСтр("ru = 'В переработке';
															|en = 'In processing'"),
			ИспользоватьПроизводствоНаСторонеСтарое Или ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5"));
		ИспользоватьНоменклатуруПереданную = ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах")
			ИЛИ КомиссияМеждуОрганизациями
			ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи");
		СчетаУчетаРегл.Добавить("НоменклатураПереданная", НСтр("ru = 'Счет учета';
																|en = 'Ledger account'"), ИспользоватьНоменклатуруПереданную);
		ИспользоватьРезервыНоменклатурыПереданной = ИспользоватьНоменклатуруПереданную
			ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьТоварыВПутиОтПоставщиков")
			ИЛИ ИспользоватьПроизводствоНаСторонеСтарое;
		СчетаУчетаРегл.Добавить("РезервыПодОбесценениеПереданные", НСтр("ru = 'Резервы под обесценение ТМЦ';
																		|en = 'Provisions for impairment of inventory'"), ПолучитьФункциональнуюОпцию("ФормироватьРезервыПодОбесценениеЗапасов") И ИспользоватьРезервыНоменклатурыПереданной);
	
	КонецЕсли;
	
	Если РазделУчета = "НоменклатураПринятая" Или РазделУчета = "Номенклатура" Тогда
		
		ИспользоватьПроизводствоИзДавальческогоСырья2_4 = Ложь;
		ИспользоватьПроизводствоИзДавальческогоСырья2_5 = Ложь;
		
		//++ НЕ УТКА

		//++ Устарело_Переработка24
		ИспользоватьПроизводствоИзДавальческогоСырья2_4 = ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоИзДавальческогоСырья");
		//-- Устарело_Переработка24
		ИспользоватьПроизводствоИзДавальческогоСырья2_5 = ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоИзДавальческогоСырья2_5");
		
		//-- НЕ УТКА
		
		ИспользоватьПроизводствоИзДавальческогоСырья = ИспользоватьПроизводствоИзДавальческогоСырья2_4 ИЛИ ИспользоватьПроизводствоИзДавальческогоСырья2_5;
		
		СчетаУчетаРегл.Добавить("ТМЦНаСкладах", НСтр("ru = 'На складе';
													|en = 'In warehouse'"), ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранениеВПроцессеЗакупки") ИЛИ ИспользоватьПроизводствоИзДавальческогоСырья);
		СчетаУчетаРегл.Добавить("ТМЦВПроизводстве", НСтр("ru = 'В производстве';
														|en = 'In production'"), ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранениеВПроцессеЗакупки") ИЛИ ИспользоватьПроизводствоИзДавальческогоСырья);
		СчетаУчетаРегл.Добавить("ТМЦПотребленныеВПроизводстве", НСтр("ru = 'Потребленные в производстве';
																	|en = 'Consumed in production'"), ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранениеВПроцессеЗакупки") ИЛИ ИспользоватьПроизводствоИзДавальческогоСырья);
		СчетаУчетаРегл.Добавить("ТМЦУХранителей", НСтр("ru = 'У хранителей';
														|en = 'On custodians'"), ПолучитьФункциональнуюОпцию("ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи") ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5"));
		СчетаУчетаРегл.Добавить("ТМЦКСписанию", НСтр("ru = 'К списанию';
													|en = 'To write off'"), ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранениеВПроцессеЗакупки") ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5"));
		СчетаУчетаРегл.Добавить("МатериалыПринятыеВПереработку", НСтр("ru = 'На складе';
																		|en = 'In warehouse'"), ИспользоватьПроизводствоИзДавальческогоСырья);
		СчетаУчетаРегл.Добавить("МатериалыПринятыеВПереработкуВПроизводстве", НСтр("ru = 'В производстве';
																					|en = 'In production'"), ИспользоватьПроизводствоИзДавальческогоСырья);
		СчетаУчетаРегл.Добавить("МатериалыПотребленныеВПроизводстве", НСтр("ru = 'Потребленные в производстве';
																			|en = 'Consumed in production'"), ИспользоватьПроизводствоИзДавальческогоСырья);
		СчетаУчетаРегл.Добавить("МатериалыПринятыеВПереработкуУХранителей", НСтр("ru = 'У хранителей';
																				|en = 'On custodians'"), ИспользоватьПроизводствоИзДавальческогоСырья2_5 И ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5"));
		СчетаУчетаРегл.Добавить("МатериалыПринятыеВПереработкуКСписанию", НСтр("ru = 'К списанию';
																				|en = 'To write off'"), ИспользоватьПроизводствоИзДавальческогоСырья2_5 И ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5"));
		СчетаУчетаРегл.Добавить("ТоварыНаСкладе", НСтр("ru = 'На складе';
														|en = 'In warehouse'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках"));
		СчетаУчетаРегл.Добавить("ТоварыПереданныеНаКомиссию", НСтр("ru = 'Переданные на комиссию';
																	|en = 'Transferred to consignee'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках"));
	КонецЕсли;
	
	Если РазделУчета = "РасчетыСКлиентами" Тогда
		СчетаУчетаРегл.Добавить("РасчетыСКлиентами", НСтр("ru = 'Долг';
															|en = 'Debt'"), Истина);
		СчетаУчетаРегл.Добавить("АвансыПолученные", НСтр("ru = 'Авансы';
														|en = 'AdvancePayments'"), Истина);
		СчетаУчетаРегл.Добавить("РасчетыСКлиентамиТара", НСтр("ru = 'Тара';
																|en = 'Package'"), ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару"));
		СчетаУчетаРегл.Добавить("ПереносДолгосрочнойЗадолженности", НСтр("ru = 'Перенос долгосрочной задолженности';
																		|en = 'Long-term debt transfer'"), ПолучитьФункциональнуюОпцию("ВыделятьДолгосрочныеАктивыОбязательства"));
		СчетаУчетаРегл.Добавить("РезервыПоСомнительнымДолгам", НСтр("ru = 'Резервы';
																	|en = 'Reserves'"), Истина);
		СчетаУчетаРегл.Добавить("НДСАвансыПолученные", НСтр("ru = 'НДС с авансов';
															|en = 'VAT on prepayments'"), Истина);
	КонецЕсли;
	
	Если РазделУчета = "РасчетыСПоставщиками" Тогда
		СчетаУчетаРегл.Добавить("РасчетыСПоставщиками", НСтр("ru = 'Долг';
															|en = 'Debt'"), Истина);
		СчетаУчетаРегл.Добавить("АвансыВыданные", НСтр("ru = 'Авансы';
														|en = 'AdvancePayments'"), Истина);
		СчетаУчетаРегл.Добавить("ПроцентыПоДисконтированию", НСтр("ru = 'Проценты по дисконтированию';
																	|en = 'Discounting interest'"), ПолучитьФункциональнуюОпцию("УчетДисконтированнойКредиторскойЗадолженностиПоставщикам"));
		СчетаУчетаРегл.Добавить("РасчетыСПоставщикамиТара", НСтр("ru = 'Тара';
																|en = 'Package'"), ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару"));
		СчетаУчетаРегл.Добавить("НеотфактурованныеПоставки", НСтр("ru = 'Неотфактурованные поставки';
																	|en = 'Goods received not invoiced'"), ПолучитьФункциональнуюОпцию("ИспользоватьНеотфактурованныеПоставки"));
		СчетаУчетаРегл.Добавить("ПереносДолгосрочнойЗадолженности", НСтр("ru = 'Перенос долгосрочной задолженности';
																		|en = 'Long-term debt transfer'"), ПолучитьФункциональнуюОпцию("ВыделятьДолгосрочныеАктивыОбязательства"));
		СчетаУчетаРегл.Добавить("РезервыПоСомнительнымДолгам", НСтр("ru = 'Резервы';
																	|en = 'Reserves'"), Истина);
		СчетаУчетаРегл.Добавить("НДСАвансыВыданные", НСтр("ru = 'НДС с авансов';
															|en = 'VAT on prepayments'"), Истина);
	КонецЕсли;
	
	Если РазделУчета = "РасчетыСКомиссионерами" Тогда
		СчетаУчетаРегл.Добавить("РасчетыСКлиентами", НСтр("ru = 'Долг';
															|en = 'Debt'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах") ИЛИ КомиссияМеждуОрганизациями);
		СчетаУчетаРегл.Добавить("АвансыПолученные", НСтр("ru = 'Авансы';
														|en = 'AdvancePayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах") ИЛИ КомиссияМеждуОрганизациями);
		СчетаУчетаРегл.Добавить("РасчетыСПоставщиками", НСтр("ru = 'Долг';
															|en = 'Debt'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах") ИЛИ КомиссияМеждуОрганизациями);
		СчетаУчетаРегл.Добавить("АвансыВыданные", НСтр("ru = 'Авансы';
														|en = 'AdvancePayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах") ИЛИ КомиссияМеждуОрганизациями);
		СчетаУчетаРегл.Добавить("РезервыПоСомнительнымДолгам", НСтр("ru = 'Резервы';
																	|en = 'Reserves'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах") ИЛИ КомиссияМеждуОрганизациями);
		СчетаУчетаРегл.Добавить("НДСАвансыПолученные", НСтр("ru = 'НДС с авансов';
															|en = 'VAT on prepayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах") ИЛИ КомиссияМеждуОрганизациями);
		СчетаУчетаРегл.Добавить("НДСАвансыВыданные", НСтр("ru = 'НДС с авансов';
															|en = 'VAT on prepayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах") ИЛИ КомиссияМеждуОрганизациями);
	КонецЕсли;
	
	Если РазделУчета = "РасчетыСКомитентами" Тогда
		СчетаУчетаРегл.Добавить("РасчетыСКлиентами", НСтр("ru = 'Долг';
															|en = 'Debt'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках") ИЛИ КомиссияМеждуОрганизациями);
		СчетаУчетаРегл.Добавить("АвансыПолученные", НСтр("ru = 'Авансы';
														|en = 'AdvancePayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках") ИЛИ КомиссияМеждуОрганизациями);
		СчетаУчетаРегл.Добавить("РасчетыСПоставщиками", НСтр("ru = 'Долг';
															|en = 'Debt'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках") ИЛИ КомиссияМеждуОрганизациями);
		СчетаУчетаРегл.Добавить("АвансыВыданные", НСтр("ru = 'Авансы';
														|en = 'AdvancePayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках") ИЛИ КомиссияМеждуОрганизациями);
		СчетаУчетаРегл.Добавить("ТоварыКомитентовКОформлениюПоПродаже", НСтр("ru = 'По продаже';
																			|en = 'By sale'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках") ИЛИ КомиссияМеждуОрганизациями);
		СчетаУчетаРегл.Добавить("РезервыПоСомнительнымДолгам", НСтр("ru = 'Резервы';
																	|en = 'Reserves'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках") ИЛИ КомиссияМеждуОрганизациями);
		СчетаУчетаРегл.Добавить("НДСАвансыПолученные", НСтр("ru = 'НДС с авансов';
															|en = 'VAT on prepayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках") ИЛИ КомиссияМеждуОрганизациями);
		СчетаУчетаРегл.Добавить("НДСАвансыВыданные", НСтр("ru = 'НДС с авансов';
															|en = 'VAT on prepayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках") ИЛИ КомиссияМеждуОрганизациями);
	КонецЕсли;
	
	Если РазделУчета = "РасчетыСКомитентамиПоЗакупке" Тогда
		СчетаУчетаРегл.Добавить("РасчетыСКлиентами", НСтр("ru = 'Долг';
															|en = 'Debt'"), ПолучитьФункциональнуюОпцию("ИспользоватьОказаниеАгентскихУслугПриЗакупке"));
		СчетаУчетаРегл.Добавить("АвансыПолученные", НСтр("ru = 'Авансы';
														|en = 'AdvancePayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьОказаниеАгентскихУслугПриЗакупке"));
		СчетаУчетаРегл.Добавить("ТоварыКомитентовКОформлениюПоЗакупке", НСтр("ru = 'По закупке';
																			|en = 'By purchase'"), ПолучитьФункциональнуюОпцию("ИспользоватьОказаниеАгентскихУслугПриЗакупке"));
		СчетаУчетаРегл.Добавить("РезервыПоСомнительнымДолгам", НСтр("ru = 'Резервы';
																	|en = 'Reserves'"), ПолучитьФункциональнуюОпцию("ИспользоватьОказаниеАгентскихУслугПриЗакупке"));
		СчетаУчетаРегл.Добавить("НДСАвансыВыданные", НСтр("ru = 'НДС с авансов';
															|en = 'VAT on prepayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьОказаниеАгентскихУслугПриЗакупке"));
	КонецЕсли;
	
	Если РазделУчета = "РасчетыСПереработчиками" Тогда
		СчетаУчетаРегл.Добавить("РасчетыСПоставщиками", НСтр("ru = 'Долг';
															|en = 'Debt'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5"));
		СчетаУчетаРегл.Добавить("АвансыВыданные", НСтр("ru = 'Авансы';
														|en = 'AdvancePayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5"));
		СчетаУчетаРегл.Добавить("РасчетыСКлиентами", НСтр("ru = 'Долг';
															|en = 'Debt'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5"));
		СчетаУчетаРегл.Добавить("АвансыПолученные", НСтр("ru = 'Авансы';
														|en = 'AdvancePayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5"));
		СчетаУчетаРегл.Добавить("РезервыПоСомнительнымДолгам", НСтр("ru = 'Резервы';
																	|en = 'Reserves'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5"));
		СчетаУчетаРегл.Добавить("НДСАвансыПолученные", НСтр("ru = 'НДС с авансов';
															|en = 'VAT on prepayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5"));
		СчетаУчетаРегл.Добавить("НДСАвансыВыданные", НСтр("ru = 'НДС с авансов';
															|en = 'VAT on prepayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5"));
	КонецЕсли;
	
	//++ НЕ УТКА
	Если РазделУчета = "РасчетыСДавальцами" Тогда
		СчетаУчетаРегл.Добавить("РасчетыСПоставщиками", НСтр("ru = 'Долг';
															|en = 'Debt'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоИзДавальческогоСырья2_5"));
		СчетаУчетаРегл.Добавить("АвансыВыданные", НСтр("ru = 'Авансы';
														|en = 'AdvancePayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоИзДавальческогоСырья2_5"));
		СчетаУчетаРегл.Добавить("РасчетыСКлиентами", НСтр("ru = 'Долг';
															|en = 'Debt'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоИзДавальческогоСырья2_5"));
		СчетаУчетаРегл.Добавить("АвансыПолученные", НСтр("ru = 'Авансы';
														|en = 'AdvancePayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоИзДавальческогоСырья2_5"));
		СчетаУчетаРегл.Добавить("НДСАвансыПолученные", НСтр("ru = 'НДС с авансов';
															|en = 'VAT on prepayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоИзДавальческогоСырья2_5"));
		СчетаУчетаРегл.Добавить("НДСАвансыВыданные", НСтр("ru = 'НДС с авансов';
															|en = 'VAT on prepayments'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоИзДавальческогоСырья2_5"));
	КонецЕсли;
	//-- НЕ УТКА
	
	Если РазделУчета = "РасчетыСКредиторами" Тогда
		СчетаУчетаРегл.Добавить("РасчетыСКредиторамиОсновнойДолг", НСтр("ru = 'Долг';
																		|en = 'Debt'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
		СчетаУчетаРегл.Добавить("РасчетыСКредиторамиПроценты", НСтр("ru = 'Проценты';
																	|en = 'Interest'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
		СчетаУчетаРегл.Добавить("РасчетыСКредиторамиКомиссия", НСтр("ru = 'Комиссия';
																	|en = 'Fee'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
	КонецЕсли;
	
	Если РазделУчета = "РасчетыСДебиторами" Тогда
		СчетаУчетаРегл.Добавить("РасчетыСДебиторамиОсновнойДолг", НСтр("ru = 'Долг';
																		|en = 'Debt'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
		СчетаУчетаРегл.Добавить("РасчетыСДебиторамиПроценты", НСтр("ru = 'Проценты';
																	|en = 'Interest'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
		СчетаУчетаРегл.Добавить("РасчетыСДебиторамиКомиссия", НСтр("ru = 'Комиссия';
																	|en = 'Fee'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
		СчетаУчетаРегл.Добавить("РезервыПоСомнительнымДолгам", НСтр("ru = 'Резервы';
																	|en = 'Reserves'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
	КонецЕсли;
	
	Если РазделУчета = "РасчетыСАрендодателями" Тогда
		СчетаУчетаРегл.Добавить("АрендныеОбязательства", НСтр("ru = 'Арендные обязательства';
																|en = 'Rental obligations'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
		СчетаУчетаРегл.Добавить("УслугаПоАренде", НСтр("ru = 'Услуги по аренде';
														|en = 'Rental services'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
		СчетаУчетаРегл.Добавить("ОбеспечительныйПлатеж", НСтр("ru = 'Обеспечительный платеж';
																|en = 'Security deposit'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
		СчетаУчетаРегл.Добавить("ВыкупнаяСтоимость", НСтр("ru = 'Выкупная стоимость';
															|en = 'Buyout value'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
		СчетаУчетаРегл.Добавить("НачислениеПроцентовПоАренде", НСтр("ru = 'Проценты по аренде';
																	|en = 'Rental interest'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
		СчетаУчетаРегл.Добавить("НДСПриАренде", НСтр("ru = 'НДС';
													|en = 'VAT'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
		СчетаУчетаРегл.Добавить("РезервыПоСомнительнымДолгам", НСтр("ru = 'Резервы';
																	|en = 'Reserves'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
		СчетаУчетаРегл.Добавить("НДСАвансыВыданные", НСтр("ru = 'НДС с авансов';
															|en = 'VAT on prepayments'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
	КонецЕсли;
	
	Если РазделУчета = "РасчетыСПартнерами" Тогда
		СчетаУчетаРегл.Добавить("РасчетыСКлиентами", НСтр("ru = 'Долг';
															|en = 'Debt'"), Истина);
		СчетаУчетаРегл.Добавить("АвансыПолученные", НСтр("ru = 'Авансы';
														|en = 'AdvancePayments'"), Истина);
		СчетаУчетаРегл.Добавить("РасчетыСПоставщиками", НСтр("ru = 'Долг';
															|en = 'Debt'"), Истина);
		СчетаУчетаРегл.Добавить("АвансыВыданные", НСтр("ru = 'Авансы';
														|en = 'AdvancePayments'"), Истина);
		СчетаУчетаРегл.Добавить("ПроцентыПоДисконтированию", НСтр("ru = 'Проценты по дисконтированию';
																	|en = 'Discounting interest'"), ПолучитьФункциональнуюОпцию("УчетДисконтированнойКредиторскойЗадолженностиПоставщикам"));
		СчетаУчетаРегл.Добавить("РасчетыСКлиентамиТара", НСтр("ru = 'Тара';
																|en = 'Package'"), ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару"));
		СчетаУчетаРегл.Добавить("РасчетыСПоставщикамиТара", НСтр("ru = 'Тара';
																|en = 'Package'"), ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару"));
		СчетаУчетаРегл.Добавить("НеотфактурованныеПоставки", НСтр("ru = 'Неотфакурованные поставки';
																	|en = 'Unbilled deliveries'"), ПолучитьФункциональнуюОпцию("ИспользоватьНеотфактурованныеПоставки"));
		СчетаУчетаРегл.Добавить("ПереносДолгосрочнойЗадолженности", НСтр("ru = 'Перенос долгосрочной задолженности';
																		|en = 'Long-term debt transfer'"), ПолучитьФункциональнуюОпцию("ВыделятьДолгосрочныеАктивыОбязательства"));
		СчетаУчетаРегл.Добавить("РасчетыСКредиторамиОсновнойДолг", НСтр("ru = 'Долг';
																		|en = 'Debt'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
		СчетаУчетаРегл.Добавить("РасчетыСКредиторамиПроценты", НСтр("ru = 'Проценты';
																	|en = 'Interest'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
		СчетаУчетаРегл.Добавить("РасчетыСКредиторамиКомиссия", НСтр("ru = 'Комиссия';
																	|en = 'Fee'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
		СчетаУчетаРегл.Добавить("РасчетыСДебиторамиОсновнойДолг", НСтр("ru = 'Долг';
																		|en = 'Debt'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
		СчетаУчетаРегл.Добавить("РасчетыСДебиторамиПроценты", НСтр("ru = 'Проценты';
																	|en = 'Interest'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
		СчетаУчетаРегл.Добавить("РасчетыСДебиторамиКомиссия", НСтр("ru = 'Комиссия';
																	|en = 'Fee'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
		СчетаУчетаРегл.Добавить("ТоварыКомитентовКОформлениюПоПродаже", НСтр("ru = 'По продаже';
																			|en = 'By sale'"), ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках") ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями"));
		СчетаУчетаРегл.Добавить("ТоварыКомитентовКОформлениюПоЗакупке", НСтр("ru = 'По закупке';
																			|en = 'By purchase'"), ПолучитьФункциональнуюОпцию("ИспользоватьОказаниеАгентскихУслугПриЗакупке"));
		СчетаУчетаРегл.Добавить("АрендныеОбязательства", НСтр("ru = 'Арендные обязательства';
																|en = 'Rental obligations'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
		СчетаУчетаРегл.Добавить("УслугаПоАренде", НСтр("ru = 'Услуги по аренде';
														|en = 'Rental services'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
		СчетаУчетаРегл.Добавить("ОбеспечительныйПлатеж", НСтр("ru = 'Обеспечительный платеж';
																|en = 'Security deposit'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
		СчетаУчетаРегл.Добавить("ВыкупнаяСтоимость", НСтр("ru = 'Выкупная стоимость';
															|en = 'Buyout value'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
		СчетаУчетаРегл.Добавить("НачислениеПроцентовПоАренде", НСтр("ru = 'Проценты по аренде';
																	|en = 'Rental interest'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
		СчетаУчетаРегл.Добавить("НДСПриАренде", НСтр("ru = 'НДС';
													|en = 'VAT'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
		СчетаУчетаРегл.Добавить("РезервыПоСомнительнымДолгам", НСтр("ru = 'Резервы';
																	|en = 'Reserves'"), Истина);
		СчетаУчетаРегл.Добавить("НДСАвансыПолученные", НСтр("ru = 'НДС с авансов';
															|en = 'VAT on prepayments'"), Истина);
		СчетаУчетаРегл.Добавить("НДСАвансыВыданные", НСтр("ru = 'НДС с авансов';
															|en = 'VAT on prepayments'"), Истина);
		СчетаУчетаРегл.Добавить("РасчетыПоБронированию", НСтр("ru = 'Расчеты по покупке билетов у перевозчика';
																|en = 'AR/AP accounting of carrier ticket purchase'"), Истина);
	КонецЕсли;
	
	Если РазделУчета = "Производство" Тогда
		СчетаУчетаРегл.Добавить("Производство", НСтр("ru = 'Счет учета';
													|en = 'Ledger account'"), Истина);
		СчетаУчетаРегл.Добавить("РезервыПодОбесценениеПроизводства", НСтр("ru = 'Счет учета резервов';
																			|en = 'GL account of provisions'"), ПолучитьФункциональнуюОпцию("ФормироватьРезервыПодОбесценениеЗапасов"));
	КонецЕсли;
	
	Если РазделУчета = "Резервы" Тогда
		СчетаУчетаРегл.Добавить("Резервы", НСтр("ru = 'Счет учета';
												|en = 'Ledger account'"), ПолучитьФункциональнуюОпцию("ФормироватьРезервыПредстоящихРасходов"));
		СчетаУчетаРегл.Добавить("ПроцентыПоДисконтированиюРезервов", НСтр("ru = 'Проценты по дисконтированию';
																			|en = 'Discounting interest'"), ПолучитьФункциональнуюОпцию("ФормироватьРезервыПредстоящихРасходов"));
	КонецЕсли;
	
	Если РазделУчета = "ТМЦВЭксплуатации" Тогда
		СчетаУчетаРегл.Добавить("ТМЦВЭксплуатации", НСтр("ru = 'В эксплуатации';
														|en = 'In operation'"), Истина);
		СчетаУчетаРегл.Добавить("ТМЦВЭксплуатацииЗаБалансом", НСтр("ru = 'За балансом';
																	|en = 'Off balance'"), Истина);
	КонецЕсли;
	
	Если РазделУчета = "ВнеоборотныеАктивы" Тогда
		ВНА2_4 = ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4");
		СчетаУчетаРегл.Добавить("СтоимостьВНА", НСтр("ru = 'Стоимость';
													|en = 'Profit'"), ВНА2_4);
		СчетаУчетаРегл.Добавить("АмортизацияВНА", НСтр("ru = 'Амортизация';
														|en = 'Depreciation'"), ВНА2_4);
		СчетаУчетаРегл.Добавить("ОбесценениеВНА", НСтр("ru = 'Обесценение';
														|en = 'Impairment'"), ВНА2_4 И ПолучитьФункциональнуюОпцию("ИспользоватьОбесценениеВНА"));
		СчетаУчетаРегл.Добавить("ВыбытиеВНА", НСтр("ru = 'Выбытие';
													|en = 'Outflow'"), ВНА2_4);
		СчетаУчетаРегл.Добавить("РезервДооценкиВНА", НСтр("ru = 'Резерв дооценки';
															|en = 'Final appraisal reserve'"), ВНА2_4);
		СчетаУчетаРегл.Добавить("СтоимостьВНА_ЦФ", НСтр("ru = 'Стоимость';
														|en = 'Profit'"), ВНА2_4 И ПолучитьФункциональнуюОпцию("ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности"));
		СчетаУчетаРегл.Добавить("АмортизацияВНА_ЦФ", НСтр("ru = 'Амортизация';
															|en = 'Depreciation'"), ВНА2_4 И ПолучитьФункциональнуюОпцию("ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности"));
		СчетаУчетаРегл.Добавить("ЗабалансовыйУчетВНА", НСтр("ru = 'Залоговая стоимость';
															|en = 'Collateral value'"), ВНА2_4);
		СчетаУчетаРегл.Добавить("АрендныеПлатежи", НСтр("ru = 'Арендные платежи';
														|en = 'Rental payments'"), ВНА2_4 И ПолучитьФункциональнуюОпцию("ИспользуетсяПередачаВАрендуСубарендуПоФСБУ25"));
		СчетаУчетаРегл.Добавить("НГЛС", НСтр("ru = 'НГЛС';
											|en = 'Non-guaranteed residual value'"), ВНА2_4 И ПолучитьФункциональнуюОпцию("ИспользуетсяПередачаВАрендуСубарендуПоФСБУ25"));
		СчетаУчетаРегл.Добавить("ПроцентныйДисконт", НСтр("ru = 'Процентный дисконт';
															|en = 'Interest discount'"), ВНА2_4 И ПолучитьФункциональнуюОпцию("ИспользуетсяПередачаВАрендуСубарендуПоФСБУ25"));
	КонецЕсли;
	
	Если РазделУчета = "ПодарочныеСертификаты" Тогда
		СчетаУчетаРегл.Добавить("РасчетыПоПодарочнымСертификатам", НСтр("ru = 'Счет учета';
																		|en = 'Ledger account'"), ПолучитьФункциональнуюОпцию("ИспользоватьПодарочныеСертификаты"));
	КонецЕсли;
	
	Если РазделУчета = "Эквайринг" Тогда
		СчетаУчетаРегл.Добавить("ПродажиПоЭквайрингу", НСтр("ru = 'Счет учета';
															|en = 'Ledger account'"), ПолучитьФункциональнуюОпцию("ИспользоватьОплатуПлатежнымиКартами")
			ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьОнлайнОплаты"));
	КонецЕсли;
	
	Если РазделУчета = "РасчетыПоБронированию" Тогда
		СчетаУчетаРегл.Добавить("РасчетыПоБронированию", НСтр("ru = 'Расчеты по покупке билетов у перевозчика';
																|en = 'AR/AP accounting of carrier ticket purchase'"), Истина);
	КонецЕсли;
	
	Возврат СчетаУчетаРегл;
	
КонецФункции

// Возвращает список элементов настройки счетов учета для переданного раздела.
//
//	Параметры:
//		РазделУчета - Строка - имя раздела учета, см. СписокРазделовСчетовУчета();
//
//	Возвращаемое значение:
//		СписокЗначений - список значений со следующими элементами:
//			Значение - Строка - Имя элемента настройки счета учета (идентично имени счета в перечислении ВидыСчетовРегл),
//				если субконто или ДопПоле - добавляется соответствующий префикс к имени;
//			Представление - Строка - представление этой настройки в интерфейсе;
//			Пометка - Булево - Признак применения этой настройки, как правило зависит от ФО, если установлен в ЛОЖЬ, такая
//				настройка будет скрываться с формы.
//
Функция ЭлементыНастройкиСчетовУчетаПоРазделуУчета(РазделУчета) Экспорт
	
	СчетаУчетаРегл = СписокСчетовУчетаПоРазделуУчета(РазделУчета);
	
	ИспользуетсяЕНВД = ПолучитьФункциональнуюОпцию("ИспользуетсяЕНВД");
	
	Если РазделУчета = "НоменклатураСобственная" Или РазделУчета = "Номенклатура" Тогда
		
		СчетаУчетаРегл.Добавить("ДопПоле_ОтноситсяКМалоценнымТМЦ", НСтр("ru = 'Относится к малоценным ТМЦ';
																		|en = 'Related to low-cost inventory'"),
			ПолучитьФункциональнуюОпцию("ПрименятьСписаниеСтоимостиМалоценныхТМЦНаРасходы"));
		// Первое из субконто не добавляем, а вставляем, чтобы группа субконто примыкала к группе счетов продаж:
		Заголовок = ?(ИспользуетсяЕНВД, НСтр("ru = 'Статья учета выручки (ОСНО)';
											|en = 'Revenue accounting item (GTS)'"), НСтр("ru = 'Статья учета выручки';
																						|en = 'Revenue accounting item'"));
		СчетаУчетаРегл.Вставить(2, "Субконто_ВыручкаОтПродаж", Заголовок, Истина);
		СчетаУчетаРегл.Добавить("Субконто_ВыручкаОтПродажЕНВД", НСтр("ru = 'Статья учета выручки (ЕНВД)';
																	|en = 'Revenue accounting item (UTII)'"), ИспользуетсяЕНВД);
		СчетаУчетаРегл.Добавить("Субконто_ВыручкаРаздельныйНУ", НСтр("ru = 'Статья учета выручки (раздельный НУ)';
																	|en = 'Revenue accounting item (separate TA)'"),
			РаздельныйУчетПоНалогуНаПрибыльПовтИсп.ИспользоваласьНастройкаРаздельныйУчет());
		Заголовок = ?(ИспользуетсяЕНВД, НСтр("ru = 'Статья учета себестоимости (ОСНО)';
											|en = 'Cost accounting item (GTS)'"), НСтр("ru = 'Статья учета себестоимости';
																								|en = 'Cost accounting revenue'"));
		СчетаУчетаРегл.Добавить("Субконто_СебестоимостьПродаж", Заголовок, Истина);
		СчетаУчетаРегл.Добавить("Субконто_СебестоимостьПродажЕНВД", НСтр("ru = 'Статья учета себестоимости (ЕНВД)';
																		|en = 'Cost accounting item (UTII)'"), ИспользуетсяЕНВД);
		СчетаУчетаРегл.Добавить("Субконто_НДСПриПродаже", НСтр("ru = 'Статья учета';
																|en = 'Accounting item'"), Истина);
		
	КонецЕсли;
	
	Возврат СчетаУчетаРегл;
	
КонецФункции

// Возвращает список субконто счетов учета для переданного раздела.
//
//	Параметры:
//		РазделУчета - Строка - имя раздела учета, см. СписокРазделовСчетовУчета();
//
//	Возвращаемое значение:
//		СписокЗначений - список значений со следующими элементами:
//			Значение - Строка - Имя настройки субконто счета учета;
//			Представление - Строка - представление этой настройки в интерфейсе;
//			Пометка - Булево - Признак применения этой настройки, как правило зависит от ФО, если установлен в ЛОЖЬ, такая
//				настройка будет скрываться с формы.
//
Функция СписокСубконтоПоРазделуУчета(РазделУчета) Экспорт
	
	СписокСубконто = Новый СписокЗначений;
	
	ИспользуетсяЕНВД = ПолучитьФункциональнуюОпцию("ИспользуетсяЕНВД");
	
	Если РазделУчета = "НоменклатураСобственная" Или РазделУчета = "Номенклатура" Тогда
		Если ИспользуетсяЕНВД Тогда
			СписокСубконто.Добавить("СтатьяДоходовОСНО", НСтр("ru = 'Статья доходов (ОСНО)';
																|en = 'Income item (GTS)'"), Истина);
			СписокСубконто.Добавить("СтатьяДоходовЕНВД", НСтр("ru = 'Статья доходов (ЕНВД)';
																|en = 'Income item (UTII)'"), Истина);
		Иначе
			СписокСубконто.Добавить("СтатьяДоходовОСНО", НСтр("ru = 'Статья доходов';
																|en = 'Income item'"), Истина);
			СписокСубконто.Добавить("СтатьяДоходовЕНВД", НСтр("ru = 'Статья доходов (ЕНВД)';
																|en = 'Income item (UTII)'"), Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Возврат СписокСубконто;
	
КонецФункции

// Возвращает список разделов учета.
//
//	Возвращаемое значение:
//		СписокЗначений - список значений со следующими элементами:
//			Значение - Строка - Имя настройки раздела учета;
//			Представление - Строка - представление этой настройки в интерфейсе;
//			Пометка - Булево - Признак применения этой настройки, как правило зависит от ФО, если установлен в ЛОЖЬ,
//				все элементы с настройками данного раздела будут скрываться с формы.
//
Функция СписокРазделовСчетовУчета() Экспорт
	
	СписокВозврата = Новый СписокЗначений;
	
	КомиссияМеждуОрганизациями = ?(ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями"),
		ОбщегоНазначенияУТПовтИсп.ИспользуетсяСпособПередачиТоваровМеждуОрганизациями(
			Перечисления.СпособыПередачиТоваров.ПередачаНаКомиссию), ЛОЖЬ);
	
	СписокВозврата.Добавить("НоменклатураСобственная", НСтр("ru = 'номенклатуры';
															|en = 'products'"), Истина);
	ИспользованиеНоменклатурыПереданной =
		ПолучитьФункциональнуюОпцию("ИспользоватьТоварыВПутиОтПоставщиков")
		//++ Устарело_Переработка24
		ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне")
		//-- Устарело_Переработка24
		ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5")
		ИЛИ КомиссияМеждуОрганизациями
		ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах")
		ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи");
	СписокВозврата.Добавить("НоменклатураПереданная", НСтр("ru = 'номенклатуры переданной';
															|en = 'products transferred'"), ИспользованиеНоменклатурыПереданной);
	ИспользованиеНоменклатурыПринятой = ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранениеВПроцессеЗакупки") ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках")
		//++ НЕ УТКА

		//++ Устарело_Переработка24
		ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоИзДавальческогоСырья")
		//-- Устарело_Переработка24
		ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоИзДавальческогоСырья2_5")
		//-- НЕ УТКА
		ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи");
	СписокВозврата.Добавить("НоменклатураПринятая", НСтр("ru = 'номенклатуры принятой';
														|en = 'of products accepted'"), ИспользованиеНоменклатурыПринятой);
	СписокВозврата.Добавить("ТМЦВЭксплуатации", НСтр("ru = 'ТМЦ в эксплуатации';
													|en = 'Inventory in operation'"), Истина);
	СписокВозврата.Добавить("ДенежныеСредства", НСтр("ru = 'денежных средств';
													|en = 'cash'"), Истина);
	СписокВозврата.Добавить("ПодарочныеСертификаты", НСтр("ru = 'подарочных сертификатов';
															|en = 'gift certificates'"), ПолучитьФункциональнуюОпцию("ИспользоватьПодарочныеСертификаты"));
	СписокВозврата.Добавить("РасчетыСКлиентами", НСтр("ru = 'расчетов с клиентами';
														|en = 'settlements with customers'"), Истина);
	СписокВозврата.Добавить("РасчетыСПоставщиками", НСтр("ru = 'расчетов с поставщиками';
														|en = 'settlements with suppliers'"), Истина);
	СписокВозврата.Добавить("РасчетыСКомиссионерами", НСтр("ru = 'расчетов с комиссионерами';
															|en = 'settlements with consignees'"), КомиссияМеждуОрганизациями
		ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах"));
	СписокВозврата.Добавить("РасчетыСКомитентами", НСтр("ru = 'расчетов с комитентами по продаже';
														|en = 'settlements with consignors on sales'"), КомиссияМеждуОрганизациями
		ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках"));
	СписокВозврата.Добавить("РасчетыСКомитентамиПоЗакупке", НСтр("ru = 'расчетов с комитентами по закупке';
																|en = 'settlements with consignors on purchase'"), ПолучитьФункциональнуюОпцию("ИспользоватьОказаниеАгентскихУслугПриЗакупке"));
	СписокВозврата.Добавить("РасчетыСПереработчиками", НСтр("ru = 'расчетов с переработчиками';
															|en = 'subcontractor AR/AP'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5"));
	//++ НЕ УТКА
	СписокВозврата.Добавить("РасчетыСДавальцами", НСтр("ru = 'расчетов с давальцами';
														|en = 'providers AR/AP'"), ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоИзДавальческогоСырья2_5"));
	//-- НЕ УТКА
	СписокВозврата.Добавить("РасчетыСКредиторами", НСтр("ru = 'расчетов с кредиторами';
														|en = 'settlements with creditors'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
	СписокВозврата.Добавить("РасчетыСДебиторами", НСтр("ru = 'расчетов с дебиторами';
														|en = 'settlements with debtors'"), ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов"));
	СписокВозврата.Добавить("РасчетыСАрендодателями", НСтр("ru = 'расчетов по аренде';
															|en = 'lease settlements'"), ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА());
	СписокВозврата.Добавить("РасчетыПоБронированию", НСтр("ru = 'расчетов по бронированию';
															|en = 'booking payments'"), Истина);
	
	СписокВозврата.Добавить("Производство", НСтр("ru = 'производства';
												|en = 'production'"), Истина);
	СписокВозврата.Добавить("ВнеоборотныеАктивы", НСтр("ru = 'внеоборотных активов';
														|en = 'capital assets'"), ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4"));
	СписокВозврата.Добавить("Расходы", НСтр("ru = 'расходов';
											|en = 'expenses'"), Истина);
	СписокВозврата.Добавить("Доходы", НСтр("ru = 'доходов';
											|en = 'income'"), Истина);
	СписокВозврата.Добавить("Резервы", НСтр("ru = 'резервов (оценочных обязательств)';
											|en = 'reserves (estimated liabilities)'"), ПолучитьФункциональнуюОпцию("ФормироватьРезервыПредстоящихРасходов"));
	СписокВозврата.Добавить("Эквайринг", НСтр("ru = 'эквайринга';
												|en = 'acquiring'"), ПолучитьФункциональнуюОпцию("ИспользоватьОплатуПлатежнымиКартами")
		ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьОнлайнОплаты"));
	
	Возврат СписокВозврата;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	ИЛИ Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура НайтиДокументыСоответствующиеНастройкам(ТаблицыНастроек, Дата, ТаблицаДокументов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивТекстовЗапроса = Новый Массив;
	МассивВременныхТаблиц = Новый Массив;
	МассивТекстовЗапросаДокументов = Новый Массив;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК Регистратор,
	|	"""" КАК РазделУчета
	|ПОМЕСТИТЬ ТаблицаДокументов
	|ГДЕ ЛОЖЬ";
	МассивТекстовЗапросаДокументов.Добавить(ТекстЗапроса);
	
	Запрос = Новый Запрос;
	
	ТекстЗапросаИнициализацииТаблицыНастроек =
	"ВЫБРАТЬ
	|	ИсходнаяТаблица.Организация КАК Организация,
	|	ИсходнаяТаблица.АналитикаУчета КАК АналитикаУчета,
	|	ИсходнаяТаблица.МестоУчета КАК МестоУчета
	|
	|ПОМЕСТИТЬ ТаблицаНастроек
	|ИЗ
	|	&ИсходнаяТаблица КАК ИсходнаяТаблица
	|ГДЕ
	|	ИсходнаяТаблица.ИзмененныеДанные <> """" И НЕ ИсходнаяТаблица.ЭтоОбщаяНастройка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	АналитикаУчета,
	|	МестоУчета";
	
	ТекстЗапросаВыборкиДокументов =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокументов.Регистратор КАК Регистратор,
	|	""ПереопределяемыйРазделУчета"" КАК РазделУчета
	|ИЗ
	|	ТаблицаДокументов_ПереопределяемыйРазделУчета КАК ТаблицаДокументов";
	
	Для каждого ЭлементТаблицы Из ТаблицыНастроек Цикл
		
		ТекстЗапроса = ТекстЗапросаИнициализацииТаблицыНастроек;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИсходнаяТаблица", "&ИсходнаяТаблица_" + ЭлементТаблицы.Ключ);
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		МассивВременныхТаблиц.Добавить("ТаблицаНастроек");
		ИсходнаяТаблица = ЭлементТаблицы.Значение.Выгрузить(, "Организация, МестоУчета, АналитикаУчета, ИзмененныеДанные, ЭтоОбщаяНастройка");
		Запрос.УстановитьПараметр("ИсходнаяТаблица_" + ЭлементТаблицы.Ключ, ИсходнаяТаблица);
		Запрос.УстановитьПараметр("ВестиУУ", Константы.ВестиУУНаПланеСчетовХозрасчетный.Получить());
		
		Если ЭлементТаблицы.Ключ = "НоменклатураСобственная" Тогда
			НоменклатураЗаполнитьМассивТекстовЗапросаДокументов(МассивТекстовЗапроса, МассивВременныхТаблиц);
		ИначеЕсли ЭлементТаблицы.Ключ = "НоменклатураПереданная" Тогда
			НоменклатураПереданнаяЗаполнитьМассивТекстовЗапросаДокументов(МассивТекстовЗапроса, МассивВременныхТаблиц);
		ИначеЕсли ЭлементТаблицы.Ключ = "РасчетыСПартнерами" Тогда
			РасчетыСПартнерамиЗаполнитьМассивТекстовЗапросаДокументов(МассивТекстовЗапроса, МассивВременныхТаблиц);
		ИначеЕсли ЭлементТаблицы.Ключ = "ДоходыРасходы" Тогда
			ДоходыРасходыЗаполнитьМассивТекстовЗапросаДокументов(МассивТекстовЗапроса, МассивВременныхТаблиц);
		ИначеЕсли ЭлементТаблицы.Ключ = "Производство" Тогда
			ПроизводствоЗаполнитьМассивТекстовЗапросаДокументов(МассивТекстовЗапроса, МассивВременныхТаблиц);
		ИначеЕсли ЭлементТаблицы.Ключ = "ПодарочныеСертификаты" Тогда
			ПодарочныеСертификатыЗаполнитьМассивТекстовЗапросаДокументов(МассивТекстовЗапроса, МассивВременныхТаблиц);
		ИначеЕсли ЭлементТаблицы.Ключ = "ТМЦВЭксплуатации" Тогда
			ТМЦВЭксплуатацииЗаполнитьМассивТекстовЗапросаДокументов(МассивТекстовЗапроса, МассивВременныхТаблиц);
		Иначе
			Продолжить;
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапросаВыборкиДокументов;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПереопределяемыйРазделУчета", ЭлементТаблицы.Ключ);
		МассивТекстовЗапросаДокументов.Добавить(ТекстЗапроса);
	
		Для каждого ИмяВременнойТаблицы Из МассивВременныхТаблиц Цикл
			МассивТекстовЗапроса.Добавить("УНИЧТОЖИТЬ" + " " + ИмяВременнойТаблицы);
		КонецЦикла;
		МассивВременныхТаблиц.Очистить();
	
	КонецЦикла;
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапросаДокументов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(ИСТИНА));
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокументов.Регистратор КАК Документ,
	|	ТаблицаДокументов.РазделУчета КАК РазделУчета,
	|	ОтражениеДокументовВРеглУчете.ДатаОтражения КАК ДатаОтражения,
	|	ОтражениеДокументовВРеглУчете.Организация КАК Организация
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументовВРеглУчете
	|	ПО
	|		ТаблицаДокументов.Регистратор = ОтражениеДокументовВРеглУчете.Регистратор
	|		И ОтражениеДокументовВРеглУчете.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВРеглУчете)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РазделУчета,
	|	Документ";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос.УстановитьПараметр("ДатаОкончания", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

// Выполняет анализ всех неотраженных операций отражения,
//	ищет для них ненастроенные счета учета и заносит эти данные в регистр ненастроенных счетов учета.
//	
//	Параметры:
//		ПараметрыАнализатора - Структура - Структура, содержащая следующие значения:
//			* МассивОрганизаций - Массив - СправочникСсылка.Организации - отбор по организациям, операции которых будут анализироваться;
//			* РежимАнализа - Строка - строка вида "ПоНеотраженным" -
//					необходимо для того, чтобы анализатор работал только по документам, неотраженным в регл. учете.
//
Процедура ЗаполнитьРегистрТребующихНастройкиНаОснованииАнализаНеотраженныхОпераций(ПараметрыАнализатора) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВременнаяТаблицаДвижений = ВременнаяТаблицаДанныхПоСуществующимОперациям(ПараметрыАнализатора);
	ВременнаяТаблицаДвиженийСоСчетами = ВременнаяТаблицаДвиженийСоСчетами(ПараметрыАнализатора.РазделыУчета, ВременнаяТаблицаДвижений);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременнаяТаблицаДвиженийСоСчетами;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвиженийСоСчетами.Организация,
	|	ТаблицаДвиженийСоСчетами.АналитикаУчета КАК АналитикаУчета,
	|	ТаблицаДвиженийСоСчетами.МестоУчета КАК МестоУчета,
	|	ТаблицаДвиженийСоСчетами.ВидСчета КАК ВидСчета
	|ПОМЕСТИТЬ ВидыСчетовТребующиеНастройки
	|ИЗ
	|	ТаблицаДвиженийСоСчетами КАК ТаблицаДвиженийСоСчетами
	|ГДЕ
	|	ТаблицаДвиженийСоСчетами.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) И ТаблицаДвиженийСоСчетами.Требуется";
	
	Запрос.Выполнить();
	
	ИмяСобытия = НСтр("ru = 'Анализ порядка отражения %1, требующего настройки';
						|en = 'Analysis of recording procedure %1 which requires setting'", ОбщегоНазначения.КодОсновногоЯзыка());
	ИмяСобытия = СтрШаблон(ИмяСобытия, НастройкаСчетовУчетаКлиентСервер.ЗаголовокПоРазделамУчета(ПараметрыАнализатора.РазделыУчета));
	РегистрыСведений.СчетаРеглУчетаТребующиеНастройки.ЗаполнитьЗаписиРегистраПоВидамСчетов(Запрос.МенеджерВременныхТаблиц, ИмяСобытия);
	
КонецПроцедуры

// Выполняет анализ операций отражения, в зависимости от параметров и дополняет исходную таблицу операций
// новыми строками.
//	
//	Параметры:
//		ПараметрыАнализа - Структура - содержит настройки анализатора со следующими свойствами:
//			* РежимАнализа - Строка - принимает значения вида "ПоНеотраженным" и "ЗаПериод". Причем если не задана, значение по умолчанию "ЗаПериод".
//			* КонецПериода - Дата - по эту дату анализируются операции, причем если режим анализа "ПоНеотраженным" не актуальна;
//			* НачалоПериода - Дата - начиная с этой даты анализируются операции, причем если режим анализа "ПоНеотраженным" не актуальна;
//			* МассивОрганизаций - Массив - СправочникСсылка.Организации - отбор по организациям, операции которых будут анализироваться;
//		АдресХранилища - Строка - адрес сохранения результата работы метода (ТаблицаЗначений).
//
Процедура ДополнитьТаблицуНаОснованииАнализаОпераций(ПараметрыАнализа, АдресХранилища) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВременнаяТаблицаДвижений = ВременнаяТаблицаДанныхПоСуществующимОперациям(ПараметрыАнализа);
	 
	ВременнаяТаблицаДвиженийСоСчетами = ВременнаяТаблицаДвиженийСоСчетами(ПараметрыАнализа.РазделыУчета, ВременнаяТаблицаДвижений);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", ПараметрыАнализа.ЗаполняемаяТаблица);
	Запрос.МенеджерВременныхТаблиц = ВременнаяТаблицаДвиженийСоСчетами;
	РазделУчета = ПараметрыАнализа.РазделыУчета.Получить(0);
	Если СтрНачинаетсяС(РазделУчета, "Номенклатура") Тогда
		РазделУчета = "Номенклатура";
	КонецЕсли;
	 
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТекущаяТаблицаСчетовУчета.Организация,
	|	ТекущаяТаблицаСчетовУчета.АналитикаУчета,
	|	ТекущаяТаблицаСчетовУчета.МестоУчета,
	|	ТекущаяТаблицаСчетовУчета.Долгосрочный,
	|	&ПоляРеквизитовПереопределяемый,
	|
	|	&СписокЗначенийСчетовУчетаТекущие,
	|
	|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
	|	ТекущаяТаблицаСчетовУчета.ЭтоОбщаяНастройка,
	|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетов,
	|	ТекущаяТаблицаСчетовУчета.СчетаУчетаПоУмолчанию,
	|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные,
	|	ТекущаяТаблицаСчетовУчета.Удалить,
	|	ТекущаяТаблицаСчетовУчета.КоличествоИсключений,
	|	ТекущаяТаблицаСчетовУчета.КоличествоИсключенийПоОрганизациям
	|
	|ПОМЕСТИТЬ ТекущаяТаблицаСчетовУчета
	|ИЗ
	|	&Таблица КАК ТекущаяТаблицаСчетовУчета;
	|
	|///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТекущаяТаблицаСчетовУчета.Организация,
	|	ТекущаяТаблицаСчетовУчета.АналитикаУчета,
	|	ТекущаяТаблицаСчетовУчета.МестоУчета,
	|	ТекущаяТаблицаСчетовУчета.Долгосрочный,
	|	&ПоляРеквизитовПереопределяемый,
	|
	|	&СписокЗначенийСчетовУчетаТекущие,
	|
	|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
	|	ТекущаяТаблицаСчетовУчета.ЭтоОбщаяНастройка,
	|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетов,
	|	ТекущаяТаблицаСчетовУчета.СчетаУчетаПоУмолчанию,
	|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные,
	|	ТекущаяТаблицаСчетовУчета.Удалить,
	|	ВЫБОР КОГДА ТекущаяТаблицаСчетовУчета.ЭтоОбщаяНастройка ТОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР КОГДА ТаблицаИсключений.МестоУчета = ТекущаяТаблицаСчетовУчета.МестоУчета ТОГДА ТаблицаИсключений.Организация ИНАЧЕ NULL КОНЕЦ) ИНАЧЕ 0 КОНЕЦ КАК КоличествоИсключенийПоОрганизациям,
	|	ВЫБОР КОГДА ТекущаяТаблицаСчетовУчета.ЭтоОбщаяНастройка ТОГДА КОЛИЧЕСТВО(ТаблицаИсключений.Организация) ИНАЧЕ 0 КОНЕЦ КАК КоличествоИсключений
	|ИЗ
	|	ТекущаяТаблицаСчетовУчета КАК ТекущаяТаблицаСчетовУчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаДвиженийСоСчетами КАК ТаблицаДвиженийСоСчетами
	|	ПО
	|		ТекущаяТаблицаСчетовУчета.Организация = ТаблицаДвиженийСоСчетами.Организация
	|		И ТекущаяТаблицаСчетовУчета.АналитикаУчета = ТаблицаДвиженийСоСчетами.АналитикаУчета
	|		И ТекущаяТаблицаСчетовУчета.МестоУчета = ТаблицаДвиженийСоСчетами.МестоУчета
	|		И ТекущаяТаблицаСчетовУчета.Долгосрочный = ТаблицаДвиженийСоСчетами.Долгосрочный
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ТекТабИск.Организация,ТекТабИск.АналитикаУчета,ТекТабИск.МестоУчета ИЗ ТекущаяТаблицаСчетовУчета КАК ТекТабИск ГДЕ НЕ ТекТабИск.ЭтоОбщаяНастройка
	|						ОБЪЕДИНИТЬ ВЫБРАТЬ НовТабИск.Организация,НовТабИск.АналитикаУчета,НовТабИск.МестоУчета ИЗ ТаблицаДвиженийСоСчетами КАК НовТабИск) КАК ТаблицаИсключений
	|		ПО ТаблицаИсключений.АналитикаУчета = ТекущаяТаблицаСчетовУчета.АналитикаУчета
	|			И ТаблицаИсключений.Организация <> ТекущаяТаблицаСчетовУчета.Организация
	|ГДЕ
	|	ТаблицаДвиженийСоСчетами.Организация ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ТекущаяТаблицаСчетовУчета.Организация,
	|	ТекущаяТаблицаСчетовУчета.АналитикаУчета,
	|	ТекущаяТаблицаСчетовУчета.МестоУчета,
	|	ТекущаяТаблицаСчетовУчета.Долгосрочный,
	|	&ПоляРеквизитовПереопределяемыйГруппировка,
	|	&СписокЗначенийСчетовУчетаТекущие,
	|	ТекущаяТаблицаСчетовУчета.СчетаУчетаПоУмолчанию,
	|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные,
	|	ТекущаяТаблицаСчетовУчета.Удалить,
	|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
	|	ТекущаяТаблицаСчетовУчета.ЭтоОбщаяНастройка,
	|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетов,
	|	ТекущаяТаблицаСчетовУчета.КоличествоИсключений,
	|	ТекущаяТаблицаСчетовУчета.КоличествоИсключенийПоОрганизациям
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДвиженийСоСчетами.Организация,
	|	ТаблицаДвиженийСоСчетами.АналитикаУчета,
	|	ТаблицаДвиженийСоСчетами.МестоУчета,
	|	ТаблицаДвиженийСоСчетами.Долгосрочный,
	|	&ПоляПолученияРеквизитовПереопределяемый,
	|
	|	&СписокЗначенийСчетовУчетаИсключения,
	|
	|	МАКСИМУМ(ТаблицаДвиженийСоСчетами.Требуется И ТаблицаДвиженийСоСчетами.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК ТребуетсяНастройка,
	|	ЛОЖЬ КАК ЭтоОбщаяНастройка,
	|	&ТребуетсяНастройкаСчетов,
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.СчетаУчетаПоУмолчанию, &СчетаУчетаПоУмолчанию),
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.ИзмененныеДанные, ""&ИзмененныеДанные""),
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.Удалить, ЛОЖЬ),
	|	0,
	|	0
	|
	|ИЗ
	|	ТаблицаДвиженийСоСчетами КАК ТаблицаДвиженийСоСчетами
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТекущаяТаблицаСчетовУчета КАК ТекущаяТаблицаСчетовУчета
	|	ПО
	|		ТаблицаДвиженийСоСчетами.Организация = ТекущаяТаблицаСчетовУчета.Организация
	|		И ТаблицаДвиженийСоСчетами.АналитикаУчета = ТекущаяТаблицаСчетовУчета.АналитикаУчета
	|		И ТаблицаДвиженийСоСчетами.МестоУчета = ТекущаяТаблицаСчетовУчета.МестоУчета
	|		И ТаблицаДвиженийСоСчетами.Долгосрочный = ТекущаяТаблицаСчетовУчета.Долгосрочный
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДвиженийСоСчетами.Организация,
	|	ТаблицаДвиженийСоСчетами.АналитикаУчета,
	|	ТаблицаДвиженийСоСчетами.МестоУчета,
	|	ТаблицаДвиженийСоСчетами.Долгосрочный,
	|	&СписокЗначенийСчетовУчетаТекущие,
	|	ТекущаяТаблицаСчетовУчета.СчетаУчетаПоУмолчанию,
	|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные,
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.Удалить, ЛОЖЬ)";
	
	МассивТекстовСписокЗначенийСчетовУчета = Новый Массив;
	МассивТекстовСписокЗначенийСчетовУчетаИсключения = Новый Массив;
	МассивТекстовТребуетсяНастройкаСчетов = Новый Массив;
	МассивТекстовСчетаУчетаПоУмолчанию = Новый Массив;
	МассивТекстовИзмененныеДанные = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("");
	
	ШаблонСтрокиЗначенияСчетаУчета = "ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.%2_%1, МАКСИМУМ(ВЫБОР
	|		КОГДА ТаблицаДвиженийСоСчетами.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.%1)
	|			ТОГДА ТаблицаДвиженийСоСчетами.%2
	|		ИНАЧЕ %3
	|	КОНЕЦ))";
	ШаблонСтрокиСчетаУчетаПоУмолчанию = "ВЫБОР КОГДА
	|		МАКСИМУМ(ТаблицаДвиженийСоСчетами.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.%1)
	|		И ТаблицаДвиженийСоСчетами.%2ПоУмолчанию) ТОГДА ""%3,"" ИНАЧЕ """" КОНЕЦ";
	ШаблонСтрокиТребуетсяНастройкаСчетов = "ВЫБОР КОГДА
	|		МАКСИМУМ(ТаблицаДвиженийСоСчетами.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.%1)
	|		И ТаблицаДвиженийСоСчетами.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|		И ТаблицаДвиженийСоСчетами.Требуется) ТОГДА ""%1,"" ИНАЧЕ """" КОНЕЦ";
	
	ЭлементыНастройкиПоРазделуУчета = ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(ЭлементыНастройкиСчетовУчетаПоРазделуУчета(РазделУчета));
	Для каждого ЭлементНастройки Из ЭлементыНастройкиПоРазделуУчета Цикл
		
		ТипЭлемента = НастройкаСчетовУчетаКлиентСервер.ПрефиксЭлементаНастройки(ЭлементНастройки);
		ИмяЭлемента = СтрЗаменить(ЭлементНастройки, ТипЭлемента + "_", "");
		ЗначениеПоУмолчанию = НастройкаСчетовУчетаКлиентСервер.ЗначениеУмолчанияПоТипуЭлемента(ТипЭлемента);
		
		МассивТекстовСписокЗначенийСчетовУчета.Добавить("ТекущаяТаблицаСчетовУчета." + ТипЭлемента + "_" + ИмяЭлемента);
		ТекстПоля = ШаблонСтрокиЗначенияСчетаУчета;
		Если ТипЭлемента = "СчетУчета" Тогда
			МассивТекстовТребуетсяНастройкаСчетов.Добавить(СтрШаблон(ШаблонСтрокиТребуетсяНастройкаСчетов, ИмяЭлемента));
		ИначеЕсли ТипЭлемента = "ДопПоле" Тогда
			СчетУчета = НастройкаСчетовУчетаКлиентСервер.СчетУчетаДляКоторогоИспользуетсяДопПоле(ИмяЭлемента);
			ТекстПоля = СтрЗаменить(ТекстПоля, ".%1", "." + СчетУчета);
			ТекстПоля = СтрЗаменить(ТекстПоля, "ТаблицаДвиженийСоСчетами.%2", "ТаблицаДвиженийСоСчетами.%1");
		КонецЕсли;
		ТекстПоля = СтрШаблон(ТекстПоля, ИмяЭлемента, ТипЭлемента, ЗначениеПоУмолчанию);
		МассивТекстовСписокЗначенийСчетовУчетаИсключения.Добавить(ТекстПоля);
		Если ТипЭлемента <> "ДопПоле" Тогда
			ТекстПоля = СтрШаблон(ШаблонСтрокиСчетаУчетаПоУмолчанию, ИмяЭлемента, ТипЭлемента, ЭлементНастройки);
			МассивТекстовСчетаУчетаПоУмолчанию.Добавить(ТекстПоля);
		КонецЕсли;
		
		МассивТекстовИзмененныеДанные.Добавить(ЭлементНастройки);
		
	КонецЦикла;
	
	МассивТекстовИзмененныеДанные.Добавить("");
	
	Префикс = "," + Символы.ПС + Символы.Таб;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СписокЗначенийСчетовУчетаТекущие", СтрСоединить(МассивТекстовСписокЗначенийСчетовУчета, Префикс));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СписокЗначенийСчетовУчетаИсключения", СтрСоединить(МассивТекстовСписокЗначенийСчетовУчетаИсключения, Префикс));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СчетаУчетаПоУмолчанию", """,""+" + СтрСоединить(МассивТекстовСчетаУчетаПоУмолчанию, "+" + Символы.ПС + Символы.Таб));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТребуетсяНастройкаСчетов", """,""+" + СтрСоединить(МассивТекстовТребуетсяНастройкаСчетов, "+" + Символы.ПС + Символы.Таб));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИзмененныеДанные", СтрСоединить(МассивТекстовИзмененныеДанные, ","));
	
	ПоляПолученияРеквизитовПереопределяемый = МассивТекстовОбращенийКПолямАналитики("ТаблицаДвиженийСоСчетами", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РазделУчета));
	
	ТекстПоляПереопределяемый = ?(ПоляПолученияРеквизитовПереопределяемый.Количество(), Префикс + СтрСоединить(ПоляПолученияРеквизитовПереопределяемый, Префикс), "");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, Префикс + "&ПоляПолученияРеквизитовПереопределяемый", ТекстПоляПереопределяемый);
	
	МассивТекстовПолей = Новый Массив;
	МассивТекстовПолейГруппировка = Новый Массив;
	Для каждого РеквизитАналитики Из НастройкаСчетовУчетаСервер.РеквизитыАналитикиВлияющиеНаНастройкуСчетовУчета(РазделУчета) Цикл
		Если НастройкаСчетовУчетаКлиентСервер.ЭтоНеРеквизитАналитики(РеквизитАналитики.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		МассивТекстовПолей.Добавить(СтрШаблон("ТекущаяТаблицаСчетовУчета.%1 КАК %1", РеквизитАналитики.Ключ));
		МассивТекстовПолейГруппировка.Добавить(СтрШаблон("ТекущаяТаблицаСчетовУчета.%1", РеквизитАналитики.Ключ));
	КонецЦикла;
	ТекстПоляПереопределяемый = ?(МассивТекстовПолейГруппировка.Количество(), Префикс + СтрСоединить(МассивТекстовПолейГруппировка, Префикс), "");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, Префикс + "&ПоляРеквизитовПереопределяемыйГруппировка", ТекстПоляПереопределяемый);
	ТекстПоляПереопределяемый = ?(МассивТекстовПолей.Количество(), Префикс + СтрСоединить(МассивТекстовПолей, Префикс), "");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, Префикс + "&ПоляРеквизитовПереопределяемый", ТекстПоляПереопределяемый);
	
	Запрос.Текст = ТекстЗапроса;
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	ПоместитьВоВременноеХранилище(Новый Структура("ТаблицаНастроек_" + РазделУчета, Таблица), АдресХранилища);
	
КонецПроцедуры

Функция СоставитьДинамическийТекстЗапросаПолученияСчетовУчета(СписокЭлементовНастройки, РазделыУчета = Неопределено, ИмяВременнойТаблицы = Неопределено, ВыводДолгосрочныхИзмерением = Ложь) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокОтраженияНаСчетахУчета.Организация,
	|	ПорядокОтраженияНаСчетахУчета.АналитикаУчета,
	|	ПорядокОтраженияНаСчетахУчета.МестоУчета,
	|	ПорядокОтраженияНаСчетахУчета.Долгосрочный,
	|	&ПоляПереопределяемый
	|ПОМЕСТИТЬ ИмяВременнойТаблицы
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияНаСчетахУчета
	|ГДЕ
	|	ПорядокОтраженияНаСчетахУчета.ВидСчета В (&ВидыСчетов)
	|	И &УсловиеВыборкиПереопределяемый
	|СГРУППИРОВАТЬ ПО
	|	ПорядокОтраженияНаСчетахУчета.Организация,
	|	ПорядокОтраженияНаСчетахУчета.АналитикаУчета,
	|	ПорядокОтраженияНаСчетахУчета.Долгосрочный,
	|	ПорядокОтраженияНаСчетахУчета.МестоУчета";
	
	ШаблонЭлементаНастройки = "МАКСИМУМ(ВЫБОР
		|		КОГДА ПорядокОтраженияНаСчетахУчета.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.%1) И НЕ ПорядокОтраженияНаСчетахУчета.Долгосрочный
		|			ТОГДА ПорядокОтраженияНаСчетахУчета.%2
		|		ИНАЧЕ %3
		|	КОНЕЦ) КАК %2_%1";
	Если ВыводДолгосрочныхИзмерением Тогда
		ШаблонЭлементаНастройки = СтрЗаменить(ШаблонЭлементаНастройки, " И НЕ ПорядокОтраженияНаСчетахУчета.Долгосрочный", "");
	КонецЕсли;
	
	МассивТекстовПолей = Новый Массив;
	МассивТекстовВидовСчетов = Новый Массив;
	
	Если РазделыУчета <> Неопределено Тогда
		МассивТекстовПолей = МассивТекстовОбращенийКПолямАналитики("ПорядокОтраженияНаСчетахУчета", РазделыУчета);
	КонецЕсли;
	
	Если Не ВыводДолгосрочныхИзмерением Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПорядокОтраженияНаСчетахУчета.Долгосрочный,", "");
	КонецЕсли;
	
	Для каждого ЭлементНастройки Из СписокЭлементовНастройки Цикл
		
		ТекстПоля = ШаблонЭлементаНастройки;
		ТипЭлемента = НастройкаСчетовУчетаКлиентСервер.ПрефиксЭлементаНастройки(ЭлементНастройки);
		ИмяЭлемента = СтрЗаменить(ЭлементНастройки, ТипЭлемента + "_", "");
		Если ТипЭлемента = "СчетУчета" Тогда
			ТекстСсылкиНаВидСчета = СтрШаблон("ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.%1)", ИмяЭлемента);
			Если МассивТекстовВидовСчетов.Найти(ТекстСсылкиНаВидСчета) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			МассивТекстовВидовСчетов.Добавить(ТекстСсылкиНаВидСчета);
		КонецЕсли;
		
		Если ТипЭлемента = "ДопПоле" Тогда
			СчетУчета = НастройкаСчетовУчетаКлиентСервер.СчетУчетаДляКоторогоИспользуетсяДопПоле(ИмяЭлемента);
			ТекстПоля = СтрЗаменить(ТекстПоля, ".%1", "." + СчетУчета);
			ТекстПоля = СтрЗаменить(ТекстПоля, ".%2", ".%1");
		КонецЕсли;
		
		ЗначениеПоУмолчанию = НастройкаСчетовУчетаКлиентСервер.ЗначениеУмолчанияПоТипуЭлемента(ТипЭлемента);
		ТекстПоля = СтрШаблон(ТекстПоля, ИмяЭлемента, ТипЭлемента, ЗначениеПоУмолчанию);
		МассивТекстовПолей.Добавить(ТекстПоля);
		
		Если ПолучитьФункциональнуюОпцию("ВыделятьДолгосрочныеАктивыОбязательства") И Не ВыводДолгосрочныхИзмерением Тогда
			
			Если НастройкаСчетовУчетаКлиентСервер.ИспользуетсяДолгосрочныйСчет(ИмяЭлемента) Тогда
				
				ТекстСчета = ШаблонЭлементаНастройки;
				ТекстСчета = СтрЗаменить(ТекстСчета, ".%2", ".СчетУчета");
				ТекстСчета = СтрЗаменить(ТекстСчета, "НЕ ПорядокОтраженияНаСчетахУчета.Долгосрочный", "ПорядокОтраженияНаСчетахУчета.Долгосрочный");
				ТекстСчета = СтрШаблон(ТекстСчета, ИмяЭлемента, "СчетУчетаДолгосрочный", ЗначениеПоУмолчанию);
				МассивТекстовПолей.Добавить(ТекстСчета);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстСчетовУчета = СтрСоединить(МассивТекстовПолей, ","+Символы.ПС+Символы.Таб);
	ТекстВидовСчетов = СтрСоединить(МассивТекстовВидовСчетов, ","+Символы.ПС+Символы.Таб);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляПереопределяемый", ТекстСчетовУчета);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВидыСчетов", ТекстВидовСчетов);
	ТекстПомещенияВоВременнуюТаблицу = ?(ИмяВременнойТаблицы = Неопределено, "", "ПОМЕСТИТЬ" + " " + ИмяВременнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ИмяВременнойТаблицы", ТекстПомещенияВоВременнуюТаблицу);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция МассивТекстовОбращенийКПолямАналитики(ИмяТаблицы, РазделыУчета)
	
	МассивВозврата = Новый Массив;
	
	ШаблонРеквизитаАналитики = "МАКСИМУМ(ВЫБОР %Выражение% ИНАЧЕ %ЗначениеПоУмолчанию% КОНЕЦ) КАК %ИмяРеквизита%";
	ШаблонВыражения = "КОГДА %ИмяТаблицы%.АналитикаУчета ССЫЛКА %ИмяМетаданных% ТОГДА ЕСТЬNULL(%ИмяТаблицы%.АналитикаУчета.%ИмяРеквизитаАналитики%, %ЗначениеПоУмолчанию%)";
	ШаблонВыражения = СтрЗаменить(ШаблонВыражения, "%ИмяТаблицы%", ИмяТаблицы);
	
	РасчетыСПартнерами = Ложь;
	
	Для каждого РазделУчета Из РазделыУчета Цикл
		
		Если НастройкаСчетовУчетаКлиентСервер.ВидыРасчетовСПартнерами().Найти(РазделУчета) <> Неопределено Тогда
			Если РасчетыСПартнерами Тогда
				Продолжить;
			Иначе
				РасчетыСПартнерами = Истина;
			КонецЕсли;
		КонецЕсли;
		
		ОписаниеТиповАналитикиУчета = НастройкаСчетовУчетаСервер.НастройкиАналитикиУчетаПоРазделуУчета(РазделУчета).ТипЗначения;
		
		Если ОписаниеТиповАналитикиУчета = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		РеквизитыАналитики = НастройкаСчетовУчетаСервер.РеквизитыАналитикиВлияющиеНаНастройкуСчетовУчета(РазделУчета);
		
		СоответствиеИменРеквизитовСтруктураНастроек = Новый Соответствие;
		Для каждого Тип Из ОписаниеТиповАналитикиУчета.Типы() Цикл
			МетаданныеТипа = Метаданные.НайтиПоТипу(Тип);
			ИмяМетаданных = МетаданныеТипа.ПолноеИмя();
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ИмяМетаданных);
			СоответствиеИменРеквизитов = Новый Структура;
			НастройкаСчетовУчетаСервер.ЗаполнитьИменаРеквизитовАналитикиВСоответствииИмен(СоответствиеИменРеквизитов, РеквизитыАналитики);
			МенеджерОбъекта.ЗаполнитьСоответствиеРеквизитовНастройкиСчетовУчета(СоответствиеИменРеквизитов);
			Для каждого ЗначениеСоответствия Из СоответствиеИменРеквизитов Цикл
				Если ЗначениеСоответствия.Значение = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				СтруктураНастроек = Новый Структура;
				СтруктураНастроек.Вставить("ИмяМетаданных", ИмяМетаданных);
				СтруктураНастроек.Вставить("ПутьКРеквизиту", ЗначениеСоответствия.Значение);
				МассивСтруктурНастроек = СоответствиеИменРеквизитовСтруктураНастроек.Получить(ЗначениеСоответствия.Ключ);
				Если МассивСтруктурНастроек = Неопределено Тогда
					МассивСтруктурНастроек = Новый Массив;
					СоответствиеИменРеквизитовСтруктураНастроек.Вставить(ЗначениеСоответствия.Ключ, МассивСтруктурНастроек);
				КонецЕсли;
				МассивСтруктурНастроек.Добавить(СтруктураНастроек);
			КонецЦикла;
		КонецЦикла;
		
		Для каждого РеквизитАналитики Из РеквизитыАналитики Цикл
			
			НастройкиРеквизитаАналитики = СоответствиеИменРеквизитовСтруктураНастроек.Получить(РеквизитАналитики.Ключ);
			
			Если НастройкиРеквизитаАналитики = Неопределено Или РеквизитАналитики.Ключ = "Организация" Тогда
				Продолжить;
			КонецЕсли;
			
			ТекстПоля = ШаблонРеквизитаАналитики;
			
			МассивВыражений = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("");
			
			Для каждого СтруктураНастройкиРеквизитаДляТипа Из НастройкиРеквизитаАналитики Цикл
			
				ТекстВыражения = ШаблонВыражения;
				ТекстВыражения = СтрЗаменить(ТекстВыражения, "%ИмяМетаданных%", СтруктураНастройкиРеквизитаДляТипа.ИмяМетаданных);
				ТекстВыражения = СтрЗаменить(ТекстВыражения, "%ИмяРеквизитаАналитики%", СтруктураНастройкиРеквизитаДляТипа.ПутьКРеквизиту);
				МассивВыражений.Добавить(ТекстВыражения);
				
			КонецЦикла;
			
			МассивВыражений.Добавить("");
			
			ТекстПоля = СтрЗаменить(ТекстПоля, "%Выражение%", СтрСоединить(МассивВыражений, Символы.ПС + Символы.Таб));
			ТекстПоля = СтрЗаменить(ТекстПоля, "%ЗначениеПоУмолчанию%", РеквизитАналитики.Значение);
			ТекстПоля = СтрЗаменить(ТекстПоля, "%ИмяРеквизита%", РеквизитАналитики.Ключ);
			МассивВозврата.Добавить(ТекстПоля);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат МассивВозврата;
	
КонецФункции

Процедура ДобавитьУчетныеПолитикиОрганизаций(ВременныеТаблицы, Организации, НачалоПериода, КонецПериода) Экспорт
	
	НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицГоловнымиОрганизациями(ВременныеТаблицы, Организации);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	Запрос.Текст = ТекстЗапросаУчетныеПолитикиОрганизаций();
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", Организации);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТекстЗапросаУчетныеПолитикиОрганизаций() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Организация,
	|	&НачалоПериода КАК НачалоПериода,
	|	ЕСТЬNULL(УчетнаяПолитикаФинУчета.ИспользоватьВыделениеДолгосрочныхАктивовОбязательств, ЛОЖЬ) КАК ДолгосрочныеАктивыОбязательства,
	|	ЕСТЬNULL(УчетнаяПолитикаФинУчета.ДлительностьОперационногоЦикла, 0) КАК МесяцыДолгосрочнойЗадолженности
	|ПОМЕСТИТЬ ВТУчетныеПолитикиОрганизаций
	|ИЗ
	|	ВтГоловныеОрганизации КАК ГоловныеОрганизации
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(&НачалоПериода, Организация В
	|			(ВЫБРАТЬ ГоловныеОрганизации.Организация ИЗ ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК УчетнаяПолитикаФинУчета
	|		ПО ГоловныеОрганизации.Организация = УчетнаяПолитикаФинУчета.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГоловныеОрганизации.ОбособленноеПодразделение,
	|	ЕСТЬNULL(УчетнаяПолитикаФинУчета.Период, &НачалоПериода),
	|	ЕСТЬNULL(УчетнаяПолитикаФинУчета.ИспользоватьВыделениеДолгосрочныхАктивовОбязательств, ЛОЖЬ),
	|	ЕСТЬNULL(УчетнаяПолитикаФинУчета.ДлительностьОперационногоЦикла, 0)
	|ИЗ
	|	ВтГоловныеОрганизации КАК ГоловныеОрганизации
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК УчетнаяПолитикаФинУчета
	|		ПО ГоловныеОрганизации.Организация = УчетнаяПолитикаФинУчета.Организация
	|ГДЕ
	|	УчетнаяПолитикаФинУчета.Период > &НачалоПериода
	|	И УчетнаяПолитикаФинУчета.Период <= &КонецПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НачалоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетныеПолитикиОрганизаций.Организация КАК Организация,
	|	УчетныеПолитикиОрганизаций.НачалоПериода КАК НачалоДействия,
	|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(МИНИМУМ(ЕСТЬNULL(БудущиеУчетныеПолитикиОрганизаций.НачалоПериода, &КонецПериода)), СЕКУНДА, -1), ДЕНЬ) КАК ОкончаниеДействия,
	|	УчетныеПолитикиОрганизаций.ДолгосрочныеАктивыОбязательства,
	|	УчетныеПолитикиОрганизаций.МесяцыДолгосрочнойЗадолженности
	|ПОМЕСТИТЬ ВТУчетнаяПолитикаОрганизацийПоПериодам
	|ИЗ
	|	ВТУчетныеПолитикиОрганизаций КАК УчетныеПолитикиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиОрганизаций КАК БудущиеУчетныеПолитикиОрганизаций
	|		ПО УчетныеПолитикиОрганизаций.Организация = БудущиеУчетныеПолитикиОрганизаций.Организация
	|			И УчетныеПолитикиОрганизаций.НачалоПериода < БудущиеУчетныеПолитикиОрганизаций.НачалоПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетныеПолитикиОрганизаций.НачалоПериода,
	|	УчетныеПолитикиОрганизаций.Организация,
	|	УчетныеПолитикиОрганизаций.ДолгосрочныеАктивыОбязательства,
	|	УчетныеПолитикиОрганизаций.МесяцыДолгосрочнойЗадолженности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТУчетныеПолитикиОрганизаций";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.ПорядокОтраженияНаСчетахУчета.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.13.18";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("1b81975e-b1fe-43d1-ae81-54f2e0dc6ce1");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ПорядокОтраженияНаСчетахУчета.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполнение новых забалансовых видов счетов потребленных в производстве значениями по умолчанию';
									|en = 'Fill the new off-balance account kinds consumed in production with default values'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыСведений.ПорядокОтраженияНаСчетахУчета.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.ГруппыФинансовогоУчетаРасчетов.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.ПорядокОтраженияНаСчетахУчета.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыСведений.ПорядокОтраженияНаСчетахУчета.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.ПорядокОтраженияНаСчетахУчета";
	
	Запрос = Новый Запрос;
	ТекстыЗапросов = Новый Массив;
	ЗарегистрироватьВидыСчетовПотребленныеВПроизводстве(ТекстыЗапросов);
	Запрос.Текст = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Данные = Запрос.Выполнить().Выгрузить();
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.ПорядокОтраженияНаСчетахУчета;
	ПолноеИмяОбъекта  = МетаданныеОбъекта.ПолноеИмя();

	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ИмяВременнойТаблицы = "ВТДанныеДляОбработки";
	ДополнительныеПараметры.ВыбиратьПорциями = Ложь;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуИзмеренийНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц, ДополнительныеПараметры);
	
	Параметры.ОбработкаЗавершена = Не Результат.ЕстьДанныеДляОбработки;
	Если Параметры.ОбработкаЗавершена Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ТекстыЗапроса = Новый Массив;
	
	#Область ВидыСчетовПотребленныеВПроизводстве
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДляОбработки.Организация КАК Организация,
	|	ДанныеДляОбработки.АналитикаУчета КАК АналитикаУчета,
	|	ДанныеДляОбработки.МестоУчета КАК МестоУчета,
	|	ДанныеДляОбработки.ВидСчета КАК ВидСчета,
	|	ПорядокОтраженияНаСчетахУчета.СчетУчета КАК СчетУчета,
	|	ПорядокОтраженияНаСчетахУчета.ОтноситсяКМалоценнымТМЦ КАК ОтноситсяКМалоценнымТМЦ,
	|	ПорядокОтраженияНаСчетахУчета.Долгосрочный КАК Долгосрочный,
	|	ПорядокОтраженияНаСчетахУчета.Субконто КАК Субконто
	|ИЗ
	|	ВТДанныеДляОбработки КАК ДанныеДляОбработки
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияНаСчетахУчета
	|		ПО ПорядокОтраженияНаСчетахУчета.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВПроизводстве)
	|		И ПорядокОтраженияНаСчетахУчета.АналитикаУчета = ДанныеДляОбработки.АналитикаУчета
	|		И ПорядокОтраженияНаСчетахУчета.МестоУчета = ДанныеДляОбработки.МестоУчета
	|		И ПорядокОтраженияНаСчетахУчета.Организация = ДанныеДляОбработки.Организация
	|ГДЕ
	|	ДанныеДляОбработки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦПотребленныеВПроизводстве)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДляОбработки.Организация КАК Организация,
	|	ДанныеДляОбработки.АналитикаУчета КАК АналитикаУчета,
	|	ДанныеДляОбработки.МестоУчета КАК МестоУчета,
	|	ДанныеДляОбработки.ВидСчета КАК ВидСчета,
	|	ЕСТЬNULL(ПорядокОтраженияНаСчетахУчета.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчета,
	|	ЕСТЬNULL(ПорядокОтраженияНаСчетахУчета.ОтноситсяКМалоценнымТМЦ, ЛОЖЬ) КАК ОтноситсяКМалоценнымТМЦ,
	|	ЕСТЬNULL(ПорядокОтраженияНаСчетахУчета.Долгосрочный, ЛОЖЬ) КАК Долгосрочный,
	|	ЕСТЬNULL(ПорядокОтраженияНаСчетахУчета.Субконто, НЕОПРЕДЕЛЕНО) КАК Субконто
	|ИЗ
	|	ВТДанныеДляОбработки КАК ДанныеДляОбработки
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияНаСчетахУчета
	|		ПО ПорядокОтраженияНаСчетахУчета.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуВПроизводстве)
	|		И ПорядокОтраженияНаСчетахУчета.АналитикаУчета = ДанныеДляОбработки.АналитикаУчета
	|		И ПорядокОтраженияНаСчетахУчета.МестоУчета = ДанныеДляОбработки.МестоУчета
	|		И ПорядокОтраженияНаСчетахУчета.Организация = ДанныеДляОбработки.Организация
	|ГДЕ
	|	ДанныеДляОбработки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПотребленныеВПроизводстве)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	Результат = Запрос.Выполнить();
	
	ВыборкаДанных = Результат.Выбрать();
	
	Пока ВыборкаДанных.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			
			ИзмеренияРегистра = НастройкаСчетовУчетаКлиентСервер.ИнициализироватьСтруктуруИзмеренийРегистра();
			ИзмеренияРегистра.Вставить("ВидСчета", Неопределено);
			Для каждого ЭлементИзмерения Из ИзмеренияРегистра Цикл
				ЭлементБлокировки.УстановитьЗначение(ЭлементИзмерения.Ключ, ВыборкаДанных[ЭлементИзмерения.Ключ]);
			КонецЦикла;
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			Блокировка.Заблокировать();
			
			ТребуетсяЗаписать = Ложь;
			
			НаборЗаписей = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СоздатьНаборЗаписей();
				
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			Для каждого ЭлементИзмерения Из ИзмеренияРегистра Цикл
				НаборЗаписей.Отбор[ЭлементИзмерения.Ключ].Установить(ВыборкаДанных[ЭлементИзмерения.Ключ]);
			КонецЦикла;
			
			Если ЗначениеЗаполнено(ВыборкаДанных.СчетУчета) Тогда
				НоваяЗапись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись, ВыборкаДанных);
				ТребуетсяЗаписать = Истина;
			КонецЕсли;
			
			Если ТребуетсяЗаписать Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обновить данные в регистре %ИмяРегистра% по причине: %Причина%';
									|en = 'Cannot update data in register %ИмяРегистра%, reason: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", ПолноеИмяОбъекта);
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
			МетаданныеОбъекта, Неопределено, ТекстСообщения);
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

// Возвращает текст запроса получения временной таблицы "ВТ_ДанныеПрочихРасчетов" на основании данных оперативного контура.
//	
//	Параметры:
//		ПолучатьСуммы - Булево - признак необходимости получения сумм (в этом случае запрос будет обращаться к виртуальной таблице
//			остатки и обороты, в противном - будет строиться на основании данных регистра, по умолчанию = Ложь;
//		ДетализацияПоРегистратору - Булево - признак необходимости получения регистраторов, по умолчанию = Ложь.
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаДанныеПрочихРасчетов(ПолучатьСуммы = Ложь, ДетализацияПоРегистратору = Ложь) Экспорт
	
	МассивТекстовЗапроса = Новый Массив;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчета,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчета,
	|	ЛОЖЬ КАК Долгосрочный
	|ПОМЕСТИТЬ ВТ_ДанныеПрочихРасчетов
	|ГДЕ
	|	ЛОЖЬ";
	
	Если ПолучатьСуммы Тогда
		ДополнитьТекстЗапросаСуммами(ТекстЗапроса, ДетализацияПоРегистратору);
	КонецЕсли;
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	// НДСАвансыПолученные:
	ТекстЗапроса = СтрЗаменить(ШаблонТекстаЗапросаДанныеНДССАвансов(), "НДСАвансыПолученные", "НДСАвансыПолученные");
	Если ПолучатьСуммы Тогда
		ДополнитьТекстЗапросаСуммами(ТекстЗапроса, ДетализацияПоРегистратору);
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Ресурс", "НДС");
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	// НДСАвансыВыданные:
	ТекстЗапроса = СтрЗаменить(ШаблонТекстаЗапросаДанныеНДССАвансов(), "НДСАвансыПолученные", "НДСАвансыВыданные");
	Если ПолучатьСуммы Тогда
		ДополнитьТекстЗапросаСуммами(ТекстЗапроса, ДетализацияПоРегистратору);
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Ресурс", "НДС");
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	// РезервыПоСомнительнымДолгам:
	ТекстЗапроса = ТекстЗапросаДанныеРезервыПоСомнительнымДолгам();
	Если ПолучатьСуммы Тогда
		ДополнитьТекстЗапросаСуммами(ТекстЗапроса, ДетализацияПоРегистратору);
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Ресурс", "СуммаРегл");
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	Возврат СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РазделыУчетаПоВидуРасчетов(АналитикаУчета)
	
	ВидыРасчетовСтрокой = СтрСоединить(Справочники.ГруппыФинансовогоУчетаРасчетов.ВидыРасчетов(), ",");
	РеквизитыАналитикиУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(АналитикаУчета, ВидыРасчетовСтрокой);
	
	РазделыУчета = Новый Массив;
	
	Для каждого Реквизит Из РеквизитыАналитикиУчета Цикл
		Если Реквизит.Значение Тогда
			РазделыУчета.Добавить(Реквизит.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Если РазделыУчета.Количество() > 1 Тогда
		Возврат "РасчетыСКлиентами,РасчетыСПоставщиками,РасчетыСДебиторами,РасчетыСКредиторами,РасчетыСАрендодателями";
	КонецЕсли;
	
	Возврат СтрСоединить(РазделыУчета, ",");
	
КонецФункции

#Область АнализОперацийСлужебный

Функция ВременнаяТаблицаДанныхПоСуществующимОперациям(ПараметрыАнализатора)
	
	РежимАнализа = Неопределено;
	ПараметрыАнализатора.Свойство("РежимАнализа", РежимАнализа);
	КонецПериода = Неопределено;
	ПараметрыАнализатора.Свойство("КонецПериода", КонецПериода);
	Если Не ЗначениеЗаполнено(КонецПериода) Тогда
		ОграничениеПериода = Неопределено;
		Если Не ПараметрыАнализатора.Свойство("ДатаОкончанияПериода", ОграничениеПериода) Тогда
			ОграничениеПериода = Новый СтандартнаяДатаНачала();
		КонецЕсли;
		КонецПериода = Обработки.НастройкаОтраженияДокументовВРеглУчете.ПериодКОтражениюВРеглУчете(ПараметрыАнализатора.МассивОрганизаций, ОграничениеПериода).ДатаОкончания;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Если ПараметрыАнализатора.МассивОрганизаций = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация В (&МассивОрганизаций)", "");
	Иначе
		Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыАнализатора.МассивОрганизаций);
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаОкончания", КонецПериода);
	Запрос.УстановитьПараметр("ВестиУУ", Константы.ВестиУУНаПланеСчетовХозрасчетный.Получить());
	Запрос.УстановитьПараметр("ЗабалансовыеРазделыУчета", Перечисления.РазделыУчетаСебестоимостиТоваров.ЗабалансовыеРазделыУчета());
	
	МассивТекстовЗапроса = Новый Массив;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Получим изменения учетных политик за весь период, если используется долгосрочная задолженность, в противном случае
	//	ограничим период лишь датой окончания:
	Если ПолучитьФункциональнуюОпцию("ВыделятьДолгосрочныеАктивыОбязательства") Тогда
		НачалоПериода = ?(ПараметрыАнализатора.Свойство("НачалоПериода"), ПараметрыАнализатора.НачалоПериода, Дата(1,1,1));
	Иначе
		НачалоПериода = КонецПериода;
	КонецЕсли;
	ДобавитьУчетныеПолитикиОрганизаций(Запрос.МенеджерВременныхТаблиц, ПараметрыАнализатора.МассивОрганизаций, НачалоПериода, КонецПериода);
	
	ДополнитьТекстЗапросаОперацийДаннымиНоменклатуры(ПараметрыАнализатора.РазделыУчета, МассивТекстовЗапроса);
	ДополнитьТекстЗапросаОперацийДаннымиНоменклатурыСобственной(ПараметрыАнализатора.РазделыУчета, МассивТекстовЗапроса);
	ДополнитьТекстЗапросаОперацийДаннымиНоменклатурыПереданной(ПараметрыАнализатора.РазделыУчета, МассивТекстовЗапроса);
	ДополнитьТекстЗапросаОперацийДаннымиНоменклатурыПринятой(ПараметрыАнализатора.РазделыУчета, МассивТекстовЗапроса);
	Запрос.УстановитьПараметр("НалогообложениеСНДС", УчетНДСУП.ВидыДеятельностиНДСПринимаетсяКВозмещению());
	ДополнитьТекстЗапросаОперацийДаннымиПроизводства(ПараметрыАнализатора.РазделыУчета, МассивТекстовЗапроса);
	ДополнитьТекстЗапросаОперацийДаннымиРасчетовСПартнерами(ПараметрыАнализатора.РазделыУчета, МассивТекстовЗапроса);
	ДополнитьТекстЗапросаОперацийДаннымиДоходовРасходов(ПараметрыАнализатора.РазделыУчета, МассивТекстовЗапроса);
	ДополнитьТекстЗапросаОперацийДаннымиПодарочныхСертификатов(ПараметрыАнализатора.РазделыУчета, МассивТекстовЗапроса);
	ДополнитьТекстЗапросаОперацийДаннымиРезервов(ПараметрыАнализатора.РазделыУчета, МассивТекстовЗапроса);
	ДополнитьТекстЗапросаОперацийДаннымиТМЦВЭксплуатации(ПараметрыАнализатора.РазделыУчета, МассивТекстовЗапроса);
	ДополнитьТекстЗапросаОперацийДаннымиДенежныхСредств(ПараметрыАнализатора.РазделыУчета, МассивТекстовЗапроса);
	ДополнитьТекстЗапросаОперацийДаннымиВнеоборотныхАктивов(ПараметрыАнализатора.РазделыУчета, МассивТекстовЗапроса);
	ДополнитьТекстЗапросаОперацийДаннымиЭквайринга(ПараметрыАнализатора.РазделыУчета, МассивТекстовЗапроса);
	
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	УсловиеВхожденияВРегистр = "ГДЕ
	|	&УсловиеДляРегистра
	|	";
	
	УсловиеВхожденияВДокумент = "ГДЕ
	|	&УсловиеДляДокумента
	|	";
	
	УсловиеВхожденияВРегистрССоединениемПоОрганизации = "ГДЕ
	|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
	|	";
	
	УсловиеВхожденияВСправочникССоединениемПоОрганизации = "ГДЕ
	|	&ОрганизацияИзСправочника_УсловиеДляРегистра
	|";
	
	ТекстСоединенияСТаблицейДокументов = "		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокументов КАК ТаблицаДокументов
	|		ПО ДанныеРегистра.Организация = ТаблицаДокументов.Организация
	|			И ДанныеРегистра.Регистратор = ТаблицаДокументов.Документ
	|	";
	
	ТекстУсловийПоОрганизацииИПериоду = "ГДЕ
	|	ДанныеРегистра.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ДанныеРегистра.Организация В (&Организации)
	|	";
	
	Если РежимАнализа = "ПоНеотраженным" Тогда
		
		Статусы = Новый Массив;
		Статусы.Добавить(Перечисления.СтатусыОтраженияДокументовВРеглУчете.НеУказаныСчетаУчета);
		Статусы.Добавить(Перечисления.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете);
		РегистрыСведений.ОтражениеДокументовВРеглУчете.ДобавитьВременнуюТаблицуДокументовСОтборомПоСтатусуОтражения(
			Запрос.МенеджерВременныхТаблиц,
			ПараметрыАнализатора.МассивОрганизаций,
			Статусы);
	
		ТекстУсловий = ТекстСоединенияСТаблицейДокументов;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, УсловиеВхожденияВРегистр, ТекстУсловий);
		ТекстУсловий = СтрЗаменить(ТекстУсловий, "Регистратор", "Ссылка");
		ТекстУсловий = СтрЗаменить(ТекстУсловий, "ДанныеРегистра", "ДанныеДокумента");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, УсловиеВхожденияВДокумент, ТекстУсловий);
		ТекстУсловий = ТекстСоединенияСТаблицейДокументов;
		ТекстУсловий = СтрЗаменить(ТекстУсловий, "ДанныеРегистра.Организация", "КлючиПартнеров.Организация");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, УсловиеВхожденияВРегистрССоединениемПоОрганизации, ТекстУсловий);
		ТекстУсловий = СтрЗаменить(ТекстУсловий, "КлючиПартнеров", "ВидыЗапасовСпр");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, УсловиеВхожденияВСправочникССоединениемПоОрганизации, ТекстУсловий);
	Иначе
		ТекстУсловий = ТекстУсловийПоОрганизацииИПериоду;
		Запрос.УстановитьПараметр("Организации", ПараметрыАнализатора.МассивОрганизаций);
		Запрос.УстановитьПараметр("ДатаНачала", ПараметрыАнализатора.НачалоПериода);
		Запрос.УстановитьПараметр("ДатаОкончания", ПараметрыАнализатора.КонецПериода);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, УсловиеВхожденияВРегистр, ТекстУсловий);
		ТекстУсловий = СтрЗаменить(ТекстУсловий, "Период", "Дата");
		ТекстУсловий = СтрЗаменить(ТекстУсловий, "ДанныеРегистра", "ДанныеДокумента");
		ТекстУсловий = ТекстУсловий + "И ДанныеДокумента.Проведен" + Символы.ПС + Символы.Таб;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, УсловиеВхожденияВДокумент, ТекстУсловий);
		ТекстУсловий = ТекстУсловийПоОрганизацииИПериоду;
		ТекстУсловий = СтрЗаменить(ТекстУсловий, "ДанныеРегистра.Организация", "КлючиПартнеров.Организация");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, УсловиеВхожденияВРегистрССоединениемПоОрганизации, ТекстУсловий);
		ТекстУсловий = СтрЗаменить(ТекстУсловий, "КлючиПартнеров", "ВидыЗапасовСпр");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, УсловиеВхожденияВСправочникССоединениемПоОрганизации, ТекстУсловий);
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

Функция ВременнаяТаблицаДвиженийСоСчетами(СписокРазделов, ВременнаяТаблицаДвижений)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременнаяТаблицаДвижений;
	
	МассивТекстовЗапроса = Новый Массив;
	ШаблонЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.АналитикаУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета КАК МестоУчета,
	|	ТаблицаДвижений.ВидСчета КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.Требуется КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам
	|ИЗ
	|	ТаблицаДвиженийПоСчетам_%1 КАК ТаблицаДвижений";
	
	Для каждого РазделУчета Из СписокРазделов Цикл
		МассивТекстовЗапроса.Добавить(СтрШаблон(ШаблонЗапроса, РазделУчета));
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам", "");
	КонецЦикла;
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	МассивТекстовЗапроса.Очистить();
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	Для каждого РазделУчета Из СписокРазделов Цикл
		МассивТекстовЗапроса.Добавить("УНИЧТОЖИТЬ" + " ТаблицаДвиженийПоСчетам_" + РазделУчета);
	КонецЦикла;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.АналитикаУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета КАК МестоУчета,
	|	ТаблицаДвижений.ВидСчета КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.Требуется КАК Требуется,
	|	ЕСТЬNULL(ПорядокОтраженияПоМестамУчета.СчетУчета, ЕСТЬNULL(ПорядокОтраженияПоОрганизациям.СчетУчета, ЕСТЬNULL(ПорядокОтраженияПоАналитикам.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)))) КАК СчетУчета,
	|	ЕСТЬNULL(ПорядокОтраженияПоМестамУчета.СчетУчета, ПорядокОтраженияПоОрганизациям.СчетУчета) ЕСТЬ NULL И НЕ ПорядокОтраженияПоАналитикам.СчетУчета ЕСТЬ NULL КАК СчетУчетаПоУмолчанию,
	|	ЕСТЬNULL(ПорядокОтраженияПоМестамУчета.Субконто, ЕСТЬNULL(ПорядокОтраженияПоОрганизациям.Субконто, ЕСТЬNULL(ПорядокОтраженияПоАналитикам.Субконто, НЕОПРЕДЕЛЕНО))) КАК Субконто,
	|	ЕСТЬNULL(ПорядокОтраженияПоМестамУчета.Субконто, ПорядокОтраженияПоОрганизациям.Субконто) ЕСТЬ NULL И НЕ ПорядокОтраженияПоАналитикам.Субконто ЕСТЬ NULL КАК СубконтоПоУмолчанию,
	|	ЕСТЬNULL(ПорядокОтраженияПоМестамУчета.ОтноситсяКМалоценнымТМЦ, ЕСТЬNULL(ПорядокОтраженияПоОрганизациям.ОтноситсяКМалоценнымТМЦ, ЕСТЬNULL(ПорядокОтраженияПоАналитикам.ОтноситсяКМалоценнымТМЦ, НЕОПРЕДЕЛЕНО))) КАК ОтноситсяКМалоценнымТМЦ,
	|	ЕСТЬNULL(ПорядокОтраженияПоМестамУчета.ОтноситсяКМалоценнымТМЦ, ПорядокОтраженияПоОрганизациям.ОтноситсяКМалоценнымТМЦ) ЕСТЬ NULL И НЕ ПорядокОтраженияПоАналитикам.ОтноситсяКМалоценнымТМЦ ЕСТЬ NULL КАК ОтноситсяКМалоценнымТМЦПоУмолчанию
	|
	|ПОМЕСТИТЬ ТаблицаДвиженийСоСчетами
	|ИЗ
	|	ТаблицаДвиженийПоСчетам КАК ТаблицаДвижений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияПоМестамУчета
	|		ПО ТаблицаДвижений.Организация = ПорядокОтраженияПоМестамУчета.Организация
	|			И ТаблицаДвижений.АналитикаУчета = ПорядокОтраженияПоМестамУчета.АналитикаУчета
	|			И ТаблицаДвижений.МестоУчета = ПорядокОтраженияПоМестамУчета.МестоУчета
	|			И ТаблицаДвижений.ВидСчета = ПорядокОтраженияПоМестамУчета.ВидСчета
	|			И ТаблицаДвижений.Долгосрочный = ПорядокОтраженияПоМестамУчета.Долгосрочный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияПоОрганизациям
	|		ПО ТаблицаДвижений.Организация = ПорядокОтраженияПоОрганизациям.Организация
	|			И ТаблицаДвижений.АналитикаУчета = ПорядокОтраженияПоОрганизациям.АналитикаУчета
	|			И ПорядокОтраженияПоОрганизациям.МестоУчета = НЕОПРЕДЕЛЕНО
	|			И ТаблицаДвижений.ВидСчета = ПорядокОтраженияПоОрганизациям.ВидСчета
	|			И ТаблицаДвижений.Долгосрочный = ПорядокОтраженияПоОрганизациям.Долгосрочный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияПоАналитикам
	|		ПО ТаблицаДвижений.АналитикаУчета = ПорядокОтраженияПоАналитикам.АналитикаУчета
	|			И ПорядокОтраженияПоАналитикам.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И ПорядокОтраженияПоАналитикам.МестоУчета = НЕОПРЕДЕЛЕНО
	|			И ТаблицаДвижений.ВидСчета = ПорядокОтраженияПоАналитикам.ВидСчета
	|			И ТаблицаДвижений.Долгосрочный = ПорядокОтраженияПоАналитикам.Долгосрочный";
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

Процедура ДополнитьТекстЗапросаОперацийДаннымиПроизводства(СписокРазделов, МассивТекстовЗапроса)
	
	Если СписокРазделов.Найти("Производство") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.ГруппаПродукции КАК АналитикаУчета,
	|	ДанныеРегистра.Подразделение КАК МестоУчета,
	|	ИСТИНА КАК ТребуетсяСчетУчета_Производство,
	|	ЛОЖЬ КАК ТребуетсяСчетУчета_Резервы
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация,
	|	ЕСТЬNULL(АналитикиФинансовогоУчета.Ссылка, ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)),
	|	ВЫБОР
	|		КОГДА ДанныеРегистра.АналитикаУчетаНоменклатуры.ТипМестаХранения В (ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение), ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер))
	|			ТОГДА ДанныеРегистра.АналитикаУчетаНоменклатуры.МестоХранения
	|		ИНАЧЕ ЕСТЬNULL(ДанныеРегистра.АналитикаУчетаНоменклатуры.МестоХранения.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ,
	|	НЕ ДанныеРегистра.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеРезерваПодОбесценениеЗапасов),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРезервовПодОбесценениеЗапасов)) КАК ТребуетсяСчетУчета_Производство,
	|	ДанныеРегистра.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеРезерваПодОбесценениеЗапасов),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРезервовПодОбесценениеЗапасов)) КАК ТребуетсяСчетУчета_Резервы
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыАналитическогоУчетаНоменклатуры КАК АналитикиФинансовогоУчета
	|	ПО АналитикиФинансовогоУчета.Ссылка = ДанныеРегистра.АналитикаФинансовогоУчета
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|	И ДанныеРегистра.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация,
	|	ЕСТЬNULL(АналитикиФинансовогоУчета.Ссылка, ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)),
	|	ВЫБОР
	|		КОГДА ДанныеРегистра.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|			ТОГДА ЕСТЬNULL(ЕСТЬNULL(ДанныеРегистра.КорВидЗапасов.Договор.Подразделение, ДанныеРегистра.ВидЗапасов.Договор.Подразделение), НЕОПРЕДЕЛЕНО)
	|		КОГДА ДанныеРегистра.АналитикаУчетаНоменклатуры.ТипМестаХранения В (ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение), ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер))
	|			ТОГДА ДанныеРегистра.АналитикаУчетаНоменклатуры.МестоХранения
	|		ИНАЧЕ ЕСТЬNULL(ДанныеРегистра.АналитикаУчетаНоменклатуры.МестоХранения.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ,
	|	НЕ ДанныеРегистра.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеРезерваПодОбесценениеЗапасов),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРезервовПодОбесценениеЗапасов)) КАК ТребуетсяСчетУчета_Производство,
	|	ДанныеРегистра.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеРезерваПодОбесценениеЗапасов),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРезервовПодОбесценениеЗапасов)) КАК ТребуетсяСчетУчета_Резервы
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыАналитическогоУчетаНоменклатуры КАК АналитикиФинансовогоУчета
	|	ПО АналитикиФинансовогоУчета.Ссылка = ДанныеРегистра.АналитикаФинансовогоУчета
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|	И ДанныеРегистра.РазделУчета В (&ЗабалансовыеРазделыУчета)
	|	И ДанныеРегистра.СтоимостьРегл + ДанныеРегистра.ДопРасходыРегл + ДанныеРегистра.ТрудозатратыРегл
	|		+ ДанныеРегистра.ПостатейныеПостоянныеРегл + ДанныеРегистра.ПостатейныеПеременныеРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.ГруппаПродукции,
	|	ДанныеРегистра.Подразделение,
	|	ИСТИНА КАК ТребуетсяСчетУчета_Производство,
	|	ЛОЖЬ КАК ТребуетсяСчетУчета_Резервы
	|ИЗ
	|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДвижений.АналитикаУчета = НЕОПРЕДЕЛЕНО
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаДвижений.АналитикаУчета
	|	КОНЕЦ КАК АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ТребуетсяСчетУчета_Производство КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам_Производство
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДвижений.АналитикаУчета = НЕОПРЕДЕЛЕНО
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаДвижений.АналитикаУчета
	|	КОНЕЦ КАК АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПодОбесценениеПроизводства) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ТребуетсяСчетУчета_Резервы КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвижений";
	
	Если Не НастройкаСчетовУчетаСервер.НастройкиАналитикиУчетаПоРазделуУчета("Производство").Используется Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаДвижений.АналитикаУчета", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
КонецПроцедуры

Процедура ДополнитьТекстЗапросаОперацийДаннымиНоменклатуры(СписокРазделов, МассивТекстовЗапроса)
	
	Если СписокРазделов.Найти("Номенклатура") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ДанныеРегистра.ВидЗапасов КАК ВидЗапасов,
	|	ДанныеРегистра.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути) КАК ЕстьРеализацияБезПереходаПраваСобственности,
	|	ДанныеРегистра.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеРезерваПодОбесценениеЗапасов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРезервовПодОбесценениеЗапасов)) КАК ЕстьРезервы
	|ПОМЕСТИТЬ ДвиженияРегистраСебестоимости
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.ТипЗапасов КАК ТипЗапасов,
	|	ДанныеРегистра.ВидЗапасов КАК ВидЗапасов,
	|	КлючиПартнеров.Организация КАК Организация,
	|	КлючиНоменклатуры.СкладскаяТерритория КАК Склад,
	|	КлючиНоменклатуры.Номенклатура КАК Номенклатура,
	|	ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности) КАК ЕстьРеализацияБезПереходаПраваСобственности,
	|	ДанныеРегистра.НалогообложениеНДС В (&НалогообложениеСНДС) КАК ЕстьПродажаСНДС,
	|	ДанныеРегистра.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД) КАК ЕстьПродажаЕНВД,
	|	ДанныеРегистра.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД) КАК ЕстьПродажаОСНО,
	|	КлючиНоменклатуры.ТипМестаХранения В (ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер), ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация)) КАК ЕстьПродажаСобственныхТоваровВКомиссию
	|ПОМЕСТИТЬ ДвиженияРегистраВыручки
	|ИЗ РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиПартнеров
	|			ПО КлючиПартнеров.Ссылка = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиНоменклатуры
	|			ПО КлючиНоменклатуры.Ссылка = ДанныеРегистра.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
	|	И (КлючиНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|		ИЛИ КлючиНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|		ИЛИ (НЕ ДанныеРегистра.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути)) И КлючиНоменклатуры.ТипМестаХранения В (ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер), ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация))))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.ВидЗапасов.ТипЗапасов,
	|	ДанныеРегистра.ВидЗапасов,
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.АналитикаУчетаНоменклатуры.СкладскаяТерритория КАК Склад,
	|	ДанныеРегистра.КорАналитикаУчетаНоменклатуры.Номенклатура,
	|	ИСТИНА КАК ЕстьРеализацияБезПереходаПраваСобственности,
	|	ДанныеРегистра.ВидДеятельностиНДС В (&НалогообложениеСНДС) КАК ЕстьПродажаСНДС,
	|	ДанныеРегистра.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД) КАК ЕстьПродажаЕНВД,
	|	ДанныеРегистра.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД) КАК ЕстьПродажаОСНО,
	|	ЛОЖЬ
	|ИЗ РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеРегистра.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
	|	И (ДанныеРегистра.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|		ИЛИ ДанныеРегистра.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияРегистраСебестоимости.Организация КАК Организация,
	|	Склады.Ссылка КАК Склад,
	|	ВЫБОР КОГДА НЕ Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		НоменклатураСпр.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		ЕСТЬNULL(ВидыЗапасовСпр.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ИСТИНА КАК ЕстьСобственныеТовары,
	|	ДвиженияРегистраСебестоимости.ЕстьРеализацияБезПереходаПраваСобственности,
	|	ЛОЖЬ КАК ЕстьПродажаСобственныхТоваров,
	|	ЛОЖЬ КАК ЕстьПродажаУслуг,
	|	ЛОЖЬ КАК ЕстьПродажаСНДС,
	|	ЛОЖЬ КАК ЕстьПродажаЕНВД,
	|	ЛОЖЬ КАК ЕстьПродажаОСНО,
	|	ДвиженияРегистраСебестоимости.ЕстьРезервы КАК ЕстьРезервы
	|ПОМЕСТИТЬ ТаблицаДвиженийБезГруппировки
	|ИЗ ДвиженияРегистраСебестоимости КАК ДвиженияРегистраСебестоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|			ПО ИСТИНА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|			ПО Аналитика.Ссылка = ДвиженияРегистраСебестоимости.АналитикаУчетаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО Склады.Ссылка = Аналитика.МестоХранения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|			ПО НоменклатураСпр.Ссылка = Аналитика.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСпр
	|			ПО ВидыЗапасовСпр.Ссылка = ДвиженияРегистраСебестоимости.ВидЗапасов
	|
	//++ НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЕСТЬNULL(Услуга.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)) КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК ЕстьСобственныеТовары,
	|	ЛОЖЬ КАК ЕстьРеализацияБезПереходаПраваСобственности,
	|	ИСТИНА КАК ЕстьПродажаСобственныхТоваров,
	|	ИСТИНА КАК ЕстьПродажаУслуг,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.НалогообложениеНДС В (&НалогообложениеСНДС)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьПродажаСНДС,
	|	ЛОЖЬ КАК ЕстьПродажаЕНВД,
	|	ЛОЖЬ КАК ЕстьПродажаОСНО,
	|	ЛОЖЬ КАК ЕстьРезервы
	|ИЗ
	|	Документ.ОтчетДавальцу КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Услуга
	|			ПО ДанныеДокумента.Номенклатура = Услуга.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация            КАК Организация,
	|	ДанныеДокумента.Склад                  КАК Склад,
	|	ДанныеДокумента.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ                                   КАК ЕстьСобственныеТовары,
	|	ЛОЖЬ                                   КАК ЕстьРеализацияБезПереходаПраваСобственности,
	|	ИСТИНА                                 КАК ЕстьПродажаСобственныхТоваров,
	|	ИСТИНА                                 КАК ЕстьПродажаУслуг,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.НалогообложениеНДС В (&НалогообложениеСНДС)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                  КАК ЕстьПродажаСНДС,
	|	ЛОЖЬ                                   КАК ЕстьПродажаЕНВД,
	|	ЛОЖЬ                                   КАК ЕстьПродажаОСНО,
	|	ЛОЖЬ                                   КАК ЕстьРезервы
	|ИЗ
	|	Документ.ОтчетДавальцу2_5 КАК ДанныеДокумента
	|ГДЕ
	|	&УсловиеДляДокумента
	|	
	//-- НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияРегистраВыручки.Организация,
	|	ВЫБОР КОГДА ДвиженияРегистраВыручки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	ИНАЧЕ
	|		ЕСТЬNULL(ДвиженияРегистраВыручки.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|	КОНЕЦ КАК Склад,
	|	ВЫБОР КОГДА НЕ Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ИЛИ ДвиженияРегистраВыручки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	ТОГДА
	|		НоменклатураСпр.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		ЕСТЬNULL(ВидыЗапасовСпр.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ДвиженияРегистраВыручки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга) КАК ЕстьСобственныеТовары,
	|	ДвиженияРегистраВыручки.ЕстьРеализацияБезПереходаПраваСобственности,
	|	ДвиженияРегистраВыручки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИЛИ ДвиженияРегистраВыручки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|		ИЛИ НоменклатураСпр.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		ИЛИ ДвиженияРегистраВыручки.ЕстьПродажаСобственныхТоваровВКомиссию КАК ЕстьПродажаСобственныхТоваров,
	|	ДвиженияРегистраВыручки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) КАК ЕстьПродажаУслуг,
	|	ДвиженияРегистраВыручки.ЕстьПродажаСНДС,
	|	ДвиженияРегистраВыручки.ЕстьПродажаЕНВД,
	|	ДвиженияРегистраВыручки.ЕстьПродажаОСНО,
	|	ЛОЖЬ КАК ЕстьРезервы
	|ИЗ ДвиженияРегистраВыручки КАК ДвиженияРегистраВыручки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|			ПО ИСТИНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|			ПО НоменклатураСпр.Ссылка = ДвиженияРегистраВыручки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСпр
	|			ПО ВидыЗапасовСпр.Ссылка = ДвиженияРегистраВыручки.ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.Склад КАК Склад,
	|	ВложенныйЗапрос.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьСобственныеТовары) КАК ЕстьСобственныеТовары,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРеализацияБезПереходаПраваСобственности) КАК ЕстьРеализацияБезПереходаПраваСобственности,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПродажаСобственныхТоваров) КАК ЕстьПродажаСобственныхТоваров,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПродажаУслуг) КАК ЕстьПродажаУслуг,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПродажаСНДС) КАК ЕстьПродажаСНДС,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПродажаЕНВД) КАК ЕстьПродажаЕНВД,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПродажаОСНО) КАК ЕстьПродажаОСНО,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРезервы) КАК ЕстьРезервы
	|ПОМЕСТИТЬ ТаблицаДвиженийНоменклатураСобственная
	|ИЗ ТаблицаДвиженийБезГруппировки КАК ВложенныйЗапрос
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.ГруппаФинансовогоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ДвиженияРегистраСебестоимости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ДвиженияРегистраВыручки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвиженийБезГруппировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация,
	|	КлючиНоменклатуры.Номенклатура,
	|	ДанныеРегистра.ВидЗапасов,
	|	ДанныеРегистра.РазделУчета,
	|	ДанныеРегистра.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеРезерваПодОбесценениеЗапасов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРезервовПодОбесценениеЗапасов)) КАК ЕстьРезервы,
	|	ВЫБОР
	|		КОГДА ДанныеРегистра.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|			И (ЕСТЬNULL(КлючиНоменклатуры.Договор.ТипДоговора, ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ПустаяСсылка)) =
	|				ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПереработчиком2_5)
	|				ИЛИ ЕСТЬNULL(КлючиНоменклатуры.Договор.ТипДоговора, ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ПустаяСсылка)) =
	|				ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПереработчиком2_5_ЕАЭС))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьПередачаТоваровПереработчику
	|ПОМЕСТИТЬ ДвиженияРегистраСебестоимости
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиНоменклатуры
	|		ПО КлючиНоменклатуры.Ссылка = ДанныеРегистра.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.ТипЗапасов,
	|	ДанныеРегистра.ВидЗапасов,
	|	КлючиПартнеров.Организация,
	|	КлючиНоменклатуры.Номенклатура,
	|	НЕ ДанныеРегистра.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути)) КАК ЕстьПродажаСобственныхТоваров,
	|	ДанныеРегистра.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути)) КАК ЕстьЗатратыНаПриобретениеТМЦ
	|ПОМЕСТИТЬ ДвиженияРегистраВыручки
	|ИЗ РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиПартнеров
	|		ПО КлючиПартнеров.Ссылка = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиНоменклатуры
	|		ПО КлючиНоменклатуры.Ссылка = ДанныеРегистра.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
	|	И (КлючиНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер)
	|		ИЛИ КлючиНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ВЫБОР КОГДА НЕ Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА НоменклатураСпр.ГруппаФинансовогоУчета
	|		ИНАЧЕ ЕСТЬNULL(ВидыЗапасовСпр.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК ЕстьПродажаСобственныхТоваров,
	|	ЛОЖЬ КАК ЕстьПередачаТоваровПереработчику,
	|	ЛОЖЬ КАК ЕстьЗатратыНаПриобретениеТМЦ,
	|	ЛОЖЬ КАК ЕстьРезервы
	|ПОМЕСТИТЬ ТаблицаДвиженийБезГруппировки
	|ИЗ РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.КлючАналитики = ДанныеРегистра.АналитикаУчетаНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|		ПО НоменклатураСпр.Ссылка = Аналитика.Номенклатура
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСпр
	|		ПО ВидыЗапасовСпр.Ссылка = ДанныеРегистра.ВидЗапасов
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ВидыЗапасовСпр.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	//++ Устарело_Переработка24
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасовСпр.Организация КАК Организация,
	|	ВЫБОР КОГДА НЕ Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА НоменклатураСпр.ГруппаФинансовогоУчета
	|		ИНАЧЕ ЕСТЬNULL(ВидыЗапасовСпр.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК ЕстьПродажаСобственныхТоваров,
	|	ИСТИНА КАК ЕстьПередачаТоваровПереработчику,
	|	ЛОЖЬ КАК ЕстьЗатратыНаПриобретениеТМЦ,
	|	ЛОЖЬ КАК ЕстьРезервы
	|ИЗ РегистрНакопления.ТоварыПереданныеПереработчику КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.КлючАналитики = ДанныеРегистра.АналитикаУчетаНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|		ПО НоменклатураСпр.Ссылка = Аналитика.Номенклатура
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСпр
	|		ПО ВидыЗапасовСпр.Ссылка = ДанныеРегистра.ВидЗапасов
	|ГДЕ
	|	&ОрганизацияИзСправочника_УсловиеДляРегистра
	|	И ВидыЗапасовСпр.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	//-- Устарело_Переработка24
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияРегистраВыручки.Организация,
	|	ВЫБОР КОГДА НЕ Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА НоменклатураСпр.ГруппаФинансовогоУчета
	|		ИНАЧЕ ЕСТЬNULL(ВидыЗапасовСпр.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ДвиженияРегистраВыручки.ЕстьПродажаСобственныхТоваров КАК ЕстьПродажаСобственныхТоваров,
	|	ЛОЖЬ КАК ЕстьПередачаТоваровПереработчику,
	|	ДвиженияРегистраВыручки.ЕстьЗатратыНаПриобретениеТМЦ КАК ЕстьЗатратыНаПриобретениеТМЦ,
	|	ЛОЖЬ КАК ЕстьРезервы
	|ИЗ ДвиженияРегистраВыручки КАК ДвиженияРегистраВыручки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|		ПО НоменклатураСпр.Ссылка = ДвиженияРегистраВыручки.Номенклатура
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСпр
	|		ПО ВидыЗапасовСпр.Ссылка = ДвиженияРегистраВыручки.ВидЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияРегистраСебестоимости.Организация,
	|	ВЫБОР КОГДА НЕ Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА НоменклатураСпр.ГруппаФинансовогоУчета
	|		ИНАЧЕ ЕСТЬNULL(ВидыЗапасовСпр.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам) КАК ЕстьПродажаСобственныхТоваров,
	|	ДвиженияРегистраСебестоимости.ЕстьПередачаТоваровПереработчику КАК ЕстьПередачаТоваровПереработчику,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути) КАК ЕстьЗатратыНаПриобретениеТМЦ,
	|	ДвиженияРегистраСебестоимости.ЕстьРезервы КАК ЕстьРезервы
	|ИЗ ДвиженияРегистраСебестоимости КАК ДвиженияРегистраСебестоимости
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|		ПО НоменклатураСпр.Ссылка = ДвиженияРегистраСебестоимости.Номенклатура
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСпр
	|		ПО ВидыЗапасовСпр.Ссылка = ДвиженияРегистраСебестоимости.ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК МестоУчета,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПродажаСобственныхТоваров) КАК ЕстьПродажаСобственныхТоваров,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПередачаТоваровПереработчику) КАК ЕстьПередачаТоваровПереработчику,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьЗатратыНаПриобретениеТМЦ) КАК ЕстьЗатратыНаПриобретениеТМЦ,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРезервы) КАК ЕстьРезервы
	|ПОМЕСТИТЬ ТаблицаДвиженийНоменклатураПереданная
	|ИЗ ТаблицаДвиженийБезГруппировки КАК ВложенныйЗапрос
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ГруппаФинансовогоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ДвиженияРегистраСебестоимости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ДвиженияРегистраВыручки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвиженийБезГруппировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация,
	|	КлючиНоменклатуры.Номенклатура,
	|	КлючиНоменклатуры.ТипМестаХранения,
	|	ДанныеРегистра.РазделУчета,
	|	ДанныеРегистра.ВидЗапасов,
	|	ЕСТЬNULL(КлючиНоменклатуры.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ) КАК ЦеховаяКладовая,
	|	КлючиНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение) КАК УчетНаПодразделении
	|ПОМЕСТИТЬ ДвиженияРегистраСебестоимости
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиНоменклатуры
	|		ПО КлючиНоменклатуры.Ссылка = ДанныеРегистра.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.РазделУчета В (&ЗабалансовыеРазделыУчета)
	|	И (ДанныеРегистра.СтоимостьЗабалансоваяРегл <> 0 ИЛИ ДанныеРегистра.Количество <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияРегистраСебестоимости.Организация,
	|	ВЫБОР КОГДА НЕ Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА НоменклатураСпр.ГруппаФинансовогоУчета
	|		ИНАЧЕ ЕСТЬNULL(ВидыЗапасовСпр.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработкуКОформлениюСписания) КАК ЕстьМатериалыПринятыеВПереработкуКСписанию,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработкуПереданныеПартнерам) КАК ЕстьМатериалыПринятыеВПереработкуУХранителей,
	|	ДвиженияРегистраСебестоимости.РазделУчета В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|	И НЕ ДвиженияРегистраСебестоимости.ЦеховаяКладовая
	|	И НЕ ДвиженияРегистраСебестоимости.УчетНаПодразделении КАК ЕстьТМЦНаСкладах,
	|	ДвиженияРегистраСебестоимости.РазделУчета В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|	И ДвиженияРегистраСебестоимости.ЦеховаяКладовая КАК ЕстьТМЦВПроизводстве,
	|	ДвиженияРегистраСебестоимости.РазделУчета В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|	И ДвиженияРегистраСебестоимости.УчетНаПодразделении КАК ЕстьТМЦПотребленные,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам) КАК ЕстьТМЦУХранителей,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиКОформлениюСписания) КАК ЕстьТМЦКСписанию,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|	И НЕ ДвиженияРегистраСебестоимости.ЦеховаяКладовая
	|	И НЕ ДвиженияРегистраСебестоимости.УчетНаПодразделении КАК ЕстьМатериалыПринятыеВПереработку,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|	И ДвиженияРегистраСебестоимости.ЦеховаяКладовая КАК ЕстьМатериалыПринятыеВПереработкуВПроизводстве,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|	И ДвиженияРегистраСебестоимости.УчетНаПодразделении КАК ЕстьМатериалыПринятыеПотребленные,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		И НЕ ДвиженияРегистраСебестоимости.ТипМестаХранения В (ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер), ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация)) КАК ЕстьТоварыНаСкладе,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		И ДвиженияРегистраСебестоимости.ТипМестаХранения В (ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер), ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация)) КАК ЕстьТоварыПереданныеНаКомиссию
	|ПОМЕСТИТЬ ТаблицаДвиженийБезГруппировки
	|ИЗ ДвиженияРегистраСебестоимости КАК ДвиженияРегистраСебестоимости
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|		ПО НоменклатураСпр.Ссылка = ДвиженияРегистраСебестоимости.Номенклатура
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСпр
	|		ПО ВидыЗапасовСпр.Ссылка = ДвиженияРегистраСебестоимости.ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК МестоУчета,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТМЦНаСкладах) КАК ЕстьТМЦНаСкладах,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТМЦВПроизводстве) КАК ЕстьТМЦВПроизводстве,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТМЦПотребленные) КАК ЕстьТМЦПотребленные,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТМЦУХранителей) КАК ЕстьТМЦУХранителей,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТМЦКСписанию) КАК ЕстьТМЦКСписанию,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьМатериалыПринятыеВПереработку) КАК ЕстьМатериалыПринятыеВПереработку,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьМатериалыПринятыеВПереработкуВПроизводстве) КАК ЕстьМатериалыПринятыеВПереработкуВПроизводстве,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьМатериалыПринятыеПотребленные) КАК ЕстьМатериалыПринятыеПотребленные,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьМатериалыПринятыеВПереработкуКСписанию) КАК ЕстьМатериалыПринятыеВПереработкуКСписанию,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьМатериалыПринятыеВПереработкуУХранителей) КАК ЕстьМатериалыПринятыеВПереработкуУХранителей,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТоварыНаСкладе) КАК ЕстьТоварыНаСкладе,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТоварыПереданныеНаКомиссию) КАК ЕстьТоварыПереданныеНаКомиссию
	|ПОМЕСТИТЬ ТаблицаДвиженийНоменклатураПринятая
	|ИЗ ТаблицаДвиженийБезГруппировки КАК ВложенныйЗапрос
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ГруппаФинансовогоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ДвиженияРегистраСебестоимости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвиженийБезГруппировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьСобственныеТовары КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам_Номенклатура
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	(ТаблицаДвижений.ЕстьПродажаСобственныхТоваров ИЛИ ТаблицаДвижений.ЕстьПродажаУслуг) И ТаблицаДвижений.ЕстьПродажаОСНО КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродажЕНВД) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	(ТаблицаДвижений.ЕстьПродажаСобственныхТоваров ИЛИ ТаблицаДвижений.ЕстьПродажаУслуг) И ТаблицаДвижений.ЕстьПродажаЕНВД КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПродажаСобственныхТоваров И ТаблицаДвижений.ЕстьПродажаОСНО КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажЕНВД) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПродажаСобственныхТоваров И ТаблицаДвижений.ЕстьПродажаЕНВД КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РеализацияБезПереходаПраваСобственности) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРеализацияБезПереходаПраваСобственности КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродаже) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПродажаСНДС КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриОтгрузкеБезПереходаПраваСобственности) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПродажаСНДС И ТаблицаДвижений.ЕстьРеализацияБезПереходаПраваСобственности КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПодОбесценениеТМЦ) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРезервы КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.АналитикаУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НоменклатураПереданная) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ИСТИНА КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПереданная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПродажаСобственныхТоваров КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПереданная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПродажаСобственныхТоваров КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПереданная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродаже) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПродажаСобственныхТоваров КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПереданная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗатратыНаПриобретениеТМЦ) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьЗатратыНаПриобретениеТМЦ КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПереданная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаВПереработку) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПередачаТоваровПереработчику КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПереданная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПодОбесценениеПереданные) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРезервы КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПереданная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.АналитикаУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦНаСкладах) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТМЦНаСкладах КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВПроизводстве) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТМЦВПроизводстве КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦПотребленныеВПроизводстве) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТМЦПотребленные КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦУХранителей) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТМЦУХранителей КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦКСписанию) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТМЦКСписанию КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработку) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьМатериалыПринятыеВПереработку КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуВПроизводстве) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьМатериалыПринятыеВПереработкуВПроизводстве КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПотребленныеВПроизводстве) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьМатериалыПринятыеПотребленные КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыНаСкладе) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТоварыНаСкладе КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыПереданныеНаКомиссию) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТоварыПереданныеНаКомиссию КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуКСписанию) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьМатериалыПринятыеВПереработкуКСписанию КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуУХранителей) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьМатериалыПринятыеВПереработкуУХранителей КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвиженийНоменклатураСобственная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвиженийНоменклатураПереданная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвиженийНоменклатураПринятая";
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
КонецПроцедуры

Процедура ДополнитьТекстЗапросаОперацийДаннымиНоменклатурыСобственной(СписокРазделов, МассивТекстовЗапроса)
	
	Если СписокРазделов.Найти("НоменклатураСобственная") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ДанныеРегистра.ВидЗапасов КАК ВидЗапасов,
	|	ДанныеРегистра.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути) КАК ЕстьРеализацияБезПереходаПраваСобственности,
	|	ДанныеРегистра.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеРезерваПодОбесценениеЗапасов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРезервовПодОбесценениеЗапасов)) КАК ЕстьРезервы
	|ПОМЕСТИТЬ ДвиженияРегистраСебестоимости
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.ТипЗапасов КАК ТипЗапасов,
	|	ДанныеРегистра.ВидЗапасов КАК ВидЗапасов,
	|	КлючиПартнеров.Организация КАК Организация,
	|	КлючиНоменклатуры.СкладскаяТерритория КАК Склад,
	|	КлючиНоменклатуры.Номенклатура КАК Номенклатура,
	|	ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности) КАК ЕстьРеализацияБезПереходаПраваСобственности,
	|	ДанныеРегистра.НалогообложениеНДС В (&НалогообложениеСНДС) КАК ЕстьПродажаСНДС,
	|	ДанныеРегистра.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД) КАК ЕстьПродажаЕНВД,
	|	ДанныеРегистра.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД) КАК ЕстьПродажаОСНО,
	|	КлючиНоменклатуры.ТипМестаХранения В (ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер), ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация)) КАК ЕстьПродажаСобственныхТоваровВКомиссию
	|ПОМЕСТИТЬ ДвиженияРегистраВыручки
	|ИЗ РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиПартнеров
	|			ПО КлючиПартнеров.Ссылка = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиНоменклатуры
	|			ПО КлючиНоменклатуры.Ссылка = ДанныеРегистра.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
	|	И (КлючиНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|		ИЛИ КлючиНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|		ИЛИ (НЕ ДанныеРегистра.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути)) И КлючиНоменклатуры.ТипМестаХранения В (ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер), ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация))))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.ВидЗапасов.ТипЗапасов,
	|	ДанныеРегистра.ВидЗапасов,
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.АналитикаУчетаНоменклатуры.СкладскаяТерритория КАК Склад,
	|	ДанныеРегистра.КорАналитикаУчетаНоменклатуры.Номенклатура,
	|	ИСТИНА КАК ЕстьРеализацияБезПереходаПраваСобственности,
	|	ДанныеРегистра.ВидДеятельностиНДС В (&НалогообложениеСНДС) КАК ЕстьПродажаСНДС,
	|	ДанныеРегистра.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД) КАК ЕстьПродажаЕНВД,
	|	ДанныеРегистра.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД) КАК ЕстьПродажаОСНО,
	|	ЛОЖЬ
	|ИЗ РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеРегистра.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
	|	И (ДанныеРегистра.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|		ИЛИ ДанныеРегистра.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияРегистраСебестоимости.Организация КАК Организация,
	|	Склады.Ссылка КАК Склад,
	|	ВЫБОР КОГДА НЕ Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		НоменклатураСпр.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		ЕСТЬNULL(ВидыЗапасовСпр.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ИСТИНА КАК ЕстьСобственныеТовары,
	|	ДвиженияРегистраСебестоимости.ЕстьРеализацияБезПереходаПраваСобственности,
	|	ЛОЖЬ КАК ЕстьПродажаСобственныхТоваров,
	|	ЛОЖЬ КАК ЕстьПродажаУслуг,
	|	ЛОЖЬ КАК ЕстьПродажаСНДС,
	|	ЛОЖЬ КАК ЕстьПродажаЕНВД,
	|	ЛОЖЬ КАК ЕстьПродажаОСНО,
	|	ДвиженияРегистраСебестоимости.ЕстьРезервы КАК ЕстьРезервы
	|ПОМЕСТИТЬ ТаблицаДвиженийБезГруппировки
	|ИЗ ДвиженияРегистраСебестоимости КАК ДвиженияРегистраСебестоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|			ПО ИСТИНА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|			ПО Аналитика.Ссылка = ДвиженияРегистраСебестоимости.АналитикаУчетаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО Склады.Ссылка = Аналитика.МестоХранения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|			ПО НоменклатураСпр.Ссылка = Аналитика.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСпр
	|			ПО ВидыЗапасовСпр.Ссылка = ДвиженияРегистраСебестоимости.ВидЗапасов
	|
	//++ НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЕСТЬNULL(Услуга.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)) КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК ЕстьСобственныеТовары,
	|	ЛОЖЬ КАК ЕстьРеализацияБезПереходаПраваСобственности,
	|	ИСТИНА КАК ЕстьПродажаСобственныхТоваров,
	|	ИСТИНА КАК ЕстьПродажаУслуг,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.НалогообложениеНДС В (&НалогообложениеСНДС)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьПродажаСНДС,
	|	ЛОЖЬ КАК ЕстьПродажаЕНВД,
	|	ЛОЖЬ КАК ЕстьПродажаОСНО,
	|	ЛОЖЬ КАК ЕстьРезервы
	|ИЗ
	|	Документ.ОтчетДавальцу КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Услуга
	|			ПО ДанныеДокумента.Номенклатура = Услуга.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация            КАК Организация,
	|	ДанныеДокумента.Склад                  КАК Склад,
	|	ДанныеДокумента.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ                                   КАК ЕстьСобственныеТовары,
	|	ЛОЖЬ                                   КАК ЕстьРеализацияБезПереходаПраваСобственности,
	|	ИСТИНА                                 КАК ЕстьПродажаСобственныхТоваров,
	|	ИСТИНА                                 КАК ЕстьПродажаУслуг,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.НалогообложениеНДС В (&НалогообложениеСНДС)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                  КАК ЕстьПродажаСНДС,
	|	ЛОЖЬ                                   КАК ЕстьПродажаЕНВД,
	|	ЛОЖЬ                                   КАК ЕстьПродажаОСНО,
	|	ЛОЖЬ                                   КАК ЕстьРезервы
	|ИЗ
	|	Документ.ОтчетДавальцу2_5 КАК ДанныеДокумента
	|ГДЕ
	|	&УсловиеДляДокумента
	|	
	//-- НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияРегистраВыручки.Организация,
	|	ВЫБОР КОГДА ДвиженияРегистраВыручки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	ИНАЧЕ
	|		ЕСТЬNULL(ДвиженияРегистраВыручки.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|	КОНЕЦ КАК Склад,
	|	ВЫБОР КОГДА НЕ Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ИЛИ ДвиженияРегистраВыручки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	ТОГДА
	|		НоменклатураСпр.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		ЕСТЬNULL(ВидыЗапасовСпр.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ДвиженияРегистраВыручки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга) КАК ЕстьСобственныеТовары,
	|	ДвиженияРегистраВыручки.ЕстьРеализацияБезПереходаПраваСобственности,
	|	ДвиженияРегистраВыручки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИЛИ ДвиженияРегистраВыручки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|		ИЛИ НоменклатураСпр.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		ИЛИ ДвиженияРегистраВыручки.ЕстьПродажаСобственныхТоваровВКомиссию КАК ЕстьПродажаСобственныхТоваров,
	|	ДвиженияРегистраВыручки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) КАК ЕстьПродажаУслуг,
	|	ДвиженияРегистраВыручки.ЕстьПродажаСНДС,
	|	ДвиженияРегистраВыручки.ЕстьПродажаЕНВД,
	|	ДвиженияРегистраВыручки.ЕстьПродажаОСНО,
	|	ЛОЖЬ КАК ЕстьРезервы
	|ИЗ ДвиженияРегистраВыручки КАК ДвиженияРегистраВыручки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|			ПО ИСТИНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|			ПО НоменклатураСпр.Ссылка = ДвиженияРегистраВыручки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСпр
	|			ПО ВидыЗапасовСпр.Ссылка = ДвиженияРегистраВыручки.ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.Склад КАК Склад,
	|	ВложенныйЗапрос.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьСобственныеТовары) КАК ЕстьСобственныеТовары,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРеализацияБезПереходаПраваСобственности) КАК ЕстьРеализацияБезПереходаПраваСобственности,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПродажаСобственныхТоваров) КАК ЕстьПродажаСобственныхТоваров,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПродажаУслуг) КАК ЕстьПродажаУслуг,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПродажаСНДС) КАК ЕстьПродажаСНДС,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПродажаЕНВД) КАК ЕстьПродажаЕНВД,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПродажаОСНО) КАК ЕстьПродажаОСНО,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРезервы) КАК ЕстьРезервы
	|ПОМЕСТИТЬ ТаблицаДвиженийНоменклатураСобственная
	|ИЗ ТаблицаДвиженийБезГруппировки КАК ВложенныйЗапрос
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.ГруппаФинансовогоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ДвиженияРегистраСебестоимости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ДвиженияРегистраВыручки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвиженийБезГруппировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьСобственныеТовары КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам_НоменклатураСобственная
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	(ТаблицаДвижений.ЕстьПродажаСобственныхТоваров ИЛИ ТаблицаДвижений.ЕстьПродажаУслуг) И ТаблицаДвижений.ЕстьПродажаОСНО КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродажЕНВД) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	(ТаблицаДвижений.ЕстьПродажаСобственныхТоваров ИЛИ ТаблицаДвижений.ЕстьПродажаУслуг) И ТаблицаДвижений.ЕстьПродажаЕНВД КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПродажаСобственныхТоваров И ТаблицаДвижений.ЕстьПродажаОСНО КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажЕНВД) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПродажаСобственныхТоваров И ТаблицаДвижений.ЕстьПродажаЕНВД КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РеализацияБезПереходаПраваСобственности) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРеализацияБезПереходаПраваСобственности КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродаже) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПродажаСНДС КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриОтгрузкеБезПереходаПраваСобственности) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПродажаСНДС И ТаблицаДвижений.ЕстьРеализацияБезПереходаПраваСобственности КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Склад КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПодОбесценениеТМЦ) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРезервы КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураСобственная КАК ТаблицаДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвиженийНоменклатураСобственная";
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
КонецПроцедуры

Процедура ДополнитьТекстЗапросаОперацийДаннымиНоменклатурыПереданной(СписокРазделов, МассивТекстовЗапроса)
	
	Если СписокРазделов.Найти("НоменклатураПереданная") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация,
	|	КлючиНоменклатуры.Номенклатура,
	|	ДанныеРегистра.ВидЗапасов,
	|	ДанныеРегистра.РазделУчета,
	|	ВЫБОР
	|		КОГДА ДанныеРегистра.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|			И (ЕСТЬNULL(КлючиНоменклатуры.Договор.ТипДоговора, ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ПустаяСсылка)) =
	|				ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПереработчиком2_5)
	|				ИЛИ ЕСТЬNULL(КлючиНоменклатуры.Договор.ТипДоговора, ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ПустаяСсылка)) =
	|				ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПереработчиком2_5_ЕАЭС))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьПередачаТоваровПереработчику
	|ПОМЕСТИТЬ ДвиженияРегистраСебестоимости
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиНоменклатуры
	|		ПО КлючиНоменклатуры.Ссылка = ДанныеРегистра.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.ТипЗапасов,
	|	ДанныеРегистра.ВидЗапасов,
	|	КлючиПартнеров.Организация,
	|	КлючиНоменклатуры.Номенклатура,
	|	НЕ ДанныеРегистра.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути)) КАК ЕстьПродажаСобственныхТоваров,
	|	ДанныеРегистра.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути)) КАК ЕстьЗатратыНаПриобретениеТМЦ
	|ПОМЕСТИТЬ ДвиженияРегистраВыручки
	|ИЗ РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиПартнеров
	|		ПО КлючиПартнеров.Ссылка = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиНоменклатуры
	|		ПО КлючиНоменклатуры.Ссылка = ДанныеРегистра.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
	|	И (КлючиНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер)
	|		ИЛИ КлючиНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ВЫБОР КОГДА НЕ Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА НоменклатураСпр.ГруппаФинансовогоУчета
	|		ИНАЧЕ ЕСТЬNULL(ВидыЗапасовСпр.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК ЕстьПродажаСобственныхТоваров,
	|	ЛОЖЬ КАК ЕстьПередачаТоваровПереработчику,
	|	ЛОЖЬ КАК ЕстьЗатратыНаПриобретениеТМЦ
	|ПОМЕСТИТЬ ТаблицаДвиженийБезГруппировки
	|ИЗ РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.КлючАналитики = ДанныеРегистра.АналитикаУчетаНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|		ПО НоменклатураСпр.Ссылка = Аналитика.Номенклатура
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСпр
	|		ПО ВидыЗапасовСпр.Ссылка = ДанныеРегистра.ВидЗапасов
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ВидыЗапасовСпр.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	//++ Устарело_Переработка24
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасовСпр.Организация КАК Организация,
	|	ВЫБОР КОГДА НЕ Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА НоменклатураСпр.ГруппаФинансовогоУчета
	|		ИНАЧЕ ЕСТЬNULL(ВидыЗапасовСпр.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК ЕстьПродажаСобственныхТоваров,
	|	ИСТИНА КАК ЕстьПередачаТоваровПереработчику,
	|	ЛОЖЬ КАК ЕстьЗатратыНаПриобретениеТМЦ
	|ИЗ РегистрНакопления.ТоварыПереданныеПереработчику КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.КлючАналитики = ДанныеРегистра.АналитикаУчетаНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|		ПО НоменклатураСпр.Ссылка = Аналитика.Номенклатура
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСпр
	|		ПО ВидыЗапасовСпр.Ссылка = ДанныеРегистра.ВидЗапасов
	|ГДЕ
	|	&ОрганизацияИзСправочника_УсловиеДляРегистра
	|	И ВидыЗапасовСпр.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	//-- Устарело_Переработка24
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияРегистраВыручки.Организация,
	|	ВЫБОР КОГДА НЕ Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА НоменклатураСпр.ГруппаФинансовогоУчета
	|		ИНАЧЕ ЕСТЬNULL(ВидыЗапасовСпр.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ДвиженияРегистраВыручки.ЕстьПродажаСобственныхТоваров КАК ЕстьПродажаСобственныхТоваров,
	|	ЛОЖЬ КАК ЕстьПередачаТоваровПереработчику,
	|	ДвиженияРегистраВыручки.ЕстьЗатратыНаПриобретениеТМЦ КАК ЕстьЗатратыНаПриобретениеТМЦ
	|ИЗ ДвиженияРегистраВыручки КАК ДвиженияРегистраВыручки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|		ПО НоменклатураСпр.Ссылка = ДвиженияРегистраВыручки.Номенклатура
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСпр
	|		ПО ВидыЗапасовСпр.Ссылка = ДвиженияРегистраВыручки.ВидЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияРегистраСебестоимости.Организация,
	|	ВЫБОР КОГДА НЕ Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА НоменклатураСпр.ГруппаФинансовогоУчета
	|		ИНАЧЕ ЕСТЬNULL(ВидыЗапасовСпр.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам) КАК ЕстьПродажаСобственныхТоваров,
	|	ДвиженияРегистраСебестоимости.ЕстьПередачаТоваровПереработчику КАК ЕстьПередачаТоваровПереработчику,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути) КАК ЕстьЗатратыНаПриобретениеТМЦ
	|ИЗ ДвиженияРегистраСебестоимости КАК ДвиженияРегистраСебестоимости
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|		ПО НоменклатураСпр.Ссылка = ДвиженияРегистраСебестоимости.Номенклатура
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСпр
	|		ПО ВидыЗапасовСпр.Ссылка = ДвиженияРегистраСебестоимости.ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК МестоУчета,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПродажаСобственныхТоваров) КАК ЕстьПродажаСобственныхТоваров,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПередачаТоваровПереработчику) КАК ЕстьПередачаТоваровПереработчику,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьЗатратыНаПриобретениеТМЦ) КАК ЕстьЗатратыНаПриобретениеТМЦ
	|ПОМЕСТИТЬ ТаблицаДвиженийНоменклатураПереданная
	|ИЗ ТаблицаДвиженийБезГруппировки КАК ВложенныйЗапрос
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ГруппаФинансовогоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ДвиженияРегистраСебестоимости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ДвиженияРегистраВыручки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвиженийБезГруппировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.АналитикаУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НоменклатураПереданная) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ИСТИНА КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам_НоменклатураПереданная
	|ИЗ ТаблицаДвиженийНоменклатураПереданная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПродажаСобственныхТоваров КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПереданная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПродажаСобственныхТоваров КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПереданная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродаже) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПродажаСобственныхТоваров КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПереданная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗатратыНаПриобретениеТМЦ) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьЗатратыНаПриобретениеТМЦ КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПереданная КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаВПереработку) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьПередачаТоваровПереработчику КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПереданная КАК ТаблицаДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвиженийНоменклатураПереданная";
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
КонецПроцедуры

Процедура ДополнитьТекстЗапросаОперацийДаннымиНоменклатурыПринятой(СписокРазделов, МассивТекстовЗапроса)
	
	Если СписокРазделов.Найти("НоменклатураПринятая") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация,
	|	КлючиНоменклатуры.Номенклатура,
	|	КлючиНоменклатуры.ТипМестаХранения,
	|	ДанныеРегистра.РазделУчета,
	|	ДанныеРегистра.ВидЗапасов,
	|	ЕСТЬNULL(КлючиНоменклатуры.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ) КАК ЦеховаяКладовая,
	|	КлючиНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение) КАК УчетНаПодразделении
	|ПОМЕСТИТЬ ДвиженияРегистраСебестоимости
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиНоменклатуры
	|		ПО КлючиНоменклатуры.Ссылка = ДанныеРегистра.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.РазделУчета В (&ЗабалансовыеРазделыУчета)
	|	И (ДанныеРегистра.СтоимостьЗабалансоваяРегл <> 0 ИЛИ ДанныеРегистра.Количество <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияРегистраСебестоимости.Организация,
	|	ВЫБОР КОГДА НЕ Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА НоменклатураСпр.ГруппаФинансовогоУчета
	|		ИНАЧЕ ЕСТЬNULL(ВидыЗапасовСпр.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработкуКОформлениюСписания) КАК ЕстьМатериалыПринятыеВПереработкуКСписанию,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработкуПереданныеПартнерам) КАК ЕстьМатериалыПринятыеВПереработкуУХранителей,
	|	ДвиженияРегистраСебестоимости.РазделУчета В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|	И НЕ ДвиженияРегистраСебестоимости.ЦеховаяКладовая
	|	И НЕ ДвиженияРегистраСебестоимости.УчетНаПодразделении КАК ЕстьТМЦНаСкладах,
	|	ДвиженияРегистраСебестоимости.РазделУчета В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|	И ДвиженияРегистраСебестоимости.ЦеховаяКладовая КАК ЕстьТМЦВПроизводстве,
	|	ДвиженияРегистраСебестоимости.РазделУчета В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|	И ДвиженияРегистраСебестоимости.УчетНаПодразделении КАК ЕстьТМЦПотребленные,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам) КАК ЕстьТМЦУХранителей,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиКОформлениюСписания) КАК ЕстьТМЦКСписанию,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|	И НЕ ДвиженияРегистраСебестоимости.ЦеховаяКладовая
	|	И НЕ ДвиженияРегистраСебестоимости.УчетНаПодразделении КАК ЕстьМатериалыПринятыеВПереработку,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|	И ДвиженияРегистраСебестоимости.ЦеховаяКладовая КАК ЕстьМатериалыПринятыеВПереработкуВПроизводстве,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|	И ДвиженияРегистраСебестоимости.УчетНаПодразделении КАК ЕстьМатериалыПринятыеПотребленные,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		И НЕ ДвиженияРегистраСебестоимости.ТипМестаХранения В (ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер), ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация)) КАК ЕстьТоварыНаСкладе,
	|	ДвиженияРегистраСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		И ДвиженияРегистраСебестоимости.ТипМестаХранения В (ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер), ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация)) КАК ЕстьТоварыПереданныеНаКомиссию
	|ПОМЕСТИТЬ ТаблицаДвиженийБезГруппировки
	|ИЗ ДвиженияРегистраСебестоимости КАК ДвиженияРегистраСебестоимости
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|		ПО НоменклатураСпр.Ссылка = ДвиженияРегистраСебестоимости.Номенклатура
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСпр
	|		ПО ВидыЗапасовСпр.Ссылка = ДвиженияРегистраСебестоимости.ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК МестоУчета,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТМЦНаСкладах) КАК ЕстьТМЦНаСкладах,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТМЦВПроизводстве) КАК ЕстьТМЦВПроизводстве,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТМЦПотребленные) КАК ЕстьТМЦПотребленные,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТМЦУХранителей) КАК ЕстьТМЦУХранителей,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТМЦКСписанию) КАК ЕстьТМЦКСписанию,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьМатериалыПринятыеВПереработку) КАК ЕстьМатериалыПринятыеВПереработку,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьМатериалыПринятыеВПереработкуВПроизводстве) КАК ЕстьМатериалыПринятыеВПереработкуВПроизводстве,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьМатериалыПринятыеПотребленные) КАК ЕстьМатериалыПринятыеПотребленные,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТоварыНаСкладе) КАК ЕстьТоварыНаСкладе,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТоварыПереданныеНаКомиссию) КАК ЕстьТоварыПереданныеНаКомиссию,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьМатериалыПринятыеВПереработкуКСписанию) КАК ЕстьМатериалыПринятыеВПереработкуКСписанию,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьМатериалыПринятыеВПереработкуУХранителей) КАК ЕстьМатериалыПринятыеВПереработкуУХранителей
	|ПОМЕСТИТЬ ТаблицаДвиженийНоменклатураПринятая
	|ИЗ ТаблицаДвиженийБезГруппировки КАК ВложенныйЗапрос
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ГруппаФинансовогоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ДвиженияРегистраСебестоимости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвиженийБезГруппировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.АналитикаУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦНаСкладах) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТМЦНаСкладах КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам_НоменклатураПринятая
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВПроизводстве) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТМЦВПроизводстве КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦПотребленныеВПроизводстве) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТМЦПотребленные КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦУХранителей) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТМЦУХранителей КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦКСписанию) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТМЦКСписанию КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработку) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьМатериалыПринятыеВПереработку КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуВПроизводстве) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьМатериалыПринятыеВПереработкуВПроизводстве КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПотребленныеВПроизводстве) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьМатериалыПринятыеПотребленные КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыНаСкладе) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТоварыНаСкладе КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыПереданныеНаКомиссию) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТоварыПереданныеНаКомиссию КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуКСписанию) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьМатериалыПринятыеВПереработкуКСписанию КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуУХранителей) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьМатериалыПринятыеВПереработкуУХранителей КАК Требуется
	|ИЗ ТаблицаДвиженийНоменклатураПринятая КАК ТаблицаДвижений;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвиженийНоменклатураПринятая";
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
КонецПроцедуры

Процедура ДополнитьТекстЗапросаОперацийДаннымиРасчетовСПартнерами(СписокРазделов, МассивТекстовЗапросаДляДобавления)
	
	Если СписокРазделов.Найти("РасчетыСПартнерами") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивТекстовЗапроса = Новый Массив;
	
	#Область СборДанныхРегистров
	
	МассивЗапросовСбораДанных = Новый Массив;
	
	#Область РасчетыСКлиентами
	
	// Есть расчеты с клиентами (в том числе по таре и по комиссии)
	
	Если ПолучитьФункциональнуюОпцию("ВыделятьДолгосрочныеАктивыОбязательства") И ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
	
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КлючиПартнеров.Организация КАК Организация,
		|	ДанныеРегистра.ОбъектРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
		|	РАЗНОСТЬДАТ(ДанныеРегистра.Период, ДанныеРегистра.ДатаПлановогоПогашения, МЕСЯЦ) >= ЕСТЬNULL(УчетнаяПолитикаОрганизаций.МесяцыДолгосрочнойЗадолженности, 999) КАК Долгосрочный,
		|	ИСТИНА КАК ЕстьРасчетыСКлиентами,
		|	ЛОЖЬ КАК ЕстьРасчетыСПоставщиками,
		|	ИспользоватьМногооборотнуюТару.Значение КАК ЕстьРасчетыСКлиентамиТара,
		|	ЛОЖЬ КАК ЕстьРасчетыСПоставщикамиТара,
		|	ЛОЖЬ КАК ЕстьРасчетыСКредиторами,
		|	ЛОЖЬ КАК ЕстьРасчетыСДебиторами,
		|	ЛОЖЬ КАК ЕстьРасчетыПоОсновномуДолгу,
		|	ЛОЖЬ КАК ЕстьРасчетыПоКомиссии,
		|	ЛОЖЬ КАК ЕстьРасчетыПоПроцентам,
		|	ЛОЖЬ КАК ЕстьНеотфактурованныеПоставки,
		|	ЛОЖЬ КАК ЕстьЛизинговыеУслуги,
		|	ЛОЖЬ КАК ЕстьОбеспечительныйПлатежПоЛизингу,
		|	ЛОЖЬ КАК ЕстьВыкупПредметаЛизинга,
		|	ЛОЖЬ КАК ЕстьАрендныеОбязательстваПоЛизингу,
		|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоПродаже,
		|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоЗакупке,
		|	ЛОЖЬ КАК ЕстьРасчетыПоДисконтированию
		|ПОМЕСТИТЬ ТаблицаДвиженийБезГруппировки
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК ДанныеРегистра
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК КлючиПартнеров
		|		ПО ДанныеРегистра.АналитикаУчетаПоПартнерам = КлючиПартнеров.КлючАналитики
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.ИспользоватьМногооборотнуюТару КАК ИспользоватьМногооборотнуюТару
		|		ПО ИСТИНА
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаОрганизацийПоПериодам КАК УчетнаяПолитикаОрганизаций
		|		ПО КлючиПартнеров.Организация = УчетнаяПолитикаОрганизаций.Организация
		|			И ДанныеРегистра.Период >= УчетнаяПолитикаОрганизаций.НачалоДействия
		|			И ДанныеРегистра.Период <= УчетнаяПолитикаОрганизаций.ОкончаниеДействия
		|			И УчетнаяПолитикаОрганизаций.ДолгосрочныеАктивыОбязательства
		|ГДЕ
		|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
		|	
		|";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КлючиПартнеров.Организация КАК Организация,
		|	ДанныеРегистра.ОбъектРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
		|	ЛОЖЬ КАК Долгосрочный,
		|	ИСТИНА КАК ЕстьРасчетыСКлиентами,
		|	ЛОЖЬ КАК ЕстьРасчетыСПоставщиками,
		|	ИспользоватьМногооборотнуюТару.Значение КАК ЕстьРасчетыСКлиентамиТара,
		|	ЛОЖЬ КАК ЕстьРасчетыСПоставщикамиТара,
		|	ЛОЖЬ КАК ЕстьРасчетыСКредиторами,
		|	ЛОЖЬ КАК ЕстьРасчетыСДебиторами,
		|	ЛОЖЬ КАК ЕстьРасчетыПоОсновномуДолгу,
		|	ЛОЖЬ КАК ЕстьРасчетыПоКомиссии,
		|	ЛОЖЬ КАК ЕстьРасчетыПоПроцентам,
		|	ЛОЖЬ КАК ЕстьНеотфактурованныеПоставки,
		|	ЛОЖЬ КАК ЕстьЛизинговыеУслуги,
		|	ЛОЖЬ КАК ЕстьОбеспечительныйПлатежПоЛизингу,
		|	ЛОЖЬ КАК ЕстьВыкупПредметаЛизинга,
		|	ЛОЖЬ КАК ЕстьАрендныеОбязательстваПоЛизингу,
		|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоПродаже,
		|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоЗакупке,
		|	ЛОЖЬ КАК ЕстьРасчетыПоДисконтированию
		|ПОМЕСТИТЬ ТаблицаДвиженийБезГруппировки
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами КАК ДанныеРегистра
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК КлючиПартнеров
		|		ПО ДанныеРегистра.АналитикаУчетаПоПартнерам = КлючиПартнеров.КлючАналитики
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.ИспользоватьМногооборотнуюТару КАК ИспользоватьМногооборотнуюТару
		|		ПО ИСТИНА
		|ГДЕ
		|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
		|	
		|";
		
	КонецЕсли;
	
	МассивЗапросовСбораДанных.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область РасчетыСПоставщиками
	
	// Есть расчеты с поставщиками (в том числе по таре и по комиссии)
	Если ПолучитьФункциональнуюОпцию("ВыделятьДолгосрочныеАктивыОбязательства") И ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
	
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КлючиПартнеров.Организация КАК Организация,
		|	ДанныеРегистра.ОбъектРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
		|	РАЗНОСТЬДАТ(ДанныеРегистра.Период, ДанныеРегистра.ДатаПлановогоПогашения, МЕСЯЦ) >= ЕСТЬNULL(УчетнаяПолитикаОрганизаций.МесяцыДолгосрочнойЗадолженности, 999) КАК Долгосрочный,
		|	ЛОЖЬ КАК ЕстьРасчетыСКлиентами,
		|	ИСТИНА КАК ЕстьРасчетыСПоставщиками,
		|	ЛОЖЬ КАК ЕстьРасчетыСКлиентамиТара,
		|	ИспользоватьМногооборотнуюТару.Значение КАК ЕстьРасчетыСПоставщикамиТара,
		|	ЛОЖЬ КАК ЕстьРасчетыСКредиторами,
		|	ЛОЖЬ КАК ЕстьРасчетыСДебиторами,
		|	ЛОЖЬ КАК ЕстьРасчетыПоОсновномуДолгу,
		|	ЛОЖЬ КАК ЕстьРасчетыПоКомиссии,
		|	ЛОЖЬ КАК ЕстьРасчетыПоПроцентам,
		|	ЛОЖЬ КАК ЕстьНеотфактурованныеПоставки,
		|	ЛОЖЬ КАК ЕстьЛизинговыеУслуги,
		|	ЛОЖЬ КАК ЕстьОбеспечительныйПлатежПоЛизингу,
		|	ЛОЖЬ КАК ЕстьВыкупПредметаЛизинга,
		|	ЛОЖЬ КАК ЕстьАрендныеОбязательстваПоЛизингу,
		|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоПродаже,
		|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоЗакупке,
		|	ЛОЖЬ КАК ЕстьРасчетыПоДисконтированию
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК ДанныеРегистра
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК КлючиПартнеров
		|		ПО ДанныеРегистра.АналитикаУчетаПоПартнерам = КлючиПартнеров.КлючАналитики
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.ИспользоватьМногооборотнуюТару КАК ИспользоватьМногооборотнуюТару
		|		ПО ИСТИНА
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаОрганизацийПоПериодам КАК УчетнаяПолитикаОрганизаций
		|		ПО КлючиПартнеров.Организация = УчетнаяПолитикаОрганизаций.Организация
		|			И ДанныеРегистра.Период >= УчетнаяПолитикаОрганизаций.НачалоДействия
		|			И ДанныеРегистра.Период <= УчетнаяПолитикаОрганизаций.ОкончаниеДействия
		|			И УчетнаяПолитикаОрганизаций.ДолгосрочныеАктивыОбязательства
		|ГДЕ
		|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
		|	
		|";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КлючиПартнеров.Организация КАК Организация,
		|	ДанныеРегистра.ОбъектРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
		|	ЛОЖЬ КАК Долгосрочный,
		|	ЛОЖЬ КАК ЕстьРасчетыСКлиентами,
		|	ИСТИНА КАК ЕстьРасчетыСПоставщиками,
		|	ЛОЖЬ КАК ЕстьРасчетыСКлиентамиТара,
		|	ИспользоватьМногооборотнуюТару.Значение КАК ЕстьРасчетыСПоставщикамиТара,
		|	ЛОЖЬ КАК ЕстьРасчетыСКредиторами,
		|	ЛОЖЬ КАК ЕстьРасчетыСДебиторами,
		|	ЛОЖЬ КАК ЕстьРасчетыПоОсновномуДолгу,
		|	ЛОЖЬ КАК ЕстьРасчетыПоКомиссии,
		|	ЛОЖЬ КАК ЕстьРасчетыПоПроцентам,
		|	ЛОЖЬ КАК ЕстьНеотфактурованныеПоставки,
		|	ЛОЖЬ КАК ЕстьЛизинговыеУслуги,
		|	ЛОЖЬ КАК ЕстьОбеспечительныйПлатежПоЛизингу,
		|	ЛОЖЬ КАК ЕстьВыкупПредметаЛизинга,
		|	ЛОЖЬ КАК ЕстьАрендныеОбязательстваПоЛизингу,
		|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоПродаже,
		|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоЗакупке,
		|	ЛОЖЬ КАК ЕстьРасчетыПоДисконтированию
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщиками КАК ДанныеРегистра
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК КлючиПартнеров
		|		ПО ДанныеРегистра.АналитикаУчетаПоПартнерам = КлючиПартнеров.КлючАналитики
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.ИспользоватьМногооборотнуюТару КАК ИспользоватьМногооборотнуюТару
		|		ПО ИСТИНА
		|ГДЕ
		|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
		|	
		|";
		
	КонецЕсли;
	
	МассивЗапросовСбораДанных.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область РасчетыСДебиторамиКредиторами
	
	// Есть расчеты по депозитам и займам выданным, по оплате комиссии по кредитам и займам полученным.
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КлючиПартнеров.Организация КАК Организация,
	|	ЕСТЬNULL(ДанныеРегистра.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ЛОЖЬ КАК ЕстьРасчетыСКлиентами,
	|	ЛОЖЬ КАК ЕстьРасчетыСПоставщиками,
	|	ЛОЖЬ КАК ЕстьРасчетыСКлиентамиТара,
	|	ЛОЖЬ КАК ЕстьРасчетыСПоставщикамиТара,
	|	ДанныеРегистра.Договор.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм) КАК ЕстьРасчетыСКредиторами,
	|	ДанныеРегистра.Договор.ХарактерДоговора <> ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм) КАК ЕстьРасчетыСДебиторами,
	|	ДанныеРегистра.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг) КАК ЕстьРасчетыПоОсновномуДолгу,
	|	ДанныеРегистра.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия) КАК ЕстьРасчетыПоКомиссии,
	|	ДанныеРегистра.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты) КАК ЕстьРасчетыПоПроцентам,
	|	ЛОЖЬ КАК ЕстьНеотфактурованныеПоставки,
	|	ЛОЖЬ КАК ЕстьЛизинговыеУслуги,
	|	ЛОЖЬ КАК ЕстьОбеспечительныйПлатежПоЛизингу,
	|	ЛОЖЬ КАК ЕстьВыкупПредметаЛизинга,
	|	ЛОЖЬ КАК ЕстьАрендныеОбязательстваПоЛизингу,
	|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоПродаже,
	|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоЗакупке,
	|	ЛОЖЬ КАК ЕстьРасчетыПоДисконтированию
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК КлючиПартнеров
	|		ПО ДанныеРегистра.АналитикаУчетаПоПартнерам = КлючиПартнеров.КлючАналитики
	|ГДЕ
	|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
	|	
	|";
	МассивЗапросовСбораДанных.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область НеотфактурованныеПоставки
	
	// Есть расчеты по неотфактуренным поставкам
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ЕСТЬNULL(КлючиНоменклатуры.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ЛОЖЬ КАК ЕстьРасчетыСКлиентами,
	|	ЛОЖЬ КАК ЕстьРасчетыСПоставщиками,
	|	ЛОЖЬ КАК ЕстьРасчетыСКлиентамиТара,
	|	ЛОЖЬ КАК ЕстьРасчетыСПоставщикамиТара,
	|	ЛОЖЬ КАК ЕстьРасчетыСКредиторами,
	|	ЛОЖЬ КАК ЕстьРасчетыСДебиторами,
	|	ЛОЖЬ КАК ЕстьРасчетыПоОсновномуДолгу,
	|	ЛОЖЬ КАК ЕстьРасчетыПоКомиссии,
	|	ЛОЖЬ КАК ЕстьРасчетыПоПроцентам,
	|	ИСТИНА КАК ЕстьНеотфактурованныеПоставки,
	|	ЛОЖЬ КАК ЕстьЛизинговыеУслуги,
	|	ЛОЖЬ КАК ЕстьОбеспечительныйПлатежПоЛизингу,
	|	ЛОЖЬ КАК ЕстьВыкупПредметаЛизинга,
	|	ЛОЖЬ КАК ЕстьАрендныеОбязательстваПоЛизингу,
	|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоПродаже,
	|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоЗакупке,
	|	ЛОЖЬ КАК ЕстьРасчетыПоДисконтированию
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиНоменклатуры
	|			ПО КлючиНоменклатуры.Ссылка = ДанныеРегистра.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
	|";
	МассивЗапросовСбораДанных.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область РасчетыПоЛизингу
	
	ТестыЗапросаЛизинг = Новый Массив();
	// Есть расчеты по лизингу
	ТестыЗапросаЛизинг.Добавить("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КлючиПартнеров.Организация КАК Организация,
	|	КлючиПартнеров.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ЛОЖЬ КАК ЕстьРасчетыСКлиентами,
	|	ЛОЖЬ КАК ЕстьРасчетыСПоставщиками,
	|	ЛОЖЬ КАК ЕстьРасчетыСКлиентамиТара,
	|	ЛОЖЬ КАК ЕстьРасчетыСПоставщикамиТара,
	|	ЛОЖЬ КАК ЕстьРасчетыСКредиторами,
	|	ЛОЖЬ КАК ЕстьРасчетыСДебиторами,
	|	ЛОЖЬ КАК ЕстьРасчетыПоОсновномуДолгу,
	|	ЛОЖЬ КАК ЕстьРасчетыПоКомиссии,
	|	ЛОЖЬ КАК ЕстьРасчетыПоПроцентам,
	|	ЛОЖЬ КАК ЕстьНеотфактурованныеПоставки,
	|	ДанныеРегистра.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|		ИЛИ ДанныеРегистра.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс) КАК ЕстьЛизинговыеУслуги,
	|	ДанныеРегистра.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж) КАК ЕстьОбеспечительныйПлатежПоЛизингу,
	|	ДанныеРегистра.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость) 
	|		ИЛИ ДанныеРегистра.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимостьАванс) КАК ЕстьВыкупПредметаЛизинга,
	|	ДанныеРегистра.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства) КАК ЕстьАрендныеОбязательстваПоЛизингу,
	|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоПродаже,
	|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоЗакупке,
	|	ЛОЖЬ КАК ЕстьРасчетыПоДисконтированию
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыАренды КАК КлючиПартнеров
	|		ПО ДанныеРегистра.Договор = КлючиПартнеров.Ссылка
	|ГДЕ
	|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
	|	");
	
	Если ПолучитьФункциональнуюОпцию("ВыделятьДолгосрочныеАктивыОбязательства") Тогда
	
		ТестыЗапросаЛизинг.Добавить("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КлючиПартнеров.Организация КАК Организация,
		|	КлючиПартнеров.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
		|	ИСТИНА КАК Долгосрочный,
		|	ЛОЖЬ КАК ЕстьРасчетыСКлиентами,
		|	ЛОЖЬ КАК ЕстьРасчетыСПоставщиками,
		|	ЛОЖЬ КАК ЕстьРасчетыСКлиентамиТара,
		|	ЛОЖЬ КАК ЕстьРасчетыСПоставщикамиТара,
		|	ЛОЖЬ КАК ЕстьРасчетыСКредиторами,
		|	ЛОЖЬ КАК ЕстьРасчетыСДебиторами,
		|	ЛОЖЬ КАК ЕстьРасчетыПоОсновномуДолгу,
		|	ЛОЖЬ КАК ЕстьРасчетыПоКомиссии,
		|	ЛОЖЬ КАК ЕстьРасчетыПоПроцентам,
		|	ЛОЖЬ КАК ЕстьНеотфактурованныеПоставки,
		|	ЛОЖЬ КАК ЕстьЛизинговыеУслуги,
		|	ЛОЖЬ КАК ЕстьОбеспечительныйПлатежПоЛизингу,
		|	ЛОЖЬ КАК ЕстьВыкупПредметаЛизинга,
		|	ДанныеРегистра.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства) КАК ЕстьАрендныеОбязательстваПоЛизингу,
		|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоПродаже,
		|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоЗакупке,
		|	ЛОЖЬ КАК ЕстьРасчетыПоДисконтированию
		|ИЗ
		|	РегистрНакопления.РасчетыПоФинансовымИнструментам КАК ДанныеРегистра
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыАренды КАК КлючиПартнеров
		|		ПО ДанныеРегистра.Договор = КлючиПартнеров.Ссылка
		|ГДЕ
		|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
		|	");
	КонецЕсли;
	
	МассивЗапросовСбораДанных.Добавить(
		СтрСоединить(ТестыЗапросаЛизинг, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()));
	
	#КонецОбласти
	
	#Область РасчетыСКомитентамиПоПродаже
	
	// Есть расчеты с комитентами по товарам к оформлению
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КлючиПартнеров.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА КлючиПартнеров.Договор ССЫЛКА Справочник.ДоговорыМеждуОрганизациями И КлючиПартнеров.Организация = КлючиПартнеров.Договор.ОрганизацияПолучатель
	|		ТОГДА ЕСТЬNULL(КлючиПартнеров.Договор.ГруппаФинансовогоУчетаПолучателя, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|		ИНАЧЕ ЕСТЬNULL(КлючиПартнеров.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ЛОЖЬ КАК ЕстьРасчетыСКлиентами,
	|	ЛОЖЬ КАК ЕстьРасчетыСПоставщиками,
	|	ЛОЖЬ КАК ЕстьРасчетыСКлиентамиТара,
	|	ЛОЖЬ КАК ЕстьРасчетыСПоставщикамиТара,
	|	ЛОЖЬ КАК ЕстьРасчетыСКредиторами,
	|	ЛОЖЬ КАК ЕстьРасчетыСДебиторами,
	|	ЛОЖЬ КАК ЕстьРасчетыПоОсновномуДолгу,
	|	ЛОЖЬ КАК ЕстьРасчетыПоКомиссии,
	|	ЛОЖЬ КАК ЕстьРасчетыПоПроцентам,
	|	ЛОЖЬ КАК ЕстьНеотфактурованныеПоставки,
	|	ЛОЖЬ КАК ЕстьЛизинговыеУслуги,
	|	ЛОЖЬ КАК ЕстьОбеспечительныйПлатежПоЛизингу,
	|	ЛОЖЬ КАК ЕстьВыкупПредметаЛизинга,
	|	ЛОЖЬ КАК ЕстьАрендныеОбязательстваПоЛизингу,
	|	ИСТИНА КАК ЕстьТоварыКомитентовКОформлениюПоПродаже,
	|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоЗакупке,
	|	ЛОЖЬ КАК ЕстьРасчетыПоДисконтированию
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КлючиПартнеров
	|		ПО ДанныеРегистра.ВидЗапасов = КлючиПартнеров.Ссылка
	|ГДЕ
	|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
	|	
	|";
	МассивЗапросовСбораДанных.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область РасчетыСКомитентамиПоЗакупке
	
	// Есть расчеты с комитентами по товарам к оформлению по закупке
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Назначение.Договор.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ЛОЖЬ КАК ЕстьРасчетыСКлиентами,
	|	ЛОЖЬ КАК ЕстьРасчетыСПоставщиками,
	|	ЛОЖЬ КАК ЕстьРасчетыСКлиентамиТара,
	|	ЛОЖЬ КАК ЕстьРасчетыСПоставщикамиТара,
	|	ЛОЖЬ КАК ЕстьРасчетыСКредиторами,
	|	ЛОЖЬ КАК ЕстьРасчетыСДебиторами,
	|	ЛОЖЬ КАК ЕстьРасчетыПоОсновномуДолгу,
	|	ЛОЖЬ КАК ЕстьРасчетыПоКомиссии,
	|	ЛОЖЬ КАК ЕстьРасчетыПоПроцентам,
	|	ЛОЖЬ КАК ЕстьНеотфактурованныеПоставки,
	|	ЛОЖЬ КАК ЕстьЛизинговыеУслуги,
	|	ЛОЖЬ КАК ЕстьОбеспечительныйПлатежПоЛизингу,
	|	ЛОЖЬ КАК ЕстьВыкупПредметаЛизинга,
	|	ЛОЖЬ КАК ЕстьАрендныеОбязательстваПоЛизингу,
	|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоПродаже,
	|	ИСТИНА КАК ЕстьТоварыКомитентовКОформлениюПоЗакупке,
	|	ЛОЖЬ КАК ЕстьРасчетыПоДисконтированию
	|ИЗ
	|	РегистрНакопления.ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупках КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|";
	МассивЗапросовСбораДанных.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область РасчетыПоДисконтированию
	
	ТестыЗапросаДисконтирование = Новый Массив();
	// Есть расчеты по дисконтированию
	ТестыЗапросаДисконтирование.Добавить("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КлючиПартнеров.Организация КАК Организация,
	|	ДанныеРегистра.ОбъектРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ЛОЖЬ КАК ЕстьРасчетыСКлиентами,
	|	ЛОЖЬ КАК ЕстьРасчетыСПоставщиками,
	|	ЛОЖЬ КАК ЕстьРасчетыСКлиентамиТара,
	|	ЛОЖЬ КАК ЕстьРасчетыСПоставщикамиТара,
	|	ЛОЖЬ КАК ЕстьРасчетыСКредиторами,
	|	ЛОЖЬ КАК ЕстьРасчетыСДебиторами,
	|	ЛОЖЬ КАК ЕстьРасчетыПоОсновномуДолгу,
	|	ЛОЖЬ КАК ЕстьРасчетыПоКомиссии,
	|	ЛОЖЬ КАК ЕстьРасчетыПоПроцентам,
	|	ЛОЖЬ КАК ЕстьНеотфактурованныеПоставки,
	|	ЛОЖЬ КАК ЕстьЛизинговыеУслуги,
	|	ЛОЖЬ КАК ЕстьОбеспечительныйПлатежПоЛизингу,
	|	ЛОЖЬ КАК ЕстьВыкупПредметаЛизинга,
	|	ЛОЖЬ КАК ЕстьАрендныеОбязательстваПоЛизингу,
	|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоПродаже,
	|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоЗакупке,
	|	ИСТИНА КАК ЕстьРасчетыПоДисконтированию
	|ИЗ
	|	РегистрНакопления.ПроцентныеРасходыДисконтирования КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиПартнеров
	|		ПО ДанныеРегистра.АналитикаУчетаПоПартнерам = КлючиПартнеров.Ссылка
	|ГДЕ
	|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
	|	");
	
	Если ПолучитьФункциональнуюОпцию("ВыделятьДолгосрочныеАктивыОбязательства") Тогда
	
		ТестыЗапросаДисконтирование.Добавить("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КлючиПартнеров.Организация КАК Организация,
		|	ДанныеРегистра.ОбъектРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
		|	ИСТИНА КАК Долгосрочный,
		|	ЛОЖЬ КАК ЕстьРасчетыСКлиентами,
		|	ЛОЖЬ КАК ЕстьРасчетыСПоставщиками,
		|	ЛОЖЬ КАК ЕстьРасчетыСКлиентамиТара,
		|	ЛОЖЬ КАК ЕстьРасчетыСПоставщикамиТара,
		|	ЛОЖЬ КАК ЕстьРасчетыСКредиторами,
		|	ЛОЖЬ КАК ЕстьРасчетыСДебиторами,
		|	ЛОЖЬ КАК ЕстьРасчетыПоОсновномуДолгу,
		|	ЛОЖЬ КАК ЕстьРасчетыПоКомиссии,
		|	ЛОЖЬ КАК ЕстьРасчетыПоПроцентам,
		|	ЛОЖЬ КАК ЕстьНеотфактурованныеПоставки,
		|	ЛОЖЬ КАК ЕстьЛизинговыеУслуги,
		|	ЛОЖЬ КАК ЕстьОбеспечительныйПлатежПоЛизингу,
		|	ЛОЖЬ КАК ЕстьВыкупПредметаЛизинга,
		|	ЛОЖЬ КАК ЕстьАрендныеОбязательстваПоЛизингу,
		|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоПродаже,
		|	ЛОЖЬ КАК ЕстьТоварыКомитентовКОформлениюПоЗакупке,
		|	ИСТИНА КАК ЕстьРасчетыПоДисконтированию
		|ИЗ
		|	РегистрНакопления.ПроцентныеРасходыДисконтирования КАК ДанныеРегистра
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиПартнеров
		|		ПО ДанныеРегистра.АналитикаУчетаПоПартнерам = КлючиПартнеров.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаОрганизацийПоПериодам КАК УчетнаяПолитикаОрганизаций
		|		ПО КлючиПартнеров.Организация = УчетнаяПолитикаОрганизаций.Организация
		|			И ДанныеРегистра.Период >= УчетнаяПолитикаОрганизаций.НачалоДействия
		|			И ДанныеРегистра.Период <= УчетнаяПолитикаОрганизаций.ОкончаниеДействия
		|			И УчетнаяПолитикаОрганизаций.ДолгосрочныеАктивыОбязательства
		|ГДЕ
		|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
		|	");
	КонецЕсли;
	
	МассивЗапросовСбораДанных.Добавить(
		СтрСоединить(ТестыЗапросаДисконтирование, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()));
	
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(МассивЗапросовСбораДанных, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область СгруппированныеДанные
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
	|	ВложенныйЗапрос.Долгосрочный КАК Долгосрочный,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРасчетыСКлиентами) КАК ЕстьРасчетыСКлиентами,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРасчетыСПоставщиками) КАК ЕстьРасчетыСПоставщиками,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРасчетыСКлиентамиТара) КАК ЕстьРасчетыСКлиентамиТара,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРасчетыСПоставщикамиТара) КАК ЕстьРасчетыСПоставщикамиТара,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРасчетыСКредиторами И ВложенныйЗапрос.ЕстьРасчетыПоОсновномуДолгу) КАК ЕстьРасчетыСКредиторамиПоОсновномуДолгу,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРасчетыСКредиторами И ВложенныйЗапрос.ЕстьРасчетыПоКомиссии) КАК ЕстьРасчетыСКредиторамиПоКомиссии,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРасчетыСКредиторами И ВложенныйЗапрос.ЕстьРасчетыПоПроцентам) КАК ЕстьРасчетыСКредиторамиПоПроцентам,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРасчетыСДебиторами И ВложенныйЗапрос.ЕстьРасчетыПоОсновномуДолгу) КАК ЕстьРасчетыСДебиторамиПоОсновномуДолгу,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРасчетыСДебиторами И ВложенныйЗапрос.ЕстьРасчетыПоКомиссии) КАК ЕстьРасчетыСДебиторамиПоКомиссии,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРасчетыСДебиторами И ВложенныйЗапрос.ЕстьРасчетыПоПроцентам) КАК ЕстьРасчетыСДебиторамиПоПроцентам,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьНеотфактурованныеПоставки) КАК ЕстьНеотфактурованныеПоставки,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьЛизинговыеУслуги) КАК ЕстьЛизинговыеУслуги,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьОбеспечительныйПлатежПоЛизингу) КАК ЕстьОбеспечительныйПлатежПоЛизингу,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьВыкупПредметаЛизинга) КАК ЕстьВыкупПредметаЛизинга,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьАрендныеОбязательстваПоЛизингу) КАК ЕстьАрендныеОбязательстваПоЛизингу,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТоварыКомитентовКОформлениюПоПродаже) КАК ЕстьТоварыКомитентовКОформлениюПоПродаже,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьТоварыКомитентовКОформлениюПоЗакупке) КАК ЕстьТоварыКомитентовКОформлениюПоЗакупке,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьРасчетыПоДисконтированию) КАК ЕстьРасчетыПоДисконтированию
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ ТаблицаДвиженийБезГруппировки КАК ВложенныйЗапрос
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ГруппаФинансовогоУчета,
	|	ВложенныйЗапрос.Долгосрочный";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	ТекстЗапроса = ТекстЗапросаДанныеПрочихРасчетов();
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	#Область ИтоговаяТаблица
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.АналитикаУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыСПоставщиками КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам_РасчетыСПартнерами
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыСПоставщиками КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НеотфактурованныеПоставки) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьНеотфактурованныеПоставки КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыСКлиентами КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыСКлиентами КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыСПоставщикамиТара КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыСКлиентамиТара КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыСКредиторамиПоОсновномуДолгу КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыСКредиторамиПоПроцентам КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыСКредиторамиПоКомиссии КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыСДебиторамиПоОсновномуДолгу КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыСДебиторамиПоПроцентам КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыСДебиторамиПоКомиссии КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.УслугаПоАренде) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьЛизинговыеУслуги КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатеж) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьОбеспечительныйПлатежПоЛизингу КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупнаяСтоимость) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьВыкупПредметаЛизинга КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьАрендныеОбязательстваПоЛизингу КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыКомитентовКОформлениюПоПродаже) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТоварыКомитентовКОформлениюПоПродаже КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыКомитентовКОформлениюПоЗакупке) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьТоварыКомитентовКОформлениюПоЗакупке КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПроцентыПоДисконтированию) КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыПоДисконтированию КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета,
	|	ВидыСчетовРеглУчета.Ссылка КАК ВидСчета,
	|	ТаблицаДвижений.Долгосрочный КАК Долгосрочный,
	|	НЕ ДанныеПрочихРасчетов.ВидСчета ЕСТЬ NULL КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Перечисление.ВидыСчетовРеглУчета КАК ВидыСчетовРеглУчета
	|	ПО ВидыСчетовРеглУчета.Ссылка В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСАвансыПолученные),
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСАвансыВыданные),
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПоСомнительнымДолгам))
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеПрочихРасчетов КАК ДанныеПрочихРасчетов
	|	ПО ТаблицаДвижений.АналитикаУчета = ДанныеПрочихРасчетов.АналитикаУчета
	|		И ТаблицаДвижений.Организация = ДанныеПрочихРасчетов.Организация
	|		И ВидыСчетовРеглУчета.Ссылка = ДанныеПрочихРасчетов.ВидСчета";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область УничтожениеВременныхТаблиц
	
	МассивТекстовЗапроса.Добавить("УНИЧТОЖИТЬ ТаблицаДвиженийБезГруппировки");
	МассивТекстовЗапроса.Добавить("УНИЧТОЖИТЬ ТаблицаДвижений");
	МассивТекстовЗапроса.Добавить("УНИЧТОЖИТЬ ВТ_ДанныеПрочихРасчетов");
	
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	МассивТекстовЗапросаДляДобавления.Добавить(ТекстЗапроса);
		
КонецПроцедуры

Процедура ДополнитьТекстЗапросаОперацийДаннымиПодарочныхСертификатов(СписокРазделов, МассивТекстовЗапроса)
	
	Если СписокРазделов.Найти("ПодарочныеСертификаты") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВидыСертификатов.Ссылка КАК ВидСертификата
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	Документ.АннулированиеПодарочныхСертификатов КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АннулированиеПодарочныхСертификатов.ПодарочныеСертификаты КАК Строки
	|			ПО ДанныеДокумента.Ссылка = Строки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПодарочныхСертификатов КАК ВидыСертификатов
	|			ПО Строки.ПодарочныйСертификат.Владелец = ВидыСертификатов.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ВводОстатков
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВидыСертификатов.Ссылка КАК ВидСертификата
	|ИЗ
	|	Документ.ВводОстатков КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков.ПодарочныеСертификаты КАК Строки
	|			ПО ДанныеДокумента.Ссылка = Строки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПодарочныхСертификатов КАК ВидыСертификатов
	|			ПО Строки.ПодарочныйСертификат.Владелец = ВидыСертификатов.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ВводОстатковОПродажахЗаПрошлыеПериоды
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВидыСертификатов.Ссылка КАК ВидСертификата
	|ИЗ
	|	Документ.ВводОстатковОПродажахЗаПрошлыеПериоды КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковОПродажахЗаПрошлыеПериоды.ПодарочныеСертификаты КАК Строки
	|			ПО ДанныеДокумента.Ссылка = Строки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПодарочныхСертификатов КАК ВидыСертификатов
	|			ПО Строки.ПодарочныйСертификат.Владелец = ВидыСертификатов.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ВозвратПодарочныхСертификатов
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВидыСертификатов.Ссылка КАК ВидСертификата
	|ИЗ
	|	Документ.ВозвратПодарочныхСертификатов КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратПодарочныхСертификатов.ПодарочныеСертификаты КАК Строки
	|			ПО ДанныеДокумента.Ссылка = Строки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПодарочныхСертификатов КАК ВидыСертификатов
	|			ПО Строки.ПодарочныйСертификат.Владелец = ВидыСертификатов.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ОтчетОРозничныхПродажах
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВидыСертификатов.Ссылка КАК ВидСертификата
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.ПодарочныеСертификаты КАК Строки
	|			ПО ДанныеДокумента.Ссылка = Строки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПодарочныхСертификатов КАК ВидыСертификатов
	|			ПО Строки.ПодарочныйСертификат.Владелец = ВидыСертификатов.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// РеализацияПодарочныхСертификатов
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВидыСертификатов.Ссылка КАК ВидСертификата
	|ИЗ
	|	Документ.РеализацияПодарочныхСертификатов КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияПодарочныхСертификатов.ПодарочныеСертификаты КАК Строки
	|			ПО ДанныеДокумента.Ссылка = Строки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПодарочныхСертификатов КАК ВидыСертификатов
	|			ПО Строки.ПодарочныйСертификат.Владелец = ВидыСертификатов.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ВидСертификата КАК АналитикаУчета,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПодарочнымСертификатам) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ИСТИНА КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам_ПодарочныеСертификаты
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвижений";
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
КонецПроцедуры

Процедура ДополнитьТекстЗапросаОперацийДаннымиДоходовРасходов(СписокРазделов, МассивТекстовЗапроса)
	
	Если СписокРазделов.Найти("ДоходыРасходы") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МестоУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	МестоУчетаНМА.Подразделение КАК Местонахождение
	|ПОМЕСТИТЬ втМестонахожденияНМА
	|ИЗ
	|	РегистрСведений.МестоУчетаНМА.СрезПоследних(&ДатаОкончания) КАК МестоУчетаНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ОрганизацииПоДокументу.Ссылка, ЕСТЬNULL(ОрганизацииПоРегистру.Ссылка, СпособыОтраженияРасходов.Организация)) КАК Организация,
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.Подразделение, ЕСТЬNULL(МестонахождениеНМА.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))) КАК Подразделение,
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.СтатьяРасходов, СпособыОтраженияРасходов.СтатьяРасходовБУ) КАК АналитикаУчета
	|ПОМЕСТИТЬ втСтатьиОСНМАКОтражению
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&ДатаОкончания, Организация В (&МассивОрганизаций)) КАК СпособыОтраженияРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровНМА.ОтражениеАмортизационныхРасходов КАК ОтражениеАмортизационныхРасходов
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходовБУ = ОтражениеАмортизационныхРасходов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацииПоДокументу
	|		ПО (ОтражениеАмортизационныхРасходов.ОрганизацияПолучательРасходов = ОрганизацииПоДокументу.Ссылка)
	|			И (ОтражениеАмортизационныхРасходов.ПередаватьРасходыВДругуюОрганизацию)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацииПоРегистру
	|		ПО СпособыОтраженияРасходов.ОрганизацияПолучательРасходов = ОрганизацииПоРегистру.Ссылка
	|			И (СпособыОтраженияРасходов.ПередаватьРасходыВДругуюОрганизацию)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияНМА КАК МестонахождениеНМА
	|		ПО СпособыОтраженияРасходов.НематериальныйАктив = МестонахождениеНМА.НематериальныйАктив
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ОрганизацииПоДокументу.Ссылка, ЕСТЬNULL(ОрганизацииПоРегистру.Ссылка, СпособыОтраженияРасходов.Организация)),
	|	ВЫБОР
	|		КОГДА СтатьиРасходовПоИзменениюПараметров.Ссылка ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|		ИНАЧЕ ЕСТЬNULL(ОтражениеАмортизационныхРасходов.Подразделение, ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)))
	|	КОНЕЦ,
	|	ЕСТЬNULL(СтатьиРасходовПоИзменениюПараметров.Ссылка, ПринятиеКУчетуОС.СтатьяРасходовАмортизационнойПремии)
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&ДатаОкончания, ДатаИсправления = ДАТАВРЕМЯ(1,1,1) И Организация В (&МассивОрганизаций)) КАК СпособыОтраженияРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов КАК ОтражениеАмортизационныхРасходов
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходовБУ = ОтражениеАмортизационныхРасходов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(&ДатаОкончания, ДатаИсправления = ДАТАВРЕМЯ(1,1,1) И Организация В (&МассивОрганизаций)) КАК МестонахождениеОС
	|		ПО СпособыОтраженияРасходов.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|				&ДатаОкончания,
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В (&МассивОрганизаций)
	|					И Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС) КАК ПервоначальныеСведения
	|		ПО СпособыОтраженияРасходов.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС КАК ПринятиеКУчетуОС
	|		ПО (ПервоначальныеСведения.Регистратор = ПринятиеКУчетуОС.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацииПоДокументу
	|		ПО (ОтражениеАмортизационныхРасходов.ОрганизацияПолучательРасходов = ОрганизацииПоДокументу.Ссылка)
	|			И (ОтражениеАмортизационныхРасходов.ПередаватьРасходыВДругуюОрганизацию)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацииПоРегистру
	|		ПО СпособыОтраженияРасходов.ОрганизацияПолучательРасходов = ОрганизацииПоРегистру.Ссылка
	|			И (СпособыОтраженияРасходов.ПередаватьРасходыВДругуюОрганизацию)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходовПоИзменениюПараметров
	|		ПО (ОтражениеАмортизационныхРасходов.СтатьяРасходовАмортизационнойПремии = СтатьиРасходовПоИзменениюПараметров.Ссылка)
	|ГДЕ
	|	ПринятиеКУчетуОС.ВключитьАмортизационнуюПремиюВСоставРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ОрганизацииПоДокументу.Ссылка, ЕСТЬNULL(ОрганизацииПоРегистру.Ссылка, СпособыОтраженияРасходов.Организация)),
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.Подразделение, ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))),
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.СтатьяРасходов, СпособыОтраженияРасходов.СтатьяРасходовБУ)
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&ДатаОкончания, ДатаИсправления = ДАТАВРЕМЯ(1,1,1) И Организация В (&МассивОрганизаций)) КАК СпособыОтраженияРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов КАК ОтражениеАмортизационныхРасходов
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходовБУ = ОтражениеАмортизационныхРасходов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацииПоДокументу
	|		ПО (ОтражениеАмортизационныхРасходов.ОрганизацияПолучательРасходов = ОрганизацииПоДокументу.Ссылка)
	|			И (ОтражениеАмортизационныхРасходов.ПередаватьРасходыВДругуюОрганизацию)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацииПоРегистру
	|		ПО СпособыОтраженияРасходов.ОрганизацияПолучательРасходов = ОрганизацииПоРегистру.Ссылка
	|			И (СпособыОтраженияРасходов.ПередаватьРасходыВДругуюОрганизацию)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(&ДатаОкончания, ДатаИсправления = ДАТАВРЕМЯ(1,1,1) И Организация В (&МассивОрганизаций)) КАК МестонахождениеОС
	|		ПО СпособыОтраженияРасходов.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведения.Организация,
	|	ЕСТЬNULL(МестонахождениеНМА.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)),
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СтатьяДоходов, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка))
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(&ДатаОкончания, Организация В (&МассивОрганизаций)) КАК ПервоначальныеСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияНМА КАК МестонахождениеНМА
	|		ПО ПервоначальныеСведения.НематериальныйАктив = МестонахождениеНМА.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(&ДатаОкончания, ) КАК ПараметрыЦелевогоФинансирования
	|		ПО ПервоначальныеСведения.НематериальныйАктив = ПараметрыЦелевогоФинансирования.НематериальныйАктив
	|ГДЕ
	|	ПараметрыЦелевогоФинансирования.ПрименениеЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведения.Организация,
	|	ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)),
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СтатьяДоходов, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка))
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&ДатаОкончания, 
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В (&МассивОрганизаций)) КАК ПервоначальныеСведения
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&ДатаОкончания, 
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В (&МассивОрганизаций)) КАК МестонахождениеОС
	|		ПО ПервоначальныеСведения.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(&ДатаОкончания, ) КАК ПараметрыЦелевогоФинансирования
	|		ПО ПервоначальныеСведения.ОсновноеСредство = ПараметрыЦелевогоФинансирования.ОсновноеСредство
	|ГДЕ
	|	ПараметрыЦелевогоФинансирования.ПрименениеЦелевогоФинансирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втМестонахожденияНМА;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиПрочихОпераций.Ссылка
	|ПОМЕСТИТЬ СтатьиПрочихОпераций
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|ГДЕ
	|	СтатьиПрочихОпераций.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	И СтатьиПрочихОпераций.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.СтатьяРасходов КАК АналитикаУчета
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ДанныеРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатьиПрочихОпераций КАК СтатьиПрочихОпераций
	|		ПО (СтатьиПрочихОпераций.Ссылка = ДанныеРегистра.СтатьяРасходов)
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И СтатьиПрочихОпераций.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.Подразделение,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеРегистра.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка))
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК ДанныеРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатьиПрочихОпераций КАК СтатьиПрочихОпераций
	|		ПО (СтатьиПрочихОпераций.Ссылка = ДанныеРегистра.СтатьяРасходов)
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И СтатьиПрочихОпераций.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.СтатьяРасходов
	|ИЗ
	|	Документ.ОтчетКомиссионера КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатьиПрочихОпераций КАК СтатьиПрочихОпераций
	|		ПО ДанныеДокумента.СтатьяРасходов = СтатьиПрочихОпераций.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	И СтатьиПрочихОпераций.Ссылка ЕСТЬ NULL
	|	И ДанныеДокумента.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ТаблицаРаспределениеРасходов.СтатьяРасходов
	|ИЗ
	|	Документ.РаспределениеРасходовБудущихПериодов КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеРасходовБудущихПериодов.РаспределениеРасходов КАК ТаблицаРаспределениеРасходов
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРаспределениеРасходов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатьиПрочихОпераций КАК СтатьиПрочихОпераций
	|		ПО (ТаблицаРаспределениеРасходов.СтатьяРасходов = СтатьиПрочихОпераций.Ссылка)
	|ГДЕ
	|	&УсловиеДляДокумента
	|	И СтатьиПрочихОпераций.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаНачисления.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиРасходов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка))
	|ИЗ
	|	Документ.НачисленияКредитовИДепозитов КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачисленияКредитовИДепозитов.Начисления КАК ТаблицаНачисления
	|		ПО ДанныеДокумента.Ссылка = ТаблицаНачисления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатьиПрочихОпераций КАК СтатьиПрочихОпераций
	|		ПО (ТаблицаНачисления.СтатьяДоходовРасходов = СтатьиПрочихОпераций.Ссылка)
	|ГДЕ
	|	&УсловиеДляДокумента
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоКредитам)
	|	И СтатьиПрочихОпераций.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.Подразделение,
	|	ДанныеРегистра.СтатьяДоходовРасходов
	|ИЗ
	|	РегистрНакопления.ДвиженияНоменклатураДоходыРасходы КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|		ПО (Статьи.Ссылка = ДанныеРегистра.СтатьяДоходовРасходов)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатьиПрочихОпераций КАК СтатьиПрочихОпераций
	|		ПО (СтатьиПрочихОпераций.Ссылка = ДанныеРегистра.СтатьяДоходовРасходов)
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И СтатьиПрочихОпераций.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСтатьиОСНМАКОтражению.Организация,
	|	втСтатьиОСНМАКОтражению.Подразделение,
	|	втСтатьиОСНМАКОтражению.АналитикаУчета
	|ИЗ
	|	втСтатьиОСНМАКОтражению КАК втСтатьиОСНМАКОтражению
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.Подразделение,
	|	ДанныеРегистра.КорСтатьяРасходов
	|ИЗ
	|	РегистрНакопления.АмортизацияНМА КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|		ПО (Статьи.Ссылка = ДанныеРегистра.КорСтатьяРасходов)
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.Подразделение,
	|	ДанныеРегистра.КорСтатьяРасходов
	|ИЗ
	|	РегистрНакопления.АмортизацияОС КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|		ПО (Статьи.Ссылка = ДанныеРегистра.КорСтатьяРасходов)
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.СтатьяДоходов КАК АналитикаУчета
	|ИЗ
	|	РегистрНакопления.ПрочиеДоходы КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.Статья КАК АналитикаУчета
	|
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.Статья ССЫЛКА ПланВидовХарактеристик.СтатьиДоходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.КорПодразделение КАК Подразделение,
	|	ДанныеРегистра.КорСтатья КАК АналитикаУчета
	|
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.КорСтатья ССЫЛКА ПланВидовХарактеристик.СтатьиДоходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.СтатьяДоходов КАК АналитикаУчета
	|
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.СтатьяДоходов КАК АналитикаУчета
	|
	|ИЗ
	|	Документ.ПереоценкаНМА КАК ДанныеДокумента
	|ГДЕ
	|	&УсловиеДляДокумента
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.СтатьяДоходов КАК АналитикаУчета
	|
	|ИЗ
	|	Документ.ПереоценкаОС КАК ДанныеДокумента
	|ГДЕ
	|	&УсловиеДляДокумента
	|	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ДанныеАналитики.ГруппаФинансовогоУчетаРегл КАК АналитикаУчетаРегл,
	|	ДанныеАналитики.ГруппаФинансовогоУчета КАК АналитикаУчетаУпр,
	|	ДанныеАналитики.ГруппаФинансовогоУчетаНУ КАК АналитикаУчетаНУ,
	|	ТаблицаДвижений.Подразделение КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчета,
	|	ИСТИНА КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам_Расходы_Промежуточная
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ДанныеАналитики
	|		ПО ТаблицаДвижений.АналитикаУчета = ДанныеАналитики.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ДанныеАналитики.ГруппаФинансовогоУчетаРегл,
	|	ДанныеАналитики.ГруппаФинансовогоУчета,
	|	ДанныеАналитики.ГруппаФинансовогоУчетаНУ,
	|	ТаблицаДвижений.Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СписаниеРасходовОСНО) КАК ВидСчета,
	|
	|	НЕ (ДанныеАналитики.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяЕНВД, ЛОЖЬ))
	|	И НЕ ДанныеАналитики.ВариантРаспределенияРасходовРегл В (ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы),
	|															ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
	|															ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров),
	|															ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять))
	|	И НЕ (ДанныеАналитики.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
	|				И НЕ ДанныеАналитики.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности))
	|	И НЕ ЕСТЬNULL(ПорядокОтраженияПоМестамУчета.СчетУчета, ЕСТЬNULL(ПорядокОтраженияПоОрганизациям.СчетУчета, ЕСТЬNULL(ПорядокОтраженияПоАналитикам.СчетУчета, НЕОПРЕДЕЛЕНО)))
	|		В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходыИРасходы), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_РасходыНаПродажу), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_УправленческиеРасходы)) КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ДанныеАналитики
	|		ПО ТаблицаДвижений.АналитикаУчета = ДанныеАналитики.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК УчетнаяПолитикаОрганизаций
	|		ПО ТаблицаДвижений.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияПоМестамУчета
	|		ПО ТаблицаДвижений.Организация = ПорядокОтраженияПоМестамУчета.Организация
	|			И ДанныеАналитики.ГруппаФинансовогоУчетаРегл = ПорядокОтраженияПоМестамУчета.АналитикаУчета
	|			И ТаблицаДвижений.Подразделение = ПорядокОтраженияПоМестамУчета.МестоУчета
	|			И ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) = ПорядокОтраженияПоМестамУчета.ВидСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияПоОрганизациям
	|		ПО ТаблицаДвижений.Организация = ПорядокОтраженияПоОрганизациям.Организация
	|			И ДанныеАналитики.ГруппаФинансовогоУчетаРегл = ПорядокОтраженияПоОрганизациям.АналитикаУчета
	|			И ПорядокОтраженияПоОрганизациям.МестоУчета = НЕОПРЕДЕЛЕНО
	|			И ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) = ПорядокОтраженияПоОрганизациям.ВидСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияПоАналитикам
	|		ПО ДанныеАналитики.ГруппаФинансовогоУчетаРегл = ПорядокОтраженияПоАналитикам.АналитикаУчета
	|			И ПорядокОтраженияПоАналитикам.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И ПорядокОтраженияПоАналитикам.МестоУчета = НЕОПРЕДЕЛЕНО
	|			И ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) = ПорядокОтраженияПоАналитикам.ВидСчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ДанныеАналитики.ГруппаФинансовогоУчетаРегл,
	|	ДанныеАналитики.ГруппаФинансовогоУчета,
	|	ДанныеАналитики.ГруппаФинансовогоУчетаНУ,
	|	ТаблицаДвижений.Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СписаниеРасходовЕНВД) КАК ВидСчета,
	|
	|	НЕ (ДанныеАналитики.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИЛИ НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяЕНВД, ЛОЖЬ))
	|	И НЕ ДанныеАналитики.ВариантРаспределенияРасходовРегл В (ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы),
	|															ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
	|															ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров),
	|															ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять))
	|	И НЕ (ДанныеАналитики.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
	|				И НЕ ДанныеАналитики.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности))
	|	И НЕ ЕСТЬNULL(ПорядокОтраженияПоМестамУчета.СчетУчета, ЕСТЬNULL(ПорядокОтраженияПоОрганизациям.СчетУчета, ЕСТЬNULL(ПорядокОтраженияПоАналитикам.СчетУчета, НЕОПРЕДЕЛЕНО)))
	|		В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходыИРасходы), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_РасходыНаПродажу), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_УправленческиеРасходы)) КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ДанныеАналитики
	|		ПО ТаблицаДвижений.АналитикаУчета = ДанныеАналитики.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК УчетнаяПолитикаОрганизаций
	|		ПО ТаблицаДвижений.Организация = УчетнаяПолитикаОрганизаций.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияПоМестамУчета
	|		ПО ТаблицаДвижений.Организация = ПорядокОтраженияПоМестамУчета.Организация
	|			И ДанныеАналитики.ГруппаФинансовогоУчетаРегл = ПорядокОтраженияПоМестамУчета.АналитикаУчета
	|			И ТаблицаДвижений.Подразделение = ПорядокОтраженияПоМестамУчета.МестоУчета
	|			И ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) = ПорядокОтраженияПоМестамУчета.ВидСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияПоОрганизациям
	|		ПО ТаблицаДвижений.Организация = ПорядокОтраженияПоОрганизациям.Организация
	|			И ДанныеАналитики.ГруппаФинансовогоУчетаРегл = ПорядокОтраженияПоОрганизациям.АналитикаУчета
	|			И ПорядокОтраженияПоОрганизациям.МестоУчета = НЕОПРЕДЕЛЕНО
	|			И ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) = ПорядокОтраженияПоОрганизациям.ВидСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияПоАналитикам
	|		ПО ДанныеАналитики.ГруппаФинансовогоУчетаРегл = ПорядокОтраженияПоАналитикам.АналитикаУчета
	|			И ПорядокОтраженияПоАналитикам.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И ПорядокОтраженияПоАналитикам.МестоУчета = НЕОПРЕДЕЛЕНО
	|			И ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) = ПорядокОтраженияПоАналитикам.ВидСчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.АналитикаУчетаРегл КАК АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета КАК МестоУчета,
	|	ТаблицаДвижений.ВидСчета КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.Требуется КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам_ДоходыРасходы
	|ИЗ ТаблицаДвиженийПоСчетам_Расходы_Промежуточная КАК ТаблицаДвижений
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаДвижений.АналитикаУчетаРегл.Расходы, ИСТИНА)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.АналитикаУчетаУпр КАК АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета КАК МестоУчета,
	|	ТаблицаДвижений.ВидСчета КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.Требуется КАК Требуется
	|ИЗ ТаблицаДвиженийПоСчетам_Расходы_Промежуточная КАК ТаблицаДвижений
	|ГДЕ
	|	&ВестиУУ
	|	И ЕСТЬNULL(ТаблицаДвижений.АналитикаУчетаУпр.Расходы, ИСТИНА)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.АналитикаУчетаНУ КАК АналитикаУчета,
	|	ТаблицаДвижений.МестоУчета КАК МестоУчета,
	|	ТаблицаДвижений.ВидСчета КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.Требуется КАК Требуется
	|ИЗ ТаблицаДвиженийПоСчетам_Расходы_Промежуточная КАК ТаблицаДвижений
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаДвижений.АналитикаУчетаНУ.Расходы, ИСТИНА)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ДанныеАналитики.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	ТаблицаДвижений.Подразделение КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ИСТИНА КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиДоходов КАК ДанныеАналитики
	|		ПО ТаблицаДвижений.АналитикаУчета = ДанныеАналитики.Ссылка
	|ГДЕ 
	|	ЕСТЬNULL(ДанныеАналитики.ГруппаФинансовогоУчета.Доходы, ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвижений;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвиженийПоСчетам_Расходы_Промежуточная
	|";
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
КонецПроцедуры

Процедура ДополнитьТекстЗапросаОперацийДаннымиРезервов(СписокРазделов, МассивТекстовЗапроса)
	
	Если СписокРазделов.Найти("Резервы") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ВидРезервов КАК ВидРезервов
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	РегистрНакопления.РезервыПредстоящихРасходов КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ВидРезервов КАК АналитикаУчета,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Резервы) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ИСТИНА КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам_Резервы
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДвижений";
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
КонецПроцедуры

Процедура ДополнитьТекстЗапросаОперацийДаннымиТМЦВЭксплуатации(СписокРазделов, МассивТекстовЗапроса)
	
	Если СписокРазделов.Найти("ТМЦВЭксплуатации") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ЕСТЬNULL(Таблица.КатегорияЭксплуатации, ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка)) КАК КатегорияЭксплуатации
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	Документ.ВнутреннееПотребление КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотребление.Товары КАК Таблица
	|			ПО ДанныеДокумента.Ссылка = Таблица.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация,
	|	ЕСТЬNULL(Таблица.КатегорияЭксплуатации, ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка))
	|ИЗ
	|	Документ.ВводОстатков КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков.ТМЦВЭксплуатации КАК Таблица
	|		ПО ДанныеДокумента.Ссылка = Таблица.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	И ДанныеДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТМЦВЭксплуатации))
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация,
	|	ЕСТЬNULL(Таблица.КатегорияЭксплуатации, ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка))
	|ИЗ
	|	Документ.ВводОстатковТМЦВЭксплуатации КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковТМЦВЭксплуатации.ТМЦВЭксплуатации КАК Таблица
	|		ПО ДанныеДокумента.Ссылка = Таблица.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	И ДанныеДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТМЦВЭксплуатации))
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.КатегорияЭксплуатации КАК АналитикаУчета,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатации) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ИСТИНА КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам_ТМЦВЭксплуатации
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.КатегорияЭксплуатации,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииЗаБалансом) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ИСТИНА КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДвижений";
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
КонецПроцедуры

Процедура ДополнитьТекстЗапросаОперацийДаннымиДенежныхСредств(СписокРазделов, МассивТекстовЗапроса)
	
	Если СписокРазделов.Найти("ДенежныеСредства") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.БанковскийСчет КАК АналитикаУчета
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Касса КАК АналитикаУчета
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.АналитикаУчета КАК АналитикаУчета,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ИСТИНА КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам_ДенежныеСредства
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДвижений";
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
КонецПроцедуры

Процедура ДополнитьТекстЗапросаОперацийДаннымиВнеоборотныхАктивов(СписокРазделов, МассивТекстовЗапроса)
	
	Если СписокРазделов.Найти("ВнеоборотныеАктивы") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ДанныеРегистра.СтоимостьРегл <> 0 КАК ЕстьРасчетыПоСтоимости,
	|	ДанныеРегистра.СтоимостьЦФ <> 0 КАК ЕстьРасчетыПоСтоимостиЦФ,
	|	ЛОЖЬ КАК ЕстьРасчетыПоАмортизации,
	|	ЛОЖЬ КАК ЕстьРасчетыПоАмортизацииЦФ,
	|	ЛОЖЬ КАК ЕстьРасчетыПоВыбытию,
	|	ЛОЖЬ КАК ЕстьРасчетыПоРезервуДооценки,
	|	ЛОЖЬ КАК ЕстьРасчетыПоЗабалансовойСтоимости,
	|	ЛОЖЬ КАК ЕстьРасчетыПоОбесценениюВНА
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.ГруппаФинансовогоУчета,
	|	ДанныеРегистра.СтоимостьРегл <> 0 КАК ЕстьРасчетыПоСтоимости,
	|	ДанныеРегистра.СтоимостьЦФ <> 0 КАК ЕстьРасчетыПоСтоимостиЦФ,
	|	ЛОЖЬ КАК ЕстьРасчетыПоАмортизации,
	|	ЛОЖЬ КАК ЕстьРасчетыПоАмортизацииЦФ,
	|	ДанныеРегистра.Регистратор ССЫЛКА Документ.СписаниеОС2_4 КАК ЕстьРасчетыПоВыбытию,
	|	ЛОЖЬ КАК ЕстьРасчетыПоРезервуДооценки,
	|	ДанныеРегистра.ЗалоговаяСтоимость <> 0 КАК ЕстьРасчетыПоЗабалансовойСтоимости,
	|	ЛОЖЬ КАК ЕстьРасчетыПоОбесценениюВНА
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК ЕстьРасчетыПоСтоимости,
	|	ЛОЖЬ КАК ЕстьРасчетыПоСтоимостиЦФ,
	|	ДанныеРегистра.АмортизацияРегл <> 0 КАК ЕстьРасчетыПоАмортизации,
	|	ДанныеРегистра.АмортизацияЦФ <> 0 КАК ЕстьРасчетыПоАмортизацииЦФ,
	|	ЛОЖЬ КАК ЕстьРасчетыПоВыбытию,
	|	ЛОЖЬ КАК ЕстьРасчетыПоРезервуДооценки,
	|	ЛОЖЬ КАК ЕстьРасчетыПоЗабалансовойСтоимости,
	|	ЛОЖЬ КАК ЕстьРасчетыПоОбесценениюВНА
	|ИЗ
	|	РегистрНакопления.АмортизацияНМА КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК ЕстьРасчетыПоСтоимости,
	|	ЛОЖЬ КАК ЕстьРасчетыПоСтоимостиЦФ,
	|	ДанныеРегистра.АмортизацияРегл <> 0 КАК ЕстьРасчетыПоАмортизации,
	|	ДанныеРегистра.АмортизацияЦФ <> 0 КАК ЕстьРасчетыПоАмортизацииЦФ,
	|	ЛОЖЬ КАК ЕстьРасчетыПоВыбытию,
	|	ЛОЖЬ КАК ЕстьРасчетыПоРезервуДооценки,
	|	ЛОЖЬ КАК ЕстьРасчетыПоЗабалансовойСтоимости,
	|	ЛОЖЬ КАК ЕстьРасчетыПоОбесценениюВНА
	|ИЗ
	|	РегистрНакопления.АмортизацияОС КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.ГруппаФинансовогоУчета,
	|	ЛОЖЬ КАК ЕстьРасчетыПоСтоимости,
	|	ЛОЖЬ КАК ЕстьРасчетыПоСтоимостиЦФ,
	|	ЛОЖЬ КАК ЕстьРасчетыПоАмортизации,
	|	ЛОЖЬ КАК ЕстьРасчетыПоАмортизацииЦФ,
	|	ЛОЖЬ КАК ЕстьРасчетыПоВыбытию,
	|	ЛОЖЬ КАК ЕстьРасчетыПоРезервуДооценки,
	|	ЛОЖЬ КАК ЕстьРасчетыПоЗабалансовойСтоимости,
	|	ИСТИНА КАК ЕстьРасчетыПоОбесценениюВНА
	|ИЗ
	|	РегистрНакопления.ОбесценениеВНА КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета КАК АналитикаУчета,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыПоСтоимости КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам_ВнеоборотныеАктивы
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыПоСтоимостиЦФ КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыПоАмортизации КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыПоАмортизации КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыбытиеВНА) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыПоВыбытию КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервДооценкиВНА) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыПоРезервуДооценки КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыПоЗабалансовойСтоимости КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.ГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбесценениеВНА) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ТаблицаДвижений.ЕстьРасчетыПоОбесценениюВНА КАК Требуется
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвижений";
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
КонецПроцедуры

Процедура ДополнитьТекстЗапросаОперацийДаннымиЭквайринга(СписокРазделов, МассивТекстовЗапроса)
	
	Если СписокРазделов.Найти("Эквайринг") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Договор КАК Договор
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	РегистрНакопления.РасчетыПоЭквайрингу КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.Договор КАК АналитикаУчета,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПродажиПоЭквайрингу) КАК ВидСчета,
	|	ЛОЖЬ КАК Долгосрочный,
	|	ИСТИНА КАК Требуется
	|ПОМЕСТИТЬ ТаблицаДвиженийПоСчетам_Эквайринг
	|ИЗ ТаблицаДвижений КАК ТаблицаДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаДвижений";
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
КонецПроцедуры

Функция ШаблонТекстаЗапросаДанныеНДССАвансов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Контрагент КАК Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСАвансыПолученные) КАК ВидСчета,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ДанныеРегистра.ОбъектРасчетов.ГруппаФинансовогоУчета,
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчета,
	|	ЛОЖЬ КАК Долгосрочный
	|ИЗ
	|	РегистрНакопления.НДСАвансыПолученные КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.Контрагент,
	|	ДанныеРегистра.Подразделение,
	|	ДанныеРегистра.НаправлениеДеятельности,
	|	ЕСТЬNULL(ДанныеРегистра.ОбъектРасчетов.ГруппаФинансовогоУчета,
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныеРезервыПоСомнительнымДолгам()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КлючиПартнеров.Организация КАК Организация,
	|	КлючиПартнеров.Контрагент КАК Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПоСомнительнымДолгам) КАК ВидСчета,
	|	ЕСТЬNULL(ДанныеРегистра.ОбъектРасчетов.Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение,
	|	ЕСТЬNULL(ДанныеРегистра.ОбъектРасчетов.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ДанныеРегистра.ОбъектРасчетов.ГруппаФинансовогоУчета,
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчета,
	|	ЛОЖЬ КАК Долгосрочный
	|ИЗ
	|	РегистрНакопления.РезервыПоСомнительнымДолгам КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиПартнеров
	|		ПО ДанныеРегистра.АналитикаУчетаПоПартнерам = КлючиПартнеров.Ссылка
	|ГДЕ
	|	&ОрганизацияИзРегистраСведений_УсловиеДляРегистра
	|	
	|СГРУППИРОВАТЬ ПО
	|	КлючиПартнеров.Организация,
	|	КлючиПартнеров.Контрагент,
	|	ЕСТЬNULL(ДанныеРегистра.ОбъектРасчетов.Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)),
	|	ЕСТЬNULL(ДанныеРегистра.ОбъектРасчетов.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|	ЕСТЬNULL(ДанныеРегистра.ОбъектРасчетов.ГруппаФинансовогоУчета,
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ДокументыСоответствующиеНастройкам

Процедура НоменклатураЗаполнитьМассивТекстовЗапросаДокументов(МассивТекстов, МассивВременныхТаблиц)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНастроек.Организация КАК Организация,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|
	|ПОМЕСТИТЬ ВтАналитика
	|ИЗ
	|	ТаблицаНастроек КАК ТаблицаНастроек
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаНастроек.АналитикаУчета = Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|		И ТаблицаНастроек.МестоУчета = Аналитика.МестоХранения
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ТаблицаДокументов_НоменклатураСобственная
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Обороты(, &ДатаОкончания, Регистратор,
	|		(Организация, АналитикаУчетаНоменклатуры) В (
	|			ВЫБРАТЬ
	|				Аналитика.Организация,
	|				Аналитика.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ВтАналитика КАК Аналитика
	|		)
	|	) КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(, &ДатаОкончания, Регистратор,
	|		ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		И (АналитикаУчетаПоПартнерам.Организация, АналитикаУчетаНоменклатуры) В (
	|			ВЫБРАТЬ
	|				Аналитика.Организация,
	|				Аналитика.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ВтАналитика КАК Аналитика
	|		)
	|	) КАК ДанныеРегистра";
	МассивТекстов.Добавить(ТекстЗапроса);
	МассивВременныхТаблиц.Добавить("ВтАналитика");
	
КонецПроцедуры

Процедура НоменклатураПереданнаяЗаполнитьМассивТекстовЗапросаДокументов(МассивТекстов, МассивВременныхТаблиц)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНастроек.Организация КАК Организация,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|
	|ПОМЕСТИТЬ ВтАналитика
	|ИЗ
	|	ТаблицаНастроек КАК ТаблицаНастроек
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета = ТаблицаНастроек.АналитикаУчета
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ТаблицаДокументов_НоменклатураПереданная
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Обороты(, &ДатаОкончания, Регистратор,
	|		(Организация, АналитикаУчетаНоменклатуры) В (
	|			ВЫБРАТЬ
	|				Аналитика.Организация,
	|				Аналитика.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ВтАналитика КАК Аналитика
	|		)
	|	) КАК ДанныеРегистра";
	МассивТекстов.Добавить(ТекстЗапроса);
	МассивВременныхТаблиц.Добавить("ВтАналитика");
	
КонецПроцедуры

Процедура РасчетыСПартнерамиЗаполнитьМассивТекстовЗапросаДокументов(МассивТекстов, МассивВременныхТаблиц)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ТаблицаДокументов_РасчетыСПартнерами
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Обороты(, &ДатаОкончания, Регистратор,
	|		(АналитикаУчетаПоПартнерам.Организация, ОбъектРасчетов.ГруппаФинансовогоУчета) В (
	|			ВЫБРАТЬ
	|				ТаблицаНастроек.Организация,
	|				ТаблицаНастроек.АналитикаУчета
	|			ИЗ
	|				ТаблицаНастроек КАК ТаблицаНастроек
	|		)
	|	) КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Обороты(, &ДатаОкончания, Регистратор,
	|		(АналитикаУчетаПоПартнерам.Организация, ОбъектРасчетов.ГруппаФинансовогоУчета) В (
	|			ВЫБРАТЬ
	|				ТаблицаНастроек.Организация,
	|				ТаблицаНастроек.АналитикаУчета
	|			ИЗ
	|				ТаблицаНастроек КАК ТаблицаНастроек
	|		)
	|	) КАК ДанныеРегистра";
	МассивТекстов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДоходыРасходыЗаполнитьМассивТекстовЗапросаДокументов(МассивТекстов, МассивВременныхТаблиц)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНастроек.Организация КАК Организация,
	|	СтатьиДоходов.Ссылка КАК АналитикаУчета,
	|	ТаблицаНастроек.МестоУчета КАК МестоУчета
	|ПОМЕСТИТЬ ТаблицаНастроек_Статьи
	|ИЗ
	|	ТаблицаНастроек КАК ТаблицаНастроек
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
	|	ПО
	|		СтатьиДоходов.ГруппаФинансовогоУчета = ТаблицаНастроек.АналитикаУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаНастроек.Организация КАК Организация,
	|	СтатьиРасходов.Ссылка КАК АналитикаУчета,
	|	ТаблицаНастроек.МестоУчета КАК МестоУчета
	|ИЗ
	|	ТаблицаНастроек КАК ТаблицаНастроек
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		СтатьиРасходов.ГруппаФинансовогоУчетаРегл = ТаблицаНастроек.АналитикаУчета
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаНастроек.Организация КАК Организация,
	|	СтатьиРасходов.Ссылка КАК АналитикаУчета,
	|	ТаблицаНастроек.МестоУчета КАК МестоУчета
	|ИЗ
	|	ТаблицаНастроек КАК ТаблицаНастроек
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		СтатьиРасходов.ГруппаФинансовогоУчетаНУ = ТаблицаНастроек.АналитикаУчета
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаНастроек.Организация КАК Организация,
	|	СтатьиРасходов.Ссылка КАК АналитикаУчета,
	|	ТаблицаНастроек.МестоУчета КАК МестоУчета
	|ИЗ
	|	ТаблицаНастроек КАК ТаблицаНастроек
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		СтатьиРасходов.ГруппаФинансовогоУчета = ТаблицаНастроек.АналитикаУчета
	|ГДЕ
	|	&ВестиУУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	АналитикаУчета,
	|	МестоУчета
	|;
	|
	|///////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ТаблицаДокументов_ДоходыРасходы
	|ИЗ
	|	РегистрНакопления.ПрочиеДоходы.Обороты(, &ДатаОкончания, Регистратор,
	|		(Организация, СтатьяДоходов, Подразделение) В (
	|			ВЫБРАТЬ
	|				ТаблицаНастроек.Организация,
	|				ТаблицаНастроек.АналитикаУчета,
	|				ТаблицаНастроек.МестоУчета
	|			ИЗ
	|				ТаблицаНастроек_Статьи КАК ТаблицаНастроек
	|		)
	|	) КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Обороты(, &ДатаОкончания, Регистратор,
	|		(Организация, Статья, Подразделение) В (
	|			ВЫБРАТЬ
	|				ТаблицаНастроек.Организация,
	|				ТаблицаНастроек.АналитикаУчета,
	|				ТаблицаНастроек.МестоУчета
	|			ИЗ
	|				ТаблицаНастроек_Статьи КАК ТаблицаНастроек
	|		)
	|	) КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Обороты(, &ДатаОкончания, Регистратор,
	|		(Организация, КорСтатья, КорПодразделение) В (
	|			ВЫБРАТЬ
	|				ТаблицаНастроек.Организация,
	|				ТаблицаНастроек.АналитикаУчета,
	|				ТаблицаНастроек.МестоУчета
	|			ИЗ
	|				ТаблицаНастроек_Статьи КАК ТаблицаНастроек
	|		)
	|	) КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаНастроек_Статьи КАК ТаблицаНастроек
	|	ПО
	|		ДанныеРегистра.Организация = ТаблицаНастроек.Организация
	|		И ДанныеРегистра.СтатьяДоходов = ТаблицаНастроек.АналитикаУчета
	|		И ДанныеРегистра.Подразделение = ТаблицаНастроек.МестоУчета
	|ГДЕ
	|	(ДанныеРегистра.Период <= &ДатаОкончания ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1,1,1))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Обороты(, &ДатаОкончания, Регистратор,
	|		(Организация, СтатьяРасходов, Подразделение) В (
	|			ВЫБРАТЬ
	|				ТаблицаНастроек.Организация,
	|				ТаблицаНастроек.АналитикаУчета,
	|				ТаблицаНастроек.МестоУчета
	|			ИЗ
	|				ТаблицаНастроек_Статьи КАК ТаблицаНастроек
	|		)
	|	) КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаНастроек_Статьи КАК ТаблицаНастроек
	|	ПО
	|		ДанныеРегистра.Организация = ТаблицаНастроек.Организация
	|		И ДанныеРегистра.СтатьяРасходовСписания = ТаблицаНастроек.АналитикаУчета
	|		И ДанныеРегистра.Подразделение = ТаблицаНастроек.МестоУчета
	|ГДЕ
	|	(ДанныеРегистра.Период <= &ДатаОкончания ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1,1,1))
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ТаблицаНастроек_Статьи
	|";
	МассивТекстов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ПроизводствоЗаполнитьМассивТекстовЗапросаДокументов(МассивТекстов, МассивВременныхТаблиц)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ТаблицаДокументов_Производство
	|ИЗ
	|	РегистрНакопления.МатериалыИРаботыВПроизводстве.Обороты(, &ДатаОкончания, Регистратор,
	|		(Организация, Подразделение) В (
	|			ВЫБРАТЬ
	|				ТаблицаНастроек.Организация,
	|				ТаблицаНастроек.МестоУчета
	|			ИЗ
	|				ТаблицаНастроек КАК ТаблицаНастроек
	|			ГДЕ
	|				ТаблицаНастроек.АналитикаУчета = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		)
	|	) КАК ДанныеРегистра";
	МассивТекстов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ПодарочныеСертификатыЗаполнитьМассивТекстовЗапросаДокументов(МассивТекстов, МассивВременныхТаблиц)
	
	ТекстЗапроса =
	// АнулированиеПодарочныхСертификатов
	"
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВидыСертификатов.Ссылка КАК ВидСертификата
	|ПОМЕСТИТЬ втДвиженияСертификатов
	|ИЗ
	|	Документ.АннулированиеПодарочныхСертификатов КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АннулированиеПодарочныхСертификатов.ПодарочныеСертификаты КАК Строки
	|		ПО ДанныеДокумента.Ссылка = Строки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПодарочныхСертификатов КАК ВидыСертификатов
	|		ПО Строки.ПодарочныйСертификат.Владелец = ВидыСертификатов.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ДанныеДокумента.Организация В(&Организации)
	|	И ДанныеДокумента.Проведен
	|	И &ИспользоватьПодарочныеСертификаты
	|	И ДанныеДокумента.Дата <= &ДатаОкончания ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1,1,1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ВводОстатков
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВидыСертификатов.Ссылка КАК ВидСертификата
	|ИЗ
	|	Документ.ВводОстатков КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков.ПодарочныеСертификаты КАК Строки
	|		ПО ДанныеДокумента.Ссылка = Строки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПодарочныхСертификатов КАК ВидыСертификатов
	|		ПО Строки.ПодарочныйСертификат.Владелец = ВидыСертификатов.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ДанныеДокумента.Организация В(&Организации)
	|	И ДанныеДокумента.Проведен
	|	И &ИспользоватьПодарочныеСертификаты
	|	И ДанныеДокумента.Дата <= &ДатаОкончания ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1,1,1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ВводОстатковОПродажахЗаПрошлыеПериоды
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВидыСертификатов.Ссылка КАК ВидСертификата
	|ИЗ
	|	Документ.ВводОстатковОПродажахЗаПрошлыеПериоды КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковОПродажахЗаПрошлыеПериоды.ПодарочныеСертификаты КАК Строки
	|		ПО ДанныеДокумента.Ссылка = Строки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПодарочныхСертификатов КАК ВидыСертификатов
	|		ПО Строки.ПодарочныйСертификат.Владелец = ВидыСертификатов.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ДанныеДокумента.Организация В(&Организации)
	|	И ДанныеДокумента.Проведен
	|	И &ИспользоватьПодарочныеСертификаты
	|	И ДанныеДокумента.Дата <= &ДатаОкончания ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1,1,1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ВозвратПодарочныхСертификатов
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВидыСертификатов.Ссылка КАК ВидСертификата
	|ИЗ
	|	Документ.ВозвратПодарочныхСертификатов КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратПодарочныхСертификатов.ПодарочныеСертификаты КАК Строки
	|		ПО ДанныеДокумента.Ссылка = Строки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПодарочныхСертификатов КАК ВидыСертификатов
	|		ПО Строки.ПодарочныйСертификат.Владелец = ВидыСертификатов.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ДанныеДокумента.Организация В(&Организации)
	|	И ДанныеДокумента.Проведен
	|	И &ИспользоватьПодарочныеСертификаты
	|	И ДанныеДокумента.Дата <= &ДатаОкончания ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1,1,1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ОтчетОРозничныхПродажах
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВидыСертификатов.Ссылка КАК ВидСертификата
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.ПодарочныеСертификаты КАК Строки
	|		ПО ДанныеДокумента.Ссылка = Строки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПодарочныхСертификатов КАК ВидыСертификатов
	|		ПО Строки.ПодарочныйСертификат.Владелец = ВидыСертификатов.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ДанныеДокумента.Организация В(&Организации)
	|	И ДанныеДокумента.Проведен
	|	И &ИспользоватьПодарочныеСертификаты
	|	И ДанныеДокумента.Дата <= &ДатаОкончания ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1,1,1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// РеализацияПодарочныхСертификатов
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВидыСертификатов.Ссылка КАК ВидСертификата
	|ИЗ
	|	Документ.РеализацияПодарочныхСертификатов КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияПодарочныхСертификатов.ПодарочныеСертификаты КАК Строки
	|		ПО ДанныеДокумента.Ссылка = Строки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПодарочныхСертификатов КАК ВидыСертификатов
	|		ПО Строки.ПодарочныйСертификат.Владелец = ВидыСертификатов.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ДанныеДокумента.Организация В(&Организации)
	|	И ДанныеДокумента.Проведен
	|	И &ИспользоватьПодарочныеСертификаты
	|	И ДанныеДокумента.Дата <= &ДатаОкончания ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1,1,1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ВидСертификата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияСертификатов.Регистратор,
	|	ДвиженияСертификатов.Организация,
	|	ДвиженияСертификатов.ВидСертификата
	|ПОМЕСТИТЬ ТаблицаДокументов_ПодарочныеСертификаты
	|ИЗ
	|	втДвиженияСертификатов КАК ДвиженияСертификатов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаНастроек КАК ТаблицаНастроек
	|		ПО ДвиженияСертификатов.Организация = ТаблицаНастроек.Организация
	|		И ДвиженияСертификатов.ВидСертификата = ТаблицаНастроек.ВидСертификата";
	МассивТекстов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТМЦВЭксплуатацииЗаполнитьМассивТекстовЗапросаДокументов(МассивТекстов, МассивВременныхТаблиц)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ТаблицаДокументов_ТМЦВЭксплуатации
	|ИЗ
	|	РегистрНакопления.ТМЦВЭксплуатации.Обороты(
	|		,
	|		&ДатаОкончания,
	|		Регистратор,
	|		Организация В (
	|			ВЫБРАТЬ
	|				ТаблицаНастроек.Организация
	|			ИЗ
	|				ТаблицаНастроек КАК ТаблицаНастроек
	|		)
	|	) КАК ДанныеРегистра";
	МассивТекстов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

#КонецОбласти

Процедура ПереопределитьТекстЗапросаПоРазделамУчета(ТекстЗапроса, РазделыУчета, ПутиКИзмерениям)
	
	ИспользованиеИзмерений = НастройкаСчетовУчетаКлиентСервер.ИнициализироватьСтруктуруИзмеренийРегистра();
	ИспользованиеИзмерений.Организация = Ложь;
	ИспользованиеИзмерений.АналитикаУчета = Ложь;
	ИспользованиеИзмерений.МестоУчета = Ложь;
	ИспользованиеИзмерений.Долгосрочный = Ложь;
	
	ТекстыСоединений = Новый Массив;
	
	ШаблонСоединения =
	"ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ИмяТаблицы
	|	ПО
	|		ИмяТаблицы.ВидСчета = ВидыСчетовРеглУчета.Ссылка
	|		И &Организация = ИмяТаблицы.Организация
	|		И &АналитикаУчета = ИмяТаблицы.АналитикаУчета
	|		И &МестоУчета = ИмяТаблицы.МестоУчета
	|		И &Долгосрочный = ИмяТаблицы.Долгосрочный";
	
	Разделитель = Символы.ПС + Символы.Таб;
	
	ЗначениеСчетаУчета = "ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)";
	ТекстыЗначенийСчетаУчета = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ЗначениеСчетаУчета);
	
	Для каждого РазделУчета Из РазделыУчета Цикл
		
		Если РазделУчета <> "ДенежныеСредства" И РазделУчета <> "Эквайринг" Тогда
			// Для денежных средств организации используются, однако связь по ним не актуальна, так как они являются общими НСИ.
			ИспользованиеИзмерений.Организация = ИспользованиеИзмерений.Организация Или НастройкаСчетовУчетаСервер.НастройкиОрганизацииПоРазделуУчета(РазделУчета).Используется;
		КонецЕсли;
		ИспользованиеИзмерений.АналитикаУчета = ИспользованиеИзмерений.АналитикаУчета Или НастройкаСчетовУчетаСервер.НастройкиАналитикиУчетаПоРазделуУчета(РазделУчета).Используется;
		ИспользованиеИзмерений.МестоУчета = ИспользованиеИзмерений.МестоУчета Или НастройкаСчетовУчетаСервер.НастройкиМестаУчетаПоРазделуУчета(РазделУчета).Используется;
		ИспользованиеИзмерений.Долгосрочный = (ИспользованиеИзмерений.Долгосрочный Или НастройкаСчетовУчетаСервер.НастройкиДолгосрочныхСчетовПоРазделуУчета(РазделУчета).Используется)
												И ПутиКИзмерениям.Свойство("Долгосрочный");
		
	КонецЦикла;
	
	Если ИспользованиеИзмерений.АналитикаУчета Тогда
		ТекстСоединения = ШаблонСоединения;
		УсловиеОрганизация = ?(ИспользованиеИзмерений.Организация, "ИмяТаблицы.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)", "ИСТИНА");
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&Организация = ИмяТаблицы.Организация", УсловиеОрганизация);
		УсловиеМестоУчета = ?(ИспользованиеИзмерений.МестоУчета, "ИмяТаблицы.МестоУчета = НЕОПРЕДЕЛЕНО", "ИСТИНА");
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&МестоУчета = ИмяТаблицы.МестоУчета", УсловиеМестоУчета);
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&АналитикаУчета = ИмяТаблицы.АналитикаУчета", "ИмяТаблицы.АналитикаУчета = " + ПутиКИзмерениям.АналитикаУчета);
		УсловиеДолгосрочности = ?(ИспользованиеИзмерений.Долгосрочный, "ИмяТаблицы.Долгосрочный = " + ПутиКИзмерениям.Долгосрочный, "ИСТИНА");
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&Долгосрочный = ИмяТаблицы.Долгосрочный", УсловиеДолгосрочности);
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "ИмяТаблицы", "НастройкиПоАналитикеУчета");
		ТекстыСоединений.Вставить(0, ТекстСоединения);
		ТекстыЗначенийСчетаУчета.Вставить(0, "ЕСТЬNULL(НастройкиПоАналитикеУчета.СчетУчета, ");
		ТекстыЗначенийСчетаУчета.Добавить(")");
	КонецЕсли;
	Если ИспользованиеИзмерений.Организация Тогда
		ТекстСоединения = ШаблонСоединения;
		УсловиеАналитикаУчета = ?(ИспользованиеИзмерений.АналитикаУчета, "ИмяТаблицы.АналитикаУчета = " + ПутиКИзмерениям.АналитикаУчета, "ИСТИНА");
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&АналитикаУчета = ИмяТаблицы.АналитикаУчета", УсловиеАналитикаУчета);
		УсловиеМестоУчета = ?(ИспользованиеИзмерений.МестоУчета, "ИмяТаблицы.МестоУчета = НЕОПРЕДЕЛЕНО", "ИСТИНА");
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&МестоУчета = ИмяТаблицы.МестоУчета", УсловиеМестоУчета);
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&Организация = ИмяТаблицы.Организация", "ИмяТаблицы.Организация = " + ПутиКИзмерениям.Организация);
		УсловиеДолгосрочности = ?(ИспользованиеИзмерений.Долгосрочный, "ИмяТаблицы.Долгосрочный = " + ПутиКИзмерениям.Долгосрочный, "ИСТИНА");
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&Долгосрочный = ИмяТаблицы.Долгосрочный", УсловиеДолгосрочности);
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "ИмяТаблицы", "НастройкиПоОрганизации");
		ТекстыСоединений.Вставить(0, ТекстСоединения);
		ТекстыЗначенийСчетаУчета.Вставить(0, "ЕСТЬNULL(НастройкиПоОрганизации.СчетУчета, ");
		ТекстыЗначенийСчетаУчета.Добавить(")");
	КонецЕсли;
	Если ИспользованиеИзмерений.МестоУчета Тогда
		ТекстСоединения = ШаблонСоединения;
		УсловиеОрганизация = ?(ИспользованиеИзмерений.Организация, "ИмяТаблицы.Организация = " + ПутиКИзмерениям.Организация, "ИСТИНА");
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&Организация = ИмяТаблицы.Организация", УсловиеОрганизация);
		УсловиеАналитикаУчета = ?(ИспользованиеИзмерений.АналитикаУчета, "ИмяТаблицы.АналитикаУчета = " + ПутиКИзмерениям.АналитикаУчета, "ИСТИНА");
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&АналитикаУчета = ИмяТаблицы.АналитикаУчета", УсловиеАналитикаУчета);
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&МестоУчета = ИмяТаблицы.МестоУчета", "ИмяТаблицы.МестоУчета = " + ПутиКИзмерениям.МестоУчета);
		УсловиеДолгосрочности = ?(ИспользованиеИзмерений.Долгосрочный, "ИмяТаблицы.Долгосрочный = " + ПутиКИзмерениям.Долгосрочный, "ИСТИНА");
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&Долгосрочный = ИмяТаблицы.Долгосрочный", УсловиеДолгосрочности);
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "ИмяТаблицы", "НастройкиПоМестуУчета");
		ТекстыСоединений.Вставить(0, ТекстСоединения);
		ТекстыЗначенийСчетаУчета.Вставить(0, "ЕСТЬNULL(НастройкиПоМестуУчета.СчетУчета, ");
		ТекстыЗначенийСчетаУчета.Добавить(")");
	КонецЕсли;
	Если ИспользованиеИзмерений.Долгосрочный Тогда
		ТекстСоединения = ШаблонСоединения;
		УсловиеОрганизация = ?(ИспользованиеИзмерений.Организация, "ИмяТаблицы.Организация = " + ПутиКИзмерениям.Организация, "ИСТИНА");
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&Организация = ИмяТаблицы.Организация", УсловиеОрганизация);
		УсловиеАналитикаУчета = ?(ИспользованиеИзмерений.АналитикаУчета, "ИмяТаблицы.АналитикаУчета = " + ПутиКИзмерениям.АналитикаУчета, "ИСТИНА");
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&АналитикаУчета = ИмяТаблицы.АналитикаУчета", УсловиеАналитикаУчета);
		УсловиеМестоУчета = ?(ИспользованиеИзмерений.МестоУчета, "ИмяТаблицы.МестоУчета = " + ПутиКИзмерениям.МестоУчета, "ИСТИНА");
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&МестоУчета = ИмяТаблицы.МестоУчета", УсловиеМестоУчета);
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "&Долгосрочный = ИмяТаблицы.Долгосрочный", "ИмяТаблицы.Долгосрочный = " + ПутиКИзмерениям.Долгосрочный);
		ТекстСоединения = СтрЗаменить(ТекстСоединения, "ИмяТаблицы", "НастройкиПоДолгосрочномуСчету");
		ТекстыСоединений.Вставить(0, ТекстСоединения);
		ТекстыЗначенийСчетаУчета.Вставить(0, "ЕСТЬNULL(НастройкиПоДолгосрочномуСчету.СчетУчета, ");
		ТекстыЗначенийСчетаУчета.Добавить(")");
	КонецЕсли;
	
	ПодстрокаЗамены = "ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПорядокОтраженияНаСчетахУчетаПереопределяемый КАК ПорядокОтраженияНаСчетахУчетаПереопределяемый
	|	ПО
	|		ПорядокОтраженияНаСчетахУчетаПереопределяемый.ВидСчета = ВидыСчетовРеглУчета.Ссылка";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ПодстрокаЗамены, СтрСоединить(ТекстыСоединений, Разделитель));
	ПодстрокаЗамены = "ПорядокОтраженияНаСчетахУчетаПереопределяемый.СчетУчета";
	СтрокаСчетаУчета = СтрСоединить(ТекстыЗначенийСчетаУчета);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ПодстрокаЗамены, СтрокаСчетаУчета);
	ПодстрокаЗамены = "ПорядокОтраженияНаСчетахУчетаПереопределяемый.Субконто";
	СтрокаСубконто = СтрЗаменить(СтрокаСчетаУчета, "СчетУчета", "Субконто");
	СтрокаСубконто = СтрЗаменить(СтрокаСубконто, "ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)", "НЕОПРЕДЕЛЕНО");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ПодстрокаЗамены, СтрокаСубконто);
	
КонецПроцедуры

Функция ЗначениеРавенстваИзмеренияПорядкаОтражения(ТекстЗапроса, ИмяИзмерения, ПозицияОпределенияПорядкаОтраженияВЗапросе)
	
	ШаблонИзмеренияВЗапросе = "ПорядокОтраженияНаСчетахУчетаПереопределяемый.%1 = ";
	ТекстИзмерения = СтрШаблон(ШаблонИзмеренияВЗапросе, ИмяИзмерения);
	ПозицияНачалаОпределенияИзмеренияВЗапросе = СтрНайти(ТекстЗапроса, ТекстИзмерения, , ПозицияОпределенияПорядкаОтраженияВЗапросе);
	
	Если ПозицияНачалаОпределенияИзмеренияВЗапросе = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПозицияНачалаЗначенияРавенстваИзмерения = ПозицияНачалаОпределенияИзмеренияВЗапросе + СтрДлина(ТекстИзмерения);
	ПозицияОкончанияОпределенияИзмеренияВЗапросе = СтрНайти(ТекстЗапроса, Символы.ПС, , ПозицияНачалаЗначенияРавенстваИзмерения);
	
	Возврат Сред(ТекстЗапроса, ПозицияНачалаЗначенияРавенстваИзмерения, ПозицияОкончанияОпределенияИзмеренияВЗапросе - ПозицияНачалаЗначенияРавенстваИзмерения);
	
КонецФункции

Процедура ЗарегистрироватьВидыСчетовПотребленныеВПроизводстве(ТекстыЗапросов)
	
	// Заполнение новых счетов ТМЦПотребленныеВПроизводстве счетом по умолчанию
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦПотребленныеВПроизводстве) КАК ВидСчета,
	|	НастройкиСчетов.Организация КАК Организация,
	|	НастройкиСчетов.АналитикаУчета КАК АналитикаУчета,
	|	НастройкиСчетов.МестоУчета КАК МестоУчета
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиСчетов
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СуществующаяНастройка
	|		ПО СуществующаяНастройка.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦПотребленныеВПроизводстве)
	|ГДЕ
	|	СуществующаяНастройка.СчетУчета ЕСТЬ NULL
	|	И НастройкиСчетов.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВПроизводстве)
	|	И НастройкиСчетов.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)";
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	// Заполнение новых счетов МатериалыПотребленныеВПроизводстве счетом по умолчанию
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПотребленныеВПроизводстве) КАК ВидСчета,
	|	НастройкиСчетов.Организация КАК Организация,
	|	НастройкиСчетов.АналитикаУчета КАК АналитикаУчета,
	|	НастройкиСчетов.МестоУчета КАК МестоУчета
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиСчетов
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СуществующаяНастройка
	|		ПО СуществующаяНастройка.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПотребленныеВПроизводстве)
	|ГДЕ
	|	СуществующаяНастройка.СчетУчета ЕСТЬ NULL
	|	И НастройкиСчетов.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуВПроизводстве)
	|	И НастройкиСчетов.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)";
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры


Процедура ДополнитьТекстЗапросаСуммами(ТекстЗапроса, ДетализацияПоРегистратору = Ложь)
	
	Отступ = Символы.ПС + Символы.Таб;
	
	ЭтоСозданиеВТ = Не СтрНайти(ТекстЗапроса, "КАК ДанныеРегистра");
	ОрганизацияИзАналитики = СтрНайти(ТекстЗапроса, "ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам");
	
	ДобавляемыйТекст = "СУММА(ДанныеРегистра.РесурсНачальныйОстаток) КАК СуммаРеглНачальныйОстаток,
	|	СУММА(ДанныеРегистра.РесурсПриход) КАК СуммаРеглПриход,
	|	СУММА(ДанныеРегистра.РесурсРасход) КАК СуммаРеглРасход,
	|	СУММА(ДанныеРегистра.РесурсКонечныйОстаток) КАК СуммаРеглКонечныйОстаток";
	
	Если ЭтоСозданиеВТ Тогда
		ДобавляемыйТекст = "0 КАК СуммаРеглНачальныйОстаток,
	|	0 КАК СуммаРеглПриход,
	|	0 КАК СуммаРеглРасход,
	|	0 КАК СуммаРеглКонечныйОстаток";
	КонецЕсли;
	
	Если ДетализацияПоРегистратору Тогда
		Если ЭтоСозданиеВТ Тогда
			ДобавляемыйТекст = ДобавляемыйТекст + "," + Отступ + "НЕОПРЕДЕЛЕНО КАК Регистратор";
		Иначе
			ДобавляемыйТекст = ДобавляемыйТекст + "," + Отступ + "ДанныеРегистра.Регистратор КАК Регистратор";
			ТекстЗапроса = ТекстЗапроса + "," + Отступ + "ДанныеРегистра.Регистратор";
		КонецЕсли;
	КонецЕсли;
	
	ПолеДляПодстановки = " КАК АналитикаУчета";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ПолеДляПодстановки, ПолеДляПодстановки + "," + Отступ + ДобавляемыйТекст);
	
	Если ЭтоСозданиеВТ Тогда
		Возврат;
	КонецЕсли;
	
	ПолеДляПодстановки = " КАК ДанныеРегистра";
	Если ДетализацияПоРегистратору Тогда
		ДобавляемыйТекст = ".ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Регистратор, Движения, Организация В (&МассивОрганизаций))";
	Иначе
		ДобавляемыйТекст = ".ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , Организация В (&МассивОрганизаций))";
	КонецЕсли;
	Если ОрганизацияИзАналитики Тогда
		ДобавляемыйТекст = СтрЗаменить(ДобавляемыйТекст, "Организация В (&МассивОрганизаций)", "");
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ПолеДляПодстановки, ДобавляемыйТекст + ПолеДляПодстановки);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеДляРегистра", "ИСТИНА");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОрганизацияИзРегистраСведений_УсловиеДляРегистра", "КлючиПартнеров.Организация В (&МассивОрганизаций)");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

#КонецОбласти
