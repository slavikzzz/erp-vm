#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	КонтрольИзмененийПередЗаписью(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	КонтрольИзмененийПриЗаписи(ЭтотОбъект);
	ИнтеграцияУправлениеПерсоналомСобытияВнутренний.КлассыУсловийТрудаПоДолжностямПриЗаписи(ТаблицаИзменившихсяДанныхНабора());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура КонтрольИзмененийПередЗаписью(НаборЗаписей)

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	НаборЗаписей.ДополнительныеСвойства.Вставить("МенеджерВТИзмененияРегистра", МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Должность", НаборЗаписей.Отбор.Должность.Значение);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТСтарыйНаборЗаписей 
	|ИЗ
	|	РегистрСведений.КлассыУсловийТрудаПоДолжностям КАК Таблица
	|ГДЕ
	|	Таблица.Должность = &Должность";
	Результат = Запрос.Выполнить();
	
	СтарыеЗаписи = Результат.Выбрать();
	СтарыеЗаписи.Следующий();
	НаборЗаписей.ДополнительныеСвойства.Вставить("ЭтоНовыйНабор", СтарыеЗаписи.Количество = 0);

КонецПроцедуры

Процедура КонтрольИзмененийПриЗаписи(НаборЗаписей)
		
	Запрос = ЗапросВТИзмененияВНаборе(НаборЗаписей);
	Запрос.МенеджерВременныхТаблиц = НаборЗаписей.ДополнительныеСвойства.МенеджерВТИзмененияРегистра;
	КэшТаблицаИзменившихсяДанных = Запрос.Выполнить().Выгрузить();
	НаборЗаписей.ДополнительныеСвойства.Вставить("КэшТаблицаИзменившихсяДанных", КэшТаблицаИзменившихсяДанных);
	
КонецПроцедуры

Функция ЗапросВТИзмененияВНаборе(НаборЗаписей)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Должность", НаборЗаписей.Отбор.Должность.Значение);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.Должность КАК Должность,
	|	ВЫБОР
	|		КОГДА СУММА(ВложенныйЗапрос.ФлагИзменений) = 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Удаление,
	|	ВЫБОР
	|		КОГДА СУММА(ВложенныйЗапрос.ФлагИзменений) = -1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Добавление
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтарыйНабор.Период КАК Период,
	|		СтарыйНабор.Должность КАК Должность,
	|		СтарыйНабор.КлассУсловийТруда КАК КлассУсловийТруда,
	|		1 КАК ФлагИзменений,
	|		ЛОЖЬ КАК НовыйНабор
	|	ИЗ
	|		ВТСтарыйНаборЗаписей КАК СтарыйНабор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НовыйНабор.Период,
	|		НовыйНабор.Должность,
	|		НовыйНабор.КлассУсловийТруда,
	|		-1,
	|		ИСТИНА
	|	ИЗ
	|		РегистрСведений.КлассыУсловийТрудаПоДолжностям КАК НовыйНабор
	|	ГДЕ
	|		НовыйНабор.Должность = &Должность) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.Должность
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ВложенныйЗапрос.ФлагИзменений) <> 0
	|		ИЛИ ВЫБОР
	|			КОГДА МАКСИМУМ(ВложенныйЗапрос.КлассУсловийТруда) <> МИНИМУМ(ВложенныйЗапрос.КлассУсловийТруда)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ)";
	
	Возврат Запрос;

КонецФункции

Функция ТаблицаИзменившихсяДанныхНабора() Экспорт
	Возврат ЗарплатаКадрыПериодическиеРегистры.ТаблицаИзменившихсяДанныхНабора(ЭтотОбъект);
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли