#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	СтруктураЗаписи = Новый Структура("Организация");
	
	Для Каждого Запись Из ЭтотОбъект Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураЗаписи, Запись);
				
		Если ЗначениеЗаполнено(Запись.Организация) И ЗарплатаКадры.ГоловнаяОрганизация(Запись.Организация) <> Запись.Организация Тогда
			Отказ = Истина;
			ТекстОшибки = НСтр("ru = 'Учетная политика по НДФЛ определяется только для головных организаций.';
								|en = 'Accounting policy for PIT is determined only for parent companies.'");
			КлючЗаписи = РегистрыСведений.ДокументыФизическихЛиц.СоздатьКлючЗаписи(СтруктураЗаписи);
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, КлючЗаписи, "Запись.Организация");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Запись Из ЭтотОбъект Цикл
		Запись.ВыбиратьВДокументеНеобходимостьУдержанияНДФЛПриВыплатеСАвансом = Запись.УдержаниеНДФЛПриВыплатеМежрасчетныхНачисленийСАвансом = Перечисления.УдержаниеНДФЛПриВыплатеМежрасчетныхНачисленийСАвансом.УказыватьВДокументеНеобходимостьУдержанияНалогаПриВыплатеСАвансом;
		Запись.ВыбиратьВМежрасчетномДокументеНеобходимостьИсчисленияНДФЛ = Запись.ИсчислениеНДФЛПриМежрасчетныхНачислениях = Перечисления.ИсчислениеНДФЛПриМежрасчетныхНачислениях.УказыватьВДокументеНеобходимостьИсчисленияНалога;
		Запись.ВыбиратьВДокументеНаАвансНеобходимостьИсчисленияНДФЛ = Запись.ИсчислениеНДФЛВАвансе = Перечисления.ИсчислениеНДФЛВАвансе.УказыватьВДокументеНеобходимостьИсчисленияНалога;
		Запись.ВыбиратьВДокументеНеобходимостьУдержанияНДФЛПриВыплатеАванса = Запись.УдержаниеНДФЛПриВыплатеАванса = Перечисления.УдержаниеНДФЛПриВыплатеАванса.УказыватьВДокументеНеобходимостьУдержанияНалогаПриВыплатеАванса;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организации", ОбщегоНазначения.ВыгрузитьКолонку(ЭтотОбъект, "Организация"));
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Организации.Ссылка КАК Организация,
	               |	УчетнаяПолитикаПоНДФЛРасширенный.*
	               |ИЗ
	               |	Справочник.Организации КАК Организации
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоНДФЛРасширенный КАК УчетнаяПолитикаПоНДФЛРасширенный
	               |		ПО Организации.ГоловнаяОрганизация = УчетнаяПолитикаПоНДФЛРасширенный.Организация
	               |			И (Организации.ГоловнаяОрганизация В (&Организации))
	               |			И (Организации.Ссылка <> Организации.ГоловнаяОрганизация)
	               |			И (НЕ Организации.ПометкаУдаления)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.Следующий() Цикл 
		НаборЗаписей = РегистрыСведений.УчетнаяПолитикаПоНДФЛРасширенный.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
		НаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли