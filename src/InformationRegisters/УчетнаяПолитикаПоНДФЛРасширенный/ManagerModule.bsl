#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ГоловнаяОрганизация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиПравилРегистрации

// См. ЗарплатаКадрыРасширенныйСинхронизацияДанных.ШаблонОбработчика
Процедура ПриЗаполненииНастроекОбработчиковПравилРегистрации(Настройки) Экспорт
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляОтбораПоОрганизации(Настройки);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиОбновления

Процедура ЗаполнитьУчетнуюПолитикуОбособленныхПодразделений(ПараметрыОбновления = Неопределено) Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Организации.Ссылка КАК Организация,
	               |	УчетнаяПолитикаПоНДФЛРасширенный.*
	               |ИЗ
	               |	Справочник.Организации КАК Организации
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоНДФЛРасширенный КАК УчетнаяПолитикаПоНДФЛРасширенный
	               |		ПО Организации.ГоловнаяОрганизация = УчетнаяПолитикаПоНДФЛРасширенный.Организация
	               |			И (Организации.Ссылка <> Организации.ГоловнаяОрганизация)
	               |			И (НЕ Организации.ПометкаУдаления)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоНДФЛРасширенный КАК УчетнаяПолитикаОбособленныхПодразделений
	               |		ПО Организации.Ссылка = УчетнаяПолитикаОбособленныхПодразделений.Организация
	               |ГДЕ
	               |	УчетнаяПолитикаОбособленныхПодразделений.Организация ЕСТЬ NULL";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрСведений.УчетнаяПолитикаПоНДФЛРасширенный", "Организация", Выборка.Организация) Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.УчетнаяПолитикаПоНДФЛРасширенный.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДозаполнитьУчетнуюПолитику() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаПоНДФЛРасширенный.Организация КАК Организация,
	|	УчетнаяПолитикаПоНДФЛРасширенный.УдержаниеНДФЛПриВыплатеМежрасчетныхНачисленийСАвансом КАК УдержаниеНДФЛПриВыплатеМежрасчетныхНачисленийСАвансом,
	|	УчетнаяПолитикаПоНДФЛРасширенный.ВыбиратьВДокументеНеобходимостьУдержанияНДФЛПриВыплатеСАвансом КАК ВыбиратьВДокументеНеобходимостьУдержанияНДФЛПриВыплатеСАвансом
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаПоНДФЛРасширенный КАК УчетнаяПолитикаПоНДФЛРасширенный
	|ГДЕ
	|	УчетнаяПолитикаПоНДФЛРасширенный.ИсчислениеНДФЛПриМежрасчетныхНачислениях = ЗНАЧЕНИЕ(Перечисление.ИсчислениеНДФЛПриМежрасчетныхНачислениях.ПустаяСсылка)";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.УчетнаяПолитикаПоНДФЛРасширенный.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
		НоваяЗапись.ИсчислениеНДФЛПриМежрасчетныхНачислениях = Перечисления.ИсчислениеНДФЛПриМежрасчетныхНачислениях.ИсчислятьНалог;
		НоваяЗапись.ИсчислениеНДФЛВАвансе = Перечисления.ИсчислениеНДФЛВАвансе.ИсчислятьНалог;
		НоваяЗапись.УдержаниеНДФЛПриВыплатеАванса = Перечисления.УдержаниеНДФЛПриВыплатеМежрасчетныхНачисленийСАвансом.НеУдерживатьНалог;
		НаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
