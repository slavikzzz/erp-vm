#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ
	|	ЧтениеОбъектаРазрешено(Сотрудник)
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ИзменениеОбъектаРазрешено(Сотрудник)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбменДанными

// Пересчитывает зависимые данные после загрузки сообщения обмена
//
// Параметры:
//		ЗависимыеДанные - ТаблицаЗначений:
//			* ВедущиеМетаданные - ОбъектМетаданных - Метаданные ведущих данных
//			* ЗависимыеМетаданные - ОбъектМетаданных - Метаданные текущего объекта
//			* ВедущиеДанные - Массив объектов, заполненный при загрузке сообщения обмена
//				по этим объектам требуется обновить зависимые данные
//
Процедура ОбновитьЗависимыеДанныеПослеЗагрузкиОбменаДанными(ЗависимыеДанные) Экспорт
	
	МассивСотрудников = Новый Массив;
	МассивСотрудниковГПХ = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из ЗависимыеДанные Цикл
		Для Каждого ВедущиеДанные Из СтрокаТаблицы.ВедущиеДанные Цикл
			Если СтрокаТаблицы.ВедущиеМетаданные = Метаданные.Справочники.Сотрудники Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивСотрудников, 
					ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВедущиеДанные.Ссылка), Истина);
			ИначеЕсли СтрокаТаблицы.ВедущиеМетаданные = Метаданные.РегистрыСведений.ПериодыДействияДоговоровГражданскоПравовогоХарактера Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивСотрудниковГПХ, ВедущиеДанные.ДополнительныеСвойства.ОбновляемыеСотрудники, Истина);
			Иначе
				ТаблицаИзменившихсяДанныхНабора = ВедущиеДанные.ТаблицаИзменившихсяДанныхНабора();
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
					МассивСотрудников, ТаблицаИзменившихсяДанныхНабора.ВыгрузитьКолонку("Сотрудник"), Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если МассивСотрудников.Количество() > 0 Тогда
		КадровыйУчетРасширенный.ЗаполнитьДанныеДляПодбораСотрудников(МассивСотрудников);
	КонецЕсли;
	Если МассивСотрудниковГПХ.Количество() > 0 Тогда
		КадровыйУчет.ОбновитьДанныеДляПодбораДоговорниковГПХ(МассивСотрудниковГПХ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьДанныеДляПодбораСотрудников(Сотрудники, ОтключитьБизнесЛогику = Ложь, ДополнительныеСвойства = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Запрос.УстановитьПараметр("МаксимальнаяДата", ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата());
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Сотрудники.Ссылка КАК Сотрудник,
		|	Сотрудники.ГоловнойСотрудник КАК ГоловнойСотрудник
		|ПОМЕСТИТЬ ВТОбновляемыеСотрудники
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Ссылка В(&Сотрудники)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОкончания
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	ВТОбновляемыеСотрудники КАК Сотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Сотрудники.Сотрудник КАК Сотрудник
		|ИЗ
		|	ВТСотрудники КАК Сотрудники";
	
	РезультатЗапросаПоСотрудникам = Запрос.Выполнить();
	
	Если РезультатЗапросаПоСотрудникам.Пустой() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистра(
		"КадроваяИсторияСотрудников",
		Запрос.МенеджерВременныхТаблиц,
		Истина,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТСотрудники",
			"Сотрудник"),
		,
		"ВТКадроваяИсторияСотрудниковДляДанныхДляПодбораСотрудников");
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РегистрСведений.Период КАК Период,
		|	РегистрСведений.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РегистрСведений.Организация КАК Организация,
		|	РегистрСведений.Подразделение КАК Подразделение,
		|	РегистрСведений.Сотрудник КАК Сотрудник,
		|	РегистрСведений.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РегистрСведений.Должность КАК Должность,
		|	РегистрСведений.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
		|	НЕОПРЕДЕЛЕНО КАК РабочееМесто,
		|	РегистрСведений.ВидСобытия КАК ВидСобытия,
		|	РегистрСведений.КоличествоСтавок КАК КоличествоСтавок,
		|	РегистрСведений.ВидДоговора КАК ВидДоговора
		|ПОМЕСТИТЬ ВТРегистрСведенийКадровыхДанных
		|ИЗ
		|	ВТКадроваяИсторияСотрудниковДляДанныхДляПодбораСотрудников КАК РегистрСведений";
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.РабочиеМестаОхраныТруда") Тогда
		МодульРабочиеМестаОхраныТруда = ОбщегоНазначения.ОбщийМодуль("РабочиеМестаОхраныТруда");
		МодульРабочиеМестаОхраныТруда.ДополнитьКадровуюИсториюРабочимиМестами(Запрос);
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РегистрСведений.Период КАК Период,
		|	РегистрСведений.Сотрудник КАК Сотрудник,
		|	РегистрСведений.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РегистрСведений.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РегистрСведений.Организация КАК Организация,
		|	РегистрСведений.Подразделение КАК Подразделение,
		|	РегистрСведений.Должность КАК Должность,
		|	РегистрСведений.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
		|	РегистрСведений.РабочееМесто КАК РабочееМесто,
		|	РегистрСведений.КоличествоСтавок КАК КоличествоСтавок,
		|	МИНИМУМ(ЕСТЬNULL(РегистрСведенийПоследующие.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК СледующийПериод
		|ПОМЕСТИТЬ ВТРегистрСведенийСПоследующимиПериодами
		|ИЗ
		|	ВТРегистрСведенийКадровыхДанных КАК РегистрСведений
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистрСведенийКадровыхДанных КАК РегистрСведенийПоследующие
		|		ПО РегистрСведений.Сотрудник = РегистрСведенийПоследующие.Сотрудник
		|			И РегистрСведений.Период < РегистрСведенийПоследующие.Период
		|			И (ВЫБОР
		|				КОГДА РегистрСведенийПоследующие.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
		|					ТОГДА ИСТИНА
		|				КОГДА РегистрСведений.Подразделение <> РегистрСведенийПоследующие.Подразделение
		|					ТОГДА ИСТИНА
		|				КОГДА РегистрСведений.Должность <> РегистрСведенийПоследующие.Должность
		|					ТОГДА ИСТИНА
		|				КОГДА РегистрСведений.ДолжностьПоШтатномуРасписанию <> РегистрСведенийПоследующие.ДолжностьПоШтатномуРасписанию
		|					ТОГДА ИСТИНА
		|				КОГДА РегистрСведений.РабочееМесто <> РегистрСведенийПоследующие.РабочееМесто
		|					ТОГДА ИСТИНА
		|				КОГДА РегистрСведений.КоличествоСтавок <> РегистрСведенийПоследующие.КоличествоСтавок
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	РегистрСведений.Период,
		|	РегистрСведений.Сотрудник,
		|	РегистрСведений.ГоловнаяОрганизация,
		|	РегистрСведений.ФизическоеЛицо,
		|	РегистрСведений.Организация,
		|	РегистрСведений.Подразделение,
		|	РегистрСведений.Должность,
		|	РегистрСведений.ДолжностьПоШтатномуРасписанию,
		|	РегистрСведений.РабочееМесто,
		|	РегистрСведений.КоличествоСтавок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистрСведенийСПоследующимиПериодами.Сотрудник КАК Сотрудник,
		|	РегистрСведенийСПоследующимиПериодами.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РегистрСведенийСПоследующимиПериодами.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РегистрСведенийСПоследующимиПериодами.Организация КАК Организация,
		|	РегистрСведенийСПоследующимиПериодами.Подразделение КАК Подразделение,
		|	РегистрСведенийСПоследующимиПериодами.Должность КАК Должность,
		|	РегистрСведенийСПоследующимиПериодами.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
		|	РегистрСведенийСПоследующимиПериодами.РабочееМесто КАК РабочееМесто,
		|	РегистрСведенийСПоследующимиПериодами.КоличествоСтавок КАК КоличествоСтавок,
		|	ВЫБОР
		|		КОГДА РегистрСведенийСПоследующимиПериодами.СледующийПериод = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА &МаксимальнаяДата
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(РегистрСведенийСПоследующимиПериодами.СледующийПериод, ДЕНЬ, -1)
		|	КОНЕЦ КАК ОкончаниеПериода,
		|	МИНИМУМ(РегистрСведенийСПоследующимиПериодами.Период) КАК НачалоПериода,
		|	МАКСИМУМ(РегистрСведенийСПоследующимиПериодами.Период) КАК ПериодПоследнейЗаписи
		|ПОМЕСТИТЬ ВТРегистрСведенийСПериодами
		|ИЗ
		|	ВТРегистрСведенийСПоследующимиПериодами КАК РегистрСведенийСПоследующимиПериодами
		|
		|СГРУППИРОВАТЬ ПО
		|	РегистрСведенийСПоследующимиПериодами.Сотрудник,
		|	РегистрСведенийСПоследующимиПериодами.ГоловнаяОрганизация,
		|	РегистрСведенийСПоследующимиПериодами.ФизическоеЛицо,
		|	РегистрСведенийСПоследующимиПериодами.Организация,
		|	РегистрСведенийСПоследующимиПериодами.Подразделение,
		|	РегистрСведенийСПоследующимиПериодами.Должность,
		|	РегистрСведенийСПоследующимиПериодами.ДолжностьПоШтатномуРасписанию,
		|	РегистрСведенийСПоследующимиПериодами.РабочееМесто,
		|	РегистрСведенийСПоследующимиПериодами.СледующийПериод,
		|	РегистрСведенийСПоследующимиПериодами.КоличествоСтавок
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ПериодПоследнейЗаписи,
		|	Подразделение,
		|	Должность,
		|	ДолжностьПоШтатномуРасписанию,
		|	РабочееМесто
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РегистрСведенийСПериодами.Сотрудник КАК Сотрудник,
		|	РегистрСведенийСПериодами.ОкончаниеПериода КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	ВТРегистрСведенийСПериодами КАК РегистрСведенийСПериодами";
	
	Запрос.Выполнить();
	
	ОписательТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
	
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательТаблиц, Истина, "ТарифнаяСтавка,ФОТ,Надбавка,СпособРасчетаАванса,Аванс,ВидЗанятости");
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РегистрСведенийСПериодами.НачалоПериода КАК Период,
		|	РегистрСведенийСПериодами.Сотрудник КАК Сотрудник,
		|	РегистрСведенийСПериодами.ГоловнаяОрганизация КАК Организация,
		|	РегистрСведенийСПериодами.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РегистрСведенийСПериодами.Организация КАК Филиал,
		|	РегистрСведенийСПериодами.Подразделение КАК Подразделение,
		|	РегистрСведенийСПериодами.Должность КАК Должность,
		|	РегистрСведенийСПериодами.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
		|	РегистрСведенийСПериодами.РабочееМесто КАК РабочееМесто,
		|	РегистрСведенийСПериодами.ОкончаниеПериода КАК Окончание,
		|	РегистрСведенийПериодПоследнейЗаписи.ВидСобытия КАК ВидСобытия,
		|	РегистрСведенийПериодПоследнейЗаписи.КоличествоСтавок КАК КоличествоСтавок,
		|	РегистрСведенийПериодПоследнейЗаписи.ВидДоговора КАК ВидДоговора,
		|	КадровыеДанныеСотрудников.ТарифнаяСтавка КАК ТарифнаяСтавка,
		|	КадровыеДанныеСотрудников.ФОТ КАК ФОТ,
		|	КадровыеДанныеСотрудников.Надбавка КАК Надбавка,
		|	КадровыеДанныеСотрудников.СпособРасчетаАванса КАК СпособРасчетаАванса,
		|	КадровыеДанныеСотрудников.Аванс КАК Аванс,
		|	КадровыеДанныеСотрудников.ВидЗанятости КАК ВидЗанятости,
		|	РегистрСведенийСПериодами.Сотрудник.Код КАК Код,
		|	РегистрСведенийСПериодами.Сотрудник.Наименование КАК Наименование,
		|	РегистрСведенийСПериодами.Сотрудник.ПометкаУдаления КАК ПометкаУдаления,
		|	РегистрСведенийСПериодами.Сотрудник.ВАрхиве КАК ВАрхиве
		|ПОМЕСТИТЬ ВТНаборыЗаписей
		|ИЗ
		|	ВТРегистрСведенийСПериодами КАК РегистрСведенийСПериодами
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистрСведенийКадровыхДанных КАК РегистрСведенийПериодПоследнейЗаписи
		|		ПО РегистрСведенийСПериодами.Сотрудник = РегистрСведенийПериодПоследнейЗаписи.Сотрудник
		|			И РегистрСведенийСПериодами.ГоловнаяОрганизация = РегистрСведенийПериодПоследнейЗаписи.ГоловнаяОрганизация
		|			И РегистрСведенийСПериодами.ФизическоеЛицо = РегистрСведенийПериодПоследнейЗаписи.ФизическоеЛицо
		|			И РегистрСведенийСПериодами.Организация = РегистрСведенийПериодПоследнейЗаписи.Организация
		|			И РегистрСведенийСПериодами.Подразделение = РегистрСведенийПериодПоследнейЗаписи.Подразделение
		|			И РегистрСведенийСПериодами.ПериодПоследнейЗаписи = РегистрСведенийПериодПоследнейЗаписи.Период
		|			И РегистрСведенийСПериодами.Должность = РегистрСведенийПериодПоследнейЗаписи.Должность
		|			И РегистрСведенийСПериодами.ДолжностьПоШтатномуРасписанию = РегистрСведенийПериодПоследнейЗаписи.ДолжностьПоШтатномуРасписанию
		|			И РегистрСведенийСПериодами.РабочееМесто = РегистрСведенийПериодПоследнейЗаписи.РабочееМесто
		|			И РегистрСведенийСПериодами.КоличествоСтавок = РегистрСведенийПериодПоследнейЗаписи.КоличествоСтавок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистрСведенийКадровыхДанных КАК РегистрСведенийНачалоСобытия
		|		ПО РегистрСведенийСПериодами.Сотрудник = РегистрСведенийНачалоСобытия.Сотрудник
		|			И РегистрСведенийСПериодами.ГоловнаяОрганизация = РегистрСведенийНачалоСобытия.ГоловнаяОрганизация
		|			И РегистрСведенийСПериодами.ФизическоеЛицо = РегистрСведенийНачалоСобытия.ФизическоеЛицо
		|			И РегистрСведенийСПериодами.Организация = РегистрСведенийНачалоСобытия.Организация
		|			И РегистрСведенийСПериодами.Подразделение = РегистрСведенийНачалоСобытия.Подразделение
		|			И РегистрСведенийСПериодами.НачалоПериода = РегистрСведенийНачалоСобытия.Период
		|			И РегистрСведенийСПериодами.Должность = РегистрСведенийНачалоСобытия.Должность
		|			И РегистрСведенийСПериодами.ДолжностьПоШтатномуРасписанию = РегистрСведенийНачалоСобытия.ДолжностьПоШтатномуРасписанию
		|			И РегистрСведенийСПериодами.РабочееМесто = РегистрСведенийНачалоСобытия.РабочееМесто
		|			И РегистрСведенийСПериодами.КоличествоСтавок = РегистрСведенийНачалоСобытия.КоличествоСтавок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|		ПО РегистрСведенийСПериодами.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
		|			И РегистрСведенийСПериодами.ОкончаниеПериода = КадровыеДанныеСотрудников.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДляПодбора.Начало КАК Начало,
		|	ДанныеДляПодбора.Организация КАК Организация,
		|	ДанныеДляПодбора.Филиал КАК Филиал,
		|	ДанныеДляПодбора.Подразделение КАК Подразделение,
		|	ДанныеДляПодбора.Сотрудник КАК Сотрудник,
		|	ДанныеДляПодбора.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДанныеДляПодбора.Должность КАК Должность,
		|	ДанныеДляПодбора.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
		|	ДанныеДляПодбора.РабочееМесто КАК РабочееМесто,
		|	ДанныеДляПодбора.ВидЗанятости КАК ВидЗанятости,
		|	ДанныеДляПодбора.ВидСобытия КАК ВидСобытия,
		|	ДанныеДляПодбора.КоличествоСтавок КАК КоличествоСтавок,
		|	ДанныеДляПодбора.ВидДоговора КАК ВидДоговора,
		|	ДанныеДляПодбора.Окончание КАК Окончание,
		|	ДанныеДляПодбора.Код КАК Код,
		|	ДанныеДляПодбора.Наименование КАК Наименование,
		|	ДанныеДляПодбора.ПометкаУдаления КАК ПометкаУдаления,
		|	ДанныеДляПодбора.ВАрхиве КАК ВАрхиве,
		|	ДанныеОбОплатеТрудаДляПодбора.ТарифнаяСтавка КАК ТарифнаяСтавка,
		|	ДанныеОбОплатеТрудаДляПодбора.ФОТ КАК ФОТ,
		|	ДанныеОбОплатеТрудаДляПодбора.Надбавка КАК Надбавка,
		|	ДанныеОбОплатеТрудаДляПодбора.СпособРасчетаАванса КАК СпособРасчетаАванса,
		|	ДанныеОбОплатеТрудаДляПодбора.Аванс КАК Аванс
		|ПОМЕСТИТЬ ВТДанныеДляПодбораСотрудников
		|ИЗ
		|	ВТОбновляемыеСотрудники КАК ОбновляемыеСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбора
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОбОплатеТрудаДляПодбораСотрудников КАК ДанныеОбОплатеТрудаДляПодбора
		|			ПО ДанныеДляПодбора.Сотрудник = ДанныеОбОплатеТрудаДляПодбора.Сотрудник
		|				И ДанныеДляПодбора.ФизическоеЛицо = ДанныеОбОплатеТрудаДляПодбора.ФизическоеЛицо
		|				И ДанныеДляПодбора.ИдентификаторЗаписи = ДанныеОбОплатеТрудаДляПодбора.ИдентификаторЗаписи
		|		ПО ОбновляемыеСотрудники.Сотрудник = ДанныеДляПодбора.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕСТЬNULL(НаборыЗаписей.Сотрудник, ДанныеДляПодбора.Сотрудник) КАК Сотрудник
		|ПОМЕСТИТЬ ВТИзмененныеСотрудники
		|ИЗ
		|	ВТНаборыЗаписей КАК НаборыЗаписей
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТДанныеДляПодбораСотрудников КАК ДанныеДляПодбора
		|		ПО НаборыЗаписей.Период = ДанныеДляПодбора.Начало
		|			И НаборыЗаписей.Организация = ДанныеДляПодбора.Организация
		|			И НаборыЗаписей.Филиал = ДанныеДляПодбора.Филиал
		|			И НаборыЗаписей.Подразделение = ДанныеДляПодбора.Подразделение
		|			И НаборыЗаписей.Сотрудник = ДанныеДляПодбора.Сотрудник
		|			И НаборыЗаписей.ФизическоеЛицо = ДанныеДляПодбора.ФизическоеЛицо
		|			И НаборыЗаписей.Должность = ДанныеДляПодбора.Должность
		|			И НаборыЗаписей.ДолжностьПоШтатномуРасписанию = ДанныеДляПодбора.ДолжностьПоШтатномуРасписанию
		|			И НаборыЗаписей.РабочееМесто = ДанныеДляПодбора.РабочееМесто
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ДанныеДляПодбора.Сотрудник ЕСТЬ NULL
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Сотрудник ЕСТЬ NULL
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.ВидЗанятости <> ДанныеДляПодбора.ВидЗанятости
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.ВидСобытия <> ДанныеДляПодбора.ВидСобытия
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.КоличествоСтавок <> ДанныеДляПодбора.КоличествоСтавок
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.ВидДоговора <> ДанныеДляПодбора.ВидДоговора
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Окончание <> ДанныеДляПодбора.Окончание
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.ТарифнаяСтавка <> ДанныеДляПодбора.ТарифнаяСтавка
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.ФОТ <> ДанныеДляПодбора.ФОТ
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Надбавка <> ДанныеДляПодбора.Надбавка
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.СпособРасчетаАванса <> ДанныеДляПодбора.СпособРасчетаАванса
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Аванс <> ДанныеДляПодбора.Аванс
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Код <> ДанныеДляПодбора.Код
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Наименование <> ДанныеДляПодбора.Наименование
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.ПометкаУдаления <> ДанныеДляПодбора.ПометкаУдаления
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.ВАрхиве <> ДанныеДляПодбора.ВАрхиве
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеСотрудники.Сотрудник.Код КАК Код,
		|	ИзмененныеСотрудники.Сотрудник.Наименование КАК Наименование,
		|	ИзмененныеСотрудники.Сотрудник КАК Сотрудник,
		|	ИзмененныеСотрудники.Сотрудник.ГоловнаяОрганизация КАК Организация,
		|	ИзмененныеСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЛОЖЬ КАК ПоДоговоруГПХ,
		|	НаборыЗаписей.Филиал КАК Филиал,
		|	НаборыЗаписей.Подразделение КАК Подразделение,
		|	НаборыЗаписей.Должность КАК Должность,
		|	НаборыЗаписей.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
		|	НаборыЗаписей.РабочееМесто КАК РабочееМесто,
		|	ВЫБОР
		|		КОГДА ИзмененныеСотрудники.Сотрудник = ИзмененныеСотрудники.Сотрудник.ГоловнойСотрудник
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоГоловнойСотрудник,
		|	НаборыЗаписей.ВидЗанятости КАК ВидЗанятости,
		|	НаборыЗаписей.ВидСобытия КАК ВидСобытия,
		|	НаборыЗаписей.КоличествоСтавок КАК КоличествоСтавок,
		|	НаборыЗаписей.ВидДоговора КАК ВидДоговора,
		|	НаборыЗаписей.Период КАК Начало,
		|	ЕСТЬNULL(НаборыЗаписей.Окончание, &МаксимальнаяДата) КАК Окончание,
		|	НаборыЗаписей.ТарифнаяСтавка КАК ТарифнаяСтавка,
		|	НаборыЗаписей.ФОТ КАК ФОТ,
		|	НаборыЗаписей.Надбавка КАК Надбавка,
		|	НаборыЗаписей.СпособРасчетаАванса КАК СпособРасчетаАванса,
		|	НаборыЗаписей.Аванс КАК Аванс,
		|	ИзмененныеСотрудники.Сотрудник.ПометкаУдаления КАК ПометкаУдаления,
		|	НаборыЗаписей.ВАрхиве КАК ВАрхиве
		|ИЗ
		|	ВТИзмененныеСотрудники КАК ИзмененныеСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНаборыЗаписей КАК НаборыЗаписей
		|		ПО ИзмененныеСотрудники.Сотрудник = НаборыЗаписей.Сотрудник
		|ГДЕ
		|	ЕСТЬNULL(НаборыЗаписей.Организация, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	И ЕСТЬNULL(НаборыЗаписей.Филиал, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	НаборыЗаписей.Период";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
			
			НаборЗаписей = РегистрыСведений.ДанныеДляПодбораСотрудников.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Сотрудник.Установить(Выборка.Сотрудник);
			НаборЗаписей.Отбор.ПоДоговоруГПХ.Установить(Ложь);
			
			НаборЗаписейДанныхОбОплатеТруда = РегистрыСведений.ДанныеОбОплатеТрудаДляПодбораСотрудников.СоздатьНаборЗаписей();
			НаборЗаписейДанныхОбОплатеТруда.Отбор.Сотрудник.Установить(Выборка.Сотрудник);
			
			// Если отношения не оформлены добавляется запись с незаполненными сведениями о рабочем месте.
			Если Выборка.Начало = Null Тогда
				
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, Выборка);
				
				Запись.ПоДоговоруГПХ = Ложь;
				Запись.ИдентификаторЗаписи = Новый УникальныйИдентификатор;
				
			Иначе
				
				ПериодДоНачалаРаботыЗарегистрирован = Ложь;
				Пока Выборка.Следующий() Цикл
					
					Если НЕ ПериодДоНачалаРаботыЗарегистрирован
						И ЗначениеЗаполнено(Выборка.Начало) Тогда
						
						ДобавитьЗаписьПериодаДоНачалаРаботы(НаборЗаписей, Выборка);
						ПериодДоНачалаРаботыЗарегистрирован = Истина;
						
					КонецЕсли;
					
					Запись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, Выборка);
					
					Запись.ИдентификаторЗаписи = Новый УникальныйИдентификатор;
					
					Если ОтключитьБизнесЛогику Тогда
						Запись.КоличествоСтавокПредставление = КадровыйУчетКлиентСервер.ПредставлениеКоличестваСтавок(Запись.КоличествоСтавок);
					КонецЕсли;
					
					Если ЗначениеЗаполнено(Выборка.ТарифнаяСтавка)
						Или ЗначениеЗаполнено(Выборка.ФОТ)
						Или ЗначениеЗаполнено(Выборка.Надбавка)
						Или ЗначениеЗаполнено(Выборка.СпособРасчетаАванса)
						Или ЗначениеЗаполнено(Выборка.Аванс)Тогда
						
						ЗаписьДанныхОбОплатеТруда = НаборЗаписейДанныхОбОплатеТруда.Добавить();
						ЗаполнитьЗначенияСвойств(ЗаписьДанныхОбОплатеТруда, Выборка);
						
						ЗаписьДанныхОбОплатеТруда.ИдентификаторЗаписи = Запись.ИдентификаторЗаписи;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если ОтключитьБизнесЛогику
				Или КадровыйУчет.НастройкиКадровогоУчета().ИспользуютсяДанныеСотрудниковВнешнихИсточников Тогда
				
				НаборЗаписей.ОбменДанными.Загрузка = Истина;
				НаборЗаписейДанныхОбОплатеТруда.ОбменДанными.Загрузка = Истина;
				
				Если ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание")
					Или КадровыйУчет.НастройкиКадровогоУчета().ИспользуютсяДанныеСотрудниковВнешнихИсточников Тогда
					
					Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
						МодульОрганизационнаяСтруктура = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
						МодульОрганизационнаяСтруктура.ЗаполнитьМестоВСтруктуреПредприятияДанныхДляПодбораСотрудников(НаборЗаписей);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ДополнительныеСвойства <> Неопределено Тогда
				
				Для каждого ДополнительноеСвойство Из ДополнительныеСвойства Цикл
					НаборЗаписей.ДополнительныеСвойства.Вставить(ДополнительноеСвойство.Ключ, ДополнительноеСвойство.Значение);
					НаборЗаписейДанныхОбОплатеТруда.ДополнительныеСвойства.Вставить(ДополнительноеСвойство.Ключ, ДополнительноеСвойство.Значение);
				КонецЦикла;
				
			КонецЕсли; 
			
			НаборЗаписей.Записать();
			НаборЗаписейДанныхОбОплатеТруда.Записать();
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьДанныеДляПодбораДоговорниковГПХ(Сотрудники, ОтключитьБизнесЛогику = Ложь, ДополнительныеСвойства = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокСотрудников", Сотрудники);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник.Код КАК Код,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник.Наименование КАК Наименование,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник КАК Сотрудник,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Организация.ГоловнаяОрганизация КАК Организация,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Организация КАК Филиал,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Подразделение КАК Подразделение,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.ДатаНачала КАК Начало,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.ДатаОкончания КАК Окончание,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник.ПометкаУдаления КАК ПометкаУдаления,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник.ВАрхиве КАК ВАрхиве
		|ПОМЕСТИТЬ ВТНаборыЗаписей
		|ИЗ
		|	РегистрСведений.ПериодыДействияДоговоровГражданскоПравовогоХарактера КАК ПериодыДействияДоговоровГражданскоПравовогоХарактера
		|ГДЕ
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник В(&СписокСотрудников)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДляПодбора.Код КАК Код,
		|	ДанныеДляПодбора.Наименование КАК Наименование,
		|	ДанныеДляПодбора.Сотрудник КАК Сотрудник,
		|	ДанныеДляПодбора.Организация КАК Организация,
		|	ДанныеДляПодбора.Филиал КАК Филиал,
		|	ДанныеДляПодбора.Подразделение КАК Подразделение,
		|	ДанныеДляПодбора.Начало КАК Начало,
		|	ДанныеДляПодбора.Окончание КАК Окончание,
		|	ДанныеДляПодбора.ПометкаУдаления КАК ПометкаУдаления,
		|	ДанныеДляПодбора.ВАрхиве КАК ВАрхиве
		|ПОМЕСТИТЬ ВТДанныеДляПодбораСотрудников
		|ИЗ
		|	РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбора
		|ГДЕ
		|	ДанныеДляПодбора.Сотрудник В(&СписокСотрудников)
		|	И ДанныеДляПодбора.ПоДоговоруГПХ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕСТЬNULL(НаборыЗаписей.Сотрудник, ДанныеДляПодбора.Сотрудник) КАК Сотрудник
		|ПОМЕСТИТЬ ВТИзмененныеСотрудники
		|ИЗ
		|	ВТНаборыЗаписей КАК НаборыЗаписей
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТДанныеДляПодбораСотрудников КАК ДанныеДляПодбора
		|		ПО НаборыЗаписей.Сотрудник = ДанныеДляПодбора.Сотрудник
		|			И НаборыЗаписей.Филиал = ДанныеДляПодбора.Филиал
		|			И НаборыЗаписей.Подразделение = ДанныеДляПодбора.Подразделение
		|			И НаборыЗаписей.Начало = ДанныеДляПодбора.Начало
		|			И НаборыЗаписей.Окончание = ДанныеДляПодбора.Окончание
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ДанныеДляПодбора.Сотрудник ЕСТЬ NULL
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Сотрудник ЕСТЬ NULL
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Организация <> ДанныеДляПодбора.Организация
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Филиал <> ДанныеДляПодбора.Филиал
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Подразделение <> ДанныеДляПодбора.Подразделение
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Начало <> ДанныеДляПодбора.Начало
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Окончание <> ДанныеДляПодбора.Окончание
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.ПометкаУдаления <> ДанныеДляПодбора.ПометкаУдаления
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.ВАрхиве <> ДанныеДляПодбора.ВАрхиве
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Код <> ДанныеДляПодбора.Код
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Наименование <> ДанныеДляПодбора.Наименование
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НаборыЗаписей.Код КАК Код,
		|	НаборыЗаписей.Наименование КАК Наименование,
		|	ИзмененныеСотрудники.Сотрудник КАК Сотрудник,
		|	НаборыЗаписей.Организация КАК Организация,
		|	НаборыЗаписей.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НаборыЗаписей.Филиал КАК Филиал,
		|	НаборыЗаписей.Подразделение КАК Подразделение,
		|	НаборыЗаписей.Начало КАК Начало,
		|	НаборыЗаписей.Окончание КАК Окончание,
		|	ВЫБОР
		|		КОГДА ИзмененныеСотрудники.Сотрудник = ИзмененныеСотрудники.Сотрудник.ГоловнойСотрудник
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоГоловнойСотрудник,
		|	НаборыЗаписей.ПометкаУдаления КАК ПометкаУдаления,
		|	НаборыЗаписей.ВАрхиве КАК ВАрхиве
		|ИЗ
		|	ВТИзмененныеСотрудники КАК ИзмененныеСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНаборыЗаписей КАК НаборыЗаписей
		|		ПО ИзмененныеСотрудники.Сотрудник = НаборыЗаписей.Сотрудник
		|ГДЕ
		|	ЕСТЬNULL(НаборыЗаписей.Организация, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	И ЕСТЬNULL(НаборыЗаписей.Филиал, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	Начало";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
			
			НаборЗаписей = РегистрыСведений.ДанныеДляПодбораСотрудников.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Сотрудник.Установить(Выборка.Сотрудник);
			НаборЗаписей.Отбор.ПоДоговоруГПХ.Установить(Истина);
			
			Пока Выборка.Следующий() Цикл
				
				Если Выборка.Начало <> Null Тогда
					
					Запись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, Выборка);
					
					Запись.ПоДоговоруГПХ = Истина;
					Запись.ИдентификаторЗаписи = Новый УникальныйИдентификатор;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ОтключитьБизнесЛогику Тогда
				НаборЗаписей.ОбменДанными.Загрузка = Истина;
			КонецЕсли;
			
			Если ДополнительныеСвойства <> Неопределено Тогда
				
				Для каждого ДополнительноеСвойство Из ДополнительныеСвойства Цикл
					НаборЗаписей.ДополнительныеСвойства.Вставить(ДополнительноеСвойство.Ключ, ДополнительноеСвойство.Значение);
				КонецЦикла;
				
			КонецЕсли;
			
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьДанныеСотрудника(СотрудникОбъект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.ДанныеДляПодбораСотрудников.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Сотрудник.Установить(СотрудникОбъект.Ссылка);
	
	НаборЗаписей.Прочитать();
	
	Для каждого Запись Из НаборЗаписей Цикл
		Запись.Организация = СотрудникОбъект.ГоловнаяОрганизация;
		Запись.Код = СотрудникОбъект.Код;
		Запись.Наименование = СотрудникОбъект.Наименование;
		Запись.ПометкаУдаления = СотрудникОбъект.ПометкаУдаления;
		Запись.ВАрхиве = СотрудникОбъект.ВАрхиве;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ДобавитьДанныеНовогоСотрудника(СотрудникОбъект, ОтключитьБизнесЛогику = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.ДанныеДляПодбораСотрудников.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Сотрудник.Установить(СотрудникОбъект.Ссылка);
	НаборЗаписей.Отбор.ПоДоговоруГПХ.Установить(Ложь);
	
	Запись = НаборЗаписей.Добавить();
	Запись.Код = СотрудникОбъект.Код;
	Запись.Наименование = СотрудникОбъект.Наименование;
	Запись.Сотрудник = СотрудникОбъект.Ссылка;
	Запись.Организация = СотрудникОбъект.ГоловнаяОрганизация;
	Запись.ФизическоеЛицо = СотрудникОбъект.ФизическоеЛицо;
	Запись.ИдентификаторЗаписи = Новый УникальныйИдентификатор;
	Запись.ПоДоговоруГПХ = Ложь;
	Запись.ПометкаУдаления = СотрудникОбъект.ПометкаУдаления;
	Запись.ВАрхиве = СотрудникОбъект.ВАрхиве;
	Запись.ЭтоГоловнойСотрудник = (СотрудникОбъект.Ссылка = СотрудникОбъект.ГоловнойСотрудник);
	Запись.Окончание = ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата();
	
	Если ОтключитьБизнесЛогику Тогда
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ДобавитьЗаписьПериодаДоНачалаРаботы(НаборЗаписей, Выборка)
	
	Запись = НаборЗаписей.Добавить();
	
	ЗаполнитьЗначенияСвойств(Запись, Выборка, "Код,Наименование,Сотрудник,Организация,ФизическоеЛицо,ЭтоГоловнойСотрудник");
	Если Не ЗначениеЗаполнено(Выборка.Начало) Тогда
		Запись.Окончание = ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата();
	Иначе
		Запись.Окончание = НачалоДня(НачалоДня(Выборка.Начало) - 1);
	КонецЕсли;
	
	Запись.ИдентификаторЗаписи = Новый УникальныйИдентификатор;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
