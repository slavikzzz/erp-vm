#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Записывает код ТН ВЭД из онлайн-классификатора.
// 
// Параметры:
//  ДанныеЗаписи - Структура - со свойствами:
//  * КодТНВЭД - Строка - Код ТН ВЭД.
//  * ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - вид продукции.
//  * НаименованиеПолное - Строка - наименование.
Процедура ЗаписатьДанныеКодаТНВЭД(ДанныеЗаписи) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаписи) Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ДанныеЗаписи);
	
	Блокировка        = Новый БлокировкаДанных();
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.КодыТНВЭДИСМП");
	ЭлементБлокировки.УстановитьЗначение("КодТНВЭД", ДанныеЗаписи.КодТНВЭД);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка.Заблокировать();
		
		УстановитьПривилегированныйРежим(Истина);
		МенеджерЗаписи.Записать();
		УстановитьПривилегированныйРежим(Ложь);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'Произошла ошибка сохранения кода ТН ВЭД %1:
				       |%2';
				       |en = 'Произошла ошибка сохранения кода ТН ВЭД %1:
				       |%2'"),
			ДанныеЗаписи.КодТНВЭД,
			ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ВызватьИсключение ТекстОшибки;
		
	КонецПопытки
	
КонецПроцедуры

// Вид продукции по ТН ВЭД и ОКПД2.
// 
// Параметры:
//  ТоварнаяГруппа - ПеречислениеСсылка.ВидыПродукцииИС, Строка - Товарная группа
//  ТНВЭД - Строка - ТНВЭД
//  ОКПД2 - Строка - ОКПД2
//  КешПоТоварнымГруппам - Соответствие из КлючИЗначение:
//  	* Ключ - Строка - товарная группа строкой.
//  	* Значение - Структура - См. ИнициализироватьСтруктуруТаблицПоТоварнойГруппе(),
//  	Неопределено - Кеширование данных макетов.
//  ТочноеСоотвествие - Булево - искать точное совпадение в макетах ТНВЭД и ОКПД2
// Возвращаемое значение:
//  Массив из ПеречислениеСсылка.ВидыПродукцииИС
Функция ВидПродукцииПоТНВЭДОКПД2(ТоварнаяГруппа, Знач ТНВЭД, Знач ОКПД2 = "", КешПоТоварнымГруппам = Неопределено, ТочноеСоотвествие = Ложь) Экспорт
	
	Если ТипЗнч(ТоварнаяГруппа) <> Тип("Строка") Тогда
		ТоварнаяГруппаСтрокой = ИнтерфейсИСМПОбщегоНазначения.ТоварнаяГруппа(ТоварнаяГруппа);
	Иначе
		ТоварнаяГруппаСтрокой = ТоварнаяГруппа;
	КонецЕсли;
	
	Если КешПоТоварнымГруппам = Неопределено Тогда
		
		КешПоТоварнымГруппам = Новый Соответствие;
		ТаблицыПоТоварнойГруппе = ИнициализироватьСтруктуруТаблицПоТоварнойГруппе();
		КешПоТоварнымГруппам.Вставить(ТоварнаяГруппаСтрокой, ТаблицыПоТоварнойГруппе);
		
	Иначе
		
		ТаблицыПоТоварнойГруппе = КешПоТоварнымГруппам[ТоварнаяГруппаСтрокой];
		Если ТаблицыПоТоварнойГруппе = Неопределено Тогда
			ТаблицыПоТоварнойГруппе = ИнициализироватьСтруктуруТаблицПоТоварнойГруппе();
			КешПоТоварнымГруппам.Вставить(ТоварнаяГруппаСтрокой, ТаблицыПоТоварнойГруппе);
		КонецЕсли;
		
	КонецЕсли;
	
	ТаблицаТНВЭД = ТаблицыПоТоварнойГруппе.ТаблицаТНВЭД;
	ТаблицаОКПД2 = ТаблицыПоТоварнойГруппе.ТаблицаОКПД2;
	Если ТаблицаТНВЭД = Неопределено Тогда
		
		МакетТНВЭД = ПолучитьМакет("ВидыПродукцииТНВЭД");
		
		ПостроительЗапроса = Новый ПостроительЗапроса;
		ПостроительЗапроса.ИсточникДанных = Новый ОписаниеИсточникаДанных(МакетТНВЭД.Область());
		
		Отбор = ПостроительЗапроса.Отбор;
		ОтборТоварнаяГруппа = Отбор.Добавить("ТоварнаяГруппа");
		ОтборТоварнаяГруппа.ВидСравнения = ВидСравнения.Равно;
		ОтборТоварнаяГруппа.Использование = Истина;
		
		ОтборТоварнаяГруппа.Значение = ТоварнаяГруппаСтрокой; 
		
		ТаблицаТНВЭД = ПостроительЗапроса.Результат.Выгрузить(); // ТаблицаЗначений
		ТаблицаТНВЭД.Индексы.Добавить("КодТНВЭД");
		ТаблицаТНВЭД.Индексы.Добавить("КодТНВЭД4");
		
		ТаблицыПоТоварнойГруппе.ТаблицаТНВЭД = ТаблицаТНВЭД;
		
	КонецЕсли;
	
	ВидыПродукцииСтрокойТНВЭД = ТаблицаТНВЭД.Скопировать(Новый Структура("КодТНВЭД", ТНВЭД), "ВидПродукцииСтрокой");
	ВидыПродукцииСтрокойТНВЭД.Свернуть("ВидПродукцииСтрокой");
	
	Если ВидыПродукцииСтрокойТНВЭД.Количество() = 0 Тогда
		КодТНВЭД4 = Лев(ТНВЭД, 4);
		ВидыПродукцииСтрокойТНВЭД = ТаблицаТНВЭД.Скопировать(Новый Структура("КодТНВЭД4", КодТНВЭД4), "ВидПродукцииСтрокой");
		ВидыПродукцииСтрокойТНВЭД.Свернуть("ВидПродукцииСтрокой");
	КонецЕсли;
	
	ВидыПродукцииСтрокой = Новый Массив;
	
	Если ЗначениеЗаполнено(ОКПД2) Тогда
		
		Если ТаблицаОКПД2 = Неопределено Тогда
		
			МакетТНВЭД = ПолучитьМакет("ВидыПродукцииОКПД2");
			
			ПостроительЗапроса = Новый ПостроительЗапроса;
			ПостроительЗапроса.ИсточникДанных = Новый ОписаниеИсточникаДанных(МакетТНВЭД.Область());
			
			Отбор = ПостроительЗапроса.Отбор;
			ОтборТоварнаяГруппа = Отбор.Добавить("ТоварнаяГруппа");
			ОтборТоварнаяГруппа.ВидСравнения = ВидСравнения.Равно;
			ОтборТоварнаяГруппа.Использование = Истина;
			
			ОтборТоварнаяГруппа.Значение = ТоварнаяГруппаСтрокой; 
			
			ТаблицаОКПД2 = ПостроительЗапроса.Результат.Выгрузить(); // ТаблицаЗначений
			ТаблицаОКПД2.Индексы.Добавить("ОКПД2");
			
			ТаблицыПоТоварнойГруппе.ТаблицаОКПД2 = ТаблицаОКПД2;
			
		КонецЕсли;
		
		ВидыПродукцииСтрокойОКПД2 = ТаблицаОКПД2.Скопировать(Новый Структура("ОКПД2", ОКПД2), "ВидПродукцииСтрокой");
		ВидыПродукцииСтрокойОКПД2.Свернуть("ВидПродукцииСтрокой");
		
		Для Каждого ВидПродукцииСтрокой Из ВидыПродукцииСтрокойТНВЭД Цикл
			
			Если ВидыПродукцииСтрокойОКПД2.Найти(ВидПродукцииСтрокой) <> Неопределено Тогда
				ВидыПродукцииСтрокой.Добавить(ВидПродукцииСтрокой);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ВидыПродукцииСтрокой.Количество() = 0 И Не ТочноеСоотвествие Тогда
		ВидыПродукцииСтрокой = ВидыПродукцииСтрокойТНВЭД.ВыгрузитьКолонку("ВидПродукцииСтрокой");
	КонецЕсли;
	
	Результат = Новый Массив;
	
	Для Каждого ВидПродукцииСтрокой Из ВидыПродукцииСтрокой Цикл
		Результат.Добавить(Перечисления.ВидыПродукцииИС[ВидПродукцииСтрокой]);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИнициализироватьСтруктуруТаблицПоТоварнойГруппе()
	
	Возврат Новый Структура("ТаблицаТНВЭД, ТаблицаОКПД2");
	
КонецФункции

#КонецОбласти

#КонецЕсли