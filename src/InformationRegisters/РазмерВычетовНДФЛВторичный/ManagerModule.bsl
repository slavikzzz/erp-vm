#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьВторичныеДанные(КодыВычетов = Неопределено) Экспорт
	
	Набор = РегистрыСведений.РазмерВычетовНДФЛВторичный.СоздатьНаборЗаписей();
	Набор.ОбменДанными.Загрузка = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РазмерВычетовНДФЛ.Период КАК Период,
	|	РазмерВычетовНДФЛ.КодВычета КАК КодВычета,
	|	РазмерВычетовНДФЛ.Размер КАК Размер,
	|	РазмерВычетовНДФЛ.ОграничениеПоДоходам КАК ОграничениеПоДоходам
	|ИЗ
	|	РегистрСведений.РазмерВычетовНДФЛ КАК РазмерВычетовНДФЛ
	|ГДЕ
	|	&УсловиеПоКодуВычета
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодВычета,
	|	Период";
	
	Если КодыВычетов <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоКодуВычета", "РазмерВычетовНДФЛ.КодВычета В (&КодыВычетов)");
		Запрос.УстановитьПараметр("КодыВычетов", КодыВычетов);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоКодуВычета", "(ИСТИНА)");
		Набор.Записать();
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 И КодыВычетов <> Неопределено Тогда
		Для Каждого КодВычета Из КодыВычетов Цикл
			Набор.Отбор.КодВычета.Установить(КодВычета);
			Набор.Записать();
		КонецЦикла;
		Возврат;
	КонецЕсли;

	Пока Выборка.СледующийПоЗначениюПоля("КодВычета") Цикл
		
		Набор.Отбор.КодВычета.Установить(Выборка.КодВычета);
		
		Пока Выборка.Следующий() Цикл
			Если Набор.Количество() > 0 Тогда
				Набор[Набор.Количество() - 1].ДатаОкончания = Выборка.Период - 1;
			КонецЕсли;
			
			Запись = Набор.Добавить();
			Запись.ДатаНачала = Выборка.Период;
			Запись.КодВычета = Выборка.КодВычета;
			Запись.Размер = Выборка.Размер;
			Запись.ОграничениеПоДоходам = Выборка.ОграничениеПоДоходам;
		КонецЦикла;
		
		Набор[Набор.Количество() - 1].ДатаОкончания = ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата();
		Набор.Записать();
		Набор.Очистить();
		
	КонецЦикла;
	
КонецПроцедуры

// Пересчитывает зависимые данные после загрузки сообщения обмена
//
// Параметры:
//		ЗависимыеДанные - ТаблицаЗначений:
//			* ВедущиеМетаданные - ОбъектМетаданных - Метаданные ведущих данных
//			* ЗависимыеМетаданные - ОбъектМетаданных - Метаданные текущего объекта
//			* ВедущиеДанные - Массив объектов, заполненный при загрузке сообщения обмена
//				по этим объектам требуется обновить зависимые данные
//
// АПК:299-выкл - горизонтальный механизм без непосредственных вызовов
Процедура ОбновитьЗависимыеДанныеПослеЗагрузкиОбменаДанными(ЗависимыеДанные) Экспорт
	
	Если ЗависимыеДанные.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КодыВычетов = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из ЗависимыеДанные Цикл
		Для Каждого НаборЗаписей Из СтрокаТаблицы.ВедущиеДанные Цикл
			КодВычетаНабораЗаписей = НаборЗаписей.Отбор.КодВычета.Значение;
			Если Не ЗначениеЗаполнено(КодВычетаНабораЗаписей) Тогда
				ЗаполнитьВторичныеДанные();
				Возврат; // При пустом коде вычета, хотя бы в одном наборе записей 
				         // будут заполнены вторичные данные по всем кодам вычетов.
			КонецЕсли;
			КодыВычетов.Добавить(КодВычетаНабораЗаписей);
		КонецЦикла
	КонецЦикла;
	
	ЗаполнитьВторичныеДанные(КодыВычетов);
	
КонецПроцедуры
// АПК:299-вкл 

#КонецОбласти

#КонецЕсли