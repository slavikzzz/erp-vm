#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьТекущиеПодразделенияПозиций(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьДанныеВторичныеДанные();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьТекущиеПодразделенияПозиций(НаборЗаписей)
	
	Если НаборЗаписей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокПозиций", НаборЗаписей.ВыгрузитьКолонку("Позиция"));
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МестоПозиции.Позиция КАК Позиция,
		|	МестоПозиции.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ВТПодразделенияПозиций
		|ИЗ
		|	РегистрСведений.МестоПозицииШтатногоРасписанияВСтруктуреПредприятия КАК МестоПозиции
		|ГДЕ
		|	МестоПозиции.Позиция В(&СписокПозиций)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПодразделенияПозиций.Позиция КАК Позиция
		|ИЗ
		|	ВТПодразделенияПозиций КАК ПодразделенияПозиций";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ТекущиеПодразделенияПозиций", Запрос.МенеджерВременныхТаблиц);
	
КонецПроцедуры

Процедура ОбновитьДанныеВторичныеДанные()
	
	Если Не ДополнительныеСвойства.Свойство("ТекущиеПодразделенияПозиций") Тогда
		ИнтеграцияУправлениеПерсоналомСобытияРасширенный.ПриЗаписиМестаПозицииШтатногоРасписанияВСтруктуреПредприятия(Неопределено, ЭтотОбъект);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ТекущиеПодразделенияПозиций;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МестоПозиции.Позиция КАК Позиция,
		|	МестоПозиции.Подразделение КАК МестоВСтруктуреПредприятия,
		|	ПодразделенияПозиций.Подразделение КАК СтароеМестоВСтруктуреПредприятия
		|ПОМЕСТИТЬ ВТМестаВСтруктуреПредприятияПозиций
		|ИЗ
		|	РегистрСведений.МестоПозицииШтатногоРасписанияВСтруктуреПредприятия КАК МестоПозиции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПодразделенияПозиций КАК ПодразделенияПозиций
		|		ПО МестоПозиции.Позиция = ПодразделенияПозиций.Позиция
		|ГДЕ
		|	МестоПозиции.Подразделение <> ПодразделенияПозиций.Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПодразделенияПозиций.Позиция КАК Позиция
		|ИЗ
		|	ВТМестаВСтруктуреПредприятияПозиций КАК ПодразделенияПозиций";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьДанныеПодбораСотрудников(Запрос);
	ИнтеграцияУправлениеПерсоналомСобытияРасширенный.ПриЗаписиМестаПозицииШтатногоРасписанияВСтруктуреПредприятия(ДополнительныеСвойства.ТекущиеПодразделенияПозиций, Неопределено);
	
КонецПроцедуры

Процедура ОбновитьДанныеПодбораСотрудников(Запрос)
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МестаВСтруктуреПредприятияПозиций.МестоВСтруктуреПредприятия КАК МестоВСтруктуреПредприятия,
		|	ДанныеДляПодбора.ИдентификаторЗаписи КАК ИдентификаторЗаписи
		|ИЗ
		|	РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбора
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТМестаВСтруктуреПредприятияПозиций КАК МестаВСтруктуреПредприятияПозиций
		|		ПО ДанныеДляПодбора.ДолжностьПоШтатномуРасписанию = МестаВСтруктуреПредприятияПозиций.Позиция";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ДанныеДляПодбораСотрудников.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИдентификаторЗаписи.Установить(Выборка.ИдентификаторЗаписи);
		НаборЗаписей.Прочитать();
		Для Каждого Запись Из НаборЗаписей Цикл
			Запись.МестоВСтруктуреПредприятия = Выборка.МестоВСтруктуреПредприятия;
		КонецЦикла;
		НаборЗаписей.Записать();
	КонецЦикла;	

КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли