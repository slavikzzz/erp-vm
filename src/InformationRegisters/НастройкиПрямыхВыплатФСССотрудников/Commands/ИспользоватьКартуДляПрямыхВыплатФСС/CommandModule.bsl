#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(БанковскаяКарта, ПараметрыВыполненияКоманды)
	Результат = УстановитьКартуДляПрямыхВыплатФСС(БанковскаяКарта);
	Для Каждого ПараметрОповещения Из Результат.ПараметрыОповещений Цикл
		Оповестить("Запись_НастройкиПрямыхВыплатФСССотрудников", ПараметрОповещения, ПараметрыВыполненияКоманды.Источник);
	КонецЦикла;
	Если Результат.Успех Тогда
		ПоказатьОповещениеПользователя(Результат.Кратко, , Результат.Подробно, БиблиотекаКартинок.Успешно32);
	Иначе
		ИнформированиеПользователяКлиент.Предупредить(Результат.Кратко, Результат.Подробно);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция УстановитьКартуДляПрямыхВыплатФСС(БанковскаяКарта)
	Результат = Новый Структура("Успех, Кратко, Подробно, ПараметрыОповещений");
	Результат.ПараметрыОповещений = Новый Массив;
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(БанковскаяКарта,
		"Владелец, ЭтоНациональныйПлатежныйИнструмент, ВАрхиве");
	ФизическоеЛицо = ЗначенияРеквизитов.Владелец;
	Если ТипЗнч(ФизическоеЛицо) <> Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Результат.Успех = Ложь;
		Результат.Кратко = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 (%2) не является физическим лицом.';
				|en = '%1 (%2) is not an individual.'"),
			ФизическоеЛицо,
			ТипЗнч(ФизическоеЛицо));
		Результат.Подробно = Результат.Кратко
			+ Символы.ПС
			+ НСтр("ru = 'Способы прямых выплат настраиваются для физических лиц.';
					|en = 'Direct payment methods are configured for individuals.'");
		Возврат Результат;
	КонецЕсли;
	Если Не ЗначенияРеквизитов.ЭтоНациональныйПлатежныйИнструмент Тогда
		Результат.Успех = Ложь;
		Результат.Кратко = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Карта %1 не является картой МИР (национальным платежным инструментом).';
				|en = 'The %1 card is not a MIR card (national payment instrument).'"),
			БанковскаяКарта);
		Возврат Результат;
	КонецЕсли;
	Если ЗначенияРеквизитов.ВАрхиве Тогда
		Результат.Успех = Ложь;
		Результат.Кратко = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Карта %1 в архиве.';
				|en = 'The %1 card is archived.'"),
			БанковскаяКарта);
		Возврат Результат;
	КонецЕсли;
	
	МенеджерРегистра = РегистрыСведений.НастройкиПрямыхВыплатФСССотрудников;
	
	МенеджерЗаписи = МенеджерРегистра.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ФизическоеЛицо = ФизическоеЛицо;
	МенеджерЗаписи.ОпределятьПоОрганизации = Ложь;
	МенеджерЗаписи.ОпределятьПоОсновномуМестуРаботы = Ложь;
	МенеджерЗаписи.Значение = БанковскаяКарта;
	
	ГоловныеОрганизации = ГоловныеОрганизацииФизическогоЛица(ФизическоеЛицо);
	КоличествоОрганизаций = ГоловныеОрганизации.Количество();
	Если КоличествоОрганизаций = 0 Тогда
		Результат.Успех = Ложь;
		Результат.Кратко = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Сотрудник ""%1"" не принят на работу.';
				|en = 'Employee %1 is not hired.'"),
			ФизическоеЛицо);
		Возврат Результат;
	КонецЕсли;
	
	Успешные = Новый Массив;
	Ошибочные = Новый Массив;
	
	Для Каждого ГоловнаяОрганизация Из ГоловныеОрганизации Цикл
		МенеджерЗаписи.ГоловнаяОрганизация = ГоловнаяОрганизация;
		Если МенеджерРегистра.ЗаписатьМенеджерЗаписи(МенеджерЗаписи) Тогда
			Успешные.Добавить(ГоловнаяОрганизация);
			ПараметрОповещения = Новый Структура("ФизическоеЛицо, ГоловнаяОрганизация");
			ЗаполнитьЗначенияСвойств(ПараметрОповещения, МенеджерЗаписи);
			Результат.ПараметрыОповещений.Добавить(ПараметрОповещения);
		Иначе
			Ошибочные.Добавить(ГоловнаяОрганизация);
		КонецЕсли;
	КонецЦикла;
	
	Если Ошибочные.Количество() = 0 Тогда
		// Всплывающее оповещение.
		Результат.Успех = Истина;
		Результат.Кратко = Строка(ФизическоеЛицо) + ", " + КраткоеПредставлениеОрганизацийВИменительномПадеже(Успешные);
		Результат.Подробно = НСтр("ru = 'Установлен способ прямых выплат ФСС ""На карту МИР""';
									|en = 'The SSF direct payments method ""To MIR card"" has been set'");
	Иначе
		// Предупреждение.
		Результат.Успех = Ложь;
		Если Успешные.Количество() = 0 Тогда
			Результат.Кратко = НСтр("ru = 'Не удалось установить способ прямых выплат ФСС ""На карту МИР""';
									|en = 'Cannot set SSF direct payments method ""To MIR card""'");
			Результат.Подробно = Результат.Кратко
				+ " "
				+ НСтр("ru = 'для';
						|en = 'for'")
				+ " "
				+ КраткоеПредставлениеОрганизацийВРодительномПадеже(Ошибочные)
				+ ":"
				+ Символы.ПС
				+ СтрСоединить(Ошибочные, Символы.ПС);
		Иначе
			Результат.Кратко = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Способ прямых выплат ФСС ""На карту МИР"" установлен для %1 в %2.
					|Не удалось изменить способ прямых выплат в %3.';
					|en = 'The SSF direct payments method ""To MIR card"" is set for %1 in %2.
					|Cannot change direct payments method in %3.'"),
				Строка(ФизическоеЛицо),
				КраткоеПредставлениеОрганизацийВПредложномПадеже(Успешные),
				КраткоеПредставлениеОрганизацийВПредложномПадеже(Ошибочные));
			Результат.Кратко = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1: Способ прямых выплат ФСС ""На карту МИР"" успешно установлен в организациях:
					|	%2
					|Не удалось изменить способ прямых выплат в организациях:
					|	%3.';
					|en = '%1: The SSF direct payments method ""To MIR card"" has been successfully set for companies:
					|	%2
					|Cannot change direct payments method for companies:
					|	%3.'"),
				Строка(ФизическоеЛицо),
				СтрСоединить(Успешные, Символы.ПС + Символы.Таб),
				СтрСоединить(Ошибочные, Символы.ПС + Символы.Таб));
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаСервере
Функция КраткоеПредставлениеОрганизацийВПредложномПадеже(МассивОрганизаций)
	Количество = МассивОрганизаций.Количество();
	Если Количество = 1 Тогда
		Возврат МассивОрганизаций[0];
	Иначе
		Возврат СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
			НСтр("ru = ';%1 организации;;%1 организациях;%1 организациях;';
				|en = ';%1 company;;%1 companies;%1 companies;'"),
			Количество);
	КонецЕсли;
КонецФункции

&НаСервере
Функция КраткоеПредставлениеОрганизацийВРодительномПадеже(МассивОрганизаций)
	Количество = МассивОрганизаций.Количество();
	Если Количество = 1 Тогда
		Возврат МассивОрганизаций[0];
	Иначе
		Возврат СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
			НСтр("ru = ';%1 организации;;%1 организаций;%1 организаций;';
				|en = ';%1 company;;%1 companies;%1 companies;'"),
			Количество);
	КонецЕсли;
КонецФункции

&НаСервере
Функция КраткоеПредставлениеОрганизацийВИменительномПадеже(МассивОрганизаций)
	Количество = МассивОрганизаций.Количество();
	Если Количество = 1 Тогда
		Возврат МассивОрганизаций[0];
	Иначе
		Возврат СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
			НСтр("ru = ';%1 организация;;%1 организации;%1 организаций;';
				|en = ';%1 company;;%1 companies;%1 companies;'"),
			Количество);
	КонецЕсли;
КонецФункции

&НаСервере
Функция ГоловныеОрганизацииФизическогоЛица(ФизическоеЛицо)
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Таблица.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ИЗ
	|	РегистрСведений.КадроваяИсторияСотрудниковИнтервальный КАК Таблица
	|ГДЕ
	|	Таблица.ФизическоеЛицо = &ФизическоеЛицо
	|	И Таблица.ДатаОкончания >= &МинимальнаяДатаОкончания";
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	Запрос.УстановитьПараметр("МинимальнаяДатаОкончания", НачалоМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(), -6)));
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ГоловнаяОрганизация");
КонецФункции

#КонецОбласти
