
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ОтражениеДокументовВРеглУчете" Тогда
		Элементы.Список.Обновить();	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаСписка = Элементы.Список.ТекущиеДанные;
	Если СтрокаСписка <> Неопределено Тогда
	
		СтруктураПараметры = Новый Структура("Регистратор, Организация",
			СтрокаСписка.Регистратор,
			СтрокаСписка.Организация);
		ОткрытьФорму("РегистрСведений.ОтражениеДокументовВРеглУчете.Форма.ФормаРедактированияЗаписи", СтруктураПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьСтатусКОтражению(Команда)
	
	ВыделенныеСтроки = ОбщегоНазначенияУТКлиент.ПроверитьПолучитьВыделенныеВСпискеСсылки(Элементы.Список);
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыделенныеСтроки.Количество() > 1 Тогда
		ТекстВопроса = НСтр("ru = 'У выделенных в списке документов будет установлен статус ""К отражению в регл. учете"". Продолжить?';
							|en = 'Documents selected in the list will have the ""For recording in local accounting"" status. Continue?'");
		Ответ = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("УстановитьСтатусКОтражениюЗавершение", ЭтотОбъект, Новый Структура("ВыделенныеСтроки", ВыделенныеСтроки)), ТекстВопроса,РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	
	УстановитьСтатусКОтражениюФрагмент(ВыделенныеСтроки);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусКОтражениюЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки;
	
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьСтатусКОтражениюФрагмент(ВыделенныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусКОтражениюФрагмент(Знач ВыделенныеСтроки)
	
	Перем КоличествоОбработанных;
	
	КоличествоОбработанных = ВернутьДокументыКОтражению(ВыделенныеСтроки);
	
	ОбщегоНазначенияУТКлиент.ОповеститьПользователяОбУстановкеСтатуса(Элементы.Список, КоличествоОбработанных, ВыделенныеСтроки.Количество(), НСтр("ru = 'К отражению в регл. учете';
																																					|en = 'For recording in local accounting'"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Функция ВернутьДокументыКОтражению(Знач МассивСтрок)
	
	КоличествоОбработанных = 0;
	
	ТаблицаОтражениеДокументов = Новый ТаблицаЗначений;
	ПолеРегистратора = Список.КомпоновщикНастроек.Настройки.ДоступныеПоляВыбора.НайтиПоле(Новый ПолеКомпоновкиДанных("Регистратор"));
	ТаблицаОтражениеДокументов.Колонки.Добавить("Документ", ПолеРегистратора.Тип);
	ТаблицаОтражениеДокументов.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаОтражениеДокументов.Колонки.Добавить("ДатаОтражения", Новый ОписаниеТипов("Дата"));
	
	Для Каждого СтрокаСписка Из МассивСтрок Цикл
		СтрокаОтражения = ТаблицаОтражениеДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаОтражения, СтрокаСписка);
		СтрокаОтражения.Документ = СтрокаСписка.Регистратор;
	КонецЦикла;
	
	РеглУчетСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументов, КоличествоОбработанных);
	
	Возврат КоличествоОбработанных;
	
КонецФункции

#КонецОбласти

#КонецОбласти
