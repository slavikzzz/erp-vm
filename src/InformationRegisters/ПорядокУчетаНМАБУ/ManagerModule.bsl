
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.ПорядокУчетаНМАБУ.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.15.29";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("e6b0c3d6-5441-4a70-bf31-ff8d2dc640cf");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ПорядокУчетаНМАБУ.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Порядок = Перечисления.ПорядокОбработчиковОбновления.Обычный;
	Если ПолучитьФункциональнуюОпцию("ЛокализацияРФ") Тогда
		Обработчик.Комментарий = НСтр("ru = 'Обновляет регистр ""Порядок учета НМА (БУ)"":
		|- заполняет новые ресурсы ""Состояние (НУ)"", ""Налогообложение""';
		|en = 'Updates the ""IA accounting procedure (LA)"" register:
		|- Fills the new resources: ""State (TA)"", ""Taxation""'");
	Иначе
		Обработчик.Комментарий = НСтр("ru = 'Обновляет регистр ""Порядок учета НМА (БУ)"":
		|- заполняет регистр по данным упр. учета';
		|en = 'Updates the ""IA accounting procedure (LA)"" register:
		|- Fills the register based on management accounting data'");
	КонецЕсли;
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ИзменениеПараметровНМА2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПеремещениеНМА2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПодготовкаКПередачеНМА2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПринятиеКУчетуНМА2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СписаниеНМА2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыСведений.ПорядокУчетаНМАБУ.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.ПорядокУчетаНМАБУ.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыСведений.ПорядокУчетаНМАБУ.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "РегистрСведений.ПорядокУчетаНМАБУ";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКОбновлению.Регистратор
	|ИЗ
	|	(ВЫБРАТЬ
	|		РегистрИсточник.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАУУ КАК РегистрИсточник
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК РегистрПриемник
	|			ПО РегистрПриемник.Регистратор = РегистрИсточник.Регистратор
	|	ГДЕ
	|		РегистрПриемник.Регистратор ЕСТЬ NULL
	|		И &ЭтоМеждународнаяВерсия
	|		И НЕ &РеглУчетВНАВедетсяНезависимо
	|		И НЕ РегистрИсточник.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|
	//++ Локализация
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		РегистрИсточник.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАБУ КАК РегистрИсточник
	|	ГДЕ
	|		НЕ &ЭтоМеждународнаяВерсия
	|		И РегистрИсточник.СостояниеНУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПустаяСсылка)
	|		И РегистрИсточник.СостояниеБУ В (
	|			ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету),
	|			ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан))
	|		И НЕ РегистрИсточник.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|
	|		И ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Документ.ПринятиеКУчетуНМА2_4 КАК ДанныеДокумента
	|			ГДЕ
	|				ДанныеДокумента.Проведен
	|				И ДанныеДокумента.НематериальныйАктив = РегистрИсточник.НематериальныйАктив
	|				И (ДанныеДокумента.ОтражатьВРеглУчете
	|						И НЕ ДанныеДокумента.ОтражатьВБУ
	|						И НЕ ДанныеДокумента.ОтражатьВНУ
	|					ИЛИ ДанныеДокумента.ОтражатьВНУ)
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Документ.ПринятиеКУчетуНМА КАК ДанныеДокумента
	|			ГДЕ
	|				ДанныеДокумента.Проведен
	|				И ДанныеДокумента.НематериальныйАктив = РегистрИсточник.НематериальныйАктив
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ДанныеДокумента
	|			ГДЕ
	|				ДанныеДокумента.Ссылка.Проведен
	|				И ДанныеДокумента.НематериальныйАктив = РегистрИсточник.НематериальныйАктив
	|				И (ДанныеДокумента.Ссылка.ОтражатьВРеглУчете
	|						И НЕ ДанныеДокумента.Ссылка.ОтражатьВБУ
	|						И НЕ ДанныеДокумента.Ссылка.ОтражатьВНУ
	|					ИЛИ ДанныеДокумента.Ссылка.ОтражатьВНУ)
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Документ.ВводОстатковВнеоборотныхАктивов.НМА КАК ДанныеДокумента
	|			ГДЕ
	|				ДанныеДокумента.Ссылка.Проведен
	|				И ДанныеДокумента.НематериальныйАктив = РегистрИсточник.НематериальныйАктив
	|				)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		РегистрИсточник.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАБУ КАК РегистрИсточник
	|	ГДЕ
	|		НЕ &ЭтоМеждународнаяВерсия
	|		И РегистрИсточник.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|
	|		И (РегистрИсточник.Регистратор ССЫЛКА Документ.ПеремещениеНМА2_4
	|			ИЛИ РегистрИсточник.Регистратор ССЫЛКА Документ.ИзменениеПараметровНМА2_4
	|			ИЛИ РегистрИсточник.Регистратор ССЫЛКА Документ.ИзменениеПараметровНМА
	|			ИЛИ РегистрИсточник.Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА2_4
	|			ИЛИ РегистрИсточник.Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА)
	|
	|		И ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Документ.ПринятиеКУчетуНМА2_4 КАК ДанныеДокумента
	|			ГДЕ
	|				ДанныеДокумента.Проведен
	|				И ДанныеДокумента.НематериальныйАктив = РегистрИсточник.НематериальныйАктив
	|				И ВЫБОР
	|					КОГДА ДанныеДокумента.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					ИНАЧЕ ДанныеДокумента.НалогообложениеНДС
	|					КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Документ.ПринятиеКУчетуНМА КАК ДанныеДокумента
	|			ГДЕ
	|				ДанныеДокумента.Проведен
	|				И ДанныеДокумента.НематериальныйАктив = РегистрИсточник.НематериальныйАктив
	|				И ВЫБОР
	|					КОГДА ДанныеДокумента.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					ИНАЧЕ ДанныеДокумента.НалогообложениеНДС
	|					КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|
	|		)
	|		
	//-- Локализация
	|
	|	) КАК ДанныеКОбновлению";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ЭтоМеждународнаяВерсия", НЕ ПолучитьФункциональнуюОпцию("ЛокализацияРФ"));
	Запрос.УстановитьПараметр("РеглУчетВНАВедетсяНезависимо", НастройкиНалоговУчетныхПолитикПовтИсп.РеглУчетВНАВедетсяНезависимо());

	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"РегистрСведений.ПорядокУчетаНМАБУ.ОбработатьДанныеДляПереходаНаНовуюВерсию");

	ОбъектовОбработано = ВнеоборотныеАктивы.СформироватьДвиженияПриОбновленииИБ("ПорядокУчетаНМАБУ", Параметры);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, ОбъектовОбработано);	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
