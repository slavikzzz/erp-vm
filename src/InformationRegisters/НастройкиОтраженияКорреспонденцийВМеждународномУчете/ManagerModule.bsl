#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныйПрограммныйИнтерфейс

Функция ПараметрыПолученияДанныхНастройки() Экспорт
	
	ПараметрыПолучения = Новый Структура();
	
	РегистрМетаданные = СоздатьНаборЗаписей().Метаданные();
	
	Для Каждого Измерение Из РегистрМетаданные.Измерения Цикл
		Если НЕ Измерение.Имя = "ПорядокПрименения" Тогда
			ПараметрыПолучения.Вставить(Измерение.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПараметрыПолучения;
	
КонецФункции

Функция КоличествоНастроекКорренспонденции(ПараметрыПолученияДанных) Экспорт
	
	КоличествоНастроек = 0;
	
	Если Не ЗначениеЗаполнено(ПараметрыПолученияДанных.ПланСчетов) 
		Или Не ЗначениеЗаполнено(ПараметрыПолученияДанных.НастройкаФормированияПроводок)
		Или Не ЗначениеЗаполнено(ПараметрыПолученияДанных.ОбъектУчетаДт) 
		Или Не ЗначениеЗаполнено(ПараметрыПолученияДанных.ОбъектУчетаКт) Тогда
		Возврат КоличествоНастроек;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(1) КАК Количество
	|ИЗ
	|	РегистрСведений.НастройкиОтраженияКорреспонденцийВМеждународномУчете КАК НастройкиОтражения
	|ГДЕ
	|	НастройкиОтражения.ПланСчетов = &ПланСчетов
	|	И НастройкиОтражения.НастройкаФормированияПроводок = &НастройкаФормированияПроводок
	|	И НастройкиОтражения.ОбъектУчетаДт = &ОбъектУчетаДт
	|	И НастройкиОтражения.ОбъектУчетаКт = &ОбъектУчетаКт
	|	И НастройкиОтражения.ДолгосрочныйДт = &ДолгосрочныйДт
	|	И НастройкиОтражения.ДолгосрочныйКт = &ДолгосрочныйКт
	|";
	Запрос.УстановитьПараметр("ПланСчетов", ПараметрыПолученияДанных.ПланСчетов);
	Запрос.УстановитьПараметр("НастройкаФормированияПроводок", ПараметрыПолученияДанных.НастройкаФормированияПроводок);
	Запрос.УстановитьПараметр("ОбъектУчетаДт", ПараметрыПолученияДанных.ОбъектУчетаДт);
	Запрос.УстановитьПараметр("ОбъектУчетаКт", ПараметрыПолученияДанных.ОбъектУчетаКт);
	Запрос.УстановитьПараметр("ДолгосрочныйДт", ПараметрыПолученияДанных.ДолгосрочныйДт);
	Запрос.УстановитьПараметр("ДолгосрочныйКт", ПараметрыПолученияДанных.ДолгосрочныйКт);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КоличествоНастроек = Выборка.Количество;
	КонецЕсли;
	
	Возврат КоличествоНастроек;
	
КонецФункции

Функция ПорядокПримененияНастройки(ПараметрыПолученияДанных) Экспорт
	
	ПорядокПрименения = 0;
	
	Если Не ЗначениеЗаполнено(ПараметрыПолученияДанных.ПланСчетов) 
		Или Не ЗначениеЗаполнено(ПараметрыПолученияДанных.НастройкаФормированияПроводок)
		Или Не ЗначениеЗаполнено(ПараметрыПолученияДанных.ОбъектУчетаДт) 
		Или Не ЗначениеЗаполнено(ПараметрыПолученияДанных.ОбъектУчетаКт) Тогда
		Возврат ПорядокПрименения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиОтражения.ПорядокПрименения КАК ПорядокПрименения
	|ИЗ
	|	РегистрСведений.НастройкиОтраженияКорреспонденцийВМеждународномУчете КАК НастройкиОтражения
	|ГДЕ
	|	НастройкиОтражения.ПланСчетов = &ПланСчетов
	|	И НастройкиОтражения.НастройкаФормированияПроводок = &НастройкаФормированияПроводок
	|	И НастройкиОтражения.ОбъектУчетаДт = &ОбъектУчетаДт
	|	И НастройкиОтражения.ОбъектУчетаКт = &ОбъектУчетаКт
	|	И НастройкиОтражения.ДолгосрочныйДт = &ДолгосрочныйДт
	|	И НастройкиОтражения.ДолгосрочныйКт = &ДолгосрочныйКт
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НастройкиОтражения.ПорядокПрименения УБЫВ";
	Запрос.УстановитьПараметр("ПланСчетов", ПараметрыПолученияДанных.ПланСчетов);
	Запрос.УстановитьПараметр("НастройкаФормированияПроводок", ПараметрыПолученияДанных.НастройкаФормированияПроводок);
	Запрос.УстановитьПараметр("ОбъектУчетаДт", ПараметрыПолученияДанных.ОбъектУчетаДт);
	Запрос.УстановитьПараметр("ОбъектУчетаКт", ПараметрыПолученияДанных.ОбъектУчетаКт);
	Запрос.УстановитьПараметр("ДолгосрочныйДт", ПараметрыПолученияДанных.ДолгосрочныйДт);
	Запрос.УстановитьПараметр("ДолгосрочныйКт", ПараметрыПолученияДанных.ДолгосрочныйКт);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПорядокПрименения = Выборка.ПорядокПрименения;
	КонецЕсли;
	
	ПорядокПрименения = ПорядокПрименения + 1;
	
	Возврат ПорядокПрименения;
	
КонецФункции

// Изменяет порядок применения настройки на некоторое число позиций
// 
// Параметры:
// 	КлючЗаписи - РегистрСведенийКлючЗаписи.НастройкиОтраженияКорреспонденцийВМеждународномУчете - Исходный ключ записи настройки
// 	Сдвиг - Число - Число позиций, на которые необходимо изменить порядок применения настройки
//
// Возвращаемое значение:
// 	РегистрСведенийКлючЗаписи.НастройкиОтраженияКорреспонденцийВМеждународномУчете - Ключ записи настроки после изменения порядка применения.
Функция ИзменитьПорядокПримененияНастройки(КлючЗаписи, Сдвиг) Экспорт
	
	НачатьТранзакцию();
	
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных();
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.НастройкиОтраженияКорреспонденцийВМеждународномУчете");
		ЭлементБлокировкиДанных.УстановитьЗначение("ПланСчетов", КлючЗаписи.ПланСчетов);
		ЭлементБлокировкиДанных.УстановитьЗначение("НастройкаФормированияПроводок", КлючЗаписи.НастройкаФормированияПроводок);
		ЭлементБлокировкиДанных.УстановитьЗначение("ОбъектУчетаДт", КлючЗаписи.ОбъектУчетаДт);
		ЭлементБлокировкиДанных.УстановитьЗначение("ОбъектУчетаКт", КлючЗаписи.ОбъектУчетаКт);
		ЭлементБлокировкиДанных.УстановитьЗначение("ДолгосрочныйДт", КлючЗаписи.ДолгосрочныйДт);
		ЭлементБлокировкиДанных.УстановитьЗначение("ДолгосрочныйКт", КлючЗаписи.ДолгосрочныйКт);
		ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
		БлокировкаДанных.Заблокировать();
		
		ТекущийПорядокПрименения = КлючЗаписи.ПорядокПрименения;
		
		НаборЗаписей = РегистрыСведений.НастройкиОтраженияКорреспонденцийВМеждународномУчете.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ПланСчетов.Установить(КлючЗаписи.ПланСчетов);
		НаборЗаписей.Отбор.НастройкаФормированияПроводок.Установить(КлючЗаписи.НастройкаФормированияПроводок);
		НаборЗаписей.Отбор.ОбъектУчетаДт.Установить(КлючЗаписи.ОбъектУчетаДт);
		НаборЗаписей.Отбор.ОбъектУчетаКт.Установить(КлючЗаписи.ОбъектУчетаКт);
		НаборЗаписей.Отбор.ДолгосрочныйДт.Установить(КлючЗаписи.ДолгосрочныйДт);
		НаборЗаписей.Отбор.ДолгосрочныйКт.Установить(КлючЗаписи.ДолгосрочныйКт);
		
		НаборЗаписей.Прочитать();
		
		НовыйПорядокПрименения = ТекущийПорядокПрименения + Сдвиг;
		
		Если НовыйПорядокПрименения < 1 Или НовыйПорядокПрименения > НаборЗаписей.Количество() Тогда
			ОтменитьТранзакцию();
			Возврат КлючЗаписи;
		КонецЕсли;
		
		ТаблицаЗаписей = НаборЗаписей.Выгрузить();
		
		Запись = ТаблицаЗаписей[ТекущийПорядокПрименения - 1];
		ТаблицаЗаписей.Сдвинуть(Запись, Сдвиг);
		
		ПорядокПрименения = 1;
		Для каждого СтрокаТаблицы Из ТаблицаЗаписей Цикл
			СтрокаТаблицы.ПорядокПрименения = ПорядокПрименения;
			ПорядокПрименения = ПорядокПрименения + 1;
		КонецЦикла;
	
		ЗначенияКлюча = Новый Структура;
		Для каждого Измерение Из Метаданные.РегистрыСведений.НастройкиОтраженияКорреспонденцийВМеждународномУчете.Измерения Цикл
			ЗначенияКлюча.Вставить(Измерение.Имя);
		КонецЦикла;
		ЗаполнитьЗначенияСвойств(ЗначенияКлюча, Запись);
		НовыйКлючЗаписи = СоздатьКлючЗаписи(ЗначенияКлюча);
		
		НаборЗаписей.Загрузить(ТаблицаЗаписей);
		НаборЗаписей.Записать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Не удалось изменить порядок применения записи по причине: %1';
										|en = 'Cannot change the record application procedure due to: %1'"),  ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Возврат НовыйКлючЗаписи;
	
КонецФункции

#КонецОбласти
	
#КонецЕсли