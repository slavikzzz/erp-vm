#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет задания к свертке сторно записей в регистрах графика производства
// 
// Параметры:
// 	Движения - ТаблицаЗначений - задания к расчету.
// 	ИмяПоля - Строка - имя поля в котором записывается идентификатор набора.
//
Процедура ДобавитьЗадания(Движения, ИмяПоля) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	НаборЗаписей = РегистрыСведений.ЗаданияКСверткеСторноЗаписейВГрафикеПроизводства.СоздатьНаборЗаписей();
	
	Задания = НаборЗаписей.ВыгрузитьКолонки("ИдентификаторНабора");
	
	ПредКлюч = Неопределено;
	
	Для каждого Строка Из Движения Цикл
		
		Если Не Строка.ДополнительнаяЗапись Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка[ИмяПоля] = ПредКлюч Тогда
			Продолжить;
		КонецЕсли;
		
		Задания.Добавить().ИдентификаторНабора = Строка[ИмяПоля];
		
		ПредКлюч = Строка[ИмяПоля];
		
	КонецЦикла;
	
	Если Задания.Количество() > 0 Тогда
		
		Задания.Свернуть("ИдентификаторНабора");
		
		СтруктураЗаказа.ЗаполнитьИЗаписатьНаборЗаписей(
			НаборЗаписей,
			Задания,
			Ложь,
			Истина);
			
	КонецЕсли;
	
КонецПроцедуры

// Удаляет отработанные задания к свертке сторно записей в регистрах графика производства по разделителю
// 
// Параметры:
// 	Разделитель - УникальныйИдентификатор - разделитель записи.
//
Процедура УдалитьЗадания(Разделитель) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	НаборЗаписей = РегистрыСведений.ЗаданияКСверткеСторноЗаписейВГрафикеПроизводства.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Разделитель.Установить(Разделитель);
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли