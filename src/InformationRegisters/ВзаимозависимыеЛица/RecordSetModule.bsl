#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

КонецПроцедуры

// В обработчике события ОбработкаЗаполнения выполняется:
// - Окончание работы процедуры если в программе используется несколько организаций
// - Окончание работы процедуры если ДанныеЗаполнения не являются структурой
// - Добавление в данные заполнения организации по умолчанию.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если Справочники.Организации.ИспользуетсяНесколькоОрганизаций() Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеЗаполнения = Неопределено Тогда
		ДанныеЗаполнения = Новый Структура;
	ИначеЕсли Не ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДанныеЗаполнения.Свойство("Организация") Тогда
		ДанныеЗаполнения.Вставить("Организация", Справочники.Организации.ПолучитьОрганизациюПоУмолчанию());
	КонецЕсли;
	
КонецПроцедуры

// В обработчике ОбработкаПроверкиЗаполнения выполняется:
// - Формирование структуры, содержащей измерения регистра сведений
// - формирование строки, в которой представлены измерения регистра сведений через запятую
// - Проверка правильности заполнения контрагента регистра см. КонтролируемыеСделки.ПроверитьПравильностьЗаполненияКонтрагентаРегистра.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	СтрокаПолейКлюча = "";
	ОписаниеКлючаЗаписи = Новый Структура;
	Для Каждого Измерение Из ЭтотОбъект.Метаданные().Измерения Цикл
		ОписаниеКлючаЗаписи.Вставить(Измерение.Имя);
		СтрокаПолейКлюча = СтрокаПолейКлюча + ?(СтрокаПолейКлюча = "","", ", ")+ Измерение.Имя;
	КонецЦикла;
	
	КонтролируемыеСделки.ПроверитьПравильностьЗаполненияКонтрагентаРегистра(Отказ, ЭтотОбъект.Выгрузить(, СтрокаПолейКлюча), ОписаниеКлючаЗаписи);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли