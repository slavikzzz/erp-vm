#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
  	Если Параметры.Свойство("АвтоТест") Тогда
   		Возврат;
  	КонецЕсли;
	
	Если Не Параметры.Свойство("Организация", ЗаполняемаяОрганизация) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ЭтаФорма.Заголовок = ЗаголовокФормы(ЗаполняемаяОрганизация, Организация);
	Элементы.Организация.СписокВыбора.ЗагрузитьЗначения(КонтролируемыеСделки.СписокОрганизацийИсключаяУказанную(ЗаполняемаяОрганизация));
	ЗаполнитьТаблицуВзаимозависимыхЛицОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ИзменениеОрганизацииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	МассивКонтрагентов = Новый Массив;
	МассивОрганизаций = Новый Массив;
	
	Для каждого ЗаполняемыеДанные Из ТаблицаВзаимозависимыхЛицОрганизации Цикл
		
		Если Не ЗаполняемыеДанные.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Если МассивКонтрагентов.Найти(ЗаполняемыеДанные.Контрагент) = Неопределено Тогда
			МассивКонтрагентов.Добавить(ЗаполняемыеДанные.Контрагент);
		КонецЕсли;
		Если МассивОрганизаций.Найти(ЗаполняемыеДанные.Организация) = Неопределено Тогда
			МассивОрганизаций.Добавить(ЗаполняемыеДанные.Организация);
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьДанные(МассивОрганизаций, МассивКонтрагентов, ЗаполняемаяОрганизация);
	Оповестить("ВзаимозависимыеЛица_Записан");
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	ЗаполнитьОтметки(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	ЗаполнитьОтметки(Истина);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИзменениеОрганизацииНаСервере()
	ЭтаФорма.Заголовок = ЗаголовокФормы(ЗаполняемаяОрганизация, Организация);
	Элементы.ТаблицаВзаимозависимыхЛицОрганизацииОрганизация.Видимость = Не ЗначениеЗаполнено(Организация);
	ЗаполнитьТаблицуВзаимозависимыхЛицОрганизации();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЗаголовокФормы(ОрганизацияЗаполняемая, ОрганизацияИсточник)
	
	Если ЗначениеЗаполнено(ОрганизацияИсточник) Тогда
		Заголовок = НСтр("ru = 'Заполнение организации ""%ОрганизацияПриемник%"" данными по взаимозависимым лицам организации ""%ОрганизацияИсточник%""';
						|en = 'Fill in the ""%ОрганизацияПриемник%"" company by data on interdependent persons of the ""%ОрганизацияИсточник%"" company'");
		Заголовок = СтрЗаменить(Заголовок, "%ОрганизацияИсточник%", ОрганизацияИсточник);
	Иначе
		Заголовок = НСтр("ru = 'Заполнение организации ""%ОрганизацияПриемник%"" данными по взаимозависимым лицам организаций';
						|en = 'Populate the ""%ОрганизацияПриемник%"" company with the data on company interdependent persons '");
	КонецЕсли;
	Заголовок = СтрЗаменить(Заголовок, "%ОрганизацияПриемник%", ОрганизацияЗаполняемая);
	
	Возврат Заголовок;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуВзаимозависимыхЛицОрганизации()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВзаимозависимыеЛицаСрезПоследних.Организация,
	                      |	ВзаимозависимыеЛицаСрезПоследних.Контрагент,
	                      |	ВзаимозависимыеЛицаСрезПоследних.ТипВзаимозависимости,
	                      |	ЛОЖЬ КАК Использование
	                      |ИЗ
	                      |	РегистрСведений.ВзаимозависимыеЛица.СрезПоследних(
	                      |			&Период,
	                      |			ВЫБОР
	                      |				КОГДА &ОрганизацияДляОтбора = Значение(Справочник.Организации.ПустаяСсылка)
	                      |					ТОГДА НЕ Организация = &ИсключающаясяОрганизация
	                      |				ИНАЧЕ Организация = &ОрганизацияДляОтбора
	                      |			КОНЕЦ) КАК ВзаимозависимыеЛицаСрезПоследних");
	Запрос.УстановитьПараметр("ИсключающаясяОрганизация", ЗаполняемаяОрганизация);
	Запрос.УстановитьПараметр("ОрганизацияДляОтбора", Организация);
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	ТаблицаВзаимозависимыхЛицОрганизации.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОтметки(ЗначениеОтметки)
	
	ТаблицаЗаполняемыхЗначений = ТаблицаВзаимозависимыхЛицОрганизации.Выгрузить();
	ТаблицаЗаполняемыхЗначений.ЗаполнитьЗначения(ЗначениеОтметки, "Использование");
	ТаблицаВзаимозависимыхЛицОрганизации.Загрузить(ТаблицаЗаполняемыхЗначений);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьДанные(МассивОрганизаций, МассивКонтрагентов, Организация)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВзаимозависимыеЛицаСрезПоследних.Период,
	                      |	ВзаимозависимыеЛицаСрезПоследних.Контрагент,
	                      |	ВзаимозависимыеЛицаСрезПоследних.ТипВзаимозависимости,
	                      |	&НоваяОрганизация КАК Организация
	                      |ИЗ
	                      |	РегистрСведений.ВзаимозависимыеЛица.СрезПоследних(
	                      |			&Период,
	                      |			Организация В (&Организации)
	                      |				И Контрагент В (&Контрагенты)) КАК ВзаимозависимыеЛицаСрезПоследних
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	ВзаимозависимыеЛицаСрезПоследних.Период,
	                      |	ВзаимозависимыеЛицаСрезПоследних.Контрагент,
	                      |	ВзаимозависимыеЛицаСрезПоследних.ТипВзаимозависимости,
	                      |	&НоваяОрганизация
	                      |ИЗ
	                      |	РегистрСведений.ВзаимозависимыеЛица.СрезПоследних(
	                      |			&Период,
	                      |			Организация = &НоваяОрганизация
	                      |				И НЕ Контрагент В (&Контрагенты)) КАК ВзаимозависимыеЛицаСрезПоследних");
	Запрос.УстановитьПараметр("Контрагенты", МассивКонтрагентов);
	Запрос.УстановитьПараметр("Организации", МассивОрганизаций);
	Запрос.УстановитьПараметр("НоваяОрганизация", Организация);
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	
	НовыйНаборЗаписей = РегистрыСведений.ВзаимозависимыеЛица.СоздатьНаборЗаписей();
	
	НовыйНаборЗаписей.Отбор.Организация.Установить(Организация);
	
	НовыйНаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
	
	НовыйНаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти