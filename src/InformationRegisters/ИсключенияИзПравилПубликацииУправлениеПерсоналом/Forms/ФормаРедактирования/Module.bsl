
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Приложение = Параметры.Приложение;
	Если Не ЗначениеЗаполнено(Приложение) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ФизическоеЛицо = Параметры.ФизическоеЛицо;
	ФизическоеЛицоПрежнее = Параметры.ФизическоеЛицо;
	Если ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсключенияИзПравил.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ИсключенияИзПравил.Публикуется КАК Публикуется,
		|	ИсключенияИзПравил.ЭтоОтветственный КАК ЭтоОтветственный
		|ИЗ
		|	РегистрСведений.ИсключенияИзПравилПубликацииУправлениеПерсоналом КАК ИсключенияИзПравил
		|ГДЕ
		|	ИсключенияИзПравил.ФизическоеЛицо = &ФизическоеЛицо";
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			Публикуется = ?(Выборка.Публикуется, 1, 0);
			ЭтоОтветственный = Выборка.ЭтоОтветственный;
		КонецЕсли;
	КонецЕсли;
	
	ТолькоПросмотр = ЭтоОтветственный;
	Если ЭтоОтветственный Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОтветственный;
	Иначе
		ФизическиеЛица = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо);
		СотрудникиИнформационнойБазы  = КадровыйУчет.ОсновныеСотрудникиИнформационнойБазы(Истина, ФизическиеЛица, ТекущаяДатаСеанса());
		Сотрудник = СотрудникиИнформационнойБазы[ФизическоеЛицо];
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОбычныйСотрудник;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ОбработчикОповещенияЗаписатьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Сотрудники = ВыбранноеЗначение;
	ОбработкаВыбораНаСервере(ВыбранноеЗначение);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФизическоеЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Отбор = Новый Структура("РольСотрудника", ПредопределенноеЗначение("Перечисление.РолиСотрудников.Работник"));
	ПараметрыОткрытия = Новый Структура("РежимВыбора,ТекущаяСтрока,Отбор", Истина, Сотрудник, Отбор);
	ОткрытьФорму("Справочник.Сотрудники.ФормаВыбора",ПараметрыОткрытия,ЭтаФорма,ЭтаФорма); 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьИЗакрытьНаКлиенте(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьИЗакрытьНаКлиенте(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработчикОповещенияЗаписатьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	ЗаписатьИЗакрытьНаКлиенте(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьНаКлиенте(ЗакрытьФорму)

	Если Не ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		Отказ = Ложь;
		ТекстСообщения = НСтр("ru = 'Не выбран Сотрудник.';
								|en = 'Не выбран Сотрудник.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	СообщениеОбОшибке = ЗаписатьНаСервере();
	Если СообщениеОбОшибке <> Неопределено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке);
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь;
	Если ЗакрытьФорму Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьНаСервере()

	Отказ = Ложь;
	СообщениеОбОшибке = Неопределено;
	
	// Проверка на наличие записи по выбранному физическому лицу.
	Если ФизическоеЛицоПрежнее <> ФизическоеЛицо Тогда
		МенеджерЗаписи = РегистрыСведений.ИсключенияИзПравилПубликацииУправлениеПерсоналом.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Приложение 		= Приложение;
		МенеджерЗаписи.ФизическоеЛицо 	= ФизическоеЛицо;
		МенеджерЗаписи.Прочитать();
		Если МенеджерЗаписи.Выбран() Тогда
			Отказ = Истина;
			СообщениеОбОшибке = НСтр("ru = 'Запись по данному сотруднику уже существует. Отредактируйте существующую запись.';
									|en = 'Запись по данному сотруднику уже существует. Отредактируйте существующую запись.'");
		КонецЕсли;
	КонецЕсли;
	
	Если Не Отказ Тогда
		НачатьТранзакцию();
		Попытка
			
			ФизическиеЛица = Новый Массив;
			Если ЗначениеЗаполнено(ФизическоеЛицоПрежнее) И ФизическоеЛицоПрежнее <> ФизическоеЛицо Тогда
				Запись = РегистрыСведений.ИсключенияИзПравилПубликацииУправлениеПерсоналом.СоздатьМенеджерЗаписи();
				Запись.Приложение 		= Приложение;
				Запись.ФизическоеЛицо 	= ФизическоеЛицоПрежнее;
				Запись.Удалить();
				ФизическиеЛица.Добавить(ФизическоеЛицоПрежнее);
			КонецЕсли;
			
			Запись = РегистрыСведений.ИсключенияИзПравилПубликацииУправлениеПерсоналом.СоздатьМенеджерЗаписи();
			Запись.Приложение 		= Приложение;
			Запись.ФизическоеЛицо 	= ФизическоеЛицо;
			Запись.Публикуется 		= (Публикуется = 1);
			Запись.Записать();
			Физическиелица.Добавить(ФизическоеЛицо);
				
			ИнтеграцияУправлениеПерсоналом.ОбновитьСведенияОПубликацииФизическихЛицИсключений(Приложение, ФизическиеЛица);
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			СообщениеОбОшибке = НСтр("ru = 'Не удалось записать данные.';
									|en = 'Не удалось записать данные.'");
		КонецПопытки;
	КонецЕсли;
	
	Возврат СообщениеОбОшибке;

КонецФункции

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение)
	ФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыбранноеЗначение, "ФизическоеЛицо");
КонецПроцедуры

#КонецОбласти