&НаКлиенте
Перем КонтекстЭДО;

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ОрганизацияСсылка) Тогда
		
		ЗаписьПоОрганизации = РегистрыСведений.НастройкиОбменаРПН.СоздатьМенеджерЗаписи();
		ЗаписьПоОрганизации.Организация = Параметры.ОрганизацияСсылка;
		ЗаписьПоОрганизации.Пользователь = Справочники.Пользователи.ПустаяСсылка();
		ЗаписьПоОрганизации.Прочитать();
		
		Если ЗначениеЗаполнено(ЗаписьПоОрганизации.Организация) Тогда
			ЗначениеВДанныеФормы(ЗаписьПоОрганизации, Запись);
		Иначе
			Запись.Организация = Параметры.ОрганизацияСсылка;
		КонецЕсли;
		
	КонецЕсли;
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	УчетнаяЗапись = КонтекстЭДОСервер.УчетнаяЗаписьОрганизации(Запись.Организация);
	
	Если ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		МестоХраненияКлюча = КриптографияЭДКОКлиентСервер.КонтекстМоделиХраненияКлюча(Запись.Организация);
	Иначе
		МестоХраненияКлюча = КриптографияЭДКОКлиентСервер.КонтекстМоделиХраненияКлюча(Ложь);
	КонецЕсли;
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.СкрытьЭлементыФормыПриИспользованииОднойОрганизации(
		ЭтаФорма, "НадписьОрганизация");
	ЭтоПолноправныйПользователь =
		ОбщегоНазначения.РазделениеВключено() И КриптографияЭДКОКлиентСервер.ЭтоЛокальнаяПодпись(МестоХраненияКлюча)
		ИЛИ НЕ ОбщегоНазначения.РазделениеВключено() И Пользователи.ЭтоПолноправныйПользователь();
	ИспользоватьНесколькоСохраненное = (Запись.ИспользоватьНесколько = Истина);
	
	СвойстваОрганизацииИУчетнойЗаписи = Неопределено;
	Если КонтекстЭДОСервер <> Неопределено Тогда
		СвойстваОрганизацииИУчетнойЗаписи = КонтекстЭДОСервер.ЕстьВозможностьАвтонастройкиВУниверсальномФормате(
			Запись.Организация, Истина);
	КонецЕсли;
	
	СертификатыАбонентовПользователей = СписокПользователейИСертификатовАбонентов(Запись.Организация);
	Элементы.ИспользоватьНесколько.Видимость = СертификатыАбонентовПользователей.Количество() > 1
		ИЛИ (Запись.ИспользоватьНесколько = Истина);
	
	Элементы.ГруппаАвтонастройка.Видимость = СвойстваОрганизацииИУчетнойЗаписи <> Неопределено
		И СвойстваОрганизацииИУчетнойЗаписи.ЕстьВозможностьАвтонастройки;
	Элементы.ГруппаИнформация1СОтчетностьНеИспользуется.Видимость = (СвойстваОрганизацииИУчетнойЗаписи = Неопределено
		ИЛИ СвойстваОрганизацииИУчетнойЗаписи.ВидОбменаСКонтролирующимиОрганами <>
			ПредопределенноеЗначение("Перечисление.ВидыОбменаСКонтролирующимиОрганами.ОбменВУниверсальномФормате")
		ИЛИ НЕ ЗначениеЗаполнено(СвойстваОрганизацииИУчетнойЗаписи.УчетнаяЗаписьОбмена));
	
	КлючСохраненияПоложенияОкна = "НастройкиРПН" + ?(Элементы.ГруппаАвтонастройка.Видимость, "Автонастройка", "")
		+ ?(Элементы.ГруппаИнформация1СОтчетностьНеИспользуется.Видимость, "Подключение", "");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзменениеНастроекЭДООрганизации", Запись.Организация);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьНесколькоПриИзменении(Элемент)
	
	ОтобразитьСертификатАбонента(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатАбонентаПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Запись.ИспользоватьНесколько = Истина Тогда
		ВыбратьНесколькоСертификатовАбонента();
		
	Иначе
		Оповещение = Новый ОписаниеОповещения(
			"СертификатАбонентаПредставлениеНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент));
		
		КриптографияЭДКОКлиент.ВыбратьСертификат(
			Оповещение, МестоХраненияКлюча, Запись.СертификатАбонентаОтпечаток, "My");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатРПНПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения(
		"СертификатРПНПредставлениеНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент));
	
	КриптографияЭДКОКлиент.ВыбратьСертификат(
		Оповещение, МестоХраненияКлюча, Запись.СертификатРПНОтпечаток, "AddressBook");
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОбменПриИзменении(Элемент)
	
	ОбновитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатАбонентаПредставлениеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Запись.ИспользоватьНесколько = Истина Тогда
		ТекущийПользователь = ПользователиКлиент.ТекущийПользователь();
		СертификатАбонентаПользователя = СертификатыАбонентовПользователей.НайтиПоЗначению(ТекущийПользователь);
		ОтпечатокСертификатаАбонента = ?(СертификатАбонентаПользователя = Неопределено,
			"", СертификатАбонентаПользователя.Представление);
	Иначе
		ОтпечатокСертификатаАбонента = Запись.СертификатАбонентаОтпечаток;
	КонецЕсли;
	
	Если Запись.ИспользоватьНесколько = Истина И ЗначениеЗаполнено(СертификатАбонентаПредставление)
		И НЕ ЗначениеЗаполнено(ОтпечатокСертификатаАбонента) Тогда
		
		ВыбратьНесколькоСертификатовАбонента();
		
	ИначеЕсли ЗначениеЗаполнено(ОтпечатокСертификатаАбонента) Тогда
		НовыйСертификат = Новый Структура("Отпечаток", ОтпечатокСертификатаАбонента);
		КриптографияЭДКОКлиентСервер.КонтекстМоделиХраненияКлюча(МестоХраненияКлюча, НовыйСертификат);
		КриптографияЭДКОКлиент.ПоказатьСертификат(НовыйСертификат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатРПНПредставлениеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НовыйСертификат = Новый Структура("Отпечаток", Запись.СертификатРПНОтпечаток);
	КриптографияЭДКОКлиентСервер.КонтекстМоделиХраненияКлюча(МестоХраненияКлюча, НовыйСертификат);
	КриптографияЭДКОКлиент.ПоказатьСертификат(НовыйСертификат);
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатАбонентаПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Запись.ИспользоватьНесколько = Истина Тогда
		Запись.ИспользоватьНесколько = Ложь;
	КонецЕсли;
	
	Запись.СертификатАбонентаОтпечаток = "";
	СертификатАбонентаПредставление = "";
	
	КриптографияЭДКОКлиент.ОтобразитьПредставлениеСертификата(
		МестоХраненияКлюча,
		Элемент,
		Запись.СертификатАбонентаОтпечаток,
		ЭтотОбъект,
		"СертификатАбонентаПредставление");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатРПНПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Запись.СертификатРПНОтпечаток = "";
	СертификатРПНПредставление = "";
	
	КриптографияЭДКОКлиент.ОтобразитьПредставлениеСертификата(
		МестоХраненияКлюча,
		Элемент,
		Запись.СертификатРПНОтпечаток, 
		ЭтотОбъект,
		"СертификатРПНПредставление");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбменНапрямуюПриИзменении(Элемент)
	
	Если Запись.ОбменНапрямую Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Внимание! Обмен напрямую с Росприроднадзором рекомендуется использовать только при экстренной необходимости и невозможности отправки через оператора электронного документооборота.';
										|en = 'Внимание! Обмен напрямую с Росприроднадзором рекомендуется использовать только при экстренной необходимости и невозможности отправки через оператора электронного документооборота.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьсяК1СОтчетности(Команда)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьФормуМастераЗаявленияНаПодключение(Запись.Организация, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДО = Результат.КонтекстЭДО;
	
	ОбновитьДоступностьЭлементов();
	
	КонтекстЭДО.УправлениеОтображениемОрганизации(ЭтаФорма, Запись.Организация);
	
	Если Запись.ИспользоватьНесколько = Истина Тогда
		ТекущийПользователь = ПользователиКлиент.ТекущийПользователь();
		СертификатАбонентаПользователя = СертификатыАбонентовПользователей.НайтиПоЗначению(ТекущийПользователь);
		ОтпечатокСертификатаАбонента = ?(СертификатАбонентаПользователя = Неопределено,
			"", СертификатАбонентаПользователя.Представление);
	Иначе
		ОтпечатокСертификатаАбонента = Запись.СертификатАбонентаОтпечаток;
	КонецЕсли;
	
	ПараметрыОтображенияСертификатов = Новый Массив;
	
	ПараметрыОтображенияСертификата = Новый Структура;
	ПараметрыОтображенияСертификата.Вставить("ПолеВвода", 								Элементы.СертификатАбонентаПредставление);
	ПараметрыОтображенияСертификата.Вставить("Сертификат", 								ОтпечатокСертификатаАбонента);
	ПараметрыОтображенияСертификата.Вставить("ИмяРеквизитаПредставлениеСертификата", 	"СертификатАбонентаПредставление");
	
	ПараметрыОтображенияСертификатов.Добавить(ПараметрыОтображенияСертификата);
	
	Если Элементы.ГруппаСертификатРПН.Видимость Тогда
		ПараметрыОтображенияСертификата = Новый Структура;
		ПараметрыОтображенияСертификата.Вставить("ПолеВвода", 								Элементы.СертификатРПНПредставление);
		ПараметрыОтображенияСертификата.Вставить("Сертификат", 								Запись.СертификатРПНОтпечаток);
		ПараметрыОтображенияСертификата.Вставить("ИмяРеквизитаПредставлениеСертификата", 	"СертификатРПНПредставление");
		
		ПараметрыОтображенияСертификатов.Добавить(ПараметрыОтображенияСертификата);
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииПослеОтображенияСертификатов", ЭтотОбъект);
	КриптографияЭДКОКлиент.ОтобразитьПредставленияСертификатов(
		ПараметрыОтображенияСертификатов,
		ЭтотОбъект,
		МестоХраненияКлюча,
		ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииПослеОтображенияСертификатов(Результат, ДополнительныеПараметры) Экспорт
	
	СкорректироватьПредставлениеСертификатаАбонента();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНесколькоСертификатовАбонента(УстановленоИспользоватьНесколько = Ложь)
	
	Если Модифицированность И НЕ Записать() Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("УстановленоИспользоватьНесколько", УстановленоИспользоватьНесколько);
	Оповещение = Новый ОписаниеОповещения("ВыбратьНесколькоСертификатовАбонентаПослеВыбора",
		ЭтотОбъект, ДополнительныеПараметры);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ОрганизацияСсылка", 					Запись.Организация);
	СтруктураПараметров.Вставить("УстановленоИспользоватьНесколько", 	УстановленоИспользоватьНесколько);
	
	ОткрытьФорму(
		"РегистрСведений.НастройкиОбменаРПН.Форма.ФормаСпискаПоПользователям",
		СтруктураПараметров,
		ЭтотОбъект,,,,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНесколькоСертификатовАбонентаПослеВыбора(Результат, ВходящийКонтекст) Экспорт
	
	УстановленоИспользоватьНесколько = ВходящийКонтекст.УстановленоИспользоватьНесколько;
	
	Если Результат <> КодВозвратаДиалога.ОК Тогда
		Если УстановленоИспользоватьНесколько Тогда
			Запись.ИспользоватьНесколько = Ложь;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	СертификатыАбонентовПользователей = СписокПользователейИСертификатовАбонентов(Запись.Организация);
	Элементы.ИспользоватьНесколько.Видимость = СертификатыАбонентовПользователей.Количество() > 1
		ИЛИ Запись.ИспользоватьНесколько = Истина;
	
	ЗаписьПоОрганизации = НастройкиОбменаРПНОрганизации(Запись.Организация);
	
	Если (ЗаписьПоОрганизации.ИспользоватьНесколько = Истина) <> (Запись.ИспользоватьНесколько = Истина) Тогда
		Запись.ИспользоватьНесколько = (ЗаписьПоОрганизации.ИспользоватьНесколько = Истина);
	КонецЕсли;
	
	Если ЗаписьПоОрганизации.СертификатАбонентаОтпечаток <> Запись.СертификатАбонентаОтпечаток Тогда
		Запись.СертификатАбонентаОтпечаток = ЗаписьПоОрганизации.СертификатАбонентаОтпечаток;
	КонецЕсли;
	
	Если Запись.ИспользоватьНесколько = Истина Тогда
		ТекущийПользователь = ПользователиКлиент.ТекущийПользователь();
		СертификатАбонентаПользователя = СертификатыАбонентовПользователей.НайтиПоЗначению(ТекущийПользователь);
		ОтпечатокСертификатаАбонента = ?(СертификатАбонентаПользователя = Неопределено,
			"", СертификатАбонентаПользователя.Представление);
	Иначе
		ОтпечатокСертификатаАбонента = Запись.СертификатАбонентаОтпечаток;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьНесколькоСертификатовАбонентаПослеОтображения", ЭтотОбъект);
	
	КриптографияЭДКОКлиент.ОтобразитьПредставлениеСертификата(
		МестоХраненияКлюча,
		Элементы.СертификатАбонентаПредставление,
		ОтпечатокСертификатаАбонента,
		ЭтотОбъект,
		"СертификатАбонентаПредставление",
		ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНесколькоСертификатовАбонентаПослеОтображения(Результат, ВходящийКонтекст) Экспорт
	
	СкорректироватьПредставлениеСертификатаАбонента();
	
	ОбновитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатАбонентаПредставлениеНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Элемент = ДополнительныеПараметры.Элемент;
	
	Если Результат.Выполнено Тогда
		Запись.СертификатАбонентаОтпечаток = Результат.ВыбранноеЗначение.Отпечаток;
		
		КриптографияЭДКОКлиент.ОтобразитьПредставлениеСертификата(
			МестоХраненияКлюча,
			Элемент, 
			Результат.ВыбранноеЗначение.Отпечаток,
			ЭтотОбъект,
			"СертификатАбонентаПредставление");
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатРПНПредставлениеНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Элемент = ДополнительныеПараметры.Элемент;
	
	Если Результат.Выполнено Тогда
		Запись.СертификатРПНОтпечаток = Результат.ВыбранноеЗначение.Отпечаток;
		
		КриптографияЭДКОКлиент.ОтобразитьПредставлениеСертификата(
			МестоХраненияКлюча,
			Элемент, 
			Результат.ВыбранноеЗначение.Отпечаток,
			ЭтотОбъект,
			"СертификатРПНПредставление");
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьЭлементов()
	
	Элементы.НадписьСертификатАбонента.Доступность = Запись.ИспользоватьОбмен;
	Элементы.СертификатАбонентаПредставление.Доступность = Запись.ИспользоватьОбмен;
	Элементы.НадписьСертификатРПН.Доступность = Запись.ИспользоватьОбмен;
	Элементы.СертификатРПНПредставление.Доступность = Запись.ИспользоватьОбмен;
	Элементы.ОбменНапрямую.Доступность = Запись.ИспользоватьОбмен;
	Элементы.НадписьОбменНапрямую.Доступность = Запись.ИспользоватьОбмен;
	Элементы.НадписьEMail.Доступность = Запись.ИспользоватьОбмен;
	Элементы.EMail.Доступность = Запись.ИспользоватьОбмен;
	Элементы.НадписьПароль.Доступность = Запись.ИспользоватьОбмен;
	Элементы.Пароль.Доступность = Запись.ИспользоватьОбмен;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьСертификатАбонента(ВыборЕслиНеЗаданыПользовательские = Ложь)
	
	Если Запись.ИспользоватьНесколько = Истина Тогда
		ТекущийПользователь = ПользователиКлиент.ТекущийПользователь();
		ЕстьСертификатыАбонентовПользователей = Ложь;
		Для каждого СертификатАбонентаПользователя Из СертификатыАбонентовПользователей Цикл
			ОтпечатокСертификатаАбонента = СертификатАбонентаПользователя.Представление;
			Если ЗначениеЗаполнено(ОтпечатокСертификатаАбонента) Тогда
				ЕстьСертификатыАбонентовПользователей = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьСертификатыАбонентовПользователей Тогда
			СертификатАбонентаПользователя = СертификатыАбонентовПользователей.НайтиПоЗначению(ТекущийПользователь);
			ОтпечатокСертификатаАбонента = ?(СертификатАбонентаПользователя = Неопределено,
				"", СертификатАбонентаПользователя.Представление);
		Иначе
			ОтпечатокСертификатаАбонента = "";
		КонецЕсли;
		
	Иначе
		ОтпечатокСертификатаАбонента = Запись.СертификатАбонентаОтпечаток;
	КонецЕсли;
	
	Если ВыборЕслиНеЗаданыПользовательские И Запись.ИспользоватьНесколько = Истина
		И НЕ ЕстьСертификатыАбонентовПользователей Тогда
		
		ВыбратьНесколькоСертификатовАбонента(Истина);
		
	Иначе
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтобразитьСертификатАбонентаПослеОтображения", ЭтотОбъект);
		
		КриптографияЭДКОКлиент.ОтобразитьПредставлениеСертификата(
			МестоХраненияКлюча,
			Элементы.СертификатАбонентаПредставление,
			ОтпечатокСертификатаАбонента,
			ЭтотОбъект,
			"СертификатАбонентаПредставление",
			ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьСертификатАбонентаПослеОтображения(Результат, ВходящийКонтекст) Экспорт
	
	СкорректироватьПредставлениеСертификатаАбонента();
	
	ОбновитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьПредставлениеСертификатаАбонента()
	
	Если Запись.ИспользоватьНесколько = Истина Тогда
		ТекущийПользователь = ПользователиКлиент.ТекущийПользователь();
		СертификатАбонентаПользователя = СертификатыАбонентовПользователей.НайтиПоЗначению(ТекущийПользователь);
		ОтпечатокСертификатаАбонента = ?(СертификатАбонентаПользователя = Неопределено,
			"", СертификатАбонентаПользователя.Представление);
		
		ПоказыватьОсновнойСертификат = Ложь;
		СертификатАбонентаТекущегоПользователяЗадан = Ложь;
		КоличествоСертификатовАбонентовПользователей = 0;
		Для каждого СертификатАбонентаПользователя Из СертификатыАбонентовПользователей Цикл
			ОтпечатокСертификатаАбонента = СертификатАбонентаПользователя.Представление;
			Если ЗначениеЗаполнено(ОтпечатокСертификатаАбонента) Тогда
				КоличествоСертификатовАбонентовПользователей = КоличествоСертификатовАбонентовПользователей + 1;
				
				Если СертификатАбонентаПользователя.Значение = ТекущийПользователь Тогда
					СертификатАбонентаТекущегоПользователяЗадан = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если ПоказыватьОсновнойСертификат И СертификатАбонентаТекущегоПользователяЗадан Тогда
			Если КоличествоСертификатовАбонентовПользователей > 1 Тогда
				ТекстСообщения = НСтр("ru = 'и еще %1';
										|en = 'и еще %1'");
				СертификатАбонентаПредставление = СертификатАбонентаПредставление + " " + СтрШаблон(
					ТекстСообщения,
					Строка(КоличествоСертификатовАбонентовПользователей - 1));
			КонецЕсли;
		ИначеЕсли КоличествоСертификатовАбонентовПользователей > 0 Тогда
			ТекстСообщения = ОбщегоНазначенияЭДКОКлиентСервер.ПростоеСклонение(
				КоличествоСертификатовАбонентовПользователей,
				НСтр("ru = '%1 сертификат';
					|en = '%1 сертификат'"),
				НСтр("ru = '%1 сертификата';
					|en = '%1 сертификата'"),
				НСтр("ru = '%1 сертификатов';
					|en = '%1 сертификатов'"));
			СертификатАбонентаПредставление = СтрШаблон(
				ТекстСообщения,
				Строка(КоличествоСертификатовАбонентовПользователей));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НастройкиОбменаРПНОрганизации(ОрганизацияСсылка)
	
	ЗаписьПоОрганизации = РегистрыСведений.НастройкиОбменаРПН.СоздатьМенеджерЗаписи();
	ЗаписьПоОрганизации.Организация = ОрганизацияСсылка;
	ЗаписьПоОрганизации.Пользователь = Справочники.Пользователи.ПустаяСсылка();
	ЗаписьПоОрганизации.Прочитать();
	
	Результат = Новый Структура;
	Результат.Вставить("ИспользоватьНесколько", 		ЗаписьПоОрганизации.ИспользоватьНесколько = Истина);
	Результат.Вставить("СертификатАбонентаОтпечаток", 	ЗаписьПоОрганизации.СертификатАбонентаОтпечаток);
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СписокПользователейИСертификатовАбонентов(ОрганизацияСсылка)
	
	СписокПользователейНастроек = Новый СписокЗначений;
	
	Если НЕ ЗначениеЗаполнено(ОрганизацияСсылка) Тогда
		Возврат СписокПользователейНастроек;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Пользователи.Ссылка КАК Пользователь,
		|	Пользователи.Наименование КАК НаименованиеПользователя,
		|	НастройкиОбменаРПН.СертификатАбонентаОтпечаток КАК СертификатАбонентаОтпечаток
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОбменаРПН КАК НастройкиОбменаРПН
		|		ПО НастройкиОбменаРПН.Организация = &Организация
		|		И Пользователи.Ссылка = НастройкиОбменаРПН.Пользователь
		|ГДЕ
		|	НЕ Пользователи.Недействителен
		|	И НЕ Пользователи.Служебный
		|	И Пользователи.ИдентификаторПользователяИБ <> &ПустойИдентификаторПользователяИБ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НаименованиеПользователя";
	
	Запрос.УстановитьПараметр("Организация", ОрганизацияСсылка);
	ПустойИдентификаторПользователяИБ = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
	Запрос.УстановитьПараметр("ПустойИдентификаторПользователяИБ", ПустойИдентификаторПользователяИБ);
	ТаблицаНастроек = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТаблицы Из ТаблицаНастроек Цикл
		СписокПользователейНастроек.Добавить(СтрокаТаблицы.Пользователь, СтрокаТаблицы.СертификатАбонентаОтпечаток);
	КонецЦикла;
	
	Возврат СписокПользователейНастроек;
	
КонецФункции

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	МестоХраненияКлюча = КриптографияЭДКОКлиентСервер.КонтекстМоделиХраненияКлюча(Запись.Организация);
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	Элементы.ГруппаАвтонастройка.Видимость = КонтекстЭДОСервер <> Неопределено
		И КонтекстЭДОСервер.ЕстьВозможностьАвтонастройкиВУниверсальномФормате(Запись.Организация,
		Истина).ЕстьВозможностьАвтонастройки;
	
	Если НЕ ЭтоПолноправныйПользователь Тогда
		ЗаписьПоОрганизации = НастройкиОбменаРПНОрганизации(Запись.Организация);
		Если ЗаписьПоОрганизации.ИспользоватьНесколько = Истина И НЕ Запись.ИспользоватьНесколько = Истина Тогда
			Запись.ИспользоватьНесколько = Истина;
		КонецЕсли;
	КонецЕсли;
	ИспользоватьНесколькоСохраненное = (Запись.ИспользоватьНесколько = Истина);
	
	СертификатыАбонентовПользователей = СписокПользователейИСертификатовАбонентов(Запись.Организация);
	Элементы.ИспользоватьНесколько.Видимость = СертификатыАбонентовПользователей.Количество() > 1
		ИЛИ Запись.ИспользоватьНесколько = Истина;
	
КонецПроцедуры

#КонецОбласти

