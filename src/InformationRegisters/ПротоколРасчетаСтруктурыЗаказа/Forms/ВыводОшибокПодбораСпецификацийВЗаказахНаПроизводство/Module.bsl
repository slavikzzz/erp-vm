
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Если Не Параметры.Свойство("ЗаказНаПроизводство", ЗаказНаПроизводство) Тогда
		ТекстИсключения = НСтр("ru = 'Не переданы обязательные параметры';
								|en = 'Required parameters are not passed'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;

	ПроверитьИВывестиОшибкиПодбораСпецификаций();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НачатьОжиданиеДлительнойОперации Тогда
		
		ПодключитьОбработчикОжидания("НачатьОжиданиеДлительнойОперации", 0.1, Истина);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТабличныйДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы);
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(
		АдресРасшифровки, ИсточникНастроек);
	
	ДоступныеДействия = Новый Массив;
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"РезультатОбработкаРасшифровкиЗавершение", ЭтотОбъект);
	
	ОбработкаРасшифровки.ПоказатьВыборДействия(
		ОписаниеОповещения,
		Расшифровка,
		ДоступныеДействия,
		,
		Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ПроверитьИВывестиОшибкиПодбораСпецификацийНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСпецификации(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;

	ПодобратьСпецификацииНаСервере();
	
	Оповестить("Запись_ЗаказНаПроизводство", Новый Структура("ЗаказНаПроизводство", ЗаказНаПроизводство));
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроверитьИВывестиОшибки

&НаКлиенте
Процедура ПроверитьИВывестиОшибкиПодбораСпецификацийНаКлиенте() Экспорт
	
	ПроверитьИВывестиОшибкиПодбораСпецификаций();
	
	Если НачатьОжиданиеДлительнойОперации Тогда
		
		НачатьОжиданиеДлительнойОперации();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьИВывестиОшибкиПодбораСпецификаций()
	
	ТабличныйДокумент.Очистить();
	
	ОтменитьДлительнуюОперацию();
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ЗаказНаПроизводство", ЗаказНаПроизводство);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания =
		НСтр("ru = 'Проверка и вывод ошибок подбора ресурсных спецификаций';
			|en = 'Check and display errors of picking of bills of materials'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.ПротоколРасчетаСтруктурыЗаказа.ПроверитьИВывестиОшибкиПодбораСпецификаций",
		ПараметрыПроцедуры,
		ПараметрыВыполнения);
	
	Если ДлительнаяОперация.Статус = "Выполняется" Тогда
		
		ОбработчикОжиданияДлительнойОперации = ОбработчикПроверитьИВывестиОшибкиПодбораСпецификацийОтложенно();
		НачатьОжиданиеДлительнойОперации = Истина;
		
	Иначе
		
		ПроверитьИВывестиОшибкиПодбораСпецификацийОтложенно(ДлительнаяОперация);
		
		НачатьОжиданиеДлительнойОперации = Ложь;
		ДлительнаяОперация = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОбработчикПроверитьИВывестиОшибкиПодбораСпецификацийОтложенно()
	
	Возврат "ПроверитьИВывестиОшибкиПодбораСпецификацийЗавершение";
	
КонецФункции

&НаКлиенте
Процедура ПроверитьИВывестиОшибкиПодбораСпецификацийЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ДлительнаяОперация = Неопределено;
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		ОчиститьТабличныйДокумент();
		Возврат;
	КонецЕсли;
	
	ПроверитьИВывестиОшибкиПодбораСпецификацийОтложенно(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьИВывестиОшибкиПодбораСпецификацийОтложенно(Результат)
	
	ОчиститьТабличныйДокумент();
	
	Если Результат.Статус = "Выполнено" Тогда
		
		ДанныеЗаполнения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			
			ТабличныйДокумент = ДанныеЗаполнения.ТабличныйДокумент;
			
			АдресСхемы       = ПоместитьВоВременноеХранилище(ДанныеЗаполнения.СхемаКомпоновкиДанных, УникальныйИдентификатор);
			АдресРасшифровки = ПоместитьВоВременноеХранилище(ДанныеЗаполнения.ДанныеРасшифровки, УникальныйИдентификатор);
			
			Элементы.ТабличныйДокумент.РежимМасштабированияПросмотра = РежимМасштабированияПросмотра.Обычный;
			
		КонецЕсли;
	
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПодобратьСпецификации

&НаСервере
Процедура ПодобратьСпецификацииНаСервере()
	
	ОтменитьДлительнуюОперацию();
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	
	ПараметрыВыполнения.НаименованиеФоновогоЗадания =
		НСтр("ru = 'Подбор ресурсных спецификаций в заказах на производство';
			|en = 'Pick bills of materials in production orders'");
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ЗаказНаПроизводство", ЗаказНаПроизводство);
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.ПротоколРасчетаСтруктурыЗаказа.ПодобратьСпецификацииОтложенно",
		ПараметрыПроцедуры,
		ПараметрыВыполнения);
	
	Если ДлительнаяОперация.Статус = "Выполняется" Тогда
		
		ОбработчикОжиданияДлительнойОперации = ОбработчикПодобратьСпецификацииОтложенно();
		НачатьОжиданиеДлительнойОперации = Истина;
		
	Иначе
		
		ОбработатьРезультатПодбораСпецификаций(ЭтотОбъект, ДлительнаяОперация);
		
		НачатьОжиданиеДлительнойОперации = Ложь;
		ДлительнаяОперация = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОбработчикПодобратьСпецификацииОтложенно()
	
	Возврат "ПодобратьСпецификацииОтложенноЗавершение";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбработатьРезультатПодбораСпецификаций(Форма, Результат)
	
	Если Результат.Статус = "Выполнено" Тогда
		
		ДанныеЗаполнения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			
			КоличествоОбработанных = ДанныеЗаполнения.КоличествоОбработанных;
			
			Если КоличествоОбработанных > 0 Тогда
				
				Форма.ОповещениеПользователяПояснение = СтрШаблон(НСтр("ru = 'Подобранно %1 спецификаций';
																		|en = '%1 bills of materials are picked'"), ДанныеЗаполнения.КоличествоОбработанных);
				Форма.ОповещениеПользователяЗаголовок = НСтр("ru = 'Выполнен подбор спецификаций';
															|en = 'Bills of materials are picked'");
				
			Иначе
				
				Форма.ОповещениеПользователяПояснение = НСтр("ru = 'Ни одна спецификация не подобрана';
															|en = 'No bill of materials is picked'");
				Форма.ОповещениеПользователяЗаголовок = НСтр("ru = 'Не выполнен подбор спецификаций';
															|en = 'Bills of materials are not picked'");
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Если Результат.Статус = "Ошибка" Тогда
			
			ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСпецификацииОтложенноЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ДлительнаяОперация = Неопределено;
	
	Если НЕ Результат = Неопределено Тогда
		
		ОбработатьРезультатПодбораСпецификаций(ЭтотОбъект, Результат);
		
		ОповеститьПользователяОРезультатахОбработки();
		
		ПроверитьИВывестиОшибкиПодбораСпецификацийНаКлиенте();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьПользователяОРезультатахОбработки()
	
	Если ЗначениеЗаполнено(ОповещениеПользователяЗаголовок) Тогда
		
		ПоказатьОповещениеПользователя(ОповещениеПользователяЗаголовок,,ОповещениеПользователяПояснение, БиблиотекаКартинок.Информация32);
		
		ОповещениеПользователяЗаголовок = "";
		ОповещениеПользователяПояснение = "";
		
	КонецЕсли;
	
	Оповестить("Запись_ЗаказНаПроизводство", Новый Структура("ЗаказНаПроизводство", ЗаказНаПроизводство));
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ОчиститьТабличныйДокумент()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ТабличныйДокумент, "НеИспользовать");
	ТабличныйДокумент.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьДлительнуюОперацию()
	
	Если НЕ ДлительнаяОперация = Неопределено Тогда
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ДлительнаяОперация.ИдентификаторЗадания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьОжиданиеДлительнойОперации()
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(ОбработчикОжиданияДлительнойОперации, ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	
	Если ОбработчикОжиданияДлительнойОперации = ОбработчикПроверитьИВывестиОшибкиПодбораСпецификацийОтложенно() Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ТабличныйДокумент, "ФормированиеОтчета");
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
			ДлительнаяОперация,
			ОповещениеОЗавершении,
			ПараметрыОжидания);
	
	НачатьОжиданиеДлительнойОперации = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровкиЗавершение(ВыполненноеДействие, ПараметрВыполненногоДействия, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрВыполненногоДействия) И ЭтоСсылкаСправочникаДокумента(ПараметрВыполненногоДействия) Тогда
		
		ПоказатьЗначение(, ПараметрВыполненногоДействия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоСсылкаСправочникаДокумента(Значение)
	
	ТипЗначения = ТипЗнч(Значение);
	
	Возврат Справочники.ТипВсеСсылки().СодержитТип(ТипЗначения) ИЛИ Документы.ТипВсеСсылки().СодержитТип(ТипЗначения);
	
КонецФункции

#КонецОбласти

#КонецОбласти
