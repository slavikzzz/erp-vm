#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает парамтеры формы для выбора кода
//
// Параметры:
// 		НазваниеМакета - Строка - Имя макета
// 		ТекущийПериод - Дата - Дата, помещаемая в параметры формы как параметр "ТекущийПериод".
//
// Возвращаемое значение:
// 		Структура - Структура параметров общей формы "ФормаВыбораКода".
//
Функция ПолучитьПараметрыФормыВыбораДляКода(НазваниеМакета, ТекущийПериод) Экспорт
	
	КодыЛьгот = Новый ТаблицаЗначений;
	
	КодыЛьгот.Колонки.Добавить("Код");
	КодыЛьгот.Колонки.Добавить("Наименование");
	КодыЛьгот.Колонки.Добавить("КодЕдиницыИзмерения");
	
	Макет = ПолучитьМакет(НазваниеМакета);
	
	НазваниеОбласти = "";
	СписокОбластей = Новый СписокЗначений;
	ОпределитьПараметрыСпискаКодов(Макет, ТекущийПериод, НазваниеОбласти, СписокОбластей);
	
	ТекущаяОбласть = Макет.Области.Найти("Область" + НазваниеОбласти);
	
	Если НЕ (ТекущаяОбласть = Неопределено) Тогда	
		
		Для НомерСтр = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
			
			// Перебираем строки макета.
			КодПоказателя = СокрП(Макет.Область(НомерСтр, 1).Текст);
			Название = СокрП(Макет.Область(НомерСтр, 2).Текст);
			КодЕдиницыИзмерения = СокрП(Макет.Область(НомерСтр, 3).Текст);
			
			Если КодПоказателя = "###" Тогда
				Прервать;
			ИначеЕсли ПустаяСтрока(КодПоказателя) Тогда
				Продолжить;
			Иначе
				НоваяСтрока = КодыЛьгот.Добавить();
				НоваяСтрока.Код                 = КодПоказателя;
				НоваяСтрока.Наименование        = Название;
				НоваяСтрока.КодЕдиницыИзмерения = КодЕдиницыИзмерения;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Параметры = Новый Структура;
	Параметры.Вставить("СписокКодов" , КодыЛьгот);
	Параметры.Вставить("СписокПериодовДействия", СписокОбластей);
	Параметры.Вставить("ТекущийПериод" , НазваниеОбласти);
	
	Возврат Параметры;
	
КонецФункции

// Возвращает значения по умолчанию для ресурсов регистра.
// Имена ключей структуры должны строго соответствовать именам ресурсов регистра.
// 
// Параметры:
// Возвращаемое значение:
// 	Структура - структура значений ресурсов регистра.
Функция ЗначенияПоУмолчанию() Экспорт
	СтруктураЗначений = Новый Структура;
	
	СтруктураЗначений.Вставить("НалоговаяСтавка", 2.2);
	СтруктураЗначений.Вставить("ОсвобождениеОтНалогообложения", Ложь);
	СтруктураЗначений.Вставить("КодНалоговойЛьготыОсвобождениеОтНалогообложения", Неопределено);
	СтруктураЗначений.Вставить("СнижениеНалоговойСтавки", Ложь);
	СтруктураЗначений.Вставить("УменьшениеСуммыНалогаВПроцентах", Ложь);
	СтруктураЗначений.Вставить("ПроцентУменьшения", Неопределено);
	СтруктураЗначений.Вставить("ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2", Ложь);
	СтруктураЗначений.Вставить("НалоговаяСтавкаДвижимоеИмущество", 1.1);
	СтруктураЗначений.Вставить("СнижениеНалоговойСтавкиДвижимоеИмущество", Ложь);
	СтруктураЗначений.Вставить("ОсвобождениеОтНалогообложенияДвижимогоИмущества", Ложь);
	СтруктураЗначений.Вставить("УчетнаяПолитикаСуществует", Ложь);
	
	Возврат СтруктураЗначений
КонецФункции

// Возращает текст запроса по данным регистра.
// 
// Возвращаемое значение:
// 	Строка - Текст запроса.
Функция ТекстЗапросаДействующиеПараметрыНалоговУчетныхПолитик() Экспорт
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИСТИНА КАК УчетнаяПолитикаСуществует,
	|	ТаблицаСрезПоследних.Период КАК Период,
	|	ТаблицаСрезПоследних.Организация КАК Организация,
	|	ТаблицаСрезПоследних.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ТаблицаСрезПоследних.ОсвобождениеОтНалогообложения КАК ОсвобождениеОтНалогообложения,
	|	ТаблицаСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ТаблицаСрезПоследних.СнижениеНалоговойСтавки КАК СнижениеНалоговойСтавки,
	|	ТаблицаСрезПоследних.УменьшениеСуммыНалогаВПроцентах КАК УменьшениеСуммыНалогаВПроцентах,
	|	ТаблицаСрезПоследних.ПроцентУменьшения КАК ПроцентУменьшения,
	|	ТаблицаСрезПоследних.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2 КАК ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2,
	|	ТаблицаСрезПоследних.НалоговаяСтавкаДвижимоеИмущество КАК НалоговаяСтавкаДвижимоеИмущество,
	|	ТаблицаСрезПоследних.СнижениеНалоговойСтавкиДвижимоеИмущество КАК СнижениеНалоговойСтавкиДвижимоеИмущество,
	|	ТаблицаСрезПоследних.ОсвобождениеОтНалогообложенияДвижимогоИмущества КАК ОсвобождениеОтНалогообложенияДвижимогоИмущества
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, Организация В
	|		(ВЫБРАТЬ
	|			ГоловныеОрганизации.ОбособленноеПодразделение КАК Организация
	|		ИЗ
	|			ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК ТаблицаСрезПоследних
	|";
	
	Возврат ТекстЗапроса
	
КонецФункции

// Формирует текстовое описание установленных параметров.
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации - ссылка на организацию.
// 	ДатаДействия - Дата - период действия настроек.
// 	ДействующиеНастройки - Структура - действующие параметры учетной политики.
// Возвращаемое значение:
// 	Строка - Описание действующих параметров строкой.
Функция ОписаниеДействующихПараметров(Организация, ДатаДействия = Неопределено, ДействующиеНастройки = Неопределено) Экспорт
	
	Если ДействующиеНастройки = Неопределено Тогда
		ДействующиеНастройки = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
			"СтавкиНалогаНаИмущество",
			Организация,
			ДатаДействия,
			Ложь);
	КонецЕсли;
	СтрокаШаблон = "%1: %2." + Символы.ПС;
	СтрокаШаблонБулево = "%1." + Символы.ПС;
	Если НЕ ЗначениеЗаполнено(ДействующиеНастройки) Тогда
		СтрокаОписанияНастроек = НСтр("ru = 'Не заданы параметры.';
										|en = 'Parameters are not specified.'");
		Возврат СтрокаОписанияНастроек;
	КонецЕсли;
	
	ЗаголовокСтавки = НСтр("ru = 'Общая ставка налога';
							|en = 'Total tax rate'");
	Если ДействующиеНастройки.СнижениеНалоговойСтавки Тогда
		ЗаголовокСтавки = ЗаголовокСтавки + " " + НСтр("ru = '(сниженная)';
														|en = '(reduced)'");
	КонецЕсли;
	СтрокаОписанияНастроек = СтрШаблон(СтрокаШаблон, 
		ЗаголовокСтавки,
		Строка(ДействующиеНастройки.НалоговаяСтавка) + "%");

	Если ДействующиеНастройки.ОсвобождениеОтНалогообложения Тогда
		СтрокаОписанияНастроек = СтрокаОписанияНастроек
			+ СтрШаблон(СтрокаШаблонБулево,
				НСтр("ru = 'Все имущество освобождено от налога';
					|en = 'All property is exempt from tax'"));
		СтрокаОписанияНастроек = СтрокаОписанияНастроек + СтрШаблон(СтрокаШаблон, 
			НСтр("ru = 'Код налоговой льготы';
				|en = 'Tax relief code'"),
			ДействующиеНастройки.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
	КонецЕсли;
	
	Если ДействующиеНастройки.ОсвобождениеОтНалогообложенияДвижимогоИмущества Тогда
		СтрокаОписанияНастроек = СтрокаОписанияНастроек
			+ СтрШаблон(СтрокаШаблонБулево,
				НСтр("ru = 'Движимое имущество, принятое на учет с 1 января 2013 года, освобождено от налога';
					|en = 'Movable property that was put into operation before January 1, 2013 is exempt from tax'"));
	КонецЕсли;
	
	Если ДействующиеНастройки.УменьшениеСуммыНалогаВПроцентах Тогда
		СтрокаОписанияНастроек = СтрокаОписанияНастроек + СтрШаблон(СтрокаШаблон, 
			НСтр("ru = 'Налог уменьшен на';
				|en = 'Tax is reduced by'"),
			Строка(ДействующиеНастройки.ПроцентУменьшения) + "%");
	КонецЕсли;
	Если ДействующиеНастройки.ОсвобождениеОтНалогообложенияДвижимогоИмущества Тогда
		СтрокаОписанияНастроек = СтрокаОписанияНастроек
			+ СтрШаблон(СтрокаШаблонБулево,
				НСтр("ru = 'При наличии одной льготы заполнять один лист раздела 2 декларации (расчета по авансовому платежу)';
					|en = 'If there is one benefit, fill in one sheet of section 2 of the declaration (calculation of advance payment)'"));
	КонецЕсли;
	Возврат СтрокаОписанияНастроек
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОпределитьПараметрыСпискаКодов(Макет, ТекущийПериод, НазваниеОбласти, СписокОбластей)
	
	Области = Макет.Области;
	Если Области.Количество() = 0 Тогда
		НазваниеОбласти = "";
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекОбласть Из Области Цикл
		СписокОбластей.Добавить(Прав(ТекОбласть.Имя,4));
	КонецЦикла;
	
	ТекущаяОбласть = СписокОбластей[0].Значение;
	Для Каждого ТекОбласть Из СписокОбластей Цикл
		Если Год(ТекущийПериод) < Число(ТекОбласть.Значение) Тогда
			Прервать;
		КонецЕсли;
		
		ТекущаяОбласть = ТекОбласть.Значение;
	КонецЦикла;
	
	НазваниеОбласти = ТекущаяОбласть;
	
КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли
