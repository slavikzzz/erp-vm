#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Читает наиболее актуальные настройки заполнения.
//
// Параметры:
//  Период - Дата - соответствует периоду отчета
//  Организация - СправочникСсылка.Организации
//
// Возвращаемое значение:
//  см. БухгалтерскаяОтчетностьБРО.НовыйЗаполняемыеПоказатели
//
Функция ПрочитатьНастройкиЗаполнения(Период, Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      Период);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиЗаполнения.Настройки КАК Настройки
	|ИЗ
	|	РегистрСведений.НастройкиЗаполненияБухгалтерскойОтчетности.СрезПоследних(&Период, Организация = &Организация) КАК НастройкиЗаполнения";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат БухгалтерскаяОтчетностьБРО.НовыйЗаполняемыеПоказатели();
	КонецЕсли;
	
	Возврат ДесериализоватьЗаполняемыеПоказатели(Выборка.Настройки);
	
КонецФункции

// Записывает настройки заполнения "как есть".
//
// Параметры:
//  ЗаполняемыеПоказатели - см. БухгалтерскаяОтчетностьБРО.НовыйЗаполняемыеПоказатели - выполненные настройки
//  Период - Дата - соответствует периоду отчета
//  Организация - СправочникСсылка.Организации
//
Процедура ЗаменитьНастройкиЗаполнения(ЗаполняемыеПоказатели, Период, Организация) Экспорт
	
	Запись = СоздатьМенеджерЗаписи();
	
	Запись.Период      = Период;
	Запись.Организация = Организация;
	
	Если Не ЗначениеЗаполнено(ЗаполняемыеПоказатели.Разделы) Тогда
		Запись.Удалить();
	Иначе
		Запись.Настройки = СериализоватьЗаполняемыеПоказатели(ЗаполняемыеПоказатели);
		Запись.Записать(Истина);
	КонецЕсли;
	
КонецПроцедуры

// Записывает настройки заполнения, дополняя ранее сохраненные.
//
// Параметры:
//  ДополнительныеНастройки - см. БухгалтерскаяОтчетностьБРО.НовыйЗаполняемыеПоказатели - выполненные настройки.
//                          Может содержать настройки части разделов.
//                        - Неопределено - при работе с отчетом настройки не модифицировались
//  Период - Дата - соответствует периоду отчета
//  Организация - СправочникСсылка.Организации
//
Процедура ДополнитьНастройкиЗаполнения(ДополнительныеНастройки, Период, Организация) Экспорт
	
	Если ДополнительныеНастройки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Период) Или Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	БлокировкаДанных = Новый БлокировкаДанных;
	ЭлементБлокировкиДанных = БлокировкаДанных.Добавить(Метаданные.РегистрыСведений.НастройкиЗаполненияБухгалтерскойОтчетности.ПолноеИмя());
	ЭлементБлокировкиДанных.УстановитьЗначение("Период",      Период);
	ЭлементБлокировкиДанных.УстановитьЗначение("Организация", Организация);
	
	НачатьТранзакцию();
	
	Попытка
		
		БлокировкаДанных.Заблокировать();
		
		ВсеНастройки = ПрочитатьНастройкиЗаполнения(Период, Организация);
		ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(ВсеНастройки.Разделы, ДополнительныеНастройки.Разделы, Истина);
		ЗаменитьНастройкиЗаполнения(ВсеНастройки, Период, Организация);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
	
КонецПроцедуры

// Записывает настройки заполнения, дополняя ранее сохраненные.
//
// Параметры:
//  ДополнительныеНастройки - см. БухгалтерскаяОтчетностьБРО.НовыйЗаполняемыеПоказатели - выполненные настройки.
//                          Может содержать настройки части разделов.
//                        - Неопределено - при работе с отчетом настройки не модифицировались
//  ЭкземплярОтчета - ДокументСсылка.РегламентированныйОтчет - записанный отчет
//
Процедура ДополнитьНастройкиЗаполненияЭкземпляраОтчета(ДополнительныеНастройки, ЭкземплярОтчета) Экспорт
	
	Если ДополнительныеНастройки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СвойстваДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭкземплярОтчета, "Дата, Организация");
	
	ДополнитьНастройкиЗаполнения(ДополнительныеНастройки, СвойстваДокумента.Дата, СвойстваДокумента.Организация);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ПодключениеСтандартныхПодсистем

#Область СтандартныеПодсистемы_УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	| ЗначениеРазрешено(Организация)";
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СериализоватьЗаполняемыеПоказатели(ЗаполняемыеПоказатели)
	
	ЗаписьJSON = Новый ЗаписьJSON;
	
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Unix, Символы.Таб);
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
	
	СериализаторXDTO.ЗаписатьJSON(ЗаписьJSON, ЗаполняемыеПоказатели, НазначениеТипаXML.Явное);
	
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции

Функция ДесериализоватьЗаполняемыеПоказатели(Знач Настройки)
	
	ЗначениеПоУмолчанию = БухгалтерскаяОтчетностьБРО.НовыйЗаполняемыеПоказатели();
	Если ПустаяСтрока(Настройки) Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Настройки);
	
	Попытка
		Возврат СериализаторXDTO.ПрочитатьJSON(ЧтениеJSON, ТипЗнч(ЗначениеПоУмолчанию));
	Исключение
		
		Комментарий = СтрШаблон(
			НСтр("ru = 'Не удалось извлечь настройки заполнения отчета из текста:
                  |%1';
                  |en = 'Не удалось извлечь настройки заполнения отчета из текста:
                  |%1'", ОбщегоНазначения.КодОсновногоЯзыка()),
			Настройки);
		
		ЗаписьЖурналаРегистрации(
			Метаданные.РегистрыСведений.НастройкиЗаполненияБухгалтерскойОтчетности.Представление(),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыСведений.НастройкиЗаполненияБухгалтерскойОтчетности,
			, // Данные
			Комментарий);
		
	КонецПопытки;
	
	Возврат ЗначениеПоУмолчанию;
	
КонецФункции

#КонецОбласти

#КонецЕсли
