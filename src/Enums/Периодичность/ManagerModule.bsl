#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//++ НЕ УТ

#Область ПрограммныйИнтерфейс

// Возвращает упорядоченный массив периодичностей.
//
// Возвращаемое значение:
// 	 Массив, ТаблицаЗначений - периодичности от "мелкой" к "крупной"
//
// Параметры:
// 	 ВозвращатьВВидеТаблицы - Булево - Если Истина, то возвращает таблицу значений
//
Функция УпорядоченныеПериодичности(ВозвращатьВВидеТаблицы = Ложь) Экспорт
	
	Периодичности = БюджетнаяОтчетностьКлиентСервер.УпорядоченныеПериодичности();
	
	Если ВозвращатьВВидеТаблицы Тогда
		ТаблицаПериодичности = Новый ТаблицаЗначений;
		ТаблицаПериодичности.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число"));
		ТаблицаПериодичности.Колонки.Добавить("Периодичность", Новый ОписаниеТипов("ПеречислениеСсылка.Периодичность"));
		Для Каждого Периодичность из Периодичности Цикл
			НоваяСтрокаПериодичность = ТаблицаПериодичности.Добавить();
			НоваяСтрокаПериодичность.Периодичность = Периодичность;
			НоваяСтрокаПериодичность.Порядок = ТаблицаПериодичности.Индекс(НоваяСтрокаПериодичность);
		КонецЦикла;
		Периодичности = ТаблицаПериодичности;
	КонецЕсли;
	
	Возврат Периодичности;
	
КонецФункции

// Возвращает количество подпериодов в периоде
//
// Параметры:
// 	Периодичность - ПеречислениеСсылка.Периодичность - Периодичность, для которой определяется количество подпериодов
// 	ПериодичностьПодПериодов - ПеречислениеСсылка.Периодичность - Периодичность, количество периодов которой надо найти
// 
// Возвращаемое значение:
// 	 Число - Найденное количество периодов
//
Функция КоличествоПериодов(Периодичность, ПериодичностьПодПериодов) Экспорт
	
	Таблица = СоотношениеПериодов();
	КоличествоПериодов = 0;
	
	Строки = Таблица.НайтиСтроки(Новый Структура("Периодичность, ПериодичностьПодПериодов", Периодичность, ПериодичностьПодПериодов));
	Если НЕ Строки.Количество() = 0 Тогда
		КоличествоПериодов = Строки[0].КоличествоПериодов;
	КонецЕсли;
	
	Если КоличествоПериодов = 0 Тогда
		ТекстОшибки = НСтр("ru = 'В нефинансовом показателе указаны некорректные значения периодичностей основного и вложенного периодов';
							|en = 'Non-financial item shows incorrect frequency values for the main and nested period'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Возврат КоличествоПериодов;
	
КонецФункции

Функция СоотношениеПериодов()
	
	// Генерация таблицы СоотношениеПериодов. Количество периодов указывается нормативно
	// (без учета високосного года), т.к. значение нефинансового показателя может действовать на следующие периоды,
	// пока не будет введено новое значение.
	
	СоотношениеПериодов = Новый ТаблицаЗначений;
	СоотношениеПериодов.Колонки.Добавить("Периодичность", Новый ОписаниеТипов("ПеречислениеСсылка.Периодичность"));
	СоотношениеПериодов.Колонки.Добавить("ПериодичностьПодПериодов", Новый ОписаниеТипов("ПеречислениеСсылка.Периодичность"));
	СоотношениеПериодов.Колонки.Добавить("КоличествоПериодов", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 0, ДопустимыйЗнак.Неотрицательный)));
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Год;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Полугодие;
	СтрокаСоотношения.КоличествоПериодов       = 2;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Год;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Квартал;
	СтрокаСоотношения.КоличествоПериодов       = 4;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Год;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Месяц;
	СтрокаСоотношения.КоличествоПериодов       = 12;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Год;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Декада;
	СтрокаСоотношения.КоличествоПериодов       = 36;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Год;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Неделя;
	СтрокаСоотношения.КоличествоПериодов       = 53;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Год;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.День;
	СтрокаСоотношения.КоличествоПериодов       = 365;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Полугодие;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Квартал;
	СтрокаСоотношения.КоличествоПериодов       = 2;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Полугодие;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Месяц;
	СтрокаСоотношения.КоличествоПериодов       = 6;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Полугодие;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Декада;
	СтрокаСоотношения.КоличествоПериодов       = 18;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Полугодие;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Неделя;
	СтрокаСоотношения.КоличествоПериодов       = 27;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Полугодие;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.День;
	СтрокаСоотношения.КоличествоПериодов       = 184;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Квартал;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Месяц;
	СтрокаСоотношения.КоличествоПериодов       = 3;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Квартал;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Декада;
	СтрокаСоотношения.КоличествоПериодов       = 9;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Квартал;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Неделя;
	СтрокаСоотношения.КоличествоПериодов       = 14;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Квартал;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.День;
	СтрокаСоотношения.КоличествоПериодов       = 92;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Месяц;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Декада;
	СтрокаСоотношения.КоличествоПериодов       = 3;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Месяц;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Неделя;
	СтрокаСоотношения.КоличествоПериодов       = 5;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Месяц;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.День;
	СтрокаСоотношения.КоличествоПериодов       = 31;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Декада;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.Неделя;
	СтрокаСоотношения.КоличествоПериодов       = 2;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Декада;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.День;
	СтрокаСоотношения.КоличествоПериодов       = 10;
	
	СтрокаСоотношения = СоотношениеПериодов.Добавить();
	СтрокаСоотношения.Периодичность            = Перечисления.Периодичность.Неделя;
	СтрокаСоотношения.ПериодичностьПодПериодов = Перечисления.Периодичность.День;
	СтрокаСоотношения.КоличествоПериодов       = 7;
	
	Возврат СоотношениеПериодов;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Сценарий") Тогда
		
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Новый СписокЗначений;
		
		Сценарии = Новый Массив;
		Сценарии.Добавить(Параметры.Сценарий);
		Если Параметры.Свойство("СценарийДляСравнения") Тогда
			Сценарии.Добавить(Параметры.СценарийДляСравнения);
		КонецЕсли;
		
		ПериодичностиСценариев = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сценарии, "Периодичность");
		ПериодичностиПоПорядку = УпорядоченныеПериодичности();
		
		ИндексДляОтбора = 0;
		Для каждого Элемент Из ПериодичностиСценариев Цикл
			
			Индекс = ПериодичностиПоПорядку.Найти(Элемент.Значение);
			Если Индекс > ИндексДляОтбора Тогда
				ИндексДляОтбора = Индекс;
			КонецЕсли;
			
		КонецЦикла;
		
		Для Индекс = ИндексДляОтбора По ПериодичностиПоПорядку.Количество() - 1 Цикл
			ДанныеВыбора.Добавить(ПериодичностиПоПорядку.Получить(Индекс));
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

//-- НЕ УТ

#КонецЕсли