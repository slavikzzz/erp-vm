#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Возвращает типы запасов, по которым не требуется контролировать остатки товаров организаций
// 
// Возвращаемое значение:
//  Массив - массив элементов типа ПеречислениеСсылка.ТипыЗапасов
//
Функция НеконтролируемыеПоТоварамОрганизацииТипыЗапасов() Экспорт
	
	ТипыЗапасов = Новый Массив;
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварВПути);
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке);
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Услуга);
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.АгентскаяУслуга);
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажиПереданный);
	
	Возврат ТипыЗапасов;
	
КонецФункции

// Возвращает типы запасов, которые нужно контролировать на остатках организаций.
// 
// Возвращаемое значение:
//  Массив - массив элементов типа ПеречислениеСсылка.ТипыЗапасов
//
Функция КонтролируемыеТипыЗапасов() Экспорт
	
	КонтролируемыеТипыЗапасов = Новый Массив;
	КонтролируемыеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
	КонтролируемыеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.КомиссионныйТовар);
	КонтролируемыеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
	//++ НЕ УТ
	КонтролируемыеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.ПродукцияПереработчика);
	//++ НЕ УТКА
	КонтролируемыеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.МатериалДавальца);
	КонтролируемыеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.ПолуфабрикатДавальца);
	КонтролируемыеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.ПродукцияДавальца);
	//-- НЕ УТКА

	//-- НЕ УТ
	Возврат КонтролируемыеТипыЗапасов;
	
КонецФункции

// Возвращает типы запасов, владельцы которых не содержатся в справочнике Организации.
// 
// Возвращаемое значение:
//  Массив - массив элементов типа ПеречислениеСсылка.ТипыЗапасов
//
Функция ТипыЗапасовВнешнийВладелец() Экспорт
	
	ТипыЗапасовВнешнийВладелец = Новый Массив;
	ТипыЗапасовВнешнийВладелец.Добавить(Перечисления.ТипыЗапасов.КомиссионныйТовар);
	//++ НЕ УТКА
	ТипыЗапасовВнешнийВладелец.Добавить(Перечисления.ТипыЗапасов.МатериалДавальца);
	ТипыЗапасовВнешнийВладелец.Добавить(Перечисления.ТипыЗапасов.ПолуфабрикатДавальца);
	ТипыЗапасовВнешнийВладелец.Добавить(Перечисления.ТипыЗапасов.ПродукцияДавальца);
	//-- НЕ УТКА
	ТипыЗапасовВнешнийВладелец.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
	ТипыЗапасовВнешнийВладелец.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажиПереданный);
	ТипыЗапасовВнешнийВладелец.Добавить(Перечисления.ТипыЗапасов.АгентскаяУслуга);
	Возврат ТипыЗапасовВнешнийВладелец;
	
КонецФункции

// Возвращает типы запасов, владельцем которых является наша организация.
// 
// Возвращаемое значение:
//  Массив - массив элементов типа ПеречислениеСсылка.ТипыЗапасов
//
Функция ТипыЗапасовСобственные() Экспорт
	
	ТипыЗапасовСобственные = Новый Массив();
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Товар);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварВПути);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Услуга);
	//++ НЕ УТ
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.ПродукцияПереработчика);
	//-- НЕ УТ
	
	Возврат ТипыЗапасовСобственные;
	
КонецФункции

// Получает представление значения перечисления
//
// Параметры:
//  Значение - ПеречислениеСсылка.ТипыЗапасов 
//  КодЯзыка - Строка - необязательный
// 
// Возвращаемое значение:
//  Строка 
//
Функция ПредставлениеНаЯзыке(Значение, КодЯзыка = Неопределено) Экспорт
	
	Представление = "";
	
	Если Значение = Перечисления.ТипыЗапасов.Товар Тогда
		Представление = НСтр("ru = 'Собственный товар';
							|en = 'Own goods'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
		Представление = НСтр("ru = 'Комиссионный товар';
							|en = 'Consignment goods'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.Услуга Тогда
		Представление = НСтр("ru = 'Работа (Услуга)';
							|en = 'Operation (Service)'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.МатериалДавальца Тогда
		Представление = НСтр("ru = 'Материал давальца';
							|en = 'Material of the material provider'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.ПолуфабрикатДавальца Тогда
		Представление = НСтр("ru = 'Полуфабрикат давальца';
							|en = 'Semi-finished product of material provider'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.ПродукцияДавальца Тогда
		Представление = НСтр("ru = 'Продукция давальца';
							|en = 'Products of the material provider'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.АгентскаяУслуга Тогда
		Представление = НСтр("ru = 'Агентская услуга';
							|en = 'Agent service'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи Тогда
		Представление = НСтр("ru = 'Товар на хранении с правом продажи';
							|en = 'Goods at storage with the right of sale'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.СобственныйТоварВПути Тогда
		Представление = НСтр("ru = 'Собственный товар в пути';
							|en = 'Own goods in transit'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке Тогда
		Представление = НСтр("ru = 'Собственный товар по неотфактурованной поставке';
							|en = 'In-house goods received not invoiced'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажиПереданный Тогда
		Представление = НСтр("ru = 'Товар на хранении с правом продажи переданный';
							|en = 'The goods stored with the right of sale transferred'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.ПродукцияПереработчика Тогда
		Представление = НСтр("ru = 'Продукция переработчика';
							|en = 'Subcontractor products'", КодЯзыка);
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции



#КонецОбласти

#КонецЕсли