#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает имя формы, соответствующее значению перечисления для настройки.
//
// Параметры:
//  ТипДействия - ПеречислениеСсылка.ТипыДействийЭтаповПодготовкиБюджетов - Действие, для которого определяется форма настройки.
//
// Возвращаемое значение:
//   Строка   - Имя формы.
//
Функция ИмяФормы(ТипДействия) Экспорт
	
	Возврат "Перечисление.ТипыДействийЭтаповПодготовкиБюджетов.Форма." + 
						ОбщегоНазначения.ИмяЗначенияПеречисления(ТипДействия);
		
КонецФункции

// Возвращает таблицу значений, заполненную настройками действия.
//
// Параметры:
//  Форма  - ФормаКлиентскогоПриложения - форма, где пользователь указывал настройки.
//
// Возвращаемое значение:
//   ТаблицаЗначений - сформированные настройки.
//
Функция НастройкиДействия(Форма) Экспорт
	
	РеквизитыНастроек = РеквизитыПоТипуДействия(Форма, ТипДействия(Форма.ИмяФормы), Форма.МодельБюджетирования);
	
	Настройки = Новый ТаблицаЗначений;
	Настройки.Колонки.Добавить("Имя");
	Настройки.Колонки.Добавить("Значение");
	Настройки.Колонки.Добавить("Представление");
	
	РеквизитыФормы = Форма.ПолучитьРеквизиты();
	Для каждого РеквизитНастройки Из РеквизитыНастроек Цикл
		Для каждого РеквизитФормы Из РеквизитыФормы Цикл
			Если РеквизитФормы.Имя <> РеквизитНастройки Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = Настройки.Добавить();
			НоваяСтрока.Имя = РеквизитФормы.Имя;
			Если ТипЗнч(Форма[РеквизитФормы.Имя]) = Тип("ДанныеФормыКоллекция") Тогда
				НоваяСтрока.Значение = Форма.РеквизитФормыВЗначение(РеквизитФормы.Имя);
			Иначе
				НоваяСтрока.Значение = Форма[РеквизитФормы.Имя];
			КонецЕсли;
			НоваяСтрока.Представление = РеквизитФормы.Заголовок;
			Прервать;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Настройки;
	
КонецФункции

// Процедура заполняет реквизиты формы на основании переданной таблицы значений с настройками.
//
// Параметры:
//  Настройки  - ТаблицаЗначений - таблица, сохраненная в шаге процесса или в задаче.
//  Форма - ФормаКлиентскогоПриложения - форма, в реквизиты которой требуется восстановить настройки.
//
Процедура ВосстановитьНастройкиДействия(Настройки, Форма) Экспорт
	
	Реквизиты = Форма.ПолучитьРеквизиты();
	Для Каждого Реквизит Из Реквизиты Цикл
		Если Реквизит.Имя = "Адрес" ИЛИ Реквизит.Имя = "АдресАналитикаЗаполненияБюджета" 
			Или Реквизит.Имя = "ЭтапПодготовкиБюджетов" Или Реквизит.Имя = "МодельБюджетирования" Тогда 
			Продолжить;
		КонецЕсли;
		Элемент = Настройки.Найти(Реквизит.Имя, "Имя");
		Если Элемент <> Неопределено И Реквизит.ТипЗначения.СодержитТип(ТипЗнч(Элемент.Значение)) Тогда
			Если ТипЗнч(Форма[Реквизит.Имя]) = Тип("ДанныеФормыКоллекция") Тогда
				Форма.ЗначениеВРеквизитФормы(Элемент.Значение, Реквизит.Имя);
			Иначе 
				Форма[Реквизит.Имя] = Элемент.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Функция возвращает представление настроек для отображения на форме бюджетной задачи или шага процесса.
//
// Параметры:
//  НастройкиДействия - ТаблицаЗначений - настройки действия, для которых требуется определить представление:
//		*Имя - Строка - Содержит имя настройки.
//		*Значение - Содержит значение настройки.
//
// Возвращаемое значение:
//   Строка - имя настроек.
//
Функция ПолучитьПредставлениеДействия(Знач НастройкиДействия) Экспорт

	Результат = "";
	
	Если НастройкиДействия.Количество() = 0 Тогда
		Результат = НСтр("ru = '<Настройки действия не заданы>';
						|en = '<Settings actions are not specified>'");
		Возврат Результат;
	КонецЕсли;
	
	ВидыБюджетов = Неопределено;
	Отбор = Новый Структура();
	Отбор.Вставить("Имя","ВидыБюджетов");
	Строки = НастройкиДействия.НайтиСтроки(Отбор);
	Если Строки.Количество() > 0 Тогда
		ВидыБюджетов = Строки[0].Значение;
		Если ТипЗнч(ВидыБюджетов) <> Тип("ТаблицаЗначений") Тогда
			ВидыБюджетов = Неопределено;
		КонецЕсли;
	КонецЕсли;

	Шаблон = НСтр("ru = '%1: %2';
					|en = '%1: %2'");
	
	ПредставленияИзмерений = Новый Соответствие;
	
	ИмяИзмерения = "Организация";
	ПредставленияИзмерений.Вставить(ИмяИзмерения,
		БюджетнаяОтчетностьКлиентСервер.ПредставлениеИзмеренияБюджетирования(ИмяИзмерения));
	ИмяИзмерения = "Подразделение";
	ПредставленияИзмерений.Вставить(ИмяИзмерения,
		БюджетнаяОтчетностьКлиентСервер.ПредставлениеИзмеренияБюджетирования(ИмяИзмерения));
	ИмяИзмерения = "Сценарий";
	ПредставленияИзмерений.Вставить(ИмяИзмерения,
		БюджетнаяОтчетностьКлиентСервер.ПредставлениеИзмеренияБюджетирования(ИмяИзмерения));
	 
	Если ЗначениеЗаполнено(ВидыБюджетов) Тогда

		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон,
				НСтр("ru = 'Вид бюджета';
					|en = 'Budget profile'"),
				ВидыБюджетов[0].ВидБюджета);
		Результат = Результат + ?(ЗначениеЗаполнено(Результат), ", ", "") + Текст;
		
		НастройкиАналитик = Неопределено;
		
		Отбор = Новый Структура();
		Отбор.Вставить("Имя","АналитикаЗаполненияБюджета");
		Строки = НастройкиДействия.НайтиСтроки(Отбор);
		Если Строки.Количество() > 0
		   И ТипЗнч(Строки[0].Значение) = Тип("ТаблицаЗначений")
		   И Строки[0].Значение.Количество() > 0 Тогда
			
			НастройкиАналитик = Строки[0].Значение; // ТаблицаЗначений -
			НастройкаАналитик = НастройкиАналитик[0];
			
			РеквизитыБюджета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидыБюджетов[0].ВидБюджета, "АналитикиШапки").Выгрузить();
			
			ТекстАналитикиДляРедактирования = "";
			ОписаниеТипаЧисло = Новый ОписаниеТипов("Число");
			Для каждого Колонка Из НастройкиАналитик.Колонки Цикл
				
				Если Колонка.Имя = "КлючСтроки" Тогда
					Продолжить;
				КонецЕсли;
				
				Если Найти(Колонка.Имя, "Доступность") > 0 Тогда
					Если НастройкаАналитик[Колонка.Имя] = Истина Тогда
						ИмяКолонки = СтрЗаменить(Колонка.Имя,"Доступность","");
						НомерАналитики = ОписаниеТипаЧисло.ПривестиЗначение(СтрЗаменить(Колонка.Имя,"ДоступностьАналитика",""));
						Если НомерАналитики > 0 Тогда
							ПредставлениеАналитики = Строка(РеквизитыБюджета[НомерАналитики - 1].ВидАналитики);
						Иначе
							ПредставлениеАналитики = ПредставленияИзмерений.Получить(ИмяКолонки);
							Если ПредставлениеАналитики = Неопределено Тогда
								ПредставлениеАналитики = ИмяКолонки;
							КонецЕсли;		
						КонецЕсли;
						ТекстАналитикиДляРедактирования = ТекстАналитикиДляРедактирования + 
							?(ЗначениеЗаполнено(ТекстАналитикиДляРедактирования), ", ", "") + ПредставлениеАналитики; 
					КонецЕсли;
					Продолжить;
				КонецЕсли;
					
				Если ЗначениеЗаполнено(НастройкаАналитик[Колонка.Имя]) Тогда
					КолонкаИмя = Колонка.Имя;
					ПредставлениеКолонки = "";
					Сч = 1;
					Пока Сч <= РеквизитыБюджета.Количество() Цикл
						Если Колонка.Имя = "Аналитика"+Сч Тогда
							ПредставлениеКолонки = Строка(РеквизитыБюджета[Сч - 1].ВидАналитики);
							Прервать;
						КонецЕсли;
						Сч = Сч + 1;
					КонецЦикла;
					Если ПустаяСтрока(ПредставлениеКолонки) Тогда
						ПредставлениеКолонки = ПредставленияИзмерений.Получить(КолонкаИмя);
						Если ПредставлениеКолонки = Неопределено Тогда
							ПредставлениеКолонки = КолонкаИмя;
						КонецЕсли;
					КонецЕсли;
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон,
							ПредставлениеКолонки,
							НастройкаАналитик[Колонка.Имя]);
					Результат = Результат + ?(ЗначениеЗаполнено(Результат), ", ", "") + Текст;
				КонецЕсли;
				
			КонецЦикла;
			Если ЗначениеЗаполнено(ТекстАналитикиДляРедактирования) Тогда
				СоединяемыеСтроки = Новый Массив;
				СоединяемыеСтроки.Добавить(Результат + ",");
				СоединяемыеСтроки.Добавить(НСтр("ru = 'Разрешено для редактирования:';
												|en = 'Allowed for editing:'"));
				СоединяемыеСтроки.Добавить(ТекстАналитикиДляРедактирования);
				Результат = СтрСоединить(СоединяемыеСтроки, " ");
			КонецЕсли;
		КонецЕсли;
		
		КоличествоНастроек = 0;
		ВесНастройки = Новый Соответствие;
		Если НастройкиАналитик <> Неопределено Тогда
			НастройкиАналитикКопия = НастройкиАналитик.Скопировать(,"КлючСтроки");
			НастройкиАналитикКопия.Колонки.Добавить("Вес");
			НастройкиАналитикКопия.ЗаполнитьЗначения(1,"Вес");
			НастройкиАналитикКопия.Свернуть("КлючСтроки","Вес");
			Для Каждого Стр Из НастройкиАналитикКопия Цикл
				ВесНастройки.Вставить(Стр.КлючСтроки,Стр.Вес);
			КонецЦикла;
		КонецЕсли;
		Для каждого Стр Из ВидыБюджетов Цикл
			ВесСтроки =  ВесНастройки.Получить(Стр.КлючСтрокиНастройкиАналитики);
			Если ВесСтроки = Неопределено Тогда
				ВесСтроки = 1;
			КонецЕсли;
			КоличествоНастроек = КоличествоНастроек + ВесСтроки;
		КонецЦикла;
		
		Если КоличествоНастроек > 1 Тогда
			Результат = Результат + " " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'и еще видов бюджетов (%1)';
				|en = 'and more budget profiles (%1)'"),КоличествоНастроек - 1);
		КонецЕсли;
				
	Иначе
	
		Для каждого Настройка Из НастройкиДействия Цикл
			Если Не ЗначениеЗаполнено(Настройка.Значение) Тогда
				Продолжить;
			КонецЕсли;
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон,
					Настройка.Представление,
					Настройка.Значение);
			
			Результат = Результат + ?(ЗначениеЗаполнено(Результат), ", ", "") + Текст;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат; 
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТипДействия(ИмяФормы)
	
	ИмяФормыСокращенное = Метаданные.НайтиПоПолномуИмени(ИмяФормы).Имя;
	ТипДействия = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов[ИмяФормыСокращенное];
	Возврат ТипДействия;
	
КонецФункции

Функция ПолучитьПоляШапки(Ссылка) Экспорт
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.НефинансовыеПоказателиБюджетов") И НЕ Ссылка.Пустая() Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ПоОрганизациям, ПоПодразделениям, ПоСценариям");
		Возврат Реквизиты;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ШаблоныВводаНефинансовыхПоказателей")  И НЕ Ссылка.Пустая() Тогда
		ПараметрыПериода = Новый Структура("НачалоПериода, ОкончаниеПериода",
											НачалоГода(ТекущаяДатаСеанса()), КонецГода(ТекущаяДатаСеанса()));
		
		СтруктураОписанияВвода = Документы.УстановкаЗначенийНефинансовыхПоказателей.СтруктураОписанияПолейДокументаВвода(
				Перечисления.ВидыОперацийУстановкиЗначенийНефинансовыхПоказателей.ВводЗначенийПоШаблону, Неопределено, Ссылка,
					ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ЗначенияСложнойТаблицыПоУмолчанию"), ПараметрыПериода);
		
		Результат = Новый Структура("ПоОрганизациям, ПоПодразделениям, ПоСценариям", Ложь, Ложь, Ложь);
		Если СтруктураОписанияВвода <> Неопределено Тогда
			Для Каждого ЭлементМассива Из СтруктураОписанияВвода.ЛеваяКолонка Цикл
				Если ЭлементМассива.Имя = "Сценарий" Тогда
					Результат.ПоСценариям = Истина;
				ИначеЕсли ЭлементМассива.Имя = "Организация" Тогда
					Результат.ПоОрганизациям = Истина;
				ИначеЕсли ЭлементМассива.Имя = "Подразделение" Тогда
					Результат.ПоПодразделениям = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Возврат Результат;
		
	Иначе
		Возврат Новый Структура("ПоОрганизациям, ПоПодразделениям, ПоСценариям", Ложь, Ложь, Ложь);
		
	КонецЕсли;
		
КонецФункции

Функция РеквизитыПоТипуДействия(Форма, ТипДействия, МодельБюджетирования) Экспорт
	
	ПараметрыФО = Новый Структура("МодельБюджетирования", МодельБюджетирования);
	Если ТипДействия = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.ВводБюджетов Тогда
		Реквизиты = Новый Массив;
		Реквизиты.Добавить("ВидыБюджетов");
		Реквизиты.Добавить("АналитикаЗаполненияБюджета");
	ИначеЕсли ТипДействия = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.ВводПлана Тогда
		Реквизиты = Новый Массив;
		Реквизиты.Добавить("ТипПлана");
		Реквизиты.Добавить("Сценарий");
		Реквизиты.Добавить("ВидПлана");
		Реквизиты.Добавить("СтатьяБюджетов");
	ИначеЕсли ТипДействия = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.УстановкаЗначенийНефинансовыхПоказателей Тогда
		Реквизиты = Новый Массив;
		Реквизиты.Добавить("ВидОперации");
		Если Форма.ВидОперации = Перечисления.ВидыОперацийУстановкиЗначенийНефинансовыхПоказателей.ВводЗначенийПоШаблону Тогда
			РеквизитыНастроек = ПолучитьПоляШапки(Форма.ШаблонВвода);
			Реквизиты.Добавить("ШаблонВвода");
		Иначе
			РеквизитыНастроек = ПолучитьПоляШапки(Форма.НефинансовыйПоказатель);
			Реквизиты.Добавить("НефинансовыйПоказатель");
		КонецЕсли;
		Если РеквизитыНастроек.ПоОрганизациям Тогда
			Реквизиты.Добавить("Организация");
		КонецЕсли;
		Если РеквизитыНастроек.ПоПодразделениям Тогда
			Реквизиты.Добавить("Подразделение");
		КонецЕсли;
		Если РеквизитыНастроек.ПоСценариям Тогда
			Реквизиты.Добавить("Сценарий");
		КонецЕсли;
	ИначеЕсли ТипДействия = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.УтверждениеБюджетов Тогда
		Реквизиты = Новый Массив;
		Реквизиты.Добавить("УтверждаемыеЭтапыПодготовкиБюджетов");
	ИначеЕсли ТипДействия = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.ПовторГруппыЭтапов Тогда
		Реквизиты = Новый Массив;
		Реквизиты.Добавить("ГруппаШагов");
		Реквизиты.Добавить("Сценарий");
		Если ПолучитьФункциональнуюОпцию("ФормироватьБюджетыПоОрганизациям", ПараметрыФО) Тогда
			Реквизиты.Добавить("Организация");
		КонецЕсли;
		Если ПолучитьФункциональнуюОпцию("ФормироватьБюджетыПоПодразделениям", ПараметрыФО) Тогда
			Реквизиты.Добавить("Подразделение");
		КонецЕсли;
	ИначеЕсли ТипДействия = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.Прочее Тогда
		Реквизиты = Новый Массив;
	ИначеЕсли ТипДействия = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.УстановкаЛимитовРасходаДС Тогда
		Реквизиты = Новый Массив;
		Если ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредствПоОрганизациям") Тогда
			Реквизиты.Добавить("Организация");
		КонецЕсли;
		Если ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредствПоПодразделениям") Тогда
			Реквизиты.Добавить("Подразделение");
		КонецЕсли;
	Иначе
		ВызватьИсключение НСтр("ru = 'Неизвестное действие этапа подготовки бюджетов';
								|en = 'Unknown action in budgeting step'")
	КонецЕсли;
	
	Возврат Реквизиты;
	
КонецФункции

#КонецОбласти

#КонецЕсли

