#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция ТекстФункции(ИмяЗначения) Экспорт
	
	Менеджер = Перечисления.ВидыФормулБюджетирования;
	Значение = Менеджер[ИмяЗначения];
	Если Значение = Менеджер.Максимум
		ИЛИ Значение = Менеджер.Минимум
		ИЛИ Значение = Менеджер.Сумма
		ИЛИ Значение = Менеджер.Среднее
		Тогда
		
		Возврат ИмяФункции(Значение)
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"(%1, %2, , %3)",
				НСтр("ru = '<Значение 1>';
					|en = '<Value 1>'"),
				НСтр("ru = '<Значение 2>';
					|en = '<Value 2>'"),
				НСтр("ru = '<Значение N>';
					|en = '<Value N>'"));
		
	ИначеЕсли Значение = Менеджер.Отклонение 
		ИЛИ Значение = Менеджер.ОтклонениеПроцент
		ИЛИ Значение = Менеджер.ВыполнениеПроцент Тогда
		
		Возврат ИмяФункции(Значение)
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"(%1, %2, , %3)",
				НСтр("ru = '<Ведущая колонка>';
					|en = '<Leading column>'"),
				НСтр("ru = '<Сравниваемая колонка 1>';
					|en = '<Comparable column 1>'"),
				НСтр("ru = '<Сравниваемая колонка N>';
					|en = '<Comparable column N>'"));
		
	ИначеЕсли Значение = Менеджер.Округлить Тогда
		
		Возврат ИмяФункции(Значение)
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"(%1, %2)",
				НСтр("ru = '<Значение>';
					|en = '<Value>'"),
				НСтр("ru = '<Число знаков>';
					|en = '<Number of symbols>'"));
		
	ИначеЕсли Значение = Менеджер.Итог Тогда
		
		Возврат ИмяФункции(Значение)
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"(%1, %2)",
				НСтр("ru = '<Значение>';
					|en = '<Value>'"),
				НСтр("ru = '<Направление>';
					|en = '<Direction>'"));
		
	ИначеЕсли Значение = Менеджер.РазностьДат Тогда
		
		ПеременныеПериодов = БюджетнаяОтчетностьКлиентСервер.ПеременныеПериодовБюджетирования();
		ТекстФункции = ИмяФункции(Значение)
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"(%1, %2, ""Месяц"")",
				ПеременныеПериодов.НачалоПериодаДанных.Имя,
				ПеременныеПериодов.КонецПериодаДанных.Имя);
		
		Возврат ТекстФункции;
		
	Иначе 
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Неизвестная функция: %1';
				|en = 'Unknown function: %1'"),
			ИмяЗначения);
	КонецЕсли;
	
КонецФункции

Функция ИмяФункции(Значение) Экспорт
	
	Менеджер = Перечисления.ВидыФормулБюджетирования;
	Если Значение = Менеджер.Максимум Тогда
		Возврат "МАКСИМУМ";
	ИначеЕсли Значение = Менеджер.Минимум Тогда
		Возврат "МИНИМУМ";
	ИначеЕсли Значение = Менеджер.Сумма Тогда
		Возврат "СУММА";
	ИначеЕсли Значение = Менеджер.Среднее Тогда
		Возврат "СРЕДНЕЕ";
	ИначеЕсли Значение = Менеджер.Отклонение Тогда
		Возврат "ОТКЛОНЕНИЕ";
	ИначеЕсли Значение = Менеджер.ОтклонениеПроцент Тогда
		Возврат "ПРОЦЕНТОТКЛОНЕНИЯ";
	ИначеЕсли Значение = Менеджер.ВыполнениеПроцент Тогда
		Возврат "ПРОЦЕНТВЫПОЛНЕНИЯ";
	ИначеЕсли Значение = Менеджер.Округлить Тогда
		Возврат "ОКРУГЛИТЬ";
	ИначеЕсли Значение = Менеджер.Итог Тогда
		Возврат "ИТОГ";
	ИначеЕсли Значение = Менеджер.РазностьДат Тогда
		Возврат "РАЗНОСТЬДАТ";
	Иначе 
		ВызватьИсключение "Неизвестная функция: " + Значение;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Менеджер = Перечисления.ВидыФормулБюджетирования;
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.Добавить(Менеджер.Сумма);
	ДанныеВыбора.Добавить(Менеджер.Отклонение);
	ДанныеВыбора.Добавить(Менеджер.ОтклонениеПроцент);
	ДанныеВыбора.Добавить(Менеджер.ВыполнениеПроцент);
	ДанныеВыбора.Добавить(Менеджер.Среднее);
	ДанныеВыбора.Добавить(Менеджер.Максимум);
	ДанныеВыбора.Добавить(Менеджер.Минимум);
	
КонецПроцедуры

#КонецОбласти
