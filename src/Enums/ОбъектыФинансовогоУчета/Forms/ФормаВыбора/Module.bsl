#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	СкрыватьНесобственныеЦенности = Параметры.СкрыватьНесобственныеЦенности;
	
	НастройкиПроводок = Справочники.НастройкиФормированияПроводокМеждународногоУчета.НастройкиФормированияПроводок(
		Параметры.НастройкаФормированияПроводок);
	
	ОбщегоНазначения.ЗаполнитьКоллекциюЭлементовДереваДанныхФормы(
		ДеревоОбъектовУчета.ПолучитьЭлементы(),
		Перечисления.ОбъектыФинансовогоУчета.ДеревоОбъектовУчета(НастройкиПроводок, Ложь));
	
	РегистрыНакопленияМетаданные = Метаданные.РегистрыНакопления;
	
	Для каждого Группа Из ДеревоОбъектовУчета.ПолучитьЭлементы() Цикл
		Для каждого СтрокаОбъектУчета Из Группа.ПолучитьЭлементы() Цикл
			Если СтрокаОбъектУчета.ОбъектУчета = Параметры.ТекущаяСтрока Тогда
				Элементы.ДеревоОбъектовУчета.ТекущаяСтрока = СтрокаОбъектУчета.ПолучитьИдентификатор();
			КонецЕсли;
			
			МетаданныеРегистра = РегистрыНакопленияМетаданные.Найти(СтрокаОбъектУчета.ИсточникДанных);
			Если МетаданныеРегистра <> Неопределено Тогда
				СтрокаОбъектУчета.ИсточникДанныхПредставление = МетаданныеРегистра.Синоним;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыДеревоОбъектовУчета

&НаКлиенте
Процедура ДеревоОбъектовУчетаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = ДеревоОбъектовУчета.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ОповеститьОВыборе(ТекущиеДанные.ОбъектУчета);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовУчетаВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ТекущиеДанные = ДеревоОбъектовУчета.НайтиПоИдентификатору(Значение);
	Если ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ОповеститьОВыборе(ТекущиеДанные.ОбъектУчета);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоОбъектовУчета.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоОбъектовУчетаЭтоГруппа.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоОбъектовУчетаПредставление.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоОбъектовУчетаИсточникДанныхПредставление.Имя);
	
	ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоОбъектовУчета.НесобственныеЦенности");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СкрыватьНесобственныеЦенности");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

#КонецОбласти
