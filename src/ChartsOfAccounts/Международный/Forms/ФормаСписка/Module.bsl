
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПланСчетов = Параметры.ПланСчетов;
	Если Параметры.Отбор.Свойство("ПланСчетов") И ЗначениеЗаполнено(Параметры.Отбор.ПланСчетов) Тогда
		ПланСчетов = Параметры.Отбор.ПланСчетов;
		Параметры.Отбор.Удалить("ПланСчетов");
		Элементы.ПланСчетов.Доступность = Ложь;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ПланСчетов) Тогда
		ПланСчетов = Справочники.ПланыСчетовМеждународногоУчета.ПланСчетовПоУмолчанию();
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ПланСчетов", ПланСчетов);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПланСчетов", ПланСчетов);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Актив", НСтр("ru = 'Актив';
																							|en = 'Asset'"));
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Пассив", НСтр("ru = 'Пассив';
																								|en = 'Liability'"));
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "АктивПассив", НСтр("ru = 'Актив/Пассив';
																									|en = 'Asset/Liability'"));
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ТолькоОбороты", " ("+НСтр("ru = 'об';
																											|en = 'turn'")+")");
	
	Элементы.УчетПоНаправлениямДеятельности.Видимость = Справочники.НаправленияДеятельности.ИспользуетсяУчетПоНаправлениям();
	
	ДоступноИзменениеПланаСчетов = ПравоДоступа("Изменение", Метаданные.ПланыСчетов.Международный);
	Элементы.Загрузить.Видимость = ДоступноИзменениеПланаСчетов;
	Элементы.Выгрузить.Видимость = ДоступноИзменениеПланаСчетов;

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ПланСчетов", ПланСчетов);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПланСчетов", ПланСчетов);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПланСчетовПриИзменении(Элемент)
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ПланСчетов", ПланСчетов);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПланСчетов", ПланСчетов);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	
	Если Не ПроверитьЗаполнение() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастройкаФормированияПроводокПоОбъектамУчета(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ПланСчетов", ПланСчетов);
	
	ОткрытьФорму("Обработка.НастройкаСчетовМеждународногоУчета.Форма", ПараметрыФормы, ,  ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаФормированияПроводокПоХозяйственнымОперациям(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ПланСчетов", ПланСчетов);
	
	ОткрытьФорму("Обработка.НастройкаШаблоновПроводокДляМеждународногоУчета.Форма.НастройкаШаблоновПроводок", ПараметрыФормы, ,  ЭтотОбъект);
	
КонецПроцедуры


&НаКлиенте
Процедура Загрузить(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ПланСчетов", ПланСчетов);
	
	ОткрытьФорму("Обработка.ПомощникВыгрузкиЗагрузкиПлановСчетов.Форма.Загрузка", ПараметрыФормы, ,  ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ПланСчетов", ПланСчетов);
	
	ОткрытьФорму("Обработка.ПомощникВыгрузкиЗагрузкиПлановСчетов.Форма.Выгрузка", ПараметрыФормы, ,  ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти