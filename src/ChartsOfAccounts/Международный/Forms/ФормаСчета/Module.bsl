

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Объект.Вид = ВидСчета.Активный Тогда
		ВидСчетаПредставление = "1";	
	ИначеЕсли Объект.Вид = ВидСчета.Пассивный Тогда
		ВидСчетаПредставление = "2";	
	ИначеЕсли Объект.Вид = ВидСчета.АктивноПассивный Тогда
		ВидСчетаПредставление = "3";	
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УправлениеЭлементамиФормыПриСоздании();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Элементы.ИсключитьИзРасчетаКурсовыхРазниц.Видимость = Объект.Валютный;
	Элементы.ВидыСубконтоКоличественный.Видимость = Объект.Количественный;
	Элементы.ВидыСубконтоВалютный.Видимость = Объект.Валютный;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СобытияФорм.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВалютныйПриИзменении(Элемент)
	
	Элементы.ИсключитьИзРасчетаКурсовыхРазниц.Видимость = Объект.Валютный;
	Элементы.ВидыСубконтоВалютный.Видимость = Объект.Валютный;
	
КонецПроцедуры

&НаКлиенте
Процедура КодПриИзменении(Элемент)
	
	Объект.Порядок = СокрЛП(СтрЗаменить(Объект.Код, ".", ""));
	
	Объект.КодБыстрогоВыбора = СокрЛП(СтрЗаменить(Объект.Код, ".", ""));
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПриИзменении(Элемент)
		
	СтарыйВидСчета = Объект.Вид;
	
	Если ВидСчетаПредставление = "1" Тогда
		Объект.Вид = ВидСчета.Активный;
	ИначеЕсли ВидСчетаПредставление = "2" Тогда
		Объект.Вид = ВидСчета.Пассивный; 
	ИначеЕсли ВидСчетаПредставление = "3" Тогда
		Объект.Вид = ВидСчета.АктивноПассивный;
	КонецЕсли;
	
	Если СтарыйВидСчета <> Объект.Вид Тогда
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыВидыСубконто

&НаКлиенте
Процедура ВидыСубконтоПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Валютный       = Истина;
		Элемент.ТекущиеДанные.Количественный = Истина;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура КоличественныйПриИзменении(Элемент)
	
	Элементы.ВидыСубконтоКоличественный.Видимость = Объект.Количественный;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
    
    ЗаблокированныеРеквизиты = ЗапретРедактированияРеквизитовОбъектовКлиент.Реквизиты(ЭтотОбъект);
    
    Если ЗаблокированныеРеквизиты.Количество() > 0 Тогда
        ПараметрыФормы = Новый Структура;
        ПараметрыФормы.Вставить("Объект", Объект.Ссылка);
        ПараметрыФормы.Вставить("ЗаблокированныеРеквизиты", ЗаблокированныеРеквизиты);
        
        ОткрытьФорму("ОбщаяФорма.РазблокированиеРеквизитовПлановСчетов", ПараметрыФормы,
            ЭтотОбъект,,,, Новый ОписаниеОповещения("ПослеВыбораРеквизитовДляРазблокирования", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
    Иначе
        ЗапретРедактированияРеквизитовОбъектовКлиент.ПоказатьПредупреждениеВсеВидимыеРеквизитыРазблокированы();
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораРеквизитовДляРазблокирования(РазблокируемыеРеквизиты, Контекст) Экспорт
    
    Если ТипЗнч(РазблокируемыеРеквизиты) <> Тип("Массив") Тогда
        Возврат;
    КонецЕсли;
    
    ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтотОбъект,
        РазблокируемыеРеквизиты);
    
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеЭлементамиФормыПриСоздании()
	
	Элементы.ГруппаРекласс.Видимость = Параметры.ОтображатьПризнакРекласс;
	Элементы.УчетПоНаправлениямДеятельности.Видимость = Справочники.НаправленияДеятельности.ИспользуетсяУчетПоНаправлениям();
	Элементы.ИсключитьИзРасчетаКурсовыхРазниц.Видимость = Объект.Валютный;
	Элементы.ВидыСубконтоКоличественный.Видимость = Объект.Количественный;
	Элементы.ВидыСубконтоВалютный.Видимость = Объект.Валютный;
	
	СпособУчетаНесобственныхЦенностей = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ПланСчетов,
		"СпособУчетаНесобственныхПодконтрольныхЦенностей");
	Элементы.Забалансовый.Видимость = Объект.Забалансовый ИЛИ СпособУчетаНесобственныхЦенностей =
		Перечисления.СпособыУчетаНесобственныхПодконтрольныхЦенностей.ОтражаютсяНаЗабалансовыхСчетах;
	
КонецПроцедуры

#КонецОбласти
