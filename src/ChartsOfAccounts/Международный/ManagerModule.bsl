#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает представление плана в финансовых отчетах
//
// Возвращаемое значение:
// 	Строка - Представление плана счетов в финансовых отчетах
//
Функция ПредставлениеВФинансовыхОтчетах() Экспорт
	
	Возврат НСтр("ru = 'Международный';
				|en = 'International'");
	
КонецФункции

// Возвращает массив счетов с видом субконто заданным в качестве параметра
//
// Параметры:
// 		ВидыСубконто - Массив, ПланВидовХарактеристикСсылка.ВидыСубконтоМеждународные - Массив ссылок или ссылка на субконто, по которому необходимо получить счета.
//
// Возвращаемое значение:
// 		Массив - Массив ссылок <ПланСчетовСсылка.Международный>, поддерживающих субконто заданные параметром функции.
//
Функция СчетаУчетаСВидомСубконто(ВидыСубконто) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Международный.Ссылка
	|ИЗ
	|	ПланСчетов.Международный КАК Международный
	|ГДЕ
	|	Международный.ВидыСубконто.ВидСубконто В(&ВидСубконто)");
	Запрос.УстановитьПараметр("ВидСубконто", ВидыСубконто);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения:
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Истина;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - Ключ - Имя табличной части объекта.
//                               Значение - Выгрузка в таблицу значений пустой табличной части.
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт

	#Область Служебный
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Служебный";
	Элемент.Наименование = НСтр("ru = 'Служебный';
								|en = 'Internal'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ПланСчетов = Справочники.ПланыСчетовМеждународногоУчета.Международный;
	Элемент.Код = "00000";
	Элемент.Порядок = "00000";
	#КонецОбласти

КонецПроцедуры

// Вызывается при начальном заполнении создаваемого элемента.
//
// Параметры:
//  Объект                  - ПланСчетовОбъект.Международный - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения.
//  ДополнительныеПараметры - Структура - Дополнительные параметры.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// См. ЗапретРедактированияРеквизитовОбъектовПереопределяемый.ПриОпределенииОбъектовСЗаблокированнымиРеквизитами
// 
// Возвращаемое значение:
//  Массив из строка - Получить блокируемые реквизиты объекта
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
    Результат.Добавить("ЗапретитьИспользоватьВПроводках");
    Результат.Добавить("Валютный");
    Результат.Добавить("Количественный");
    Результат.Добавить("УчетПоПодразделениям");
    Результат.Добавить("УчетПоНаправлениямДеятельности");
    Результат.Добавить("ВидыСубконто"); 
    
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Код");
	Поля.Добавить("Наименование");
	Поля.Добавить("ПланСчетов");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПредставлениеСчетов = МеждународныйУчетКлиентСерверПовтИсп.ПредставлениеСчетовНаПланеСчетов(Данные.ПланСчетов);
	
	Если ПредставлениеСчетов = Перечисления.ПредставлениеСчетовМеждународногоУчета.ВВидеКода Тогда
		Представление = Данные.Код;
	ИначеЕсли ПредставлениеСчетов = Перечисления.ПредставлениеСчетовМеждународногоУчета.ВВидеНаименования Тогда
		Представление = Данные.Наименование;
	Иначе
		Представление = Данные.Код + ?(ПустаяСтрока(Данные.Наименование), "", " " + Данные.Наименование);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТолькоРазрешенные") И Параметры.ТолькоРазрешенные Тогда
		Параметры.Отбор.Вставить("ЗапретитьИспользоватьВПроводках", Ложь);
	КонецЕсли;
	
	Если Параметры.Свойство("ВидыСубконто") Тогда
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Международный.Ссылка
			|ИЗ
			|	ПланСчетов.Международный КАК Международный
			|ГДЕ
			|	Международный.ВидыСубконто.ВидСубконто В(&ВидСубконто)");
		Запрос.УстановитьПараметр("ВидСубконто", Параметры.ВидыСубконто);
		Результат = Запрос.Выполнить();
		Параметры.Отбор.Вставить("Ссылка", Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Отчеты

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
