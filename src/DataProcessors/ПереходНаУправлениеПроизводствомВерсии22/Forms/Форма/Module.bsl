//++ Устарело_Производство21
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновитьСостояниеШагов();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОбновитьСостояниеШагов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжиданияОбновитьДанные();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ШагОтметкаПустая1Нажатие(Элемент)
	
	ОтметкаШаг1_1 = Истина;
	ОбновитьСостояниеШаговКлиент("1_1");
	
КонецПроцедуры

&НаКлиенте
Процедура ШагОтметка1Нажатие(Элемент)
	
	СброситьОтметки(ЭтаФорма,"1_1");
	ОбновитьСостояниеШаговКлиент("1_1");
	
КонецПроцедуры

&НаКлиенте
Процедура ШагОтметка3Нажатие(Элемент)
	
	СброситьОтметки(ЭтаФорма,"1_2");
	ОбновитьСостояниеШаговКлиент("1_2");
	
КонецПроцедуры

&НаКлиенте
Процедура ШагОтметкаПустая3Нажатие(Элемент)
	
	ОтметкаШаг1_2 = Истина;
	ОбновитьСостояниеШаговКлиент("1_2");
	
КонецПроцедуры

&НаКлиенте
Процедура ШагОтметка4Нажатие(Элемент)
	
	СброситьОтметки(ЭтаФорма,"1_3");
	ОбновитьСостояниеШаговКлиент("1_3");
	
КонецПроцедуры

&НаКлиенте
Процедура ШагОтметкаПустая4Нажатие(Элемент)
	
	ОтметкаШаг1_3 = Истина;
	ОбновитьСостояниеШаговКлиент("1_3");
	
КонецПроцедуры

&НаКлиенте
Процедура ШагОтметка2Нажатие(Элемент)
	
	СброситьОтметки(ЭтаФорма,"2");
	ОбновитьСостояниеШаговКлиент("2");
	
КонецПроцедуры

&НаКлиенте
Процедура ШагОтметкаПустая2Нажатие(Элемент)
	
	ОтметкаШаг2 = Истина;
	ОбновитьСостояниеШаговКлиент("2");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполняющиесяЗаказыНаПроизводство(Команда)
	
	ОтборСтатусы = Новый Массив;
	ОтборСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыЗаказовНаПроизводство.Создан"));
	ОтборСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыЗаказовНаПроизводство.КПроизводству"));
	
	СтруктураОтборов = Новый Структура("Статусы", ОтборСтатусы);
	ПараметрыФормы = Новый Структура("СтруктураОтборов", СтруктураОтборов);
	
	ОткрытьФорму("Документ.ЗаказНаПроизводство.Форма.ФормаСпискаДокументов", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыМатериаловОжидающиеИсполнения(Команда)
	
	ПараметрыФормы = Новый Структура("ИмяТекущейСтраницы", "СтраницаЗаказыНаПередачу");
	
	ОткрытьФорму("Обработка.ПолучениеИВозвратМатериалов.Форма", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспоряженияНаОформлениеВыпуска(Команда)
	
	ОткрытьФорму("Документ.ВыпускПродукции.Форма.ФормаСпискаДокументов");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыпускиТребующиеСписанияЗатрат(Команда)
	
	ОткрытьФорму("Документ.СписаниеЗатратНаВыпуск.Форма.ФормаСпискаДокументов");
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеМатериаловИРабот(Команда)
	
	ОткрытьФорму("Документ.РаспределениеПроизводственныхЗатрат.Форма.ФормаРабочееМесто");
	
КонецПроцедуры

&НаКлиенте
Процедура ВозвратМатериаловИзПроизводства(Команда)
	
	ПараметрыФормы = Новый Структура("ИмяТекущейСтраницы", "СтраницаПолучениеИВозврат");
	
	ОткрытьФорму("Обработка.ПолучениеИВозвратМатериалов.Форма", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастройкаСхемОбеспечения(Команда)
	
	ОткрытьФорму("Справочник.СхемыОбеспечения.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура СозданиеЦеховыхКладовых(Команда)
	
	ОткрытьФорму("Обработка.ПереходНаУправлениеПроизводствомВерсии22.Форма.СозданиеЦеховыхКладовых");
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПараметровОбеспечения(Команда)
	
	ОткрытьФорму("Обработка.НастройкаПоддержанияЗапасов.Форма", Новый Структура("Источник", "ЦеховыеКладовые"));
	
КонецПроцедуры

&НаКлиенте
Процедура КонвертацияЗаказовНаПроизводство(Команда)
	
	ОткрытьФорму("Обработка.ПереходНаУправлениеПроизводствомВерсии22.Форма.КонвертацияЗаказовНаПроизводство");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьПроизводство21(Команда)
	
	ОтключитьПроизводство21Сервер();
	
	ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы()
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные(Команда)
	
	ОбновитьДанныеНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСтатьюИТС(Команда)
	
	УправлениеПроизводствомКлиент.ОткрытьСтатью5ШаговКПроизводству22();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеДанных

&НаКлиенте
Функция ТребуетсяВызовСервераДляОбновления()
	
	Возврат ПредыдущиеШагиВыполнены(ЭтаФорма, "3");
	
КонецФункции

&НаКлиенте
Процедура ОбновитьСостояниеШаговКлиент(ИзмененныйШаг)
	
	Если ТребуетсяВызовСервераДляОбновления() Тогда
		ОбновитьСостояниеШагов(ИзмененныйШаг);
		Возврат;
	КонецЕсли;
	
	ОбновитьСостояниеШаговКлиентСервер(ЭтаФорма, ИзмененныйШаг);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСостояниеШаговКлиентСервер(Форма, ИзмененныйШаг = "")
	
	ОбновитьКоманды(Форма);
	
	НастроитьОтметки(Форма, ИзмененныйШаг);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСостояниеШагов(Знач ИзмененныйШаг = "")
	
	ПеречитатьДанныеПроизводства21();
	
	НастроитьОтметки(ЭтаФорма, ИзмененныйШаг);
	
КонецПроцедуры

&НаСервере
Процедура ПеречитатьДанныеПроизводства21()
	
	Перем КоличествоОбъектов;
	
	ОтметкаШаг3 = Ложь;
	ОтметкаШаг4 = Ложь;
	ОтметкаШаг5 = Ложь;
	
	Если ПредыдущиеШагиВыполнены(ЭтаФорма, "3") Тогда
		
		КоличествоОбъектов = УправлениеПроизводством.НезавершенныеПроизводственныеПроцессы21();
		
		ОтметкаШаг3 = КоличествоОбъектов.КоличествоВыполняющихсяЗаказовНаПроизводство = 0
					И КоличествоОбъектов.КоличествоЗаказовМатериаловОжидающихИсполнения = 0
					И КоличествоОбъектов.КоличествоРаспоряженийНаОформлениеВыпускаПродукции = 0
					И КоличествоОбъектов.КоличествоВыпусковТребующихСписанияЗатрат = 0;
		
	КонецЕсли;
	
	Если ПредыдущиеШагиВыполнены(ЭтаФорма, "4") Тогда
		
		ОтметкаШаг4 = НЕ УправлениеПроизводством.ЕстьОстаткиМатериаловИРаботВПроизводстве21();
		
	КонецЕсли;
	
	Если ПредыдущиеШагиВыполнены(ЭтаФорма, "5") Тогда
		
		ОтметкаШаг5 = НЕ ПроизводствоСервер.ИспользуетсяПроизводство21();
		
	КонецЕсли;
	
	ОбновитьКоманды(ЭтаФорма, КоличествоОбъектов);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьКоманды(Форма, КоличествоОбъектов = Неопределено)
	
	ПредыдущиеШагиВыполненны = ПредыдущиеШагиВыполнены(Форма, "3");
	
	Количество = 0;
	ТекстЗаголовка = НСтр("ru = 'Выполняющиеся заказы на производство';
							|en = 'Production orders in progress'");
	Если ПредыдущиеШагиВыполненны
		И КоличествоОбъектов <> Неопределено
		И КоличествоОбъектов.Свойство("КоличествоВыполняющихсяЗаказовНаПроизводство",Количество) Тогда
		ТекстЗаголовка = ТекстЗаголовка + " (" + Формат(Количество, "ЧН=; ЧГ=") + ") ";
	КонецЕсли;
	Форма.Элементы.ВыполняющиесяЗаказыНаПроизводство.Заголовок = ТекстЗаголовка;
	Форма.Элементы.ВыполняющиесяЗаказыНаПроизводство.Доступность = Количество > 0;
	
	Количество = 0;
	ТекстЗаголовка = НСтр("ru = 'Заказы материалов в производство ожидающие исполнения';
							|en = 'Material orders to production awaiting fulfillment'");
	Если ПредыдущиеШагиВыполненны
		И КоличествоОбъектов <> Неопределено
		И КоличествоОбъектов.Свойство("КоличествоЗаказовМатериаловОжидающихИсполнения",Количество) Тогда
		ТекстЗаголовка = ТекстЗаголовка + " (" + Формат(Количество, "ЧН=; ЧГ=") + ") ";
	КонецЕсли;
	Форма.Элементы.ЗаказыМатериаловОжидающиеИсполнения.Заголовок = ТекстЗаголовка;
	Форма.Элементы.ЗаказыМатериаловОжидающиеИсполнения.Доступность = Количество > 0;
	
	Количество = 0;
	ТекстЗаголовка = НСтр("ru = 'Распоряжения на оформление выпуска продукции';
							|en = 'References to register product release'");
	Если ПредыдущиеШагиВыполненны
		И КоличествоОбъектов <> Неопределено
		И КоличествоОбъектов.Свойство("КоличествоРаспоряженийНаОформлениеВыпускаПродукции",Количество) Тогда
		ТекстЗаголовка = ТекстЗаголовка + " (" + Формат(Количество, "ЧН=; ЧГ=") + ") ";
	КонецЕсли;
	Форма.Элементы.РаспоряженияНаОформлениеВыпуска.Заголовок = ТекстЗаголовка;
	Форма.Элементы.РаспоряженияНаОформлениеВыпуска.Доступность = Количество > 0;

	Количество = 0;
	ТекстЗаголовка = НСтр("ru = 'Выпуски требующие списания затрат';
							|en = 'Releases which require cost write-off'");
	Если ПредыдущиеШагиВыполненны
		И КоличествоОбъектов <> Неопределено
		И КоличествоОбъектов.Свойство("КоличествоВыпусковТребующихСписанияЗатрат",Количество) Тогда
		ТекстЗаголовка = ТекстЗаголовка + " (" + Формат(Количество, "ЧН=; ЧГ=") + ") ";
	КонецЕсли;
	Форма.Элементы.ВыпускиТребующиеСписанияЗатрат.Заголовок = ТекстЗаголовка;
	Форма.Элементы.ВыпускиТребующиеСписанияЗатрат.Доступность = Количество > 0;
	
	Форма.Элементы.РаспределениеМатериаловИРабот.Доступность = НЕ Форма.ОтметкаШаг4;
	Форма.Элементы.ВозвратМатериаловИзПроизводства.Доступность = НЕ Форма.ОтметкаШаг4;
	Форма.Элементы.ОтключитьПроизводство21.Доступность = НЕ Форма.ОтметкаШаг5;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьОбработчикОжиданияОбновитьДанные()
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьДанные", 60, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ПодключитьОбработчикОжиданияОбновитьДанныеПриАктивизации()
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьДанные", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьДанные()
	
	ОбновитьДанныеНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеНаКлиенте()
	
	Если ВводДоступен() Тогда
		
		Если ТребуетсяВызовСервераДляОбновления() Тогда
			ОбновитьСостояниеШагов();
		КонецЕсли;
		
		ПодключитьОбработчикОжиданияОбновитьДанные();
		
	Иначе
		
		ПодключитьОбработчикОжиданияОбновитьДанныеПриАктивизации();
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область Отметки

&НаКлиентеНаСервереБезКонтекста
Функция ПоследовательностьШагов()
	
	Результат = Новый Массив;
	
	Результат.Добавить("1_1");
	Результат.Добавить("1_2");
	Результат.Добавить("1_3");
	Результат.Добавить("2");
	Результат.Добавить("3");
	Результат.Добавить("4");
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПредыдущиеШагиВыполнены(Форма, ТекущийШаг = "")
	
	Результат = Истина;
	
	Для Каждого Шаг Из ПоследовательностьШагов() Цикл
		
		Если Шаг = ТекущийШаг Тогда
			Прервать;
		КонецЕсли;
		
		Результат = Результат И Форма["ОтметкаШаг"+Шаг];
		
		Если НЕ Результат Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОтметкиСвязаны(Отметка1, Отметка2)
	
	Если Отметка2 = "" 
		ИЛИ Отметка1 = Отметка2 Тогда
		Возврат Истина;
	КонецЕсли;
	
	Для Каждого Шаг Из ПоследовательностьШагов() Цикл
		
		Если Шаг = Отметка2 Тогда
			Возврат Истина;
		КонецЕсли;
		
		Если Шаг = Отметка1 Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьОтметки(Форма, ИзмененныйШаг = "")

	Если ОтметкиСвязаны("1_1", ИзмененныйШаг) Тогда
		УстановитьОтметкуШага(Форма, "1_1", Истина);
	КонецЕсли; 
	
	Если ОтметкиСвязаны("1_2", ИзмененныйШаг) Тогда
		ПредыдущиеШагиВыполнены = ПредыдущиеШагиВыполнены(Форма, "1_2");
		УстановитьОтметкуШага(Форма, "1_2", ПредыдущиеШагиВыполнены);
		Форма.Элементы.СозданиеЦеховыхКладовых.Доступность = ПредыдущиеШагиВыполнены;
		Если НЕ ПредыдущиеШагиВыполнены Тогда
			Форма.ОтметкаШаг1_2 = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ОтметкиСвязаны("1_3", ИзмененныйШаг) Тогда
		ПредыдущиеШагиВыполнены = ПредыдущиеШагиВыполнены(Форма, "1_3");
		УстановитьОтметкуШага(Форма, "1_3", ПредыдущиеШагиВыполнены);
		Форма.Элементы.НастройкаПараметровОбеспечения.Доступность = ПредыдущиеШагиВыполнены;
		Если НЕ ПредыдущиеШагиВыполнены Тогда
			Форма.ОтметкаШаг1_3 = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ОтметкиСвязаны("2", ИзмененныйШаг) Тогда
		ПредыдущиеШагиВыполнены = ПредыдущиеШагиВыполнены(Форма, "2");
		УстановитьОтметкуШага(Форма, "2", ПредыдущиеШагиВыполнены);
		Форма.Элементы.ГруппаШаг2.Доступность = ПредыдущиеШагиВыполнены;
		Если НЕ ПредыдущиеШагиВыполнены Тогда
			Форма.ОтметкаШаг2 = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ОтметкиСвязаны("3", ИзмененныйШаг) Тогда
		ПредыдущиеШагиВыполнены = ПредыдущиеШагиВыполнены(Форма, "3");
		УстановитьОтметкуШага(Форма, "3", ПредыдущиеШагиВыполнены);
		Форма.Элементы.ГруппаШаг3.Доступность = ПредыдущиеШагиВыполнены;
		Если НЕ ПредыдущиеШагиВыполнены Тогда
			Форма.ОтметкаШаг3 = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ОтметкиСвязаны("4", ИзмененныйШаг) Тогда
		ПредыдущиеШагиВыполнены = ПредыдущиеШагиВыполнены(Форма, "4");
		УстановитьОтметкуШага(Форма, "4", ПредыдущиеШагиВыполнены);
		Форма.Элементы.ГруппаШаг4.Доступность = ПредыдущиеШагиВыполнены;
		Если НЕ ПредыдущиеШагиВыполнены Тогда
			Форма.ОтметкаШаг4 = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ОтметкиСвязаны("5", ИзмененныйШаг) Тогда
		ПредыдущиеШагиВыполнены = ПредыдущиеШагиВыполнены(Форма, "5");
		УстановитьОтметкуШага(Форма, "5", ПредыдущиеШагиВыполнены);
		Форма.Элементы.ГруппаШаг5.Доступность = ПредыдущиеШагиВыполнены;
		Если НЕ ПредыдущиеШагиВыполнены Тогда
			Форма.ОтметкаШаг5 = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ИзмененныйШаг <> "" Тогда
		Форма.СохраняемыеВНастройкахДанныеМодифицированы = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СброситьОтметки(Форма, ТекущийШаг = "")
	
	ПоследовательностьШагов = ПоследовательностьШагов();
	
	Для Индекс = -ПоследовательностьШагов.Количество()+1 По 0 Цикл
		
		Шаг = ПоследовательностьШагов[-Индекс];
		
		Если Шаг <> ТекущийШаг Тогда
			Продолжить;
		КонецЕсли;
		
		Форма["ОтметкаШаг"+Шаг] = Ложь;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтметкуШага(Форма, НомерШага, Доступность)

	Если НЕ Доступность Тогда
		Форма.Элементы["ШагСтраницы" + НомерШага].ТекущаяСтраница = Форма.Элементы["ШагСтраницаНедоступно" + НомерШага];
	ИначеЕсли Форма["ОтметкаШаг" + НомерШага] Тогда
		Форма.Элементы["ШагСтраницы" + НомерШага].ТекущаяСтраница = Форма.Элементы["ШагСтраницаГотово" + НомерШага];
	Иначе
		Форма.Элементы["ШагСтраницы" + НомерШага].ТекущаяСтраница = Форма.Элементы["ШагСтраницаНеГотово" + НомерШага];
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ОтключитьПроизводство21Сервер()
	
	УправлениеПроизводством.ОтключитьПроизводство21();
	
	ОбновитьСостояниеШагов();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
//-- Устарело_Производство21
