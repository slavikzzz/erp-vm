#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Сформировать печатные формы объектов
//
// Параметры:
// 		ИменаМакетов - Строка - Имена макетов, перечисленные через запятую
// 		МассивОбъектов - Массив - Массив ссылок на объекты которые нужно распечатать
// 		ПараметрыПечати - Структура - Структура дополнительных параметров печати
// 		КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
// 		ПараметрыВывода - Структура - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС14") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОС14",
			НСтр("ru = 'ОС-14 (Акт о приеме оборудования)';
				|en = 'FA-14 (Equipment acceptance certificate)'"),
			СформироватьПечатнуюФормуОС14(
				СтруктураТипов,
				ОбъектыПечати,
				ПараметрыПечати,
				Неопределено));
		
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует печатную форму "ОС-14"
//
Функция СформироватьПечатнуюФормуОС14(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОС14";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(СтруктураОбъектов.Ключ);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		КонецЕсли;
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыОС14(
			ПараметрыПечати,
			СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументОС14(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументОС14(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати)
	
	ШаблонОшибкиПустойТЧ = НСтр("ru = 'В документе %1 отсутствуют товары. Печать ОС-14 не требуется';
								|en = 'Goods are missing in document %1. It is not required to print FA-14'");
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОС14.ПФ_MXL_ОС14");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ВыборкаДокументы = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаСтрокиПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаСтрокиПоДокументам.Сбросить();
		Если Не ВыборкаСтрокиПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ВыборкаДокументы.Ссылка)) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонОшибкиПустойТЧ,
					ВыборкаДокументы.Ссылка),
				ВыборкаДокументы.Ссылка);
			
			Продолжить;
			
		КонецЕсли;
		
		ОтветственныеЛица = РеквизитыОтветственныхЛиц(ВыборкаДокументы);
		
		ВыборкаСтроки = ВыборкаСтрокиПоДокументам.Выбрать();
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьШапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДокументы.Номер);
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаДокументы.Организация, ВыборкаДокументы.ДатаДокумента,, ВыборкаДокументы.БанковскийСчетОрганизации);
		ОбластьШапка.Параметры.ОрганизацияПолучательНаименование = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");
		ОбластьШапка.Параметры.ОрганизацияПолучательТелефоны = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "Телефоны");
		ОбластьШапка.Параметры.ОрганизацияПолучательБанковскиеРеквизиты = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НомерСчета,Банк,БИК,КоррСчет");
		ОбластьШапка.Параметры.ОрганизацияПолучательКодПоОКПО = СведенияОбОрганизации.КодПоОКПО;
		
		СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаДокументы.Поставщик, ВыборкаДокументы.ДатаДокумента,, ВыборкаДокументы.БанковскийСчетКонтрагента);
		ОбластьШапка.Параметры.ОрганизацияПоставщикНаименование = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование");
		ОбластьШапка.Параметры.ОрганизацияПоставщикТелефоны = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "Телефоны");
		ОбластьШапка.Параметры.ОрганизацияПоставщикБанковскиеРеквизиты = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "НомерСчета,Банк,БИК,КоррСчет");
		
		ОбластьШапка.Параметры.Заполнить(ОтветственныеЛица);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		Пока ВыборкаСтроки.Следующий() Цикл
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаСтроки);
			
			ОбластьСтрокаТаблицы.Параметры.ОборудованиеНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаСтроки.ОборудованиеНаименование,
				ВыборкаСтроки.ХарактеристикаНаименование);
			
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
		КонецЦикла;
		
		ОбластьПодвал.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьПодвал.Параметры.Заполнить(ОтветственныеЛица);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

Функция РеквизитыОтветственныхЛиц(Выборка)
	
	СтруктураВозврата = Новый Структура;
	
	СтруктураВозврата.Вставить("РуководительДолжность");
	СтруктураВозврата.Вставить("Руководитель");
	СтруктураВозврата.Вставить("РуководительНаименование");
	СтруктураВозврата.Вставить("ГлавныйБухгалтер");
	СтруктураВозврата.Вставить("ГлавныйБухгалтерНаименование");
	
	ЗаполнитьЗначенияСвойств(СтруктураВозврата, Выборка);
	
	Если Не (ЗначениеЗаполнено(СтруктураВозврата.Руководитель) И ЗначениеЗаполнено(СтруктураВозврата.ГлавныйБухгалтер)) Тогда
		ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Выборка.Организация, Выборка.ДатаДокумента);
		
		Если Не ЗначениеЗаполнено(СтруктураВозврата.Руководитель) Тогда
			ОтветственныеЛица.Свойство("Руководитель", СтруктураВозврата.Руководитель);
			ОтветственныеЛица.Свойство("РуководительДолжность", СтруктураВозврата.РуководительДолжность);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтруктураВозврата.ГлавныйБухгалтер) Тогда
			ОтветственныеЛица.Свойство("ГлавныйБухгалтер", СтруктураВозврата.ГлавныйБухгалтер);
		КонецЕсли;
		
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураВозврата.Руководитель) Тогда
		СтруктураВозврата.РуководительНаименование = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтруктураВозврата.Руководитель, Выборка.ДатаДокумента);
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураВозврата.ГлавныйБухгалтер) Тогда
		СтруктураВозврата.ГлавныйБухгалтерНаименование = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтруктураВозврата.ГлавныйБухгалтер, Выборка.ДатаДокумента);
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
