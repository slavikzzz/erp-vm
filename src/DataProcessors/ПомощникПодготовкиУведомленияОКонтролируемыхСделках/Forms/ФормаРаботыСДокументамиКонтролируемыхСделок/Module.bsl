#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Организация") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокИзменяемыхОбъектовТекущегоУсловия, 
			"Организация", Параметры.Организация, ВидСравненияКомпоновкиДанных.Равно,,Истина);
	КонецЕсли;
	
	Если Параметры.Свойство("Уведомление") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокИзменяемыхОбъектовТекущегоУсловия,
			"УведомлениеОКонтролируемойСделке", Параметры.Уведомление, ВидСравненияКомпоновкиДанных.Равно,,Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьНовоеЗначение(Команда)
	
	УстановкаНовогоЗначенияРеквизита();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбщегоНазначения

&НаКлиенте
Процедура УстановкаНовогоЗначенияРеквизита()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗакрытииФормыИзмененияРеквизитов", ЭтотОбъект);
	ПараметрыОткрытияФормы = Новый Структура("Уведомление", Объект.Уведомление);
	ОткрытьФорму("Обработка.ПомощникПодготовкиУведомленияОКонтролируемыхСделках.Форма.ФормаИзмененияРеквизитовКонтролируемыхСделок", 
		ПараметрыОткрытияФормы, , , , , ОписаниеОповещения);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииФормыИзмененияРеквизитов (Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		МассивИзменяемыхСсылок = СписокСсылокПоВыбраннымСтрокамДинамическогоСписка();
		
		ПараметрыИзмененияОбъектов = Новый Структура;
		ПараметрыИзмененияОбъектов.Вставить("ИмяМетаданныхОбъекта", "Документ.КонтролируемаяСделка");
		ПараметрыИзмененияОбъектов.Вставить("ИзменяемыеРеквизиты", Результат);
		ПараметрыИзмененияОбъектов.Вставить("ОбрабатываемыеОбъекты", МассивИзменяемыхСсылок);
		
		// Присваиваем объектам новые значения.
		Если ТипЗнч(МассивИзменяемыхСсылок) = Тип("Массив") И Не МассивИзменяемыхСсылок.Количество() = 0 Тогда
			ВыполнитьИзменениеОбъектов(ПараметрыИзмененияОбъектов);
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ВыполнениеОперацийНадВыбраннымиОбъектами

&НаКлиенте
Процедура ВыполнитьИзменениеОбъектов(ПараметрыИзмененияОбъектов)
	
	ОчиститьСообщения();
	
	Результат = ВыполнитьИзменениеОбъектовВФоновомЗадании(ПараметрыИзмененияОбъектов, УникальныйИдентификатор);
	
	Если Результат.Статус = "Выполняется" Тогда
		
		ПараметрыФормаДлительнойОперации = ПараметрыФормыДлительнойОперации();
		ПараметрыФормаДлительнойОперации.ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		ПараметрыФормаДлительнойОперации.АдресРезультата = Результат.АдресРезультата;
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ИзменениеОбъектовЗавершено", ЭтотОбъект);
		ОткрытьФорму("ОбщаяФорма.ДлительнаяОперация", ПараметрыФормаДлительнойОперации, ЭтотОбъект, , , , ОповещениеОЗакрытии);
		
	Иначе
		
		СтрокаОшибок = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		
		Если ЗначениеЗаполнено(СтрокаОшибок) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаОшибок);
		КонецЕсли;
		
		Элементы.СписокИзменяемыхОбъектовТекущегоУсловия.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыФормыДлительнойОперации()
	
	ПараметрыДлительнойОперации = Новый Структура;
	ПараметрыДлительнойОперации.Вставить("ИдентификаторЗадания");
	ПараметрыДлительнойОперации.Вставить("ВыводитьОкноОжидания", Истина);
	ПараметрыДлительнойОперации.Вставить("ВыводитьПрогрессВыполнения", Истина);
	ПараметрыДлительнойОперации.Вставить("ВыводитьСообщения", Истина);
	ПараметрыДлительнойОперации.Вставить("ПолучатьРезультат", Истина);
	ПараметрыДлительнойОперации.Вставить("АдресРезультата");
	
	Возврат ПараметрыДлительнойОперации;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВыполнитьИзменениеОбъектовВФоновомЗадании(ПараметрыОбработки, УникальныйИдентификатор)	
	
	ВыполняемыйМетод = "Обработки.ПомощникПодготовкиУведомленияОКонтролируемыхСделках.УстановитьНовыеЗначенияДляСпискаОбъектов";
	
	ПараметрыФоновогоЗадания = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыФоновогоЗадания.ОжидатьЗавершение = 0;
	ПараметрыФоновогоЗадания.НаименованиеФоновогоЗадания = НСтр("ru = 'Групповое изменение реквизитов для списка документов ""Контролируемые сделки""';
																|en = 'Bulk attribute editing for the ""Controlled transactions"" document list'");
	ПараметрыФоновогоЗадания.КлючФоновогоЗадания = "КонтролируемыеСделки_ИзменениеРеквизитов";
	
	РезультатФоновогоЗадания = ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыОбработки, ПараметрыФоновогоЗадания);
	
	Возврат РезультатФоновогоЗадания;
	
КонецФункции

&НаКлиенте
Процедура ИзменениеОбъектовЗавершено(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(Результат.Результат) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.Результат);
	КонецЕсли;
	
	Элементы.СписокИзменяемыхОбъектовТекущегоУсловия.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеСпискаОбъектовПоУсловиямДляПоследующейОбработки

&НаКлиенте
Функция СписокСсылокПоВыбраннымСтрокамДинамическогоСписка()
	
	// На основе массива выделенных данных формируем начальный отбор для схемы компоновки (анализируются группировки,
	// наличие групп и так далее), если в процессе формирования выясняется, что в массиве только обычные элементы
	// справочника - этот  массив без обработки через скд передаем на изменение.
	ЭтоПростойМассивСсылок = Истина;
	Отбор = ОтборНаОснованииМассиваВыбранныхЗначений(Элементы.СписокИзменяемыхОбъектовТекущегоУсловия, ЭтоПростойМассивСсылок);
	
	Если ЭтоПростойМассивСсылок Тогда
		// Массив содержит лишь простые значения элементов справочника, передаем его как есть для дальнейшей обработке.
		Возврат Элементы.СписокИзменяемыхОбъектовТекущегоУсловия.ВыделенныеСтроки;
	Иначе
		Возврат СсылкиНаИзменяемыеОбъектыПолученныеСПомощьюОтбора(Отбор);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ОтборНаОснованииМассиваВыбранныхЗначений(ДанныеИсточника, ЭтоПростойМассивСсылок)
	
	ВозвращаемыйОтбор = Новый ОтборКомпоновкиДанных;
	
	ОтборПоГруппировке = Неопределено;
	ОтборПоСсылке = Неопределено;
	ЕстьГруппаСредиЭлементов = Ложь;
	
	Для каждого ТекущаяСтрокаСписка Из ДанныеИсточника.ВыделенныеСтроки Цикл
		Если ТипЗнч(ТекущаяСтрокаСписка) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Если ОтборПоГруппировке = Неопределено Тогда
				ОтборПоГруппировке = КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(ВозвращаемыйОтбор, ТекущаяСтрокаСписка.ИмяГруппировки, ТекущаяСтрокаСписка.Ключ);
			Иначе
				ОтборПоГруппировке.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
				Если Не ТипЗнч(ОтборПоГруппировке.ПравоеЗначение) = Тип("СписокЗначений") Тогда
					СписокДляОтбора = Новый СписокЗначений;
					СписокДляОтбора.Добавить(ОтборПоГруппировке.ПравоеЗначение);
					ОтборПоГруппировке.ПравоеЗначение = СписокДляОтбора;
				КонецЕсли;	
				ОтборПоГруппировке.ПравоеЗначение.Добавить(ТекущаяСтрокаСписка.Ключ);
			КонецЕсли;
		Иначе
			// Если элемент является группой, то сделаем соответствующую пометку (проверяем только если еще не встречали группу):
			Если Не ЕстьГруппаСредиЭлементов Тогда
				ЭтоГруппа = Ложь;
				Если ДанныеИсточника.ДанныеСтроки(ТекущаяСтрокаСписка).Свойство("ЭтоГруппа", ЭтоГруппа) Тогда
					ЕстьГруппаСредиЭлементов = ЭтоГруппа;
				КонецЕсли;
			КонецЕсли;
			Если ОтборПоСсылке = Неопределено Тогда
				ТекущийВидСравнения = ?(ЕстьГруппаСредиЭлементов, ВидСравненияКомпоновкиДанных.ВИерархии, ВидСравненияКомпоновкиДанных.Равно);
				ОтборПоСсылке = КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(ВозвращаемыйОтбор, "Ссылка", ТекущаяСтрокаСписка, ТекущийВидСравнения);
			Иначе
				ОтборПоСсылке.ВидСравнения = ?(ЕстьГруппаСредиЭлементов, ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии, ВидСравненияКомпоновкиДанных.ВСписке);
				Если Не ТипЗнч(ОтборПоСсылке.ПравоеЗначение) = Тип("СписокЗначений") Тогда
					СписокДляОтбора = Новый СписокЗначений;
					СписокДляОтбора.Добавить(ОтборПоСсылке.ПравоеЗначение);
					ОтборПоСсылке.ПравоеЗначение = СписокДляОтбора;
				КонецЕсли;
				ОтборПоСсылке.ПравоеЗначение.Добавить(ТекущаяСтрокаСписка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// Это просто ссылки если среди выделенных строк не было ни одной группировки и не встречались группы справочника.
	ЭтоПростойМассивСсылок = ОтборПоГруппировке = Неопределено И Не ЕстьГруппаСредиЭлементов;
	
	Возврат ВозвращаемыйОтбор;
	
КонецФункции

&НаКлиенте
Функция СсылкиНаИзменяемыеОбъектыПолученныеСПомощьюОтбора(Отбор)
	КомпоновкаДанныхКлиентСервер.СкопироватьЭлементы(Отбор, СписокИзменяемыхОбъектовТекущегоУсловия.Отбор, Ложь);
	КомпоновкаДанныхКлиентСервер.СкопироватьЭлементы(Отбор, СписокИзменяемыхОбъектовТекущегоУсловия.КомпоновщикНастроек.Настройки.Отбор, Ложь);
	Возврат СформироватьСписокСсылокСПомощьюСКД(Отбор, СписокИзменяемыхОбъектовТекущегоУсловия);
КонецФункции

// На основании отбора получает список ссылок простых элементов справочника:
&НаСервереБезКонтекста
Функция СформироватьСписокСсылокСПомощьюСКД(ОтборСправочника, ДинамическийСписокФормы)
	
	ИзменениеРеквизитов = Обработки.ГрупповоеИзменениеРеквизитов.Создать();
	Если ЗначениеЗаполнено(ДинамическийСписокФормы.ТекстЗапроса) Тогда
		ТекстЗапроса = ДинамическийСписокФормы.ТекстЗапроса;
	Иначе
		ТекстЗапроса = ИзменениеРеквизитов.ТекстЗапроса(ДинамическийСписокФормы.ОсновнаяТаблица);
	КонецЕсли;
	СхемаКомпоновкиДанных = ИзменениеРеквизитов.СхемаКомпоновкиДанных(ТекстЗапроса);
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	НастройкиКомпоновки = КомпоновщикНастроек.Настройки;
	КомпоновкаДанныхКлиентСервер.СкопироватьЭлементы(НастройкиКомпоновки.Отбор, ОтборСправочника);
	
	ФинансоваяОтчетностьСервер.НоваяГруппировка(КомпоновщикНастроек.Настройки.Структура, "Ссылка");
	ТаблицаИзменяемыхОбъектов = ФинансоваяОтчетностьСервер.ВыгрузитьРезультатСКД(СхемаКомпоновкиДанных, НастройкиКомпоновки);
	
	Возврат ТаблицаИзменяемыхОбъектов.ВыгрузитьКолонку("Ссылка");
	
КонецФункции

#КонецОбласти

#КонецОбласти