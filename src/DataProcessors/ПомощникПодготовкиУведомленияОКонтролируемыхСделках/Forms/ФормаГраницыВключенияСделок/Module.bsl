
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры);

	Если ЗначениеЗаполнено(Объект.Уведомление) Тогда
		ВерсияУведомления = Документы.УведомлениеОКонтролируемыхСделках.ВерсияУведомления(Объект.Уведомление);
	Иначе
		ВерсияУведомления = Документы.УведомлениеОКонтролируемыхСделках.ВерсияУведомленияПоОтчетномуГоду(Дата(Объект.ОтчетныйГод, 1, 1));
	КонецЕсли;
	
	Заголовок = СтрЗаменить(НСтр("ru = 'Границы включения сделок в уведомление за %ОтчетныйГод% год';
								|en = 'Limits of adding transactions to the notification for %ОтчетныйГод%'"),"%ОтчетныйГод%",Формат(Объект.ОтчетныйГод, "ЧЦ=4; ЧГ=0"));
	
	ИменаГраницВключенияСделок = ИменаГраницВключенияСделок(ВерсияУведомления, Объект.ОтчетныйГод);
	ЗаполнитьГраницы(ЭтотОбъект, ИменаГраницВключенияСделок);
	
	НастроитьВидимостьГраниц(ИменаГраницВключенияСделок);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	ЗаписатьГраницы();
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ИменаГраницВключенияСделок(ВерсияУведомления, ОтчетныйГод)
	
	ИменаГраницВключенияСделок = Новый Соответствие;
	
	Если ВерсияУведомления >= КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2021() Тогда
		
		ИменаГраницВключенияСделок.Вставить("ГраницаРФЗависимыеЛица2019",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.ВзаимозависимыеЛица);
		
		ИменаГраницВключенияСделок.Вставить("ГраницаПрочие2019",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.ВзаимозависимыеЛицаПрочие);
		
	ИначеЕсли ВерсияУведомления < КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2019() Тогда
		
		ИменаГраницВключенияСделок.Вставить("ГраницаРФЗависимыеЛица2019",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.ВзаимозависимыеЛица);
		
		ИменаГраницВключенияСделок.Вставить("ГраницаИностранныеНезависимыеЛица2019",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.НезависимыеИностранныеЛица);
		
		ИменаГраницВключенияСделок.Вставить("ГраницаПрочие2019",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.ВзаимозависимыеЛицаПрочие);
		
	Иначе
		
		ИменаГраницВключенияСделок.Вставить("ГраницаОбщая",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.МинимальнаяСуммаДляВключенияВУведомление);
		ИменаГраницВключенияСделок.Вставить("ГраницаРФОбщая",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.ВзаимозависимыеЛица);
		ИменаГраницВключенияСделок.Вставить("ГраницаРФНДПИ",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.ВзаимозависимыеЛицаПлательщикиНДПИ);
		ИменаГраницВключенияСделок.Вставить("ГраницаРФСпецрежим",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.ВзаимозависимыеЛицаНаСпецрежимах);
		ИменаГраницВключенияСделок.Вставить("ГраницаРФПрибыль",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.ВзаимозависимыеЛицаПлательщикиНалогаНаПрибыль);
		ИменаГраницВключенияСделок.Вставить("ГраницаРФОЭЗ",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.ВзаимозависимыеЛицаОсобаяЭкономическаяЗона);
		ИменаГраницВключенияСделок.Вставить("ГраницаРФНовоеМорскоеМесторождение",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.ВзаимозависимыеЛицаДеятельностьМорскогоМесторождения);
		ИменаГраницВключенияСделок.Вставить("ГраницаРФРегиональныйИнвестиционныйПроект",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.ВзаимозависимыеЛицаУчастникиРегиональногоИнвестиционногоПроекта);
		ИменаГраницВключенияСделок.Вставить("ГраницаРФОсвобождениеНДС",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.ВзаимозависимыеЛицаОсвобождениеНДС);
		ИменаГраницВключенияСделок.Вставить("ГраницаРФИнвестиционныйВычет",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.ВзаимозависимыеЛицаИнвестиционныйВычет);
		ИменаГраницВключенияСделок.Вставить("ГраницаИностранныеНезависимыеЛица",
			Перечисления.ОсобенностиОтнесенияСделокККонтролируемым.НезависимыеИностранныеЛица);
		
	КонецЕсли;
	
	Возврат ИменаГраницВключенияСделок;
	
КонецФункции

&НаСервере
Процедура НастроитьВидимостьГраниц(ИменаГраницВключенияСделок)
	
	Для Каждого Элемент Из Элементы Цикл
		
		Если СтрНачинаетсяС(Элемент.Имя, "Граница")
			И ТипЗнч(Элемент) = Тип("ПолеФормы") Тогда
			Элемент.Видимость = ИменаГраницВключенияСделок.Получить(Элемент.Имя) <> Неопределено;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьГраницу(ВидГраницы, Период, ПредельнаяСумма)
	
	НаборЗаписей = РегистрыСведений.ГраницыКонтролируемостиСделок.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ОсобенностьОтнесенияСделкиККонтролируемой.Значение = ВидГраницы;
	НаборЗаписей.Отбор.ОсобенностьОтнесенияСделкиККонтролируемой.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = Период;
	НаборЗаписей.Отбор.Период.Использование = Истина;
	Запись = НаборЗаписей.Добавить();
	Запись.ОсобенностьОтнесенияСделкиККонтролируемой = ВидГраницы;
	Запись.Период = Период;
	Запись.ПредельнаяСумма = ПредельнаяСумма;
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьГраницы()
	
	ИменаГраницВключенияСделок = ИменаГраницВключенияСделок(ВерсияУведомления, Объект.ОтчетныйГод);
	СуществующиеГраницы = НовыйГраницыСделок(ИменаГраницВключенияСделок);
	ЗаполнитьГраницы(СуществующиеГраницы, ИменаГраницВключенияСделок);
	
	ПериодДляЗаписи = Дата(Объект.ОтчетныйГод, 1, 1);
	Для Каждого ИмяГраницыВключенияСделок Из ИменаГраницВключенияСделок Цикл
		ИмяГраницы = ИмяГраницыВключенияСделок.Ключ;
		ЗначениеПеречисленияДляЗаписи = ИмяГраницыВключенияСделок.Значение;
		Если СуществующиеГраницы[ИмяГраницы] <> ЭтотОбъект[ИмяГраницы] Тогда
			ЗаписатьГраницу(ЗначениеПеречисленияДляЗаписи,
				ПериодДляЗаписи, ЭтотОбъект[ИмяГраницы]);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НовыйГраницыСделок(ИменаГраницВключенияСделок)
	
	ГраницыСделок = Новый Структура;
	Для Каждого ИмяГраницыВключенияСделок Из ИменаГраницВключенияСделок Цикл
		ГраницыСделок.Вставить(ИмяГраницыВключенияСделок.Ключ, 0);
	КонецЦикла;
	Возврат ГраницыСделок;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьГраницы(ОбъектЗаполнения, ИменаГраницВключенияСделок)
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("ОтчетныйГод", Дата(Объект.ОтчетныйГод, 1, 1));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГраницыКонтролируемостиСделокСрезПоследних.ОсобенностьОтнесенияСделкиККонтролируемой КАК ОсобенностьОтнесенияСделкиККонтролируемой,
	|	ГраницыКонтролируемостиСделокСрезПоследних.ПредельнаяСумма КАК ПредельнаяСумма
	|ИЗ
	|	РегистрСведений.ГраницыКонтролируемостиСделок.СрезПоследних(КОНЕЦПЕРИОДА(&ОтчетныйГод, ГОД), ) КАК ГраницыКонтролируемостиСделокСрезПоследних";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначенияГраниц = Новый Соответствие();
	Пока Выборка.Следующий() Цикл
		ЗначенияГраниц.Вставить(Выборка.ОсобенностьОтнесенияСделкиККонтролируемой, Выборка.ПредельнаяСумма);
	КонецЦикла;
	
	Для Каждого ИмяГраницы Из ИменаГраницВключенияСделок Цикл
		ПредельнаяСумма = ЗначенияГраниц.Получить(ИмяГраницы.Значение);
		Если ПредельнаяСумма = Неопределено Тогда
			ПредельнаяСумма = 0;
		КонецЕсли;
		ОбъектЗаполнения[ИмяГраницы.Ключ] = ПредельнаяСумма;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти