#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНВ3") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ИНВ3",
			НСтр("ru = 'Инвентаризационная опись';
				|en = 'Physical inventory register'"),
			СформироватьПечатнуюФормуИНВ3(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	//++ НЕ УТ
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНВ3_НаОснованииИнвентаризации") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ИНВ3_НаОснованииИнвентаризации",
			НСтр("ru = 'Инвентаризационная опись';
				|en = 'Physical inventory register'"),
			СформироватьПечатнуюФормуИНВ3_НаОснованииИнвентаризации(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	//-- НЕ УТ

КонецПроцедуры

Функция СформироватьПечатнуюФормуИНВ3(СтруктураТипов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСверху = 10;
	ТабличныйДокумент.ПолеСлева = 10;
	ТабличныйДокумент.ПолеСнизу = 10;
	ТабличныйДокумент.ПолеСправа = 10;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНВ3";
	
	УстановитьПривилегированныйРежим(Истина);
	
	НомерДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
			
		Если СтруктураОбъектов.Ключ <> "Документ.ИнвентаризационнаяОпись" Тогда 
			ТекстСообщения = НСтр("ru = 'Формирование печатной формы ""ИНВ-3"" доступно только для документов ""%ТипДокумента%"".';
									|en = 'INV-3 print form generation is available only for documents ""%ТипДокумента%"".'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипДокумента%", Метаданные.Документы.ИнвентаризационнаяОпись.Синоним);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(СтруктураОбъектов.Ключ);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		КонецЕсли;
		
		Для Каждого ДокументОснование Из СтруктураОбъектов.Значение Цикл
			
			НомерДокумента = НомерДокумента + 1;
			Если НомерДокумента > 1 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
						
			ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыИНВ3(ПараметрыПечати, ДокументОснование);
			Если НЕ ДанныеДляПечати = Неопределено Тогда
				ЗаполнитьТабличныйДокументИНВ3(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ДокументОснование);
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Параметры:
// 	ТабличныйДокумент - ТабличныйДокумент
// 	ДанныеДляПечати - Структура:
//		* РезультатПоШапке - РезультатЗапроса
//		* РезультатКурсВалюты - РезультатЗапроса
//		* РезультатПоТабличнойЧасти - РезультатЗапроса
//	ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати.
//	ИнвентаризационнаяОпись - ДокументСсылка - ссылка на документ инвентаризационной описи.
//
Процедура ЗаполнитьТабличныйДокументИНВ3(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ИнвентаризационнаяОпись)
	
	Шапка = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ТабличнаяЧасть = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать();
	
	Шапка.Следующий();
	СтруктураРеквизитов = Новый Структура("Дата, Склад, Организация");
	СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Шапка.Ссылка, СтруктураРеквизитов);
			
	Если ДанныеДляПечати.РезультатКурсВалюты <> Неопределено Тогда
		КурсВалюты = ДанныеДляПечати.РезультатКурсВалюты.Выбрать();
		Если КурсВалюты.Следующий() Тогда
			КоэффициентПересчета = КурсВалюты.КоэффициентПересчета;
		Иначе
			КоэффициентПересчета = 1;
		КонецЕсли;
	Иначе  
		КоэффициентПересчета = 1;		
	КонецЕсли;
	
	ВалютаРеглУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(СтруктураРеквизитов.Организация);
	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'В рамках периода документа ""%Опись%"" не были оформлены складские акты или не было проведено ни одного пересчета товаров. Нет данных для формирования печатной формы ""ИНВ-3""';
								|en = 'You have not created warehouse acts, or you have not recalculated goods within the period of document ""%Опись%"". No data to generate INV-3 print form.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Опись%", ИнвентаризационнаяОпись);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ИнвентаризационнаяОпись);
		Возврат;
	КонецЕсли;
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьИНВ3.ПФ_MXL_ИНВ3_ru");
	Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапки = Макет.ПолучитьОбласть("ШапкаТаблицы");     
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвалСтраницы = Макет.ПолучитьОбласть("ПодвалСтраницы");
	ОбластьПодвалОписи = Макет.ПолучитьОбласть("ПодвалОписи");
	
	ОбластьЗаголовок.Параметры.Заполнить(Шапка); 
	ДанныеОбласти = Новый Структура;
	ДанныеОбласти.Вставить("ФормаСобственностиЦенностей", НСтр("ru = 'в собственности организации';
																|en = 'owned by company'", Метаданные.Языки.Русский.КодЯзыка));
	ДанныеОбласти.Вставить("ДолжностьМОЛ1", Шапка.ДолжностьКладовщика);
	ДанныеОбласти.Вставить("ФИОМОЛ1", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.Кладовщик, Шапка.ДатаДокумента));
	ДанныеОбласти.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента));
	ДанныеОбласти.Вставить("ОснованиеНомер", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.ОснованиеНомер));
	НаименованияНаДату = ОрганизацииПовтИсп.НаименованияНаДату(Шапка.Организация, Шапка.ДатаДокумента);
	ДанныеОбласти.Вставить("ОрганизацияПредставление", НаименованияНаДату.НаименованиеСокращенное);
	ОбластьЗаголовок.Параметры.Заполнить(ДанныеОбласти);
	
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, Шапка.Ссылка);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ИтоговыеСуммы = Новый Структура;
	
	ИтоговыеСуммы.Вставить("ИтогоПоСтраницеФактКоличество",0);
	ИтоговыеСуммы.Вставить("ИтогоПоСтраницеФактСумма",0);
	ИтоговыеСуммы.Вставить("ИтогоПоСтраницеБухКоличество",0);
	ИтоговыеСуммы.Вставить("ИтогоПоСтраницеБухСумма",0);
	
	ИтоговыеСуммы.Вставить("ИтогоФактКоличество",0);
	ИтоговыеСуммы.Вставить("ИтогоФактСумма",0);
	ИтоговыеСуммы.Вставить("ИтогоБухКоличество",0);
	ИтоговыеСуммы.Вставить("ИтогоБухСумма",0);
	
	НомерСтроки = 0;
	НомерСтраницы = 2;
	ПервыйНомерСтроки = 1;
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	Пока ТабличнаяЧасть.Следующий() Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		ОбластьСтроки.Параметры.Заполнить(ТабличнаяЧасть);
		
		ОбластьСтроки.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			ТабличнаяЧасть.ТоварНаименование,
			ТабличнаяЧасть.ХарактеристикаНаименование,
			ТабличнаяЧасть.СерияНаименование);
		
		ОбластьСтроки.Параметры.НомерСтроки = НомерСтроки;
		ОбластьСтроки.Параметры.Цена = ТабличнаяЧасть.Цена * КоэффициентПересчета;
		ОбластьСтроки.Параметры.СуммаПоУчету = ТабличнаяЧасть.СуммаПоУчету * КоэффициентПересчета; 
		ОбластьСтроки.Параметры.СуммаФактическая = ТабличнаяЧасть.СуммаФактическая * КоэффициентПересчета; 
		
		Если НомерСтроки = 1 Тогда // первая строка
			
			ТекстСтраница = НСтр("ru = 'Страница %НомерСтраницы%';
								|en = 'Page %НомерСтраницы%'", Метаданные.Языки.Русский.КодЯзыка);
			ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",2);
			ОбластьШапки.Параметры.НомерСтраницы = ТекстСтраница;
			
			ТабличныйДокумент.Вывести(ОбластьШапки);
			
		Иначе
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьСтроки);
			МассивВыводимыхОбластей.Добавить(ОбластьПодвалСтраницы);
			
			Если НомерСтроки <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				
				ОбластьПодвалСтраницы.Параметры.Заполнить(ИтоговыеСуммы);
				ОбластьПодвалСтраницы.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = ЧислоПрописью(НомерСтроки - ПервыйНомерСтроки, ,",,,,,,,,0");
				ОбластьПодвалСтраницы.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ФормированиеПечатныхФорм.КоличествоПрописью(ИтоговыеСуммы.ИтогоПоСтраницеФактКоличество);
				ОбластьПодвалСтраницы.Параметры.СуммаФактическиНаСтраницеПрописью = РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(
					ИтоговыеСуммы.ИтогоПоСтраницеФактСумма,
					ВалютаРеглУчета,
					Ложь);
				
				ПервыйНомерСтроки = НомерСтроки;
				
				ТабличныйДокумент.Вывести(ОбластьПодвалСтраницы);
				
				// Очистим итоги по странице.
				ИтоговыеСуммы.ИтогоПоСтраницеФактКоличество = 0;
				ИтоговыеСуммы.ИтогоПоСтраницеФактСумма = 0;
				ИтоговыеСуммы.ИтогоПоСтраницеБухКоличество = 0;
				ИтоговыеСуммы.ИтогоПоСтраницеБухСумма = 0;
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ТекстСтраница = НСтр("ru = 'Страница %НомерСтраницы%';
									|en = 'Page %НомерСтраницы%'", Метаданные.Языки.Русский.КодЯзыка);
				ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",НомерСтраницы);
				ОбластьШапки.Параметры.НомерСтраницы = ТекстСтраница;
				ТабличныйДокумент.Вывести(ОбластьШапки);
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьСтроки);
		
		ИтоговыеСуммы.ИтогоПоСтраницеФактКоличество = ИтоговыеСуммы.ИтогоПоСтраницеФактКоличество + ТабличнаяЧасть.КоличествоФактическое;
		ИтоговыеСуммы.ИтогоПоСтраницеФактСумма = ИтоговыеСуммы.ИтогоПоСтраницеФактСумма + ТабличнаяЧасть.СуммаФактическая * КоэффициентПересчета;
		ИтоговыеСуммы.ИтогоПоСтраницеБухКоличество = ИтоговыеСуммы.ИтогоПоСтраницеБухКоличество + ТабличнаяЧасть.КоличествоПоУчету;
		ИтоговыеСуммы.ИтогоПоСтраницеБухСумма = ИтоговыеСуммы.ИтогоПоСтраницеБухСумма + ТабличнаяЧасть.СуммаПоУчету * КоэффициентПересчета;
		
		ИтоговыеСуммы.ИтогоФактКоличество = ИтоговыеСуммы.ИтогоФактКоличество + ТабличнаяЧасть.КоличествоФактическое;
		ИтоговыеСуммы.ИтогоФактСумма = ИтоговыеСуммы.ИтогоФактСумма + ТабличнаяЧасть.СуммаФактическая * КоэффициентПересчета;
		ИтоговыеСуммы.ИтогоБухКоличество = ИтоговыеСуммы.ИтогоБухКоличество + ТабличнаяЧасть.КоличествоПоУчету;
		ИтоговыеСуммы.ИтогоБухСумма = ИтоговыеСуммы.ИтогоБухСумма + ТабличнаяЧасть.СуммаПоУчету * КоэффициентПересчета;
		
	КонецЦикла;
	
	Если ПервыйНомерСтроки <> НомерСтроки ИЛИ ПервыйНомерСтроки = ТабличнаяЧасть.Количество() Тогда
		ОбластьПодвалСтраницы.Параметры.Заполнить(ИтоговыеСуммы);
		ОбластьПодвалСтраницы.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = ЧислоПрописью(НомерСтроки - ПервыйНомерСтроки + 1, ,",,,,,,,,0");
		ОбластьПодвалСтраницы.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ФормированиеПечатныхФорм.КоличествоПрописью(ИтоговыеСуммы.ИтогоПоСтраницеФактКоличество);
		ОбластьПодвалСтраницы.Параметры.СуммаФактическиНаСтраницеПрописью =  РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(
			ИтоговыеСуммы.ИтогоПоСтраницеФактСумма,
			ВалютаРеглУчета,
			Ложь);
		
		ТабличныйДокумент.Вывести(ОбластьПодвалСтраницы);
	КонецЕсли;
	
	ОбластьПодвалОписи.Параметры.КоличествоПорядковыхНомеровПрописью     = ЧислоПрописью(НомерСтроки, ,",,,,,,,,0");
	ОбластьПодвалОписи.Параметры.ОбщееКоличествоЕдиницФактическиПрописью = ФормированиеПечатныхФорм.КоличествоПрописью(ИтоговыеСуммы.ИтогоФактКоличество);
	ОбластьПодвалОписи.Параметры.СуммаФактическиПрописью     			 = РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоФактСумма,
		                                                                                                           			  ВалютаРеглУчета,
		                                                                                                                      Ложь);
    ОбластьПодвалОписи.Параметры.НачальныйНомерПоПорядку = 1;
    ОбластьПодвалОписи.Параметры.КонечныйНомерПоПорядку	 = НомерСтроки;
	
	ОбластьПодвалОписи.Параметры.ДолжностьПредседателя	 = Шапка.ДолжностьРуководителя;
    ОбластьПодвалОписи.Параметры.ФИОпредседателя     	 = Шапка.Руководитель;
	
	ОбластьПодвалОписи.Параметры.ДолжностьЧленаКомиссии2 = НСтр("ru = 'Главный бухгалтер';
																|en = 'Chief Accountant'", Метаданные.Языки.Русский.КодЯзыка);
	ОбластьПодвалОписи.Параметры.ФИОЧленаКомиссии2       = Шапка.ГлавныйБухгалтер;
	
	ОбластьПодвалОписи.Параметры.ДолжностьМОЛ1           = Шапка.ДолжностьКладовщика;
	ОбластьПодвалОписи.Параметры.ФИОМОЛ1                 = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.Кладовщик, Шапка.ДатаДокумента);
	
	ОбластьПодвалОписи.Параметры.ДолжностьРасчетчика	 = НСтр("ru = 'Главный бухгалтер';
																|en = 'Chief Accountant'", Метаданные.Языки.Русский.КодЯзыка);
	ОбластьПодвалОписи.Параметры.ФИОРасчетчика		     = Шапка.ГлавныйБухгалтер;
	
	ТекстСтраница = НСтр("ru = 'Страница %НомерСтраницы%';
						|en = 'Page %НомерСтраницы%'", Метаданные.Языки.Русский.КодЯзыка);
	ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",НомерСтраницы + 1);
	ОбластьПодвалОписи.Параметры.НомерСтраницы = ТекстСтраница;
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ТабличныйДокумент.Вывести(ОбластьПодвалОписи);
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	
КонецПроцедуры

//++ НЕ УТ

Функция СформироватьПечатнуюФормуИНВ3_НаОснованииИнвентаризации(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСверху = 10;
	ТабличныйДокумент.ПолеСлева = 10;
	ТабличныйДокумент.ПолеСнизу = 10;
	ТабличныйДокумент.ПолеСправа = 10;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНВ3";
	
	УстановитьПривилегированныйРежим(Истина);
	
	НомерДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
			
		Если ВРег(СтруктураОбъектов.Ключ) <> ВРег("Документ.ИнвентаризацияТМЦВЭксплуатации") Тогда
				 
			ТекстСообщения = НСтр("ru = 'Формирование печатной формы ""ИНВ-3"" не доступно для данного вида документов %1.';
									|en = 'You cannot generate print form INV-3 for the %1 document kind.'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, СтруктураОбъектов.Ключ);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			
			Продолжить;
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(СтруктураОбъектов.Ключ);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		КонецЕсли;
		
		Для Каждого ДокументОснование Из СтруктураОбъектов.Значение Цикл
			
			НомерДокумента = НомерДокумента + 1;
			Если НомерДокумента > 1 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
						
			ДанныеДляПечати = МенеджерОбъекта.ДанныеДляПечатнойФормыИНВ3(ПараметрыПечати, ДокументОснование);
			Если НЕ ДанныеДляПечати = Неопределено Тогда
				ЗаполнитьТабличныйДокументИНВ3_НаОснованииИнвентаризации(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ДокументОснование);
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

//
// Параметры:
// 	ТабличныйДокумент - ТабличныйДокумент
// 	ДанныеДляПечати - Структура:
// 		* Шапка - РезультатЗапроса -
// 		* ТабличнаяЧасть - РезультатЗапроса -
// 		* ИнвентаризационнаяКомиссия - РезультатЗапроса -
//	ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати.
//	ДокументОснование - ДокументСсылка.ИнвентаризацияТМЦВЭксплуатации -
//
Процедура ЗаполнитьТабличныйДокументИНВ3_НаОснованииИнвентаризации(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ДокументОснование)
	
	Если ДанныеДляПечати.ТабличнаяЧасть.Пустой() Тогда
		ТекстСообщения = НСтр("ru = 'В документе %1 нет данных для формирования печатной формы ""ИНВ-3""';
								|en = 'The %1 document has no data to generate print form INV-3'");
		ТекстСообщения = СтрШаблон(ТекстСообщения,  ДокументОснование);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументОснование);
		Возврат;
	КонецЕсли;
	
	Шапка = ДанныеДляПечати.Шапка.Выбрать();
	Шапка.Следующий();

	ВалютаРеглУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Шапка.Организация);

	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьИНВ3.ПФ_MXL_ИНВ3_ru");
	Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапки = Макет.ПолучитьОбласть("ШапкаТаблицы");     
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвалСтраницы = Макет.ПолучитьОбласть("ПодвалСтраницы");
	ОбластьПодвалОписи = Макет.ПолучитьОбласть("ПодвалОписи");
	
	ОбластьЗаголовок.Параметры.Заполнить(Шапка);
	ДанныеОбласти = Новый Структура;
	ДанныеОбласти.Вставить("ФормаСобственностиЦенностей", НСтр("ru = 'в собственности организации';
																|en = 'owned by company'", Метаданные.Языки.Русский.КодЯзыка));
	ДанныеОбласти.Вставить("ДолжностьМОЛ1", Шапка.ДолжностьКладовщика);
	ДанныеОбласти.Вставить("ФИОМОЛ1", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.Кладовщик, Шапка.ДатаДокумента));
	ДанныеОбласти.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента));
	ДанныеОбласти.Вставить("ОснованиеНомер", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.ОснованиеНомер));
	НаименованияНаДату = ОрганизацииПовтИсп.НаименованияНаДату(Шапка.Организация, Шапка.ДатаДокумента);
	ДанныеОбласти.Вставить("ОрганизацияПредставление", НаименованияНаДату.НаименованиеСокращенное);
	ОбластьЗаголовок.Параметры.Заполнить(ДанныеОбласти);
	
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, Шапка.Ссылка);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ИтоговыеСуммы = Новый Структура;
	
	ИтоговыеСуммы.Вставить("ИтогоПоСтраницеФактКоличество",0);
	ИтоговыеСуммы.Вставить("ИтогоПоСтраницеФактСумма",0);
	ИтоговыеСуммы.Вставить("ИтогоПоСтраницеБухКоличество",0);
	ИтоговыеСуммы.Вставить("ИтогоПоСтраницеБухСумма",0);
	
	ИтоговыеСуммы.Вставить("ИтогоФактКоличество",0);
	ИтоговыеСуммы.Вставить("ИтогоФактСумма",0);
	ИтоговыеСуммы.Вставить("ИтогоБухКоличество",0);
	ИтоговыеСуммы.Вставить("ИтогоБухСумма",0);
	
	НомерСтроки = 0;
	НомерСтраницы = 2;
	ПервыйНомерСтроки = 1;

	МассивВыводимыхОбластей = Новый Массив;
	
	ПараметрыСтроки = Новый Структура("НомерСтроки, ТоварНаименование");

	СтрокаТовар = ДанныеДляПечати.ТабличнаяЧасть.Выбрать();	
	Пока СтрокаТовар.Следующий() Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		ПараметрыСтроки.НомерСтроки = НомерСтроки;
		
		ПараметрыСтроки.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			СтрокаТовар.ТоварНаименование,
			СтрокаТовар.ХарактеристикаНаименование,,
			СтрокаТовар.СерияНаименование);
		
		ОбластьСтроки.Параметры.Заполнить(СтрокаТовар);
		ОбластьСтроки.Параметры.Заполнить(ПараметрыСтроки);
		
		Если НомерСтроки = 1 Тогда // первая строка
			
			ТекстСтраница = НСтр("ru = 'Страница %НомерСтраницы%';
								|en = 'Page %НомерСтраницы%'", Метаданные.Языки.Русский.КодЯзыка);
			ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",2);
			ОбластьШапки.Параметры.НомерСтраницы = ТекстСтраница;
			
			ТабличныйДокумент.Вывести(ОбластьШапки);
			
		Иначе
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьСтроки);
			МассивВыводимыхОбластей.Добавить(ОбластьПодвалСтраницы);
			
			Если НомерСтроки <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				
				ОбластьПодвалСтраницы.Параметры.Заполнить(ИтоговыеСуммы);
				
				ОбластьПодвалСтраницы.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = 
					ЧислоПрописью(НомерСтроки - ПервыйНомерСтроки, ,",,,,,,,,0");
				
				ОбластьПодвалСтраницы.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = 
					ФормированиеПечатныхФорм.КоличествоПрописью(ИтоговыеСуммы.ИтогоПоСтраницеФактКоличество);
				
				ОбластьПодвалСтраницы.Параметры.СуммаФактическиНаСтраницеПрописью = 
					РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоПоСтраницеФактСумма, ВалютаРеглУчета);
				
				ПервыйНомерСтроки = НомерСтроки;
				
				ТабличныйДокумент.Вывести(ОбластьПодвалСтраницы);
				
				// Очистим итоги по странице.
				ИтоговыеСуммы.ИтогоПоСтраницеФактКоличество = 0;
				ИтоговыеСуммы.ИтогоПоСтраницеФактСумма = 0;
				ИтоговыеСуммы.ИтогоПоСтраницеБухКоличество = 0;
				ИтоговыеСуммы.ИтогоПоСтраницеБухСумма = 0;
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ТекстСтраница = НСтр("ru = 'Страница %НомерСтраницы%';
									|en = 'Page %НомерСтраницы%'", Метаданные.Языки.Русский.КодЯзыка);
				ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",НомерСтраницы);
				ОбластьШапки.Параметры.НомерСтраницы = ТекстСтраница;
				ТабличныйДокумент.Вывести(ОбластьШапки);
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьСтроки);
		
		ИтоговыеСуммы.ИтогоПоСтраницеФактКоличество = ИтоговыеСуммы.ИтогоПоСтраницеФактКоличество + СтрокаТовар.КоличествоФактическое;
		ИтоговыеСуммы.ИтогоПоСтраницеФактСумма = ИтоговыеСуммы.ИтогоПоСтраницеФактСумма + СтрокаТовар.СуммаФактическая;
		ИтоговыеСуммы.ИтогоПоСтраницеБухКоличество = ИтоговыеСуммы.ИтогоПоСтраницеБухКоличество + СтрокаТовар.КоличествоПоУчету;
		ИтоговыеСуммы.ИтогоПоСтраницеБухСумма = ИтоговыеСуммы.ИтогоПоСтраницеБухСумма + СтрокаТовар.СуммаПоУчету;
		
		ИтоговыеСуммы.ИтогоФактКоличество = ИтоговыеСуммы.ИтогоФактКоличество + СтрокаТовар.КоличествоФактическое;
		ИтоговыеСуммы.ИтогоФактСумма = ИтоговыеСуммы.ИтогоФактСумма + СтрокаТовар.СуммаФактическая;
		ИтоговыеСуммы.ИтогоБухКоличество = ИтоговыеСуммы.ИтогоБухКоличество + СтрокаТовар.КоличествоПоУчету;
		ИтоговыеСуммы.ИтогоБухСумма = ИтоговыеСуммы.ИтогоБухСумма + СтрокаТовар.СуммаПоУчету;
		
	КонецЦикла;
	
	Если ПервыйНомерСтроки <> НомерСтроки
		ИЛИ ПервыйНомерСтроки = СтрокаТовар.Количество() Тогда
			
		ОбластьПодвалСтраницы.Параметры.Заполнить(ИтоговыеСуммы);
		ОбластьПодвалСтраницы.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = ЧислоПрописью(НомерСтроки - ПервыйНомерСтроки + 1, ,",,,,,,,,0");
		
		ОбластьПодвалСтраницы.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = 
			ФормированиеПечатныхФорм.КоличествоПрописью(ИтоговыеСуммы.ИтогоПоСтраницеФактКоличество);
		
		ОбластьПодвалСтраницы.Параметры.СуммаФактическиНаСтраницеПрописью = 
			РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоПоСтраницеФактСумма, ВалютаРеглУчета);
		
		ТабличныйДокумент.Вывести(ОбластьПодвалСтраницы);
		
	КонецЕсли;
	
	ОбластьПодвалОписи.Параметры.КоличествоПорядковыхНомеровПрописью = ЧислоПрописью(НомерСтроки, ,",,,,,,,,0");
	
	ОбластьПодвалОписи.Параметры.ОбщееКоличествоЕдиницФактическиПрописью = 
		ФормированиеПечатныхФорм.КоличествоПрописью(ИтоговыеСуммы.ИтогоФактКоличество);
	
	ОбластьПодвалОписи.Параметры.СуммаФактическиПрописью = 
		РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоФактСумма, ВалютаРеглУчета, Ложь);
		
    ОбластьПодвалОписи.Параметры.НачальныйНомерПоПорядку = 1;
    ОбластьПодвалОписи.Параметры.КонечныйНомерПоПорядку = НомерСтроки;
	
	КоличествоЧленовКомиссии = 1;
	Выборка = ДанныеДляПечати.ИнвентаризационнаяКомиссия.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Председатель Тогда
    		ОбластьПодвалОписи.Параметры.ФИОпредседателя = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Выборка.ФизЛицо, Шапка.ДатаДокумента);
		ИначеЕсли КоличествоЧленовКомиссии = 1 Тогда
			ОбластьПодвалОписи.Параметры.ФИОЧленаКомиссии2 = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Выборка.ФизЛицо, Шапка.ДатаДокумента);
			КоличествоЧленовКомиссии = КоличествоЧленовКомиссии + 1;
		ИначеЕсли КоличествоЧленовКомиссии = 2 Тогда
			ОбластьПодвалОписи.Параметры.ФИОЧленаКомиссии3 = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Выборка.ФизЛицо, Шапка.ДатаДокумента);
			КоличествоЧленовКомиссии = КоличествоЧленовКомиссии + 1;
		ИначеЕсли КоличествоЧленовКомиссии = 3 Тогда
			ОбластьПодвалОписи.Параметры.ФИОЧленаКомиссии4 = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Выборка.ФизЛицо, Шапка.ДатаДокумента);
			КоличествоЧленовКомиссии = КоличествоЧленовКомиссии + 1;
		КонецЕсли;
		
	КонецЦикла;
		
	ОбластьПодвалОписи.Параметры.ДолжностьМОЛ1 = Шапка.ДолжностьКладовщика;
	ОбластьПодвалОписи.Параметры.ФИОМОЛ1 = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.Кладовщик, Шапка.ДатаДокумента);
	
	ОбластьПодвалОписи.Параметры.ДолжностьРасчетчика = НСтр("ru = 'Главный бухгалтер';
															|en = 'Chief Accountant'", Метаданные.Языки.Русский.КодЯзыка);
	ОбластьПодвалОписи.Параметры.ФИОРасчетчика = Шапка.ГлавныйБухгалтер;
	
	ТекстСтраница = НСтр("ru = 'Страница %НомерСтраницы%';
						|en = 'Page %НомерСтраницы%'", Метаданные.Языки.Русский.КодЯзыка);
	ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",НомерСтраницы + 1);
	ОбластьПодвалОписи.Параметры.НомерСтраницы = ТекстСтраница;
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ТабличныйДокумент.Вывести(ОбластьПодвалОписи);
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	
КонецПроцедуры

//-- НЕ УТ

#КонецОбласти

#КонецОбласти

#КонецЕсли
