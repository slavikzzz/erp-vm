#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Настройки = Обработки.ВыполнениеОпераций2_2.ПолучитьНастройкиПользователя();
	
	Если Настройки <> Неопределено
		И Настройки.Свойство("РежимРаботы")
		И Настройки.Свойство("Подразделение")
		И Настройки.Свойство("Участок")
		И Настройки.Свойство("РабочийЦентр")
		И Настройки.Свойство("Исполнитель")
		И Настройки.Свойство("МожноИзменятьПодразделение") Тогда
		
		РежимРаботы        = Настройки.РежимРаботы;
		ПодразделениеОтбор = Настройки.Подразделение;
		УчастокОтбор       = Настройки.Участок;
		РабочийЦентрОтбор  = Настройки.РабочийЦентр;
		ИсполнительОтбор   = Настройки.Исполнитель;
		
		ИсполнительВНастройках = ЗначениеЗаполнено(Настройки.Исполнитель);
		РЦВНастройках          = ЗначениеЗаполнено(Настройки.РабочийЦентр);
		УчастокВНастройках     = ЗначениеЗаполнено(Настройки.Участок);
		
		Элементы.ФормаСменитьПодразделение.Видимость = Настройки.МожноИзменятьПодразделение;
		
	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = Нстр("ru = 'Невозможно открыть рабочее место. Отсутствуют настройки открытия формы';
								|en = 'Unable to open workplace. The form opening settings are missing'");
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	ИспользуютсяСменныеЗадания =
		ПроизводствоСервер.ПараметрыПроизводственногоПодразделения(ПодразделениеОтбор).ИспользоватьСменныеЗадания;
	
	ЗаполнитьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_ПроизводственнаяОперация2_2"
		И ТипЗнч(Параметр) = Тип("Структура")
		И Параметр.Свойство("Подразделение")
		И Параметр.Подразделение = ПодразделениеОтбор Тогда
		
		ОбновитьДанные();
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРазделы

&НаКлиенте
Процедура РазделыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.Разделы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	
	ПараметрыФормы.Вставить("МожноВыполнять",     МожноВыполнять);
	ПараметрыФормы.Вставить("ПодразделениеОтбор", ПодразделениеОтбор);
	ПараметрыФормы.Вставить("УчастокОтбор",       УчастокОтбор);
	ПараметрыФормы.Вставить("ВидРЦОтбор",         ВидРЦОтбор);
	ПараметрыФормы.Вставить("РабочийЦентрОтбор",  РабочийЦентрОтбор);
	ПараметрыФормы.Вставить("ИзделиеОтбор",       ИзделиеОтбор);
	ПараметрыФормы.Вставить("ОперацияОтбор",      ОперацияОтбор);
	ПараметрыФормы.Вставить("ИсполнительОтбор",   ИсполнительОтбор);
	ПараметрыФормы.Вставить("ПартияОтбор",        ПартияОтбор);
	ПараметрыФормы.Вставить("ЭтапОтбор",          ЭтапОтбор);
	
	Раздел = Элементы.Разделы.ТекущиеДанные.ИмяРаздела;
	
	Если Раздел = "Назначение" Тогда
		
		УИДЗамера = ОценкаПроизводительностиКлиент.ЗамерВремени("Обработка.ВыполнениеОпераций2_2.Форма.МобильноеПриложениеСписокНазначить.ОткрытиеФормы",, Ложь);
		
		ОткрытьФорму("Обработка.ВыполнениеОпераций2_2.Форма.МобильноеПриложениеСписокНазначить",
					ПараметрыФормы,
					ЭтаФорма,
					,
					,
					,
					Новый ОписаниеОповещения("РазделыВыборЗавершение",ЭтаФорма));
		
		ОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(УИДЗамера);
		
	ИначеЕсли Раздел = "Принятие" ИЛИ Раздел = "Выполнение" Тогда
		
		Если Раздел = "Принятие" Тогда
			ПараметрыФормы.Вставить("РежимРаботы", "ПринятиеВРаботу");
		КонеЦЕсли;
		
		УИДЗамера = ОценкаПроизводительностиКлиент.ЗамерВремени("Обработка.ВыполнениеОпераций2_2.Форма.МобильноеПриложениеСписокОтметитьВыполнение.ОткрытиеФормы",, Ложь);
		
		ОткрытьФорму("Обработка.ВыполнениеОпераций2_2.Форма.МобильноеПриложениеСписокОтметитьВыполнение",
					ПараметрыФормы,
					ЭтаФорма,
					,
					,
					,
					Новый ОписаниеОповещения("РазделыВыборЗавершение",ЭтаФорма));
		
		ОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(УИДЗамера);
		
	ИначеЕсли Раздел = "Журнал" Тогда
		
		ОткрытьФорму("Документ.ПроизводственнаяОперация2_2.ФормаСписка",ПараметрыФормы,ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыОбработкаЗапросаОбновления()
	
	ОбновитьДанные();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СменитьПодразделение(Команда)
	ВыборПодразделения = Новый ОписаниеОповещения("ВыборПодразделения",ЭтаФорма);
		
	ПоказатьВводЗначения(ВыборПодразделения,ПодразделениеОтбор,Нстр("ru = 'Выберите подразделение';
																	|en = 'Choose a business unit'"));
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элементы.РазделыОписание.Шрифт     = Новый Шрифт(ШрифтыСтиля.ШрифтТекста,,12);
	Элементы.РазделыВажныеДанные.Шрифт = Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,6);
	
КонецПроцедуры

&НаСервере
Процедура ВыборПодразделения(Результат, ДополнительныеПараметры) Экспорт
	ПодразделениеОтбор = Результат;
	
	ИспользуютсяСменныеЗадания =
		ПроизводствоСервер.ПараметрыПроизводственногоПодразделения(ПодразделениеОтбор).ИспользоватьСменныеЗадания;
	
	ЗаполнитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные()
	
	УИДЗамера = ОценкаПроизводительностиКлиент.ЗамерВремени("Обработка.ВыполнениеОпераций2_2.Форма.МобильноеПриложениеНачальнаяСтраница.ОбновитьДанные",, Ложь);
	
	ЗаполнитьДанныеВнутриЗамераВремени();
	
	ОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(УИДЗамера);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанные()
	
	ВремяНачалаЗамера = ОценкаПроизводительности.НачатьЗамерВремени();
	
	ЗаполнитьДанныеВнутриЗамераВремени();
	
	ОценкаПроизводительности.ЗакончитьЗамерВремени("Обработка.ВыполнениеОпераций2_2.Форма.МобильноеПриложениеНачальнаяСтраница.ЗаполнитьДанные", ВремяНачалаЗамера);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеВнутриЗамераВремени()
	
	Заголовок = ПодразделениеОтбор;
	
	Разделы.Очистить();
	
	// Количество для назначени
	Если РежимРаботы = Перечисления.РежимыРаботыРабМестоБригадира.НазначениеПринятиеВРаботуИВыполнение
		ИЛИ РежимРаботы = Перечисления.РежимыРаботыРабМестоБригадира.НазначениеИВыполнение Тогда
		
		Запрос = ЗапросНаНеназначенныеОперации();
		
		Результат = Запрос.Выполнить().Выбрать();
		
		Если Результат.Следующий() Тогда
			МожноНачинать  = Результат.КоличествоМожноВыполнять;
			ВсеКНазначению = Результат.КоличествоКНазначению;
		КонецЕсли;
		
		МожноНачинать  = ?(МожноНачинать  = Null,0,МожноНачинать);
		ВсеКНазначению = ?(ВсеКНазначению = Null,0,ВсеКНазначению);
		
		ВсегоНазначить = МожноНачинать + ВсеКНазначению;
		
		СтрокаРаздела = Разделы.Добавить();
		СтрокаРаздела.Картинка     = БиблиотекаКартинок.ЗначокПлюс;
		СтрокаРаздела.ИмяРаздела   = "Назначение";
		СтрокаРаздела.Описание     = НСтр("ru = 'Назначить операцию';
											|en = 'Assign operation'");
		СтрокаРаздела.ВажныеДанные = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										НСтр("ru = 'Можно начинать: %1 %2Всего к назначению: %3';
											|en = 'May start: %1%2Total to be appointed: %3'"),
										МожноНачинать,
										Символы.ПС,
										ВсегоНазначить);
		
	КонецЕсли;
	
	// Количество для принятия и выполнения
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СУММА(ВЫБОР Операции.Статус
		|			КОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыПроизводственныхОпераций.Выполняется)
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Начатые,
		|	СУММА(ВЫБОР Операции.Статус
		|			КОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыПроизводственныхОпераций.Создана)
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Созданные
		|ИЗ
		|	Документ.ПроизводственнаяОперация2_2 КАК Операции
		|ГДЕ
		|	Операции.Подразделение = &Подразделение
		|	И &ТекстОтборПоУчастку
		|	И &ТекстОтборПоРабочемуЦентру
		|	И &ТекстОтборПоИсполнителю
		|	И &ТекстОтборПоСмене
		|	И Операции.Проведен");
	
	Если УчастокВНастройках Тогда
		
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоУчастку","И Операции.Участок = &Участок");
			
			Запрос.УстановитьПараметр("Участок",УчастокОтбор);
		Иначе
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоУчастку","");
			
	КонецЕсли;
		
	Если РЦВНастройках Тогда
		
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоРабочемуЦентру",
				"И Операции.РабочийЦентр = &РабочийЦентр");
			
			Запрос.УстановитьПараметр("РабочийЦентр",РабочийЦентрОтбор);
			
		Иначе
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоРабочемуЦентру","");
			
	КонецЕсли;
	
	Если ИсполнительВНастройках Тогда
		
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоИсполнителю","И Операции.Исполнитель = &Исполнитель");
			
			Запрос.УстановитьПараметр("Исполнитель",ИсполнительОтбор);
		Иначе
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоИсполнителю","");
			
	КонецЕсли;
	
	Если ИспользуютсяСменныеЗадания Тогда
	
		ДанныеСмены = ОперативныйУчетПроизводства.ТекущаяСмена(ПодразделениеОтбор);
		
		Запрос.Текст = СтрЗаменить(
						Запрос.Текст,
						"И &ТекстОтборПоСмене",
						"И (Операции.СменноеЗадание.Дата <= &Дата И НЕ Операции.СменноеЗадание.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСменныхЗаданий.Закрыто))");
		
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(ДанныеСмены), ДанныеСмены.Дата, ТекущаяДатаСеанса()));
	Иначе
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоСмене","");
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Подразделение",ПодразделениеОтбор);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Начатые   = Результат.Начатые;
		Созданные = Результат.Созданные;
	КонецЕсли;
	
	Начатые   = ?(Начатые   = Null,0,Начатые);
	Созданные = ?(Созданные = Null,0,Созданные);
	
	ВсегоОпераций = Начатые + Созданные;
	
	Если РежимРаботы = Перечисления.РежимыРаботыРабМестоБригадира.НазначениеПринятиеВРаботуИВыполнение 
		ИЛИ РежимРаботы = Перечисления.РежимыРаботыРабМестоБригадира.ПринятиеВРаботуИВыполнение Тогда
		
		СтрокаРаздела = Разделы.Добавить();
		СтрокаРаздела.Картинка     = БиблиотекаКартинок.ЗавершающийБуфер;
		СтрокаРаздела.ИмяРаздела   = "Принятие";
		СтрокаРаздела.Описание     = НСтр("ru = 'Принять в работу';
											|en = 'Start'");
		СтрокаРаздела.ВажныеДанные = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										НСтр("ru = 'Не начато: %1';
											|en = 'Not started: %1'"),
										Созданные);
		
	КонецЕсли;
	
	СтрокаРаздела = Разделы.Добавить();
	СтрокаРаздела.Картинка     = БиблиотекаКартинок.ВыполненоУспешно;
	СтрокаРаздела.ИмяРаздела   = "Выполнение";
	СтрокаРаздела.Описание     = НСтр("ru = 'Отметить выполнение';
										|en = 'Mark as completed'");
	СтрокаРаздела.ВажныеДанные = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Назначено: %1';
										|en = 'Assigned: %1'"),
									ВсегоОпераций);
	
	СтрокаРаздела = Разделы.Добавить();
	СтрокаРаздела.Картинка   = БиблиотекаКартинок.ТиповоеСоглашениеСКлиентом;
	СтрокаРаздела.ИмяРаздела = "Журнал";
	СтрокаРаздела.Описание   = НСтр("ru = 'Журнал операций';
									|en = 'Operation journal'");
	
	Элементы.Диаграмма.Видимость = ИспользуютсяСменныеЗадания;
	
	Если ИспользуютсяСменныеЗадания Тогда
		ОтобразитьДиаграмму();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		МожноВыполнять    = Результат.МожноВыполнять;
		ВидРЦОтбор        = Результат.ВидРЦ;
		РабочийЦентрОтбор = Результат.РабочийЦентр;
		ИсполнительОтбор  = Результат.Исполнитель;
		ОперацияОтбор     = Результат.Операция;
		ИзделиеОтбор      = Результат.Изделие;
		ПартияОтбор       = Результат.Партия;
		ЭтапОтбор         = Результат.Этап;
		УчастокОтбор      = Результат.Участок;
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗапросНаНеназначенныеОперации()
	
	Если ИспользуютсяСменныеЗадания Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА ОперацииСЗ.МожноНазначать
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоМожноВыполнять,
		|	СУММА(ВЫБОР
		|			КОГДА НЕ ОперацииСЗ.МожноНазначать
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоКНазначению
		|ИЗ
		|	РегистрСведений.ОперацииКСозданиюСменныхЗаданий КАК ОперацииСЗ
		|ГДЕ
		|	ОперацииСЗ.СменноеЗадание = ЗНАЧЕНИЕ(Документ.СменноеЗадание.ПустаяСсылка)
		|	И ОперацииСЗ.Подразделение = &Подразделение
		|	И &ТекстОтборПоУчастку
		|	И &ТекстОтборПоРабочемуЦентру");
		
		Если УчастокВНастройках Тогда
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоУчастку",
			"	И (ОперацииСЗ.Операция.РабочийЦентр = НЕОПРЕДЕЛЕНО
			|		ИЛИ ОперацииСЗ.Операция.РабочийЦентр = ЗНАЧЕНИЕ(Справочник.РабочиеЦентры.ПустаяСсылка)
			|		ИЛИ ОперацииСЗ.Операция.РабочийЦентр = ЗНАЧЕНИЕ(Справочник.ВидыРабочихЦентров.ПустаяСсылка)
			|		ИЛИ ОперацииСЗ.Операция.РабочийЦентр ССЫЛКА Справочник.РабочиеЦентры
			|			И ОперацииСЗ.Операция.РабочийЦентр.Участок = &Участок
			|		ИЛИ ОперацииСЗ.Операция.РабочийЦентр ССЫЛКА Справочник.ВидыРабочихЦентров
			|			И ИСТИНА В
			|				(ВЫБРАТЬ ПЕРВЫЕ 1
			|					ИСТИНА
			|				ИЗ
			|					Справочник.РабочиеЦентры КАК Т
			|				ГДЕ
			|					Т.ВидРабочегоЦентра = ОперацииСЗ.Операция.РабочийЦентр
			|					И Т.Участок = &Участок))");
			
			Запрос.УстановитьПараметр("Участок",УчастокОтбор);
		Иначе
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоУчастку","");
			
		КонецЕсли;
		
		Если РЦВНастройках Тогда
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоРабочемуЦентру",
			"	И (ОперацииСЗ.Операция.РабочийЦентр ССЫЛКА Справочник.ВидыРабочихЦентров
			|			И ОперацииСЗ.Операция.РабочийЦентр = &ВидРЦ)
			|		ИЛИ (ОперацииСЗ.Операция.РабочийЦентр ССЫЛКА Справочник.РабочиеЦентры
			|			И ОперацииСЗ.Операция.РабочийЦентр = &РабочийЦентр)");
			
			Запрос.УстановитьПараметр("ВидРЦ",ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РабочийЦентрОтбор,"ВидРабочегоЦентра"));
			Запрос.УстановитьПараметр("РабочийЦентр",РабочийЦентрОтбор);
			
		Иначе
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоРабочемуЦентру","");
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Подразделение",ПодразделениеОтбор);
		
		Возврат Запрос;
		
	Иначе
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА Очередь.МожноВыполнять > 0 
		|					И Очередь.МожноВыполнять > Очередь.Создано - (Очередь.Выполняется + Очередь.Выполнено + Очередь.Пропущено)
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоМожноВыполнять,
		|	СУММА(ВЫБОР
		|			КОГДА Очередь.МожноВыполнять = 0 И (Очередь.ОжиданиеПредшествующих > 0
		|						И Очередь.ОжиданиеПредшествующих > Очередь.Создано - (Очередь.Выполняется + Очередь.Выполнено + Очередь.Пропущено)
		|					ИЛИ Очередь.НачатыПредшествующие > 0
		|						И Очередь.НачатыПредшествующие > Очередь.Создано - (Очередь.Выполняется + Очередь.Выполнено + Очередь.Пропущено))
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоКНазначению
		|ИЗ
		|	РегистрСведений.ОчередьПроизводственныхОпераций КАК Очередь
		|ГДЕ
		|	Очередь.Подразделение = &Подразделение
		|	И НЕ Очередь.ВАрхиве
		|	И &ТекстОтборПоУчастку
		|	И &ТекстОтборПоРабочемуЦентру");
		
		Если УчастокВНастройках Тогда
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоУчастку",
			"	И (Очередь.Операция.РабочийЦентр = НЕОПРЕДЕЛЕНО
			|		ИЛИ Очередь.Операция.РабочийЦентр = ЗНАЧЕНИЕ(Справочник.РабочиеЦентры.ПустаяСсылка)
			|		ИЛИ Очередь.Операция.РабочийЦентр = ЗНАЧЕНИЕ(Справочник.ВидыРабочихЦентров.ПустаяСсылка)
			|		ИЛИ Очередь.Операция.РабочийЦентр ССЫЛКА Справочник.РабочиеЦентры
			|			И Очередь.Операция.РабочийЦентр.Участок = &Участок
			|		ИЛИ Очередь.Операция.РабочийЦентр ССЫЛКА Справочник.ВидыРабочихЦентров
			|			И ИСТИНА В
			|				(ВЫБРАТЬ ПЕРВЫЕ 1
			|					ИСТИНА
			|				ИЗ
			|					Справочник.РабочиеЦентры КАК Т
			|				ГДЕ
			|					Т.ВидРабочегоЦентра = Очередь.Операция.РабочийЦентр
			|					И Т.Участок = &Участок))");
			
			Запрос.УстановитьПараметр("Участок",УчастокОтбор);
		Иначе
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоУчастку","");
			
		КонецЕсли;
		
		Если РЦВНастройках Тогда
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоРабочемуЦентру",
			"	И (Очередь.Операция.РабочийЦентр ССЫЛКА Справочник.ВидыРабочихЦентров
			|			И Очередь.Операция.РабочийЦентр = &ВидРЦ)
			|		ИЛИ (Очередь.Операция.РабочийЦентр ССЫЛКА Справочник.РабочиеЦентры
			|			И Очередь.Операция.РабочийЦентр = &РабочийЦентр)");
			
			Запрос.УстановитьПараметр("ВидРЦ",ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РабочийЦентрОтбор,"ВидРабочегоЦентра"));
			Запрос.УстановитьПараметр("РабочийЦентр",РабочийЦентрОтбор);
		Иначе
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоРабочемуЦентру","");
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Подразделение",ПодразделениеОтбор);
		
		Возврат Запрос;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ОтобразитьДиаграмму()
	
	Диаграмма.Очистить();
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА Операции.КоличествоФакт > 0
		|				ТОГДА ВЫБОР Операции.ВремяВыполненияЕдИзм
		|						КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Секунда)
		|							ТОГДА (Операции.ВремяВыполнения / Операции.Количество * Операции.КоличествоФакт)/3600
		|						КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Минута)
		|							ТОГДА (Операции.ВремяВыполнения / Операции.Количество * Операции.КоличествоФакт)/60
		|						КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час)
		|							ТОГДА (Операции.ВремяВыполнения / Операции.Количество * Операции.КоличествоФакт)
		|						КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.День)
		|							ТОГДА (Операции.ВремяВыполнения / Операции.Количество * Операции.КоличествоФакт)*24
		|						КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Сутки)
		|							ТОГДА (Операции.ВремяВыполнения / Операции.Количество * Операции.КоличествоФакт)*24
		|						КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВремяВыполнено,
		|	СУММА(ВЫБОР Операции.ВремяВыполненияЕдИзм
		|			КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Секунда)
		|				ТОГДА Операции.ВремяВыполнения/3600
		|			КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Минута)
		|				ТОГДА Операции.ВремяВыполнения/60
		|			КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час)
		|				ТОГДА Операции.ВремяВыполнения
		|			КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.День)
		|				ТОГДА Операции.ВремяВыполнения*24
		|			КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Сутки)
		|				ТОГДА Операции.ВремяВыполнения*24
		|		КОНЕЦ) КАК ВремяВсего
		|ИЗ
		|	Документ.ПроизводственнаяОперация2_2 КАК Операции
		|ГДЕ
		|	Операции.СменноеЗадание.Дата = &Дата
		|	И Операции.Подразделение = &Подразделение
		|	И &ТекстОтборПоУчастку
		|	И &ТекстОтборПоРабочемуЦентру
		|	И &ТекстОтборПоИсполнителю
		|	И Операции.Проведен");
	
	ДанныеСмены = ОперативныйУчетПроизводства.ТекущаяСмена(ПодразделениеОтбор);
	
	Если НЕ ЗначениеЗаполнено(ДанныеСмены) Тогда
	
		Элементы.Диаграмма.Видимость = Ложь;
		
		Возврат;
	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата", ДанныеСмены.Дата);
	Запрос.УстановитьПараметр("Подразделение",ПодразделениеОтбор);
	
	Если УчастокВНастройках Тогда
		
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоУчастку","И Операции.Участок = &Участок");
			
			Запрос.УстановитьПараметр("Участок",УчастокОтбор);
		Иначе
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоУчастку","");
			
	КонецЕсли;
		
	Если РЦВНастройках Тогда
		
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоРабочемуЦентру",
				"И Операции.РабочийЦентр = &РабочийЦентр");
			
			Запрос.УстановитьПараметр("РабочийЦентр",РабочийЦентрОтбор);
		Иначе
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоРабочемуЦентру","");
			
	КонецЕсли;
	
	Если ИсполнительВНастройках Тогда
		
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоИсполнителю","И Операции.Исполнитель = &Исполнитель");
			
			Запрос.УстановитьПараметр("Исполнитель",ИсполнительОтбор);
		Иначе
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ТекстОтборПоИсполнителю","");
			
	КонецЕсли;
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
	
		ВремяВыполнено = Результат.ВремяВыполнено;
		ВремяВсего     = Результат.ВремяВсего;
		
	КонецЕсли;
	
	Если ВремяВсего = 0 ИЛИ ВремяВсего = NULL Тогда
		ВыполненоПроцент = 0;
	Иначе
		ВыполненоПроцент = ВремяВыполнено/ВремяВсего*100;
	КонецЕсли;
	
	Серия1 = Диаграмма.Серии.Добавить("Выполнено");
	Серия2 = Диаграмма.Серии.Добавить();
	
	Серия1.Цвет = Новый Цвет(87, 190, 133);
	Серия2.Цвет = WebЦвета.Белый;
	
	Серия1.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Выполнение %1%';
			|en = 'Execution %1%'"),
		Окр(ВыполненоПроцент,2));
	
	Диаграмма.ОбластьЗаголовка.Текст = УправлениеПроизводствомКлиентСервер.ПредставлениеСменногоЗадания(
		ДанныеСмены.Смена,
		ДанныеСмены.Дата,
		УчастокОтбор,
		Истина);
	
	Точка = Диаграмма.УстановитьТочку(1);
	
	Диаграмма.УстановитьЗначение(Точка, Серия1,ВыполненоПроцент);
	Диаграмма.УстановитьЗначение(Точка,Серия2,100-ВыполненоПроцент);

	Элементы.Диаграмма.Видимость = Истина;
КонецПроцедуры

#КонецОбласти