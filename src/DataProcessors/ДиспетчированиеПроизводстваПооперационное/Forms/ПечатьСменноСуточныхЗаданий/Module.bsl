//++ Устарело_Производство21
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗаданияПриСоздании();
	
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаПечать(Команда)
	
	ВыбранныеДаты = ВыбранныеЗначенияСписка(ДатыЗаданий);
	ВыбранныеБригады = ВыбранныеЗначенияСписка(Бригады);
	
	НазначитьШтрихкоды(ВыбранныеДаты, ВыбранныеБригады);
	
	Если ЗначениеЗаполнено(ВыбранныеДаты) И ЗначениеЗаполнено(ВыбранныеБригады) Тогда
		
		ПараметрыПечати.Вставить("ДатыЗаданий", ВыбранныеДаты);
		ПараметрыПечати.Вставить("Бригады", ВыбранныеБригады);
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Обработка.ДиспетчированиеПроизводстваПооперационное", 
			"СменноСуточноеЗадание", 
			ВыбранныеБригады, 
			Неопределено, 
			ПараметрыПечати);
		
		Закрыть();
		
	Иначе
		
		Если НЕ ЗначениеЗаполнено(ВыбранныеДаты) Тогда
			ТекстСообщения = НСтр("ru = 'Для печати сменно-суточных заданий необходимо выбрать даты заданий.';
									|en = 'To print shift-day jobs, select job dates.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ДатыЗаданий");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыбранныеБригады) Тогда
			ТекстСообщения = НСтр("ru = 'Для печати сменно-суточных заданий необходимо выбрать бригады.';
									|en = 'To print shift-day jobs, select teams. '");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Бригады");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьЗаданияПриСоздании()
	
	ПараметрыПечати = Обработки.ДиспетчированиеПроизводстваПооперационное.ПараметрыВыборкиСменноСуточныхЗаданий();
	
	Если Параметры.Свойство("Подразделение") Тогда
		ПараметрыПечати.Вставить("Подразделение", Параметры.Подразделение);
	КонецЕсли;
	Если Параметры.Свойство("Начало") Тогда
		ПараметрыПечати.Вставить("Начало", Параметры.Начало);
	КонецЕсли;
	Если Параметры.Свойство("Окончание") Тогда
		ПараметрыПечати.Вставить("Окончание", Параметры.Окончание);
	КонецЕсли;
	
	ОбработанныеДаты = Новый Массив;
	ДанныеЗаданий = Обработки.ДиспетчированиеПроизводстваПооперационное.ДанныеСменноСуточныхЗаданий(ПараметрыПечати);
	ВыборкаБригада = ДанныеЗаданий.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаБригада.Следующий() Цикл
		
		Бригады.Добавить(ВыборкаБригада.Бригада);
		ВыборкаДатаЗадания = ВыборкаБригада.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДатаЗадания.Следующий() Цикл
			
			Если ОбработанныеДаты.Найти(ВыборкаДатаЗадания.ДатаЗадания) = Неопределено Тогда
				ДатыЗаданий.Добавить(ВыборкаДатаЗадания.ДатаЗадания);
				ОбработанныеДаты.Добавить(ВыборкаДатаЗадания.ДатаЗадания);
			КонецЕсли;
			
			Выборка = ВыборкаДатаЗадания.Выбрать();
			Пока Выборка.Следующий() Цикл
				Если НЕ ЗначениеЗаполнено(Выборка.Штрихкод) И НЕ Выборка.ИдентификаторОперации = NULL Тогда
					НоваяСтрока = ОперацииБезШтрихкода.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Бригады.ЗаполнитьПометки(Истина);
	
	ДатыЗаданий.СортироватьПоЗначению();
	ДатыЗаданий.ЗаполнитьПометки(Истина);
	
КонецПроцедуры

&НаКлиенте
Функция ВыбранныеЗначенияСписка(Список)
	
	Результат = Новый Массив;
	
	Для каждого ЭлементКоллекции Из Список Цикл
		Если ЭлементКоллекции.Пометка Тогда
			Результат.Добавить(ЭлементКоллекции.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура НазначитьШтрихкоды(ДатыЗаданий, Бригады)
	
	Операции = Новый Массив;
	СтруктураПоиска = Новый Структура("ДатаЗадания, Бригада");
	
	Для каждого Бригада Из Бригады Цикл
		Для каждого ДатаЗадания Из ДатыЗаданий Цикл
			
			СтруктураПоиска.Бригада = Бригада;
			СтруктураПоиска.ДатаЗадания = ДатаЗадания;
			
			СтрокиПоиска = ОперацииБезШтрихкода.НайтиСтроки(СтруктураПоиска);
			Для каждого Строка Из СтрокиПоиска Цикл
				Операции.Добавить(Строка.ИдентификаторОперации);
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Операции) Тогда
		
		ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(Операции);
		РегистрыСведений.ПооперационноеРасписание.НазначитьШтрихкоды(Операции);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
//-- Устарело_Производство21