#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	РезультатПроверки = ПолучитьИзВременногоХранилища(Параметры.АдресРезультатаПроверки);
	
	ХозяйственныеОперацииБезПравилОтражения.Загрузить(РезультатПроверки.ХозяйственныеОперацииБезПравилОтражения);
	СчетаБезПравилОтражения.Загрузить(РезультатПроверки.СчетаБезПравилОтражения);
	ОбъектыУчетаТребующиеНастройки.Загрузить(РезультатПроверки.ОбъектыУчетаТребующиеНастройки);
	
	ЗаполнитьПредставлениеОбъектовУчета();
	
	Организация = Параметры.Организация;
	Документ = Параметры.Документ;
	ПланСчетов = Параметры.ПланСчетов;
	
	УстановитьВидимостьЭлементовФормы();
	
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ХозяйственныеОперацииБезПравилОтраженияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = ХозяйственныеОперацииБезПравилОтражения.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ПараметрыФормы = МеждународныйУчетКлиент.ПараметрыОткрытияФормНастройкиПроводок();
	ПараметрыФормы.НастройкаФормированияПроводок = ТекущиеДанные.НастройкаФормированияПроводок;
	МеждународныйУчетПоДаннымОперативногоУчетаКлиент.ОткрытьНастройкуШаблоновПроводок(
		ПараметрыФормы, ЭтотОбъект, ТекущиеДанные.ХозяйственнаяОперация);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетаБезПравилОтраженияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	НастроитьСоответствиеСчетов(ВыбраннаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыУчетаТребующиеНастройкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = ОбъектыУчетаТребующиеНастройки.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ПараметрыФормы = МеждународныйУчетКлиент.ПараметрыОткрытияФормНастройкиПроводок();
	ПараметрыФормы.Организация = Организация;
	ПараметрыФормы.ПланСчетов = ТекущиеДанные.ПланСчетов;
	ПараметрыФормы.НастройкаФормированияПроводок = ТекущиеДанные.НастройкаФормированияПроводок;
	МеждународныйУчетПоДаннымФинансовыхРегистровКлиент.ОткрытьНастройкуСчетовПоОбъектамУчета(
		ПараметрыФормы, ЭтотОбъект, ТекущиеДанные.ОбъектУчета, ТекущиеДанные.ОбъектНастройки);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьШаблонПроводки(Команда)
	
	ТекущиеДанные = Элементы.ХозяйственныеОперацииБезПравилОтражения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = МеждународныйУчетКлиент.ПараметрыОткрытияФормНастройкиПроводок();
	ПараметрыФормы.Организация = Организация;
	ПараметрыФормы.ПланСчетов = ТекущиеДанные.ПланСчетов;
	ПараметрыФормы.НастройкаФормированияПроводок = ТекущиеДанные.НастройкаФормированияПроводок;
	МеждународныйУчетПоДаннымОперативногоУчетаКлиент.ОткрытьНастройкуШаблоновПроводок(
		ПараметрыФормы, ЭтотОбъект, ТекущиеДанные.ХозяйственнаяОперация);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьСоответствиеСчетов(Команда)
	
	ТекущиеДанные = Элементы.СчетаБезПравилОтражения.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = МеждународныйУчетКлиент.ПараметрыОткрытияФормНастройкиПроводок();
	ПараметрыФормы.Организация = Организация;
	ПараметрыФормы.ПланСчетов = ТекущиеДанные.ПланСчетов;
	ПараметрыФормы.НастройкаФормированияПроводок = ТекущиеДанные.НастройкаФормированияПроводок;
	
	МеждународныйУчетПоДаннымРеглУчетаКлиент.ОткрытьНастройкуСоответствияСчетовИОборотов(
		ПараметрыФормы, ЭтаФорма, ТекущиеДанные.Счет);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьСчетаПоОбъектамУчета(Команда)

	ТекущиеДанные = Элементы.ОбъектыУчетаТребующиеНастройки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = МеждународныйУчетКлиент.ПараметрыОткрытияФормНастройкиПроводок();
	ПараметрыФормы.Организация = Организация;
	ПараметрыФормы.ПланСчетов = ТекущиеДанные.ПланСчетов;
	ПараметрыФормы.НастройкаФормированияПроводок = ТекущиеДанные.НастройкаФормированияПроводок;
	МеждународныйУчетПоДаннымФинансовыхРегистровКлиент.ОткрытьНастройкуСчетовПоОбъектамУчета(
		ПараметрыФормы, ЭтотОбъект, ТекущиеДанные.ОбъектУчета, ТекущиеДанные.ОбъектНастройки);
		
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ПроверитьНастройкуПравилСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтразитьДокументВМеждународномУчете(Команда)
	
	ПараметрЗакрытия = Новый Структура;
	ПараметрЗакрытия.Вставить("ОтразитьДокументВМеждународномУчете", Истина);
	Закрыть(ПараметрЗакрытия);
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОбъектыУчетаТребующиеНастройкиОбъектНастройки.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОбъектыУчетаТребующиеНастройки.ОбъектНастройки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПодсказкиВвода);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Не указан>';
																|en = '<Not specified>'"));
	
	//
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовФормы()
	
	Элементы.СтраницаХозяйственныеОперацииБезПравилОтражения.Заголовок =
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Шаблоны проводок (%1)';
				|en = 'Posting templates (%1)'"), 
			ХозяйственныеОперацииБезПравилОтражения.Количество());
	
	Элементы.СтраницаСчетаБезПравилОтражения.Заголовок =
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Соответствующие счета международного учета (%1)';
				|en = 'Corresponding financial accounting accounts (%1)'"), 
			СчетаБезПравилОтражения.Количество());
	
	Элементы.СтраницаОбъектыУчета.Заголовок =
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Объекты учета (%1)';
				|en = 'Accounting objects (%1)'"), 
			ОбъектыУчетаТребующиеНастройки.Количество());
			
	Элементы.СтраницаХозяйственныеОперацииБезПравилОтражения.Видимость = ХозяйственныеОперацииБезПравилОтражения.Количество() > 0;
	Элементы.СтраницаСчетаБезПравилОтражения.Видимость = СчетаБезПравилОтражения.Количество() > 0;
	Элементы.СтраницаОбъектыУчета.Видимость = ОбъектыУчетаТребующиеНастройки.Количество() > 0;
	Элементы.СтраницаНастроеныВсеПравилаОтражения.Видимость = 
		(ХозяйственныеОперацииБезПравилОтражения.Количество() = 0)
		И (СчетаБезПравилОтражения.Количество() = 0)
		И (ОбъектыУчетаТребующиеНастройки.Количество() = 0);
	
	ВидимыеСтраницы = Новый Массив;
	Для каждого Страница Из Элементы.Страницы.ПодчиненныеЭлементы Цикл
		Если Страница.Видимость Тогда
			ВидимыеСтраницы.Добавить(Страница);
		КонецЕсли;
	КонецЦикла;
	
	Элементы.Страницы.ОтображениеСтраниц = 
		?(ВидимыеСтраницы.Количество() = 1, ОтображениеСтраницФормы.Нет, ОтображениеСтраницФормы.ЗакладкиСверху);
	
	Элементы.ОтразитьДокументВМеждународномУчете.Видимость = ЗначениеЗаполнено(Документ);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПредставлениеОбъектовУчета()
	
	РасширенноеОписаниеОбъектовУчета = Перечисления.ОбъектыФинансовогоУчета.РасширенноеОписаниеОбъектовУчетаДляНастройки();
	
	Для каждого СтрокаТаблицы Из ОбъектыУчетаТребующиеНастройки Цикл
		СтрокаТаблицы.ПредставлениеОбъектаУчета = 
			Перечисления.ОбъектыФинансовогоУчета.ПредставлениеОбъектаУчетаСГруппой(СтрокаТаблицы.ОбъектУчета, РасширенноеОписаниеОбъектовУчета);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьНастройкуПравилСервер()
	
	ПараметрыПроверки = Обработки.ОтражениеДокументовВМеждународномУчете.ПараметрыПроверкиПравилОтражения();
	Если ЗначениеЗаполнено(ПланСчетов) Тогда
		ПараметрыПроверки.ПланСчетов = ПланСчетов;
	КонецЕсли;
	Если ЗначениеЗаполнено(Организация) Тогда
		ПараметрыПроверки.Организация = Организация;
	КонецЕсли;
	Если ЗначениеЗаполнено(Документ) Тогда
		ПараметрыПроверки.Документ = Документ;
	КонецЕсли;
	РезультатПроверки = Обработки.ОтражениеДокументовВМеждународномУчете.ПроверитьНастройкуПравилОтраженияУчете(ПараметрыПроверки);
	
	ХозяйственныеОперацииБезПравилОтражения.Загрузить(РезультатПроверки.ХозяйственныеОперацииБезПравилОтражения);
	СчетаБезПравилОтражения.Загрузить(РезультатПроверки.СчетаБезПравилОтражения);
	ОбъектыУчетаТребующиеНастройки.Загрузить(РезультатПроверки.ОбъектыУчетаТребующиеНастройки);
	
	ЗаполнитьПредставлениеОбъектовУчета();
	
	УстановитьВидимостьЭлементовФормы();
	
КонецПроцедуры

#КонецОбласти