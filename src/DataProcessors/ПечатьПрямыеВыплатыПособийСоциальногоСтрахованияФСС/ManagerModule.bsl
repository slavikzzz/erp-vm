#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции
	
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СправкаПоРасчетуСуммыДоплатыПособия") Тогда
		ТабличныйДокумент = ТабличныйДокументСправкаПоРасчетуСуммыДоплатыПособия(МассивОбъектов, ОбъектыПечати);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СправкаПоРасчетуСуммыДоплатыПособия", "Справка по расчету суммы доплаты пособия", ТабличныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

#Область ТабличныйДокументСправкаПоРасчетуСуммыДоплатыПособия

Функция ТабличныйДокументСправкаПоРасчетуСуммыДоплатыПособия(МассивОбъектов, ОбъектыПечати) 
	
	Ошибки = Неопределено;
	 
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПоУходуЗаРебенком", Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком);
	Запрос.УстановитьПараметр("КатегорииСтажа", Документы.БольничныйЛист.КатегорииСтажаВЛисткеНетрудоспособности());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Заявления.Ссылка КАК Ссылка,
	|	Заявления.Сотрудник КАК Сотрудник,
	|	Заявления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Заявления.ВидПособия КАК ВидПособия,
	|	Заявления.Организация КАК Организация,
	|	Заявления.НаименованиеОрганизации КАК НаименованиеОрганизации,
	|	Заявления.ДокументОснование КАК ДокументОснование,
	|	Заявления.КодПричиныПерерасчета КАК КодПричиныПерерасчета,
	|	Заявления.НомерЛисткаНетрудоспособности КАК НомерВходящегоДокумента,
	|	Заявления.ДатаЛисткаНетрудоспособности КАК ДатаЛисткаНетрудоспособности,
	|	Заявления.ДатаНачалаОтпускаПоУходуЗаРебенком КАК ДатаНачалаОтпускаПоУходуЗаРебенком,
	|	Заявления.РайонныйКоэффициент КАК РК,
	|	Заявления.ФинансированиеФедеральнымБюджетом КАК ФинансированиеФедеральнымБюджетом,
	|	Заявления.МРОТ * Заявления.ДоляВремени КАК ДоляМРОТ,
	|	Заявления.ФамилияПолучателя + "" "" + Заявления.ИмяПолучателя + "" "" + Заявления.ОтчествоПолучателя КАК ФИОСотрудника,
	|	Заявления.ИННПолучателя КАК ИНН,
	|	Заявления.СНИЛСПолучателя КАК СНИЛССотрудника,
	|	Заявления.ДатаРожденияПолучателя КАК ДатаРождения,
	|	ВЫБОР
	|		КОГДА Заявления.ТипЗанятостиРаботника <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)
	|			ТОГДА ""V""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Основное,
	|	ВЫБОР
	|		КОГДА Заявления.ТипЗанятостиРаботника = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)
	|			ТОГДА ""V""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Совместительство,
	|	Заявления.СреднийЗаработокЗаРасчетныйПериод КАК СреднийЗаработокЗаРасчетныйПериод,
	|	Заявления.ПорядокРасчетаСреднегоЗаработка КАК ПорядокРасчетаСреднегоЗаработка,
	|	Заявления.ЗаработокПервыйГодРасчета + Заявления.ЗаработокВторойГодРасчета КАК ЗаработокВсего,
	|	Заявления.Перерасчет КАК Перерасчет
	|ПОМЕСТИТЬ ВТЗаявления
	|ИЗ
	|	Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК Заявления
	|ГДЕ
	|	Заявления.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявления.Ссылка КАК СсылкаЗаявления,
	|	Больничные.Ссылка КАК Ссылка,
	|	Больничные.ФинансированиеФедеральнымБюджетом КАК ФинансированиеФедеральнымБюджетом,
	|	Больничные.ПрименятьЛьготыПриНачисленииПособия КАК ПрименятьЛьготыПриНачисленииПособия,
	|	Больничные.ДатаНачала КАК ДатаНачала,
	|	Больничные.ДатаОкончания КАК ДатаОкончания,
	|	Больничные.УсловияИсчисленияКод1 КАК УсловияИсчисленияКод1,
	|	Больничные.УсловияИсчисленияКод2 КАК УсловияИсчисленияКод2,
	|	Больничные.УсловияИсчисленияКод3 КАК УсловияИсчисленияКод3,
	|	Больничные.СтажЛет КАК СтажЛет,
	|	Больничные.СтажМесяцев КАК СтажМесяцев,
	|	Больничные.СтажДней КАК СтажДней,
	|	Больничные.СтажРасширенныйЛет КАК СтажРасширенныйЛет,
	|	Больничные.СтажРасширенныйМесяцев КАК СтажРасширенныйМесяцев,
	|	Больничные.СтажРасширенныйДней КАК СтажРасширенныйДней,
	|	ЗНАЧЕНИЕ(Документ.БольничныйЛист.ПустаяСсылка) КАК ИсправленныйДокумент
	|ПОМЕСТИТЬ ВТБольничные
	|ИЗ
	|	ВТЗаявления КАК Заявления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК Больничные
	|		ПО Заявления.ДокументОснование = Больничные.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(НачисленияБольничныйЛист.Результат) КАК ЗаСчетФСС,
	|	Больничные.СсылкаЗаявления КАК СсылкаЗаявления
	|ПОМЕСТИТЬ ВТНачислено
	|ИЗ
	|	ВТБольничные КАК Больничные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БольничныйЛист.Начисления КАК НачисленияБольничныйЛист
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК ПланВидовРасчетаНачисления
	|			ПО (ПланВидовРасчетаНачисления.КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста)
	|					ИЛИ ПланВидовРасчетаНачисления.КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание)
	|					ИЛИ ПланВидовРасчетаНачисления.КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве))
	|				И НачисленияБольничныйЛист.Начисление = ПланВидовРасчетаНачисления.Ссылка
	|		ПО Больничные.ИсправленныйДокумент = НачисленияБольничныйЛист.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Больничные.СсылкаЗаявления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыСтажа.Ссылка КАК ВидСтажа,
	|	ВидыСтажа.КатегорияСтажа КАК КатегорияСтажа
	|ПОМЕСТИТЬ ВТВидыСтажа
	|ИЗ
	|	Справочник.ВидыСтажа КАК ВидыСтажа
	|ГДЕ
	|	ВидыСтажа.КатегорияСтажа В(&КатегорииСтажа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Заявления.ДатаНачалаОтпускаПоУходуЗаРебенком КАК Период,
	|	ВТВидыСтажа.ВидСтажа КАК ВидСтажа
	|ПОМЕСТИТЬ ВТСотрудникиДатыВидыСтажа
	|ИЗ
	|	ВТЗаявления КАК Заявления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБольничные КАК Больничные
	|		ПО Заявления.ДокументОснование = Больничные.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыСтажа КАК ВТВидыСтажа
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Заявления.ВидПособия = &ПоУходуЗаРебенком
	|	И Больничные.СтажРасширенныйЛет ЕСТЬ NULL
	|	И НЕ ВТВидыСтажа.ВидСтажа ЕСТЬ NULL";
	
	Запрос.Выполнить();
	
	// Создаем таблицу стажей
	ОписательВТ = КадровыйУчетРасширенный.ОписательВременнойТаблицыОтборовДляВТСтажиФизическихЛиц("ВТСотрудникиДатыВидыСтажа");
	ОписательВТ.ИмяПоляВидСтажа = "ВидСтажа";
	КадровыйУчетРасширенный.СоздатьВТСтажиФизическихЛиц(Запрос.МенеджерВременныхТаблиц, Истина, ОписательВТ, "ВТСтажиФизическихЛицПоВидам");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТСтажиФизическихЛицПоВидам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТСтажиФизическихЛицПоВидам.ВсегоМесяцев КАК ВсегоМесяцев,
	|	ВТВидыСтажа.ВидСтажа КАК ВидСтажа,
	|	ВТВидыСтажа.КатегорияСтажа КАК КатегорияСтажа
	|ПОМЕСТИТЬ ВТСтажиФизическихЛиц
	|ИЗ
	|	ВТСтажиФизическихЛицПоВидам КАК ВТСтажиФизическихЛицПоВидам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВидыСтажа КАК ВТВидыСтажа
	|		ПО ВТСтажиФизическихЛицПоВидам.ВидСтажа = ВТВидыСтажа.ВидСтажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявления.Ссылка КАК Ссылка,
	|	Заявления.Организация КАК Организация,
	|	Заявления.ДокументОснование КАК ДокументОснование,
	|	Заявления.КодПричиныПерерасчета КАК КодПричиныПерерасчета,
	|	Заявления.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	Заявления.ДатаЛисткаНетрудоспособности КАК ДатаЛисткаНетрудоспособности,
	|	Заявления.РК КАК РК,
	|	Заявления.ДоляМРОТ КАК ДоляМРОТ,
	|	Заявления.ФИОСотрудника КАК ФИОСотрудника,
	|	Заявления.ИНН КАК ИНН,
	|	Заявления.СНИЛССотрудника КАК СНИЛССотрудника,
	|	Заявления.ДатаРождения КАК ДатаРождения,
	|	Заявления.Основное КАК Основное,
	|	Заявления.Совместительство КАК Совместительство,
	|	Заявления.НаименованиеОрганизации КАК НаименованиеОрганизации,
	|	Заявления.СреднийЗаработокЗаРасчетныйПериод КАК СреднийЗаработокЗаРасчетныйПериод,
	|	Заявления.ПорядокРасчетаСреднегоЗаработка КАК ПорядокРасчетаСреднегоЗаработка,
	|	Заявления.ЗаработокВсего КАК ЗаработокВсего,
	|	Заявления.Перерасчет КАК Перерасчет,
	|	ЕСТЬNULL(Больничные.ДатаНачала, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаНачалаОплаты,
	|	ЕСТЬNULL(Больничные.ДатаОкончания, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОкончанияОплаты,
	|	ЕСТЬNULL(Больничные.ФинансированиеФедеральнымБюджетом, Заявления.ФинансированиеФедеральнымБюджетом) КАК ФинансированиеФедеральнымБюджетом,
	|	ЕСТЬNULL(Больничные.ПрименятьЛьготыПриНачисленииПособия, ЛОЖЬ) КАК ПрименятьЛьготыПриНачисленииПособия,
	|	ЕСТЬNULL(Начислено.ЗаСчетФСС, 0) КАК ЗаСчетФСС,
	|	ЕСТЬNULL(Больничные.УсловияИсчисленияКод1, """") КАК УсловияИсчисленияКод1,
	|	ЕСТЬNULL(Больничные.УсловияИсчисленияКод2, """") КАК УсловияИсчисленияКод2,
	|	ЕСТЬNULL(Больничные.УсловияИсчисленияКод3, """") КАК УсловияИсчисленияКод3,
	|	ЕСТЬNULL(Больничные.СтажЛет, НЕОПРЕДЕЛЕНО) КАК СтажЛет,
	|	ЕСТЬNULL(Больничные.СтажМесяцев, НЕОПРЕДЕЛЕНО) КАК СтажМесяцев,
	|	ЕСТЬNULL(Больничные.СтажДней, НЕОПРЕДЕЛЕНО) КАК СтажДней,
	|	ЕСТЬNULL(Больничные.СтажРасширенныйЛет, НЕОПРЕДЕЛЕНО) КАК СтажРасширенныйЛет,
	|	ЕСТЬNULL(Больничные.СтажРасширенныйМесяцев, НЕОПРЕДЕЛЕНО) КАК СтажРасширенныйМесяцев,
	|	ЕСТЬNULL(Больничные.СтажРасширенныйДней, НЕОПРЕДЕЛЕНО) КАК СтажРасширенныйДней,
	|	ЕСТЬNULL(РасширенныйСтаж.ВсегоМесяцев, 0) КАК РасширенныйСтажВсегоМесяцев,
	|	ЕСТЬNULL(СтраховойСтаж.ВсегоМесяцев, 0) КАК СтраховойСтажВсегоМесяцев
	|ИЗ
	|	ВТЗаявления КАК Заявления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБольничные КАК Больничные
	|		ПО Заявления.Ссылка = Больничные.СсылкаЗаявления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислено КАК Начислено
	|		ПО Заявления.Ссылка = Начислено.СсылкаЗаявления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтажиФизическихЛиц КАК РасширенныйСтаж
	|		ПО Заявления.ФизическоеЛицо = РасширенныйСтаж.ФизическоеЛицо
	|			И (РасширенныйСтаж.КатегорияСтажа = ЗНАЧЕНИЕ(Перечисление.КатегорииСтажа.РасширенныйСтраховой))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтажиФизическихЛиц КАК СтраховойСтаж
	|		ПО Заявления.ФизическоеЛицо = СтраховойСтаж.ФизическоеЛицо
	|			И (СтраховойСтаж.КатегорияСтажа = ЗНАЧЕНИЕ(Перечисление.КатегорииСтажа.Страховой))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ЗаявлениеСотрудникаНаВыплатуПособия";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьПрямыеВыплатыПособийСоциальногоСтрахованияФСС.ПФ_MXL_СправкаПоРасчетуСуммыДоплатыПособия");
	
	ДанныеОрганизаций = Новый Соответствие;
	ЗачетНестраховыхПериодов = Перечисления.ОснованияФинансированияПособияФедеральнымБюджетом.ЗачетНестраховыхПериодов;
	
	Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.Перерасчет Тогда
			Текст = НСтр("ru = '%1 не является перерасчетом пособия за счет ФСС. Справка-расчет суммы доплаты пособия возможна только для перерасчетов.';
						|en = '%1 is not allowance recalculation out of SSF funds. The detailed calculation of the allowance supplement amount is available only for recalculations.'");
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Выборка.Ссылка); 
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Ссылка", Текст, Неопределено);	
			Продолжить;
		КонецЕсли;

		Если Не ЗначениеЗаполнено(Выборка.КодПричиныПерерасчета) 
			Или Выборка.КодПричиныПерерасчета = 0 Тогда
			Текст = НСтр("ru = 'В %1 не указан код причины перерасчета.';
						|en = 'Recalculation reason code is not specified in %1.'");
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Выборка.Ссылка); 
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Ссылка", Текст, Неопределено);	
			Продолжить;
		КонецЕсли;
		
		Стажи = Новый Структура("СтажЛет, СтажМесяцев, СтажДней, СтажРасширенныйЛет, СтажРасширенныйМесяцев, СтажРасширенныйДней");
		ЗаполнитьЗначенияСвойств(Стажи, Выборка);
		Если Стажи.СтажЛет = Неопределено Или Стажи.СтажМесяцев = Неопределено Тогда
			Стажи.СтажЛет     = Цел(Выборка.СтраховойСтажВсегоМесяцев / 12);
			Стажи.СтажМесяцев = Выборка.СтраховойСтажВсегоМесяцев % 12;
		КонецЕсли;
		Если Стажи.СтажРасширенныйЛет = Неопределено Или Стажи.СтажРасширенныйМесяцев = Неопределено Тогда
			Стажи.СтажРасширенныйЛет     = Цел(Выборка.РасширенныйСтажВсегоМесяцев / 12);
			Стажи.СтажРасширенныйМесяцев = Выборка.РасширенныйСтажВсегоМесяцев % 12;
		КонецЕсли;
		Если Стажи.СтажРасширенныйЛет = 0 И Стажи.СтажРасширенныйМесяцев = 0 Тогда
			Стажи.СтажРасширенныйЛет     = Стажи.СтажЛет;
			Стажи.СтажРасширенныйМесяцев = Стажи.СтажМесяцев;
		КонецЕсли;
		ФинансированиеФедеральнымБюджетом = Выборка.ФинансированиеФедеральнымБюджетом;
		Если Не ЗначениеЗаполнено(ФинансированиеФедеральнымБюджетом) Тогда
			СтажВсегоМесяцев            = Стажи.СтажЛет * 12 + Стажи.СтажМесяцев;
			РасширенныйСтажВсегоМесяцев = Стажи.СтажРасширенныйЛет * 12 + Стажи.СтажРасширенныйМесяцев;
			Если СтажВсегоМесяцев > 0 И СтажВсегоМесяцев < РасширенныйСтажВсегоМесяцев Тогда
				ФинансированиеФедеральнымБюджетом = ЗачетНестраховыхПериодов;
			КонецЕсли;
		КонецЕсли;
		
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.КодПричиныПерерасчета, Макет, "КодПричиныПерерасчета_", 2);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.НомерВходящегоДокумента, Макет, "Номер_", 9);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.ФИОСотрудника, Макет, "ФИО_Получателя_", 42);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.НаименованиеОрганизации, Макет, "НаименованиеОрганизации_", 29);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.Основное, Макет, "Основное", 1);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.Совместительство, Макет, "Совместительство", 1);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.ИНН, Макет, "ИНН_", 12);
		
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.СНИЛССотрудника, Макет, "СтраховойНомер_", 14);
		
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(Выборка.ДатаРождения,"ДФ=dd-MM-yyyy"), Макет, "ДатаРождения_", 10);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(Стажи.СтажРасширенныйЛет < 10," ","") + Строка(Стажи.СтажРасширенныйЛет), Макет, "СтажЛет_", 2);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(Стажи.СтажРасширенныйМесяцев < 10," ","") + Строка(Стажи.СтажРасширенныйМесяцев), Макет, "СтажМесяцев_", 2);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(ПустаяСтрока(Выборка.УсловияИсчисленияКод1), "", Выборка.УсловияИсчисленияКод1) + ?(ПустаяСтрока(Выборка.УсловияИсчисленияКод2), "", Выборка.УсловияИсчисленияКод2) + ?(ПустаяСтрока(Выборка.УсловияИсчисленияКод3), "", Выборка.УсловияИсчисленияКод3), Макет, "УсловияИсчисленияКод_", 6);
		Если ФинансированиеФедеральнымБюджетом = ЗачетНестраховыхПериодов Тогда
			
			НестраховойСтаж = УчетПособийСоциальногоСтрахования.НестраховойСтаж(Стажи);
			ЛетСтажа     = НестраховойСтаж.Лет;
			МесяцевСтажа = НестраховойСтаж.Месяцев;
			Если ЛетСтажа > 0 Или МесяцевСтажа > 0 Тогда
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(ЛетСтажа < 10," ","") + Строка(ЛетСтажа), Макет, "НестраховыеПериодыЛет_", 2);
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(МесяцевСтажа < 10," ","") + Строка(МесяцевСтажа), Макет, "НестраховыеПериодыМесяцев_", 2);
			КонецЕсли;
			
		КонецЕсли;
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(Выборка.ДатаНачалаОплаты,"ДФ=dd-MM-yyyy"), Макет, "ДатаНачалаОплаты_", 10);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(Выборка.ДатаОкончанияОплаты,"ДФ=dd-MM-yyyy"), Макет, "ДатаОкончания_", 10);
		Если ЗначениеЗаполнено(Выборка.ЗаСчетФСС) Тогда
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Выборка.ЗаСчетФСС, 9), Макет, "ЗаСчетФСС_", 9);
		КонецЕсли;
		
		Если Выборка.ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок Тогда
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Выборка.ЗаработокВсего, 10), Макет, "СреднийЗаработок_", 10);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Окр(Выборка.СреднийЗаработокЗаРасчетныйПериод, 2), 9), Макет, "СреднийДневнойЗаработок_", 9);
		Иначе
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Выборка.ДоляМРОТ * 24, 10), Макет, "СреднийЗаработок_", 10);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Окр(Выборка.ДоляМРОТ * 24 / 730, 2), 9), Макет, "СреднийДневнойЗаработок_", 9);
		КонецЕсли;
		
		ДанныеОрганизации = ДанныеОрганизаций.Получить(Выборка.Организация);
		Если ДанныеОрганизации = Неопределено Тогда
			
			ДанныеОрганизации = Новый Структура("РегистрационныйНомерФСС,КодПодчиненностиФСС,ДополнительныйКодФСС,Руководитель,ГлавныйБухгалтер");
			
			РеквизитыОрганизации = СЭДОФСС.СведенияОСтрахователе(Выборка.Организация, "РегистрационныйНомерФСС, КодПодчиненностиФСС, ДополнительныйКодФСС");
			ДанныеОрганизации.РегистрационныйНомерФСС  = РеквизитыОрганизации.РегистрационныйНомерФСС;
			ДанныеОрганизации.КодПодчиненностиФСС  = РеквизитыОрганизации.КодПодчиненностиФСС;
			ДанныеОрганизации.ДополнительныйКодФСС  = РеквизитыОрганизации.ДополнительныйКодФСС;
			
			ЗаполняемыеЗначения = Новый Структура("Организация,Руководитель,ГлавныйБухгалтер", Выборка.Организация);
			ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗаполняемыеЗначения);
			
			СписокФизлицРуководства = Новый Массив;
			Если ЗначениеЗаполнено(ЗаполняемыеЗначения.Руководитель) Тогда
				СписокФизлицРуководства.Добавить(ЗаполняемыеЗначения.Руководитель);
			КонецЕсли;
			Если ЗначениеЗаполнено(ЗаполняемыеЗначения.ГлавныйБухгалтер) Тогда
				СписокФизлицРуководства.Добавить(ЗаполняемыеЗначения.ГлавныйБухгалтер);
			КонецЕсли;
			
			КадровыеДанныеФизическихЛиц = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, СписокФизлицРуководства, "ФамилияИО");
			
			Если ЗначениеЗаполнено(ЗаполняемыеЗначения.Руководитель) Тогда
				ФИО = КадровыеДанныеФизическихЛиц.Найти(ЗаполняемыеЗначения.Руководитель, "ФизическоеЛицо");
				ДанныеОрганизации.Руководитель = ?(ФИО <> Неопределено, ФИО.ФамилияИО,"");
			КонецЕсли;
			Если ЗначениеЗаполнено(ЗаполняемыеЗначения.ГлавныйБухгалтер) Тогда
				ФИО = КадровыеДанныеФизическихЛиц.Найти(ЗаполняемыеЗначения.ГлавныйБухгалтер, "ФизическоеЛицо");
				ДанныеОрганизации.ГлавныйБухгалтер = ?(ФИО <> Неопределено, ФИО.ФамилияИО,"");
		КонецЕсли;
			
			ДанныеОрганизаций.Вставить(Выборка.Организация, ДанныеОрганизации);
			
		КонецЕсли;

		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ДанныеОрганизации.РегистрационныйНомерФСС, Макет, "РегистрационныйНомер_", 10);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ДанныеОрганизации.ДополнительныйКодФСС, Макет, "ДополнительныйКод_", 10);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ДанныеОрганизации.КодПодчиненностиФСС, Макет, "КодПодчиненности_", 5);
		
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ДанныеОрганизации.Руководитель, Макет, "ФИОруководителя_", 20);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ДанныеОрганизации.ГлавныйБухгалтер, Макет, "ФИОбухгалтера_", 20);
		
		ТабличныйДокумент.Вывести(Макет);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	
	Возврат ТабличныйДокумент
	
КонецФункции // ПечатьСправкаПоРасчетуСуммыДоплатыПособия()

Функция СуммаДляПечатиПоБуквенно(Сумма, Длина)

	Возврат СтрЗаменить(Прав("                  " + Формат(Сумма, "ЧЦ=" + Длина + "; ЧДЦ=2; ЧРД=.; ЧН=' .  '; ЧГ=0"), Длина),".","р")	

КонецФункции 

#КонецОбласти

#КонецОбласти

#КонецЕсли