#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Формирует печатные формы.
// 
// Параметры:
//  МассивОбъектов - Массив - Массив объектов.
//  ПараметрыПечати - Структура - Параметры печати.
//  КоллекцияПечатныхФорм - ТаблицаЗначений - Коллекция печатных форм.
//  ОбъектыПечати - Массив - Объекты печати.
//  ПараметрыВывода - Структура - Параметры вывода.
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МБ7") Тогда
		
		ТабличныйДокумент = СформироватьПечатнуюФормуМБ7(СтруктураТипов, ОбъектыПечати, ПараметрыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"МБ7",
			НСтр("ru = 'Ведомость учета выдачи спецодежды (МБ7)';
				|en = 'Overalls issue accounting list (MB7)'"),
			ТабличныйДокумент);

	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС15") Тогда
		
		ТабличныйДокумент = СформироватьПечатнуюФормуОС15(СтруктураТипов, ОбъектыПечати, ПараметрыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОС15",
			НСтр("ru = 'Акт о приемке-передаче оборудования в монтаж (ОС-15)';
				|en = 'Certificate of equipment receiving and handover for installation (FA-15)'"),
			ТабличныйДокумент);

	КонецЕсли;
	
КонецПроцедуры

#Область МБ7

Функция СформироватьПечатнуюФормуМБ7(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_МБ7";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(СтруктураОбъектов.Ключ);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		КонецЕсли;
		
		ДанныеДляПечати = МенеджерОбъекта.ДанныеДляПечатнойФормыМБ7(СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументМБ7(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументМБ7(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати)
	
	ШаблонОшибкиПустойТЧ = НСтр("ru = 'В документе %1 отсутствуют товары. Печать МБ-7 не требуется';
								|en = 'No goods in the %1 document. MB-7 print is not required'");
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФормТМЦВЭксплуатации.ПФ_MXL_МБ7_ru");
	Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
	
	ОбластьШапка = Макет.ПолучитьОбласть("Заголовок");
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("Строка");
	ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
	
	ВыборкаДокументы = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаСтрокиПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаСтрокиПоДокументам.Сбросить();
		Если Не ВыборкаСтрокиПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ВыборкаДокументы.Ссылка)) Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонОшибкиПустойТЧ,
					ВыборкаДокументы.Ссылка),
				ВыборкаДокументы.Ссылка);
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаСтроки = ВыборкаСтрокиПоДокументам.Выбрать();
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьШапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДокументы.Номер);
		
		ОбластьШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаДокументы.Организация, ВыборкаДокументы.ДатаДокумента));
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		Пока ВыборкаСтроки.Следующий() Цикл
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаСтроки);
			Если ЗначениеЗаполнено(ВыборкаСтроки.ХарактеристикаНаименование) Тогда
				НоменклатураНаименование = СтрШаблон("%1 (%2)",ВыборкаСтроки.НоменклатураНаименование,ВыборкаСтроки.ХарактеристикаНаименование);
				ОбластьСтрокаТаблицы.Параметры.НоменклатураНаименование = НоменклатураНаименование;
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
		КонецЦикла;
		
		ОбластьПодписи.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьПодписи.Параметры.МОЛФИО = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаДокументы.МОЛФИО);
		Сотрудник = СотрудникиФормы.СотрудникиФизическогоЛица(ВыборкаДокументы.РуководительПодразделения, ВыборкаДокументы.Организация);
		ТаблицаПоРабочимМестам = КадровыйУчет.КадровыеДанныеСотрудников(Ложь, Сотрудник, "Должность", ВыборкаДокументы.ДатаДокумента);
		Если ТаблицаПоРабочимМестам.Количество() > 0 Тогда
			ОбластьПодписи.Параметры.ДолжностьРуководителяПодразделения = ТаблицаПоРабочимМестам[0].Должность;
		КонецЕсли;
		ОбластьПодписи.Параметры.РуководительПодразделения = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаДокументы.РуководительПодразделения);
		ТабличныйДокумент.Вывести(ОбластьПодписи);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОС15

Функция СформироватьПечатнуюФормуОС15(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОС15";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(СтруктураОбъектов.Ключ);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		КонецЕсли;
		
		ДанныеДляПечати = МенеджерОбъекта.ДанныеДляПечатнойФормыОС15(СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументОС15(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументОС15(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати)

	ШаблонОшибкиПустойТЧ = НСтр("ru = 'В документе %1 отсутствуют товары. Печать ОС-15 не требуется';
								|en = 'Goods are not found in document %1. Printing FA-15 is not required'");

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФормТМЦВЭксплуатации.ПФ_MXL_ОС15_ru");
	Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьОборотнаяСторона = Макет.ПолучитьОбласть("ОборотнаяСторона");

	ВыборкаДокументы = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаСтрокиПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаСтрокиПоДокументам.Сбросить();
		Если Не ВыборкаСтрокиПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ВыборкаДокументы.Ссылка)) Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонОшибкиПустойТЧ,
					ВыборкаДокументы.Ссылка),
				ВыборкаДокументы.Ссылка);
			
			Продолжить;
			
		КонецЕсли;
		ВыборкаСтроки = ВыборкаСтрокиПоДокументам.Выбрать();
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаДокументы);
		ДанныеОбласти = Новый Структура;
		ДанныеОбласти.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДокументы.Номер));
		ДанныеОбласти.Вставить("ОрганизацияЗаказчикНаименование", ОрганизацииПовтИсп.НаименованияНаДату(ВыборкаДокументы.Организация, ВыборкаДокументы.ДатаДокумента).НаименованиеСокращенное);
		ОбластьШапка.Параметры.Заполнить(ДанныеОбласти);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		Пока ВыборкаСтроки.Следующий() Цикл
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаСтроки);
			
			ОбластьСтрокаТаблицы.Параметры.ОборудованиеНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаСтроки.НоменклатураНаименование,
				ВыборкаСтроки.ХарактеристикаНаименование);
			
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
		КонецЦикла;
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьОборотнаяСторона.Параметры.Заполнить(ВыборкаДокументы);
		ТабличныйДокумент.Вывести(ОбластьОборотнаяСторона);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
