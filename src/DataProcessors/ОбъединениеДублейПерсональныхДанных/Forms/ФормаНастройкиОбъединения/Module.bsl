#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КоллекцияНайденныеДубли = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "НайденныеДубли");
	КоллекцияДеревоСравнения = ПолучитьИзВременногоХранилища(Параметры.АдресДереваСравнения);
	
	СоздатьРеквизитыИЭлементыФормы(КоллекцияНайденныеДубли, КоллекцияДеревоСравнения);
	
	Обработки.ОбъединениеДублейПерсональныхДанных.ЗаполнитьКоллекцию(ДеревоСравненияИсходное.ПолучитьЭлементы(),
		КоллекцияДеревоСравнения);
	Обработки.ОбъединениеДублейПерсональныхДанных.ЗаполнитьКоллекцию(ДеревоСравнения.ПолучитьЭлементы(),
		КоллекцияДеревоСравнения);
	Обработки.ОбъединениеДублейПерсональныхДанных.ЗаполнитьРезультатОбъединенияИУдалитьСтрокиИзДереваСравнения(Результат,
		ДеревоСравнения, КоллекцияНайденныеДубли);
		
	ВывестиКартинкиВДереве(ДеревоСравнения.ПолучитьЭлементы());
	ВывестиКартинкиВДереве(Результат.ПолучитьЭлементы());
		
	УстановитьВидимостьЭлементов();
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазвернутьДерево("ДеревоСравнения");
	РазвернутьДерево("Результат");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоСравнения

&НаКлиенте
Процедура Подключаемый_ДеревоСравненияПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоСравнения.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИндексТекущегоДубля = Число(Сред(Элемент.Имя, СтрДлина("ПолеПометка") + 1));
	Если ТекущиеДанные[Элемент.Имя] Тогда
		Для ИндексДубля = 0 По НайденныеДубли.Количество() - 1 Цикл
			ИмяПоляПометка = "ПолеПометка" + ЧислоВСтроку(ИндексДубля);
			Если ИндексДубля = ИндексТекущегоДубля Тогда
				СтрокаРезультата = СтрокаРезультатаПоСтрокеДанных(ТекущиеДанные);
				Если СтрокаРезультата.ПолучитьРодителя() = Неопределено Тогда
					ПометитьВсеДанныеФизическогоЛица(ИндексДубля);
				Иначе
					ЗаполнитьСтрокуРезультатаНаСервере(СтрокаРезультата.ПолучитьИдентификатор(),
						ТекущиеДанные.ПолучитьИдентификатор(), ИндексТекущегоДубля);
				КонецЕсли;
			ИначеЕсли ТекущиеДанные[ИмяПоляПометка] Тогда
				ТекущиеДанные[ИмяПоляПометка] = Ложь;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ТекущиеДанные[Элемент.Имя] = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСравненияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ДеревоСравнения.ТекущиеДанные;
	Если ТекущиеДанные.Поле = "Ссылка" Тогда
		Попытка
			ИндексТекущегоДубля = Число(Сред(Поле.Имя, СтрДлина("Поле") + 1));
			ПоказатьЗначение(, НайденныеДубли[ИндексТекущегоДубля].ФизическоеЛицо);
		Исключение
			Возврат;
		КонецПопытки;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура OK(Команда)
	
	ПринятьИзменения();
	
	ПараметрыОповещения = Новый Структура;
	
	Адрес = АдресДереваСравненияВХранилище();
	ПараметрыОповещения.Вставить("ДеревоСравнения", Адрес);
	
	Оповестить("ЗавершенаНастройкаОбъединенияДублей", ПараметрыОповещения, ВладелецФормы);
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СоздатьРеквизитыИЭлементыФормы(КоллекцияНайденныеДубли, КоллекцияДеревоСравнения)
	
	НулеваяСтрока = КоллекцияДеревоСравнения[0];
	Индекс = 0;
	ИмяПоля = "Поле" + ЧислоВСтроку(Индекс);
	Пока НулеваяСтрока.Свойство(ИмяПоля) Цикл
		НоваяСтрока = НайденныеДубли.Добавить();
		НоваяСтрока.Дубль = НулеваяСтрока[ИмяПоля];
		Индекс = Индекс + 1;
		ИмяПоля = "Поле" + ЧислоВСтроку(Индекс);
	КонецЦикла;
	
	КоличествоДублей = НайденныеДубли.Количество();
	Обработки.ОбъединениеДублейПерсональныхДанных.ЗаполнитьКолонкиДеревьевСравнения(ЭтотОбъект, КоличествоДублей,
		"ДеревоСравнения,ДеревоСравненияИсходное");
	
	Для Индекс = 0 По КоличествоДублей - 1 Цикл
		ДобавитьЭлементыДереваСравнения(Индекс);
		ДобавитьЭлементУсловногоОформления(Индекс);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиКартинкиВДереве(КоллекцияСтрокДанныхФормы)
	
	ТипыПолей = Обработки.ОбъединениеДублейПерсональныхДанных.ТипыПолей();
	
	Для каждого СтрокаДерева Из КоллекцияСтрокДанныхФормы Цикл
		Если СтрокаДерева.ТипПоля = ТипыПолей.Справочник Тогда
			СтрокаДерева.Картинка = БиблиотекаКартинок.МетаданныеСправочники;
		ИначеЕсли СтрокаДерева.ТипПоля = ТипыПолей.РегистрСведений Тогда
			СтрокаДерева.Картинка = БиблиотекаКартинок.МетаданныеРегистрыСведений;
		ИначеЕсли СтрокаДерева.ТипПоля = ТипыПолей.ТабличнаяЧасть Тогда
			СтрокаДерева.Картинка = БиблиотекаКартинок.МетаданныеТабличныеЧасти;
		КонецЕсли;
		ВывестиКартинкиВДереве(СтрокаДерева.ПолучитьЭлементы())
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	ЕстьРазличающиесяДанные = ДеревоСравнения.ПолучитьЭлементы().Количество() <> 0;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ИсходныеКарточкиГруппа", "Видимость",
		ЕстьРазличающиесяДанные);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаОтмена", "Видимость",
		ЕстьРазличающиесяДанные);
		
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	// Цвет фона строк с заполненной картинкой.
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоСравнения.Имя);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементУсловногоОформления.Отбор, "ДеревоСравнения.Картинка", ,
		ВидСравненияКомпоновкиДанных.Заполнено);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ЦветФонаШапкиТаблицы);
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(Элементы.Результат.Имя);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементУсловногоОформления.Отбор, "Результат.Картинка", ,
		ВидСравненияКомпоновкиДанных.Заполнено);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ЦветФонаШапкиТаблицы);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементУсловногоОформления(Индекс)

	ИндексСтрокой = ЧислоВСтроку(Индекс);
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоСравнения.ДоступенДляВыбора" + ИндексСтрокой);
	ЭлементОтбора.ПравоеЗначение = Ложь;

	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить(); 
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПолеПометка" + ИндексСтрокой);

КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево(ИмяДерева, КоллекцияСтрок = Неопределено)
	
	Если КоллекцияСтрок = Неопределено Тогда
		КоллекцияСтрок = ЭтотОбъект[ИмяДерева].ПолучитьЭлементы();
	КонецЕсли;
	
	Для каждого СтрокаДерева Из КоллекцияСтрок Цикл
		Если ЗначениеЗаполнено(СтрокаДерева.ТипПоля) Тогда
			Элементы[ИмяДерева].Развернуть(СтрокаДерева.ПолучитьИдентификатор(), Ложь);
			РазвернутьДерево(ИмяДерева, СтрокаДерева.ПолучитьЭлементы());
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементыДереваСравнения(Индекс)
	
	ИндексСтрокой = ЧислоВСтроку(Индекс);
	
	Элемент = Элементы.Найти("ПолеПометка" + ИндексСтрокой);
	Если Элемент = Неопределено Тогда
		Элемент = Элементы.Добавить("ПолеПометка" + ИндексСтрокой, Тип("ПолеФормы"), Элементы.ДеревоСравнения);
		Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элемент.ПутьКДанным = "ДеревоСравнения.ПолеПометка" + ИндексСтрокой;
		Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ДеревоСравненияПометкаПриИзменении");
	КонецЕсли; 
	
	Элемент = Элементы.Найти("Поле" + ИндексСтрокой);
	Если Элемент = Неопределено Тогда
		Элемент = Элементы.Добавить("Поле" + ИндексСтрокой, Тип("ПолеФормы"), Элементы.ДеревоСравнения);
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.Заголовок = СтрШаблон(НСтр("ru = '(%1) %2';
											|en = '(%1) %2'"), ЧислоВСтроку(Индекс + 1), НайденныеДубли[Индекс].Дубль);
		Элемент.ТолькоПросмотр = Истина;
		Элемент.ПутьКДанным = "ДеревоСравнения.Поле" + ИндексСтрокой;
		Элемент.Формат = "ДЛФ=Д";
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Функция СтрокаРезультатаПоСтрокеДанных(ТекущиеДанные)
	
	МассивСтрокТекущиеДанные = Новый Массив;
	МассивСтрокТекущиеДанные.Вставить(0, ТекущиеДанные.Поле);
	
	РодительТекущиеДанные = ТекущиеДанные;
	
	Пока Истина Цикл
		
		РодительТекущиеДанные = РодительТекущиеДанные.ПолучитьРодителя();
		
		Если РодительТекущиеДанные = Неопределено Тогда
			Прервать;
		КонецЕсли; 
		
		МассивСтрокТекущиеДанные.Вставить(0, РодительТекущиеДанные.Поле);
		
	КонецЦикла;
	
	СтрокаРезультата = Результат;
	
	Для каждого ИмяПоля Из МассивСтрокТекущиеДанные Цикл
		
		КоллекцияСтрокРезультата = СтрокаРезультата.ПолучитьЭлементы();
		
		Для каждого СтрокаКоллекцияСтрокРезультата Из КоллекцияСтрокРезультата Цикл
			
			Если СтрокаКоллекцияСтрокРезультата.Поле = ИмяПоля Тогда
				
				СтрокаРезультата = СтрокаКоллекцияСтрокРезультата;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат СтрокаРезультата;
	
КонецФункции

&НаКлиенте
Процедура ПометитьВсеДанныеФизическогоЛица(ИндексФизическогоЛица)
	
	СтрокаФизическогоЛица = ДеревоСравнения.ПолучитьЭлементы()[0];
	
	Для Индекс = 0 По НайденныеДубли.Количество() - 1 Цикл
		ИндексСтрокой = ЧислоВСтроку(Индекс);
		СтрокаФизическогоЛица["ПолеПометка" + ИндексСтрокой] = Индекс = ИндексФизическогоЛица;
	КонецЦикла;
	
	Для каждого СтрокаФизическогоЛица Из ДеревоСравнения.ПолучитьЭлементы() Цикл
		ПометитьДанныеКоллекции(СтрокаФизическогоЛица.ПолучитьЭлементы(), ИндексФизическогоЛица);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьДанныеКоллекции(КоллекцияСтрок, Индекс)
	
	Для каждого СтрокаКоллекции Из КоллекцияСтрок Цикл
		ИндексСрокой = ЧислоВСтроку(Индекс);
		Если Не СтрокаКоллекции["ПолеПометка" + ИндексСрокой] И СтрокаКоллекции["ДоступенДляВыбора" + ИндексСрокой] Тогда
			Для ИндексДубля = 0 По НайденныеДубли.Количество() - 1 Цикл
				СтрокаКоллекции["ПолеПометка" + ЧислоВСтроку(ИндексДубля)] = (ИндексДубля = Индекс);
			КонецЦикла;
			СтрокаРезультата = СтрокаРезультатаПоСтрокеДанных(СтрокаКоллекции);
			ЗаполнитьСтрокуРезультатаНаСервере(СтрокаРезультата.ПолучитьИдентификатор(),
				СтрокаКоллекции.ПолучитьИдентификатор(), Индекс);
		КонецЕсли;
		ПометитьДанныеКоллекции(СтрокаКоллекции.ПолучитьЭлементы(), Индекс);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуРезультатаНаСервере(Знач ИдентификаторСтрокиРезультата, Знач ИдентификаторСтрокиКоллекции,
	Знач Индекс)
	
	СтрокаРезультата = Результат.НайтиПоИдентификатору(ИдентификаторСтрокиРезультата);
	СтрокаКоллекции = ДеревоСравнения.НайтиПоИдентификатору(ИдентификаторСтрокиКоллекции);
	
	Обработки.ОбъединениеДублейПерсональныхДанных.ЗаполнитьСтрокуРезультата(СтрокаРезультата, СтрокаКоллекции,
		Индекс);
	
КонецПроцедуры

&НаСервере
Функция АдресДереваСравненияВХранилище()
	
	Возврат Обработки.ОбъединениеДублейПерсональныхДанных.АдресКоллекцииВХранилище(ЭтотОбъект, "ДеревоСравненияИсходное");
	
КонецФункции

&НаСервере
Процедура ПринятьИзменения()
	
	ПринятьИзмененияСтрок(ДеревоСравнения.ПолучитьЭлементы(), ДеревоСравненияИсходное.ПолучитьЭлементы());
	
КонецПроцедуры

&НаСервере
Процедура ПринятьИзмененияСтрок(КоллекцияСтрокДереваСравнения, КоллекцияСтрокДереваСравненияИсходное)
	
	Для каждого СтрокаДереваСравнения Из КоллекцияСтрокДереваСравнения Цикл
		
		СтрокаДереваСравненияИсходное = СтрокаДереваСравненияИсходное(КоллекцияСтрокДереваСравненияИсходное,
			СтрокаДереваСравнения.Поле);
		Если СтрокаДереваСравненияИсходное <> Неопределено Тогда
			
			Для Индекс = 0 По НайденныеДубли.Количество() - 1 Цикл
				ИмяПоляПометка = "ПолеПометка" + ЧислоВСтроку(Индекс);
				СтрокаДереваСравненияИсходное[ИмяПоляПометка] = СтрокаДереваСравнения[ИмяПоляПометка];
			КонецЦикла;
			
			ПринятьИзмененияСтрок(СтрокаДереваСравнения.ПолучитьЭлементы(),
				СтрокаДереваСравненияИсходное.ПолучитьЭлементы());
			
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СтрокаДереваСравненияИсходное(КоллекцияСтрокДереваСравненияИсходное, Поле)
	
	ВозвращаемаяСтрока = Неопределено;
	
	Для каждого СтрокаДереваСравнения Из КоллекцияСтрокДереваСравненияИсходное Цикл
		Если СтрокаДереваСравнения.Поле = Поле Тогда
			ВозвращаемаяСтрока = СтрокаДереваСравнения;
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	
	Возврат ВозвращаемаяСтрока;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЧислоВСтроку(Число)
	
	Возврат Формат(Число, "ЧН=; ЧГ=;");
	
КонецФункции

#КонецОбласти
