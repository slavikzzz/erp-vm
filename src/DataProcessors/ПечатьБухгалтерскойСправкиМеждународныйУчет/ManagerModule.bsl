#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БухгалтерскаяСправка") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"БухгалтерскаяСправка",
			НСтр("ru = 'Бухгалтерская справка (международный учет)';
				|en = 'Accounting statement (financial accounting)'"),
			ПечатьБухгалтерскаяСправка(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьБухгалтерскаяСправка(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	// Зададим параметры макета по умолчанию
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.КлючПараметровПечати     = "ПАРАМЕТРЫ_ПЕЧАТИ_ОперацияМеждународный_БухгалтерскаяСправка";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	МеждународныйДвиженияССубконто.Период,
	|	МеждународныйДвиженияССубконто.НомерСтроки,
	|	МеждународныйДвиженияССубконто.Организация,
	|	МеждународныйДвиженияССубконто.ПланСчетов,
	|	МеждународныйДвиженияССубконто.СчетДт,
	|	МеждународныйДвиженияССубконто.ПодразделениеДт,
	|	МеждународныйДвиженияССубконто.СубконтоДт1,
	|	МеждународныйДвиженияССубконто.СубконтоДт2,
	|	МеждународныйДвиженияССубконто.СубконтоДт3,
	|	МеждународныйДвиженияССубконто.СчетКт,
	|	МеждународныйДвиженияССубконто.ПодразделениеКт,
	|	МеждународныйДвиженияССубконто.СубконтоКт1,
	|	МеждународныйДвиженияССубконто.СубконтоКт2,
	|	МеждународныйДвиженияССубконто.СубконтоКт3,
	|	МеждународныйДвиженияССубконто.ВалютаДт,
	|	МеждународныйДвиженияССубконто.ВалютаКт,
	|	МеждународныйДвиженияССубконто.Сумма,
	|	МеждународныйДвиженияССубконто.ВалютнаяСуммаДт,
	|	МеждународныйДвиженияССубконто.ВалютнаяСуммаКт,
	|	МеждународныйДвиженияССубконто.КоличествоДт,
	|	МеждународныйДвиженияССубконто.КоличествоКт,
	|	МеждународныйДвиженияССубконто.Содержание,
	|	МеждународныйДвиженияССубконто.Регистратор
	|ПОМЕСТИТЬ втМеждународныйСКорреспонденцией
	|ИЗ
	|	РегистрБухгалтерии.Международный.ДвиженияССубконто(, , Регистратор В (&МассивОбъектов), , ) КАК МеждународныйДвиженияССубконто
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МеждународныйДвиженияССубконто.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МеждународныйДвиженияССубконто.Период,
	|	МеждународныйДвиженияССубконто.ВидДвижения,
	|	МеждународныйДвиженияССубконто.НомерСтроки,
	|	МеждународныйДвиженияССубконто.Организация,
	|	МеждународныйДвиженияССубконто.ПланСчетов,
	|	МеждународныйДвиженияССубконто.Счет,
	|	МеждународныйДвиженияССубконто.Подразделение,
	|	МеждународныйДвиженияССубконто.Субконто1,
	|	МеждународныйДвиженияССубконто.Субконто2,
	|	МеждународныйДвиженияССубконто.Субконто3,
	|	МеждународныйДвиженияССубконто.Валюта,
	|	МеждународныйДвиженияССубконто.Сумма,
	|	МеждународныйДвиженияССубконто.ВалютнаяСумма,
	|	МеждународныйДвиженияССубконто.Количество,
	|	МеждународныйДвиженияССубконто.Содержание,
	|	МеждународныйДвиженияССубконто.Регистратор
	|ПОМЕСТИТЬ втМеждународныйБезКорреспонденции
	|ИЗ
	|	РегистрБухгалтерии.МеждународныйБезКорреспонденции.ДвиженияССубконто(, , Регистратор В (&МассивОбъектов), , ) КАК МеждународныйДвиженияССубконто
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МеждународныйДвиженияССубконто.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	&Ответственный КАК Ответственный,
	|	ДанныеДокумента.Дата КАК Дата,
	|	&СодержаниеОперации КАК СодержаниеОперации,
	|	Международный.Период КАК Период,
	|	Международный.НомерСтроки КАК НомерСтроки,
	|	Международный.Организация КАК Организация,
	|	Международный.ПланСчетов КАК ПланСчетов,
	|	Международный.ПланСчетов.УчетВФункциональнойВалюте КАК УчетВФункциональнойВалюте,
	|	Международный.ПланСчетов.ВариантФормированияПроводок КАК ВариантФормированияПроводок,
	|	Международный.Счет КАК Счет,
	|	Международный.Счет.Код КАК КодСчета,
	|	Международный.Подразделение КАК Подразделение,
	|	Международный.Субконто1 КАК Субконто1,
	|	Международный.Субконто2 КАК Субконто2,
	|	Международный.Субконто3 КАК Субконто3,
	|	Международный.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА Международный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет)
	|			ТОГДА Международный.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаДт,
	|	ВЫБОР
	|		КОГДА Международный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет)
	|			ТОГДА 0
	|		ИНАЧЕ Международный.Сумма
	|	КОНЕЦ КАК СуммаКт,
	|	Международный.ВалютнаяСумма КАК ВалютнаяСумма,
	|	Международный.Количество КАК Количество,
	|	Международный.Содержание КАК Содержание
	|ИЗ
	|	&ТипДокумента КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМеждународныйБезКорреспонденции КАК Международный
	|		ПО ДанныеДокумента.Ссылка = Международный.Регистратор
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	&Ответственный КАК Ответственный,
	|	ДанныеДокумента.Дата КАК Дата,
	|	&СодержаниеОперации КАК СодержаниеОперации,
	|	Международный.Период КАК Период,
	|	ЕСТЬNULL(Международный.НомерСтроки, 1) КАК НомерСтроки,
	|	Международный.Организация КАК Организация,
	|	Международный.ПланСчетов КАК ПланСчетов,
	|	Международный.ПланСчетов.УчетВФункциональнойВалюте КАК УчетВФункциональнойВалюте,
	|	Международный.ПланСчетов.ВариантФормированияПроводок КАК ВариантФормированияПроводок,
	|	Международный.СчетДт КАК СчетДт,
	|	Международный.СчетДт.Код КАК КодСчетаДт,
	|	Международный.ПодразделениеДт КАК ПодразделениеДт,
	|	Международный.СубконтоДт1 КАК СубконтоДт1,
	|	Международный.СубконтоДт2 КАК СубконтоДт2,
	|	Международный.СубконтоДт3 КАК СубконтоДт3,
	|	Международный.СчетКт КАК СчетКт,
	|	Международный.СчетКт.Код КАК КодСчетаКт,
	|	Международный.ПодразделениеКт КАК ПодразделениеКт,
	|	Международный.СубконтоКт1 КАК СубконтоКт1,
	|	Международный.СубконтоКт2 КАК СубконтоКт2,
	|	Международный.СубконтоКт3 КАК СубконтоКт3,
	|	Международный.ВалютаДт КАК ВалютаДт,
	|	Международный.ВалютаКт КАК ВалютаКт,
	|	Международный.Сумма КАК Сумма,
	|	Международный.ВалютнаяСуммаДт КАК ВалютнаяСуммаДт,
	|	Международный.ВалютнаяСуммаКт КАК ВалютнаяСуммаКт,
	|	Международный.КоличествоДт КАК КоличествоДт,
	|	Международный.КоличествоКт КАК КоличествоКт,
	|	Международный.Содержание КАК Содержание
	|ИЗ
	|	&ТипДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМеждународныйСКорреспонденцией КАК Международный
	|		ПО ДанныеДокумента.Ссылка = Международный.Регистратор
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивОбъектов)
	|	И НЕ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			втМеждународныйБезКорреспонденции КАК Международный
	|		ГДЕ
	|			Международный.Регистратор = ДанныеДокумента.Ссылка
	|		)
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Ссылка,
	|	НомерСтроки
	|";
	
	ОбъектМетаданных = Метаданные.Документы.Найти(ПараметрыПечати.ТипДокумента);
	
	Если ОбъектМетаданных.Реквизиты.Найти("Ответственный") <> Неопределено Тогда
		РеквизитОтветственный = "ДанныеДокумента.Ответственный";
	ИначеЕсли ОбъектМетаданных.Реквизиты.Найти("Автор") <> Неопределено Тогда
		РеквизитОтветственный = "ДанныеДокумента.Автор";
	Иначе
		РеквизитОтветственный = """""";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТипДокумента", ОбъектМетаданных.ПолноеИмя());
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Ответственный", РеквизитОтветственный);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СодержаниеОперации", "ДанныеДокумента." + ПараметрыПечати.ПолеСодержаниеОперации);
	
	Результаты = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = Результаты.Количество();
	
	ПервыйДокумент = Истина;
	
	Для НомерРезультата = 1 По 2 Цикл
		
		ОбратныйИндекс = КоличествоРезультатов - НомерРезультата;
		Результат = Результаты[ОбратныйИндекс];
		
		Если Результат.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
			
			Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
				
				Пока Выборка.СледующийПоЗначениюПоля("ПланСчетов") Цикл
					
					Если Не ПервыйДокумент Тогда
						ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ПервыйДокумент = Ложь;
					
					// Запомним номер строки, с которой начали выводить текущий документ.
					НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
					
					// Зададим параметры макета по умолчанию
					ТабДокумент.РазмерКолонтитулаСверху = 0;
					ТабДокумент.РазмерКолонтитулаСнизу  = 0;
					ТабДокумент.АвтоМасштаб             = Истина;
					ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
					
					СформироватьБухгалтерскуюСправку(ПараметрыПечати, ТабДокумент, Выборка);
					
					// В табличном документе зададим имя области, в которую был 
					// выведен объект. Нужно для возможности печати покомплектно.
					УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент,
						НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Процедура СформироватьБухгалтерскуюСправку(ПараметрыПечати, ТабДокумент, Выборка)
	
	ЕстьКорреспонденция = Выборка.ВариантФормированияПроводок = Перечисления.ВариантыФормированияПроводок.СКорреспонденцией;
	
	Если ЕстьКорреспонденция Тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьБухгалтерскойСправкиМеждународныйУчет.ПФ_MXL_БухгалтерскаяСправкаСКорреспонденцией");
	Иначе
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьБухгалтерскойСправкиМеждународныйУчет.ПФ_MXL_БухгалтерскаяСправкаБезКорреспонденции");
	КонецЕсли;
	
	Если Выборка.УчетВФункциональнойВалюте = Перечисления.ВидыУчетаВФункциональнойВалюте.ВВалютеРегл Тогда
		ФункциональнаяВалюта = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Выборка.Организация);
	Иначе
		ФункциональнаяВалюта = ЗначениеНастроекПовтИсп.ВалютаУправленческогоУчета();
	КонецЕсли;
	
	// Получаем области макета для вывода в табличный документ.
	ШапкаДокумента   = Макет.ПолучитьОбласть("Шапка");
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	СтрокаТаблицы    = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ПодвалТаблицы    = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ПодвалДокумента  = Макет.ПолучитьОбласть("Подвал");
	
	// Выведем шапку документа.
	СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
	
	СтруктураШапки = Новый Структура();
	СтруктураШапки.Вставить("Организация",    ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации));
	СтруктураШапки.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер, Истина, Истина));
	СтруктураШапки.Вставить("ДатаДокумента",  Формат(Выборка.Дата, "ДЛФ=D"));
	СтруктураШапки.Вставить("Содержание",     Выборка.СодержаниеОперации);
	
	ШапкаДокумента.Параметры.Заполнить(СтруктураШапки);
	ТабДокумент.Вывести(ШапкаДокумента);
	
	// Выведем заголовок таблицы.
	СтруктураЗаголовка = Новый Структура();
	СтруктураЗаголовка.Вставить("ФункциональнаяВалюта", ФункциональнаяВалюта);
	
	ЗаголовокТаблицы.Параметры.Заполнить(СтруктураЗаголовка);
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	// Выведем строки документа.
	Пока Выборка.Следующий() Цикл
		
		СтрокаТаблицы.Параметры.Заполнить(Выборка);
		
		СтруктураАналитики = Новый Структура();
		СтруктураАналитики.Вставить("Дата", Формат(Выборка.Период, "ДЛФ=D;"));
		
		Если ЕстьКорреспонденция Тогда
			СтруктураАналитики.Вставить("АналитикаДт", АналитикаПроводки(Выборка, "Дт"));
			СтруктураАналитики.Вставить("АналитикаКт", АналитикаПроводки(Выборка, "Кт"));
		Иначе
			СтруктураАналитики.Вставить("Аналитика", АналитикаПроводки(Выборка, ""));
		КонецЕсли;
		
		СтрокаТаблицы.Параметры.Заполнить(СтруктураАналитики);
		
		// Проверим, помещается ли строка с подвалом.
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(СтрокаТаблицы);
		СтрокаСПодвалом.Добавить(ПодвалТаблицы);
		СтрокаСПодвалом.Добавить(ПодвалДокумента);
		
		Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
			
			// Выведем подвал таблицы.
			ТабДокумент.Вывести(ПодвалТаблицы);
				
			// Выведем разрыв страницы.
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

			// Выведем заголовок таблицы.
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		ТабДокумент.Вывести(СтрокаТаблицы);
		
	КонецЦикла;
	
	// Выведем подвал таблицы.
	ТабДокумент.Вывести(ПодвалТаблицы);
	
	// Выведем подвал документа.
	
	ТабДокумент.Вывести(ПодвалДокумента);
	
КонецПроцедуры

Функция АналитикаПроводки(Выборка, ДтКт)
	
	Аналитика = Новый Массив();
	
	Если ЗначениеЗаполнено(Выборка["Подразделение" + ДтКт]) Тогда
		Аналитика.Добавить(Выборка["Подразделение" + ДтКт]);
	КонецЕсли;
	
	Для НомерСубконто = 1 По 3 Цикл
		Если ЗначениеЗаполнено(Выборка["Субконто" + ДтКт + НомерСубконто]) Тогда
			Аналитика.Добавить(Выборка["Субконто" + ДтКт + НомерСубконто]);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрСоединить(Аналитика, Символы.ПС);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
