#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БухгалтерскаяСправка") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"БухгалтерскаяСправка",
			НСтр("ru = 'Бухгалтерская справка (регл. учет)';
				|en = 'Accounting statement (compl. accounting)'"),
			ПечатьБухгалтерскаяСправка(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьБухгалтерскаяСправка(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	// Зададим параметры макета по умолчанию
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.КлючПараметровПечати     = "ПАРАМЕТРЫ_ПЕЧАТИ_ОперацияБух_БухгалтерскаяСправка";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйДвиженияССубконто.НомерСтроки КАК НомерСтроки,
	|	ХозрасчетныйДвиженияССубконто.СчетДт,
	|	ХозрасчетныйДвиженияССубконто.ПодразделениеДт,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт3,
	|	ХозрасчетныйДвиженияССубконто.СчетКт,
	|	ХозрасчетныйДвиженияССубконто.ПодразделениеКт,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт3,
	|	ХозрасчетныйДвиженияССубконто.Организация,
	|	ХозрасчетныйДвиженияССубконто.ВалютаДт,
	|	ХозрасчетныйДвиженияССубконто.ВалютаКт,
	|	ХозрасчетныйДвиженияССубконто.Сумма,
	|	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаДт,
	|	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаКт,
	|	ХозрасчетныйДвиженияССубконто.КоличествоДт,
	|	ХозрасчетныйДвиженияССубконто.КоличествоКт,
	|	ХозрасчетныйДвиженияССубконто.Содержание,
	|	ХозрасчетныйДвиженияССубконто.Регистратор
	|ПОМЕСТИТЬ ВТХозрасчетный
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(, , Регистратор В (&МассивОбъектов), , ) КАК ХозрасчетныйДвиженияССубконто
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ХозрасчетныйДвиженияССубконто.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	&Ответственный КАК Ответственный,
	|	ДанныеДокумента.Дата КАК Дата,
	|	&СодержаниеОперации КАК СодержаниеОперации,
	|	ЕСТЬNULL(ВТХозрасчетный.НомерСтроки,1) КАК НомерСтроки,
	|	ВТХозрасчетный.СчетДт,
	|	ВТХозрасчетный.ПодразделениеДт,
	|	ВТХозрасчетный.СубконтоДт1,
	|	ВТХозрасчетный.СубконтоДт2,
	|	ВТХозрасчетный.СубконтоДт3,
	|	ВТХозрасчетный.СчетКт,
	|	ВТХозрасчетный.ПодразделениеКт,
	|	ВТХозрасчетный.СубконтоКт1,
	|	ВТХозрасчетный.СубконтоКт2,
	|	ВТХозрасчетный.СубконтоКт3,
	|	ВТХозрасчетный.Организация КАК Организация,
	|	ВТХозрасчетный.ВалютаДт,
	|	ВТХозрасчетный.ВалютаКт,
	|	ВТХозрасчетный.Сумма,
	|	ВТХозрасчетный.ВалютнаяСуммаДт,
	|	ВТХозрасчетный.ВалютнаяСуммаКт,
	|	ВТХозрасчетный.КоличествоДт,
	|	ВТХозрасчетный.КоличествоКт,
	|	ВТХозрасчетный.Содержание КАК Содержание
	|ИЗ
	|	&ТипДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТХозрасчетный КАК ВТХозрасчетный
	|		ПО ДанныеДокумента.Ссылка = ВТХозрасчетный.Регистратор
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Ссылка,
	|	НомерСтроки";
	
	ОбъектМетаданных = Метаданные.Документы.Найти(ПараметрыПечати.ТипДокумента);
	
	Если ОбъектМетаданных.Реквизиты.Найти("Ответственный") <> Неопределено Тогда
		РеквизитОтветственный = "ДанныеДокумента.Ответственный";
	ИначеЕсли ОбъектМетаданных.Реквизиты.Найти("Автор") <> Неопределено Тогда
		РеквизитОтветственный = "ДанныеДокумента.Автор";
	Иначе
		РеквизитОтветственный = """""";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТипДокумента", ОбъектМетаданных.ПолноеИмя());
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Ответственный", РеквизитОтветственный);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СодержаниеОперации", "ДанныеДокумента." + ПараметрыПечати.ПолеСодержаниеОперации);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
			
			ЕстьОшибки = Ложь;
	
			Если Не ПервыйДокумент Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;
			// Запомним номер строки, с которой начали выводить текущий документ.
			НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
			
			// Зададим параметры макета по умолчанию
			ТабДокумент.РазмерКолонтитулаСверху = 0;
			ТабДокумент.РазмерКолонтитулаСнизу  = 0;
			ТабДокумент.АвтоМасштаб             = Истина;
			ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьБухгалтерскойСправки.ПФ_MXL_БухгалтерскаяСправка");
			// Получаем области макета для вывода в табличный документ.
			ШапкаДокумента   = Макет.ПолучитьОбласть("Шапка");
			ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			СтрокаТаблицы    = Макет.ПолучитьОбласть("СтрокаТаблицы");
			ПодвалТаблицы    = Макет.ПолучитьОбласть("ПодвалТаблицы");
			ПодвалДокумента  = Макет.ПолучитьОбласть("Подвал");
					
			// Выведем шапку документа.
			СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
			
			СтруктураШапки = Новый Структура;
			СтруктураШапки.Вставить("Организация",    ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации));
			СтруктураШапки.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер, Истина, Истина));
			СтруктураШапки.Вставить("ДатаДокумента",  Формат(Выборка.Дата, "ДЛФ=D"));
			
			СтруктураШапки.Вставить("Содержание", ?(ПараметрыПечати.Свойство("КомментарийСодержания"), ПараметрыПечати.КомментарийСодержания + " ", "") 
				+ Выборка.СодержаниеОперации);
			
			ШапкаДокумента.Параметры.Заполнить(СтруктураШапки);
			ТабДокумент.Вывести(ШапкаДокумента);
			
			// Выведем заголовок таблицы.
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
			// Выведем строки документа.
			Пока Выборка.Следующий() Цикл
				
				СтрокаТаблицы.Параметры.Заполнить(Выборка);
				
				АналитикаДт = ?(ЗначениеЗаполнено(Выборка.ПодразделениеДт), Строка(Выборка.ПодразделениеДт) + Символы.ПС, "")
					+ ?(ЗначениеЗаполнено(Выборка.СубконтоДт1), Строка(Выборка.СубконтоДт1) + Символы.ПС, "")
					+ ?(ЗначениеЗаполнено(Выборка.СубконтоДт2), Строка(Выборка.СубконтоДт2) + Символы.ПС, "")
					+ ?(ЗначениеЗаполнено(Выборка.СубконтоДт3), Строка(Выборка.СубконтоДт3), "");
				
				АналитикаКт = ?(ЗначениеЗаполнено(Выборка.ПодразделениеКт), Строка(Выборка.ПодразделениеКт) + Символы.ПС, "")
					+ ?(ЗначениеЗаполнено(Выборка.СубконтоКт1), Строка(Выборка.СубконтоКт1) + Символы.ПС, "")
					+ ?(ЗначениеЗаполнено(Выборка.СубконтоКт2), Строка(Выборка.СубконтоКт2) + Символы.ПС, "")
					+ ?(ЗначениеЗаполнено(Выборка.СубконтоКт3), Строка(Выборка.СубконтоКт3), "");
					
				СтруктураАналитики = Новый Структура("АналитикаДт,АналитикаКт", АналитикаДт, АналитикаКт);
				СтрокаТаблицы.Параметры.Заполнить(СтруктураАналитики);
				
				// Проверим, помещается ли строка с подвалом.
				СтрокаСПодвалом = Новый Массив;
				СтрокаСПодвалом.Добавить(СтрокаТаблицы);
				СтрокаСПодвалом.Добавить(ПодвалТаблицы);
				СтрокаСПодвалом.Добавить(ПодвалДокумента);
				
				Если НЕ ОбщегоНазначенияБПВызовСервера.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
					
					// Выведем подвал таблицы.
					ТабДокумент.Вывести(ПодвалТаблицы);
						
					// Выведем разрыв страницы.
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
					// Выведем заголовок таблицы.
					ТабДокумент.Вывести(ЗаголовокТаблицы);
					
				КонецЕсли;
				
				ТабДокумент.Вывести(СтрокаТаблицы);
				
			КонецЦикла;
			
			// Выведем подвал таблицы.
			ТабДокумент.Вывести(ПодвалТаблицы);
			
			// Выведем подвал документа.
			
			ТабДокумент.Вывести(ПодвалДокумента);
			
			// В табличном документе зададим имя области, в которую был 
			// выведен объект. Нужно для возможности печати покомплектно.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент,
				НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	
		КонецЦикла;
		
	КонецЦикла;

	Возврат ТабДокумент;

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
