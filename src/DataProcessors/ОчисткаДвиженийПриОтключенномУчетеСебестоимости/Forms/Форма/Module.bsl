
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПроверитьНаличиеНеиспользуемыхДвижений();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОчиститьДвижения(Команда)
	
	ДлительнаяОперация	= ОчиститьНеиспользуемыеДвиженияПоРегистрамСебестоимости();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Выполняется очистка движений.';
											|en = 'Movements are being cleared.'");
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОчиститьДвиженияЗавершение", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		ДлительнаяОперация,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьНаличиеНеиспользуемыхДвижений()
	
	КоличествоДокументов = Обработки.ОчисткаДвиженийПриОтключенномУчетеСебестоимости.КоличествоРегистраторовСНеиспользуемымиДвижениями();
	
	Если КоличествоДокументов = 0 Тогда
		
		Элементы.ИнформационнаяНадпись.Заголовок = НСтр("ru = 'При отключеном учете себестоимости отсутствуют документы с движениями по регистрам учета себестоимости.';
														|en = 'When the cost accounting is off, there are no documents with records by cost accounting registers.'");
		
		Элементы.ФормаОчиститьДвижения.Доступность = Ложь;
		
		Возврат;
		
	КонецЕсли;
	
	ШаблонТекста = НСтр("ru = 'Учет себестоимости ведется начиная с периода %1.
	|При отключеном учете себестоимости найдены документы с движениями по регистрам учета себестоимости: %2.
	|Очистка движений этих документов может занять продолжительное время.';
	|en = 'The cost is accounted since the period %1.
	|When the cost accounting is off, documents with records by cost accounting registers are found: %2.
	|It may take some time to clear records of this documents.'");
	
	Элементы.ИнформационнаяНадпись.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ШаблонТекста,
		РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(Константы.ДатаНачалаУчетаСебестоимости.Получить()),
		Формат(КоличествоДокументов, "ЧГ="));
	
	Элементы.ФормаОчиститьДвижения.Доступность = Истина;
	
КонецПроцедуры

&НаСервере
Функция ОчиститьНеиспользуемыеДвиженияПоРегистрамСебестоимости()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания =
		Метаданные.Обработки.ОчисткаДвиженийПриОтключенномУчетеСебестоимости.Синоним;
	
	Результат = ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.ОчисткаДвиженийПриОтключенномУчетеСебестоимости.ОчиститьНеиспользуемыеДвиженияПоРегистрамСебестоимости",
		"",
		ПараметрыВыполнения);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОчиститьДвиженияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПроверитьНаличиеНеиспользуемыхДвижений();
	
КонецПроцедуры

#КонецОбласти
