///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем СообщениеОбмена Экспорт; // При получении - имя полученного файла во ВременныйКаталог. При отправке - имя файла, который необходимо отправить
Перем ВременныйКаталог Экспорт; // Временный каталог для сообщений обмена.
Перем ИдентификаторКаталога Экспорт;
Перем Корреспондент Экспорт;
Перем ИмяПланаОбмена Экспорт;
Перем ИмяПланаОбменаКорреспондента Экспорт;
Перем СообщениеОбОшибке Экспорт;
Перем СообщениеОбОшибкеЖР Экспорт;

Перем ШаблоныИменДляПолученияСообщения Экспорт;
Перем ИмяСообщенияДляОтправки Экспорт;

Перем ОбщийМодульРаботаСПочтовымиСообщениями;

#КонецОбласти

#Область ПрограммныйИнтерфейс

// См. ОбработкаОбъект.ТранспортСообщенийОбменаFILE.ОтправитьДанные
Функция ОтправитьДанные(СообщениеДляСопоставленияДанных = Ложь) Экспорт
	
	Попытка
		Результат = ОтправитьСообщение();
	Исключение
		Результат = Ложь;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

// См. ОбработкаОбъект.ТранспортСообщенийОбменаFILE.ПолучитьДанные
Функция ПолучитьДанные() Экспорт
	
	Попытка
		
		Для Каждого Шаблон Из ШаблоныИменДляПолученияСообщения Цикл
			
			Результат = ПолучитьСообщение(Шаблон);
			
			Если Результат Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	Исключение
		
		ТранспортСообщенийОбмена.ИнформацияОбОшибкеВСообщения(ЭтотОбъект, ИнформацияОбОшибке());
		ТранспортСообщенийОбмена.ЗаписатьСообщениеВЖурналРегистрации(ЭтотОбъект, "ЗагрузкаДанных");
		
		Результат = Ложь;
		
	КонецПопытки;
	
	Возврат Результат;

КонецФункции

// См. ОбработкаОбъект.ТранспортСообщенийОбменаFILE.ПередВыгрузкойДанных
Функция ПередВыгрузкойДанных(СообщениеДляСопоставленияДанных = Ложь) Экспорт
	
	Возврат Истина;
	
КонецФункции

// См. ОбработкаОбъект.ТранспортСообщенийОбменаFILE.ПараметрыКорреспондента
Функция ПараметрыКорреспондента(НастройкиПодключения) Экспорт
	
	Результат = ТранспортСообщенийОбмена.СтруктураРезультатаПолученияПараметровКорреспондента();
	Результат.ПодключениеУстановлено = Истина;
	Результат.ПодключениеРазрешено = Истина;
	
	Возврат Результат;
	
КонецФункции

// См. ОбработкаОбъект.ТранспортСообщенийОбменаFILE.СохранитьНастройкиВКорреспонденте
Функция СохранитьНастройкиВКорреспонденте(НастройкиПодключения) Экспорт
		
	Возврат Истина;
	
КонецФункции

// См. ОбработкаОбъект.ТранспортСообщенийОбменаFILE.ТребуетсяАутентификация
Функция ТребуетсяАутентификация() Экспорт
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОтправитьСообщение()
		
	Результат = Истина;
	
	Если СжиматьФайлИсходящегоСообщения Тогда
		
		Если Не ТранспортСообщенийОбмена.ЗапаковатьСообщениеОбменаВZipФайл(ЭтотОбъект, ПарольАрхиваСообщенияОбмена) Тогда
			Результат = Ложь;
		КонецЕсли;
		
		Файл = Новый Файл(СообщениеОбмена);
		ИмяФайлаПриемника = Файл.Имя;
		
	Иначе
		
		ИмяФайлаПриемника = ИмяСообщенияДляОтправки;
		
	КонецЕсли;
	
	Если Результат Тогда
		
		// Выполняем проверку на максимально допустимый размер сообщения обмена.
		Если ОбменДаннымиСервер.РазмерСообщенияОбменаПревышаетДопустимый(СообщениеОбмена, МаксимальныйДопустимыйРазмерСообщения) Тогда
			СообщениеОбОшибке = НСтр("ru = 'Превышен допустимый размер сообщения обмена.';
									|en = 'The maximum allowed exchange message size is exceeded.'");
			ТранспортСообщенийОбмена.ЗаписатьСообщениеВЖурналРегистрации(ЭтотОбъект, "ВыгрузкаДанных");
			Результат = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Результат Тогда
		
		ТелоСообщенияПростое = НСтр("ru = 'Сообщение обмена данными';
									|en = 'Data exchange message'");
		
		Результат = ОтправитьСообщениеПоЭлектроннойПочте(
			ТелоСообщенияПростое,
			ИмяФайлаПриемника,
			СообщениеОбмена);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьСообщение(ШаблонИмениСообщения)
	
	ТаблицаСообщенийОбмена = ТаблицаСообщенийОбмена();
	
	МассивКолонок = Новый Массив;
	
	ПараметрыЗагрузки = Новый Структура;
	ПараметрыЗагрузки.Вставить("ПолучениеЗаголовков", Истина);
	ПараметрыЗагрузки.Вставить("ПриводитьСообщенияКТипу", Ложь);
	
	Попытка
		НаборСообщений = ОбщийМодульРаботаСПочтовымиСообщениями.ЗагрузитьПочтовыеСообщения(УчетнаяЗапись, ПараметрыЗагрузки);
	Исключение
		
		СообщениеОбОшибке = НСтр("ru = 'Ошибка при получении заголовков сообщений с сервера электронной почты.';
								|en = 'Error receiving message headers from the email server.'");
		СообщениеОбОшибкеЖР = СообщениеОбОшибке;
		
		ТранспортСообщенийОбмена.ИнформацияОбОшибкеВСообщения(ЭтотОбъект, ИнформацияОбОшибке(), Истина);
		ТранспортСообщенийОбмена.ЗаписатьСообщениеВЖурналРегистрации(ЭтотОбъект, "ЗагрузкаДанных");
		
		Возврат Ложь;
		
	КонецПопытки;
		
	Для Каждого ПочтовоеСообщение Из НаборСообщений Цикл
		
		Тема = СокрЛП(ПочтовоеСообщение.Тема);
		Тема = СтрЗаменить(Тема, Символы.Таб, "");
		
		НоваяСтрока = ТаблицаСообщенийОбмена.Добавить();
		НоваяСтрока.Тема = Тема;
		НоваяСтрока.ДатаОтправления = ПочтовоеСообщение.ДатаОтправления;
		НоваяСтрока.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		НоваяСтрока.Идентификатор.Добавить(ПочтовоеСообщение);
		
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Т.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	Т.ДатаОтправления КАК ДатаОтправления,
		|	Т.Тема КАК Тема
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&ТаблицаСообщенийОбмена КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ИЗ
		|	ВТ КАК ВТ
		|ГДЕ
		|	ВТ.Тема ПОДОБНО &Шаблон
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ.ДатаОтправления УБЫВ";
	
	// Поиск без учета расширения
	Позиция = СтрНайти(ШаблонИмениСообщения, ".", НаправлениеПоиска.СКонца);
	ШаблонИмениСообщенияДляПоиска = Лев(ШаблонИмениСообщения,  Позиция - 1);
	ШаблонИмениСообщенияДляПоиска = "%" + СтрЗаменить(ШаблонИмениСообщенияДляПоиска, "*", "%") + "%";
	
	Запрос.УстановитьПараметр("ТаблицаСообщенийОбмена", ТаблицаСообщенийОбмена);
	Запрос.УстановитьПараметр("Шаблон", ШаблонИмениСообщенияДляПоиска);
	
	РезультатПоискаПисем = Запрос.Выполнить().Выгрузить(); 
	
	Если РезультатПоискаПисем.Количество() = 0 Тогда
		
		СообщениеОбОшибке = НСтр("ru = 'Не обнаружены письма с заголовком: ""%1""';
								|en = 'The messages with ""%1"" header are not found.'");
		СообщениеОбОшибке = СтрШаблон(СообщениеОбОшибке, ШаблонИмениСообщения);
		ТранспортСообщенийОбмена.ЗаписатьСообщениеВЖурналРегистрации(ЭтотОбъект, "ЗагрузкаДанных");
		
		Возврат Ложь;
		
	КонецЕсли;
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Вложения");
	
	Идентификатор = ТаблицаСообщенийОбмена.Найти(РезультатПоискаПисем[0].ИдентификаторСтроки).Идентификатор;
	
	ПараметрыЗагрузки = Новый Структура;
	ПараметрыЗагрузки.Вставить("Колонки", МассивКолонок);
	ПараметрыЗагрузки.Вставить("ЗаголовкиИдентификаторы", Идентификатор);
		
	Попытка
		НаборСообщений = ОбщийМодульРаботаСПочтовымиСообщениями.ЗагрузитьПочтовыеСообщения(УчетнаяЗапись, ПараметрыЗагрузки);
	Исключение
		
		СообщениеОбОшибке = НСтр("ru = 'Ошибка при получении сообщения с сервера электронной почты.';
								|en = 'Error receiving the message from the email server.'");
		СообщениеОбОшибкеЖР = СообщениеОбОшибке;
		
		ТранспортСообщенийОбмена.ИнформацияОбОшибкеВСообщения(ЭтотОбъект, ИнформацияОбОшибке(), Истина);
		ТранспортСообщенийОбмена.ЗаписатьСообщениеВЖурналРегистрации(ЭтотОбъект, "ЗагрузкаДанных");
		
		Возврат Ложь;
		
	КонецПопытки;

	ДвоичныеДанные = Неопределено;
	Для Каждого КлючИЗначение Из НаборСообщений[0].Вложения Цикл
		ФайлЗапакован = ВРег(Прав(КлючИЗначение.Ключ, 3)) = "ZIP";
		ДвоичныеДанные = КлючИЗначение.Значение;
	КонецЦикла;
	
	Если ДвоичныеДанные = Неопределено Тогда
		
		СообщениеОбОшибке = НСтр("ru = 'Ошибка: в почтовом сообщении не найден файл с сообщением.';
								|en = 'Error: no exchange message file is found in the email message.'");
		СообщениеОбОшибкеЖР = СообщениеОбОшибке;
		
		ТранспортСообщенийОбмена.ИнформацияОбОшибкеВСообщения(ЭтотОбъект, ИнформацияОбОшибке(), Истина);
		ТранспортСообщенийОбмена.ЗаписатьСообщениеВЖурналРегистрации(ЭтотОбъект, "ЗагрузкаДанных");
		
		Возврат Ложь;
		
	КонецЕсли;
		
	Если ФайлЗапакован Тогда
		
		// Получаем имя для временного файла архива.
		ИмяВременногоФайлаАрхива = ОбщегоНазначенияКлиентСервер.ПолучитьПолноеИмяФайла(
			СообщениеОбмена, Строка(Новый УникальныйИдентификатор) + ".zip");
		
		ДвоичныеДанные.Записать(ИмяВременногоФайлаАрхива);
		
		Если Не ТранспортСообщенийОбмена.РаспаковатьСообщениеОбменаИзZipФайла(
			ЭтотОбъект, ИмяВременногоФайлаАрхива, ПарольАрхиваСообщенияОбмена) Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
	
	Иначе
		
		Попытка
			ДвоичныеДанные.Записать(СообщениеОбмена);
		Исключение
			
			СообщениеОбОшибке = НСтр("ru = 'Ошибка при записи файла сообщения обмена на диск.';
									|en = 'Error saving the exchange message file to the hard drive.'");
			СообщениеОбОшибкеЖР = СообщениеОбОшибке;
		
			ТранспортСообщенийОбмена.ИнформацияОбОшибкеВСообщения(ЭтотОбъект, ИнформацияОбОшибке(), Истина);
			ТранспортСообщенийОбмена.ЗаписатьСообщениеВЖурналРегистрации(ЭтотОбъект, "ЗагрузкаДанных");
			
			Возврат Ложь;
			
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ПодключениеУстановлено() Экспорт
	
	Если НЕ ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		СообщениеОбОшибке = НСтр("ru = 'Ошибка инициализации: не указана учетная запись электронной почты транспорта сообщений обмена.';
								|en = 'Initialization error: the exchange message transport email account is not specified.'");
		ТранспортСообщенийОбмена.ЗаписатьСообщениеВЖурналРегистрации(ЭтотОбъект);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ТаблицаСообщенийОбмена()
	
	ТаблицаСообщенийОбмена = Новый ТаблицаЗначений;
	ТаблицаСообщенийОбмена.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(36)));
	ТаблицаСообщенийОбмена.Колонки.Добавить("Идентификатор",   Новый ОписаниеТипов("Массив"));
	ТаблицаСообщенийОбмена.Колонки.Добавить("ДатаОтправления", Новый ОписаниеТипов("Дата"));
	ТаблицаСообщенийОбмена.Колонки.Добавить("Тема", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(200)));
	
	Возврат ТаблицаСообщенийОбмена;
	
КонецФункции

Функция ОтправитьСообщениеПоЭлектроннойПочте(Тело, ИмяФайлаИсходящегоСообщения, ПутьКФайлу)
	
	ОписаниеВложения = Новый Структура;
	ОписаниеВложения.Вставить("Представление", ИмяФайлаИсходящегоСообщения);
	ОписаниеВложения.Вставить("АдресВоВременномХранилище", ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьКФайлу)));
	
	АдресЭлектроннойПочты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УчетнаяЗапись, "АдресЭлектроннойПочты");
	
	ТемаСообщения = "Exchange message (%1)"; // Строка не подлежит локализации.
	ТемаСообщения = СтрШаблон(ТемаСообщения, ИмяФайлаИсходящегоСообщения);
	
	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("Кому",     АдресЭлектроннойПочты);
	ПараметрыСообщения.Вставить("Тема",     ТемаСообщения);
	ПараметрыСообщения.Вставить("Тело",     Тело);
	ПараметрыСообщения.Вставить("Вложения", Новый Массив);
	
	ПараметрыСообщения.Вложения.Добавить(ОписаниеВложения);
	
	Попытка
		НовоеПисьмо = ОбщийМодульРаботаСПочтовымиСообщениями.ПодготовитьПисьмо(УчетнаяЗапись, ПараметрыСообщения);
		ОбщийМодульРаботаСПочтовымиСообщениями.ОтправитьПисьмо(УчетнаяЗапись, НовоеПисьмо);
	Исключение
		
		СообщениеОбОшибке = НСтр("ru = 'Ошибка при отправке сообщения электронной почты.';
								|en = 'Error sending the email message.'");
		СообщениеОбОшибкеЖР = СообщениеОбОшибке;
		
		ТранспортСообщенийОбмена.ИнформацияОбОшибкеВСообщения(ЭтотОбъект, ИнформацияОбОшибке(), Истина);
		ТранспортСообщенийОбмена.ЗаписатьСообщениеВЖурналРегистрации(ЭтотОбъект, "ВыгрузкаДанных");
		
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область Инициализация

ВременныйКаталог = Неопределено;
СообщенияОбмена  = Неопределено;

Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями") Тогда
	ОбщийМодульРаботаСПочтовымиСообщениями = ОбщегоНазначения.ОбщийМодуль("РаботаСПочтовымиСообщениями");
КонецЕсли;

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли