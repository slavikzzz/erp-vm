#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Заполняет список проверок состояния учета, которые используются помощником.
//
// Параметры:
//  ТаблицаПроверок - см. АудитСостоянияСистемыПереопределяемый.ЗаполнитьПроверкиДляРегистрации.
//
Процедура ЗаполнитьПроверкиДляРегистрации(ТаблицаПроверок) Экспорт
	
	// Проблемы этапа ПереносПараметровУчетаОС
	#Область ПереносПараметровУчетаОС
	
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с переносом параметров учета ОС';
			|en = 'Issues related to transfer of FA accounting parameters'"),
		"ПереносПараметровУчетаОС",
		Истина,
		ТаблицаПроверок);
		
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с лишними параметрами учета ОС';
			|en = 'Issues connected with extra FA accounting parameters'"),
		"ПереносПараметровУчетаОС_ЛишниеДанные",
		Истина,
		ТаблицаПроверок);
		
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с задублированными параметрами учета ОС';
			|en = 'Issues related to duplicate FA accounting parameters '"),
		"ПереносПараметровУчетаОС_Дубль",
		Истина,
		ТаблицаПроверок);
		
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с переносом изменений параметров ОС';
			|en = 'Issues related to transfer of FA parameter changes'"),
		"ПереносПараметровУчетаОС_ИзменениеПараметров",
		Истина,
		ТаблицаПроверок);
		
	#КонецОбласти
		
	// Проблемы этапа ПереносПараметровУчетаАрендованныхОС
	#Область ПереносПараметровУчетаАрендованныхОС
	
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с переносом параметров учета арендованных ОС';
			|en = 'Issues connected with transfer of leased FA accounting parameters'"),
		"ПереносПараметровУчетаАрендованныхОС",
		Истина,
		ТаблицаПроверок);
		
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с лишними параметрами учета арендованных ОС';
			|en = 'Issues related to extra accounting parameters of leased FA'"),
		"ПереносПараметровУчетаАрендованныхОС_ЛишниеДанные",
		Истина,
		ТаблицаПроверок);
		
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с задублированными параметрами учета арендованных ОС';
			|en = 'Issues related to duplicate parameters of leased FA accounting'"),
		"ПереносПараметровУчетаАрендованныхОС_Дубль",
		Истина,
		ТаблицаПроверок);
		
	#КонецОбласти
		
	// Проблемы этапа ПереносПараметровУчетаНМА
	#Область ПереносПараметровУчетаНМА
	
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с переносом параметров учета НМА';
			|en = 'Issues related to transfer of IA accounting parameters'"),
		"ПереносПараметровУчетаНМА",
		Истина,
		ТаблицаПроверок);
		
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с лишними параметрами учета НМА';
			|en = 'Issues related to extra IA accounting parameters'"),
		"ПереносПараметровУчетаНМА_ЛишниеДанные",
		Истина,
		ТаблицаПроверок);
		
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с задублированными параметрами учета НМА';
			|en = 'Issues related to duplicate IA accounting parameters'"),
		"ПереносПараметровУчетаНМА_Дубль",
		Истина,
		ТаблицаПроверок);
		
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с переносом изменений параметров НМА';
			|en = 'Issues related to transferring IA parameter changes'"),
		"ПереносПараметровУчетаНМА_ИзменениеПараметров",
		Истина,
		ТаблицаПроверок);
		
	#КонецОбласти
	
	// Проблемы этапа ПереносВложенийВоВнеоборотныеАктивы
	#Область ПереносВложенийВоВнеоборотныеАктивы
	
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с переносом вложений во внеоборотные активы';
			|en = 'Issues related to transfer of investments in capital assets'"),
		"ПереносВложенийВоВнеоборотныеАктивы",
		Истина,
		ТаблицаПроверок);
		
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с лишними вложениями во внеоборотные активы';
			|en = 'Issues related to excess investments in capital assets'"),
		"ПереносВложенийВоВнеоборотныеАктивы_ЛишниеДанные",
		Истина,
		ТаблицаПроверок);
		
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с задублированными вложениями во внеоборотные активы';
			|en = 'Issues related to duplicate investments in capital assets'"),
		"ПереносВложенийВоВнеоборотныеАктивы_Дубль",
		Истина,
		ТаблицаПроверок);
		
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с корректировкой остатка в регистре ""Активы и пассивы""';
			|en = 'Issues related to the balance adjustment in the Assets and liabilities register'"),
		"КорректировкаОстаткаПрочиеАктивы",
		Истина,
		ТаблицаПроверок);
		
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с задублированными корректировками остатка в регистре ""Активы и пассивы""';
			|en = 'Issues related to duplicate balance adjusting entries in the Assets and liabilities register'"),
		"КорректировкаОстаткаПрочиеАктивы_Дубль",
		Истина,
		ТаблицаПроверок);
		
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Проблемы, связанные с лишними корректировками остатка в регистре ""Активы и пассивы""';
			|en = 'Issues related to excessive balance adjusting entries in the Assets and liabilities register'"),
		"КорректировкаОстаткаПрочиеАктивы_ЛишниеДанные",
		Истина,
		ТаблицаПроверок);
		
	#КонецОбласти
		
	// Используется для отслеживания выполнения шагов помощника
	ДобавитьОписаниеНовойПроверки(
		НСтр("ru = 'Служебная проверка помощника перехода (хранит состояние переноса данных)';
			|en = 'Service check of migration wizard (stores data transfer state)'"),
		"СостояниеПереносаДанных",
		Ложь,
		ТаблицаПроверок);
		
КонецПроцедуры

// Заполняет группы проверок, которые используются помощником.
//
// Параметры:
//  ТаблицаГруппПроверок - ТаблицаЗначений	 - см. АудитСостоянияСистемыПереопределяемый.ЗаполнитьГруппыПроверокДляРегистрации.
//
Процедура ЗаполнитьГруппыПроверокДляРегистрации(ТаблицаГруппПроверок) Экспорт
	
	ОписаниеГруппыПроверок = ТаблицаГруппПроверок.Добавить();
	ОписаниеГруппыПроверок.ИдентификаторРодителя = "";
	ОписаниеГруппыПроверок.Наименование = НСтр("ru = 'Переход на учет внеоборотных активов версии 2.4';
												|en = 'Migration to fixed asset accounting 2.4'");
	ОписаниеГруппыПроверок.КонтекстПроверокВеденияУчета = Документы.ВводОстатковВнеоборотныхАктивов2_4.ПустаяСсылка();
	ОписаниеГруппыПроверок.Идентификатор = "ПереходНаУчетВнеоборотныхАктивовВерсии24";
	
КонецПроцедуры

// Возвращает признак завершения переноса данных.
// 
// Возвращаемое значение:
//  Булево, Неопределено - Истина, если перенос данных завершен, Неопределено, если перенос вообще не выполнялся.
//
Функция ПереносДанныхЗавершен() Экспорт

	СостояниеЭтапов = СостояниеЭтапов();
	
	Если СостояниеЭтапов = Неопределено
		ИЛИ (СостояниеЭтапов.УдалениеДанных.ПереносЗавершен = Неопределено
				И СостояниеЭтапов.СозданиеГФУ.ПереносЗавершен = Неопределено
				И СостояниеЭтапов.ПереносПараметровУчетаОС.ПереносЗавершен = Неопределено
				И СостояниеЭтапов.ПереносПараметровУчетаАрендованныхОС.ПереносЗавершен = Неопределено
				И СостояниеЭтапов.ПереносПараметровУчетаНМА.ПереносЗавершен = Неопределено
				И СостояниеЭтапов.ПереносВложенийВоВнеоборотныеАктивы.ПереносЗавершен = Неопределено) Тогда
		Возврат Неопределено;
	КонецЕсли;

	Возврат СостояниеЭтапов.УдалениеДанных.ПереносЗавершен = Истина
				И СостояниеЭтапов.СозданиеГФУ.ПереносЗавершен = Истина
				И СостояниеЭтапов.ПереносПараметровУчетаОС.ПереносЗавершен = Истина
				И СостояниеЭтапов.ПереносПараметровУчетаАрендованныхОС.ПереносЗавершен = Истина
				И СостояниеЭтапов.ПереносПараметровУчетаНМА.ПереносЗавершен = Истина
				И СостояниеЭтапов.ПереносВложенийВоВнеоборотныеАктивы.ПереносЗавершен = Истина;
	
КонецФункции

// Возвращает признак проверки данных.
// 
// Возвращаемое значение:
//  Булево - Истина, если данные проверены.
//
Функция ДанныеПроверены() Экспорт

	СостояниеЭтапов = СостояниеЭтапов();
	
	Если СостояниеЭтапов = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли; 

	Возврат СостояниеЭтапов.СозданиеГФУ.ПроверкаЗавершена
				И СостояниеЭтапов.ПереносПараметровУчетаОС.ПроверкаЗавершена
				И СостояниеЭтапов.ПереносПараметровУчетаАрендованныхОС.ПроверкаЗавершена
				И СостояниеЭтапов.ПереносПараметровУчетаНМА.ПроверкаЗавершена
				И СостояниеЭтапов.ПереносВложенийВоВнеоборотныеАктивы.ПроверкаЗавершена;

КонецФункции
 
// Возвращает сведения о зарегистрированных проблемах.
//
// Параметры:
//  СписокОрганизаций	 - Массив	 - Организации, по которым нужно получить проблемы.
// 
// Возвращаемое значение:
//  Структура - Содержит сведения о зарегистрированных проблемах.
//
Функция СведенияЗарегистрированныхПроблемах(СписокОрганизаций = Неопределено) Экспорт

	Если СписокОрганизаций = Неопределено Тогда
		СписокОрганизаций = Новый Массив;
	КонецЕсли; 
	
	СведенияОПроблемах = Новый Структура;
	СведенияОПроблемах.Вставить("КоличествоПроблем", 0);
	СведенияОПроблемах.Вставить("КоличествоПредупреждений", 0);
	СведенияОПроблемах.Вставить("КоличествоРешенныхПроблем", 0);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Проблемы.Важность = ЗНАЧЕНИЕ(Перечисление.ВажностьПроблемыУчета.Ошибка)
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК КоличествоПроблем,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Проблемы.Важность = ЗНАЧЕНИЕ(Перечисление.ВажностьПроблемыУчета.Предупреждение)
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК КоличествоПредупреждений,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Проблемы.Важность = ЗНАЧЕНИЕ(Перечисление.ВажностьПроблемыУчета.Информация)
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК КоличествоРешенныхПроблем
	|ИЗ
	|	РегистрСведений.ОбъектыПроблемСостоянияСистемы КАК ОбъектыПроблем
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПроблемыСостоянияСистемы КАК Проблемы
	|		ПО (Проблемы.Проверка = ОбъектыПроблем.Проверка)
	|			И (Проблемы.Организация = ОбъектыПроблем.Организация)
	|			И (Проблемы.ПроверяемыйПериод = ОбъектыПроблем.ПроверяемыйПериод)
	|			И (Проблемы.Проблема = ОбъектыПроблем.Проблема)
	|ГДЕ
	|	ОбъектыПроблем.Проверка В(&СписокПроверок)
	|	И (ОбъектыПроблем.Организация В(&СписокОрганизаций)
	|		ИЛИ &БезОтбораПоОрганизации)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокПроверок", ИспользуемыеПроверки());
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("БезОтбораПоОрганизации", СписокОрганизаций.Количество() = 0);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	Если Результат.Пустой() Тогда
		Возврат СведенияОПроблемах;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	ЗаполнитьЗначенияСвойств(СведенияОПроблемах, Выборка);
	
	Возврат СведенияОПроблемах;

КонецФункции
 
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Выполняет перенос данных и возвращает результаты переноса.
//
// Параметры:
//  Параметры		 - Структура - Параметры переноса данных, указанные в помощнике.
//  АдресХранилища	 - Строка - Адрес временного хранилища.
//
Процедура ВыполнитьПереносДанных(Параметры, АдресХранилища) Экспорт
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("Обработка.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.ВыполнитьПереносДанных");
	
	ПараметрыОбработчика = ПараметрыОбработчика(Параметры, АдресХранилища);
	
	// Создание временных таблиц, используемых при переносе данных
	СоздатьВременныеТаблицыДляПереносаДанных(ПараметрыОбработчика);
	
	// Перенос и проверка данных
	УдалитьСтарыеДанные(ПараметрыОбработчика);
	СоздатьГруппыФинансовогоУчета(ПараметрыОбработчика);
	ОпределитьГруппыФинансовогоУчета(ПараметрыОбработчика);
	
	ОбработатьПараметрыУчетаСобственныхОС(ПараметрыОбработчика);
	ОбработатьПараметрыУчетаАрендованныхОС(ПараметрыОбработчика);
	ОбработатьПараметрыУчетаНМА(ПараметрыОбработчика);
	ОбработатьВложенияВоВнеоборотныеАктивы(ПараметрыОбработчика);
	
	// Возврат результатов переноса данных в форму.
	ПоместитьВоВременноеХранилище(ПараметрыОбработчика.РезультатыПереносаДанных, АдресХранилища);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, ПараметрыОбработчика.РезультатыПереносаДанных.КоличествоДанных / 10);
	
КонецПроцедуры
 
// Возвращает проверки, используемые при регистрации проблем.
// 
// Возвращаемое значение:
//  СписокЗначений - Список проверок.
//
Функция ИспользуемыеПроверки() Экспорт

	ИспользуемыеПроверки = Новый Массив;
	ИспользуемыеПроверки.Добавить("ПереносПараметровУчетаОС");
	ИспользуемыеПроверки.Добавить("ПереносПараметровУчетаОС_ЛишниеДанные");
	ИспользуемыеПроверки.Добавить("ПереносПараметровУчетаОС_Дубль");
	ИспользуемыеПроверки.Добавить("ПереносПараметровУчетаОС_ИзменениеПараметров");
	
	ИспользуемыеПроверки.Добавить("ПереносПараметровУчетаАрендованныхОС");
	ИспользуемыеПроверки.Добавить("ПереносПараметровУчетаАрендованныхОС_ЛишниеДанные");
	ИспользуемыеПроверки.Добавить("ПереносПараметровУчетаАрендованныхОС_Дубль");
	
	ИспользуемыеПроверки.Добавить("ПереносПараметровУчетаНМА");
	ИспользуемыеПроверки.Добавить("ПереносПараметровУчетаНМА_ЛишниеДанные");
	ИспользуемыеПроверки.Добавить("ПереносПараметровУчетаНМА_Дубль");
	ИспользуемыеПроверки.Добавить("ПереносПараметровУчетаНМА_ИзменениеПараметров");
	
	ИспользуемыеПроверки.Добавить("ПереносВложенийВоВнеоборотныеАктивы");
	ИспользуемыеПроверки.Добавить("ПереносВложенийВоВнеоборотныеАктивы_ЛишниеДанные");
	ИспользуемыеПроверки.Добавить("ПереносВложенийВоВнеоборотныеАктивы_Дубль");
	
	ИспользуемыеПроверки.Добавить("КорректировкаОстаткаПрочиеАктивы");
	ИспользуемыеПроверки.Добавить("КорректировкаОстаткаПрочиеАктивы_Дубль");
	ИспользуемыеПроверки.Добавить("КорректировкаОстаткаПрочиеАктивы_ЛишниеДанные");
	
	СписокПроверок = Новый СписокЗначений;
	Для каждого ИмяПроверки Из ИспользуемыеПроверки Цикл
		Проверка = АудитСостоянияСистемы.НайтиПроверкуПоКлючевымПолям(
					Документы.ВводОстатковВнеоборотныхАктивов2_4.ПустаяСсылка(),
					ИмяПроверки);
					
		СписокПроверок.Добавить(Проверка, ИмяПроверки);
	КонецЦикла;
	
	Возврат СписокПроверок;
	
КонецФункции

// Возвращает состояние выполнения этапов.
// 
// Возвращаемое значение:
//  Структура, Неопределено - Содержит состояние выполнения этапов.
//
Функция СостояниеЭтапов() Экспорт

	ПроверкаСостояниеЭтапов = АудитСостоянияСистемы.НайтиПроверкуПоКлючевымПолям(
										Документы.ВводОстатковВнеоборотныхАктивов2_4.ПустаяСсылка(),
										"СостояниеПереносаДанных");
										
	Если НЕ ЗначениеЗаполнено(ПроверкаСостояниеЭтапов) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Проблемы.ДополнительнаяИнформация КАК ДополнительнаяИнформация
	|ИЗ
	|	РегистрСведений.ПроблемыСостоянияСистемы КАК Проблемы
	|ГДЕ
	|	Проблемы.Проверка = &Проверка";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Проверка", ПроверкаСостояниеЭтапов);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		// Если не найдены данные служебной проверки, то перенос данных вообще не запускался.
		Возврат Неопределено;
	КонецЕсли; 
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();

	Возврат Выборка.ДополнительнаяИнформация.Получить();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбщиеПараметры

Процедура УдалитьСтарыеДанные(ПараметрыОбработчика)
	
	Если НЕ ТребуетсяВыполнитьЭтап("УдалениеДанных", ПараметрыОбработчика) Тогда
		Возврат;
	КонецЕсли;
	
	ЗафиксироватьНачалоВыполненияЭтапа("УдалениеДанных", 0, ПараметрыОбработчика);

	УстановитьПривилегированныйРежим(Истина);
	
	Если ПараметрыОбработчика.РежимПереносаДанных = ""
		ИЛИ ПараметрыОбработчика.РежимПереносаДанных = "Заново"
		ИЛИ ПараметрыОбработчика.РежимПереносаДанных = "Проверить" Тогда
		
		СообщитьПрогресс("УдалениеДанных", ПараметрыОбработчика);
		
		АудитСостоянияСистемы.ОчиститьРезультатыПроверок(
			ПараметрыОбработчика.СписокПроверок,
			ВнеоборотныеАктивыСлужебный.СписокРазрешенныхОрганизаций(),
			НачалоМесяца(ПараметрыОбработчика.ДатаНачалаУчета),
			КонецМесяца(ПараметрыОбработчика.ДатаНачалаУчета));
			
	КонецЕсли;
	
	Если ПараметрыОбработчика.РежимПереносаДанных = ""
		ИЛИ ПараметрыОбработчика.РежимПереносаДанных = "Заново" Тогда
		
		Для каждого ПараметрыЭтапа Из ПараметрыОбработчика.СостояниеЭтапов Цикл
			ПараметрыЭтапа.Значение.Прогресс = Неопределено;
		КонецЦикла; 
		
		АудитСостоянияСистемы.ОчиститьРезультатыПроверок(
			ПараметрыОбработчика.Проверки.СостояниеПереносаДанных, 
			Новый Массив,
			'000101010000');
			
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ЗафиксироватьОкончаниеВыполненияЭтапа("УдалениеДанных", ПараметрыОбработчика);
	
КонецПроцедуры

Процедура СоздатьВременныеТаблицыДляПереносаДанных(ПараметрыОбработчика)

	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаПринятыеКУчетуАктивы(ПараметрыОбработчика, ТекстыЗапроса);
	ТекстЗапросаСчетаУчета(ПараметрыОбработчика, ТекстыЗапроса);
	ТекстЗапросаДатыПринятияКУчету(ПараметрыОбработчика, ТекстыЗапроса);
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса.ВыгрузитьЗначения(), ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = НовыйЗапрос(ПараметрыОбработчика, ТекстЗапроса);
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(
		ПараметрыОбработчика.МенеджерВременныхТаблиц,, 
		ПараметрыОбработчика.ИспользуемыеВременныеТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаПринятыеКУчетуАктивы(ПараметрыОбработчика, ТекстыЗапроса)

	Если ПараметрыОбработчика.РежимПереносаДанных = "Исправить" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОбъектыПроблем.Объект КАК ВнеоборотныйАктив
		|ПОМЕСТИТЬ ОбъектыПроблем
		|ИЗ
		|	РегистрСведений.ОбъектыПроблемСостоянияСистемы КАК ОбъектыПроблем
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроблемыСостоянияСистемы КАК Проблемы
		|		ПО (Проблемы.Проверка = ОбъектыПроблем.Проверка)
		|			И (Проблемы.Организация = ОбъектыПроблем.Организация)
		|			И (Проблемы.ПроверяемыйПериод = ОбъектыПроблем.ПроверяемыйПериод)
		|			И (Проблемы.Проблема = ОбъектыПроблем.Проблема)
		|ГДЕ
		|	Проблемы.Проверка В(&СписокПроверок)
		|	И Проблемы.Важность = ЗНАЧЕНИЕ(Перечисление.ВажностьПроблемыУчета.Ошибка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВнеоборотныйАктив";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли; 
	
	ТекстЗапроса =
	"
	//++ НЕ УТКА
	|ВЫБРАТЬ
	|	СостоянияОС.ВидАктива КАК ВидАктива,
	|	СостоянияОС.ОсновноеСредство КАК ВнеоборотныйАктив,
	|	СостоянияОС.Организация КАК Организация
	|ПОМЕСТИТЬ ПринятыеКУчетуОС_МУ
	|ИЗ
	|	РегистрСведений.ОсновныеСредстваМеждународныйУчет.СрезПоследних(
	|			&Период, 
	|			&ОтборОбъектыПроблемОС) КАК СостоянияОС
	|ГДЕ
	|	СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И &ИспользоватьДанныеМеждународногоУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////

	//-- НЕ УТКА
	|ВЫБРАТЬ
	|	СостоянияОС.ВидАктива КАК ВидАктива,
	|	СостоянияОС.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	СостоянияОС.Организация КАК Организация,
	|	СостоянияОС.Состояние КАК Состояние,
	|	МАКСИМУМ(СостоянияОС.ОтражатьВРеглУчете) КАК ОтражатьВРеглУчете,
	|	МАКСИМУМ(СостоянияОС.ОтражатьВУпрУчете) КАК ОтражатьВУпрУчете
	|ПОМЕСТИТЬ ПринятыеКУчетуОС
	|ИЗ 
	|	(ВЫБРАТЬ
	|		ВЫБОР
	//++ НЕ УТКА
	|			КОГДА НЕ ПринятыеКУчетуОС_МУ.ВидАктива ЕСТЬ NULL
	|				ТОГДА ПринятыеКУчетуОС_МУ.ВидАктива
	//-- НЕ УТКА
	|			КОГДА ИСТИНА
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|		КОНЕЦ КАК ВидАктива,
	|		ПорядокУчетаОСБУ.ОсновноеСредство КАК ВнеоборотныйАктив,
	|		ПорядокУчетаОСБУ.Организация КАК Организация,
	|		ПорядокУчетаОСБУ.СостояниеБУ КАК Состояние,
	|		ИСТИНА КАК ОтражатьВРеглУчете,
	|		ЛОЖЬ КАК ОтражатьВУпрУчете
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&Период,
	|				НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|					И &ОтборОбъектыПроблемОС) КАК ПорядокУчетаОСБУ
	//++ НЕ УТКА
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПринятыеКУчетуОС_МУ КАК ПринятыеКУчетуОС_МУ
	|			ПО ПринятыеКУчетуОС_МУ.ВнеоборотныйАктив = ПорядокУчетаОСБУ.ОсновноеСредство
	//-- НЕ УТКА
	|	ГДЕ
	|		ПорядокУчетаОСБУ.СостояниеБУ В (
	|			ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету), 
	|			ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету))
	|
	//++ НЕ УТКА
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		СостоянияОС.ВидАктива КАК ВидАктива,
	|		СостоянияОС.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|		СостоянияОС.Организация КАК Организация,
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние,
	|		ЛОЖЬ КАК ОтражатьВРеглУчете,
	|		ИСТИНА КАК ОтражатьВУпрУчете
	|	ИЗ
	|		ПринятыеКУчетуОС_МУ КАК СостоянияОС
	//-- НЕ УТКА
	|
	|	) КАК СостоянияОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОС.ВидАктива,
	|	СостоянияОС.ВнеоборотныйАктив,
	|	СостоянияОС.Организация,
	|	СостоянияОС.Состояние
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СобственныеОС.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	СобственныеОС.Организация КАК Организация,
	|	СобственныеОС.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	СобственныеОС.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете
	|ПОМЕСТИТЬ СобственныеОС
	|ИЗ
	|	ПринятыеКУчетуОС КАК СобственныеОС
	|ГДЕ
	|	СобственныеОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АрендованныеОС.ОсновноеСредство КАК ВнеоборотныйАктив,
	|	АрендованныеОС.Партнер КАК Партнер,
	|	АрендованныеОС.Контрагент КАК Контрагент,
	|	АрендованныеОС.Договор КАК Договор,
	|	АрендованныеОС.Стоимость КАК Стоимость
	|ПОМЕСТИТЬ АрендованныеОС
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И ОсновноеСредство В (ВЫБРАТЬ Т.ВнеоборотныйАктив ИЗ ПринятыеКУчетуОС КАК Т)) КАК АрендованныеОС
	|ГДЕ
	|	АрендованныеОС.Состояние В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ЗаключенДоговорАренды),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ВАренде))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	//++ НЕ УТКА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СостоянияНМА.НематериальныйАктив.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НМА)
	|		КОГДА СостоянияНМА.НематериальныйАктив.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НИОКР)
	|	КОНЕЦ КАК ВидАктива,
	|	СостоянияНМА.НематериальныйАктив КАК ВнеоборотныйАктив,
	|	СостоянияНМА.Организация КАК Организация
	|ПОМЕСТИТЬ ПринятыеКУчетуНМА_МУ
	|ИЗ
	|	РегистрСведений.НематериальныеАктивыМеждународныйУчет.СрезПоследних(
	|			&Период, 
	|			&ОтборОбъектыПроблемНМА) КАК СостоянияНМА
	|ГДЕ
	|	СостоянияНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|	И &ИспользоватьДанныеМеждународногоУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив,
	|	Организация
	//-- НЕ УТКА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокУчетаНМАБУ.ВидАктива КАК ВидАктива,
	|	ПорядокУчетаНМАБУ.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ПорядокУчетаНМАБУ.Организация КАК Организация,
	|	МАКСИМУМ(ПорядокУчетаНМАБУ.ОтражатьВРеглУчете) КАК ОтражатьВРеглУчете,
	|	МАКСИМУМ(ПорядокУчетаНМАБУ.ОтражатьВУпрУчете) КАК ОтражатьВУпрУчете
	|ПОМЕСТИТЬ ПринятыеКУчетуНМА
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ПорядокУчетаНМАБУ.НематериальныйАктив.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НМА)
	|			КОГДА ПорядокУчетаНМАБУ.НематериальныйАктив.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НИОКР)
	|		КОНЕЦ КАК ВидАктива,
	|		ПорядокУчетаНМАБУ.НематериальныйАктив КАК ВнеоборотныйАктив,
	|		ПорядокУчетаНМАБУ.Организация КАК Организация,
	|		ИСТИНА КАК ОтражатьВРеглУчете,
	|		ЛОЖЬ КАК ОтражатьВУпрУчете
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|				&Период, 
	|				&ОтборОбъектыПроблемНМА) КАК ПорядокУчетаНМАБУ
	|	ГДЕ
	|		ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|
	//++ НЕ УТКА
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		СостоянияНМА.ВидАктива КАК ВидАктива,
	|		СостоянияНМА.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|		СостоянияНМА.Организация КАК Организация,
	|		ЛОЖЬ КАК ОтражатьВРеглУчете,
	|		ИСТИНА КАК ОтражатьВУпрУчете
	|	ИЗ
	|		ПринятыеКУчетуНМА_МУ КАК СостоянияНМА
	//-- НЕ УТКА
	|	) КАК ПорядокУчетаНМАБУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаНМАБУ.ВидАктива,
	|	ПорядокУчетаНМАБУ.ВнеоборотныйАктив,
	|	ПорядокУчетаНМАБУ.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив,
	|	Организация";
	
	Если ПараметрыОбработчика.РежимПереносаДанных = "Исправить" Тогда
		ТекстОтборОбъектыПроблемОС = "ОсновноеСредство В (ВЫБРАТЬ ОбъектыПроблем.ВнеоборотныйАктив ИЗ ОбъектыПроблем КАК ОбъектыПроблем)";
		ТекстОтборОбъектыПроблемНМА = "НематериальныйАктив В (ВЫБРАТЬ ОбъектыПроблем.ВнеоборотныйАктив ИЗ ОбъектыПроблем КАК ОбъектыПроблем)";
	Иначе
		ТекстОтборОбъектыПроблемОС = "ИСТИНА";
		ТекстОтборОбъектыПроблемНМА = "ИСТИНА";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборОбъектыПроблемОС", ТекстОтборОбъектыПроблемОС);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборОбъектыПроблемНМА", ТекстОтборОбъектыПроблемНМА);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	ПараметрыОбработчика.ИспользуемыеВременныеТаблицы.Добавить("ПринятыеКУчетуОС");
	ПараметрыОбработчика.ИспользуемыеВременныеТаблицы.Добавить("ПринятыеКУчетуНМА");
	ПараметрыОбработчика.ИспользуемыеВременныеТаблицы.Добавить("СобственныеОС");
	ПараметрыОбработчика.ИспользуемыеВременныеТаблицы.Добавить("АрендованныеОС");
	//++ НЕ УТКА
	ПараметрыОбработчика.ИспользуемыеВременныеТаблицы.Добавить("ПринятыеКУчетуОС_МУ");
	ПараметрыОбработчика.ИспользуемыеВременныеТаблицы.Добавить("ПринятыеКУчетуНМА_МУ");
	//-- НЕ УТКА
	
	Если ПараметрыОбработчика.РежимПереносаДанных = "Исправить" Тогда
		ПараметрыОбработчика.ИспользуемыеВременныеТаблицы.Добавить("ОбъектыПроблем");
	КонецЕсли;
	
КонецПроцедуры

Процедура ТекстЗапросаСчетаУчета(ПараметрыОбработчика, ТекстыЗапроса)

	ИмяТаблицы = "СчетаУчета";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СчетаУчета.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|		КОГДА ВЫРАЗИТЬ(СчетаУчета.ВнеоборотныйАктив КАК Справочник.НематериальныеАктивы).ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НМА)
	|		КОГДА ВЫРАЗИТЬ(СчетаУчета.ВнеоборотныйАктив КАК Справочник.НематериальныеАктивы).ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НИОКР)
	|	КОНЕЦ КАК ВидАктива,
	|	СчетаУчета.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	НЕ АрендованныеОС.ВнеоборотныйАктив ЕСТЬ NULL КАК ПолученВАренду,
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ СчетаУчета.СчетУчета.Забалансовый
	|				ТОГДА СчетаУчета.СчетУчета
	|			ИНАЧЕ NULL
	|		КОНЕЦ), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчета,
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ СчетаУчета.СчетУчетаАмортизации.Забалансовый
	|				ТОГДА СчетаУчета.СчетУчетаАмортизации
	|			ИНАЧЕ NULL
	|		КОНЕЦ), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчетаАмортизации,
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаУчета.СчетУчетаАмортизации.Забалансовый
	|				ТОГДА СчетаУчета.СчетУчетаАмортизации
	|			ИНАЧЕ NULL
	|		КОНЕЦ), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетИзноса,
	|	ЕСТЬNULL(МАКСИМУМ(СчетаУчета.СчетУчетаЦФ), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчетаЦФ,
	|	ЕСТЬNULL(МАКСИМУМ(СчетаУчета.СчетУчетаАмортизацииЦФ), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчетаАмортизацииЦФ,
	|
	|	ЕСТЬNULL(МАКСИМУМ(СчетаУчета.СчетЗабалансовогоУчета), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетЗабалансовогоУчета,
	|	ЕСТЬNULL(МАКСИМУМ(СчетаУчета.СчетУчетаРезерваДооценки), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчетаРезерваДооценки,
	|	ЕСТЬNULL(МАКСИМУМ(СчетаУчета.СчетУчетаВыбытия), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчетаВыбытия,
	|	
	|	ЕСТЬNULL(МАКСИМУМ(СчетаУчета.СчетУчетаМУ), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчетаМУ,
	|	ЕСТЬNULL(МАКСИМУМ(СчетаУчета.СчетУчетаАмортизацииМУ), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчетаАмортизацииМУ
	|ПОМЕСТИТЬ СчетаУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		СчетаУчета.ОсновноеСредство КАК ВнеоборотныйАктив,
	|		СчетаУчета.СчетУчета КАК СчетУчета,
	|		СчетаУчета.СчетЗабалансовогоУчета КАК СчетЗабалансовогоУчета,
	|		СчетаУчета.СчетНачисленияАмортизации КАК СчетУчетаАмортизации,
	|		NULL КАК СчетУчетаЦФ,
	|		NULL КАК СчетУчетаАмортизацииЦФ,
	|		NULL КАК СчетУчетаРезерваДооценки,
	|		NULL КАК СчетУчетаВыбытия,
	|		NULL КАК СчетУчетаМУ,
	|		NULL КАК СчетУчетаАмортизацииМУ
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|				&Период,
	|				НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОбъектов.ВнеоборотныйАктив
	|					ИЗ
	|						ПринятыеКУчетуОС КАК СписокОбъектов)) КАК СчетаУчета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СчетаУчета.НематериальныйАктив,
	|		СчетаУчета.СчетУчета,
	|		NULL,
	|		СчетаУчета.СчетНачисленияАмортизации,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|				&Период,
	|				НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|					И (НематериальныйАктив, Организация) В
	|						(ВЫБРАТЬ
	|							СписокОбъектов.ВнеоборотныйАктив,
	|							СписокОбъектов.Организация
	|						ИЗ
	|							ПринятыеКУчетуНМА КАК СписокОбъектов)) КАК СчетаУчета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СчетаУчета.ОсновноеСредство,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СчетаУчета.СчетУчета,
	|		СчетаУчета.СчетАмортизации,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
	|				&Период,
	|				НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОбъектов.ВнеоборотныйАктив
	|					ИЗ
	|						ПринятыеКУчетуОС КАК СписокОбъектов)) КАК СчетаУчета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СчетаУчета.НематериальныйАктив,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СчетаУчета.СчетУчета,
	|		СчетаУчета.СчетАмортизации,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(
	|				&Период,
	|				НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокОбъектов.ВнеоборотныйАктив
	|					ИЗ
	|						ПринятыеКУчетуНМА КАК СписокОбъектов)) КАК СчетаУчета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СчетаУчета.Субконто1,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СчетаУчета.Счет,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ПериодГраница,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриростСтоимостиПоПереоценке)),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					ПринятыеКУчетуОС.Организация,
	|					ПринятыеКУчетуОС.ВнеоборотныйАктив
	|				ИЗ
	|					ПринятыеКУчетуОС КАК ПринятыеКУчетуОС)) КАК СчетаУчета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СчетаУчета.Субконто1,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СчетаУчета.Счет,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ПериодГраница,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриростСтоимостиПоПереоценке)),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					ПринятыеКУчетуНМА.Организация,
	|					ПринятыеКУчетуНМА.ВнеоборотныйАктив
	|				ИЗ
	|					ПринятыеКУчетуНМА КАК ПринятыеКУчетуНМА)) КАК СчетаУчета
	|	
	//++ НЕ УТКА
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СчетаУчета.ОсновноеСредство,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СчетаУчета.СчетУчета,
	|		СчетаУчета.СчетАмортизации
	|	ИЗ
	|		РегистрСведений.ОсновныеСредстваМеждународныйУчет.СрезПоследних(
	|				&Период,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОбъектов.ВнеоборотныйАктив
	|					ИЗ
	|						ПринятыеКУчетуОС КАК СписокОбъектов)) КАК СчетаУчета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СчетаУчета.НематериальныйАктив,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СчетаУчета.СчетУчета,
	|		СчетаУчета.СчетАмортизации
	|	ИЗ
	|		РегистрСведений.НематериальныеАктивыМеждународныйУчет.СрезПоследних(
	|				&Период,
	|				НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокОбъектов.ВнеоборотныйАктив
	|					ИЗ
	|						ПринятыеКУчетуНМА КАК СписокОбъектов)) КАК СчетаУчета
	//-- НЕ УТКА
	|) КАК СчетаУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ АрендованныеОС КАК АрендованныеОС
	|		ПО АрендованныеОС.ВнеоборотныйАктив = СчетаУчета.ВнеоборотныйАктив
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаУчета.ВнеоборотныйАктив,
	|	НЕ АрендованныеОС.ВнеоборотныйАктив ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
	ПараметрыОбработчика.ИспользуемыеВременныеТаблицы.Добавить("СчетаУчета");
	
КонецПроцедуры

Процедура ТекстЗапросаДатыПринятияКУчету(ПараметрыОбработчика, ТекстыЗапроса)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатацию,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаПринятияКУчету,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ВнеоборотныйАктив,
	|	ЕСТЬNULL(ПринятиеКУчетуОС.ВариантРаздельногоУчетаНДС, ВводОстатков.ВариантРаздельногоУчетаНДС) КАК ВариантРаздельногоУчетаНДС,
	|	ЕСТЬNULL(ПринятиеКУчетуОС.НалогообложениеНДС, ВводОстатков.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации, ЕСТЬNULL(ВводОстатков.ПервоначальнаяСтоимостьПР, 0)) КАК ПервоначальнаяСтоимостьПР,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокСписанияНИОКРНУ,
	|	ЕСТЬNULL(ПринятиеКУчетуОС.СтатьяРасходовАмортизационнойПремии, ВводОстатков.СтатьяРасходовАмортизационнойПремии) КАК СтатьяРасходовАмортизационнойПремии,
	|	ЕСТЬNULL(ПринятиеКУчетуОС.АналитикаРасходовАмортизационнойПремии, ВводОстатков.АналитикаРасходовАмортизационнойПремии) КАК АналитикаРасходовАмортизационнойПремии
	|ПОМЕСТИТЬ ДатыПринятияКУчету_БУ
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС КАК ПринятиеКУчетуОС
	|		ПО (ПринятиеКУчетуОС.Ссылка = ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО (ПараметрыАмортизацииОСБУ.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство)
	|			И (ПараметрыАмортизацииОСБУ.Регистратор = ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ)
	|			И (ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ ССЫЛКА Документ.ПринятиеКУчетуОС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ВводОстатков
	|		ПО (ВводОстатков.Ссылка = ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ)
	|			И (ВводОстатков.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ КАК ДокументВводаВЭксплуатацию,
	|	ПервоначальныеСведенияНМА.ДатаПринятияКУчетуБУ КАК ДатаПринятияКУчету,
	|	ПервоначальныеСведенияНМА.НематериальныйАктив КАК ВнеоборотныйАктив,
	|	ЕСТЬNULL(ПринятиеКУчету.ВариантРаздельногоУчетаНДС, NULL) КАК ВариантРаздельногоУчетаНДС,
	|	ЕСТЬNULL(ПринятиеКУчету.НалогообложениеНДС, NULL) КАК НалогообложениеНДС,
	|	0 КАК ПервоначальнаяСтоимостьПР,
	|	ЕСТЬNULL(ПринятиеКУчету.Подразделение, ВводОстатков.Ссылка.Подразделение) КАК Подразделение,
	|	ЕСТЬNULL(ПринятиеКУчету.ПорядокСписанияНИОКРНаРасходыНУ, ВводОстатков.ПорядокСписанияНИОКРНаРасходыНУ) КАК ПорядокСписанияНИОКРНУ,
	|	NULL КАК СтатьяРасходовАмортизационнойПремии,
	|	NULL КАК АналитикаРасходовАмортизационнойПремии
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(&Период) КАК ПервоначальныеСведенияНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуНМА КАК ПринятиеКУчету
	|		ПО (ПринятиеКУчету.Ссылка = ПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.НМА КАК ВводОстатков
	|		ПО (ВводОстатков.Ссылка = ПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ)
	|			И (ВводОстатков.НематериальныйАктив = ПервоначальныеСведенияНМА.НематериальныйАктив)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	//++ НЕ УТКА
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Состояния.Регистратор                  КАК ДокументВводаВЭксплуатацию,
	|	НАЧАЛОПЕРИОДА(Состояния.Период, ДЕНЬ)  КАК ДатаПринятияКУчету,
	|	Состояния.ОсновноеСредство             КАК ВнеоборотныйАктив
	|ПОМЕСТИТЬ ДатыПринятияКУчету_УУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		МИНИМУМ(Состояния.Период) КАК Период,
	|		Состояния.ОсновноеСредство КАК ОсновноеСредство
	|	ИЗ
	|		РегистрСведений.ОсновныеСредстваМеждународныйУчет КАК Состояния
	|	ГДЕ
	|		Состояния.Активность
	|		И Состояния.Период <= &Период
	|		И Состояния.Состояние В (ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Состояния.ОсновноеСредство) КАК СостоянияДатаПервого
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСредстваМеждународныйУчет КАК Состояния
	|		ПО (Состояния.Период = СостоянияДатаПервого.Период)
	|			И (Состояния.ОсновноеСредство = СостоянияДатаПервого.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОСМеждународныйУчет КАК ПринятиеКУчетуОС
	|		ПО (ПринятиеКУчетуОС.Ссылка = Состояния.Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковОСМеждународныйУчет КАК ВводОстатков
	|		ПО (ВводОстатков.Ссылка = Состояния.Регистратор)
	|			И (ВводОстатков.ОсновноеСредство = Состояния.ОсновноеСредство)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Состояния.Регистратор                  КАК ДокументВводаВЭксплуатацию,
	|	НАЧАЛОПЕРИОДА(Состояния.Период, ДЕНЬ)  КАК ДатаПринятияКУчету,
	|	Состояния.НематериальныйАктив          КАК ВнеоборотныйАктив
	|ИЗ
	|	(ВЫБРАТЬ
	|		МИНИМУМ(Состояния.Период) КАК Период,
	|		Состояния.НематериальныйАктив КАК НематериальныйАктив
	|	ИЗ
	|		РегистрСведений.НематериальныеАктивыМеждународныйУчет КАК Состояния
	|	ГДЕ
	|		Состояния.Активность
	|		И Состояния.Период <= &Период
	|		И Состояния.Состояние В (ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Состояния.НематериальныйАктив) КАК СостоянияДатаПервого
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НематериальныеАктивыМеждународныйУчет КАК Состояния
	|		ПО (Состояния.Период = СостоянияДатаПервого.Период)
	|			И (Состояния.НематериальныйАктив = СостоянияДатаПервого.НематериальныйАктив)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОСМеждународныйУчет КАК ПринятиеКУчетуОС
	|		ПО (ПринятиеКУчетуОС.Ссылка = Состояния.Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковНМАМеждународныйУчет КАК ВводОстатков
	|		ПО (ВводОстатков.Ссылка = Состояния.Регистратор)
	|			И (ВводОстатков.НематериальныйАктив = Состояния.НематериальныйАктив)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	//-- НЕ УТКА
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизации.ОсновноеСредство КАК ВнеоборотныйАктив,
	|	НАЧАЛОПЕРИОДА(ЕСТЬNULL(МодернизацияОС.Дата, ВводОстатков.ДатаМодернизации), ДЕНЬ) КАК ДатаМодернизации
	|ПОМЕСТИТЬ МодернизацияОС
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ПараметрыАмортизации.Период) КАК Период,
	|		ПараметрыАмортизации.ОсновноеСредство КАК ОсновноеСредство
	|	ИЗ
	|		РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизации
	|	ГДЕ
	|		ПараметрыАмортизации.Активность
	|		И ПараметрыАмортизации.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|		И (ПараметрыАмортизации.Регистратор ССЫЛКА Документ.МодернизацияОС
	|				ИЛИ ПараметрыАмортизации.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)
	|		И ПараметрыАмортизации.Период <= &Период
	|		И (ПараметрыАмортизации.ОсновноеСредство, ПараметрыАмортизации.Организация) В
	|				(ВЫБРАТЬ
	|					СобственныеОС.ВнеоборотныйАктив,
	|					СобственныеОС.Организация
	|				ИЗ
	|					СобственныеОС КАК СобственныеОС)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПараметрыАмортизации.ОсновноеСредство) КАК ПараметрыАмортизацииПоследнее
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизации
	|		ПО (ПараметрыАмортизации.Период = ПараметрыАмортизацииПоследнее.Период)
	|			И (ПараметрыАмортизации.ОсновноеСредство = ПараметрыАмортизацииПоследнее.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МодернизацияОС КАК МодернизацияОС
	|		ПО (МодернизацияОС.Ссылка = ПараметрыАмортизации.Регистратор)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ВводОстатков
	|		ПО (ВводОстатков.Ссылка = ПараметрыАмортизации.Регистратор)
	|			И (ВводОстатков.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство)
	|			И (ВводОстатков.ЕстьСобытияМодернизации)
	|ГДЕ
	|	(НЕ МодернизацияОС.Ссылка ЕСТЬ NULL
	|			ИЛИ НЕ ВводОстатков.Ссылка ЕСТЬ NULL)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыПринятияКУчету.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	МАКСИМУМ(ДатыПринятияКУчету.ДокументВводаВЭксплуатациюБУ) КАК ДокументВводаВЭксплуатациюБУ,
	|	МАКСИМУМ(ДатыПринятияКУчету.ДокументВводаВЭксплуатациюУУ) КАК ДокументВводаВЭксплуатациюУУ,
	|	ЕСТЬNULL(МАКСИМУМ(ДатыПринятияКУчету.ДатаПринятияКУчетуБУ), ДАТАВРЕМЯ(1,1,1)) КАК ДатаПринятияКУчетуБУ,
	|	ЕСТЬNULL(МАКСИМУМ(ДатыПринятияКУчету.ДатаПринятияКУчетуУУ), ДАТАВРЕМЯ(1,1,1)) КАК ДатаПринятияКУчетуУУ,
	|	ЕСТЬNULL(МАКСИМУМ(ДатыПринятияКУчету.ДатаМодернизации), ДАТАВРЕМЯ(1,1,1)) КАК ДатаМодернизации,
	|	МАКСИМУМ(ДатыПринятияКУчету.ВариантРаздельногоУчетаНДС) КАК ВариантРаздельногоУчетаНДС,
	|	МАКСИМУМ(ДатыПринятияКУчету.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(ДатыПринятияКУчету.ПервоначальнаяСтоимостьПР) КАК ПервоначальнаяСтоимостьПР,
	|	МАКСИМУМ(ДатыПринятияКУчету.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(ДатыПринятияКУчету.ПорядокСписанияНИОКРНУ) КАК ПорядокСписанияНИОКРНУ,
	|	МАКСИМУМ(ДатыПринятияКУчету.СтатьяРасходовАмортизационнойПремии) КАК СтатьяРасходовАмортизационнойПремии,
	|	МАКСИМУМ(ДатыПринятияКУчету.АналитикаРасходовАмортизационнойПремии) КАК АналитикаРасходовАмортизационнойПремии
	|ПОМЕСТИТЬ ДатыПринятияКУчету
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДатыПринятияКУчету_БУ.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|		ДатыПринятияКУчету_БУ.ДокументВводаВЭксплуатацию КАК ДокументВводаВЭксплуатациюБУ,
	|		NULL КАК ДокументВводаВЭксплуатациюУУ,
	|		ДатыПринятияКУчету_БУ.ДатаПринятияКУчету КАК ДатаПринятияКУчетуБУ,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПринятияКУчетуУУ,
	|		ДатыПринятияКУчету_БУ.ВариантРаздельногоУчетаНДС КАК ВариантРаздельногоУчетаНДС,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаМодернизации,
	|		ДатыПринятияКУчету_БУ.НалогообложениеНДС КАК НалогообложениеНДС,
	|		ДатыПринятияКУчету_БУ.ПервоначальнаяСтоимостьПР КАК ПервоначальнаяСтоимостьПР,
	|		ДатыПринятияКУчету_БУ.Подразделение КАК Подразделение,
	|		ДатыПринятияКУчету_БУ.ПорядокСписанияНИОКРНУ КАК ПорядокСписанияНИОКРНУ,
	|		ДатыПринятияКУчету_БУ.СтатьяРасходовАмортизационнойПремии КАК СтатьяРасходовАмортизационнойПремии,
	|		ДатыПринятияКУчету_БУ.АналитикаРасходовАмортизационнойПремии КАК АналитикаРасходовАмортизационнойПремии
	|	ИЗ
	|		ДатыПринятияКУчету_БУ КАК ДатыПринятияКУчету_БУ
	|	
	//++ НЕ УТКА
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДатыПринятияКУчету_УУ.ВнеоборотныйАктив,
	|		NULL,
	|		ДатыПринятияКУчету_УУ.ДокументВводаВЭксплуатацию,
	|		ДАТАВРЕМЯ(1, 1, 1),
	|		ДатыПринятияКУчету_УУ.ДатаПринятияКУчету,
	|		NULL,
	|		ДАТАВРЕМЯ(1, 1, 1),
	|		NULL,
	|		NULL,
	|		НЕОПРЕДЕЛЕНО,
	|		НЕОПРЕДЕЛЕНО,
	|		NULL,
	|		NULL
	|	ИЗ
	|		ДатыПринятияКУчету_УУ КАК ДатыПринятияКУчету_УУ
	//-- НЕ УТКА
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МодернизацияОС.ВнеоборотныйАктив,
	|		NULL,
	|		NULL,
	|		ДАТАВРЕМЯ(1, 1, 1),
	|		ДАТАВРЕМЯ(1, 1, 1),
	|		NULL,
	|		МодернизацияОС.ДатаМодернизации,
	|		NULL,
	|		NULL,
	|		НЕОПРЕДЕЛЕНО,
	|		НЕОПРЕДЕЛЕНО,
	|		NULL,
	|		NULL
	|	ИЗ
	|		МодернизацияОС КАК МодернизацияОС) КАК ДатыПринятияКУчету
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыПринятияКУчету.ВнеоборотныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДатыПринятияКУчету_БУ
	|;
	|
	//++ НЕ УТКА
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДатыПринятияКУчету_УУ
	|;
	//-- НЕ УТКА
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МодернизацияОС";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	ПараметрыОбработчика.ИспользуемыеВременныеТаблицы.Добавить("ДатыПринятияКУчету");

КонецПроцедуры

#КонецОбласти

#Область ГруппыФинансовогоУчета

Процедура СоздатьГруппыФинансовогоУчета(ПараметрыОбработчика) 

	Если НЕ ТребуетсяВыполнитьЭтап("СозданиеГФУ", ПараметрыОбработчика) Тогда
		Возврат;
	КонецЕсли;
	
	ЗафиксироватьНачалоВыполненияЭтапа("СозданиеГФУ", 0, ПараметрыОбработчика);
	
	СоздатьГруппыФинансовогоУчетаИСчетаУчета(ПараметрыОбработчика);
	
	Запрос = НовыйЗапрос(ПараметрыОбработчика);
	
	//++ НЕ УТКА
	СоздатьСчетаУчетаСОписаниемСчетовМФУ(ПараметрыОбработчика);
	//-- НЕ УТКА
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ПринятыеКУчетуОС.ВидАктива, ПринятыеКУчетуНМА.ВидАктива) КАК ВидАктива,
	|	СчетаУчета.СчетУчета                КАК СчетУчета,
	|	СчетаУчета.СчетУчетаАмортизации     КАК СчетУчетаАмортизации,
	|	СчетаУчета.СчетУчетаЦФ              КАК СчетУчетаЦФ,
	|	СчетаУчета.СчетУчетаАмортизацииЦФ   КАК СчетУчетаАмортизацииЦФ,
	|	СчетаУчета.СчетЗабалансовогоУчета   КАК СчетЗабалансовогоУчета,
	|	СчетаУчета.СчетУчетаВыбытия         КАК СчетУчетаВыбытия,
	|	СчетаУчета.СчетУчетаРезерваДооценки КАК СчетУчетаРезерваДооценки,
	|	СчетаУчета.ПолученВАренду           КАК ПолученВАренду,
	|	&ОписаниеНовыйСправочник            КАК Описание
	|ИЗ
	|	ВтСчетаУчета КАК СчетаУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПринятыеКУчетуОС КАК ПринятыеКУчетуОС
	|		ПО ПринятыеКУчетуОС.ВнеоборотныйАктив = СчетаУчета.ВнеоборотныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПринятыеКУчетуНМА КАК ПринятыеКУчетуНМА
	|		ПО ПринятыеКУчетуНМА.ВнеоборотныйАктив = СчетаУчета.ВнеоборотныйАктив";
	
	Если ПараметрыОбработчика.ИспользоватьДанныеМеждународногоУчета Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВтСчетаУчета", "СчетаУчетаСОписаниемСчетовМФУ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОписаниеНовыйСправочник", "СчетаУчета.Описание");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВтСчетаУчета", "СчетаУчета");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	СчетаУчетаРазличные = Запрос.Выполнить().Выгрузить();
	
	ОбъединитьНастройкиСчетов(СчетаУчетаРазличные, ПараметрыОбработчика);
	
	Запрос.УстановитьПараметр("СчетаУчетаРазличные", СчетаУчетаРазличные);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.ВидАктива                КАК ВидАктива,
	|	СчетаУчета.СчетУчета                КАК СчетУчета,
	|	СчетаУчета.СчетУчетаАмортизации     КАК СчетУчетаАмортизации,
	|	СчетаУчета.СчетУчетаЦФ              КАК СчетУчетаЦФ,
	|	СчетаУчета.СчетУчетаАмортизацииЦФ   КАК СчетУчетаАмортизацииЦФ,
	|	СчетаУчета.СчетЗабалансовогоУчета   КАК СчетЗабалансовогоУчета,
	|	СчетаУчета.СчетУчетаВыбытия         КАК СчетУчетаВыбытия,
	|	СчетаУчета.СчетУчетаРезерваДооценки КАК СчетУчетаРезерваДооценки,
	|	СчетаУчета.ПолученВАренду           КАК ПолученВАренду,
	|	СчетаУчета.Описание                 КАК Описание
	|ПОМЕСТИТЬ СчетаУчетаРазличные
	|ИЗ
	|	&СчетаУчетаРазличные КАК СчетаУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СчетаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И СчетаУчета.СчетЗабалансовогоУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(СчетаУчета.СчетЗабалансовогоУчета КАК ПланСчетов.Хозрасчетный).Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(СчетаУчета.СчетУчета КАК ПланСчетов.Хозрасчетный).Наименование
	|	КОНЕЦ                                     КАК Наименование,
	|
	|	СчетаУчета.ВидАктива                      КАК ВидАктива,
	|	СчетаУчета.СчетУчета                      КАК СчетУчета,
	|	СчетаУчета.СчетУчетаЦФ                    КАК СчетУчетаЦФ,
	|	СчетаУчета.СчетУчетаАмортизации           КАК СчетУчетаАмортизации,
	|	СчетаУчета.СчетУчетаАмортизацииЦФ         КАК СчетУчетаАмортизацииЦФ,
	|	СчетаУчета.СчетЗабалансовогоУчета         КАК СчетЗабалансовогоУчета,
	|	СчетаУчета.СчетУчетаВыбытия               КАК СчетУчетаВыбытия,
	|	СчетаУчета.СчетУчетаРезерваДооценки       КАК СчетУчетаРезерваДооценки,
	|	СчетаУчета.Описание                       КАК Описание,
	// Нужно группировать, т.к. в базе может быть несколько ГФУ с одинаковыми счетами
	|	МАКСИМУМ(ГруппыФинансовогоУчета.Ссылка)   КАК Ссылка
	|ИЗ
	|	СчетаУчетаРазличные КАК СчетаУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчетаИСчетаУчета КАК ГруппыФинансовогоУчета
	|		ПО (ГруппыФинансовогоУчета.ВидАктива = СчетаУчета.ВидАктива)
	|			И (ГруппыФинансовогоУчета.СчетУчета = СчетаУчета.СчетУчета
	|				ИЛИ СчетаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|					И НЕ СчетаУчета.ПолученВАренду)
	|			И (ГруппыФинансовогоУчета.СчетУчетаАмортизации = СчетаУчета.СчетУчетаАмортизации
	|				ИЛИ СчетаУчета.СчетУчетаАмортизации = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|			И (ГруппыФинансовогоУчета.СчетУчетаЦФ = СчетаУчета.СчетУчетаЦФ
	|				ИЛИ СчетаУчета.СчетУчетаЦФ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|			И (ГруппыФинансовогоУчета.СчетУчетаАмортизацииЦФ = СчетаУчета.СчетУчетаАмортизацииЦФ
	|				ИЛИ СчетаУчета.СчетУчетаАмортизацииЦФ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|			И (ГруппыФинансовогоУчета.СчетЗабалансовогоУчета = СчетаУчета.СчетЗабалансовогоУчета
	|				ИЛИ СчетаУчета.СчетЗабалансовогоУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|			И (ГруппыФинансовогоУчета.СчетУчетаВыбытия = СчетаУчета.СчетУчетаВыбытия
	|				ИЛИ СчетаУчета.СчетУчетаВыбытия = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|			И (ГруппыФинансовогоУчета.СчетУчетаРезерваДооценки = СчетаУчета.СчетУчетаРезерваДооценки
	|				ИЛИ СчетаУчета.СчетУчетаРезерваДооценки = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|			И (ГруппыФинансовогоУчета.Описание = СчетаУчета.Описание
	|				ИЛИ НЕ &ИспользоватьДанныеМеждународногоУчета)
	|ГДЕ
	|	ГруппыФинансовогоУчета.Ссылка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СчетаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И СчетаУчета.СчетЗабалансовогоУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(СчетаУчета.СчетЗабалансовогоУчета КАК ПланСчетов.Хозрасчетный).Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(СчетаУчета.СчетУчета КАК ПланСчетов.Хозрасчетный).Наименование
	|	КОНЕЦ,
	|
	|	СчетаУчета.ВидАктива,
	|	СчетаУчета.СчетУчета,
	|	СчетаУчета.СчетУчетаЦФ,
	|	СчетаУчета.СчетУчетаАмортизации,
	|	СчетаУчета.СчетУчетаАмортизацииЦФ,
	|	СчетаУчета.СчетЗабалансовогоУчета,
	|	СчетаУчета.СчетУчетаВыбытия,
	|	СчетаУчета.СчетУчетаРезерваДооценки,
	|	СчетаУчета.Описание";
	
	Запрос.Текст = ТекстЗапроса;
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	// Используется для нумерации ГФУ с одинаковым наименованием.
	НумерацияГФУ = НумерацияГФУ();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		НовыйОбъект = Справочники.ГруппыФинансовогоУчетаВнеоборотныхАктивов.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НовыйОбъект, Выборка);
		
		НомерГФУ = НумерацияГФУ.Найти(НовыйОбъект.Наименование, "Наименование");
		Если НомерГФУ <> Неопределено Тогда
			НовыйОбъект.Наименование = НовыйОбъект.Наименование + " (" + Формат(НомерГФУ.Количество + 1, "ЧГ=") + ")";
		Иначе
			НомерГФУ = НумерацияГФУ.Добавить();
			НомерГФУ.Наименование = НовыйОбъект.Наименование;
		КонецЕсли;
		НомерГФУ.Количество = НомерГФУ.Количество + 1;
		
		Если НовыйОбъект.ПроверитьЗаполнение() Тогда
			НовыйОбъект.Записать();
			ПараметрыОбработчика.РезультатыПереносаДанных.СозданоГФУ = ПараметрыОбработчика.РезультатыПереносаДанных.СозданоГФУ + 1;
			
			ЗаписатьПорядокОтраженияНаСчетахУчета(НовыйОбъект.Ссылка, Выборка);
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(
		ПараметрыОбработчика.МенеджерВременныхТаблиц,, 
		ПараметрыОбработчика.ИспользуемыеВременныеТаблицы);
		
	СоздатьГруппыФинансовогоУчетаИСчетаУчета(ПараметрыОбработчика, Истина);
		
	ЗафиксироватьОкончаниеВыполненияЭтапа("СозданиеГФУ", ПараметрыОбработчика);	
		
КонецПроцедуры

Процедура СоздатьГруппыФинансовогоУчетаИСчетаУчета(ПараметрыОбработчика, УничтожитьСуществующуюТаблицу = Ложь)

	ТекстЗапроса = "";
	Если УничтожитьСуществующуюТаблицу Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ГруппыФинансовогоУчетаИСчетаУчета;"
	КонецЕсли; 
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	СпрГруппыФинансовогоУчета.Ссылка        КАК Ссылка,
	|	СпрГруппыФинансовогоУчета.ВидАктива     КАК ВидАктива,
	|	СпрГруппыФинансовогоУчета.Описание      КАК Описание,
	|
	|	ЕСТЬNULL(ПорядокОтраженияНаСчетахУчета_СтоимостьВНА.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))          КАК СчетУчета,
	|	ЕСТЬNULL(ПорядокОтраженияНаСчетахУчета_АмортизацияВНА.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))        КАК СчетУчетаАмортизации,
	|	ЕСТЬNULL(ПорядокОтраженияНаСчетахУчета_СтоимостьВНА_ЦФ.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))       КАК СчетУчетаЦФ,
	|	ЕСТЬNULL(ПорядокОтраженияНаСчетахУчета_АмортизацияВНА_ЦФ.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))     КАК СчетУчетаАмортизацииЦФ,
	|	ЕСТЬNULL(ПорядокОтраженияНаСчетахУчета_ЗабалансовыйУчетВНА.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))   КАК СчетЗабалансовогоУчета,
	|	ЕСТЬNULL(ПорядокОтраженияНаСчетахУчета_ВыбытиеВНА.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))            КАК СчетУчетаВыбытия,
	|	ЕСТЬNULL(ПорядокОтраженияНаСчетахУчета_РезервДоОценкиВНА.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))     КАК СчетУчетаРезерваДооценки
	|ПОМЕСТИТЬ ГруппыФинансовогоУчетаИСчетаУчета
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаВнеоборотныхАктивов КАК СпрГруппыФинансовогоУчета
	|
		// СтоимостьВНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияНаСчетахУчета_СтоимостьВНА
	|	ПО ПорядокОтраженияНаСчетахУчета_СтоимостьВНА.АналитикаУчета = СпрГруппыФинансовогоУчета.Ссылка
	|		И ПорядокОтраженияНаСчетахУчета_СтоимостьВНА.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА)
	|		И ПорядокОтраженияНаСчетахУчета_СтоимостьВНА.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И ПорядокОтраженияНаСчетахУчета_СтоимостьВНА.МестоУчета = НЕОПРЕДЕЛЕНО
	|
		// СтоимостьВНА_ЦФ
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияНаСчетахУчета_СтоимостьВНА_ЦФ
	|	ПО ПорядокОтраженияНаСчетахУчета_СтоимостьВНА_ЦФ.АналитикаУчета = СпрГруппыФинансовогоУчета.Ссылка
	|		И ПорядокОтраженияНаСчетахУчета_СтоимостьВНА_ЦФ.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ)
	|		И ПорядокОтраженияНаСчетахУчета_СтоимостьВНА_ЦФ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И ПорядокОтраженияНаСчетахУчета_СтоимостьВНА_ЦФ.МестоУчета = НЕОПРЕДЕЛЕНО
	|
		// АмортизацияВНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияНаСчетахУчета_АмортизацияВНА
	|	ПО ПорядокОтраженияНаСчетахУчета_АмортизацияВНА.АналитикаУчета = СпрГруппыФинансовогоУчета.Ссылка
	|		И ПорядокОтраженияНаСчетахУчета_АмортизацияВНА.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
	|		И ПорядокОтраженияНаСчетахУчета_АмортизацияВНА.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И ПорядокОтраженияНаСчетахУчета_АмортизацияВНА.МестоУчета = НЕОПРЕДЕЛЕНО
	|
		// АмортизацияВНА_ЦФ
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияНаСчетахУчета_АмортизацияВНА_ЦФ
	|	ПО ПорядокОтраженияНаСчетахУчета_АмортизацияВНА_ЦФ.АналитикаУчета = СпрГруппыФинансовогоУчета.Ссылка
	|		И ПорядокОтраженияНаСчетахУчета_АмортизацияВНА_ЦФ.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ)
	|		И ПорядокОтраженияНаСчетахУчета_АмортизацияВНА_ЦФ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И ПорядокОтраженияНаСчетахУчета_АмортизацияВНА_ЦФ.МестоУчета = НЕОПРЕДЕЛЕНО
	|
		// ЗабалансовыйУчетВНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияНаСчетахУчета_ЗабалансовыйУчетВНА
	|	ПО ПорядокОтраженияНаСчетахУчета_ЗабалансовыйУчетВНА.АналитикаУчета = СпрГруппыФинансовогоУчета.Ссылка
	|		И ПорядокОтраженияНаСчетахУчета_ЗабалансовыйУчетВНА.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА)
	|		И ПорядокОтраженияНаСчетахУчета_ЗабалансовыйУчетВНА.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И ПорядокОтраженияНаСчетахУчета_ЗабалансовыйУчетВНА.МестоУчета = НЕОПРЕДЕЛЕНО
	|
		// ВыбытиеВНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияНаСчетахУчета_ВыбытиеВНА
	|	ПО ПорядокОтраженияНаСчетахУчета_ВыбытиеВНА.АналитикаУчета = СпрГруппыФинансовогоУчета.Ссылка
	|		И ПорядокОтраженияНаСчетахУчета_ВыбытиеВНА.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыбытиеВНА)
	|		И ПорядокОтраженияНаСчетахУчета_ВыбытиеВНА.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И ПорядокОтраженияНаСчетахУчета_ВыбытиеВНА.МестоУчета = НЕОПРЕДЕЛЕНО
	|
		// РезервДоОценкиВНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияНаСчетахУчета_РезервДоОценкиВНА
	|	ПО ПорядокОтраженияНаСчетахУчета_РезервДоОценкиВНА.АналитикаУчета = СпрГруппыФинансовогоУчета.Ссылка
	|		И ПорядокОтраженияНаСчетахУчета_РезервДоОценкиВНА.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервДоОценкиВНА)
	|		И ПорядокОтраженияНаСчетахУчета_РезервДоОценкиВНА.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И ПорядокОтраженияНаСчетахУчета_РезервДоОценкиВНА.МестоУчета = НЕОПРЕДЕЛЕНО
	|ГДЕ
	|	НЕ СпрГруппыФинансовогоУчета.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ВидАктива";
		
	Запрос = НовыйЗапрос(ПараметрыОбработчика, ТекстЗапроса);
	Запрос.Выполнить();
		
	ПараметрыОбработчика.ИспользуемыеВременныеТаблицы.Добавить("ГруппыФинансовогоУчетаИСчетаУчета");
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(
		ПараметрыОбработчика.МенеджерВременныхТаблиц,, 
		ПараметрыОбработчика.ИспользуемыеВременныеТаблицы);
		
КонецПроцедуры
 
Процедура ЗаписатьПорядокОтраженияНаСчетахУчета(ГФУ, Выборка)

	СтруктураСчетовУчета = Новый Структура;
	СтруктураСчетовУчета.Вставить("СчетУчета_СтоимостьВНА", Выборка.СчетУчета);
	СтруктураСчетовУчета.Вставить("СчетУчета_СтоимостьВНА_ЦФ", Выборка.СчетУчетаЦФ);
	СтруктураСчетовУчета.Вставить("СчетУчета_АмортизацияВНА", Выборка.СчетУчетаАмортизации);
	СтруктураСчетовУчета.Вставить("СчетУчета_АмортизацияВНА_ЦФ", Выборка.СчетУчетаАмортизацииЦФ);
	СтруктураСчетовУчета.Вставить("СчетУчета_ЗабалансовыйУчетВНА", Выборка.СчетЗабалансовогоУчета);
	СтруктураСчетовУчета.Вставить("СчетУчета_ВыбытиеВНА", Выборка.СчетУчетаВыбытия);
	СтруктураСчетовУчета.Вставить("СчетУчета_РезервДоОценкиВНА", Выборка.СчетУчетаРезерваДооценки);
	
	Если Выборка.ВидАктива = Перечисления.ВидыВнеоборотныхАктивов.ОсновноеСредство 
		ИЛИ Выборка.ВидАктива = Перечисления.ВидыВнеоборотныхАктивов.ИнвестиционноеИмущество Тогда
		
		Если ЗначениеЗаполнено(Выборка.СчетУчета)
			И (Выборка.СчетУчета = ПланыСчетов.Хозрасчетный.ОСвОрганизации
				ИЛИ ПланыСчетов.Хозрасчетный.ОСвОрганизации.ПринадлежитЭлементу(Выборка.СчетУчета)) Тогда
				
			Если НЕ ЗначениеЗаполнено(Выборка.СчетУчетаВыбытия) Тогда
				СтруктураСчетовУчета.СчетУчета_ВыбытиеВНА = ПланыСчетов.Хозрасчетный.ВыбытиеОС;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Выборка.СчетУчетаРезерваДооценки) Тогда
				СтруктураСчетовУчета.СчетУчета_РезервДоОценкиВНА = ПланыСчетов.Хозрасчетный.ПриростСтоимостиИмуществаПоПереоценке;
			КонецЕсли; 
			
			Если НЕ ЗначениеЗаполнено(Выборка.СчетЗабалансовогоУчета) Тогда
				СтруктураСчетовУчета.СчетУчета_ЗабалансовыйУчетВНА = ПланыСчетов.Хозрасчетный.АрендованныеОсновныеСредства;
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЕсли; 
	
	СтруктураИзмерений = НастройкаСчетовУчетаКлиентСервер.ИнициализироватьСтруктуруИзмеренийРегистра();
	СтруктураИзмерений.АналитикаУчета = ГФУ;
	
	НачатьТранзакцию();
	Попытка
	
		РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СохранитьЗначенияСчетовУчета(СтруктураИзмерений, СтруктураСчетовУчета, Ложь);
		ЗафиксироватьТранзакцию();
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());

	КонецПопытки;
	
КонецПроцедуры

Процедура ОбъединитьНастройкиСчетов(СчетаУчетаРазличные, ПараметрыОбработчика)

	СтрокиКУдалению = Новый Соответствие;
	
	//++ НЕ УТКА
	ОписаниеПустыхСчетовМУ = ОписаниеСчетовМУ(Неопределено, Неопределено, ПараметрыОбработчика);
	//-- НЕ УТКА
	
	Для Сч1 = 0 По СчетаУчетаРазличные.Количество()-1 Цикл
		
		Если СтрокиКУдалению.Получить(Сч1) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущаяНастройкаСчетов = СчетаУчетаРазличные[Сч1];
		
		// Поиск настроек которые можно совместить с текущей настройкой
		Для Сч2 = Сч1+1 По СчетаУчетаРазличные.Количество()-1 Цикл
			
			Если СтрокиКУдалению.Получить(Сч2) <> Неопределено Тогда
				Продолжить;
			КонецЕсли; 
			
			ДругаяНастройкаСчетов = СчетаУчетаРазличные[Сч2];
			
			// Проверяем по всем полям, что настройки можно объединить
			Если НЕ МожноОбъединитьПоля(ТекущаяНастройкаСчетов.СчетУчета, ДругаяНастройкаСчетов.СчетУчета)
				ИЛИ НЕ МожноОбъединитьПоля(ТекущаяНастройкаСчетов.СчетУчетаАмортизации, ДругаяНастройкаСчетов.СчетУчетаАмортизации)
				ИЛИ НЕ МожноОбъединитьПоля(ТекущаяНастройкаСчетов.СчетУчетаЦФ, ДругаяНастройкаСчетов.СчетУчетаЦФ)
				ИЛИ НЕ МожноОбъединитьПоля(ТекущаяНастройкаСчетов.СчетУчетаАмортизацииЦФ, ДругаяНастройкаСчетов.СчетУчетаАмортизацииЦФ)
				ИЛИ НЕ МожноОбъединитьПоля(ТекущаяНастройкаСчетов.СчетЗабалансовогоУчета, ДругаяНастройкаСчетов.СчетЗабалансовогоУчета)
				ИЛИ НЕ МожноОбъединитьПоля(ТекущаяНастройкаСчетов.СчетУчетаВыбытия, ДругаяНастройкаСчетов.СчетУчетаВыбытия)
				ИЛИ НЕ МожноОбъединитьПоля(ТекущаяНастройкаСчетов.СчетУчетаРезерваДооценки, ДругаяНастройкаСчетов.СчетУчетаРезерваДооценки)
				ИЛИ ТекущаяНастройкаСчетов.ПолученВАренду <> ДругаяНастройкаСчетов.ПолученВАренду Тогда
				
				// Нельзя объединить
				Продолжить;
			КонецЕсли; 
			
			//++ НЕ УТКА
			Если ПараметрыОбработчика.ИспользоватьДанныеМеждународногоУчета
				И ЗначениеЗаполнено(ТекущаяНастройкаСчетов.Описание)
				И ТекущаяНастройкаСчетов.Описание <> ОписаниеПустыхСчетовМУ
				И ЗначениеЗаполнено(ДругаяНастройкаСчетов.Описание)
				И ДругаяНастройкаСчетов.Описание <> ОписаниеПустыхСчетовМУ 
				И ТекущаяНастройкаСчетов.Описание <> ДругаяНастройкаСчетов.Описание Тогда
				
				// Нельзя объединить
				Продолжить;
			КонецЕсли; 
			//-- НЕ УТКА
			
			ОбъединитьПоля(ТекущаяНастройкаСчетов.СчетУчета, ДругаяНастройкаСчетов.СчетУчета);
			ОбъединитьПоля(ТекущаяНастройкаСчетов.СчетУчетаАмортизации, ДругаяНастройкаСчетов.СчетУчетаАмортизации);
			ОбъединитьПоля(ТекущаяНастройкаСчетов.СчетУчетаЦФ, ДругаяНастройкаСчетов.СчетУчетаЦФ);
			ОбъединитьПоля(ТекущаяНастройкаСчетов.СчетУчетаАмортизацииЦФ, ДругаяНастройкаСчетов.СчетУчетаАмортизацииЦФ);
			ОбъединитьПоля(ТекущаяНастройкаСчетов.СчетЗабалансовогоУчета, ДругаяНастройкаСчетов.СчетЗабалансовогоУчета);
			ОбъединитьПоля(ТекущаяНастройкаСчетов.СчетУчетаВыбытия, ДругаяНастройкаСчетов.СчетУчетаВыбытия);
			ОбъединитьПоля(ТекущаяНастройкаСчетов.СчетУчетаРезерваДооценки, ДругаяНастройкаСчетов.СчетУчетаРезерваДооценки);
			
			//++ НЕ УТКА
			Если ПараметрыОбработчика.ИспользоватьДанныеМеждународногоУчета
				И (НЕ ЗначениеЗаполнено(ТекущаяНастройкаСчетов.Описание)
					ИЛИ ТекущаяНастройкаСчетов.Описание = ОписаниеПустыхСчетовМУ)
				И ЗначениеЗаполнено(ДругаяНастройкаСчетов.Описание) 
				И ДругаяНастройкаСчетов.Описание <> ОписаниеПустыхСчетовМУ Тогда
				ТекущаяНастройкаСчетов.Описание = ДругаяНастройкаСчетов.Описание;
			КонецЕсли;
			//-- НЕ УТКА
			
			СтрокиКУдалению.Вставить(Сч2, ДругаяНастройкаСчетов);
			
		КонецЦикла; 
		
	КонецЦикла;
	
	Для каждого КлючИЗначение Из СтрокиКУдалению Цикл
		СчетаУчетаРазличные.Удалить(КлючИЗначение.Значение);
	КонецЦикла;
	
КонецПроцедуры

Функция МожноОбъединитьПоля(Поле1, Поле2)

	Возврат НЕ ЗначениеЗаполнено(Поле1)
			ИЛИ НЕ ЗначениеЗаполнено(Поле2) 
			ИЛИ Поле1 = Поле2;

КонецФункции

Процедура ОбъединитьПоля(Поле1, Поле2)

	Если НЕ ЗначениеЗаполнено(Поле1)
		И ЗначениеЗаполнено(Поле2) Тогда
		Поле1 = Поле2;
	КонецЕсли; 
	
КонецПроцедуры
 
Процедура ОпределитьГруппыФинансовогоУчета(ПараметрыОбработчика)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СчетаУчета.ВнеоборотныйАктив                       КАК ВнеоборотныйАктив,
	|	СчетаУчета.ГруппаФинансовогоУчета                  КАК ГруппаФинансовогоУчета,
	|	СпрГруппыФинансовогоУчета.СчетУчета                КАК СчетУчета,
	|	СпрГруппыФинансовогоУчета.СчетУчетаАмортизации     КАК СчетУчетаАмортизации,
	|	СпрГруппыФинансовогоУчета.СчетУчетаЦФ              КАК СчетУчетаЦФ,
	|	СпрГруппыФинансовогоУчета.СчетУчетаАмортизацииЦФ   КАК СчетУчетаАмортизацииЦФ,
	|	СпрГруппыФинансовогоУчета.СчетЗабалансовогоУчета   КАК СчетЗабалансовогоУчета,
	|	СпрГруппыФинансовогоУчета.СчетУчетаВыбытия         КАК СчетУчетаВыбытия,
	|	СпрГруппыФинансовогоУчета.СчетУчетаРезерваДооценки КАК СчетУчетаРезерваДооценки
	|ПОМЕСТИТЬ ГруппыФинансовогоУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		СчетаУчета.ВнеоборотныйАктив               КАК ВнеоборотныйАктив,
	|		МАКСИМУМ(СпрГруппыФинансовогоУчета.Ссылка) КАК ГруппаФинансовогоУчета
	|	ИЗ
	|		ВТ_СчетаУчета КАК СчетаУчета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчетаИСчетаУчета КАК СпрГруппыФинансовогоУчета
	|			ПО (СпрГруппыФинансовогоУчета.ВидАктива = СчетаУчета.ВидАктива)
	|				И (СпрГруппыФинансовогоУчета.СчетУчета = СчетаУчета.СчетУчета
	|					ИЛИ СчетаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|					И НЕ СчетаУчета.ПолученВАренду)
	|				И (СпрГруппыФинансовогоУчета.СчетУчетаАмортизации = СчетаУчета.СчетУчетаАмортизации
	|					ИЛИ СчетаУчета.СчетУчетаАмортизации = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|				И (СпрГруппыФинансовогоУчета.СчетУчетаЦФ = СчетаУчета.СчетУчетаЦФ
	|					ИЛИ СчетаУчета.СчетУчетаЦФ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|				И (СпрГруппыФинансовогоУчета.СчетУчетаАмортизацииЦФ = СчетаУчета.СчетУчетаАмортизацииЦФ
	|					ИЛИ СчетаУчета.СчетУчетаАмортизацииЦФ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|				И (СпрГруппыФинансовогоУчета.СчетЗабалансовогоУчета = СчетаУчета.СчетЗабалансовогоУчета
	|					ИЛИ СчетаУчета.СчетЗабалансовогоУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|				И (СпрГруппыФинансовогоУчета.СчетУчетаВыбытия = СчетаУчета.СчетУчетаВыбытия
	|					ИЛИ СчетаУчета.СчетУчетаВыбытия = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|				И (СпрГруппыФинансовогоУчета.СчетУчетаРезерваДооценки = СчетаУчета.СчетУчетаРезерваДооценки
	|					ИЛИ СчетаУчета.СчетУчетаРезерваДооценки = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|				И (&УсловиеОписание)
	|
	|	СГРУППИРОВАТЬ ПО
	|		СчетаУчета.ВнеоборотныйАктив) КАК СчетаУчета
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчетаИСчетаУчета КАК СпрГруппыФинансовогоУчета
	|	ПО (СпрГруппыФинансовогоУчета.Ссылка = СчетаУчета.ГруппаФинансовогоУчета)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив";
	
	Если ПараметрыОбработчика.ИспользоватьДанныеМеждународногоУчета Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_СчетаУчета", "СчетаУчетаСОписаниемСчетовМФУ");
		
		УсловиеОписание = "СпрГруппыФинансовогоУчета.Описание = СчетаУчета.Описание";
	//++ НЕ УТКА
		УсловиеОписание = УсловиеОписание + " ИЛИ СчетаУчета.Описание = &ОписаниеПустыхСчетовМУ";
	//-- НЕ УТКА
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОписание", УсловиеОписание);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_СчетаУчета", "СчетаУчета");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОписание", "ИСТИНА");
	КонецЕсли;
	
	Запрос = НовыйЗапрос(ПараметрыОбработчика, ТекстЗапроса);
	
	//++ НЕ УТКА
	ОписаниеПустыхСчетовМУ = ОписаниеСчетовМУ(Неопределено, Неопределено, ПараметрыОбработчика);
	Запрос.УстановитьПараметр("ОписаниеПустыхСчетовМУ", ОписаниеПустыхСчетовМУ);
	//-- НЕ УТКА
	
	Запрос.Выполнить();
	
	ПараметрыОбработчика.ИспользуемыеВременныеТаблицы.Добавить("ГруппыФинансовогоУчета");
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(
		ПараметрыОбработчика.МенеджерВременныхТаблиц,, 
		ПараметрыОбработчика.ИспользуемыеВременныеТаблицы);
	
КонецПроцедуры
 
Функция НумерацияГФУ()

	НумерацияГФУ = Новый ТаблицаЗначений;
	НумерацияГФУ.Колонки.Добавить("Наименование", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	НумерацияГФУ.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(10));
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГФУ.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаВнеоборотныхАктивов КАК ГФУ
	|ГДЕ
	|	НЕ ГФУ.ЭтоГруппа";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СчетчикНаименования = Неопределено;
		Если Прав(Выборка.Наименование, 1) = ")" Тогда
			ДлинаСтроки = СтрДлина(Выборка.Наименование) - 2;
			Для Сч = -ДлинаСтроки По 0 Цикл
				Если Сред(Выборка.Наименование, -Сч, 1) = "(" Тогда
					
					СчетчикНаименования = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Сред(Выборка.Наименование, -Сч + 1, ДлинаСтроки + Сч + 1));
					НаименованиеБезСчетчика = СокрЛП(Лев(Выборка.Наименование, -Сч - 1));
				
					Прервать;
				КонецЕсли;
			КонецЦикла;
		Иначе	
			СчетчикНаименования = 1;
			НаименованиеБезСчетчика = Выборка.Наименование;
		КонецЕсли;
		
		Если СчетчикНаименования = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ГФУСТакимЖеНаименованием = НумерацияГФУ.Найти(НаименованиеБезСчетчика, "Наименование");
		Если ГФУСТакимЖеНаименованием <> Неопределено Тогда
			ГФУСТакимЖеНаименованием.Количество = Макс(СчетчикНаименования, ГФУСТакимЖеНаименованием.Количество);
		Иначе
			ГФУСТакимЖеНаименованием = НумерацияГФУ.Добавить();
			ГФУСТакимЖеНаименованием.Наименование = НаименованиеБезСчетчика;
			ГФУСТакимЖеНаименованием.Количество = СчетчикНаименования;
		КонецЕсли;
		
	КонецЦикла; 

	Возврат НумерацияГФУ;
	
КонецФункции

//++ НЕ УТКА

Процедура СоздатьСчетаУчетаСОписаниемСчетовМФУ(ПараметрыОбработчика)

	Если НЕ ПараметрыОбработчика.ИспользоватьДанныеМеждународногоУчета Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СчетаУчета.ВидАктива                КАК ВидАктива,
	|	СчетаУчета.ВнеоборотныйАктив        КАК ВнеоборотныйАктив,
	|	СчетаУчета.СчетУчета                КАК СчетУчета,
	|	СчетаУчета.СчетУчетаЦФ              КАК СчетУчетаЦФ,
	|	СчетаУчета.СчетУчетаМУ              КАК СчетУчетаМУ,
	|	СчетаУчета.СчетУчетаАмортизации     КАК СчетУчетаАмортизации,
	|	СчетаУчета.СчетУчетаАмортизацииЦФ   КАК СчетУчетаАмортизацииЦФ,
	|	СчетаУчета.СчетУчетаАмортизацииМУ   КАК СчетУчетаАмортизацииМУ,
	|	СчетаУчета.СчетЗабалансовогоУчета   КАК СчетЗабалансовогоУчета,
	|	СчетаУчета.СчетУчетаВыбытия         КАК СчетУчетаВыбытия,
	|	СчетаУчета.СчетУчетаРезерваДооценки КАК СчетУчетаРезерваДооценки,
	|	СчетаУчета.ПолученВАренду           КАК ПолученВАренду
	|ИЗ
	|	СчетаУчета КАК СчетаУчета";
	
	Запрос = НовыйЗапрос(ПараметрыОбработчика, ТекстЗапроса);
	
	СчетаУчетаСОписаниемСчетовМФУ = Запрос.Выполнить().Выгрузить();
	СчетаУчетаСОписаниемСчетовМФУ.Колонки.Добавить("Описание", ОбщегоНазначения.ОписаниеТипаСтрока(1024));
	
	Для каждого Выборка Из СчетаУчетаСОписаниемСчетовМФУ Цикл
		
		Выборка.Описание = ОписаниеСчетовМУ(Выборка.СчетУчетаМУ, Выборка.СчетУчетаАмортизацииМУ, ПараметрыОбработчика);
			
	КонецЦикла; 
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетаУчета.ВидАктива                КАК ВидАктива,
	|	СчетаУчета.ВнеоборотныйАктив        КАК ВнеоборотныйАктив,
	|	СчетаУчета.СчетУчета                КАК СчетУчета,
	|	СчетаУчета.СчетУчетаЦФ              КАК СчетУчетаЦФ,
	|	СчетаУчета.СчетУчетаМУ              КАК СчетУчетаМУ,
	|	СчетаУчета.СчетУчетаАмортизации     КАК СчетУчетаАмортизации,
	|	СчетаУчета.СчетУчетаАмортизацииЦФ   КАК СчетУчетаАмортизацииЦФ,
	|	СчетаУчета.СчетУчетаАмортизацииМУ   КАК СчетУчетаАмортизацииМУ,
	|	СчетаУчета.СчетЗабалансовогоУчета   КАК СчетЗабалансовогоУчета,
	|	СчетаУчета.СчетУчетаВыбытия         КАК СчетУчетаВыбытия,
	|	СчетаУчета.СчетУчетаРезерваДооценки КАК СчетУчетаРезерваДооценки,
	|	СчетаУчета.ПолученВАренду           КАК ПолученВАренду,
	|	СчетаУчета.Описание                 КАК Описание
	|ПОМЕСТИТЬ СчетаУчетаСОписаниемСчетовМФУ
	|ИЗ
	|	&СчетаУчетаСОписаниемСчетовМФУ КАК СчетаУчета";
	
	Запрос.УстановитьПараметр("СчетаУчетаСОписаниемСчетовМФУ", СчетаУчетаСОписаниемСчетовМФУ);
	Запрос.Выполнить();
	
	ПараметрыОбработчика.ИспользуемыеВременныеТаблицы.Добавить("СчетаУчетаСОписаниемСчетовМФУ");
	
КонецПроцедуры

Функция ОписаниеСчетовМУ(СчетУчетаМУ, СчетУчетаАмортизацииМУ, ПараметрыОбработчика)

	ОписаниеСчетовМУ = СтрШаблон(НСтр("ru = 'Элемент соответствует счетам международного учета: Стоимость %1, Амортизация %2.
											|Внимание: не следует изменять описание до завершения перехода.';
											|en = 'Item matches international accounting accounts: Cost %1, Depreciation %2.
											|Warning: do not change description before migration is complete.'"),
									?(ЗначениеЗаполнено(СчетУчетаМУ), Строка(СчетУчетаМУ), НСтр("ru = '<не используется>';
																								|en = '<not used>'")),
									?(ЗначениеЗаполнено(СчетУчетаАмортизацииМУ), Строка(СчетУчетаАмортизацииМУ), НСтр("ru = '<не используется>';
																														|en = '<not used>'")));

	Возврат ПараметрыОбработчика.ОписаниеНовыйСправочник + Символы.ПС + ОписаниеСчетовМУ;
	
КонецФункции
 
//-- НЕ УТКА

#КонецОбласти

#Область ПараметрыУчета

#Область СобственныеОС

Процедура ОбработатьПараметрыУчетаСобственныхОС(ПараметрыОбработчика) 
	
	Если НЕ ТребуетсяВыполнитьЭтап("ПереносПараметровУчетаОС", ПараметрыОбработчика) Тогда
		Возврат;
	КонецЕсли;
	
	ЗафиксироватьНачалоВыполненияЭтапа("ПереносПараметровУчетаОС", 0, ПараметрыОбработчика);
	
	ТекстыЗапроса = Новый Массив;
	
	ТекстЗапросаПараметрыУчетаОС_БУ(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаПараметрыУчетаОС_УУ(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаЛишниеПараметрыУчетаСобственныхОС(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаПараметрыУчетаСобственныхОС(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаИзменениеПараметровУчетаСобственныхОС(ТекстыЗапроса, ПараметрыОбработчика);
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = НовыйЗапрос(ПараметрыОбработчика, ТекстЗапроса);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(
		ПараметрыОбработчика.МенеджерВременныхТаблиц,, 
		ПараметрыОбработчика.ИспользуемыеВременныеТаблицы);
		
	КоличествоДанных = 
		РезультатЗапроса[РезультатЗапроса.ВГраница()-3].Выбрать().Количество()
		+ РезультатЗапроса[РезультатЗапроса.ВГраница()-2].Выбрать().Количество()
		+ РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать().Количество();
	ЗафиксироватьНачалоВыполненияЭтапа("ПереносПараметровУчетаОС", КоличествоДанных, ПараметрыОбработчика);
		
	ОбработатьЛишниеДанные(
		РезультатЗапроса[РезультатЗапроса.ВГраница()-3], 
		ПараметрыОбработчика,
		"ПереносПараметровУчетаОС");
	
	ОбработатьРезультатЗапросаДляДокументовВводаОстатков(
		РезультатЗапроса[РезультатЗапроса.ВГраница()-2], 
		ПараметрыОбработчика,
		"ПереносПараметровУчетаОС");
		
	ОбработатьРезультатЗапросаДляДокументовИзмененияПараметровОС(
		РезультатЗапроса[РезультатЗапроса.ВГраница()-1], 
		РезультатЗапроса[РезультатЗапроса.ВГраница()], 
		ПараметрыОбработчика,
		"ПереносПараметровУчетаОС_ИзменениеПараметров");
		
	ЗафиксироватьОкончаниеВыполненияЭтапа("ПереносПараметровУчетаОС", ПараметрыОбработчика);
		
КонецПроцедуры

Процедура ТекстЗапросаЛишниеПараметрыУчетаСобственныхОС(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.ХозяйственнаяОперация, ПараметрыУчетаОС_УУ.ХозяйственнаяОперация) КАК ХозяйственнаяОперация,
	|	ПринятыеКУчетуОС.Организация КАК Организация,
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.Местонахождение, ПараметрыУчетаОС_УУ.Местонахождение) КАК Местонахождение,
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.Контрагент, НЕОПРЕДЕЛЕНО) КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ПараметрыУчетаОС_БУ.Контрагент ССЫЛКА Справочник.Организации
	|				И ПараметрыУчетаОС_БУ.Контрагент <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасчетыМеждуОрганизациямиАрендатор,
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.ОтражатьВРеглУчете, ЛОЖЬ) КАК ОтражатьВРеглУчете,
	|	ЕСТЬNULL(ПараметрыУчетаОС_УУ.ОтражатьВУпрУчете, ЛОЖЬ) КАК ОтражатьВУпрУчете,
	|	ПринятыеКУчетуОС.ВнеоборотныйАктив КАК ВнеоборотныйАктив
	|ПОМЕСТИТЬ ПараметрыУчетаСобственныхОС_Отбор
	|ИЗ
	|	ПринятыеКУчетуОС КАК ПринятыеКУчетуОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаОС_БУ КАК ПараметрыУчетаОС_БУ
	|		ПО (ПараметрыУчетаОС_БУ.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|			И (ПараметрыУчетаОС_БУ.Организация = ПринятыеКУчетуОС.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаОС_УУ КАК ПараметрыУчетаОС_УУ
	|		ПО (ПараметрыУчетаОС_УУ.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|			И (ПараметрыУчетаОС_УУ.Организация = ПринятыеКУчетуОС.Организация)
	|ГДЕ
	|	ПринятыеКУчетуОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыУчетаОС_БУ.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ИСТИНА КАК ОтражатьВРеглУчете,
	|	ЕСТЬNULL(ПараметрыУчетаОС_УУ.ОтражатьВУпрУчете, ЛОЖЬ) КАК ОтражатьВУпрУчете,
	|	ПараметрыУчетаОС_БУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ИзменениеПараметровОС_Отбор
	|ИЗ
	|	ПараметрыУчетаОС_БУ КАК ПараметрыУчетаОС_БУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаОС_УУ КАК ПараметрыУчетаОС_УУ
	|		ПО (ПараметрыУчетаОС_УУ.ОсновноеСредство = ПараметрыУчетаОС_БУ.ОсновноеСредство)
	|			И (ПараметрыУчетаОС_УУ.Организация = ПараметрыУчетаОС_БУ.Организация)
	|ГДЕ
	|	ПараметрыУчетаОС_БУ.СпособОтраженияРасходовЗаданДокументом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПараметрыУчетаОС_БУ.ДокументВводаВЭксплуатацию,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ПараметрыУчетаОС_БУ.ОсновноеСредство
	|ИЗ
	|	ПараметрыУчетаОС_БУ КАК ПараметрыУчетаОС_БУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаОС_УУ КАК ПараметрыУчетаОС_УУ
	|		ПО (ПараметрыУчетаОС_УУ.ОсновноеСредство = ПараметрыУчетаОС_БУ.ОсновноеСредство)
	|			И (ПараметрыУчетаОС_УУ.Организация = ПараметрыУчетаОС_БУ.Организация)
	|ГДЕ
	|	ПараметрыУчетаОС_БУ.ПередаватьРасходыВДругуюОрганизацию
	|	И ЕСТЬNULL(ПараметрыУчетаОС_БУ.ОтражатьВРеглУчете, ЛОЖЬ)
	|	И ЕСТЬNULL(ПараметрыУчетаОС_УУ.ОтражатьВУпрУчете, ЛОЖЬ)
	|	И &ИспользоватьДанныеМеждународногоУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Основные средства, по которым нет данных в учете 2.2
	|ВЫБРАТЬ
	|	""ЛишниеДанные""                        КАК ВидПроблемы,
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	NULL                                    КАК СсылкаДубль,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	ТабличнаяЧасть.ОсновноеСредство         КАК ОсновноеСредство
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
	|ГДЕ
	|	НЕ ДанныеДокумента.ПометкаУдаления
	|	И ДанныеДокумента.Дата <= &Период
	|   И &ОтборОбъектыПроблемОС
	|
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|
	|	И НЕ (ДанныеДокумента.ХозяйственнаяОперация, 
	|			ДанныеДокумента.Организация, 
	|			ДанныеДокумента.Местонахождение, 
	|			ДанныеДокумента.Контрагент, 
	|			ДанныеДокумента.РасчетыМеждуОрганизациямиАрендатор,
	|			ДанныеДокумента.ОтражатьВРеглУчете, 
	|			ДанныеДокумента.ОтражатьВУпрУчете,
	|			ТабличнаяЧасть.ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					ПринятыеКУчетуОС.ХозяйственнаяОперация,
	|					ПринятыеКУчетуОС.Организация,
	|					ПринятыеКУчетуОС.Местонахождение,
	|					ПринятыеКУчетуОС.Контрагент,
	|					ПринятыеКУчетуОС.РасчетыМеждуОрганизациямиАрендатор,
	|					ПринятыеКУчетуОС.ОтражатьВРеглУчете,
	|					ПринятыеКУчетуОС.ОтражатьВУпрУчете,
	|					ПринятыеКУчетуОС.ВнеоборотныйАктив КАК ВнеоборотныйАктив
	|				ИЗ
	|					ПараметрыУчетаСобственныхОС_Отбор КАК ПринятыеКУчетуОС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Основные средства, по которым задублированы документы
	|ВЫБРАТЬ
	|	""Дубль""                               КАК ВидПроблемы,
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	ДанныеДокументаДубль.Ссылка             КАК СсылкаДубль,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	ТабличнаяЧасть.ОсновноеСредство         КАК ОсновноеСредство
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокументаДубль
	|		ПО (ДанныеДокументаДубль.Ссылка <> ДанныеДокумента.Ссылка)
	|			И (ДанныеДокументаДубль.ХозяйственнаяОперация = ДанныеДокумента.ХозяйственнаяОперация)
	|			И (ДанныеДокументаДубль.Организация = ДанныеДокумента.Организация)
	|			И (ДанныеДокументаДубль.Местонахождение = ДанныеДокумента.Местонахождение)
	|			И (ДанныеДокументаДубль.Контрагент = ДанныеДокумента.Контрагент)
	|			И (ДанныеДокументаДубль.РасчетыМеждуОрганизациямиАрендатор = ДанныеДокумента.РасчетыМеждуОрганизациямиАрендатор)
	|			И (ДанныеДокументаДубль.ОтражатьВРеглУчете = ДанныеДокумента.ОтражатьВРеглУчете)
	|			И (ДанныеДокументаДубль.ОтражатьВУпрУчете = ДанныеДокумента.ОтражатьВУпрУчете)
	|			И (НЕ ДанныеДокументаДубль.ПометкаУдаления)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТабличнаяЧастьДубль
	|		ПО (ТабличнаяЧастьДубль.Ссылка = ДанныеДокументаДубль.Ссылка)
	|			И (ТабличнаяЧастьДубль.ОсновноеСредство = ТабличнаяЧасть.ОсновноеСредство)
	|ГДЕ
	|	НЕ ДанныеДокумента.ПометкаУдаления
	|	И ДанныеДокумента.Дата <= &Период
	|   И &ОтборОбъектыПроблемОС
	|
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|
	|	И НЕ ДанныеДокументаДубль.Ссылка ЕСТЬ NULL
	|	И НЕ ТабличнаяЧастьДубль.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Основные средства, ПО которым нет документов "Изменение параметров ОС" В учете 2.2.
	|ВЫБРАТЬ
	|	""ЛишниеДанные""                        КАК ВидПроблемы,
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	NULL                                    КАК СсылкаДубль,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровОС) КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	ТабличнаяЧасть.ОсновноеСредство         КАК ОсновноеСредство
	|ИЗ
	|	Документ.ИзменениеПараметровОС2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС2_4.ОС КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
	|ГДЕ
	|	НЕ ДанныеДокумента.ПометкаУдаления
	|	И ДанныеДокумента.Дата <= &Период
	|   И &ОтборОбъектыПроблемОС
	|
	|	И НЕ (ДанныеДокумента.ДокументОснование, 
	|			ДанныеДокумента.ОтражатьВРеглУчете, 
	|			ДанныеДокумента.ОтражатьВУпрУчете,
	|			ТабличнаяЧасть.ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					ПараметрыУчетаОС_БУ.СпособОтраженияРасходов,
	|					ПараметрыУчетаОС_БУ.ОтражатьВРеглУчете,
	|					ПараметрыУчетаОС_БУ.ОтражатьВУпрУчете,
	|					ПараметрыУчетаОС_БУ.ОсновноеСредство
	|				ИЗ
	|					ИзменениеПараметровОС_Отбор КАК ПараметрыУчетаОС_БУ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Если ПараметрыОбработчика.РежимПереносаДанных = "Исправить" Тогда
		ТекстОтборОбъектыПроблемОС = "ТабличнаяЧасть.ОсновноеСредство В (ВЫБРАТЬ ОбъектыПроблем.ВнеоборотныйАктив ИЗ ОбъектыПроблем КАК ОбъектыПроблем)";
	Иначе
		ТекстОтборОбъектыПроблемОС = "ИСТИНА";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборОбъектыПроблемОС", ТекстОтборОбъектыПроблемОС);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаПараметрыУчетаСобственныхОС(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВводОстатковПроведен.Ссылка                            КАК Ссылка,
	|	&ПериодНачалоДня                                       КАК Дата,
	|	ПринятыеКУчетуОС.ВнеоборотныйАктив                     КАК ОсновноеСредство,
	|	ПринятыеКУчетуОС.Организация                           КАК Организация,
	|	ИСТИНА                                                 КАК ОтражатьВОперативномУчете,
	
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.ХозяйственнаяОперация, 
	|				ЕСТЬNULL(ПараметрыУчетаОС_УУ.ХозяйственнаяОперация, Неопределено)) КАК ХозяйственнаяОперация,
	
	// Ключевые реквизиты нужно приводить к пустому значению
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.ОтражатьВРеглУчете, ЛОЖЬ)                                           КАК ОтражатьВРеглУчете,
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.ОтражатьВРеглУчете, ЛОЖЬ)                                           КАК ОтражатьВБУ,
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.ОтражатьВРеглУчете, ЛОЖЬ)                                           КАК ОтражатьВНУ,
	|	ЕСТЬNULL(ПараметрыУчетаОС_УУ.ОтражатьВУпрУчете, ЛОЖЬ)                                            КАК ОтражатьВУпрУчете,
	|	ЛОЖЬ                                                                                             КАК ОтражатьВБУиНУ,
	|	ЛОЖЬ                                                                                             КАК ОтражатьВУУ,
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.Местонахождение, ПараметрыУчетаОС_УУ.Местонахождение)               КАК Местонахождение,
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.МОЛ, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))              КАК МОЛ,
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.Контрагент, НЕОПРЕДЕЛЕНО)                                           КАК Контрагент,
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.НалогообложениеНДС, ПараметрыУчетаОС_УУ.НалогообложениеНДС)         КАК НалогообложениеНДС,
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.ГруппаФинансовогоУчета, ПараметрыУчетаОС_УУ.ГруппаФинансовогоУчета) КАК ГруппаФинансовогоУчета,
	
	// Запрос должен содержать все реквизиты документа
	|	ПараметрыУчетаОС_БУ.АдресМестонахождения                                       КАК АдресМестонахождения,
	|	ПараметрыУчетаОС_БУ.АмортизационнаяГруппа                                      КАК АмортизационнаяГруппа,
	|	ПараметрыУчетаОС_БУ.АналитикаДоходов                                           КАК АналитикаДоходов,
	|	ПараметрыУчетаОС_БУ.АналитикаРасходовАмортизационнойПремии                     КАК АналитикаРасходовАмортизационнойПремии,
	|	ПараметрыУчетаОС_БУ.АналитикаРасходов                                          КАК АналитикаРасходовБУ,
	|	ПараметрыУчетаОС_БУ.АналитикаРасходовНалог                                     КАК АналитикаРасходовНалог,
	|	ПараметрыУчетаОС_УУ.АналитикаРасходов                                          КАК АналитикаРасходовУУ,
	|	ПараметрыУчетаОС_БУ.ВариантРаздельногоУчетаНДС                                 КАК ВариантРаздельногоУчетаНДС,
	|	ПараметрыУчетаОС_БУ.ВключитьАмортизационнуюПремиюВСоставРасходов               КАК ВключитьАмортизационнуюПремиюВСоставРасходов,
	|	ПараметрыУчетаОС_БУ.ГрафикАмортизации                                          КАК ГрафикАмортизации,
	|	ПараметрыУчетаОС_БУ.ДатаИзмененияПараметровАмортизации                         КАК ДатаИзмененияПараметровБУ,
	|	ПараметрыУчетаОС_УУ.ДатаИзмененияПараметровАмортизации                         КАК ДатаИзмененияПараметровУУ,
	|	ПараметрыУчетаОС_БУ.ДатаПринятияКУчету                                         КАК ДатаПринятияКУчетуБУ,
	|	ПараметрыУчетаОС_БУ.ДатаПринятияКУчету                                         КАК ДатаПринятияКУчетуНУ,
	|	ПараметрыУчетаОС_УУ.ДатаПринятияКУчету                                         КАК ДатаПринятияКУчетуУУ,
	|	ПараметрыУчетаОС_БУ.Договор                                                    КАК Договор,
	|	ПараметрыУчетаОС_БУ.ДокументВводаВЭксплуатацию                                 КАК ДокументВводаВЭксплуатациюБУ,
	|	ПараметрыУчетаОС_УУ.ДокументВводаВЭксплуатацию                                 КАК ДокументВводаВЭксплуатациюУУ,
	
	|	ПараметрыУчетаОС_УУ.ЕстьРезервПереоценки                                       КАК ЕстьРезервПереоценки,
	|	ПараметрыУчетаОС_БУ.ЕстьРезервПереоценкиРегл                                   КАК ЕстьРезервПереоценкиРегл,
	|	ПараметрыУчетаОС_БУ.ЕстьИзменениеПараметровАмортизации                         КАК ЕстьИзменениеПараметровАмортизацииБУ,
	|	ПараметрыУчетаОС_УУ.ЕстьИзменениеПараметровАмортизации                         КАК ЕстьИзменениеПараметровАмортизацииУУ,
	|	ПараметрыУчетаОС_БУ.ЗалоговаяСтоимость                                         КАК ЗалоговаяСтоимость,
	|	0                                                                              КАК КорректировкаСтоимостиАрендованногоИмуществаНУ,
	|	ПараметрыУчетаОС_БУ.КоэффициентАмортизацииБУ                                   КАК КоэффициентАмортизацииБУ,
	|	ПараметрыУчетаОС_БУ.КоэффициентУскоренияБУ                                     КАК КоэффициентУскоренияБУ,
	|	ПараметрыУчетаОС_УУ.КоэффициентУскорения                                       КАК КоэффициентУскоренияУУ,
	|	ПараметрыУчетаОС_УУ.ЛиквидационнаяСтоимость                                    КАК ЛиквидационнаяСтоимость,
	|	ПараметрыУчетаОС_БУ.МетодНачисленияАмортизации                                 КАК МетодНачисленияАмортизацииБУ,
	|	ПараметрыУчетаОС_УУ.МетодНачисленияАмортизации                                 КАК МетодНачисленияАмортизацииУУ,
	|	ПараметрыУчетаОС_БУ.МОЛАрендатора                                              КАК МОЛАрендатора,
	|	""""                                                                           КАК НазваниеДокументаМодернизации,
	|	""""                                                                           КАК НазваниеДокументаПринятияКУчету,
	|
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.НаправлениеДеятельности,
	|				ПараметрыУчетаОС_УУ.НаправлениеДеятельности)                       КАК НаправлениеДеятельности,
	|
	|	ПараметрыУчетаОС_БУ.НедвижимоеИмущество                                        КАК НедвижимоеИмущество,
	
	|	ПараметрыУчетаОС_БУ.НакопленнаяАмортизацияБУ                                   КАК НакопленнаяАмортизацияБУ,
	|	ПараметрыУчетаОС_БУ.НакопленнаяАмортизацияБУЦФ                                 КАК НакопленнаяАмортизацияБУЦФ,
	|	ПараметрыУчетаОС_БУ.НакопленнаяАмортизацияНУ                                   КАК НакопленнаяАмортизацияНУ,
	|	ПараметрыУчетаОС_БУ.НакопленнаяАмортизацияНУДо2009                             КАК НакопленнаяАмортизацияНУДо2009,
	|	ПараметрыУчетаОС_БУ.НакопленнаяАмортизацияНУЦФ                                 КАК НакопленнаяАмортизацияНУЦФ,
	|	ПараметрыУчетаОС_БУ.НакопленнаяАмортизацияПР                                   КАК НакопленнаяАмортизацияПР,
	|	ПараметрыУчетаОС_БУ.НакопленнаяАмортизацияПРЦФ                                 КАК НакопленнаяАмортизацияПРЦФ,
	|	ПараметрыУчетаОС_УУ.НакопленнаяАмортизация                                     КАК НакопленнаяАмортизацияУУ,
	|	
	|	ПараметрыУчетаОС_БУ.НачислятьАмортизациюБУ
	|		И ПараметрыУчетаОС_БУ.ПорядокУчетаБУ В (
	|			ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации),
	|			ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ),
	|			ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена)) КАК НачислятьАмортизациюБУ,
	|	
	|	ПараметрыУчетаОС_БУ.НачислятьАмортизациюНУ
	|		И ПараметрыУчетаОС_БУ.ПорядокУчетаНУ В (
	|			ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации),
	|			ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена)) КАК НачислятьАмортизациюНУ,
	|	
	|	ПараметрыУчетаОС_УУ.НачислятьАмортизацию                                       КАК НачислятьАмортизациюУУ,
	|	ПараметрыУчетаОС_БУ.НачислятьИзносБУ                                           КАК НачислятьИзносБУ,
	|	
	|	""""                                                                           КАК НомерДокументаМодернизации,
	|	""""                                                                           КАК НомерДокументаПринятияКУчету,
	|	ВЫБОР 
	|		КОГДА ПараметрыУчетаОС_БУ.МетодНачисленияАмортизации В (
	|					ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции),
	|					ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега))
	|			ТОГДА ПараметрыУчетаОС_БУ.ОбъемНаработки
	|		КОГДА ПараметрыУчетаОС_УУ.МетодНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|			ТОГДА ПараметрыУчетаОС_УУ.ОбъемНаработки
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                                          КАК ОбъемНаработки,
	|	ПараметрыУчетаОС_УУ.ОбъемНаработки                                             КАК ОбъемНаработкиУУ,
	|	ПараметрыУчетаОС_БУ.ОбъемНаработкиОстаточный                                   КАК ОбъемНаработкиОстаточныйБУ,
	|	ПараметрыУчетаОС_УУ.ОбъемНаработкиОстаточный                                   КАК ОбъемНаработкиОстаточныйУУ,
	
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПараметрыУчетаОС_БУ.ОтражатьВРеглУчете, ЛОЖЬ)
	|				И ЕСТЬNULL(ПараметрыУчетаОС_УУ.ОтражатьВУпрУчете, ЛОЖЬ)
	|				И &ИспользоватьДанныеМеждународногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		ИНАЧЕ ПараметрыУчетаОС_БУ.ОрганизацияПолучательРасходов 
	|	КОНЕЦ                                                                          КАК ОрганизацияПолучательРасходов,
	
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.ПервоначальнаяСтоимостьБУ, 0) <> (ЕСТЬNULL(ПараметрыУчетаОС_БУ.ТекущаяСтоимостьБУ, 0) + ЕСТЬNULL(ПараметрыУчетаОС_БУ.ТекущаяСтоимостьБУЦФ, 0))
	|		ИЛИ ЕСТЬNULL(ПараметрыУчетаОС_БУ.ПервоначальнаяСтоимостьНУ, 0) <> (ЕСТЬNULL(ПараметрыУчетаОС_БУ.ТекущаяСтоимостьНУ, 0) + ЕСТЬNULL(ПараметрыУчетаОС_БУ.ТекущаяСтоимостьНУЦФ, 0))
	|		ИЛИ ЕСТЬNULL(ПараметрыУчетаОС_БУ.ПервоначальнаяСтоимостьПР, 0) <> (ЕСТЬNULL(ПараметрыУчетаОС_БУ.ТекущаяСтоимостьПР, 0) + ЕСТЬNULL(ПараметрыУчетаОС_БУ.ТекущаяСтоимостьПРЦФ, 0))
	|		ИЛИ ЕСТЬNULL(ПараметрыУчетаОС_УУ.ПервоначальнаяСтоимость, 0) <> ЕСТЬNULL(ПараметрыУчетаОС_УУ.ТекущаяСтоимость, 0) КАК ПервоначальнаяСтоимостьОтличается,
	
	|	ПараметрыУчетаОС_БУ.ПервоначальнаяСтоимостьБУ                                  КАК ПервоначальнаяСтоимостьБУ,
	|	ПараметрыУчетаОС_БУ.ПервоначальнаяСтоимостьНУ                                  КАК ПервоначальнаяСтоимостьНУ,
	|	ПараметрыУчетаОС_БУ.ПервоначальнаяСтоимостьПР                                  КАК ПервоначальнаяСтоимостьПР,
	|	ПараметрыУчетаОС_УУ.ПервоначальнаяСтоимость                                    КАК ПервоначальнаяСтоимостьУУ,
	
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПараметрыУчетаОС_БУ.ОтражатьВРеглУчете, ЛОЖЬ)
	|				И ЕСТЬNULL(ПараметрыУчетаОС_УУ.ОтражатьВУпрУчете, ЛОЖЬ)
	|				И &ИспользоватьДанныеМеждународногоУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыУчетаОС_БУ.ПередаватьРасходыВДругуюОрганизацию, ЛОЖЬ)
	|	КОНЕЦ                                                                          КАК ПередаватьРасходыВДругуюОрганизацию,
	|
	|	ПараметрыУчетаОС_БУ.Подразделение                                              КАК Подразделение,
	|	ПараметрыУчетаОС_БУ.ПодразделениеАрендатора                                    КАК ПодразделениеАрендатора,
	|	ВЫБОР 
	|		КОГДА ПараметрыУчетаОС_БУ.МетодНачисленияАмортизации В (
	|					ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции),
	|					ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега))
	|			ТОГДА ПараметрыУчетаОС_БУ.ПоказательНаработки
	|		КОГДА ПараметрыУчетаОС_УУ.МетодНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|			ТОГДА ПараметрыУчетаОС_УУ.ПоказательНаработки
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                          КАК ПоказательНаработки,
	|	ПараметрыУчетаОС_УУ.ПоказательНаработки                                        КАК ПоказательНаработкиУУ,
	|	ПараметрыУчетаОС_БУ.ПорядокУчетаБУ                                             КАК ПорядокУчетаБУ,
	|	ПараметрыУчетаОС_БУ.ПорядокУчетаНУ                                             КАК ПорядокУчетаНУ,
	|	ПараметрыУчетаОС_УУ.ПорядокУчета                                               КАК ПорядокУчетаУУ,
	|	ПараметрыУчетаОС_БУ.ПрименениеЦелевогоФинансирования                           КАК ПрименениеЦелевогоФинансирования,
	|	ПараметрыУчетаОС_БУ.ПРДляВычисленияАмортизации                                 КАК ПРДляВычисленияАмортизации,
	
	|	ВЫБОР 
	|		КОГДА ПараметрыУчетаОС_БУ.Контрагент ССЫЛКА Справочник.Организации
	|				И ПараметрыУчетаОС_БУ.Контрагент <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                                          КАК РасчетыМеждуОрганизациямиАрендатор,
	
	|	ПараметрыУчетаОС_УУ.РезервПереоценкиАмортизации                                КАК РезервПереоценкиАмортизации,
	|	ПараметрыУчетаОС_БУ.РезервПереоценкиАмортизацииРегл                            КАК РезервПереоценкиАмортизацииРегл,
	|	ПараметрыУчетаОС_УУ.РезервПереоценкиСтоимости                                  КАК РезервПереоценкиСтоимости,
	|	ПараметрыУчетаОС_БУ.РезервПереоценкиСтоимостиРегл                              КАК РезервПереоценкиСтоимостиРегл,
	|	ПараметрыУчетаОС_БУ.СпециальныйКоэффициентНУ                                   КАК СпециальныйКоэффициентНУ,
	|	ПараметрыУчетаОС_БУ.СпособПоступления                                          КАК СпособПоступления,
	|	ПараметрыУчетаОС_БУ.СрокИспользованияБУ                                        КАК СрокИспользованияБУ,
	|	ПараметрыУчетаОС_БУ.СрокИспользованияБУОстаточный                              КАК СрокИспользованияБУОстаточный,
	|	ПараметрыУчетаОС_БУ.СрокИспользованияНУ                                        КАК СрокИспользованияНУ,
	|	ПараметрыУчетаОС_БУ.СрокИспользованияНУДо2009                                  КАК СрокИспользованияНУДо2009,
	|	ПараметрыУчетаОС_УУ.СрокИспользования                                          КАК СрокИспользованияУУ,
	|	ПараметрыУчетаОС_УУ.СрокИспользования                                          КАК СрокИспользованияУУОстаточный,
	|	ПараметрыУчетаОС_БУ.СтатьяДоходов                                              КАК СтатьяДоходов,
	|	ПараметрыУчетаОС_БУ.СтатьяРасходовАмортизационнойПремии                        КАК СтатьяРасходовАмортизационнойПремии,
	|	ПараметрыУчетаОС_БУ.СтатьяРасходов                                             КАК СтатьяРасходовБУ,
	|	ПараметрыУчетаОС_БУ.СтатьяРасходовНалог                                        КАК СтатьяРасходовНалог,
	|	ПараметрыУчетаОС_УУ.СтатьяРасходов                                             КАК СтатьяРасходовУУ,
	|	ПараметрыУчетаОС_БУ.СтоимостьДляВычисленияАмортизации                          КАК СтоимостьДляВычисленияАмортизацииБУ,
	|	0                                                                              КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|	0                                                                              КАК СтоимостьДляВычисленияАмортизацииУУ,
	|	ПараметрыУчетаОС_БУ.СуммаКапитальныхВложенийВключаемыхВРасходыНУ               КАК СуммаКапитальныхВложенийВключаемыхВРасходыНУ,
	|	ПараметрыУчетаОС_БУ.ТекущаяСтоимостьБУ                                         КАК ТекущаяСтоимостьБУ,
	|	ПараметрыУчетаОС_БУ.ТекущаяСтоимостьБУЦФ                                       КАК ТекущаяСтоимостьБУЦФ,
	|	ПараметрыУчетаОС_БУ.ТекущаяСтоимостьНУ                                         КАК ТекущаяСтоимостьНУ,
	|	ПараметрыУчетаОС_БУ.ТекущаяСтоимостьНУЦФ                                       КАК ТекущаяСтоимостьНУЦФ,
	|	ПараметрыУчетаОС_БУ.ТекущаяСтоимостьПР                                         КАК ТекущаяСтоимостьПР,
	|	ПараметрыУчетаОС_БУ.ТекущаяСтоимостьПРЦФ                                       КАК ТекущаяСтоимостьПРЦФ,
	|	ПараметрыУчетаОС_УУ.ТекущаяСтоимость                                           КАК ТекущаяСтоимостьУУ,
	
	// Реквизиты для проверки
	|	ПараметрыУчетаОС_УУ.Местонахождение                                            КАК МестонахождениеУУ,
	|	СчетаУчета.СчетУчета                                                           КАК СчетУчета,
	|	СчетаУчета.СчетУчетаАмортизации                                                КАК СчетУчетаАмортизации,
	|	СчетаУчета.СчетУчетаЦФ                                                         КАК СчетУчетаЦФ,
	|	СчетаУчета.СчетУчетаАмортизацииЦФ                                              КАК СчетУчетаАмортизацииЦФ,
	|	СчетаУчета.СчетЗабалансовогоУчета                                              КАК СчетЗабалансовогоУчета,
	|	СчетаУчета.СчетИзноса                                                          КАК СчетИзноса,
	|	ПараметрыУчетаОС_БУ.СчетПередачиРасходов                                       КАК СчетПередачиРасходов,
	|	ГруппыФинансовогоУчета.СчетУчета                                               КАК СчетУчетаГФУ,
	|	ГруппыФинансовогоУчета.СчетУчетаАмортизации                                    КАК СчетУчетаАмортизацииГФУ,
	|	ГруппыФинансовогоУчета.СчетУчетаЦФ                                             КАК СчетУчетаЦФГФУ,
	|	ГруппыФинансовогоУчета.СчетУчетаАмортизацииЦФ                                  КАК СчетУчетаАмортизацииЦФГФУ,
	|	ГруппыФинансовогоУчета.СчетЗабалансовогоУчета                                  КАК СчетЗабалансовогоУчетаГФУ,
	|	ЕСТЬNULL(ПараметрыУчетаОС_БУ.СуммаКапитальныхВложенийВключаемыхВРасходыНУОстаток, 0) КАК СуммаКапитальныхВложенийВключаемыхВРасходыНУОстаток
	
	|ИЗ
	|	СобственныеОС КАК ПринятыеКУчетуОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаОС_БУ КАК ПараметрыУчетаОС_БУ
	|		ПО (ПараметрыУчетаОС_БУ.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|			И (ПараметрыУчетаОС_БУ.Организация = ПринятыеКУчетуОС.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаОС_УУ КАК ПараметрыУчетаОС_УУ
	|		ПО (ПараметрыУчетаОС_УУ.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|			И (ПараметрыУчетаОС_УУ.Организация = ПринятыеКУчетуОС.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаУчета КАК СчетаУчета
	|		ПО (СчетаУчета.ВнеоборотныйАктив = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчетаИСчетаУчета КАК ГруппыФинансовогоУчета
	|		ПО ГруппыФинансовогоУчета.Ссылка = ЕСТЬNULL(ПараметрыУчетаОС_БУ.ГруппаФинансовогоУчета, ПараметрыУчетаОС_УУ.ГруппаФинансовогоУчета)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ВводОстатковПроведен
	|		ПО (ВводОстатковПроведен.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|			И (ВводОстатковПроведен.Ссылка.Организация = ПринятыеКУчетуОС.Организация)
	|			И (ВводОстатковПроведен.Ссылка.ХозяйственнаяОперация = ЕСТЬNULL(ПараметрыУчетаОС_БУ.ХозяйственнаяОперация, ПараметрыУчетаОС_УУ.ХозяйственнаяОперация))
	|			И (ВводОстатковПроведен.Ссылка.Проведен)
	|			И (&РежимПереносаДанных = ""Проверить"")
	|
	|УПОРЯДОЧИТЬ ПО
	|	ХозяйственнаяОперация,
	|	Организация,
	|	Местонахождение,
	|	Контрагент";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаИзменениеПараметровУчетаСобственныхОС(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИзменениеПараметров.Ссылка                                   КАК Ссылка,
	|	ИзменениеПараметров.НомерСтроки                              КАК НомерСтроки,
	|	ИзменениеПараметров.Подразделение                            КАК Подразделение,
	|	ИзменениеПараметров.НаправлениеДеятельности                  КАК НаправлениеДеятельности,
	|	ИзменениеПараметров.СтатьяРасходов                           КАК СтатьяРасходов,
	|	ИзменениеПараметров.АналитикаРасходов                        КАК АналитикаРасходов,
	|	ИзменениеПараметров.СтатьяРасходовАмортизационнойПремии      КАК СтатьяРасходовАмортизационнойПремии,
	|	ИзменениеПараметров.АналитикаРасходовАмортизационнойПремии   КАК АналитикаРасходовАмортизационнойПремии,
	|	ИзменениеПараметров.ПередаватьРасходыВДругуюОрганизацию      КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ИзменениеПараметров.ОрганизацияПолучательРасходов            КАК ОрганизацияПолучательРасходов,
	|	ИзменениеПараметров.СчетПередачиРасходов                     КАК СчетПередачиРасходов,
	|	ИзменениеПараметров.Коэффициент                              КАК Коэффициент
	|ИЗ
	|	Документ.ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов КАК ИзменениеПараметров
	|ГДЕ
	|	ИзменениеПараметров.Ссылка В
	|			(ВЫБРАТЬ
	|				ПараметрыУчета.СпособОтраженияРасходов
	|			ИЗ
	|				ПараметрыУчетаОС_БУ КАК ПараметрыУчета
	|			ГДЕ
	|				ПараметрыУчета.СпособОтраженияРасходовЗаданДокументом)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПараметрыУчетаОС_БУ.ДокументВводаВЭксплуатацию               КАК Ссылка,
	|	1                                                            КАК НомерСтроки,
	|	ПараметрыУчетаОС_БУ.Местонахождение                          КАК Подразделение,
	|	ПараметрыУчетаОС_БУ.НаправлениеДеятельности                  КАК НаправлениеДеятельности,
	|	ПараметрыУчетаОС_БУ.СтатьяРасходов                           КАК СтатьяРасходов,
	|	ПараметрыУчетаОС_БУ.АналитикаРасходов                        КАК АналитикаРасходов,
	|	ПараметрыУчетаОС_БУ.СтатьяРасходовАмортизационнойПремии      КАК СтатьяРасходовАмортизационнойПремии,
	|	ПараметрыУчетаОС_БУ.АналитикаРасходовАмортизационнойПремии   КАК АналитикаРасходовАмортизационнойПремии,
	|	ИСТИНА                                                       КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПараметрыУчетаОС_БУ.ОрганизацияПолучательРасходов            КАК ОрганизацияПолучательРасходов,
	|	ПараметрыУчетаОС_БУ.СчетПередачиРасходов                     КАК СчетПередачиРасходов,
	|	1                                                            КАК Коэффициент
	|ИЗ
	|	ПараметрыУчетаОС_БУ КАК ПараметрыУчетаОС_БУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаОС_УУ КАК ПараметрыУчетаОС_УУ
	|		ПО ПараметрыУчетаОС_УУ.ОсновноеСредство = ПараметрыУчетаОС_БУ.ОсновноеСредство
	|			И (ПараметрыУчетаОС_УУ.Организация = ПараметрыУчетаОС_БУ.Организация)
	|ГДЕ
	|	ПараметрыУчетаОС_БУ.ПередаватьРасходыВДругуюОрганизацию
	|	И ЕСТЬNULL(ПараметрыУчетаОС_БУ.ОтражатьВРеглУчете, ЛОЖЬ)
	|				И ЕСТЬNULL(ПараметрыУчетаОС_УУ.ОтражатьВУпрУчете, ЛОЖЬ)
	|				И &ИспользоватьДанныеМеждународногоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровОС) КАК ХозяйственнаяОперация,
	|	&Период                                           КАК Дата,
	|	НовыйДокумент.Ссылка                              КАК Ссылка,
	|	ИСТИНА                                            КАК ОтражатьВРеглУчете,
	|	ЕСТЬNULL(ПараметрыУчетаОС_УУ.ОтражатьВУпрУчете, ЛОЖЬ) КАК ОтражатьВУпрУчете,
	|	ПараметрыУчетаОС_БУ.Организация                   КАК Организация,
	|	ПараметрыУчетаОС_БУ.ОсновноеСредство              КАК ОсновноеСредство,
	|	ПараметрыУчетаОС_БУ.СпособОтраженияРасходов       КАК ДокументОснование,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ИзменениеПараметровОС.ДокументОснование КАК Документ.ПринятиеКУчетуОС).ВключитьАмортизационнуюПремиюВСоставРасходов, ЛОЖЬ) КАК ВключитьАмортизационнуюПремиюВСоставРасходов
	|ИЗ
	|	ПараметрыУчетаОС_БУ КАК ПараметрыУчетаОС_БУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ИзменениеПараметровОС
	|		ПО (ИзменениеПараметровОС.Ссылка = ПараметрыУчетаОС_БУ.СпособОтраженияРасходов)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаОС_УУ КАК ПараметрыУчетаОС_УУ
	|		ПО ПараметрыУчетаОС_УУ.ОсновноеСредство = ПараметрыУчетаОС_БУ.ОсновноеСредство
	|			И (ПараметрыУчетаОС_УУ.Организация = ПараметрыУчетаОС_БУ.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС2_4 КАК НовыйДокумент
	|		ПО (НовыйДокумент.ДокументОснование = ПараметрыУчетаОС_БУ.СпособОтраженияРасходов)
	|			И (НовыйДокумент.Проведен)
	|			И (&РежимПереносаДанных = ""Проверить"")
	|ГДЕ
	|	ПараметрыУчетаОС_БУ.СпособОтраженияРасходовЗаданДокументом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровОС) КАК ХозяйственнаяОперация,
	|	&Период                                           КАК Дата,
	|	НовыйДокумент.Ссылка                              КАК Ссылка,
	|	ИСТИНА                                            КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                              КАК ОтражатьВУпрУчете,
	|	ПараметрыУчетаОС_БУ.Организация                   КАК Организация,
	|	ПараметрыУчетаОС_БУ.ОсновноеСредство              КАК ОсновноеСредство,
	|	ПараметрыУчетаОС_БУ.ДокументВводаВЭксплуатацию    КАК ДокументОснование,
	|	ПараметрыУчетаОС_БУ.ВключитьАмортизационнуюПремиюВСоставРасходов КАК ВключитьАмортизационнуюПремиюВСоставРасходов
	|ИЗ
	|	ПараметрыУчетаОС_БУ КАК ПараметрыУчетаОС_БУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаОС_УУ КАК ПараметрыУчетаОС_УУ
	|		ПО ПараметрыУчетаОС_УУ.ОсновноеСредство = ПараметрыУчетаОС_БУ.ОсновноеСредство
	|			И (ПараметрыУчетаОС_УУ.Организация = ПараметрыУчетаОС_БУ.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС2_4 КАК НовыйДокумент
	|		ПО (НовыйДокумент.ДокументОснование = ПараметрыУчетаОС_БУ.ДокументВводаВЭксплуатацию)
	|			И (НовыйДокумент.Проведен)
	|			И (&РежимПереносаДанных = ""Проверить"")
	|ГДЕ
	|	ПараметрыУчетаОС_БУ.ПередаватьРасходыВДругуюОрганизацию
	|	И ЕСТЬNULL(ПараметрыУчетаОС_БУ.ОтражатьВРеглУчете, ЛОЖЬ)
	|	И ЕСТЬNULL(ПараметрыУчетаОС_УУ.ОтражатьВУпрУчете, ЛОЖЬ)
	|	И &ИспользоватьДанныеМеждународногоУчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументОснование";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаПараметрыУчетаОС_БУ(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапросаОстаткиПоСчетамУчетаОС_БУ(ТекстыЗапроса);
	ТекстЗапросаПереоценкаСтоимостиОС(ТекстыЗапроса);
	ТекстЗапросаПереоценкаАмортизацииОС(ТекстыЗапроса);
	ТекстЗапросаПараметрыУчетаПереданныхВАрендуОС(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.РезервПереоценкиСтоимости КАК РезервПереоценкиСтоимости,
	|	ПервоначальныеСведенияОС.РезервПереоценкиАмортизации КАК РезервПереоценкиАмортизации,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И НЕ Регистратор ССЫЛКА Документ.ИзменениеПараметровОС2_4
	|				И (ОсновноеСредство, Организация) В
	|					(ВЫБРАТЬ
	|						СписокАктивов.ВнеоборотныйАктив,
	|						СписокАктивов.Организация
	|					ИЗ
	|						СобственныеОС КАК СписокАктивов)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Организация КАК Организация,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение,
	|	МестонахождениеОС.АдресМестонахождения КАК АдресМестонахождения
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И (ОсновноеСредство, Организация) В
	|					(ВЫБРАТЬ
	|						СписокАктивов.ВнеоборотныйАктив,
	|						СписокАктивов.Организация
	|					ИЗ
	|						СобственныеОС КАК СписокАктивов)) КАК МестонахождениеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПорядокУчетаОС.ПоказательНаработки КАК ПоказательНаработки,
	|	ПорядокУчетаОС.ОбъемНаработки КАК ОбъемНаработки
	|ПОМЕСТИТЬ ПорядокУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И НЕ Регистратор ССЫЛКА Документ.ИзменениеПараметровОС2_4
	|				И (ОсновноеСредство, Организация) В
	|					(ВЫБРАТЬ
	|						СписокАктивов.ВнеоборотныйАктив,
	|						СписокАктивов.Организация
	|					ИЗ
	|						СобственныеОС КАК СписокАктивов)) КАК ПорядокУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	ПорядокУчетаОСБУ.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	ПорядокУчетаОСБУ.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|	ПорядокУчетаОСБУ.СтатьяРасходовБУ КАК СтатьяРасходов,
	|	ПорядокУчетаОСБУ.АналитикаРасходовБУ КАК АналитикаРасходов,
	|	ПорядокУчетаОСБУ.СтатьяРасходовАмортизационнойПремии КАК СтатьяРасходовАмортизационнойПремии,
	|	ПорядокУчетаОСБУ.АналитикаРасходовАмортизационнойПремии КАК АналитикаРасходовАмортизационнойПремии,
	|	ПорядокУчетаОСБУ.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов,
	|	ПорядокУчетаОСБУ.СчетПередачиРасходов КАК СчетПередачиРасходов,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ КАК СпособОтраженияРасходов,
	|	НЕ ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ В (&ПустыеСпособыОтраженияРасходов) КАК СпособОтраженияРасходовЗаданДокументом,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовАмортизационнойПремии КАК СпособОтраженияРасходовАмортизационнойПремии,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество КАК НедвижимоеИмущество,
	|	ПорядокУчетаОСБУ.НалогообложениеНДС КАК НалогообложениеНДС
	|ПОМЕСТИТЬ ПорядокУчетаОСБУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И НЕ Регистратор ССЫЛКА Документ.ИзменениеПараметровОС2_4
	|				И (ОсновноеСредство, Организация) В
	|					(ВЫБРАТЬ
	|						СписокАктивов.ВнеоборотныйАктив,
	|						СписокАктивов.Организация
	|					ИЗ
	|						СобственныеОС КАК СписокАктивов)) КАК ПорядокУчетаОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииБУ.Организация КАК Организация,
	|	ПараметрыАмортизацииБУ.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользованияБУ,
	|	ПараметрыАмортизацииБУ.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	ПараметрыАмортизацииБУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииБУ.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииБУ.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииБУ.КоэффициентАмортизацииБУ КАК КоэффициентАмортизацииБУ,
	|	ПараметрыАмортизацииБУ.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииБУ.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ПараметрыАмортизацииБУ.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ПараметрыАмортизацииБУ.СпециальныйКоэффициент КАК СпециальныйКоэффициент
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСБУ
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|			&Период,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И НЕ Регистратор ССЫЛКА Документ.ИзменениеПараметровОС2_4
	|				И (ОсновноеСредство, Организация) В
	|					(ВЫБРАТЬ
	|						СписокАктивов.ВнеоборотныйАктив,
	|						СписокАктивов.Организация
	|					ИЗ
	|						СобственныеОС КАК СписокАктивов)) КАК ПараметрыАмортизацииБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансирования.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыЦелевогоФинансирования.ПрименениеЦелевогоФинансирования КАК ПрименениеЦелевогоФинансирования,
	|	ПараметрыЦелевогоФинансирования.СчетУчета КАК СчетУчета,
	|	ПараметрыЦелевогоФинансирования.СчетАмортизации КАК СчетАмортизации,
	|	ПараметрыЦелевогоФинансирования.СтатьяДоходов КАК СтатьяДоходов,
	|	ПараметрыЦелевогоФинансирования.АналитикаДоходов КАК АналитикаДоходов
	|ПОМЕСТИТЬ ПараметрыЦелевогоФинансированияОС
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокАктивов.ВнеоборотныйАктив
	|					ИЗ
	|						СобственныеОС КАК СписокАктивов)) КАК ПараметрыЦелевогоФинансирования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходовНалоги.ОсновноеСредство КАК ОсновноеСредство,
	|	СпособыОтраженияРасходовНалоги.Организация КАК Организация,
	|	МАКСИМУМ(СпособыОтраженияРасходовНалоги.СтатьяРасходов) КАК СтатьяРасходов,
	|	МАКСИМУМ(СпособыОтраженияРасходовНалоги.СпособОтраженияРасходовЗаданДокументом) КАК СпособОтраженияРасходовЗаданДокументом,
	|	МАКСИМУМ(СпособыОтраженияРасходовНалоги.СпособОтраженияРасходов) КАК СпособОтраженияРасходов,
	|	МАКСИМУМ(СпособыОтраженияРасходовНалоги.АналитикаРасходов) КАК АналитикаРасходов
	|ПОМЕСТИТЬ СпособыОтраженияРасходовПоИмущественнымНалогам
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоИмущественнымНалогам.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И (ОсновноеСредство, Организация) В
	|					(ВЫБРАТЬ
	|						СобственныеОС.ВнеоборотныйАктив,
	|						СобственныеОС.Организация
	|					ИЗ
	|						СобственныеОС КАК СобственныеОС)) КАК СпособыОтраженияРасходовНалоги
	|
	|СГРУППИРОВАТЬ ПО
	|	СпособыОтраженияРасходовНалоги.ОсновноеСредство,
	|	СпособыОтраженияРасходовНалоги.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(ПараметрыАмортизацииОСБУ.Период, ДЕНЬ)) КАК Период
	|ПОМЕСТИТЬ ПоследнееИзменениеПараметровАмортизации
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеОС КАК СписаниеОС
	|		ПО СписаниеОС.Ссылка = ПараметрыАмортизацииОСБУ.Регистратор
	|ГДЕ
	|	ПараметрыАмортизацииОСБУ.Период < &Период
	|	И ПараметрыАмортизацииОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|	И (ПараметрыАмортизацииОСБУ.ОсновноеСредство, ПараметрыАмортизацииОСБУ.Организация) В
	|			(ВЫБРАТЬ
	|				СобственныеОС.ВнеоборотныйАктив,
	|				СобственныеОС.Организация
	|			ИЗ
	|				СобственныеОС КАК СобственныеОС)
	|	И ТИПЗНАЧЕНИЯ(ПараметрыАмортизацииОСБУ.Регистратор) В (
	|			ТИП(Документ.МодернизацияОС), 
	|			ТИП(Документ.СписаниеОС))
	|	И ЕСТЬNULL(СписаниеОС.ЧастичнаяЛиквидация, ИСТИНА)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыАмортизацииОСБУ.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	
	// Шапка документа
	|	ИСТИНА                             КАК ОтражатьВРеглУчете,
	|	ПринятыеКУчетуОС.ВнеоборотныйАктив КАК ОсновноеСредство,
	|	ПринятыеКУчетуОС.Организация       КАК Организация,
	|	ВЫБОР
	|		КОГДА НЕ ПараметрыУчетаПереданныхВАрендуОС.ОсновноеСредство ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ АрендованныеОС.Договор В (&ПустойДоговор)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС)
	|				КОНЕЦ
	|		КОГДА НЕ АрендованныеОС.Договор В (&ПустойДоговор)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ЕСТЬNULL(ПараметрыУчетаПереданныхВАрендуОС.Арендатор, НЕОПРЕДЕЛЕНО)  КАК Контрагент,
	|	ЕСТЬNULL(МестонахождениеОС.Местонахождение, 
	|			ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))      КАК Местонахождение,
	|	ЕСТЬNULL(МестонахождениеОС.АдресМестонахождения, """")               КАК АдресМестонахождения,

	// Параметры учета
	|	ЕСТЬNULL(ДатыПринятияКУчету.ДатаПринятияКУчетуБУ, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПринятияКУчету,
	|	ДатыПринятияКУчету.ДокументВводаВЭксплуатациюБУ                      КАК ДокументВводаВЭксплуатацию,
	|	ГруппыФинансовогоУчета.ГруппаФинансовогоУчета                        КАК ГруппаФинансовогоУчета,
	|	ПорядокУчетаОС.НаправлениеДеятельности                               КАК НаправлениеДеятельности,
	|	АрендованныеОС.Договор                                               КАК Договор,
	|	ПервоначальныеСведенияОС.СпособПоступления                           КАК СпособПоступления,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ                              КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаНУ                              КАК ПорядокУчетаНУ,
	|	ПараметрыЦелевогоФинансирования.ПрименениеЦелевогоФинансирования     КАК ПрименениеЦелевогоФинансирования,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа                               КАК АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество                                 КАК НедвижимоеИмущество,

	// Учет у арендодателя
	|	МестонахождениеОС.Местонахождение                                    КАК Подразделение,
	|	МестонахождениеОС.МОЛ                                                КАК МОЛ,

	// Учет у арендатора
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПараметрыУчетаПереданныхВАрендуОС.ЗалоговаяСтоимость, 0) <> 0
	|			ТОГДА ПараметрыУчетаПереданныхВАрендуОС.ЗалоговаяСтоимость
	|		КОГДА НЕ ПараметрыУчетаПереданныхВАрендуОС.ОсновноеСредство ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(ОстаточнаяСтоимостьЗабаланс.СуммаОстатокДт, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                                КАК ЗалоговаяСтоимость,
	|	ПараметрыУчетаПереданныхВАрендуОС.ПодразделениеАрендатора            КАК ПодразделениеАрендатора,
	|	NULL                                                                 КАК МОЛАрендатора,

	// Раздельный учет НДС
	|	ДатыПринятияКУчету.ВариантРаздельногоУчетаНДС КАК ВариантРаздельногоУчетаНДС,
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) КАК НалогообложениеНДС,

	// Восстановительная стоимость
	|	ЕСТЬNULL(ОстаточнаяСтоимость.СуммаОстатокДт, 0)                      КАК ТекущаяСтоимостьБУ,
	|	ЕСТЬNULL(ОстаточнаяСтоимостьЦФ.СуммаОстатокДт, 0)                    КАК ТекущаяСтоимостьБУЦФ,
	|	ЕСТЬNULL(ОстаточнаяСтоимость.СуммаНУОстатокДт, 0)                    КАК ТекущаяСтоимостьНУ,
	|	ЕСТЬNULL(ОстаточнаяСтоимостьЦФ.СуммаНУОстатокДт, 0)                  КАК ТекущаяСтоимостьНУЦФ,
	|	ЕСТЬNULL(ОстаточнаяСтоимость.СуммаПРОстатокДт, 0)                    КАК ТекущаяСтоимостьПР,
	|	ЕСТЬNULL(ОстаточнаяСтоимостьЦФ.СуммаПРОстатокДт, 0)                  КАК ТекущаяСтоимостьПРЦФ,

	// Первоначальная стоимость
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ, 0)      КАК ПервоначальнаяСтоимостьБУ,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ, 0)      КАК ПервоначальнаяСтоимостьНУ,
	|	ЕСТЬNULL(ДатыПринятияКУчету.ПервоначальнаяСтоимостьПР, 0)            КАК ПервоначальнаяСтоимостьПР,

	// Накопленная амортизация
	|	ВЫБОР 
	|		КОГДА ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|			ТОГДА ЕСТЬNULL(НачисленнаяАмортизация.СуммаОстатокДт, 0)
	|		ИНАЧЕ ЕСТЬNULL(НачисленнаяАмортизация.СуммаОстатокКт, 0)
	|	КОНЕЦ                                                                КАК НакопленнаяАмортизацияБУ,
	|	ВЫБОР 
	|		КОГДА ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(НачисленнаяАмортизацияЦФ.СуммаОстатокКт, 0)
	|	КОНЕЦ                                                                КАК НакопленнаяАмортизацияБУЦФ,
	|	ВЫБОР 
	|		КОГДА ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(НачисленнаяАмортизация.СуммаНУОстатокКт, 0)
	|	КОНЕЦ                                                                КАК НакопленнаяАмортизацияНУ,
	|	ВЫБОР 
	|		КОГДА ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(НачисленнаяАмортизацияЦФ.СуммаНУОстатокКт, 0)
	|	КОНЕЦ                                                                КАК НакопленнаяАмортизацияНУЦФ,
	|	ВЫБОР 
	|		КОГДА ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(НачисленнаяАмортизация.СуммаПРОстатокКт, 0)
	|	КОНЕЦ                                                                КАК НакопленнаяАмортизацияПР,
	|	ВЫБОР 
	|		КОГДА ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(НачисленнаяАмортизацияЦФ.СуммаПРОстатокКт, 0)
	|	КОНЕЦ                                                                КАК НакопленнаяАмортизацияПРЦФ,

	// События
	|	ЕСТЬNULL(ПоследнееИзменениеПараметровАмортизации.Период, ДатыПринятияКУчету.ДатаМодернизации) КАК ДатаИзмененияПараметровАмортизации,
	|	ЕСТЬNULL(ПоследнееИзменениеПараметровАмортизации.Период, ДатыПринятияКУчету.ДатаМодернизации) <> ДАТАВРЕМЯ(1, 1, 1) КАК ЕстьИзменениеПараметровАмортизации,
	|	ЕСТЬNULL(ПереоценкаАмортизацииОС.РезервПереоценкиАмортизацииРегл, 0) <> 0
	|		ИЛИ ЕСТЬNULL(ПереоценкаСтоимостиОС.РезервПереоценкиСтоимостиРегл, 0) <> 0 КАК ЕстьРезервПереоценкиРегл,
	|	ЕСТЬNULL(ПереоценкаАмортизацииОС.РезервПереоценкиАмортизацииРегл, 0) КАК РезервПереоценкиАмортизацииРегл,
	|	ЕСТЬNULL(ПереоценкаСтоимостиОС.РезервПереоценкиСтоимостиРегл, 0)     КАК РезервПереоценкиСтоимостиРегл,

	// Амортизация
	|	ПорядокУчетаОСБУ.НачислятьАмортизациюБУ                              КАК НачислятьАмортизациюБУ,
	|	ПорядокУчетаОСБУ.НачислятьАмортизациюНУ                              КАК НачислятьАмортизациюНУ,
	|	ПорядокУчетаОСБУ.НачислятьАмортизациюБУ
	|		И ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) КАК НачислятьИзносБУ,
	|
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ                КАК МетодНачисленияАмортизации,
	|	ПараметрыАмортизацииБУ.СтоимостьДляВычисленияАмортизации             КАК СтоимостьДляВычисленияАмортизации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоследнееИзменениеПараметровАмортизации.Период, ДатыПринятияКУчету.ДатаМодернизации) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПараметрыАмортизацииБУ.ПРДляВычисленияАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                                КАК ПРДляВычисленияАмортизации,
	|	ПараметрыАмортизацииБУ.СрокПолезногоИспользованияБУ                  КАК СрокИспользованияБУ,
	|	ПараметрыАмортизацииБУ.СрокИспользованияДляВычисленияАмортизации     КАК СрокИспользованияБУОстаточный,
	|	ПараметрыАмортизацииБУ.СрокПолезногоИспользованияНУ                  КАК СрокИспользованияНУ,
	|	ПараметрыАмортизацииОСБУ.ГрафикАмортизации                           КАК ГрафикАмортизации,

	|	ПорядокУчетаОС.ПоказательНаработки                                   КАК ПоказательНаработки,
	|	ПорядокУчетаОС.ОбъемНаработки                                        КАК ОбъемНаработки,
	|	ПараметрыАмортизацииБУ.ОбъемПродукцииРаботДляВычисленияАмортизации   КАК ОбъемНаработкиОстаточный,
	
	|	ПараметрыАмортизацииБУ.КоэффициентАмортизацииБУ                      КАК КоэффициентАмортизацииБУ,
	|	ПараметрыАмортизацииБУ.КоэффициентУскорения                          КАК КоэффициентУскоренияБУ,
	|	ПараметрыАмортизацииБУ.СпециальныйКоэффициент                        КАК СпециальныйКоэффициентНУ,

	// Сведения об использовании до 2009 года
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.АмортизацияДо2009, 0)                  КАК НакопленнаяАмортизацияНУДо2009,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009,0)  КАК СрокИспользованияНУДо2009,

	// Отражение расходов
	|	ПорядокУчетаОСБУ.СтатьяРасходов                                       КАК СтатьяРасходов,
	|	ПорядокУчетаОСБУ.АналитикаРасходов                                    КАК АналитикаРасходов,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовЗаданДокументом               КАК СпособОтраженияРасходовЗаданДокументом,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходов                              КАК СпособОтраженияРасходов,

	// Имущественные налоги
	|	СпособыОтраженияРасходовНалоги.СтатьяРасходов                         КАК СтатьяРасходовНалог,
	|	СпособыОтраженияРасходовНалоги.АналитикаРасходов                      КАК АналитикаРасходовНалог,
	|	СпособыОтраженияРасходовНалоги.СпособОтраженияРасходовЗаданДокументом КАК СпособОтраженияРасходовЗаданДокументомНалоги,
	|	СпособыОтраженияРасходовНалоги.СпособОтраженияРасходов                КАК СпособОтраженияРасходовНалоги,

	// Передача расходов
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.ПередаватьРасходыВДругуюОрганизацию, ЛОЖЬ)  КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов                        КАК ОрганизацияПолучательРасходов,
	|	ПорядокУчетаОСБУ.СчетПередачиРасходов                                 КАК СчетПередачиРасходов,

	// Амортизационная премия
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизационнаяПремия.СуммаНУОстатокДт, 0) <> 0 
	|			ТОГДА ДатыПринятияКУчету.СтатьяРасходовАмортизационнойПремии 
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 
	|	КОНЕЦ                                                                КАК СтатьяРасходовАмортизационнойПремии,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизационнаяПремия.СуммаНУОстатокДт, 0) <> 0
	|			ТОГДА ДатыПринятияКУчету.АналитикаРасходовАмортизационнойПремии 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ                                                                КАК АналитикаРасходовАмортизационнойПремии,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизационнаяПремия.СуммаНУОстатокДт, 0) <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                                КАК ВключитьАмортизационнуюПремиюВСоставРасходов,
	|	ЕСТЬNULL(АмортизационнаяПремия.СуммаНУОстатокДт, 0)                  КАК СуммаКапитальныхВложенийВключаемыхВРасходыНУ,
	|	ЕСТЬNULL(АмортизационнаяПремия.СуммаНУОстатокДт, 0)                  КАК СуммаКапитальныхВложенийВключаемыхВРасходыНУОстаток,

	// Целевое финансирование
	|	ПараметрыЦелевогоФинансирования.СтатьяДоходов                        КАК СтатьяДоходов,
	|	ПараметрыЦелевогоФинансирования.АналитикаДоходов                     КАК АналитикаДоходов
	|ПОМЕСТИТЬ ПараметрыУчетаОС_БУ
	|ИЗ
	|	СобственныеОС КАК ПринятыеКУчетуОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО (ПервоначальныеСведенияОС.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|			И (ПервоначальныеСведенияОС.Организация = ПринятыеКУчетуОС.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО (МестонахождениеОС.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|			И (МестонахождениеОС.Организация = ПринятыеКУчетуОС.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО (ПорядокУчетаОС.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО (ПорядокУчетаОСБУ.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|			И (ПорядокУчетаОСБУ.Организация = ПринятыеКУчетуОС.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииБУ
	|		ПО (ПараметрыАмортизацииБУ.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|			И (ПараметрыАмортизацииБУ.Организация = ПринятыеКУчетуОС.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансирования
	|		ПО (ПараметрыЦелевогоФинансирования.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходовПоИмущественнымНалогам КАК СпособыОтраженияРасходовНалоги
	|		ПО (СпособыОтраженияРасходовНалоги.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|			И (СпособыОтраженияРасходовНалоги.Организация = ПринятыеКУчетуОС.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО (ПараметрыАмортизацииОСБУ.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|			И (ПараметрыАмортизацииОСБУ.Организация = ПринятыеКУчетуОС.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчета КАК ГруппыФинансовогоУчета
	|		ПО (ГруппыФинансовогоУчета.ВнеоборотныйАктив = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаОС КАК ОстаточнаяСтоимость
	|		ПО (ОстаточнаяСтоимость.ВнеоборотныйАктив = ГруппыФинансовогоУчета.ВнеоборотныйАктив)
	|			И (ОстаточнаяСтоимость.Счет = ГруппыФинансовогоУчета.СчетУчета)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаОС КАК ОстаточнаяСтоимостьЦФ
	|		ПО (ОстаточнаяСтоимостьЦФ.ВнеоборотныйАктив = ГруппыФинансовогоУчета.ВнеоборотныйАктив)
	|			И (ОстаточнаяСтоимостьЦФ.Счет = ГруппыФинансовогоУчета.СчетУчетаЦФ)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаОС КАК НачисленнаяАмортизация
	|		ПО (НачисленнаяАмортизация.ВнеоборотныйАктив = ГруппыФинансовогоУчета.ВнеоборотныйАктив)
	|			И (ПервоначальныеСведенияОС.ПорядокУчетаБУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|					И НачисленнаяАмортизация.Счет = ГруппыФинансовогоУчета.СчетУчетаАмортизации
	|				ИЛИ ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|					И НачисленнаяАмортизация.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств))
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаОС КАК НачисленнаяАмортизацияЦФ
	|		ПО (НачисленнаяАмортизацияЦФ.ВнеоборотныйАктив = ГруппыФинансовогоУчета.ВнеоборотныйАктив)
	|			И (НачисленнаяАмортизацияЦФ.Счет = ГруппыФинансовогоУчета.СчетУчетаАмортизацииЦФ)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаОС КАК ОстаточнаяСтоимостьЗабаланс
	|		ПО (ОстаточнаяСтоимостьЗабаланс.ВнеоборотныйАктив = ГруппыФинансовогоУчета.ВнеоборотныйАктив)
	|			И (ОстаточнаяСтоимостьЗабаланс.Счет = ГруппыФинансовогоУчета.СчетЗабалансовогоУчета)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаОС КАК АмортизационнаяПремия
	|		ПО (АмортизационнаяПремия.ВнеоборотныйАктив = ГруппыФинансовогоУчета.ВнеоборотныйАктив)
	|			И (АмортизационнаяПремия.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения))
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПереоценкаСтоимостиОС КАК ПереоценкаСтоимостиОС
	|		ПО (ПереоценкаСтоимостиОС.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПереоценкаАмортизацииОС КАК ПереоценкаАмортизацииОС
	|		ПО (ПереоценкаАмортизацииОС.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыПринятияКУчету КАК ДатыПринятияКУчету
	|		ПО (ДатыПринятияКУчету.ВнеоборотныйАктив = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследнееИзменениеПараметровАмортизации КАК ПоследнееИзменениеПараметровАмортизации
	|		ПО (ПоследнееИзменениеПараметровАмортизации.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ АрендованныеОС КАК АрендованныеОС
	|		ПО (АрендованныеОС.ВнеоборотныйАктив = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаПереданныхВАрендуОС КАК ПараметрыУчетаПереданныхВАрендуОС
	|		ПО (ПараметрыУчетаПереданныхВАрендуОС.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|			И (ПараметрыУчетаПереданныхВАрендуОС.Организация = ПринятыеКУчетуОС.Организация)
	|ГДЕ
	|	ПринятыеКУчетуОС.ОтражатьВРеглУчете
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаПараметрыУчетаПереданныхВАрендуОС(ТекстыЗапроса)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПереданныеВАрендуПоследнее.ОсновноеСредство КАК ОсновноеСредство,
	|	ПереданныеВАрендуПоследнее.Организация КАК Организация,
	|	ЕСТЬNULL(ВводОстатков.Контрагент, ПередачаОСВАренду.Арендатор) КАК Арендатор,
	|	ЕСТЬNULL(ВводОстатков.ПодразделениеАрендатора, ПередачаОСВАренду.ПодразделениеАрендатора) КАК ПодразделениеАрендатора,
	|	ЕСТЬNULL(ВводОстатков.ЗалоговаяСтоимость, ПередачаОСВАрендуОС.ЗалоговаяСтоимость) КАК ЗалоговаяСтоимость
	|ПОМЕСТИТЬ ПараметрыУчетаПереданныхВАрендуОС
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ПереданныеВАренду.Период) КАК Период,
	|		ПереданныеВАренду.ОсновноеСредство КАК ОсновноеСредство,
	|		ПереданныеВАренду.Организация КАК Организация
	|	ИЗ
	|		РегистрСведений.МестонахождениеОС КАК ПереданныеВАренду
	|	ГДЕ
	|		ПереданныеВАренду.Активность
	|		И ПереданныеВАренду.Период <= &Период
	|		И (ПереданныеВАренду.Регистратор ССЫЛКА Документ.ПередачаОСВАренду
	|				ИЛИ ПереданныеВАренду.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|				ИЛИ ПереданныеВАренду.Регистратор ССЫЛКА Документ.ВозвратОСИзАренды)
	|		И (ПереданныеВАренду.ОсновноеСредство, ПереданныеВАренду.Организация) В
	|				(ВЫБРАТЬ
	|					ПринятыеКУчетуОС.ВнеоборотныйАктив,
	|					ПринятыеКУчетуОС.Организация
	|				ИЗ
	|					СобственныеОС КАК ПринятыеКУчетуОС)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПереданныеВАренду.ОсновноеСредство,
	|		ПереданныеВАренду.Организация) КАК ПереданныеВАрендуПоследнее
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС КАК МестонахождениеОС
	|		ПО (МестонахождениеОС.Организация = ПереданныеВАрендуПоследнее.Организация)
	|			И (МестонахождениеОС.ОсновноеСредство = ПереданныеВАрендуПоследнее.ОсновноеСредство)
	|			И (МестонахождениеОС.Период = ПереданныеВАрендуПоследнее.Период)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаОСВАренду КАК ПередачаОСВАренду
	|		ПО (ПередачаОСВАренду.Ссылка = МестонахождениеОС.Регистратор)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаОСВАренду.ОС КАК ПередачаОСВАрендуОС
	|		ПО (ПередачаОСВАрендуОС.Ссылка = МестонахождениеОС.Регистратор)
	|			И (ПередачаОСВАрендуОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ВводОстатков
	|		ПО (ВводОстатков.Ссылка = МестонахождениеОС.Регистратор)
	|			И (ВводОстатков.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство)
	|			И (ВводОстатков.Ссылка.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе)))
	|
	|ГДЕ
	|	(НЕ ПередачаОСВАренду.Ссылка ЕСТЬ NULL
	|			ИЛИ НЕ ВводОстатков.Ссылка ЕСТЬ NULL)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаПараметрыУчетаОС_УУ(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапросаОстаткиПоСчетамУчетаОС_УУ(ТекстыЗапроса, ПараметрыОбработчика);
	
	Если ПараметрыОбработчика.ИспользоватьДанныеМеждународногоУчета Тогда
		
		//++ НЕ УТКА
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПервоначальныеСведения.ОсновноеСредство КАК ОсновноеСредство,
		|	ПервоначальныеСведения.Организация КАК Организация,
		|	ПервоначальныеСведения.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ПервоначальныеСведения.Подразделение КАК Подразделение,
		|	ПервоначальныеСведения.Состояние КАК Состояние,
		|	ПервоначальныеСведения.СчетУчета КАК СчетУчета,
		|	ПервоначальныеСведения.ВидАктива КАК ВидАктива,
		|	ПервоначальныеСведения.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ПервоначальныеСведения.ЛиквидационнаяСтоимостьПредставления КАК ЛиквидационнаяСтоимостьПредставления,
		|	ПервоначальныеСведения.ПорядокУчета КАК ПорядокУчета,
		|	ПервоначальныеСведения.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
		|	ПервоначальныеСведения.СчетАмортизации КАК СчетАмортизации,
		|	ПервоначальныеСведения.СрокИспользования КАК СрокИспользования,
		|	ПервоначальныеСведения.ПоказательНаработки КАК ПоказательНаработки,
		|	ПервоначальныеСведения.ОбъемНаработки КАК ОбъемНаработки,
		|	ПервоначальныеСведения.КоэффициентУскорения КАК КоэффициентУскорения,
		|	ПервоначальныеСведения.СтатьяРасходов КАК СтатьяРасходов,
		|	ПервоначальныеСведения.АналитикаРасходов КАК АналитикаРасходов
		|ПОМЕСТИТЬ ОсновныеСредстваМеждународныйУчет
		|ИЗ
		|	РегистрСведений.ОсновныеСредстваМеждународныйУчет.СрезПоследних(
		|			&Период,
		|			ОсновноеСредство В
		|				(ВЫБРАТЬ
		|					СписокАктивов.ВнеоборотныйАктив
		|				ИЗ
		|					ПринятыеКУчетуОС_МУ КАК СписокАктивов)) КАК ПервоначальныеСведения
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		
		// Шапка документа
		|	ИСТИНА                                                     КАК ОтражатьВУпрУчете,
		|	ПринятыеКУчетуОС.ВнеоборотныйАктив                         КАК ОсновноеСредство,
		|	ПервоначальныеСведения.Организация                         КАК Организация,
		|	ПервоначальныеСведения.НаправлениеДеятельности             КАК НаправлениеДеятельности,
		|	ПервоначальныеСведения.Подразделение                       КАК Местонахождение,
		|	""""                                                       КАК АдресМестонахождения,
		|	ВЫБОР 
		|		КОГДА НЕ ПараметрыУчетаОС_БУ.ХозяйственнаяОперация ЕСТЬ NULL
		|			ТОГДА ПараметрыУчетаОС_БУ.ХозяйственнаяОперация
		|		КОГДА ПервоначальныеСведения.СчетУчета.Забалансовый
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств) 
		|	КОНЕЦ                                                      КАК ХозяйственнаяОперация,
		
		// Параметры учета
		|	ДатыПринятияКУчету.ДатаПринятияКУчетуУУ                    КАК ДатаПринятияКУчету,
		|	ДатыПринятияКУчету.ДокументВводаВЭксплуатациюУУ            КАК ДокументВводаВЭксплуатацию,
		|	ГруппыФинансовогоУчета.ГруппаФинансовогоУчета              КАК ГруппаФинансовогоУчета,
		|	ПервоначальныеСведения.ЛиквидационнаяСтоимость             КАК ЛиквидационнаяСтоимость,
		|	ПервоначальныеСведения.ПорядокУчета                        КАК ПорядокУчета,
			
		// Раздельный учет НДС
		|	NULL                                                       КАК ВариантРаздельногоУчетаНДС,
		|	NULL                                                       КАК НалогообложениеНДС,
		
		// Восстановительная стоимость
		|	ЕСТЬNULL(ОстаточнаяСтоимость.СуммаОстатокДт, 0)            КАК ТекущаяСтоимость,
		
		// Первоначальная стоимость
		|	ЕСТЬNULL(ОстаточнаяСтоимость.СуммаОстатокДт, 0)            КАК ПервоначальнаяСтоимость,
		
		// Накопленная амортизация
		|	ЕСТЬNULL(НачисленнаяАмортизация.СуммаОстатокКт, 0)         КАК НакопленнаяАмортизация,
		
		// События
		|	ЛОЖЬ                                                       КАК ЕстьИзменениеПараметровАмортизации,
		|	ДАТАВРЕМЯ(1, 1, 1)                                         КАК ДатаИзмененияПараметровАмортизации,
		|	ЛОЖЬ                                                       КАК ЕстьРезервПереоценки,
		|	0                                                          КАК РезервПереоценкиАмортизации,
		|	0                                                          КАК РезервПереоценкиСтоимости,
		
		// Амортизация
		|	ПервоначальныеСведения.ПорядокУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию),
		|		ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена)) КАК НачислятьАмортизацию,
		|
		|	ПервоначальныеСведения.МетодНачисленияАмортизации          КАК МетодНачисленияАмортизации,
		|	ПервоначальныеСведения.СрокИспользования                   КАК СрокИспользования,
		|	ПервоначальныеСведения.КоэффициентУскорения                КАК КоэффициентУскорения,

		|	ПервоначальныеСведения.ОбъемНаработки                      КАК ОбъемНаработки,
		|	ПервоначальныеСведения.ОбъемНаработки                      КАК ОбъемНаработкиОстаточный,
		|	ПервоначальныеСведения.ПоказательНаработки                 КАК ПоказательНаработки,
		
		// Отражение расходов
		|	ПервоначальныеСведения.СтатьяРасходов                      КАК СтатьяРасходов,
		|	ПервоначальныеСведения.АналитикаРасходов                   КАК АналитикаРасходов,
		
		// Передача расходов
		|	ЛОЖЬ                                                       КАК ПередаватьРасходыВДругуюОрганизацию,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)              КАК ОрганизацияПолучательРасходов
		
		|ПОМЕСТИТЬ ПараметрыУчетаОС_УУ
		|ИЗ
		|	ПринятыеКУчетуОС_МУ КАК ПринятыеКУчетуОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОсновныеСредстваМеждународныйУчет КАК ПервоначальныеСведения
		|		ПО (ПервоначальныеСведения.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаОС_БУ КАК ПараметрыУчетаОС_БУ
		|		ПО (ПараметрыУчетаОС_БУ.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
		|			И (ПараметрыУчетаОС_БУ.Организация = ПринятыеКУчетуОС.Организация)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчета КАК ГруппыФинансовогоУчета
		|		ПО (ГруппыФинансовогоУчета.ВнеоборотныйАктив = ПринятыеКУчетуОС.ВнеоборотныйАктив)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыПринятияКУчету КАК ДатыПринятияКУчету
		|		ПО (ДатыПринятияКУчету.ВнеоборотныйАктив = ПринятыеКУчетуОС.ВнеоборотныйАктив)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаОС_УУ КАК ОстаточнаяСтоимость
		|		ПО (ОстаточнаяСтоимость.Организация = ПервоначальныеСведения.Организация)
		|			И (ОстаточнаяСтоимость.ВнеоборотныйАктив = ПервоначальныеСведения.ОсновноеСредство)
		|			И (ОстаточнаяСтоимость.Счет = ПервоначальныеСведения.СчетУчета)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаОС_УУ КАК НачисленнаяАмортизация
		|		ПО (НачисленнаяАмортизация.Организация = ПервоначальныеСведения.Организация)
		|			И (НачисленнаяАмортизация.ВнеоборотныйАктив = ПервоначальныеСведения.ОсновноеСредство)
		|			И (НачисленнаяАмортизация.Счет = ПервоначальныеСведения.СчетАмортизации)
		|ГДЕ
		|	ПервоначальныеСведения.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	Организация";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
		//-- НЕ УТКА
		
	Иначе	
	
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ИСТИНА КАК ОтражатьВУпрУчете,
		
		// Шапка документа
		|	ПараметрыУчетаОС_БУ.ОсновноеСредство                        КАК ОсновноеСредство,
		|	ПараметрыУчетаОС_БУ.Организация                             КАК Организация,
		|	ПараметрыУчетаОС_БУ.НаправлениеДеятельности                 КАК НаправлениеДеятельности,
		|	ПараметрыУчетаОС_БУ.Местонахождение                         КАК Местонахождение,
		|	ПараметрыУчетаОС_БУ.АдресМестонахождения                    КАК АдресМестонахождения,
		|	ПараметрыУчетаОС_БУ.ХозяйственнаяОперация                   КАК ХозяйственнаяОперация,
		
		// Параметры учета
		|	ПараметрыУчетаОС_БУ.ДатаПринятияКУчету                      КАК ДатаПринятияКУчету,
		|	ПараметрыУчетаОС_БУ.ДокументВводаВЭксплуатацию              КАК ДокументВводаВЭксплуатацию,
		|	ПараметрыУчетаОС_БУ.ГруппаФинансовогоУчета                  КАК ГруппаФинансовогоУчета,
		|	0                                                           КАК ЛиквидационнаяСтоимость,
		
		|	ВЫБОР ПараметрыУчетаОС_БУ.ПорядокУчетаБУ
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
		|
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
		|
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.СтоимостьНеПогашается)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию)
		|
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
		|
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию)
		|
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена)
		|
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию)
		|
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка)
		|	КОНЕЦ КАК ПорядокУчета,
			
		// Раздельный учет НДС
		|	ПараметрыУчетаОС_БУ.ВариантРаздельногоУчетаНДС             КАК ВариантРаздельногоУчетаНДС,
		|	ПараметрыУчетаОС_БУ.НалогообложениеНДС                     КАК НалогообложениеНДС,
		
		// Восстановительная стоимость
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОстатокДт, 0) > 0
		|			ТОГДА ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОстатокДт, 0)
		|		ИНАЧЕ ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОборот, 0)                         
		|	КОНЕЦ                                                      КАК ТекущаяСтоимость,
		
		// Первоначальная стоимость
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОстатокДт, 0) > 0
		|			ТОГДА ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОстатокДт, 0)
		|		ИНАЧЕ ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОборот, 0)                         
		|	КОНЕЦ                        КАК ПервоначальнаяСтоимость,
		
		// Накопленная амортизация
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОстатокДт, 0) > 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОборот, 0)                         
		|	КОНЕЦ                                                      КАК НакопленнаяАмортизация,
		
		// События
		|	ЛОЖЬ                                                       КАК ЕстьИзменениеПараметровАмортизации,
		|	ДАТАВРЕМЯ(1, 1, 1)                                         КАК ДатаИзмененияПараметровАмортизации,
		|	ЛОЖЬ                                                       КАК ЕстьРезервПереоценки,
		|	0                                                          КАК РезервПереоценкиАмортизации,
		|	0                                                          КАК РезервПереоценкиСтоимости,
		
		// Амортизация
		|	ПараметрыУчетаОС_БУ.НачислятьАмортизациюБУ                 КАК НачислятьАмортизацию,
		|
		|	ВЫБОР ПараметрыУчетаОС_БУ.МетодНачисленияАмортизации
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
		|
		|		ИНАЧЕ ПараметрыУчетаОС_БУ.МетодНачисленияАмортизации
		|	КОНЕЦ                                                      КАК МетодНачисленияАмортизации,
		|
		|	ВЫБОР 
		|		КОГДА ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОстатокДт, 0) <= 0
		|			ТОГДА ПараметрыУчетаОС_БУ.СрокИспользованияБУ
		|		КОГДА ПараметрыУчетаОС_БУ.СрокИспользованияБУ > РАЗНОСТЬДАТ(ПараметрыУчетаОС_БУ.ДатаПринятияКУчету, &Период, МЕСЯЦ)
		|			ТОГДА ПараметрыУчетаОС_БУ.СрокИспользованияБУ 
		|					- РАЗНОСТЬДАТ(ПараметрыУчетаОС_БУ.ДатаПринятияКУчету, &Период, МЕСЯЦ)
		|		ИНАЧЕ 0
		|	КОНЕЦ                                                      КАК СрокИспользования,
		|	ПараметрыУчетаОС_БУ.КоэффициентУскоренияБУ                 КАК КоэффициентУскорения,

		|	ПараметрыУчетаОС_БУ.ОбъемНаработки                         КАК ОбъемНаработки,
		|	ПараметрыУчетаОС_БУ.ОбъемНаработкиОстаточный               КАК ОбъемНаработкиОстаточный,
		|	ПараметрыУчетаОС_БУ.ПоказательНаработки                    КАК ПоказательНаработки,
		
		// Отражение расходов
		|	ПараметрыУчетаОС_БУ.СтатьяРасходов                         КАК СтатьяРасходов,
		|	ПараметрыУчетаОС_БУ.АналитикаРасходов                      КАК АналитикаРасходов,
		
		// Передача расходов
		|	ПараметрыУчетаОС_БУ.ПередаватьРасходыВДругуюОрганизацию    КАК ПередаватьРасходыВДругуюОрганизацию,
		|	ПараметрыУчетаОС_БУ.ОрганизацияПолучательРасходов          КАК ОрганизацияПолучательРасходов
		
		|ПОМЕСТИТЬ ПараметрыУчетаОС_УУ
		|ИЗ
		|	ПараметрыУчетаОС_БУ КАК ПараметрыУчетаОС_БУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаОС_УУ КАК ОстаткиПоСчетамУчета
		|		ПО (ОстаткиПоСчетамУчета.Организация = ПараметрыУчетаОС_БУ.Организация)
		|			И (ОстаткиПоСчетамУчета.ВнеоборотныйАктив = ПараметрыУчетаОС_БУ.ОсновноеСредство)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	Организация";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ТекстЗапросаОстаткиПоСчетамУчетаОС_УУ(ТекстыЗапроса, ПараметрыОбработчика)

	Если ПараметрыОбработчика.ИспользоватьДанныеМеждународногоУчета Тогда
		
		//++ НЕ УТКА
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетаУчета.СчетУчетаМУ КАК Счет
		|ПОМЕСТИТЬ ВсеСчетаУчета
		|ИЗ
		|	СчетаУчета КАК СчетаУчета
		|ГДЕ
		|	СчетаУчета.СчетУчетаМУ <> ЗНАЧЕНИЕ(ПланСчетов.Международный.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетаУчета.СчетУчетаАмортизацииМУ
		|ИЗ
		|	СчетаУчета КАК СчетаУчета
		|ГДЕ
		|	СчетаУчета.СчетУчетаАмортизацииМУ <> ЗНАЧЕНИЕ(ПланСчетов.Международный.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиНачалоПериода.Организация      КАК Организация,
		|	ОстаткиНачалоПериода.Субконто1        КАК ВнеоборотныйАктив,
		|	ОстаткиНачалоПериода.Счет             КАК Счет,
		|	ОстаткиНачалоПериода.СуммаОстатокДт 
		|		* ВЫБОР 
		|			КОГДА ОстаткиНачалоПериода.ПланСчетов.УчетВФункциональнойВалюте = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВФункциональнойВалюте.ВВалютеУпр)
		|				ТОГДА 1
		|			ИНАЧЕ ЕСТЬNULL(КурсВалютыУправленческогоУчета.КурсЗнаменатель, 1) / ЕСТЬNULL(КурсВалютыУправленческогоУчета.КурсЧислитель, 1)
		|		КОНЕЦ КАК СуммаОстатокДт,
		|	ОстаткиНачалоПериода.СуммаОстатокКт 
		|		* ВЫБОР 
		|			КОГДА ОстаткиНачалоПериода.ПланСчетов.УчетВФункциональнойВалюте = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВФункциональнойВалюте.ВВалютеУпр)
		|				ТОГДА 1
		|			ИНАЧЕ ЕСТЬNULL(КурсВалютыУправленческогоУчета.КурсЗнаменатель, 1) / ЕСТЬNULL(КурсВалютыУправленческогоУчета.КурсЧислитель, 1)
		|		КОНЕЦ  КАК СуммаОстатокКт
		|ПОМЕСТИТЬ ОстаткиПоСчетамУчетаОС_УУ
		|ИЗ
		|	РегистрБухгалтерии.Международный.Остатки(
		|			&ПериодГраница,
		|			Счет В
		|				(ВЫБРАТЬ
		|					ВсеСчетаУчета.Счет
		|				ИЗ
		|					ВсеСчетаУчета КАК ВсеСчетаУчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоМеждународные.ОсновныеСредства),
		|			Субконто1 В
		|					(ВЫБРАТЬ
		|						ПринятыеКУчетуОС.ВнеоборотныйАктив
		|					ИЗ
		|						ПринятыеКУчетуОС КАК ПринятыеКУчетуОС)) КАК ОстаткиНачалоПериода
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&ДатаНачалаУчета) КАК КурсВалютыУправленческогоУчета
		|		ПО 
		|			КурсВалютыУправленческогоУчета.БазоваяВалюта = ОстаткиНачалоПериода.Организация.ВалютаРегламентированногоУчета
		|			И КурсВалютыУправленческогоУчета.Валюта = &ВалютаУпр
		|		
		|ИНДЕКСИРОВАТЬ ПО
		|	ВнеоборотныйАктив,
		|	Организация,
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВсеСчетаУчета";
		//-- НЕ УТКА
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	СтатьиРасходов.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ втСтатьиВНА
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|ГДЕ
		|	НЕ СтатьиРасходов.ЭтоГруппа
		|	И СтатьиРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
		|	И СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПрочиеРасходы.Организация КАК Организация,
		|	ПрочиеРасходы.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
		|	ПрочиеРасходы.Счет КАК Счет,
		|	СУММА(ПрочиеРасходы.СуммаОстатокДт) КАК СуммаОстатокДт,
		|	СУММА(ПрочиеРасходы.СуммаОстатокКт) КАК СуммаОстатокКт,
		|	СУММА(ПрочиеРасходы.СуммаОборот) КАК СуммаОборот
		|ПОМЕСТИТЬ ОстаткиПоСчетамУчетаОС_УУ
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПрочиеРасходы.Организация КАК Организация,
		|		ПрочиеРасходы.АналитикаРасходов КАК ВнеоборотныйАктив,
		|		NULL КАК Счет,
		|		ВЫБОР
		|			КОГДА &МожноИспользоватьРесурсСуммаУпр
		|				ТОГДА ПрочиеРасходы.СуммаУпрОстаток
		|			ИНАЧЕ ПрочиеРасходы.СуммаОстаток
		|		КОНЕЦ КАК СуммаОстатокДт,
		|		0 КАК СуммаОстатокКт,
		|		0 КАК СуммаОборот
		|	ИЗ
		|		РегистрНакопления.ПрочиеРасходы.Остатки(
		|				&ПериодГраница,
		|				СтатьяРасходов В (ВЫБРАТЬ втСтатьиВНА.Ссылка ИЗ втСтатьиВНА КАК втСтатьиВНА)
		|				И (Организация, АналитикаРасходов) В
		|					(ВЫБРАТЬ
		|						ПринятыеКУчетуОС.Организация,
		|						ПринятыеКУчетуОС.ВнеоборотныйАктив
		|					ИЗ
		|						ПринятыеКУчетуОС КАК ПринятыеКУчетуОС)) КАК ПрочиеРасходы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПрочиеРасходы.Организация,
		|		ПрочиеРасходы.АналитикаРасходов,
		|		NULL,
		|		ВЫБОР
		|			КОГДА &МожноИспользоватьРесурсСуммаУпр
		|				ТОГДА ПрочиеРасходы.СуммаУпр
		|			ИНАЧЕ ПрочиеРасходы.Сумма
		|		КОНЕЦ * ВЫБОР
		|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -1
		|			ИНАЧЕ 1
		|		КОНЕЦ,
		|		0,
		|		ВЫБОР
		|			КОГДА &МожноИспользоватьРесурсСуммаУпр
		|				ТОГДА ПрочиеРасходы.СуммаУпр
		|			ИНАЧЕ ПрочиеРасходы.Сумма
		|		КОНЕЦ * ВЫБОР
		|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -1
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК СуммаОборот
		|	ИЗ
		|		РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
		|	ГДЕ
		|		ПрочиеРасходы.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
		|		И ПрочиеРасходы.Активность
		|		И ПрочиеРасходы.Период <= &Период
		|		И ПрочиеРасходы.СтатьяРасходов В (ВЫБРАТЬ втСтатьиВНА.Ссылка ИЗ втСтатьиВНА КАК втСтатьиВНА)
		|		И (ПрочиеРасходы.Организация, ПрочиеРасходы.АналитикаРасходов) В
		|				(ВЫБРАТЬ
		|					ПринятыеКУчетуОС.Организация,
		|					ПринятыеКУчетуОС.ВнеоборотныйАктив
		|				ИЗ
		|					ПринятыеКУчетуОС КАК ПринятыеКУчетуОС)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПрочиеРасходы.Организация,
		|		ПрочиеРасходы.АналитикаРасходов,
		|		NULL,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА &МожноИспользоватьРесурсСуммаУпр
		|				ТОГДА ПрочиеРасходы.СуммаУпрПриход
		|			ИНАЧЕ ПрочиеРасходы.СуммаПриход
		|		КОНЕЦ КАК СуммаОборот
		|	ИЗ
		|		РегистрНакопления.ПрочиеРасходы.Обороты(
		|			,&ПериодГраница,, 
		|			СтатьяРасходов В (ВЫБРАТЬ втСтатьиВНА.Ссылка ИЗ втСтатьиВНА КАК втСтатьиВНА)
		|			И (Организация, АналитикаРасходов) В
		|				(ВЫБРАТЬ
		|					ПринятыеКУчетуОС.Организация,
		|					ПринятыеКУчетуОС.ВнеоборотныйАктив
		|				ИЗ
		|					ПринятыеКУчетуОС КАК ПринятыеКУчетуОС)) КАК ПрочиеРасходы
		|
		|	) КАК ПрочиеРасходы
		|
		|СГРУППИРОВАТЬ ПО
		|	ПрочиеРасходы.Организация,
		|	ПрочиеРасходы.ВнеоборотныйАктив,
		|	ПрочиеРасходы.Счет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВнеоборотныйАктив,
		|	Организация";
		
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаОстаткиПоСчетамУчетаОС_БУ(ТекстыЗапроса)

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчета КАК Счет
	|ПОМЕСТИТЬ ВсеСчетаУчета
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчетаЦФ
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчетаЦФ <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчетаАмортизации
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчетаАмортизации <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетИзноса
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетИзноса <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчетаАмортизацииЦФ
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчетаАмортизацииЦФ <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетЗабалансовогоУчета
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетЗабалансовогоУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНачалоПериода.Организация           КАК Организация,
	|	ОстаткиНачалоПериода.Субконто1             КАК ВнеоборотныйАктив,
	|	ОстаткиНачалоПериода.Счет                  КАК Счет,
	|	ОстаткиНачалоПериода.СуммаОстатокДт        КАК СуммаОстатокДт,
	|	ОстаткиНачалоПериода.СуммаНУОстатокДт      КАК СуммаНУОстатокДт,
	|	ОстаткиНачалоПериода.СуммаПРОстатокДт      КАК СуммаПРОстатокДт,
	|	ОстаткиНачалоПериода.СуммаОстатокКт        КАК СуммаОстатокКт,
	|	ОстаткиНачалоПериода.СуммаНУОстатокКт      КАК СуммаНУОстатокКт,
	|	ОстаткиНачалоПериода.СуммаПРОстатокКт      КАК СуммаПРОстатокКт
	|ПОМЕСТИТЬ ОстаткиПоСчетамУчетаОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ПериодГраница,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВсеСчетаУчета.Счет
	|				ИЗ
	|					ВсеСчетаУчета КАК ВсеСчетаУчета),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Субконто1 В
	|					(ВЫБРАТЬ
	|						ПринятыеКУчетуОС.ВнеоборотныйАктив
	|					ИЗ
	|						ПринятыеКУчетуОС КАК ПринятыеКУчетуОС)) КАК ОстаткиНачалоПериода
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив,
	|	Организация,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВсеСчетаУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаПереоценкаСтоимостиОС(ТекстыЗапроса)

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчета КАК Счет
	|ПОМЕСТИТЬ втВсеСчетаУчетаСтоимости
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчетаЦФ
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчетаЦФ <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК ОсновноеСредство,
	|	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаДооценки,
	|	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаУценки
	|ПОМЕСТИТЬ втПредыдущаяПереоценкаСтоимостиДанные
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&ПериодГраница,
	|			Регистратор,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втВсеСчетаУчетаСтоимости КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					СобственныеОС.Организация,
	|					СобственныеОС.ВнеоборотныйАктив
	|				ИЗ
	|					СобственныеОС КАК СобственныеОС),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПереоценкаОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПервоначальныеСведения.ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиСтоимости, 0) > 0
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиСтоимости, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиСтоимости, 0) < 0
	|			ТОГДА -ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиСтоимости, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&ПериодГраница,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					СобственныеОС.Организация,
	|					СобственныеОС.ВнеоборотныйАктив
	|				ИЗ
	|					СобственныеОС КАК СобственныеОС)) КАК ПервоначальныеСведения
	|ГДЕ
	|	ПервоначальныеСведения.РезервПереоценкиСтоимости <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПредыдущаяПереоценкаСтоимостиДанные.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(втПредыдущаяПереоценкаСтоимостиДанные.СуммаДооценки - втПредыдущаяПереоценкаСтоимостиДанные.СуммаУценки) КАК РезервПереоценкиСтоимостиРегл
	|ПОМЕСТИТЬ ПереоценкаСтоимостиОС
	|ИЗ
	|	втПредыдущаяПереоценкаСтоимостиДанные КАК втПредыдущаяПереоценкаСтоимостиДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	втПредыдущаяПереоценкаСтоимостиДанные.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втПредыдущаяПереоценкаСтоимостиДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втВсеСчетаУчетаСтоимости";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаПереоценкаАмортизацииОС(ТекстыЗапроса)

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчетаАмортизации КАК Счет
	|ПОМЕСТИТЬ ВсеСчетаАмортизации
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчетаАмортизации <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчетаАмортизацииЦФ
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчетаАмортизацииЦФ <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК ОсновноеСредство,
	|	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаДооценки,
	|	0 КАК СуммаУценки
	|ПОМЕСТИТЬ втПредыдущаяПереоценкаАмортизацииДанные
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&ПериодГраница,
	|			Регистратор,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаУчета.Счет
	|				ИЗ
	|					ВсеСчетаАмортизации КАК СчетаУчета),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					СобственныеОС.Организация,
	|					СобственныеОС.ВнеоборотныйАктив
	|				ИЗ
	|					СобственныеОС КАК СобственныеОС),
	|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриростСтоимостиПоПереоценке)),
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПереоценкаОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1,
	|	0,
	|	ХозрасчетныйОбороты.СуммаОборотДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&ПериодГраница,
	|			Регистратор,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаУчета.Счет
	|				ИЗ
	|					ВсеСчетаАмортизации КАК СчетаУчета),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					СобственныеОС.Организация,
	|					СобственныеОС.ВнеоборотныйАктив
	|				ИЗ
	|					СобственныеОС КАК СобственныеОС),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПереоценкаОС
	|	И ХозрасчетныйОбороты.СуммаОборотДт > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПервоначальныеСведения.ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиАмортизации, 0) > 0
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиАмортизации, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиАмортизации, 0) < 0
	|			ТОГДА -ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиАмортизации, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&ПериодГраница,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					СобственныеОС.Организация,
	|					СобственныеОС.ВнеоборотныйАктив
	|				ИЗ
	|					СобственныеОС КАК СобственныеОС)) КАК ПервоначальныеСведения
	|ГДЕ
	|	ПервоначальныеСведения.РезервПереоценкиАмортизации <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПредыдущаяПереоценкаАмортизацииДанные.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(втПредыдущаяПереоценкаАмортизацииДанные.СуммаДооценки - втПредыдущаяПереоценкаАмортизацииДанные.СуммаУценки) КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ ПереоценкаАмортизацииОС
	|ИЗ
	|	втПредыдущаяПереоценкаАмортизацииДанные КАК втПредыдущаяПереоценкаАмортизацииДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	втПредыдущаяПереоценкаАмортизацииДанные.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втПредыдущаяПереоценкаАмортизацииДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВсеСчетаАмортизации";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры
 
#КонецОбласти

#Область АрендованныеОС

Процедура ОбработатьПараметрыУчетаАрендованныхОС(ПараметрыОбработчика) 
	
	Если НЕ ТребуетсяВыполнитьЭтап("ПереносПараметровУчетаАрендованныхОС", ПараметрыОбработчика) Тогда
		Возврат;
	КонецЕсли;
	
	ЗафиксироватьНачалоВыполненияЭтапа("ПереносПараметровУчетаАрендованныхОС", 0, ПараметрыОбработчика);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаПараметрыУчетаАрендованныхОС_БУ(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаЛишниеПараметрыУчетаАрендованныхОС(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаПараметрыУчетаАрендованныхОС(ТекстыЗапроса, ПараметрыОбработчика);	
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса.ВыгрузитьЗначения(), ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = НовыйЗапрос(ПараметрыОбработчика, ТекстЗапроса);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(
		ПараметрыОбработчика.МенеджерВременныхТаблиц,, 
		ПараметрыОбработчика.ИспользуемыеВременныеТаблицы);
		
	КоличествоДанных = 
		+ РезультатЗапроса[РезультатЗапроса.ВГраница()-1].Выбрать().Количество()
		+ РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать().Количество();
	ЗафиксироватьНачалоВыполненияЭтапа("ПереносПараметровУчетаАрендованныхОС", КоличествоДанных, ПараметрыОбработчика);
		
	ОбработатьЛишниеДанные(
		РезультатЗапроса[РезультатЗапроса.ВГраница()-1], 
		ПараметрыОбработчика,
		"ПереносПараметровУчетаАрендованныхОС");
		
	ОбработатьРезультатЗапросаДляДокументовВводаОстатков(
		РезультатЗапроса[РезультатЗапроса.ВГраница()], 
		ПараметрыОбработчика,
		"ПереносПараметровУчетаАрендованныхОС");
		
	ЗафиксироватьОкончаниеВыполненияЭтапа("ПереносПараметровУчетаАрендованныхОС", ПараметрыОбработчика);
		
КонецПроцедуры

Процедура ТекстЗапросаЛишниеПараметрыУчетаАрендованныхОС(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПараметрыУчетаОС_БУ.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ПараметрыУчетаОС_БУ.Организация КАК Организация,
	|	ПараметрыУчетаОС_БУ.Местонахождение КАК Местонахождение,
	|	ПараметрыУчетаОС_БУ.Контрагент КАК Контрагент,
	|	ПараметрыУчетаОС_БУ.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ИСТИНА КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ КАК ОтражатьВУпрУчете,
	|	ПринятыеКУчетуОС.ВнеоборотныйАктив КАК ВнеоборотныйАктив
	|ПОМЕСТИТЬ ПараметрыУчетаАрендованныхОС_Отбор
	|ИЗ
	|	АрендованныеОС КАК ПринятыеКУчетуОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаАрендованныхОС_БУ КАК ПараметрыУчетаОС_БУ
	|		ПО (ПараметрыУчетаОС_БУ.ОсновноеСредство = ПринятыеКУчетуОС.ВнеоборотныйАктив)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ЛишниеДанные""                        КАК ВидПроблемы,
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	NULL                                    КАК СсылкаДубль,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	ТабличнаяЧасть.ОсновноеСредство         КАК ОсновноеСредство
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
	|ГДЕ
	|	НЕ ДанныеДокумента.ПометкаУдаления
	|	И ДанныеДокумента.Дата <= &Период
	|	И &ОтборОбъектыПроблемОС
	|
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом))
	|
	|	И НЕ (ДанныеДокумента.ХозяйственнаяОперация, 
	|			ДанныеДокумента.Организация, 
	|			ДанныеДокумента.Местонахождение, 
	|			ДанныеДокумента.Контрагент, 
	|			ДанныеДокумента.ГруппаФинансовогоУчета, 
	|			ДанныеДокумента.ОтражатьВРеглУчете, 
	|			ДанныеДокумента.ОтражатьВУпрУчете,
	|			ТабличнаяЧасть.ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					ПринятыеКУчетуОС.ХозяйственнаяОперация,
	|					ПринятыеКУчетуОС.Организация,
	|					ПринятыеКУчетуОС.Местонахождение,
	|					ПринятыеКУчетуОС.Контрагент,
	|					ПринятыеКУчетуОС.ГруппаФинансовогоУчета,
	|					ПринятыеКУчетуОС.ОтражатьВРеглУчете,
	|					ПринятыеКУчетуОС.ОтражатьВУпрУчете,
	|					ПринятыеКУчетуОС.ВнеоборотныйАктив
	|				ИЗ
	|					ПараметрыУчетаАрендованныхОС_Отбор КАК ПринятыеКУчетуОС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Основные средства, по которым задублированы документы
	|ВЫБРАТЬ
	|	""Дубль""                               КАК ВидПроблемы,
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	ДанныеДокументаДубль.Ссылка             КАК СсылкаДубль,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	ТабличнаяЧасть.ОсновноеСредство         КАК ОсновноеСредство
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокументаДубль
	|		ПО (ДанныеДокументаДубль.Ссылка <> ДанныеДокумента.Ссылка)
	|			И (ДанныеДокументаДубль.ХозяйственнаяОперация = ДанныеДокумента.ХозяйственнаяОперация)
	|			И (ДанныеДокументаДубль.Организация = ДанныеДокумента.Организация)
	|			И (ДанныеДокументаДубль.Местонахождение = ДанныеДокумента.Местонахождение)
	|			И (ДанныеДокументаДубль.Контрагент = ДанныеДокумента.Контрагент)
	|			И (ДанныеДокументаДубль.ГруппаФинансовогоУчета = ДанныеДокумента.ГруппаФинансовогоУчета)
	|			И (ДанныеДокументаДубль.ОтражатьВРеглУчете = ДанныеДокумента.ОтражатьВРеглУчете)
	|			И (ДанныеДокументаДубль.ОтражатьВУпрУчете = ДанныеДокумента.ОтражатьВУпрУчете)
	|			И (ДанныеДокументаДубль.Дата <= &Период)
	|			И (НЕ ДанныеДокументаДубль.ПометкаУдаления)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТабличнаяЧастьДубль
	|		ПО (ТабличнаяЧастьДубль.Ссылка = ДанныеДокументаДубль.Ссылка)
	|			И (ТабличнаяЧастьДубль.ОсновноеСредство = ТабличнаяЧасть.ОсновноеСредство)
	|ГДЕ
	|	НЕ ДанныеДокумента.ПометкаУдаления
	|	И ДанныеДокумента.Дата <= &Период
	|	И &ОтборОбъектыПроблемОС
	|
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом))
	|
	|	И НЕ ДанныеДокументаДубль.Ссылка ЕСТЬ NULL
	|	И НЕ ТабличнаяЧастьДубль.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Если ПараметрыОбработчика.РежимПереносаДанных = "Исправить" Тогда
		ТекстОтборОбъектыПроблемОС = "ТабличнаяЧасть.ОсновноеСредство В (ВЫБРАТЬ ОбъектыПроблем.ВнеоборотныйАктив ИЗ ОбъектыПроблем КАК ОбъектыПроблем)";
	Иначе
		ТекстОтборОбъектыПроблемОС = "ИСТИНА";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборОбъектыПроблемОС", ТекстОтборОбъектыПроблемОС);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаПараметрыУчетаАрендованныхОС(ТекстыЗапроса, ПараметрыОбработчика)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВводОстатковПроведен.Ссылка                      КАК Ссылка,
	|	&Период                                          КАК Дата,
	|	ПараметрыУчетаОС_БУ.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	АрендованныеОС.ВнеоборотныйАктив                 КАК ОсновноеСредство,
	|	ПараметрыУчетаОС_БУ.Организация                  КАК Организация,
	|	ИСТИНА                                           КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                             КАК ОтражатьВУпрУчете,
	|	ИСТИНА                                           КАК ОтражатьВОперативномУчете,
	|	ЛОЖЬ                                             КАК ОтражатьВБУиНУ,
	|	ЛОЖЬ                                             КАК ОтражатьВУУ,
	|	ПараметрыУчетаОС_БУ.Контрагент                   КАК Контрагент,
	|	ПараметрыУчетаОС_БУ.Местонахождение              КАК Местонахождение,
	|	ПараметрыУчетаОС_БУ.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ПараметрыУчетаОС_БУ.ДатаПринятияКУчету           КАК ДатаПринятияКУчету,
	|	ДатыПринятияКУчету.ДокументВводаВЭксплуатациюБУ  КАК ДокументВводаВЭксплуатацию,
	|	ПараметрыУчетаОС_БУ.ЗалоговаяСтоимость           КАК ЗалоговаяСтоимость,
	|	ПараметрыУчетаОС_БУ.Договор                      КАК Договор,
	
	// Реквизиты для проверки
	|	СчетаУчета.СчетЗабалансовогоУчета                КАК СчетЗабалансовогоУчета,
	|	ГруппыФинансовогоУчета.СчетЗабалансовогоУчета    КАК СчетЗабалансовогоУчетаГФУ
	|ИЗ
	|	АрендованныеОС КАК АрендованныеОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыУчетаАрендованныхОС_БУ КАК ПараметрыУчетаОС_БУ
	|		ПО (ПараметрыУчетаОС_БУ.ОсновноеСредство = АрендованныеОС.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаУчета КАК СчетаУчета
	|		ПО (СчетаУчета.ВнеоборотныйАктив = АрендованныеОС.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчетаИСчетаУчета КАК ГруппыФинансовогоУчета
	|		ПО ГруппыФинансовогоУчета.Ссылка = ПараметрыУчетаОС_БУ.ГруппаФинансовогоУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыПринятияКУчету КАК ДатыПринятияКУчету
	|		ПО (ДатыПринятияКУчету.ВнеоборотныйАктив = АрендованныеОС.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ВводОстатковПроведен
	|		ПО (ВводОстатковПроведен.ОсновноеСредство = ПараметрыУчетаОС_БУ.ОсновноеСредство)
	|			И (ВводОстатковПроведен.Ссылка.ХозяйственнаяОперация = ПараметрыУчетаОС_БУ.ХозяйственнаяОперация)
	|			И (ВводОстатковПроведен.Ссылка.Организация = ПараметрыУчетаОС_БУ.Организация)
	|			И (ВводОстатковПроведен.Ссылка.Проведен)
	|			И (&РежимПереносаДанных = ""Проверить"")
	|
	|УПОРЯДОЧИТЬ ПО
	|	ХозяйственнаяОперация,
	|	Организация,
	|	Дата,
	|	Контрагент,
	|	Местонахождение,
	|	ГруппаФинансовогоУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаПараметрыУчетаАрендованныхОС_БУ(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Организация КАК Организация,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение,
	|	МестонахождениеОС.АдресМестонахождения КАК АдресМестонахождения
	|ПОМЕСТИТЬ МестонахождениеОС_Аренда
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						АрендованныеОС.ВнеоборотныйАктив
	|					ИЗ
	|						АрендованныеОС КАК АрендованныеОС)) КАК МестонахождениеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА АрендованныеОС.Договор ССЫЛКА Справочник.ДоговорыАренды
	|				И НЕ АрендованныеОС.Договор В (&ПустойДоговор)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	АрендованныеОС.ВнеоборотныйАктив КАК ОсновноеСредство,
	|	ЕСТЬNULL(ГруппыФинансовогоУчета.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаВнеоборотныхАктивов.ПустаяСсылка)) КАК ГруппаФинансовогоУчета,
	|	ДатыПринятияКУчету.ДатаПринятияКУчетуБУ КАК ДатаПринятияКУчету,
	|	АрендованныеОС.Договор КАК Договор,
	|	АрендованныеОС.Стоимость КАК ЗалоговаяСтоимость,
	|	АрендованныеОС.Контрагент КАК Контрагент,
	|	ЕСТЬNULL(МестонахождениеОС.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Местонахождение
	|ПОМЕСТИТЬ ПараметрыУчетаАрендованныхОС_БУ
	|ИЗ
	|	АрендованныеОС КАК АрендованныеОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС_Аренда КАК МестонахождениеОС
	|		ПО (МестонахождениеОС.ОсновноеСредство = АрендованныеОС.ВнеоборотныйАктив)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчета КАК ГруппыФинансовогоУчета
	|		ПО (ГруппыФинансовогоУчета.ВнеоборотныйАктив = АрендованныеОС.ВнеоборотныйАктив)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыПринятияКУчету КАК ДатыПринятияКУчету
	|		ПО (ДатыПринятияКУчету.ВнеоборотныйАктив = АрендованныеОС.ВнеоборотныйАктив)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

#КонецОбласти

#Область НМА

Процедура ОбработатьПараметрыУчетаНМА(ПараметрыОбработчика) 
	
	Если НЕ ТребуетсяВыполнитьЭтап("ПереносПараметровУчетаНМА", ПараметрыОбработчика) Тогда
		Возврат;
	КонецЕсли;
	
	ЗафиксироватьНачалоВыполненияЭтапа("ПереносПараметровУчетаНМА", 0, ПараметрыОбработчика);
	
	ТекстыЗапроса = Новый Массив;
	
	ТекстЗапросаПараметрыУчетаНМА_БУ(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаПараметрыУчетаНМА_УУ(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаЛишниеПараметрыУчетаНМА(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаПараметрыУчетаНМА(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаИзменениеПараметровУчетаНМА(ТекстыЗапроса, ПараметрыОбработчика);
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = НовыйЗапрос(ПараметрыОбработчика, ТекстЗапроса);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(
		ПараметрыОбработчика.МенеджерВременныхТаблиц,, 
		ПараметрыОбработчика.ИспользуемыеВременныеТаблицы);
		
	КоличествоДанных = 
		+ РезультатЗапроса[РезультатЗапроса.ВГраница()-3].Выбрать().Количество()
		+ РезультатЗапроса[РезультатЗапроса.ВГраница()-2].Выбрать().Количество()
		+ РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать().Количество();
	ЗафиксироватьНачалоВыполненияЭтапа("ПереносПараметровУчетаНМА", КоличествоДанных, ПараметрыОбработчика);
		
	ОбработатьЛишниеДанные(
		РезультатЗапроса[РезультатЗапроса.ВГраница()-3], 
		ПараметрыОбработчика,
		"ПереносПараметровУчетаНМА");
		
	ОбработатьРезультатЗапросаДляДокументовВводаОстатков(
		РезультатЗапроса[РезультатЗапроса.ВГраница()-2], 
		ПараметрыОбработчика,
		"ПереносПараметровУчетаНМА");
		
	ОбработатьРезультатЗапросаДляДокументовИзмененияПараметровНМА(
		РезультатЗапроса[РезультатЗапроса.ВГраница()-1], 
		РезультатЗапроса[РезультатЗапроса.ВГраница()], 
		ПараметрыОбработчика,
		"ПереносПараметровУчетаНМА_ИзменениеПараметров");
		
	ЗафиксироватьОкончаниеВыполненияЭтапа("ПереносПараметровУчетаНМА", ПараметрыОбработчика);
		
КонецПроцедуры

Процедура ТекстЗапросаЛишниеПараметрыУчетаНМА(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПринятыеКУчетуНМА.Организация КАК Организация,
	|	ЕСТЬNULL(ПараметрыУчетаНМА_БУ.Местонахождение, ПараметрыУчетаНМА_УУ.Местонахождение) КАК Местонахождение,
	|	ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ОтражатьВРеглУчете, ЛОЖЬ) КАК ОтражатьВРеглУчете,
	|	ЕСТЬNULL(ПараметрыУчетаНМА_УУ.ОтражатьВУпрУчете, ЛОЖЬ) КАК ОтражатьВУпрУчете,
	|	ПринятыеКУчетуНМА.ВнеоборотныйАктив КАК ВнеоборотныйАктив
	|ПОМЕСТИТЬ ПараметрыУчетаНМА_Отбор
	|ИЗ
	|	ПринятыеКУчетуНМА КАК ПринятыеКУчетуНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаНМА_БУ КАК ПараметрыУчетаНМА_БУ
	|		ПО (ПараметрыУчетаНМА_БУ.НематериальныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
	|			И (ПараметрыУчетаНМА_БУ.Организация = ПринятыеКУчетуНМА.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаНМА_УУ КАК ПараметрыУчетаНМА_УУ
	|		ПО (ПараметрыУчетаНМА_УУ.НематериальныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
	|			И (ПараметрыУчетаНМА_УУ.Организация = ПринятыеКУчетуНМА.Организация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ЛишниеДанные""                       КАК ВидПроблемы,
	|	ДанныеДокумента.Ссылка                 КАК Ссылка,
	|	NULL                                   КАК СсылкаДубль,
	|	ДанныеДокумента.Организация            КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация  КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Проведен               КАК Проведен,
	|	ТабличнаяЧасть.НематериальныйАктив     КАК НематериальныйАктив
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
	|ГДЕ
	|	НЕ ДанныеДокумента.ПометкаУдаления
	|	И ДанныеДокумента.Дата <= &Период
	|	И &ОтборОбъектыПроблемНМА
	|
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР))
	|
	|	И НЕ (ДанныеДокумента.Организация, 
	|			ДанныеДокумента.Местонахождение, 
	|			ДанныеДокумента.ОтражатьВРеглУчете, 
	|			ДанныеДокумента.ОтражатьВУпрУчете,
	|			ТабличнаяЧасть.НематериальныйАктив) В
	|				(ВЫБРАТЬ
	|					ПринятыеКУчетуНМА.Организация,
	|					ПринятыеКУчетуНМА.Местонахождение,
	|					ПринятыеКУчетуНМА.ОтражатьВРеглУчете,
	|					ПринятыеКУчетуНМА.ОтражатьВУпрУчете,
	|					ПринятыеКУчетуНМА.ВнеоборотныйАктив
	|				ИЗ
	|					ПараметрыУчетаНМА_Отбор КАК ПринятыеКУчетуНМА)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// НМА, по которым задублированы документы
	|ВЫБРАТЬ
	|	""Дубль""                              КАК ВидПроблемы,
	|	ДанныеДокумента.Ссылка                 КАК Ссылка,
	|	ДанныеДокументаДубль.Ссылка            КАК СсылкаДубль,
	|	ДанныеДокумента.Организация            КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация  КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Проведен               КАК Проведен,
	|	ТабличнаяЧасть.НематериальныйАктив     КАК НематериальныйАктив
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокументаДубль
	|		ПО (ДанныеДокументаДубль.Ссылка <> ДанныеДокумента.Ссылка)
	|			И (ДанныеДокументаДубль.Организация = ДанныеДокумента.Организация)
	|			И (ДанныеДокументаДубль.Местонахождение= ДанныеДокумента.Организация)
	|			И (ДанныеДокументаДубль.ОтражатьВРеглУчете = ДанныеДокумента.Организация)
	|			И (ДанныеДокументаДубль.ОтражатьВУпрУчете = ДанныеДокумента.Организация)
	|			И (ДанныеДокументаДубль.Дата <= &Период)
	|			И (НЕ ДанныеДокументаДубль.ПометкаУдаления)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТабличнаяЧастьДубль
	|		ПО (ТабличнаяЧастьДубль.Ссылка = ДанныеДокументаДубль.Ссылка)
	|			И (ТабличнаяЧастьДубль.НематериальныйАктив = ТабличнаяЧасть.НематериальныйАктив)
	|ГДЕ
	|	НЕ ДанныеДокумента.ПометкаУдаления
	|	И ДанныеДокумента.Дата <= &Период
	|	И &ОтборОбъектыПроблемНМА
	|
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР))
	|
	|	И НЕ ДанныеДокументаДубль.Ссылка ЕСТЬ NULL
	|	И НЕ ТабличнаяЧастьДубль.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Если ПараметрыОбработчика.РежимПереносаДанных = "Исправить" Тогда
		ТекстОтборОбъектыПроблемНМА = "ТабличнаяЧасть.НематериальныйАктив В (ВЫБРАТЬ ОбъектыПроблем.ВнеоборотныйАктив ИЗ ОбъектыПроблем КАК ОбъектыПроблем)";
	Иначе
		ТекстОтборОбъектыПроблемНМА = "ИСТИНА";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборОбъектыПроблемНМА", ТекстОтборОбъектыПроблемНМА);
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаПараметрыУчетаНМА(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВводОстатковПроведен.Ссылка                                                           КАК Ссылка,
	|	&Период                                                                               КАК Дата,
	|	ПринятыеКУчетуНМА.ВнеоборотныйАктив                                                   КАК НематериальныйАктив,
	|	ПринятыеКУчетуНМА.Организация                                                         КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР)          КАК ХозяйственнаяОперация,
	|	ИСТИНА                                                                                КАК ОтражатьВОперативномУчете,
	
	// Ключевые реквизиты нужно приводить к пустому значению
	|	ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ОтражатьВРеглУчете, ЛОЖЬ)                               КАК ОтражатьВРеглУчете,
	|	ЕСТЬNULL(ПараметрыУчетаНМА_УУ.ОтражатьВУпрУчете, ЛОЖЬ)                                КАК ОтражатьВУпрУчете,
	|	ЛОЖЬ                                                                                  КАК ОтражатьВБУиНУ,
	|	ЛОЖЬ                                                                                  КАК ОтражатьВУУ,
	|	ЕСТЬNULL(ПараметрыУчетаНМА_БУ.Местонахождение, ПараметрыУчетаНМА_УУ.Местонахождение)  КАК Местонахождение,
	
	// Запрос должен содержать все реквизиты документа
	|	ПараметрыУчетаНМА_БУ.АмортизацияДо2009                                                КАК АмортизацияДо2009,
	|	ПараметрыУчетаНМА_БУ.АналитикаДоходов                                                 КАК АналитикаДоходов,
	|	ПараметрыУчетаНМА_БУ.АналитикаРасходов                                                КАК АналитикаРасходовБУ,
	|	ПараметрыУчетаНМА_УУ.АналитикаРасходов                                                КАК АналитикаРасходовУУ,
	|	ПараметрыУчетаНМА_БУ.ВариантРаздельногоУчетаНДС                                       КАК ВариантРаздельногоУчетаНДС,
	|	ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ВидОбъектаУчета, 
	|				ПараметрыУчетаНМА_УУ.ВидОбъектаУчета)                                     КАК ВидОбъектаУчета,
	|	ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ГруппаФинансовогоУчета, 
	|				ПараметрыУчетаНМА_УУ.ГруппаФинансовогоУчета)                              КАК ГруппаФинансовогоУчета,
	|	ПараметрыУчетаНМА_БУ.ДатаПринятияКУчету                                               КАК ДатаПринятияКУчетуБУ,
	|	ПараметрыУчетаНМА_БУ.ДатаПринятияКУчету                                               КАК ДатаПринятияКУчетуНУ,
	|	ПараметрыУчетаНМА_УУ.ДатаПринятияКУчету                                               КАК ДатаПринятияКУчетуУУ,
	|	ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ДатаПриобретения, 
	|				ПараметрыУчетаНМА_УУ.ДатаПриобретения)                                    КАК ДатаПриобретения,
	|	ПараметрыУчетаНМА_БУ.ДокументПринятияКУчету                                           КАК ДокументПринятияКУчетуБУ,
	|	ПараметрыУчетаНМА_БУ.ДокументПринятияКУчету                                           КАК ДокументПринятияКУчетуНУ,
	|	ПараметрыУчетаНМА_УУ.ДокументПринятияКУчету                                           КАК ДокументПринятияКУчетуУУ,
	|	ПараметрыУчетаНМА_УУ.ЕстьРезервПереоценки                                             КАК ЕстьРезервПереоценки,
	|	ПараметрыУчетаНМА_БУ.ЕстьРезервПереоценкиРегл                                         КАК ЕстьРезервПереоценкиРегл,
	|	ПараметрыУчетаНМА_БУ.КоэффициентБУ                                                    КАК КоэффициентБУ,
	|	ПараметрыУчетаНМА_УУ.КоэффициентУскорения                                             КАК КоэффициентУскоренияУУ,
	|	ПараметрыУчетаНМА_УУ.ЛиквидационнаяСтоимость                                          КАК ЛиквидационнаяСтоимость,
	|	ПараметрыУчетаНМА_БУ.МетодНачисленияАмортизацииБУ                                     КАК МетодНачисленияАмортизацииБУ,
	|	ПараметрыУчетаНМА_БУ.МетодНачисленияАмортизацииНУ                                     КАК МетодНачисленияАмортизацииНУ,
	|	ПараметрыУчетаНМА_УУ.МетодНачисленияАмортизации                                       КАК МетодНачисленияАмортизацииУУ,
	|	ЕСТЬNULL(ПараметрыУчетаНМА_БУ.НаправлениеДеятельности, 
	|				ПараметрыУчетаНМА_УУ.НаправлениеДеятельности)                             КАК НаправлениеДеятельности,
	|	ПараметрыУчетаНМА_БУ.НакопленнаяАмортизацияБУ                                         КАК НакопленнаяАмортизацияБУ,
	|	ПараметрыУчетаНМА_БУ.НакопленнаяАмортизацияБУЦФ                                       КАК НакопленнаяАмортизацияБУЦФ,
	|	ПараметрыУчетаНМА_БУ.НакопленнаяАмортизацияВР                                         КАК НакопленнаяАмортизацияВР,
	|	ПараметрыУчетаНМА_БУ.НакопленнаяАмортизацияНУ                                         КАК НакопленнаяАмортизацияНУ,
	|	ПараметрыУчетаНМА_БУ.НакопленнаяАмортизацияНУЦФ                                       КАК НакопленнаяАмортизацияНУЦФ,
	|	ПараметрыУчетаНМА_БУ.НакопленнаяАмортизацияПР                                         КАК НакопленнаяАмортизацияПР,
	|	ПараметрыУчетаНМА_БУ.НакопленнаяАмортизацияПРЦФ                                       КАК НакопленнаяАмортизацияПРЦФ,
	|	ПараметрыУчетаНМА_УУ.НакопленнаяАмортизацияУУ                                         КАК НакопленнаяАмортизацияУУ,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ВидОбъектаУчета, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ПорядокУчетаНУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию) 
	|		ИНАЧЕ ПараметрыУчетаНМА_БУ.НачислятьАмортизациюНУ         
	|	КОНЕЦ КАК НачислятьАмортизациюНУ,
	|	ПараметрыУчетаНМА_БУ.НалогообложениеНДС                                               КАК НалогообложениеНДС,
	|	ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ОбъемНаработки, 
	|				ПараметрыУчетаНМА_УУ.ОбъемНаработки)                                      КАК ОбъемНаработки,
	|	ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ОрганизацияПолучательРасходов, 
	|				ПараметрыУчетаНМА_УУ.ОрганизацияПолучательРасходов)                       КАК ОрганизацияПолучательРасходов,
	|	ПараметрыУчетаНМА_БУ.ПервоначальнаяСтоимостьБУ                                        КАК ПервоначальнаяСтоимостьБУ,
	|	ПараметрыУчетаНМА_БУ.ПервоначальнаяСтоимостьНУ                                        КАК ПервоначальнаяСтоимостьНУ,
	
	|	ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ПервоначальнаяСтоимостьБУ, 0) <> (ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ТекущаяСтоимостьБУ, 0) + ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ТекущаяСтоимостьБУЦФ, 0))
	|		ИЛИ ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ПервоначальнаяСтоимостьНУ, 0) <> (ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ТекущаяСтоимостьНУ, 0) + ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ТекущаяСтоимостьНУЦФ, 0))
	|		ИЛИ ЕСТЬNULL(ПараметрыУчетаНМА_УУ.ПервоначальнаяСтоимостьУУ, 0) <> ЕСТЬNULL(ПараметрыУчетаНМА_УУ.ТекущаяСтоимостьУУ, 0) КАК ПервоначальнаяСтоимостьОтличается,
	
	|	ПараметрыУчетаНМА_УУ.ПервоначальнаяСтоимостьУУ                                        КАК ПервоначальнаяСтоимостьУУ,
	|	ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ПередаватьРасходыВДругуюОрганизацию, 
	|				ПараметрыУчетаНМА_УУ.ПередаватьРасходыВДругуюОрганизацию)                 КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПараметрыУчетаНМА_БУ.ПорядокУчетаБУ                                                   КАК ПорядокУчетаБУ,
	|	ПараметрыУчетаНМА_БУ.ПорядокУчетаНУ                                                   КАК ПорядокУчетаНУ,
	|	ПараметрыУчетаНМА_УУ.ПорядокУчета                                                     КАК ПорядокУчетаУУ,
	|	ПараметрыУчетаНМА_БУ.ПрименениеЦелевогоФинансирования                                 КАК ПрименениеЦелевогоФинансирования,
	|	ПараметрыУчетаНМА_УУ.РезервПереоценкиАмортизации                                      КАК РезервПереоценкиАмортизации,
	|	ПараметрыУчетаНМА_БУ.РезервПереоценкиАмортизацииРегл                                  КАК РезервПереоценкиАмортизацииРегл,
	|	ПараметрыУчетаНМА_УУ.РезервПереоценкиСтоимости                                        КАК РезервПереоценкиСтоимости,
	|	ПараметрыУчетаНМА_БУ.РезервПереоценкиСтоимостиРегл                                    КАК РезервПереоценкиСтоимостиРегл,
	|	ПараметрыУчетаНМА_БУ.СпециальныйКоэффициентНУ                                         КАК СпециальныйКоэффициентНУ,
	|	ЕСТЬNULL(ПараметрыУчетаНМА_БУ.СпособПоступления, 
	|				ПараметрыУчетаНМА_УУ.СпособПоступления)                                   КАК СпособПоступления,
	|	ПараметрыУчетаНМА_БУ.СрокИспользованияБУ                                              КАК СрокИспользованияБУ,
	|	ПараметрыУчетаНМА_БУ.СрокИспользованияНУ                                              КАК СрокИспользованияНУ,
	|	ПараметрыУчетаНМА_БУ.СрокИспользованияНУДо2009                                        КАК СрокИспользованияНУДо2009,
	|	ПараметрыУчетаНМА_УУ.СрокИспользования                                                КАК СрокИспользованияУУ,
	|	ПараметрыУчетаНМА_БУ.СтатьяДоходов                                                    КАК СтатьяДоходов,
	|	ПараметрыУчетаНМА_БУ.СтатьяРасходов                                                   КАК СтатьяРасходовБУ,
	|	ПараметрыУчетаНМА_УУ.СтатьяРасходов                                                   КАК СтатьяРасходовУУ,
	|	ПараметрыУчетаНМА_БУ.ТекущаяСтоимостьБУ                                               КАК ТекущаяСтоимостьБУ,
	|	ПараметрыУчетаНМА_БУ.ТекущаяСтоимостьБУЦФ                                             КАК ТекущаяСтоимостьБУЦФ,
	|	ПараметрыУчетаНМА_БУ.ТекущаяСтоимостьВР                                               КАК ТекущаяСтоимостьВР,
	|	ПараметрыУчетаНМА_БУ.ТекущаяСтоимостьНУ                                               КАК ТекущаяСтоимостьНУ,
	|	ПараметрыУчетаНМА_БУ.ТекущаяСтоимостьНУЦФ                                             КАК ТекущаяСтоимостьНУЦФ,
	|	ПараметрыУчетаНМА_БУ.ТекущаяСтоимостьПР                                               КАК ТекущаяСтоимостьПР,
	|	ПараметрыУчетаНМА_БУ.ТекущаяСтоимостьПРЦФ                                             КАК ТекущаяСтоимостьПРЦФ,
	|	ПараметрыУчетаНМА_УУ.ТекущаяСтоимостьУУ                                               КАК ТекущаяСтоимостьУУ,
	
	// Реквизиты для проверки
	|	ПараметрыУчетаНМА_УУ.Местонахождение                                           КАК МестонахождениеУУ,
	|	СчетаУчета.СчетУчета                                                           КАК СчетУчета,
	|	СчетаУчета.СчетУчетаАмортизации                                                КАК СчетУчетаАмортизации,
	|	СчетаУчета.СчетУчетаЦФ                                                         КАК СчетУчетаЦФ,
	|	СчетаУчета.СчетУчетаАмортизацииЦФ                                              КАК СчетУчетаАмортизацииЦФ,
	|	СчетаУчета.СчетЗабалансовогоУчета                                              КАК СчетЗабалансовогоУчета,
	|	ПараметрыУчетаНМА_БУ.СчетПередачиРасходов                                      КАК СчетПередачиРасходов,
	|	ГруппыФинансовогоУчета.СчетУчета                                               КАК СчетУчетаГФУ,
	|	ГруппыФинансовогоУчета.СчетУчетаАмортизации                                    КАК СчетУчетаАмортизацииГФУ,
	|	ГруппыФинансовогоУчета.СчетУчетаЦФ                                             КАК СчетУчетаЦФГФУ,
	|	ГруппыФинансовогоУчета.СчетУчетаАмортизацииЦФ                                  КАК СчетУчетаАмортизацииЦФГФУ,
	|	ГруппыФинансовогоУчета.СчетЗабалансовогоУчета                                  КАК СчетЗабалансовогоУчетаГФУ
	|ИЗ
	|	ПринятыеКУчетуНМА КАК ПринятыеКУчетуНМА
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаНМА_БУ КАК ПараметрыУчетаНМА_БУ
	|		ПО (ПараметрыУчетаНМА_БУ.НематериальныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
	|			И (ПараметрыУчетаНМА_БУ.Организация = ПринятыеКУчетуНМА.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаНМА_УУ КАК ПараметрыУчетаНМА_УУ
	|		ПО (ПараметрыУчетаНМА_УУ.НематериальныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
	|			И (ПараметрыУчетаНМА_УУ.Организация = ПринятыеКУчетуНМА.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаУчета КАК СчетаУчета
	|		ПО (СчетаУчета.ВнеоборотныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчетаИСчетаУчета КАК ГруппыФинансовогоУчета
	|		ПО ГруппыФинансовогоУчета.Ссылка = ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ГруппаФинансовогоУчета, ПараметрыУчетаНМА_УУ.ГруппаФинансовогоУчета)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ВводОстатковПроведен
	|		ПО (ВводОстатковПроведен.НематериальныйАктив = ПараметрыУчетаНМА_БУ.НематериальныйАктив)
	|			И (ВводОстатковПроведен.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР))
	|			И (ВводОстатковПроведен.Ссылка.Организация = ЕСТЬNULL(ПараметрыУчетаНМА_БУ.Организация, ПараметрыУчетаНМА_УУ.Организация))
	|			И (ВводОстатковПроведен.Ссылка.Проведен)
	|			И (&РежимПереносаДанных = ""Проверить"")
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Местонахождение,
	|	ОтражатьВРеглУчете,
	|	ОтражатьВУпрУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаПараметрыУчетаНМА_БУ(ТекстыЗапроса, ПараметрыОбработчика)
	
	ТекстЗапросаОстаткиПоСчетамУчетаНМА_БУ(ТекстыЗапроса);
	ТекстЗапросаПереоценкаСтоимостиНМА(ТекстыЗапроса);
	ТекстЗапросаПереоценкаАмортизацииНМА(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияНМА.Организация КАК Организация,
	|	ПервоначальныеСведенияНМА.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьПР КАК ПервоначальнаяСтоимостьПР,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьВР КАК ПервоначальнаяСтоимостьВР,
	|	ПервоначальныеСведенияНМА.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияНМА.ДатаПриобретения КАК ДатаПриобретения,
	|	ПервоначальныеСведенияНМА.ДатаПринятияКУчетуБУ КАК ДатаПринятияКУчетуБУ,
	|	ПервоначальныеСведенияНМА.ДатаПринятияКУчетуБУ КАК ДатаПринятияКУчетуНУ,
	|	ПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ КАК ДокументПринятияКУчетуБУ,
	|	ПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ КАК ДокументПринятияКУчетуНУ,
	|	ПервоначальныеСведенияНМА.ДокументСписания КАК ДокументСписания,
	|	ПервоначальныеСведенияНМА.РезервПереоценкиАмортизации КАК РезервПереоценкиАмортизации,
	|	ПервоначальныеСведенияНМА.РезервПереоценкиСтоимости КАК РезервПереоценкиСтоимости,
	|	ПервоначальныеСведенияНМА.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияНМА.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияНМА.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияНМА.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009
	|ПОМЕСТИТЬ ПервоначальныеСведенияНМА
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И НЕ Регистратор ССЫЛКА Документ.ИзменениеПараметровНМА2_4
	|				И НематериальныйАктив В
	|						(ВЫБРАТЬ
	|							СписокАктивов.ВнеоборотныйАктив
	|						ИЗ
	|							ПринятыеКУчетуНМА КАК СписокАктивов)) КАК ПервоначальныеСведенияНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииНМАБУ.НематериальныйАктив КАК НематериальныйАктив,
	|	ПараметрыАмортизацииНМАБУ.Организация КАК Организация,
	|	ПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользованияБУ,
	|	ПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	ПараметрыАмортизацииНМАБУ.КоэффициентБУ КАК КоэффициентБУ,
	|	ПараметрыАмортизацииНМАБУ.СпециальныйКоэффициент КАК СпециальныйКоэффициент
	|ПОМЕСТИТЬ ПараметрыАмортизацииНМАБУ
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииНМАБУ.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И НЕ Регистратор ССЫЛКА Документ.ИзменениеПараметровНМА2_4
	|				И (НематериальныйАктив, Организация) В
	|						(ВЫБРАТЬ
	|							СписокАктивов.ВнеоборотныйАктив,
	|							СписокАктивов.Организация
	|						ИЗ
	|							ПринятыеКУчетуНМА КАК СписокАктивов)) КАК ПараметрыАмортизацииНМАБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансирования.НематериальныйАктив КАК НематериальныйАктив,
	|	ПараметрыЦелевогоФинансирования.ПрименениеЦелевогоФинансирования КАК ПрименениеЦелевогоФинансирования,
	|	ПараметрыЦелевогоФинансирования.СчетУчета КАК СчетУчета,
	|	ПараметрыЦелевогоФинансирования.СчетАмортизации КАК СчетАмортизации,
	|	ПараметрыЦелевогоФинансирования.СтатьяДоходов КАК СтатьяДоходов,
	|	ПараметрыЦелевогоФинансирования.АналитикаДоходов КАК АналитикаДоходов
	|ПОМЕСТИТЬ ПараметрыЦелевогоФинансированияНМА
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И НематериальныйАктив В
	|						(ВЫБРАТЬ
	|							СписокАктивов.ВнеоборотныйАктив
	|						ИЗ
	|							ПринятыеКУчетуНМА КАК СписокАктивов)) КАК ПараметрыЦелевогоФинансирования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПорядокУчетаНМА.Организация КАК Организация,
	|	ПорядокУчетаНМА.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПорядокУчетаНМА.ОбъемНаработки КАК ОбъемНаработки
	|ПОМЕСТИТЬ ПорядокУчетаНМА
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И НЕ Регистратор ССЫЛКА Документ.ИзменениеПараметровНМА2_4
	|				И (НематериальныйАктив, Организация) В
	|						(ВЫБРАТЬ
	|							СписокАктивов.ВнеоборотныйАктив,
	|							СписокАктивов.Организация
	|						ИЗ
	|							ПринятыеКУчетуНМА КАК СписокАктивов)) КАК ПорядокУчетаНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаНМАБУ.НематериальныйАктив КАК НематериальныйАктив,
	|	ПорядокУчетаНМАБУ.Организация КАК Организация,
	|	ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|	ПорядокУчетаНМАБУ.СтатьяРасходовБУ КАК СтатьяРасходов,
	|	ПорядокУчетаНМАБУ.АналитикаРасходовБУ КАК АналитикаРасходов,
	|	ПорядокУчетаНМАБУ.СпособОтраженияРасходовБУ <> НЕОПРЕДЕЛЕНО КАК СпособОтраженияРасходовЗаданДокументом,
	|	ПорядокУчетаНМАБУ.СпособОтраженияРасходовБУ КАК СпособОтраженияРасходов,
	|	ПорядокУчетаНМАБУ.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаНМАБУ.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов,
	|	ПорядокУчетаНМАБУ.СчетПередачиРасходов КАК СчетПередачиРасходов,
	|	ПорядокУчетаНМАБУ.НалогообложениеНДС КАК НалогообложениеНДС
	|ПОМЕСТИТЬ ПорядокУчетаНМАБУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И НЕ Регистратор ССЫЛКА Документ.ИзменениеПараметровНМА2_4
	|				И (НематериальныйАктив, Организация) В
	|						(ВЫБРАТЬ
	|							СписокАктивов.ВнеоборотныйАктив,
	|							СписокАктивов.Организация
	|						ИЗ
	|							ПринятыеКУчетуНМА КАК СписокАктивов)) КАК ПорядокУчетаНМАБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПринятыеКУчетуНМА.ВнеоборотныйАктив                                                   КАК НематериальныйАктив,
	|	ПринятыеКУчетуНМА.Организация                                                         КАК Организация,
	
	|	ИСТИНА                                                                                КАК ОтражатьВРеглУчете,
	|	ДатыПринятияКУчету.Подразделение                                                      КАК Местонахождение,
	
	// Параметры учета
	|	ГруппыФинансовогоУчета.ГруппаФинансовогоУчета                                         КАК ГруппаФинансовогоУчета,
	|	ПорядокУчетаНМА.НаправлениеДеятельности                                               КАК НаправлениеДеятельности,
	|	ДатыПринятияКУчету.ДатаПринятияКУчетуБУ                                               КАК ДатаПринятияКУчету,
	|	ВЫБОР 
	|		КОГДА ПервоначальныеСведенияНМА.ДатаПриобретения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПервоначальныеСведенияНМА.ДатаПриобретения
	|		ИНАЧЕ ДатыПринятияКУчету.ДатаПринятияКУчетуБУ
	|	КОНЕЦ                                                                                 КАК ДатаПриобретения,
	|	ПринятыеКУчетуНМА.ВнеоборотныйАктив.ВидОбъектаУчета                                   КАК ВидОбъектаУчета,
	|
	|	ВЫБОР 
	|		КОГДА ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию)
	|	КОНЕЦ                                                                                 КАК ПорядокУчетаБУ,
	|
	|	ПервоначальныеСведенияНМА.ПорядокУчетаНУ                                              КАК ПорядокУчетаНУ,
	|
	|	ПараметрыЦелевогоФинансирования.ПрименениеЦелевогоФинансирования                      КАК ПрименениеЦелевогоФинансирования,
	|	ПервоначальныеСведенияНМА.СпособПоступления                                           КАК СпособПоступления,
	
	// Восстановительная стоимость
	|	ЕСТЬNULL(ОстаточнаяСтоимость.СуммаОстатокДт, 0)                                       КАК ТекущаяСтоимостьБУ,
	|	ЕСТЬNULL(ОстаточнаяСтоимостьЦФ.СуммаОстатокДт, 0)                                     КАК ТекущаяСтоимостьБУЦФ,
	|	ЕСТЬNULL(ОстаточнаяСтоимость.СуммаНУОстатокДт, 0)                                     КАК ТекущаяСтоимостьНУ,
	|	ЕСТЬNULL(ОстаточнаяСтоимостьЦФ.СуммаНУОстатокДт, 0)                                   КАК ТекущаяСтоимостьНУЦФ,
	|	ЕСТЬNULL(ОстаточнаяСтоимость.СуммаПРОстатокДт, 0)                                     КАК ТекущаяСтоимостьПР,
	|	ЕСТЬNULL(ОстаточнаяСтоимостьЦФ.СуммаПРОстатокДт, 0)                                   КАК ТекущаяСтоимостьПРЦФ,
	|	ЕСТЬNULL(ОстаточнаяСтоимость.СуммаВРОстатокДт, 0)                                     КАК ТекущаяСтоимостьВР,
	
	// Первоначальная стоимость
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ                                   КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ                                   КАК ПервоначальнаяСтоимостьНУ,
	
	// Накопленная амортизация
	|	ЕСТЬNULL(НачисленнаяАмортизация.СуммаОстатокКт, 0)                                    КАК НакопленнаяАмортизацияБУ,
	|	ЕСТЬNULL(НачисленнаяАмортизацияЦФ.СуммаОстатокКт, 0)                                  КАК НакопленнаяАмортизацияБУЦФ,
	|	ЕСТЬNULL(НачисленнаяАмортизация.СуммаНУОстатокКт, 0)                                  КАК НакопленнаяАмортизацияНУ,
	|	ЕСТЬNULL(НачисленнаяАмортизацияЦФ.СуммаНУОстатокКт, 0)                                КАК НакопленнаяАмортизацияНУЦФ,
	|	ЕСТЬNULL(НачисленнаяАмортизация.СуммаПРОстатокКт, 0)                                  КАК НакопленнаяАмортизацияПР,
	|	ЕСТЬNULL(НачисленнаяАмортизацияЦФ.СуммаПРОстатокКт, 0)                                КАК НакопленнаяАмортизацияПРЦФ,
	|	ЕСТЬNULL(НачисленнаяАмортизация.СуммаВРОстатокКт, 0)                                  КАК НакопленнаяАмортизацияВР,
	
	// События
	|	ЕСТЬNULL(ПереоценкаАмортизацииНМА.РезервПереоценкиАмортизацииРегл, 0) <> 0
	|		ИЛИ ЕСТЬNULL(ПереоценкаСтоимостиНМА.РезервПереоценкиСтоимостиРегл, 0) <> 0        КАК ЕстьРезервПереоценкиРегл,
	
	|	ЕСТЬNULL(ПереоценкаАмортизацииНМА.РезервПереоценкиАмортизацииРегл, 0)                 КАК РезервПереоценкиАмортизацииРегл,
	|	ЕСТЬNULL(ПереоценкаСтоимостиНМА.РезервПереоценкиСтоимостиРегл, 0)                     КАК РезервПереоценкиСтоимостиРегл,
	|	ДатыПринятияКУчету.ДокументВводаВЭксплуатациюБУ                                       КАК ДокументПринятияКУчету,
	
	// Амортизация
	|	ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ                                              КАК НачислятьАмортизациюБУ,
	|	ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииБУ                                КАК МетодНачисленияАмортизацииБУ,
	|	ПараметрыАмортизацииНМАБУ.КоэффициентБУ                                               КАК КоэффициентБУ,
	|	ПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияБУ                                КАК СрокИспользованияБУ,
	|	ПорядокУчетаНМА.ОбъемНаработки                                                        КАК ОбъемНаработки,
	
	|	ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ                                              КАК НачислятьАмортизациюНУ,
	|	ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииНУ                                КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияНМА.АмортизацияДо2009                                           КАК АмортизацияДо2009,
	|	ПараметрыАмортизацииНМАБУ.СпециальныйКоэффициент                                      КАК СпециальныйКоэффициентНУ,
	|	ПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияНУ                                КАК СрокИспользованияНУ,
	|	ПервоначальныеСведенияНМА.ФактическийСрокИспользованияДо2009                          КАК СрокИспользованияНУДо2009,
	
	// Отражение расходов
	|	ПорядокУчетаНМАБУ.СтатьяРасходов                                                      КАК СтатьяРасходов,
	|	ПорядокУчетаНМАБУ.АналитикаРасходов                                                   КАК АналитикаРасходов,
	|	ПорядокУчетаНМАБУ.СпособОтраженияРасходовЗаданДокументом                              КАК СпособОтраженияРасходовЗаданДокументом,
	|	ПорядокУчетаНМАБУ.СпособОтраженияРасходов                                             КАК СпособОтраженияРасходов,
	
	// Передача расходов
	|	ПорядокУчетаНМАБУ.ПередаватьРасходыВДругуюОрганизацию                                 КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаНМАБУ.ОрганизацияПолучательРасходов                                       КАК ОрганизацияПолучательРасходов,
	|	ПорядокУчетаНМАБУ.СчетПередачиРасходов                                                КАК СчетПередачиРасходов,
	
	// Целевое финансирование
	|	ПараметрыЦелевогоФинансирования.СтатьяДоходов                                         КАК СтатьяДоходов,
	|	ПараметрыЦелевогоФинансирования.АналитикаДоходов                                      КАК АналитикаДоходов,
	|
	// Раздельный учет НДС
	|	ДатыПринятияКУчету.ВариантРаздельногоУчетаНДС КАК ВариантРаздельногоУчетаНДС,
	|	ЕСТЬNULL(ПорядокУчетаНМАБУ.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) КАК НалогообложениеНДС
	|
	|ПОМЕСТИТЬ ПараметрыУчетаНМА_БУ
	|
	|ИЗ
	|	ПринятыеКУчетуНМА КАК ПринятыеКУчетуНМА
	|
	// ПервоначальныеСведенияНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияНМА КАК ПервоначальныеСведенияНМА
	|		ПО (ПервоначальныеСведенияНМА.НематериальныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
	|
	// ПараметрыАмортизацииНМАБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииНМАБУ КАК ПараметрыАмортизацииНМАБУ
	|		ПО (ПараметрыАмортизацииНМАБУ.НематериальныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
	|			И (ПараметрыАмортизацииНМАБУ.Организация = ПринятыеКУчетуНМА.Организация)
	|
	// ПараметрыЦелевогоФинансирования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыЦелевогоФинансированияНМА КАК ПараметрыЦелевогоФинансирования
	|		ПО (ПараметрыЦелевогоФинансирования.НематериальныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
	|
	// ПорядокУчетаНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаНМА КАК ПорядокУчетаНМА
	|		ПО (ПорядокУчетаНМА.НематериальныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
	|			И (ПорядокУчетаНМА.Организация = ПринятыеКУчетуНМА.Организация)
	|
	// ПорядокУчетаНМАБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|		ПО (ПорядокУчетаНМАБУ.НематериальныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
	|			И (ПорядокУчетаНМАБУ.Организация = ПринятыеКУчетуНМА.Организация)
	|
	// Прочие таблицы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчета КАК ГруппыФинансовогоУчета
	|		ПО (ГруппыФинансовогоУчета.ВнеоборотныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаНМА КАК ОстаточнаяСтоимость
	|		ПО (ОстаточнаяСтоимость.ВнеоборотныйАктив = ГруппыФинансовогоУчета.ВнеоборотныйАктив)
	|			И (ОстаточнаяСтоимость.Счет = ГруппыФинансовогоУчета.СчетУчета)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаНМА КАК ОстаточнаяСтоимостьЦФ
	|		ПО (ОстаточнаяСтоимостьЦФ.ВнеоборотныйАктив = ГруппыФинансовогоУчета.ВнеоборотныйАктив)
	|			И (ОстаточнаяСтоимостьЦФ.Счет = ГруппыФинансовогоУчета.СчетУчетаЦФ)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаНМА КАК НачисленнаяАмортизация
	|		ПО (НачисленнаяАмортизация.ВнеоборотныйАктив = ГруппыФинансовогоУчета.ВнеоборотныйАктив)
	|			И (НачисленнаяАмортизация.Счет = ГруппыФинансовогоУчета.СчетУчетаАмортизации)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаНМА КАК НачисленнаяАмортизацияЦФ
	|		ПО (НачисленнаяАмортизацияЦФ.ВнеоборотныйАктив = ГруппыФинансовогоУчета.ВнеоборотныйАктив)
	|			И (НачисленнаяАмортизацияЦФ.Счет = ГруппыФинансовогоУчета.СчетУчетаАмортизацииЦФ)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыПринятияКУчету КАК ДатыПринятияКУчету
	|		ПО (ДатыПринятияКУчету.ВнеоборотныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПереоценкаСтоимостиНМА КАК ПереоценкаСтоимостиНМА
	|		ПО (ПереоценкаСтоимостиНМА.ВнеоборотныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПереоценкаАмортизацииНМА КАК ПереоценкаАмортизацииНМА
	|		ПО (ПереоценкаАмортизацииНМА.ВнеоборотныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
	|
	|ГДЕ
	|	ПринятыеКУчетуНМА.ОтражатьВРеглУчете
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаПараметрыУчетаНМА_УУ(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапросаОстаткиПоСчетамУчетаНМА_УУ(ТекстыЗапроса, ПараметрыОбработчика);
	
	Если ПараметрыОбработчика.ИспользоватьДанныеМеждународногоУчета Тогда
		
		//++ НЕ УТКА
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПринятыеКУчетуНМА.ВнеоборотныйАктив                                                   КАК НематериальныйАктив,
		|	ПринятыеКУчетуНМА.Организация                                                         КАК Организация,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР)          КАК ХозяйственнаяОперация,
		
		|	ИСТИНА                                                                                КАК ОтражатьВУпрУчете,
		|	ПервоначальныеСведения.Подразделение                                                  КАК Местонахождение,
		
		// Параметры учета
		|	ПервоначальныеСведения.НаправлениеДеятельности                                        КАК НаправлениеДеятельности,
		|	ПринятыеКУчетуНМА.ВнеоборотныйАктив.ВидОбъектаУчета                                   КАК ВидОбъектаУчета,
		|	ГруппыФинансовогоУчета.ГруппаФинансовогоУчета                                         КАК ГруппаФинансовогоУчета,
		|	ДатыПринятияКУчету.ДатаПринятияКУчетуУУ                                               КАК ДатаПринятияКУчету,
		|	ДатыПринятияКУчету.ДатаПринятияКУчетуУУ                                               КАК ДатаПриобретения,
		|	ДатыПринятияКУчету.ДокументВводаВЭксплуатациюУУ                                       КАК ДокументПринятияКУчету,
		|	ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)  КАК ПорядокУчета,
		|	ЗНАЧЕНИЕ(Перечисление.СпособыПоступленияАктивов.ПустаяСсылка)                         КАК СпособПоступления,
		|	ПервоначальныеСведения.ЛиквидационнаяСтоимость                                        КАК ЛиквидационнаяСтоимость,
		
		// Стоимость
		|	ОстаточнаяСтоимость.СуммаОстатокДт                                                    КАК ТекущаяСтоимостьУУ,
		|	ОстаточнаяСтоимость.СуммаОстатокДт                                                    КАК ПервоначальнаяСтоимостьУУ,
		|	ЕСТЬNULL(НачисленнаяАмортизация.СуммаОстатокКт, 0)                                    КАК НакопленнаяАмортизацияУУ,
			
		// События
		|	ЛОЖЬ                                                                                  КАК ЕстьРезервПереоценки,
		|	0                                                                                     КАК РезервПереоценкиАмортизации,
		|	0                                                                                     КАК РезервПереоценкиСтоимости,
		
		// Амортизация
		|	ИСТИНА                                                                                КАК НачислятьАмортизацию,
		|	ПервоначальныеСведения.СрокИспользования                                              КАК СрокИспользования,
		|	ПервоначальныеСведения.МетодНачисленияАмортизации                                     КАК МетодНачисленияАмортизации,
		|	ПервоначальныеСведения.ОбъемНаработки                                                 КАК ОбъемНаработки,
		|	ПервоначальныеСведения.КоэффициентУскорения                                           КАК КоэффициентУскорения,
		
		// Отражение расходов
		|	ПервоначальныеСведения.СтатьяРасходов                                                 КАК СтатьяРасходов,
		|	ПервоначальныеСведения.АналитикаРасходов                                              КАК АналитикаРасходов,
		|	ЛОЖЬ                                                                                  КАК ПередаватьРасходыВДругуюОрганизацию,
		|	НЕОПРЕДЕЛЕНО                                                                          КАК ОрганизацияПолучательРасходов
		|
		|ПОМЕСТИТЬ ПараметрыУчетаНМА_УУ
		|ИЗ
		|	ПринятыеКУчетуНМА_МУ КАК ПринятыеКУчетуНМА
		|
		// ПервоначальныеСведения
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НематериальныеАктивыМеждународныйУчет.СрезПоследних(
		|				&Период,
		|				НематериальныйАктив В
		|					(ВЫБРАТЬ
		|						СписокАктивов.ВнеоборотныйАктив
		|					ИЗ
		|						ПринятыеКУчетуНМА_МУ КАК СписокАктивов)) КАК ПервоначальныеСведения
		|		ПО (ПервоначальныеСведения.НематериальныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
		|			И (ПервоначальныеСведения.Организация = ПринятыеКУчетуНМА.Организация)
		|
		// Прочие таблицы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчета КАК ГруппыФинансовогоУчета
		|		ПО (ГруппыФинансовогоУчета.ВнеоборотныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыПринятияКУчету КАК ДатыПринятияКУчету
		|		ПО (ДатыПринятияКУчету.ВнеоборотныйАктив = ПринятыеКУчетуНМА.ВнеоборотныйАктив)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаНМА_УУ КАК ОстаточнаяСтоимость
		|		ПО (ОстаточнаяСтоимость.Организация = ПервоначальныеСведения.Организация)
		|			И (ОстаточнаяСтоимость.ВнеоборотныйАктив = ПервоначальныеСведения.НематериальныйАктив)
		|			И (ОстаточнаяСтоимость.Счет = ПервоначальныеСведения.СчетУчета)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаНМА_УУ КАК НачисленнаяАмортизация
		|		ПО (НачисленнаяАмортизация.Организация = ПервоначальныеСведения.Организация)
		|			И (НачисленнаяАмортизация.ВнеоборотныйАктив = ПервоначальныеСведения.НематериальныйАктив)
		|			И (НачисленнаяАмортизация.Счет = ПервоначальныеСведения.СчетАмортизации)
		|ГДЕ
		|	ПервоначальныеСведения.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НематериальныйАктив,
		|	Организация";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
		//-- НЕ УТКА
		
	Иначе	
	
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПараметрыУчетаНМА_БУ.НематериальныйАктив                                              КАК НематериальныйАктив,
		|	ПараметрыУчетаНМА_БУ.Организация                                                      КАК Организация,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР)          КАК ХозяйственнаяОперация,
		
		|	ИСТИНА                                                                                КАК ОтражатьВУпрУчете,
		|	ПараметрыУчетаНМА_БУ.Местонахождение                                                  КАК Местонахождение,
		
		// Параметры учета
		|	ПараметрыУчетаНМА_БУ.НаправлениеДеятельности                                          КАК НаправлениеДеятельности,
		|	ПараметрыУчетаНМА_БУ.ВидОбъектаУчета                                                  КАК ВидОбъектаУчета,
		|	ПараметрыУчетаНМА_БУ.ГруппаФинансовогоУчета                                           КАК ГруппаФинансовогоУчета,
		|	ПараметрыУчетаНМА_БУ.ДатаПринятияКУчету                                               КАК ДатаПринятияКУчету,
		|	ПараметрыУчетаНМА_БУ.ДатаПриобретения                                                 КАК ДатаПриобретения,
		|	ПараметрыУчетаНМА_БУ.ДокументПринятияКУчету                                           КАК ДокументПринятияКУчету,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОстатокДт, 0) > 0
		|			ТОГДА ПараметрыУчетаНМА_БУ.ПорядокУчетаБУ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию)
		|	КОНЕЦ                                                                                 КАК ПорядокУчета,
		|	ПараметрыУчетаНМА_БУ.СпособПоступления                                                КАК СпособПоступления,
		|	0                                                                                     КАК ЛиквидационнаяСтоимость,
		
		// Стоимость
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОстатокДт, 0) > 0
		|			ТОГДА ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОстатокДт, 0)
		|		ИНАЧЕ ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОборот, 0)
		|	КОНЕЦ                                                                                 КАК ТекущаяСтоимостьУУ,
		|
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОстатокДт, 0) > 0
		|			ТОГДА ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОстатокДт, 0)
		|		ИНАЧЕ ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОборот, 0)
		|	КОНЕЦ                                                                                 КАК ПервоначальнаяСтоимостьУУ,
		|
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОстатокДт, 0) > 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОборот, 0)
		|	КОНЕЦ                                                                                 КАК НакопленнаяАмортизацияУУ,
			
		// События
		|	ЛОЖЬ                                                                                  КАК ЕстьРезервПереоценки,
		|	0                                                                                     КАК РезервПереоценкиАмортизации,
		|	0                                                                                     КАК РезервПереоценкиСтоимости,
		
		// Амортизация
		|	ПараметрыУчетаНМА_БУ.НачислятьАмортизациюБУ                                           КАК НачислятьАмортизацию,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОстаткиПоСчетамУчета.СуммаОстатокДт, 0) <= 0
		|			ТОГДА ПараметрыУчетаНМА_БУ.СрокИспользованияБУ
		|		КОГДА ПараметрыУчетаНМА_БУ.СрокИспользованияБУ > РАЗНОСТЬДАТ(ПараметрыУчетаНМА_БУ.ДатаПринятияКУчету, &Период, МЕСЯЦ)
		|			ТОГДА ПараметрыУчетаНМА_БУ.СрокИспользованияБУ 
		|					- РАЗНОСТЬДАТ(ПараметрыУчетаНМА_БУ.ДатаПринятияКУчету, &Период, МЕСЯЦ)
		|		ИНАЧЕ 0
		|	КОНЕЦ                                                                                 КАК СрокИспользования,
		|	ПараметрыУчетаНМА_БУ.МетодНачисленияАмортизацииБУ                                     КАК МетодНачисленияАмортизации,
		|	ПараметрыУчетаНМА_БУ.ОбъемНаработки                                                   КАК ОбъемНаработки,
		|	1                                                                                     КАК КоэффициентУскорения,
		
		// Отражение расходов
		|	ПараметрыУчетаНМА_БУ.СтатьяРасходов                                                   КАК СтатьяРасходов,
		|	ПараметрыУчетаНМА_БУ.АналитикаРасходов                                                КАК АналитикаРасходов,
		|	ПараметрыУчетаНМА_БУ.ПередаватьРасходыВДругуюОрганизацию                              КАК ПередаватьРасходыВДругуюОрганизацию,
		|	ПараметрыУчетаНМА_БУ.ОрганизацияПолучательРасходов                                    КАК ОрганизацияПолучательРасходов
		|
		|ПОМЕСТИТЬ ПараметрыУчетаНМА_УУ
		|ИЗ
		|	ПараметрыУчетаНМА_БУ КАК ПараметрыУчетаНМА_БУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСчетамУчетаНМА_УУ КАК ОстаткиПоСчетамУчета
		|		ПО (ОстаткиПоСчетамУчета.Организация = ПараметрыУчетаНМА_БУ.Организация)
		|			И (ОстаткиПоСчетамУчета.ВнеоборотныйАктив = ПараметрыУчетаНМА_БУ.НематериальныйАктив)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НематериальныйАктив,
		|	Организация";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ТекстЗапросаОстаткиПоСчетамУчетаНМА_БУ(ТекстыЗапроса)

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчета КАК Счет
	|ПОМЕСТИТЬ ВсеСчетаУчета
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчетаЦФ
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчетаЦФ <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчетаАмортизации
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчетаАмортизации <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчетаАмортизацииЦФ
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчетаАмортизацииЦФ <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНачалоПериода.Организация           КАК Организация,
	|	ОстаткиНачалоПериода.Субконто1             КАК ВнеоборотныйАктив,
	|	ОстаткиНачалоПериода.Счет                  КАК Счет,
	|	ОстаткиНачалоПериода.СуммаОстатокДт        КАК СуммаОстатокДт,
	|	ОстаткиНачалоПериода.СуммаНУОстатокДт      КАК СуммаНУОстатокДт,
	|	ОстаткиНачалоПериода.СуммаПРОстатокДт      КАК СуммаПРОстатокДт,
	|	ОстаткиНачалоПериода.СуммаВРОстатокДт      КАК СуммаВРОстатокДт,
	|	ОстаткиНачалоПериода.СуммаОстатокКт        КАК СуммаОстатокКт,
	|	ОстаткиНачалоПериода.СуммаНУОстатокКт      КАК СуммаНУОстатокКт,
	|	ОстаткиНачалоПериода.СуммаПРОстатокКт      КАК СуммаПРОстатокКт,
	|	ОстаткиНачалоПериода.СуммаВРОстатокКт      КАК СуммаВРОстатокКт
	|ПОМЕСТИТЬ ОстаткиПоСчетамУчетаНМА
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ПериодГраница,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВсеСчетаУчета.Счет
	|				ИЗ
	|					ВсеСчетаУчета КАК ВсеСчетаУчета),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Субконто1 В
	|					(ВЫБРАТЬ
	|						ПринятыеКУчетуНМА.ВнеоборотныйАктив
	|					ИЗ
	|						ПринятыеКУчетуНМА КАК ПринятыеКУчетуНМА)) КАК ОстаткиНачалоПериода
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив,
	|	Организация,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВсеСчетаУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаОстаткиПоСчетамУчетаНМА_УУ(ТекстыЗапроса, ПараметрыОбработчика)

	Если ПараметрыОбработчика.ИспользоватьДанныеМеждународногоУчета Тогда
		
		//++ НЕ УТКА
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетаУчета.СчетУчетаМУ КАК Счет
		|ПОМЕСТИТЬ ВсеСчетаУчета
		|ИЗ
		|	СчетаУчета КАК СчетаУчета
		|ГДЕ
		|	СчетаУчета.СчетУчетаМУ <> ЗНАЧЕНИЕ(ПланСчетов.Международный.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетаУчета.СчетУчетаАмортизацииМУ
		|ИЗ
		|	СчетаУчета КАК СчетаУчета
		|ГДЕ
		|	СчетаУчета.СчетУчетаАмортизацииМУ <> ЗНАЧЕНИЕ(ПланСчетов.Международный.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиНачалоПериода.Организация      КАК Организация,
		|	ОстаткиНачалоПериода.Субконто1        КАК ВнеоборотныйАктив,
		|	ОстаткиНачалоПериода.Счет             КАК Счет,
		|	ОстаткиНачалоПериода.СуммаОстатокДт 
		|		* ВЫБОР 
		|			КОГДА ОстаткиНачалоПериода.ПланСчетов.УчетВФункциональнойВалюте = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВФункциональнойВалюте.ВВалютеУпр)
		|				ТОГДА 1
		|			ИНАЧЕ ЕСТЬNULL(КурсВалютыУправленческогоУчета.КурсЗнаменатель, 1) / ЕСТЬNULL(КурсВалютыУправленческогоУчета.КурсЧислитель, 1)
		|		КОНЕЦ   КАК СуммаОстатокДт,
		|	ОстаткиНачалоПериода.СуммаОстатокКт 
		|		* ВЫБОР 
		|			КОГДА ОстаткиНачалоПериода.ПланСчетов.УчетВФункциональнойВалюте = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВФункциональнойВалюте.ВВалютеУпр)
		|				ТОГДА 1
		|			ИНАЧЕ ЕСТЬNULL(КурсВалютыУправленческогоУчета.КурсЗнаменатель, 1) / ЕСТЬNULL(КурсВалютыУправленческогоУчета.КурсЧислитель, 1)
		|		КОНЕЦ   КАК СуммаОстатокКт
		|ПОМЕСТИТЬ ОстаткиПоСчетамУчетаНМА_УУ
		|ИЗ
		|	РегистрБухгалтерии.Международный.Остатки(
		|			&ПериодГраница,
		|			Счет В
		|				(ВЫБРАТЬ
		|					ВсеСчетаУчета.Счет
		|				ИЗ
		|					ВсеСчетаУчета КАК ВсеСчетаУчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоМеждународные.ОсновныеСредства),
		|			Субконто1 В
		|					(ВЫБРАТЬ
		|						ПринятыеКУчетуНМА_МУ.ВнеоборотныйАктив
		|					ИЗ
		|						ПринятыеКУчетуНМА_МУ КАК ПринятыеКУчетуНМА_МУ)) КАК ОстаткиНачалоПериода
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&ДатаНачалаУчета) КАК КурсВалютыУправленческогоУчета
		|		ПО 
		|			КурсВалютыУправленческогоУчета.БазоваяВалюта = ОстаткиНачалоПериода.Организация.ВалютаРегламентированногоУчета
		|			И КурсВалютыУправленческогоУчета.Валюта = &ВалютаУпр
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВнеоборотныйАктив,
		|	Организация,
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВсеСчетаУчета";
		
		//-- НЕ УТКА
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	СтатьиРасходов.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ втСтатьиВНА
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|ГДЕ
		|	НЕ СтатьиРасходов.ЭтоГруппа
		|	И СтатьиРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
		|	И СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПрочиеРасходы.Организация КАК Организация,
		|	ПрочиеРасходы.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
		|	ПрочиеРасходы.Счет КАК Счет,
		|	СУММА(ПрочиеРасходы.СуммаОстатокДт) КАК СуммаОстатокДт,
		|	СУММА(ПрочиеРасходы.СуммаОстатокКт) КАК СуммаОстатокКт,
		|	СУММА(ПрочиеРасходы.СуммаОборот) КАК СуммаОборот
		|ПОМЕСТИТЬ ОстаткиПоСчетамУчетаНМА_УУ
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПрочиеРасходы.Организация КАК Организация,
		|		ПрочиеРасходы.АналитикаРасходов КАК ВнеоборотныйАктив,
		|		NULL КАК Счет,
		|		ВЫБОР
		|			КОГДА &МожноИспользоватьРесурсСуммаУпр
		|				ТОГДА ПрочиеРасходы.СуммаУпрОстаток
		|			ИНАЧЕ ПрочиеРасходы.СуммаОстаток
		|		КОНЕЦ КАК СуммаОстатокДт,
		|		0 КАК СуммаОстатокКт,
		|		0 КАК СуммаОборот
		|	ИЗ
		|		РегистрНакопления.ПрочиеРасходы.Остатки(
		|				&ПериодГраница,
		|				СтатьяРасходов В (ВЫБРАТЬ втСтатьиВНА.Ссылка ИЗ втСтатьиВНА КАК втСтатьиВНА)
		|				И (Организация, АналитикаРасходов) В
		|					(ВЫБРАТЬ
		|						ПринятыеКУчетуНМА.Организация,
		|						ПринятыеКУчетуНМА.ВнеоборотныйАктив
		|					ИЗ
		|						ПринятыеКУчетуНМА КАК ПринятыеКУчетуНМА)) КАК ПрочиеРасходы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПрочиеРасходы.Организация,
		|		ПрочиеРасходы.АналитикаРасходов,
		|		NULL,
		|		ВЫБОР
		|			КОГДА &МожноИспользоватьРесурсСуммаУпр
		|				ТОГДА ПрочиеРасходы.СуммаУпр
		|			ИНАЧЕ ПрочиеРасходы.Сумма
		|		КОНЕЦ * ВЫБОР
		|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -1
		|			ИНАЧЕ 1
		|		КОНЕЦ,
		|		0,
		|		ВЫБОР
		|			КОГДА &МожноИспользоватьРесурсСуммаУпр
		|				ТОГДА ПрочиеРасходы.СуммаУпр
		|			ИНАЧЕ ПрочиеРасходы.Сумма
		|		КОНЕЦ * ВЫБОР
		|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -1
		|			ИНАЧЕ 1
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
		|	ГДЕ
		|		ПрочиеРасходы.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
		|		И ПрочиеРасходы.Активность
		|		И ПрочиеРасходы.Период <= &Период
		|		И СтатьяРасходов В (ВЫБРАТЬ втСтатьиВНА.Ссылка ИЗ втСтатьиВНА КАК втСтатьиВНА)
		|		И (ПрочиеРасходы.Организация, ПрочиеРасходы.АналитикаРасходов) В
		|				(ВЫБРАТЬ
		|					ПринятыеКУчетуНМА.Организация,
		|					ПринятыеКУчетуНМА.ВнеоборотныйАктив
		|				ИЗ
		|					ПринятыеКУчетуНМА КАК ПринятыеКУчетуНМА)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПрочиеРасходы.Организация,
		|		ПрочиеРасходы.АналитикаРасходов,
		|		NULL,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА &МожноИспользоватьРесурсСуммаУпр
		|				ТОГДА ПрочиеРасходы.СуммаУпрПриход
		|			ИНАЧЕ ПрочиеРасходы.СуммаПриход
		|		КОНЕЦ КАК СуммаОборот
		|	ИЗ
		|		РегистрНакопления.ПрочиеРасходы.Обороты(
		|			,&ПериодГраница,, 
		|			СтатьяРасходов В (ВЫБРАТЬ втСтатьиВНА.Ссылка ИЗ втСтатьиВНА КАК втСтатьиВНА)
		|			И (Организация, АналитикаРасходов) В
		|				(ВЫБРАТЬ
		|					ПринятыеКУчетуНМА.Организация,
		|					ПринятыеКУчетуНМА.ВнеоборотныйАктив
		|				ИЗ
		|					ПринятыеКУчетуНМА КАК ПринятыеКУчетуНМА)) КАК ПрочиеРасходы
		|
		|	) КАК ПрочиеРасходы
		|
		|СГРУППИРОВАТЬ ПО
		|	ПрочиеРасходы.Организация,
		|	ПрочиеРасходы.ВнеоборотныйАктив,
		|	ПрочиеРасходы.Счет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВнеоборотныйАктив,
		|	Организация";
		
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаИзменениеПараметровУчетаНМА(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИзменениеПараметров.Ссылка                                   КАК Ссылка,
	|	ИзменениеПараметров.НомерСтроки                              КАК НомерСтроки,
	|	ИзменениеПараметров.Подразделение                            КАК Подразделение,
	|	ИзменениеПараметров.НаправлениеДеятельности                  КАК НаправлениеДеятельности,
	|	ИзменениеПараметров.СтатьяРасходов                           КАК СтатьяРасходов,
	|	ИзменениеПараметров.АналитикаРасходов                        КАК АналитикаРасходов,
	|	ИзменениеПараметров.ПередаватьРасходыВДругуюОрганизацию      КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ИзменениеПараметров.ОрганизацияПолучательРасходов            КАК ОрганизацияПолучательРасходов,
	|	ИзменениеПараметров.СчетПередачиРасходов                     КАК СчетПередачиРасходов,
	|	ИзменениеПараметров.Коэффициент                              КАК Коэффициент
	|ИЗ
	|	Документ.ИзменениеПараметровНМА.ОтражениеАмортизационныхРасходов КАК ИзменениеПараметров
	|ГДЕ
	|	ИзменениеПараметров.Ссылка В
	|			(ВЫБРАТЬ
	|				ПараметрыУчета.СпособОтраженияРасходов
	|			ИЗ
	|				ПараметрыУчетаНМА_БУ КАК ПараметрыУчета
	|			ГДЕ
	|				ПараметрыУчета.СпособОтраженияРасходовЗаданДокументом)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПараметрыУчетаНМА_БУ.ДокументПринятияКУчету                   КАК Ссылка,
	|	1                                                             КАК НомерСтроки,
	|	ПараметрыУчетаНМА_БУ.Местонахождение                          КАК Подразделение,
	|	ПараметрыУчетаНМА_БУ.НаправлениеДеятельности                  КАК НаправлениеДеятельности,
	|	ПараметрыУчетаНМА_БУ.СтатьяРасходов                           КАК СтатьяРасходов,
	|	ПараметрыУчетаНМА_БУ.АналитикаРасходов                        КАК АналитикаРасходов,
	|	ИСТИНА                                                        КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПараметрыУчетаНМА_БУ.ОрганизацияПолучательРасходов            КАК ОрганизацияПолучательРасходов,
	|	ПараметрыУчетаНМА_БУ.СчетПередачиРасходов                     КАК СчетПередачиРасходов,
	|	1                                                             КАК Коэффициент
	|ИЗ
	|	ПараметрыУчетаНМА_БУ КАК ПараметрыУчетаНМА_БУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаНМА_УУ КАК ПараметрыУчетаНМА_УУ
	|		ПО ПараметрыУчетаНМА_УУ.НематериальныйАктив = ПараметрыУчетаНМА_БУ.НематериальныйАктив
	|			И (ПараметрыУчетаНМА_УУ.Организация = ПараметрыУчетаНМА_БУ.Организация)
	|ГДЕ
	|	ПараметрыУчетаНМА_БУ.ПередаватьРасходыВДругуюОрганизацию
	|	И ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ОтражатьВРеглУчете, ЛОЖЬ)
	|				И ЕСТЬNULL(ПараметрыУчетаНМА_УУ.ОтражатьВУпрУчете, ЛОЖЬ)
	|				И &ИспользоватьДанныеМеждународногоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровНМА) КАК ХозяйственнаяОперация,
	|	&Период                                                КАК Дата,
	|	НовыйДокумент.Ссылка                                   КАК Ссылка,
	|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
	|	ЕСТЬNULL(ПараметрыУчетаНМА_УУ.ОтражатьВУпрУчете, ЛОЖЬ) КАК ОтражатьВУпрУчете,
	|	ПараметрыУчетаНМА_БУ.Организация                       КАК Организация,
	|	ПараметрыУчетаНМА_БУ.НематериальныйАктив               КАК НематериальныйАктив,
	|	ПараметрыУчетаНМА_БУ.СпособОтраженияРасходов           КАК ДокументОснование
	|ИЗ
	|	ПараметрыУчетаНМА_БУ КАК ПараметрыУчетаНМА_БУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаНМА_УУ КАК ПараметрыУчетаНМА_УУ
	|		ПО ПараметрыУчетаНМА_УУ.НематериальныйАктив = ПараметрыУчетаНМА_БУ.НематериальныйАктив
	|			И (ПараметрыУчетаНМА_УУ.Организация = ПараметрыУчетаНМА_БУ.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровНМА2_4 КАК НовыйДокумент
	|		ПО (НовыйДокумент.ДокументОснование = ПараметрыУчетаНМА_БУ.СпособОтраженияРасходов)
	|			И (НЕ НовыйДокумент.ПометкаУдаления)
	|ГДЕ
	|	ПараметрыУчетаНМА_БУ.СпособОтраженияРасходовЗаданДокументом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровНМА) КАК ХозяйственнаяОперация,
	|	&Период                                                КАК Дата,
	|	НовыйДокумент.Ссылка                                   КАК Ссылка,
	|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
	|	ПараметрыУчетаНМА_БУ.Организация                       КАК Организация,
	|	ПараметрыУчетаНМА_БУ.НематериальныйАктив               КАК НематериальныйАктив,
	|	ПараметрыУчетаНМА_БУ.ДокументПринятияКУчету            КАК ДокументОснование
	|ИЗ
	|	ПараметрыУчетаНМА_БУ КАК ПараметрыУчетаНМА_БУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыУчетаНМА_УУ КАК ПараметрыУчетаНМА_УУ
	|		ПО ПараметрыУчетаНМА_УУ.НематериальныйАктив = ПараметрыУчетаНМА_БУ.НематериальныйАктив
	|			И (ПараметрыУчетаНМА_УУ.Организация = ПараметрыУчетаНМА_БУ.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровНМА2_4 КАК НовыйДокумент
	|		ПО (НовыйДокумент.ДокументОснование = ПараметрыУчетаНМА_БУ.ДокументПринятияКУчету)
	|			И (НЕ НовыйДокумент.ПометкаУдаления)
	|ГДЕ
	|	ПараметрыУчетаНМА_БУ.ПередаватьРасходыВДругуюОрганизацию
	|	И ЕСТЬNULL(ПараметрыУчетаНМА_БУ.ОтражатьВРеглУчете, ЛОЖЬ)
	|	И ЕСТЬNULL(ПараметрыУчетаНМА_УУ.ОтражатьВУпрУчете, ЛОЖЬ)
	|	И &ИспользоватьДанныеМеждународногоУчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументОснование";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаПереоценкаСтоимостиНМА(ТекстыЗапроса)

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчета КАК Счет
	|ПОМЕСТИТЬ втВсеСчетаУчетаСтоимости
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчетаЦФ
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчетаЦФ <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК ВнеоборотныйАктив,
	|	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаДооценки,
	|	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаУценки
	|ПОМЕСТИТЬ втПредыдущаяПереоценкаСтоимостиДанные
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&ПериодГраница,
	|			Регистратор,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втВсеСчетаУчетаСтоимости КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					ПринятыеКУчетуНМА.Организация,
	|					ПринятыеКУчетуНМА.ВнеоборотныйАктив
	|				ИЗ
	|					ПринятыеКУчетуНМА КАК ПринятыеКУчетуНМА),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПереоценкаНМА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПервоначальныеСведения.НематериальныйАктив,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиСтоимости, 0) > 0
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиСтоимости, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиСтоимости, 0) < 0
	|			ТОГДА -ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиСтоимости, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|			&ПериодГраница,
	|			(Организация, НематериальныйАктив) В
	|				(ВЫБРАТЬ
	|					ПринятыеКУчетуНМА.Организация,
	|					ПринятыеКУчетуНМА.ВнеоборотныйАктив
	|				ИЗ
	|					ПринятыеКУчетуНМА КАК ПринятыеКУчетуНМА)) КАК ПервоначальныеСведения
	|ГДЕ
	|	ПервоначальныеСведения.РезервПереоценкиСтоимости <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПредыдущаяПереоценкаСтоимостиДанные.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	СУММА(втПредыдущаяПереоценкаСтоимостиДанные.СуммаДооценки - втПредыдущаяПереоценкаСтоимостиДанные.СуммаУценки) КАК РезервПереоценкиСтоимостиРегл
	|ПОМЕСТИТЬ ПереоценкаСтоимостиНМА
	|ИЗ
	|	втПредыдущаяПереоценкаСтоимостиДанные КАК втПредыдущаяПереоценкаСтоимостиДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	втПредыдущаяПереоценкаСтоимостиДанные.ВнеоборотныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втПредыдущаяПереоценкаСтоимостиДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втВсеСчетаУчетаСтоимости";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаПереоценкаАмортизацииНМА(ТекстыЗапроса)

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчетаАмортизации КАК Счет
	|ПОМЕСТИТЬ ВсеСчетаАмортизации
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчетаАмортизации <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчета.СчетУчетаАмортизацииЦФ
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.СчетУчетаАмортизацииЦФ <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК ВнеоборотныйАктив,
	|	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаДооценки,
	|	0 КАК СуммаУценки
	|ПОМЕСТИТЬ втПредыдущаяПереоценкаАмортизацииДанные
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&ПериодГраница,
	|			Регистратор,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаУчета.Счет
	|				ИЗ
	|					ВсеСчетаАмортизации КАК СчетаУчета),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					ПринятыеКУчетуНМА.Организация,
	|					ПринятыеКУчетуНМА.ВнеоборотныйАктив
	|				ИЗ
	|					ПринятыеКУчетуНМА КАК ПринятыеКУчетуНМА),
	|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриростСтоимостиПоПереоценке)),
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПереоценкаНМА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1,
	|	0,
	|	ХозрасчетныйОбороты.СуммаОборотДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&ПериодГраница,
	|			Регистратор,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаУчета.Счет
	|				ИЗ
	|					ВсеСчетаАмортизации КАК СчетаУчета),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					ПринятыеКУчетуНМА.Организация,
	|					ПринятыеКУчетуНМА.ВнеоборотныйАктив
	|				ИЗ
	|					ПринятыеКУчетуНМА КАК ПринятыеКУчетуНМА),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПереоценкаНМА
	|	И ХозрасчетныйОбороты.СуммаОборотДт > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПервоначальныеСведения.НематериальныйАктив,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиАмортизации, 0) > 0
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиАмортизации, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиАмортизации, 0) < 0
	|			ТОГДА -ЕСТЬNULL(ПервоначальныеСведения.РезервПереоценкиАмортизации, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|			&ПериодГраница,
	|			(Организация, НематериальныйАктив) В
	|				(ВЫБРАТЬ
	|					ПринятыеКУчетуНМА.Организация,
	|					ПринятыеКУчетуНМА.ВнеоборотныйАктив
	|				ИЗ
	|					ПринятыеКУчетуНМА КАК ПринятыеКУчетуНМА)) КАК ПервоначальныеСведения
	|ГДЕ
	|	ПервоначальныеСведения.РезервПереоценкиАмортизации <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПредыдущаяПереоценкаАмортизацииДанные.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	СУММА(втПредыдущаяПереоценкаАмортизацииДанные.СуммаДооценки - втПредыдущаяПереоценкаАмортизацииДанные.СуммаУценки) КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ ПереоценкаАмортизацииНМА
	|ИЗ
	|	втПредыдущаяПереоценкаАмортизацииДанные КАК втПредыдущаяПереоценкаАмортизацииДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	втПредыдущаяПереоценкаАмортизацииДанные.ВнеоборотныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втПредыдущаяПереоценкаАмортизацииДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВсеСчетаАмортизации";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ВложенияВоВнеоборотныеАктивы

Процедура ОбработатьВложенияВоВнеоборотныеАктивы(ПараметрыОбработчика)
	
	Если НЕ ТребуетсяВыполнитьЭтап("ПереносВложенийВоВнеоборотныеАктивы", ПараметрыОбработчика) Тогда
		Возврат;
	КонецЕсли;
	
	ЗафиксироватьНачалоВыполненияЭтапа("ПереносВложенийВоВнеоборотныеАктивы", 0, ПараметрыОбработчика);
	
	Если ПараметрыОбработчика.РежимПереносаДанных = "Проверить" Тогда
		ТекстЗапроса = ТекстЗапросаПроверитьВложенияВоВнеоборотныеАктивы(ПараметрыОбработчика);
	Иначе
		ТекстЗапроса = ТекстЗапросаВложенияВоВнеоборотныеАктивы(ПараметрыОбработчика);
	КонецЕсли; 
	
	Запрос = НовыйЗапрос(ПараметрыОбработчика, ТекстЗапроса);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	КоличествоДанных = 
		РезультатЗапроса[РезультатЗапроса.ВГраница()-1].Выбрать().Количество()
		+ РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать().Количество();
		
	Если ПараметрыОбработчика.РежимПереносаДанных <> "Проверить" Тогда
		КоличествоДанных = КоличествоДанных
			+ РезультатЗапроса[РезультатЗапроса.ВГраница()-3].Выбрать().Количество()
			+ РезультатЗапроса[РезультатЗапроса.ВГраница()-2].Выбрать().Количество();
	КонецЕсли; 
		
	ЗафиксироватьНачалоВыполненияЭтапа("ПереносВложенийВоВнеоборотныеАктивы", КоличествоДанных, ПараметрыОбработчика);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(
		ПараметрыОбработчика.МенеджерВременныхТаблиц,, 
		ПараметрыОбработчика.ИспользуемыеВременныеТаблицы);
		
	Если ПараметрыОбработчика.РежимПереносаДанных <> "Проверить" Тогда
		ОбработатьЛишниеДанные(
			РезультатЗапроса[РезультатЗапроса.ВГраница()-4], 
			ПараметрыОбработчика,
			"ПереносВложенийВоВнеоборотныеАктивы");
			
		ОбработатьЛишниеДанные(
			РезультатЗапроса[РезультатЗапроса.ВГраница()-3], 
			ПараметрыОбработчика,
			"КорректировкаОстаткаПрочиеАктивы");
	КонецЕсли; 
		
	ОбработатьПроблемныеВложенияВоВнеоборотныеАктивы(
		РезультатЗапроса[РезультатЗапроса.ВГраница()-2], 
		ПараметрыОбработчика,
		"ПереносВложенийВоВнеоборотныеАктивы");
		
	ОбработатьРезультатЗапросаДляДокументовВводаОстатков(
		РезультатЗапроса[РезультатЗапроса.ВГраница()-1], 
		ПараметрыОбработчика,
		"ПереносВложенийВоВнеоборотныеАктивы");
		
	ОбработатьРезультатЗапросаДляДокументовВводаОстатков(
		РезультатЗапроса[РезультатЗапроса.ВГраница()], 
		ПараметрыОбработчика,
		"КорректировкаОстаткаПрочиеАктивы");
		
	ЗафиксироватьОкончаниеВыполненияЭтапа("ПереносВложенийВоВнеоборотныеАктивы", ПараметрыОбработчика);
	
КонецПроцедуры

Функция ТекстЗапросаВложенияВоВнеоборотныеАктивы(ПараметрыОбработчика)

	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаВложенияВоВнеоборотныеАктивыСуммы(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаЛишниеВложенияВоВнеоборотныеАктивы(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаПроблемныеВложенияВоВнеоборотныеАктивы(ТекстыЗапроса, ПараметрыОбработчика);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы) КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВложенияСуммы.ВнеоборотныйАктив ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|		КОГДА ВложенияСуммы.ВнеоборотныйАктив ССЫЛКА Справочник.НематериальныеАктивы
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НМА)
	|	КОНЕЦ КАК ВидАктивов,
	|
	|	&Период                                КАК Дата,
	|	ИСТИНА                                 КАК ОтражатьВОперативномУчете,
	|	ЛОЖЬ                                   КАК ОтражатьВБУиНУ,
	|	ЛОЖЬ                                   КАК ОтражатьВУУ,
	|	ВложенияСуммы.Комментарий              КАК Комментарий,
	|	ВложенияСуммы.Организация              КАК Организация,
	|	ВложенияСуммы.ВнеоборотныйАктив        КАК ВнеоборотныйАктив,
	|	ВложенияСуммы.Подразделение            КАК Подразделение,
	|	ВложенияСуммы.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ВложенияСуммы.СтатьяРасходов           КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ВложенияСуммы.СуммаРегл > 0
	|				ИЛИ ВложенияСуммы.Комментарий <> &КомментарийВложения
	|			ТОГДА ВложенияСуммы.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                  КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА (ВложенияСуммы.СуммаРегл - ВложенияСуммы.СуммаПР - ВложенияСуммы.СуммаВР) > 0
	|				ИЛИ ВложенияСуммы.Комментарий <> &КомментарийВложения
	|			ТОГДА ВложенияСуммы.СуммаПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                  КАК СуммаПР,
	|	ВЫБОР
	|		КОГДА (ВложенияСуммы.СуммаРегл - ВложенияСуммы.СуммаПР - ВложенияСуммы.СуммаВР) > 0
	|				ИЛИ ВложенияСуммы.Комментарий <> &КомментарийВложения
	|			ТОГДА ВложенияСуммы.СуммаВР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                  КАК СуммаВР,
	|	ВЫБОР
	|		КОГДА ВложенияСуммы.Сумма > 0
	|				ИЛИ ВложенияСуммы.Комментарий <> &КомментарийВложения
	|			ТОГДА ВложенияСуммы.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ                                  КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВложенияСуммы.СуммаБезНДС > 0
	|				ИЛИ ВложенияСуммы.Комментарий <> &КомментарийВложения
	|			ТОГДА ВложенияСуммы.СуммаБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ                                  КАК СуммаБезНДС
	|ИЗ
	|	ВложенияВоВнеоборотныеАктивыСуммы КАК ВложенияСуммы
	|ГДЕ
	|	ВложенияСуммы.Комментарий <> &КомментарийВложения
	|		ИЛИ ВложенияСуммы.СуммаРегл > 0
	|		ИЛИ ВложенияСуммы.Сумма > 0
	|		ИЛИ ВложенияСуммы.СуммаБезНДС > 0
	|		ИЛИ (ВложенияСуммы.СуммаРегл - ВложенияСуммы.СуммаПР - ВложенияСуммы.СуммаВР) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ВидАктивов,
	|	ВнеоборотныйАктив,
	|	Подразделение,
	|	НаправлениеДеятельности,
	|	Комментарий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов) КАК ХозяйственнаяОперация,
	|
	|	&Период                                КАК Дата,
	|	ИСТИНА                                 КАК ОтражатьВОперативномУчете,
	|	ЛОЖЬ                                   КАК ОтражатьВБУиНУ,
	|	ЛОЖЬ                                   КАК ОтражатьВУУ,
	|	&КомментарийОбнулениеРегистраПрочиеАктивыПассивы КАК Комментарий,
	|	ВложенияСуммы.Организация              КАК Организация,
	|	ВложенияСуммы.Аналитика                КАК Аналитика,
	|	ВложенияСуммы.Подразделение            КАК Подразделение,
	|	ВложенияСуммы.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ВложенияСуммы.Статья                   КАК Статья,
	|	-ВложенияСуммы.Сумма                   КАК Сумма
	|ИЗ
	|	ОбнулитьРегистрПрочиеАктивыПассивы КАК ВложенияСуммы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение,
	|	НаправлениеДеятельности,
	|	Аналитика";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса.ВыгрузитьЗначения(), ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверитьВложенияВоВнеоборотныеАктивы(ПараметрыОбработчика)

	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаВложенияВоВнеоборотныеАктивыСуммы(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаВложенияВоВнеоборотныеАктивыПоДаннымУчета24(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаПроблемныеВложенияВоВнеоборотныеАктивы(ТекстыЗапроса, ПараметрыОбработчика);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы) КАК ХозяйственнаяОперация,
	|	ВложенияСуммы.Организация                  КАК Организация,
	|	ВложенияСуммы.ВнеоборотныйАктив            КАК ВнеоборотныйАктив,
	|	ВложенияСуммы.Подразделение                КАК Подразделение,
	|	ВложенияСуммы.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	ВложенияСуммы.СтатьяРасходов               КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ВложенияСуммы.СуммаРегл > 0
	|			ТОГДА ВложенияСуммы.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                      КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА (ВложенияСуммы.СуммаРегл - ВложенияСуммы.СуммаПР - ВложенияСуммы.СуммаВР) > 0
	|			ТОГДА ВложенияСуммы.СуммаПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                      КАК СуммаПР,
	|	ВЫБОР
	|		КОГДА (ВложенияСуммы.СуммаРегл - ВложенияСуммы.СуммаПР - ВложенияСуммы.СуммаВР) > 0
	|			ТОГДА ВложенияСуммы.СуммаВР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                      КАК СуммаВР,
	|	ВЫБОР
	|		КОГДА ВложенияСуммы.Сумма > 0
	|			ТОГДА ВложенияСуммы.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ                                      КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВложенияСуммы.СуммаБезНДС > 0
	|			ТОГДА ВложенияСуммы.СуммаБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ                                      КАК СуммаБезНДС,
	|	ЕСТЬNULL(ВложенияСуммы24.СуммаРегл, 0)     КАК СуммаРегл24,
	|	ЕСТЬNULL(ВложенияСуммы24.СуммаПР, 0)       КАК СуммаПР24,
	|	ЕСТЬNULL(ВложенияСуммы24.СуммаВР, 0)       КАК СуммаВР24,
	|	ЕСТЬNULL(ВложенияСуммы24.Сумма, 0)         КАК Сумма24,
	|	ЕСТЬNULL(ВложенияСуммы24.СуммаБезНДС, 0)   КАК СуммаБезНДС24
	|ИЗ
	|	ВложенияВоВнеоборотныеАктивыСуммы КАК ВложенияСуммы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВложенияВоВнеоборотныеАктивыПоДаннымУчета24 КАК ВложенияСуммы24
	|		ПО ВложенияСуммы24.Организация = ВложенияСуммы.Организация
	|			И ВложенияСуммы24.ВнеоборотныйАктив = ВложенияСуммы.ВнеоборотныйАктив
	|			И ВложенияСуммы24.Подразделение = ВложенияСуммы.Подразделение
	|			И ВложенияСуммы24.НаправлениеДеятельности = ВложенияСуммы.НаправлениеДеятельности
	|			И ВложенияСуммы24.СтатьяРасходов = ВложенияСуммы.СтатьяРасходов
	|
	|ГДЕ
	|	ВложенияСуммы.Комментарий = &КомментарийВложения
	|	И (НЕ(ВложенияСуммы.СуммаРегл = ЕСТЬNULL(ВложенияСуммы24.СуммаРегл, 0)
	|				ИЛИ ВложенияСуммы.СуммаРегл < 0
	|					И ЕСТЬNULL(ВложенияСуммы24.СуммаРегл, 0) = 0)
	|
	|       ИЛИ НЕ(ВложенияСуммы.Сумма = ЕСТЬNULL(ВложенияСуммы24.Сумма, 0)
	|				ИЛИ ВложенияСуммы.Сумма < 0
	|					И ЕСТЬNULL(ВложенияСуммы24.Сумма, 0) = 0)
	|
	|       ИЛИ НЕ(ВложенияСуммы.СуммаБезНДС = ЕСТЬNULL(ВложенияСуммы24.СуммаБезНДС, 0)
	|				ИЛИ ВложенияСуммы.СуммаБезНДС < 0
	|					И ЕСТЬNULL(ВложенияСуммы24.СуммаБезНДС, 0) = 0)
	|
	|       ИЛИ НЕ(ВложенияСуммы.СуммаПР = ЕСТЬNULL(ВложенияСуммы24.СуммаПР, 0)
	|				ИЛИ (ВложенияСуммы.СуммаРегл - ВложенияСуммы.СуммаПР - ВложенияСуммы.СуммаВР) < 0
	|					И ЕСТЬNULL(ВложенияСуммы24.СуммаПР, 0) = 0)
	|
	|       ИЛИ НЕ(ВложенияСуммы.СуммаВР = ЕСТЬNULL(ВложенияСуммы24.СуммаВР, 0)
	|				ИЛИ (ВложенияСуммы.СуммаРегл - ВложенияСуммы.СуммаПР - ВложенияСуммы.СуммаВР) < 0
	|					И ЕСТЬNULL(ВложенияСуммы24.СуммаВР, 0) = 0))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы) КАК ХозяйственнаяОперация,
	|	ВложенияСуммы24.Организация                КАК Организация,
	|	ВложенияСуммы24.ВнеоборотныйАктив          КАК ВнеоборотныйАктив,
	|	ВложенияСуммы24.Подразделение              КАК Подразделение,
	|	ВложенияСуммы24.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ВложенияСуммы24.СтатьяРасходов             КАК СтатьяРасходов,
	|	0                                          КАК СуммаРегл,
	|	0                                          КАК СуммаПР,
	|	0                                          КАК СуммаВР,
	|	0                                          КАК Сумма,
	|	0                                          КАК СуммаБезНДС,
	|	ВложенияСуммы24.СуммаРегл                  КАК СуммаРегл24,
	|	ВложенияСуммы24.СуммаПР                    КАК СуммаПР24,
	|	ВложенияСуммы24.СуммаВР                    КАК СуммаВР24,
	|	ВложенияСуммы24.Сумма                      КАК Сумма24,
	|	ВложенияСуммы24.СуммаБезНДС                КАК СуммаБезНДС24
	|ИЗ
	|	ВложенияВоВнеоборотныеАктивыПоДаннымУчета24 КАК ВложенияСуммы24
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВложенияВоВнеоборотныеАктивыСуммы КАК ВложенияСуммы
	|		ПО ВложенияСуммы24.Организация = ВложенияСуммы.Организация
	|			И ВложенияСуммы24.ВнеоборотныйАктив = ВложенияСуммы.ВнеоборотныйАктив
	|			И ВложенияСуммы24.Подразделение = ВложенияСуммы.Подразделение
	|			И ВложенияСуммы24.НаправлениеДеятельности = ВложенияСуммы.НаправлениеДеятельности
	|			И ВложенияСуммы24.СтатьяРасходов = ВложенияСуммы.СтатьяРасходов
	|			И ВложенияСуммы.Комментарий = &КомментарийВложения
	|
	|ГДЕ
	|	ВложенияСуммы.Организация ЕСТЬ NULL
	|	И (ВложенияСуммы24.СуммаРегл <> 0
	|		ИЛИ ВложенияСуммы.СуммаПР <> 0
	|		ИЛИ ВложенияСуммы.СуммаВР <> 0
	|		ИЛИ ВложенияСуммы.Сумма <> 0
	|		ИЛИ ВложенияСуммы.СуммаБезНДС <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов) КАК ХозяйственнаяОперация,
	|	ТаблицаОстатки.Организация КАК Организация,
	|	ТаблицаОстатки.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	СУММА(ТаблицаОстатки.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаОстатки.Организация КАК Организация,
	|		ТаблицаОстатки.Аналитика КАК ВнеоборотныйАктив,
	|		ТаблицаОстатки.СуммаОстаток КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ПрочиеАктивыПассивы.Остатки(
	|				&ПериодГраница,
	|				(Аналитика ССЫЛКА Справочник.ОбъектыЭксплуатации
	|					ИЛИ Аналитика ССЫЛКА Справочник.НематериальныеАктивы)
	|				И Статья <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)) КАК ТаблицаОстатки
	|	ГДЕ
	|		ТаблицаОстатки.СуммаОстаток <> 0
	|		И &ВедетсяУправленческийУчетВНА
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПрочиеАктивыПассивы.Организация,
	|		ПрочиеАктивыПассивы.Аналитика,
	|		ВЫБОР
	|			КОГДА ПрочиеАктивыПассивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ПрочиеАктивыПассивы.Сумма
	|			ИНАЧЕ ПрочиеАктивыПассивы.Сумма
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|	ГДЕ
	|		ПрочиеАктивыПассивы.Статья В (
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы), 
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства))
	|		И ПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|		И ПрочиеАктивыПассивы.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) И КОНЕЦПЕРИОДА(&Период, ДЕНЬ)
	|		И &ВедетсяУправленческийУчетВНА) КАК ТаблицаОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстатки.Организация,
	|	ТаблицаОстатки.ВнеоборотныйАктив
	|
	|ИМЕЮЩИЕ СУММА(ТаблицаОстатки.Сумма) <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса.ВыгрузитьЗначения(), ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Возврат ТекстЗапроса;

КонецФункции

Процедура ТекстЗапросаПроблемныеВложенияВоВнеоборотныеАктивы(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенияСуммы.Организация КАК Организация,
	|	ВложенияСуммы.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	СУММА(ВложенияСуммы.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ВложенияСуммы.СуммаПР) КАК СуммаПР,
	|	СУММА(ВложенияСуммы.СуммаВР) КАК СуммаВР,
	|	СУММА(ВложенияСуммы.Сумма) КАК Сумма,
	|	СУММА(ВложенияСуммы.СуммаБезНДС) КАК СуммаБезНДС
	|ИЗ
	|	ВложенияВоВнеоборотныеАктивыСуммы КАК ВложенияСуммы
	|ГДЕ
	|	ВложенияСуммы.Комментарий = &КомментарийВложения
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенияСуммы.Организация,
	|	ВложенияСуммы.ВнеоборотныйАктив
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ВложенияСуммы.СуммаРегл) < 0
	|		ИЛИ СУММА(ВложенияСуммы.Сумма) < 0
	|		ИЛИ СУММА(ВложенияСуммы.СуммаБезНДС) < 0
	|		ИЛИ СУММА(ВложенияСуммы.СуммаРегл - ВложенияСуммы.СуммаПР - ВложенияСуммы.СуммаВР) < 0)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);

КонецПроцедуры

Процедура ТекстЗапросаЛишниеВложенияВоВнеоборотныеАктивы(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ЛишниеДанные""                        КАК ВидПроблемы,
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	NULL                                    КАК СсылкаДубль,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	ТабличнаяЧасть.ВнеоборотныйАктив        КАК ВнеоборотныйАктив
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
	|ГДЕ
	|	НЕ ДанныеДокумента.ПометкаУдаления
	|	И ДанныеДокумента.Дата <= &Период
	|	И &ОтборОбъектыПроблем
	|
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы)
	|
	|	И НЕ (ДанныеДокумента.Организация, 
	|			ТабличнаяЧасть.ВнеоборотныйАктив, 
	|			ВЫРАЗИТЬ(ДанныеДокумента.Комментарий КАК СТРОКА(1000))) В
	|				(ВЫБРАТЬ
	|					ВложенияСуммы.Организация,
	|					ВложенияСуммы.ВнеоборотныйАктив,
	|					ВложенияСуммы.Комментарий
	|				ИЗ
	|					ВложенияВоВнеоборотныеАктивыСуммы КАК ВложенияСуммы
	|				ГДЕ
	|					ВложенияСуммы.СуммаРегл > 0
	|						ИЛИ ВложенияСуммы.Сумма > 0
	|						ИЛИ ВложенияСуммы.СуммаБезНДС > 0
	|						ИЛИ (ВложенияСуммы.СуммаРегл - ВложенияСуммы.СуммаПР - ВложенияСуммы.СуммаВР) > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ЛишниеДанные""                        КАК ВидПроблемы,
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	NULL                                    КАК СсылкаДубль,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	ТабличнаяЧасть.ВнеоборотныйАктив        КАК ВнеоборотныйАктив
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокументаДубль
	|		ПО (ДанныеДокументаДубль.Ссылка < ДанныеДокумента.Ссылка)
	|			И НЕ ДанныеДокументаДубль.ПометкаУдаления
	|			И (ВЫРАЗИТЬ(ДанныеДокументаДубль.Комментарий КАК СТРОКА(1000)) = ВЫРАЗИТЬ(ДанныеДокумента.Комментарий КАК СТРОКА(1000)))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК ТабличнаяЧастьДубль
	|		ПО (ТабличнаяЧастьДубль.Ссылка = ДанныеДокументаДубль.Ссылка)
	|			И (ТабличнаяЧастьДубль.ВнеоборотныйАктив = ТабличнаяЧасть.ВнеоборотныйАктив)
	|ГДЕ
	|	НЕ ДанныеДокумента.ПометкаУдаления
	|	И ДанныеДокумента.Дата <= &Период
	|	И НЕ ТабличнаяЧастьДубль.Ссылка ЕСТЬ NULL
	|	И &ОтборОбъектыПроблем
	|
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы)
	|
	|	И (ДанныеДокумента.Организация, 
	|			ТабличнаяЧасть.ВнеоборотныйАктив, 
	|			ВЫРАЗИТЬ(ДанныеДокумента.Комментарий КАК СТРОКА(1000))) В
	|				(ВЫБРАТЬ
	|					ВложенияСуммы.Организация,
	|					ВложенияСуммы.ВнеоборотныйАктив,
	|					ВложенияСуммы.Комментарий
	|				ИЗ
	|					ВложенияВоВнеоборотныеАктивыСуммы КАК ВложенияСуммы)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ЛишниеДанные""                        КАК ВидПроблемы,
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	NULL                                    КАК СсылкаДубль,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	ТабличнаяЧасть.Аналитика                КАК Аналитика
	|ИЗ
	|	Документ.ВводОстатков КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатков.ПрочиеАктивыПассивы КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
	|ГДЕ
	|	НЕ ДанныеДокумента.ПометкаУдаления
	|	И ДанныеДокумента.Дата <= &Период
	|	И &ОтборОбъектыПроблемАналитика
	|
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов)
	|
	|	И ВЫРАЗИТЬ(ДанныеДокумента.Комментарий КАК СТРОКА(1000)) = &КомментарийОбнулениеРегистраПрочиеАктивыПассивы
	|	И НЕ (ДанныеДокумента.Организация, 
	|			ТабличнаяЧасть.Аналитика) В
	|				(ВЫБРАТЬ
	|					ВложенияСуммы.Организация,
	|					ВложенияСуммы.Аналитика
	|				ИЗ
	|					ОбнулитьРегистрПрочиеАктивыПассивы КАК ВложенияСуммы)";
	
	Если ПараметрыОбработчика.РежимПереносаДанных = "Исправить" Тогда
		ТекстОтборОбъектыПроблем = "ТабличнаяЧасть.ВнеоборотныйАктив В (ВЫБРАТЬ ОбъектыПроблем.ВнеоборотныйАктив ИЗ ОбъектыПроблем КАК ОбъектыПроблем)";
		ТекстОтборОбъектыПроблемАналитика = "ТабличнаяЧасть.Аналитика В (ВЫБРАТЬ ОбъектыПроблем.ВнеоборотныйАктив ИЗ ОбъектыПроблем КАК ОбъектыПроблем)";
	Иначе
		ТекстОтборОбъектыПроблем = "ИСТИНА";
		ТекстОтборОбъектыПроблемАналитика = "ИСТИНА";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборОбъектыПроблемАналитика", ТекстОтборОбъектыПроблемАналитика);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборОбъектыПроблем", ТекстОтборОбъектыПроблем);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаВложенияВоВнеоборотныеАктивыСуммы(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапросаВложенияВоВнеоборотныеАктивы_БУ(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаВложенияВоВнеоборотныеАктивы_УУ(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаОбнулитьРегистрПрочиеРасходы(ТекстыЗапроса, ПараметрыОбработчика);
	ТекстЗапросаОбнулитьРегистрПрочиеАктивыПассивы(ТекстыЗапроса, ПараметрыОбработчика);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммаВложений.Комментарий               КАК Комментарий,
	|	СуммаВложений.Организация               КАК Организация,
	|	СуммаВложений.ВнеоборотныйАктив         КАК ВнеоборотныйАктив,
	|	СуммаВложений.Подразделение             КАК Подразделение,
	|	СуммаВложений.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	СуммаВложений.СтатьяРасходов            КАК СтатьяРасходов,
	|	СУММА(СуммаВложений.СуммаРегл)          КАК СуммаРегл,
	|	СУММА(СуммаВложений.СуммаПР)            КАК СуммаПР,
	|	СУММА(СуммаВложений.СуммаВР)            КАК СуммаВР,
	|	СУММА(СуммаВложений.Сумма)              КАК Сумма,
	|	СУММА(СуммаВложений.СуммаБезНДС)        КАК СуммаБезНДС
	|ПОМЕСТИТЬ ВложенияВоВнеоборотныеАктивыСуммы
	|ИЗ
	|	(ВЫБРАТЬ
	|		&КомментарийВложения                    КАК Комментарий,
	|		СуммаВложений.Организация               КАК Организация,
	|		СуммаВложений.ВнеоборотныйАктив         КАК ВнеоборотныйАктив,
	|		СуммаВложений.Подразделение             КАК Подразделение,
	|		СуммаВложений.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|		СуммаВложений.СтатьяРасходов            КАК СтатьяРасходов,
	|		0                                       КАК СуммаРегл,
	|		0                                       КАК СуммаПР,
	|		0                                       КАК СуммаВР,
	|		СуммаВложений.Сумма                     КАК Сумма,
	|		СуммаВложений.СуммаБезНДС               КАК СуммаБезНДС
	|	ИЗ
	|		ВложенияВоВнеоборотныеАктивы_УУ КАК СуммаВложений
	|	ГДЕ
	|		СуммаВложений.Сумма <> 0
	|			ИЛИ СуммаВложений.СуммаБезНДС <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&КомментарийВложения                    КАК Комментарий,
	|		СуммаВложений.Организация               КАК Организация,
	|		СуммаВложений.ВнеоборотныйАктив         КАК ВнеоборотныйАктив,
	|		СуммаВложений.Подразделение             КАК Подразделение,
	|		СуммаВложений.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|		СуммаВложений.СтатьяРасходов            КАК СтатьяРасходов,
	|		СуммаВложений.СуммаРегл                 КАК СуммаРегл,
	|		СуммаВложений.СуммаПР                   КАК СуммаПР,
	|		СуммаВложений.СуммаВР                   КАК СуммаВР,
	|		0                                       КАК Сумма,
	|		0                                       КАК СуммаБезНДС
	|	ИЗ
	|		ВложенияВоВнеоборотныеАктивы_БУ КАК СуммаВложений
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&КомментарийОбнулениеРегистраПрочиеРасходы КАК Комментарий,
	|		СуммаВложений.Организация               КАК Организация,
	|		СуммаВложений.ВнеоборотныйАктив         КАК ВнеоборотныйАктив,
	|		СуммаВложений.Подразделение             КАК Подразделение,
	|		СуммаВложений.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|		СуммаВложений.СтатьяРасходов            КАК СтатьяРасходов,
	|		-СуммаВложений.СуммаРегл                КАК СуммаРегл,
	|		-СуммаВложений.СуммаПР                  КАК СуммаПР,
	|		-СуммаВложений.СуммаВР                  КАК СуммаВР,
	|		-СуммаВложений.Сумма                    КАК Сумма,
	|		-СуммаВложений.СуммаБезНДС              КАК СуммаБезНДС
	|	ИЗ
	|		ОбнулитьРегистрПрочиеРасходы КАК СуммаВложений
	|) КАК СуммаВложений
	|
	|СГРУППИРОВАТЬ ПО
	|	СуммаВложений.Комментарий,
	|	СуммаВложений.Организация,
	|	СуммаВложений.ВнеоборотныйАктив,
	|	СуммаВложений.Подразделение,
	|	СуммаВложений.НаправлениеДеятельности,
	|	СуммаВложений.СтатьяРасходов
	|
	|ИМЕЮЩИЕ
	|	СУММА(СуммаВложений.СуммаРегл) <> 0
	|		ИЛИ СУММА(СуммаВложений.СуммаПР) <> 0
	|		ИЛИ СУММА(СуммаВложений.СуммаВР) <> 0
	|		ИЛИ СУММА(СуммаВложений.Сумма) <> 0
	|		ИЛИ СУММА(СуммаВложений.СуммаБезНДС) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив,
	|	Организация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаВложенияВоВнеоборотныеАктивы_УУ(ТекстыЗапроса, ПараметрыОбработчика)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДвижения.Организация                   КАК Организация,
	|	ТаблицаДвижения.АналитикаРасходов             КАК ВнеоборотныйАктив,
	|	ТаблицаДвижения.Подразделение                 КАК Подразделение,
	|	ТаблицаДвижения.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаДвижения.СтатьяРасходов                КАК СтатьяРасходов,
	|	ТаблицаДвижения.СуммаОборот                   КАК Сумма,
	|	ВЫБОР 
	|		КОГДА &МожноИспользоватьРесурсСуммаУпр
	|			ТОГДА ТаблицаДвижения.СуммаУпрОборот
	|		ИНАЧЕ ТаблицаДвижения.СуммаОборот
	|	КОНЕЦ                                         КАК СуммаБезНДС
	|ПОМЕСТИТЬ ВложенияВоВнеоборотныеАктивы_УУ
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Обороты(
	|			,
	|			&Период,
	|			Регистратор,
	|			(АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|				ИЛИ АналитикаРасходов ССЫЛКА Справочник.НематериальныеАктивы)
	|			И &ПрочиеРасходы_ОтборОбъектыПроблем) КАК ТаблицаДвижения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыПринятияКУчету КАК ДатыПринятияКУчету
	|		ПО (ДатыПринятияКУчету.ВнеоборотныйАктив = ТаблицаДвижения.АналитикаРасходов)
	|ГДЕ
	|	ТаблицаДвижения.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	И НЕ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|	И ВЫБОР 
	|		КОГДА &МожноИспользоватьРесурсСуммаУпр
	|			ТОГДА ТаблицаДвижения.СуммаУпрОборот
	|		ИНАЧЕ ТаблицаДвижения.СуммаОборот
	|	КОНЕЦ <> 0
	|	И &ВедетсяУправленческийУчетВНА
	|	И (&ИспользоватьДанныеМеждународногоУчета
	|				И (ДатыПринятияКУчету.ДатаПринятияКУчетуУУ ЕСТЬ NULL
	|					ИЛИ ДатыПринятияКУчету.ДатаПринятияКУчетуУУ = ДАТАВРЕМЯ(1, 1, 1)
	|					ИЛИ КОНЕЦПЕРИОДА(ТаблицаДвижения.Период, МЕСЯЦ) > КОНЕЦПЕРИОДА(ДатыПринятияКУчету.ДатаПринятияКУчетуУУ, МЕСЯЦ))
	|			ИЛИ НЕ &ИспользоватьДанныеМеждународногоУчета
	|				И (ДатыПринятияКУчету.ДатаПринятияКУчетуБУ ЕСТЬ NULL 
	|					ИЛИ ДатыПринятияКУчету.ДатаПринятияКУчетуБУ = ДАТАВРЕМЯ(1, 1, 1)
	|					ИЛИ КОНЕЦПЕРИОДА(ТаблицаДвижения.Период, МЕСЯЦ) > КОНЕЦПЕРИОДА(ДатыПринятияКУчету.ДатаПринятияКУчетуБУ, МЕСЯЦ)))
	|
	// Документы, которые отражают в упр. учете амортизацию регл. учета.
	|	И НЕ ((ТаблицаДвижения.Регистратор ССЫЛКА Документ.АмортизацияОС
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.АмортизацияНМА
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ВозвратОСИзАренды
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ИзменениеПараметровОС
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.МодернизацияОС
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПередачаОСВАренду
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПеремещениеОС
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПереоценкаНМА
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПереоценкаОС
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПодготовкаКПередачеНМА
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПодготовкаКПередачеОС
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.СписаниеНМА
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.СписаниеОС
	//++ НЕ УТКА
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.АмортизацияОСМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.АмортизацияНМАМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ИзменениеПараметровОСМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ИзменениеПараметровНМАМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПереводОсновныхСредствИнвестиционногоИмуществаМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПеремещениеНМАМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПеремещениеОСМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.СписаниеНМАМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.СписаниеОСМеждународныйУчет
	//-- НЕ УТКА
	|			) И ТаблицаДвижения.СуммаОборот < 0
	|			  И &ВедетсяУправленческийУчетВНА)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДвижения.Организация                   КАК Организация,
	|	ТаблицаДвижения.Аналитика                     КАК ВнеоборотныйАктив,
	|	ТаблицаДвижения.Подразделение                 КАК Подразделение,
	|	ТаблицаДвижения.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	ТаблицаДвижения.СуммаОборот                   КАК Сумма,
	|	ТаблицаДвижения.СуммаОборот                   КАК СуммаБезНДС
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы.Обороты(
	|			,
	|			&Период,
	|			Регистратор,
	|			(Аналитика ССЫЛКА Справочник.ОбъектыЭксплуатации
	|				ИЛИ Аналитика ССЫЛКА Справочник.НематериальныеАктивы)
	|			И Статья <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			И &ПрочиеАктивыПассивы_ОтборОбъектыПроблем) КАК ТаблицаДвижения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыПринятияКУчету КАК ДатыПринятияКУчету
	|		ПО (ДатыПринятияКУчету.ВнеоборотныйАктив = ТаблицаДвижения.Аналитика)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК ВводОстатков
	|		ПО (ВводОстатков.Ссылка = ТаблицаДвижения.Регистратор)
	|ГДЕ
	|	НЕ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|	И (НЕ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ВводОстатков
	|			ИЛИ ВЫРАЗИТЬ(ВводОстатков.Комментарий КАК СТРОКА(1024)) <> &КомментарийОбнулениеРегистраПрочиеАктивыПассивы)
	|
	|	И &ВедетсяУправленческийУчетВНА
	|	И (&ИспользоватьДанныеМеждународногоУчета
	|				И (ДатыПринятияКУчету.ДатаПринятияКУчетуУУ ЕСТЬ NULL
	|					ИЛИ ДатыПринятияКУчету.ДатаПринятияКУчетуУУ = ДАТАВРЕМЯ(1, 1, 1)
	|					ИЛИ КОНЕЦПЕРИОДА(ТаблицаДвижения.Период, МЕСЯЦ) > КОНЕЦПЕРИОДА(ДатыПринятияКУчету.ДатаПринятияКУчетуУУ, МЕСЯЦ))
	|			ИЛИ НЕ &ИспользоватьДанныеМеждународногоУчета
	|				И (ДатыПринятияКУчету.ДатаПринятияКУчетуБУ ЕСТЬ NULL 
	|					ИЛИ ДатыПринятияКУчету.ДатаПринятияКУчетуБУ = ДАТАВРЕМЯ(1, 1, 1)
	|					ИЛИ КОНЕЦПЕРИОДА(ТаблицаДвижения.Период, МЕСЯЦ) > КОНЕЦПЕРИОДА(ДатыПринятияКУчету.ДатаПринятияКУчетуБУ, МЕСЯЦ)))
	|
	// Документы, которые отражают в упр. учете амортизацию регл. учета.
	|	И НЕ ((ТаблицаДвижения.Регистратор ССЫЛКА Документ.АмортизацияОС
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.АмортизацияНМА
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ВозвратОСИзАренды
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ИзменениеПараметровОС
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.МодернизацияОС
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПередачаОСВАренду
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПеремещениеОС
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПереоценкаНМА
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПереоценкаОС
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПодготовкаКПередачеНМА
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПодготовкаКПередачеОС
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.СписаниеНМА
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.СписаниеОС
	//++ НЕ УТКА
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.АмортизацияОСМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.АмортизацияНМАМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ИзменениеПараметровОСМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ИзменениеПараметровНМАМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПереводОсновныхСредствИнвестиционногоИмуществаМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПеремещениеНМАМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.ПеремещениеОСМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.СписаниеНМАМеждународныйУчет
	|			ИЛИ ТаблицаДвижения.Регистратор ССЫЛКА Документ.СписаниеОСМеждународныйУчет
	//-- НЕ УТКА
	|			) И ТаблицаДвижения.СуммаОборот < 0
	|			  И &ВедетсяУправленческийУчетВНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив,
	|	Организация";
	
	Если ПараметрыОбработчика.РежимПереносаДанных = "Исправить" Тогда
		ТекстПрочиеРасходыОтборОбъектыПроблем = "АналитикаРасходов В (ВЫБРАТЬ ОбъектыПроблем.ВнеоборотныйАктив ИЗ ОбъектыПроблем КАК ОбъектыПроблем)";
		ТекстПрочиеАктивыПассивыОтборОбъектыПроблем = "Аналитика В (ВЫБРАТЬ ОбъектыПроблем.ВнеоборотныйАктив ИЗ ОбъектыПроблем КАК ОбъектыПроблем)";
	Иначе
		ТекстПрочиеРасходыОтборОбъектыПроблем = "ИСТИНА";
		ТекстПрочиеАктивыПассивыОтборОбъектыПроблем = "ИСТИНА";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПрочиеРасходы_ОтборОбъектыПроблем", ТекстПрочиеРасходыОтборОбъектыПроблем);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПрочиеАктивыПассивы_ОтборОбъектыПроблем", ТекстПрочиеАктивыПассивыОтборОбъектыПроблем);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаВложенияВоВнеоборотныеАктивы_БУ(ТекстыЗапроса, ПараметрыОбработчика)

	ВнеоборотныеАктивыЛокализация.ТекстЗапросаВтСчетаВложенияВоВнеоборотныеАктивы(Истина, ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОстаткиПоСчетам.Организация КАК Организация,
	|	ОстаткиПоСчетам.Субконто1 КАК ВнеоборотныйАктив,
	|	ОстаткиПоСчетам.Подразделение КАК Подразделение,
	|	ОстаткиПоСчетам.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ОстаткиВложенийВоВнеоборотныеАктивы_БУ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ПериодГраница,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втСчетаВложенияВоВнеоборотныеАктивы КАК Т),
	|			,
	|			) КАК ОстаткиПоСчетам
	|ГДЕ
	|	(ОстаткиПоСчетам.СуммаОстаток <> 0
	|			ИЛИ ОстаткиПоСчетам.СуммаПРОстаток <> 0
	|			ИЛИ ОстаткиПоСчетам.СуммаВРОстаток <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ВнеоборотныйАктив,
	|	Подразделение,
	|	НаправлениеДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоСчетам.Организация КАК Организация,
	|	ОстаткиПоСчетам.Субконто1 КАК ВнеоборотныйАктив,
	|	ОстаткиПоСчетам.Подразделение КАК Подразделение,
	|	ОстаткиПоСчетам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ОстаткиПоСчетам.Субконто2 КАК СтатьяРасходов,
	|	ОстаткиПоСчетам.СуммаОборот КАК СуммаРегл,
	|	ОстаткиПоСчетам.СуммаПРОборот КАК СуммаПР,
	|	ОстаткиПоСчетам.СуммаВРОборот КАК СуммаВР
	|ПОМЕСТИТЬ ВложенияВоВнеоборотныеАктивы_БУ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&ПериодГраница,
	|			Регистратор,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втСчетаВложенияВоВнеоборотныеАктивы КАК Т),
	|			,
	|			&ОтборОбъектыПроблем,
	|			,
	|			) КАК ОстаткиПоСчетам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыПринятияКУчету КАК ДатыПринятияКУчету
	|		ПО (ДатыПринятияКУчету.ВнеоборотныйАктив = ОстаткиПоСчетам.Субконто1)
	|ГДЕ
	|	НЕ ОстаткиПоСчетам.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|	И ТИПЗНАЧЕНИЯ(ОстаткиПоСчетам.Субконто1) В (ТИП(Справочник.ОбъектыЭксплуатации), ТИП(Справочник.НематериальныеАктивы))
	|	И КОНЕЦПЕРИОДА(ОстаткиПоСчетам.Период, МЕСЯЦ) > ЕСТЬNULL(КОНЕЦПЕРИОДА(ДатыПринятияКУчету.ДатаПринятияКУчетуБУ, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1))
	|	И КОНЕЦПЕРИОДА(ОстаткиПоСчетам.Период, МЕСЯЦ) > ЕСТЬNULL(КОНЕЦПЕРИОДА(ДатыПринятияКУчету.ДатаМодернизации, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1))
	|	И (ВЫРАЗИТЬ(ОстаткиПоСчетам.Субконто2 КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ИЛИ ОстаткиПоСчетам.Субконто2 В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка), НЕОПРЕДЕЛЕНО))
	|	И (ОстаткиПоСчетам.Организация, ОстаткиПоСчетам.Субконто1, ОстаткиПоСчетам.Подразделение, ОстаткиПоСчетам.НаправлениеДеятельности) В
	|			(ВЫБРАТЬ
	|				ОстаткиВложенийВоВнеоборотныеАктивы_БУ.Организация,
	|				ОстаткиВложенийВоВнеоборотныеАктивы_БУ.ВнеоборотныйАктив,
	|				ОстаткиВложенийВоВнеоборотныеАктивы_БУ.Подразделение,
	|				ОстаткиВложенийВоВнеоборотныеАктивы_БУ.НаправлениеДеятельности
	|			ИЗ
	|				ОстаткиВложенийВоВнеоборотныеАктивы_БУ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив,
	|	Организация";
	
	Если ПараметрыОбработчика.РежимПереносаДанных = "Исправить" Тогда
		ТекстОтборОбъектыПроблем = "Субконто1 В (ВЫБРАТЬ ОбъектыПроблем.ВнеоборотныйАктив ИЗ ОбъектыПроблем КАК ОбъектыПроблем)";
	Иначе
		ТекстОтборОбъектыПроблем = "ИСТИНА";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборОбъектыПроблем", ТекстОтборОбъектыПроблем);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаОбнулитьРегистрПрочиеРасходы(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОстатки.Организация                 КАК Организация,
	|	ТаблицаОстатки.Подразделение               КАК Подразделение,
	|	ТаблицаОстатки.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ТаблицаОстатки.СтатьяРасходов              КАК СтатьяРасходов,
	|	ТаблицаОстатки.АналитикаРасходов           КАК ВнеоборотныйАктив,
	|	ВЫБОР 
	|		КОГДА ТаблицаОстатки.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ТаблицаОстатки.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ                                      КАК Сумма,
	|	ВЫБОР 
	|		КОГДА ТаблицаОстатки.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ТаблицаОстатки.СуммаБезНДСОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ                                      КАК СуммаБезНДС,
	|	ВЫБОР 
	|		КОГДА ТаблицаОстатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ТаблицаОстатки.СуммаРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ                                      КАК СуммаРегл,
	|	ВЫБОР 
	|		КОГДА ТаблицаОстатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ТаблицаОстатки.ПостояннаяРазницаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ                                      КАК СуммаПР,
	|	ВЫБОР 
	|		КОГДА ТаблицаОстатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ТаблицаОстатки.ВременнаяРазницаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ                                      КАК СуммаВР
	|ПОМЕСТИТЬ ОбнулитьРегистрПрочиеРасходы
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Остатки(
	|			&ПериодГраница,
	|			(АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|				ИЛИ АналитикаРасходов ССЫЛКА Справочник.НематериальныеАктивы)
	|			И &ПрочиеРасходы_ОтборОбъектыПроблем) КАК ТаблицаОстатки
	|ГДЕ
	|	&ВедетсяУправленческийУчетВНА
	|	И (ТаблицаОстатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		ИЛИ ТаблицаОстатки.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|   	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОстатки.Организация                 КАК Организация,
	|	ТаблицаОстатки.Подразделение               КАК Подразделение,
	|	ТаблицаОстатки.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ТаблицаОстатки.СтатьяРасходов              КАК СтатьяРасходов,
	|	ТаблицаОстатки.АналитикаРасходов           КАК ВнеоборотныйАктив,
	|	ВЫБОР 
	|		КОГДА ТаблицаОстатки.СтатьяРасходов.ВариантРаспределенияРасходовУпр <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА 0 
	|		КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ТаблицаОстатки.Сумма 
	|		ИНАЧЕ ТаблицаОстатки.Сумма 
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР 
	|		КОГДА ТаблицаОстатки.СтатьяРасходов.ВариантРаспределенияРасходовУпр <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА 0 
	|		КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ТаблицаОстатки.СуммаБезНДС 
	|		ИНАЧЕ ТаблицаОстатки.СуммаБезНДС 
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР 
	|		КОГДА ТаблицаОстатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА 0 
	|		КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ТаблицаОстатки.СуммаРегл 
	|		ИНАЧЕ ТаблицаОстатки.СуммаРегл 
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР 
	|		КОГДА ТаблицаОстатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА 0 
	|		КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ТаблицаОстатки.ПостояннаяРазница 
	|		ИНАЧЕ ТаблицаОстатки.ПостояннаяРазница 
	|	КОНЕЦ КАК СуммаПР,
	|	ВЫБОР 
	|		КОГДА ТаблицаОстатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА 0 
	|		КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ТаблицаОстатки.ВременнаяРазница 
	|		ИНАЧЕ ТаблицаОстатки.ВременнаяРазница 
	|	КОНЕЦ КАК СуммаВР
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ТаблицаОстатки
	|ГДЕ
	|	ТаблицаОстатки.Период <= &Период
	|	И ТаблицаОстатки.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|	И &ПрочиеРасходы_ОтборОбъектыПроблем
	|	И &ВедетсяУправленческийУчетВНА";
	
	Если ПараметрыОбработчика.РежимПереносаДанных = "Исправить" Тогда
		ТекстПрочиеРасходыОтборОбъектыПроблем = "АналитикаРасходов В (ВЫБРАТЬ ОбъектыПроблем.ВнеоборотныйАктив ИЗ ОбъектыПроблем КАК ОбъектыПроблем)";
	Иначе
		ТекстПрочиеРасходыОтборОбъектыПроблем = "ИСТИНА";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПрочиеРасходы_ОтборОбъектыПроблем", ТекстПрочиеРасходыОтборОбъектыПроблем);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаОбнулитьРегистрПрочиеАктивыПассивы(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОстатки.Организация КАК Организация,
	|	ТаблицаОстатки.Подразделение КАК Подразделение,
	|	ТаблицаОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаОстатки.Статья КАК Статья,
	|	ТаблицаОстатки.Аналитика КАК Аналитика,
	|	СУММА(ТаблицаОстатки.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ОбнулитьРегистрПрочиеАктивыПассивы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаОстатки.Организация КАК Организация,
	|		ТаблицаОстатки.Подразделение КАК Подразделение,
	|		ТаблицаОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ТаблицаОстатки.Статья КАК Статья,
	|		ТаблицаОстатки.Аналитика КАК Аналитика,
	|		ТаблицаОстатки.СуммаОстаток КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ПрочиеАктивыПассивы.Остатки(
	|				&ПериодГраница,
	|				(Аналитика ССЫЛКА Справочник.ОбъектыЭксплуатации
	|					ИЛИ Аналитика ССЫЛКА Справочник.НематериальныеАктивы)
	|				И Статья <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|				И &ПрочиеАктивыПассивы_ОтборОбъектыПроблем) КАК ТаблицаОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаОстатки.Организация,
	|		ТаблицаОстатки.Подразделение,
	|		ТаблицаОстатки.НаправлениеДеятельности,
	|		ТаблицаОстатки.Статья,
	|		ТаблицаОстатки.Аналитика,
	|		ВЫБОР
	|			КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ТаблицаОстатки.Сумма
	|			ИНАЧЕ ТаблицаОстатки.Сумма
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ПрочиеАктивыПассивы КАК ТаблицаОстатки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК ВводОстатков
	|			ПО (ВводОстатков.Ссылка = ТаблицаОстатки.Регистратор)
	|	ГДЕ
	|		ТаблицаОстатки.Период <= &Период
	|		И ТаблицаОстатки.Регистратор ССЫЛКА Документ.ВводОстатков
	|		И ВводОстатков.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов)
	|		И (ВЫРАЗИТЬ(ВводОстатков.Комментарий КАК СТРОКА(1000))) = &КомментарийОбнулениеРегистраПрочиеАктивыПассивы
	|		И (ТаблицаОстатки.Аналитика ССЫЛКА Справочник.ОбъектыЭксплуатации
	|				ИЛИ ТаблицаОстатки.Аналитика ССЫЛКА Справочник.НематериальныеАктивы)
	|		И ТаблицаОстатки.Статья <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|		И &ПрочиеАктивыПассивы_ОтборОбъектыПроблем
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаОстатки.Организация,
	|		ТаблицаОстатки.Подразделение,
	|		ТаблицаОстатки.НаправлениеДеятельности,
	|		ТаблицаОстатки.Статья,
	|		ТаблицаОстатки.Аналитика,
	|		ВЫБОР
	|			КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ТаблицаОстатки.Сумма
	|			ИНАЧЕ ТаблицаОстатки.Сумма
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ПрочиеАктивыПассивы КАК ТаблицаОстатки
	|	ГДЕ
	|		ТаблицаОстатки.Период <= &Период
	|		И ТаблицаОстатки.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|		И (ТаблицаОстатки.Аналитика ССЫЛКА Справочник.ОбъектыЭксплуатации
	|				ИЛИ ТаблицаОстатки.Аналитика ССЫЛКА Справочник.НематериальныеАктивы)
	|		И ТаблицаОстатки.Статья <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|		И &ПрочиеАктивыПассивы_ОтборОбъектыПроблем) КАК ТаблицаОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстатки.Организация,
	|	ТаблицаОстатки.Подразделение,
	|	ТаблицаОстатки.НаправлениеДеятельности,
	|	ТаблицаОстатки.Статья,
	|	ТаблицаОстатки.Аналитика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаОстатки.Сумма) <> 0";
	
	Если ПараметрыОбработчика.РежимПереносаДанных = "Исправить" Тогда
		ТекстПрочиеАктивыПассивыОтборОбъектыПроблем = "Аналитика В (ВЫБРАТЬ ОбъектыПроблем.ВнеоборотныйАктив ИЗ ОбъектыПроблем КАК ОбъектыПроблем)";
	Иначе
		ТекстПрочиеАктивыПассивыОтборОбъектыПроблем = "ИСТИНА";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПрочиеАктивыПассивы_ОтборОбъектыПроблем", ТекстПрочиеАктивыПассивыОтборОбъектыПроблем);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаВложенияВоВнеоборотныеАктивыПоДаннымУчета24(ТекстыЗапроса, ПараметрыОбработчика)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПрочиеРасходыОстатки.Организация               КАК Организация,
	|	ПрочиеРасходыОстатки.Подразделение             КАК Подразделение,
	|	ПрочиеРасходыОстатки.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	ПрочиеРасходыОстатки.СтатьяРасходов            КАК СтатьяРасходов,
	|	ПрочиеРасходыОстатки.АналитикаРасходов         КАК ВнеоборотныйАктив,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОстатки.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				И &ВедетсяУправленческийУчетВНА
	|			ТОГДА ПрочиеРасходыОстатки.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОстатки.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				И &ВедетсяУправленческийУчетВНА
	|			ТОГДА ПрочиеРасходыОстатки.СуммаУпрОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОстатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОстатки.СуммаРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОстатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОстатки.ПостояннаяРазницаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПР,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОстатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОстатки.ВременнаяРазницаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВР
	|ПОМЕСТИТЬ ВложенияВоВнеоборотныеАктивыПоДаннымУчета24
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Остатки(
	|			&ПериодГраница,
	|			(АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|				ИЛИ АналитикаРасходов ССЫЛКА Справочник.НематериальныеАктивы)
	|			И (СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				ИЛИ СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))) КАК ПрочиеРасходыОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив,
	|	Организация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры
 
#КонецОбласти

#Область СозданиеДокументов

Процедура ОбработатьЛишниеДанные(РезультатЗапроса, ПараметрыОбработчика, ИмяЭтапа)

	Если ПараметрыОбработчика.РежимПереносаДанных = "Проверить" Тогда
		ПроверитьЛишниеДанные(РезультатЗапроса, ПараметрыОбработчика, ИмяЭтапа);
	Иначе
		УдалитьЛишниеДанные(РезультатЗапроса, ПараметрыОбработчика, ИмяЭтапа);
	КонецЕсли;
	
КонецПроцедуры
 
Процедура ОбработатьРезультатЗапросаДляДокументовВводаОстатков(РезультатЗапроса, ПараметрыОбработчика, ИмяЭтапа)

	Если ПараметрыОбработчика.РежимПереносаДанных = "Проверить" Тогда
		Если ИмяЭтапа = "ПереносВложенийВоВнеоборотныеАктивы"
			ИЛИ ИмяЭтапа = "КорректировкаОстаткаПрочиеАктивы" Тогда
			ПроверитьВложенияВоВнеоборотныеАктивы(РезультатЗапроса, ПараметрыОбработчика, ИмяЭтапа);
		Иначе
			ПроверитьДокументыВводаОстатков(РезультатЗапроса, ПараметрыОбработчика, ИмяЭтапа);
		КонецЕсли; 
	Иначе
		ПеренестиДанныеВДокументыВводаОстатков(РезультатЗапроса, ПараметрыОбработчика, ИмяЭтапа);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьРезультатЗапросаДляДокументовИзмененияПараметровОС(РезультатЗапросаРасходы, РезультатЗапросаОС, ПараметрыОбработчика, ИмяЭтапа)

	Если ПараметрыОбработчика.РежимПереносаДанных = "Проверить" Тогда
		ПроверитьДокументыИзмененияПараметровОС(РезультатЗапросаРасходы, РезультатЗапросаОС, ПараметрыОбработчика, ИмяЭтапа);
	Иначе
		ПеренестиДанныеВДокументыИзмененияПараметровОС(РезультатЗапросаРасходы, РезультатЗапросаОС, ПараметрыОбработчика, ИмяЭтапа);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьРезультатЗапросаДляДокументовИзмененияПараметровНМА(РезультатЗапросаРасходы, РезультатЗапросаОС, ПараметрыОбработчика, ИмяЭтапа)

	Если ПараметрыОбработчика.РежимПереносаДанных = "Проверить" Тогда
		ПроверитьДокументыИзмененияПараметровНМА(РезультатЗапросаРасходы, РезультатЗапросаОС, ПараметрыОбработчика, ИмяЭтапа);
	Иначе
		ПеренестиДанныеВДокументыИзмененияПараметровНМА(РезультатЗапросаРасходы, РезультатЗапросаОС, ПараметрыОбработчика, ИмяЭтапа);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьПроблемныеВложенияВоВнеоборотныеАктивы(РезультатЗапроса, ПараметрыОбработчика, ИмяЭтапа)
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗафиксироватьНачалоВыполненияЭтапа(ИмяЭтапа, Выборка.Количество(), ПараметрыОбработчика);
	
	Пока Выборка.Следующий() Цикл
		
		СообщитьПрогресс(ИмяЭтапа, ПараметрыОбработчика);
	
		СписокСтрок = Новый Массив;
		
		ВалютаРеглУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Выборка.Организация);
		
		Если Выборка.СуммаРегл < 0 Тогда
			ТекстСтроки = СтрШаблон(НСтр("ru = '- сумма БУ: %1 %2';
										|en = '- bookkeeping amount: %1 %2'"), Выборка.СуммаРегл, ВалютаРеглУчета);
			СписокСтрок.Добавить(ТекстСтроки);
		КонецЕсли;
		
		Если (Выборка.СуммаРегл - Выборка.СуммаПР - Выборка.СуммаВР) < 0 Тогда
			ТекстСтроки = СтрШаблон(НСтр("ru = '- сумма НУ: %1 %2';
										|en = '- tax accounting amount: %1 %2'"), Выборка.СуммаРегл - Выборка.СуммаПР - Выборка.СуммаВР, ВалютаРеглУчета);
			СписокСтрок.Добавить(ТекстСтроки);
		КонецЕсли;
		
		Если Выборка.Сумма < 0 Тогда
			ТекстСтроки = СтрШаблон(НСтр("ru = '- сумма с НДС (упр): %1 %2';
										|en = '- amount including VAT (man.): %1 %2'"), Выборка.Сумма, ПараметрыОбработчика.ВалютаУпр);
			СписокСтрок.Добавить(ТекстСтроки);
		КонецЕсли;
			
		Если Выборка.СуммаБезНДС < 0 Тогда
			ТекстСтроки = СтрШаблон(НСтр("ru = '- сумма без НДС (упр): %1 %2';
										|en = '- amount excluding VAT (man.): %1 %2'"), Выборка.СуммаБезНДС, ПараметрыОбработчика.ВалютаУпр);
			СписокСтрок.Добавить(ТекстСтроки);
		КонецЕсли;
		
		Если ПараметрыОбработчика.ВедетсяУправленческийУчетВНА Тогда
			
			ТекстПроблемы = НСтр("ru = 'Обнаружен отрицательный остаток вложений во внеоборотный актив:
										|%1
										|
										|Необходимо проверить остатки по группе счетов ""Вложения во внеоборотные активы"" и данные регистров ""Прочие расходы"", ""Активы и пассивы"".';
										|en = 'A negative balance of investments in a non-current asset was found:
										|%1
										|
										|It is necessary to check the balances on the group of accounts ""Investments in non-current assets"" and the data of the registers ""Other expenses"", ""Assets and liabilities"".'");
		Иначе
			
			ТекстПроблемы = НСтр("ru = 'Обнаружен отрицательный остаток вложений во внеоборотный актив:
										|%1
										|
										|Необходимо проверить остатки по группе счетов ""Вложения во внеоборотные активы"".';
										|en = 'A negative balance of investments in non-current assets was found:
										|%1
										|
										|It is necessary to check the balances on the group of accounts ""Investments in non-current assets"".'");
		КонецЕсли;
		ТекстПроблемы = СтрШаблон(ТекстПроблемы, СтрСоединить(СписокСтрок, Символы.ПС));
		
		ЗарегистрироватьПроблему(
			ТекстПроблемы, 
			Выборка.Организация, 
			Выборка.ВнеоборотныйАктив, 
			Перечисления.ВажностьПроблемыУчета.Предупреждение, 
			ПараметрыОбработчика.Проверки[ИмяЭтапа]);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПеренестиДанныеВДокументыВводаОстатков(РезультатЗапроса, ПараметрыОбработчика, ИмяЭтапа)

	ДокументСсылка = Неопределено;
	ДокументОбъект = Неопределено;
	ИзмененныеСтроки = Новый Массив;
	ТекущийВнеоборотныйАктив = Неопределено;
	
	ПараметрыПроверкиРеквизитов = ПараметрыПроверкиРеквизитовДокумента();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СообщитьПрогресс(ИмяЭтапа, ПараметрыОбработчика);
		
		УдалитьПроблемыПоВнеоборотномуАктиву(Выборка, ПараметрыОбработчика);
		
		// Если в текущем документе нет нужной строки, то надо попробовать найти существующий документ.
		// Если он есть, то надо использовать его, а текущий документ провести.
		Если ДокументОбъект <> Неопределено
			И Выборка.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы 
			И Выборка.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
			
			ДанныеСтроки = ПолучитьСтрокуДокумента(Выборка, ДокументОбъект, Ложь, ПараметрыОбработчика);
			Если ДанныеСтроки = Неопределено Тогда
				
				СуществующийДокумент = ПолучитьСуществующийДокумент(Выборка.ХозяйственнаяОперация, Выборка, ПараметрыОбработчика);
				
				Если СуществующийДокумент <> Неопределено
					И СуществующийДокумент.Ссылка <> ДокументОбъект.Ссылка Тогда
					
					ПровестиДокумент(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика, ИмяЭтапа);
					
					ДокументОбъект = СуществующийДокумент;
					ИзмененныеСтроки = Новый Массив;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ПолучитьДокументОбъект(ДокументОбъект, ИзмененныеСтроки, Выборка, Ложь, ПараметрыОбработчика, ИмяЭтапа);
		
		Если ДокументОбъект = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы 
			ИЛИ Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
			ДанныеСтроки = Неопределено;
		Иначе
			ДанныеСтроки = ПолучитьСтрокуДокумента(Выборка, ДокументОбъект, Истина, ПараметрыОбработчика);
			
			Если ПараметрыОбработчика.РежимПереносаДанных = "Продолжить"
				И ДанныеСтроки <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ПараметрыДокумента = ПараметрыДокумента(Выборка.ХозяйственнаяОперация);
		
		Если ДанныеСтроки = Неопределено Тогда
			
			Если ДокументОбъект[ПараметрыДокумента.ИмяТЧ].Количество() >= ПараметрыДокумента.МаксимальноеКоличествоСтрок Тогда
				
				НетСтрокСОшибками = ПроверитьДокументИПеренестиСтрокиСОшибками(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика, ИмяЭтапа);
				
				// Создадим новый документ, если в текущем есть ошибки или много строк
				Если НЕ НетСтрокСОшибками
					ИЛИ ДокументОбъект[ПараметрыДокумента.ИмяТЧ].Количество() >= ПараметрыДокумента.МаксимальноеКоличествоСтрок Тогда
					
					ПровестиДокумент(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика, ИмяЭтапа, НетСтрокСОшибками);
					
					ДокументОбъект = СоздатьНовыйДокумент(Выборка.ХозяйственнаяОперация, Выборка, Выборка.Дата, ПараметрыОбработчика);
					ИзмененныеСтроки = Новый Массив;
				
				КонецЕсли; 
				
			КонецЕсли;
			
			Если Выборка.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы 
				И Выборка.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
				ДанныеСтроки = ПолучитьСтрокуДокумента(Выборка, ДокументОбъект, Истина, ПараметрыОбработчика);
			КонецЕсли;
			
			Если ДанныеСтроки = Неопределено Тогда
				ДанныеСтроки = ДокументОбъект[ПараметрыДокумента.ИмяТЧ].Добавить();
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДанныеСтроки <> Неопределено Тогда
			
			ИзмененныеСтроки.Добавить(ДанныеСтроки);
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);
			ПроверитьКорректностьИсходныхДанных(Выборка, ПараметрыОбработчика, ИмяЭтапа);
			
			Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
				ИЛИ Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
				ИЛИ Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
				
				Если ЗначениеЗаполнено(ДанныеСтроки.АдресМестонахождения)
					И НЕ ЗначениеЗаполнено(ДанныеСтроки.АдресМестонахожденияЗначение) Тогда
					
					ДанныеСтроки.АдресМестонахожденияЗначение = 
						УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(
							ДанныеСтроки.АдресМестонахождения,
							Перечисления.ТипыКонтактнойИнформации.Адрес);
				КонецЕсли; 
				
			КонецЕсли;
			
			Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
				ИЛИ Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе 
				ИЛИ Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР 
				ИЛИ Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС 
				ИЛИ Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
				
				Если ДокументСсылка <> ДокументОбъект.Ссылка Тогда
					ПараметрыПроверкиРеквизитов.ВспомогательныеРеквизитыОбъекта = Документы.ВводОстатковВнеоборотныхАктивов2_4.ВспомогательныеРеквизиты(ДокументОбъект, Ложь);
					ЗаполнитьПараметрыПроверкиРеквизитовДокумента(ПараметрыДокумента.ИмяТЧ, ПараметрыПроверкиРеквизитов);
					ДокументСсылка = ДокументОбъект.Ссылка;
				КонецЕсли;
				
				СтруктураРеквизитов = СтруктураПроверяемыхРеквизитовТабличнойЧасти(ДанныеСтроки, ДокументОбъект, ПараметрыПроверкиРеквизитов);
				ПроверитьРавенствоРеквизитов(
					ДокументОбъект, 
					ДанныеСтроки, 
					Выборка, 
					СтруктураРеквизитов, 
					ПараметрыПроверкиРеквизитов.ПредставлениеРеквизитовТЧ,
					ПараметрыОбработчика);
					
			КонецЕсли; 
			
			Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
				
				Если ДанныеСтроки.Сумма <> 0
					ИЛИ ДанныеСтроки.СуммаБезНДС <> 0 Тогда
					ДокументОбъект.ОтражатьВУпрУчете = Истина;
				КонецЕсли;
				
				Если ДанныеСтроки.СуммаРегл <> 0
					ИЛИ ДанныеСтроки.СуммаПР <> 0 
					ИЛИ ДанныеСтроки.СуммаВР <> 0 Тогда
					ДокументОбъект.ОтражатьВРеглУчете = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы
				И Выборка.ВнеоборотныйАктив <> ТекущийВнеоборотныйАктив 
			ИЛИ Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов
				И Выборка.Аналитика <> ТекущийВнеоборотныйАктив 
			ИЛИ Выборка.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы 
				И Выборка.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
			УвеличитьСчетчикОбработанныхДанных(Выборка.ХозяйственнаяОперация, ПараметрыОбработчика);
		КонецЕсли; 
		
		Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
			ТекущийВнеоборотныйАктив = Выборка.ВнеоборотныйАктив;
		ИначеЕсли Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
			ТекущийВнеоборотныйАктив = Выборка.Аналитика;
		КонецЕсли; 
		
	КонецЦикла;
	
	ПровестиДокумент(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика, ИмяЭтапа);
	
КонецПроцедуры

Процедура ПеренестиДанныеВДокументыИзмененияПараметровОС(РезультатЗапросаРасходы, РезультатЗапросаОС, ПараметрыОбработчика, ИмяЭтапа)

	ДокументОбъект = Неопределено;
	ИзмененныеСтроки = Новый Массив;
	
	ПараметрыДокумента = ПараметрыДокумента(Перечисления.ХозяйственныеОперации.ИзменениеПараметровОС);
	
	ТаблицаРасходы = РезультатЗапросаРасходы.Выгрузить();
	ТаблицаРасходы.Индексы.Добавить("Ссылка");
	
	Выборка = РезультатЗапросаОС.Выбрать();
	Пока Выборка.Следующий() Цикл

		УдалитьПроблемыПоВнеоборотномуАктиву(Выборка, ПараметрыОбработчика);
		
		ПолучитьДокументОбъект(ДокументОбъект, ИзмененныеСтроки, Выборка, Ложь, ПараметрыОбработчика, ИмяЭтапа);
		
		Если ПараметрыОбработчика.РежимПереносаДанных = "Продолжить"
			И ДокументОбъект <> Неопределено
			И НЕ ДокументОбъект.ЭтоНовый() Тогда
			// В документе уже есть данные
			ДокументОбъект = Неопределено;
		КонецЕсли;
		
		Если ДокументОбъект = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеСтроки = ПолучитьСтрокуДокумента(Выборка, ДокументОбъект, Истина, ПараметрыОбработчика);

		Если ДанныеСтроки = Неопределено Тогда
			ДанныеСтроки = ДокументОбъект[ПараметрыДокумента.ИмяТЧ].Добавить();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);
		ИзмененныеСтроки.Добавить(ДанныеСтроки);
		
		// Заполнение ТЧ, если их еще не заполняли
		Если НЕ ДокументОбъект.ОтражениеАмортизационныхРасходовФлаг 
			И НЕ ДокументОбъект.ОтражениеАмортизационнойПремииФлаг Тогда
			
			СтруктураПоиска = Новый Структура("Ссылка", Выборка.ДокументОснование);
			СписокСтрок = ТаблицаРасходы.Скопировать(СтруктураПоиска);
			СписокСтрок.Сортировать("НомерСтроки");
			Для каждого СтрокаРасходы Из СписокСтрок Цикл
				
				Если ЗначениеЗаполнено(СтрокаРасходы.СтатьяРасходов) Тогда
					
					ДокументОбъект.ОтражениеАмортизационныхРасходовФлаг = Истина;
					
					НоваяСтрокаРасходы = ДокументОбъект.Амортизация.Добавить();
					НоваяСтрокаРасходы.Подразделение = СтрокаРасходы.Подразделение;
					НоваяСтрокаРасходы.НаправлениеДеятельности = СтрокаРасходы.НаправлениеДеятельности;
					НоваяСтрокаРасходы.СтатьяРасходов = СтрокаРасходы.СтатьяРасходов;
					НоваяСтрокаРасходы.АналитикаРасходов = СтрокаРасходы.АналитикаРасходов;
					НоваяСтрокаРасходы.ПередаватьРасходыВДругуюОрганизацию = СтрокаРасходы.ПередаватьРасходыВДругуюОрганизацию;
					НоваяСтрокаРасходы.ОрганизацияПолучательРасходов = СтрокаРасходы.ОрганизацияПолучательРасходов;
					НоваяСтрокаРасходы.Коэффициент = СтрокаРасходы.Коэффициент;
					
					ПроверитьСчетПередачиРасходов(
						СтрокаРасходы, 
						Выборка.Организация,
						Выборка.ОсновноеСредство, 
						ПараметрыОбработчика.Проверки[ИмяЭтапа]);
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаРасходы.СтатьяРасходовАмортизационнойПремии) Тогда
					
					ДокументОбъект.ОтражениеАмортизационнойПремииФлаг = Истина;
					
					НоваяСтрокаРасходы = ДокументОбъект.АмортизационнаяПремия.Добавить();
					НоваяСтрокаРасходы.Подразделение = СтрокаРасходы.Подразделение;
					НоваяСтрокаРасходы.НаправлениеДеятельности = СтрокаРасходы.НаправлениеДеятельности;
					НоваяСтрокаРасходы.СтатьяРасходов = СтрокаРасходы.СтатьяРасходовАмортизационнойПремии;
					НоваяСтрокаРасходы.АналитикаРасходов = СтрокаРасходы.АналитикаРасходовАмортизационнойПремии;
					НоваяСтрокаРасходы.ПередаватьРасходыВДругуюОрганизацию = СтрокаРасходы.ПередаватьРасходыВДругуюОрганизацию;
					НоваяСтрокаРасходы.ОрганизацияПолучательРасходов = СтрокаРасходы.ОрганизацияПолучательРасходов;
					НоваяСтрокаРасходы.Коэффициент = СтрокаРасходы.Коэффициент;
					
				КонецЕсли;
				
			КонецЦикла; 
			
		КонецЕсли; 
		
		УвеличитьСчетчикОбработанныхДанных(Выборка.ХозяйственнаяОперация, ПараметрыОбработчика);
		
	КонецЦикла;
	
	ПровестиДокумент(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика, ИмяЭтапа);
	
КонецПроцедуры

Процедура ПеренестиДанныеВДокументыИзмененияПараметровНМА(РезультатЗапросаРасходы, РезультатЗапросаНМА, ПараметрыОбработчика, ИмяЭтапа)

	ДокументОбъект = Неопределено;
	ИзмененныеСтроки = Новый Массив;
	
	ПараметрыДокумента = ПараметрыДокумента(Перечисления.ХозяйственныеОперации.ИзменениеПараметровНМА);
	
	ТаблицаРасходы = РезультатЗапросаРасходы.Выгрузить();
	ТаблицаРасходы.Индексы.Добавить("Ссылка");
	
	Выборка = РезультатЗапросаНМА.Выбрать();
	Пока Выборка.Следующий() Цикл

		СообщитьПрогресс(ИмяЭтапа, ПараметрыОбработчика);
		
		УдалитьПроблемыПоВнеоборотномуАктиву(Выборка, ПараметрыОбработчика);
		
		ПолучитьДокументОбъект(ДокументОбъект, ИзмененныеСтроки, Выборка, Ложь, ПараметрыОбработчика, ИмяЭтапа);
		
		Если ПараметрыОбработчика.РежимПереносаДанных = "Продолжить"
			И ДокументОбъект <> Неопределено
			И НЕ ДокументОбъект.ЭтоНовый() Тогда
			// В документе уже есть данные
			ДокументОбъект = Неопределено;
		КонецЕсли;
		
		Если ДокументОбъект = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеСтроки = ПолучитьСтрокуДокумента(Выборка, ДокументОбъект, Истина, ПараметрыОбработчика);

		Если ДанныеСтроки = Неопределено Тогда
			ДанныеСтроки = ДокументОбъект[ПараметрыДокумента.ИмяТЧ].Добавить();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);
		ИзмененныеСтроки.Добавить(ДанныеСтроки);
		
		// Заполнение ТЧ, если их еще не заполняли
		Если НЕ ДокументОбъект.АмортизационныеРасходыФлаг Тогда
			
			СтруктураПоиска = Новый Структура("Ссылка", Выборка.ДокументОснование);
			СписокСтрок = ТаблицаРасходы.Скопировать(СтруктураПоиска);
			СписокСтрок.Сортировать("НомерСтроки");
			Для каждого СтрокаРасходы Из СписокСтрок Цикл
				
				ДокументОбъект.АмортизационныеРасходыФлаг = Истина;
				
				НоваяСтрокаРасходы = ДокументОбъект.АмортизационныеРасходы.Добавить();
				НоваяСтрокаРасходы.Подразделение = СтрокаРасходы.Подразделение;
				НоваяСтрокаРасходы.НаправлениеДеятельности = СтрокаРасходы.НаправлениеДеятельности;
				НоваяСтрокаРасходы.СтатьяРасходов = СтрокаРасходы.СтатьяРасходов;
				НоваяСтрокаРасходы.АналитикаРасходов = СтрокаРасходы.АналитикаРасходов;
				НоваяСтрокаРасходы.ПередаватьРасходыВДругуюОрганизацию = СтрокаРасходы.ПередаватьРасходыВДругуюОрганизацию;
				НоваяСтрокаРасходы.ОрганизацияПолучательРасходов = СтрокаРасходы.ОрганизацияПолучательРасходов;
				НоваяСтрокаРасходы.Коэффициент = СтрокаРасходы.Коэффициент;
				
				ПроверитьСчетПередачиРасходов(
					СтрокаРасходы, 
					Выборка.Организация,
					Выборка.НематериальныйАктив, 
					ПараметрыОбработчика.Проверки[ИмяЭтапа]);
				
			КонецЦикла; 
			
		КонецЕсли; 
		
		УвеличитьСчетчикОбработанныхДанных(Выборка.ХозяйственнаяОперация, ПараметрыОбработчика);
		
	КонецЦикла;
	
	ПровестиДокумент(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика, ИмяЭтапа);
	
КонецПроцедуры

Процедура УдалитьЛишниеДанные(РезультатЗапроса, ПараметрыОбработчика, ИмяЭтапа)

	ДокументОбъект = Неопределено;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		СообщитьПрогресс(ИмяЭтапа, ПараметрыОбработчика);
		
		УдалитьПроблемыПоВнеоборотномуАктиву(Выборка, ПараметрыОбработчика, Выборка.ВидПроблемы);
		
		ПараметрыДокумента = ПараметрыДокумента(Выборка.ХозяйственнаяОперация);
		
		Если ДокументОбъект = Неопределено Тогда
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
		ИначеЕсли ДокументОбъект.Ссылка <> Выборка.Ссылка Тогда
			
			ПровестиДокументПослеУдаленияДанных(ДокументОбъект, ПараметрыОбработчика);
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
		КонецЕсли;
		
		Если ДокументОбъект.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
			ДокументОбъект.ПрочиеРасходы.Очистить();
		ИначеЕсли Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
			ДокументОбъект.ПрочиеАктивыПассивы.Очистить();
		Иначе
			ДанныеСтроки = ПолучитьСтрокуДокумента(Выборка, ДокументОбъект, Ложь, ПараметрыОбработчика);
			Если ДанныеСтроки <> Неопределено Тогда
				ДокументОбъект[ПараметрыДокумента.ИмяТЧ].Удалить(ДанныеСтроки);
			КонецЕсли; 
		КонецЕсли; 
		
	КонецЦикла;
	
	ПровестиДокументПослеУдаленияДанных(ДокументОбъект, ПараметрыОбработчика);
	
КонецПроцедуры
 
Функция ПолучитьСтрокуДокумента(Выборка, ДокументОбъект, УдалитьДубли, ПараметрыОбработчика)
	
	ПараметрыДокумента = ПараметрыДокумента(Выборка.ХозяйственнаяОперация);
	
	Если СтрНайти(ПараметрыДокумента.ИмяРеквизитаТЧ, ",") <> 0 Тогда
		СтруктураПоиска = Новый Структура(ПараметрыДокумента.ИмяРеквизитаТЧ);
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		СписокСтрок = ДокументОбъект[ПараметрыДокумента.ИмяТЧ].НайтиСтроки(СтруктураПоиска);
		ДанныеСтроки = ?(СписокСтрок.Количество() <> 0, СписокСтрок[0], Неопределено);
	Иначе
		Если УдалитьДубли Тогда
			СтруктураПоиска = Новый Структура(ПараметрыДокумента.ИмяРеквизитаТЧ);
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
			СписокСтрок = ДокументОбъект[ПараметрыДокумента.ИмяТЧ].НайтиСтроки(СтруктураПоиска);
			ДанныеСтроки = ?(СписокСтрок.Количество() <> 0, СписокСтрок[0], Неопределено);
		Иначе
			ЗначениеРеквизита = Выборка[ПараметрыДокумента.ИмяРеквизитаТЧ];
			ДанныеСтроки = ДокументОбъект[ПараметрыДокумента.ИмяТЧ].Найти(ЗначениеРеквизита, ПараметрыДокумента.ИмяРеквизитаТЧ);
		КонецЕсли; 
	КонецЕсли;
	
	Если УдалитьДубли Тогда
		Для Сч = 1 По СписокСтрок.Количество()-1 Цикл
			ДокументОбъект[ПараметрыДокумента.ИмяТЧ].Удалить(СписокСтрок[Сч]);
		КонецЦикла; 
	КонецЕсли; 
	
	Возврат ДанныеСтроки;

КонецФункции

Процедура ПолучитьДокументОбъект(ДокументОбъект, ИзмененныеСтроки, Выборка, ТолькоСодержащийАктив, ПараметрыОбработчика, ИмяЭтапа)

	ПараметрыДокумента = ПараметрыДокумента(Выборка.ХозяйственнаяОперация);
	
	Если ДокументОбъект = Неопределено Тогда
		
		ДокументОбъект = СоздатьНовыйДокумент(Выборка.ХозяйственнаяОперация, Выборка, Выборка.Дата, ПараметрыОбработчика);
		ИзмененныеСтроки = Новый Массив;
		
	ИначеЕсли КлючевыеРеквизитыОтличаются(ДокументОбъект, Выборка, ПараметрыДокумента.КлючевыеРеквизиты) Тогда
			
		ПровестиДокумент(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика, ИмяЭтапа);
		
		ДокументОбъект = СоздатьНовыйДокумент(Выборка.ХозяйственнаяОперация, Выборка, Выборка.Дата, ПараметрыОбработчика);
		ИзмененныеСтроки = Новый Массив;
			
	КонецЕсли; 
	
КонецПроцедуры

Функция НайтиСуществующийДокумент(ХозяйственнаяОперация, ДанныеЗаполнения, ТолькоСодержащийАктив, ПараметрыОбработчика)

	ПараметрыДокумента = ПараметрыДокумента(ХозяйственнаяОперация);
	
	Запрос = НовыйЗапрос(ПараметрыОбработчика);
	Запрос.УстановитьПараметр("МаксимальноеКоличествоСтрок", ПараметрыДокумента.МаксимальноеКоличествоСтрок);
	Запрос.УстановитьПараметр("ВнеоборотныйАктив", ДанныеЗаполнения[ПараметрыДокумента.ИмяРеквизитаТЧ]);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ОписаниеНовыйДокументСОшибками", ПараметрыОбработчика.ОписаниеНовыйДокументСОшибками);
	
	ТекстЗапроса = 
	// В первую очередь проведенный документ, содержащий нужный актив
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Приоритет,
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
	|			И (ТабличнаяЧасть.ОсновноеСредство = &ВнеоборотныйАктив)
	|ГДЕ
	|	ДанныеДокумента.Дата <= &Период
	|	И ДанныеДокумента.Проведен
	|	И &ТекстУсловияКлючевыеРеквизиты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Во вторую очередь не проведенный документ, содержащий нужный актив
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	2,
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
	|			И (ТабличнаяЧасть.ОсновноеСредство = &ВнеоборотныйАктив)
	|ГДЕ
	|	ДанныеДокумента.Дата <= &Период
	|	И НЕ ДанныеДокумента.Проведен
	|	И НЕ ДанныеДокумента.ПометкаУдаления
	|	И &ТекстУсловияКлючевыеРеквизиты";
	
	Если НЕ ТолькоСодержащийАктив Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// В третью очередь проведенный документ, не содержащий нужный актив, с нужным количеством строк.
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	3,
		|	ДанныеДокумента.Ссылка
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ВсяТабличнаяЧасть
		|		ПО (ВсяТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТабличнаяЧасть
		|		ПО (ТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
		|			И (ТабличнаяЧасть.ОсновноеСредство = &ВнеоборотныйАктив)
		|ГДЕ
		|	ДанныеДокумента.Дата <= &Период
		|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы)
		|	И ДанныеДокумента.Проведен
		|	И ТабличнаяЧасть.Ссылка ЕСТЬ NULL
		|	И &ТекстУсловияКлючевыеРеквизиты
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокумента.Ссылка
		|
		|ИМЕЮЩИЕ 
		|	ЕСТЬNULL(КОЛИЧЕСТВО(ВсяТабличнаяЧасть.НомерСтроки), 0) < &МаксимальноеКоличествоСтрок
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// В четвертую очередь не проведенный документ, не содержащий нужный актив, с нужным количеством строк.
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	4,
		|	ДанныеДокумента.Ссылка
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ВсяТабличнаяЧасть
		|		ПО (ВсяТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТабличнаяЧасть
		|		ПО (ТабличнаяЧасть.Ссылка = ДанныеДокумента.Ссылка)
		|			И (ТабличнаяЧасть.ОсновноеСредство = &ВнеоборотныйАктив)
		|ГДЕ
		|	ДанныеДокумента.Дата <= &Период
		|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы)
		|	И НЕ ДанныеДокумента.Проведен
		|	И НЕ ДанныеДокумента.ПометкаУдаления
		|	И ТабличнаяЧасть.Ссылка ЕСТЬ NULL
		|	И &ТекстУсловияКлючевыеРеквизиты
		|	И ВЫРАЗИТЬ(ДанныеДокумента.Комментарий КАК СТРОКА(1024)) <> &ОписаниеНовыйДокументСОшибками
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокумента.Ссылка
		|
		|ИМЕЮЩИЕ 
		|	ЕСТЬNULL(КОЛИЧЕСТВО(ВсяТабличнаяЧасть.НомерСтроки), 0) < &МаксимальноеКоличествоСтрок";
		
	КонецЕсли; 

	ТекстЗапроса = ТекстЗапроса + "
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	ТекстУсловияКлючевыеРеквизиты = "";
	КлючевыеРеквизиты = Новый Структура(ПараметрыДокумента.КлючевыеРеквизиты);
	Для каждого КлючИЗначение Из КлючевыеРеквизиты Цикл
		ТекстУсловияКлючевыеРеквизиты = ТекстУсловияКлючевыеРеквизиты
			+ ?(ТекстУсловияКлючевыеРеквизиты <> "", Символы.ПС + "	И ", "")
			+ ?(КлючИЗначение.Ключ = "Комментарий",
					"ВЫРАЗИТЬ(ДанныеДокумента." + КлючИЗначение.Ключ + " КАК Строка(1000)) = &" + КлючИЗначение.Ключ,
					"ДанныеДокумента." + КлючИЗначение.Ключ + " = &" + КлючИЗначение.Ключ);
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, ДанныеЗаполнения[КлючИЗначение.Ключ]);
	КонецЦикла; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстУсловияКлючевыеРеквизиты", ТекстУсловияКлючевыеРеквизиты);
	ТекстЗапроса = СтрЗаменить(
					ТекстЗапроса, 
					"Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС", 
					"Документ." + ПараметрыДокумента.ИмяДокумента + "." + ПараметрыДокумента.ИмяТЧ);
					
	ТекстЗапроса = СтрЗаменить(
					ТекстЗапроса, 
					"Документ.ВводОстатковВнеоборотныхАктивов2_4", 
					"Документ." + ПараметрыДокумента.ИмяДокумента);
					
	ТекстЗапроса = СтрЗаменить(
					ТекстЗапроса, 
					"ТабличнаяЧасть.ОсновноеСредство", 
					"ТабличнаяЧасть." + ПараметрыДокумента.ИмяРеквизитаТЧ);
					
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Ссылка;
	
КонецФункции

Функция ПолучитьСуществующийДокумент(ХозяйственнаяОперация, ДанныеЗаполнения, ПараметрыОбработчика)

	ИскатьТолькоПоВыбранномуАктиву = 
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы 
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов;
	
	ДокументСсылка = НайтиСуществующийДокумент(ХозяйственнаяОперация, ДанныеЗаполнения, ИскатьТолькоПоВыбранномуАктиву, ПараметрыОбработчика);
	
	Если ДокументСсылка = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы
		И ПараметрыОбработчика.РежимПереносаДанных <> "Проверить" Тогда
		
		// Вложения всегда перезаполняются.
		ДокументОбъект.ОтражатьВРеглУчете = Ложь;
		ДокументОбъект.ОтражатьВУпрУчете = Ложь;
		ДокументОбъект.ПрочиеРасходы.Очистить();
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов
		И ПараметрыОбработчика.РежимПереносаДанных <> "Проверить" Тогда
		
		// Вложения всегда перезаполняются.
		ДокументОбъект.ПрочиеАктивыПассивы.Очистить();
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровОС
		И ПараметрыОбработчика.РежимПереносаДанных <> "Проверить" Тогда
		
		// Изменение параметров всегда перезаполняются.
		ДокументОбъект.ОтражениеАмортизационныхРасходовФлаг = Ложь;
		ДокументОбъект.ОтражениеАмортизационнойПремииФлаг = Ложь;
		ДокументОбъект.Амортизация.Очистить();
		ДокументОбъект.АмортизационнаяПремия.Очистить();
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровНМА
		И ПараметрыОбработчика.РежимПереносаДанных <> "Проверить" Тогда
		
		// Изменение параметров всегда перезаполняются.
		ДокументОбъект.АмортизационныеРасходыФлаг = Ложь;
		ДокументОбъект.АмортизационныеРасходы.Очистить();
		
	КонецЕсли;
	
	Возврат ДокументОбъект;

КонецФункции
 
Функция СоздатьНовыйДокумент(ХозяйственнаяОперация, ДанныеЗаполнения, Дата, ПараметрыОбработчика)
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		НовыйДокументОбъект = ПолучитьСуществующийДокумент(ХозяйственнаяОперация, ДанныеЗаполнения, ПараметрыОбработчика);
		Если НовыйДокументОбъект <> Неопределено Тогда
			Возврат НовыйДокументОбъект;
		КонецЕсли;
	КонецЕсли; 
	
	ПараметрыДокумента = ПараметрыДокумента(ХозяйственнаяОперация);
	
	НовыйДокументОбъект = Документы[ПараметрыДокумента.ИмяДокумента].СоздатьДокумент();
	НовыйДокументОбъект.Заполнить(Неопределено);
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		ПараметрыДокумента = ПараметрыДокумента(ХозяйственнаяОперация);
		ЗаполнитьЗначенияСвойств(НовыйДокументОбъект, ДанныеЗаполнения, ПараметрыДокумента.КлючевыеРеквизиты);
	КонецЕсли;
	
	НовыйДокументОбъект.Дата = Дата;
	НовыйДокументОбъект.УстановитьНовыйНомер();
	
	Если НЕ ЗначениеЗаполнено(НовыйДокументОбъект.Комментарий) Тогда
		НовыйДокументОбъект.Комментарий = ПараметрыОбработчика.ОписаниеНовыйДокумент;
	КонецЕсли; 

	// Увеличение счетчика созданных документов.
	РезультатыПереносаДанных = ПараметрыОбработчика.РезультатыПереносаДанных;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
		НовыйДокументОбъект.ОтражатьВРеглУчете = Ложь;
		НовыйДокументОбъект.ОтражатьВУпрУчете = Ложь;
	КонецЕсли;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
		РезультатыПереносаДанных.СозданоВводОстатковПрочиеАктивыПассивы = 
			РезультатыПереносаДанных.СозданоВводОстатковПрочиеАктивыПассивы + 1;
		
	КонецЕсли;
		
	Возврат НовыйДокументОбъект;
	
КонецФункции

Процедура ПровестиДокумент(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика, ИмяЭтапа, НетСтрокСОшибками = Неопределено)

	Если ДокументОбъект = Неопределено 
		ИЛИ НЕ ДокументОбъект.Модифицированность() Тогда
		Возврат;
	КонецЕсли;
	
	Если НетСтрокСОшибками = Неопределено Тогда
		НетСтрокСОшибками = ПроверитьДокументИПеренестиСтрокиСОшибками(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика, ИмяЭтапа);
	КонецЕсли;
	
	ТребуетсяЗаписатьДокумент = Ложь;
	
	Если НетСтрокСОшибками Тогда
		
		Попытка
		
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		Исключение
			
			ТребуетсяЗаписатьДокумент = Истина;
			
		КонецПопытки; 
	Иначе
		ТребуетсяЗаписатьДокумент = Истина;
	КонецЕсли;
	
	Если ТребуетсяЗаписатьДокумент Тогда
		
		ЗаписатьДокумент(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика);
		
	КонецЕсли; 
	
КонецПроцедуры

Функция ЗаписатьДокумент(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика)

	Если ДокументОбъект = Неопределено 
		ИЛИ НЕ ДокументОбъект.Модифицированность() Тогда
		Возврат Истина;
	КонецЕсли;
	
	ДокументЗаписан = Ложь;
	
	Попытка
		
		Если ДокументОбъект.Проведен Тогда
			ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			ДокументОбъект.Записать();
		КонецЕсли;
		
		ТекстПроблемы = НСтр("ru = 'Документ не проведен: %1.
                              |Необходимо провести документ, устранив ошибки или пометить его на удаление, если он не нужен.';
                              |en = 'Document is not posted: %1. 
                              |Post the document after eliminating the errors or mark it for deletion if you do not need it.'");
		ТекстПроблемы = СтрШаблон(ТекстПроблемы, ДокументОбъект.Ссылка);
		
		ЗарегистрироватьПроблемыПриЗаписиДокумента(ДокументОбъект, ИзмененныеСтроки, ТекстПроблемы, ПараметрыОбработчика);
		
		ДокументЗаписан = Истина;
		
	Исключение
		
		ТекстОшибкиЗаписи = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		
		ЗарегистрироватьПроблемыПриЗаписиДокумента(ДокументОбъект, ИзмененныеСтроки, ТекстОшибкиЗаписи, ПараметрыОбработчика);
		
	КонецПопытки; 
	
	Возврат ДокументЗаписан;
	
КонецФункции

Процедура ПровестиДокументПослеУдаленияДанных(ДокументОбъект, ПараметрыОбработчика)

	Если ДокументОбъект = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстОшибкиПроведения = Неопределено;
	
	ХозяйственнаяОперация = ХозяйственнаяОперацияДокумента(ДокументОбъект);
	
	ПараметрыДокумента = ПараметрыДокумента(ХозяйственнаяОперация);
	
	Если ДокументОбъект[ПараметрыДокумента.ИмяТЧ].Количество() = 0 Тогда
		
		Попытка
			
			ТекстПроблемы = НСтр("ru = 'Не удалось пометить на удаление документ по причине:
                                  |%1
                                  |
                                  |Необходимо вручную пометить на удаление документ.';
                                  |en = 'Cannot mark the document for deletion due to:
                                  |%1
                                  |
                                  |Mark the document for deletion manually.'");
			
			Если ДокументОбъект.Проведен Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Иначе
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли; 
			
			ДокументОбъект.УстановитьПометкуУдаления(Истина);
		
		Исключение
			
			ТекстОшибкиПроведения = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
		КонецПопытки; 
		
		// Документ успешно помечен на удаление
		Возврат;
		
	Иначе
		
		Если ДокументОбъект.Проведен Тогда
			
			Попытка
			
				ТекстПроблемы = НСтр("ru = 'Не удалось провести документ после удаления лишних данных по причине:
                                      |%1
                                      |
                                      |Необходимо устранить ошибки мешающие проведению документа.';
                                      |en = 'Cannot post the document after deleting excess data due to:
                                      |%1
                                      |
                                      |Resolve the issues preventing the document from posting.'");
				
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
			Исключение
				
				ТекстОшибкиПроведения = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				
			КонецПопытки; 
			
			// Документ успешно проведен
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДокументЗаписан = ЗаписатьДокументПослеУдаленияДанных(ДокументОбъект, ПараметрыОбработчика);

	Если ТекстОшибкиПроведения <> Неопределено И ДокументЗаписан Тогда
		
		ТекстПроблемы = СтрШаблон(ТекстПроблемы, ТекстОшибкиПроведения);
		
		ЗарегистрироватьПроблему(
			ТекстПроблемы,
			ДокументОбъект.Организация,
			ДокументОбъект.Ссылка,
			Перечисления.ВажностьПроблемыУчета.Ошибка,
			ПараметрыОбработчика.Проверки[ПараметрыДокумента.ИмяПроверки]);
			
	КонецЕсли; 
	
КонецПроцедуры

Функция ЗаписатьДокументПослеУдаленияДанных(ДокументОбъект, ПараметрыОбработчика)

	Если ДокументОбъект = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	ДокументЗаписан = Ложь;
	
	Попытка
		
		Если ДокументОбъект.Проведен Тогда
			ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			ДокументОбъект.Записать();
		КонецЕсли;
		
		ДокументЗаписан = Истина;
		
	Исключение
		
		ТекстОшибкиЗаписи = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		
		ТекстПроблемы = НСтр("ru = 'Не удалось записать документ после удаления лишних данных по причине:
                              |%1
                              |
                              |Необходимо воспользоваться помощником в режиме ""Исправить ошибки"".';
                              |en = 'Cannot write the document after deleting excess data due to:
                              |%1
                              |
                              |Use the wizard in the ""Correct errors"" mode.'");
		
		ТекстПроблемы = СтрШаблон(ТекстПроблемы, ТекстОшибкиЗаписи);
		
		ХозяйственнаяОперация = ХозяйственнаяОперацияДокумента(ДокументОбъект);
		ПараметрыДокумента = ПараметрыДокумента(ХозяйственнаяОперация);
		
		Для каждого ДанныеСтроки Из ДокументОбъект[ПараметрыДокумента.ИмяТЧ] Цикл
			
			ЗарегистрироватьПроблему(
				ТекстПроблемы,
				ДокументОбъект.Организация,
				ДанныеСтроки[ПараметрыДокумента.ИмяРеквизитаТЧ],
				Перечисления.ВажностьПроблемыУчета.Ошибка,
				ПараметрыОбработчика.Проверки[ПараметрыДокумента.ИмяПроверки]);
				
		КонецЦикла; 
		
	КонецПопытки; 
	
	Возврат ДокументЗаписан;
	
КонецФункции

// Выполняет проверку документа и переносит строки с ошибками в другой документ.
// Если в документе все строки с ошибками, то они не будут перенесены.
//
// Возвращаемое значение:
//  Булево - Истина, если документ прошел проверку заполнения.
//
Функция ПроверитьДокументИПеренестиСтрокиСОшибками(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика, ИмяЭтапа)
	
	Перем ВсеСтрокиСОшибками;
	
	Если ПроверитьДокументИЗаписатьОшибки(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика, ИмяЭтапа, ВсеСтрокиСОшибками) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ВсеСтрокиСОшибками = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Если (ТипЗнч(ДокументОбъект) <> Тип("ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4")
			ИЛИ ДокументОбъект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы)
		И ТипЗнч(ДокументОбъект) <> Тип("ДокументОбъект.ВводОстатков") Тогда
	
		НомераИзмененныхСтрок = Новый Соответствие;
		Для Сч = 0 По ИзмененныеСтроки.ВГраница() Цикл
			ДанныеСтроки = ИзмененныеСтроки[Сч];
			НомераИзмененныхСтрок.Вставить(ДанныеСтроки.НомерСтроки, Сч);
		КонецЦикла; 
		
		ИзмененныеСтрокиСОшибками = Новый СписокЗначений;
		Для каждого КлючИЗначение Из ВсеСтрокиСОшибками Цикл
			Если НомераИзмененныхСтрок.Получить(КлючИЗначение.Ключ) <> Неопределено Тогда
				Если ИзмененныеСтрокиСОшибками.НайтиПоЗначению(КлючИЗначение.Ключ) = Неопределено Тогда
					ИзмененныеСтрокиСОшибками.Добавить(КлючИЗначение.Ключ);
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла;
		ИзмененныеСтрокиСОшибками.СортироватьПоЗначению();
		
		ХозяйственнаяОперация = ХозяйственнаяОперацияДокумента(ДокументОбъект);
		ПараметрыДокумента = ПараметрыДокумента(ХозяйственнаяОперация);
		
		Если ВсеСтрокиСОшибками.Количество() = ДокументОбъект[ПараметрыДокумента.ИмяТЧ].Количество() Тогда
			// В документе все строки с ошибками
			Возврат Ложь;
		КонецЕсли; 
		
		// Переносим строки с ошибками в другой документ.
		ДокументОбъектСОшибками = СоздатьНовыйДокумент(ХозяйственнаяОперация, Неопределено, ДокументОбъект.Дата, ПараметрыОбработчика);
		ДокументОбъектСОшибками.Комментарий = ПараметрыОбработчика.ОписаниеНовыйДокументСОшибками;
		
		ЗаполнитьЗначенияСвойств(ДокументОбъектСОшибками, ДокументОбъект,, "Номер,Проведен");
		
		ИзмененныеСтрокиДокументаСОшибками = Новый Массив;
		Для каждого ЭлементСписка Из ИзмененныеСтрокиСОшибками Цикл
			ДанныеСтроки = ДокументОбъектСОшибками[ПараметрыДокумента.ИмяТЧ].Добавить();
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, ДокументОбъект[ПараметрыДокумента.ИмяТЧ].Получить(ЭлементСписка.Значение-1));
			ИзмененныеСтрокиДокументаСОшибками.Добавить(ДанныеСтроки);
		КонецЦикла;
		
		// Удаляем перенесенные строки из ИзмененныеСтроки
		Для Сч = -ИзмененныеСтроки.ВГраница() По 0 Цикл
			Если ИзмененныеСтрокиСОшибками.НайтиПоЗначению(ИзмененныеСтроки[-Сч].НомерСтроки) <> Неопределено Тогда
				ИзмененныеСтроки.Удалить(-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		// Удаляем строки из исходного документа
		Для Сч = -ИзмененныеСтрокиСОшибками.Количество()+1 По 0 Цикл
			НомерСтроки = ИзмененныеСтрокиСОшибками[-Сч].Значение;
			ДокументОбъект[ПараметрыДокумента.ИмяТЧ].Удалить(НомерСтроки - 1);
		КонецЦикла;
		
		ЗаписатьДокумент(ДокументОбъектСОшибками, ИзмененныеСтрокиДокументаСОшибками, ПараметрыОбработчика);
		
	КонецЕсли; 
	
	Возврат ДокументОбъект.ПроверитьЗаполнение();
	
КонецФункции

Функция ПроверитьДокументИЗаписатьОшибки(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика, ИмяЭтапа, ВсеСтрокиСОшибками)

	ВсеСтрокиСОшибками = Неопределено;
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("РезультатыПроверкиЗаполнения", Неопределено);
	
	Если ДокументОбъект.ПроверитьЗаполнение() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ДокументОбъект.ДополнительныеСвойства.РезультатыПроверкиЗаполнения = Неопределено Тогда
		// Проверка документа не вернула результаты.
		ДокументОбъект.ДополнительныеСвойства.Удалить("РезультатыПроверкиЗаполнения");
		Возврат Ложь;
	КонецЕсли; 
	
	Если (ТипЗнч(ДокументОбъект) <> Тип("ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4")
			ИЛИ ДокументОбъект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы)
		И ТипЗнч(ДокументОбъект) <> Тип("ДокументОбъект.ВводОстатков") Тогда
	
		НомераИзмененныхСтрок = Новый Соответствие;
		Для Сч = 0 По ИзмененныеСтроки.ВГраница() Цикл
			ДанныеСтроки = ИзмененныеСтроки[Сч];
			НомераИзмененныхСтрок.Вставить(ДанныеСтроки.НомерСтроки, Сч);
		КонецЦикла; 
		
		ВсеСтрокиСОшибками = Новый Соответствие;
		ИндексыСтрокПоКоторымНеНужноЗаписыватьОшибки = Новый Массив;
		Для ИндексСтроки = 0 По ДокументОбъект.ДополнительныеСвойства.РезультатыПроверкиЗаполнения.ВГраница() Цикл
			ПараметрыОшибки = ДокументОбъект.ДополнительныеСвойства.РезультатыПроверкиЗаполнения[ИндексСтроки];
			Если НомераИзмененныхСтрок.Получить(ПараметрыОшибки.НомерСтроки) = Неопределено Тогда
				ИндексыСтрокПоКоторымНеНужноЗаписыватьОшибки.Добавить(ИндексСтроки);
			КонецЕсли; 
			ВсеСтрокиСОшибками.Вставить(ПараметрыОшибки.НомерСтроки, ИндексСтроки);
		КонецЦикла;
		
		// Нужно удалить результаты проверки строк, которые не изменялись.
		Для Сч = -ИндексыСтрокПоКоторымНеНужноЗаписыватьОшибки.ВГраница() По 0 Цикл
			ИндексСтроки = ИндексыСтрокПоКоторымНеНужноЗаписыватьОшибки[-Сч];
			ДокументОбъект.ДополнительныеСвойства.РезультатыПроверкиЗаполнения.Удалить(ИндексСтроки);
		КонецЦикла; 
		
		ЗаписатьРезультатыПроверкиЗаполнения(
			ДокументОбъект.ДополнительныеСвойства.РезультатыПроверкиЗаполнения, 
			ДокументОбъект.Организация,
			ПараметрыОбработчика.Проверки[ИмяЭтапа]);
		
		ДокументОбъект.ДополнительныеСвойства.Удалить("РезультатыПроверкиЗаполнения");
		
	КонецЕсли; 
	
	Возврат Ложь;

КонецФункции
 
Процедура ЗаписатьРезультатыПроверкиЗаполнения(РезультатыПроверкиЗаполнения, Организация, Проверка)

	Если РезультатыПроверкиЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ПараметрыОшибки Из РезультатыПроверкиЗаполнения Цикл
		
		ТекстПроблемы = НСтр("ru = 'Не удалось заполнить поле ""%1"".
                              |Необходимо проверить корректность заполнения документов и после исправления воспользоваться помощником в режиме ""Исправить ошибки"".';
                              |en = 'Cannot fill in the ""%1"" field.
                              |Make sure that documents are filled in correctly. After you correct them, use the wizard in the ""Correct mistakes"" mode.'");
		ТекстПроблемы = СтрШаблон(ТекстПроблемы, ПараметрыОшибки.ПредставлениеРеквизита);
		
		ЗарегистрироватьПроблему(
			ТекстПроблемы,
			Организация,
			ПараметрыОшибки.Объект,
			Перечисления.ВажностьПроблемыУчета.Ошибка,
			Проверка);
			
	КонецЦикла;
	
КонецПроцедуры

Функция КлючевыеРеквизитыОтличаются(СтарыеРеквизиты, НовыеРеквизиты, КлючевыеРеквизиты)

	Если СтарыеРеквизиты = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	ЗначенияТекущихРеквизитов = Новый Структура(КлючевыеРеквизиты);
	ЗначенияНовыхРеквизитов = Новый Структура(КлючевыеРеквизиты);
	
	Если НовыеРеквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
		
		// В одном документе содержатся данные только по одному активу.
		ЗначенияТекущихРеквизитов.Вставить("ВнеоборотныйАктив");
		ЗначенияНовыхРеквизитов.Вставить("ВнеоборотныйАктив");
		
		Если СтарыеРеквизиты.ПрочиеРасходы.Количество() <> 0 Тогда
			ЗначенияТекущихРеквизитов.ВнеоборотныйАктив = СтарыеРеквизиты.ПрочиеРасходы[0].ВнеоборотныйАктив;
		КонецЕсли; 
		
	ИначеЕсли НовыеРеквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
		
		// В одном документе содержатся данные только по одному активу.
		ЗначенияТекущихРеквизитов.Вставить("Аналитика");
		ЗначенияНовыхРеквизитов.Вставить("Аналитика");
		
		Если СтарыеРеквизиты.ПрочиеАктивыПассивы.Количество() <> 0 Тогда
			ЗначенияТекущихРеквизитов.Аналитика = СтарыеРеквизиты.ПрочиеАктивыПассивы[0].Аналитика;
		КонецЕсли; 
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЗначенияТекущихРеквизитов, СтарыеРеквизиты);
	ЗаполнитьЗначенияСвойств(ЗначенияНовыхРеквизитов, НовыеРеквизиты);
	
	Возврат НЕ ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(ЗначенияТекущихРеквизитов, ЗначенияНовыхРеквизитов);

КонецФункции

Функция ХозяйственнаяОперацияДокумента(ДокументОбъект)

	Если ДокументОбъект = Неопределено Тогда
		Возврат Неопределено;
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИзменениеПараметровОС2_4") Тогда
		Возврат Перечисления.ХозяйственныеОперации.ИзменениеПараметровОС;
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИзменениеПараметровНМА2_4") Тогда
		Возврат Перечисления.ХозяйственныеОперации.ИзменениеПараметровНМА;
	Иначе
		Возврат ДокументОбъект.ХозяйственнаяОперация;
	КонецЕсли;

КонецФункции

Процедура УвеличитьСчетчикОбработанныхДанных(ХозяйственнаяОперация, ПараметрыОбработчика)

	РезультатыПереносаДанных = ПараметрыОбработчика.РезультатыПереносаДанных;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств Тогда
		РезультатыПереносаДанных.ПеренесеныПараметрыУчетаСобственныхОС = 
			РезультатыПереносаДанных.ПеренесеныПараметрыУчетаСобственныхОС + 1;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
		РезультатыПереносаДанных.ПеренесеныПараметрыУчетаПереданныхВАрендуПредметовЛизингаНаБалансе = 
			РезультатыПереносаДанных.ПеренесеныПараметрыУчетаПереданныхВАрендуПредметовЛизингаНаБалансе + 1;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе Тогда
		РезультатыПереносаДанных.ПеренесеныПараметрыУчетаПредметовЛизингаНаБалансе = 
			РезультатыПереносаДанных.ПеренесеныПараметрыУчетаПредметовЛизингаНаБалансе + 1;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС Тогда
		РезультатыПереносаДанных.ПеренесеныПараметрыУчетаПереданныхВАрендуОС = 
			РезультатыПереносаДанных.ПеренесеныПараметрыУчетаПереданныхВАрендуОС + 1;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом Тогда
		РезультатыПереносаДанных.ПеренесеныПараметрыУчетаАрендованныхОС = 
			РезультатыПереносаДанных.ПеренесеныПараметрыУчетаАрендованныхОС + 1;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		РезультатыПереносаДанных.ПеренесеныПараметрыУчетаПредметовЛизингаЗаБалансом = 
			РезультатыПереносаДанных.ПеренесеныПараметрыУчетаПредметовЛизингаЗаБалансом + 1;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР Тогда
		РезультатыПереносаДанных.ПеренесеныПараметрыУчетаНМАиРасходовНаНИОКР = 
			РезультатыПереносаДанных.ПеренесеныПараметрыУчетаНМАиРасходовНаНИОКР + 1;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
		РезультатыПереносаДанных.ПеренесеныВложенияВоВнеоборотныеАктивы = 
			РезультатыПереносаДанных.ПеренесеныВложенияВоВнеоборотныеАктивы + 1;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровОС Тогда
		РезультатыПереносаДанных.СозданоИзменениеПараметровОС = 
			РезультатыПереносаДанных.СозданоИзменениеПараметровОС + 1;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровНМА Тогда
		РезультатыПереносаДанных.СозданоИзменениеПараметровНМА = 
			РезультатыПереносаДанных.СозданоИзменениеПараметровНМА + 1;
			
	КонецЕсли;	
	
КонецПроцедуры
 
#КонецОбласти

#Область ПроверкаДанных

Процедура ПроверитьДокументыВводаОстатков(РезультатЗапроса, ПараметрыОбработчика, ИмяЭтапа)

	ДокументОбъект = Неопределено;
	ИмяТЧ = Неопределено;
	
	ПараметрыПроверкиРеквизитов = ПараметрыПроверкиРеквизитовДокумента();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СообщитьПрогресс(ИмяЭтапа, ПараметрыОбработчика);

		ПараметрыДокумента = ПараметрыДокумента(Выборка.ХозяйственнаяОперация);
		
		Если ДокументОбъект = Неопределено 
			ИЛИ ДокументОбъект.Ссылка <> Выборка.Ссылка Тогда
			
			Если ЗначениеЗаполнено(Выборка.Ссылка) Тогда
				
				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
				ПараметрыПроверкиРеквизитов.ВспомогательныеРеквизитыОбъекта = Документы.ВводОстатковВнеоборотныхАктивов2_4.ВспомогательныеРеквизиты(ДокументОбъект, Ложь);
				
			Иначе
				
				СуществующийДокумент = НайтиСуществующийДокумент(Выборка.ХозяйственнаяОперация, Выборка, Истина, ПараметрыОбработчика);
				Если НЕ ЗначениеЗаполнено(СуществующийДокумент) Тогда
					
					ДокументОбъект = Неопределено;
					ПараметрыПроверкиРеквизитов.ВспомогательныеРеквизитыОбъекта = Неопределено;
					
				ИначеЕсли ДокументОбъект = Неопределено 
					ИЛИ СуществующийДокумент <> ДокументОбъект.Ссылка Тогда
					
					ДокументОбъект = СуществующийДокумент.ПолучитьОбъект();
					ПараметрыПроверкиРеквизитов.ВспомогательныеРеквизитыОбъекта = Документы.ВводОстатковВнеоборотныхАктивов2_4.ВспомогательныеРеквизиты(ДокументОбъект, Ложь);
					
				КонецЕсли; 
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИмяТЧ <> ПараметрыДокумента.ИмяТЧ Тогда
			ЗаполнитьПараметрыПроверкиРеквизитовДокумента(ПараметрыДокумента.ИмяТЧ, ПараметрыПроверкиРеквизитов);
		КонецЕсли; 
		
		ПроверитьРеквизитыДокумента(
			ДокументОбъект, 
			Выборка, 
			ПараметрыПроверкиРеквизитов, 
			ПараметрыОбработчика, 
			ИмяЭтапа);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьРеквизитыДокумента(ДокументОбъект, Выборка, ПараметрыПроверкиРеквизитов, ПараметрыОбработчика, ИмяЭтапа)

	ПроверитьДокументОбъект(
		ДокументОбъект, 
		Выборка, 
		ПараметрыОбработчика);
		
	Если ДокументОбъект <> Неопределено Тогда
		
		ПроверитьКорректностьИсходныхДанных(Выборка, ПараметрыОбработчика, ИмяЭтапа);
		
		ПараметрыДокумента = ПараметрыДокумента(Выборка.ХозяйственнаяОперация);
		
		СтруктураРеквизитов = Новый Структура(ПараметрыДокумента.КлючевыеРеквизиты);
		ПроверитьРавенствоРеквизитов(
			ДокументОбъект, 
			ДокументОбъект, 
			Выборка, 
			СтруктураРеквизитов, 
			ПараметрыПроверкиРеквизитов.ПредставлениеРеквизитовШапки,
			ПараметрыОбработчика);
			
		ПроверитьСтрокуТабличнойЧастиДокумента(
			ДокументОбъект, 
			Выборка, 
			ПараметрыПроверкиРеквизитов, 
			ПараметрыОбработчика,
			ИмяЭтапа);
			
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыПроверкиРеквизитовДокумента()

	ПараметрыПроверкиРеквизитов = Новый Структура;
	ПараметрыПроверкиРеквизитов.Вставить("ВспомогательныеРеквизитыОбъекта", Неопределено);
	ПараметрыПроверкиРеквизитов.Вставить("ПредставлениеРеквизитовТЧ", Неопределено);
	ПараметрыПроверкиРеквизитов.Вставить("ПредставлениеРеквизитовШапки", Неопределено);
	ПараметрыПроверкиРеквизитов.Вставить("СтруктураВсехРеквизитов", Неопределено);

	ПараметрыПроверкиРеквизитов.ПредставлениеРеквизитовШапки = Новый Соответствие;
	Для каждого РевизитТЧ Из Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.Реквизиты Цикл
		ПараметрыПроверкиРеквизитов.ПредставлениеРеквизитовШапки.Вставить(РевизитТЧ.Имя, РевизитТЧ.Синоним);
	КонецЦикла;
	
	Возврат ПараметрыПроверкиРеквизитов;

КонецФункции

Процедура ЗаполнитьПараметрыПроверкиРеквизитовДокумента(ИмяТЧ, ПараметрыПроверкиРеквизитов)

	ПараметрыПроверкиРеквизитов.ПредставлениеРеквизитовТЧ = Новый Соответствие;
	ПараметрыПроверкиРеквизитов.СтруктураВсехРеквизитов = Новый Структура;
	Для каждого РевизитТЧ Из Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ТабличныеЧасти[ИмяТЧ].Реквизиты Цикл
		ПараметрыПроверкиРеквизитов.СтруктураВсехРеквизитов.Вставить(РевизитТЧ.Имя);
		ПараметрыПроверкиРеквизитов.ПредставлениеРеквизитовТЧ.Вставить(РевизитТЧ.Имя, РевизитТЧ.Синоним);
	КонецЦикла;

КонецПроцедуры

Функция СтруктураПроверяемыхРеквизитовТабличнойЧасти(Знач ДанныеСтроки, Знач ДокументОбъект, Знач ПараметрыПроверкиРеквизитов)
	
	ВспомогательныеРеквизиты = Документы.ВводОстатковВнеоборотныхАктивов2_4.ДополнитьВспомогательныеРеквизитыПоДаннымСтроки(
	ДокументОбъект, ДанныеСтроки, ПараметрыПроверкиРеквизитов.ВспомогательныеРеквизитыОбъекта);
	
	ПараметрыРеквизитовОбъекта = ВнеоборотныеАктивыКлиентСервер.ЗначенияСвойствЗависимыхРеквизитов_ВводОстатков(
									ДанныеСтроки, ВспомогательныеРеквизиты);
	
	Если ПараметрыРеквизитовОбъекта <> Неопределено Тогда
		СтруктураРеквизитов = ДоступныеРеквизитыДокумента(ПараметрыПроверкиРеквизитов.СтруктураВсехРеквизитов, ПараметрыРеквизитовОбъекта);
	Иначе
		СтруктураРеквизитов = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыПроверкиРеквизитов.СтруктураВсехРеквизитов);
	КонецЕсли;
	
	Возврат СтруктураРеквизитов;

КонецФункции
 
Процедура ПроверитьДокументыИзмененияПараметровОС(РезультатЗапросаРасходы, РезультатЗапросаОС, ПараметрыОбработчика, ИмяЭтапа)

	ДокументОбъект = Неопределено;
	
	ПараметрыДокумента = ПараметрыДокумента(Перечисления.ХозяйственныеОперации.ИзменениеПараметровОС);
	
	ТаблицаРасходы = РезультатЗапросаРасходы.Выгрузить();
	ТаблицаРасходы.Индексы.Добавить("Ссылка");
	
	Выборка = РезультатЗапросаОС.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СообщитьПрогресс(ИмяЭтапа, ПараметрыОбработчика);
		
		Если ДокументОбъект = Неопределено 
			ИЛИ ДокументОбъект.Ссылка <> Выборка.Ссылка Тогда
			
			Если ЗначениеЗаполнено(Выборка.Ссылка) Тогда
				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Иначе
				ДокументОбъект = Неопределено;
			КонецЕсли;
			
		КонецЕсли;
		
		ПроверитьДокументОбъект(
			ДокументОбъект, 
			Выборка, 
			ПараметрыОбработчика);
			
		Если ДокументОбъект <> Неопределено Тогда
			
			СтруктураПоиска = Новый Структура("Ссылка", Выборка.ДокументОснование);
			СписокСтрок = ТаблицаРасходы.НайтиСтроки(СтруктураПоиска);
			
			ПроверитьТабличнуюЧастьИзмененияПараметров(
				ДокументОбъект.Амортизация, 
				СписокСтрок,
				ДокументОбъект,
				Выборка[ПараметрыДокумента.ИмяРеквизитаТЧ],
				ПараметрыОбработчика.Проверки[ПараметрыДокумента.ИмяПроверки]);
				
			Если Выборка.ВключитьАмортизационнуюПремиюВСоставРасходов Тогда
				
				ПроверитьТабличнуюЧастьИзмененияПараметров(
					ДокументОбъект.АмортизационнаяПремия, 
					СписокСтрок,
					ДокументОбъект,
					Выборка[ПараметрыДокумента.ИмяРеквизитаТЧ],
					ПараметрыОбработчика.Проверки[ПараметрыДокумента.ИмяПроверки],
					"АмортизационнойПремии");
					
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьДокументыИзмененияПараметровНМА(РезультатЗапросаРасходы, РезультатЗапросаНМА, ПараметрыОбработчика, ИмяЭтапа)

	ДокументОбъект = Неопределено;
	
	ПараметрыДокумента = ПараметрыДокумента(Перечисления.ХозяйственныеОперации.ИзменениеПараметровНМА);
	
	ТаблицаРасходы = РезультатЗапросаРасходы.Выгрузить();
	ТаблицаРасходы.Индексы.Добавить("Ссылка");
	
	Выборка = РезультатЗапросаНМА.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СообщитьПрогресс(ИмяЭтапа, ПараметрыОбработчика);
		
		Если ДокументОбъект = Неопределено 
			ИЛИ ДокументОбъект.Ссылка <> Выборка.Ссылка Тогда
			
			Если ЗначениеЗаполнено(Выборка.Ссылка) Тогда
				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Иначе
				ДокументОбъект = Неопределено;
			КонецЕсли;
			
		КонецЕсли;
		
		ПроверитьДокументОбъект(
			ДокументОбъект, 
			Выборка, 
			ПараметрыОбработчика);
			
		Если ДокументОбъект <> Неопределено Тогда
			
			СтруктураПоиска = Новый Структура("Ссылка", Выборка.ДокументОснование);
			СписокСтрок = ТаблицаРасходы.НайтиСтроки(СтруктураПоиска);
			
			ПроверитьТабличнуюЧастьИзмененияПараметров(
				ДокументОбъект.АмортизационныеРасходы, 
				СписокСтрок,
				ДокументОбъект,
				Выборка[ПараметрыДокумента.ИмяРеквизитаТЧ],
				ПараметрыОбработчика.Проверки[ПараметрыДокумента.ИмяПроверки]);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьВложенияВоВнеоборотныеАктивы(РезультатЗапроса, ПараметрыОбработчика, ИмяЭтапа)

	Выборка = РезультатЗапроса.Выбрать();
	
	ЗафиксироватьНачалоВыполненияЭтапа(ИмяЭтапа, Выборка.Количество(), ПараметрыОбработчика);
	
	Пока Выборка.Следующий() Цикл
		
		СообщитьПрогресс(ИмяЭтапа, ПараметрыОбработчика);
	
		СписокСтрок = Новый Массив;
		
		Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
			
			ТекстСтроки = СтрШаблон(НСтр("ru = 'Обнаружен остаток по регистру ""Активы и пассивы"" на сумму: %1 %2';
										|en = 'There is a balance by the Assets and liabilities register for the amount of: %1 %2'"), Выборка.Сумма, ПараметрыОбработчика.ВалютаУпр);
			СписокСтрок.Добавить(ТекстСтроки);
			
		Иначе
			
			ТекстСтроки = НСтр("ru = 'Отличаются суммы вложений во внеоборотный актив по данным учета версии 2.2 и 2.4:';
								|en = 'The amounts of investments in capital assets by the accounting data of versions 2.2 and 2.4 are different:'");
		
			СписокСтрок.Добавить(ТекстСтроки);
			
			ВалютаРеглУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Выборка.Организация);
			
			ПроверитьСуммуВложений(НСтр("ru = '- сумма БУ';
										|en = '- bookkeeping amount'"), Выборка.СуммаРегл, Выборка.СуммаРегл24, ВалютаРеглУчета, СписокСтрок);
			ПроверитьСуммуВложений(НСтр("ru = '- сумма ПР';
										|en = '- PD amount'"), Выборка.СуммаПР, Выборка.СуммаПР24, ВалютаРеглУчета, СписокСтрок);
			ПроверитьСуммуВложений(НСтр("ru = '- сумма ВР';
										|en = '- TD amount'"), Выборка.СуммаВР, Выборка.СуммаВР24, ВалютаРеглУчета, СписокСтрок);
			ПроверитьСуммуВложений(НСтр("ru = '- сумма с НДС (упр)';
										|en = '- amount including VAT (man)'"), Выборка.Сумма, Выборка.Сумма24, ПараметрыОбработчика.ВалютаУпр, СписокСтрок);
			ПроверитьСуммуВложений(НСтр("ru = '- сумма без НДС (упр)';
										|en = '- amount excluding VAT (man)'"), Выборка.СуммаБезНДС, Выборка.СуммаБезНДС24, ПараметрыОбработчика.ВалютаУпр, СписокСтрок);
			
		КонецЕсли; 
		
		ТекстПроблемы = СтрСоединить(СписокСтрок, Символы.ПС);
		
		ЗарегистрироватьПроблему(
			ТекстПроблемы, 
			Выборка.Организация, 
			Выборка.ВнеоборотныйАктив, 
			Перечисления.ВажностьПроблемыУчета.Ошибка, 
			ПараметрыОбработчика.Проверки[ИмяЭтапа]);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьСуммуВложений(ПредставлениеПоля, Сумма22, Сумма24, Валюта, СписокСтрок)

	Если Сумма22 <> Сумма24 Тогда
		ТекстСтроки = СтрШаблон(НСтр("ru = '%1: по данным версии 2.2 = %2 %3; по данным версии 2.4 = %4 %5';
									|en = '%1: based on version 2.2 data = %2 %3; based on version 2.4 data = %4 %5'"), 
								ПредставлениеПоля,
								Формат(Сумма22, "ЧДЦ=2; ЧН=0"),
								Валюта,
								Формат(Сумма24, "ЧДЦ=2; ЧН=0"),
								Валюта);
								
		СписокСтрок.Добавить(ТекстСтроки);
	КонецЕсли;
	
КонецПроцедуры
 
Процедура ПроверитьЛишниеДанные(РезультатЗапроса, ПараметрыОбработчика, ИмяЭтапа)

	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл

		СообщитьПрогресс(ИмяЭтапа, ПараметрыОбработчика);
		
		ПараметрыДокумента = ПараметрыДокумента(Выборка.ХозяйственнаяОперация);
		
		Если Выборка.Проведен Тогда
			
			Если Выборка.ВидПроблемы = "Дубль" Тогда
				ТекстПроблемы = НСтр("ru = 'По внеоборотному активу обнаружены дубли документов.
                                      |Исходный документ: %1
                                      |Аналогичный документ: %2
                                      |
                                      |Необходимо удалить лишний документ.';
                                      |en = 'Duplicate documents are found for the capital asset.
                                      |Original document: %1
                                      |Identical document: %2
                                      |
                                      |Delete the extra document.'");
				ТекстПроблемы = СтрШаблон(ТекстПроблемы, Строка(Выборка.Ссылка), Строка(Выборка.СсылкаДубль));
			Иначе	
				ТекстПроблемы = НСтр("ru = 'По внеоборотному активу введены данные, которые отсутствуют в учете версии 2.2.
                                      |Документ: %1
                                      |
                                      |Необходимо удалить лишние данные, либо проверить корректность учета версии 2.2.';
                                      |en = 'For the capital asset, you have entered data that is missing in accounting 2.2.
                                      |Document: %1
                                      |
                                      |Delete the extra data or make sure that accounting 2.2 is correct.'");
				ТекстПроблемы = СтрШаблон(ТекстПроблемы, Строка(Выборка.Ссылка));
			КонецЕсли; 
			
			ЗарегистрироватьПроблему(
					ТекстПроблемы, 
					Выборка.Организация, 
					Выборка[ПараметрыДокумента.ИмяРеквизитаТЧ], 
					Перечисления.ВажностьПроблемыУчета.Ошибка, 
					ПараметрыОбработчика.Проверки[ПараметрыДокумента.ИмяПроверки]);
				
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьДокументОбъект(ДокументОбъект, Выборка, ПараметрыОбработчика)

	ПараметрыДокумента = ПараметрыДокумента(Выборка.ХозяйственнаяОперация);
	
	ВнеоборотныйАктив = Выборка[ПараметрыДокумента.ИмяРеквизитаТЧ];
	
	Если ДокументОбъект = Неопределено Тогда
		
		Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
			
			ТекстПроблемы = НСтр("ru = 'Не перенесены вложения во внеоборотный актив (не найден документ ввода остатков).
                                  |Необходимо воспользоваться помощником для исправления ошибки или исправить ошибку вручную.';
                                  |en = 'Investments in the capital asset are not transferred (a document of entering balance is not found).
                                  |Use the wizard to correct the mistake or correct the mistake manually.'");
			
		ИначеЕсли Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
			
			ТекстПроблемы = НСтр("ru = 'Не изменены остатки по регистру ""Активы и пассивы"" (не найден документ ввода остатков).
                                  |Необходимо воспользоваться помощником для исправления ошибки или исправить ошибку вручную.';
                                  |en = 'Balance in the ""Assets and liabilities"" register is not changed (a document of entering balance is not found).
                                  |Use the wizard to correct the mistake or correct the mistake manually.'");
		Иначе	
			
			ТекстПроблемы = НСтр("ru = 'Не перенесены параметры учета (не найден документ ввода остатков).
                                  |Необходимо воспользоваться помощником для исправления ошибки или исправить ошибку вручную.';
                                  |en = 'Accounting parameters are not transferred (a document of entering balance was not found).
                                  |Use the wizard to correct mistakes or correct the mistakes manually.'");
			
		КонецЕсли; 
		
		ЗарегистрироватьПроблему(
				ТекстПроблемы, 
				Выборка.Организация, 
				ВнеоборотныйАктив, 
				Перечисления.ВажностьПроблемыУчета.Ошибка, 
				ПараметрыОбработчика.Проверки[ПараметрыДокумента.ИмяПроверки]);
				
		Возврат;
		
	КонецЕсли; 
		
	Если НЕ ДокументОбъект.Проведен Тогда
		
		ТекстПроблемы = НСтр("ru = 'Документ не проведен: %1
                              |Необходимо провести документ, устранив ошибки или пометить его на удаление, если он не нужен.';
                              |en = 'Document is not posted: %1
                              |Post the document after eliminating the errors or mark it for deletion if you do not need it.'");
		ТекстПроблемы = СтрШаблон(ТекстПроблемы, Строка(ДокументОбъект.Ссылка));
		
		ЗарегистрироватьПроблему(
				ТекстПроблемы, 
				ДокументОбъект.Организация, 
				ВнеоборотныйАктив, 
				Перечисления.ВажностьПроблемыУчета.Ошибка, 
				ПараметрыОбработчика.Проверки[ПараметрыДокумента.ИмяПроверки]);
				
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПроверитьСтрокуТабличнойЧастиДокумента(ДокументОбъект, Выборка, ПараметрыПроверкиРеквизитов, ПараметрыОбработчика, ИмяЭтапа)

	Если ДокументОбъект = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ДанныеСтроки = ПолучитьСтрокуДокумента(Выборка, ДокументОбъект, Ложь, ПараметрыОбработчика);
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;	
	КонецЕсли; 
	
	СтруктураРеквизитов = СтруктураПроверяемыхРеквизитовТабличнойЧасти(ДанныеСтроки, ДокументОбъект, ПараметрыПроверкиРеквизитов);
	
	ПроверитьРавенствоРеквизитов(
		ДокументОбъект, 
		ДанныеСтроки, 
		Выборка, 
		СтруктураРеквизитов,
		ПараметрыПроверкиРеквизитов.ПредставлениеРеквизитовТЧ,
		ПараметрыОбработчика);
	
	ИзмененныеСтроки = Новый Массив;
	ИзмененныеСтроки.Добавить(ДанныеСтроки);
	ПроверитьДокументИЗаписатьОшибки(ДокументОбъект, ИзмененныеСтроки, ПараметрыОбработчика, ИмяЭтапа, Неопределено);
	
КонецПроцедуры

Процедура ПроверитьТабличнуюЧастьИзмененияПараметров(ТабличнаяЧасть24, ТабличнаяЧасть22, ДокументОбъект, ВнеоборотныйАктив, Проверка, ДополнениеПоля = "")

	ТаблицаВсехЗначений = ТабличнаяЧасть24.Выгрузить();
	ТаблицаВсехЗначений.Колонки.Добавить("Счетчик", ОбщегоНазначения.ОписаниеТипаЧисло(10));
	ТаблицаВсехЗначений.ЗаполнитьЗначения(1, "Счетчик");
	
	Для каждого ДанныеСтроки Из ТабличнаяЧасть22 Цикл
		Если ЗначениеЗаполнено(ДанныеСтроки["СтатьяРасходов" + ДополнениеПоля]) Тогда
			НоваяСтрока = ТаблицаВсехЗначений.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтроки);
			НоваяСтрока.СтатьяРасходов = ДанныеСтроки["СтатьяРасходов" + ДополнениеПоля];
			НоваяСтрока.АналитикаРасходов = ДанныеСтроки["АналитикаРасходов" + ДополнениеПоля];
			НоваяСтрока.Счетчик = -1;
		КонецЕсли;
	КонецЦикла;
	
	СписокПолей = "Подразделение,НаправлениеДеятельности,"
	+ "СтатьяРасходов,АналитикаРасходов,"
	+ "ПередаватьРасходыВДругуюОрганизацию,ОрганизацияПолучательРасходов,Коэффициент";
	ТаблицаВсехЗначений.Свернуть(СписокПолей, "Счетчик");
	
	ИмяТЧ = ?(ДополнениеПоля = "АмортизационнойПремии", НСтр("ru = 'Амортизационная премия';
															|en = 'Bonus depreciation'"), НСтр("ru = 'Отражение расходов';
																									|en = 'Expense parameters'"));
			
	Для каждого ДанныеСтроки Из ТаблицаВсехЗначений Цикл
		
		ТекстПроблемы = Неопределено;
		Если ДанныеСтроки.Счетчик > 0 Тогда
			
			ТекстПроблемы = НСтр("ru = 'В документе %1 в табличной части ""%2"" указан лишний способ отражения расходов:
                                  |Подразделение: %3
                                  |Направление деятельности: %4
                                  |Статья расходов: %5
                                  |Аналитика расходов: %6
                                  |Передавать расходы в другую организацию: %7
                                  |Организация-получатель расходов: %8
                                  |Коэффициент: %9
                                  |
                                  |Необходимо воспользоваться помощником в режиме ""Исправить ошибки"".';
                                  |en = 'An excessive method of recording expenses is specified in the ""%2"" tabular section of the %1 document:
                                  |Business unit: %3
                                  |Line of business: %4
                                  |Expense item: %5
                                  |Expense dimension: %6
                                  |Transfer expenses to another company: %7
                                  |Expense recipient company: %8
                                  |Factor: %9
                                  |
                                  |Use the wizard in the ""Correct errors"" mode.'");
			
		ИначеЕсли ДанныеСтроки.Счетчик < 0 Тогда
					
			ТекстПроблемы = НСтр("ru = 'В документе %1 в табличной части ""%2"" отсутствует способ отражения расходов:
                                  |Подразделение: %3
                                  |Направление деятельности: %4
                                  |Статья расходов: %5
                                  |Аналитика расходов: %6
                                  |Передавать расходы в другую организацию: %7
                                  |Организация-получатель расходов: %8
                                  |Коэффициент: %9
                                  |
                                  |Необходимо воспользоваться помощником в режиме ""Исправить ошибки"".';
                                  |en = 'A method of recording expenses is missing in the ""%2"" tabular section of the %1 document:
                                  |Business unit: %3
                                  |Line of business: %4
                                  |Expense item: %5
                                  |Expense dimension: %6
                                  |Transfer expenses to another company: %7
                                  |Expense recipient company: %8
                                  |Factor: %9
                                  |
                                  |Use the wizard in the ""Correct errors"" mode.'");
		КонецЕсли;

		Если ТекстПроблемы <> Неопределено Тогда
			
			ТекстПроблемы = СтрШаблон(ТекстПроблемы,
								ДокументОбъект.Ссылка,
								ИмяТЧ,
								ПредставлениеЗначения(ДанныеСтроки.Подразделение),
								ПредставлениеЗначения(ДанныеСтроки.НаправлениеДеятельности),
								ПредставлениеЗначения(ДанныеСтроки.СтатьяРасходов),
								ПредставлениеЗначения(ДанныеСтроки.АналитикаРасходов),
								ПредставлениеЗначения(ДанныеСтроки.ПередаватьРасходыВДругуюОрганизацию),
								ПредставлениеЗначения(ДанныеСтроки.ОрганизацияПолучательРасходов),
								ПредставлениеЗначения(ДанныеСтроки.Коэффициент));
								
			ЗарегистрироватьПроблему(
					ТекстПроблемы, 
					ДокументОбъект.Организация, 
					ВнеоборотныйАктив, 
					Перечисления.ВажностьПроблемыУчета.Ошибка, 
					Проверка);
					
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКорректностьИсходныхДанных(ИсходныеДанные, ПараметрыОбработчика, ИмяЭтапа)

	Проверка = ПараметрыОбработчика.Проверки[ИмяЭтапа];
	
	Если ИсходныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ ИсходныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе
		ИЛИ ИсходныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе 
		ИЛИ ИсходныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС Тогда
		
		Если ИсходныеДанные.Местонахождение <> ИсходныеДанные.МестонахождениеУУ
			И ИсходныеДанные.ОтражатьВРеглУчете
			И ИсходныеДанные.ОтражатьВУпрУчете
			И ЗначениеЗаполнено(ИсходныеДанные.Местонахождение)
			И ЗначениеЗаполнено(ИсходныеДанные.МестонахождениеУУ)
			И ПараметрыОбработчика.ИспользоватьДанныеМеждународногоУчета Тогда
			
			ТекстПроблемы = НСтр("ru = 'Отличается местонахождение по бухгалтерскому учету (%1) от местонахождения по международному учету (%2).
                                  |На момент  местонахождение не должно отличаться.
                                  |Рекомендуется оформить перемещение в одно подразделение в бухгалтерском или в международном учете и повторно перенести данные.';
                                  |en = 'Location by bookkeeping (%1) differs from the location by international accounting (%2). 
                                  |Location cannot differ.
                                  |It is recommended that you register transfer to one business unit either in bookkeeping or in international accounting and transfer the data again.'");
			
			ТекстПроблемы = СтрШаблон(ТекстПроблемы, ИсходныеДанные.Местонахождение, ИсходныеДанные.МестонахождениеУУ);
			
			ЗарегистрироватьПроблему(
				ТекстПроблемы, 
				ИсходныеДанные.Организация, 
				ИсходныеДанные.ОсновноеСредство, 
				Перечисления.ВажностьПроблемыУчета.Ошибка, 
				Проверка);
				
		КонецЕсли;
		
		Если (ИсходныеДанные.МетодНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции
				ИЛИ ИсходныеДанные.МетодНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега)
			И ИсходныеДанные.МетодНачисленияАмортизацииУУ = Перечисления.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции
			И ИсходныеДанные.ПоказательНаработки <> ИсходныеДанные.ПоказательНаработкиУУ 
			И ЗначениеЗаполнено(ИсходныеДанные.ПоказательНаработки)
			И ЗначениеЗаполнено(ИсходныеДанные.ПоказательНаработкиУУ)
			И ИсходныеДанные.ОтражатьВРеглУчете
			И ИсходныеДанные.ОтражатьВУпрУчете Тогда
			
			ТекстПроблемы = НСтр("ru = 'Отличается показатель наработки по бухгалтерскому учету (%1) от показателя наработки по международному учету (%2).
                                  |На момент перехода показатель наработки не должен отличаться.
                                  |Рекомендуется изменить показатель наработки в бухгалтерском или в международном учете и повторно перенести данные.';
                                  |en = 'Running time value by bookkeeping (%1) differs from the running time value by international accounting (%2). 
                                  |Running time value cannot differ at the time of migration.
                                  |It is recommended that you change a running time value either in bookkeeping or in international accounting and transfer the data again.'");
			
			ТекстПроблемы = СтрШаблон(ТекстПроблемы, ИсходныеДанные.ПоказательНаработки, ИсходныеДанные.ПоказательНаработкиУУ);
			
			ЗарегистрироватьПроблему(
				ТекстПроблемы, 
				ИсходныеДанные.Организация, 
				ИсходныеДанные.ОсновноеСредство, 
				Перечисления.ВажностьПроблемыУчета.Ошибка, 
				Проверка);
			
		КонецЕсли; 
		
	КонецЕсли; 
	
	// Проверка счетов учета
	Если ИсходныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ ИсходныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе
		ИЛИ ИсходныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе 
		ИЛИ ИсходныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС Тогда
		
		Если ИсходныеДанные.ОтражатьВРеглУчете Тогда
			
			ПроверитьСчетУчета(
				ИсходныеДанные.СчетУчета, 
				ИсходныеДанные.СчетУчетаГФУ, 
				ИсходныеДанные.Организация, 
				ИсходныеДанные.ОсновноеСредство, 
				Проверка);
			
		КонецЕсли;

		ПроверитьСчетИзноса(
			ИсходныеДанные, 
			ИсходныеДанные.Организация,
			ИсходныеДанные.ОсновноеСредство, 
			Проверка); 
		
		ПроверитьСчетПередачиРасходов(
			ИсходныеДанные, 
			ИсходныеДанные.Организация,
			ИсходныеДанные.ОсновноеСредство, 
			Проверка); 
		
	ИначеЕсли ИсходныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР Тогда
		
		Если ИсходныеДанные.ОтражатьВРеглУчете Тогда
			
			ПроверитьСчетУчета(
				ИсходныеДанные.СчетУчета, 
				ИсходныеДанные.СчетУчетаГФУ, 
				ИсходныеДанные.Организация, 
				ИсходныеДанные.НематериальныйАктив, 
				Проверка);
			
		КонецЕсли;
		
	ИначеЕсли ИсходныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом
		ИЛИ ИсходныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		
		Если ИсходныеДанные.ОтражатьВРеглУчете Тогда
			
			ПроверитьСчетУчета(
				ИсходныеДанные.СчетЗабалансовогоУчета, 
				ИсходныеДанные.СчетЗабалансовогоУчетаГФУ, 
				ИсходныеДанные.Организация, 
				ИсходныеДанные.ОсновноеСредство, 
				Проверка);
			
		КонецЕсли;
			
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПроверитьСчетУчета(СчетУчета, СчетУчетаГФУ, Организация, ВнеоборотныйАктив, Проверка)

	Если СчетУчета <> СчетУчетаГФУ 
		И ЗначениеЗаполнено(СчетУчета) Тогда
		
		ТекстПроблемы = НСтр("ru = 'Отличается счет учета %1 по данным версии 2.2 от счета учета %2 в версии 2.4.
							  |Рекомендуется исправить отличия с помощью помощника перехода.';
							  |en = 'GL account %1 according to data of version 2.2 differs from GL account %2 in version 2.4.
							  |It is recommended that you correct differences using data migration wizard.'");
		
		ТекстПроблемы = СтрШаблон(ТекстПроблемы, 
									ПредставлениеЗначения(СчетУчета), 
									ПредставлениеЗначения(СчетУчетаГФУ));
		
		ЗарегистрироватьПроблему(
			ТекстПроблемы, 
			Организация, 
			ВнеоборотныйАктив, 
			Перечисления.ВажностьПроблемыУчета.Ошибка, 
			Проверка);
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьСчетПередачиРасходов(Выборка, Организация, ВнеоборотныйАктив, Проверка)

	Если Выборка.ПередаватьРасходыВДругуюОрганизацию
		И ЗначениеЗаполнено(Выборка.СчетПередачиРасходов)
		И Выборка.СчетПередачиРасходов <> ПланыСчетов.Хозрасчетный.РасчетыПоТекущимОперациям Тогда
		
		ТекстПроблемы = НСтр("ru = 'В учете версии 2.2 используется счет передачи расходов %1.
                              |В учете версии 2.4 используется передачи расходов %2, который нельзя изменить.
                              |Необходимо перенести остатки со счета %3 на счет %4 с помощью документа ""Операция (регл)"".';
                              |en = 'Expense transfer account %1 is used in accounting 2.2.
                              |Expense transfer account %2 is used in accounting 2.4 and cannot be changed.
                              |Transfer balance from account %3 to account %4 using the ""Transaction (compl)"" document.'");
		
		ТекстПроблемы = СтрШаблон(ТекстПроблемы, 
									ПредставлениеЗначения(Выборка.СчетПередачиРасходов), 
									ПредставлениеЗначения(ПланыСчетов.Хозрасчетный.РасчетыПоТекущимОперациям),
									ПредставлениеЗначения(Выборка.СчетПередачиРасходов), 
									ПредставлениеЗначения(ПланыСчетов.Хозрасчетный.РасчетыПоТекущимОперациям));
		
		ЗарегистрироватьПроблему(
			ТекстПроблемы, 
			Организация, 
			ВнеоборотныйАктив, 
			Перечисления.ВажностьПроблемыУчета.Предупреждение, 
			Проверка);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПроверитьСчетИзноса(Выборка, Организация, ВнеоборотныйАктив, Проверка)

	Если Выборка.ПорядокУчетаБУ = Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ
		И ЗначениеЗаполнено(Выборка.СчетИзноса)
		И Выборка.СчетИзноса <> ПланыСчетов.Хозрасчетный.ИзносОсновныхСредств Тогда
		
		ТекстПроблемы = НСтр("ru = 'В учете версии 2.2 используется счет износа %1.
                              |В учете версии 2.4 используется счет износа %2, который нельзя изменить.
                              |Необходимо перенести остатки со счета %3 на счет %4 с помощью документа ""Операция (регл)"".';
                              |en = '%1 wear account is used in accounting 2.2.
                              |%2 wear account which cannot be changed is used in accounting 2.4.
                              |Move balance from account %3 to account %4 using the ""Transaction (compl)"" document.'");
		
		ТекстПроблемы = СтрШаблон(ТекстПроблемы, 
									ПредставлениеЗначения(Выборка.СчетИзноса), 
									ПредставлениеЗначения(ПланыСчетов.Хозрасчетный.ИзносОсновныхСредств),
									ПредставлениеЗначения(Выборка.СчетИзноса),
									ПредставлениеЗначения(ПланыСчетов.Хозрасчетный.ИзносОсновныхСредств));
		
		ЗарегистрироватьПроблему(
			ТекстПроблемы, 
			Организация, 
			ВнеоборотныйАктив, 
			Перечисления.ВажностьПроблемыУчета.Предупреждение, 
			Проверка);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПроверитьРавенствоРеквизитов(ДокументОбъект, РеквизитыДокумента, ИсходныеЗначения, СтруктураРеквизитов, ПредставлениеРеквизитов, ПараметрыОбработчика)

	ПараметрыДокумента = ПараметрыДокумента(ИсходныеЗначения.ХозяйственнаяОперация);
	
	ВнеоборотныйАктив = ИсходныеЗначения[ПараметрыДокумента.ИмяРеквизитаТЧ];
	
	Для каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		
		Если НЕ ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ИсходныеЗначения, КлючИЗначение.Ключ) Тогда
			// В выборке нет реквизита.
			Продолжить;
		КонецЕсли; 
		
		Если СтрНачинаетсяС(КлючИЗначение.Ключ, "Удалить")
			ИЛИ КлючИЗначение.Ключ = "АдресМестонахожденияЗначение"
			ИЛИ (КлючИЗначение.Ключ = "НалогообложениеНДС" 
					ИЛИ КлючИЗначение.Ключ = "ВариантРаздельногоУчетаНДС")
				И НЕ ПараметрыОбработчика.ИспользоватьРаздельныйУчетПоНалогообложению
			ИЛИ (КлючИЗначение.Ключ = "НалогообложениеНДС" 
					ИЛИ КлючИЗначение.Ключ = "ВариантРаздельногоУчетаНДС")
				И НЕ ЗначениеЗаполнено(ИсходныеЗначения[КлючИЗначение.Ключ]) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(РеквизитыДокумента[КлючИЗначение.Ключ]) = Тип("Булево")
				И (РеквизитыДокумента[КлючИЗначение.Ключ] = Истина
						И (ИсходныеЗначения[КлючИЗначение.Ключ] = Ложь
							ИЛИ ЗначениеЗаполнено(ИсходныеЗначения[КлючИЗначение.Ключ]) = NULL)
					ИЛИ РеквизитыДокумента[КлючИЗначение.Ключ] = Ложь
						И ИсходныеЗначения[КлючИЗначение.Ключ] = Истина)
							
			ИЛИ ТипЗнч(РеквизитыДокумента[КлючИЗначение.Ключ]) <> Тип("Булево")
				И (ЗначениеЗаполнено(РеквизитыДокумента[КлючИЗначение.Ключ])
						И ЗначениеЗаполнено(ИсходныеЗначения[КлючИЗначение.Ключ])
						И РеквизитыДокумента[КлючИЗначение.Ключ] <> ИсходныеЗначения[КлючИЗначение.Ключ] 
					ИЛИ НЕ ЗначениеЗаполнено(РеквизитыДокумента[КлючИЗначение.Ключ])
						И ЗначениеЗаполнено(ИсходныеЗначения[КлючИЗначение.Ключ])
					ИЛИ ЗначениеЗаполнено(РеквизитыДокумента[КлючИЗначение.Ключ])
						И НЕ ЗначениеЗаполнено(ИсходныеЗначения[КлючИЗначение.Ключ])) Тогда
			
			ПредставлениеРеквизита = ПредставлениеРеквизита(
				КлючИЗначение.Ключ, 
				ПредставлениеРеквизитов);
			
			ТекстПроблемы = НСтр("ru = 'В документе ввода остатков №%1 от %2 поле ""%3"" не соответствует данным учета внеоборотного актива версии 2.2.
                                  |По данным учета: %4
                                  |В документе: %5
                                  |
                                  |Необходимо воспользоваться помощником в режиме ""Исправить ошибки"".';
                                  |en = 'The ""%3"" field in document of entering balance No. %1 dated %2 does not match the data of capital asset accounting 2.2.
                                  |According to the accounting data: %4
                                  |In the document: %5
                                  |
                                  |Use the wizard in the ""Correct errors"" mode.'");
			
			ТекстПроблемы = СтрШаблон(ТекстПроблемы, 
										ДокументОбъект.Номер, 
										Формат(ДокументОбъект.Дата, "ДЛФ=D"), 
										ПредставлениеРеквизита, 
										ПредставлениеЗначения(ИсходныеЗначения[КлючИЗначение.Ключ]),
										ПредставлениеЗначения(РеквизитыДокумента[КлючИЗначение.Ключ]));
			
			ЗарегистрироватьПроблему(
					ТекстПроблемы, 
					ИсходныеЗначения.Организация, 
					ВнеоборотныйАктив, 
					Перечисления.ВажностьПроблемыУчета.Ошибка, 
					ПараметрыОбработчика.Проверки[ПараметрыДокумента.ИмяПроверки]);
					
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

Функция ДоступныеРеквизитыДокумента(СтруктураВсехРеквизитов, ПараметрыРеквизитовОбъекта)

	ДоступныеРеквизиты = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураВсехРеквизитов);
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		Если ПараметрыРеквизита.Свойство = "Видимость"
			И ПараметрыРеквизита.Значение = Ложь
			И ПараметрыРеквизита.ИмяРеквизита <> "" Тогда
			ДоступныеРеквизиты.Удалить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДоступныеРеквизиты;

КонецФункции
 
Функция ПредставлениеЗначения(Значение)

	Возврат ?(ЗначениеЗаполнено(Значение), Значение, НСтр("ru = '<не заполнено>';
															|en = '<not filled in>'"));

КонецФункции

Функция ПредставлениеРеквизита(ИмяРеквизита, ПредставлениеРеквизитов)

	Если ПредставлениеРеквизитов = Неопределено Тогда
		Возврат ИмяРеквизита;
	КонецЕсли;

	Синоним = ПредставлениеРеквизитов.Получить(ИмяРеквизита);
	
	Возврат ?(Синоним <> Неопределено, Синоним, ИмяРеквизита);
	
КонецФункции

Процедура УдалитьПроблемыПоВнеоборотномуАктиву(Выборка, ПараметрыОбработчика, ДополнениеПроверки = "")

	Если ПараметрыОбработчика.РежимПереносаДанных = "Исправить" Тогда
		
		ПараметрыДокумента = ПараметрыДокумента(Выборка.ХозяйственнаяОперация);
		
		Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровОС
			И ДополнениеПроверки <> "" Тогда
			ИмяПроверки = "ПереносПараметровУчетаОС";
		ИначеЕсли Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровНМА
			И ДополнениеПроверки <> "" Тогда
			ИмяПроверки = "ПереносПараметровУчетаНМА";
		Иначе
			ИмяПроверки = ПараметрыДокумента.ИмяПроверки;
		КонецЕсли; 
		
		Проверка = ПараметрыОбработчика.Проверки[ИмяПроверки + ?(ДополнениеПроверки <> "", "_" + ДополнениеПроверки, "")];
		
		Объект = Выборка[ПараметрыДокумента.ИмяРеквизитаТЧ];
		
		НаборЗаписей = РегистрыСведений.ОбъектыПроблемСостоянияСистемы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Проверка.Установить(Проверка);
		НаборЗаписей.Отбор.Объект.Установить(Объект);
		НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
		НаборЗаписей.Записать();
		
	КонецЕсли; 
	
КонецПроцедуры
 
#КонецОбласти

#Область РегистрацияПроблем

Процедура ЗарегистрироватьПроблемыПриЗаписиДокумента(ДокументОбъект, ИзмененныеСтроки, ТекстОшибкиЗаписи, ПараметрыОбработчика)

	ХозяйственнаяОперация = ХозяйственнаяОперацияДокумента(ДокументОбъект);
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
		
		ТекстПроблемы = НСтр("ru = 'Не перенесены вложения во внеоборотный актив по причине:
                              |%1
                              |
                              |Необходимо воспользоваться помощником в режиме ""Исправить ошибки"".';
                              |en = 'Investments in capital assets are not moved due to:
                              |%1
                              |
                              |Use the wizard in the Correct errors mode.'");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
		
		ТекстПроблемы = НСтр("ru = 'Не изменены остатки по регистру Активы и пассивы по причине:
                              |%1
                              |
                              |Необходимо воспользоваться помощником в режиме ""Исправить ошибки"".';
                              |en = 'Balance in the ""Assets and liabilities"" register is not changed due to:
                              |%1
                              |
                              |Use the wizard in the ""Correct errors"" mode.'");
		
	Иначе	
		ТекстПроблемы = НСтр("ru = 'Не перенесены параметры учета по причине:
                              |%1
                              |
                              |Необходимо воспользоваться помощником в режиме ""Исправить ошибки"".';
                              |en = 'Accounting parameters are not transferred due to:
                              |%1
                              |
                              |Use the wizard in the ""Correct errors"" mode.'");
	КонецЕсли; 
	
	ТекстПроблемы = СтрШаблон(ТекстПроблемы, ТекстОшибкиЗаписи);
	
	ПараметрыДокумента = ПараметрыДокумента(ХозяйственнаяОперация);
	
	Для каждого ДанныеСтроки Из ИзмененныеСтроки Цикл
		
		ЗарегистрироватьПроблему(
			ТекстПроблемы,
			ДокументОбъект.Организация,
			ДанныеСтроки[ПараметрыДокумента.ИмяРеквизитаТЧ],
			Перечисления.ВажностьПроблемыУчета.Ошибка,
			ПараметрыОбработчика.Проверки[ПараметрыДокумента.ИмяПроверки]);
			
	КонецЦикла; 
	
КонецПроцедуры

Процедура ЗарегистрироватьПроблему(ТекстПроблемы, Организация, Объект, Важность, Проверка)

	ГруппаПроблем = НСтр("ru = 'При выполнении операции были диагностированы предупреждения';
						|en = 'Warnings were found while executing the operation'");

	ОписаниеПроблемы = АудитСостоянияСистемы.СформироватьОписаниеПроблемы(
		ГруппаПроблем,
		Важность,
		ТекстПроблемы,
		Объект);
		
	УстановитьПривилегированныйРежим(Истина);
	
	АудитСостоянияСистемы.ЗарегистрироватьПроблему(
		Проверка,
		Организация,
		'000101010000',
		ОписаниеПроблемы);
		
	УстановитьПривилегированныйРежим(Ложь);
		
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ПараметрыОбработчика(Параметры, АдресХранилища)

	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ДатаНачалаУчета", Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить());
	
	ПараметрыОбработчика.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
	ПараметрыОбработчика.Вставить("РежимПереносаДанных", Параметры.РежимПереносаДанных);
	ПараметрыОбработчика.Вставить("АдресХранилища", АдресХранилища);
	
	ДобавитьРезультатыПереносаДанныхВПараметрыОбработчика(ПараметрыОбработчика);
	ДобавитьСостояниеЭтаповВПараметрыОбработчика(ПараметрыОбработчика);
	ДобавитьПроверкиВПараметрыОбработчика(ПараметрыОбработчика);
	
	// Временные таблицы, которые должны существовать до окончания переноса данных
	ПараметрыОбработчика.Вставить("ИспользуемыеВременныеТаблицы", Новый Массив);
	
	ПараметрыОбработчика.Вставить("МожноИспользоватьРесурсСуммаУпр", 
		Константы.ДатаНачалаВеденияУправленческогоУчетаОрганизаций.Получить() = '000101010000');
	
	ПараметрыОбработчика.Вставить("ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете", 
		ПолучитьФункциональнуюОпцию("ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете"));
		
	ПараметрыОбработчика.Вставить("ИспользоватьРаздельныйУчетПоНалогообложению", 
		ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетПоНалогообложению"));
		
	ПараметрыОбработчика.Вставить("ВалютаУпр", Строка(Константы.ВалютаУправленческогоУчета.Получить()));
	
	// Параметры переноса данных международного учета
	ПараметрыОбработчика.Вставить("ИспользоватьДанныеМеждународногоУчета", Ложь);
	//++ НЕ УТКА
	УчетВФункциональнойВалюте = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		                           Справочники.ПланыСчетовМеждународногоУчета.Международный, "УчетВФункциональнойВалюте");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьДокументыВнеоборотныхАктивовМеждународныйУчет") 
		И УчетВФункциональнойВалюте = Перечисления.ВидыУчетаВФункциональнойВалюте.ВВалютеУпр Тогда
		ПараметрыОбработчика.Вставить("ИспользоватьДанныеМеждународногоУчета", Истина);
	КонецЕсли;
	//-- НЕ УТКА
	
	// Признак того что раньше велся управленческий учет внеоборотных активов.
	// В этом случае внеобротные активы будут приняты к учету в упр учете.
	ВедетсяУправленческийУчетВНА = ПараметрыОбработчика.ИспользоватьДанныеМеждународногоУчета
		ИЛИ ПараметрыОбработчика.ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете;
	ПараметрыОбработчика.Вставить("ВедетсяУправленческийУчетВНА", ВедетсяУправленческийУчетВНА);

	// Описание используется при создании нового справочника или документа.
	ПараметрыОбработчика.Вставить("ОписаниеНовыйСправочник",
		НСтр("ru = 'Элемент создан помощником перехода на учет внеоборотных активов версии 2.4.';
			|en = 'Item is created using the wizard of migration to capital asset accounting 2.4.'"));
		
	ПараметрыОбработчика.Вставить("ОписаниеНовыйДокумент",
		НСтр("ru = 'Документ создан помощником перехода на учет внеоборотных активов версии 2.4.';
			|en = 'Document is created using the wizard of migration to capital asset accounting 2.4.'"));
		
	ПараметрыОбработчика.Вставить("ОписаниеНовыйДокументСОшибками",
		НСтр("ru = 'Документ создан помощником перехода на учет внеоборотных активов версии 2.4.
              |Документ содержит внеоборотные активы, по которым проверка заполнения проходит не успешно.';
              |en = 'The document is created with the wizard of migration to capital asset accounting 2.4.
              |The document has capital assets for which population is not checked successfully.'"));
		
	Возврат ПараметрыОбработчика;
	
КонецФункции

Процедура ДобавитьРезультатыПереносаДанныхВПараметрыОбработчика(ПараметрыОбработчика)

	РезультатыПереносаДанных = Новый Структура;
	РезультатыПереносаДанных.Вставить("СозданоГФУ", 0);
	РезультатыПереносаДанных.Вставить("ПеренесеныПараметрыУчетаСобственныхОС", 0);
	РезультатыПереносаДанных.Вставить("ПеренесеныПараметрыУчетаПереданныхВАрендуПредметовЛизингаНаБалансе", 0);
	РезультатыПереносаДанных.Вставить("ПеренесеныПараметрыУчетаПредметовЛизингаНаБалансе", 0);
	РезультатыПереносаДанных.Вставить("ПеренесеныПараметрыУчетаПереданныхВАрендуОС", 0);
	РезультатыПереносаДанных.Вставить("ПеренесеныПараметрыУчетаНМАиРасходовНаНИОКР", 0);
	РезультатыПереносаДанных.Вставить("ПеренесеныПараметрыУчетаАрендованныхОС", 0);
	РезультатыПереносаДанных.Вставить("ПеренесеныПараметрыУчетаПредметовЛизингаЗаБалансом", 0);
	РезультатыПереносаДанных.Вставить("ПеренесеныВложенияВоВнеоборотныеАктивы", 0);
	РезультатыПереносаДанных.Вставить("СозданоВводОстатковПрочиеАктивыПассивы", 0);
	РезультатыПереносаДанных.Вставить("СозданоИзменениеПараметровОС", 0);
	РезультатыПереносаДанных.Вставить("СозданоИзменениеПараметровНМА", 0);

	РезультатыПереносаДанных.Вставить("КоличествоДанных", 0);
	
	ПараметрыОбработчика.Вставить("РезультатыПереносаДанных", РезультатыПереносаДанных);
	
КонецПроцедуры

Процедура ДобавитьПроверкиВПараметрыОбработчика(ПараметрыОбработчика)

	СписокПроверок = ИспользуемыеПроверки();
	
	ПараметрыОбработчика.Вставить("СписокПроверок", СписокПроверок);
	
	ПараметрыОбработчика.Вставить("Проверки", Новый Структура);
	Для каждого ЭлементКоллекции Из СписокПроверок Цикл
		ПараметрыОбработчика.Проверки.Вставить(ЭлементКоллекции.Представление, ЭлементКоллекции.Значение);
	КонецЦикла; 
	
	// Используется для отслеживания выполнения шагов помощника
	ПроверкаСостояниеЭтапов = АудитСостоянияСистемы.НайтиПроверкуПоКлючевымПолям(
										Документы.ВводОстатковВнеоборотныхАктивов2_4.ПустаяСсылка(),
										"СостояниеПереносаДанных");
	ПараметрыОбработчика.Проверки.Вставить("СостояниеПереносаДанных", ПроверкаСостояниеЭтапов);
	
КонецПроцедуры

Процедура ДобавитьСостояниеЭтаповВПараметрыОбработчика(ПараметрыОбработчика)

	СписокЭтапов = Новый Массив;
	СписокЭтапов.Добавить("УдалениеДанных");
	СписокЭтапов.Добавить("СозданиеГФУ");
	СписокЭтапов.Добавить("ПереносПараметровУчетаОС");
	СписокЭтапов.Добавить("ПереносПараметровУчетаАрендованныхОС");
	СписокЭтапов.Добавить("ПереносПараметровУчетаНМА");
	СписокЭтапов.Добавить("ПереносВложенийВоВнеоборотныеАктивы");
	
	СостояниеЭтапов = Новый Структура;
	Для каждого ИмяЭтапа Из СписокЭтапов Цикл
		ДобавитьЭтапПереносаДанных(ИмяЭтапа, СостояниеЭтапов);
	КонецЦикла; 
	ПараметрыОбработчика.Вставить("СостояниеЭтапов", СостояниеЭтапов);
	
	Если ПараметрыОбработчика.РежимПереносаДанных = "Продолжить"
		ИЛИ ПараметрыОбработчика.РежимПереносаДанных = "Проверить" Тогда
		
		СохраненноеСостояниеЭтапов = СостояниеЭтапов();
		Если СохраненноеСостояниеЭтапов <> Неопределено Тогда
			
			Для каждого ИмяЭтапа Из СписокЭтапов Цикл
				Если СохраненноеСостояниеЭтапов.Свойство(ИмяЭтапа) Тогда
					
					ЗаполнитьЗначенияСвойств(
						ПараметрыОбработчика.СостояниеЭтапов[ИмяЭтапа], 
						СохраненноеСостояниеЭтапов[ИмяЭтапа]);
						
					Если ПараметрыОбработчика.РежимПереносаДанных = "Проверить" Тогда
						ПараметрыОбработчика.СостояниеЭтапов[ИмяЭтапа].ПроверкаЗавершена = Ложь;
					КонецЕсли;
					
				КонецЕсли; 
			КонецЦикла; 
			
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

Процедура СохранитьСостояниеЭтапов(ПараметрыОбработчика)

	Если ПараметрыОбработчика.РежимПереносаДанных = "Исправить" Тогда
		// В этом режиме не сохраняется состояние этапов.
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		УстановитьПривилегированныйРежим(Истина);

		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ВыполнениеПроверокСостоянияСистемы");
		ЭлементБлокировки.УстановитьЗначение("Проверка", ПараметрыОбработчика.Проверки.СостояниеПереносаДанных);
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПроблемыСостоянияСистемы");
		ЭлементБлокировки.УстановитьЗначение("Проверка", ПараметрыОбработчика.Проверки.СостояниеПереносаДанных);
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ОбъектыПроблемСостоянияСистемы");
		ЭлементБлокировки.УстановитьЗначение("Проверка", ПараметрыОбработчика.Проверки.СостояниеПереносаДанных);
		
		Блокировка.Заблокировать(); 
		
		АудитСостоянияСистемы.ОчиститьРезультатыПроверок(
			ПараметрыОбработчика.Проверки.СостояниеПереносаДанных, 
			Новый Массив,
			'000101010000');
		
		ОписаниеПроблемы = АудитСостоянияСистемы.СформироватьОписаниеПроблемы(
			НСтр("ru = 'Результаты переноса данных';
				|en = 'Data transfer results'"),
			Перечисления.ВажностьПроблемыУчета.Информация,,,
			ПараметрыОбработчика.СостояниеЭтапов);
			
		АудитСостоянияСистемы.ЗарегистрироватьПроблему(
			ПараметрыОбработчика.Проверки.СостояниеПереносаДанных,
			Справочники.Организации.ПустаяСсылка(),
			'000101010000',
			ОписаниеПроблемы);
		
		УстановитьПривилегированныйРежим(Ложь);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение ТекстОшибки;
	КонецПопытки; 
	
КонецПроцедуры

Процедура СообщитьПрогресс(ИмяЭтапа, ПараметрыОбработчика)

	СостояниеЭтапа = СостояниеЭтапа(ИмяЭтапа, ПараметрыОбработчика);
	
	Если СостояниеЭтапа.ВсегоДанных <> 0 Тогда
		ТочностьПрогресса = ?(СостояниеЭтапа.ВсегоДанных > 50000, 1, 0); // Отображаем дробную часть, если данных очень много.
		Прогресс = Мин(Окр(СостояниеЭтапа.ТекущийНомерДанных / СостояниеЭтапа.ВсегоДанных * 100, ТочностьПрогресса), 100);
	Иначе
		Прогресс = 0;
	КонецЕсли;
	
	СостояниеЭтапа.Прогресс = Прогресс;
	
	ДлительныеОперации.СообщитьПрогресс(
		Прогресс,, 
		ПараметрыОбработчика.СостояниеЭтапов);
	
	СостояниеЭтапа.ТекущийНомерДанных = СостояниеЭтапа.ТекущийНомерДанных + 1;
	
КонецПроцедуры

Процедура ДобавитьЭтапПереносаДанных(ИмяЭтапа, РезультатыПереносаДанных)

	СостояниеЭтапа = Новый Структура;
	СостояниеЭтапа.Вставить("Прогресс", Неопределено);
	СостояниеЭтапа.Вставить("ПереносЗавершен", Неопределено);
	СостояниеЭтапа.Вставить("ПроверкаЗавершена", Ложь);
	СостояниеЭтапа.Вставить("ВсегоДанных", 0);
	СостояниеЭтапа.Вставить("ТекущийНомерДанных", 0);
	
	РезультатыПереносаДанных.Вставить(ИмяЭтапа, СостояниеЭтапа);
	
КонецПроцедуры
 
Функция НовыйЗапрос(ПараметрыОбработчика, ТекстЗапроса = Неопределено)
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыОбработчика.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Период", ПараметрыОбработчика.ДатаНачалаУчета - 1);
	Запрос.УстановитьПараметр("ПериодНачалоДня", НачалоДня(ПараметрыОбработчика.ДатаНачалаУчета - 1));
	Запрос.УстановитьПараметр("ПериодНачалоМесяца", НачалоМесяца(ПараметрыОбработчика.ДатаНачалаУчета - 1));
	Запрос.УстановитьПараметр("ПериодГраница", Новый Граница(ПараметрыОбработчика.ДатаНачалаУчета - 1, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ОписаниеНовыйСправочник", ПараметрыОбработчика.ОписаниеНовыйСправочник);
	Запрос.УстановитьПараметр("ОписаниеНовыйДокумент", ПараметрыОбработчика.ОписаниеНовыйДокумент);
	Запрос.УстановитьПараметр("МожноИспользоватьРесурсСуммаУпр", ПараметрыОбработчика.МожноИспользоватьРесурсСуммаУпр);
	Запрос.УстановитьПараметр("ИспользоватьДанныеМеждународногоУчета", ПараметрыОбработчика.ИспользоватьДанныеМеждународногоУчета);
	Запрос.УстановитьПараметр("ВедетсяУправленческийУчетВНА", ПараметрыОбработчика.ВедетсяУправленческийУчетВНА);
	Запрос.УстановитьПараметр("РежимПереносаДанных", ПараметрыОбработчика.РежимПереносаДанных);
	Запрос.УстановитьПараметр("СписокПроверок", ПараметрыОбработчика.СписокПроверок);
	Запрос.УстановитьПараметр("ВалютаУпр", ПараметрыОбработчика.ВалютаУпр);
	Запрос.УстановитьПараметр("ДатаНачалаУчета", ПараметрыОбработчика.ДатаНачалаУчета);
	
	ПустойДоговор = Новый Массив;
	ПустойДоговор.Добавить(Неопределено);	
	ПустойДоговор.Добавить(Справочники.ДоговорыАренды.ПустаяСсылка());
	ПустойДоговор.Добавить(Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойДоговор", ПустойДоговор);
	
	Запрос.УстановитьПараметр("ПустыеСпособыОтраженияРасходов", ВнеоборотныеАктивы.ПустыеСпособыОтраженияРасходов());
	
	// Не следует изменять комментарий, т.к. он используется для поиска документов.
	Запрос.УстановитьПараметр("КомментарийВложения", 
		НСтр("ru = 'Документ создан помощником перехода на учет внеоборотных активов версии 2.4.
              |Содержит суммы вложений во внеоборотный актив на момент перехода.
              |До завершения перехода изменять комментарий не допускается.';
              |en = 'Document is created using the wizard of migration to capital assets accounting 2.4.
              |It contains amounts of investments to capital asset at the moment of migration.
              |Cannot change the comment before migration is finished.'"));
	
	Запрос.УстановитьПараметр("КомментарийОбнулениеРегистраПрочиеРасходы", 
		ВнеоборотныеАктивыЛокализация.КомментарийОбнулениеРегистраПрочиеРасходы());
	
	Запрос.УстановитьПараметр("КомментарийОбнулениеРегистраПрочиеАктивыПассивы", 
		НСтр("ru = 'Документ создан помощником перехода на учет внеоборотных активов версии 2.4.
              |Используется для корректировки остатка регистра ""Активы и пассивы"" на момент перехода.
              |До завершения перехода изменять комментарий не допускается.';
              |en = 'Document is created using the wizard of migration to capital asset accounting 2.4.
              |It is used to adjust the ""Assets and liabilities"" register balance at the moment of migration.
              |Cannot change the comment before the migration is finished.'"));
	
	Возврат Запрос;

КонецФункции

Функция ДобавитьОписаниеНовойПроверки(Наименование, Идентификатор, ДетализацияДоОрганизации, ТаблицаПроверок) 
	
	ОписаниеПроверки = ТаблицаПроверок.Добавить();
	
	ОписаниеПроверки.ИдентификаторРодителя = "ПереходНаУчетВнеоборотныхАктивовВерсии24";
	
	ОписаниеПроверки.Наименование       = Наименование;
	ОписаниеПроверки.Идентификатор      = Идентификатор;
	
	// У проверок свой контекст выполнения, не привязанный к закрытию месяца.
	ОписаниеПроверки.КонтекстПроверокВеденияУчета = Документы.ВводОстатковВнеоборотныхАктивов2_4.ПустаяСсылка();
		
	ОписаниеПроверки.ВыполняетсяТолькоВКонтексте = Истина;
	ОписаниеПроверки.ВозможноИзменениеВажности   = Ложь;
	
	ОписаниеПроверки.ДетализацияДоОрганизации = ДетализацияДоОрганизации;
	ОписаниеПроверки.ДетализацияДоПериода     = Ложь;
	ОписаниеПроверки.Использование             = Ложь;
	
	ОписаниеПроверки.ВажностьПроблемы = Перечисления.ВажностьПроблемыУчета.Ошибка;
	
	Возврат ОписаниеПроверки;
	
КонецФункции

Процедура ЗафиксироватьНачалоВыполненияЭтапа(ИмяЭтапа, ВсегоДанных, ПараметрыОбработчика)

	СостояниеЭтапа = СостояниеЭтапа(ИмяЭтапа, ПараметрыОбработчика);
	
	СостояниеЭтапа.Прогресс = 0;
	
	Если ПараметрыОбработчика.РежимПереносаДанных <> "Проверить" Тогда
		СостояниеЭтапа.ПереносЗавершен = Ложь;
	КонецЕсли; 
	СостояниеЭтапа.ПроверкаЗавершена = Ложь;
	
	СостояниеЭтапа.ТекущийНомерДанных = 1;
	СостояниеЭтапа.ВсегоДанных = ВсегоДанных;
	
	ПараметрыОбработчика.РезультатыПереносаДанных.КоличествоДанных =
		ПараметрыОбработчика.РезультатыПереносаДанных.КоличествоДанных + ВсегоДанных;
		
	ДлительныеОперации.СообщитьПрогресс(0,, ПараметрыОбработчика.СостояниеЭтапов);
	
КонецПроцедуры
 
Процедура ЗафиксироватьОкончаниеВыполненияЭтапа(ИмяЭтапа, ПараметрыОбработчика)

	СостояниеЭтапа = СостояниеЭтапа(ИмяЭтапа, ПараметрыОбработчика);
	СостояниеЭтапа.Прогресс = Неопределено;
	
	Если ПараметрыОбработчика.РежимПереносаДанных <> "Проверить" Тогда
		СостояниеЭтапа.ПереносЗавершен = Истина;
	КонецЕсли; 
	СостояниеЭтапа.ПроверкаЗавершена = Истина;
	
	СохранитьСостояниеЭтапов(ПараметрыОбработчика);
	
	ДлительныеОперации.СообщитьПрогресс(
		100,, 
		ПараметрыОбработчика.СостояниеЭтапов);
	
КонецПроцедуры

Функция ПараметрыДокумента(ХозяйственнаяОперация)

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе 
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровОС Тогда
		
		ИмяТЧ = "ОС";
		ИмяРеквизитаТЧ = "ОсновноеСредство";
							
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		
		ИмяТЧ = "АрендованныеОС";
		ИмяРеквизитаТЧ = "ОсновноеСредство";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
		
		ИмяТЧ = "ПрочиеРасходы";
		ИмяРеквизитаТЧ = "ВнеоборотныйАктив";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровНМА Тогда
		
		ИмяТЧ = "НМА";
		ИмяРеквизитаТЧ = "НематериальныйАктив";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
		
		ИмяТЧ = "ПрочиеАктивыПассивы";
		ИмяРеквизитаТЧ = "Аналитика";
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Недопустимая хозяйственная операция';
								|en = 'Invalid business transaction'") + " " + Строка(ХозяйственнаяОперация);
		
	КонецЕсли;

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе 
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС Тогда
		
		КлючевыеРеквизиты = 
			"ХозяйственнаяОперация,Организация,
			|Местонахождение,Контрагент,РасчетыМеждуОрганизациямиАрендатор,
			|ОтражатьВРеглУчете,ОтражатьВУпрУчете,ОтражатьВОперативномУчете,ОтражатьВБУиНУ,ОтражатьВУУ";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		
		КлючевыеРеквизиты = 
			"ХозяйственнаяОперация,Организация,
			|Контрагент,Местонахождение,ГруппаФинансовогоУчета,
			|ОтражатьВРеглУчете,ОтражатьВУпрУчете,ОтражатьВОперативномУчете,ОтражатьВБУиНУ,ОтражатьВУУ";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР Тогда
		
		КлючевыеРеквизиты = 
			"ХозяйственнаяОперация,Организация,
			|Местонахождение,ОтражатьВРеглУчете,ОтражатьВУпрУчете,ОтражатьВОперативномУчете,ОтражатьВБУиНУ,ОтражатьВУУ";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
		
		КлючевыеРеквизиты = 
			"ХозяйственнаяОперация,Организация,
			|ОтражатьВОперативномУчете,ОтражатьВБУиНУ,ОтражатьВУУ,
			|ВидАктивов,Комментарий";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровОС
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровНМА Тогда
		
		КлючевыеРеквизиты = 
			"Организация,
			|ОтражатьВРеглУчете,ОтражатьВУпрУчете,
			|ДокументОснование";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
		
		КлючевыеРеквизиты = 
			"ХозяйственнаяОперация,Организация,Подразделение,
			|ОтражатьВОперативномУчете,
			|Комментарий";
		
	КонецЕсли;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровОС Тогда
		ИмяДокумента = "ИзменениеПараметровОС2_4";
		МаксимальноеКоличествоСтрок = 99999;
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровНМА Тогда
		ИмяДокумента = "ИзменениеПараметровНМА2_4";
		МаксимальноеКоличествоСтрок = 99999;
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
		ИмяДокумента = "ВводОстатковВнеоборотныхАктивов2_4";
		МаксимальноеКоличествоСтрок = 99999;
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
		ИмяДокумента = "ВводОстатковПрочихАктивовПассивов";
		МаксимальноеКоличествоСтрок = 99999;
	Иначе
		ИмяДокумента = "ВводОстатковВнеоборотныхАктивов2_4";
		МаксимальноеКоличествоСтрок = 100;
	КонецЕсли; 
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе 
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС Тогда
		ИмяПроверки = "ПереносПараметровУчетаОС";
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		ИмяПроверки = "ПереносПараметровУчетаАрендованныхОС";
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР Тогда
		ИмяПроверки = "ПереносПараметровУчетаНМА";
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
		ИмяПроверки = "ПереносВложенийВоВнеоборотныеАктивы";
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПрочихАктивовПассивов Тогда
		ИмяПроверки = "КорректировкаОстаткаПрочиеАктивы";
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровОС Тогда
		ИмяПроверки = "ПереносПараметровУчетаОС_ИзменениеПараметров";
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровНМА Тогда
		ИмяПроверки = "ПереносПараметровУчетаНМА_ИзменениеПараметров";
	Иначе
		ИмяПроверки = Неопределено;
	КонецЕсли; 
	
	Результат = Новый Структура;
	Результат.Вставить("ИмяДокумента", ИмяДокумента);
	Результат.Вставить("ИмяТЧ", ИмяТЧ);
	Результат.Вставить("ИмяРеквизитаТЧ", ИмяРеквизитаТЧ);
	Результат.Вставить("КлючевыеРеквизиты", КлючевыеРеквизиты);
	Результат.Вставить("МаксимальноеКоличествоСтрок", МаксимальноеКоличествоСтрок);
	Результат.Вставить("ИмяПроверки", ИмяПроверки);
	
	Возврат Результат;
	
КонецФункции

Функция ТребуетсяВыполнитьЭтап(ИмяЭтапа, ПараметрыОбработчика)

	Если ПараметрыОбработчика.РежимПереносаДанных = "Продолжить" Тогда
		
		СостояниеЭтапа = СостояниеЭтапа(ИмяЭтапа, ПараметрыОбработчика);
		Возврат СостояниеЭтапа.Прогресс <> 100;
		
	КонецЕсли; 

	Возврат Истина;
	
КонецФункции

Функция СостояниеЭтапа(ИмяЭтапа, ПараметрыОбработчика)

	Если ИмяЭтапа = "ПереносПараметровУчетаОС_ИзменениеПараметров" Тогда
		СостояниеЭтапа = ПараметрыОбработчика.СостояниеЭтапов.ПереносПараметровУчетаОС;
	ИначеЕсли ИмяЭтапа = "ПереносПараметровУчетаНМА_ИзменениеПараметров" Тогда
		СостояниеЭтапа = ПараметрыОбработчика.СостояниеЭтапов.ПереносПараметровУчетаНМА;
	ИначеЕсли ИмяЭтапа = "КорректировкаОстаткаПрочиеАктивы" Тогда
		СостояниеЭтапа = ПараметрыОбработчика.СостояниеЭтапов.ПереносВложенийВоВнеоборотныеАктивы;
	Иначе
		СостояниеЭтапа = ПараметрыОбработчика.СостояниеЭтапов[ИмяЭтапа];
	КонецЕсли; 

	Возврат СостояниеЭтапа;
	
КонецФункции
 
#КонецОбласти

#КонецОбласти

#КонецЕсли