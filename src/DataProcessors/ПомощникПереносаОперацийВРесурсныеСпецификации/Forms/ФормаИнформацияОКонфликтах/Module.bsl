
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	АдресДанныеОКонфликтах = Параметры.АдресДанныеОКонфликтах;
	
	ИнициализироватьКомпоновщик();
	
	СформироватьНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(АдресДанныеРасшифровки,
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемаКомпоновки));
	
	ДоступныеДействия = Новый Массив;
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("РезультатОбработкаРасшифровкиЗавершение",
		ЭтотОбъект,
		Новый Структура("ПараметрВыполненногоДействия"));
		
	ОбработкаРасшифровки.ПоказатьВыборДействия(ОписаниеОповещения,
		Расшифровка,
		ДоступныеДействия,,
		Истина,);
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровкиЗавершение(ВыполненноеДействие, ПараметрВыполненногоДействия, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрВыполненногоДействия) Тогда
	
		ПоказатьЗначение(, ПараметрВыполненногоДействия);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	СформироватьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	
	Результат.Очистить();
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных();
		
	КомпоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновкиДанных = КомпоновщикМакетаКомпоновкиДанных.Выполнить(
		ПолучитьИзВременногоХранилища(АдресСхемаКомпоновки),
		КомпоновщикНастроек.ПолучитьНастройки(),
		ДанныеРасшифровки);
		
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(
		МакетКомпоновкиДанных,
		Новый Структура("НаборДанных", ПолучитьИзВременногоХранилища(АдресДанныеОКонфликтах)),
		ДанныеРасшифровки);
		
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ПроцессорВывода.УстановитьДокумент(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	АдресДанныеРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровки, УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьКомпоновщик()
	
	СхемаКомпоновки = Обработки.ПомощникПереносаОперацийВРесурсныеСпецификации.ПолучитьМакет("МакетКомпоновкиИнформацияОКонфликтах");
	АдресСхемаКомпоновки = ПоместитьВоВременноеХранилище(СхемаКомпоновки, УникальныйИдентификатор);
	
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемаКомпоновки));
	
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновки.НастройкиПоУмолчанию);
	
	КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	
КонецПроцедуры

#КонецОбласти