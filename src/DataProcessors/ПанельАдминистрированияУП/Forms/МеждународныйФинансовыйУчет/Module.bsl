#Область ОписаниеПеременных

&НаКлиенте
Перем ОбновитьИнтерфейс;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Значения реквизитов формы
	СоставНабораКонстантФормы    = ОбщегоНазначенияУТ.ПолучитьСтруктуруНабораКонстант(НаборКонстант);
	
	ВнешниеРодительскиеКонстанты = НастройкиСистемыПовтИсп.ПолучитьСтруктуруРодительскихКонстант(СоставНабораКонстантФормы);
	ВнешниеРодительскиеКонстанты.Вставить("ИспользоватьСделкиСКлиентами");
	ВнешниеРодительскиеКонстанты.Вставить("ВестиУУНаПланеСчетовХозрасчетный");
	
	РежимРаботы = Новый Структура;
	РежимРаботы.Вставить("СоставНабораКонстантФормы",    Новый ФиксированнаяСтруктура(СоставНабораКонстантФормы));
	РежимРаботы.Вставить("ВнешниеРодительскиеКонстанты", Новый ФиксированнаяСтруктура(ВнешниеРодительскиеКонстанты));
	РежимРаботы.Вставить("БазоваяВерсия", 				 ПолучитьФункциональнуюОпцию("БазоваяВерсия"));
	
	РежимРаботы = Новый ФиксированнаяСтруктура(РежимРаботы);
	
	// Настройки видимости при запуске
	НастройкиСистемыЛокализация.УстановитьВидимостьЭлементовЛокализации(ЭтотОбъект);
	НастройкиСистемыЛокализация.ПриСозданииНаСервере_МеждународныйФинансовыйУчет(ЭтотОбъект);
	
	// Обновление состояния элементов
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	ОбновитьИнтерфейсПрограммы();
КонецПроцедуры

&НаКлиенте
// Обработчик оповещения формы.
//
// Параметры:
//	ИмяСобытия - Строка - обрабатывается только событие Запись_НаборКонстант, генерируемое панелями администрирования.
//	Параметр   - Структура - содержит имена констант, подчиненных измененной константе, "вызвавшей" оповещение.
//	Источник   - Строка - имя измененной константы, "вызвавшей" оповещение.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" Тогда
		// Если это изменена константа, расположенная в другой форме и влияющая на значения констант этой формы,
		// то прочитаем значения констант и обновим элементы этой формы.
		Если РежимРаботы.ВнешниеРодительскиеКонстанты.Свойство(Источник)
		 ИЛИ (ТипЗнч(Параметр) = Тип("Структура")
		 		И ОбщегоНазначенияУТКлиентСервер.ПолучитьОбщиеКлючиСтруктур(
		 			Параметр, РежимРаботы.ВнешниеРодительскиеКонстанты).Количество() > 0) Тогда
			
			ЭтаФорма.Прочитать();
			УстановитьДоступность();
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_ПланыСчетовМеждународногоУчета" Тогда
		УстановитьСвойстваЭлементовНеобходимаНастройкаВалютУчета();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьМеждународныйФинансовыйУчетПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ФормироватьПроводкиМеждународногоУчетаПоДаннымОперативногоПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантНастройкиПроводокПоОбъектамУчетаПриИзменении(Элемент)
	ВариантНастройкиПроводокСервер()
КонецПроцедуры

&НаКлиенте
Процедура ВариантНастройкиПроводокПоХозяйственнымОперациямПриИзменении(Элемент)
	ВариантНастройкиПроводокСервер()
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииРеквизита(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьНесколькоПлановСчетовВМеждународномУчетеПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОтражатьВМеждународномУчетеТолькоПроверенныеДокументыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы


&НаКлиенте
Процедура ВыгрузитьМодельУчета(Команда)
	
	ОткрытьФорму("Обработка.ПомощникВыгрузкиЗагрузкиМоделиМеждународногоУчета.Форма.Выгрузка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьМодельУчета(Команда)
	
	ОткрытьФорму("Обработка.ПомощникВыгрузкиЗагрузкиМоделиМеждународногоУчета.Форма.Загрузка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПланыСчетов(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПланыСчетовЗакрытие", ЭтотОбъект);
	ОткрытьФорму("Справочник.ПланыСчетовМеждународногоУчета.Форма.ФормаСписка", 
		, ЭтотОбъект, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыСчетовЗакрытие(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	УстановитьДоступность("НаборКонстант.ИспользоватьНесколькоПлановСчетовВМеждународномУчете");
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПредопределенныйПланСчетов(Команда)
	
	ОткрытьФорму("Справочник.ПланыСчетовМеждународногоУчета.Форма.ФормаНастройкиПредопределенногоЭлемента",,ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 2, Истина);
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВызовСервера

&НаСервере
Процедура ВариантНастройкиПроводокСервер()
	
	Если ВариантНастройкиПроводокПоДаннымОперативногоУчета = 1 Тогда
		НаборКонстант.НастройкаПроводокПоОбъектамУчета = Истина;
		НаборКонстант.НастройкаПроводокПоХозяйственнымОперациям = Ложь;
	Иначе
		НаборКонстант.НастройкаПроводокПоОбъектамУчета = Ложь;
		НаборКонстант.НастройкаПроводокПоХозяйственнымОперациям = Истина;
	КонецЕсли;
	
	ПриИзмененииРеквизитаСервер(Элементы.НастройкаПроводокПоОбъектамУчета.Имя);
	ПриИзмененииРеквизитаСервер(Элементы.НастройкаПроводокПоХозяйственнымОперациям.Имя);
	
КонецПроцедуры

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

#КонецОбласти

#Область Сервер

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат "";
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если СтрНачинаетсяС(НРег(РеквизитПутьКДанным), НРег("НаборКонстант.")) Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		ЧастиИмени = СтрРазделить(РеквизитПутьКДанным, ".");
		КонстантаИмя = ЧастиИмени[1];
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
		Если НастройкиСистемыПовтИсп.ЕстьПодчиненныеКонстанты(КонстантаИмя, КонстантаЗначение) Тогда
			ЭтаФорма.Прочитать();
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КонстантаИмя
	
КонецФункции

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьМеждународныйФинансовыйУчет"
		ИЛИ РеквизитПутьКДанным = "" Тогда
		ЗначениеКонстанты = НаборКонстант.ИспользоватьМеждународныйФинансовыйУчет;
		Элементы.ИспользоватьНесколькоПлановСчетовВМеждународномУчете.Доступность = ЗначениеКонстанты;
		Элементы.ПроводкиМеждународногоУчетаПоДаннымОперативного.Доступность = ЗначениеКонстанты;
		Элементы.ЗагрузитьМодельУчета.Доступность = ЗначениеКонстанты;
		Элементы.ВыгрузитьМодельУчетаВФайл.Доступность = ЗначениеКонстанты;
		
		УстановитьСвойстваЭлементовНеобходимаНастройкаВалютУчета();
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьМеждународныйФинансовыйУчет"
		ИЛИ РеквизитПутьКДанным = "НаборКонстант.ПроводкиМеждународногоУчетаПоДаннымОперативного"
		ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ПартионныйУчет22 = РасчетСебестоимостиПовтИсп.ПартионныйУчетВерсии22();
		Производство22 = Константы.ИспользоватьУправлениеПроизводством2_2.Получить();
		ОнлайнРасчеты = Константы.НоваяАрхитектураВзаиморасчетов.Получить();
		УчетВНА24 = ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА()
			И ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4();
		
		ЗначениеКонстанты = НаборКонстант.ПроводкиМеждународногоУчетаПоДаннымОперативного;
		
		Элементы.ВариантНастройкиПроводокПоОбъектамУчета.Доступность = ЗначениеКонстанты
			И ПартионныйУчет22 И Производство22 И ОнлайнРасчеты И УчетВНА24;
		
		Элементы.ГруппаКомментарийНастройкаПоОбъектамУчетаПартионныйУчет.Видимость = ЗначениеКонстанты И НЕ ПартионныйУчет22;
		Элементы.ГруппаКомментарийНастройкаПоОбъектамУчетаПроизводство.Видимость = ЗначениеКонстанты И НЕ Производство22;
		Элементы.ГруппаКомментарийНастройкаПоОбъектамУчетаВзаиморасчеты.Видимость = ЗначениеКонстанты И НЕ ОнлайнРасчеты;
		Элементы.ГруппаКомментарийНастройкаПоОбъектамУчетаВНА.Видимость = ЗначениеКонстанты И НЕ УчетВНА24;
		
		Если РеквизитПутьКДанным = "" Тогда
			Элементы.ВариантНастройкиПроводокПоХозяйственнымОперациям.Видимость = Истина
				ИЛИ ЕстьШаблоныПроводок() ИЛИ НаборКонстант.НастройкаПроводокПоХозяйственнымОперациям
				ИЛИ НЕ (ПартионныйУчет22 И Производство22 И ОнлайнРасчеты И УчетВНА24);
		КонецЕсли;
		
		Если Элементы.ВариантНастройкиПроводокПоХозяйственнымОперациям.Видимость Тогда
			Элементы.ВариантНастройкиПроводокПоХозяйственнымОперациям.Доступность = ЗначениеКонстанты;
		КонецЕсли;
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ПроводкиМеждународногоУчетаПоДаннымОперативного"
		ИЛИ РеквизитПутьКДанным = "НаборКонстант.НастройкаПроводокПоХозяйственнымОперациям"
		ИЛИ РеквизитПутьКДанным = "НаборКонстант.НастройкаПроводокПоОбъектамУчета"
		ИЛИ РеквизитПутьКДанным = "" Тогда
		
		Если НаборКонстант.НастройкаПроводокПоХозяйственнымОперациям Тогда
			ВариантНастройкиПроводокПоДаннымОперативногоУчета = 2;
		Иначе
			ВариантНастройкиПроводокПоДаннымОперативногоУчета = 1;
		КонецЕсли;
		
	КонецЕсли;
	
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьНесколькоПлановСчетовВМеждународномУчете"
		ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ЗначениеКонстанты = НаборКонстант.ИспользоватьНесколькоПлановСчетовВМеждународномУчете;
		ИспользуетсяВНА22 = ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА()
							И НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4();
		
		Элементы.ОткрытьПланыСчетов.Доступность = ЗначениеКонстанты;
		
		ТекстОграничения = "";
		ДоступностьОпции = Истина;
		Если ИспользуетсяВНА22 Тогда
			ТекстОграничения =  НСтр("ru = 'Отражение операций на нескольких плана счетов невозможно при
									|использовании варианта ведения учета внеоборотных активов 2.2.';
									|en = 'Recording of transaction on several charts of accounts is not available when 
									|using the fixed assets accounting option 2.2.'");
									
			ДоступностьОпции = Ложь;
		ИначеЕсли Не ЗначениеЗаполнено(Справочники.ПланыСчетовМеждународногоУчета.ПланСчетовПоУмолчанию()) Тогда 
			ТекстОграничения = НСтр("ru = 'Добавлено несколько планов счетов международного учета. Отключение опции невозможно.';
									|en = 'Added several charts of accounts for financial accounting. This option cannot be disabled.'");
			ДоступностьОпции = Ложь;
		КонецЕсли;
		
		Элементы.ИспользоватьНесколькоПлановСчетовВМеждународномУчете.Доступность = ДоступностьОпции;
		Элементы.ГруппаКомментарийИспользоватьНесколькоПлановСчетовВМеждународномУчете.Видимость = НЕ ДоступностьОпции;
		
		Элементы.КомментарийИспользоватьНесколькоПлановСчетовВМеждународномУчете.Заголовок = СокрЛП(ТекстОграничения);
		
		Если ЗначениеКонстанты Тогда
			Элементы.ГруппаСтраницыНесколькоПлановСчетов.ТекущаяСтраница = Элементы.ГруппаПланыСчетовГоризонтальная;
		Иначе
			Элементы.ГруппаСтраницыНесколькоПлановСчетов.ТекущаяСтраница = Элементы.ГруппаОдинПланСчетов;
		КонецЕсли;

	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьПроверкуФинансовыхДокументов" 
		ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ИспользоватьПроверкуДокументов = Константы.ИспользоватьПроверкуФинансовыхДокументов.Получить();
		
		Элементы.ОтражатьВМеждународномУчетеТолькоПроверенныеДокументы.Доступность = ИспользоватьПроверкуДокументов;
		Элементы.ГруппаКомментарийОтражатьВУчетеТолькоПроверенныеДокументы.Видимость = НЕ ИспользоватьПроверкуДокументов;
		
	КонецЕсли;
	
	НастройкиСистемыЛокализация.УстановитьДоступность_МеждународныйФинансовыйУчет(РеквизитПутьКДанным, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция ЕстьШаблоныПроводок()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ШаблоныПроводокДляМеждународногоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ШаблоныПроводокДляМеждународногоУчета КАК ШаблоныПроводокДляМеждународногоУчета
	|ГДЕ
	|	НЕ ШаблоныПроводокДляМеждународногоУчета.ПометкаУдаления";
	
	Если НЕ Запрос.Выполнить().Пустой() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура УстановитьСвойстваЭлементовНеобходимаНастройкаВалютУчета()
	
	НеобходимаНастройкаВалютУчета = Ложь;
	
	Если НаборКонстант.ИспользоватьМеждународныйФинансовыйУчет Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА
		|ИЗ
		|	Справочник.ПланыСчетовМеждународногоУчета КАК Данные
		|ГДЕ
		|	НЕ Данные.ПометкаУдаления   	
		|	И (Данные.ВалютаПредставления = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|		ИЛИ Данные.УчетВФункциональнойВалюте = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВФункциональнойВалюте.ПустаяСсылка))
		|";
		НеобходимаНастройкаВалютУчета = НЕ Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Элементы.КартинкаПланСчетовНеобходимоНастроитьВалютыУчета.Видимость = НеобходимаНастройкаВалютУчета;
	Элементы.КартинкаПланыСчетовНеобходимоНастроитьВалютыУчета.Видимость = НеобходимаНастройкаВалютУчета;
	
	Элементы.ОткрытьПланыСчетов.ЦветТекста = ?(НеобходимаНастройкаВалютУчета, ЦветаСтиля.ПросроченныеДанныеЦвет, ЦветаСтиля.ГиперссылкаЦвет);
	Элементы.НастроитьПредопределенныйПланСчетов.ЦветТекста = ?(НеобходимаНастройкаВалютУчета, ЦветаСтиля.ПросроченныеДанныеЦвет, ЦветаСтиля.ГиперссылкаЦвет);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
