
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Для каждого Параметр Из Параметры.ИсключитьРеквизиты Цикл
		ЗаполнитьЗначенияСвойств(ИсключитьРеквизиты.Добавить(), Параметр);
	КонецЦикла;
	
	СформироватьДеревоПараметровНазначенияСпецификаций();
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазвернутьСтрокиДерева();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДеревоПараметровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = ДеревоПараметров.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ЗавершитьВыборПараметра(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ТекущиеДанные = Элементы.ДеревоПараметров.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ЗавершитьВыборПараметра(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьДеревоПараметровНазначенияСпецификаций()
	
	ВидыПараметров = ВидыПараметровНазначенияСпецификаций();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаборыДополнительныхРеквизитов", ВидыПараметров.ВыгрузитьКолонку("НаборДополнительныхРеквизитов"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДополнительныеРеквизиты.Ссылка             КАК НаборДополнительныхРеквизитов,
	|	ДополнительныеРеквизиты.Свойство           КАК Реквизит
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|ГДЕ
	|	ДополнительныеРеквизиты.Ссылка В(&НаборыДополнительныхРеквизитов)
	|	И НЕ ДополнительныеРеквизиты.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	НаборДополнительныхРеквизитов,
	|	ДополнительныеРеквизиты.Свойство.Представление";
	
	ДополнительныеРеквизиты = Запрос.Выполнить().Выгрузить();
	
	Дерево = РеквизитФормыВЗначение("ДеревоПараметров");
	
	Для Индекс = 0 По ВидыПараметров.Количество() - 1 Цикл
		
		Строка = ВидыПараметров[Индекс];
		
		Если ЗначениеЗаполнено(Строка.НаборДополнительныхРеквизитов) Тогда
			
			СтрокаГруппа = ДобавитьСтрокуВДеревоПараметров(Дерево, Строка.ВидПараметра,, Истина);
			
			Реквизиты = ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("НаборДополнительныхРеквизитов", Строка.НаборДополнительныхРеквизитов));
			Для каждого Реквизит Из Реквизиты Цикл
				
				ДобавитьСтрокуВДеревоПараметров(СтрокаГруппа, СтрокаГруппа.ВидПараметра, Реквизит.Реквизит);
				
			КонецЦикла;
			
			Если СтрокаГруппа.Строки.Количество() = 0 Тогда
				Дерево.Строки.Удалить(СтрокаГруппа);
			КонецЕсли;
			
		Иначе
			
			ДобавитьСтрокуВДеревоПараметров(Дерево, Строка.ВидПараметра)
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоПараметров");
	
КонецПроцедуры

&НаСервере
Функция ДобавитьСтрокуВДеревоПараметров(Дерево, ВидПараметра, Реквизит = Неопределено, ЭтоГруппа = Ложь)
	
	Если НЕ ЭтоГруппа Тогда
	
		СтруктураПоиска = Новый Структура("ВидПараметра", ВидПараметра);
		Если ЗначениеЗаполнено(Реквизит) Тогда
			СтруктураПоиска.Вставить("Реквизит", Реквизит);
		КонецЕсли;
		
		Если ИсключитьРеквизиты.НайтиСтроки(СтруктураПоиска).Количество() > 0 Тогда
			Возврат Неопределено;
		КонецЕсли;
	
	КонецЕсли;
	
	НоваяСтрока = Дерево.Строки.Добавить();
	НоваяСтрока.ВидПараметра          = ВидПараметра;
	НоваяСтрока.Реквизит              = Реквизит;
	НоваяСтрока.ЭтоГруппа             = ЭтоГруппа;
	НоваяСтрока.Картинка              = ?(ЭтоГруппа, 0, 3);
	
	Если ЭтоГруппа Тогда
		НоваяСтрока.ПараметрПредставление = Строка(ВидПараметра);
	Иначе
		НоваяСтрока.ПараметрПредставление = УправлениеДаннымиОбИзделиях.ПредставлениеПараметраНазначения(ВидПараметра, Реквизит, Ложь);
	КонецЕсли;
	
	Возврат НоваяСтрока;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВидыПараметровНазначенияСпецификаций()
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("ВидПараметра", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыПараметровНазначенияСпецификаций"));
	Результат.Колонки.Добавить("НаборДополнительныхРеквизитов", Новый ОписаниеТипов("СправочникСсылка.НаборыДополнительныхРеквизитовИСведений"));
	Результат.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число"));

	НоваяСтрока = Результат.Добавить();
	НоваяСтрока.ВидПараметра = Перечисления.ВидыПараметровНазначенияСпецификаций.ПодразделениеДиспетчер;
	НоваяСтрока.Порядок = 0;
	
	НоваяСтрока = Результат.Добавить();
	НоваяСтрока.ВидПараметра = Перечисления.ВидыПараметровНазначенияСпецификаций.ДопРеквизитПодразделения;
	НоваяСтрока.НаборДополнительныхРеквизитов = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_СтруктураПредприятия");
	НоваяСтрока.Порядок = 2;
	
	Если ПолучитьФункциональнуюОпцию("ФормироватьФинансовыйРезультат") Тогда
	
		НоваяСтрока = Результат.Добавить();
		НоваяСтрока.ВидПараметра = Перечисления.ВидыПараметровНазначенияСпецификаций.НаправлениеДеятельности;
		НоваяСтрока.Порядок = 1;
		
		НоваяСтрока = Результат.Добавить();
		НоваяСтрока.ВидПараметра = Перечисления.ВидыПараметровНазначенияСпецификаций.ДопРеквизитНаправленияДеятельности;
		НоваяСтрока.НаборДополнительныхРеквизитов = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_НаправленияДеятельности");
		НоваяСтрока.Порядок = 3;
	
	КонецЕсли;
	
	Результат.Сортировать("Порядок");
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЗавершитьВыборПараметра(ТекущиеДанные)
	
	Если НЕ ТекущиеДанные.ЭтоГруппа Тогда
		
		Результат = Новый Структура("ВидПараметра, Реквизит");
		ЗаполнитьЗначенияСвойств(Результат, ТекущиеДанные);
		
		ОповеститьОВыборе(Результат);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьСтрокиДерева()
	
	Для каждого Строка Из ДеревоПараметров.ПолучитьЭлементы() Цикл
		Элементы.ДеревоПараметров.Развернуть(Строка.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти