#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Приложение = Параметры.Приложение;
	
	НастройкиСервиса = РегистрыСведений.НастройкиСервисаПодписанияУправлениеПерсоналом.Настройки(Приложение);
	ИспользоватьУНЭПИнформационнойСистемы = НастройкиСервиса.ИспользоватьУНЭПИнформационнойСистемы;
	ИспользоватьПодписаниеВГосключ = НастройкиСервиса.ИспользоватьПодписаниеВГосключ;
	ИспользоватьПодписаниеВАстралПлатформа = НастройкиСервиса.ИспользоватьПодписаниеВАстралПлатформа;
	ОбновитьФорму(ЭтотОбъект);
	
	ОбновитьДоступностьФормы(Ложь);
	
	РазделениеВключено = ОбщегоНазначения.РазделениеВключено();
	Если РазделениеВключено Тогда
		ИнтернетПоддержкаПодключена = Истина;
	Иначе
		ИнтернетПоддержкаПодключена = ИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ИнтернетПоддержка", "Видимость", Не ИнтернетПоддержкаПодключена);
	
	Если ИнтернетПоддержкаПодключена Тогда
		НачатьПроверкуДоступностиИнтернетПоддержки(Ложь);
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаДлительнаяОперация;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриНачалеЗадания();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьПодписаниеВГосключПриИзменении(Элемент)
	
	ОбновитьФорму(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПодписаниеВАстралПлатформаПриИзменении(Элемент)
	
	ОбновитьФорму(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьДанныеСервисаПодписания(Команда)
	
	НачатьСохранениеДанных();
	ПриНачалеЗадания();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьИнтернетПоддержку(Команда)
	
	ПодключитьИнтернетПоддержкуПользователей();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СохранениеНастроек

&НаСервере
Процедура НачатьСохранениеДанных()
	
	ПараметрыЗадания = ПараметрыФоновогоЗадания();
	ПараметрыЗадания.ВыводитьОкноОжидания = Истина;
	ПараметрыЗадания.ИмяЗадания = "ОбновитьДанныеСервисаПодписания";
	ПараметрыЗадания.ИмяМетода 	= "ИнтеграцияУправлениеПерсоналомОбмен.ОбновитьДанныеСервисаПодписанияФоновоеЗадание";
	
	НастройкиСервисаПодписания = Новый Структура();
	НастройкиСервисаПодписания.Вставить("ИспользоватьУНЭПИнформационнойСистемы", 	ИспользоватьУНЭПИнформационнойСистемы);
	НастройкиСервисаПодписания.Вставить("ИспользоватьПодписаниеВГосключ", 			ИспользоватьПодписаниеВГосключ);
	НастройкиСервисаПодписания.Вставить("ИспользоватьПодписаниеВАстралПлатформа", 	ИспользоватьПодписаниеВАстралПлатформа);
	ПараметрыЗадания.ПараметрыМетода.Вставить("Настройки", НастройкиСервисаПодписания);
	
	ЗапуститьФоновоеЗадание(ПараметрыЗадания);
	
КонецПроцедуры

&НаСервере
Функция СохранениеДанныхЗавершение(АдресРезультата)

	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Результат.СообщениеОбОшибке <> Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'При сохранении данных возникла ошибка:';
								|en = 'При сохранении данных возникла ошибка:'") + Символы.ПС + Результат.СообщениеОбОшибке;
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь;
	КонецЕсли;
	
	НастройкиСервисаПодписания = Новый Структура;
	НастройкиСервисаПодписания.Вставить("Приложение", 								Приложение);
	НастройкиСервисаПодписания.Вставить("ИспользоватьПодписаниеВАстралПлатформа", 	ИспользоватьУНЭПИнформационнойСистемы);
	НастройкиСервисаПодписания.Вставить("ИспользоватьПодписаниеВГосключ", 			ИспользоватьПодписаниеВГосключ);
	НастройкиСервисаПодписания.Вставить("ИспользоватьПодписаниеВАстралПлатформа", 	ИспользоватьПодписаниеВАстралПлатформа);
	ИнтеграцияУправлениеПерсоналом.СохранитьНастройкиСервисаПодписания(Приложение, НастройкиСервисаПодписания);
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область ОбслуживаниеФоновыхЗаданий

&НаКлиенте
Процедура ПриНачалеЗадания()
	
	Если ЗначениеЗаполнено(АктивноеЗадание) Тогда
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = АктивноеЗадание.ВыводитьОкноОжидания;
		ДлительныеОперацииКлиент.ОжидатьЗавершение(
			АктивноеЗадание.ДлительнаяОперация,
			Новый ОписаниеОповещения("ПриЗавершенииЗадания", ЭтотОбъект, АктивноеЗадание.ИмяЗадания),
			ПараметрыОжидания);
		АктивноеЗадание = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗавершенииЗадания(Результат, ИмяЗадания) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ТекстСообщения = НСтр("ru = 'При выполнении фонового задания возникла ошибка:';
								|en = 'При выполнении фонового задания возникла ошибка:'") + Символы.ПС + Результат.КраткоеПредставлениеОшибки;
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
		
	Если ИмяЗадания = "ПроверкаДоступностиИнтернетПоддержки" Тогда
		ПроверкаДоступностиИнтернетПоддержкиЗавершение(Результат.АдресРезультата);
	ИначеЕсли ИмяЗадания = "ОбновитьДанныеСервисаПодписания" Тогда
		Если СохранениеДанныхЗавершение(Результат.АдресРезультата) Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗапуститьФоновоеЗадание(ПараметрыЗадания)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершения = 0;
	Результат = ДлительныеОперации.ВыполнитьВФоне(ПараметрыЗадания.ИмяМетода, ПараметрыЗадания.ПараметрыМетода, ПараметрыВыполнения);
	
	НовоеЗадание = Новый Структура("ИмяЗадания,ДлительнаяОперация,ВыводитьОкноОжидания");
	НовоеЗадание.ИмяЗадания 			= ПараметрыЗадания.ИмяЗадания;
	НовоеЗадание.ДлительнаяОперация 	= Результат;
	НовоеЗадание.ВыводитьОкноОжидания 	= ПараметрыЗадания.ВыводитьОкноОжидания;
	
	АктивноеЗадание = Новый ФиксированнаяСтруктура(НовоеЗадание);
	
КонецПроцедуры

&НаСервере
Функция ПараметрыФоновогоЗадания()

	Описание = Новый Структура("ИмяМетода,ИмяЗадания,ВыводитьОкноОжидания,ПараметрыМетода");
	Описание.ВыводитьОкноОжидания 	= Ложь;
	Описание.ПараметрыМетода 		= Новый Структура("Приложение", Приложение);
	
	Возврат Описание;

КонецФункции

#КонецОбласти

#Область ИнтернетПоддержкуПользователей

&НаКлиенте
Процедура ПодключитьИнтернетПоддержкуПользователей()

	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержкуЗавершение", ЭтотОбъект);
	ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(ОповещениеОЗакрытии, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ПодключитьИнтернетПоддержкуЗавершение(Результат, Параметры) Экспорт

	Если Результат <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ИнтернетПоддержка", "Видимость", Ложь);
		НачатьПроверкуДоступностиИнтернетПоддержки(Истина);
		ПриНачалеЗадания();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура НачатьПроверкуДоступностиИнтернетПоддержки(ВыводитьОкноОжидания)
	
	ПараметрыЗадания = ПараметрыФоновогоЗадания();
	ПараметрыЗадания.ВыводитьОкноОжидания = ВыводитьОкноОжидания;
	ПараметрыЗадания.ИмяЗадания = "ПроверкаДоступностиИнтернетПоддержки";
	ПараметрыЗадания.ИмяМетода 	= "КабинетСотрудникаМенеджерСервиса.ПроверкаДоступностиИнтернетПоддержкиФоновоеЗадание";
	
	ЗапуститьФоновоеЗадание(ПараметрыЗадания);
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаДоступностиИнтернетПоддержкиЗавершение(АдресРезультата)
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаНастройки;
	
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ИнтернетПоддержкаДоступна = Результат.ИнтернетПоддержкаДоступна;
	Если Не ИнтернетПоддержкаДоступна Тогда
		Если РазделениеВключено Тогда
			ТекстСообщения = НСтр("ru = 'Для подключения сервиса подписания требуется доступ к Интернет-поддержке.';
									|en = 'Для подключения сервиса подписания требуется доступ к Интернет-поддержке.'")
			+ Символы.ПС
			+ НСтр("ru = 'Отсутствуют права на использование Интернет-поддержки.';
					|en = 'Отсутствуют права на использование Интернет-поддержки.'")
			+ Символы.ПС
			+ НСтр("ru = 'По вопросу предоставления таких прав обратитесь к специалистам, осуществляющим обслуживание информационной базы в вашей организации.';
					|en = 'По вопросу предоставления таких прав обратитесь к специалистам, осуществляющим обслуживание информационной базы в вашей организации.'");
		Иначе
			ТекстСообщения = НСтр("ru = 'При проверки доступности Интернет-поддержки возникла ошибка:';
									|en = 'При проверки доступности Интернет-поддержки возникла ошибка:'") + Символы.ПС + Результат.СообщениеОбОшибке;
		КонецЕсли;
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	ОбновитьДоступностьФормы(ИнтернетПоддержкаДоступна);
	
КонецПроцедуры

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьФорму(УправляемаяФорма)
	
	Если Не УправляемаяФорма.ИспользоватьПодписаниеВГосключ И Не УправляемаяФорма.ИспользоватьПодписаниеВАстралПлатформа Тогда
		УправляемаяФорма.ИспользоватьУНЭПИнформационнойСистемы = Истина;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"ИспользоватьПодписаниеВАстралПлатформа",
		"Доступность",
		УправляемаяФорма.ИспользоватьПодписаниеВГосключ
			Или УправляемаяФорма.ИспользоватьПодписаниеВАстралПлатформа);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДоступностьФормы(ИнтернетПоддержкаДоступна)

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаНастройки", "Доступность", ИнтернетПоддержкаДоступна);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаОтправитьДанныеПодключения", "Доступность", ИнтернетПоддержкаДоступна);

КонецПроцедуры

#КонецОбласти