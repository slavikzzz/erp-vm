
#Область ОписаниеПеременных

&НаКлиенте
Перем ТекущаяСтрокаТипыОбъектов;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Приложение = Параметры.Приложение;
	
	Если Приложение = Перечисления.ПриложенияДляИнтеграции.УправлениеПерсоналом Тогда
		ТекстЗаголовка = НСтр("ru = 'Регистрация изменений для обмена с приложением 1С:Персонал';
								|en = 'Register changes for exchange with 1C:Human Resources'");
	Иначе
		ТекстЗаголовка = НСтр("ru = 'Регистрация изменений для выгрузки в сервис 1С:Кабинет сотрудника';
								|en = 'Register changes for export to 1C:Employee account'");
	КонецЕсли;
	Заголовок = ТекстЗаголовка;
	
	ЗаполнитьТипыОбъектовУдаляются();
	ЗаполнитьТипыОбъектов();
	ОбновитьВсеДанные();
	УстановитьУсловноеОформление();
	Элементы.ИзмененияДляОбменаВыгружатьУдаление.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеПравилВыгрузкиИнтеграцияУправлениеПерсоналом" Тогда
		ОбновитьВсеДанные();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыТипыОбъектовДляРегистрации

&НаКлиенте
Процедура ТипыОбъектовДляРегистрацииПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ТипыОбъектовДляРегистрации.ТекущаяСтрока <> ТекущаяСтрокаТипыОбъектов Тогда
		ТекущаяСтрокаТипыОбъектов = Элементы.ТипыОбъектовДляРегистрации.ТекущаяСтрока;
		ПодключитьОбработчикОжидания("НастроитьРедактированиеИзменений", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьДанные(Команда)
	ОбновитьВсеДанные();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРегистрациюВсеОбъекты(Команда)
	
	ТипыОбъектов = Новый Массив;
	Для каждого СтрокаТЗ Из ТипыОбъектовДляРегистрации Цикл
		Если СтрокаТЗ.Пометка Тогда
			ТипыОбъектов.Добавить(СтрокаТЗ.ТипОбъекта);
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ТипыОбъектов) Тогда
		ТекстПредупреждения = НСтр("ru = 'Не выбраны типы объектов';
									|en = 'Object types are not selected'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура("ТипыОбъектов", ТипыОбъектов);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("НачатьРегистрациюВсехОбъектов", ЭтаФорма, ПараметрыОповещения);
	
	ЗаголовокВопроса = НСтр("ru = 'Подтверждение';
							|en = 'Confirmation'");
	ТекстВопроса = НСтр("ru = 'Регистрация к обмену большого количества объектов увеличивает время выполнения обмена с приложением.';
						|en = 'If you register many objects for exchange, it will increase the time of exchange with the application.'");
	
	ПоказатьВопрос(ОповещениеОЗавершении, ТекстВопроса, ОписаниеКнопокВопроса(),,,ЗаголовокВопроса);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРегистрациюОдинОбъект(Команда)
	
	ТипыОбъектов = Новый Массив;
	ИмяТаблицы = "";
	Для каждого СтрокаТЗ Из ТипыОбъектовДляРегистрации Цикл
		Если СтрокаТЗ.Пометка Тогда
			ТипыОбъектов.Добавить(СтрокаТЗ.ТипОбъекта);
			ИмяТаблицы = СтрокаТЗ.ИмяТаблицы;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ТипыОбъектов) Тогда
		ТекстПредупреждения = НСтр("ru = 'Не выбран тип объекта';
									|en = 'An object type is not selected'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	ИначеЕсли ТипыОбъектов.Количество() > 1 Тогда
		ТекстПредупреждения = НСтр("ru = 'Необходимо выбрать один тип объекта';
									|en = 'Select one object type'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ИмяФормыВыбора = ИмяТаблицы + ".ФормаВыбора";
	ПараметрыВыбора = Новый Структура();
	ПараметрыВыбора.Вставить("РежимВыбора", Истина);
	ПараметрыВыбора.Вставить("МножественныйВыбор", Истина);
	ПараметрыВыбора.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыВыбора.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
	
	ОткрытьФорму(ИмяФормыВыбора, ПараметрыВыбора, Элементы.ИзмененияДляОбмена,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьРегистрациюВсехОбъектов(Команда)
	
	ТипыОбъектов = Новый Массив;
	Для каждого СтрокаТЗ Из ТипыОбъектовДляРегистрации Цикл
		Если СтрокаТЗ.Пометка Тогда
			ТипыОбъектов.Добавить(СтрокаТЗ.ТипОбъекта);
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ТипыОбъектов) Тогда
		ТекстПредупреждения = НСтр("ru = 'Не выбраны типы объектов';
									|en = 'Object types are not selected'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура("ТипыОбъектов", ТипыОбъектов);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("НачатьОтменуРегистрацииВсехОбъектов", ЭтаФорма, ПараметрыОповещения);
	
	ЗаголовокВопроса = НСтр("ru = 'Подтверждение';
							|en = 'Confirmation'");
	ТекстВопроса = НСтр("ru = 'Отменить регистрации к обмену с приложением?';
						|en = 'Do you want to cancel registration for exchange with the application?'");
	
	ПоказатьВопрос(ОповещениеОЗавершении, ТекстВопроса, ОписаниеКнопокВопроса(),,,ЗаголовокВопроса);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьРегистрациюОдинОбъект(Команда)
	
	
	ТекущиеДанные = Элементы.ТипыОбъектовДляРегистрации.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТипОбъекта = ТекущиеДанные.ТипОбъекта;
	
	ТекущиеДанные = Элементы.ИзмененияДляОбмена.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Ссылка = ТекущиеДанные.Ссылка;
	
	ПараметрыОповещения = Новый Структура("ТипОбъекта,Ссылка", ТипОбъекта, Ссылка);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("НачатьОтменуРегистрацииОбъекта", ЭтаФорма, ПараметрыОповещения);
	
	ЗаголовокВопроса = НСтр("ru = 'Подтверждение';
							|en = 'Confirmation'");
	ШаблонВопроса = НСтр("ru = 'Отменить регистрации к обмену ""%1""?';
						|en = 'Do you want to cancel registration for exchange %1?'");
	ТекстВопроса = СтрШаблон(ШаблонВопроса, Строка(Ссылка));
	
	ПоказатьВопрос(ОповещениеОЗавершении, ТекстВопроса, ОписаниеКнопокВопроса(),,,ЗаголовокВопроса);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИзмененияДляОбменаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		ОбъектыКРегистрации = ВыбранноеЗначение;
	Иначе
		ОбъектыКРегистрации = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВыбранноеЗначение);
	КонецЕсли;
	
	ТипОбъектаДляРегистрации = Неопределено;
	Для каждого СтрокаТЗ Из ТипыОбъектовДляРегистрации Цикл
		Если СтрокаТЗ.Пометка Тогда
			ТипОбъектаДляРегистрации = СтрокаТЗ.ТипОбъекта;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Результат = ЗарегистрироватьОбъектыКОбмену(ОбъектыКРегистрации, ТипОбъектаДляРегистрации);
	Если ЗначениеЗаполнено(Результат.СообщениеПользователю) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.СообщениеПользователю);
	КонецЕсли;
	
	Если Не Результат.БылиОшибки Тогда
		ОбновитьВсеДанные();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗарегистрироватьОбъектыКОбмену(ОбъектыКРегистрации, ТипОбъекта)

	Возврат ИнтеграцияУправлениеПерсоналом.ЗарегистрироватьОбъектыКОбмену(ОбъектыКРегистрации, Приложение, ТипОбъекта);

КонецФункции

&НаСервере
Процедура ЗаполнитьТипыОбъектов()
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаТипыОбъектов = ИнтеграцияУправлениеПерсоналом.ТипыОбъектовДляРучнойРегистрацииИзменений(Приложение);
	УстановитьПривилегированныйРежим(Ложь); 
	
	Для каждого СтрокаТЗ Из ТаблицаТипыОбъектов Цикл
		Если Не ПравоДоступа("Чтение", Метаданные.НайтиПоПолномуИмени(СтрокаТЗ.ИмяТаблицы)) Тогда
			Продолжить;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ТипыОбъектовДляРегистрации.Добавить(), СтрокаТЗ);
	КонецЦикла;
	
	ТипыОбъектовДляРегистрации.Сортировать("ТипОбъекта");

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТипыОбъектовУдаляются()

	ТипыОбъектов = Новый Соответствие;
	ТипыОбъектов.Вставить(Перечисления.ТипыОбъектовИнтеграцияУправлениеПерсоналом.Сотрудник, Истина); 
	
	ТипыОбъектовУдаляются = Новый ФиксированноеСоответствие(ТипыОбъектов);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКоличествоОбъектов()
	
	ТипКоличество = ИнтеграцияУправлениеПерсоналом.КоличествоИзмененийПоТипамОбъектов(Приложение, ТипыОбъектовДляРегистрации.Выгрузить());
	Для каждого СтрокаТЗ Из ТипыОбъектовДляРегистрации Цикл
		СтрокаТЗ.Количество = ТипКоличество[СтрокаТЗ.ТипОбъекта];
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	ТекстПустогоЗначения = НСтр("ru = 'Нет изменений';
								|en = 'Unchanged'");
		
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	// Вид оформления
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", ТекстПустогоЗначения);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	// Оформляемое поле
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ТипыОбъектовДляРегистрацииКоличество");
	// условие для оформления
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипыОбъектовДляРегистрации.Количество");

КонецПроцедуры

&НаКлиенте
Процедура НастроитьРедактированиеИзменений()
	
	НастроитьРедактированиеИзмененийСервер(ТекущаяСтрокаТипыОбъектов);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьРедактированиеИзмененийСервер(ТекущаяСтрока)

	Данные = ТипыОбъектовДляРегистрации.НайтиПоИдентификатору(ТекущаяСтрока);
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТаблицы = Данные.ИмяТаблицы;
	ТипОбъекта = Данные.ТипОбъекта;

	ШаблонТекстЗапроса = ИнтеграцияУправлениеПерсоналом.ШаблонТекстаЗапросаИзмененийДляРедактирования(Приложение, ТипОбъекта);
	
	СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	Если ЗначениеЗаполнено(ШаблонТекстЗапроса) Тогда
		ТекстЗапроса = СтрЗаменить(ШаблонТекстЗапроса, "#ИмяТаблицы", ИмяТаблицы);
		СвойстваСписка.ТекстЗапроса = ТекстЗапроса;
		СвойстваСписка.ДинамическоеСчитываниеДанных = Истина;
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	&ТипОбъекта КАК Ссылка,
		|	NULL КАК ВыгружатьУдаление";
		СвойстваСписка.ТекстЗапроса = ТекстЗапроса;
		СвойстваСписка.ДинамическоеСчитываниеДанных = Ложь;
	КонецЕсли;
	
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.ИзмененияДляОбмена, СвойстваСписка);
	ИзмененияДляОбмена.Параметры.УстановитьЗначениеПараметра("ТипОбъекта", ТипОбъекта);
	
	Элементы.ИзмененияДляОбменаВыгружатьУдаление.Видимость = (ТипыОбъектовУдаляются.Получить(ТипОбъекта) = Истина);

КонецПроцедуры 

&НаСервере
Процедура ОбновитьВсеДанные()

	ЗаполнитьКоличествоОбъектов();
	Элементы.ИзмененияДляОбмена.Обновить();

КонецПроцедуры

&НаКлиенте
Функция ОписаниеКнопокВопроса()
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Продолжить';
												|en = 'Continue'"));
	Кнопки.Добавить(КодВозвратаДиалога.Отмена);
	
	Возврат Кнопки;
	
КонецФункции

&НаКлиенте
Процедура НачатьРегистрациюВсехОбъектов(Результат, ПараметрыОповещения) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = ДлительнаяОперацияРегистрацияВсехОбъектов(ПараметрыОповещения.ТипыОбъектов);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Регистрация выполнена.';
															|en = 'Registration is completed.'");
	ОповещениеОЗавершении = Новый ОписаниеОповещения("РегистрацияВсехОбъектовЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаСервере
Функция ДлительнаяОперацияРегистрацияВсехОбъектов(ТипыОбъектов)
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.Вставить("НаименованиеФоновогоЗадания", НСтр("ru = 'Регистрация изменений';
																			|en = 'Change registration'"));
	ПараметрыВыполненияВФоне.ОжидатьЗавершение = 0;
	ПараметрыПроцедуры = Новый Структура("Приложение,ТипыОбъектов", Приложение, ТипыОбъектов);
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"ИнтеграцияУправлениеПерсоналом.ЗарегистрироватьИзмененияОбъектовПоТипуКОбменуФоновоеЗадание",
		ПараметрыПроцедуры,
		ПараметрыВыполненияВФоне);

КонецФункции 

&НаКлиенте
Процедура РегистрацияВсехОбъектовЗавершение(ДлительнаяОперация, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(, ДлительнаяОперация.КраткоеПредставлениеОшибки);
	Иначе 
		ОбновитьВсеДанные();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьОтменуРегистрацииВсехОбъектов(Результат, ПараметрыОповещения) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = ДлительнаяОперацияОтменаРегистрациВсехОбъектов(ПараметрыОповещения.ТипыОбъектов);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Отмена регистрация выполнена.';
															|en = 'Registration is canceled.'");
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОтменаРегистрацииВсехОбъектовЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаСервере
Функция ДлительнаяОперацияОтменаРегистрациВсехОбъектов(ТипыОбъектов)
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.Вставить("НаименованиеФоновогоЗадания", НСтр("ru = 'Отмена регистрации изменений';
																			|en = 'Cancel change registration'"));
	ПараметрыВыполненияВФоне.ОжидатьЗавершение = 0;
	ПараметрыПроцедуры = Новый Структура("Приложение,ТипыОбъектов", Приложение, ТипыОбъектов);
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"ИнтеграцияУправлениеПерсоналом.ОтменитьИзмененияОбъектовПоТипуКОбменуФоновоеЗадание",
		ПараметрыПроцедуры,
		ПараметрыВыполненияВФоне);

КонецФункции
	
&НаКлиенте
Процедура ОтменаРегистрацииВсехОбъектовЗавершение(ДлительнаяОперация, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(, ДлительнаяОперация.КраткоеПредставлениеОшибки);
	Иначе
		ОбновитьВсеДанные();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьОтменуРегистрацииОбъекта(Результат, ПараметрыОповещения) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = ДлительнаяОперацияОтменаРегистрациОбъекта(ПараметрыОповещения.ТипОбъекта, ПараметрыОповещения.Ссылка);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Отмена регистрация выполнена.';
															|en = 'Registration is canceled.'");
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОтменаРегистрацииОбъектаЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаСервере
Функция ДлительнаяОперацияОтменаРегистрациОбъекта(ТипОбъекта, Ссылка)
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.Вставить("НаименованиеФоновогоЗадания", НСтр("ru = 'Отмена регистрации изменений';
																			|en = 'Cancel change registration'"));
	ПараметрыВыполненияВФоне.ОжидатьЗавершение = 0;
	ПараметрыПроцедуры = Новый Структура("Приложение,ТипОбъекта,Ссылка", Приложение, ТипОбъекта, Ссылка);
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"ИнтеграцияУправлениеПерсоналом.ОтменитьРегистрациюОбъектаКОбменуФоновоеЗадание",
		ПараметрыПроцедуры,
		ПараметрыВыполненияВФоне);

КонецФункции
	
&НаКлиенте
Процедура ОтменаРегистрацииОбъектаЗавершение(ДлительнаяОперация, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(, ДлительнаяОперация.КраткоеПредставлениеОшибки);
	Иначе
		ОбновитьВсеДанные();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

 


 



