
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЗаймыСотрудникам") Тогда
		Элементы.ИнфоТекст.Заголовок	= НСтр("ru = 'В настройках выключена возможность использования займов! Обработка недоступна!';
												|en = 'Loans are disabled in the settings. The data processor is unavailable.'");
		Элементы.ИнфоТекст.ЦветФона		= ЦветаСтиля.ЦветИзмененногоПоля;
		ЭтаФорма.Доступность = Ложь;
	КонецЕсли;
	ИспользоватьСтатьиФинансированияЗарплата = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата");
	Объект.МесяцНачисления = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),-1));
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	Если Объект.ПогашениеЗаймов.Количество() = 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Не заполнено ни одного договора займа, по которому необходимо провести корректировку';
									|en = 'No loan contract to adjust is filled'"));
		Возврат;
	КонецЕсли;
	
	Если НЕ Объект.НачислениеЗарплаты.Пустая() Тогда
		ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ЗаполнитьДокументПослеОтветаНаВопрос", ЭтотОбъект);
		ТекстСообщения = НСтр("ru = 'Выбран документ начисления зарплаты. При продолжении добавятся новые строки в табличную часть. Продолжить?';
								|en = 'The payroll accrual document is selected. If you continue, new rows will be added to the table. Continue?'");
		ПоказатьВопрос(ОбработчикОповещенияОЗакрытии, ТекстСообщения, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, 
							НСтр("ru = 'Подтверждение добавления строк в документ';
								|en = 'Confirm adding rows to the document'"));
	Иначе
		ПеренестиВДокументОткрытьФорму();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

///////////////////////////////////////////////////////////////////////////////
// Редактирование месяца строкой.

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", ,);
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", Направление, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Объект.ПогашениеЗаймов.Очистить();
	
	Запрос = Новый Запрос;
	// Отбираем движения по материальной выгоде
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачисленияУдержанияПоСотрудникам.Регистратор КАК Регистратор,
	|	НачисленияУдержанияПоСотрудникам.ДокументОснование КАК ДоговорЗайма,
	|	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА НачисленияУдержанияПоСотрудникам.Регистратор ССЫЛКА Документ.НачислениеЗарплаты
	|			ТОГДА КОНЕЦПЕРИОДА(ВЫРАЗИТЬ(НачисленияУдержанияПоСотрудникам.Регистратор КАК Документ.НачислениеЗарплаты).МесяцНачисления, МЕСЯЦ)
	|		КОГДА &ДокументПогашенияЗайма
	|			ТОГДА &ДатаПогашенияПоДокументуПогашенияЗайма
	|		КОГДА НачисленияУдержанияПоСотрудникам.Регистратор ССЫЛКА Документ.Увольнение
	|			ТОГДА КОНЕЦПЕРИОДА(ВЫРАЗИТЬ(НачисленияУдержанияПоСотрудникам.Регистратор КАК Документ.Увольнение).ДатаУвольнения, ДЕНЬ)
	|		КОГДА НачисленияУдержанияПоСотрудникам.Регистратор ССЫЛКА Документ.Отпуск
	|			ТОГДА КОНЕЦПЕРИОДА(ВЫРАЗИТЬ(НачисленияУдержанияПоСотрудникам.Регистратор КАК Документ.Отпуск).ПериодРегистрации, ДЕНЬ)
	|		КОГДА НачисленияУдержанияПоСотрудникам.Регистратор ССЫЛКА Документ.ОтпускПоУходуЗаРебенком
	|			ТОГДА КОНЕЦПЕРИОДА(ВЫРАЗИТЬ(НачисленияУдержанияПоСотрудникам.Регистратор КАК Документ.ОтпускПоУходуЗаРебенком).ПериодРегистрации, ДЕНЬ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаПогашения,
	|	НачисленияУдержанияПоСотрудникам.Регистратор ССЫЛКА Документ.Увольнение КАК РасчетУвольнения
	|ПОМЕСТИТЬ ДокументыДвижений
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	|ГДЕ
	|	НачисленияУдержанияПоСотрудникам.Организация = &Организация
	|	И НачисленияУдержанияПоСотрудникам.Период >= &ДатаИзмененияЗаконодательства
	|	И НачисленияУдержанияПоСотрудникам.ДокументОснование ССЫЛКА Документ.ДоговорЗаймаСотруднику
	|	И НачисленияУдержанияПоСотрудникам.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.МатериальнаяВыгодаПоЗаймам)
	|";
	
	ТекстЗапросаУпорядоченныеДвиженияДокумента =
	"ВЫБРАТЬ
	|	ДокументыДвижений.Регистратор КАК Регистратор,
	|	ДокументыДвижений.ДоговорЗайма КАК ДоговорЗайма,
	|	ДокументыДвижений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДокументыДвижений.ДатаПогашения КАК ДатаПогашения,
	|	НАЧАЛОПЕРИОДА(ДокументыДвижений.ДатаПогашения, МЕСЯЦ) КАК МесяцПогашения,
	|	ДокументыДвижений.РасчетУвольнения КАК РасчетУвольнения
	|ИЗ
	|	ДокументыДвижений КАК ДокументыДвижений
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	ДоговорЗайма,
	|	Регистратор"; 
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ВнешниеХозяйственныеОперации.ЗаймыСотрудникамВХО") Тогда
		ТекстЗапросаИсключения = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДокументыДвижений.Регистратор КАК Регистратор,
		|	ВзаиморасчетыПоЗаймамСотрудникам.Регистратор КАК ИсключаемыйДокумент
		|ИЗ
		|	ДокументыДвижений КАК ДокументыДвижений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыПоЗаймамСотрудникам КАК ВзаиморасчетыПоЗаймамСотрудникам
		|		ПО (ДокументыДвижений.Регистратор ССЫЛКА Документ.ПогашениеЗаймаСотруднику)
		|			И ДокументыДвижений.ДоговорЗайма = ВзаиморасчетыПоЗаймамСотрудникам.ДоговорЗайма
		|			И ДокументыДвижений.ДатаПогашения < ВзаиморасчетыПоЗаймамСотрудникам.Период
		|			И (НАЧАЛОПЕРИОДА(ДокументыДвижений.ДатаПогашения, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ВзаиморасчетыПоЗаймамСотрудникам.Период, МЕСЯЦ))
		|			И ДокументыДвижений.Регистратор <> ВзаиморасчетыПоЗаймамСотрудникам.Регистратор";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
								"&ДокументПогашенияЗайма",
								"НачисленияУдержанияПоСотрудникам.Регистратор ССЫЛКА Документ.ПогашениеЗаймаСотруднику");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
								"&ДатаПогашенияПоДокументуПогашенияЗайма",
								"КОНЕЦПЕРИОДА(ВЫРАЗИТЬ(НачисленияУдержанияПоСотрудникам.Регистратор КАК Документ.ПогашениеЗаймаСотруднику).Дата, ДЕНЬ)");
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
								"&ДокументПогашенияЗайма",
								"ЛОЖЬ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
								"&ДатаПогашенияПоДокументуПогашенияЗайма",
								"ДАТАВРЕМЯ(1, 1, 1)");
		ТекстЗапросаИсключения = 
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплаты.ПустаяСсылка) КАК Регистратор,
		|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплаты.ПустаяСсылка) КАК ИсключаемыйДокумент";
	КонецЕсли;

	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьТекстыЗапросов(Запрос.Текст,ТекстЗапросаИсключения);
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьТекстыЗапросов(Запрос.Текст,ТекстЗапросаУпорядоченныеДвиженияДокумента);
	
	Запрос.УстановитьПараметр("ДатаИзмененияЗаконодательства",'20240101');
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаИсключаемыхРегистраторов = РезультатыЗапроса[1].Выгрузить();
	СтруктураПоискаИсключаемыхДокументов = Новый Структура("Регистратор");
	Результат = РезультатыЗапроса[2].Выбрать();
	ТипЧисло15_2 = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2));
	ТипЧисло15_0 = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0));
	
	Пока Результат.Следующий() Цикл
		
		ДатаПогашения		= Результат.ДатаПогашения;
		Регистратор			= Результат.Регистратор;
		РасчетУвольнения	= Результат.РасчетУвольнения;
		ДоговорЗайма		= Результат.ДоговорЗайма;
		Организация			= Объект.Организация;
		МесяцПогашения		= Результат.МесяцПогашения;
		
		// Следует отобрать исключаемые регистраторы, иначе может не выполняться расчет.
		// Например, если в середине месяца было погашение займа, затам выполнен расчет зарплаты.
		МассивСтрокИсключаемыхРегистраторов = ТаблицаИсключаемыхРегистраторов.НайтиСтроки(Новый Структура("Регистратор",Регистратор));
		Если МассивСтрокИсключаемыхРегистраторов.Количество() = 0 Тогда
			ИсключаемыеРегистраторы = Неопределено;
		Иначе
			ИсключаемыеРегистраторы = Новый Массив;
			Для Каждого СтрокаИсключаемыйРегистратор ИЗ МассивСтрокИсключаемыхРегистраторов Цикл
				ИсключаемыеРегистраторы.Добавить(СтрокаИсключаемыйРегистратор.ИсключаемыйДокумент);
			КонецЦикла;
		КонецЕсли;
			
		РасчетЗаймов		= ЗаймыСотрудникам.РасчетЗаймовСотрудникам(Организация,ДатаПогашения,Регистратор,РасчетУвольнения,ДоговорЗайма,,,,ИсключаемыеРегистраторы);
		УчетНДФЛРасширенный.РасчетМатериальнойВыгодыПоЗаймамСотрудников(Организация, ДатаПогашения, РасчетЗаймов, Регистратор, Ложь);
		Если РасчетЗаймов.Количество() = 0 ИЛИ РасчетЗаймов.Колонки.Найти("КатегорияДохода") = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		РасчетЗаймов.Колонки.МатериальнаяВыгода.Имя			= "МатериальнаяВыгодаС2024";
		РасчетЗаймов.Колонки.НалогНаМатериальнуюВыгоду.Имя	= "НалогНаМатериальнуюВыгодуС2024";
		РасчетЗаймов.Колонки.Добавить("МатериальнаяВыгода",			ТипЧисло15_2);
		РасчетЗаймов.Колонки.Добавить("НалогНаМатериальнуюВыгоду",	ТипЧисло15_0);
		РасчетЗаймов.Колонки.Удалить("КатегорияДохода");
		УчетНДФЛРасширенный.РасчетМатериальнойВыгодыПоЗаймамСотрудников(Организация, ДатаПогашения, РасчетЗаймов, Регистратор, Истина);
		РасчетЗаймов.Колонки.МатериальнаяВыгода.Имя			= "МатериальнаяВыгодаДо2024";
		РасчетЗаймов.Колонки.НалогНаМатериальнуюВыгоду.Имя	= "НалогНаМатериальнуюВыгодуДо2024";
		
		РасчетЗаймов.Свернуть("ФизическоеЛицо, ДоговорЗайма, Подразделение",
							  "МатериальнаяВыгодаДо2024, НалогНаМатериальнуюВыгодуДо2024, МатериальнаяВыгодаС2024, НалогНаМатериальнуюВыгодуС2024");
								
		Для Каждого СтрокаРасчет ИЗ РасчетЗаймов Цикл
			Если СтрокаРасчет.МатериальнаяВыгодаДо2024 <> СтрокаРасчет.МатериальнаяВыгодаС2024 ИЛИ 
				 СтрокаРасчет.НалогНаМатериальнуюВыгодуДо2024 <> СтрокаРасчет.НалогНаМатериальнуюВыгодуС2024 Тогда
				
				НоваяСтрока = Объект.ПогашениеЗаймов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаРасчет);
				
				НоваяСтрока.Регистратор					= Регистратор;
				НоваяСтрока.МатериальнаяВыгода			= СтрокаРасчет.МатериальнаяВыгодаС2024 - СтрокаРасчет.МатериальнаяВыгодаДо2024;
				НоваяСтрока.НалогНаМатериальнуюВыгоду	= СтрокаРасчет.НалогНаМатериальнуюВыгодуС2024 - СтрокаРасчет.НалогНаМатериальнуюВыгодуДо2024;
				НоваяСтрока.ДатаПогашения				= ДатаПогашения;
				НоваяСтрока.МесяцПогашения				= МесяцПогашения;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДокументПослеОтветаНаВопрос(Результат, Контекст) Экспорт
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	ПеренестиВДокументОткрытьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокументОткрытьФорму()
	
	ФормаДокумента = ПолучитьФорму("Документ.НачислениеЗарплаты.Форма.ФормаДокумента", Новый Структура("Ключ", Объект.НачислениеЗарплаты));
	
	Если ФормаДокумента.Открыта() Тогда
		ФормаДокумента.Закрыть();
	КонецЕсли;
	
	ВыполненоУспешно = ПеренестиВДокументНаСервере();
	
	Если ВыполненоУспешно Тогда
		
		ФормаДокумента = ПолучитьФорму("Документ.НачислениеЗарплаты.Форма.ФормаДокумента", Новый Структура("Ключ", Объект.НачислениеЗарплаты));
		Если ИспользоватьСтатьиФинансированияЗарплата Тогда
			ПараметрыДляРаспределения = ОтражениеЗарплатыВБухучетеКлиентСерверРасширенный.ОписаниеИсходныхДанныхДляОбновленияЗависимыхТаблиц();
			ПараметрыДляРаспределения.Вставить("РаспределятьЗависимыеТаблицы",	Истина);
			ПараметрыДляРаспределения.Вставить("ИменаТаблицДляОбновления", 		"ПогашениеЗаймов");
			ПараметрыДляРаспределения.Вставить("ИмяИсходнойТаблицы", 			"ПогашениеЗаймов");
			ПараметрыДляРаспределения.Вставить("НомерСтрокиИсходнойТаблицы", 	1);
			ПараметрыДляРаспределения.Вставить("Сотрудник", 					Неопределено);
			ФормаДокумента.РаспределитьЗависимыеРезультаты(ПараметрыДляРаспределения);
			ФормаДокумента.Модифицированность = Истина;
		КонецЕсли;
		ФормаДокумента.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПеренестиВДокументНаСервере()
	
	ДокументСсылка = Объект.НачислениеЗарплаты;
	
	Если НЕ ДокументСсылка.Пустая() Тогда
		
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		Попытка
			ДокументОбъект.Заблокировать();
		Исключение
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = ' Требуется обновить документ %1
								|В данный момент изменение невозможно, так как документ редактируется другим пользователем или "
								+ "в другой форме программы. Следует закрыть документ и повторить попытку'"),
							);
			ВызватьИсключение ТекстСообщения;
		КонецПопытки;
		
	Иначе
		ДокументОбъект = Документы.НачислениеЗарплаты.СоздатьДокумент();
		ДокументОбъект.Дата						= ТекущаяДатаСеанса();
		ДокументОбъект.МесяцНачисления			= Объект.МесяцНачисления;
		ДокументОбъект.Организация				= Объект.Организация;
		ДокументОбъект.ПланируемаяДатаВыплаты	= РасчетЗарплатыРасширенныйКлиентСервер.ПланируемаяДатаВыплатыЗарплаты(Объект.Организация,
																														Объект.МесяцНачисления);

	КонецЕсли;
	
	ПогашенияДокумента		= ДокументОбъект.ПогашениеЗаймов;
	ПогашенияКорректировки	= Объект.ПогашениеЗаймов.Выгрузить();
	ПогашенияКорректировки.Свернуть("ФизическоеЛицо, ДоговорЗайма, Подразделение","МатериальнаяВыгода,НалогНаМатериальнуюВыгоду");
	Для Каждого СтрокаПогашение ИЗ ПогашенияКорректировки Цикл
		НоваяСтрока = ПогашенияДокумента.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаПогашение);
	КонецЦикла;
	
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		Объект.НачислениеЗарплаты = ДокументОбъект.Ссылка;
		ВыполненоУспешно = Истина;
	Исключение
		ТекстОшибки = НСтр("ru = 'Не удалось записать %1
							|%2';
							|en = 'Cannot save %1
							|%2'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДокументСсылка,
				ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументСсылка);
		ВыполненоУспешно = Ложь;;
	КонецПопытки;

	Возврат ВыполненоУспешно;
КонецФункции

#КонецОбласти
