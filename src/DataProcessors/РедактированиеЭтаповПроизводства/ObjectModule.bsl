//++ НЕ УТКА

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	МенеджерВременныхТаблиц = Документы.ЭтапПроизводства2_2.ВременныеТаблицыДанныхОбъекта(ЭтотОбъект);
	
	Документы.ЭтапПроизводства2_2.ПроверитьЗаполнениеОбъекта(
		ЭтотОбъект,
		МенеджерВременныхТаблиц,
		Отказ,
		ПроверяемыеРеквизиты);
	
	Для Каждого ДанныеЭтапа Из Этапы Цикл
		СтруктураПоиска = Новый Структура("Распоряжение, Отменено", ДанныеЭтапа.Распоряжение, Ложь);
		Если ДанныеЭтапа.ЭтоВыпускающийЭтап Тогда
			НайденныеСтроки = ВыходныеИзделия.НайтиСтроки(СтруктураПоиска);
		Иначе
			НайденныеСтроки = ПобочныеИзделия.НайтиСтроки(СтруктураПоиска);
		КонецЕсли;
		Если НайденныеСтроки.Количество() = 0 Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Для этапа %1 необходимо указать выходное изделие.';
											|en = 'Specify a finished product for the %1 stage.'"), ДанныеЭтапа.Распоряжение);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ); 
		КонецЕсли;
	КонецЦикла;
	
	ПроверитьДолиСтоимостиВыходныхИзделий(Отказ);
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Обработки.РедактированиеЭтаповПроизводства);
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект, ПараметрыУказанияСерий.ОбеспечениеМатериаламиИРаботами, Отказ, МассивНепроверяемыхРеквизитов);
	
	ПараметрыОкругления = Обработки.РедактированиеЭтаповПроизводства.ПараметрыТЧДляОкругления();
	НоменклатураСервер.ПроверитьОкруглениеКоличества(ЭтотОбъект, Отказ, ПараметрыОкругления["ВыходныеИзделия"]);
	НоменклатураСервер.ПроверитьОкруглениеКоличества(ЭтотОбъект, Отказ, ПараметрыОкругления["ПобочныеИзделия"]);
	НоменклатураСервер.ПроверитьОкруглениеКоличества(ЭтотОбъект, Отказ, ПараметрыОкругления["ОбеспечениеМатериаламиИРаботами"]);
		
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаЗаполненияРеквизитов

Процедура ПроверитьДолиСтоимостиВыходныхИзделий(Отказ)
	
	ПараметрыРаспределенияЗатрат = Документы.ЭтапПроизводства2_2.ПараметрыРаспределенияЗатрат(
		Документы.ЭтапПроизводства2_2.ПустаяСсылка());
	
	ПоляСвязи        = ПараметрыРаспределенияЗатрат.ПоляСвязи;
	ПолеГруппыЗатрат = "ПартияПроизводства";
	
	ТекстЗапроса = Документы.ЭтапПроизводства2_2.ТекстЗапросаПроверитьДолиСтоимости(
		ЭтотОбъект,	ПоляСвязи, ПолеГруппыЗатрат);
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ТаблицаИсточник", 
		ВыходныеИзделия.Выгрузить(, "НомерСтроки, Номенклатура, Характеристика, Распоряжение, ДоляСтоимости, Отменено"));
		
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	
	Результат = МассивРезультатов[МассивРезультатов.ВГраница()];
	Если Не Результат.Пустой() Тогда
		
		ТекстСообщения = НСтр("ru = 'Реквизит ""Способ распределения затрат на выходные изделия""
									|должен иметь одинаковое значение для всех выпускающих этапов партии:
									|%1';
									|en = 'The ""Method of allocating finished product costs"" attribute
									|must have the same value for all lot release stages:
									|%1'");
		
		ТекстСообщенияПартии = "";
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекстСообщенияПартии = ТекстСообщенияПартии + "
								   |	%1";
			ТекстСообщенияПартии = СтрШаблон(ТекстСообщенияПартии, Выборка.ПартияПроизводства);
		КонецЦикла;	
		
		ТекстСообщения = СтрШаблон(ТекстСообщения, ТекстСообщенияПартии);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		
	КонецЕсли;
	
	
	Результат = МассивРезультатов[МассивРезультатов.ВГраница() - 1];
	Если Не Результат.Пустой() Тогда
		
		Шаблон = НСтр("ru = 'При выпуске нескольких наименований выходных изделий требуется указать их долю стоимости (строка %1%2).';
						|en = 'When releasing several names of finished products, you should specify their cost share (line %1%2).'");
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НомерСтроки    = Формат(Выборка.НомерСтроки, "ЧГ=");
			ТекстСообщения = СтрШаблон(Шаблон, НомерСтроки, ?(Выборка.Ссылка = Неопределено, "", ", " + Выборка.Ссылка));
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВыходныеИзделия", Выборка.НомерСтроки, "ДоляСтоимости");
			
			ОбщегоНазначения.СообщитьПользователю(
				ТекстСообщения,
				Выборка.Ссылка, 
				Поле, 
				?(Выборка.Ссылка = Неопределено, "РедактированиеЭтапов", ""),
				Отказ);
				
		КонецЦикла;	
		
	КонецЕсли;	
	
КонецПроцедуры	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеЭтаповПроизводства() Экспорт
	
	СтруктураДанныхЭтапов = УправлениеПроизводством.СтруктураДанныхЭтаповПроизводства();
	
	СписокЭтапов = Этапы.ВыгрузитьКолонку("Распоряжение");
	
	// Шапка
	РеквизитыЭтапов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(
		СписокЭтапов,
		"Распоряжение, ЗаказПереработчику,ХозяйственнаяОперация");
	ЗначенияЗаполнения = Новый Структура;
	
	ЗначенияЗаполнения.Вставить("ПроизводствоОднойДатой", ПроизводствоОднойДатой);
	Если ПроизводствоОднойДатой Тогда
		ЗначенияЗаполнения.Вставить("ДатаПроизводства", ДатаПроизводства);
	КонецЕсли;
	
	ЗначенияЗаполнения.Вставить("НеОтгружатьЧастями", НеОтгружатьЧастями);
	Если НеОтгружатьЧастями Тогда
		ЗначенияЗаполнения.Вставить("ДатаОтгрузки", ДатаОтгрузки);
	КонецЕсли;
	
	Для каждого Строка Из Этапы Цикл
		
		НоваяСтрока = СтруктураДанныхЭтапов.Реквизиты.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка,, "Распоряжение");
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ЗначенияЗаполнения);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, РеквизитыЭтапов[Строка.Распоряжение]);
		
		НоваяСтрока.Ссылка             = Строка.Распоряжение;
		НоваяСтрока.ЗаказПереработчику = ЗаказПереработчику;
		
	КонецЦикла;

	РеквизитыЗаказаПереработчику = Новый Структура;
	РеквизитыЗаказаПереработчику.Вставить("ЗаказПереработчику", ЗаказПереработчику);
	РеквизитыЗаказаПереработчику.Вставить("Проведен",           Проведен);
	РеквизитыЗаказаПереработчику.Вставить("Статус",             Статус);

	СтруктураДанныхЭтапов.РеквизитыЗаказаПереработчику = РеквизитыЗаказаПереработчику;
	
	// ТЧ
	ЗаполнитьДанныеДляПроверкиТЧ(СтруктураДанныхЭтапов.ВыходныеИзделия, ВыходныеИзделия);
	ЗаполнитьДанныеДляПроверкиТЧ(СтруктураДанныхЭтапов.ПобочныеИзделия, ПобочныеИзделия);
	ЗаполнитьДанныеДляПроверкиТЧ(СтруктураДанныхЭтапов.ОбеспечениеМатериаламиИРаботами, ОбеспечениеМатериаламиИРаботами);
	СтруктураДанныхЭтапов.ПроверятьТЧВыходныеИзделия = Истина;
	СтруктураДанныхЭтапов.ПроверятьТЧПобочныеИзделия = Истина;
	СтруктураДанныхЭтапов.ПроверятьТЧОбеспечениеМатериаламиИРаботами = Истина;
	
	Возврат СтруктураДанныхЭтапов;
	
КонецФункции

Процедура ЗаполнитьДанныеДляПроверкиТЧ(ДанныеДляПроверкиТЧ, ТабличнаяЧасть)
	
	Для каждого Строка Из ТабличнаяЧасть Цикл
		НоваяСтрока = ДанныеДляПроверкиТЧ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		НоваяСтрока.Ссылка = Строка.Распоряжение
	КонецЦикла;
	
КонецПроцедуры

Функция ПутьКДаннымРеквизитаФормыРедактирования() Экспорт
	
	Возврат "РедактированиеЭтапов";
	
КонецФункции

#КонецОбласти

#КонецЕсли

//-- НЕ УТКА
