//++ НЕ УТКА

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Переносит изменения в этап.
//
// Параметры:
//  ЭтапОбъект			 - ДокументОбъект.ЭтапПроизводства2_2	 - данные этапа.
//  РедактированиеЭтапов - ДанныеФормыСтруктура					 - данные обработки РедактированиеЭтаповПроизводства.
// 
// Возвращаемое значение:
//  ДанныеФормыСтруктура - строка ТЧ "Этапы", к которой относится этап.
//
Функция ПеренестиИзмененияВЭтап(ЭтапОбъект, РедактированиеЭтапов) Экспорт

	СтруктураПоиска = Новый Структура("Распоряжение", ЭтапОбъект.Ссылка);
 	ДанныеЭтапа = РедактированиеЭтапов.Этапы.НайтиСтроки(СтруктураПоиска)[0];

	ЭтапОбъект.ПроизводствоОднойДатой = РедактированиеЭтапов.ПроизводствоОднойДатой;
	ЭтапОбъект.НеОтгружатьЧастями = РедактированиеЭтапов.НеОтгружатьЧастями;
	
	Если РедактированиеЭтапов.ПроизводствоОднойДатой Тогда
		ЭтапОбъект.ДатаПроизводства = РедактированиеЭтапов.ДатаПроизводства;
	КонецЕсли; 
	Если РедактированиеЭтапов.НеОтгружатьЧастями Тогда
		ЭтапОбъект.ДатаОтгрузки = РедактированиеЭтапов.ДатаОтгрузки;
	КонецЕсли;
	
	ЭтапОбъект.ВыходныеИзделия.Загрузить(РедактированиеЭтапов.ВыходныеИзделия.Выгрузить(СтруктураПоиска));
	ЭтапОбъект.ПобочныеИзделия.Загрузить(РедактированиеЭтапов.ПобочныеИзделия.Выгрузить(СтруктураПоиска));
	ЭтапОбъект.ОбеспечениеМатериаламиИРаботами.Загрузить(РедактированиеЭтапов.ОбеспечениеМатериаламиИРаботами.Выгрузить(СтруктураПоиска));
	ЭтапОбъект.НаборыМатериаловИРабот.Загрузить(РедактированиеЭтапов.НаборыМатериаловИРабот.Выгрузить(СтруктураПоиска));
	
	Если ДанныеЭтапа.Статус <> ДанныеЭтапа.ТекущийСтатус Тогда
		ЭтапОбъект.Статус = ДанныеЭтапа.Статус;
		УправлениеПроизводством.ЗаполнитьРеквизитыЭтапаПриИзмененииСтатуса(ЭтапОбъект, ДанныеЭтапа.ТекущийСтатус);
	КонецЕсли;
	
	Возврат ДанныеЭтапа;
	
КонецФункции

// Добавляет в обработку данные указанных этапов.
//
// Параметры:
//  Объект		 - ОбработкаОбъект.РедактированиеЭтаповПроизводства - данные обработки РедактированиеЭтаповПроизводства.
//  СписокЭтапов - Массив - список этапов.
//
Процедура ДобавитьДанныеЭтапов(Объект, СписокЭтапов) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка В (&СписокЭтапов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка В (&СписокЭтапов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка В (&СписокЭтапов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.НаборыМатериаловИРабот КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка В (&СписокЭтапов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеквизитыЭтапов.Ссылка,
	|	РеквизитыЭтапов.ВерсияДанных,
	|	РеквизитыЭтапов.Дата,
	|	РеквизитыЭтапов.Статус,
	|	РеквизитыЭтапов.ПроизводствоНаСтороне,
	|	РеквизитыЭтапов.Подразделение,
	|	РеквизитыЭтапов.Распоряжение,
	|	РеквизитыЭтапов.Распоряжение.УкрупненныйЗаказПоНазначениямПродукции КАК УкрупненныйЗаказПоНазначениямПродукции,
	|
	|	РеквизитыЭтапов.Назначение КАК Назначение,
	|	РеквизитыЭтапов.НазначениеПродукция КАК НазначениеПродукция,
	|
	|	РеквизитыЭтапов.РучноеРазмещениеВГрафике,
	|	РеквизитыЭтапов.ПроизводствоОднойДатой,
	|	РеквизитыЭтапов.ДатаПроизводства,
	|	РеквизитыЭтапов.НеОтгружатьЧастями,
	|	РеквизитыЭтапов.ДатаОтгрузки,
	|	РеквизитыЭтапов.ЗаказПереработчику,
	|	РеквизитыЭтапов.НомерСледующегоЭтапа,
	|	РеквизитыЭтапов.СпособРаспределенияЗатратНаВыходныеИзделия,
	|	РеквизитыЭтапов.ДинамическаяСтруктура,
	|	РеквизитыЭтапов.ПартияПроизводства
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапов
	|ГДЕ
	|	РеквизитыЭтапов.Ссылка В (&СписокЭтапов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокЭтапов", СписокЭтапов);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.ВыполнитьПакет();  
	УстановитьПривилегированныйРежим(Ложь);
	
	// Этапы
	НовыеЭтапы = Новый Соответствие;
	ДобавленныеЭтапы = Новый Соответствие;
	
	Объект.ЕстьВыпускающийЭтап = Ложь;
	Объект.УкрупненныйЗаказПоНазначениямПродукции = Ложь;
	
	Выборка = Результат[4].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеЭтапа = Объект.Этапы.Добавить();
		ЗаполнитьЗначенияСвойств(ДанныеЭтапа, Выборка);
		ДанныеЭтапа.ТекущийСтатус = ДанныеЭтапа.Статус;
		ДанныеЭтапа.ЭтоВыпускающийЭтап = УправлениеПроизводствомКлиентСервер.ЭтоВыпускающийЭтап(Выборка);
		ДанныеЭтапа.Распоряжение = Выборка.Ссылка;
		ДанныеЭтапа.Заказ = Выборка.Распоряжение;
		Если ДанныеЭтапа.ЭтоВыпускающийЭтап Тогда
			Объект.ЕстьВыпускающийЭтап = Истина;
		КонецЕсли;
		
		Если Выборка.УкрупненныйЗаказПоНазначениямПродукции Тогда
			Объект.УкрупненныйЗаказПоНазначениямПродукции = Истина;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Выборка.ЗаказПереработчику) Тогда
			НовыеЭтапы.Вставить(Выборка.Ссылка, Истина);
			
			Если ДанныеЭтапа.ДатаПроизводства = '000101010000' Тогда
				ДанныеЭтапа.ДатаПроизводства = Документы.ЭтапПроизводства2_2.ПлановаяДатаПоступления(ДанныеЭтапа.Распоряжение);
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавленныеЭтапы.Вставить(Выборка.Ссылка, ДанныеЭтапа);
		
	КонецЦикла;
	
	// ВыходныеИзделия
	Выборка = Результат[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеЭтапа = ДобавленныеЭтапы.Получить(Выборка.Ссылка);
		
		ДанныеСтроки = Объект.ВыходныеИзделия.Добавить();
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);
		ДанныеСтроки.Распоряжение = Выборка.Ссылка;
		
		Если НовыеЭтапы.Получить(Выборка.Ссылка) <> Неопределено Тогда
			ДанныеСтроки.КодСтроки = 0;
		КонецЕсли;
		
		Если ДанныеСтроки.ДатаПроизводства = '000101010000' Тогда
			ДанныеСтроки.ДатаПроизводства = ДанныеЭтапа.ДатаПроизводства;
		КонецЕсли;
		
		Объект.МаксимальныйКодСтрокиИзделия = Макс(ДанныеСтроки.КодСтроки, Объект.МаксимальныйКодСтрокиИзделия);
		
	КонецЦикла;
	
	// ПобочныеИзделия
	Выборка = Результат[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеЭтапа = ДобавленныеЭтапы.Получить(Выборка.Ссылка);
		
		ДанныеСтроки = Объект.ПобочныеИзделия.Добавить();
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);
		ДанныеСтроки.Распоряжение = Выборка.Ссылка;
		
		Если НовыеЭтапы.Получить(Выборка.Ссылка) <> Неопределено Тогда
			ДанныеСтроки.КодСтроки = 0;
		КонецЕсли; 
		Если ДанныеСтроки.ДатаПроизводства = '000101010000' Тогда
			ДанныеСтроки.ДатаПроизводства = ДанныеЭтапа.ДатаПроизводства;
		КонецЕсли; 
		
		Объект.МаксимальныйКодСтрокиИзделия = Макс(ДанныеСтроки.КодСтроки, Объект.МаксимальныйКодСтрокиИзделия);
		
	КонецЦикла;
	
	// ОбеспечениеМатериаламиИРаботами
	Выборка = Результат[2].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеЭтапа = ДобавленныеЭтапы.Получить(Выборка.Ссылка);
		
		ДанныеСтроки = Объект.ОбеспечениеМатериаламиИРаботами.Добавить();
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);
		
		ДанныеСтроки.Распоряжение = Выборка.Ссылка;
		
		Если НовыеЭтапы.Получить(Выборка.Ссылка) <> Неопределено Тогда
			ДанныеСтроки.КодСтроки = 0;
		КонецЕсли;
		
		Объект.МаксимальныйКодСтрокиОбеспечение = Макс(ДанныеСтроки.КодСтроки, Объект.МаксимальныйКодСтрокиОбеспечение);
		
	КонецЦикла;
	
	// НаборыМатериаловИРабот
	Выборка = Результат[3].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеЭтапа = ДобавленныеЭтапы.Получить(Выборка.Ссылка);
		
		ДанныеСтроки = Объект.НаборыМатериаловИРабот.Добавить();
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);
		
		ДанныеСтроки.Распоряжение = Выборка.Ссылка;
		
	КонецЦикла;
	
КонецПроцедуры

#Область Серии

// Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "";
	
	Возврат ИменаРеквизитов;
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//  Объект	 - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
// 
// Возвращаемое значение:
//  Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = Новый Структура;
	
	#Область ОбеспечениеМатериаламиИРаботами
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Обработка.РедактированиеЭтаповПроизводства";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары      = "ОбеспечениеМатериаламиИРаботами";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии       = "ОбеспечениеМатериаламиИРаботами";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура());
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура());
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Склад");
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Отменено");
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКлиенту);
	
	ПараметрыУказанияСерийТЧ.ЭтоЗаказ = Истина;
	ПараметрыУказанияСерийТЧ.ПланированиеОтгрузки = Истина;
	ПараметрыУказанияСерийТЧ.РегистрироватьСерии = Ложь;
	
	ПараметрыУказанияСерий.Вставить("ОбеспечениеМатериаламиИРаботами", ПараметрыУказанияСерийТЧ);
	#КонецОбласти
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.ИмяТЧТовары = "ОбеспечениеМатериаламиИРаботами" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийОбеспечениеМатериаламиИРаботами();
	КонецЕсли;                                                        
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

// Возвращает параметры выбора спецификаций для изделий, указанных в документе.
//
// Параметры:
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров выбора спецификаций.
//
// Возвращаемое значение:
//   Структура - Структура, переопределяющая умолчания, заданные в функции УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций().
//
Функция ПараметрыВыбораСпецификаций(Объект) Экспорт
	
	ПараметрыВыбораСпецификаций = Новый Структура;
	
	ПараметрыВыбораСпецификацийТЧ = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций();
	
	ПараметрыВыбораСпецификацийТЧ.ДоступныеТипы.Добавить(Перечисления.ТипыПроизводственныхПроцессов.Сборка);
	ПараметрыВыбораСпецификацийТЧ.ДоступныеТипы.Добавить(Перечисления.ТипыПроизводственныхПроцессов.Ремонт);
	
	ПараметрыВыбораСпецификацийТЧ.ДоступныеСтатусы.Добавить(Перечисления.СтатусыСпецификаций.Действует);
	
	Реквизиты    = "ПутьКДанным, РежимИзменения";
	РежимОчищать = РежимИзмененияСвязанногоЗначения.Очищать;
	
	СвязиПараметровВыбора = Новый Структура(УправлениеДаннымиОбИзделияхКлиентСервер.ПоляСтруктурыДанныхОбИзделииДляВыбораСпецификации());
	
	СвязиПараметровВыбора.Номенклатура   = Новый Структура(Реквизиты, "РедактированиеЭтапов.ОбеспечениеМатериаламиИРаботами.Номенклатура", РежимОчищать);
	СвязиПараметровВыбора.Характеристика = "РедактированиеЭтапов.ОбеспечениеМатериаламиИРаботами.Характеристика";
	
	ПараметрыВыбораСпецификацийТЧ.СвязиПараметровВыбора.Вставить("РедактированиеЭтапов.ОбеспечениеМатериаламиИРаботами.Спецификация", СвязиПараметровВыбора);
	
	ПараметрыВыбораСпецификаций.Вставить("ОбеспечениеМатериаламиИРаботами", ПараметрыВыбораСпецификацийТЧ);
	
	Возврат ПараметрыВыбораСпецификаций;
	
КонецФункции

// Имена реквизитов, от значений которых зависят параметры выбора спецификаций
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровВыбораСпецификаций() Экспорт
	
	ИменаРеквизитов = "";
	Возврат ИменаРеквизитов;
	
КонецФункции

// Формирует структуру параметров документа для встраивания документа в механимы обеспечения.
//
// Возвращаемое значение:
//  см. ОбеспечениеВДокументахСервер.ДоступныеОстаткиПараметрыВстраивания
//
Функция ДоступныеОстаткиПараметрыВстраивания() Экспорт
	
	ПараметрыВстраивания = ОбеспечениеВДокументахСервер.ДоступныеОстаткиПараметрыВстраивания();
	ПараметрыВстраивания.ОчищаемыеРеквизиты = "КодСтроки";
	
	// Обновление колонки "Доступно".
	ПараметрыВстраивания.ИмяТаблицыФормы = "РедактированиеЭтаповОбеспечениеМатериаламиИРаботами";
	
	// Условное оформление.
	ЭлементыФормы = ПараметрыВстраивания.УсловноеОформление.ЭлементыФормы;
	ЭлементыФормы.ВариантОбеспечения = "РедактированиеЭтаповОбеспечениеМатериаламиИРаботамиВариантОбеспечения";
	ЭлементыФормы.Доступно           = "РедактированиеЭтаповОбеспечениеМатериаламиИРаботамиДоступно";
	ЭлементыФормы.Серия              = "РедактированиеЭтаповОбеспечениеМатериаламиИРаботамиСерия";
	ЭлементыФормы.Обособленно        = "РедактированиеЭтаповОбеспечениеМатериаламиИРаботамиОбособленно";
	ЭлементыФормы.Склад              = "РедактированиеЭтаповОбеспечениеМатериаламиИРаботамиСклад";
	
	ПутиКДанным = ПараметрыВстраивания.УсловноеОформление.ПутиКДанным;
	ПутиКДанным.ПерераспределятьЗапасы = "РедактированиеЭтапов.ОбеспечениеМатериаламиИРаботами.ПерераспределятьЗапасы";
	ПутиКДанным.ЗапретРедактирования = "РедактированиеЭтапов.ОбеспечениеМатериаламиИРаботами.Отменено";
	ПутиКДанным.ТипНоменклатуры = "РедактированиеЭтапов.ОбеспечениеМатериаламиИРаботами.ТипНоменклатуры";
	
	// Выбор варианта обеспечения.
	Связи = ПараметрыВстраивания.СвязиПараметровВыбораВариантаОбеспечения;
	Связи.Доступно              = "Элементы.РедактированиеЭтаповОбеспечениеМатериаламиИРаботами.ТекущиеДанные.Доступно";
	Связи.КоличествоУпаковок    = "Элементы.РедактированиеЭтаповОбеспечениеМатериаламиИРаботами.ТекущиеДанные.КоличествоУпаковок";
	Связи.Количество            = "Элементы.РедактированиеЭтаповОбеспечениеМатериаламиИРаботами.ТекущиеДанные.Количество";
	Связи.ОтгружатьЕслиДоступно = "Элементы.РедактированиеЭтаповОбеспечениеМатериаламиИРаботами.ТекущиеДанные.ОтгружатьЕслиДоступно";
	Связи.Обособленно           = "Элементы.РедактированиеЭтаповОбеспечениеМатериаламиИРаботами.ТекущиеДанные.Обособленно";
	Связи.ТипНоменклатуры       = "Элементы.РедактированиеЭтаповОбеспечениеМатериаламиИРаботами.ТекущиеДанные.ТипНоменклатуры";
	Связи.Упаковка              = "Элементы.РедактированиеЭтаповОбеспечениеМатериаламиИРаботами.ТекущиеДанные.Упаковка";
	Связи.Номенклатура          = "Элементы.РедактированиеЭтаповОбеспечениеМатериаламиИРаботами.ТекущиеДанные.Номенклатура";
	Связи.ВариантОбеспечения    = "Элементы.РедактированиеЭтаповОбеспечениеМатериаламиИРаботами.ТекущиеДанные.ВариантОбеспечения";
	Связи.Склад                 = "Элементы.РедактированиеЭтаповОбеспечениеМатериаламиИРаботами.ТекущиеДанные.Склад";
	Связи.НесколькоСкладов      = Истина;
	
	// Имя регистра оформления отгрузки.
	ПараметрыВстраивания.ИмяРегистраОформленияОтгрузки = "ЗаказыКлиентов";
	
	// Временная таблица данных документа.
	ПараметрыВстраивания.ИмяОбъекта = "Форма";
	ПараметрыВстраивания.ИмяТаблицы = "Форма.РедактированиеЭтапов.ОбеспечениеМатериаламиИРаботами";
	
	ПараметрыВстраивания.ОписаниеПолученияДанныхДокумента =
		"ВЫБРАТЬ
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Подразделение КАК Подразделение,
		|	ТабЧасть.Склад КАК Склад,
		|	ТабЧасть.Назначение КАК Назначение,
		|	РеквизитыЗаказа.Ссылка КАК ЗаказНаОтгрузку,
		|	ТабЧасть.ВариантОбеспечения  КАК ВариантОбеспечения,
		|	ТабЧасть.Обособленно КАК Обособленно,
		|	ТабЧасть.Количество КАК Количество,
		|	ТабЧасть.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ТабЧасть.Упаковка КАК Упаковка,
		|	Реквизиты.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется) КАК ГотовКОбеспечению,
		|	Реквизиты.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется) КАК ГотовКОтгрузке,
		|	ВЫБОР КОГДА РеквизитыОбработки.НеОтгружатьЧастями ТОГДА
		|				РеквизитыОбработки.ДатаОтгрузки
		|			ИНАЧЕ
		|				ТабЧасть.ДатаОтгрузки
		|		КОНЕЦ КАК ЖелаемаяДатаОтгрузки,
		|	ТабЧасть.Серия КАК Серия,
		|	ТабЧасть.Отменено КАК Отменено,
		|	ТабЧасть.КодСтроки КАК КодСтроки,
		|	ТабЧасть.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.Дата КАК ДатаДокумента,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаСкладов,
		|	РеквизитыЗаказа.Приоритет КАК Приоритет,
		|	ВЫБОР КОГДА РеквизитыОбработки.НеОтгружатьЧастями ТОГДА
		|				РеквизитыОбработки.ДатаОтгрузки
		|			ИНАЧЕ
		|				НЕОПРЕДЕЛЕНО
		|		КОНЕЦ КАК ДатаОтгрузкиВсехСтрокОднойДатой
		|ПОМЕСТИТЬ ВременнаяТаблицаДанныхДокумента
		|ИЗ
		|	Форма.РедактированиеЭтапов.ОбеспечениеМатериаламиИРаботами КАК ТабЧасть
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Форма.РедактированиеЭтапов.Этапы КАК Реквизиты
		|		ПО Реквизиты.Ссылка = ТабЧасть.Распоряжение
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Форма.РедактированиеЭтапов КАК РеквизитыОбработки
		|		ПО ИСТИНА
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Форма.Объект КАК РеквизитыЗаказа
		|		ПО ИСТИНА";
	
	// Шаблон сериализации данных формы.
	ОбеспечениеМатериаламиИРаботами = Новый Структура();
	ОбеспечениеМатериаламиИРаботами.Вставить("НомерСтроки",        Новый ОписаниеТипов("Число"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Номенклатура",       Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Характеристика",     Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Склад",              Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Подразделение",      Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Назначение",         Новый ОписаниеТипов("СправочникСсылка.Назначения"));
	ОбеспечениеМатериаламиИРаботами.Вставить("ВариантОбеспечения", Новый ОписаниеТипов("ПеречислениеСсылка.ВариантыОбеспечения"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Обособленно",        Новый ОписаниеТипов("Булево"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Производится",       Новый ОписаниеТипов("Булево"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Количество",         Новый ОписаниеТипов("Число"));
	ОбеспечениеМатериаламиИРаботами.Вставить("КоличествоУпаковок", Новый ОписаниеТипов("Число"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Упаковка",           Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	ОбеспечениеМатериаламиИРаботами.Вставить("ДатаОтгрузки",       Новый ОписаниеТипов("Дата"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Серия",              Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ОбеспечениеМатериаламиИРаботами.Вставить("КодСтроки",          Новый ОписаниеТипов("Число"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Распоряжение",       Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Отменено",           Новый ОписаниеТипов("Булево"));
	
	Этапы = Новый Структура();
	Этапы.Вставить("Статус",                  Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыЭтаповПроизводства2_2"));
	Этапы.Вставить("Ссылка",                  Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	Этапы.Вставить("Дата",                    Новый ОписаниеТипов("Дата"));
	
	РедактированиеЭтапов = Новый Структура();
	РедактированиеЭтапов.Вставить("НеОтгружатьЧастями", Новый ОписаниеТипов("Булево"));
	РедактированиеЭтапов.Вставить("ДатаОтгрузки",       Новый ОписаниеТипов("Дата"));
	РедактированиеЭтапов.Вставить("ОбеспечениеМатериаламиИРаботами", ОбеспечениеМатериаламиИРаботами);
	РедактированиеЭтапов.Вставить("Этапы",                           Этапы);
	
	Объект = Новый Структура();
	Объект.Вставить("Приоритет", Новый ОписаниеТипов("СправочникСсылка.Приоритеты"));
	Объект.Вставить("Ссылка",    Новый ОписаниеТипов("ДокументСсылка.ЗаказПереработчику"));
	Объект.Вставить("Статус",    Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыЗаказовПереработчикам"));
	
	ПараметрыВстраивания.ШаблонСериализацииДанныхФормы.Вставить("РедактированиеЭтапов", РедактированиеЭтапов);
	ПараметрыВстраивания.ШаблонСериализацииДанныхФормы.Вставить("Объект", Объект);
	
	ПараметрыВстраивания.ПоляСвязиТабличныхЧастей.Вставить("Этапы", Новый Структура("Ссылка", "Распоряжение"));
	
	ИменаЭлементов = ПараметрыВстраивания.ИменаЭлементов;
	ИменаЭлементов.СтраницыГиперссылкаСостояниеОбеспечения = "МатериалыЭтаповСтраницыГиперссылкаСостояниеОбеспечения";
	ИменаЭлементов.СтраницаГиперссылкаСостояниеОбеспечения = "МатериалыЭтаповСтраницаГиперссылкаСостояниеОбеспечения";
	ИменаЭлементов.ГиперссылкаСостояниеОбеспечения = "МатериалыЭтаповГиперссылкаСостояниеОбеспечения";
	ИменаЭлементов.СтраницаГиперссылкаСостояниеОбеспеченияОтгружается = "МатериалыЭтаповСтраницаГиперссылкаСостояниеОбеспеченияОтгружается";
	ИменаЭлементов.ГиперссылкаСостояниеОбеспеченияОтгружается = "МатериалыЭтаповГиперссылкаСостояниеОбеспеченияОтгружается";
	ИменаЭлементов.СтраницаГиперссылкаСостояниеОбеспеченияПроблема = "МатериалыЭтаповСтраницаГиперссылкаСостояниеОбеспеченияПроблема";
	ИменаЭлементов.ГиперссылкаСостояниеОбеспеченияПроблема = "МатериалыЭтаповГиперссылкаСостояниеОбеспеченияПроблема";
	ИменаЭлементов.СтраницаГиперссылкаСостояниеОбеспеченияСЗаголовком = "МатериалыЭтаповСтраницаГиперссылкаСостояниеОбеспеченияСЗаголовком";
	ИменаЭлементов.ГиперссылкаСостояниеОбеспеченияСЗаголовком = "МатериалыЭтаповГиперссылкаСостояниеОбеспеченияСЗаголовком";
	
	Возврат ПараметрыВстраивания;
	
КонецФункции

#Область Округление

// Возвращает параметры для округления
// 
// Возвращаемое значение:
// 	Структура - элементы содержат структуру параметров округления 
// 				см. НоменклатураСервер.ПараметрыОкругленияКоличестваШтучныхТоваров
// 
Функция ПараметрыТЧДляОкругления() Экспорт		

	ПараметрыТЧ = Новый Структура;
	
	ИмяТЧ = "ВыходныеИзделия";
	ИмяПоляСклад = "Получатель";
	ПараметрыТЧ.Вставить(ИмяТЧ, НоменклатураСервер.ПараметрыПроверкиЗаполненияКоличества());
	ПараметрыТЧ[ИмяТЧ].ИмяТЧ = ИмяТЧ;
	ПараметрыТЧ[ИмяТЧ].ПутьКДанным = "РедактированиеЭтапов";
	ПараметрыТЧ[ИмяТЧ].ДополнительныеПоля.Вставить(ИмяПоляСклад, ИмяТЧ + "." + ИмяПоляСклад);
	ПараметрыТЧ[ИмяТЧ].УсловиеОтбораСтрокПоДополнительнымПолям = 
			ПроизводствоСервер.УсловиеОтбораСтрокДляОкругления(ИмяТЧ, ИмяПоляСклад);
		
	ИмяТЧ = "ПобочныеИзделия";
	ИмяПоляСклад = "Получатель";
	ПараметрыТЧ.Вставить(ИмяТЧ, НоменклатураСервер.ПараметрыПроверкиЗаполненияКоличества());
	ПараметрыТЧ[ИмяТЧ].ИмяТЧ = ИмяТЧ;
	ПараметрыТЧ[ИмяТЧ].ПутьКДанным = "РедактированиеЭтапов";
	ПараметрыТЧ[ИмяТЧ].ДополнительныеПоля.Вставить(ИмяПоляСклад, ИмяТЧ + "." + ИмяПоляСклад);
	ПараметрыТЧ[ИмяТЧ].УсловиеОтбораСтрокПоДополнительнымПолям = 
			ПроизводствоСервер.УсловиеОтбораСтрокДляОкругления(ИмяТЧ, ИмяПоляСклад);
	
	ИмяТЧ = "ОбеспечениеМатериаламиИРаботами";
	ИмяПоляСклад = "Склад";
	ПараметрыТЧ.Вставить(ИмяТЧ, НоменклатураСервер.ПараметрыПроверкиЗаполненияКоличества());
	ПараметрыТЧ[ИмяТЧ].ИмяТЧ = ИмяТЧ;
	ПараметрыТЧ[ИмяТЧ].ПутьКДанным = "РедактированиеЭтапов";
	ПараметрыТЧ[ИмяТЧ].ДополнительныеПоля.Вставить(ИмяПоляСклад, ИмяТЧ + "." + ИмяПоляСклад);
	ПараметрыТЧ[ИмяТЧ].УсловиеОтбораСтрокПоДополнительнымПолям = 
			ПроизводствоСервер.УсловиеОтбораСтрокДляОкругления(ИмяТЧ, ИмяПоляСклад);
	
	Возврат ПараметрыТЧ;

КонецФункции	

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийОбеспечениеМатериаламиИРаботами()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Серия,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки,
	|	Товары.ВариантОбеспечения,
	|	Товары.Отменено
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА Товары.Отменено
	|				ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|				ИЛИ НЕ Товары.ВариантОбеспечения В (
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить))
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					КОГДА Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|						ТОГДА 15
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					КОГДА Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|						ТОГДА 11
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО (ПолитикиУчетаСерий.Склад = Товары.Склад)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки,
	|	Статусы.СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	Статусы.НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПараметрыРедактированияЭтапа() Экспорт
	
	ПараметрыРедактированияЭтапа = УправлениеПроизводством.ПараметрыРедактированияЭтапа("Обработка");
	
	ПараметрыРедактированияЭтапа.ИмяРеквизитаОбъект = "РедактированиеЭтапов";
	ПараметрыРедактированияЭтапа.ИмяРеквизитаСсылка = "Распоряжение";
	
	ПараметрыРедактированияЭтапа.ИмяРеквизитаПараметрыУказанияСерий = "ПараметрыУказанияСерийРедактированиеЭтапов";
	
	ПараметрыРедактированияЭтапа.ЭтоЗаказПереработчику = Истина;
	
	Возврат ПараметрыРедактированияЭтапа;
	
КонецФункции

#КонецОбласти

#КонецЕсли

//-- НЕ УТКА
