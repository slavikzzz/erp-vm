&НаКлиенте
Перем КонтекстЭДОКлиент;

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПоказыватьПустыеДокументыВыгрузки = Параметры.мОтображатьПустые;
	ФильтроватьВидыОтчетовПоПериоду   = Параметры.мФильтроватьВидыОтчетовПоПериоду;
	
	мЗадаватьВопросПриЗакрытии = Истина;
	
	Если НЕ Параметры.ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417 Тогда
		Элементы.НастройкиПечатиМашиночитаемыхФорм.Видимость = Ложь;
	КонецЕсли;
		
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура УправлениеЭУПанельУстановкаКомпонентыПечати()
	
	ВебБраузер = РегламентированнаяОтчетностьКлиент.ВебБраузер();
	
	Если ЗначениеЗаполнено(ВебБраузер)
	   И НЕ ВебБраузер = "MSIE" Тогда
		
		Элементы.КомпонентаПечати.Видимость = Ложь;
		Элементы.НастройкиШаблонов.Видимость = Ложь;
		Элементы.НастройкиПечатиМашиночитаемыхФорм.Заголовок = "";
		
		Возврат;
		
	КонецЕсли;	
	
	Если РегламентированнаяОтчетностьКлиент.КомпонентаПечатиМашиночитаемыхФормДоступна() Тогда
		Элементы.КомпонентаПечати.ТекущаяСтраница = Элементы.КомпонентаПечати.ПодчиненныеЭлементы.ПереустановкаКомпонентыПечати;
	Иначе
		Элементы.КомпонентаПечати.ТекущаяСтраница = Элементы.КомпонентаПечати.ПодчиненныеЭлементы.УстановкаКомпонентыПечати;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеЭУПанельУстановкаКомпонентыПечати();
		
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность И мЗадаватьВопросПриЗакрытии Тогда
		
		Отказ = Истина;
		
		Если ЗавершениеРаботы Тогда
		
			ТекстПредупреждения = НСтр("ru = 'Настройки были изменены.
											|Перед завершением работы рекомендуется их сохранить,
											|иначе измененные настройки будут утеряны.';
											|en = 'Settings were changed. 
											|Save the changes before exiting,
											|otherwise, the changed settings will be lost.'");
			
			Возврат;
		
		КонецЕсли;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Сохранить настройки?';
												|en = 'Save settings?'"), РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Если СохранитьНастройки() Тогда
			мЗадаватьВопросПриЗакрытии = Ложь;
			Закрыть(Истина);
		КонецЕсли;
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		мЗадаватьВопросПриЗакрытии = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция СохранитьНастройки()
	
	ВладелецФормы.мОтображатьПустые = ПоказыватьПустыеДокументыВыгрузки;
	ВладелецФормы.мФильтроватьВидыОтчетовПоПериоду = ФильтроватьВидыОтчетовПоПериоду;
		
	Возврат Истина;
	
КонецФункции // СохранитьНастройки()

&НаКлиенте
Процедура СохранитьИЗакрыть(Команда)
	
	Если НЕ СохранитьНастройки() Тогда
		Возврат;
	КонецЕсли;
	
	мЗадаватьВопросПриЗакрытии = Ложь;
	Закрыть(Истина);
	
КонецПроцедуры // СохранитьИЗакрыть()

&НаКлиенте
Процедура КомпонентаПечатиНадписьЗдесьНажатие(Элемент)
	ОО = Новый ОписаниеОповещения("КомпонентаПечатиНадписьЗдесьНажатиеПослеПодключенияРасширения", ЭтотОбъект);
	НачатьПодключениеРасширенияРаботыСФайлами(ОО);
КонецПроцедуры

&НаКлиенте
Процедура КомпонентаПечатиНадписьЗдесьНажатиеПослеПодключенияРасширения(Подключено, ПараметрыСохранения) Экспорт
	Если Подключено Тогда
		КаталогКомпонентыМЧБ = "";
		ДистрибутивКомпонентыПечатиМашиночитаемыхФорм = Новый СписокЗначений;
		РегламентированнаяОтчетностьВызовСервера.ПолучитьДистрибутивКомпонентыПечатиМашиночитаемыхФорм(ДистрибутивКомпонентыПечатиМашиночитаемыхФорм);
		РегламентированнаяОтчетностьКлиент.УстановитьКомпонентуПечатиМашиночитаемыхФорм(Истина, ДистрибутивКомпонентыПечатиМашиночитаемыхФорм, КаталогКомпонентыМЧБ);
		УправлениеЭУПанельУстановкаКомпонентыПечати();
	Иначе
		ПоказатьПредупреждение(,НСтр("ru = 'Не удалось подключить расширение работы с файлами.
			|Установка компоненты печати машиночитаемых форм невозможна.';
			|en = 'Cannot attach the file system extension.
			|Cannot install component for printing machine-readable forms.'"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НадписьЗдесьНажатие(Элемент)
	
	ОткрытьФорму("РегистрСведений.ШаблоныПечатиМашиночитаемыхФорм.Форма.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьЗдесьНастройкиДОСФНСНажатие(Элемент)
	
	Если КонтекстЭДОКлиент = Неопределено Тогда 
		//// инициализируем контекст ЭДО - модуль обработки
		ОписаниеОповещения = Новый ОписаниеОповещения("НадписьЗдесьНастройкиДОСФНСНажатиеЗавершение", ЭтотОбъект);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	Иначе
		ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.Настройки");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьЗдесьНастройкиДОСФНСНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	Если КонтекстЭДОКлиент = Неопределено Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ТекстОшибки);
	Иначе
		ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.Настройки");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьЗдесьНастройкиШаблоновЭВФНажатие(Элемент)
	
	ОткрытьФорму("РегистрСведений.ШаблоныЭВФОтчетовСтатистики.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьЗдесьНастройкиФорматаВыгрузкиОтчетовСтатистикиНажатие(Элемент)
	
	Если ЭтаФорма.ВладелецФормы.Организация.Количество() > 0 Тогда
		Организация = ЭтаФорма.ВладелецФормы.Организация[0].Значение;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПоказатьФормуНастроекФорматаВыгрузкиСтатистическойОтчетностиВЭлектронномВиде(Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьЗдесьНастройкиМеханизмаОнлайнСервисовРОНажатие(Элемент)
	
	ОткрытьФорму("Обработка.ОнлайнСервисыРегламентированнойОтчетности.Форма.НастройкиМеханизмаОнлайнСервисов");
	
КонецПроцедуры

#КонецОбласти
