
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьИлиСнятьФлажки(Пометка)
	
	Для Каждого Элемент Из ТаблицаЗначений Цикл
		
		Элемент.Пометка = Пометка;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьИлиСнятьФлажки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьИлиСнятьФлажки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если Элементы.ТаблицаЗначений.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрКод = "";
	СтрНазвание = "";
	
	ОтмеченныеСтроки = ТаблицаЗначений.НайтиСтроки(Новый Структура("Пометка", Истина));
	Для Каждого ТекСтрока Из ОтмеченныеСтроки Цикл
		СтрКод = СтрКод + ?(ПустаяСтрока(СтрКод), "", СимволРазделительЗначений) + ТекСтрока.Код;
		СтрНазвание = СтрНазвание + ?(ПустаяСтрока(СтрНазвание), "", СимволРазделительЗначений) + ТекСтрока.Название;
	КонецЦикла;
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("Код",      СтрКод);
	ВозвращаемоеЗначение.Вставить("Название", СтрНазвание);
	
	Закрыть(ВозвращаемоеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗначенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.ТаблицаЗначений.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаЗначений[ВыбраннаяСтрока].Пометка = НЕ ТаблицаЗначений[ВыбраннаяСтрока].Пометка;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Заголовок = Параметры.Заголовок;
	
	Если ЭтоАдресВременногоХранилища(Параметры.ТаблицаЗначений) Тогда
		ВременнаяТаблица = ПолучитьИзВременногоХранилища(Параметры.ТаблицаЗначений);
		Если ТипЗнч(ВременнаяТаблица) = Тип("ТаблицаЗначений") Тогда
			ТаблицаЗначений.Загрузить(ВременнаяТаблица);
		КонецЕсли;
	Иначе
		КопироватьДанныеФормы(Параметры.ТаблицаЗначений, ТаблицаЗначений);
	КонецЕсли;
	
	СимволРазделительЗначений = Параметры.СимволРазделительЗначений;
	Если СимволРазделительЗначений = "" Тогда
		СимволРазделительЗначений = "/";
	КонецЕсли;
	
	Для Каждого ЭлементСтруктуры Из Параметры.СтруктураДляПоиска Цикл
		ИмяКолонки = ЭлементСтруктуры.Ключ;
		ЗначенияКолонки = СтрРазделить(ЭлементСтруктуры.Значение, СимволРазделительЗначений);
		Для Каждого ЗначениеКолонки Из ЗначенияКолонки Цикл
			НайденныеСтроки = ТаблицаЗначений.НайтиСтроки(Новый Структура(ИмяКолонки, ЗначениеКолонки));
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НайденнаяСтрока.Пометка = Истина;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ИсходнаяСтрока = ТаблицаЗначений.НайтиСтроки(Новый Структура("Пометка", Истина));
	Если ИсходнаяСтрока.Количество() > 0 Тогда
		Элементы.ТаблицаЗначений.ТекущаяСтрока = ИсходнаяСтрока[0].ПолучитьИдентификатор();
	КонецЕсли;
	
	Элементы.ТаблицаЗначений.Шапка = НЕ Параметры.ОтключитьВидимостьШапкиТаблицы;
	
	Если ЗначениеЗаполнено(Параметры.НаимКолонкиКод) Тогда
		
		Элементы.ТаблицаЗначенийКод.Заголовок = Параметры.НаимКолонкиКод;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.НаимКолонкиНазвание) Тогда
		
		Элементы.ТаблицаЗначенийНазвание.Заголовок = Параметры.НаимКолонкиНазвание;
		
	КонецЕсли;
	
	Элементы.ТаблицаЗначенийКод.Видимость      = НЕ Параметры.ОтключитьВидимостьКолонкиКод;
	Элементы.ТаблицаЗначенийНазвание.Видимость = НЕ Параметры.ОтключитьВидимостьКолонкиНазвание;
	
	Если Параметры.ОтключитьВидимостьКолонкиКод = Истина
		И Параметры.ОтключитьВидимостьКолонкиНазвание = Ложь Тогда
		
		Элементы.ТаблицаЗначенийНазвание.АвтоМаксимальнаяШирина = Ложь;
		Элементы.ТаблицаЗначенийНазвание.Ширина = 50;
		Элементы.ТаблицаЗначенийНазвание.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Лево;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти