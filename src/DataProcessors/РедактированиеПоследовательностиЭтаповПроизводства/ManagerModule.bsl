
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область БлокировкаДанных

Функция ЗаблокироватьДокументы(Знач СписокДокументов, Знач УникальныйИдентификатор, ТекстОшибки = "") Экспорт
	
	Для каждого Документ Из СписокДокументов Цикл
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Документ.Ссылка, Документ.ВерсияДанных, УникальныйИдентификатор);
		Исключение
			КраткоеПредставлениеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			ТекстОшибки = НСтр("ru = 'Не удалось заблокировать объект %1, по причине:
												|%2';
												|en = 'Cannot lock the %1 object. Reason:
												|%2'");
			ТекстОшибки = СтрШаблон(ТекстОшибки, Документ.Ссылка, КраткоеПредставлениеОшибки);
			Возврат Ложь;
		КонецПопытки;
	КонецЦикла;
	Возврат Истина;
	
КонецФункции

// Разблокирует документы.
//
// Параметры:
//  СписокДокументов        - Массив из Структура - содержит:
//                                       * Ссылка       - ДокументСсылка.ЭтапПроизводства2_2 - 
//                                       * ВерсияДанных - Строка -
//  УникальныйИдентификатор - УникальныйИдентификатор -
//
Процедура РазблокироватьДокументы(Знач СписокДокументов, Знач УникальныйИдентификатор) Экспорт
	
	Для каждого Документ Из СписокДокументов Цикл
		РазблокироватьДанныеДляРедактирования(Документ.Ссылка, УникальныйИдентификатор);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Серии

// Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры:
//  Объект	 - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
// 
// Возвращаемое значение:
//  Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = Новый Структура;
	
	НастройкиПроизводства = ПроизводствоСервер.ИспользованиеСерийВПроизводстве22();
	
	#Область ВыходныеИзделия
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Обработка.РедактированиеПоследовательностиЭтаповПроизводства";
	
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Получатель");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Произведено");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("ДатаПроизводства");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Отменено");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Ссылка");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Подразделение");
	
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = "Получатель";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары = "ВыходныеИзделия";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии = "ВыходныеИзделияСерии";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям =
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура())
		ИЛИ НастройкиПроизводства.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  =
		ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура())
		ИЛИ НастройкиПроизводства.ИспользоватьСерииНоменклатуры;
	
	ПараметрыУказанияСерийТЧ.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПродукцииИзПроизводства);
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Произведено");
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Отменено");
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("ПроизводствоНаСтороне");
	
	ПараметрыУказанияСерийТЧ.ИмяИсточникаЗначенийВФормеОбъекта = "ТекущиеДанные";
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	
	ПараметрыУказанияСерий.Вставить("ВыходныеИзделия", ПараметрыУказанияСерийТЧ);
	
	#КонецОбласти
	
	#Область ПобочныеИзделия
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Обработка.РедактированиеПоследовательностиЭтаповПроизводства";
	
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Получатель");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Произведено");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("ДатаПроизводства");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Отменено");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Ссылка");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Подразделение");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("ВладелецИзделия");
	
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = "Получатель";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары = "ПобочныеИзделия";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии = "ПобочныеИзделияСерии";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям =
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура())
		ИЛИ НастройкиПроизводства.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  =
		ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура())
		ИЛИ НастройкиПроизводства.ИспользоватьСерииНоменклатуры;
	
	ПараметрыУказанияСерийТЧ.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПродукцииИзПроизводства);
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Произведено");
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Отменено");
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("ПроизводствоНаСтороне");
	ПараметрыУказанияСерийТЧ.ИмяИсточникаЗначенийВФормеОбъекта = "ТекущиеДанные";
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	
	ПараметрыУказанияСерий.Вставить("ПобочныеИзделия", ПараметрыУказанияСерийТЧ);
	#КонецОбласти
	
	#Область РасходМатериаловИРабот
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Обработка.РедактированиеПоследовательностиЭтаповПроизводства";
	
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = "Подразделение";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары = "РасходМатериаловИРабот";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии  = "РасходМатериаловИРабот";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям =
		НастройкиПроизводства.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры =
		НастройкиПроизводства.ИспользоватьСерииНоменклатуры;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПотреблениеМатериаловПриПроизводстве);
	
	ПараметрыУказанияСерийТЧ.ИмяИсточникаЗначенийВФормеОбъекта = "ТекущиеДанные";
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	ПараметрыУказанияСерийТЧ.РегистрироватьСерии = Истина;
	
	ПараметрыУказанияСерийТЧ.ПланированиеОтгрузки = Ложь;
	ПараметрыУказанияСерийТЧ.ПланированиеОтбора   = Ложь;
	
	ПараметрыУказанияСерий.Вставить("РасходМатериаловИРабот", ПараметрыУказанияСерийТЧ);
	#КонецОбласти
	
	#Область ЭкономияМатериалов
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Обработка.РедактированиеПоследовательностиЭтаповПроизводства";
	
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Получатель");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("ДатаОперации");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Ссылка");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Подразделение");
	
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары  = "ЭкономияМатериалов";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии   = "ЭкономияМатериаловСерии";
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = "Получатель";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям =
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура())
		ИЛИ НастройкиПроизводства.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  =
		ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура())
		ИЛИ НастройкиПроизводства.ИспользоватьСерииНоменклатуры;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВозвратМатериаловИзПроизводстваПриемка);
	
	ПараметрыУказанияСерийТЧ.ИмяИсточникаЗначенийВФормеОбъекта = "ТекущиеДанные";
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	ПараметрыУказанияСерийТЧ.РегистрироватьСерии = Истина;
	
	ПараметрыУказанияСерийТЧ.ПланированиеОтгрузки = Ложь;
	ПараметрыУказанияСерийТЧ.ПланированиеОтбора   = Ложь;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	
	ПараметрыУказанияСерий.Вставить("ЭкономияМатериалов", ПараметрыУказанияСерийТЧ);
	#КонецОбласти

	#Область ОбеспечениеМатериаламиИРаботами
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Обработка.РедактированиеПоследовательностиЭтаповПроизводства";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары      = "ОбеспечениеМатериаламиИРаботами";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии       = "ОбеспечениеМатериаламиИРаботами";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям =
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура())
		ИЛИ НастройкиПроизводства.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  =
		ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура())
		ИЛИ НастройкиПроизводства.ИспользоватьСерииНоменклатуры;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПередачаВПроизводствоОтгрузка);
	
	Если Объект.Этапы.НайтиСтроки(Новый Структура("ПроизводствоНаСтороне", Истина)).Количество() <> 0 Тогда
		ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКлиенту);
	КонецЕсли;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Склад");
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Подразделение");
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("ПроизводствоНаСтороне");
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Отменено");
	
	ПараметрыУказанияСерийТЧ.ИмяИсточникаЗначенийВФормеОбъекта = "ТекущиеДанные";
	
	ПараметрыУказанияСерийТЧ.ЭтоЗаказ = Истина;
	ПараметрыУказанияСерийТЧ.ПланированиеОтгрузки = Истина;
	ПараметрыУказанияСерийТЧ.РегистрироватьСерии = Ложь;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	
	ПараметрыУказанияСерий.Вставить("ОбеспечениеМатериаламиИРаботами", ПараметрыУказанияСерийТЧ);
	#КонецОбласти
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.ИмяТЧТовары = "ВыходныеИзделия" 
		ИЛИ ПараметрыУказанияСерий.ИмяТЧТовары = "ПобочныеИзделия" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийВыходныеИзделия();
	ИначеЕсли ПараметрыУказанияСерий.ИмяТЧТовары = "ОбеспечениеМатериаламиИРаботами" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийОбеспечениеМатериаламиИРаботами();
	ИначеЕсли ПараметрыУказанияСерий.ИмяТЧТовары = "РасходМатериаловИРабот" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийРасходМатериаловИРабот();
	ИначеЕсли ПараметрыУказанияСерий.ИмяТЧТовары = "ЭкономияМатериалов" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийЭкономияМатериалов();
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

// Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	Возврат "Этапы";
	
КонецФункции

#КонецОбласти

#Область Прочее

// Возвращает параметры выбора спецификаций для изделий, указанных в документе.
//
// Параметры:
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров выбора спецификаций.
//
// Возвращаемое значение:
//   Структура - Структура, переопределяющая умолчания, заданные в функции УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций().
//
Функция ПараметрыВыбораСпецификаций(Объект) Экспорт
	
	ПараметрыВыбораСпецификаций = Новый Структура;
	
	Реквизиты    = "ПутьКДанным, РежимИзменения";
	РежимОчищать = РежимИзмененияСвязанногоЗначения.Очищать;
	
#Область ВыходныеИзделия

	ПараметрыВыбораСпецификацийТЧ = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций();
	
	ПараметрыВыбораСпецификацийТЧ.ДоступныеТипы.Добавить(Перечисления.ТипыПроизводственныхПроцессов.Разборка);
	ПараметрыВыбораСпецификацийТЧ.ДоступныеСтатусы.Добавить(Перечисления.СтатусыСпецификаций.Действует);
	
	СвязиПараметровВыбора = Новый Структура(УправлениеДаннымиОбИзделияхКлиентСервер.ПоляСтруктурыДанныхОбИзделииДляВыбораСпецификации());
	
	СвязиПараметровВыбора.Номенклатура            = Новый Структура(Реквизиты, "Объект.ВыходныеИзделия.Номенклатура",   РежимОчищать);
	СвязиПараметровВыбора.Характеристика          = Новый Структура(Реквизиты, "Объект.ВыходныеИзделия.Характеристика", РежимОчищать);
	СвязиПараметровВыбора.НачалоПроизводства      = "Объект.НачатьНеРанее";
	СвязиПараметровВыбора.ПодразделениеДиспетчер  = "Объект.Подразделение";
	СвязиПараметровВыбора.НаправлениеДеятельности = "Объект.НаправлениеДеятельности";
	
	ПараметрыВыбораСпецификацийТЧ.СвязиПараметровВыбора.Вставить("Объект.ВыходныеИзделия.Спецификация", СвязиПараметровВыбора);
	
	СвязиПараметровВыбора = Новый Структура(УправлениеДаннымиОбИзделияхКлиентСервер.ПоляСтруктурыДанныхОбИзделииДляВыбораСпецификации());
	
	СвязиПараметровВыбора.Номенклатура            = Новый Структура(Реквизиты, "Объект.ПобочныеИзделия.Номенклатура",   РежимОчищать);
	СвязиПараметровВыбора.Характеристика          = Новый Структура(Реквизиты, "Объект.ПобочныеИзделия.Характеристика", РежимОчищать);
	СвязиПараметровВыбора.НачалоПроизводства      = "Объект.НачатьНеРанее";
	СвязиПараметровВыбора.ПодразделениеДиспетчер  = "Объект.Подразделение";
	СвязиПараметровВыбора.НаправлениеДеятельности = "Объект.НаправлениеДеятельности";
	
	ПараметрыВыбораСпецификацийТЧ.СвязиПараметровВыбора.Вставить("Объект.ПобочныеИзделия.Спецификация", СвязиПараметровВыбора);
	
	ПараметрыВыбораСпецификаций.Вставить("ВыходныеИзделия", ПараметрыВыбораСпецификацийТЧ);
	
#КонецОбласти
	
#Область ОбеспечениеМатериаламиИРаботами

	ПараметрыВыбораСпецификацийТЧ = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций();
	
	ПараметрыВыбораСпецификацийТЧ.ДоступныеТипы.Добавить(Перечисления.ТипыПроизводственныхПроцессов.Сборка);
	ПараметрыВыбораСпецификацийТЧ.ДоступныеТипы.Добавить(Перечисления.ТипыПроизводственныхПроцессов.Ремонт);
	ПараметрыВыбораСпецификацийТЧ.ДоступныеСтатусы.Добавить(Перечисления.СтатусыСпецификаций.Действует);
	
	СвязиПараметровВыбора = Новый Структура(УправлениеДаннымиОбИзделияхКлиентСервер.ПоляСтруктурыДанныхОбИзделииДляВыбораСпецификации());
	
	СвязиПараметровВыбора.Номенклатура            = Новый Структура(Реквизиты, "Объект.ОбеспечениеМатериаламиИРаботами.Номенклатура", РежимОчищать);
	СвязиПараметровВыбора.Характеристика          = "Объект.ОбеспечениеМатериаламиИРаботами.Характеристика";
	СвязиПараметровВыбора.НачалоПроизводства      = "Объект.НачатьНеРанее";
	СвязиПараметровВыбора.ПодразделениеДиспетчер  = "Объект.Подразделение";
	СвязиПараметровВыбора.НаправлениеДеятельности = "Объект.НаправлениеДеятельности";
	
	ПараметрыВыбораСпецификацийТЧ.СвязиПараметровВыбора.Вставить("Объект.ОбеспечениеМатериаламиИРаботами.Спецификация", СвязиПараметровВыбора);
	
	ПараметрыВыбораСпецификаций.Вставить("ОбеспечениеМатериаламиИРаботами", ПараметрыВыбораСпецификацийТЧ);
	
#КонецОбласти
	
	Возврат ПараметрыВыбораСпецификаций;

КонецФункции

// Имена реквизитов, от значений которых зависят параметры выбора спецификаций
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровВыбораСпецификаций() Экспорт
	
	ИменаРеквизитов = "";
	Возврат ИменаРеквизитов;
	
КонецФункции

// Возвращает параметры распределения затрат на выходные изделия.
//
// Параметры:
//  СпособРаспределенияЗатратНаВыходныеИзделия	 - ПеречислениеСсылка.СпособыРаспределенияЗатратНаВыходныеИзделия - способ распределения затрат на выходные изделия.
// 
// Возвращаемое значение:
//  Структура - параметры, уточняющие особенности распределения затрат на выходные изделия.
//
Функция ПараметрыРаспределенияЗатрат(СпособРаспределенияЗатратНаВыходныеИзделия) Экспорт
	
	ПараметрыРаспределенияЗатрат = ПроизводствоКлиентСервер.ПараметрыРаспределенияЗатратНаВыходныеИзделия(
		"ВыходныеИзделия",
		СпособРаспределенияЗатратНаВыходныеИзделия);
	
	ПараметрыРаспределенияЗатрат.ЕстьПолеОтменено = Истина;
	
	ПараметрыРаспределенияЗатрат.РассчитыватьПолеДоляСтоимостиПроцент = Истина;
	ПараметрыРаспределенияЗатрат.РассчитыватьПризнакЕстьОшибкиЗаполнения = Истина;
	ПараметрыРаспределенияЗатрат.РассчитыватьПризнакДоляСтоимостиОбязательна = Истина;
	
	ПараметрыРаспределенияЗатрат.ПоляСвязи = "Номенклатура,Характеристика,Ссылка";

	Возврат ПараметрыРаспределенияЗатрат;
	
КонецФункции

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
// 
//  Возвращаемое значение:
//  См. Справочники.Назначения.МакетФормыВыбораНазначений
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	#Область ОбеспечениеМатериаламиИРаботами
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ОбеспечениеМатериаламиИРаботами.НазначениеОбеспечения");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СобственноеПроизводство)";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	Если Не Пользователи.РолиДоступны("ВыборПроизвольныхНазначенийВЭтапеПроизводства") Тогда
		ШаблонНазначения.Ссылка = "&ОтборСсылокВФормеВыбораНазначений";
	КонецЕсли;
	ШаблонНазначения.ТипыНазначений.Очистить();
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.Собственное);
	
	//++ Устарело_Переработка24
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ОбеспечениеМатериаламиИРаботами.НазначениеОбеспечения");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья)";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.Партнер                  = "Объект.Партнер";
	ШаблонНазначения.Договор                  = "Объект.Договор";
	Если Не Пользователи.РолиДоступны("ВыборПроизвольныхНазначенийВЭтапеПроизводства") Тогда
		ШаблонНазначения.Ссылка = "&ОтборСсылокВФормеВыбораНазначений";
	КонецЕсли;
	ШаблонНазначения.ТипыНазначений.Очистить();
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеМатериалы22);
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеМатериалыПодЭтап22);
	//-- Устарело_Переработка24
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ОбеспечениеМатериаламиИРаботами.НазначениеОбеспечения");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья2_5)";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.Партнер                  = "Объект.Партнер";
	ШаблонНазначения.Договор                  = "Объект.Договор";
	Если Не Пользователи.РолиДоступны("ВыборПроизвольныхНазначенийВЭтапеПроизводства") Тогда
		ШаблонНазначения.Ссылка = "&ОтборСсылокВФормеВыбораНазначений";
	КонецЕсли;
	ШаблонНазначения.ТипыНазначений.Очистить();
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.Давальческое2_5);
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеМатериалыПодЭтап22);
	
	// Остатки товаров
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.ОбеспечениеМатериаламиИРаботами.НазначениеОбеспечения");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("ВНаличии").Пометка = Истина;
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ОбеспечениеМатериаламиИРаботами.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ОбеспечениеМатериаламиИРаботами.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.ОбеспечениеМатериаламиИРаботами.Склад";
	ОписаниеКолонок.ПутиКДанным.Регистратор      = "Объект.ОбеспечениеМатериаламиИРаботами.Ссылка";
	
	#КонецОбласти
	
	// шаблон для выходных изделий по рассчитываемой стоимости
	#Область ВыходныеИзделия
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ВыходныеИзделия.Назначение");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СобственноеПроизводство)";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.ТипыНазначений.Очистить();
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.Собственное);
	ШаблонНазначения.ВидимыеОтборыНаФорме.Вставить("НаправлениеДеятельности", НСтр("ru = 'Только назначения направления деятельности ""%1""';
																					|en = 'The ""%1"" line of business assignments only'"));
	
	//++ Устарело_Переработка24
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ВыходныеИзделия.Назначение");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья)";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.Партнер                  = "Объект.Партнер";
	ШаблонНазначения.Договор                  = "Объект.Договор";
	ШаблонНазначения.ТипыНазначений.Очистить();
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеПродукция22);
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеМатериалы22);
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеМатериалыПодЭтап22);
	ШаблонНазначения.ВидимыеОтборыНаФорме.Вставить("НаправлениеДеятельности", НСтр("ru = 'Только назначения направления деятельности ""%1""';
																					|en = 'The ""%1"" line of business assignments only'"));
	//-- Устарело_Переработка24
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ВыходныеИзделия.Назначение");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья2_5)";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.Партнер                  = "Объект.Партнер";
	ШаблонНазначения.Договор                  = "Объект.Договор";
	ШаблонНазначения.ТипыНазначений.Очистить();
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.Давальческое2_5);
	ШаблонНазначения.ВидимыеОтборыНаФорме.Вставить("НаправлениеДеятельности", НСтр("ru = 'Только назначения направления деятельности ""%1""';
																					|en = 'The ""%1"" line of business assignments only'"));
	
	// Потребности в выпущенной продукции на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.ВыходныеИзделия.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.ВыходныеИзделия.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ВыходныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ВыходныеИзделия.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.ВыходныеИзделия.Получатель";
	ОписаниеКолонок.ПутиКДанным.Регистратор      = "Объект.ВыходныеИзделия.Ссылка";
	ОписаниеКолонок.ПутиКДанным.Распоряжение     = "Объект.Распоряжение";
	
	// Потребности в производимых работах в подразделении-получателе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказовРаботами", Истина, "Объект.ВыходныеИзделия.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.ВыходныеИзделия.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ВыходныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ВыходныеИзделия.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Подразделение    = "Объект.ВыходныеИзделия.Получатель";
	ОписаниеКолонок.ПутиКДанным.Регистратор      = "Объект.ВыходныеИзделия.Ссылка";
	ОписаниеКолонок.ПутиКДанным.Распоряжение     = "Объект.Распоряжение";
	
	// Потребности в продукции на всех складах.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказовВсеСклады", Истина, "Объект.ВыходныеИзделия.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.ВыходныеИзделия.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ВыходныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ВыходныеИзделия.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Регистратор      = "Объект.ВыходныеИзделия.Ссылка";
	ОписаниеКолонок.ПутиКДанным.Распоряжение     = "Объект.Распоряжение";
	
	#КонецОбласти
	
	// шаблон для побочных изделий по фиксированной стоимости
	#Область ПобочныеИзделия
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ПобочныеИзделия.Назначение");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СобственноеПроизводство)";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.ВидимыеОтборыНаФорме.Вставить("НаправлениеДеятельности", НСтр("ru = 'Только назначения направления деятельности ""%1""';
																					|en = 'The ""%1"" line of business assignments only'"));
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ПобочныеИзделия.Назначение");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация В (
												//++ Устарело_Переработка24
												|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья),
												//-- Устарело_Переработка24
												|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья2_5))";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.ВидимыеОтборыНаФорме.Вставить("НаправлениеДеятельности", НСтр("ru = 'Только назначения направления деятельности ""%1""';
																					|en = 'The ""%1"" line of business assignments only'"));
	
	// Потребности в выпущенной продукции на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.ПобочныеИзделия.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.ПобочныеИзделия.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ПобочныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ПобочныеИзделия.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.ПобочныеИзделия.Получатель";
	ОписаниеКолонок.ПутиКДанным.Регистратор      = "Объект.ПобочныеИзделия.Ссылка";
	ОписаниеКолонок.ПутиКДанным.Распоряжение     = "Объект.Распоряжение";
	
	// Потребности в производимых работах в подразделении-получателе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказовРаботами", Истина, "Объект.ПобочныеИзделия.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.ПобочныеИзделия.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ПобочныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ПобочныеИзделия.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Подразделение    = "Объект.ПобочныеИзделия.Получатель";
	ОписаниеКолонок.ПутиКДанным.Регистратор      = "Объект.ПобочныеИзделия.Ссылка";
	ОписаниеКолонок.ПутиКДанным.Распоряжение     = "Объект.Распоряжение";
	
	// Потребности в продукции на всех складах.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказовВсеСклады", Истина, "Объект.ПобочныеИзделия.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.ПобочныеИзделия.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ПобочныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ПобочныеИзделия.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Регистратор      = "Объект.ПобочныеИзделия.Ссылка";
	ОписаниеКолонок.ПутиКДанным.Распоряжение     = "Объект.Распоряжение";
	
	#КонецОбласти
	
	#Область ЭкономияМатериалов
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ЭкономияМатериалов.Назначение");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СобственноеПроизводство)";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.ТипыНазначений.Очистить();
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.Собственное);
	
	//++ Устарело_Переработка24
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ЭкономияМатериалов.Назначение");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья)";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.Партнер                  = "Объект.Партнер";
	ШаблонНазначения.Договор                  = "Объект.Договор";
	ШаблонНазначения.ТипыНазначений.Очистить();
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеМатериалы22);
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеМатериалыПодЭтап22);
	//-- Устарело_Переработка24
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ЭкономияМатериалов.Назначение");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья2_5)";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.Партнер                  = "Объект.Партнер";
	ШаблонНазначения.Договор                  = "Объект.Договор";
	ШаблонНазначения.ТипыНазначений.Очистить();
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеМатериалыПодЭтап22);
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.Давальческое2_5);
	
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ВсеНазначения", Ложь, "Объект.ЭкономияМатериалов.Назначение");
	
	#КонецОбласти
	
	Возврат МакетФормы;
	
КонецФункции

// Формирует структуру параметров документа для встраивания документа в механимы обеспечения.
//
// Возвращаемое значение:
//  см. ОбеспечениеВДокументахСервер.ДоступныеОстаткиПараметрыВстраивания
//
Функция ДоступныеОстаткиПараметрыВстраивания() Экспорт
	
	ПараметрыВстраивания = ОбеспечениеВДокументахСервер.ДоступныеОстаткиПараметрыВстраивания();
	ПараметрыВстраивания.ОчищаемыеРеквизиты = "КодСтроки";
	
	// Обновление колонки "Доступно".
	ПараметрыВстраивания.ИмяТаблицыФормы = "ОбеспечениеМатериаламиИРаботами";
	
	// Условное оформление.
	ЭлементыФормы = ПараметрыВстраивания.УсловноеОформление.ЭлементыФормы;
	ЭлементыФормы.ВариантОбеспечения = "ОбеспечениеМатериаламиИРаботамиВариантОбеспечения";
	ЭлементыФормы.Доступно           = "ОбеспечениеМатериаламиИРаботамиДоступно";
	ЭлементыФормы.Серия              = "ОбеспечениеМатериаламиИРаботамиСерия";
	ЭлементыФормы.Обособленно        = "ОбеспечениеМатериаламиИРаботамиОбособленно";
	ЭлементыФормы.Склад              = "ОбеспечениеМатериаламиИРаботамиСклад";
	
	ПутиКДанным = ПараметрыВстраивания.УсловноеОформление.ПутиКДанным;
	ПутиКДанным.ПерераспределятьЗапасы = "Объект.ОбеспечениеМатериаламиИРаботами.ПерераспределятьЗапасы";
	ПутиКДанным.ЗапретРедактирования = "Объект.ОбеспечениеМатериаламиИРаботами.Отменено";
	ПутиКДанным.ТипНоменклатуры = "Объект.ОбеспечениеМатериаламиИРаботами.ТипНоменклатуры";
	
	// Выбор варианта обеспечения.
	Связи = ПараметрыВстраивания.СвязиПараметровВыбораВариантаОбеспечения;
	Связи.Доступно              = "Элементы.ОбеспечениеМатериаламиИРаботами.ТекущиеДанные.Доступно";
	Связи.КоличествоУпаковок    = "Элементы.ОбеспечениеМатериаламиИРаботами.ТекущиеДанные.КоличествоУпаковок";
	Связи.Количество            = "Элементы.ОбеспечениеМатериаламиИРаботами.ТекущиеДанные.Количество";
	Связи.ОтгружатьЕслиДоступно = "Элементы.ОбеспечениеМатериаламиИРаботами.ТекущиеДанные.ОтгружатьЕслиДоступно";
	Связи.Обособленно           = "Элементы.ОбеспечениеМатериаламиИРаботами.ТекущиеДанные.Обособленно";
	Связи.ТипНоменклатуры       = "Элементы.ОбеспечениеМатериаламиИРаботами.ТекущиеДанные.ТипНоменклатуры";
	Связи.Упаковка              = "Элементы.ОбеспечениеМатериаламиИРаботами.ТекущиеДанные.Упаковка";
	Связи.Номенклатура          = "Элементы.ОбеспечениеМатериаламиИРаботами.ТекущиеДанные.Номенклатура";
	Связи.ВариантОбеспечения    = "Элементы.ОбеспечениеМатериаламиИРаботами.ТекущиеДанные.ВариантОбеспечения";
	Связи.Склад                 = "Элементы.ОбеспечениеМатериаламиИРаботами.ТекущиеДанные.Склад";
	Связи.НесколькоСкладов      = Истина;
	
	// Имя регистра оформления отгрузки.
	ПараметрыВстраивания.ИмяРегистраОформленияОтгрузки = "ЗаказыМатериаловВПроизводство";
	
	// Временная таблица данных документа.
	ПараметрыВстраивания.ИмяОбъекта = "Форма";
	ПараметрыВстраивания.ИмяТаблицы = "Форма.Объект.ОбеспечениеМатериаламиИРаботами";
	
	ПараметрыВстраивания.ОписаниеПолученияДанныхДокумента =
		"ВЫБРАТЬ
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Подразделение КАК Подразделение,
		|	ТабЧасть.Склад КАК Склад,
		|	ТабЧасть.Назначение КАК Назначение,
		|	Реквизиты.Ссылка КАК ЗаказНаОтгрузку,
		|	ТабЧасть.ВариантОбеспечения КАК ВариантОбеспечения,
		|	ТабЧасть.Обособленно КАК Обособленно,
		|	ТабЧасть.Количество КАК Количество,
		|	ТабЧасть.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ТабЧасть.Упаковка КАК Упаковка,
		|	Реквизиты.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется) КАК ГотовКОбеспечению,
		|	Реквизиты.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется) КАК ГотовКОтгрузке,
		|	ВЫБОР КОГДА Реквизиты.НеОтгружатьЧастями ТОГДА
		|				Реквизиты.ДатаОтгрузки
		|			ИНАЧЕ
		|				ТабЧасть.ДатаОтгрузки
		|		КОНЕЦ КАК ЖелаемаяДатаОтгрузки,
		|	ТабЧасть.Серия КАК Серия,
		|	ТабЧасть.Отменено КАК Отменено,
		|	ТабЧасть.КодСтроки КАК КодСтроки,
		|	ТабЧасть.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.Дата КАК ДатаДокумента,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаСкладов,
		|	Реквизиты.Ссылка.Распоряжение.Приоритет КАК Приоритет,
		|	ВЫБОР КОГДА Реквизиты.НеОтгружатьЧастями ТОГДА
		|				Реквизиты.ДатаОтгрузки
		|			ИНАЧЕ
		|				НЕОПРЕДЕЛЕНО
		|		КОНЕЦ КАК ДатаОтгрузкиВсехСтрокОднойДатой
		|ПОМЕСТИТЬ ВременнаяТаблицаДанныхДокумента
		|ИЗ
		|	Форма.Объект.ОбеспечениеМатериаламиИРаботами КАК ТабЧасть
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Форма.Объект.Этапы КАК Реквизиты
		|		ПО Реквизиты.Ссылка = ТабЧасть.Ссылка";
	
	// Шаблон сериализации данных формы.
	ОбеспечениеМатериаламиИРаботами = Новый Структура();
	ОбеспечениеМатериаламиИРаботами.Вставить("НомерСтроки",           Новый ОписаниеТипов("Число"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Номенклатура",          Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Характеристика",        Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Склад",                 Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Подразделение",         Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Назначение",            Новый ОписаниеТипов("СправочникСсылка.Назначения"));
	ОбеспечениеМатериаламиИРаботами.Вставить("ВариантОбеспечения",    Новый ОписаниеТипов("ПеречислениеСсылка.ВариантыОбеспечения"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Обособленно",           Новый ОписаниеТипов("Булево"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Производится",          Новый ОписаниеТипов("Булево"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Количество",            Новый ОписаниеТипов("Число"));
	ОбеспечениеМатериаламиИРаботами.Вставить("КоличествоУпаковок",    Новый ОписаниеТипов("Число"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Упаковка",              Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	ОбеспечениеМатериаламиИРаботами.Вставить("ДатаОтгрузки",          Новый ОписаниеТипов("Дата"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Серия",                 Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ОбеспечениеМатериаламиИРаботами.Вставить("КодСтроки",             Новый ОписаниеТипов("Число"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Ссылка",                Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	ОбеспечениеМатериаламиИРаботами.Вставить("Отменено",              Новый ОписаниеТипов("Булево"));
	
	Этапы = Новый Структура();
	Этапы.Вставить("Ссылка",                  Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	Этапы.Вставить("Статус",                  Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыЭтаповПроизводства2_2"));
	Этапы.Вставить("НеОтгружатьЧастями",      Новый ОписаниеТипов("Булево"));
	Этапы.Вставить("ДатаОтгрузки",            Новый ОписаниеТипов("Дата"));
	Этапы.Вставить("Дата",                    Новый ОписаниеТипов("Дата"));
	Этапы.Вставить(
		"ЗаказПереработчику",
		Новый ОписаниеТипов("ДокументСсылка.ЗаказПереработчику2_5"));
	//++ Устарело_Переработка24
	Этапы.Вставить(
		"ЗаказПереработчику",
		Новый ОписаниеТипов("ДокументСсылка.ЗаказПереработчику,ДокументСсылка.ЗаказПереработчику2_5"));
	//-- Устарело_Переработка24
	
	Объект = Новый Структура();
	Объект.Вставить("ОбеспечениеМатериаламиИРаботами", ОбеспечениеМатериаламиИРаботами);
	Объект.Вставить("Этапы",                           Этапы);
	
	ПараметрыВстраивания.ШаблонСериализацииДанныхФормы.Вставить("Объект", Объект);
	ПараметрыВстраивания.ПоляСвязиТабличныхЧастей.Вставить("Этапы", Новый Структура("Ссылка", "Ссылка"));
	
	Возврат ПараметрыВстраивания;
	
КонецФункции

// Возвращает параметры выбора статей в документе.
// 
// Возвращаемое значение:
//  Массив, Структура - См. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики
//
Функция ПараметрыВыбораСтатейИАналитик(Объект) Экспорт
	
	ПараметрыВыбораСтатейИАналитик = Новый Массив;
	
#Область ВыходныеИзделия
	
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	
	ПараметрыВыбора.ПутьКДанным         = "Объект.ВыходныеИзделия";
	ПараметрыВыбора.Статья              = "СтатьяРасходов";
	ПараметрыВыбора.ТипСтатьи           = "ТипСтатьи";
	ПараметрыВыбора.ЗначениеПоУмолчанию = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	
	ПараметрыВыбора.ДоступностьПоОперации =
		Не Объект.ХозяйственнаяОперация = ДавальческаяСхемаКлиентСервер.ХозяйственнаяОперацияДоговора()
		//++ Устарело_Переработка24
		И Не Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья
		//-- Устарело_Переработка24
		И Истина;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов   = "АналитикаРасходов";
	УправлениеПроизводством.ЗаполнитьОтборСтатейРасходов(ПараметрыВыбора.ОтборСтатейРасходов);
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов   = "АналитикаАктивовПассивов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ВыходныеИзделияСтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("ВыходныеИзделияАналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("ВыходныеИзделияАналитикаАктивовПассивов");
	
	ПараметрыВыбора.УсловияДоступностиСтатьиВСтроках.Вставить("СписатьНаРасходы", Истина);
	ПараметрыВыбора.УсловияДоступностиСтатьиВСтроках.Вставить("Отменено", Ложь);
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
#КонецОбласти
	
#Область ПобочныеИзделия
	
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	
	ПараметрыВыбора.ПутьКДанным         = "Объект.ПобочныеИзделия";
	ПараметрыВыбора.Статья              = "СтатьяРасходов";
	ПараметрыВыбора.ТипСтатьи           = "ТипСтатьи";
	ПараметрыВыбора.ЗначениеПоУмолчанию = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	
	ПараметрыВыбора.ДоступностьПоОперации =
		Не Объект.ХозяйственнаяОперация = ДавальческаяСхемаКлиентСервер.ХозяйственнаяОперацияДоговора()
		//++ Устарело_Переработка24
		И Не Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья
		//-- Устарело_Переработка24
		И Истина;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов   = "АналитикаРасходов";
	УправлениеПроизводством.ЗаполнитьОтборСтатейРасходов(ПараметрыВыбора.ОтборСтатейРасходов);
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов   = "АналитикаАктивовПассивов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ПобочныеИзделияСтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("ПобочныеИзделияАналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("ПобочныеИзделияАналитикаАктивовПассивов");
	
	ПараметрыВыбора.УсловияДоступностиСтатьиВСтроках.Вставить("СписатьНаРасходы", Истина);
	ПараметрыВыбора.УсловияДоступностиСтатьиВСтроках.Вставить("Отменено", Ложь);
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
#КонецОбласти
	
#Область ЭкономияМатериалов
	
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	
	ПараметрыВыбора.ПутьКДанным         = "Объект.ЭкономияМатериалов";
	ПараметрыВыбора.Статья              = "СтатьяРасходов";
	ПараметрыВыбора.ТипСтатьи           = "ТипСтатьи";
	ПараметрыВыбора.ЗначениеПоУмолчанию = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	
	ПараметрыВыбора.ДоступностьПоОперации =
		Не Объект.ХозяйственнаяОперация = ДавальческаяСхемаКлиентСервер.ХозяйственнаяОперацияДоговора()
		//++ Устарело_Переработка24
		И Не Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья
		//-- Устарело_Переработка24
		И Истина;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов   = "АналитикаРасходов";
	УправлениеПроизводством.ЗаполнитьОтборСтатейРасходов(ПараметрыВыбора.ОтборСтатейРасходов);
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов   = "АналитикаАктивовПассивов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ЭкономияМатериаловСтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("ЭкономияМатериаловАналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("ЭкономияМатериаловАналитикаАктивовПассивов");
	
	ПараметрыВыбора.УсловияДоступностиСтатьиВСтроках.Вставить("СписатьНаРасходы", Истина);
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
#КонецОбласти
	
	Возврат ПараметрыВыбораСтатейИАналитик;
	
КонецФункции

// Возвращает параметры настройки счетов учета в документе.
//  
// Возвращаемое значение:
//  Массив - Параметры настроек счетов учета (См. НастройкаСчетовУчетаСервер.ПараметрыНастройки).
//
Функция ПараметрыНастройкиСчетовУчета() Экспорт
	
	ПараметрыНастроек = Новый Массив;
	
#Область ВыходныеИзделия

	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ДоступностьПоОперации	= Истина;
	ПараметрыНастройки.ПутьКДанным				= "Объект.ВыходныеИзделия";
	ПараметрыНастройки.ТипСтатьи				= "ТипСтатьи";
	
	ПараметрыНастройки.ЭлементыФормы.Добавить("ВыходныеИзделияПредставлениеОтраженияОперации");
	
	ПараметрыНастроек.Добавить(ПараметрыНастройки);
	
#КонецОбласти
	
#Область ПобочныеИзделия

	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ДоступностьПоОперации	= Истина;
	ПараметрыНастройки.ПутьКДанным				= "Объект.ПобочныеИзделия";
	ПараметрыНастройки.ТипСтатьи				= "ТипСтатьи";
	
	ПараметрыНастройки.ЭлементыФормы.Добавить("ПобочныеИзделияПредставлениеОтраженияОперации");
	
	ПараметрыНастроек.Добавить(ПараметрыНастройки);
	
#КонецОбласти
	
#Область ЭкономияМатериалов

	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ДоступностьПоОперации	= Истина;
	ПараметрыНастройки.ПутьКДанным				= "Объект.ЭкономияМатериалов";
	ПараметрыНастройки.ТипСтатьи				= "ТипСтатьи";
	
	ПараметрыНастройки.ЭлементыФормы.Добавить("ЭкономияМатериаловПредставлениеОтраженияОперации");
	
	ПараметрыНастроек.Добавить(ПараметрыНастройки);
	
#КонецОбласти
	
	Возврат ПараметрыНастроек;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Заполнение

// Заполняет расход по данным обеспечения
//
// Параметры:
//  Объект - ДанныеФормыСтруктура -
//  СписокЭтапов - Неопределено, Массив - 
//  Режим - см. Документы.ЭтапПроизводства2_2.ЗаполнитьРасходМатериаловИРаботПоДаннымОбеспечения.Режим
//
Процедура ЗаполнитьРасходМатериаловИРаботПоДаннымОбеспечения(Объект, СписокЭтапов = Неопределено, Режим = 0) Экспорт
	
	ДатаОперации = НачалоДня(ТекущаяДатаСеанса());
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка              КАК Ссылка,
	|	ТабличнаяЧасть.Подразделение       КАК Подразделение,
	|	ТабличнаяЧасть.НомерСтроки         КАК НомерСтроки,
	|	ТабличнаяЧасть.Номенклатура        КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика      КАК Характеристика,
	|	ТабличнаяЧасть.Склад               КАК Склад,
	|	ТабличнаяЧасть.Серия               КАК Серия,
	|	ТабличнаяЧасть.СтатьяКалькуляции   КАК СтатьяКалькуляции,
	|	ТабличнаяЧасть.Упаковка            КАК Упаковка,
	|	ТабличнаяЧасть.Количество          КАК Количество,
	|	ТабличнаяЧасть.КоличествоУпаковок  КАК КоличествоУпаковок
	|ПОМЕСТИТЬ Обеспечение
	|ИЗ
	|	&ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ТабличнаяЧасть.Количество <> 0
	|	И ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
	|	И (НЕ &ЕстьОтборПоЭтапам ИЛИ ТабличнаяЧасть.Ссылка В (&СписокЭтапов))
	|	И НЕ ТабличнаяЧасть.Отменено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка              КАК Ссылка,
	|	ТабличнаяЧасть.Подразделение       КАК Подразделение,
	|	ТабличнаяЧасть.НомерСтроки         КАК НомерСтроки,
	|	ТабличнаяЧасть.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТабличнаяЧасть.Номенклатура        КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика      КАК Характеристика,
	|	ТабличнаяЧасть.Серия               КАК Серия,
	|	ТабличнаяЧасть.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТабличнаяЧасть.СтатьяКалькуляции   КАК СтатьяКалькуляции,
	|	ТабличнаяЧасть.Упаковка            КАК Упаковка,
	|	ТабличнаяЧасть.ДатаРасхода         КАК ДатаРасхода,
	|	ТабличнаяЧасть.Количество          КАК Количество,
	|	ТабличнаяЧасть.КоличествоУпаковок  КАК КоличествоУпаковок
	|ПОМЕСТИТЬ РасходЗаполненныеСерии
	|ИЗ
	|	&РасходМатериаловИРабот КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ТабличнаяЧасть.Количество <> 0
	|	И (НЕ &ЕстьОтборПоЭтапам ИЛИ ТабличнаяЧасть.Ссылка В (&СписокЭтапов))
	// Выбираем только правильно заполненные серии
	|	И ТабличнаяЧасть.СтатусУказанияСерий В (0, 2, 14)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка         КАК Ссылка,
	|	ТабличнаяЧасть.Подразделение  КАК Подразделение,
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия          КАК Серия,
	|	ТабличнаяЧасть.Количество     КАК Количество
	|ПОМЕСТИТЬ Экономия
	|ИЗ
	|	&ЭкономияМатериалов КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ТабличнаяЧасть.Количество <> 0
	|	И (НЕ &ЕстьОтборПоЭтапам ИЛИ ТабличнаяЧасть.Ссылка В (&СписокЭтапов))
	|");
	Запрос.УстановитьПараметр("ЕстьОтборПоЭтапам"               , СписокЭтапов <> Неопределено);
	Запрос.УстановитьПараметр("СписокЭтапов"                    , СписокЭтапов);
	Запрос.УстановитьПараметр("ОбеспечениеМатериаламиИРаботами" , Объект.ОбеспечениеМатериаламиИРаботами.Выгрузить());
	Запрос.УстановитьПараметр("РасходМатериаловИРабот"          , 
		Объект.РасходМатериаловИРабот.Выгрузить(?(Режим = 0, Новый Массив, Неопределено)));
	Запрос.УстановитьПараметр("ЭкономияМатериалов"              , Объект.ЭкономияМатериалов.Выгрузить());
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	ПараметрыУказанияСерий = ПараметрыУказанияСерий(Объект).РасходМатериаловИРабот;
	
	Результат = Документы.ЭтапПроизводства2_2.РассчитатьРасходМатериалов(МенеджерВременныхТаблиц, ДатаОперации, Режим = 2);
	
	Объект.РасходМатериаловИРабот.Загрузить(Результат);
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(Объект, ПараметрыУказанияСерий);
	
КонецПроцедуры

Процедура ЗаполнитьНеизрасходованныеМатериалы(Объект, СписокЭтапов = Неопределено) Экспорт
	
	ДатаОперации = НачалоДня(ТекущаяДатаСеанса());
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка              КАК Ссылка,
	|	ТабличнаяЧасть.Подразделение       КАК Подразделение,
	|	ТабличнаяЧасть.НомерСтроки         КАК НомерСтроки,
	|	ТабличнаяЧасть.Номенклатура        КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика      КАК Характеристика,
	|	ТабличнаяЧасть.Склад               КАК Склад,
	|	ТабличнаяЧасть.Серия               КАК Серия,
	|	ТабличнаяЧасть.ВариантОбеспечения  КАК ВариантОбеспечения,
	|	ТабличнаяЧасть.Назначение          КАК Назначение,
	|	ТабличнаяЧасть.СтатьяКалькуляции   КАК СтатьяКалькуляции,
	|	ТабличнаяЧасть.Упаковка            КАК Упаковка,
	|	ТабличнаяЧасть.Количество          КАК Количество,
	|	ТабличнаяЧасть.КоличествоУпаковок  КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.Отменено            КАК Отменено
	|	
	|ПОМЕСТИТЬ Обеспечение
	|ИЗ
	|	&ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	(НЕ &ЕстьОтборПоЭтапам ИЛИ ТабличнаяЧасть.Ссылка В (&СписокЭтапов))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка         КАК Ссылка,
	|	ТабличнаяЧасть.Подразделение  КАК Подразделение,
	|	ТабличнаяЧасть.НомерСтроки    КАК НомерСтроки,
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество     КАК Количество
	|	
	|ПОМЕСТИТЬ Расход
	|ИЗ
	|	&РасходМатериаловИРабот КАК ТабличнаяЧасть
	|ГДЕ
	|	(НЕ &ЕстьОтборПоЭтапам ИЛИ ТабличнаяЧасть.Ссылка В (&СписокЭтапов))
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ЭкономияМатериалов
	|ИЗ
	|	&ЭкономияМатериалов КАК ТабличнаяЧасть
	|");
	Запрос.УстановитьПараметр("ЕстьОтборПоЭтапам", СписокЭтапов <> Неопределено);
	Запрос.УстановитьПараметр("СписокЭтапов", СписокЭтапов);
	Запрос.УстановитьПараметр("ОбеспечениеМатериаламиИРаботами", Объект.ОбеспечениеМатериаламиИРаботами.Выгрузить());
	Запрос.УстановитьПараметр("РасходМатериаловИРабот", Объект.РасходМатериаловИРабот.Выгрузить());
	Запрос.УстановитьПараметр("ЭкономияМатериалов", Объект.ЭкономияМатериалов.Выгрузить());
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Результат = Документы.ЭтапПроизводства2_2.РассчитатьЭкономиюМатериалов(МенеджерВременныхТаблиц, ДатаОперации);
	Объект.ЭкономияМатериалов.Загрузить(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область Серии

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийВыходныеИзделия()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Серия КАК Серия,
	|	Товары.Получатель КАК Получатель,
	|	Товары.Произведено КАК Произведено,
	|	Товары.ДатаПроизводства КАК ДатаПроизводства,
	|	Товары.Количество КАК Количество,
	|	Товары.Отменено КАК Отменено,
	|	Товары.Подразделение КАК Подразделение,
	|	Товары.ПроизводствоНаСтороне КАК ПроизводствоНаСтороне,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.СтатусУказанияСерийОтправитель КАК СтатусУказанияСерийОтправитель,
	|	Товары.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерийПолучатель,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Серия КАК Серия,
	|	Товары.Получатель КАК Получатель,
	|	Товары.Произведено КАК Произведено,
	|	Товары.ДатаПроизводства КАК ДатаПроизводства,
	|	Товары.Подразделение КАК Подразделение,
	|	Товары.Ссылка КАК Ссылка,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	НЕ Товары.Отменено
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Получатель,
	|	Товары.Произведено,
	|	Товары.ДатаПроизводства,
	|	Товары.Подразделение,
	|	Товары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика,
	|	Серии.Назначение КАК Назначение,
	|	Серии.Получатель КАК Получатель,
	|	Серии.Произведено КАК Произведено,
	|	Серии.ДатаПроизводства КАК ДатаПроизводства,
	|	Серии.Подразделение КАК Подразделение,
	|	Серии.Ссылка КАК Ссылка,
	|	Серии.Количество КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика,
	|	Серии.Назначение КАК Назначение,
	|	Серии.Получатель КАК Получатель,
	|	Серии.Произведено КАК Произведено,
	|	Серии.ДатаПроизводства КАК ДатаПроизводства,
	|	Серии.Подразделение КАК Подразделение,
	|	Серии.Ссылка КАК Ссылка,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Получатель,
	|	Серии.Произведено,
	|	Серии.ДатаПроизводства,
	|	Серии.Подразделение,
	|	Серии.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Товары.Отменено
	|				ИЛИ Товары.ПроизводствоНаСтороне
	|				ИЛИ ВидыНоменклатуры.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					КОГДА НЕ Товары.Произведено
	|						ТОГДА 15
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий.УказыватьПриПроизводствеПродукции
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 2
	|					КОГДА НЕ ТоварыДляЗапроса.Произведено
	|							И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|						ТОГДА 21
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыОтправитель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Получатель = ТоварыДляЗапроса.Получатель
	|			И Товары.Произведено = ТоварыДляЗапроса.Произведено
	|			И Товары.ДатаПроизводства = ТоварыДляЗапроса.ДатаПроизводства
	|			И Товары.Подразделение = ТоварыДляЗапроса.Подразделение
	|			И Товары.Ссылка = ТоварыДляЗапроса.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|		ПО Товары.Номенклатура = СерииДляЗапроса.Номенклатура
	|			И Товары.Характеристика = СерииДляЗапроса.Характеристика
	|			И Товары.Назначение = СерииДляЗапроса.Назначение
	|			И Товары.Получатель = СерииДляЗапроса.Получатель
	|			И Товары.Произведено = СерииДляЗапроса.Произведено
	|			И Товары.ДатаПроизводства = СерииДляЗапроса.ДатаПроизводства
	|			И Товары.Подразделение = СерииДляЗапроса.Подразделение
	|			И Товары.Ссылка = СерииДляЗапроса.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (СправочникНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Товары.Отменено
	|				ИЛИ Товары.ПроизводствоНаСтороне
	|				ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|				ИЛИ НЕ Склады.ЦеховаяКладовая
	|				ИЛИ Склады.Подразделение <> Товары.Подразделение
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					КОГДА НЕ Товары.Произведено
	|						ТОГДА 15
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					КОГДА НЕ ТоварыДляЗапроса.Произведено
	|							И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|						ТОГДА 11
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 8
	|					КОГДА НЕ ТоварыДляЗапроса.Произведено
	|							И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|						ТОГДА 27
	|					ИНАЧЕ 7
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПродукцииИзПроизводства
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								КОГДА НЕ ТоварыДляЗапроса.Произведено
	|										И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|									ТОГДА 23
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							КОГДА НЕ ТоварыДляЗапроса.Произведено
	|									И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|								ТОГДА 21
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыПолучатель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Получатель = ТоварыДляЗапроса.Получатель
	|			И Товары.Произведено = ТоварыДляЗапроса.Произведено
	|			И Товары.ДатаПроизводства = ТоварыДляЗапроса.ДатаПроизводства
	|			И Товары.Подразделение = ТоварыДляЗапроса.Подразделение
	|			И Товары.Ссылка = ТоварыДляЗапроса.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|		ПО Товары.Номенклатура = СерииДляЗапроса.Номенклатура
	|			И Товары.Характеристика = СерииДляЗапроса.Характеристика
	|			И Товары.Назначение = СерииДляЗапроса.Назначение
	|			И Товары.Получатель = СерииДляЗапроса.Получатель
	|			И Товары.Произведено = СерииДляЗапроса.Произведено
	|			И Товары.ДатаПроизводства = СерииДляЗапроса.ДатаПроизводства
	|			И Товары.Подразделение = СерииДляЗапроса.Подразделение
	|			И Товары.Ссылка = СерииДляЗапроса.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО Товары.Получатель = Склады.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО Товары.Получатель = ПолитикиУчетаСерий.Склад
	|			И (СправочникНоменклатура.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	СтатусыОтправитель.СтатусУказанияСерий КАК СтатусУказанияСерийОтправитель,
	|	СтатусыПолучатель.СтатусУказанияСерий КАК СтатусУказанияСерийПолучатель,
	|	ВЫБОР
	|		КОГДА СтатусыОтправитель.СтатусУказанияСерий В (13, 14, 15)
	|			ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|		КОГДА СтатусыПолучатель.СтатусУказанияСерий <> 0
	|			ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|		ИНАЧЕ СтатусыОтправитель.СтатусУказанияСерий
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыОтправитель КАК СтатусыОтправитель
	|		ПО Товары.НомерСтроки = СтатусыОтправитель.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыПолучатель КАК СтатусыПолучатель
	|		ПО Товары.НомерСтроки = СтатусыПолучатель.НомерСтроки
	|ГДЕ
	|	(СтатусыОтправитель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийОтправитель
	|			ИЛИ СтатусыПолучатель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийПолучатель
	|			ИЛИ ВЫБОР
	|				КОГДА СтатусыОтправитель.СтатусУказанияСерий В (13, 14, 15)
	|					ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|				КОГДА СтатусыПолучатель.СтатусУказанияСерий <> 0
	|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|				ИНАЧЕ СтатусыОтправитель.СтатусУказанияСерий
	|			КОНЕЦ <> Товары.СтатусУказанияСерий)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийОбеспечениеМатериаламиИРаботами()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Склад КАК Склад,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Серия КАК Серия,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.СтатусУказанияСерийОтправитель КАК СтатусУказанияСерийОтправитель,
	|	Товары.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерийПолучатель,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
	|	Товары.Подразделение КАК Подразделение,
	|	Товары.ПроизводствоНаСтороне КАК ПроизводствоНаСтороне,
	|	Товары.Отменено КАК Отменено
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Товары.Отменено
	|				ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|				ИЛИ НЕ Товары.ВариантОбеспечения В (
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить))
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					КОГДА Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|						ТОГДА 15
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					КОГДА Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|						ТОГДА 11
	|					ИНАЧЕ 9
	|				КОНЕЦ
	// При отгрузке из нашей кладовой
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|				И Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).ЦеховаяКладовая
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).Подразделение = Товары.Подразделение
	|				И НЕ Товары.ПроизводствоНаСтороне
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА 6
	|								ИНАЧЕ 5
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 8
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеНаВнутренниеНужды
	|				И Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).ЦеховаяКладовая
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).Подразделение = Товары.Подразделение
	|				И НЕ Товары.ПроизводствоНаСтороне
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыОтправитель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО Товары.Номенклатура = СпрНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО Товары.Склад = ПолитикиУчетаСерий.Склад
	|			И (СпрНоменклатура.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Товары.Отменено
	|				ИЛИ ВидыНоменклатуры.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|				И Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).ЦеховаяКладовая
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).Подразделение = Товары.Подразделение
	|				И НЕ Товары.ПроизводствоНаСтороне
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыПолучатель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО Товары.Номенклатура = СпрНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (СпрНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	СтатусыОтправитель.СтатусУказанияСерий КАК СтатусУказанияСерийОтправитель,
	|	СтатусыПолучатель.СтатусУказанияСерий КАК СтатусУказанияСерийПолучатель,
	|	ВЫБОР
	|		КОГДА СтатусыПолучатель.СтатусУказанияСерий <> 0
	|			ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|		ИНАЧЕ СтатусыОтправитель.СтатусУказанияСерий
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыОтправитель КАК СтатусыОтправитель
	|		ПО Товары.НомерСтроки = СтатусыОтправитель.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыПолучатель КАК СтатусыПолучатель
	|		ПО Товары.НомерСтроки = СтатусыПолучатель.НомерСтроки
	|ГДЕ
	|	(СтатусыОтправитель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийОтправитель
	|			ИЛИ СтатусыПолучатель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийПолучатель
	|			ИЛИ ВЫБОР
	|				КОГДА СтатусыПолучатель.СтатусУказанияСерий <> 0
	|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|				ИНАЧЕ СтатусыОтправитель.СтатусУказанияСерий
	|			КОНЕЦ <> Товары.СтатусУказанияСерий)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийРасходМатериаловИРабот()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий.УказыватьПриРасходеМатериалов
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 2
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО Товары.Номенклатура = СпрНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (СпрНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийЭкономияМатериалов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Получатель КАК Склад,
	|	Товары.Назначение КАК Назначение,
	|	Товары.ДатаОперации КАК ДатаОперации,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.СтатусУказанияСерийОтправитель КАК СтатусУказанияСерийОтправитель,
	|	Товары.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерийПолучатель,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Подразделение КАК Подразделение,
	|	Товары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Склад КАК Склад,
	|	Товары.Назначение КАК Назначение,
	|	Товары.ДатаОперации КАК ДатаОперации,
	|	Товары.Подразделение КАК Подразделение,
	|	Товары.Ссылка КАК Ссылка,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Склад,
	|	Товары.Назначение,
	|	Товары.ДатаОперации,
	|	Товары.Подразделение,
	|	Товары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика,
	|	Серии.Получатель КАК Склад,
	|	Серии.Назначение КАК Назначение,
	|	Серии.ДатаОперации КАК ДатаОперации,
	|	Серии.Подразделение КАК Подразделение,
	|	Серии.Ссылка КАК Ссылка,
	|	Серии.Количество КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика,
	|	Серии.Склад КАК Склад,
	|	Серии.Назначение КАК Назначение,
	|	Серии.ДатаОперации КАК ДатаОперации,
	|	Серии.Подразделение КАК Подразделение,
	|	Серии.Ссылка КАК Ссылка,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Склад,
	|	Серии.Назначение,
	|	Серии.ДатаОперации,
	|	Серии.Подразделение,
	|	Серии.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыОтправитель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Склад = ТоварыДляЗапроса.Склад
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.ДатаОперации = ТоварыДляЗапроса.ДатаОперации
	|			И Товары.Подразделение = ТоварыДляЗапроса.Подразделение
	|			И Товары.Ссылка = ТоварыДляЗапроса.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (СправочникНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|				ИЛИ НЕ Склады.ЦеховаяКладовая
	|				ИЛИ Склады.Подразделение <> Товары.Подразделение
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 8
	|					ИНАЧЕ 7
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоПрочемуОприходованию
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыПолучатель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Склад = ТоварыДляЗапроса.Склад
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.ДатаОперации = ТоварыДляЗапроса.ДатаОперации
	|			И Товары.Подразделение = ТоварыДляЗапроса.Подразделение
	|			И Товары.Ссылка = ТоварыДляЗапроса.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|		ПО Товары.Номенклатура = СерииДляЗапроса.Номенклатура
	|			И Товары.Характеристика = СерииДляЗапроса.Характеристика
	|			И Товары.Склад = СерииДляЗапроса.Склад
	|			И Товары.Назначение = СерииДляЗапроса.Назначение
	|			И Товары.ДатаОперации = СерииДляЗапроса.ДатаОперации
	|			И Товары.Подразделение = СерииДляЗапроса.Подразделение
	|			И Товары.Ссылка = СерииДляЗапроса.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО Товары.Склад = Склады.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО Товары.Склад = ПолитикиУчетаСерий.Склад
	|			И (СправочникНоменклатура.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	СтатусыОтправитель.СтатусУказанияСерий КАК СтатусУказанияСерийОтправитель,
	|	СтатусыПолучатель.СтатусУказанияСерий КАК СтатусУказанияСерийПолучатель,
	|	ВЫБОР
	|		КОГДА СтатусыОтправитель.СтатусУказанияСерий <> 0
	|			ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|		ИНАЧЕ СтатусыПолучатель.СтатусУказанияСерий
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыОтправитель КАК СтатусыОтправитель
	|		ПО Товары.НомерСтроки = СтатусыОтправитель.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыПолучатель КАК СтатусыПолучатель
	|		ПО Товары.НомерСтроки = СтатусыПолучатель.НомерСтроки
	|ГДЕ
	|	(СтатусыОтправитель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийОтправитель
	|			ИЛИ СтатусыПолучатель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийПолучатель
	|			ИЛИ ВЫБОР
	|				КОГДА СтатусыОтправитель.СтатусУказанияСерий <> 0
	|					ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|				ИНАЧЕ СтатусыПолучатель.СтатусУказанияСерий
	|			КОНЕЦ <> Товары.СтатусУказанияСерий)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

Функция ПараметрыРедактированияЭтапа() Экспорт

	ПараметрыРедактированияЭтапа = УправлениеПроизводством.ПараметрыРедактированияЭтапа("Обработка");
	Возврат ПараметрыРедактированияЭтапа;

КонецФункции

#КонецОбласти

#КонецЕсли
