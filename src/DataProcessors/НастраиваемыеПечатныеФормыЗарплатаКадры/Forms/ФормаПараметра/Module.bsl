#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Имя = Параметры.Имя;
	ИмяПриОткрытии = Имя;
	ЗаголовокПоля = Параметры.Заголовок;
	ДанныеРеквизитаДокумента = Параметры.ДанныеРеквизитаДокумента;
	
	ТипЗначения = КадровыйЭДО.ТипЗначенияШаблонаДокументов(Параметры.ТипЗначения);
	ТекущийРеквизит = Параметры.ТекущийРеквизит;
	Значение = Параметры.Значение;
	Обязательный = Параметры.Обязательный;
	
	Если ЗначениеЗаполнено(Параметры.ДоступныеЗначения) Тогда
		Если ТипЗначения = Перечисления.ТипыРеквизитовШаблоновДокументов.Строка
			Или ТипЗначения = Перечисления.ТипыРеквизитовШаблоновДокументов.Текст Тогда
			ТипЗначения = Перечисления.ТипыРеквизитовШаблоновДокументов.Перечисление;
			ЗначенияСписка = Параметры.ДоступныеЗначения;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьПредставлениеЗначенияСписка(ЭтотОбъект);
	УстановитьДоступностьЭлементовФормы(ЭтотОбъект);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"Имя",
		"ТолькоПросмотр",
		Не ДанныеРеквизитаДокумента);
	
	Если ДанныеРеквизитаДокумента Тогда
		Заголовок = НСтр("ru = 'Реквизит документа';
						|en = 'Реквизит документа'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены.
			|Закрыть?';
			|en = 'The data is changed.
			|Save the changes?'");
		Оповещение = Новый ОписаниеОповещения("ОбработатьВопросОЗакрытииБезСохранения", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ТипЗначения = Перечисления.ТипыРеквизитовШаблоновДокументов.Перечисление Тогда
		
		Если ЗначенияСписка.Количество() < 2 Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не задан список значений для выбора (должно быть не менее 2-х значений)';
														|en = 'Не задан список значений для выбора (должно быть не менее 2-х значений)'"), , "Перечисление", , Отказ);
		КонецЕсли;
		
		Если Не Отказ
			И (Не ЗначениеЗаполнено(Значение)
				Или ЗначенияСписка.НайтиПоЗначению(Значение) = Неопределено) Тогда
				
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не задано начальное значение';
														|en = 'Не задано начальное значение'"), , "Значение", , Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
		
#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗаголовокПоляПриИзменении(Элемент)
	
	ПредложенияЗаголовка = СтрРазделить(ЗаголовокПоля, ".");
	Если ДанныеРеквизитаДокумента Тогда
		Имя = ИмяПриОткрытии;
	Иначе
		Имя = "";
	КонецЕсли;
	Для Каждого Предложение Из ПредложенияЗаголовка Цикл
		СловаЗаголовка = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(Предложение);
		Если Не ПустаяСтрока(Имя)
			И Не СтрЗаканчиваетсяНа(Имя, ".") Тогда
			
			Имя = Имя + ".";
		КонецЕсли;
		Для Каждого СловоЗаголовка Из СловаЗаголовка Цикл
			Если СтрНайти(НРег(Имя), НРег(СловоЗаголовка)) = 0 Тогда
				Имя = Имя + ВРег(Лев(СловоЗаголовка, 1));
				Если СтрДлина(СловоЗаголовка) > 1 Тогда
					Имя = Имя + Сред(СловоЗаголовка, 2);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Если Не (СтроковыеФункцииКлиентСервер.ТолькоЛатиницаВСтроке(Лев(Имя, 1))
		Или СтроковыеФункцииКлиентСервер.ТолькоКириллицаВСтроке(Лев(Имя, 1))) Тогда
		
		Имя = "_" + Имя;
	КонецЕсли;
	
	Если СтрЗаканчиваетсяНа(Имя, ".") Тогда
		Имя = Лев(Имя, СтрДлина(Имя) - 1)
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(ИмяПриОткрытии) И Не СтрНачинаетсяС(Имя, ИмяПриОткрытии) Тогда
		ИмяПриОткрытии = "";
	КонецЕсли;
	НормализованноеИмя = "";
	ДобавитьВВерхнемРегистре = Истина;
	Для НомерСимвола = 1 По СтрДлина(Имя) Цикл
		КодСимвола = КодСимвола(Имя, НомерСимвола);
		Если Не СтроковыеФункцииКлиентСервер.ЭтоРазделительСлов(КодСимвола) Тогда
			Если ДобавитьВВерхнемРегистре Тогда
				НормализованноеИмя = НормализованноеИмя + ВРег(Сред(Имя, НомерСимвола, 1));
				ДобавитьВВерхнемРегистре = Ложь;
			Иначе
				НормализованноеИмя = НормализованноеИмя + Сред(Имя, НомерСимвола, 1);
			КонецЕсли;
		Иначе
			Если Сред(Имя, НомерСимвола, 1) = " " Тогда
				ДобавитьВВерхнемРегистре = Истина;
			КонецЕсли;
			Если ДанныеРеквизитаДокумента
				И Сред(Имя, НомерСимвола, 1) = "." Тогда
				
				НормализованноеИмя = НормализованноеИмя + ".";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если Не (СтроковыеФункцииКлиентСервер.ТолькоЛатиницаВСтроке(Лев(НормализованноеИмя, 1))
		Или СтроковыеФункцииКлиентСервер.ТолькоКириллицаВСтроке(Лев(НормализованноеИмя, 1))) Тогда
		
		НормализованноеИмя = "_" + НормализованноеИмя;
	КонецЕсли;
	Имя = НормализованноеИмя;
	Если ПустаяСтрока(ЗаголовокПоля) Тогда
		УстановитьЗаголовок();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеДекорацияНажатие(Элемент)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("СписокЗначенийВыбора", ЗначенияСписка);
	ПараметрыОткрытия.Вставить("ТипЗначения", Новый ОписаниеТипов("Строка"));
	ПараметрыОткрытия.Вставить("ДанныеРеквизитаДокумента", ДанныеРеквизитаДокумента);
	
	Оповещение = Новый ОписаниеОповещения("ПеречислениеПослеИзменения", ЭтотОбъект);
	ОткрытьФорму("Обработка.НастраиваемыеПечатныеФормыЗарплатаКадры.Форма.РедактированиеСпискаЗначений",
		ПараметрыОткрытия, ЭтотОбъект, Истина, , , Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЗначенияПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	
	Если Модифицированность Тогда
		Если ПроверитьЗаполнение() Тогда
			ОписаниеПараметра = Новый Структура;
			ОписаниеПараметра.Вставить("Имя", Имя);
			ОписаниеПараметра.Вставить("ИмяДоРедактирования", ?(ЗначениеЗаполнено(ИмяПриОткрытии), ИмяПриОткрытии, Имя));
			ОписаниеПараметра.Вставить("Заголовок", ЗаголовокПоля);
			ОписаниеПараметра.Вставить("ТекущийРеквизит", ТекущийРеквизит);
			Если ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Строка") Тогда
				ОписаниеПараметра.Вставить("ТипЗначения", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150)));
			ИначеЕсли ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Текст") Тогда
				ОписаниеПараметра.Вставить("ТипЗначения", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки()));
			ИначеЕсли ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.ЦелоеЧисло") Тогда
				ОписаниеПараметра.Вставить("ТипЗначения", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
			ИначеЕсли ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Число2ЗнакаПослеЗапятой") Тогда
				ОписаниеПараметра.Вставить("ТипЗначения", Новый ОписаниеТипов("Число", , Новый КвалификаторыЧисла(15, 2)));
			ИначеЕсли ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Дата") Тогда
				ОписаниеПараметра.Вставить("ТипЗначения", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
			ИначеЕсли ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Период") Тогда
				ОписаниеПараметра.Вставить("ТипЗначения", Новый ОписаниеТипов("СтандартныйПериод"));
			ИначеЕсли ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Булево") Тогда
				ОписаниеПараметра.Вставить("ТипЗначения", Новый ОписаниеТипов("Булево"));
			ИначеЕсли ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Перечисление") Тогда
				ОписаниеПараметра.Вставить("ТипЗначения", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150)));
				ОписаниеПараметра.Вставить("ДоступныеЗначения", ЗначенияСписка);
			КонецЕсли;
			ОписаниеПараметра.Вставить("Значение", Значение);
			ОписаниеПараметра.Вставить("Обязательный", Обязательный);
			Модифицированность = Ложь;
			Закрыть(ОписаниеПараметра);
		КонецЕсли;
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура УстановитьЗаголовок()
	
	Если ДанныеРеквизитаДокумента
		И СтрНайти(Имя, ".") > 0 Тогда
		
		ПозицияТочки = СтрНайти(Имя, ".", НаправлениеПоиска.СКонца);
		ЗаголовокПоля = СРед(Имя, ПозицияТочки + 1, 1);
		НомерНачальногоСимвола = ПозицияТочки + 2;
	Иначе
		ЗаголовокПоля = Лев(Имя, 1);
		НомерНачальногоСимвола = 2;
	КонецЕсли;
	ЗаголовокПоля = ВРег(ЗаголовокПоля);
	
	Для НомерСимвола = НомерНачальногоСимвола По СтрДлина(Имя) Цикл
		СимволИмени = Сред(Имя, НомерСимвола, 1);
		Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СимволИмени)
			И ВРег(СимволИмени) = СимволИмени Тогда
			
			ЗаголовокПоля = ЗаголовокПоля + " " + НРег(СимволИмени);
		Иначе
			ЗаголовокПоля = ЗаголовокПоля + СимволИмени;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВопросОЗакрытииБезСохранения(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПеречислениеПослеИзменения(ВыбранныеЗначения, ДополнительныеПараметры) Экспорт
	Если ВыбранныеЗначения <> Неопределено Тогда
		ЗначенияСписка.Очистить();
		Для Каждого ВыбранноеЗначение Из ВыбранныеЗначения Цикл
			ЗначенияСписка.Добавить(ВыбранноеЗначение.Значение, ВыбранноеЗначение.Представление);
		КонецЦикла;
		Если Не ЗначениеЗаполнено(Значение)
			Или ЗначенияСписка.НайтиПоЗначению(Значение) = Неопределено Тогда
			
			Если ЗначенияСписка.Количество() > 0 Тогда
				Значение = ЗначенияСписка[0].Значение;
			КонецЕсли;
		КонецЕсли;
		Модифицированность = Истина;
	КонецЕсли;
	УстановитьПредставлениеЗначенияСписка(ЭтотОбъект);
	УстановитьДоступностьЭлементовФормы(ЭтотОбъект);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПредставлениеЗначенияСписка(УправляемаяФорма)
	Если УправляемаяФорма.ЗначенияСписка.Количество() = 0 Тогда
		ЗаголовокПоля = НСтр("ru = '<нет значений>';
							|en = '<нет значений>'");
	Иначе
		ЗаголовокПоля = УправляемаяФорма.ЗначенияСписка;
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"ПеречислениеДекорация",
		"Заголовок",
		ЗаголовокПоля);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементовФормы(УправляемаяФорма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"ПеречислениеДекорация",
		"Доступность",
		УправляемаяФорма.ТипЗначения =
			ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Перечисление"));
	
	ТипЗначение = Новый ОписаниеТипов("Строка");
	Если УправляемаяФорма.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Текст") Тогда
		ТипЗначение = Новый ОписаниеТипов("Строка");
	ИначеЕсли УправляемаяФорма.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.ЦелоеЧисло") Тогда
		ТипЗначение = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(27,0));
	ИначеЕсли УправляемаяФорма.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Число2ЗнакаПослеЗапятой") Тогда
		ТипЗначение = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(27,2));
	ИначеЕсли УправляемаяФорма.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Дата") Тогда
		ТипЗначение = Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	ИначеЕсли УправляемаяФорма.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Период") Тогда
		ТипЗначение = Новый ОписаниеТипов("СтандартныйПериод");
	ИначеЕсли УправляемаяФорма.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Булево") Тогда
		ТипЗначение = Новый ОписаниеТипов("Булево");
	ИначеЕсли УправляемаяФорма.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Перечисление") Тогда
		ТипЗначение = Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(150));
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"Значение",
		"ОграничениеТипа",
		ТипЗначение);
		
	Если УправляемаяФорма.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Текст") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			УправляемаяФорма.Элементы,
			"Значение",
			"МногострочныйРежим",
			Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			УправляемаяФорма.Элементы,
			"Значение",
			"МногострочныйРежим",
			Ложь);
	КонецЕсли;
	Если УправляемаяФорма.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Перечисление") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			УправляемаяФорма.Элементы,
			"Значение",
			"РежимВыбораИзСписка",
			Истина);
		Если УправляемаяФорма.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Перечисление") Тогда
			УстановитьСписокВыбора(УправляемаяФорма.Элементы, "Значение", УправляемаяФорма.ЗначенияСписка);
		КонецЕсли;
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			УправляемаяФорма.Элементы,
			"Значение",
			"РежимВыбораИзСписка",
			Ложь);
		УстановитьСписокВыбора(УправляемаяФорма.Элементы, "Значение", Новый СписокЗначений);
	КонецЕсли;
	
	Если УправляемаяФорма.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Булево") Тогда
		УправляемаяФорма.Обязательный = Ложь;
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"Обязательный",
		"Видимость",
		УправляемаяФорма.ТипЗначения <> ПредопределенноеЗначение("Перечисление.ТипыРеквизитовШаблоновДокументов.Булево"));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСписокВыбора(Элементы, ИмяЭлемента, СписокВыбора)
	Элемент = Элементы.Найти(ИмяЭлемента);
	Если Элемент <> Неопределено Тогда
		Элемент.СписокВыбора.Очистить();
		Для Каждого ЭлементСписка Из СписокВыбора Цикл
			Элемент.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


