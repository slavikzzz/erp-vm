#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Для Каждого ЭлементСписка Из Параметры.СписокЗначенийВыбора Цикл
		ЗаполнитьЗначенияСвойств(СписокЗначенийВыбора.Добавить(), ЭлементСписка);
	КонецЦикла;
	ТипЗначения = Параметры.ТипЗначения;
	ДанныеРеквизитаДокумента = Параметры.ДанныеРеквизитаДокумента;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"СписокЗначенийВыбораЗначение",
		"ОграничениеТипа",
		ТипЗначения);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокЗначенийВыбора

&НаКлиенте
Процедура СписокЗначенийВыбораПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Элементы.СписокЗначенийВыбора.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = СписокЗначенийВыбора.НайтиПоИдентификатору(
			Элементы.СписокЗначенийВыбора.ТекущаяСтрока);
		Если ТекущиеДанные <> Неопределено Тогда
			Если НоваяСтрока И ТипЗначения.СодержитТип(Тип("Число")) Тогда
				МаксимальноеЗначение = -1;
				Для Каждого ЗначениеСписка Из СписокЗначенийВыбора Цикл
					Если ТекущиеДанные = ЗначениеСписка Тогда
						Продолжить;
					КонецЕсли;
					Если ЗначениеСписка.Значение > МаксимальноеЗначение Тогда
						МаксимальноеЗначение = ЗначениеСписка.Значение;
					КонецЕсли;
				КонецЦикла;
				ТекущиеДанные.Значение = МаксимальноеЗначение + 1;
			Иначе
				Если Копирование Тогда
					ТекущиеДанные.Значение = "";
				КонецЕсли;
				ПредставлениеДоРедактирования = Элементы.СписокЗначенийВыбора.ТекущиеДанные.Представление;
			КонецЕсли;
		Иначе
			ПредставлениеДоРедактирования = ""
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗначенийВыбораПредставлениеПриИзменении(Элемент)
	
	Если Элементы.СписокЗначенийВыбора.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = СписокЗначенийВыбора.НайтиПоИдентификатору(
			Элементы.СписокЗначенийВыбора.ТекущаяСтрока);
		Если ТекущиеДанные <> Неопределено Тогда
			Если ТипЗначения.СодержитТип(Тип("Строка")) Тогда
				Значение = ИдентификаторПоПредставлению(ТекущиеДанные.Представление);
				Если Не ЗначениеЗаполнено(ТекущиеДанные.Значение) Тогда
					Пока ЗначениеНеУникально(Значение, ТекущиеДанные) Цикл
						Значение = НовоеЗначение(Значение);
					КонецЦикла;
					ТекущиеДанные.Значение = Значение;
				Иначе
					Если Не ПустаяСтрока(ПредставлениеДоРедактирования) Тогда
						ПрежнееЗначение = ИдентификаторПоПредставлению(ПредставлениеДоРедактирования);
						Если ПрежнееЗначение = ТекущиеДанные.Значение Тогда
							ТекущиеДанные.Значение = Значение;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗначенийВыбораПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Не ОтменаРедактирования И Элементы.СписокЗначенийВыбора.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = СписокЗначенийВыбора.НайтиПоИдентификатору(
			Элементы.СписокЗначенийВыбора.ТекущаяСтрока);
		Если ТекущиеДанные <> Неопределено Тогда
			Если Не ЗначениеЗаполнено(ТекущиеДанные.Значение)
				И ТекущиеДанные.Значение <> 0 Тогда
				
				ОбщегоНазначенияКлиент.СообщитьПользователю(
					НСтр("ru = 'Значение должно быть заполнено';
						|en = 'Значение должно быть заполнено'"), , "СписокЗначенийВыбораЗначение", , Отказ);
			КонецЕсли;
			Если ДанныеРеквизитаДокумента Тогда
				Если Не СтроковыеФункцииКлиентСервер.ТолькоЛатиницаВСтроке(
					СтроковыеФункцииБЗККлиентСервер.УдалитьЦифрыИзСтроки(СтрЗаменить(ТекущиеДанные.Значение, ".", ""))) Тогда
					
					ОбщегоНазначенияКлиент.СообщитьПользователю(
						НСтр("ru = 'Значение реквизитов документов должны быть написана латиницей';
							|en = 'Значение реквизитов документов должны быть написана латиницей'"), , "СписокЗначенийВыбораЗначение", , Отказ);
				КонецЕсли;
			КонецЕсли;
			Если ЗначениеНеУникально(ТекущиеДанные.Значение, ТекущиеДанные) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(
					НСтр("ru = 'Значение реквизитов должно быть уникальным';
						|en = 'Значение реквизитов должно быть уникальным'"), , "СписокЗначенийВыбораЗначение", , Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Запомнить(Команда)
	
	Если СписокЗначенийВыбора.Количество() < 2 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Количество значений должно быть более одного';
										|en = 'Количество значений должно быть более одного'"));
		Возврат;
	КонецЕсли;
	
	ВозвращаемаяКоллекция = Новый СписокЗначений;
	Для Каждого ЗначениеВыбора Из СписокЗначенийВыбора Цикл
		ВозвращаемаяКоллекция.Добавить(ЗначениеВыбора.Значение, ЗначениеВыбора.Представление);
	КонецЦикла;
	Закрыть(ВозвращаемаяКоллекция);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ИдентификаторПоПредставлению(Представление)
	СловаПредставления =
		СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(Представление);
	Идентификатор = "";
	Для Каждого СловоПредставления Из СловаПредставления Цикл
		Идентификатор = Идентификатор + ВРег(Лев(СловоПредставления, 1));
		Если СтрДлина(СловоПредставления) > 1 Тогда
			Идентификатор = Идентификатор + Сред(СловоПредставления, 2);
		КонецЕсли;
	КонецЦикла;
	Если Не (СтроковыеФункцииКлиентСервер.ТолькоЛатиницаВСтроке(Лев(Идентификатор, 1))
		Или СтроковыеФункцииКлиентСервер.ТолькоКириллицаВСтроке(Лев(Идентификатор, 1))) Тогда
		
		Идентификатор = "_" + Идентификатор;
	КонецЕсли;
	Возврат Идентификатор;
КонецФункции

&НаКлиенте
Функция ЗначениеНеУникально(Значение, ТекущиеДанные)
	Для Каждого ЗначениеСписка Из СписокЗначенийВыбора Цикл
		Если ТекущиеДанные = ЗначениеСписка Тогда
			Продолжить;
		КонецЕсли;
		Если Значение = ЗначениеСписка.Значение Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция НовоеЗначение(Значение)
	Индекс = 0;
	Для НомерСимвола = 0 По СтрДлина(Значение) - 1 Цикл
		Символ = Сред(Значение, СтрДлина(Значение) - НомерСимвола, 1);
		Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Символ) Тогда
			Прервать;
		КонецЕсли;
		Индекс = Индекс + Число(Символ) * Pow(10, НомерСимвола);
	КонецЦикла;
	Возврат Лев(Значение, СтрДлина(Значение) - НомерСимвола) + Формат(Индекс + 1, "ЧГ=");
КонецФункции

#КонецОбласти
