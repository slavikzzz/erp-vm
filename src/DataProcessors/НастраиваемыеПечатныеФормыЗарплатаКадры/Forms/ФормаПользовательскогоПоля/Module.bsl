#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("КомпоновщикНастроекКД", КомпоновщикНастроекКД) Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	ПоляНастроек = Новый Структура;
	ЗаполнитьПоляНастроекСхемыПечатнойФормы(КомпоновщикНастроекКД.Настройки.ДоступныеПоляВыбора.Элементы, ПоляНастроек);
	
	ПоляНастроекСхемы = Новый ФиксированнаяСтруктура(ПоляНастроек);
	
	Если Параметры.ТекущийЭлемент <> Неопределено Тогда
		
		ПользовательскоеПоле = КомпоновщикНастроекКД.Настройки.ПользовательскиеПоля.ПолучитьОбъектПоИдентификатору(Параметры.ТекущийЭлемент);
		
		Если Параметры.Скопировать Тогда
			
			Модифицированность = Истина;
			ЗаголовокПоля = ПодобратьЗаголовокПоля(ПользовательскоеПоле.Заголовок, ПоляНастроекСхемы);
			
		Иначе
			ЗаголовокПоля = ПользовательскоеПоле.Заголовок;
		КонецЕсли;
		
		ВыражениеДетальныхЗаписей = ПользовательскоеПоле.ПолучитьВыражениеДетальныхЗаписей();
		ВыражениеИтоговыхЗаписей = ПользовательскоеПоле.ПолучитьВыражениеИтоговыхЗаписей();
		
		Если ВРег(Лев(ВыражениеИтоговыхЗаписей, 6)) = "СУММА(" Тогда
			ВидВыраженияИтоговыхЗаписей = 0;
		ИначеЕсли ВРег(Лев(ВыражениеИтоговыхЗаписей, 9)) = "МАКСИМУМ(" Тогда
			ВидВыраженияИтоговыхЗаписей = 1;
		ИначеЕсли ВРег(Лев(ВыражениеИтоговыхЗаписей, 8)) = "МИНИМУМ(" Тогда
			ВидВыраженияИтоговыхЗаписей = 2;
		Иначе
			ВидВыраженияИтоговыхЗаписей = 9
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ОбработкаОтветаНаВопросОСохранении", ЭтотОбъект);
		
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Данные были изменены. Сохранить изменения?';
										|en = 'The data has been changed. Do you want to save the changes?'"), РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомпоновщикНастроекКДФиксированныеНастройкиВыборДоступныеПоляВыбораНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не КомпоновщикНастроекКД.ФиксированныеНастройки.Выбор.ДоступныеПоляВыбора.ПолучитьОбъектПоИдентификатору(Элемент.ТекущаяСтрока).Папка Тогда
		
		ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Копирование;
		ПараметрыПеретаскивания.Значение = Строка(Элемент.ТекущаяСтрока);
		
		ПриИзмененииВыраженияДетальныхЗаписей();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаголовокПоляПриИзменении(Элемент)
	
	УстановитьПодсказкуЗаголовкаПоля(ЭтотОбъект, ЗаголовокПоля);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыражениеДетальныхЗаписейПриИзменении(Элемент)
	
	ПриИзмененииВыраженияДетальныхЗаписей();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидВыраженияИтоговыхЗаписейПриИзменении(Элемент)
	
	ПриИзмененииВыраженияДетальныхЗаписей();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыражениеИтоговыхЗаписейПриИзменении(Элемент)
	
	ВидВыраженияИтоговыхЗаписей = 9;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	
	СохранитьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаОтветаНаВопросОСохранении(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		
		Модифицированность = Ложь;
		Закрыть();
		
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
		
		СохранитьИЗакрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть()
	
	Если Модифицированность Тогда
		
		ПараметрыЗакрытия = Новый Структура;
		ПараметрыЗакрытия.Вставить("Заголовок", ЗаголовокПоля);
		ПараметрыЗакрытия.Вставить("ВыражениеДетальныхЗаписей", ВыражениеДетальныхЗаписей);
		ПараметрыЗакрытия.Вставить("ВыражениеИтоговыхЗаписей", ВыражениеИтоговыхЗаписей);
		
		Попытка
			
			ПользовательскоеПоле = КомпоновщикНастроекКД.Настройки.ПользовательскиеПоля.Элементы.Добавить(Тип("ПользовательскоеПолеВыражениеКомпоновкиДанных"));
			ПользовательскоеПоле.Заголовок = ПараметрыЗакрытия.Заголовок;
			
			ПользовательскоеПоле.УстановитьВыражениеДетальныхЗаписей(ПараметрыЗакрытия.ВыражениеДетальныхЗаписей);
			
			Если ЗначениеЗаполнено(ПараметрыЗакрытия.ВыражениеИтоговыхЗаписей) Тогда
				ПользовательскоеПоле.УстановитьВыражениеИтоговыхЗаписей(ПараметрыЗакрытия.ВыражениеИтоговыхЗаписей);
			КонецЕсли;
			
		Исключение
			
			Информация = ИнформацияОбОшибке();
			ВызватьИсключение КраткоеПредставлениеОшибки(Информация);
			
			Возврат;
			
		КонецПопытки;
		
		Модифицированность = Ложь;
		Закрыть(ПараметрыЗакрытия);
		
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоляНастроекСхемыПечатнойФормы(ЭлементыКоллекции, ПоляНастроек, ПользовательскиеПоля = Ложь)
	
	Для Каждого ЭлементКоллекции Из ЭлементыКоллекции Цикл
		
		Если ЭлементКоллекции.Папка Тогда
			ЗаполнитьПоляНастроекСхемыПечатнойФормы(ЭлементКоллекции.Элементы, ПоляНастроек, ЭлементКоллекции.Поле = Новый ПолеКомпоновкиДанных("ПользовательскиеПоля"))
		Иначе
			
			Если ПользовательскиеПоля Тогда
				ПоляНастроек.Вставить(ЗарплатаКадрыКлиентСервер.ИдентификаторМакетаПечатнойФормы(ЭлементКоллекции.Заголовок), ЭлементКоллекции.Заголовок);
			Иначе
				ПоляНастроек.Вставить(ЗарплатаКадрыКлиентСервер.ИдентификаторМакетаПечатнойФормы(ЭлементКоллекции.Поле), ЭлементКоллекции.Заголовок);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииВыраженияДетальныхЗаписей()
	
	Если ЗначениеЗаполнено(ВыражениеДетальныхЗаписей) Тогда
		
		Если ВидВыраженияИтоговыхЗаписей = 0 Тогда
			ВыражениеИтоговыхЗаписей = "СУММА(" + СокрЛП(ВыражениеДетальныхЗаписей) + ")";
		ИначеЕсли ВидВыраженияИтоговыхЗаписей = 1 Тогда
			ВыражениеИтоговыхЗаписей = "МАКСИМУМ(" + СокрЛП(ВыражениеДетальныхЗаписей) + ")";
		ИначеЕсли ВидВыраженияИтоговыхЗаписей = 2 Тогда
			ВыражениеИтоговыхЗаписей = "МИНИМУМ(" + СокрЛП(ВыражениеДетальныхЗаписей) + ")";
		Иначе
			ВыражениеИтоговыхЗаписей = СокрЛП(ВыражениеДетальныхЗаписей);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ПустаяСтрока(ВыражениеДетальныхЗаписей) И ПустаяСтрока(ЗаголовокПоля) Тогда
		ЗаголовокПоля = ПодобратьЗаголовокПоля(СтрЗаменить(СокрЛП(ВыражениеДетальныхЗаписей), ".", " "), ПоляНастроекСхемы);
	КонецЕсли;
	
	УстановитьПодсказкуЗаголовкаПоля(ЭтотОбъект, ЗаголовокПоля);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПодобратьЗаголовокПоля(Знач ЗаголовокПоля, ПоляНастроекСхемы)
	
	Счетчик = Неопределено;
	Если Прав(ЗаголовокПоля, 1) = ")" Тогда
		
		КоличествоОткрывающихСкобок = СтрЧислоВхождений(ЗаголовокПоля, "(");
		Если КоличествоОткрывающихСкобок > 0 Тогда
			
			СтрокаВСкобках = Сред(ЗаголовокПоля, СтрНайти(ЗаголовокПоля, "(", , , КоличествоОткрывающихСкобок) + 1 );
			СтрокаВСкобках = Лев(СтрокаВСкобках, СтрДлина(СтрокаВСкобках) - 1);
			
			Счетчик = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(СтрокаВСкобках);
			
			Если Счетчик <> Неопределено Тогда
				ЗаголовокПоля = СокрЛП(Лев(ЗаголовокПоля, СтрНайти(ЗаголовокПоля, "(", , , КоличествоОткрывающихСкобок) - 1));
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Счетчик = Неопределено Тогда
		Счетчик = 1;
	КонецЕсли;
	
	Пока Счетчик < 999 Цикл
		
		НовыйЗаголовокПоля = ЗаголовокПоля + " (" + Счетчик + ")";
		
		Идентификатор = ЗарплатаКадрыКлиентСервер.ИдентификаторМакетаПечатнойФормы(НовыйЗаголовокПоля);
		Если Не ПоляНастроекСхемы.Свойство(Идентификатор) Тогда
			Прервать;
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
	Возврат НовыйЗаголовокПоля;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПодсказкуЗаголовкаПоля(Форма, ЗаголовокПоля)
	
	Если Не ПустаяСтрока(ЗаголовокПоля) Тогда
		
		Идентификатор = ЗарплатаКадрыКлиентСервер.ИдентификаторМакетаПечатнойФормы(ЗаголовокПоля);
		
		Если Форма.ПоляНастроекСхемы.Свойство(Идентификатор) Тогда
			
			ПутьСуществующегоИдентификатора = Форма.ПоляНастроекСхемы[Идентификатор];
			Подсказка = СтрШаблон(НСтр("ru = 'Получающийся идентификатор ""%1"" занят полем ""%2""';
										|en = 'The resulting ID %1 is occupied by the %2 field'"), Идентификатор, ПутьСуществующегоИдентификатора);
			
		КонецЕсли;
		
		ЗарплатаКадрыКлиентСервер.УстановитьРасширеннуюПодсказкуЭлементуФормы(
			Форма,
			"ЗаголовокПоля",
			Подсказка);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
