#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда	

#Область СлужебныеПроцедурыИФункции

Функция ТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокументов, ОбъектыПечати, ВыводитьЗаголовок = Истина, КомпактныйРежим = Ложь, НомерТаблицыРазделителя = Неопределено) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасчетСреднегоЗаработкаФСС";
	
	Для каждого ДанныеДокумента Из ДанныеДокументов Цикл
		
		Если ДанныеДокумента.ПараметрыРасчета.ПорядокРасчета = ПредопределенноеЗначение("Перечисление.ПорядокРасчетаСреднегоЗаработкаФСС.Постановление2010") Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Печать расчета среднего заработка по правилам 2010 года не поддерживается.';
														|en = 'Cannot print average earnings calculation according to 2010 rules.'"));
			Продолжить;
		КонецЕсли;
		
		Если ВыводитьЗаголовок И ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если КомпактныйРежим Тогда
			ВывестиТабличныйДокументРасчетаСреднегоЗаработкаКомпактный(ДанныеДокумента, ОбъектыПечати, ТабличныйДокумент);
		Иначе
			ВывестиТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокумента, ОбъектыПечати, ТабличныйДокумент, ВыводитьЗаголовок, НомерТаблицыРазделителя);
		КонецЕсли;
		
		Обработки.ПечатьРасчетаСреднегоЗаработка.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеДокумента.РеквизитыДокумента.Ссылка, ДанныеДокумента.РеквизитыДокумента.Сотрудник);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции 

// Подготавливает табличный документ с печатными формами для массива ссылок.
//
// Параметры:
//	МассивСсылок 		- массив ссылок на документы поддерживающие печать среднего заработка.
//	ВыводитьЗаголовок 	- признак того, что надо формировать полную печатную форму.
//
// Возвращаемое значение - структура в которой содержатся
// 		- ТабличныйДокумент, табличный документ с областями для каждой ссылки из массива ссылок.
// 		- ОбъектыПечати, соответствие, ключом которой является ссылка, а значением - имя области табличного документа,
// 			в которой хранится печатная форма для этой ссылки.
//
Функция ОбластиДляВстраивания(ДанныеДокументов, ВыводитьЗаголовок = Ложь, КомпактныйРежим = Ложь, НомерТаблицыРазделителя = Неопределено) Экспорт
	
	ОбъектыПечати = Обработки.ПечатьРасчетаСреднегоЗаработка.ОбъектыПечатиДляВстраиваемыхОбластей();
	
	ТабличныйДокумент = ТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокументов, ОбъектыПечати, ВыводитьЗаголовок, КомпактныйРежим, НомерТаблицыРазделителя);
	
	Возврат Новый Структура("ОбъектыПечати,ТабличныйДокумент", ОбъектыПечати, ТабличныйДокумент);
	
КонецФункции

Процедура ВывестиТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокумента, ОбъектыПечати, ТабличныйДокумент, ВыводитьЗаголовок, НомерТаблицыРазделителя)
	
	ОбластиМакета = ОбластиМакета(ДанныеДокумента);

	Если ВыводитьЗаголовок Тогда
		ВывестиШапку(
			ТабличныйДокумент,
			ОбластиМакета.Шапка,
			ДанныеДокумента.РеквизитыДокумента,
			ДанныеДокумента.КадровыеДанныеСотрудника,
			ДанныеДокумента.ПараметрыРасчета.РасчетныеГоды);
	КонецЕсли;
	
	Если НомерТаблицыРазделителя = 1 Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ОбластиМакета.ЗаголовокНачислений.Параметры.УточнениеИсточникаСреднего = УточнениеИсточникаСреднего(ДанныеДокумента);
	ТабличныйДокумент.Вывести(ОбластиМакета.ЗаголовокНачислений);
	
	ВывестиТаблицуЗаработка(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента);
	
	Если НомерТаблицыРазделителя = 2 Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластиМакета.РасчетСреднегоЗаработкаЗаголовок);
	
	ВывестиРасчетСреднегоЗаработка(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента);
	
	Если НомерТаблицыРазделителя = 3 Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ВывестиМРОТ(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента);
	
	Если НомерТаблицыРазделителя = 4 Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	Если ДанныеДокумента.ПараметрыРасчета.ПрименяетсяФЗ_421_2014
		Или ДанныеДокумента.ПараметрыРасчета.ПрименяетсяФЗ_20_2023 Тогда
		ВывестиМаксимальныйСреднийНеполногоРасчетногоПериода(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента);
	ИначеЕсли ИспользоватьДниБолезниУходаЗаДетьми(ДанныеДокумента)
		Или ПрименятьМаксимальныйСреднедневной(ДанныеДокумента) Тогда
		ВывестиМаксимальныйСреднийПоМатеринству(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента);
	КонецЕсли;	
	
КонецПроцедуры

Функция УточнениеИсточникаСреднего(ДанныеДокумента)
	ИсточникСреднего     = ДанныеДокумента.ПараметрыРасчета.ИсточникСреднего;
	МенеджерПеречисления = Перечисления.ИсточникиСреднегоДляПособий;
	Если ИсточникСреднего = МенеджерПеречисления.ВходящийЗапросФонда Тогда
		Возврат НСтр("ru = '(по данным входящего запроса Фонда)';
					|en = '(based on incoming Fund request data)'");
	ИначеЕсли ИсточникСреднего = МенеджерПеречисления.УчетФонда Тогда
		Возврат НСтр("ru = '(по данным учета Фонда)';
					|en = '(based on Fund accounting data)'");
	ИначеЕсли ИсточникСреднего = МенеджерПеречисления.УчетОрганизации Тогда
		Возврат НСтр("ru = '(по данным учета Организации)';
					|en = '(based on Company accounting data)'");
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции
	
Процедура ВывестиТабличныйДокументРасчетаСреднегоЗаработкаКомпактный(ДанныеДокумента, ОбъектыПечати, ТабличныйДокумент)
	
	ОбластиМакета = ОбластиМакета(ДанныеДокумента);
	
	ТабличныйДокумент.Вывести(ОбластиМакета.ПустойЗаголовокНачислений);
	ВывестиТаблицуЗаработка(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента);
	ВывестиРасчетСреднегоЗаработка(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента);
	
КонецПроцедуры

Процедура ВывестиШапку(ТабличныйДокумент, ОбластьШапка, РеквизитыДокумента, КадровыеДанныеСотрудника, РасчетныеГоды)
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("СинонимДокумента", 			РеквизитыДокумента.Ссылка.Метаданные().Синоним);
	ЗначенияПараметров.Вставить("ДатаДокумента", 				Формат(РеквизитыДокумента.ДатаДокумента, "ДЛФ=DD"));
	ЗначенияПараметров.Вставить("НомерДокумента", ЗарплатаКадрыОтчеты.НомерНаПечать(
		РеквизитыДокумента.НомерДокумента, РеквизитыДокумента.НомерПервичногоДокумента));
	ЗначенияПараметров.Вставить("ДатаНачалаОтсутствия", 		Формат(РеквизитыДокумента.ДатаНачалаОтсутствия, "ДЛФ=D"));
	ЗначенияПараметров.Вставить("ДатаОкончанияОтсутствия", 		Формат(РеквизитыДокумента.ДатаОкончанияОтсутствия,"ДЛФ=D"));
	ЗначенияПараметров.Вставить("НаименованиеОрганизации", 		?(ЗначениеЗаполнено(РеквизитыДокумента.ПолноеНаименованиеОрганизации), РеквизитыДокумента.ПолноеНаименованиеОрганизации, РеквизитыДокумента.НаименованиеОрганизации)); 	
	ЗначенияПараметров.Вставить("ВидЗанятости", 				КадровыеДанныеСотрудника.ВидЗанятости);
	ЗначенияПараметров.Вставить("Подразделение", 				КадровыеДанныеСотрудника.Подразделение);
	ЗначенияПараметров.Вставить("Должность", 					КадровыеДанныеСотрудника.Должность);
	ЗначенияПараметров.Вставить("ФИОРаботника", 				КадровыеДанныеСотрудника.ФИОПолные);
	ЗначенияПараметров.Вставить("ТабельныйНомер", 				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(КадровыеДанныеСотрудника.ТабельныйНомер, Истина, Истина));
	ЗначенияПараметров.Вставить("РасчетныеГоды", 				ОписаниеРасчетныхЛет(РасчетныеГоды));
	
	НастройкиПечатныхФорм = ЗарплатаКадры.НастройкиПечатныхФорм();
	
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластьШапка);
КонецПроцедуры

Процедура ВывестиТаблицуЗаработка(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента)
	ПараметрыРасчета = ДанныеДокумента.ПараметрыРасчета;
	ИсточникСреднего = ПараметрыРасчета.ИсточникСреднего;
	ИсточникЭтоЗапросСФР  = (ИсточникСреднего = Перечисления.ИсточникиСреднегоДляПособий.ВходящийЗапросФонда);
	ИсточникЭтоСреднийСФР = (ИсточникСреднего = Перечисления.ИсточникиСреднегоДляПособий.УчетФонда);
	Если ИсточникЭтоЗапросСФР Или ИсточникЭтоСреднийСФР Тогда
		Для Каждого СтрокаИсточника Из ПараметрыРасчета.СреднийЗаработокСЭДО Цикл
			Если Не УчетПособийСоциальногоСтрахованияКлиентСервер.УчитыватьСтрокуИсточникаСреднегоЗаработкаПоДаннымФонда(
					СтрокаИсточника, ПараметрыРасчета) Тогда 
				Продолжить;
			КонецЕсли;
			ПредставлениеТипа = "";
			Если ЗначениеЗаполнено(СтрокаИсточника.Основание) Тогда
				Если ТипЗнч(СтрокаИсточника.Основание) = Тип("ДокументСсылка.ВходящийЗапросФССДляРасчетаПособия") Тогда
					ПредставлениеТипа = НСтр("ru = 'Входящий запрос СФР (сообщение 100)';
											|en = 'Incoming request from Social Insurance Fund of Russia (message 100)'");
				ИначеЕсли ТипЗнч(СтрокаИсточника.Основание) = Тип("ДокументСсылка.СреднийЗаработокСЭДО") Тогда
					ПредставлениеТипа = НСтр("ru = 'Средний заработок СФР (сообщение 321)';
											|en = 'Average earnings of Social Insurance Fund of Russia (message 321)'");
				Иначе
					ПредставлениеТипа = Строка(СтрокаИсточника.Основание);
				КонецЕсли;
			КонецЕсли;
			ОбластиМакета.СтрокаНачислений.Параметры.ПредставлениеДанныхСтрокиНачислений = СтрШаблон(
				НСтр("ru = '%1 за %2 год: %3
					|Источник: %4 %5';
					|en = '%1 for %2: %3
					|Source: %4 %5'"),
				Строка(СтрокаИсточника.ВидЗаработка),
				Формат(СтрокаИсточника.РасчетныйГод, "ЧГ="),
				Формат(СтрокаИсточника.Заработок, "ЧН="),
				ПредставлениеТипа,
				Строка(СтрокаИсточника.Идентификатор));
			ТабличныйДокумент.Вывести(ОбластиМакета.СтрокаНачислений);
			ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель1);
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластиМакета.ЗаголовокТаблицы);
	
	Если ПараметрыРасчета.ИспользоватьДниБолезниУходаЗаДетьми Тогда
		ТабличныйДокумент.Присоединить(ОбластиМакета.ЗаголовокТаблицыДнейБолезниУходаЗаДетьми);
	КонецЕсли;
	
	Если ПараметрыРасчета.УчитыватьЗаработокПредыдущихСтрахователей Тогда
		ТабличныйДокумент.Присоединить(ОбластиМакета.ЗаголовокТаблицыСтрахователь);
	КонецЕсли;
	
	ЗначенияПараметров = Новый Структура("РасчетныйГод, Заработок, ДнейБолезниУходаЗаДетьми, Страхователь");
	РасчетныйГодМакс = 0;
	
	Для Каждого РасчетныйГод Из ПараметрыРасчета.РасчетныеГоды Цикл
		РасчетныйГодМакс = Макс(РасчетныйГодМакс, РасчетныйГод);
		СтрокаПоГоду = УчетПособийСоциальногоСтрахованияКлиентСервер.ЭлементКоллекцииПоОтбору(ДанныеДокумента.ДанныеРасчетаСреднего, Новый Структура("РасчетныйГод", РасчетныйГод));
		Если СтрокаПоГоду = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначенияПараметров.РасчетныйГод = СтрокаПоГоду.РасчетныйГод;
		
		ВыведеноСтрок = 0;
		Для Каждого СтрокаПоСтрахователю Из СтрокаПоГоду.Страхователи Цикл
			ЗаполнитьЗначенияСвойств(ЗначенияПараметров, СтрокаПоСтрахователю);
			Если ЗначенияПараметров.Страхователь = Неопределено Тогда
				Если ЗначенияПараметров.Заработок = 0 Тогда
					Продолжить; // Сотрудник не работал у текущего работодателя.
				КонецЕсли;
				ЗначенияПараметров.Страхователь = ДанныеДокумента.КадровыеДанныеСотрудника.Страхователь;
			КонецЕсли;
			ВывестиСтрокуПоСтрахователю(ТабличныйДокумент, ДанныеДокумента, ОбластиМакета, ЗначенияПараметров);
			ВыведеноСтрок = ВыведеноСтрок + 1;
		КонецЦикла;
		Если ВыведеноСтрок = 0 Тогда
			ЗначенияПараметров.Страхователь = "";
			ЗначенияПараметров.Заработок = 0;
			ЗначенияПараметров.ДнейБолезниУходаЗаДетьми = 0;
			ВывестиСтрокуПоСтрахователю(ТабличныйДокумент, ДанныеДокумента, ОбластиМакета, ЗначенияПараметров);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ОбластиМакета.ТекущийИтог.Параметры, СтрокаПоГоду);
		ТабличныйДокумент.Вывести(ОбластиМакета.ТекущийИтог);
	КонецЦикла;
	
	Заработок = УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыйЗаработокФСС(ПараметрыРасчета, ДанныеДокумента.ДанныеРасчетаСреднего);
	ПредставлениеЗаработка = Формат(Заработок.Всего, "ЧЦ=15; ЧДЦ=2; ЧН=0.00");
	Если Заработок.РК > 0 Или Заработок.СН > 0 Тогда
		РК = Формат(Заработок.РК, "ЧЦ=15; ЧДЦ=2; ЧН=0.00");
		СН = Формат(Заработок.СН, "ЧЦ=15; ЧДЦ=2; ЧН=0.00");
		ПредставлениеЗаработка = ПредставлениеЗаработка + "," + Символы.ПС
			+ СтрШаблон(НСтр("ru = 'в том числе РК: %1, СН: %2';
							|en = 'в том числе РК: %1, СН: %2'"), РК, СН);
	КонецЕсли;
	ОбластиМакета.ПодвалТаблицыЗаработка.Параметры.ВсегоЗаработка = ПредставлениеЗаработка;
	ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель1);
	ТабличныйДокумент.Вывести(ОбластиМакета.ПодвалТаблицыЗаработка);
	ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель1);
	
	ПараметрыРасчета = ПараметрыРасчета;
	Если ПараметрыРасчета.УчитыватьДниПриостановленияТД Тогда
		ДнейПриостановленияТД = ПараметрыРасчета.ДнейПриостановленияТДЗаГод1 + ПараметрыРасчета.ДнейПриостановленияТДЗаГод2;
		Если РасчетныйГодМакс >= 2022
			Или ДнейПриостановленияТД > 0
			Или (РасчетныйГодМакс = 0 И Год(ПараметрыРасчета.ДатаНачалаСобытия) >= 2023) Тогда
			ПриостановленияТД = ПараметрыРасчета.ПриостановленияТрудовыхДоговоров;
			ОбластьШапка = ОбластиМакета.ДнейПриостановленияТДШапка;
			ОбластьШапка.Параметры.ДнейПриостановленияТД = Формат(ДнейПриостановленияТД, "ЧН=; ЧГ=");
			ТабличныйДокумент.Вывести(ОбластьШапка);
			Если ПриостановленияТД <> Неопределено Тогда
				ОбластьСтрока = ОбластиМакета.ДнейПриостановленияТДСтрока;
				Для Каждого СтрокаТаблицы Из ПриостановленияТД Цикл
					ПричинаПТД = Строка(СтрокаТаблицы.ОснованиеНПА);
					Если ПричинаПТД <> "" Тогда
						Позиция = СтрНайти(ПричинаПТД, "(");
						Если Позиция > 0 Тогда
							ПричинаПТД = СокрП(Лев(ПричинаПТД, Позиция - 1));
						КонецЕсли;
						ПричинаПТД = "- " + НРег(Лев(ПричинаПТД, 1)) + Сред(ПричинаПТД, 2);
					КонецЕсли;
					ОбластьСтрока.Параметры.ДатаНачалаПТД    = Формат(СтрокаТаблицы.ДатаНачала,    "ДЛФ=D");
					ОбластьСтрока.Параметры.ДатаОкончанияПТД = Формат(СтрокаТаблицы.ДатаОкончания, "ДЛФ=D");
					ОбластьСтрока.Параметры.ДнейПТД          = ЗарплатаКадрыКлиентСервер.ПредставлениеДней(СтрокаТаблицы.КалендарныхДней);
					ОбластьСтрока.Параметры.ПричинаПТД       = ПричинаПТД;
					ТабличныйДокумент.Вывести(ОбластьСтрока);
				КонецЦикла;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель1);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиСтрокуПоСтрахователю(ТабличныйДокумент, ДанныеДокумента, ОбластиМакета, ЗначенияПараметров)	
	ЗаполнитьЗначенияСвойств(ОбластиМакета.Строка.Параметры, ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластиМакета.Строка);
	Если ДанныеДокумента.ПараметрыРасчета.ИспользоватьДниБолезниУходаЗаДетьми Тогда
		ЗаполнитьЗначенияСвойств(ОбластиМакета.СтрокаДнейБолезниУходаЗаДетьми.Параметры, ЗначенияПараметров);
		ТабличныйДокумент.Присоединить(ОбластиМакета.СтрокаДнейБолезниУходаЗаДетьми);
	КонецЕсли;
	Если ДанныеДокумента.ПараметрыРасчета.УчитыватьЗаработокПредыдущихСтрахователей Тогда
		ЗаполнитьЗначенияСвойств(ОбластиМакета.СтрокаСтрахователь.Параметры, ЗначенияПараметров);
		ТабличныйДокумент.Присоединить(ОбластиМакета.СтрокаСтрахователь);
	КонецЕсли;
КонецПроцедуры

Процедура ВывестиРасчетСреднегоЗаработка(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента)
	
	УчитываемыхДнейВКалендарныхГодах = УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыхДнейВКалендарныхГодахФСС(ДанныеДокумента.ПараметрыРасчета, ДанныеДокумента.ДанныеРасчетаСреднего);
	ВсегоЗаработка = УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыйЗаработокФСС(ДанныеДокумента.ПараметрыРасчета, ДанныеДокумента.ДанныеРасчетаСреднего).Всего;
	СреднедневнойЗаработок = УчетПособийСоциальногоСтрахованияКлиентСервер.СреднедневнойЗаработокФСС(ВсегоЗаработка, УчитываемыхДнейВКалендарныхГодах);

	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ВсегоЗаработка", 					Формат(ВсегоЗаработка , "ЧЦ=15; ЧДЦ=2; ЧН=0.00"));
	ЗначенияПараметров.Вставить("УчитываемыхДнейВКалендарныхГодах", Формат(УчитываемыхДнейВКалендарныхГодах, "ЧДЦ="));
	ЗначенияПараметров.Вставить("СреднедневнойЗаработок", 			Формат(СреднедневнойЗаработок, "ЧЦ=15; ЧДЦ=2; ЧН=0.00"));
	ЗаполнитьЗначенияСвойств(ОбластиМакета.РасчетСреднегоЗаработка.Параметры, ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластиМакета.РасчетСреднегоЗаработка);
	
	ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель2);

КонецПроцедуры

Процедура ВывестиМРОТ(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента)
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ДатаНачалаСобытия", 	Формат(ДанныеДокумента.ПараметрыРасчета.ДатаНачалаСобытия, "ДЛФ=D"));
	ЗначенияПараметров.Вставить("МРОТ", 				ДанныеДокумента.ПараметрыРасчета.МинимальныйРазмерОплатыТрудаРФ);
	ЗаполнитьЗначенияСвойств(ОбластиМакета.ШапкаМРОТ.Параметры,	ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластиМакета.ШапкаМРОТ);
	
	Если ДанныеДокумента.ПараметрыРасчета.ДоляНеполногоВремени < 1 Тогда
		ЗначенияПараметров.Очистить();
		ЗначенияПараметров.Вставить("ДоляНеполногоВремени", ДанныеДокумента.ПараметрыРасчета.ДоляНеполногоВремени);
		ЗаполнитьЗначенияСвойств(ОбластиМакета.НеполноеВремя.Параметры, ЗначенияПараметров);
		ТабличныйДокумент.Вывести(ОбластиМакета.НеполноеВремя);
	КонецЕсли;
	
	МинимальныйСреднедневнойЗаработок = УчетПособийСоциальногоСтрахованияКлиентСервер.МинимальныйСреднедневнойЗаработокФСС(ДанныеДокумента.ПараметрыРасчета);	

	ЗначенияПараметров.Вставить("СреднийМРОТ", МинимальныйСреднедневнойЗаработок);
	ЗаполнитьЗначенияСвойств(ОбластиМакета.ОкончаниеМРОТ.Параметры,	ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластиМакета.ОкончаниеМРОТ);
	
КонецПроцедуры

Процедура ВывестиМаксимальныйСреднийПоМатеринству(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента)
	
	ТабличныйДокумент.Вывести(ОбластиМакета.МаксимальныйСреднедневнойЗаголовок);
	
	ГодыПредельныхВеличин = УчетПособийСоциальногоСтрахованияКлиентСервер.ГодыПредельныхВеличинДляОграниченияПособияПоМатеринству(ДанныеДокумента.ПараметрыРасчета);
	
	Если ОбластиМакета.Свойство("МаксимальныйСреднедневнойГоды") Тогда
		ПредшествующиеГоды  = "";
		
		Для каждого РасчетныйГод Из ГодыПредельныхВеличин Цикл
			Если ПредшествующиеГоды = "" Тогда
				ПредшествующиеГоды = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1';
																									|en = '%1'"), Формат(РасчетныйГод, "ЧГ=0"));
			Иначе	
				ПредшествующиеГоды = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 и %2';
																									|en = '%1 and %2'"), ПредшествующиеГоды, Формат(РасчетныйГод, "ЧГ=0"));
			КонецЕсли;
		КонецЦикла;
		
		ЗначенияПараметров = Новый Структура;
		ЗначенияПараметров.Вставить("ПредшествующиеГоды", 	ПредшествующиеГоды);
		ЗаполнитьЗначенияСвойств(ОбластиМакета.МаксимальныйСреднедневнойГоды.Параметры,	ЗначенияПараметров);
		ТабличныйДокумент.Вывести(ОбластиМакета.МаксимальныйСреднедневнойГоды);
	КонецЕсли;
	
	Для каждого РасчетныйГод Из ГодыПредельныхВеличин Цикл
		ПредельнаяВеличина = ДанныеДокумента.ПараметрыРасчета.ПредельныеВеличиныПоГодам.Получить(РасчетныйГод);
		ЗначенияПараметров = Новый Структура;
		ЗначенияПараметров.Вставить("РасчетныйГод", 		Формат(РасчетныйГод, "ЧГ=0"));
		ЗначенияПараметров.Вставить("ПредельнаяВеличина", 	ПредельнаяВеличина);
		ЗаполнитьЗначенияСвойств(ОбластиМакета.МаксимальныйСреднедневнойГод.Параметры, ЗначенияПараметров);
		ТабличныйДокумент.Вывести(ОбластиМакета.МаксимальныйСреднедневнойГод);
	КонецЦикла;
	
	МаксимальныйСреднедневнойЗаработок = УчетПособийСоциальногоСтрахованияКлиентСервер.МаксимальныйСреднедневнойЗаработокДляОплатыПособияПоМатеринству(ДанныеДокумента.ПараметрыРасчета);
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("МаксимальныйСреднедневнойЗаработок", 	МаксимальныйСреднедневнойЗаработок);
	ЗаполнитьЗначенияСвойств(ОбластиМакета.МаксимальныйСреднедневнойЗначение.Параметры,	ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластиМакета.МаксимальныйСреднедневнойЗначение);
	
КонецПроцедуры

Процедура ВывестиМаксимальныйСреднийНеполногоРасчетногоПериода(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента)
	
	ДатаНачалаСобытия = ДанныеДокумента.ПараметрыРасчета.ДатаНачалаСобытия;
	
	Если ДанныеДокумента.ПараметрыРасчета.ПрименяетсяФЗ_421_2014 Тогда
		МаксимальныйСреднедневнойЗаработок = УчетПособийСоциальногоСтрахованияКлиентСервер.МаксимальныйСреднедневнойЗаработокДляФЗ_421_2014(ДатаНачалаСобытия);
	Иначе
		МаксимальныйСреднедневнойЗаработок = УчетПособийСоциальногоСтрахованияКлиентСервер.МаксимальныйСреднедневнойЗаработокДляФЗ_20_2023(ДатаНачалаСобытия);
	КонецЕсли;
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("МаксимальныйСреднедневнойЗаработок", 	МаксимальныйСреднедневнойЗаработок);
	ЗначенияПараметров.Вставить("ГодНаступленияСтраховогоСлучая", 		Формат(ДатаНачалаСобытия, "ДФ=yyyy"));
	ЗаполнитьЗначенияСвойств(ОбластиМакета.МаксимальныйСреднийНеполногоПериода.Параметры, ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластиМакета.МаксимальныйСреднийНеполногоПериода);
	
КонецПроцедуры

Функция ИспользоватьДниБолезниУходаЗаДетьми(ДанныеДокумента)
	Возврат ДанныеДокумента.ПараметрыРасчета.ИспользоватьДниБолезниУходаЗаДетьми;
КонецФункции

Функция ПрименятьМаксимальныйСреднедневной(ДанныеДокумента)
	Возврат УчетПособийСоциальногоСтрахованияКлиентСервер.ПрименятьМаксимальныйСреднедневнойБезУчетаИсключаемыхПериодов(
		ДанныеДокумента.ПараметрыРасчета);
КонецФункции

Функция ОбластиМакета(ДанныеДокумента)
	ИспользоватьДниБолезниУходаЗаДетьми = ИспользоватьДниБолезниУходаЗаДетьми(ДанныеДокумента);
	ПрименятьМаксимальныйСреднедневной = ПрименятьМаксимальныйСреднедневной(ДанныеДокумента);
	
	ОбластиМакета = Новый Структура;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьРасчетаСреднегоЗаработкаФСС.ПФ_MXL_РасчетСреднегоЗаработкаПособий");
	
	ОбластиМакета.Вставить("Шапка", 								Макет.ПолучитьОбласть("Заголовок")); 
	ОбластиМакета.Вставить("НеполноеВремя", 						Макет.ПолучитьОбласть("НеполноеВремя"));
	ОбластиМакета.Вставить("ШапкаМРОТ", 							Макет.ПолучитьОбласть("ШапкаМРОТ"));
	ОбластиМакета.Вставить("ОкончаниеМРОТ", 						Макет.ПолучитьОбласть("ОкончаниеМРОТ"));
	ОбластиМакета.Вставить("ЗаголовокНачислений", 					Макет.ПолучитьОбласть("ЗаголовокНачислений")); 
	ОбластиМакета.Вставить("ПустойЗаголовокНачислений", 			Макет.ПолучитьОбласть("ПустойЗаголовокНачислений")); 
	ОбластиМакета.Вставить("РасчетСреднегоЗаработкаЗаголовок", 		Макет.ПолучитьОбласть("РасчетСреднегоЗаработкаЗаголовок"));
	ОбластиМакета.Вставить("РасчетСреднегоЗаработка", 				Макет.ПолучитьОбласть("РасчетСреднегоЗаработка"));
	ОбластиМакета.Вставить("МаксимальныйСреднийНеполногоПериода", 	Макет.ПолучитьОбласть("МаксимальныйСреднийНеполногоПериода")); 
	
	ОбластиМакета.Вставить("СтрокаНачислений", Макет.ПолучитьОбласть("СтрокаНачислений"));
	ОбластиМакета.Вставить("Разделитель1", Макет.ПолучитьОбласть("Разделитель1"));
	ОбластиМакета.Вставить("Разделитель2", Макет.ПолучитьОбласть("Разделитель2"));
	
	ОбластиМакета.Вставить("ДнейПриостановленияТДШапка",  Макет.ПолучитьОбласть("ДнейПриостановленияТДШапка"));
	ОбластиМакета.Вставить("ДнейПриостановленияТДСтрока", Макет.ПолучитьОбласть("ДнейПриостановленияТДСтрока"));
	
	Если ДанныеДокумента.ПараметрыРасчета.ПрименятьПредельнуюВеличину
		И Не ДанныеДокумента.ПараметрыРасчета.ПрименяетсяФЗ_421_2014
		И Не ДанныеДокумента.ПараметрыРасчета.ПрименяетсяФЗ_20_2023 Тогда
		ОбластиМакета.Вставить("ЗаголовокТаблицы", 			Макет.ПолучитьОбласть("ЗаголовокТаблицыНачало")); 
		ОбластиМакета.Вставить("Строка", 					Макет.ПолучитьОбласть("СтрокаЗаработкаНачало"));
		ОбластиМакета.Вставить("ТекущийИтог", 				Макет.ПолучитьОбласть("ТекущийИтог"));
		ОбластиМакета.Вставить("ПодвалТаблицыЗаработка", 	Макет.ПолучитьОбласть("ПодвалТаблицыЗаработка")); 
	Иначе
		ОбластиМакета.Вставить("ЗаголовокТаблицы", 			Макет.ПолучитьОбласть("ЗаголовокТаблицыНачалоБезОграничений")); 
		ОбластиМакета.Вставить("Строка", 					Макет.ПолучитьОбласть("СтрокаЗаработкаНачалоБезОграничений"));
		ОбластиМакета.Вставить("ТекущийИтог", 				Макет.ПолучитьОбласть("ТекущийИтогБезОграничений"));
		ОбластиМакета.Вставить("ПодвалТаблицыЗаработка", 	Макет.ПолучитьОбласть("ПодвалТаблицыЗаработкаБезОграничений")); 
	КонецЕсли;
	
	Если ИспользоватьДниБолезниУходаЗаДетьми Тогда
		ОбластиМакета.Вставить("ЗаголовокТаблицыДнейБолезниУходаЗаДетьми", 	Макет.ПолучитьОбласть("ЗаголовокТаблицыДнейБолезниУходаЗаДетьми")); 
		ОбластиМакета.Вставить("СтрокаДнейБолезниУходаЗаДетьми", 			Макет.ПолучитьОбласть("СтрокаЗаработкаДнейБолезниУходаЗаДетьми"));
		ОбластиМакета.Вставить("ЗаголовокТаблицыСтрахователь", 				Макет.ПолучитьОбласть("ЗаголовокТаблицыСтрахователь")); 
		ОбластиМакета.Вставить("СтрокаСтрахователь", 						Макет.ПолучитьОбласть("СтрокаЗаработкаСтрахователь"));
	Иначе 
		ОбластиМакета.Вставить("ЗаголовокТаблицыСтрахователь", 				Макет.ПолучитьОбласть("ДлинныйЗаголовокТаблицыСтрахователь")); 
		ОбластиМакета.Вставить("СтрокаСтрахователь", 						Макет.ПолучитьОбласть("ДлиннаяСтрокаЗаработкаСтрахователь"));
	КонецЕсли;
	
	Если ИспользоватьДниБолезниУходаЗаДетьми Или ПрименятьМаксимальныйСреднедневной Тогда
		ОбластиМакета.Вставить("МаксимальныйСреднедневнойЗаголовок", Макет.ПолучитьОбласть("МаксимальныйСреднедневнойЗаголовок"));
		Если ИспользоватьДниБолезниУходаЗаДетьми Тогда
			ОбластиМакета.Вставить("МаксимальныйСреднедневнойГоды",  Макет.ПолучитьОбласть("МаксимальныйСреднедневнойГоды"));
		КонецЕсли;
		ОбластиМакета.Вставить("МаксимальныйСреднедневнойГод",       Макет.ПолучитьОбласть("МаксимальныйСреднедневнойГод"));
		ОбластиМакета.Вставить("МаксимальныйСреднедневнойЗначение",  Макет.ПолучитьОбласть("МаксимальныйСреднедневнойЗначение"));
	КонецЕсли;
	
	Возврат ОбластиМакета;
	
КонецФункции

Функция ОписаниеРасчетныхЛет(РасчетныеГоды)
			
	ОписаниеРасчетныхЛет = НСтр("ru = 'Не указаны';
								|en = 'Not specified'");   
	
	ВсегоСтрок = РасчетныеГоды.Количество();
	
	Если ВсегоСтрок = 2 Тогда
		ОписаниеРасчетныхЛет = Формат(РасчетныеГоды[0], "ЧЦ=4; ЧГ=0") + " и " + Формат(РасчетныеГоды[1], "ЧЦ=4; ЧГ=0");
	ИначеЕсли ВсегоСтрок = 1 Тогда	
		ОписаниеРасчетныхЛет = Формат(РасчетныеГоды[0], "ЧЦ=4; ЧГ=0");
	КонецЕсли;
	
	Возврат ОписаниеРасчетныхЛет;
КонецФункции

Функция ДокументыСгруппированныеПоТипам(МассивСсылок)
	
	ДокументыСгруппированныеПоТипам = Новый Соответствие;
	
	Для каждого Ссылка Из МассивСсылок Цикл
		
		Менеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка);
		
		МассивСсылок = ДокументыСгруппированныеПоТипам.Получить(Менеджер);
		
		Если МассивСсылок = Неопределено Тогда
			ДокументыСгруппированныеПоТипам.Вставить(Менеджер, Новый Массив);
			МассивСсылок = ДокументыСгруппированныеПоТипам.Получить(Менеджер);
		КонецЕсли;
		
		МассивСсылок.Добавить(Ссылка);
		
	КонецЦикла;
	
	Возврат ДокументыСгруппированныеПоТипам;
	
КонецФункции

Функция ДанныеДокументовРасчетаСреднегоЗаработкаФСС(МассивСсылок)
	
	ДанныеДокументов = Новый Массив;
	
	ДокументыСгруппированныеПоТипам = ДокументыСгруппированныеПоТипам(МассивСсылок);
	
	Для каждого ОписаниеТипаДокумента Из ДокументыСгруппированныеПоТипам Цикл
		
		Менеджер = ОписаниеТипаДокумента.Ключ;
		МассивСсылок = ОписаниеТипаДокумента.Значение;
		
		ДанныеДокументовПоТипу = Менеджер.ДанныеДокументовДляПечатиРасчетаСреднегоЗаработкаФСС(МассивСсылок);
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДанныеДокументов, ДанныеДокументовПоТипу);
	     		
	КонецЦикла;

	Возврат ДанныеДокументов
	
КонецФункции

Функция ПустаяСтруктураДанныхДляПечатиСреднегоЗаработка() Экспорт
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("РеквизитыДокумента", ПустаяСтруктураРеквизитовДокументаДляПечатиСреднегоЗаработка());
	СтруктураДанных.Вставить("КадровыеДанныеСотрудника", ПустаяСтруктураКадровыхДанныхСотрудникаДляПечатиСреднегоЗаработка());
	СтруктураДанных.Вставить("ПараметрыРасчета", УчетПособийСоциальногоСтрахованияКлиентСервер.ПараметрыРасчетаСреднегоДневногоЗаработкаФСС());
	СтруктураДанных.Вставить("ДанныеРасчетаСреднего", Новый Массив);
	
	Возврат СтруктураДанных;
	
КонецФункции

Функция ПустаяСтруктураРеквизитовДокументаДляПечатиСреднегоЗаработка()
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("Ссылка");
	СтруктураДанных.Вставить("Сотрудник");
	СтруктураДанных.Вставить("НомерДокумента");
	СтруктураДанных.Вставить("ДатаДокумента");
	СтруктураДанных.Вставить("ДатаНачалаОтсутствия");
	СтруктураДанных.Вставить("ДатаОкончанияОтсутствия");
	СтруктураДанных.Вставить("ПолноеНаименованиеОрганизации");
	СтруктураДанных.Вставить("НаименованиеОрганизации");
	СтруктураДанных.Вставить("НомерПервичногоДокумента");
	
	Возврат СтруктураДанных;

КонецФункции

Функция ПустаяСтруктураКадровыхДанныхСотрудникаДляПечатиСреднегоЗаработка()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Страхователь");
	СтруктураДанных.Вставить("ФизическоеЛицо");
	СтруктураДанных.Вставить("ФИОПолные");
	СтруктураДанных.Вставить("ТабельныйНомер");
	СтруктураДанных.Вставить("Подразделение");
	СтруктураДанных.Вставить("Должность");
	СтруктураДанных.Вставить("ВидЗанятости");
	
	Возврат СтруктураДанных;

КонецФункции

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует отказаться от использования.
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасчетСреднегоЗаработка") Тогда
		ДанныеДокументов = ДанныеДокументовРасчетаСреднегоЗаработкаФСС(МассивОбъектов);
		ТабличныйДокумент = ТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокументов, ОбъектыПечати);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РасчетСреднегоЗаработка", НСтр("ru = 'Расчет среднего заработка';
																														|en = 'Average earning calculation'"), ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли