#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	
	СсылкаНаИнструкциюСервиса = ИнтеграцияShare.СсылкаНаИнструкциюСервиса();
	
	УстановитьВидимостьОшибок(ЭтотОбъект, Элементы, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПодсказкаКакПолучитьСсылкуОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СсылкаНаИнструкциюСервиса);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНеУдалосьЗагрузитьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СсылкаДляСкачиванияДокумента);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьДокумент(Команда)
	
	Если ПустаяСтрока(СсылкаДляСкачиванияДокумента) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнена ссылка на документ';
														|en = 'Не заполнена ссылка на документ'",
			ОбщегоНазначенияКлиент.КодОсновногоЯзыка()),
			, , "Объект.СсылкаДляСкачиванияДокумента");
		Возврат;
		
	ИначеЕсли Не ИнтеграцияShareКлиент.ЭтоДоменСервисаКороткихСсылокShare(СсылкаДляСкачиванияДокумента) Тогда
		ДокументНеНайден = Истина;
		УстановитьВидимостьОшибок(ЭтотОбъект, Элементы, Истина);
		Возврат;
	КонецЕсли;
	
	ДоступКДокументуЗакрыт = Ложь;
	ДокументНеНайден       = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ОбработатьРезультатПоискаДокументаПоПубличнойССылке", ЭтотОбъект);
	
	ОписаниеПараметров = ИнтеграцияShareКлиент.НовоеОписаниеПараметровПроцедурыВыполненияВФоне();
	ОписаниеПараметров.ВладелецФормы           = ЭтотОбъект;
	ОписаниеПараметров.УникальныйИдентификатор = УникальныйИдентификатор;
	ОписаниеПараметров.ОписаниеПриЗавершении   = Оповещение;
	
	ИнтеграцияShareКлиент.ЗагрузитьДанныеДокументаПоПубличнойСсылкеВФоне(СсылкаДляСкачиванияДокумента, ОписаниеПараметров);
	
	УстановитьВидимостьОжидания(ЭтотОбъект, Элементы, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьРезультатПоискаДокументаПоПубличнойССылке(Результат, ДополнительныеПараметры) Экспорт
	
	ДанныеДокумента = ИнтеграцияShareКлиент.РезультатОперацииВФоне(Результат);
	
	Если ДанныеДокумента = Неопределено Тогда
		УстановитьВидимостьОшибок(ЭтотОбъект, Элементы, Истина);
		Возврат;
	КонецЕсли;
	
	ДоступКДокументуЗакрыт = ДанныеДокумента.ДоступКДокументуЗакрыт;
	ДокументНеНайден       = ДанныеДокумента.ДокументНеНайден;
	
	Если ДоступКДокументуЗакрыт Или ДокументНеНайден Тогда
		УстановитьВидимостьОшибок(ЭтотОбъект, Элементы, Истина);
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияShareКлиентПереопределяемый.ПриЗагрузкеДокументаПоСсылке(ДанныеДокумента, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка = Ложь Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	
	ДанныеЗагрузки = ДанныеДокумента.ДанныеЗагрузкиДокумента;
	Если ЗначениеЗаполнено(ДанныеЗагрузки)
		И ЗначениеЗаполнено(ДанныеЗагрузки.ОбъектУчета) Тогда
		Закрыть(); // Сначала закрываем форму загрузки, после открываем объект учета.
		ПоказатьЗначение(Неопределено, ДанныеЗагрузки.ОбъектУчета);
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ОбработатьРезультатЗагрузкиДокументаЗавершение", ЭтотОбъект);
	
	ОписаниеПараметров = ИнтеграцияShareКлиент.НовоеОписаниеПараметровПроцедурыВыполненияВФоне();
	ОписаниеПараметров.ВладелецФормы           = ЭтотОбъект;
	ОписаниеПараметров.УникальныйИдентификатор = УникальныйИдентификатор;
	ОписаниеПараметров.ОписаниеПриЗавершении   = Оповещение;
	
	ИнтеграцияShareКлиент.ЗагрузитьЭлектронныйДокументВОбъектУчетаВФоне(ДанныеДокумента, ОписаниеПараметров);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьОшибок(ОбъектФормы, ЭлементыФормы, Знач Видимость)
	
	Если Не ЭлементыФормы.ГруппаКакПолучитьСсылку.Скрыта() Тогда
		ЭлементыФормы.ГруппаКакПолучитьСсылку.Скрыть();
	КонецЕсли;

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭлементыФормы, "ГруппаОшибкиЗагрузки", "Видимость",
		Видимость);

	Если ОбъектФормы.ДокументНеНайден Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭлементыФормы, "СтраницыОшибок",
			"ТекущаяСтраница", ЭлементыФормы.ДокументНеНайден);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭлементыФормы, "ДоступЗакрыт", "Видимость", Ложь);
	ИначеЕсли ОбъектФормы.ДоступКДокументуЗакрыт Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭлементыФормы, "СтраницыОшибок",
			"ТекущаяСтраница", ЭлементыФормы.ДоступЗакрыт);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭлементыФормы, "ДоступЗакрыт", "Видимость", Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭлементыФормы, "СтраницыОшибок",
			"ТекущаяСтраница", ЭлементыФормы.ПерейтиКДокументуПриОшибке);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭлементыФормы, "ДоступЗакрыт", "Видимость", Ложь);
	КонецЕсли;

	УстановитьВидимостьОжидания(ОбъектФормы, ЭлементыФормы, Ложь);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьОжидания(ОбъектФормы, ЭлементыФормы, Знач Видимость)
	
	Если Видимость Тогда
		Страницаформы = ЭлементыФормы.СтраницаОжидания;
		ЗаголовокФормы = " ";
	Иначе
		Страницаформы= ЭлементыФормы.СтраницаФормы;
		ЗаголовокФормы = НСтр("ru = 'Введите ссылку на документ';
								|en = 'Enter the document link'");
	КонецЕсли;
	
	Если ОбъектФормы.Заголовок <> ЗаголовокФормы Тогда
		ОбъектФормы.Заголовок = ЗаголовокФормы;
	КонецЕсли;
	
	ЭлементыФормы.СтраницыФормы.ТекущаяСтраница = Страницаформы;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатЗагрузкиДокументаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ДанныеДокумента = ИнтеграцияShareКлиент.РезультатОперацииВФоне(Результат);
	
	Если ДанныеДокумента = Неопределено Тогда
		УстановитьВидимостьОшибок(ЭтотОбъект, Элементы, Истина);
		Возврат;
	КонецЕсли;
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОбработатьРезультатЗагрузкиДокументаЗавершение", ЭтотОбъект);
	
	Если ДанныеДокумента.ТребуетсяСопоставлениеНоменклатуры Тогда
		
		ДанныеДокумента.ТребуетсяСопоставлениеНоменклатуры = Ложь;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ДанныеДокумента", ДанныеДокумента);
		ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
		ДополнительныеПараметры.Вставить("ЕстьФормаВладелец", Истина);

		Оповещение= Новый ОписаниеОповещения("ЗагрузитьЭлектронныйДокументПослеСопоставления", ИнтеграцияShareКлиент,
			ДополнительныеПараметры);

		ИнтеграцияShareКлиент.ОткрытьФормуСопоставленияНоменклатурыПриЗагрузкиДокумента(ДанныеДокумента, Оповещение);
		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеДокумента.ДокументУчета) Тогда
		Закрыть();  // Сначала закрываем форму загрузки, после открываем объект учета.
		ПоказатьЗначение(Неопределено, ДанныеДокумента.ДокументУчета);
		ИнтеграцияShareКлиент.ПослеЗагрузкиДокументаПоСсылке(ДанныеДокумента);
		Возврат;
	КонецЕсли;
	
	ИнтеграцияShareКлиент.СоздатьВУчетеЭлектронныйДокумент(ЭтотОбъект, УникальныйИдентификатор, ДанныеДокумента,
		ОповещениеПриЗавершении);
	
КонецПроцедуры

#КонецОбласти


