#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ЗаписьXML;
Перем КорневыеПространстваИмен;

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ДобавитьУзел(Родитель, Имя, Знач Значение = Неопределено, Знач МожетОтсутствовать = Ложь, Знач МожетБытьНеопределено = Неопределено) Экспорт
	Если Родитель = Неопределено Тогда
		Родитель = ДеревоXML;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Имя) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Узел = Родитель.Строки.Добавить();
	Узел.Имя                   = Имя;
	Узел.Значение              = Значение;
	Узел.Текст                 = Ложь;
	Узел.МожетОтсутствовать    = МожетОтсутствовать;
	Узел.МожетБытьНеопределено = МожетБытьНеопределено;
	
	Возврат Узел;
КонецФункции

Процедура ДобавитьАтрибут(Узел, Имя, Знач Значение = Неопределено, Знач МожетОтсутствовать = Ложь) Экспорт
	Атрибут = Узел.Строки.Добавить();
	Атрибут.ЭтоАтрибут            = Истина;
	Атрибут.Имя                   = Имя;
	Атрибут.Значение              = Значение;
	Атрибут.Текст                 = Ложь;
	Атрибут.МожетОтсутствовать    = МожетОтсутствовать;
	Атрибут.МожетБытьНеопределено = Ложь;
КонецПроцедуры

Процедура ДобавитьПространствоИмен(Узел, Префикс, URI) Экспорт
	Если Узел = Неопределено Тогда
		ПространстваИмен = КорневыеПространстваИмен;
	Иначе
		ПространстваИмен = Узел.ПространстваИмен;
		Если ПространстваИмен = Неопределено Тогда
			ПространстваИмен = Новый СписокЗначений;
			Узел.ПространстваИмен = ПространстваИмен;
		КонецЕсли;
	КонецЕсли;
	ПространстваИмен.Добавить(Префикс, URI);
КонецПроцедуры

Функция НачатьЗаписьВСтрокуXML(ЗаписатьОбъявлениеXML = Истина, Кодировка = "UTF-8") Экспорт
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку(Кодировка);
	Если ЗаписатьОбъявлениеXML Тогда
		ЗаписьXML.ЗаписатьОбъявлениеXML();
	КонецЕсли;
	Для Каждого ЭлементСписка Из КорневыеПространстваИмен Цикл
		ЗаписьXML.ЗаписатьСоответствиеПространстваИмен(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;
	Возврат ЗаписьXML;
КонецФункции

Процедура ЗаписатьДеревоXML() Экспорт
	Если ЗаписьXML = Неопределено Тогда
		НачатьЗаписьВСтрокуXML();
	КонецЕсли;
	
	ПодгтовитьКВыгрузкеРекурсивно(ДеревоXML.Строки, Ложь, Ложь);
	
	Для Каждого Узел Из ДеревоXML.Строки Цикл
		ЗаписатьУзелXML(Узел);
	КонецЦикла;
	
	ДеревоXML.Строки.Очистить();
КонецПроцедуры

Функция СтрокаXML() Экспорт
	ЗаписатьДеревоXML();
	Возврат ЗаписьXML.Закрыть();
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьУзелXML(Узел)
	Если Не Узел.ТребуетсяВыгрузить Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьXML.ЗаписатьНачалоЭлемента(Узел.Имя);
	
	Если Узел.ПространстваИмен <> Неопределено Тогда
		Для Каждого ЭлементСписка Из Узел.ПространстваИмен Цикл
			ЗаписьXML.ЗаписатьСоответствиеПространстваИмен(ЭлементСписка.Значение, ЭлементСписка.Представление);
		КонецЦикла;
	КонецЕсли;
	
	Если Узел.Текст <> Неопределено Тогда
		ЗаписьXML.ЗаписатьТекст(Узел.Текст);
	ИначеЕсли Не Узел.ТребуетсяВыгрузитьПодчиненные Тогда
		ЗаписьXML.ЗаписатьАтрибут("xsi:nil", "true");
	КонецЕсли;
	
	Для Каждого ВложенныйУзел Из Узел.Строки Цикл
		Если ВложенныйУзел.ЭтоАтрибут Тогда
			Если ВложенныйУзел.ТребуетсяВыгрузить Тогда
				ЗаписьXML.ЗаписатьАтрибут(ВложенныйУзел.Имя, ВложенныйУзел.Текст);
			КонецЕсли;
		Иначе
			ЗаписатьУзелXML(ВложенныйУзел);
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
КонецПроцедуры

Процедура ПодгтовитьКВыгрузкеРекурсивно(Узлы, ЗначениеПодчиненныхЗаполнено, ТребуетсяВыгрузитьПодчиненные)
	Для Каждого Узел Из Узлы Цикл
		МожетБытьНеопределено = (Узел.МожетБытьНеопределено = Истина);
		Если Узел.Текст = Ложь Тогда
			Узел.ЗначениеЗаполнено = ЗначениеЗаполнено(Узел.Значение);
			Если Узел.Значение = Неопределено
				Или Узел.Значение = Null
				Или (МожетБытьНеопределено И Не ЗначениеЗаполнено(Узел.Значение)) Тогда
				Узел.Текст = Неопределено;
			Иначе
				Тип = ТипЗнч(Узел.Значение);
				Если Тип = Тип("Строка") Тогда
					Узел.Текст = Узел.Значение;
				ИначеЕсли Тип = Тип("Дата") И ЗначениеЗаполнено(ФорматДат) Тогда
					Узел.Текст = Формат(Узел.Значение, ФорматДат);
				Иначе
					Узел.Текст = XMLСтрока(Узел.Значение);
				КонецЕсли;
			КонецЕсли;
		Иначе
			Узел.ЗначениеЗаполнено = ЗначениеЗаполнено(Узел.Текст);
		КонецЕсли;
		ПодгтовитьКВыгрузкеРекурсивно(Узел.Строки, Узел.ЗначениеПодчиненныхЗаполнено, Узел.ТребуетсяВыгрузитьПодчиненные);
		// Если явно установлен признак nillable и текст подчиненных не заполнен, то группа считается пустой (nil="true").
		// Если есть непустые атрибуты, то группа также не может считаться пустой.
		Если МожетБытьНеопределено И Узел.Текст = Неопределено И Не Узел.ЗначениеПодчиненныхЗаполнено Тогда
			Узел.ТребуетсяВыгрузитьПодчиненные = Ложь;
			Для Каждого ВложенныйУзел Из Узел.Строки Цикл
				Если Не ВложенныйУзел.ЭтоАтрибут Тогда
					ВложенныйУзел.ТребуетсяВыгрузить = Ложь;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если Узел.ЗначениеЗаполнено Или Узел.ЗначениеПодчиненныхЗаполнено Тогда
			ЗначениеПодчиненныхЗаполнено = Истина;
		КонецЕсли;
		Узел.ТребуетсяВыгрузить = ТребуетсяВыгрузитьУзел(Узел);
		Если Узел.ТребуетсяВыгрузить Тогда
			ТребуетсяВыгрузитьПодчиненные = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ТребуетсяВыгрузитьУзел(Узел)
	Возврат Не Узел.МожетОтсутствовать
		Или Узел.ЗначениеЗаполнено
		Или Узел.ЗначениеПодчиненныхЗаполнено;
КонецФункции

#КонецОбласти

#Область Инициализация

ДеревоXML.Колонки.Добавить("Имя",   Новый ОписаниеТипов("Строка"));
ДеревоXML.Колонки.Добавить("Текст", Новый ОписаниеТипов("Строка, Булево"));
ДеревоXML.Колонки.Добавить("Значение");
ДеревоXML.Колонки.Добавить("Атрибуты");
ДеревоXML.Колонки.Добавить("ПространстваИмен");
ДеревоXML.Колонки.Добавить("ЭтоАтрибут",                    Новый ОписаниеТипов("Булево"));
ДеревоXML.Колонки.Добавить("МожетОтсутствовать",            Новый ОписаниеТипов("Булево"));
ДеревоXML.Колонки.Добавить("МожетБытьНеопределено",         Новый ОписаниеТипов("Строка, Булево"));
ДеревоXML.Колонки.Добавить("ЗначениеЗаполнено",             Новый ОписаниеТипов("Булево"));
ДеревоXML.Колонки.Добавить("ЗначениеПодчиненныхЗаполнено",  Новый ОписаниеТипов("Булево"));
ДеревоXML.Колонки.Добавить("ТребуетсяВыгрузить",            Новый ОписаниеТипов("Булево"));
ДеревоXML.Колонки.Добавить("ТребуетсяВыгрузитьПодчиненные", Новый ОписаниеТипов("Булево"));

ФорматДат = "ДФ=yyyy-MM-dd";

ВыгружатьПустые = Истина;

КорневыеПространстваИмен = Новый СписокЗначений;

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли