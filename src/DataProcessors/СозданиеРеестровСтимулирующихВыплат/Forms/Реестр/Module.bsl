
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресВоВременномХранилище = Параметры.АдресВоВременномХранилище;
	СтрокаXML = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	Реестр = ОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаXML);
	
	Обработка = РеквизитФормыВЗначение("Объект");
	ЗаполнитьЗначенияСвойств(Обработка, Реестр);
	Обработка.Сотрудники.Загрузить(Реестр.Сотрудники.Выгрузить());
	ЗначениеВРеквизитФормы(Обработка, "Объект");
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой");
	
	НастроитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	ЗаписатьНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура СпособВыплатыПособияПриИзменении(Элемент)
	УстановитьЭлементыВыплатыПособий(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСостав

&НаКлиенте
Процедура СотрудникиПриАктивизацииСтроки(Элемент)
	УстановитьЭлементыВыплатыПособий(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаСервере
Процедура БанкПриИзмененииНаСервере(ИдентификаторСтроки)

	СтрокаСотрудника = ?(ИдентификаторСтроки = Неопределено, Неопределено, Объект.Сотрудники.НайтиПоИдентификатору(ИдентификаторСтроки));
	
	Если ЗначениеЗаполнено(СтрокаСотрудника.Банк) Тогда
		
		СтрокаСотрудника.НомерЛицевогоСчета = Документы.РеестрСтимулирующихВыплатМедицинскимИСоциальнымРаботникам.ПолучитьСчетСотрудникаВБанке(СтрокаСотрудника.Сотрудник, Объект.Организация, СтрокаСотрудника.Банк);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БанкПриИзменении(Элемент)
	ИдентификаторСтроки = Элементы.Сотрудники.ТекущаяСтрока;
	БанкПриИзмененииНаСервере(ИдентификаторСтроки);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ЗаписатьНаСервере();
	Закрыть()
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьНаСервере()
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЭлементыВыплатыПособий(Форма)
	Элементы = Форма.Элементы;
	ТекущиеДанныеСотрудника = Элементы.Сотрудники.ТекущиеДанные;
	Если ТекущиеДанныеСотрудника = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СпособВыплатыПособия = ТекущиеДанныеСотрудника.СпособВыплатыПособия;
	НаКартуМир = СпособВыплатыПособия = ПредопределенноеЗначение("Перечисление.СпособыВыплатыПособия.НаКартуМИР");
	Элементы.КартаМИР.Видимость = НаКартуМир;
	
	Элементы.Банк.Видимость = НЕ НаКартуМир;
	Элементы.НомерЛицевогоСчета.Видимость = НЕ НаКартуМир;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьДоступность()
	
	РеестрПоСоциальнымРаботникам = (Объект.ВидПособия = Перечисления.ПолучательСтимулирующихВыплатФСС.ОрганизацияСоциальногоОбслуживания);
	
	Элементы.ВОрганизацииВыявленКоронавирус.Видимость = РеестрПоСоциальнымРаботникам;
	Элементы.СотрудникиДнейКОплате.Видимость 		  = РеестрПоСоциальнымРаботникам;
	
	Элементы.МесяцНачисленияСтрокой.Видимость = НЕ РеестрПоСоциальнымРаботникам;
	Элементы.ПериодНачисления.Видимость = РеестрПоСоциальнымРаботникам;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	
	Если Модифицированность Тогда
		
		СтрокаXML = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
		Реестр = ОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаXML);
			
		Обработка = РеквизитФормыВЗначение("Объект");
		ЗаполнитьЗначенияСвойств(Реестр, Обработка);
		Реестр.Сотрудники.Загрузить(Обработка.Сотрудники.Выгрузить());
		
		СтрокаXML = ОбщегоНазначения.ЗначениеВСтрокуXML(Реестр);
		ПоместитьВоВременноеХранилище(СтрокаXML, АдресВоВременномХранилище);
		
		Модифицированность = Ложь;
		
	КонецЕсли
	
КонецПроцедуры

#КонецОбласти
