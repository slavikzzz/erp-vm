
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(Параметры.АдресИзделия) Тогда
		
		Объект.План.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресИзделия));
		РассчитатьИтоги();
		
		ОбеспеченоИтог = "";
		Обеспечено = Объект.План.Итог("Обеспечено");
		Если Обеспечено > 0 Тогда
			ОбеспеченоИтог = Формат(Обеспечено, "ЧЦ=15; ЧДЦ=3; ЧГ=0;");
		КонецЕсли;
		
	КонецЕсли;
	
	Заголовок = СтрШаблон(
		НСтр("ru = 'Изделия к запуску: %1';
			|en = 'Finished products to launch: %1'"),
		НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Параметры.Номенклатура, Параметры.Характеристика));
	
	Если Не ПустаяСтрока(Параметры.Маршрут) Тогда
		Маршрут = Параметры.Маршрут;
	Иначе
		Элементы.Маршрут.Видимость = Ложь;
	КонецЕсли;    
	
	Элементы.ФормаОбособитьПоНазначениюПолучателя.Видимость = Не Параметры.ВыпускОбособленПоУмолчанию; // выпуск полуфабрикатов обособлен по умолчанию
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Очистить();
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Отметка", Истина);
	СтруктураПоиска.Вставить("КЗапуску", 0);
	
	Для каждого Строка Из Объект.План.НайтиСтроки(СтруктураПоиска) Цикл
		
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Колонка", "Заполнение", НСтр("ru = 'К запуску';
											|en = 'Launch'"), Строка.НомерСтроки, НСтр("ru = 'Изделия';
																						|en = 'Products'"));
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
			"Объект.План", Строка.НомерСтроки, "КЗапуску");
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПлан

&НаКлиенте
Процедура ПланВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ИмяПоля = СтрЗаменить(Поле.Имя, "План", "");
	
	Если СтрНайти("Получатель,Назначение", ИмяПоля) > 0 Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, Элемент.ТекущиеДанные[ИмяПоля]);
	ИначеЕсли ИмяПоля = "ЗаказНаПроизводствоПредставление" ИЛИ ИмяПоля = "ЗаказНаПроизводство" Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, Элемент.ТекущиеДанные.ЗаказНаПроизводство);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланКЗапускуПриИзменении(Элемент)
	
	Элементы.План.ТекущиеДанные.Отметка = Элементы.План.ТекущиеДанные.КЗапуску > 0;
	РассчитатьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланОтметкаПриИзменении(Элемент)
	
	РассчитатьИтоги();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	РезультатВыбора = РезультатВыбора(Отказ);
	
	Если Не Отказ Тогда
		Закрыть(РезультатВыбора);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отметить(Команда)
	
	Для каждого ИдентификаторСтроки Из Элементы.План.ВыделенныеСтроки Цикл
		Объект.План.НайтиПоИдентификатору(ИдентификаторСтроки).Отметка = Истина;
	КонецЦикла;
	
	РассчитатьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметку(Команда)
	
	Для каждого ИдентификаторСтроки Из Элементы.План.ВыделенныеСтроки Цикл
		Объект.План.НайтиПоИдентификатору(ИдентификаторСтроки).Отметка = Ложь;
	КонецЦикла;
	
	РассчитатьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбособитьПоНазначениюПолучателя(Команда)
	
	Для каждого ИдентификаторСтроки Из Элементы.План.ВыделенныеСтроки Цикл
		
		Строка = Объект.План.НайтиПоИдентификатору(ИдентификаторСтроки);
		
		Если Строка.Назначение.Пустая() И Не Строка.ПродукцияЗаказа Тогда
			Строка.Назначение = Строка.НазначениеПолучателя;
			Строка.Отметка = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	РассчитатьИтоги();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПланНоменклатураЕдиницаИзмерения.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.План.ТипНоменклатуры");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ТипыНоменклатуры.Работа;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПланЗаказНаПроизводствоПредставление.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.План.СверхЗаказа");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<сверх заказа>';
																|en = '<exceeding the order>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПланКЗапуску.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.План.Отметка");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ПланОбеспечено.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.План.ТребуетсяОбеспечение");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '-';
																|en = '-'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ТемноСерый);
	
	//
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Приоритеты.Ссылка КАК Приоритет,
		|	Приоритеты.Цвет   КАК Цвет
		|ИЗ
		|	Справочник.Приоритеты КАК Приоритеты");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	 
		Элемент = УсловноеОформление.Элементы.Добавить();
		
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПланПриоритет.Имя);
		
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.План.Приоритет");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Выборка.Приоритет;
		
		Цвет = Выборка.Цвет; //ХранилищеЗначения
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Цвет.Получить());
		
	КонецЦикла;
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПланНазначение.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.План.Назначение");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Объект.План.НазначениеПолучателя");

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.План.ОбособленнаяЗакупкаПродажа");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ТемноСерый);
	
КонецПроцедуры


&НаСервере
Функция РезультатВыбора(Отказ)
	
	Если Не ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		Возврат Неопределено;
	КонецЕсли;
	
	КЗапуску = 0;
	Для каждого Строка Из Объект.План.НайтиСтроки(Новый Структура("Отметка", Истина)) Цикл
		КЗапуску = КЗапуску + Строка.КЗапуску;
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("КЗапуску", КЗапуску);
	Результат.Вставить("АдресИзделия", ПоместитьВоВременноеХранилище(Объект.План.Выгрузить()));
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура РассчитатьИтоги()
	
	КЗапускуИтог = 0;
	Для каждого Строка Из Объект.План.НайтиСтроки(Новый Структура("Отметка", Истина)) Цикл
		КЗапускуИтог = КЗапускуИтог + Строка.КЗапуску;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
