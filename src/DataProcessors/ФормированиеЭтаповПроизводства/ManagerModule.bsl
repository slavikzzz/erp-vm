#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПолучитьНоменклатурныйПланОтложенно(Параметры, АдресХранилища) Экспорт

	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("Формирование партий производства: переход к номенклатурному плану");
	
	КоличествоДанных = ПозицииПланаКЗапускуВПроизводствоВнутриЗамераВремени(Параметры, АдресХранилища);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоДанных);
	
КонецПроцедуры

// Параметры:
//  Параметры - Структура - из:
//  *Группы - ТаблицаЗначений
//  *Изделия - ТаблицаЗначений
//  АдресХранилища - Строка
Процедура СоздатьДокументыОтложенно(Параметры, АдресХранилища) Экспорт
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("Формирование партий производства: создание документов");
	
	КоличествоДанных = СоздатьДокументыОтложенноВнутриЗамераВремени(Параметры, АдресХранилища);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоДанных);
	
КонецПроцедуры

// Параметры:
//  Параметры  - Структура - из:
//  *Ссылки - Массив из СправочникСсылка.ПартииПроизводства, ДокументСсылка.ЭтапПроизводства2_2
//  АдресХранилища  - Строка
Процедура УдалитьОбъектыОтложенно(Параметры, АдресХранилища) Экспорт
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("Формирование партий производства: удаление созданных объектов");
	
	УдалитьОбъектыОтложенноВнутриЗамераВремени(Параметры, АдресХранилища);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, Параметры.Ссылки.Количество());
	
КонецПроцедуры

// Имена реквизитов, от значений которых зависят параметры выбора спецификаций
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровВыбораСпецификаций() Экспорт
	
	ИменаРеквизитов = "";
	Возврат ИменаРеквизитов;
	
КонецФункции

// Возвращает параметры выбора спецификаций для формирования партий.
//
// Параметры:
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров выбора спецификаций.
//
// Возвращаемое значение:
//   Структура - Структура, переопределяющая умолчания, заданные в функции УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций().
//
Функция ПараметрыВыбораСпецификаций(Объект) Экспорт
	
	СвязиПараметровВыбора = Новый Структура(
		УправлениеДаннымиОбИзделияхКлиентСервер.ПоляСтруктурыДанныхОбИзделииДляВыбораСпецификации());
	СвязиПараметровВыбора.Номенклатура = "Объект.ПланИтоги.Номенклатура";
	СвязиПараметровВыбора.Характеристика = "Объект.ПланИтоги.Характеристика";
	СвязиПараметровВыбора.ПодразделениеДиспетчер = "Объект.ПланИтоги.ПодразделениеДиспетчер";
	СвязиПараметровВыбора.НаправлениеДеятельности = "Объект.ПланИтоги.НаправлениеДеятельности";
	
	ПараметрыВыбораСпецификаций = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций();
	ПараметрыВыбораСпецификаций.ДоступныеТипы.Добавить(Перечисления.ТипыПроизводственныхПроцессов.Сборка);
	ПараметрыВыбораСпецификаций.ДоступныеСтатусы.Добавить(Перечисления.СтатусыСпецификаций.Действует);
	ПараметрыВыбораСпецификаций.СвязиПараметровВыбора.Вставить("Объект.ПланИтоги.Спецификация", СвязиПараметровВыбора);
	ПараметрыВыбораСпецификаций.ДоступныСпецификацииНаПобочныйВыход = Истина;
	
	Возврат ПараметрыВыбораСпецификаций;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПозицииПланаКЗапускуВПроизводствоВнутриЗамераВремени(Параметры, АдресХранилища)
	
	Результат = Новый Структура;
	Результат.Вставить("ПланИтоги", Неопределено);
	Результат.Вставить("КолонкиПериоды", Неопределено);
	Результат.Вставить("ПользовательскиеОтборы", Неопределено);
	
	Если Не ПолучитьФункциональнуюОпцию("ДинамическаяСтруктураЗаказовНаПроизводство") Тогда
		ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
		Возврат 0;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	НоменклатурныйПланВМенеджерВременныхТаблиц(МенеджерВременныхТаблиц, Параметры.Настройки, Результат.ПользовательскиеОтборы);
	
	КроссТаблица = Параметры.КроссТаблица;
	Периодичность = Параметры.Периодичность;
	ИмяПоляДатыПериода = Параметры.ИмяПоляДатыПериода;
	КоличествоПериодов = Параметры.КоличествоПериодов;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	План.Спецификация                               КАК Спецификация,
		|	План.Организация                                КАК Организация,
		|	План.Партнер                                    КАК Партнер,
		|	План.Договор                                    КАК Договор,
		|	План.НаправлениеДеятельности                    КАК НаправлениеДеятельности,
		|	План.ПодразделениеДиспетчер                     КАК ПодразделениеДиспетчер,
		|	План.ЗаказПодДеятельность                       КАК ЗаказПодДеятельность,
		|	План.ХозяйственнаяОперация                      КАК ХозяйственнаяОперация,
		|	План.Номенклатура.ВидНоменклатуры               КАК ВидНоменклатуры,
		|	План.Номенклатура                               КАК Номенклатура,
		|	План.Характеристика                             КАК Характеристика,
		|	План.ЗаказНаПроизводство                        КАК ЗаказНаПроизводство,
		|	План.КлючПартия                                 КАК КлючПартия,
		|	План.ДатаЗапуска                                КАК ДатаЗапуска,
		|	План.ДатаВыпуска                                КАК ДатаВыпуска,
		|	МАКСИМУМ(План.Уровень)                          КАК Уровень,
		|	МАКСИМУМ(План.ДлительностьДоВыпуска)            КАК ДлительностьДоВыпуска,
		|	МАКСИМУМ(План.КоличествоНаЕдиницуПартииЗапуска) КАК КоличествоНаЕдиницуПартииЗапуска,
		|	МАКСИМУМ(План.ОсновноеИзделие)                  КАК ОсновноеИзделие,
		|	СУММА(План.Требуется)                           КАК Требуется
		|ПОМЕСТИТЬ НоменклатурныйПланБезДетализации
		|ИЗ
		|	НоменклатурныйПлан КАК План
		|
		|СГРУППИРОВАТЬ ПО
		|	План.Спецификация,
		|	План.Организация,
		|	План.Партнер,
		|	План.Договор,
		|	План.НаправлениеДеятельности,
		|	План.ПодразделениеДиспетчер,
		|	План.ЗаказПодДеятельность,
		|	План.ХозяйственнаяОперация,
		|	План.Номенклатура.ВидНоменклатуры,
		|	План.Номенклатура,
		|	План.Характеристика,
		|	План.ЗаказНаПроизводство,
		|	План.КлючПартия,
		|	План.ДатаЗапуска,
		|	План.ДатаВыпуска
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Спецификация,
		|	Организация,
		|	Партнер,
		|	Договор,
		|	НаправлениеДеятельности,
		|	ПодразделениеДиспетчер,
		|	ЗаказПодДеятельность,
		|	ХозяйственнаяОперация
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	План.Спецификация        КАК Спецификация,
		|	План.ЗаказНаПроизводство КАК ЗаказНаПроизводство
		|ПОМЕСТИТЬ ЗаказаныОсновныеИПобочныеИзделия
		|ИЗ
		|	НоменклатурныйПланБезДетализации КАК План
		|ГДЕ
		|	ИСТИНА В (
		|		ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА	
		|		ИЗ
		|			НоменклатурныйПланБезДетализации КАК Т
		|		ГДЕ
		|			Т.Спецификация = План.Спецификация
		|			И Т.ЗаказНаПроизводство = План.ЗаказНаПроизводство
		|			И Т.ОсновноеИзделие <> План.ОсновноеИзделие)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Спецификация, ЗаказНаПроизводство
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.КлючПартия КАК КлючПартия,
		|	МИНИМУМ(ВложенныйЗапрос.Распределено/ВложенныйЗапрос.КоличествоНаЕдиницуПартииЗапуска) КАК ОбеспеченоЕдПартий,
		|	МИНИМУМ(ВложенныйЗапрос.Требуется = ВложенныйЗапрос.Распределено) КАК ЕстьПолноеОбеспечение,
		|	МИНИМУМ(ВложенныйЗапрос.Требуется = ВложенныйЗапрос.Распределено) = ЛОЖЬ
		|	И МАКСИМУМ(ВложенныйЗапрос.Распределено/ВложенныйЗапрос.КоличествоНаЕдиницуПартииЗапуска)
		|		> МИНИМУМ(ВложенныйЗапрос.Распределено/ВложенныйЗапрос.КоличествоНаЕдиницуПартииЗапуска) КАК ЕстьЧастичноеОбеспечение
		|ПОМЕСТИТЬ ВТОбеспечение
		|ИЗ
		|	(
		|	ВЫБРАТЬ
		|		СтруктураЗаказа.КлючПартия          КАК КлючПартия,
		|		СтруктураЗаказа.Номенклатура        КАК Номенклатура,
		|		СтруктураЗаказа.Характеристика      КАК Характеристика,
		|		СтруктураЗаказа.Склад               КАК Склад,
		|		СтруктураЗаказа.Назначение          КАК Назначение,
		|		СтруктураЗаказа.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|		СтруктураЗаказа.КлючНоменклатура    КАК КлючНоменклатура,
		|		СУММА(ВЫБОР
		|				КОГДА СтруктураЗаказа.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
		|					ТОГДА СтруктураЗаказа.РаспределеноИзЗапасов + СтруктураЗаказа.РаспределеноИзЗапасовОбособленно
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК Распределено,
		|		СУММА(СтруктураЗаказа.Требуется) КАК Требуется,
		|		МАКСИМУМ(СтруктураЗаказа.КоличествоНаЕдиницуПартииЗапуска) КАК КоличествоНаЕдиницуПартииЗапуска
		|	ИЗ
		|		РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|	ГДЕ
		|		СтруктураЗаказа.КлючПартия В(
		|			ВЫБРАТЬ
		|				ДД.КлючПартия
		|			ИЗ
		|				НоменклатурныйПланБезДетализации КАК ДД)
		|		И СтруктураЗаказа.ВидСтроки В(
		|			ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление),
		|			ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано))
		|
		|	СГРУППИРОВАТЬ ПО
		|		СтруктураЗаказа.КлючПартия,
		|		СтруктураЗаказа.Номенклатура,
		|		СтруктураЗаказа.Характеристика,
		|		СтруктураЗаказа.Склад,
		|		СтруктураЗаказа.Назначение,
		|		СтруктураЗаказа.ЗаказНаПроизводство,
		|		СтруктураЗаказа.КлючНоменклатура
		|	
		|	ИМЕЮЩИЕ
		|		МАКСИМУМ(СтруктураЗаказа.КоличествоНаЕдиницуПартииЗапуска) > 0
		|	
		|	) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.КлючПартия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючПартия
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ ПЕРВЫЕ 10000000
		|
		|	АВТОНОМЕРЗАПИСИ()                               КАК НомерГруппы,
		|
		|	Группы.Спецификация                             КАК Спецификация,
		|	Группы.Организация                              КАК Организация,
		|	Группы.Партнер                                  КАК Партнер,
		|	Группы.Договор                                  КАК Договор,
		|	Группы.НаправлениеДеятельности                  КАК НаправлениеДеятельности,
		|	Группы.ПодразделениеДиспетчер                   КАК ПодразделениеДиспетчер,
		|	Группы.ЗаказПодДеятельность                     КАК ЗаказПодДеятельность,
		|	Группы.ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
		|
		|	Группы.ГруппировкаПоНоменклатуре                КАК ГруппировкаПоНоменклатуре,
		|	Группы.НоменклатураГруппировка                  КАК НоменклатураГруппировка,
		|	Группы.ХарактеристикаГруппировка                КАК ХарактеристикаГруппировка,
		|
		|	Группы.ДатаЗапускаМинимум                       КАК ДатаЗапускаМинимум,
		|	Группы.ДатаВыпускаМинимум                       КАК ДатаВыпускаМинимум
		|
		|ПОМЕСТИТЬ Группы
		|ИЗ
		|	(ВЫБРАТЬ
		|		План.Спецификация            КАК Спецификация,
		|		План.Организация             КАК Организация,
		|		План.Партнер                 КАК Партнер,
		|		План.Договор                 КАК Договор,
		|		План.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|		План.ПодразделениеДиспетчер  КАК ПодразделениеДиспетчер,
		|		План.ЗаказПодДеятельность    КАК ЗаказПодДеятельность,
		|		План.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
		|	
		|		План.Спецификация.ЕстьУточняемоеОсновноеИзделие КАК ГруппировкаПоНоменклатуре,
		|		ВЫБОР
		|			КОГДА План.Спецификация.ЕстьУточняемоеОсновноеИзделие
		|				ТОГДА План.Номенклатура
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|		КОНЕЦ                                         КАК НоменклатураГруппировка,
		|		ВЫБОР
		|			КОГДА План.Спецификация.ЕстьУточняемоеОсновноеИзделие
		|				ТОГДА План.Характеристика
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		КОНЕЦ                                         КАК ХарактеристикаГруппировка,
		|	
		|		МИНИМУМ(План.ДатаЗапуска)         КАК ДатаЗапускаМинимум,
		|		МИНИМУМ(План.ДатаВыпуска)         КАК ДатаВыпускаМинимум
		|	
		|	ИЗ
		|		НоменклатурныйПланБезДетализации КАК План
		|	
		|	СГРУППИРОВАТЬ ПО
		|		План.Спецификация,
		|		План.Организация,
		|		План.Партнер,
		|		План.Договор,
		|		План.НаправлениеДеятельности,
		|		План.ПодразделениеДиспетчер,
		|		План.ЗаказПодДеятельность,
		|		План.ХозяйственнаяОперация,
		|		План.Спецификация.ЕстьУточняемоеОсновноеИзделие,
		|		ВЫБОР
		|			КОГДА План.Спецификация.ЕстьУточняемоеОсновноеИзделие
		|				ТОГДА План.Номенклатура
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА План.Спецификация.ЕстьУточняемоеОсновноеИзделие
		|				ТОГДА План.Характеристика
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		КОНЕЦ
		|	) КАК Группы
		|
		|УПОРЯДОЧИТЬ ПО
		|	&ТекстПоляПорядокСортировкиГрупп,
		|	Группы.Спецификация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Группы.Спецификация,
		|	Группы.Организация,
		|	Группы.Партнер,
		|	Группы.Договор,
		|	Группы.НаправлениеДеятельности,
		|	Группы.ПодразделениеДиспетчер,
		|	Группы.ЗаказПодДеятельность,
		|	Группы.ХозяйственнаяОперация
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	Группы.НомерГруппы                              КАК НомерГруппы,
		|	Группы.Спецификация                             КАК Спецификация,
		|	Группы.Спецификация                             КАК СпецификацияПлан,
		|	Группы.Организация                              КАК Организация,
		|	Группы.Партнер                                  КАК Партнер,
		|	Группы.Договор                                  КАК Договор,
		|	Группы.НаправлениеДеятельности                  КАК НаправлениеДеятельности,
		|	Группы.ПодразделениеДиспетчер                   КАК ПодразделениеДиспетчер,
		|	Группы.ЗаказПодДеятельность                     КАК ЗаказПодДеятельность,
		|	Группы.ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
		|
		|	Группы.ГруппировкаПоНоменклатуре                КАК ГруппировкаПоНоменклатуре,
		|	План.ОсновноеИзделие                            КАК ОсновноеИзделие,
		|
		|	План.Номенклатура                               КАК Номенклатура,
		|	План.Номенклатура.ТипНоменклатуры               КАК ТипНоменклатуры,
		|	План.Характеристика                             КАК Характеристика,
		|
		|	ПРЕДСТАВЛЕНИЕ(План.Номенклатура)                  КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕ(План.Номенклатура.ЕдиницаИзмерения) КАК НоменклатураЕдиницаИзмеренияПредставление,
		|	ПРЕДСТАВЛЕНИЕ(План.Характеристика)                КАК ХарактеристикаПредставление,
		|
		|	&ТекстПоляПериод                                КАК Период,
		|	&ТекстПоляПериод                                КАК ПериодМинимум,
		|
		|	МИНИМУМ(Группы.ДатаЗапускаМинимум)         КАК ДатаЗапускаМинимумПоГруппе,
		|	МИНИМУМ(Группы.ДатаВыпускаМинимум)         КАК ДатаВыпускаМинимумПоГруппе,
		|
		|	МАКСИМУМ(Группы.ГруппировкаПоНоменклатуре
		|				И ЗаказаныОсновныеИПобочныеИзделия.Спецификация ЕСТЬ НЕ NULL) КАК Перегруппировать,
		|	МАКСИМУМ((Группы.ГруппировкаПоНоменклатуре
		|				И ЗаказаныОсновныеИПобочныеИзделия.Спецификация ЕСТЬ НЕ NULL)
		|			ИЛИ План.Спецификация.ВариантНазначения = ЗНАЧЕНИЕ(
		|					Перечисление.ВариантыНазначенияСпецификации.СписокНоменклатуры)) КАК МножественныйЗапуск,
		|
		|	ИСТИНА                                          КАК АвтоПересчет,
		|
		|	СУММА(План.Требуется)                           КАК Требуется,
		|	СУММА(План.Требуется)                           КАК КЗапуску,
		|
		|	МАКСИМУМ(Обеспечение.КлючПартия ЕСТЬ НЕ NULL) КАК ТребуетсяОбеспечение,
		|	СУММА(ВЫБОР
		|		КОГДА Обеспечение.ОбеспеченоЕдПартий ЕСТЬ NULL ИЛИ Обеспечение.ОбеспеченоЕдПартий = 0
		|			ТОГДА 0
		|		КОГДА Обеспечение.ЕстьПолноеОбеспечение
		|			ТОГДА План.Требуется
		|		КОГДА План.Спецификация.ВыпускПроизвольнымиПорциями
		|			ТОГДА ВЫБОР
		|				КОГДА Обеспечение.ОбеспеченоЕдПартий * План.КоличествоНаЕдиницуПартииЗапуска >= План.Требуется
		|					ТОГДА План.Требуется
		|				КОГДА План.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
		|					ТОГДА ВЫРАЗИТЬ(Обеспечение.ОбеспеченоЕдПартий * План.КоличествоНаЕдиницуПартииЗапуска - 0.5 КАК ЧИСЛО(15, 0))
		|				ИНАЧЕ Обеспечение.ОбеспеченоЕдПартий * План.КоличествоНаЕдиницуПартииЗапуска
		|			КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(Обеспечение.ОбеспеченоЕдПартий - 0.5 КАК ЧИСЛО(15, 0)) * План.КоличествоНаЕдиницуПартииЗапуска >= План.Требуется
		|				ТОГДА План.Требуется
		|			КОГДА План.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
		|				ТОГДА ВЫРАЗИТЬ(ВЫРАЗИТЬ(Обеспечение.ОбеспеченоЕдПартий - 0.5 КАК ЧИСЛО(15, 0)) * План.КоличествоНаЕдиницуПартииЗапуска - 0.5 КАК ЧИСЛО(15, 0))
		|			ИНАЧЕ ВЫРАЗИТЬ(Обеспечение.ОбеспеченоЕдПартий - 0.5 КАК ЧИСЛО(15, 0)) * План.КоличествоНаЕдиницуПартииЗапуска
		|		КОНЕЦ
		|	КОНЕЦ) КАК Обеспечено,
		|	МАКСИМУМ(Обеспечение.ЕстьЧастичноеОбеспечение) КАК ЕстьЧастичноеОбеспечение,
		|
		|	МАКСИМУМ(План.КоличествоНаЕдиницуПартииЗапуска) КАК КоличествоНаПартию
		|ИЗ
		|	НоменклатурныйПланБезДетализации КАК План
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Группы КАК Группы
		|	ПО План.Спецификация = Группы.Спецификация
		|		И План.Организация = Группы.Организация
		|		И План.Партнер = Группы.Партнер
		|		И План.Договор = Группы.Договор
		|		И План.НаправлениеДеятельности = Группы.НаправлениеДеятельности
		|		И План.ПодразделениеДиспетчер = Группы.ПодразделениеДиспетчер
		|		И План.ЗаказПодДеятельность = Группы.ЗаказПодДеятельность
		|		И План.ХозяйственнаяОперация = Группы.ХозяйственнаяОперация
		|		И (НЕ Группы.ГруппировкаПоНоменклатуре
		|			ИЛИ План.Номенклатура = Группы.НоменклатураГруппировка
		|				И План.Характеристика = Группы.ХарактеристикаГруппировка)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОбеспечение КАК Обеспечение
		|	ПО План.КлючПартия = Обеспечение.КлючПартия
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ЗаказаныОсновныеИПобочныеИзделия КАК ЗаказаныОсновныеИПобочныеИзделия
		|	ПО План.Спецификация = ЗаказаныОсновныеИПобочныеИзделия.Спецификация
		|		И План.ЗаказНаПроизводство = ЗаказаныОсновныеИПобочныеИзделия.ЗаказНаПроизводство
		|
		|СГРУППИРОВАТЬ ПО
		|	Группы.НомерГруппы,
		|	Группы.Спецификация,
		|	Группы.Организация,
		|	Группы.Партнер,
		|	Группы.Договор,
		|	Группы.НаправлениеДеятельности,
		|	Группы.ПодразделениеДиспетчер,
		|	Группы.ЗаказПодДеятельность,
		|	Группы.ХозяйственнаяОперация,
		|	Группы.ГруппировкаПоНоменклатуре,
		|	План.ОсновноеИзделие,
		|	План.Номенклатура,
		|	План.Номенклатура.ТипНоменклатуры,
		|	План.Номенклатура.ЕдиницаИзмерения,
		|	План.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины,
		|	План.Характеристика,
		|	&ТекстПоляПериод
		|
		|УПОРЯДОЧИТЬ ПО
		|	Группы.НомерГруппы,
		|	План.Номенклатура,
		|	План.Характеристика
		|АВТОУПОРЯДОЧИВАНИЕ
		|
		|ИТОГИ
		|	МАКСИМУМ(Период),
		|	МИНИМУМ(ПериодМинимум)
		|ПО
		|	ОБЩИЕ";
	
	Если Не КроссТаблица Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПоляПериод", "НЕОПРЕДЕЛЕНО");
	Иначе
		ТипПериода = ?(Периодичность = Перечисления.Периодичность.День,
			"ДЕНЬ",
			?(Периодичность = Перечисления.Периодичность.Неделя, "НЕДЕЛЯ", "МЕСЯЦ"));
		ПутьКПериоду = ?(ИмяПоляДатыПериода = "ДатаЗапуска",
			"План.ДатаЗапуска",
			"План.ДатаВыпуска");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстПоляПериод",
			СтрШаблон("НАЧАЛОПЕРИОДА(%1, %2)", ПутьКПериоду, ТипПериода));
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПоляПорядокСортировкиГрупп",
		?(Не КроссТаблица Или ИмяПоляДатыПериода = "ДатаЗапуска", "Группы.ДатаЗапускаМинимум","Группы.ДатаВыпускаМинимум"));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Инициализация таблицы итогов
	ДобавляемыеКолонки = Новый Структура();
	ДобавляемыеКолонки.Вставить("ЕстьОбеспечение", Новый ОписаниеТипов("Булево"));
	ПланИтоги = СтруктураЗаказа.СкопироватьКолонки(ВыборкаИтоги.Владелец().Колонки,,, ДобавляемыеКолонки);
	
	Если Не ВыборкаИтоги.Следующий() Тогда
		Результат.ПланИтоги = ПланИтоги;
		ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
		Возврат 0;
	КонецЕсли;
	
	// Заполнение таблицы итогов
	Выборка = ВыборкаИтоги.Выбрать();
	
	Если Не КроссТаблица Тогда
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ПланИтоги.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.ЕстьОбеспечение = Выборка.Обеспечено > 0 Или Не Выборка.ТребуетсяОбеспечение;
		КонецЦикла;
	Иначе
		
		// Добавление колонок с периодами
		ГраницаПериода = Макс(ВыборкаИтоги.Период, РассчитатьГраницуПериода(ВыборкаИтоги.ПериодМинимум, Периодичность, КоличествоПериодов));
		Период = ВыборкаИтоги.ПериодМинимум;
		Сч = 0;
		ИменаКолонок = Новый Соответствие;
		КолонкиПериоды = Новый Массив;
		ОписаниеТипов = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3));
		Пока Период <= ГраницаПериода Цикл
			Если Сч < КоличествоПериодов - 1 Тогда
				Имя = СтрШаблон("_%1_%2_%3_%4",
					Формат(День(Период), "ЧЦ=2; ЧВН="),
					Формат(Месяц(Период),  "ЧЦ=2; ЧВН="),
					Формат(Год(Период), "ЧЦ=4; ЧВН=; ЧГ="),
					?(Периодичность = Перечисления.Периодичность.День, 1, ?(Периодичность = Перечисления.Периодичность.Неделя, 2, 3)));
				Если Периодичность = Перечисления.Периодичность.День Тогда
					Заголовок = Формат(Период, "ДФ='dd.MM'");
				ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
					Заголовок = СтрШаблон(
						"%1 - %2",
						Формат(Период, "ДФ='dd.MM'"),
						Формат(КонецНедели(Период), "ДФ='dd.MM'"));
				Иначе
					Заголовок = Формат(Период, "ДФ='MMMM yyyy'");
				КонецЕсли;
				ПланИтоги.Колонки.Добавить(Имя, ОписаниеТипов, Заголовок);
				КолонкиПериоды.Добавить(Имя);
				ИменаКолонок.Вставить(Период, Имя);
				Сч = Сч + 1;
			Иначе
				Если Сч = КоличествоПериодов - 1 Тогда
					// Колонка, включающая все последующие периоды
					Имя = СтрШаблон("_%1_%2_%3_%4",
						Формат(День(Период), "ЧЦ=2; ЧВН="),
						Формат(Месяц(Период),  "ЧЦ=2; ЧВН="),
						Формат(Год(Период), "ЧЦ=4; ЧВН=; ЧГ="),
						?(Периодичность = Перечисления.Периодичность.День, 1, ?(Периодичность = Перечисления.Периодичность.Неделя, 2, 3)));
					Если Периодичность = Перечисления.Периодичность.День Тогда
						Заголовок = Формат(Период, "ДФ='dd.MM ...'");
					ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
						Заголовок = СтрШаблон(
							"%1 - ...",
							Формат(Период, "ДФ='dd.MM'"));
					Иначе
						Заголовок = Формат(Период, "ДФ='MMMM yyyy ...'");
					КонецЕсли;
					ПланИтоги.Колонки.Добавить(Имя, ОписаниеТипов, Заголовок);
					КолонкиПериоды.Добавить(Имя);
					Сч = Сч + 1;
				КонецЕсли;
				ИменаКолонок.Вставить(Период, КолонкиПериоды[Сч-1]);
			КонецЕсли;
			Если Периодичность = Перечисления.Периодичность.День Тогда
				Период = КонецДня(Период) + 1;
			ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
				Период = КонецНедели(Период) + 1;
			Иначе
				Период = КонецМесяца(Период) + 1;
			КонецЕсли;
		КонецЦикла;
		Результат.КолонкиПериоды = КолонкиПериоды;
		
		// Добавление строк
		Группировка = Новый Структура("НомерГруппы,Номенклатура,Характеристика");
		НоваяСтрока = Неопределено;
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.НомерГруппы <> Группировка.НомерГруппы
					ИЛИ Выборка.Номенклатура <> Группировка.Номенклатура
					ИЛИ Выборка.Характеристика <> Группировка.Характеристика Тогда
				НоваяСтрока = ПланИтоги.Добавить();
				НоваяСтрока.Требуется  = 0;
				НоваяСтрока.Обеспечено = 0;
				НоваяСтрока.КЗапуску   = 0;
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка,, "Требуется, Обеспечено, КЗапуску");
				ЗаполнитьЗначенияСвойств(Группировка, Выборка);
			КонецЕсли;
			НоваяСтрока.Требуется = НоваяСтрока.Требуется + Выборка.Требуется;
			НоваяСтрока.Обеспечено = НоваяСтрока.Обеспечено + Выборка.Обеспечено;
			НоваяСтрока.КЗапуску = НоваяСтрока.КЗапуску + Выборка.КЗапуску;
			НоваяСтрока.ЕстьОбеспечение = НоваяСтрока.Обеспечено > 0 Или Не НоваяСтрока.ТребуетсяОбеспечение;
			НоваяСтрока.ЕстьЧастичноеОбеспечение = НоваяСтрока.ЕстьЧастичноеОбеспечение Или НоваяСтрока.ЕстьЧастичноеОбеспечение;
			НоваяСтрока[ИменаКолонок[Выборка.Период]] = НоваяСтрока[ИменаКолонок[Выборка.Период]] + Выборка.Требуется;
		КонецЦикла;
		
	КонецЕсли;
	
	// Дополнительные колонки ПланИтоги
	ПланИтоги.Колонки.Добавить("Маршрут", Новый ОписаниеТипов("Строка"));
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Этапы.Владелец          КАК Спецификация,
		|	Этапы.Подразделение     КАК Подразделение,
		|	Этапы.Подразделение.Код КАК ИдентификаторПодразделения
		|ИЗ
		|	Справочник.ЭтапыПроизводства КАК Этапы
		|ГДЕ
		|	Этапы.Владелец В (
		|		ВЫБРАТЬ
		|			План.Спецификация КАК Владелец
		|		ИЗ
		|			НоменклатурныйПланБезДетализации КАК План)
		|	И НЕ Этапы.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	Этапы.Владелец,
		|	Этапы.НомерЭтапа,
		|	Этапы.Подразделение
		|
		|ИТОГИ ПО
		|	Этапы.Владелец";
	ВыборкаМаршрут = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВременныйИндекс = ПланИтоги.Индексы.Добавить("Спецификация");
	СтруктураПоиска = Новый Структура("Спецификация");
	Порядок = Новый Массив();
	
	Пока ВыборкаМаршрут.Следующий() Цикл
		
		ВыборкаЭтапы = ВыборкаМаршрут.Выбрать();
		Пока ВыборкаЭтапы.Следующий() Цикл
		 	Порядок.Добавить(
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
					СокрЛП(ВыборкаЭтапы.ИдентификаторПодразделения), Истина, Истина));
		КонецЦикла;
		Маршрут = СтрСоединить(Порядок, " - ");
		
		СтруктураПоиска.Спецификация = ВыборкаМаршрут.Спецификация;
		Для каждого Строка Из ПланИтоги.НайтиСтроки(СтруктураПоиска) Цикл
			Строка.Маршрут = Маршрут;
		КонецЦикла;
		
		Порядок.Очистить();
		
	КонецЦикла;
	
	ПланИтоги.Индексы.Удалить(ВременныйИндекс);
	
	Результат.ПланИтоги = ПланИтоги;
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
	Возврат ПланИтоги.Количество();
	
КонецФункции

Процедура НоменклатурныйПланВМенеджерВременныхТаблиц(МенеджерВременныхТаблиц, НастройкиДляОтборов, ПользовательскиеОтборы)

	СхемаКомпоновкиДанных = Обработки.ФормированиеЭтаповПроизводства.ПолучитьМакет("НоменклатурныйПлан");
	
	// Компоновка текста запроса
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(
		ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных));
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных();
	КомпоновщикНастроек.Инициализировать(ИсточникНастроек);
	КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиДляОтборов);
	КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	
	КомпоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакетаКомпоновкиДанных.Выполнить(
		СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(),,,, Ложь);
	
	ТекстЗапроса = МакетКомпоновкиДанных.НаборыДанных.НаборДанных.Запрос;
	
	// Выполнение запроса
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НЕОПРЕДЕЛЕНО КАК Организация2", "&ОрганизацияПоУмолчанию КАК Организация");
		Запрос.УстановитьПараметр("ОрганизацияПоУмолчанию", ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию());
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетЗатратПоНаправлениямДеятельности")
		Или Не ПолучитьФункциональнуюОпцию("ФормироватьФинансовыйРезультат") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НаправлениеДеятельности2", "НаправлениеДеятельности");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Характеристика2", "Характеристика");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения")
		И СтрНайти(ТекстЗапроса, "КАК ПодразделениеДиспетчер,") = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"НЕОПРЕДЕЛЕНО КАК ПодразделениеДиспетчер2",
			"План.ЗаказНаПроизводство.Подразделение КАК ПодразделениеДиспетчер");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетПоНалогообложению")
		И Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетНДС")
		И СтрНайти(ТекстЗапроса, "КАК ЗаказПодДеятельность,") = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"НЕОПРЕДЕЛЕНО КАК ЗаказПодДеятельность2",
			"План.ЗаказНаПроизводство.ЗаказПодДеятельность КАК ЗаказПодДеятельность");
	КонецЕсли;
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	СхемаЗапроса.ПакетЗапросов[0].ТаблицаДляПомещения = "НоменклатурныйПлан";
	
	ИндексыСписком = СтрРазделить("Спецификация,Организация,Партнер,Договор,НаправлениеДеятельности,ПодразделениеДиспетчер,ЗаказПодДеятельность,ХозяйственнаяОперация", ",");
	Для каждого Поле Из ИндексыСписком Цикл
		СхемаЗапроса.ПакетЗапросов[0].Индекс.Добавить(Поле);
	КонецЦикла;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	ТекстыОтборов = Новый Массив;
	Для каждого ВыражениеСхемы Из СхемаЗапроса.ПакетЗапросов[0].Операторы[0].Отбор Цикл
		ТекстыОтборов.Добавить("" + ВыражениеСхемы);
	КонецЦикла;
	
	ПользовательскиеОтборы = Новый ТаблицаЗначений;
	ПользовательскиеОтборы.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
	ПользовательскиеОтборы.Колонки.Добавить("Значение");
	ПользовательскиеОтборы.Колонки.Добавить("Текст", Новый ОписаниеТипов("Строка"));
	
	Для Индекс = -МакетКомпоновкиДанных.ЗначенияПараметров.Количество() + 1 По 0 Цикл
		
		ПараметрКомпоновки = МакетКомпоновкиДанных.ЗначенияПараметров[-Индекс];
		Запрос.УстановитьПараметр(ПараметрКомпоновки.Имя, ПараметрКомпоновки.Значение);
		
		// Кеширование отборов для последующего чтения детальных записей
		Для ИндексТекст = 0 По ТекстыОтборов.ВГраница() Цикл
			Если СтрНайти(ТекстыОтборов[ИндексТекст], "&" + ПараметрКомпоновки.Имя) Тогда
				НоваяСтрока = ПользовательскиеОтборы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ПараметрКомпоновки, "Имя, Значение");
				НоваяСтрока.Текст = ТекстыОтборов[ИндексТекст];
				ТекстыОтборов.Удалить(ИндексТекст);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.ВыполнитьПакет();
	
КонецПроцедуры

Функция СоздатьДокументыОтложенноВнутриЗамераВремени(Параметры, АдресХранилища)
	
	ФормированиеЭтаповПроизводства.СформироватьЭтапыКЗапуску(
		Параметры.Группы, Параметры.Изделия, Параметры, АдресХранилища);
	
	КоличествоДанных = 0;
	Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ТипЗнч(Результат) = Тип("Структура")
		И Результат.Свойство("РезультатФормирования") Тогда
		КоличествоДанных = Результат.РезультатФормирования.Количество();
	КонецЕсли;
	
	Возврат КоличествоДанных;
	
КонецФункции

Функция РассчитатьГраницуПериода(ДатаНачала, Периодичность, КоличествоПериодов)
	
	Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда 
		
		ДатаОкончания = ДатаНачала + 86400 * КоличествоПериодов;

	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда
		
		ДатаОкончания = ДатаНачала + 86400 * 7 * КоличествоПериодов;

	ИначеЕсли (Периодичность= ПредопределенноеЗначение("Перечисление.Периодичность.Месяц")) Тогда
		
		ДатаОкончания = ДобавитьМесяц(ДатаНачала, КоличествоПериодов);
		
	Иначе 
		
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Периодичность ""%1"" не поддерживается';
										|en = 'The ""%1"" frequency is not supported'"), Периодичность);
		
	КонецЕсли;
	
	Возврат ДатаОкончания;

КонецФункции

Процедура УдалитьОбъектыОтложенноВнутриЗамераВремени(Параметры, АдресХранилища)
	
	Для Сч = 1 По 2 Цикл
		
		Для Каждого Ссылка Из Параметры.Ссылки Цикл
			
			Если Сч = 1 И ТипЗнч(Ссылка) = Тип("ДокументСсылка.ЗаказНаПроизводство2_2")
				ИЛИ Сч = 2 И ТипЗнч(Ссылка) <> Тип("ДокументСсылка.ЗаказНаПроизводство2_2") Тогда
				Продолжить; // Заказы на производство удаляются на втором проходе
			КонецЕсли;
			
			Объект = Ссылка.ПолучитьОбъект();
			
			Если Объект = Неопределено ИЛИ Объект.ПометкаУдаления Тогда
				Продолжить;
			КонецЕсли;
			
			Объект.Заблокировать();
			
			УстановитьПривилегированныйРежим(Истина);
			Объект.УстановитьПометкуУдаления(Истина);
			УстановитьПривилегированныйРежим(Ложь);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
