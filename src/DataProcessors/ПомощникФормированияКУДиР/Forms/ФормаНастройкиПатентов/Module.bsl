#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Организация", Объект.Организация);
	Параметры.Свойство("Период", Период);
	
	УстановитьСписокОрганизацийНаУСНЗаПериод(Элементы.Организация.СписокВыбора, Период.ДатаНачала, Период.ДатаОкончания, Объект.Организация);
	
	УстановитьОтборСписковФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжиданияОтборыПоПатентам();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьОтборСписковФормы(ЭтотОбъект);
	ПодключитьОбработчикОжиданияОтборыПоПатентам();
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	
	УстановитьОтборСписковФормы(ЭтотОбъект);
	ПодключитьОбработчикОжиданияОтборыПоПатентам();
	
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	
	УстановитьОтборСписковФормы(ЭтотОбъект);
	ПодключитьОбработчикОжиданияОтборыПоПатентам();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	
	УстановитьОтборСписковФормы(ЭтотОбъект);
	ПодключитьОбработчикОжиданияОтборыПоПатентам();

КонецПроцедуры

&НаКлиенте
Процедура ОтборОтветственныйПриИзменении(Элемент)
	
	УстановитьОтборСписковФормы(ЭтотОбъект);
	ПодключитьОбработчикОжиданияОтборыПоПатентам();

КонецПроцедуры

&НаКлиенте
Процедура СтрокаВыбораПатентаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьВыборИзСписка" Тогда
		СтандартнаяОбработка = Ложь;
		ОбработкаОповещения = Новый ОписаниеОповещения("ВыборПатента", ЭтотОбъект);
		ПоказатьВыборИзМеню(ОбработкаОповещения, СписокПатентов, Элемент);
	ИначеЕсли СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ВыбратьПатент") Тогда
		СтандартнаяОбработка = Ложь;
		ИндексСпискаПатентов = Число(СтрЗаменить(НавигационнаяСсылкаФорматированнойСтроки, "ВыбратьПатент", ""));
		ЗначениеПатента = СписокПатентов.Получить(ИндексСпискаПатентов);
		УстановитьОтборПоПатенту(ЗначениеПатента);
	ИначеЕсли СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ВыбратьВсеДокументы") Тогда
		СтандартнаяОбработка = Ложь;
		СтрокаВыбораПатента = СтрокаВыбораПатента(ОбщиеНастройкиПатентов, СписокПатентов);
		КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(СписокДокументов.Отбор, "Патент", , , Ложь);
	ИначеЕсли СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ВыбратьБезПатента") Тогда
		СтандартнаяОбработка = Ложь;
		СтрокаВыбораПатента = СтрокаВыбораПатента(ОбщиеНастройкиПатентов, СписокПатентов, "БезПатента");
		КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(СписокДокументов.Отбор, "Патент", , ВидСравненияКомпоновкиДанных.НеЗаполнено, Истина);
	ИначеЕсли СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ВыбратьСПатентом") Тогда
		СтандартнаяОбработка = Ложь;
		СтрокаВыбораПатента = СтрокаВыбораПатента(ОбщиеНастройкиПатентов, СписокПатентов, "СПатентом");
		КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(СписокДокументов.Отбор, "Патент", , ВидСравненияКомпоновкиДанных.Заполнено, Истина);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСписокДокументов

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Элементы.СписокДокументов.ТекущиеДанные.ДокументВозникновенияДоходов);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	Оповещение = Новый ОписаниеОповещения("УстановитьИнтервалЗавершение", ЭтотОбъект);	
	ОбщегоНазначенияУтКлиент.РедактироватьПериод(Период, , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСумму(Команда)
	
	ИмяОперации = "СписокДокументов";
		
	Если Элементы[ИмяОперации].ВыделенныеСтроки.Количество() Тогда
		ИдентификаторСтроки = Элементы[ИмяОперации].ВыделенныеСтроки.Получить(0);
		ТекСтрока = Элементы[ИмяОперации].ДанныеСтроки(ИдентификаторСтроки);
		ПараметрыУстановкиСуммы = Новый Структура("ДокументВозникновенияДоходов, РеквизитыПервичногоДокумента, Патент");
		ЗаполнитьЗначенияСвойств(ПараметрыУстановкиСуммы, ТекСтрока);
		ПараметрыУстановкиСуммы.Вставить("КлючЗаписи", Элементы.СписокДокументов.ТекущаяСтрока);
		ВводЧислаЗавершение = Новый ОписаниеОповещения("УстановитьСуммуЗавершение", ЭтотОбъект, ПараметрыУстановкиСуммы);
		СуммаПатента = ТекСтрока.СуммаПатент;
		ПоказатьВводЧисла(ВводЧислаЗавершение, СуммаПатента, НСтр("ru = 'Сумма доходов по патенту';
																	|en = 'Patent income amount'"), 15, 2);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УказатьПатент(Команда)
	Если Элементы.СписокДокументов.ВыделенныеСтроки.Количество() Тогда
		ИдентификаторСтроки = Элементы.СписокДокументов.ВыделенныеСтроки.Получить(0);
		ТекСтрока = Элементы.СписокДокументов.ДанныеСтроки(ИдентификаторСтроки);
		ДополнительныеПараметры = Новый Структура("ДокументВозникновенияДоходов, РеквизитыПервичногоДокумента, Патент");
		ЗаполнитьЗначенияСвойств(ДополнительныеПараметры, ТекСтрока);
		ДополнительныеПараметры.Вставить("КлючЗаписи", Элементы.СписокДокументов.ТекущаяСтрока);
		ВыборПатентаЗавершение = Новый ОписаниеОповещения("УказатьПатентЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПараметрыВыбора = Новый Структура("Организация, Подразделение, Период");
		ЗаполнитьЗначенияСвойств(ПараметрыВыбора, ТекСтрока);
		ПараметрыВыбора.Организация = Объект.Организация;
		ПараметрыВыбора.Период = ТекСтрока.ДатаДокументаИБ;
		ОткрытьФорму("Справочник.Патенты.Форма.ФормаВыбора", ПараметрыВыбора, Команда, , , , ВыборПатентаЗавершение);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Возврат;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьСписокОрганизацийНаУСНЗаПериод(СписокОрганизаций, НачалоПериода, КонецПериода, ТекущаяОрганизация)
	
	Обработки.ПомощникФормированияКУДиР.УстановитьСписокОрганизацийНаУСНЗаПериод(СписокОрганизаций, НачалоПериода, КонецПериода, ТекущаяОрганизация);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписковФормы(Форма)
	
	Если Форма.Период.ДатаНачала > Форма.Период.ДатаОкончания Тогда
		СтрокаСообщения = НСтр("ru = 'Дата начала периода не может быть больше даты конца периода';
								|en = 'Period start date cannot be greater than the period end date'");
		#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрокаСообщения, , "Период.ДатаНачала");
		#Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтрокаСообщения, , "Период.ДатаНачала");
		#КонецЕсли
		Возврат;
	КонецЕсли;
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Форма.СписокДокументов.Отбор, "Организация", Форма.Объект.Организация);
	Форма.СписокДокументов.Параметры.УстановитьЗначениеПараметра("НачалоПериода", Форма.Период.ДатаНачала);
	Форма.СписокДокументов.Параметры.УстановитьЗначениеПараметра("КонецПериода", Форма.Период.ДатаОкончания);
	ИспользованиеОтборПодразделение = ЗначениеЗаполнено(Форма.ОтборПодразделение);
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Форма.СписокДокументов.Отбор, "Подразделение", Форма.ОтборПодразделение, , ИспользованиеОтборПодразделение);
	ИспользованиеОтборОтветственный = ЗначениеЗаполнено(Форма.ОтборОтветственный);
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Форма.СписокДокументов.Отбор, "Ответственный", Форма.ОтборОтветственный, , ИспользованиеОтборОтветственный);
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Форма.СписокДокументов.Отбор, "Патент", , , Ложь);
	
	ОбновитьОтборыПоПатентам(Форма);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервалЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Период = ВыбранноеЗначение;
	УстановитьОтборСписковФормы(ЭтотОбъект);
	ПодключитьОбработчикОжиданияОтборыПоПатентам();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСуммуЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	ДанныеДляЗаполнения = Новый Структура("Организация", Объект.Организация);
	МассивСторно = СторноКУДиРПоТекущимЗаписямДокумента(ДополнительныеПараметры);
	Если Результат <> Неопределено И МассивСторно.Количество() = 1 Тогда
		СтруктураСторно = МассивСторно.Получить(0);
		СтруктураСторно["ДоходПатент"] = СтруктураСторно["ДоходПатент"]+Результат;
		Если СтруктураСторно.Графа5 > 0 Тогда
			СтруктураСторно.Графа5 = СтруктураСторно.Графа5 - Результат;
		КонецЕсли;
		Если СтруктураСторно.ДоходЕНВД > 0 Тогда
			СтруктураСторно.ДоходЕНВД = СтруктураСторно.ДоходЕНВД - Результат;
		КонецЕсли;
		СтруктураСторно["Графа4"] = 0;
		ДанныеДляЗаполнения.Вставить("Дата", СтруктураСторно.Период);
		ДанныеДляЗаполнения.Вставить("Строки", МассивСторно);
		
		ПараметрыЗаписи = Новый Структура("Основание", ДанныеДляЗаполнения);
		
		ОткрытьФорму("Документ.ЗаписьКУДиР.ФормаОбъекта", ПараметрыЗаписи, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УказатьПатентЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	ДанныеДляЗаполнения = Новый Структура("Организация", Объект.Организация);
	МассивСторно = СторноКУДиРПоТекущимЗаписямДокумента(ДополнительныеПараметры);
	Если ЗначениеЗаполнено(Результат) И МассивСторно.Количество() = 1 Тогда
		СтруктураСторно = МассивСторно.Получить(0);
		СтруктураНовогоПатента = ОбщегоНазначенияКлиент.СкопироватьРекурсивно(СтруктураСторно);
		СтруктураНовогоПатента["Патент"] = Результат;
		СтруктураНовогоПатента.Графа4 = -СтруктураСторно.Графа4;
		СтруктураНовогоПатента.Графа5 = -СтруктураСторно.Графа5;
		СтруктураНовогоПатента.ДоходЕНВД = -СтруктураСторно.ДоходЕНВД;
		СтруктураНовогоПатента.ДоходПатент = -СтруктураСторно.ДоходПатент;
		МассивСторно.Добавить(СтруктураНовогоПатента);
		
		ДанныеДляЗаполнения.Вставить("Дата", СтруктураСторно.Период);
		ДанныеДляЗаполнения.Вставить("Строки", МассивСторно);
		
		ПараметрыЗаписи = Новый Структура("Основание", ДанныеДляЗаполнения);
		
		ОткрытьФорму("Документ.ЗаписьКУДиР.ФормаОбъекта", ПараметрыЗаписи, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СторноКУДиРПоТекущимЗаписямДокумента(ДополнительныеПараметры)
	ДополнительныеПараметрыСторнирования = Новый Структура;
	ДополнительныеПараметрыСторнирования.Вставить("Регистратор", ДополнительныеПараметры.КлючЗаписи.Регистратор);
	Если ДополнительныеПараметры.Свойство("ДокументВозникновенияДоходов") Тогда
		ДополнительныеПараметрыСторнирования.Вставить("ДокументВозникновенияДоходовРасходов", ДополнительныеПараметры.ДокументВозникновенияДоходов);
	КонецЕсли;
	Если ДополнительныеПараметры.Свойство("Патент") Тогда
		ДополнительныеПараметрыСторнирования.Вставить("Патент", ДополнительныеПараметры.Патент);
	КонецЕсли;
	Возврат УчетУСНПСНСервер.СторноЗаписейКУДиРПоОтбору(ДополнительныеПараметрыСторнирования);
КонецФункции

&НаКлиенте
Процедура ВыборПатента(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	Если Результат <> Неопределено Тогда
		УстановитьОтборПоПатенту(Результат);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьОбработчикОжиданияОтборыПоПатентам()
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	РезультатВыполнения = РезультатВыполнения(ИдентификаторЗадания, АдресХранилища);
	Если РезультатВыполнения <> Неопределено Тогда
		
		ОбновитьОтборыПоПатентамЗавершение(ЭтотОбъект, РезультатВыполнения);
		
	ИначеЕсли ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РезультатВыполнения(ИдентификаторЗадания, АдресХранилища)
	
	Если ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
		Возврат ПолучитьИзВременногоХранилища(АдресХранилища);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОтборыПоПатентам(Форма)
	
	ПараметрыФормирования = Новый Структура;
	ПараметрыФормирования.Вставить("Организация", Форма.Объект.Организация);
	ПараметрыФормирования.Вставить("НачалоПериода", Форма.Период.ДатаНачала);
	ПараметрыФормирования.Вставить("КонецПериода", Форма.Период.ДатаОкончания);
	ПараметрыФормирования.Вставить("Подразделение", Форма.ОтборПодразделение);
	ПараметрыФормирования.Вставить("Ответственный", Форма.ОтборОтветственный);
	
	ПараметрыЗадания = Новый Массив;
	ПараметрыЗадания.Добавить(ПараметрыФормирования);
	
	РезультатРасчета = ЗапуститьВыполнениеЗадания(Форма.УникальныйИдентификатор, ПараметрыЗадания);
	
	Форма.АдресХранилища = РезультатРасчета.АдресРезультата;
	Форма.ИдентификаторЗадания = РезультатРасчета.ИдентификаторЗадания;
	
	Если РезультатРасчета.Статус = "Выполнено" Тогда
		ОбновитьОтборыПоПатентамЗавершение(Форма, РезультатРасчета.РезультатВыполнения);
	Иначе
		Форма.ОбщиеНастройкиПатентов = Неопределено;
		Форма.СписокПатентов.Очистить();
		Форма.СтрокаВыбораПатента = СтрокаВыбораПатента(Форма.ОбщиеНастройкиПатентов, Форма.СписокПатентов);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗапуститьВыполнениеЗадания(УникальныйИдентификатор, ПараметрыЗадания)
	
	ПроцедураРасчета = "Обработки.ПомощникФормированияКУДиР.КоличествоДокументовПоПатентам";
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	РезультатРасчета = ДлительныеОперации.ВыполнитьВФоне(ПроцедураРасчета, ПараметрыЗадания, ПараметрыВыполнения);
	
	Если РезультатРасчета.Статус = "Выполнено" Тогда
		Результат = ПолучитьИзВременногоХранилища(РезультатРасчета.АдресРезультата);
	Иначе
		Результат = Неопределено;
	КонецЕсли;
	
	РезультатРасчета.Вставить("РезультатВыполнения", Результат);
	
	Возврат РезультатРасчета;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОтборыПоПатентамЗавершение(Форма, Результат)
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма.ОбщиеНастройкиПатентов = Новый Структура;
	Форма.ОбщиеНастройкиПатентов.Вставить("БезПатента", 0);
	Форма.ОбщиеНастройкиПатентов.Вставить("ВсеДокументы", 0);
	Форма.ОбщиеНастройкиПатентов.Вставить("СПатентом", 0);
	
	Для каждого КоличествоПатентов Из Результат Цикл
		
		Если ТипЗнч(КоличествоПатентов.Ключ) = Тип("СправочникСсылка.Патенты") Тогда
			// Добавим текущее количество патентов в список значений, так как это данные по конкретному патенту
			Представление = СтрШаблон(НСтр("ru = '%1 (%2)';
											|en = '%1 (%2)'"), КоличествоПатентов.Ключ, КоличествоПатентов.Значение);
			Форма.СписокПатентов.Добавить(КоличествоПатентов.Ключ, Представление);
		Иначе
			Форма.ОбщиеНастройкиПатентов.Вставить(КоличествоПатентов.Ключ, КоличествоПатентов.Значение);
		КонецЕсли;
		
	КонецЦикла;
	
	Форма.ИдентификаторЗадания = Неопределено;
	
	Форма.СтрокаВыбораПатента = СтрокаВыбораПатента(Форма.ОбщиеНастройкиПатентов, Форма.СписокПатентов);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтрокаВыбораПатента(ОбщиеНастройкиПатента, СписокПатентов, ВыбранныйПатент = Неопределено)
	
	Если ОбщиеНастройкиПатента = Неопределено Тогда
		Возврат Новый ФорматированнаяСтрока(НСтр("ru = 'Быстрые отборы: <идет обновление данных>';
												|en = 'Quick filters: <updating data>'"), , ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	
	Если ОбщиеНастройкиПатента.ВсеДокументы = 0 Тогда
		СтрокаСообщения = НСтр("ru = 'Нет документов соответствующим выбранным настройкам';
								|en = 'No documents matching the selected settings'");
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(СтрокаСообщения, , ЦветаСтиля.НедоступныеДанныеЦвет));
	ИначеЕсли ОбщиеНастройкиПатента.ВсеДокументы = ОбщиеНастройкиПатента.БезПатента Тогда
		СтрокаСообщения = СтрШаблон(НСтр("ru = 'Все документы без патента: %1';
										|en = 'All documents without patent: %1'"), ОбщиеНастройкиПатента.БезПатента);
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(СтрокаСообщения, , ЦветаСтиля.ТекстИнформационнойНадписи));
	ИначеЕсли ОбщиеНастройкиПатента.ВсеДокументы = ОбщиеНастройкиПатента.СПатентом И СписокПатентов.Количество() = 1 Тогда
		СтрокаСообщения = НСтр("ru = 'Все документы по патенту:';
								|en = 'All patent documents:'");
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(СтрокаСообщения, , ЦветаСтиля.ТекстИнформационнойНадписи));
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(" ", , ЦветаСтиля.ТекстИнформационнойНадписи));
		Патент = СписокПатентов.Получить(0);
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(Патент.Представление, , , , ПолучитьНавигационнуюСсылку(Патент.Значение)));
	ИначеЕсли ОбщиеНастройкиПатента.ВсеДокументы = ОбщиеНастройкиПатента.СПатентом Тогда
		СтрокаСообщения = СтрШаблон(НСтр("ru = 'Все документы с патентом: %1';
										|en = 'All documents with patent: %1'"), ОбщиеНастройкиПатента.СПатентом);
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(СтрокаСообщения, , , , "ВыбратьСПатентом"));
	Иначе
		СтрокаСообщения = СтрШаблон(НСтр("ru = 'Все документы (%1)';
										|en = 'All documents (%1)'"), ОбщиеНастройкиПатента.ВсеДокументы);
		ЦветСообщения = ?(ВыбранныйПатент = Неопределено, ЦветаСтиля.ЦветТекстаИспользованнаяГиперссылкаБЭД, Неопределено);
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(СтрокаСообщения, , ЦветСообщения, , "ВыбратьВсеДокументы"));
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока("   ", , ЦветаСтиля.ТекстИнформационнойНадписи));
		СтрокаСообщения = СтрШаблон(НСтр("ru = 'Без патента (%1)';
										|en = 'Without patent (%1)'"), ОбщиеНастройкиПатента.БезПатента);
		ЦветСообщения = ?(ВыбранныйПатент = "БезПатента", ЦветаСтиля.ЦветТекстаИспользованнаяГиперссылкаБЭД, Неопределено);
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(СтрокаСообщения, , ЦветСообщения, , "ВыбратьБезПатента"));
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока("   ", , ЦветаСтиля.ТекстИнформационнойНадписи));
		СтрокаСообщения = СтрШаблон(НСтр("ru = 'С патентом (%1)';
										|en = 'With patent (%1)'"), ОбщиеНастройкиПатента.СПатентом);
		ЦветСообщения = ?(ВыбранныйПатент = "СПатентом", ЦветаСтиля.ЦветТекстаИспользованнаяГиперссылкаБЭД, Неопределено);
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(СтрокаСообщения, , ЦветСообщения, , "ВыбратьСПатентом"));
	КонецЕсли;
	
	Если СписокПатентов.Количество() > 3 Тогда
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока("   ", , ЦветаСтиля.ТекстИнформационнойНадписи));
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Выбрать патент...';
																|en = 'Select patent...'"),,,, "ОткрытьВыборИзСписка"));
	ИначеЕсли СписокПатентов.Количество() > 1 Тогда
		Для каждого ЗначениеЭлемента Из СписокПатентов Цикл
			Выбран = ВыбранныйПатент <> Неопределено И ТипЗнч(ВыбранныйПатент) <> Тип("Строка") И ВыбранныйПатент = СписокПатентов.Индекс(ЗначениеЭлемента);
			ЦветСообщения = ?(Выбран, ЦветаСтиля.ЦветТекстаИспользованнаяГиперссылкаБЭД, Неопределено);
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока("   ", , ЦветаСтиля.ТекстИнформационнойНадписи));
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ЗначениеЭлемента.Представление,, ЦветСообщения,, "ВыбратьПатент" + СписокПатентов.Индекс(ЗначениеЭлемента)));
		КонецЦикла;
	КонецЕсли;
	
	Если ВыбранныйПатент <> Неопределено И ТипЗнч(ВыбранныйПатент) <> Тип("Строка") И СписокПатентов.Количество() > 3 Тогда
		СтрокаСообщения = НСтр("ru = 'Показаны документы по патенту';
								|en = 'Displaying patent documents'");
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока("   ", , ЦветаСтиля.ТекстИнформационнойНадписи));
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(СтрокаСообщения, , ЦветаСтиля.ТекстИнформационнойНадписи));
		МассивСтрок.Добавить(" ");
		ЭлементСпискаПатентов = СписокПатентов.Получить(ВыбранныйПатент);
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ЭлементСпискаПатентов.Представление,,,, ПолучитьНавигационнуюСсылку(ЭлементСпискаПатентов.Значение)));
	КонецЕсли;
	
	Возврат Новый ФорматированнаяСтрока(МассивСтрок);
	
КонецФункции

&НаКлиенте
Процедура УстановитьОтборПоПатенту(ЭлементСпискаЗначений)
	
	СтрокаВыбораПатента = СтрокаВыбораПатента(ОбщиеНастройкиПатентов, СписокПатентов, СписокПатентов.Индекс(ЭлементСпискаЗначений));
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(СписокДокументов.Отбор, "Патент", ЭлементСпискаЗначений.Значение, , Истина);
	
КонецПроцедуры

#КонецОбласти