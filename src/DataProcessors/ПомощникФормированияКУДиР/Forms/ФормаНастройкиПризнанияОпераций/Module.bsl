#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Организация", Объект.Организация);
	Параметры.Свойство("Период", Период);
	
	УстановитьСписокОрганизацийНаУСНЗаПериод(Элементы.Организация.СписокВыбора, Период.ДатаНачала, Период.ДатаОкончания, Объект.Организация);
	
	УстановитьОтборСписковФормы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьОтборСписковФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	
	УстановитьОтборСписковФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	
	УстановитьОтборСписковФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ПриАктивизацииСтатьиОбработчикОжидания", 0.2, Истина);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	Оповещение = Новый ОписаниеОповещения("УстановитьИнтервалЗавершение", ЭтотОбъект);	
	ОбщегоНазначенияУтКлиент.РедактироватьПериод(Период, , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСумму(Команда)
	
	Суффикс = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "ГруппаСтраница", "");
	ИмяОперации = "Операции" + Суффикс;
		
	Если Элементы[ИмяОперации].ВыделенныеСтроки.Количество() Тогда
		ИдентификаторСтроки = Элементы[ИмяОперации].ВыделенныеСтроки.Получить(0);
		ТекСтрока = Элементы[ИмяОперации].ДанныеСтроки(ИдентификаторСтроки);
		ПараметрыУстановкиСуммы = Новый Структура("Документ, РеквизитыПервичногоДокумента, Статья");
		ЗаполнитьЗначенияСвойств(ПараметрыУстановкиСуммы, ТекСтрока);
		ВводЧислаЗавершение = Новый ОписаниеОповещения("УстановитьСуммуУСНЗавершение", ЭтотОбъект, ПараметрыУстановкиСуммы);
		ИмяПоляСуммы = ?(ИмяОперации = "ОперацииРасходов", ТекСтрока.РасходыУСН, ТекСтрока.ДоходыУСН);
		ПоказатьВводЧисла(ВводЧислаЗавершение, ИмяПоляСуммы, НСтр("ru = 'Сумма признания';
																	|en = 'Recognition amount'"), 15, 2);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(Элемент.Поля, Элементы.ОперацииАктивовПассивов.Имя);
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Элемент.Отбор, "ОперацииАктивовПассивов.ДоходыУСН", 0);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.НезаполненноеПолеТаблицы);
	
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(Элемент.Поля, Элементы.ОперацииДоходов.Имя);
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Элемент.Отбор, "ОперацииДоходов.ДоходыУСН", 0);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.НезаполненноеПолеТаблицы);
	
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(Элемент.Поля, Элементы.ОперацииРасходов.Имя);
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Элемент.Отбор, "ОперацииРасходов.РасходыУСН", 0);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.НезаполненноеПолеТаблицы);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьСписокОрганизацийНаУСНЗаПериод(СписокОрганизаций, НачалоПериода, КонецПериода, ТекущаяОрганизация)
	
	Обработки.ПомощникФормированияКУДиР.УстановитьСписокОрганизацийНаУСНЗаПериод(СписокОрганизаций, НачалоПериода, КонецПериода, ТекущаяОрганизация);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписковФормы(Форма)
	
	Если Форма.Период.ДатаНачала > Форма.Период.ДатаОкончания Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Дата начала периода не может быть больше даты конца периода';
				|en = 'Period start date cannot be greater than the period end date'"), , "Период.ДатаНачала");
		Возврат;
	КонецЕсли;
	
	ИменаСписковДляОтбора = Новый Массив;
	ИменаСписковДляОтбора.Добавить("СтатьиДоходов");
	ИменаСписковДляОтбора.Добавить("СтатьиРасходов");
	ИменаСписковДляОтбора.Добавить("СтатьиАктивовПассивов");
	ИменаСписковДляОтбора.Добавить("ОперацииДоходов");
	ИменаСписковДляОтбора.Добавить("ОперацииРасходов");
	ИменаСписковДляОтбора.Добавить("ОперацииАктивовПассивов");
	
	Для каждого ИмяСписка Из ИменаСписковДляОтбора Цикл
		КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Форма[ИмяСписка].Отбор, "Организация", Форма.Объект.Организация);
		Форма[ИмяСписка].Параметры.УстановитьЗначениеПараметра("НачалоПериода", Форма.Период.ДатаНачала);
		Форма[ИмяСписка].Параметры.УстановитьЗначениеПараметра("КонецПериода", Форма.Период.ДатаОкончания);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриАктивизацииСтатьиОбработчикОжидания()
	
	Суффикс = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "ГруппаСтраница", "");
	ИмяСтатьи = "Статьи" + Суффикс;
	ИмяОперации = "Операции" + Суффикс;
	ТекущиеДанныеТаблицы = Элементы[ИмяСтатьи].ТекущиеДанные;
	Если ТекущиеДанныеТаблицы = Неопределено Тогда
		ТекущиеДанныеТаблицы = Элементы[ИмяСтатьи].ДанныеСтроки(0);
	КонецЕсли;
	Если ТекущиеДанныеТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(ЭтотОбъект[ИмяОперации].Отбор, "Статья", ТекущиеДанныеТаблицы.Статья);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервалЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Период = ВыбранноеЗначение;
	УстановитьОтборСписковФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСуммуУСНЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Суффикс = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "ГруппаСтраница", "");
	НомерГрафы = ?(Суффикс = "Расходов", 6, 4);
	
	ДанныеДляЗаполнения = Новый Структура("Организация", Объект.Организация);
	МассивСторно = СторноКУДиРПоТекущимЗаписямДокумента(ДополнительныеПараметры);
	Если Результат <> Неопределено И МассивСторно.Количество() = 1 Тогда
		СтруктураСторно = МассивСторно.Получить(0);
		СтруктураСторно["Графа"+Строка(НомерГрафы+1)] = СтруктураСторно["Графа"+Строка(НомерГрафы+1)]+Результат;
		СтруктураСторно["Графа"+Строка(НомерГрафы)] = 0;
		ДанныеДляЗаполнения.Вставить("Дата", СтруктураСторно.Период);
		ДанныеДляЗаполнения.Вставить("Строки", МассивСторно);
		
		ПараметрыЗаписи = Новый Структура("Основание", ДанныеДляЗаполнения);
		
		ОткрытьФорму("Документ.ЗаписьКУДиР.ФормаОбъекта", ПараметрыЗаписи, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СторноКУДиРПоТекущимЗаписямДокумента(ДополнительныеПараметры)
	ДополнительныеПараметрыСторнирования = Новый Структура;
	ДополнительныеПараметрыСторнирования.Вставить("Регистратор", ДополнительныеПараметры.Документ);
	Если ДополнительныеПараметры.Свойство("РеквизитыПервичногоДокумента") Тогда
		ДополнительныеПараметрыСторнирования.Вставить("РеквизитыПервичногоДокумента", ДополнительныеПараметры.РеквизитыПервичногоДокумента);
	КонецЕсли;
	Если ДополнительныеПараметры.Свойство("Статья") Тогда
		ДополнительныеПараметрыСторнирования.Вставить("Статья", ДополнительныеПараметры.Статья);
	КонецЕсли;
	Возврат УчетУСНПСНСервер.СторноЗаписейКУДиРПоОтбору(ДополнительныеПараметрыСторнирования);
КонецФункции

#КонецОбласти