
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиПланирования = Обработки.ПланированиеГрафикаПроизводства2_2.НастройкиПланированияПредварительногоГрафика();
	
	Если Параметры.Свойство("Распоряжение") Тогда
		НастройкиПланирования.Вставить("Распоряжение", Параметры.Распоряжение);
	КонецЕсли;
	
	ЗагрузитьНастройкиФормы();
	
	НастройкиПроизводства = ПроизводствоСервер.НастройкиПодсистемыПроизводство();
	
	СкрытьОтключитьНедоступныеНастройки(НастройкиПроизводства);
	
	ЗаполнитьПодсказкуПланироватьГрафик(НастройкиПроизводства);
	
	ЗаполнитьПодсказкуПрочихНастроек(ЭтотОбъект);
	
	УправлениеДоступностью(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПланироватьГрафикПриИзменении(Элемент)
	
	УправлениеДоступностью(ЭтотОбъект);
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланироватьМодельПриИзменении(Элемент)
	
	УправлениеДоступностью(ЭтотОбъект);
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура НеограниченныйПаркОборудованияПриИзменении(Элемент)
	
	УправлениеДоступностью(ЭтотОбъект);
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадействоватьРезервДоступностиГрафикПриИзменении(Элемент)
	
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадействоватьРезервДоступностиМодельПриИзменении(Элемент)
	
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеМатериалыВНаличииПриИзменении(Элемент)
	
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура КруглосуточнаяРаботаБезВыходныхПриИзменении(Элемент)
	
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтсутствиеПрочихЗаказовПриИзменении(Элемент)
	
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолноеПерепланированиеПриИзменении(Элемент)
	
	СохранитьНастройкиФормыКлиент();
	ЗаполнитьПодсказкуПрочихНастроек(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьРучныеИзмененияГрафикаПриИзменении(Элемент)
	
	ЗаполнитьПодсказкуПрочихНастроек(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Планировать(Команда)
	
	Если ПланироватьГрафик ИЛИ ПланироватьМодель Тогда
		
		ЗаполнитьЗначенияСвойств(НастройкиПланирования, ЭтотОбъект);
		Закрыть(НастройкиПланирования);
		
	Иначе
		
		ТекстСообщения = НСтр("ru = 'Необходимо выбрать хотя бы один из вариантов планирования (""Планировать график"" и/или ""Планировать модель"")';
								|en = 'Please select at least one of the scheduling options: Enable production scheduling model or Enable production scheduling'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ПланироватьГрафик");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СохранитьНастройкиФормыКлиент()
	
	Настройки = Новый Структура;
	Настройки.Вставить("ПланироватьГрафик", ПланироватьГрафик);
	Настройки.Вставить("ЗадействоватьРезервДоступностиГрафик", ЗадействоватьРезервДоступностиГрафик);
	Настройки.Вставить("ПланироватьМодель", ПланироватьМодель);
	Настройки.Вставить("ЗадействоватьРезервДоступностиМодель", ЗадействоватьРезервДоступностиМодель);
	Настройки.Вставить("ВсеМатериалыВНаличии", ВсеМатериалыВНаличии);
	Настройки.Вставить("НеограниченныйПаркОборудования", НеограниченныйПаркОборудования);
	Настройки.Вставить("КруглосуточнаяРаботаБезВыходных", КруглосуточнаяРаботаБезВыходных);
	Настройки.Вставить("ОтсутствиеПрочихЗаказов", ОтсутствиеПрочихЗаказов);
	Настройки.Вставить("ПолноеПерепланирование", ПолноеПерепланирование);
	
	СохранитьНастройкиФормыСервер(Настройки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьНастройкиФормыСервер(Настройки)
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		КлючФормы(),
		Неопределено,
		Настройки);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиФормы()
	
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		КлючФормы(),
		Неопределено);
	
	Если ТипЗнч(Настройки) = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Настройки);
		
	КонецЕсли;
	
	Если НЕ ПланироватьГрафик И НЕ ПланироватьМодель Тогда
		
		ПланироватьГрафик = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СкрытьОтключитьНедоступныеНастройки(НастройкиПроизводства)
	
	Если НЕ НастройкиПроизводства.ИспользуетсяПланированиеПоПроизводственнымРесурсам Тогда
		
		Элементы.ЗадействоватьРезервДоступностиГрафик.Видимость = Ложь;
		Элементы.ДекорацияОтступ1.Видимость = Ложь;
		ЗадействоватьРезервДоступностиГрафик = Ложь;
		
		Элементы.ЗадействоватьРезервДоступностиМодель.Видимость = Ложь;
		ЗадействоватьРезервДоступностиМодель = Ложь;
		
		Элементы.НеограниченныйПаркОборудования.Видимость = Ложь;
		НеограниченныйПаркОборудования = Ложь;
		
		Элементы.ОтсутствиеПрочихЗаказов.Видимость = Ложь;
		ОтсутствиеПрочихЗаказов = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция КлючФормы()
	
	Возврат "Обработка.ПланированиеГрафикаПроизводства2_2.НастройкиПланированияРаспоряжения";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностью(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ЗадействоватьРезервДоступностиГрафик.Доступность = Форма.ПланироватьГрафик;
	Форма.ЗадействоватьРезервДоступностиГрафик = ?(Элементы.ЗадействоватьРезервДоступностиГрафик.Доступность,
		Форма.ЗадействоватьРезервДоступностиГрафик, Ложь);
	
	Элементы.ЗадействоватьРезервДоступностиМодель.Доступность = Форма.ПланироватьМодель
		И НЕ Форма.НеограниченныйПаркОборудования;
	Форма.ЗадействоватьРезервДоступностиМодель = ?(Элементы.ЗадействоватьРезервДоступностиМодель.Доступность,
		Форма.ЗадействоватьРезервДоступностиМодель, Ложь);
	
	Элементы.ВсеМатериалыВНаличии.Доступность = Форма.ПланироватьМодель;
	Форма.ВсеМатериалыВНаличии = ?(Элементы.ВсеМатериалыВНаличии.Доступность,
		Форма.ВсеМатериалыВНаличии, Ложь);
	
	Элементы.НеограниченныйПаркОборудования.Доступность = Форма.ПланироватьМодель;
	Форма.НеограниченныйПаркОборудования = ?(Элементы.НеограниченныйПаркОборудования.Доступность,
		Форма.НеограниченныйПаркОборудования, Ложь);
		
	Элементы.КруглосуточнаяРаботаБезВыходных.Доступность = Форма.ПланироватьМодель;
	Форма.КруглосуточнаяРаботаБезВыходных = ?(Элементы.КруглосуточнаяРаботаБезВыходных.Доступность,
		Форма.КруглосуточнаяРаботаБезВыходных, Ложь);
	
	Элементы.ОтсутствиеПрочихЗаказов.Доступность = Форма.ПланироватьМодель
		И НЕ Форма.НеограниченныйПаркОборудования;
	Форма.ОтсутствиеПрочихЗаказов = ?(Элементы.ОтсутствиеПрочихЗаказов.Доступность,
		Форма.ОтсутствиеПрочихЗаказов, Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодсказкуПланироватьГрафик(НастройкиПроизводства)
	
	Если НастройкиПроизводства.ИспользуетсяПланированиеПоПроизводственнымРесурсам
		И НастройкиПроизводства.ИспользуетсяПланированиеПоМатериальнымРесурсам Тогда
		
		Элементы.ПланироватьГрафик.Подсказка = 
			НСтр("ru = 'При планировании учитываются ограничения по материалам и оборудованию.';
				|en = 'Production scheduling considers material and equipment limitations.'");
		
	ИначеЕсли НастройкиПроизводства.ИспользуетсяПланированиеПоПроизводственнымРесурсам Тогда
		
		Элементы.ПланироватьГрафик.Подсказка = 
			НСтр("ru = 'При планировании учитываются ограничения по оборудованию.';
				|en = 'Production scheduling considers equipment limitations.'");
		
	ИначеЕсли НастройкиПроизводства.ИспользуетсяПланированиеПоМатериальнымРесурсам Тогда
		
		Элементы.ПланироватьГрафик.Подсказка = 
			НСтр("ru = 'При планировании учитываются ограничения по материалам.';
				|en = 'Production scheduling considers material limitations.'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьПодсказкуПрочихНастроек(Форма)
	
	Подсказка = УправлениеПроизводствомКлиентСервер.ОписаниеНастроекПланирования(
		Форма.ПолноеПерепланирование,
		Форма.ОтменитьРучныеИзмененияГрафика);
	
	Форма.Элементы.ГруппаПрочиеНастройки.Подсказка = Подсказка;
	
КонецПроцедуры

#КонецОбласти
