
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("УчетнаяЗаписьМаркетплейса", УчетнаяЗапись);
	 
	Если Не ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СтатусыПубликацииТоваровЯндексМаркет, "УчетнаяЗапись", УчетнаяЗапись, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(УтверждениеАссортимента, "УчетнаяЗапись", УчетнаяЗапись, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ИсправлениеОшибок, "УчетнаяЗапись", УчетнаяЗапись, Истина);

	ЗаполнитьИнформациюВПодсказках();
	ЗаполнитьДанныеПоУчетнойЗаписи();
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПросмотрИРедактированиеАссортимента;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ДанныеУчетнойЗаписи.ОбязательныеРеквизитыЗаполнены Тогда
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса", УчетнаяЗапись);
		
		ОткрытьФорму("Обработка.ПанельАдминистрированияПродажиЯндексМаркет.Форма.НастройкиОбменаДанными", 
			ПараметрыОткрытия, 
			ЭтотОбъект, 
			Истина,,, 
			, 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	Иначе
		ПодключитьОбработчикОжидания("ОбновитьТаблицуЦенНаКлиентеПодключаемый", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборТоваровПоОтбору.Форма.Форма"
			Или ИсточникВыбора.ИмяФормы = "Обработка.ПодборТоваровВДокументПродажи.Форма.Форма" Тогда
		ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
		Элементы.Ассортимент.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_СтатусыПубликацииТоваровЯндексМаркет" 
			Или ИмяСобытия = "ИнтеграцияСЯндексМаркетСервер.ОбновитьДанные" Тогда
		Если ЗначениеЗаполнено(Параметр)
				И Параметр = УчетнаяЗапись Тогда
			Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПросмотрИРедактированиеАссортимента Тогда
				Элементы.Ассортимент.Обновить();
			ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаУтверждениеРекомендаций Тогда
				Элементы.УтверждениеАссортимента.Обновить();
			ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИсправлениеОшибок Тогда
				Элементы.ИсправлениеОшибок.Обновить();
			КонецЕсли; 
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ЯндексМаркет_НастройкиОбменаДанными" Тогда
		Если ЗначениеЗаполнено(Параметр)
			 И Параметр = УчетнаяЗапись Тогда
			ЗаполнитьДанныеПоУчетнойЗаписи();
			ОбновитьТаблицуЦенНаКлиенте();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАссортимент

&НаКлиенте
Процедура АссортиментВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "АссортиментЕстьИдентификаторПлощадки" Тогда
		СтандартнаяОбработка = Ложь;
		
		Если ТекущиеДанные.ЕстьИдентификаторПлощадки Тогда
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://pokupki.market.yandex.ru/product/" + СокрЛП(СтрЗаменить(ТекущиеДанные.ИдентификаторТовараПлощадки, Символ(160), "")));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		Отказ = Истина;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("УчетнаяЗапись", УчетнаяЗапись);

		ОткрытьФорму("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет.Форма.ФормаЗаписи", 
			ПараметрыОткрытия,
			ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУтверждениеАссортимента

&НаКлиенте
Процедура УтверждениеАссортиментаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "УтверждениеАссортиментаВыбран" Тогда
		СтандартнаяОбработка = Ложь;
		
		ЗаписатьИзменениеФлагаВыбран(ВыбраннаяСтрока);
		Элементы.УтверждениеАссортимента.Обновить();
		
	ИначеЕсли Поле.Имя = "УтверждениеАссортиментаЕстьИдентификаторПлощадки" Тогда
		СтандартнаяОбработка = Ложь;
		
		Если ТекущиеДанные.ЕстьИдентификаторПлощадки Тогда
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://pokupki.market.yandex.ru/product/" + СокрЛП(СтрЗаменить(ТекущиеДанные.ИдентификаторТовараПлощадки, Символ(160), "")));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УтверждениеАссортиментаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		Отказ = Истина;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("УчетнаяЗапись", УчетнаяЗапись);

		ОткрытьФорму("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет.Форма.ФормаЗаписи", 
			ПараметрыОткрытия,
			ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИсправлениеОшибок

&НаКлиенте
Процедура ИсправлениеОшибокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "ИсправлениеОшибокВыбран" Тогда
		СтандартнаяОбработка = Ложь;
		
		ЗаписатьИзменениеФлагаВыбран(ВыбраннаяСтрока);
		Элементы.ИсправлениеОшибок.Обновить();
		
	ИначеЕсли Поле.Имя = "ИсправлениеОшибокЕстьИдентификаторПлощадки" Тогда
		СтандартнаяОбработка = Ложь;
		
		Если ТекущиеДанные.ЕстьИдентификаторПлощадки Тогда
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://pokupki.market.yandex.ru/product/" + СокрЛП(СтрЗаменить(ТекущиеДанные.ИдентификаторТовараПлощадки, Символ(160), "")));
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеОшибокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		Отказ = Истина;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("УчетнаяЗапись", УчетнаяЗапись);

		ОткрытьФорму("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет.Форма.ФормаЗаписи", 
			ПараметрыОткрытия,
			ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПросмотрИРедактированиеАссортимента(Команда)
	
	ПриАктивацииГиперСсылкиНаПанели("КнопкаПросмотрИРедактированиеАссортимента");
	Элементы.Ассортимент.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура УтверждениеРекомендаций(Команда)
	
	ПриАктивацииГиперСсылкиНаПанели("КнопкаУтверждениеРекомендаций");
	Элементы.УтверждениеАссортимента.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеОшибок(Команда)
	
	ПриАктивацииГиперСсылкиНаПанели("КнопкаИсправлениеОшибок");
	Элементы.ИсправлениеОшибок.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ПросмотрАктуальныхЦен(Команда)
	
	ПриАктивацииГиперСсылкиНаПанели("КнопкаПросмотрАктуальныхЦен");
	Элементы.АктуальныеЦены.Обновить(); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастроек(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса", УчетнаяЗапись);
	
	ОткрытьФорму("Обработка.ПанельАдминистрированияПродажиЯндексМаркет.Форма.НастройкиОбменаДанными", 
		ПараметрыОткрытия, 
		ЭтотОбъект, 
		Истина,,, 
		, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры   

&НаКлиенте
Процедура ПоказатьПодсказку(Команда)
	
	ИмяЭлементаПодсказки = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "Группа", "Подсказка");
	ИмяЭлементаОтступ    = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "Группа", "ДекорацияОтступ");
	ИмяКнопкиСкрыть      = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "Группа", "СкрытьПодсказку"); 
	ИмяКнопкиПоказать    = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "Группа", "ПоказатьПодсказку");
	
	Элементы[ИмяЭлементаПодсказки].Видимость = Истина;
	Элементы[ИмяЭлементаОтступ].Видимость    = Истина;
	Элементы[ИмяКнопкиСкрыть].Видимость      = Истина;
	Элементы[ИмяКнопкиПоказать].Видимость    = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПодсказку(Команда)
	
	ИмяЭлементаПодсказки = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "Группа", "Подсказка");
	ИмяЭлементаОтступ    = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "Группа", "ДекорацияОтступ");
	ИмяКнопкиСкрыть      = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "Группа", "СкрытьПодсказку"); 
	ИмяКнопкиПоказать    = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "Группа", "ПоказатьПодсказку");
	
	Элементы[ИмяЭлементаПодсказки].Видимость = Ложь;
	Элементы[ИмяЭлементаОтступ].Видимость    = Ложь;
	Элементы[ИмяКнопкиСкрыть].Видимость      = Ложь;
	Элементы[ИмяКнопкиПоказать].Видимость    = Истина;
	
КонецПроцедуры

#Область ОбработчикиКомандТаблицыФормыАссортимент

&НаКлиенте
Процедура ОткрытьПодбор(Команда)

	ОчиститьСообщения();
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = Ложь;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;

	Организация = ДанныеУчетнойЗаписи.Организация;
	ВалютаРУ    = ЗначениеНастроекКлиентСерверПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);   
	
	МассивТиповНоменклатуры = Новый Массив;
	МассивТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар"));

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Организация",                             Организация);
	ПараметрыОткрытия.Вставить("ЦенаВключаетНДС",                         Истина);
	ПараметрыОткрытия.Вставить("ВозвращатьМногооборотнуюТару",            Ложь);
	ПараметрыОткрытия.Вставить("ОтборПоТипуНоменклатуры",                 Новый ФиксированныйМассив(МассивТиповНоменклатуры));
	ПараметрыОткрытия.Вставить("СкрыватьРучныеСкидки",                    Истина);
	ПараметрыОткрытия.Вставить("СкрыватьКнопкуЗапрашиватьКоличество",     Истина);
	ПараметрыОткрытия.Вставить("ОстаткиПоВсемСкладам",                    Истина);
	ПараметрыОткрытия.Вставить("ИспользоватьДатыОтгрузки",                Ложь);
	ПараметрыОткрытия.Вставить("Валюта",                                  ВалютаРУ);
	ПараметрыОткрытия.Вставить("Заголовок",                               НСтр("ru = 'Публикация товаров на Яндекс Маркет';
																				|en = 'Publish goods on Yandex.Market'"));
	ПараметрыОткрытия.Вставить("ЗаголовокКнопкиПеренести",                НСтр("ru = 'Перенести для публикации';
																				|en = 'Move for publication'"));
	ПараметрыОткрытия.Вставить("Дата",                                    ОбщегоНазначенияКлиент.ДатаСеанса());
	ПараметрыОткрытия.Вставить("Документ",                                ПредопределенноеЗначение("Документ.УстановкаЦенНоменклатуры.ПустаяСсылка"));
	ПараметрыОткрытия.Вставить("ПараметрыУказанияСерий",                  ПараметрыУказанияСерий);
	ПараметрыОткрытия.Вставить("ПодборВариантовОбеспечения",              Ложь);
	ПараметрыОткрытия.Вставить("ВидЦены",                                 ДанныеУчетнойЗаписи.ЦенаПродажи);
	ПараметрыОткрытия.Вставить("РежимПодбораБезСоглашенийСКлиентами",     Истина);
	ПараметрыОткрытия.Вставить("РежимПодбораБезКоличественныхПараметров", Истина);
	ПараметрыОткрытия.Вставить("РежимПодбораБезСуммовыхПараметров",       Истина);
	ПараметрыОткрытия.Вставить("НеРазбиватьНаборыПоКомплектующим",        Истина);
	ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса",               УчетнаяЗапись);

	ОткрытьФорму("Обработка.ПодборТоваровВДокументПродажи.Форма", 
		ПараметрыОткрытия, 
		ЭтотОбъект, 
		УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПоДаннымПрайсЛиста(Команда)
	
	ОчиститьСообщения();
	
	ДлительнаяОперация    = ОбновитьПоДаннымПрайсЛистаНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьПоДаннымПрайсЛистаЗавершениеФоновогоЗадания", ЭтотОбъект);
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, ДлительнаяОперация);
		
	Иначе
		ПараметрыОжидания 								   = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания 			   = Истина;
		ПараметрыОжидания.ТекстСообщения                   = НСтр("ru = 'Обновление товарного каталога по данным прайс-листа.';
																	|en = 'Update the goods directory by the price list data.'");
		ПараметрыОжидания.ОповещениеПользователя.Показать  = Истина;
		ПараметрыОжидания.ОповещениеПользователя.Текст 	   = НСтр("ru = 'Яндекс Маркет';
																	|en = 'Yandex.Market'");
		ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Обновление товарного каталога по данным прайс-листа завершено.';
																	|en = 'The goods directory is updated by the price list data.'");
		ПараметрыОжидания.ОповещениеПользователя.Картинка  = БиблиотекаКартинок.ЛоготипЯндексМаркет;
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНоменклатуруПоОтбору(Команда)
	
	ОчиститьСообщения();
	
	МассивТиповНоменклатуры = Новый Массив;
	МассивТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар"));

	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("УникальныйИдентификатор",			УникальныйИдентификатор);
	ПараметрыОткрытия.Вставить("ОтборПоТипуНоменклатуры",           Новый ФиксированныйМассив(МассивТиповНоменклатуры));
	ПараметрыОткрытия.Вставить("ПодбиратьНоменклатуруПартнера", 	Ложь);
	ПараметрыОткрытия.Вставить("ИспользуетсяЦенообразование25", 	ЦенообразованиеКлиент.ИспользуетсяЦенообразование25(ОбщегоНазначенияКлиент.ДатаСеанса()));
	ПараметрыОткрытия.Вставить("Заголовок",						    НСтр("ru = 'Публикация товаров на Яндекс Маркет';
																			|en = 'Publish goods on Yandex.Market'"));
	ПараметрыОткрытия.Вставить("ЗаголовокКнопкиПеренести",			НСтр("ru = 'Перенести для публикации';
																			|en = 'Move for publication'"));
	ПараметрыОткрытия.Вставить("РежимВыбора",						Истина);
	ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса",		    УчетнаяЗапись);

	ОткрытьФорму("Обработка.ПодборТоваровПоОтбору.Форма.Форма", 
		ПараметрыОткрытия, 
		ЭтотОбъект,
		,,,
		, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры 

&НаКлиенте
Процедура ЗаполнитьПоДаннымДругогоМагазина(Команда)

	ПараметрыОткрытия = Новый Структура("УчетнаяЗапись", УчетнаяЗапись);

	ОткрытьФорму("Обработка.УправлениеПродажамиНаЯндексМаркет.Форма.КопированиеАссортимента",
		ПараметрыОткрытия,
		ЭтотОбъект,
		Истина,,,,
		РежимОткрытияОкнаФормы.Независимый);

КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруГотовы(Команда)
	
	ОтобратьПоМаркеруГотовыНаСервере();
	
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.ЗеленыйШарБЭД;
	Элементы.Ассортимент.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруОшибка(Команда)
	
	ОтобратьПоМаркеруОшибкаНаСервере();
	
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.КрасныйШарБЭД;
	Элементы.Ассортимент.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруВПроцессе(Команда)
	
	ОтобратьПоМаркеруВПроцессеНаСервере();
	
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.ЖелтыйШарБЭД;
	Элементы.Ассортимент.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруНовые(Команда)
	
	ОтобратьПоМаркеруНовыеНаСервере();
	
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.СерыйШарБЭД;
	Элементы.Ассортимент.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсе(Команда)
	
	ПоказатьВсеНаСервере();
	
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.Состояние0Процентов;
	Элементы.Ассортимент.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОстатки(Команда)
	
	ОчиститьСообщения();
	
	Если ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация    = ВыгрузитьОстаткиНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершитьДлительнуюОперациюНаКлиенте", ЭтотОбъект);
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, ДлительнаяОперация);
		
	Иначе
		ПараметрыОжидания 								   = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания 			   = Истина;
		ПараметрыОжидания.ТекстСообщения                   = НСтр("ru = 'Выгрузка остатков товаров на торговую площадку.';
																	|en = 'Export the stock balance to the trading platform.'");
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандТаблицыФормыУтверждениеАссортимента

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	ВыделенныеСтроки = Элементы.УтверждениеАссортимента.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() < 1 Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выделите все строки, для которых необходимо установить флажки.';
														|en = 'Select all lines for which check boxes must be selected.'"));
		
	Иначе
	    ИзменитьФлагиНаСервере(ВыделенныеСтроки, Истина);
		Элементы.УтверждениеАссортимента.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьВсе(Команда)
	
	ВыделенныеСтроки = Элементы.УтверждениеАссортимента.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() < 1 Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выделите все строки, для которых необходимо снять флажки.';
														|en = 'Select all lines for which check boxes must be cleared.'"));
		
	Иначе
	    ИзменитьФлагиНаСервере(ВыделенныеСтроки, Ложь);
		Элементы.УтверждениеАссортимента.Обновить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УтвердитьВыбранные(Команда)
	
	ОчиститьСообщения();
	УтвердитьОтклонитьВыбранныеНаСервере(Истина);
	Элементы.УтверждениеАссортимента.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьВыбранные(Команда)
	
	ОчиститьСообщения();
	УтвердитьОтклонитьВыбранныеНаСервере(Ложь);
	Элементы.УтверждениеАссортимента.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандТаблицыФормыИсправлениеОшибок

&НаКлиенте
Процедура ИсправлениеОшибокВыбратьВыделенные(Команда)
	
	ВыделенныеСтроки = Элементы.ИсправлениеОшибок.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() < 1 Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выделите все строки, для которых необходимо установить флажки.';
														|en = 'Select all lines for which check boxes must be selected.'"));
		
	Иначе
	    ИзменитьФлагиНаСервере(ВыделенныеСтроки, Истина);
		Элементы.ИсправлениеОшибок.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеОшибокСброситьВыделенные(Команда)
	
	ВыделенныеСтроки = Элементы.ИсправлениеОшибок.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() < 1 Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выделите все строки, для которых необходимо снять флажки.';
														|en = 'Select all lines for which check boxes must be cleared.'"));
		
	Иначе
	    ИзменитьФлагиНаСервере(ВыделенныеСтроки, Ложь);
		Элементы.ИсправлениеОшибок.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНаПовторноеПолучениеРекомендации(Команда)
	
	ОчиститьСообщения();
	ПовторноОтправитьЗапросВыбранныеНаСервере("НаПолучениеРекомендации");
	Элементы.ИсправлениеОшибок.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПовторноНаМодерацию(Команда)
	
	ОчиститьСообщения();
	ПовторноОтправитьЗапросВыбранныеНаСервере("НаМодерацию");
	Элементы.ИсправлениеОшибок.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандТаблицыФормыАктуальныеЦены

&НаКлиенте
Процедура ЗагрузитьРекомендованныеЦены(Команда)

	ОчиститьСообщения();
	
	Если ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация    = ЗагрузитьРекомендованныеЦеныНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершитьДлительнуюОперациюНаКлиенте", ЭтотОбъект);
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, ДлительнаяОперация);
		
	Иначе
		ПараметрыОжидания 								   = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания 			   = Истина;
		ПараметрыОжидания.ТекстСообщения                   = НСтр("ru = 'Загрузка рекомендованных цен товаров с торговой площадки.';
																	|en = 'Import recommended item prices from the trading platform.'");
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры     

&НаКлиенте
Процедура ВыгрузитьУстановленныеЦены(Команда)
	
	ОчиститьСообщения();
	
	Если ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация    = ВыгрузитьУстановленныеЦеныНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершитьДлительнуюОперациюНаКлиенте", ЭтотОбъект);
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, ДлительнаяОперация);
		
	Иначе
		ПараметрыОжидания 								   = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания 			   = Истина;
		ПараметрыОжидания.ТекстСообщения                   = НСтр("ru = 'Выгрузка текущих цен товаров на торговую площадку.';
																	|en = 'Export the current item prices to the trading platform.'");
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;

КонецПроцедуры  

&НаКлиенте
Процедура ОбновитьТаблицуЦен(Команда)
	
	ОбновитьТаблицуЦенНаКлиенте(Истина);
	
КонецПроцедуры    

&НаКлиенте
Процедура ОткрытьПрайсЛист(Команда)
	
	ОткрытьФорму("Обработка.ПрайсЛист.Форма.Форма",
		,
		,
		Истина);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьИнформациюВПодсказках()
	
	Элементы.ПодсказкаУтверждениеРекомендаций.Заголовок = 
		НСтр("ru = 'Вам необходимо проверить рекомендации о соответствии карточек товаров Яндекс Маркета Вашему товару. Если рекомендация кажется Вам подходящей - утвердите рекомендацию, иначе - отклоните. После утверждения рекоменации выбранные позиции будут исключены из перечня для утверждения и отправятся на модерацию в Яндекс Маркет. После успешного завершения модерации товарная позиция будет привязана к карточке товара площадки. В случае отклонения выбранные позиции будут исключены из перечня для утверждения и пересены в раздел ""Исправление ошибок публикации"" с комментарием ""Неверно подобранная рекомендация"".';
			|en = 'Check whether the recommended item cards on Yandex.Market correspond to your item. If you find the recommendation appropriate, approve it. Otherwise, reject the recommendation. After the recommendation is approved, the selected items will be excluded from the list for approval and sent to Yandex.Market for moderation. After moderation is passed, the item will be linked to the item card of the trading platform. In case of rejection, the selected items will be excluded from the list for approval and transferred to the ""Correct errors when publishing"" section with the following comment: ""Incorrect recommendation"".'");
	Элементы.ПодсказкаПросмотрИРедактированиеАссортимента.Заголовок = 
		НСтр("ru = 'Выгрузка товарного каталога осуществляется в четыре этапа:
				   |	Шаг 1. Получите рекомендованные SKU на Яндексе для ваших товаров. Добавьте публикуемые товары в таблицу ниже и дождитесь статуса ""Получена рекомендация"". Вы можете использовать базовый прайс-лист для заполнения данных об ассортименте.
				   |	Шаг 2. Сверьте информацию от Маркета с вашим ассортиментом. Перейдите на закладку ""Утверждение рекомендаций"" и ознакомьтесь с полученнной информацией. Утвердите рекомендации, которые считаете верными, отклоните, если рекомендация ошибочна.
				   |	Шаг 3. При необходимости обработайте проблемные позиции на закладке ""Исправление ошибок при публикации"".
				   |	Шаг 4. Дождитесь результатов модерации товаров (обработка может занимать до двух дней). Статус публикации ""Модерация пройдена"" означает, что после обновления данных об остатках товар будет доступен покутелю на торговой площадке.';
				   |en = 'Выгрузка товарного каталога осуществляется в четыре этапа:
				   |	Шаг 1. Получите рекомендованные SKU на Яндексе для ваших товаров. Добавьте публикуемые товары в таблицу ниже и дождитесь статуса ""Получена рекомендация"". Вы можете использовать базовый прайс-лист для заполнения данных об ассортименте.
				   |	Шаг 2. Сверьте информацию от Маркета с вашим ассортиментом. Перейдите на закладку ""Утверждение рекомендаций"" и ознакомьтесь с полученнной информацией. Утвердите рекомендации, которые считаете верными, отклоните, если рекомендация ошибочна.
				   |	Шаг 3. При необходимости обработайте проблемные позиции на закладке ""Исправление ошибок при публикации"".
				   |	Шаг 4. Дождитесь результатов модерации товаров (обработка может занимать до двух дней). Статус публикации ""Модерация пройдена"" означает, что после обновления данных об остатках товар будет доступен покутелю на торговой площадке.'");
	Элементы.ПодсказкаИсправлениеОшибок.Заголовок = 
		НСтр("ru = 'Ознакомьтесь с описанием ошибок, уточните данные о товаре при необходимости. После отработки замечаний вы можете отправить данные о товаре повторно на получение рекомендации или на создание связи. В случае, если проблему устранить невозможно (например, товары указаннной категории не размещаются на площадке), вы можете не показывать товар в ассортименте.';
			|en = 'Review the error details and modify the item data if necessary. Once you fix the errors, you can send the item data to get a recommendation or create a link again. If you cannot solve the issue (for example, goods of the specified category are not published on the trading platform), you can remove the item from the product range.'");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПоУчетнойЗаписи()
	
	УстановитьПривилегированныйРежим(Истина);
	ДанныеУчетнойЗаписи = ИнтеграцияСЯндексМаркетСервер.ДанныеУчетнойЗаписиЯндексМаркет(УчетнаяЗапись);
    УстановитьПривилегированныйРежим(Ложь);
	
	Если ДанныеУчетнойЗаписи.ПометкаУдаления Тогда
		Элементы.ДекорацияУчетнаяЗапись.Картинка  = БиблиотекаКартинок.СтатусРаспознаванияДокументаОшибка;
		Элементы.ДекорацияУчетнаяЗапись.Подсказка = НСтр("ru = 'Магазин отсутствует в кабинете торговой площадки';
														|en = 'The store is unavailable in the personal account of the trading platform'");
	ИначеЕсли ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки Тогда
		Элементы.ДекорацияУчетнаяЗапись.Картинка  = БиблиотекаКартинок.УстановитьСтатусЗаказаЗакрыт;
		Элементы.ДекорацияУчетнаяЗапись.Подсказка = НСтр("ru = 'Обмен данными с магазином запрещен';
														|en = 'Data exchange with the store is not allowed'");
	ИначеЕсли Не ДанныеУчетнойЗаписи.ОбязательныеРеквизитыЗаполнены Тогда
		Элементы.ДекорацияУчетнаяЗапись.Картинка  = БиблиотекаКартинок.Предупреждение;
		Элементы.ДекорацияУчетнаяЗапись.Подсказка = НСтр("ru = 'Требуется настройка';
														|en = 'Configuration is required'");
	ИначеЕсли Не ДанныеУчетнойЗаписи.ОбязательныеЗаданияВключены Тогда
		Элементы.ДекорацияУчетнаяЗапись.Картинка  = БиблиотекаКартинок.РегламентноеЗадание;
		Элементы.ДекорацияУчетнаяЗапись.Подсказка = НСтр("ru = 'Отключены обязательные регламентные задания';
														|en = 'Required scheduled jobs are disabled'");
	Иначе
		Элементы.ДекорацияУчетнаяЗапись.Картинка  = БиблиотекаКартинок.СтатусРаспознаванияДокументаОбработан;
		Элементы.ДекорацияУчетнаяЗапись.Подсказка = "";
	КонецЕсли;

	Элементы.ВыгрузитьОстатки.Доступность                           = Не ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки;
	Элементы.АктуальныеЦеныЗагрузитьРекомендованныеЦены.Доступность = Не ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки;
	Элементы.АктуальныеЦеныВыгрузитьУстановленныеЦены.Доступность   = Не ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки;

	ЭтоFBS = (ДанныеУчетнойЗаписи.СхемаРаботы = ПредопределенноеЗначение("Перечисление.СхемыРаботыТорговыхПлощадок.FBS"));
	Элементы.ВыгрузитьОстатки.Видимость   = ЭтоFBS;
	Элементы.АссортиментОстаток.Видимость = ЭтоFBS;

КонецПроцедуры

&НаКлиенте
Процедура ПриАктивацииГиперСсылкиНаПанели(ИмяАктивнойКнопки)
	
	МассивИменКнопокПанели = Новый Массив;
	МассивИменКнопокПанели.Добавить("КнопкаПросмотрИРедактированиеАссортимента");
	МассивИменКнопокПанели.Добавить("КнопкаУтверждениеРекомендаций");
	МассивИменКнопокПанели.Добавить("КнопкаИсправлениеОшибок");
	МассивИменКнопокПанели.Добавить("КнопкаПросмотрАктуальныхЦен");
	
	Для Каждого ЭлементКоллекции Из МассивИменКнопокПанели Цикл
		Если ЭлементКоллекции = ИмяАктивнойКнопки Тогда
			Элементы[ЭлементКоллекции].ЦветТекста = ОбщегоНазначенияКлиент.ЦветСтиля("ЦветРамки");
		Иначе
			Элементы[ЭлементКоллекции].ЦветТекста = ОбщегоНазначенияКлиент.ЦветСтиля("ЦветТекстаКнопки");
		КонецЕсли;
	КонецЦикла;
	
	ИмяСтраницы = СтрЗаменить(ИмяАктивнойКнопки, "Кнопка", "Группа");
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы[ИмяСтраницы];
	
	Элементы.ГруппаДлительноеОжидание.Видимость = Элементы.ГруппаДлительноеОжидание.ТолькоПросмотр
													И (Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПросмотрАктуальныхЦен);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение)
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	
	ИспользоватьУпаковкиНоменклатуры       = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
		
	// Загрузка сформированного списка товаров.
	Для Каждого СтрокаТаблицыЗначений Из ТаблицаТоваров Цикл
		НачатьТранзакцию();
		
		Попытка
			БлокировкаДанных = Новый БлокировкаДанных;
			ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет");
			ЭлементБлокировкиДанных.УстановитьЗначение("УчетнаяЗапись", УчетнаяЗапись);
			ЭлементБлокировкиДанных.УстановитьЗначение("Номенклатура",  СтрокаТаблицыЗначений.Номенклатура);
			Если ИспользоватьХарактеристикиНоменклатуры Тогда
				ЭлементБлокировкиДанных.УстановитьЗначение("Характеристика", СтрокаТаблицыЗначений.Характеристика);
			КонецЕсли;
			БлокировкаДанных.Заблокировать();
	
			НаборЗаписей = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.УчетнаяЗапись.Установить(УчетнаяЗапись);
			НаборЗаписей.Отбор.Номенклатура.Установить(СтрокаТаблицыЗначений.Номенклатура);
			Если ИспользоватьХарактеристикиНоменклатуры Тогда
				НаборЗаписей.Отбор.Характеристика.Установить(СтрокаТаблицыЗначений.Характеристика);
			КонецЕсли;
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда 
				Запись               = НаборЗаписей.Добавить(); 
				Запись.УчетнаяЗапись = УчетнаяЗапись;
				Запись.Номенклатура  = СтрокаТаблицыЗначений.Номенклатура;
				
				Если ИспользоватьХарактеристикиНоменклатуры Тогда
					Запись.Характеристика = СтрокаТаблицыЗначений.Характеристика;
				КонецЕсли;
				Если ИспользоватьУпаковкиНоменклатуры Тогда
					Запись.Упаковка = СтрокаТаблицыЗначений.Номенклатура.ЕдиницаИзмерения;
				КонецЕсли;
				
				НаборЗаписей.Записать();
			КонецЕсли;
		
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ОбщегоНазначения.СообщитьПользователю(
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьПоДаннымПрайсЛистаНаСервере()
	
	ПараметрыВыполнения 							 = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение            = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания  = НСтр("ru = 'Яндекс Маркет. Обновление товарного каталога по данным прайс-листа.';
															|en = 'Yandex.Market. Update the goods directory by the price list data.'");
	ПараметрыВыполнения.ЗапуститьВФоне               = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;

	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ЗаполнитьПоДаннымПрайсЛиста";

	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
		ИмяМетода, 
		УчетнаяЗапись,
		ДанныеУчетнойЗаписи.ЦенаПродажи);
	
КонецФункции

&НаКлиенте
Процедура ОбновитьПоДаннымПрайсЛистаЗавершениеФоновогоЗадания(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Статус = "Ошибка" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		
		ИначеЕсли Результат.Статус = "Выполнено" 
		 		  И Результат.Свойство("АдресРезультата") Тогда
			Ошибка = ИнтеграцияСЯндексМаркетВызовСервера.ПолучитьРезультатВыполненияФоновогоЗадания(Результат.АдресРезультата);

			Если Не ПустаяСтрока(Ошибка.КодОшибки) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка.ОписаниеОшибки);
			Иначе
				Оповестить("ИнтеграцияСЯндексМаркетСервер.ОбновитьДанные", 
					УчетнаяЗапись, 
					"Обработка.УправлениеПродажамиНаЯндексМаркет.ВыгрузкаТоварногоКаталога.ОбновитьПоДаннымПрайсЛиста");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруГотовыНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СтатусыПубликацииТоваровЯндексМаркет,
		"МаркерСтатуса",
		3,
		ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруОшибкаНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СтатусыПубликацииТоваровЯндексМаркет,
		"МаркерСтатуса",
		0,
		ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруВПроцессеНаСервере()

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СтатусыПубликацииТоваровЯндексМаркет,
		"МаркерСтатуса",
		1,
		ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруНовыеНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СтатусыПубликацииТоваровЯндексМаркет,
		"МаркерСтатуса",
		2,
		ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьВсеНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(
		СтатусыПубликацииТоваровЯндексМаркет,
		"МаркерСтатуса");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьДлительнуюОперациюНаКлиенте(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Статус = "Ошибка" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		
		ИначеЕсли Результат.Статус = "Выполнено" 
		 		  И Результат.Свойство("АдресРезультата") Тогда
			Ошибка = ИнтеграцияСЯндексМаркетВызовСервера.ПолучитьРезультатВыполненияФоновогоЗадания(Результат.АдресРезультата);
			
			Если Не ПустаяСтрока(Ошибка.КодОшибки) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка.ОписаниеОшибки);
			Иначе
				ОбновитьТаблицуЦенНаКлиенте();
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Операция успешно завершена';
																|en = 'Операция успешно завершена'"));
				Оповестить("ИнтеграцияСЯндексМаркетСервер.ОбновитьДанные", 
					УчетнаяЗапись, 
					"Обработка.УправлениеПродажамиНаЯндексМаркет.ВыгрузкаТоварногоКаталога.ЗавершитьДлительнуюОперациюНаКлиенте");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры    

&НаСервере
Функция ВыгрузитьОстаткиНаСервере()
	
	ПараметрыВыполнения 							 = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение            = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания  = НСтр("ru = 'Яндекс Маркет. Выгрузка остатков товаров на торговую площадку.';
															|en = 'Yandex.Market. Export the stock balance to the trading platform.'");
	ПараметрыВыполнения.ЗапуститьВФоне               = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;

	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ВыгрузитьОстаткиТоваровЯндексМаркет";

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПоРасписанию", Ложь);
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
		ИмяМетода, 
		УчетнаяЗапись,
		ДополнительныеПараметры);
	
КонецФункции   

&НаСервере
Процедура ЗаписатьИзменениеФлагаВыбран(ВыбраннаяСтрока)
	
	НачатьТранзакцию();
	
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет");
		ЭлементБлокировкиДанных.УстановитьЗначение("УчетнаяЗапись",  УчетнаяЗапись);
		ЭлементБлокировкиДанных.УстановитьЗначение("Номенклатура",   ВыбраннаяСтрока.Номенклатура);
		ЭлементБлокировкиДанных.УстановитьЗначение("Характеристика", ВыбраннаяСтрока.Характеристика);
		ЭлементБлокировкиДанных.УстановитьЗначение("Упаковка",       ВыбраннаяСтрока.Упаковка);
		БлокировкаДанных.Заблокировать();
		
		НаборЗаписей = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.УчетнаяЗапись.Установить(УчетнаяЗапись);
		НаборЗаписей.Отбор.Номенклатура.Установить(ВыбраннаяСтрока.Номенклатура);
		НаборЗаписей.Отбор.Характеристика.Установить(ВыбраннаяСтрока.Характеристика);
		НаборЗаписей.Отбор.Упаковка.Установить(ВыбраннаяСтрока.Упаковка);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() > 0 Тогда
			Запись        = НаборЗаписей[0];
			Запись.Выбран = Не Запись.Выбран;
			
			НаборЗаписей.Записать();
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ОбщегоНазначения.СообщитьПользователю(
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьФлагиНаСервере(МассивСтрок, ЗначениеФлага)
	
	Для Каждого ВыбраннаяСтрока Из МассивСтрок Цикл
		НачатьТранзакцию();
		
		Попытка
			БлокировкаДанных = Новый БлокировкаДанных;
			ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет");
			ЭлементБлокировкиДанных.УстановитьЗначение("УчетнаяЗапись",  УчетнаяЗапись);
			ЭлементБлокировкиДанных.УстановитьЗначение("Номенклатура",   ВыбраннаяСтрока.Номенклатура);
			ЭлементБлокировкиДанных.УстановитьЗначение("Характеристика", ВыбраннаяСтрока.Характеристика);
			ЭлементБлокировкиДанных.УстановитьЗначение("Упаковка",       ВыбраннаяСтрока.Упаковка);
			БлокировкаДанных.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.УчетнаяЗапись.Установить(УчетнаяЗапись);
			НаборЗаписей.Отбор.Номенклатура.Установить(ВыбраннаяСтрока.Номенклатура);
			НаборЗаписей.Отбор.Характеристика.Установить(ВыбраннаяСтрока.Характеристика);
			НаборЗаписей.Отбор.Упаковка.Установить(ВыбраннаяСтрока.Упаковка);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() > 0 Тогда
				Запись        = НаборЗаписей[0];
				Запись.Выбран = ЗначениеФлага; 
				
				НаборЗаписей.Записать();
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ОбщегоНазначения.СообщитьПользователю(
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УтвердитьОтклонитьВыбранныеНаСервере(ПоложительноеРешение)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатусыПубликацииТоваровЯндексМаркет.Номенклатура КАК Номенклатура,
		|	СтатусыПубликацииТоваровЯндексМаркет.Характеристика КАК Характеристика,
		|	СтатусыПубликацииТоваровЯндексМаркет.Упаковка КАК Упаковка
		|ИЗ
		|	РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет КАК СтатусыПубликацииТоваровЯндексМаркет
		|ГДЕ
		|	СтатусыПубликацииТоваровЯндексМаркет.УчетнаяЗапись = &УчетнаяЗапись
		|	И СтатусыПубликацииТоваровЯндексМаркет.Выбран
		|	И СтатусыПубликацииТоваровЯндексМаркет.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВыгрузкиТоваровЯндексМаркет.ПолученаРекомендация)";
	
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ВыборкаДанных = Результат.Выбрать();
		Пока ВыборкаДанных.Следующий() Цикл 
			НачатьТранзакцию();
			
			Попытка
				БлокировкаДанных = Новый БлокировкаДанных;
				ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет");
				ЭлементБлокировкиДанных.УстановитьЗначение("УчетнаяЗапись",  УчетнаяЗапись);
				ЭлементБлокировкиДанных.УстановитьЗначение("Номенклатура",   ВыборкаДанных.Номенклатура);
				ЭлементБлокировкиДанных.УстановитьЗначение("Характеристика", ВыборкаДанных.Характеристика);
				ЭлементБлокировкиДанных.УстановитьЗначение("Упаковка",       ВыборкаДанных.Упаковка);
				БлокировкаДанных.Заблокировать();
				
				НаборЗаписей = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.УчетнаяЗапись.Установить(УчетнаяЗапись);
				НаборЗаписей.Отбор.Номенклатура.Установить(ВыборкаДанных.Номенклатура);
				НаборЗаписей.Отбор.Характеристика.Установить(ВыборкаДанных.Характеристика);
				НаборЗаписей.Отбор.Упаковка.Установить(ВыборкаДанных.Упаковка);
				НаборЗаписей.Прочитать();
				
				Если НаборЗаписей.Количество() > 0 Тогда
					Запись = НаборЗаписей[0];
					Если ПоложительноеРешение Тогда
						Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация;
					Иначе
						Запись.Статус         = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.НевернаяРекомендация;
						Запись.ОписаниеОшибки = НСтр("ru = 'Если товар определен неправильно: 
														   |Проверьте, что товар относится к одной из категорий, представленных на Маркете.
														   |Убедитесь, что вы предоставили наиболее полные и точные данные о товаре. 
														   |Если вы не указали какую-либо информацию, уточните входные данные запроса (например, добавьте цвет или размер в характеристики товара или добавьте описание модели, скорректировав данные в поле ""Представление"" на закладке ""Данные о товаре"", укажите базовую цену товара, если она не заполнена).
														   |После заполненения данных отправьте повторно публикацию на получение рекомендации (кнопка ""Получить рекомендацию""). 
														   |Попробуйте найти товар в поиске по разделу «Покупки» на Маркете. Если товар найдется, SKU на Яндексе можно взять из URL его страницы. Например, если URL страницы товара — https://pokupki.market.yandex.ru/product/7715752, то его SKU на Яндексе — 7715752.Если советы не помогли - отправьте информацию о товаре без SKU на Яндексе (кнопка ""Отправить на модерацию"") - сотрудники Маркета могут подобрать или создать карточки для ваших товаров в личном кабинете, если товар еще не продается на Маркете.';
														   |en = 'If the item is identified incorrectly: 
														   |Make sure the item belongs to one of the categories presented on Yandex.Market.
														   |Make sure you provided full and accurate information about the item. 
														   |If you have not provided any information, specify additional input request data. For example, add a color or size to item variants, add a model description by modifying the data in the ""Presentation"" field on the ""Item information"" tab, and specify the base item price if it is not filled.
														   |Once the data is filled, send the publication for recommendation receipt again (click ""Receive recommendation""). 
														   |Try to find the item by the search in the ""Purchases"" section on Yandex.Market. If the item is found, you can get its SKU on Yandex from its page URL. For example, if the item page URL is https://pokupki.market.yandex.ru/product/7715752, the item SKU on Yandex is 7715752. If the previous steps did not help, send the item information without an SKU on Yandex (click ""Send to moderation""). Yandex.Market employees can pick up or create cards for your items in the personal account if the item is not published for sale on Yandex.Market yet.'");
					КонецЕсли;
					Запись.Выбран = Ложь;
					
					НаборЗаписей.Записать();
				КонецЕсли;
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				ОтменитьТранзакцию();
				ОбщегоНазначения.СообщитьПользователю(
					ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
		КонецЦикла;
	Иначе
		Если ПоложительноеРешение Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Не обнаружено отмеченных позиций для утверждения рекомендаций';
					|en = 'Items selected for approving recommendations are not found'"));
		Иначе
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Не обнаружено отмеченных позиций для отклонения рекомендаций';
					|en = 'Items selected for cancelling recommendations are not found'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПовторноОтправитьЗапросВыбранныеНаСервере(Действие)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатусыПубликацииТоваровЯндексМаркет.ИдентификаторПубликации КАК ИдентификаторПубликации,
		|	СтатусыПубликацииТоваровЯндексМаркет.Номенклатура КАК Номенклатура,
		|	СтатусыПубликацииТоваровЯндексМаркет.Характеристика КАК Характеристика,
		|	СтатусыПубликацииТоваровЯндексМаркет.Упаковка КАК Упаковка
		|ИЗ
		|	РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет КАК СтатусыПубликацииТоваровЯндексМаркет
		|ГДЕ
		|	СтатусыПубликацииТоваровЯндексМаркет.УчетнаяЗапись = &УчетнаяЗапись
		|	И СтатусыПубликацииТоваровЯндексМаркет.Выбран
		|	И СтатусыПубликацииТоваровЯндексМаркет.Статус В(&МассивОшибочныхСтатусов)";
	
	МассивОшибочныхСтатусов = Новый Массив;
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ОшибкаПриОтправкеНаМодерацию);
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ОшибкаПриПолученииРекомендации);
	// Модерация не пройдена - обработать отдельно
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.МодерацияНеПройдена);
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.НевернаяРекомендация);
	МассивОшибочныхСтатусов.Добавить(Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.РекомендацияНеНайдена);
	
	Запрос.Параметры.Вставить("УчетнаяЗапись",           УчетнаяЗапись);
	Запрос.Параметры.Вставить("МассивОшибочныхСтатусов", МассивОшибочныхСтатусов);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ВыборкаДанных = Результат.Выбрать();
		Пока ВыборкаДанных.Следующий() Цикл 
			НачатьТранзакцию();
			
			Попытка
				БлокировкаДанных = Новый БлокировкаДанных;
				ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет");
				ЭлементБлокировкиДанных.УстановитьЗначение("УчетнаяЗапись",  УчетнаяЗапись);
				ЭлементБлокировкиДанных.УстановитьЗначение("Номенклатура",   ВыборкаДанных.Номенклатура);
				ЭлементБлокировкиДанных.УстановитьЗначение("Характеристика", ВыборкаДанных.Характеристика);
				ЭлементБлокировкиДанных.УстановитьЗначение("Упаковка",       ВыборкаДанных.Упаковка);
				БлокировкаДанных.Заблокировать();
				
				НаборЗаписей = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.УчетнаяЗапись.Установить(УчетнаяЗапись);
				НаборЗаписей.Отбор.Номенклатура.Установить(ВыборкаДанных.Номенклатура);
				НаборЗаписей.Отбор.Характеристика.Установить(ВыборкаДанных.Характеристика);
				НаборЗаписей.Отбор.Упаковка.Установить(ВыборкаДанных.Упаковка);
				НаборЗаписей.Прочитать();
				
				Если НаборЗаписей.Количество() > 0 Тогда
					Запись = НаборЗаписей[0];
					Если Действие = "НаПолучениеРекомендации" Тогда
						Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.Новый;
					ИначеЕсли Действие = "НаМодерацию" Тогда
						Если ЗначениеЗаполнено(Запись.ИдентификаторТовараПлощадки) Тогда
							Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация;
						Иначе
							Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.СозданиеНового;
						КонецЕсли;
					КонецЕсли;
					Запись.Выбран = Ложь;
					
					НаборЗаписей.Записать();
				КонецЕсли;
			
				ЗафиксироватьТранзакцию();
				
			Исключение
				ОтменитьТранзакцию();
				ОбщегоНазначения.СообщитьПользователю(
					ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
		КонецЦикла;
	Иначе
		Если Действие = "НаПолучениеРекомендации" Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Не обнаружено отмеченных позиций для запроса рекомендаций';
					|en = 'Items selected for requesting recommendations are not found'"));
		ИначеЕсли Действие = "НаМодерацию" Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Не обнаружено отмеченных позиций для отправки на модерацию';
					|en = 'Items selected for sending to moderation are not found'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицуЦенНаКлиентеПодключаемый()
	
	ОбновитьТаблицуЦенНаКлиенте(Ложь);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОбновитьТаблицуЦенНаКлиенте(ВыводитьОкноОжидания = Ложь)
	
	ОчиститьСообщения();
	
	ДлительнаяОперация    = ОбновитьТаблицуЦенНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьТаблицуЦенЗавершениеФоновогоЗадания", ЭтотОбъект);
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, ДлительнаяОперация);
		
	Иначе
		ПараметрыОжидания 					   = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = ВыводитьОкноОжидания;
		
		Если ВыводитьОкноОжидания Тогда
			ПараметрыОжидания.ТекстСообщения                   = НСтр("ru = 'Обновление актуальных цен торговой площадки.';
																		|en = 'Update the trading platform prices.'");
			ПараметрыОжидания.ОповещениеПользователя.Показать  = Истина;
			ПараметрыОжидания.ОповещениеПользователя.Текст 	   = НСтр("ru = 'Яндекс Маркет';
																		|en = 'Yandex.Market'");
			ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Обновление актуальных цен торговой площадки завершено.';
																		|en = 'The trading platform prices are updated.'");
			ПараметрыОжидания.ОповещениеПользователя.Картинка  = БиблиотекаКартинок.ЛоготипЯндексМаркет;

			Элементы.ГруппаДлительноеОжидание.ТолькоПросмотр = Ложь;
			Элементы.ГруппаДлительноеОжидание.Видимость      = Ложь;
			
		Иначе
			Элементы.ГруппаДлительноеОжидание.ТолькоПросмотр = Истина;
			Элементы.ГруппаДлительноеОжидание.Видимость      = (Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПросмотрАктуальныхЦен);
		КонецЕсли;
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьТаблицуЦенНаСервере()
	
	ПараметрыВыполнения 							 = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение            = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания  = НСтр("ru = 'Яндекс Маркет. Обновление актуальных цен торговой площадки.';
															|en = 'Yandex.Market. Update the trading platform prices.'");
	ПараметрыВыполнения.ЗапуститьВФоне               = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;

	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ОбновитьАктуальныеЦеныТорговойПлощадки";

	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
		ИмяМетода, 
		УчетнаяЗапись,
		ДанныеУчетнойЗаписи.ЦенаПродажи,
		ТаблицаЦен());
	
КонецФункции

&НаКлиенте
Процедура ОбновитьТаблицуЦенЗавершениеФоновогоЗадания(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Статус = "Ошибка" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		
		ИначеЕсли Результат.Статус = "Выполнено" 
		 		  И Результат.Свойство("АдресРезультата") Тогда
			Ошибка = ИнтеграцияСЯндексМаркетВызовСервера.ПолучитьРезультатВыполненияФоновогоЗадания(Результат.АдресРезультата);
			
			Если Не ПустаяСтрока(Ошибка.КодОшибки) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка.ОписаниеОшибки);
			Иначе
				АктуальныеЦены.Очистить();
				
				Для Каждого ЭлементКоллекции Из Ошибка.АктуальныеЦены Цикл
					СтрокаТаблицыЗначений = АктуальныеЦены.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗначений, ЭлементКоллекции);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ГруппаДлительноеОжидание.ТолькоПросмотр = Ложь;
	Элементы.ГруппаДлительноеОжидание.Видимость      = Ложь;

КонецПроцедуры

&НаСервере
Функция ТаблицаЦен()
	
	ТаблицаЦен = Новый ТаблицаЗначений;
	ТаблицаЦен.Колонки.Добавить("ВидЦены",     Новый ОписаниеТипов("СправочникСсылка.ВидыЦен")); 
	ТаблицаЦен.Колонки.Добавить("ПолеТаблицы", Новый ОписаниеТипов("Строка",,, Новый КвалификаторыСтроки(250, ДопустимаяДлина.Переменная)));
	
	МассивРекомендованныхЦен = ИнтеграцияСЯндексМаркетСервер.ПолучитьМассивРекомендованныхЦен(); 
	СоответствиеИменКолонок  = СоответствиеИменКолонок();
	
	Для Каждого ЭлементКоллекции Из МассивРекомендованныхЦен Цикл 
		ЗначениеИзХранилища = ЭлементКоллекции.ХранилищеНастроекПараметровСпособаЗаданияЦены.Получить();
		
		ИмяКолонки = СоответствиеИменКолонок.Получить(ЗначениеИзХранилища.ЗначениеПараметра); 
		Если ИмяКолонки <> Неопределено Тогда
			Элементы.АктуальныеЦены.ПодчиненныеЭлементы[ИмяКолонки].Видимость = Истина; 
			
			СтрокаТаблицыЗначений             = ТаблицаЦен.Добавить();
			СтрокаТаблицыЗначений.ВидЦены     = ЭлементКоллекции;
			СтрокаТаблицыЗначений.ПолеТаблицы = СтрЗаменить(ИмяКолонки, "АктуальныеЦены", "");
		КонецЕсли;
	КонецЦикла; 
	
	Возврат ТаблицаЦен; 
	
КонецФункции

&НаСервереБезКонтекста
Функция СоответствиеИменКолонок()
	
	СоответствиеИменКолонок = Новый Соответствие;
	СоответствиеИменКолонок.Вставить("Минимальная цена продажи на Маркете",                  "АктуальныеЦеныМинимальнаяЦенаПродажи");
	СоответствиеИменКолонок.Вставить("Рекомендованная Маркетом",                             "АктуальныеЦеныРекомендованнаяЦена");
	СоответствиеИменКолонок.Вставить("Минимальная среди всех предложений товара на Маркете", "АктуальныеЦеныМинимальнаяСредиВсехПредложений");
	СоответствиеИменКолонок.Вставить("Максимальная без скидки",                              "АктуальныеЦеныМаксимальнаяБезСкидки");
	СоответствиеИменКолонок.Вставить("Максимальная для показов на Маркете",                  "АктуальныеЦеныМаксимальнаяДляПоказов");
	
	Возврат СоответствиеИменКолонок; 

КонецФункции  

&НаСервере
Функция ЗагрузитьРекомендованныеЦеныНаСервере()
	  	
	ПараметрыВыполнения 							 = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение            = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания  = НСтр("ru = 'Яндекс Маркет. Загрузка рекомендованных цен товаров с торговой площадки.';
															|en = 'Yandex.Market. Import recommended item prices from the trading platform.'");
	ПараметрыВыполнения.ЗапуститьВФоне               = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;
	
	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ЗагрузитьРекомендованныеЦеныЯндексМаркет";

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПоРасписанию",   Ложь);
	ДополнительныеПараметры.Вставить("ТаблицаТоваров", ТаблицаТоваровИзВыделенныхСтрокАктуальныхЦен());

	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
		ИмяМетода, 
		УчетнаяЗапись,
		ДополнительныеПараметры);

КонецФункции 

&НаСервере
Функция ВыгрузитьУстановленныеЦеныНаСервере()
	  	
	ПараметрыВыполнения 							 = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение            = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания  = НСтр("ru = 'Яндекс Маркет. Выгрузка текущих цен товаров на торговую площадку.';
															|en = 'Yandex.Market. Export the current item prices to the trading platform.'");
	ПараметрыВыполнения.ЗапуститьВФоне               = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;
	
	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ВыгрузитьУстановленныеЦеныЯндексМаркет";

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПоРасписанию",   Ложь);
	ДополнительныеПараметры.Вставить("ТаблицаТоваров", ТаблицаТоваровИзВыделенныхСтрокАктуальныхЦен());
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
		ИмяМетода, 
		УчетнаяЗапись,
		ДополнительныеПараметры);

КонецФункции   

&НаСервере
Функция ТаблицаТоваровИзВыделенныхСтрокАктуальныхЦен()

	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("УчетнаяЗапись",  Новый ОписаниеТипов("СправочникСсылка.УчетныеЗаписиМаркетплейсов"));
	Результат.Колонки.Добавить("Номенклатура",   Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Результат.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Результат.Колонки.Добавить("Упаковка",       Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	
	Для Каждого Идентификатор Из Элементы.АктуальныеЦены.ВыделенныеСтроки Цикл
		СтрокаТаблицыЗначений = Результат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗначений, АктуальныеЦены.НайтиПоИдентификатору(Идентификатор), "Номенклатура, Характеристика, Упаковка");
	КонецЦикла;
	
	Результат.ЗаполнитьЗначения(УчетнаяЗапись, "УчетнаяЗапись");

	Возврат Результат;

КонецФункции

#КонецОбласти
