
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выполняет заданное действие с партией производства (деление, сокращение, увеличение, отмена).
// 
// Параметры:
// 	Параметры - Структура - состав полей аналогичен реквизитам и табличным частям обработки ДелениеПартийПроизводства.
// 	АдресХранилища - Строка - адрес хранилища, в которое будет помещен результат.
//
Процедура ВыполнитьДействиеВФоне(Параметры, АдресХранилища) Экспорт
	
	Результат = Неопределено;
	Действия = Действия();
	
	Попытка
		
		Если Параметры.Действие = Действия.Сократить Тогда
			
			ПараметрыСокращения = Новый Структура;
			ПараметрыСокращения.Вставить("Этап");
			ПараметрыСокращения.Вставить("РезервироватьМатериалы");
			ПараметрыСокращения.Вставить("ЗаменятьМатериалыНаАналоги");
			ЗаполнитьЗначенияСвойств(ПараметрыСокращения, Параметры);
			
			ПараметрыСокращения.Вставить("ПересчитатьПоКоэффициенту",
				Не Параметры.ЗаполнитьПоСпецификации Или Параметры.Спецификация.Пустая());
			
			ПараметрыСокращения.Вставить("ОтменитьИзделиеВЗаказе", Параметры.Партии[0].ОтменитьИзделиеВЗаказе);
			ПараметрыСокращения.Вставить("ПричинаОтменыИзделия", Параметры.Партии[0].ПричинаОтменыИзделия);
			
			РазмерПартии = Документы.ЭтапПроизводства2_2.НовыйРазмерПартии(
				Параметры.Партии[0].КоличествоПартии,
				Параметры.Партии[0].КоличествоУпаковокПартии,
				Параметры.Партии[0].УпаковкаПартии);
			
			Назначения = Новый Структура;
			Назначения.Вставить("НазначенияИзделий", Параметры.Партии[0].НазначенияИзделий);
			Назначения.Вставить("НазначенияМатериалов", Параметры.Партии[0].НазначенияМатериалов);
			
			Результат = Документы.ЭтапПроизводства2_2.ИзменитьРазмерПартии(
				Параметры,
				ПараметрыСокращения,
				РазмерПартии,
				Назначения,
				Параметры.ИдентификаторФормы);
			
		ИначеЕсли Параметры.Действие = Действия.Брак И Параметры.ЭтоПоследнийЭтапИОперация Тогда
			
			ПараметрыИзменения = Новый Структура;
			ПараметрыИзменения.Вставить("Этап", Параметры.Этап);
			ПараметрыИзменения.Вставить("КоличествоУпаковокБрак", Параметры.КоличествоУпаковокБрак);
			ПараметрыИзменения.Вставить("УпаковкаБрак", Параметры.Упаковка);
			ПараметрыИзменения.Вставить("ЗаполнитьДолиСтоимости", НЕ Параметры.ВЭтапеЗаполненыДолиСтоимости);
			ПараметрыИзменения.Вставить("Серии", Параметры.Серии);
			
			Результат = Документы.ЭтапПроизводства2_2.ДобавитьБрак(
				Параметры,
				ПараметрыИзменения,
				Параметры.Партии[0],
				Параметры.ИдентификаторФормы);
			
		ИначеЕсли Параметры.Действие = Действия.Отменить
			Или (Параметры.Действие = Действия.Брак И Параметры.Партии.Количество() = 1) Тогда
			
			ПараметрыОтмены = Новый Структура;
			ПараметрыОтмены.Вставить("СНачалаПартии");
			ПараметрыОтмены.Вставить("Этап");
			ПараметрыОтмены.Вставить("Операция");
			ПараметрыОтмены.Вставить("ИдентификаторОперации");
			ПараметрыОтмены.Вставить("СпособРаспределенияЗатратНаВыходныеИзделия");
			ЗаполнитьЗначенияСвойств(ПараметрыОтмены, Параметры);
			
			Если Параметры.Действие = Действия.Брак Тогда
				ПараметрыОтмены.Вставить("ЭтоБрак", Истина);
				ПараметрыОтмены.Вставить("КоличествоУпаковокБрак", Параметры.КоличествоУпаковокБрак);
				ПараметрыОтмены.Вставить("УпаковкаБрак", Параметры.Упаковка);
			Иначе
				ПараметрыОтмены.Вставить("ЭтоБрак", Ложь);
				ПараметрыОтмены.Вставить("КоличествоУпаковокБрак", 0);
				ПараметрыОтмены.Вставить("УпаковкаБрак", Неопределено);
			КонецЕсли;
			
			ПараметрыОтмены.Вставить("ОтменитьИзделиеВЗаказе", Параметры.Партии[0].ОтменитьИзделиеВЗаказе);
			ПараметрыОтмены.Вставить("ПричинаОтменыИзделия", Параметры.Партии[0].ПричинаОтменыИзделия);
			
			Результат = Документы.ЭтапПроизводства2_2.ОтменитьПартию(
				Параметры,
				ПараметрыОтмены,
				Параметры.Партии,
				Параметры.Серии,
				Параметры.ИдентификаторФормы);
			
		ИначеЕсли Параметры.Действие = Действия.Разделить
			И Параметры.СНачалаПартии Тогда // Разделить (с начала цепочки)
			
			Партии = Новый Массив;
			Назначения = Новый Массив;
			Для каждого Строка Из Параметры.Партии Цикл
				Партии.Добавить(
					Документы.ЭтапПроизводства2_2.НовыйРазмерПартии(
						Строка.КоличествоПартии,
						Строка.КоличествоУпаковокПартии,
						Строка.УпаковкаПартии));
				Назначения.Добавить(
					Новый Структура("НазначенияИзделий, НазначенияМатериалов",
						Строка.НазначенияИзделий, Строка.НазначенияМатериалов));
			КонецЦикла;
			
			ПараметрыДеления = Новый Структура;
			ПараметрыДеления.Вставить("РезервироватьМатериалы");
			ПараметрыДеления.Вставить("ЗаменятьМатериалыНаАналоги");
			ЗаполнитьЗначенияСвойств(ПараметрыДеления, Параметры);
			
			ПараметрыДеления.Вставить("ЗаполнитьПоСпецификации",
				Параметры.ЗаполнитьПоСпецификации И Не Параметры.Спецификация.Пустая());
			
			Результат = Документы.ЭтапПроизводства2_2.РазделитьПартию(
				Параметры,
				Партии,
				Назначения,
				ПараметрыДеления,
				Параметры.ИдентификаторФормы);
			
		ИначеЕсли Параметры.Действие = Действия.Заполнить Тогда
			
			ПараметрыЗаполнения = Новый Структура;
			ПараметрыЗаполнения.Вставить("Этап");
			ПараметрыЗаполнения.Вставить("ЭтапСпецификации");
			ПараметрыЗаполнения.Вставить("РезервироватьМатериалы");
			ПараметрыЗаполнения.Вставить("ЗаменятьМатериалыНаАналоги");
			ЗаполнитьЗначенияСвойств(ПараметрыЗаполнения, Параметры);
			
			Результат = Документы.ЭтапПроизводства2_2.ПерезаполнитьПартию(
				Параметры.ПартияПроизводства,
				ПараметрыЗаполнения,
				Параметры.ИдентификаторФормы);
			
		Иначе // Разделить (после этапа) / Продолжить / Брак (частичный)
			
			ПараметрыДеления = Новый Структура;
			ПараметрыДеления.Вставить("Этап");
			ПараметрыДеления.Вставить("Операция");
			ПараметрыДеления.Вставить("ИдентификаторОперации");
			ПараметрыДеления.Вставить("СпособРаспределенияЗатратНаВыходныеИзделия");
			ПараметрыДеления.Вставить("РезервироватьМатериалы");
			ПараметрыДеления.Вставить("ЗаменятьМатериалыНаАналоги");
			ЗаполнитьЗначенияСвойств(ПараметрыДеления, Параметры);
			
			ПараметрыДеления.Вставить("ЗаполнитьПоСпецификации",
				Параметры.ЗаполнитьПоСпецификации И Не Параметры.Спецификация.Пустая());
			
			Если Параметры.Действие = Действия.Брак Тогда
				ПараметрыДеления.Вставить("ЭтоБрак", Истина);
				ПараметрыДеления.Вставить("КоличествоУпаковокБрак", Параметры.КоличествоУпаковокБрак);
				ПараметрыДеления.Вставить("УпаковкаБрак", Параметры.Упаковка);
			Иначе
				ПараметрыДеления.Вставить("ЭтоБрак", Ложь);
				ПараметрыДеления.Вставить("КоличествоУпаковокБрак", 0);
				ПараметрыДеления.Вставить("УпаковкаБрак", Неопределено);
			КонецЕсли;
			
			Результат = Документы.ЭтапПроизводства2_2.РазделитьПартиюСЭтапа(
				Параметры,
				ПараметрыДеления,
				Параметры.Партии,
				Параметры.Серии,
				Параметры.ИдентификаторФормы);
			
		КонецЕсли;
		
	Исключение
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Деление партии производства';
				|en = 'Production lot division'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		Сообщения = Новый Массив;
		Сообщения.Добавить(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		Результат = Новый Структура("Отказ, Сообщения", Истина, Сообщения);
		
	КонецПопытки;
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

// Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	Возврат "";
	
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры:
//  Объект	 - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
// 
// Возвращаемое значение:
//  Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	НастройкиПроизводства = ПроизводствоСервер.ИспользованиеСерийВПроизводстве22();
		
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Обработка.ДелениеПартииПроизводства";
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Получатель");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Произведено");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("ДатаПроизводства");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("ИндексПартии");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Подразделение");
	
	ПараметрыУказанияСерий.ИмяПоляСклад = "Получатель";
	ПараметрыУказанияСерий.ИмяТЧТовары = "Партии";
	ПараметрыУказанияСерий.ИмяТЧСерии = "Серии";
	
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям =
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура())
		ИЛИ НастройкиПроизводства.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  =
		ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура())
		ИЛИ НастройкиПроизводства.ИспользоватьСерииНоменклатуры;
	
	ПараметрыУказанияСерий.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПродукцииИзПроизводства);
	
	ПараметрыУказанияСерий.ИменаПолейДополнительные.Добавить("Произведено");
	ПараметрыУказанияСерий.ИменаПолейДополнительные.Добавить("Отменено");
	
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ТекущиеДанные";
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Возврат
		"ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Назначение КАК Назначение,
		|	Товары.Серия КАК Серия,
		|	Товары.Получатель КАК Получатель,
		|	Товары.Произведено КАК Произведено,
		|	Товары.ДатаПроизводства КАК ДатаПроизводства,
		|	Товары.ИндексПартии КАК ИндексПартии,
		|	Товары.Подразделение КАК Подразделение,
		|	Товары.Количество КАК Количество,
		|	Товары.Отменено КАК Отменено,
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Товары.СтатусУказанияСерийОтправитель КАК СтатусУказанияСерийОтправитель,
		|	Товары.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерийПолучатель,
		|	Товары.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Назначение КАК Назначение,
		|	Товары.Серия КАК Серия,
		|	Товары.Получатель КАК Получатель,
		|	Товары.Произведено КАК Произведено,
		|	Товары.ДатаПроизводства КАК ДатаПроизводства,
		|	Товары.ИндексПартии КАК ИндексПартии,
		|	Товары.Подразделение КАК Подразделение,
		|	СУММА(Товары.Количество) КАК Количество
		|ПОМЕСТИТЬ ТоварыДляЗапроса
		|ИЗ
		|	Товары КАК Товары
		|ГДЕ
		|	НЕ Товары.Отменено
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Назначение,
		|	Товары.Серия,
		|	Товары.Получатель,
		|	Товары.Произведено,
		|	Товары.ДатаПроизводства,
		|	Товары.ИндексПартии,
		|	Товары.Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Серии.Номенклатура КАК Номенклатура,
		|	Серии.Характеристика КАК Характеристика,
		|	Серии.Назначение КАК Назначение,
		|	Серии.Получатель КАК Получатель,
		|	Серии.Произведено КАК Произведено,
		|	Серии.ДатаПроизводства КАК ДатаПроизводства,
		|	Серии.ИндексПартии КАК ИндексПартии,
		|	Серии.Подразделение КАК Подразделение,
		|	Серии.Количество КАК Количество
		|ПОМЕСТИТЬ Серии
		|ИЗ
		|	&Серии КАК Серии
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Серии.Номенклатура КАК Номенклатура,
		|	Серии.Характеристика КАК Характеристика,
		|	Серии.Назначение КАК Назначение,
		|	Серии.Получатель КАК Получатель,
		|	Серии.Произведено КАК Произведено,
		|	Серии.ДатаПроизводства КАК ДатаПроизводства,
		|	Серии.ИндексПартии КАК ИндексПартии,
		|	Серии.Подразделение КАК Подразделение,
		|	СУММА(Серии.Количество) КАК Количество
		|ПОМЕСТИТЬ СерииДляЗапроса
		|ИЗ
		|	Серии КАК Серии
		|
		|СГРУППИРОВАТЬ ПО
		|	Серии.Номенклатура,
		|	Серии.Характеристика,
		|	Серии.Назначение,
		|	Серии.Получатель,
		|	Серии.Произведено,
		|	Серии.ДатаПроизводства,
		|	Серии.ИндексПартии,
		|	Серии.Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА Товары.Отменено
		|				ИЛИ ВидыНоменклатуры.ПолитикаУчетаСерий ЕСТЬ NULL
		|			ТОГДА 0
		|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
		|			ТОГДА ВЫБОР
		|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|						ТОГДА 14
		|					КОГДА НЕ Товары.Произведено
		|						ТОГДА 15
		|					ИНАЧЕ 13
		|				КОНЕЦ
		|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий.УказыватьПриПроизводствеПродукции
		|			ТОГДА ВЫБОР
		|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
		|							И ТоварыДляЗапроса.Количество > 0
		|						ТОГДА 2
		|					КОГДА НЕ ТоварыДляЗапроса.Произведено
		|							И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
		|						ТОГДА 21
		|					ИНАЧЕ 1
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СтатусУказанияСерий
		|ПОМЕСТИТЬ СтатусыОтправитель
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
		|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
		|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
		|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
		|			И Товары.Получатель = ТоварыДляЗапроса.Получатель
		|			И Товары.Произведено = ТоварыДляЗапроса.Произведено
		|			И Товары.ДатаПроизводства = ТоварыДляЗапроса.ДатаПроизводства
		|			И Товары.ИндексПартии = ТоварыДляЗапроса.ИндексПартии
		|			И Товары.Подразделение = ТоварыДляЗапроса.Подразделение
		|		ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
		|		ПО Товары.Номенклатура = СерииДляЗапроса.Номенклатура
		|			И Товары.Характеристика = СерииДляЗапроса.Характеристика
		|			И Товары.Назначение = СерииДляЗапроса.Назначение
		|			И Товары.Получатель = СерииДляЗапроса.Получатель
		|			И Товары.Произведено = СерииДляЗапроса.Произведено
		|			И Товары.ДатаПроизводства = СерииДляЗапроса.ДатаПроизводства
		|			И Товары.ИндексПартии = СерииДляЗапроса.ИндексПартии
		|			И Товары.Подразделение = СерииДляЗапроса.Подразделение
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО (СправочникНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА Товары.Отменено
		|				ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
		|				ИЛИ НЕ Склады.ЦеховаяКладовая
		|				ИЛИ Склады.Подразделение <> Товары.Подразделение
		|			ТОГДА 0
		|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
		|			ТОГДА ВЫБОР
		|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|						ТОГДА 14
		|					КОГДА НЕ Товары.Произведено
		|						ТОГДА 15
		|					ИНАЧЕ 13
		|				КОНЕЦ
		|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
		|			ТОГДА ВЫБОР
		|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
		|							И ТоварыДляЗапроса.Количество > 0
		|						ТОГДА 10
		|					КОГДА НЕ ТоварыДляЗапроса.Произведено
		|							И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
		|						ТОГДА 11
		|					ИНАЧЕ 9
		|				КОНЕЦ
		|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
		|			ТОГДА ВЫБОР
		|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
		|							И ТоварыДляЗапроса.Количество > 0
		|						ТОГДА 8
		|					КОГДА НЕ ТоварыДляЗапроса.Произведено
		|							И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
		|						ТОГДА 27
		|					ИНАЧЕ 7
		|				КОНЕЦ
		|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
		|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПродукцииИзПроизводства
		|			ТОГДА ВЫБОР
		|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
		|						ТОГДА ВЫБОР
		|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
		|										И ТоварыДляЗапроса.Количество > 0
		|									ТОГДА 4
		|								КОГДА НЕ ТоварыДляЗапроса.Произведено
		|										И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
		|									ТОГДА 23
		|								ИНАЧЕ 3
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
		|									И ТоварыДляЗапроса.Количество > 0
		|								ТОГДА 2
		|							КОГДА НЕ ТоварыДляЗапроса.Произведено
		|									И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
		|								ТОГДА 21
		|							ИНАЧЕ 1
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СтатусУказанияСерий
		|ПОМЕСТИТЬ СтатусыПолучатель
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
		|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
		|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
		|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
		|			И Товары.Получатель = ТоварыДляЗапроса.Получатель
		|			И Товары.Произведено = ТоварыДляЗапроса.Произведено
		|			И Товары.ДатаПроизводства = ТоварыДляЗапроса.ДатаПроизводства
		|			И Товары.ИндексПартии = ТоварыДляЗапроса.ИндексПартии
		|			И Товары.Подразделение = ТоварыДляЗапроса.Подразделение
		|		ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
		|		ПО Товары.Номенклатура = СерииДляЗапроса.Номенклатура
		|			И Товары.Характеристика = СерииДляЗапроса.Характеристика
		|			И Товары.Назначение = СерииДляЗапроса.Назначение
		|			И Товары.Получатель = СерииДляЗапроса.Получатель
		|			И Товары.Произведено = СерииДляЗапроса.Произведено
		|			И Товары.ДатаПроизводства = СерииДляЗапроса.ДатаПроизводства
		|			И Товары.ИндексПартии = СерииДляЗапроса.ИндексПартии
		|			И Товары.Подразделение = СерииДляЗапроса.Подразделение
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО Товары.Получатель = Склады.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
		|		ПО Товары.Получатель = ПолитикиУчетаСерий.Склад
		|			И (СправочникНоменклатура.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	СтатусыОтправитель.СтатусУказанияСерий КАК СтатусУказанияСерийОтправитель,
		|	СтатусыПолучатель.СтатусУказанияСерий КАК СтатусУказанияСерийПолучатель,
		|	ВЫБОР
		|		КОГДА СтатусыОтправитель.СтатусУказанияСерий В (13, 14, 15)
		|			ТОГДА СтатусыОтправитель.СтатусУказанияСерий
		|		КОГДА СтатусыПолучатель.СтатусУказанияСерий <> 0
		|			ТОГДА СтатусыПолучатель.СтатусУказанияСерий
		|		ИНАЧЕ СтатусыОтправитель.СтатусУказанияСерий
		|	КОНЕЦ КАК СтатусУказанияСерий
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыОтправитель КАК СтатусыОтправитель
		|		ПО Товары.НомерСтроки = СтатусыОтправитель.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыПолучатель КАК СтатусыПолучатель
		|		ПО Товары.НомерСтроки = СтатусыПолучатель.НомерСтроки
		|ГДЕ
		|	(СтатусыОтправитель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийОтправитель
		|			ИЛИ СтатусыПолучатель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийПолучатель
		|			ИЛИ ВЫБОР
		|				КОГДА СтатусыОтправитель.СтатусУказанияСерий В (13, 14, 15)
		|					ТОГДА СтатусыОтправитель.СтатусУказанияСерий
		|				КОГДА СтатусыПолучатель.СтатусУказанияСерий <> 0
		|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
		|				ИНАЧЕ СтатусыОтправитель.СтатусУказанияСерий
		|			КОНЕЦ <> Товары.СтатусУказанияСерий)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товары.НомерСтроки";
	
КонецФункции

// Возвращает параметры распределения затрат на выходные изделия.
//
// Параметры:
//  СпособРаспределенияЗатратНаВыходныеИзделия	 - ПеречислениеСсылка.СпособыРаспределенияЗатратНаВыходныеИзделия - способ распределения затрат на выходные изделия.
// 
// Возвращаемое значение:
//  Структура - параметры, уточняющие особенности распределения затрат на выходные изделия.
//
Функция ПараметрыРаспределенияЗатрат(СпособРаспределенияЗатратНаВыходныеИзделия) Экспорт
	
	ПараметрыРаспределенияЗатрат = ПроизводствоКлиентСервер.ПараметрыРаспределенияЗатратНаВыходныеИзделия(
		"Партии",
		СпособРаспределенияЗатратНаВыходныеИзделия);
	
	ПараметрыРаспределенияЗатрат.РассчитыватьПолеДоляСтоимостиПроцент = Истина;
	ПараметрыРаспределенияЗатрат.РассчитыватьПризнакЕстьОшибкиЗаполнения = Истина;
	ПараметрыРаспределенияЗатрат.РассчитыватьПризнакДоляСтоимостиОбязательна = Истина;
	
	ПараметрыРаспределенияЗатрат.ПоляСвязи = "Номенклатура,Характеристика,ИндексПартии";
	
	Возврат ПараметрыРаспределенияЗатрат;
	
КонецФункции

Функция ПараметрыРедактированияЭтапа() Экспорт

	ПараметрыРедактированияЭтапа = УправлениеПроизводством.ПараметрыРедактированияЭтапа("Обработка");
	Возврат ПараметрыРедактированияЭтапа;

КонецФункции

// Возвращает параметры выбора статей в документе.
// 
// Возвращаемое значение:
//  Массив, Структура - См. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики
//
Функция ПараметрыВыбораСтатейИАналитик(Объект) Экспорт
	
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	
	ПараметрыВыбора.ПутьКДанным         = "Объект.Партии";
	ПараметрыВыбора.Статья              = "СтатьяРасходов";
	ПараметрыВыбора.ТипСтатьи           = "ТипСтатьи";
	ПараметрыВыбора.ЗначениеПоУмолчанию = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	
	ПараметрыВыбора.ДоступностьПоОперации =
		Не Объект.ХозяйственнаяОперация = ДавальческаяСхемаКлиентСервер.ХозяйственнаяОперацияДоговора()
		//++ Устарело_Переработка24
		И Не Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья
		//-- Устарело_Переработка24
		И Истина;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов   = "АналитикаРасходов";
	УправлениеПроизводством.ЗаполнитьОтборСтатейРасходов(ПараметрыВыбора.ОтборСтатейРасходов);
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов   = "АналитикаАктивовПассивов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ПартииСтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ПростойРежимБракСтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ПростойРежимОтменитьСтатьяРасходов");
	
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("ПартииАналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("ПростойРежимБракАналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("ПростойРежимОтменитьАналитикаРасходов");
	
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("ПартииАналитикаАктивовПассивов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("АналитикаАктивовПассивов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("ПростойРежимБракАналитикаАктивовПассивов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("ПростойРежимОтменитьАналитикаАктивовПассивов");
	
	ПараметрыВыбора.УсловияДоступностиСтатьиВСтроках.Вставить("СписатьНаРасходы", Истина);
	
	Возврат ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыВыбора);
	
КонецФункции

// Возвращает параметры настройки счетов учета в документе.
//  
// Возвращаемое значение:
//  Массив из см. НастройкаСчетовУчетаСервер.ПараметрыНастройки
//
Функция ПараметрыНастройкиСчетовУчета() Экспорт
	
	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ДоступностьПоОперации	= Истина;
	ПараметрыНастройки.ПутьКДанным				= "Объект.Партии";
	ПараметрыНастройки.ТипСтатьи				= "ТипСтатьи";
	
	ПараметрыНастройки.ЭлементыФормы.Добавить("ПартииПредставлениеОтраженияОперации");
	
	Возврат ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыНастройки);
	
КонецФункции

// Инициализирует параметры, обслуживающие выбор назначений в формах обработки.
// 
//  Возвращаемое значение:
//  См. Справочники.Назначения.МакетФормыВыбораНазначений
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.Партии.Назначение");
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.ТипыНазначений.Очистить();
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.Собственное);
	ШаблонНазначения.ВидимыеОтборыНаФорме.Вставить("НаправлениеДеятельности", НСтр("ru = 'Только назначения направления деятельности ""%1""';
																					|en = 'The ""%1"" line of business assignments only'"));
	
	// Потребности в выпущенной продукции на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.Партии.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.Партии.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.Партии.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.Партии.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.Партии.Получатель";
	ОписаниеКолонок.ПутиКДанным.Регистратор      = "Объект.Этап";
	
	// Потребности в производимых работах в подразделении-получателе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказовРаботами", Истина, "Объект.Партии.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.Партии.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.Партии.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.Партии.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Подразделение    = "Объект.Партии.Получатель";
	ОписаниеКолонок.ПутиКДанным.Регистратор      = "Объект.Этап";
	
	// Потребности в продукции на всех складах.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказовВсеСклады", Истина, "Объект.Партии.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.Партии.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.Партии.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.Партии.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Регистратор      = "Объект.Этап";
	
	Возврат МакетФормы;
	
КонецФункции

// Имена реквизитов, от значений которых зависят параметры выбора спецификаций.
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровВыбораСпецификаций() Экспорт
	
	Возврат "ТипПроизводственногоПроцесса";
	
КонецФункции

// Возвращает параметры выбора спецификаций для формирования партий.
//
// Параметры:
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров выбора спецификаций.
//
// Возвращаемое значение:
//   Структура - Структура, переопределяющая умолчания, заданные в функции УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций().
//
Функция ПараметрыВыбораСпецификаций(Объект) Экспорт
	
	ПараметрыВыбораСпецификаций = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций();
	ПараметрыВыбораСпецификаций.ДоступныеТипы.Добавить(Объект.ТипПроизводственногоПроцесса);
	ПараметрыВыбораСпецификаций.ДоступныеСтатусы.Добавить(Перечисления.СтатусыСпецификаций.Действует);
	
	СвязиПараметровВыбора = Новый Структура(УправлениеДаннымиОбИзделияхКлиентСервер.ПоляСтруктурыДанныхОбИзделииДляВыбораСпецификации());
	СвязиПараметровВыбора.Номенклатура   = "Объект.Партии.ПродолжитьНоменклатура";
	СвязиПараметровВыбора.Характеристика = "Объект.Партии.ПродолжитьХарактеристика";
	СвязиПараметровВыбора.ПодразделениеДиспетчер  = "Объект.ПодразделениеДиспетчер";
	
	ПараметрыВыбораСпецификаций.СвязиПараметровВыбора.Вставить("Элементы.Партии.ТекущиеДанные.ПродолжитьСпецификация", СвязиПараметровВыбора);
	ПараметрыВыбораСпецификаций.СвязиПараметровВыбора.Вставить("Объект.Партии.ПродолжитьСпецификация", СвязиПараметровВыбора);
	
	Возврат ПараметрыВыбораСпецификаций;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Дерево производственного процесса, состоящее из документов этап и их очереди операций (условно).
// 
// Параметры:
//  ПартияПроизводства - СправочникСсылка.ПартииПроизводства - Партия производства
//  ПолучитьОперации - Булево - если Истина, то дерево будет содержать этапы и операции, если Ложь - то только этапы
// 
// Возвращаемое значение:
//  ДеревоЗначений - Дерево производственного процесса:
// * ВидЭлемента - Строка -
// * ИдентификаторОперации - Число -
// * Картинка - Картинка -
// * Наименование - Строка -
// * Номер - Число -
// * НомерСледующего - Число -
// * Подразделение - СправочникСсылка.СтруктураПредприятия -
// * ПроизводствоНаСтороне - Булево -
// * РабочийЦентр - СправочникСсылка.РабочиеЦентры, СправочникСсылка.ВидыРабочихЦентров -
// * Ссылка - ДокументСсылка.ЭтапПроизводства2_2, СправочникСсылка.ТехнологическиеОперации -
// * ТехнологическийПроцесс - СправочникСсылка.ТехнологическиеПроцессы -
// * ТолькоПросмотр - Булево -
// * ЭтоЭтап - Булево -
// * Статус - Строка -
// * НомерДокумента - Строка -
// * ОперацийВсего - Число -
// * ОперацийКНазначению - Число -
// * ОперацийКНазначениюПредставление - Строка -
//
Функция ДеревоПроизводственногоПроцесса(ПартияПроизводства, ПолучитьОперации) Экспорт
	
	Дерево = Новый ДеревоЗначений();
	Дерево.Колонки.Добавить("ВидЭлемента", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки()));
	Дерево.Колонки.Добавить("ИдентификаторОперации", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла()));
	Дерево.Колонки.Добавить("Картинка", Новый ОписаниеТипов("Картинка"));
	Дерево.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки()));
	Дерево.Колонки.Добавить("Номер", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла()));
	Дерево.Колонки.Добавить("НомерСледующего", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла()));
	Дерево.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	Дерево.Колонки.Добавить("ПроизводствоНаСтороне", Новый ОписаниеТипов("Булево"));
	Дерево.Колонки.Добавить("РабочийЦентр", Новый ОписаниеТипов("СправочникСсылка.РабочиеЦентры, СправочникСсылка.ВидыРабочихЦентров"));
	Дерево.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2, СправочникСсылка.ТехнологическиеОперации"));
	Дерево.Колонки.Добавить("ТехнологическийПроцесс", Новый ОписаниеТипов("СправочникСсылка.ТехнологическиеПроцессы"));
	Дерево.Колонки.Добавить("ТолькоПросмотр", Новый ОписаниеТипов("Булево"));
	
	// Специфические колонки рабочего места
	Дерево.Колонки.Добавить("ЭтоЭтап", Новый ОписаниеТипов("Булево"));
	Дерево.Колонки.Добавить("Статус", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки()));
	Дерево.Колонки.Добавить("НомерДокумента", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки()));
	Дерево.Колонки.Добавить("ОперацийВсего", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла()));
	Дерево.Колонки.Добавить("ОперацийКНазначению", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла()));
	Дерево.Колонки.Добавить("ОперацийКНазначениюПредставление", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки()));
	
	ВыборкаЭтапы = Неопределено;
	Операции = Неопределено;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ПартияПроизводства", ПартияПроизводства);
	
	ТекстыЗапроса = Новый Массив;
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	Этапы.Ссылка               КАК Ссылка,
		|	Этапы.НаименованиеЭтапа    КАК Наименование,
		|	Этапы.Номер                КАК НомерДокумента,
		|	Этапы.НомерЭтапа           КАК Номер,
		|	Этапы.НомерСледующегоЭтапа КАК НомерСледующего,
		|	Этапы.Статус               КАК Статус,
		|	Этапы.Подразделение        КАК Подразделение,
		|	Этапы.ПроизводствоНаСтороне ИЛИ Этапы.ПроизводствоНаСтороне2_5 КАК ПроизводствоНаСтороне
		|ПОМЕСТИТЬ ВТЭтапы
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Этапы
		|ГДЕ
		|	Этапы.ПартияПроизводства = &ПартияПроизводства
		|	И Этапы.Проведен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка");
	
	Если ПолучитьОперации Тогда
		ТекстыЗапроса.Добавить(
			ТекстЗапросаВТОчередьОперацийДляДеления(
				"ВЫБРАТЬ
				|	Этапы.Ссылка КАК Этап
				|ИЗ
				|	ВТЭтапы КАК Этапы"));
	
		ТекстыЗапроса.Добавить(
			"ВЫБРАТЬ
			|	Операции.Этап                                КАК Этап,
			|	Операции.ИдентификаторОперации               КАК ИдентификаторОперации,
			|	МАКСИМУМ(Операции.Номер)                     КАК НомерДокумента,
			|	МАКСИМУМ(Операции.Статус)                    КАК Статус,
			|	МАКСИМУМ(Операции.РабочийЦентр)              КАК РабочийЦентр,
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ(Операции.Ссылка))       КАК КоличествоДокументов,
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ(Операции.Статус))       КАК КоличествоСтатусов,
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ(Операции.РабочийЦентр)) КАК КоличествоРабочихЦентров
			|ПОМЕСТИТЬ ВТОперации
			|ИЗ
			|	Документ.ПроизводственнаяОперация2_2 КАК Операции
			|ГДЕ
			|	Операции.Этап В
			|		(ВЫБРАТЬ
			|			Этапы.Ссылка КАК Этап
			|		ИЗ
			|			ВТЭтапы КАК Этапы)
			|	И Операции.Проведен
			|
			|СГРУППИРОВАТЬ ПО
			|	Операции.Этап,
			|	Операции.ИдентификаторОперации
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Этап, ИдентификаторОперации
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	""Этап""                    КАК ВидЭлемента,
			|	Этапы.Ссылка                КАК Этап,
			|	Этапы.Ссылка                КАК Ссылка,
			|	Этапы.Наименование          КАК Наименование,
			|	Этапы.НомерДокумента        КАК НомерДокумента,
			|	Этапы.Номер                 КАК Номер,
			|	Этапы.НомерСледующего       КАК НомерСледующего,
			|	Этапы.Статус                КАК Статус,
			|	Этапы.Подразделение         КАК Подразделение,
			|	НЕОПРЕДЕЛЕНО                КАК РабочийЦентр,
			|	Этапы.ПроизводствоНаСтороне КАК ПроизводствоНаСтороне,
			|	0                           КАК ИдентификаторОперации,
			|	ИСТИНА                      КАК ЭтоЭтап,
			|	1                           КАК КоличествоДокументов,
			|	ЛОЖЬ                        КАК НесколькоСтатусов,
			|	0                           КАК ОперацийВсего,
			|	0                           КАК ОперацийКНазначению
			|ИЗ
			|	ВТЭтапы КАК Этапы
			|
			|УПОРЯДОЧИТЬ ПО
			|	Номер,
			|	НомерСледующего,
			|	Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	""Операция""                                       КАК ВидЭлемента,
			|	Очередь.Этап                                       КАК Этап,
			|	Очередь.Операция                                   КАК Ссылка,
			|	ВЫРАЗИТЬ(Очередь.Операция КАК Справочник.ТехнологическиеОперации).Наименование КАК Наименование,
			|	ЕСТЬNULL(Документы.НомерДокумента, """")           КАК НомерДокумента,
			|	Очередь.НомерОперации                              КАК Номер,
			|	Очередь.НомерСледующейОперации                     КАК НомерСледующего,
			|	ЕСТЬNULL(Документы.Статус, """")                   КАК Статус,
			|	НЕОПРЕДЕЛЕНО                                       КАК Подразделение,
			|	ВЫБОР
			|		КОГДА Документы.РабочийЦентр ЕСТЬ NULL
			|			ТОГДА ВЫРАЗИТЬ(Очередь.Операция КАК Справочник.ТехнологическиеОперации).РабочийЦентр
			|		КОГДА Документы.КоличествоРабочихЦентров > 1
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ Документы.РабочийЦентр
			|	КОНЕЦ                                              КАК РабочийЦентр,
			|	ЛОЖЬ                                               КАК ПроизводствоНаСтороне,
			|	Очередь.ИдентификаторОперации                      КАК ИдентификаторОперации,
			|	ЛОЖЬ                                               КАК ЭтоЭтап,
			|	ЕСТЬNULL(Документы.КоличествоДокументов, 0)        КАК КоличествоДокументов,
			|	ЕСТЬNULL(Документы.КоличествоСтатусов, 0) > 1      КАК НесколькоСтатусов,
			|	Очередь.ОперацийВсего                              КАК ОперацийВсего,
			|	Очередь.ОперацийКНазначению                        КАК ОперацийКНазначению
			|ИЗ
			|	ВТОчередьОпераций КАК Очередь
			|	
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОперации КАК Документы
			|	ПО Очередь.Этап = Документы.Этап
			|		И Очередь.ИдентификаторОперации = Документы.ИдентификаторОперации
			|
			|УПОРЯДОЧИТЬ ПО
			|	Номер,
			|	НомерСледующего,
			|	Ссылка");
		Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
		УстановитьПривилегированныйРежим(Истина);
		МассивРезультатов = Запрос.ВыполнитьПакет();
		УстановитьПривилегированныйРежим(Ложь);
		ВыборкаЭтапы = МассивРезультатов[МассивРезультатов.ВГраница()-1].Выбрать();
		Операции = МассивРезультатов[МассивРезультатов.ВГраница()].Выгрузить();
		Операции.Индексы.Добавить("Этап");
	Иначе
		ТекстыЗапроса.Добавить(
			"ВЫБРАТЬ
			|	""Этап""                    КАК ВидЭлемента,
			|	Этапы.Ссылка                КАК Этап,
			|	Этапы.Ссылка                КАК Ссылка,
			|	Этапы.Наименование          КАК Наименование,
			|	Этапы.НомерДокумента        КАК НомерДокумента,
			|	Этапы.Номер                 КАК Номер,
			|	Этапы.НомерСледующего       КАК НомерСледующего,
			|	Этапы.Статус                КАК Статус,
			|	Этапы.Подразделение         КАК Подразделение,
			|	НЕОПРЕДЕЛЕНО                КАК РабочийЦентр,
			|	Этапы.ПроизводствоНаСтороне КАК ПроизводствоНаСтороне,
			|	0                           КАК ИдентификаторОперации,
			|	ИСТИНА                      КАК ЭтоЭтап,
			|	1                           КАК КоличествоДокументов,
			|	ЛОЖЬ                        КАК НесколькоСтатусов,
			|	0                           КАК ОперацийВсего,
			|	0                           КАК ОперацийКНазначению
			|ИЗ
			|	ВТЭтапы КАК Этапы
			|
			|УПОРЯДОЧИТЬ ПО
			|	Номер,
			|	НомерСледующего,
			|	Ссылка");
		Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
		ВыборкаЭтапы = Запрос.Выполнить().Выбрать();
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура("Этап");
	Пока ВыборкаЭтапы.Следующий() Цикл
		СтрокаЭтап = Дерево.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаЭтап, ВыборкаЭтапы);
		СтрокаЭтап.Картинка = БиблиотекаКартинок.РедакторПроизводственногоПроцессаЭтап;
		СтрокаЭтап.ОперацийКНазначениюПредставление = "-";
		
		Если Операции <> Неопределено Тогда
			СтруктураПоиска.Этап = ВыборкаЭтапы.Этап;
			Для каждого НайденнаяСтрока Из Операции.НайтиСтроки(СтруктураПоиска) Цикл
				СтрокаОперация = СтрокаЭтап.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаОперация, НайденнаяСтрока);
				СтрокаОперация.Картинка = БиблиотекаКартинок.РедакторПроизводственногоПроцессаОперация;
				
				Если НайденнаяСтрока.КоличествоДокументов = 0 Тогда
					СтрокаОперация.НомерДокумента = "-";
					СтрокаОперация.Статус = НСтр("ru = 'Запланирована';
												|en = 'Scheduled'");
				ИначеЕсли НайденнаяСтрока.КоличествоДокументов > 1 Тогда
					СтрокаОперация.НомерДокумента = НСтр("ru = '<несколько документов>';
														|en = '<multiple documents>'");
				КонецЕсли;
				
				Если НайденнаяСтрока.НесколькоСтатусов Тогда
					СтрокаОперация.Статус = НСтр("ru = '<разные статусы>';
												|en = '<different statuses>'");
				КонецЕсли;
				
				СтрокаОперация.ОперацийКНазначениюПредставление = ?(НайденнаяСтрока.ОперацийКНазначению > 0,
					СтрШаблон("%1 из %2", НайденнаяСтрока.ОперацийКНазначению, НайденнаяСтрока.ОперацийВсего),
					"-");
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Дерево;
	
КонецФункции

Процедура СоздатьВТОчередьОперацийДляДеления(МенеджерВременныхТаблиц, Этап) Экспорт
	
	ТекстЗапроса = ТекстЗапросаВТОчередьОперацийДляДеления("&Этап");
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Этап", Этап);
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Функция Действия() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Сократить", 0);
	Результат.Вставить("Отменить", 1);
	Результат.Вставить("Разделить", 2);
	Результат.Вставить("Продолжить", 3);
	Результат.Вставить("Заполнить", 4);
	Результат.Вставить("Брак", 5);
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаВТОчередьОперацийДляДеления(ТекстОтборЭтапы)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Смены.Этап КАК Этап,
		|	Смены.ИдентификаторОперации КАК ИдентификаторОперации,
		|	СУММА(Смены.Количество) КАК Назначено
		|ПОМЕСТИТЬ ВТСмены
		|ИЗ
		|	РегистрСведений.ОперацииКСозданиюСменныхЗаданий КАК Смены
		|ГДЕ
		|	Смены.Этап В (&ТекстОтборЭтапы)
		|	И Смены.СменноеЗадание <> ЗНАЧЕНИЕ(Документ.СменноеЗадание.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	Смены.Этап,
		|	Смены.ИдентификаторОперации
		|
		|ИМЕЮЩИЕ
		|	СУММА(Смены.Количество) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Этап, ИдентификаторОперации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Очередь.Этап                   КАК Этап,
		|	Очередь.Операция               КАК Операция,
		|	Очередь.ИдентификаторОперации  КАК ИдентификаторОперации,
		|	Очередь.ИдентификаторКонтрольнойОперации КАК ИдентификаторКонтрольнойОперации,
		|	Очередь.НомерОперации          КАК НомерОперации,
		|	Очередь.НомерСледующейОперации КАК НомерСледующейОперации,
		|	Очередь.Запланировано          КАК ОперацийВсего,
		|	ВЫБОР
		|		КОГДА (Очередь.Запланировано + Очередь.ТребуетПовторения) > (Очередь.Создано + ЕСТЬNULL(Смены.Назначено, 0))
		|			ТОГДА (Очередь.Запланировано + Очередь.ТребуетПовторения) - (Очередь.Создано + ЕСТЬNULL(Смены.Назначено, 0))
		|		ИНАЧЕ 0
		|	КОНЕЦ                          КАК ОперацийКНазначению,
		|	Смены.Назначено ЕСТЬ НЕ NULL
		|		ИЛИ Очередь.Создано <> 0   КАК Начата,
		|	Очередь.Брак > 0               КАК ЕстьБрак
		|ПОМЕСТИТЬ ВТОчередьОпераций
		|ИЗ
		|	РегистрСведений.ОчередьПроизводственныхОпераций КАК Очередь
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСмены КАК Смены
		|	ПО Очередь.Этап = Смены.Этап
		|		И Очередь.ИдентификаторОперации = Смены.ИдентификаторОперации
		|ГДЕ
		|	Очередь.Этап В (&ТекстОтборЭтапы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Этап, ИдентификаторОперации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСмены";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОтборЭтапы", ТекстОтборЭтапы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли
