
#Область ОписаниеПеременных

&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(Параметры.АдресНормативы)
		И ЭтоАдресВременногоХранилища(Параметры.АдресПодобрано) Тогда
		
		ТаблицаНормативы = ПолучитьИзВременногоХранилища(Параметры.АдресНормативы);
		ТаблицаПодобрано = ПолучитьИзВременногоХранилища(Параметры.АдресПодобрано); //ТаблицаЗначений
		ТаблицаПодобрано.Индексы.Добавить("Назначение");
		НомерСтроки = 1;
		
		Для Индекс = 0 По ТаблицаНормативы.Количество()-1 Цикл
			
			СтрокаНормативы = ТаблицаНормативы[Индекс];
			
			НоваяСтрока = Назначения.Добавить();
			НоваяСтрока.Номенклатура = Параметры.Номенклатура;
			НоваяСтрока.Упаковка = Параметры.Упаковка;
			НоваяСтрока.Назначение = СтрокаНормативы.Назначение;
			НоваяСтрока.КоличествоНорматив = СтрокаНормативы.Количество;
			НоваяСтрока.ПодобратьКартинка = Истина;
			НоваяСтрока.НомерСтроки = НомерСтроки;
			
			НайденнаяСтрока = ТаблицаПодобрано.Найти(СтрокаНормативы.Назначение, "Назначение");
			Если НайденнаяСтрока <> Неопределено Тогда
				НоваяСтрока.Количество = НайденнаяСтрока.Количество;
			КонецЕсли;
			
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
		Если ТаблицаНормативы.Найти(Справочники.Назначения.ПустаяСсылка(), "Назначение") = Неопределено Тогда
			
			НоваяСтрока = Назначения.Добавить();
			НоваяСтрока.Номенклатура = Параметры.Номенклатура;
			НоваяСтрока.Упаковка = Параметры.Упаковка;
			НоваяСтрока.НомерСтроки = НомерСтроки;
			
			НайденнаяСтрока = ТаблицаПодобрано.Найти(Справочники.Назначения.ПустаяСсылка(), "Назначение");
			Если НайденнаяСтрока <> Неопределено Тогда
				НоваяСтрока.Количество = НайденнаяСтрока.Количество;
			КонецЕсли;
			
		КонецЕсли;
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить(
			"ПересчитатьКоличествоУпаковок", 
			ОбработкаТабличнойЧастиКлиентСервер.СтруктураПересчетаКоличестваУпаковок());
		СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковокСуффикс","Норматив");
		
		ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(
			Назначения,
			СтруктураДействий,
			ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения());
		
	КонецЕсли;
	
	ДанныеНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Номенклатура,
		"Представление, ЕдиницаИзмерения.Представление");
	Заголовок = СтрШаблон(НСтр("ru = 'Подбор назначений партии (Изделие: %1)';
								|en = 'Lot assignment picking (Finished product: %1)'"), ДанныеНоменклатуры.Представление);
	
	УпаковкаПредставление = ?(Параметры.Упаковка.Пустая(),
		ДанныеНоменклатуры.ЕдиницаИзмеренияПредставление,
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Упаковка, "Представление"));
	Элементы.Декорация1.Заголовок = СтрШаблон(НСтр("ru = 'Требуется подобрать: %1 %2';
													|en = 'Pick: %1 %2'"), 
		Параметры.КоличествоУпаковок,
		УпаковкаПредставление);
	Элементы.НазначенияКоличествоУпаковокНорматив.Заголовок = СтрШаблон(НСтр("ru = 'Количество, %1';
																			|en = 'Quantity, %1'"),
		УпаковкаПредставление);
	Элементы.НазначенияГруппаПодобрано.Заголовок = СтрШаблон(НСтр("ru = 'Подобрано, %1';
																	|en = 'Pick, %1'"),
		УпаковкаПредставление);
	
	РассчитатьИтог(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура НазначенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "НазначенияПодобратьКартинка" Тогда
		
		СтандартнаяОбработка = Ложь;
		Строка = Элементы.Назначения.ТекущиеДанные;
		Строка.Количество = Строка.КоличествоНорматив;
		Строка.КоличествоУпаковок = Строка.КоличествоУпаковокНорматив;
		
		РассчитатьИтог(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазначенияКоличествоУпаковокПриИзменении(Элемент)
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(
		Элементы.Назначения.ТекущиеДанные,
		СтруктураДействий,
		КэшированныеЗначения);
	
	РассчитатьИтог(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подобрать(Команда)
	
	Закрыть(РезультатПодбора());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НазначенияНазначение.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Назначения.Назначение");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НезаполненноеПолеТаблицы);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<без назначения>';
																|en = '<No assignment>'"));
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НазначенияПодобратьКартинка.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Назначения.КоличествоНорматив");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьИтог(Форма)
	
	Форма.КоличествоУпаковокИтог = 0;
	
	Для каждого Строка Из Форма.Назначения Цикл
		Форма.КоличествоУпаковокИтог = Форма.КоличествоУпаковокИтог + Строка.КоличествоУпаковок;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция РезультатПодбора()
	
	Количество = 0;
	КоличествоУпаковок = 0;
	
	Строки = Новый Массив;
	Для каждого Строка Из Назначения Цикл
		Если Строка.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		Строки.Добавить(Строка);
		Количество = Количество + Строка.Количество;
		КоличествоУпаковок = КоличествоУпаковок + Строка.КоличествоУпаковок;
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("Количество", Количество);
	Результат.Вставить("КоличествоУпаковок", КоличествоУпаковок);
	
	Таблица = Назначения.Выгрузить(Строки, "Назначение, Количество");
	Результат.Вставить("АдресНазначения", ПоместитьВоВременноеХранилище(Таблица));
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
