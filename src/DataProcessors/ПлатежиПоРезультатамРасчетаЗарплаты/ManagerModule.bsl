
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Функция КомандыПечати() Экспорт
	
	КомандыПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
	
	// Список платежей
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Обработка.ПлатежиПоРезультатамРасчетаЗарплаты";
	КомандаПечати.Идентификатор = "ПФ_MXL_СписокПлатежей";
	КомандаПечати.Представление = НСтр("ru = 'Печать';
										|en = 'Print '");
	КомандаПечати.НеВыполнятьЗаписьВФорме = Истина;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплатаРасширенный") Тогда
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
		КомандаПечати.МенеджерПечати = "Обработка.ПлатежиПоРезультатамРасчетаЗарплаты";
		КомандаПечати.Идентификатор = "ПФ_MXL_СписокПлатежей_ПоИсточникам";
		КомандаПечати.Представление = НСтр("ru = 'Печать с детализацией по источникам';
											|en = 'Print with source details'");
		КомандаПечати.НеВыполнятьЗаписьВФорме = Истина;
	КонецЕсли;
	
	Возврат КомандыПечати;
	
КонецФункции

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст
//                           ошибки).
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя
//                           области в которой был выведен объект).
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СписокПлатежей") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"ПФ_MXL_СписокПлатежей",
			НСтр("ru = 'Печать';
				|en = 'Print '"), ПечатьПлатежей(МассивОбъектов, ОбъектыПечати, ПараметрыПечати), ,
			"Обработка.ПлатежиПоРезультатамРасчетаЗарплаты.ПФ_MXL_СписокПлатежей");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СписокПлатежей_ПоИсточникам") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"ПФ_MXL_СписокПлатежей_ПоИсточникам",
			НСтр("ru = 'Печать';
				|en = 'Print '"), ПечатьПлатежей(МассивОбъектов, ОбъектыПечати, ПараметрыПечати), ,
			"Обработка.ПлатежиПоРезультатамРасчетаЗарплаты.ПФ_MXL_СписокПлатежей_ПоИсточникам");
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьПлатежей(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	МесяцНачисления 	= ПараметрыПечати.МесяцНачисления;
	ПоляФинансирования 	= ПараметрыПечати.ПоляФинансирования;
	ДанныеДляПечати 	= ПараметрыПечати.ДанныеДляПечати;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если ПустаяСтрока(ПоляФинансирования) Тогда
		ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПлатежиПоРезультатамРасчетаЗарплаты_СписокПлатежей";
	Иначе
		ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПлатежиПоРезультатамРасчетаЗарплаты_СписокПлатежей_ПоИсточникам";
	КонецЕсли;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПлатежиПоРезультатамРасчетаЗарплаты.ПФ_MXL_СписокПлатежей");
	
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаОтчета");
	НомерОбъектаПечати = 0;
	
	Для каждого ОбъектПечати Из ДанныеДляПечати Цикл
		
		Если НомерОбъектаПечати > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Организация 		= ОбъектПечати.Ключ;
		ДанныеПоОрганизации = ОбъектПечати.Значение;
		
		// Формирование и вывод шапки отчета.
		ОбластьШапка.Параметры.Организация = Организация;
		ОбластьШапка.Параметры.Период = ЗарплатаКадрыКлиентСервер.ПолучитьПредставлениеМесяца(МесяцНачисления);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		// Формирование и вывод таблиц платежей по Организации.
		
		ВывестиТаблицуРаздела(Макет, ТабличныйДокумент, ДанныеПоОрганизации.ВедомостиКасса, "ЗарплатаНаличными", ПоляФинансирования); 
		ВывестиТаблицуРаздела(Макет, ТабличныйДокумент, ДанныеПоОрганизации.ВедомостиБанк, "ЗарплатаЧерезБанк", ПоляФинансирования);
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьВзаиморасчетыПоПрочимДоходам") Тогда
			ВывестиТаблицуРаздела(Макет, ТабличныйДокумент, ДанныеПоОрганизации.ВедомостиПрочиеДоходыКасса, "ПрочиеДоходыНаличными", ПоляФинансирования); 
			ВывестиТаблицуРаздела(Макет, ТабличныйДокумент, ДанныеПоОрганизации.ВедомостиПрочиеДоходыБанк, "ПрочиеДоходыЧерезБанк", ПоляФинансирования);
		КонецЕсли;
		
		ВывестиТаблицуРаздела(Макет, ТабличныйДокумент, ДанныеПоОрганизации.ВыплатыПрочихДоходов, "ПрочиеДоходы", ПоляФинансирования); 
		ВывестиТаблицуРаздела(Макет, ТабличныйДокумент, ДанныеПоОрганизации.СтраховыеВзносы, "СтраховыеВзносы", ПоляФинансирования); 
		ВывестиТаблицуРаздела(Макет, ТабличныйДокумент, ДанныеПоОрганизации.РасходыПоСтрахованию, "РасходыПоСтрахованию", ПоляФинансирования);
		ВывестиТаблицуРаздела(Макет, ТабличныйДокумент, ДанныеПоОрганизации.УдержанияПоИсполнительнымДокументам, "УдержанияПоИсполнительнымДокументам", ПоляФинансирования); 
		ВывестиТаблицуРаздела(Макет, ТабличныйДокумент, ДанныеПоОрганизации.УдержанияВПользуТретьихЛиц, "УдержанияВПользуТретьихЛиц", ПоляФинансирования);
		
		ПечатьТаблицНДФЛ(Макет, ТабличныйДокумент, ДанныеПоОрганизации, ПоляФинансирования, МесяцНачисления);
		
		НомерОбъектаПечати = НомерОбъектаПечати + 1;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ВывестиТаблицуРаздела(Макет, ТабличныйДокумент, КоллекцияПлатежей, НазваниеРаздела, ПоляФинансированияСтрока)
	
	Если КоллекцияПлатежей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(ПоляФинансированияСтрока) Тогда
		ВывестиРаздел(Макет, ТабличныйДокумент, КоллекцияПлатежей, НазваниеРаздела);
	Иначе
		
		ПоляФинансирования = СтрРазделить(ПоляФинансированияСтрока,",");
		ФинансированиеНеЗадано = НСтр("ru = '<не задано>';
										|en = '<not set>'");
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок"  + НазваниеРаздела);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		ОбластьСтрокаФинансирование = Макет.ПолучитьОбласть("СтрокаФинансирование");
		
		ВременнаяТаблица = Новый ТаблицаЗначений;
		Для каждого ИмяПоля Из ПоляФинансирования Цикл
			ВременнаяТаблица.Колонки.Добавить(ИмяПоля);
		КонецЦикла;
		ВременнаяТаблица.Колонки.Добавить("КоллекцияДанных");
		
		Для каждого СтрокаТаблицы Из КоллекцияПлатежей Цикл
			ЗаполнитьЗначенияСвойств(ВременнаяТаблица.Добавить(), СтрокаТаблицы);
		КонецЦикла;
		
		Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
			Финансирование = "";
			Для каждого ИмяПоля Из ПоляФинансирования Цикл
				ЗначениеФинансирования = Строка(СтрокаТЗ[ИмяПоля]);
				ЗначениеФинансирования = ?(ПустаяСтрока(ЗначениеФинансирования), ФинансированиеНеЗадано, ЗначениеФинансирования);
				Финансирование = Финансирование + ?(ПустаяСтрока(Финансирование), "", " / ") + ЗначениеФинансирования;
			КонецЦикла;
			ОбластьСтрокаФинансирование.Параметры.Финансирование = Финансирование;
			ТабличныйДокумент.Вывести(ОбластьСтрокаФинансирование);
			ВывестиРаздел(Макет, ТабличныйДокумент, СтрокаТЗ.КоллекцияДанных, НазваниеРаздела, Ложь);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиРаздел(Макет, ТабличныйДокумент, КоллекцияПлатежей, НазваниеРаздела, ВыводитьЗаголовок = Истина)
		
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок"  + НазваниеРаздела);
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка"  + НазваниеРаздела);
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка" + НазваниеРаздела);
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал" + НазваниеРаздела);
	
	Если НазваниеРаздела = "УдержанияПоИсполнительнымДокументам" Тогда
		ОбластьСтрокаСчетПолучателя  = Макет.ПолучитьОбласть("СтрокаСчетПолучателя");
		ОбластьСтрокаАдресПолучателя = Макет.ПолучитьОбласть("СтрокаАдресПолучателя");
		ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	КонецЕсли;
	
	Если ВыводитьЗаголовок Тогда
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	КонецЕсли;
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	// Вывод строк таблицы платежей.
	ИтогСумма = 0;
	ИтогСуммаАгента = 0;
	Для Каждого СтрокаТаблицы Из КоллекцияПлатежей Цикл
		
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, СтрокаТаблицы);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		ИтогСумма = ИтогСумма + СтрокаТаблицы.Сумма;
		
		Если НазваниеРаздела = "УдержанияПоИсполнительнымДокументам" Тогда
			ИтогСуммаАгента = ИтогСуммаАгента + СтрокаТаблицы.ВознаграждениеАгента;
		КонецЕсли;
		
	КонецЦикла;

	// Вывод итогов по таблице.
	Если НазваниеРаздела = "УдержанияПоИсполнительнымДокументам" Тогда
		ОбластьПодвал.Параметры.ВознаграждениеАгента = ИтогСуммаАгента;
	КонецЕсли;
	
	ОбластьПодвал.Параметры.Сумма = ИтогСумма;
	
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура ПечатьТаблицНДФЛ(Макет, ТабличныйДокумент, ДанныеПоОрганизации, ПоляФинансированияСтрока, МесяцНачисления)

	ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокНДФЛ");
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ДатаАктуальностиНДФЛ = Формат(ДанныеПоОрганизации.ДатаАктуальностиНДФЛ, "ДЛФ=DD"); 
	
	ВестиРасчетыСБюджетомПоНДФЛ = ПолучитьФункциональнуюОпцию("ВестиРасчетыСБюджетомПоНДФЛ")
		И МесяцНачисления < УчетНДФЛ.ДатаЗавершенияУчетаПеречисленногоНалога();
		
	Если ВестиРасчетыСБюджетомПоНДФЛ Тогда
		
		Если ДанныеПоОрганизации.НДФЛОстатки.Количество() = 0 Тогда
			// Нет остатков.
			ОбластьШапка = Макет.ПолучитьОбласть("ШапкаЗадолженностьОтсутствует");
			ОбластьШапка.Параметры.ДатаАктуальностиНДФЛ = ДатаАктуальностиНДФЛ;
			ТабличныйДокумент.Вывести(ОбластьШапка);
		Иначе
			
			ОбластьШапка = Макет.ПолучитьОбласть("ШапкаСостояниеРасчетов");
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаСостояниеРасчетов");
			ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалСостояниеРасчетов");
			
			ОбластьШапка.Параметры.ДатаАктуальностиНДФЛ = ДатаАктуальностиНДФЛ;
			ТабличныйДокумент.Вывести(ОбластьШапка);
			
			ИтогПросрочено = 0;
			ИтогПереплата = 0;
			ИтогПросроченоСПревышения = 0;
			ИтогПереплатаСПревышения = 0;
			Для каждого СтрокаТаблицы Из ДанныеПоОрганизации.НДФЛОстатки Цикл
				
				ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, СтрокаТаблицы);
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				
				ИтогПросрочено = ИтогПросрочено + СтрокаТаблицы.Просрочено;
				ИтогПереплата = ИтогПереплата + СтрокаТаблицы.Переплата;
				
				ИтогПросроченоСПревышения = ИтогПросроченоСПревышения + СтрокаТаблицы.ПросроченоСПревышения;
				ИтогПереплатаСПревышения = ИтогПереплатаСПревышения + СтрокаТаблицы.ПереплатаСПревышения;
			
			КонецЦикла;
			
			ОбластьПодвал.Параметры.Просрочено = ИтогПросрочено;
			ОбластьПодвал.Параметры.Переплата = ИтогПереплата;
			ОбластьПодвал.Параметры.ПросроченоСПревышения = ИтогПросроченоСПревышения;
			ОбластьПодвал.Параметры.ПереплатаСПревышения = ИтогПереплатаСПревышения;
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			
		КонецЕсли;
		
		Если ДанныеПоОрганизации.НДФЛОбязательстваДетально.Количество() > 0 Тогда
			
			ОбластьШапка = Макет.ПолучитьОбласть("ШапкаНакопленныеОбязательства");
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаНакопленныеОбязательства");
			ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалНакопленныеОбязательства");
			
			ОбластьШапка.Параметры.ДатаАктуальностиНДФЛ = ДатаАктуальностиНДФЛ;
			ТабличныйДокумент.Вывести(ОбластьШапка);
			
			ИтогСумма = 0;
			Для каждого СтрокаТаблицы Из ДанныеПоОрганизации.НДФЛОбязательстваДетально Цикл
				ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, СтрокаТаблицы);
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				ИтогСумма = ИтогСумма + СтрокаТаблицы.Сумма;
			КонецЦикла;
			
			ОбластьПодвал.Параметры.Сумма = ИтогСумма;
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			
		КонецЕсли;
		
	Иначе
		
		Если ПустаяСтрока(ПоляФинансированияСтрока) Тогда
			
			Если ДанныеПоОрганизации.НалогКУплате.Количество() > 0 Тогда
				ОбластьЗаголовокСрокиПлатежей = Макет.ПолучитьОбласть("ЗаголовокСрокиПлатежей");
				ОбластьЗаголовокСрокиПлатежей.Параметры.ДатаАктуальностиНДФЛ = ДатаАктуальностиНДФЛ;
				ТабличныйДокумент.Вывести(ОбластьЗаголовокСрокиПлатежей);
				ВывестиРазделНалогКУплате(Макет, ТабличныйДокумент, ДанныеПоОрганизации.НалогКУплате);
			КонецЕсли;
			
		Иначе
			
			ПоляФинансирования = СтрРазделить(ПоляФинансированияСтрока,",");
			ФинансированиеНеЗадано = НСтр("ru = '<не задано>';
											|en = '<not set>'");
			
			ОбластьЗаголовокСрокиПлатежей = Макет.ПолучитьОбласть("ЗаголовокСрокиПлатежей");
			ОбластьЗаголовокСрокиПлатежей.Параметры.ДатаАктуальностиНДФЛ = ДатаАктуальностиНДФЛ;
			ТабличныйДокумент.Вывести(ОбластьЗаголовокСрокиПлатежей);
			
			ОбластьСтрокаФинансирование = Макет.ПолучитьОбласть("СтрокаФинансирование");
			
			ВременнаяТаблица = Новый ТаблицаЗначений;
			Для каждого ИмяПоля Из ПоляФинансирования Цикл
				ВременнаяТаблица.Колонки.Добавить(ИмяПоля);
			КонецЦикла;
			ВременнаяТаблица.Колонки.Добавить("КоллекцияДанных");
			
			Для каждого СтрокаТаблицы Из ДанныеПоОрганизации.НалогКУплате Цикл
				ЗаполнитьЗначенияСвойств(ВременнаяТаблица.Добавить(), СтрокаТаблицы);
			КонецЦикла;
			
			Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
				Финансирование = "";
				Для каждого ИмяПоля Из ПоляФинансирования Цикл
					ЗначениеФинансирования = Строка(СтрокаТЗ[ИмяПоля]);
					ЗначениеФинансирования = ?(ПустаяСтрока(ЗначениеФинансирования), ФинансированиеНеЗадано, ЗначениеФинансирования);
					Финансирование = Финансирование + ?(ПустаяСтрока(Финансирование), "", " / ") + ЗначениеФинансирования;
				КонецЦикла;
				ОбластьСтрокаФинансирование.Параметры.Финансирование = Финансирование;
				ТабличныйДокумент.Вывести(ОбластьСтрокаФинансирование);
				ВывестиРазделНалогКУплате(Макет, ТабличныйДокумент, СтрокаТЗ.КоллекцияДанных);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиРазделНалогКУплате(Макет, ТабличныйДокумент, НалогКУплате)
	
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаОбязательства");
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаНакопленныеОбязательства");
	ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалНакопленныеОбязательства");
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ИменаРесурсовНалога = УчетНДФЛ.РесурсыИсчисленногоНалогаВМассиве();
	ИтогиНалогов = Новый Структура();
	Для каждого ИмяРесурса Из ИменаРесурсовНалога Цикл
		ИтогиНалогов.Вставить(ИмяРесурса, 0)	
	КонецЦикла;
	Для каждого СтрокаТаблицы Из НалогКУплате Цикл
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, СтрокаТаблицы);
		ОбластьСтрока.Параметры.Дата = СтрокаТаблицы.КрайнийСрокУплаты;
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		Для каждого ИмяРесурса Из ИменаРесурсовНалога Цикл
			ИтогиНалогов.Вставить(ИмяРесурса, ИтогиНалогов[ИмяРесурса] + СтрокаТаблицы[ИмяРесурса])	
		КонецЦикла;
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, ИтогиНалогов);
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли