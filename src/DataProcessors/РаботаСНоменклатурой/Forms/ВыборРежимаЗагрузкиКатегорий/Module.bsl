
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыбранныеКатегории = Новый Массив;
	
	Параметры.Свойство("КоличествоКатегорийДляЗагрузки", КоличествоКатегорийДляЗагрузки);
	Параметры.Свойство("КатегорииКЗагрузке", ВыбранныеКатегории);
	
	Если ЗначениеЗаполнено(ВыбранныеКатегории) Тогда
		КатегорииКЗагрузке = Новый ФиксированныйМассив(ВыбранныеКатегории);
	КонецЕсли;
	
	ЗаполнитьРежимСохраненияИерархии();
	
	КоличествоУровнейИерархии = Элементы.КоличествоУровнейИерархии.СписокВыбора[0].Значение;
	РежимЗагрузкиКатегорий    = Элементы.ЗагрузкаПоОтдельности.СписокВыбора[0].Значение;
	СохранятьИерархию         = РаботаСНоменклатурой.СохранятьИерархиюКатегорийПриЗагрузке();
	
	УстановитьВидимостьДоступность(ЭтотОбъект);
	
	КлючСохраненияПоложенияОкна = СтрШаблон("%1", Элементы.ЗагрузкаСОбъединением.Видимость);
	
	Элементы.ГруппаДекорацииДлительнойОперации.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если РежимЗагрузкиКатегорий = Элементы.ЗагрузкаСПривязкой.СписокВыбора[0].Значение Тогда
		ПроверяемыеРеквизиты.Добавить("ВидНоменклатуры");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Элементы.ГруппаДекорацииДлительнойОперации.Видимость Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗагрузкаПоОтдельностиПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаСОбъединениемПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаСПривязкойПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Ок(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПриДлительнойОперации(Истина);
	
	ПараметрыЗагрузки = РаботаСНоменклатуройСлужебныйКлиентСервер.ДополнительныеПараметрыЗагрузкиКатегорий();
	
	ПараметрыЗагрузки.РежимЗагрузкиКатегорий    = РежимЗагрузкиКатегорий;
	ПараметрыЗагрузки.ВидНоменклатуры           = ВидНоменклатуры;
	ПараметрыЗагрузки.КоличествоУровнейИерархии = КоличествоУровнейИерархии;
	
	ПараметрыЗагрузки.Вставить("КатегорииКЗагрузке",        КатегорииКЗагрузке);
	ПараметрыЗагрузки.Вставить("ИдентификаторЗадания",      Неопределено);
	
	ЗагрузитьКатегорииЗавершение = Новый ОписаниеОповещения("ЗагрузитьКатегорииЗавершение",
		ЭтотОбъект, ПараметрыЗагрузки);
	
	РаботаСНоменклатуройКлиент.ЗагрузитьКатегории(
		ЗагрузитьКатегорииЗавершение, 
		КатегорииКЗагрузке, 
		ЭтотОбъект, 
		Неопределено, 
		Элементы.КартинкаДлительнойОперации, 
		ПараметрыЗагрузки);
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузитьКатегорииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	НастроитьФормуПриДлительнойОперации(Ложь);
	
	Если Результат.Сообщения <> Неопределено Тогда
		Для каждого Сообщение Из Результат.Сообщения Цикл
			Сообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
	Ошибка    = Ложь;
	Закрывать = Истина;
	Если ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда 
		РезультатЗагрузки = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если РезультатЗагрузки = Неопределено Тогда 
			Ошибка = Истина;
		КонецЕсли;
	Иначе
		Ошибка = Истина;
	КонецЕсли;
	
	ПроставитьПризнакЗагрузки = Ложь;
	ПоказатьОповещение = Истина;
	
	Если Ошибка Тогда 
		
		Закрывать = Ложь;
		
		НажатиеОповещенияПользователя = "";
		КартинкаОповещения = БиблиотекаКартинок.Ошибка32;
		ТекстОповещения = НСтр("ru = 'Создать не удалось';
								|en = 'Cannot create'");
		
	ИначеЕсли ЗначениеЗаполнено(РезультатЗагрузки.АдресДанныхЗаполнения) Тогда	
		
		Закрывать                 = Истина;
		ПроставитьПризнакЗагрузки = Ложь;
		ПоказатьОповещение        = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ПослеИнтерактивногоСозданияВидаНоменклатуры", ЭтотОбъект);
		
		ПараметрыФормы = Новый Структура;
		
		ПараметрыФормы.Вставить("РаботаСНоменклатурой_АдресДанныхЗаполнения", РезультатЗагрузки.АдресДанныхЗаполнения);
		
		РаботаСНоменклатуройКлиентПереопределяемый.СоздатьВидНоменклатурыИнтерактивно(ПараметрыФормы, Оповещение);
		
	ИначеЕсли РезультатЗагрузки.Создано <> РезультатЗагрузки.ДолжноБытьСоздано Тогда 
		
		Закрывать = Ложь;
		
		НовыеЭлементы = ВидыНоменклатурыИзРезультатаСоздания(РезультатЗагрузки.НовыеЭлементы);
		
		НажатиеОповещенияПользователя = Новый ОписаниеОповещения("НажатиеОповещенияПользователя",
			ЭтотОбъект, НовыеЭлементы);
		КартинкаОповещения = БиблиотекаКартинок.Предупреждение32;
		ТекстОповещения = СтрШаблон(НСтр("ru = 'Создано элементов %1 из %2';
										|en = '%1 of %2 items created'"),
			РезультатЗагрузки.Создано, РезультатЗагрузки.ДолжноБытьСоздано);
			
		ПроставитьПризнакЗагрузки = Истина;
		
		Оповестить(РаботаСНоменклатуройКлиент.ОписаниеОповещенийПодсистемы().ЗагрузкаКатегорий, НовыеЭлементы);
		
	Иначе
		
		Если ДополнительныеПараметры.РежимЗагрузкиКатегорий = "Привязка" Тогда
			
			СогласованнаяСтрока = РаботаСНоменклатуройСлужебныйКлиентСервер.СогласованнаяСтрока("Элемент", РезультатЗагрузки.Создано);
			
			ТекстОповещения = СтрШаблон(
				НСтр("ru = 'Привязано %1 %2 к виду номенклатуры %3';
					|en = '%1 %2 linked to the %3 product kind'"), РезультатЗагрузки.Создано, 
					СогласованнаяСтрока, ДополнительныеПараметры.ВидНоменклатуры);
		ИначеЕсли ДополнительныеПараметры.РежимЗагрузкиКатегорий = "Привязка" Тогда
			ТекстОповещения = СтрШаблон(НСтр("ru = 'Объединено элементов: %1';
											|en = 'Merged items: %1'"), РезультатЗагрузки.Создано);	
		ИначеЕсли ДополнительныеПараметры.РежимЗагрузкиКатегорий = "ПоОтдельности" Тогда
			ТекстОповещения = СтрШаблон(НСтр("ru = 'Создано элементов: %1';
											|en = 'Created items: %1'"), РезультатЗагрузки.Создано);	
		КонецЕсли;
		
		Закрывать = Истина;
		
		НовыеЭлементы = ВидыНоменклатурыИзРезультатаСоздания(РезультатЗагрузки.НовыеЭлементы);
		
		НажатиеОповещенияПользователя = Новый ОписаниеОповещения("НажатиеОповещенияПользователя",
			ЭтотОбъект, НовыеЭлементы);
		КартинкаОповещения = БиблиотекаКартинок.Успешно32;
		
		Оповестить(РаботаСНоменклатуройКлиент.ОписаниеОповещенийПодсистемы().ЗагрузкаКатегорий, НовыеЭлементы);
		
	КонецЕсли;
	
	Если ПоказатьОповещение Тогда
		ПоказатьОповещениеПользователя(НСтр("ru = 'Загрузка категорий';
											|en = 'Import categories'"), НажатиеОповещенияПользователя, 
			ТекстОповещения, КартинкаОповещения, СтатусОповещенияПользователя.Информация, УникальныйИдентификатор);		
	КонецЕсли;
	
	Если Закрывать Тогда 
		Закрыть(Результат);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура НажатиеОповещенияПользователя(ДополнительныеПараметры) Экспорт 
	
	Если ДополнительныеПараметры.Количество() = 1 Тогда
		
		ИмяФормыВидаНоменклатуры = РаботаСНоменклатуройСлужебныйВызовСервера.ИмяФормыЭлементаВидаНоменклатуры();
		Если НЕ ЗначениеЗаполнено(ИмяФормыВидаНоменклатуры) Тогда
			Возврат;
		КонецЕсли;
		
		ОткрытьФорму(ИмяФормыВидаНоменклатуры, Новый Структура("Ключ", ДополнительныеПараметры[0]), ЭтотОбъект);		
		
	Иначе
		
		РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуСпискаВидаНоменклатуры(ДополнительныеПараметры, ЭтотОбъект);

	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРежимСохраненияИерархии()
	
	Элементы.КоличествоУровнейИерархии.СписокВыбора.Добавить(0, НСтр("ru = 'Не сохранять иерархию';
																	|en = 'Do not save hierarchy'"));
	Элементы.КоличествоУровнейИерархии.СписокВыбора.Добавить(1, НСтр("ru = 'Сохранить последний уровень иерархии';
																	|en = 'Save last hierarchy level'"));
	Элементы.КоличествоУровнейИерархии.СписокВыбора.Добавить(2, НСтр("ru = 'Сохранить последние 2 уровня иерархии';
																	|en = 'Save last 2 hierarchy levels'"));
	Элементы.КоличествоУровнейИерархии.СписокВыбора.Добавить(3, НСтр("ru = 'Сохранить последние 3 уровня иерархии';
																	|en = 'Save last 3 hierarchy levels'"));
	Элементы.КоличествоУровнейИерархии.СписокВыбора.Добавить(4, НСтр("ru = 'Сохранить последние 4 уровня иерархии';
																	|en = 'Save last 4 hierarchy levels'"));
	Элементы.КоличествоУровнейИерархии.СписокВыбора.Добавить(5, НСтр("ru = 'Сохранить последние 5 уровней иерархии';
																	|en = 'Save last 5 hierarchy levels'"));
	Элементы.КоличествоУровнейИерархии.СписокВыбора.Добавить(1000, НСтр("ru = 'Сохранить всю иерархию';
																		|en = 'Save all hierarchy'"));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДоступность(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.КоличествоУровнейИерархии.Доступность 
		= Форма.РежимЗагрузкиКатегорий = Элементы.ЗагрузкаПоОтдельности.СписокВыбора[0].Значение;
		
	Элементы.КоличествоУровнейИерархии.Видимость = Форма.СохранятьИерархию;
				
	Элементы.ВидНоменклатуры.Доступность 
		= Форма.РежимЗагрузкиКатегорий = Элементы.ЗагрузкаСПривязкой.СписокВыбора[0].Значение;
		
	Элементы.ВидНоменклатуры.АвтоОтметкаНезаполненного 
		= Форма.РежимЗагрузкиКатегорий = Элементы.ЗагрузкаСПривязкой.СписокВыбора[0].Значение;
		
	Элементы.ЗагрузкаСОбъединением.Видимость = Форма.КоличествоКатегорийДляЗагрузки > 1;
	
	Если Форма.КоличествоКатегорийДляЗагрузки = 1 Тогда
		Элементы.ЗагрузкаПоОтдельности.СписокВыбора[0].Представление = НСтр("ru = 'Загрузить выбранную категорию';
																			|en = 'Import the selected category'");
		Элементы.ЗагрузкаСПривязкой.СписокВыбора[0].Представление = НСтр("ru = 'Привязать категорию к виду номенклатуры';
																		|en = 'Link category to product kind'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуПриДлительнойОперации(ЭтоНачалоДлительнойОперации)
	
	Элементы.ГруппаДекорацииДлительнойОперации.Видимость = ЭтоНачалоДлительнойОперации;
	Элементы.Ок.Доступность                              = Не ЭтоНачалоДлительнойОперации;
	Элементы.Отмена.Доступность                          = Не ЭтоНачалоДлительнойОперации;
	
КонецПроцедуры

&НаКлиенте
Функция ВидыНоменклатурыИзРезультатаСоздания(НовыеЭлементы)
	
	Результат = Новый Массив;
	
	Для каждого ЭлементКоллекции Из НовыеЭлементы Цикл
		Результат.Добавить(ЭлементКоллекции.ВидНоменклатуры);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПослеИнтерактивногоСозданияВидаНоменклатуры(Результат, ДополнительныеПараметры) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти