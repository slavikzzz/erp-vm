#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст
//                           ошибки).
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя
//                           области в которой был выведен объект).
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СписокЗагруженныхОбъектов");
	
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"ПФ_MXL_СписокЗагруженныхОбъектов",
			НСтр("ru = 'Печать';
				|en = 'Print'"), ПечатьСписокЗагруженныхОбъектов(МассивОбъектов, ОбъектыПечати), ,
			"Обработка.ПомощникПереходаСПрежнихПрограммЗарплатаКадры.ПФ_MXL_СписокЗагруженныхОбъектов");
	КонецЕсли;
	
КонецПроцедуры								

Функция ПечатьСписокЗагруженныхОбъектов(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПомощникПереходаСПрежнихПрограммЗарплатаКадры_СписокЗагруженныхОбъектов";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПомощникПереходаСПрежнихПрограммЗарплатаКадры.ПФ_MXL_СписокЗагруженныхОбъектов");
	
	НовыеЗагруженныеОбъекты = МассивОбъектов[1];
	КаталогСФайлами = МассивОбъектов[2];
	
	ТаблицаОбъектов = Новый ТаблицаЗначений;
	ТаблицаОбъектов.Колонки.Добавить("Ссылка");
	ТаблицаОбъектов.Колонки.Добавить("ТипСсылки");
	Для каждого Ссылка Из НовыеЗагруженныеОбъекты Цикл
		НоваяСтрока = ТаблицаОбъектов.Добавить();
		НоваяСтрока.Ссылка = Ссылка;
		НоваяСтрока.ТипСсылки = ТипЗнч(Ссылка);
	КонецЦикла;
	ТаблицаОбъектов.Сортировать("ТипСсылки");
	ЗагруженныеТипы = ТаблицаОбъектов.Скопировать(,"ТипСсылки");
	ЗагруженныеТипы.Свернуть("ТипСсылки");
	
	ИмяИсточникаДанных   = НСтр("ru = 'Загрузка из файлов';
								|en = 'Import from files'");
	ПутьКИсточникуДанных = НСтр("ru = 'Папка с файлами';
								|en = 'File folder'") + ": " + СокрЛП (КаталогСФайлами);
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ИмяИсточникаДанных   = ИмяИсточникаДанных;
	ОбластьШапка.Параметры.ПутьКИсточникуДанных = ПутьКИсточникуДанных;
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ОбластьТипОбъекта = Макет.ПолучитьОбласть("ТипОбъекта");
	ОбластьСтрока     = Макет.ПолучитьОбласть("Строка");
	
	Отбор = Новый Структура("ТипСсылки");
	Для Каждого СтрокаТЗ Из ЗагруженныеТипы Цикл
		
		ТипСсылки = СтрокаТЗ.ТипСсылки;
		Отбор.ТипСсылки = СтрокаТЗ.ТипСсылки;
		
		Если Справочники.ТипВсеСсылки().СодержитТип(ТипСсылки) Тогда
			ИмяТипаОбъекта = "Справочник";
		ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипСсылки) Тогда
			ИмяТипаОбъекта = "Документы";
		КонецЕсли;
		ИмяОбъекта = Метаданные.НайтиПоТипу(ТипСсылки).Представление();
		
		ТипаОбъекта = ИмяТипаОбъекта + " " + ИмяОбъекта;
		ОбластьТипОбъекта.Параметры.ТипаОбъекта = ТипаОбъекта;
		ТабличныйДокумент.Вывести(ОбластьТипОбъекта);
		
		НайденныеСтроки = ТаблицаОбъектов.НайтиСтроки(Отбор);
		НомерСтроки = 1;
		Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
			ОбластьСтрока.Параметры.ПредставлениеСсылки = СтрокаТаблицы.Ссылка;
			ОбластьСтрока.Параметры.Ном = НомерСтроки;
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли