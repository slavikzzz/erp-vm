#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТаблицаНастройкиФормированияПроводок.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище));
	
	УстановитьУсловноеОформление();
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	Закрыть(АдресВоВременномХранилищеПлановСчетов());
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	ОтметитьЭлементыТаблицы(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	ОтметитьЭлементыТаблицы(Ложь);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	Элемент.Представление = Элементы.ТаблицаНастройкиФормированияПроводокПометка.Имя;

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаНастройкиФормированияПроводокПометка.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаНастройкиФормированияПроводок.Доступность");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);

	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	Элемент.Представление = Элементы.ТаблицаНастройкиФормированияПроводокНастройкаФормированияПроводкиМеждународногоУчета.Имя;

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаНастройкиФормированияПроводокНастройкаФормированияПроводкиМеждународногоУчета.Имя);
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаНастройкиФормированияПроводокПланСчетов.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаНастройкиФормированияПроводок.Доступность");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

КонецПроцедуры

&НаКлиенте
Процедура ОтметитьЭлементыТаблицы(Пометка) 
	
	Для Каждого Строка Из ТаблицаНастройкиФормированияПроводок Цикл
		
		Если Строка.Доступность Тогда
			Строка.Пометка = Пометка;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция АдресВоВременномХранилищеПлановСчетов()
	Возврат ПоместитьВоВременноеХранилище(ТаблицаНастройкиФормированияПроводок.Выгрузить(), УникальныйИдентификатор)
КонецФункции

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	Отбор = Новый Структура;
	Отбор.Вставить("Доступность", Ложь);
	НайденныеСтроки = ТаблицаНастройкиФормированияПроводок.НайтиСтроки(Отбор);
	КоличествоНайденныхСтрок = НайденныеСтроки.Количество();
	
	Если КоличествоНайденныхСтрок Тогда
		
		Элементы.ТаблицаНастройкиФормированияПроводок.Подсказка = НСтр("ru = 'Для доступности элементов необходимо включить выгрузку у соответсвующих планов счетов';
																		|en = 'To make the items available, enable the export for the corresponding charts of accounts'");
		Элементы.ТаблицаНастройкиФормированияПроводок.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		
	Иначе
		
		Элементы.ТаблицаНастройкиФормированияПроводок.Подсказка = "";
		Элементы.ТаблицаНастройкиФормированияПроводок.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
