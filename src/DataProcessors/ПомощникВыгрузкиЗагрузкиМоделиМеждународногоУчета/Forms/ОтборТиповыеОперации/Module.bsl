#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыбранныеТиповыеОперации.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище));
	ЗаполнитьДеревоТиповыеОперации();
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоТиповыеОперации

&НаКлиенте
Процедура ДеревоТиповыеОперацииПометкаПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = ТекущийЭлемент.ТекущиеДанные;
	ОтметитьВложенныеЭлементыРекурсивно(ТекущиеДанные);
	
	Если ТекущиеДанные.Пометка Тогда
		ОтметитьРодителейВДереве(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	Адрес = "";
	ГотовоСервер(Адрес);
	Закрыть(Адрес);
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	ОтметитьЭлементыПоСтрокамДерева(ДеревоТиповыеОперации.ПолучитьЭлементы(), Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	ОтметитьЭлементыПоСтрокамДерева(ДеревоТиповыеОперации.ПолучитьЭлементы(), Ложь);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоТиповыеОперацииПометка.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоТиповыеОперации.Доступность");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоТиповыеОперацииТиповаяОперация.Имя);
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоТиповыеОперацииПланСчетов.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоТиповыеОперации.Доступность");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность(ЕстьНедоступные)
	
	Если ЕстьНедоступные Тогда
		Элементы.ДеревоТиповыеОперации.Подсказка = НСтр("ru = 'Для доступности элементов необходимо включить выгрузку у соответсвующих планов счетов';
														|en = 'To make the items available, enable the export for the corresponding charts of accounts'");
		Элементы.ДеревоТиповыеОперации.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
	Иначе
		Элементы.ДеревоТиповыеОперации.Подсказка = "";
		Элементы.ДеревоТиповыеОперации.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ГотовоСервер(Адрес)
	ОбновитьКоллекциюВыбранныеВидыФинансовыхОтчетов();
	Адрес = ПоместитьВоВременноеХранилище(ВыбранныеТиповыеОперации.Выгрузить(), УникальныйИдентификатор)
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоТиповыеОперации()
	
	СхемаКомпоновкиДанных = Обработки.ПомощникВыгрузкиЗагрузкиМоделиМеждународногоУчета.ПолучитьМакет("ТиповыеОперацииИерархия");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, СхемаКомпоновкиДанных.НастройкиПоУмолчанию,,,
		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(Макет);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Дерево = Новый ДеревоЗначений;
	ПроцессорВывода.УстановитьОбъект(Дерево);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Если Дерево.Строки.Количество() Тогда
		ЕстьНедоступные = Ложь;
		ОтметитьЭлементыПоВыбраннымЭлементам(Дерево.Строки, ЕстьНедоступные);
		УстановитьВидимостьДоступность(ЕстьНедоступные);
		ЗначениеВРеквизитФормы(Дерево, "ДеревоТиповыеОперации");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтметитьЭлементыПоВыбраннымЭлементам(Строки, ЕстьНедоступные)
	
	Для Каждого Строка Из Строки Цикл
		
		Отбор = Новый Структура;
		Отбор.Вставить("ТиповаяОперация", Строка.ТиповаяОперация);
		НайденныеСтроки = ВыбранныеТиповыеОперации.НайтиСтроки(Отбор);
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Строка.Пометка = НайденнаяСтрока.Пометка;
			Строка.ПланСчетов = НайденнаяСтрока.ПланСчетов;
			Строка.Доступность = НайденнаяСтрока.Доступность;
			Если Не НайденнаяСтрока.Доступность Тогда
				ЕстьНедоступные = Истина;
			КонецЕсли;
		КонецЦикла;
		
		ОтметитьЭлементыПоВыбраннымЭлементам(Строка.Строки, ЕстьНедоступные);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыбранныеЭлементыДереваВСписок(Элементы)

	Для Каждого Элемент Из Элементы Цикл
		НоваяСтрока = ВыбранныеТиповыеОперации.Добавить();
		НоваяСтрока.ТиповаяОперация = Элемент.ТиповаяОперация;
		НоваяСтрока.Пометка = Элемент.Пометка;
		НоваяСтрока.ПланСчетов = Элемент.ПланСчетов;
		НоваяСтрока.Доступность = Элемент.Доступность;
		
		ВыбранныеЭлементыДереваВСписок(Элемент.ПолучитьЭлементы());
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКоллекциюВыбранныеВидыФинансовыхОтчетов()
	
	ВыбранныеТиповыеОперации.Очистить();
	ВыбранныеЭлементыДереваВСписок(ДеревоТиповыеОперации.ПолучитьЭлементы());
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьЭлементыПоСтрокамДерева(Строки, Пометка)
	
	Для Каждого Строка Из Строки Цикл
		
		Если Строка.Доступность Тогда
			Строка.Пометка = Пометка;
		КонецЕсли;

		ОтметитьЭлементыПоСтрокамДерева(Строка.ПолучитьЭлементы(), Пометка);

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВложенныеЭлементыРекурсивно(ЭлементДерева)
	
	ВложенныеЭлементы = ЭлементДерева.ПолучитьЭлементы();
	
	Для Каждого ВложенныйЭлемент Из ВложенныеЭлементы Цикл
		Если ВложенныйЭлемент.Доступность Тогда
			ВложенныйЭлемент.Пометка = ЭлементДерева.Пометка;
		КонецЕсли;
		ОтметитьВложенныеЭлементыРекурсивно(ВложенныйЭлемент);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьРодителейВДереве(ЭлементДерева)
	
	СтрокаРодитель = ЭлементДерева.ПолучитьРодителя();
	
	Если СтрокаРодитель <> Неопределено Тогда
		СтрокаРодитель.Пометка = ЭлементДерева.Пометка;
		ОтметитьРодителейВДереве(СтрокаРодитель);
	КонецЕсли;
		
КонецПроцедуры 

#КонецОбласти
