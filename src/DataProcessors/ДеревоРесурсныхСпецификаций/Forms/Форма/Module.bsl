
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("Дата", ДеревоДата) Тогда
		ДеревоДата = ТекущаяДатаСеанса();
	КонецЕсли;
	
	УправлениеДаннымиОбИзделиях.ЗагрузитьНастройкиОтбораДереваСпецификации(ЭтотОбъект);
	
	ТекущееЗначениеНастройкиОтображатьОстаткиТоваров = ЗначениеНастройкиВыводаСкладскихОстатков();
	Если ТекущееЗначениеНастройкиОтображатьОстаткиТоваров = Неопределено Тогда
		ЗадатьВопросОСохраненииНастройкиВыводаОстатков = Истина;
	Иначе
		ОтображатьОстаткиТоваров = ТекущееЗначениеНастройкиОтображатьОстаткиТоваров;
	КонецЕсли;
		
	Если Параметры.Свойство("Номенклатура") Тогда
		Если Параметры.Номенклатура.Этогруппа Тогда
			Возврат;
		КонецЕсли;
		ДеревоНоменклатура = Параметры.Номенклатура;
		
		// Проверяем использование характеристик для номенклатуры.
		РезультатПроверки = Справочники.Номенклатура.ХарактеристикаИУпаковкаПринадлежатВладельцу(
			ДеревоНоменклатура,
			Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(),
			Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
		
		НоменклатураХарактеристикаИспользуется = РезультатПроверки.ХарактеристикиИспользуются;
	КонецЕсли;
	
	Если Параметры.Свойство("ХарактеристикаНоменклатуры") Тогда
		ДеревоХарактеристикаНоменклатуры = Параметры.ХарактеристикаНоменклатуры;
	КонецЕсли;
	
	Если Параметры.Свойство("Спецификация") Тогда
		Спецификация = ПроверитьПолучитьСпецификацию(Параметры.Спецификация);
	КонецЕсли;
	
	Если Параметры.Свойство("Режим") Тогда
		Режим = Параметры.Режим;
	Иначе
		Режим = УправлениеДаннымиОбИзделияхКлиентСервер.РежимДеревоСпецификаций();
	КонецЕсли;
	
	НастроитьПараметрыНазначенияСпецификаций(Параметры);
	
	НастроитьПометкиДополнительныхКоманд(ЭтотОбъект);
	
	Если Режим = УправлениеДаннымиОбИзделияхКлиентСервер.РежимДеревоСпецификацийЗаказа() Тогда
		
		ЗаполнитьРеквизитыСпецификацииЗаказа(Параметры);
		
		Элементы.ДеревоСпецификаций.ТолькоПросмотр = Истина;
		Элементы.ГруппаСписокДоступныхСпецификаций.Видимость = Ложь;
	
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ЗакрыватьПриЗакрытииВладельца = Истина;
		
	КонецЕсли;
	
	ДинамическоеСчитывание = (Режим = УправлениеДаннымиОбИзделияхКлиентСервер.РежимДеревоСпецификаций());
	ПараметрыВыбораСпецификаций = УправлениеДаннымиОбИзделиях.ПараметрыВыбораСпецификаций(Новый Структура(), Обработки.ДеревоРесурсныхСпецификаций);
	
	Если НЕ Параметры.Свойство("Заголовок", Заголовок) И НЕ Спецификация.Пустая() Тогда
		Заголовок = СтрШаблон(НСтр("ru = 'Дерево спецификации ""%1""';
									|en = '""%1"" BOM tree'"), Спецификация);
	КонецЕсли;
	
	Если Параметры.Свойство("СформироватьПриОткрытии") Тогда
		СформироватьДеревоСпецификацийНаСервере();
	КонецЕсли;
	
	УстановитьСвойстваДинамическогоСпискаДоступныхСпецификаций();
	
	ТекущаяДатаСеанса = ТекущаяДатаСеанса();
	ЦветВыбранногоРежима = ЦветаСтиля.ЦветТекстаФормы;
	ЦветНеВыбранногоРежима = ЦветаСтиля.ГиперссылкаЦвет;
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект);
	НастроитьСтраницыПодвала();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Режим <> УправлениеДаннымиОбИзделияхКлиентСервер.РежимДеревоСпецификацийЗаказа()
		И Не ЗначениеЗаполнено(Спецификация)
		И Не ЗначениеЗаполнено(ДеревоНоменклатура) Тогда
		
		ТекстПредупреждения = НСтр("ru = 'Дерево спецификаций строится в контексте номенклатуры, ресурсной спецификации или спецификации заказа.';
									|en = 'BOM tree is built for products, BOM or order BOM.'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ТекущаяСтрока = Элементы.ДеревоСпецификаций.ТекущаяСтрока;
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.РесурсныеСпецификации.Форма.ФормаВыбораПоНоменклатуре" Тогда
		
		ИзменитьСпецификациюВТекущейСтроке(ТекущаяСтрока, ВыбранноеЗначение);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_РесурсныеСпецификации" Тогда
		
		Если НЕ Элементы.СписокДоступныхСпецификаций.Видимость Тогда
			Элементы.СписокДоступныхСпецификаций.Обновить();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ОбновитьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьЭтапыПриИзменении(Элемент)
	
	ИзмененыПараметрыОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьВыходныеИзделияПриИзменении(Элемент)
	
	ИзмененыПараметрыОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьМатериалыПриИзменении(Элемент)
	
	ИзмененыПараметрыОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьТрудозатратыПриИзменении(Элемент)
	
	ИзмененыПараметрыОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеДиспетчерПриИзменении(Элемент)
	ПриИзмененииЗначенияПараметраНазначенияСпецификаций();
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеДеятельностиПриИзменении(Элемент)
	ПриИзмененииЗначенияПараметраНазначенияСпецификаций();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыДеревоСпецификаций

&НаКлиенте
Процедура ДеревоСпецификацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ДеревоСпецификацийНоменклатура" 
		И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Номенклатура) 
		И ТипЗнч(Элемент.ТекущиеДанные.Номенклатура) <> Тип("Строка")
		И НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.ВидНоменклатуры) Тогда
		
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(Неопределено, Элемент.ТекущиеДанные.Номенклатура);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийПриАктивизацииСтроки(Элемент)
	
	Если Режим = УправлениеДаннымиОбИзделияхКлиентСервер.РежимДеревоСпецификаций() Тогда
		ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтрокиДерева", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийПередРазворачиванием(Элемент, Строка, Отказ)
	
	УправлениеДаннымиОбИзделияхКлиентСервер.ДеревоСпецификацийПередРазворачиванием(ЭтотОбъект, Строка, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийПередСворачиванием(Элемент, Строка, Отказ)
	
	УправлениеДаннымиОбИзделияхКлиентСервер.ДеревоСпецификацийПередСворачиванием(ЭтотОбъект, Строка, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийСпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ВидСтроки = ПредопределенноеЗначение("Перечисление.ВидыСтрокДереваСпецификаций.ВыходноеИзделие") Тогда
		ИмяТЧ = "ВыходныеИзделия";
	Иначе
		ИмяТЧ = "МатериалыИУслуги";
	КонецЕсли;
	
	ДанныеОбИзделии = УправлениеДаннымиОбИзделияхКлиентСервер.СтруктураДанныхОбИзделииДляВыбораСпецификации();
	ДанныеОбИзделии.Номенклатура            = ТекущиеДанные.Номенклатура;
	ДанныеОбИзделии.Характеристика          = ТекущиеДанные.Характеристика;
	ДанныеОбИзделии.НачалоПроизводства      = ДеревоДата;
	ДанныеОбИзделии.ПодразделениеДиспетчер  = ПараметрНазначенияПодразделениеДиспетчер;
	ДанныеОбИзделии.НаправлениеДеятельности = ПараметрНазначенияНаправлениеДеятельности;
	
	УправлениеДаннымиОбИзделияхКлиент.ОткрытьФормуВыбораСпецификацийПоНоменклатуре(
		ДанныеОбИзделии,
		ПараметрыВыбораСпецификаций[ИмяТЧ],
		ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийСпецификацияОчистка(Элемент, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.ДеревоСпецификаций.ТекущаяСтрока;
	ИзменитьСпецификациюВТекущейСтроке(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ВидНоменклатуры) Тогда
		
		Элемент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
		
	Иначе
		
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ДеревоСпецификаций.ТекущаяСтрока;
	ТекущиеДанные = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	
	УправлениеДаннымиОбИзделияхКлиент.СохранитьРазвернутыеУровниДерева(ЭтотОбъект, ТекущиеДанные);
	
	ДеревоСпецификацийНоменклатураПриИзмененииНаСервере(ТекущаяСтрока);
	
	УправлениеДаннымиОбИзделияхКлиент.ВосстановитьРазвернутыеУровниДерева(ЭтотОбъект, ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Процедура ДеревоСпецификацийНоменклатураПриИзмененииНаСервере(ТекущаяСтрока)
	
	ТекущиеДанные = ДеревоСпецификаций.НайтиПоИдентификатору(ТекущаяСтрока);
	
	СтруктураДействий = Новый Структура;
	
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущиеДанные.Характеристика);
	СтруктураДействий.Вставить("ПроверитьУпаковкуПоВладельцу", ТекущиеДанные.Упаковка);
	СтруктураДействий.Вставить("ЗаполнитьПризнакЕдиницаИзмерения", Новый Структура("Номенклатура", "ЕдиницаИзмерения"));
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц", Новый Структура("НужноОкруглять", Ложь));
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, Неопределено);
	
	ОбработатьИзменениеРеквизитаСтрокиДереваНаСервере(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийХарактеристикаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ДеревоСпецификаций.ТекущаяСтрока;
	ТекущиеДанные = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	
	УправлениеДаннымиОбИзделияхКлиент.СохранитьРазвернутыеУровниДерева(ЭтотОбъект, ТекущиеДанные);
	
	ДеревоСпецификацийХарактеристикаПриИзмененииНаСервере(ТекущаяСтрока);
	
	УправлениеДаннымиОбИзделияхКлиент.ВосстановитьРазвернутыеУровниДерева(ЭтотОбъект, ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Процедура ДеревоСпецификацийХарактеристикаПриИзмененииНаСервере(ТекущаяСтрока)
	
	ТекущиеДанные = ДеревоСпецификаций.НайтиПоИдентификатору(ТекущаяСтрока);
	
	Если ТекущиеДанные.ВидСтроки = ПредопределенноеЗначение("Перечисление.ВидыСтрокДереваСпецификаций.ВыходноеИзделие") Тогда
		ИмяТЧ = "ВыходныеИзделия";
	Иначе
		ИмяТЧ = "МатериалыИУслуги";
	КонецЕсли;
	
	СтруктураЗаполненияСпецификации = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыДействияПроверитьЗаполнитьСпецификацию(
		ЭтотОбъект, ТекущиеДанные, ПараметрыВыбораСпецификаций[ИмяТЧ]);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьЗаполнитьСпецификацию", СтруктураЗаполненияСпецификации);
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, Неопределено);
	
	ОбработатьИзменениеРеквизитаСтрокиДереваНаСервере(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийУпаковкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ДеревоСпецификаций.ТекущаяСтрока;
	ТекущиеДанные = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	
	УправлениеДаннымиОбИзделияхКлиент.СохранитьРазвернутыеУровниДерева(ЭтотОбъект, ТекущиеДанные);
	
	ДеревоСпецификацийУпаковкаПриИзмененииНаСервере(ТекущаяСтрока);
	
	УправлениеДаннымиОбИзделияхКлиент.ВосстановитьРазвернутыеУровниДерева(ЭтотОбъект, ТекущиеДанные);

КонецПроцедуры

&НаСервере
Процедура ДеревоСпецификацийУпаковкаПриИзмененииНаСервере(ТекущаяСтрока)
	
	ТекущиеДанные = ДеревоСпецификаций.НайтиПоИдентификатору(ТекущаяСтрока);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц", Новый Структура("НужноОкруглять", Ложь));
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, Неопределено);
	
	ОбработатьИзменениеРеквизитаСтрокиДереваНаСервере(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийКоличествоУпаковокПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ДеревоСпецификаций.ТекущаяСтрока;
	ТекущиеДанные = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	
	УправлениеДаннымиОбИзделияхКлиент.СохранитьРазвернутыеУровниДерева(ЭтотОбъект, ТекущиеДанные);
	
	ДеревоСпецификацийКоличествоУпаковокПриИзмененииНаСервере(ТекущаяСтрока);
	
	УправлениеДаннымиОбИзделияхКлиент.ВосстановитьРазвернутыеУровниДерева(ЭтотОбъект, ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Процедура ДеревоСпецификацийКоличествоУпаковокПриИзмененииНаСервере(ТекущаяСтрока)
	
	ТекущиеДанные = ДеревоСпецификаций.НайтиПоИдентификатору(ТекущаяСтрока);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц", Новый Структура("НужноОкруглять", Ложь));
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, Неопределено);
	
	ОбработатьИзменениеРеквизитаСтрокиДереваНаСервере(ТекущаяСтрока);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыСписокДоступныхСпецификаций

&НаКлиенте
Процедура СписокДоступныхСпецификацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокДоступныхСпецификаций.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ПоказатьЗначение(,ТекущиеДанные.Спецификация);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьДерево(Команда)
	
	ОбновитьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьДереваСпецификации(Команда)
	
	ПараметрКоманды = Новый Массив;
	ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.РесурсныеСпецификации.ПустаяСсылка"));
	
	ИменаМакетов = "ДеревоСпецификаций";
	ПараметрыПечати = ПараметрыПечатиДереваСпецификаций();
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Обработка.ДеревоРесурсныхСпецификаций",
		ИменаМакетов,
		ПараметрКоманды,
		ЭтотОбъект,
		ПараметрыПечати);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаРазвернутьВсе(Команда)
	
	РазвернутьВсе();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСвернутьВсе(Команда)
	
	СвернутьВсе();
	
КонецПроцедуры

&НаКлиенте
Процедура СкрыватьЗаголовкиГруппировок(Команда)
	
	ДеревоВыводитьЗаголовкиГруппировок = НЕ ДеревоВыводитьЗаголовкиГруппировок;
	
	НастроитьПометкиДополнительныхКоманд(ЭтотОбъект);
	
	ИзмененыПараметрыОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьОперацииВместеСЭтапами(Команда)
	
	ДеревоВыводитьОперации = НЕ ДеревоВыводитьОперации;
	
	НастроитьПометкиДополнительныхКоманд(ЭтотОбъект);
	
	ИзмененыПараметрыОтбора();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	СписокДоступныхСпецификаций.УсловноеОформление.Элементы.Очистить();
	Справочники.РесурсныеСпецификации.УстановитьУсловноеОформлениеСпискаДоступныхСпецификаций(СписокДоступныхСпецификаций.УсловноеОформление);
	УправлениеДаннымиОбИзделиях.НастроитьУсловноеОформлениеДереваСпецификаций(УсловноеОформление);
	
	#Область ОстаткиТоваров
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ОстаткиТоваровПериодОписание");

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОстаткиТоваров.Период");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = НачалоДня(ТекущаяДатаСеанса());

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтрицательногоЧисла);
	
	#КонецОбласти
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормы(Форма, СписокРеквизитов = "")
	
	Элементы = Форма.Элементы;
	
	Инициализация = ПустаяСтрока(СписокРеквизитов);
	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);
	
	Если СтруктураРеквизитов.Свойство("ГлавныйУровень")
		ИЛИ Инициализация Тогда
		
		Строки = Форма.ДеревоСпецификаций.ПолучитьЭлементы();
		Если Строки.Количество() > 0 Тогда
			
			ГлавныйУровень = Строки[0];
			Если ЗначениеЗаполнено(ГлавныйУровень.ВидНоменклатуры) Тогда
				Элементы.ДеревоСпецификацийНоменклатура.КартинкаШапки = БиблиотекаКартинок.Изменить;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("ОстаткиТоваров")
		ИЛИ Инициализация Тогда
		
		МассивЭлементов = Новый Массив; // Массив Из Строка
		МассивЭлементов.Добавить(Элементы.ДеревоСпецификацийСклад.Имя);
		МассивЭлементов.Добавить(Элементы.ДеревоСпецификацийВНаличии.Имя);
		МассивЭлементов.Добавить(Элементы.ДеревоСпецификацийДоступно.Имя);
	
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(
			Форма.Элементы, МассивЭлементов, "Видимость", Форма.ОтображатьОстаткиТоваров);
			
		Форма.Элементы.ПоказатьОстатки.Пометка = Форма.ОтображатьОстаткиТоваров;
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваДинамическогоСпискаДоступныхСпецификаций()
	
	СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	
	ТекстЗапроса = Справочники.РесурсныеСпецификации.ТекстЗапросаДинамическогоСпискаДоступныхСпецификаций();
	СвойстваСписка.ТекстЗапроса = ТекстЗапроса;
	
	СвойстваСписка.ОсновнаяТаблица = "";
	СвойстваСписка.ДинамическоеСчитываниеДанных = Ложь;
	
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.СписокДоступныхСпецификаций, СвойстваСписка);
	
	ТекущийОтбор = УправлениеДаннымиОбИзделияхКлиентСервер.СтруктураОтбораСпискаДоступныхСпецификаций();
	ТекущийОтбор.Номенклатура   = ДеревоНоменклатура;
	ТекущийОтбор.Характеристика = ДеревоХарактеристикаНоменклатуры;
	
	УстановитьПараметрыСпискаДоступныхСпецификаций(ТекущийОтбор);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьПолучитьСпецификацию(Спецификация)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Спецификация
	|ИЗ
	|	Справочник.РесурсныеСпецификации КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Спецификация И НЕ Таблица.ЭтоГруппа");
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Спецификация;
	Иначе
		Результат = Справочники.РесурсныеСпецификации.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРеквизитыСпецификацииЗаказа(ДанныеЗаполнения)
	
	РеквизитыСпецификацииЗаказа = Новый Структура;
	
	РеквизитыСпецификацииЗаказа.Вставить("КлючСвязи", ДанныеЗаполнения.КлючСвязи);
	
	РеквизитыСпецификацииЗаказа.Вставить("УпаковкаВыходногоИзделия", ДанныеЗаполнения.Упаковка);
	РеквизитыСпецификацииЗаказа.Вставить("КоличествоВыходногоИзделия", ДанныеЗаполнения.Количество);
	РеквизитыСпецификацииЗаказа.Вставить("КоличествоУпаковокВыходногоИзделия", ДанныеЗаполнения.КоличествоУпаковок);
	
	РеквизитыСпецификацииЗаказа.Вставить("АдресВХранилище", Параметры.АдресВХранилище);

КонецПроцедуры

&НаСервере
Функция ПараметрыПечатиДереваСпецификаций()
	
	Дерево = УправлениеДаннымиОбИзделиях.ПрочитатьДеревоСпецификаций(ЭтотОбъект);
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("АдресВХранилище", ПоместитьВоВременноеХранилище(Дерево, УникальныйИдентификатор));
	
	Возврат ПараметрыПечати;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьДанные()
	
	УправлениеДаннымиОбИзделияхКлиент.СохранитьРазвернутыеУровниДерева(ЭтотОбъект);
	
	СформироватьДеревоСпецификацийНаСервере();
	
	УправлениеДаннымиОбИзделияхКлиент.ВосстановитьРазвернутыеУровниДерева(ЭтотОбъект);
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьАктивизациюСтрокиДерева()
	
	ПроверитьУстановитьПараметрыСпискаДоступныхСпецификаций();
	
	ПроверитьУстановитьПараметрыДереваОстатковТоваров();
	
КонецПроцедуры

&НаСервере
Функция ПараметрыДереваСпецификаций()
	
	ПараметрыДерева = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыДереваСпецификаций();
	
	Если ДеревоСпецификаций.ПолучитьЭлементы().Количество() <> 0 Тогда
		Строка = ДеревоСпецификаций.ПолучитьЭлементы()[0];
		ПараметрыДерева.Номенклатура               = Строка.Номенклатура;
		ПараметрыДерева.ХарактеристикаНоменклатуры = Строка.Характеристика;
		ПараметрыДерева.Спецификация               = Строка.Спецификация;
	Иначе
		ПараметрыДерева.Номенклатура               = ДеревоНоменклатура;
		ПараметрыДерева.ХарактеристикаНоменклатуры = ДеревоХарактеристикаНоменклатуры;
		ПараметрыДерева.Спецификация               = Спецификация;
	КонецЕсли;
	
	ПараметрыДерева.ПараметрыВыбораСпецификаций  = ПараметрыВыбораСпецификаций;
	
	ПараметрыДерева.Дата                         = ДеревоДата;
	ПараметрыДерева.ПодразделениеДиспетчер       = ПараметрНазначенияПодразделениеДиспетчер;
	ПараметрыДерева.НаправлениеДеятельности      = ПараметрНазначенияНаправлениеДеятельности;
	
	ПараметрыДерева.ДинамическоеСчитывание       = ДинамическоеСчитывание;
	
	УправлениеДаннымиОбИзделиях.ЗаполнитьНастройкиОтбораДереваСпецификации(ПараметрыДерева, ЭтотОбъект);
	
	Если Режим = УправлениеДаннымиОбИзделияхКлиентСервер.РежимДеревоСпецификаций() Тогда
		ПараметрыДерева.РазузловыватьПолуфабрикаты = Истина;
		
		Параметры.Свойство("КоличествоВыходногоИзделия",         ПараметрыДерева.КоличествоВыходногоИзделия);
		Параметры.Свойство("КоличествоУпаковокВыходногоИзделия", ПараметрыДерева.КоличествоУпаковокВыходногоИзделия);
		Параметры.Свойство("УпаковкаВыходногоИзделия",           ПараметрыДерева.УпаковкаВыходногоИзделия);
		
	КонецЕсли;
	
	Если Режим = УправлениеДаннымиОбИзделияхКлиентСервер.РежимДеревоСпецификацийЗаказа() Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыДерева, РеквизитыСпецификацииЗаказа);
	КонецЕсли;
	
	ПараметрыДерева.ВыводитьОстаткиТоваров = ОтображатьОстаткиТоваров;
	
	Возврат ПараметрыДерева;
	
КонецФункции

&НаСервере
Процедура СформироватьДеревоСпецификацийНаСервере()
	
	Если ИзмененыПараметрыОтбора Тогда
		СохранитьПараметрыОтбора();
	КонецЕсли;
	
	ПараметрыДерева = ПараметрыДереваСпецификаций();
	
	УправлениеДаннымиОбИзделиях.ПостроитьДеревоСпецификаций(ЭтотОбъект, ПараметрыДерева);
	
КонецПроцедуры

&НаКлиенте
Функция НайтиСтрокуПоИдентификатору(КоллекцияЭлементовДерева, Идентификатор)
	
	Для Каждого Строка Из КоллекцияЭлементовДерева Цикл
		
		Если Строка.Идентификатор = Идентификатор Тогда
			Возврат Строка;
		Иначе
			Результат = НайтиСтрокуПоИдентификатору(Строка.ПолучитьЭлементы(), Идентификатор);
			Если Результат <> Неопределено Тогда
				Возврат Результат;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьУстановитьПараметрыСпискаДоступныхСпецификаций()
	
	ТекущиеДанные = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	
	НовыйОтбор = УправлениеДаннымиОбИзделияхКлиентСервер.СтруктураОтбораСпискаДоступныхСпецификаций();
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ТипЗнч(ТекущиеДанные.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			НовыйОтбор.Номенклатура   = ТекущиеДанные.Номенклатура;
			НовыйОтбор.Характеристика = ТекущиеДанные.Характеристика;
		КонецЕсли;
		
		ВидСтроки = ТекущиеДанные.ВидСтроки;
		
	Иначе
		ВидСтроки = Неопределено;
	КонецЕсли;
	
	Если НовыйОтбор.Номенклатура <> ТекущийОтбор.Номенклатура
		ИЛИ НовыйОтбор.Характеристика <> ТекущийОтбор.Характеристика Тогда
		УстановитьПараметрыСпискаДоступныхСпецификаций(НовыйОтбор, ВидСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыСпискаДоступныхСпецификаций(НовыйОтбор, ВидСтроки = Неопределено)
	
	ТекущийОтбор = НовыйОтбор;
	
	ДоступныеСпецификации    = Неопределено;
	
	Если ЗначениеЗаполнено(НовыйОтбор.Номенклатура) Тогда
	
		ДанныеОбИзделии = УправлениеДаннымиОбИзделияхКлиентСервер.СтруктураДанныхОбИзделииДляВыбораСпецификации();
		ДанныеОбИзделии.Номенклатура            = НовыйОтбор.Номенклатура;
		ДанныеОбИзделии.Характеристика          = НовыйОтбор.Характеристика;
		ДанныеОбИзделии.НачалоПроизводства      = ДеревоДата;
		ДанныеОбИзделии.НаправлениеДеятельности = ПараметрНазначенияНаправлениеДеятельности;
		ДанныеОбИзделии.ПодразделениеДиспетчер  = ПараметрНазначенияПодразделениеДиспетчер;
		
		Если ВидСтроки = ПредопределенноеЗначение("Перечисление.ВидыСтрокДереваСпецификаций.ВыходноеИзделие") Тогда
			ИмяТЧ = "ВыходныеИзделия";
		Иначе
			ИмяТЧ = "МатериалыИУслуги";
		КонецЕсли;
		
		ДоступныеСпецификации = УправлениеДаннымиОбИзделиях.СписокСпецификацийПоНоменклатуре(
			ДанныеОбИзделии,
			ПараметрыВыбораСпецификаций[ИмяТЧ]);
	
	КонецЕсли; 
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
									СписокДоступныхСпецификаций, "СписокСпецификаций", ДоступныеСпецификации);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеРеквизитаСтрокиДереваНаСервере(ТекущаяСтрока)

	ТекущиеДанные = ДеревоСпецификаций.НайтиПоИдентификатору(ТекущаяСтрока);

	ТекущиеДанные.ПолучитьЭлементы().Очистить();
	
	ТекущиеДанные.ЕстьСпецификация = ЗначениеЗаполнено(ТекущиеДанные.Спецификация);
	ТекущиеДанные.СпецификацияПрочитана = Ложь;
	
	Если ТекущиеДанные.ЕстьСпецификация Тогда
		
		ПараметрыДерева = ПараметрыДереваСпецификаций();
		Если ПараметрыДерева.Спецификация <> ТекущиеДанные.Спецификация Тогда
			ПараметрыДерева.Спецификация = Справочники.РесурсныеСпецификации.ПустаяСсылка();
		КонецЕсли;
		УправлениеДаннымиОбИзделиях.ИзменитьСпецификациюВСтрокеДерева(ЭтотОбъект, ПараметрыДерева, ТекущиеДанные);
		
	ИначеЕсли ДинамическоеСчитывание Тогда
		
		УправлениеДаннымиОбИзделиях.ОбновитьРеквизитыСтрокиДереваВХранилище(ЭтотОбъект, ТекущиеДанные);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСпецификациюВТекущейСтроке(ТекущаяСтрока, НоваяСпецификация = Неопределено)
	
	ТекущиеДанные = ДеревоСпецификаций.НайтиПоИдентификатору(ТекущаяСтрока);
	
	ТекущиеДанные.Спецификация = НоваяСпецификация;
	
	ОбработатьИзменениеРеквизитаСтрокиДереваНаСервере(ТекущаяСтрока);
	
	РазвернутьДеревоСпецификаций(ТекущаяСтрока, ТекущиеДанные.Идентификатор);

КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДеревоСпецификаций(ТекущаяСтрока, Идентификатор)
	
	Если Элементы.ДеревоСпецификаций.ТекущаяСтрока <> ТекущаяСтрока Тогда
		
		ТекущиеДанные = НайтиСтрокуПоИдентификатору(ДеревоСпецификаций.ПолучитьЭлементы(), Идентификатор);
		Если ТекущиеДанные <> Неопределено Тогда
			Элементы.ДеревоСпецификаций.ТекущаяСтрока = ТекущиеДанные.ПолучитьИдентификатор();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсе(СПодчиненными = Истина)

	СтрокиДерева = ДеревоСпецификаций.ПолучитьЭлементы();
	Для каждого СтрокаДерева Из СтрокиДерева Цикл
		Элементы.ДеревоСпецификаций.Развернуть(СтрокаДерева.ПолучитьИдентификатор(), СПодчиненными);
	КонецЦикла; 

КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсе()

	СтрокиДерева = ДеревоСпецификаций.ПолучитьЭлементы();
	Для каждого СтрокаДерева Из СтрокиДерева Цикл
		Элементы.ДеревоСпецификаций.Свернуть(СтрокаДерева.ПолучитьИдентификатор());
	КонецЦикла; 

КонецПроцедуры

&НаКлиенте
Процедура ИзмененыПараметрыОтбора()
	
	ИзмененыПараметрыОтбора = Истина;
	Элементы.ПечатьДереваСпецификаций.Доступность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьПараметрыОтбора()
	
	УправлениеДаннымиОбИзделиях.СохранитьНастройкиОтбораДереваСпецификации(ЭтотОбъект);
	
	Элементы.ПечатьДереваСпецификаций.Доступность = Истина;
	ИзмененыПараметрыОтбора = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииЗначенияПараметраНазначенияСпецификаций()
	
	ОбновитьЗаголовокГруппыПараметровНазначенияСпецификаций(ЭтотОбъект);
	ОбновитьДанные();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьПараметрыНазначенияСпецификаций(Параметры)
	
	ЭлементРеквизит = Новый Структура;
	ЭлементРеквизит.Вставить("ПодразделениеДиспетчер",  "ПараметрНазначенияПодразделениеДиспетчер");
	ЭлементРеквизит.Вставить("НаправлениеДеятельности", "ПараметрНазначенияНаправлениеДеятельности");
	
	ВидимостьГруппы = Ложь;
	
	Для каждого КлючИЗначение из ЭлементРеквизит Цикл
		ИмяПараметра = КлючИЗначение.Ключ;
		Если УправлениеДаннымиОбИзделияхПовтИсп.ВидПараметраНазначенияИспользуется(
					Перечисления.ВидыПараметровНазначенияСпецификаций[ИмяПараметра]) Тогда
			Элементы[ИмяПараметра].Видимость      = Истина;
			Элементы[ИмяПараметра].ТолькоПросмотр = (Режим = УправлениеДаннымиОбИзделияхКлиентСервер.РежимДеревоСпецификацийЗаказа());
			ВидимостьГруппы = Истина;
			Параметры.Свойство(ИмяПараметра, ЭтотОбъект[КлючИЗначение.Значение]);
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ГруппаПараметрыНазначенияСпецификаций.Видимость = ВидимостьГруппы;
	Если ВидимостьГруппы Тогда
		ОбновитьЗаголовокГруппыПараметровНазначенияСпецификаций(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьПометкиДополнительныхКоманд(Форма)
	
	Форма.Элементы.СкрыватьЗаголовкиГруппировок.Пометка   = НЕ Форма.ДеревоВыводитьЗаголовкиГруппировок;
	Форма.Элементы.ВыводитьОперацииВместеСЭтапами.Пометка = Форма.ДеревоВыводитьОперации;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЗаголовокГруппыПараметровНазначенияСпецификаций(Форма)
	
	КоличествоЗаполнено = 0;
	
	Если ЗначениеЗаполнено(Форма.ПараметрНазначенияПодразделениеДиспетчер) Тогда
		КоличествоЗаполнено = КоличествоЗаполнено + 1;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ПараметрНазначенияНаправлениеДеятельности) Тогда
		КоличествоЗаполнено = КоличествоЗаполнено + 1;
	КонецЕсли;
	
	Форма.ПараметрНазначенияКоличествоЗаполненных = КоличествоЗаполнено;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИндексСтраницыДоступныеСпецификации()
	
	Возврат 1;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИндексСтраницыОстаткиТоваров()
	
	Возврат 2;
	
КонецФункции

&НаКлиенте
Процедура ДоступныеСпецификацииНажатие(Элемент)
	
	ИндексТекущейСтраницыПодвала = ИндексСтраницыДоступныеСпецификации();
	
	ПриПереключенииСтраницПодвала();
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиИДоступностьНажатие(Элемент)
	
	Если ЗадатьВопросОСохраненииНастройкиВыводаОстатков Тогда
		ЗадатьВопросОСохраненииНастроекВыводаОстатков();
	КонецЕсли;
	
	ИндексТекущейСтраницыПодвала = ИндексСтраницыОстаткиТоваров();
	
	ПриПереключенииСтраницПодвала();
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьПодвал(Команда)
	
	ИндексТекущейСтраницыПодвала = ?(ИндексТекущейСтраницыПодвала > 0, 0, 1);
	
	ПриПереключенииСтраницПодвала();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьСкрытьСкладскиеОстатки()
	
	ЗадатьВопросОСохраненииНастройкиВыводаОстатков = Ложь;
	ОтображатьОстаткиТоваров = НЕ ОтображатьОстаткиТоваров;
	СохранитьНастройкуВыводаОстатков(ОтображатьОстаткиТоваров);
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "ОстаткиТоваров");
	ОбновитьДанные();

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОстатки(Команда)
	
	ОтобразитьСкрытьСкладскиеОстатки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПереключенииСтраницПодвала()
	
	УправлениеДаннымиОбИзделияхКлиент.СохранитьРазвернутыеУровниДерева(ЭтотОбъект);
	НастроитьСтраницыПодвала();
	УправлениеДаннымиОбИзделияхКлиент.ВосстановитьРазвернутыеУровниДерева(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьСтраницыПодвала()
	
	ВидимостьПодвала = ИндексТекущейСтраницыПодвала > 0;
	
	Если ВидимостьПодвала <> Элементы.СтраницыПодвала.Видимость Тогда
		Элементы.СтраницыПодвала.Видимость = ВидимостьПодвала;
		Если ВидимостьПодвала Тогда
			Элементы.РазвернутьПодвал.Картинка = БиблиотекаКартинок.СтрелкаВниз;
		Иначе
			Элементы.РазвернутьПодвал.Картинка = БиблиотекаКартинок.СтрелкаВправо;
		КонецЕсли;
	КонецЕсли;
	
	ЭтоДоступныеСпецификации = ИндексТекущейСтраницыПодвала = ИндексСтраницыДоступныеСпецификации();
	ЭтоОстаткиТоваров        = ИндексТекущейСтраницыПодвала = ИндексСтраницыОстаткиТоваров();
	
	Если ЭтоДоступныеСпецификации Тогда
		Элементы.СтраницыПодвала.ТекущаяСтраница = Элементы.ГруппаСписокДоступныхСпецификаций;
	ИначеЕсли ЭтоОстаткиТоваров Тогда
		Элементы.СтраницыПодвала.ТекущаяСтраница = Элементы.ГруппаОстаткиТоваров;
	КонецЕсли;
	
	Элементы.СтраницаДоступныеСпецификации.Гиперссылка = Не ЭтоДоступныеСпецификации Или Не ВидимостьПодвала;
	Элементы.СтраницаДоступныеСпецификации.ЦветТекста = ?(Элементы.СтраницаДоступныеСпецификации.Гиперссылка, ЦветНеВыбранногоРежима, ЦветВыбранногоРежима);
	Элементы.СтраницаОстаткиТоваров.Гиперссылка = Не ЭтоОстаткиТоваров Или Не ВидимостьПодвала;
	Элементы.СтраницаОстаткиТоваров.ЦветТекста = ?(Элементы.СтраницаОстаткиТоваров.Гиперссылка , ЦветНеВыбранногоРежима, ЦветВыбранногоРежима);
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗадатьВопросОСохраненииНастроекВыводаОстатков()
	
	ТекстВопроса = НСтр("ru = 'Для дерева спецификаций доступно отображение остатков на складе по схеме обеспечения в отдельных колонках. Управлять видимостью колонок можно в подменю Еще. Вывести колонки?';
						|en = 'For the BOM tree, you can display warehouse balances by supply schemes in separate columns. To control the visibility of columns, use the More actions submenu. Display the columns?'");
	
	Обещание = ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Результат = Ждать Обещание;
	
	ОтветПолучен = Истина;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьНастройкуВыводаОстатков(Истина);
		ОтобразитьСкрытьСкладскиеОстатки();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда 
		СохранитьНастройкуВыводаОстатков(Ложь);
	Иначе
		ОтветПолучен = Ложь;
	КонецЕсли;
	
	ЗадатьВопросОСохраненииНастройкиВыводаОстатков = НЕ ОтветПолучен;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьУстановитьПараметрыДереваОстатковТоваров()
	
	ТекущиеДанные = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	
	Если ИндексТекущейСтраницыПодвала <> ИндексСтраницыОстаткиТоваров()
		ИЛИ ТекущиеДанные = Неопределено
		ИЛИ ТекущиеДанные.ВидСтроки <> ПредопределенноеЗначение("Перечисление.ВидыСтрокДереваСпецификаций.Материал") Тогда
		ОстаткиТоваров.ПолучитьЭлементы().Очистить();
		Возврат;
	КонецЕсли;
	
	ДанныеОНоменклатуре = Новый Структура;
	ДанныеОНоменклатуре.Вставить("Номенклатура");
	ДанныеОНоменклатуре.Вставить("Характеристика");
	
	Если ТекущиеДанные <> Неопределено
		И ТипЗнч(ТекущиеДанные.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		ДанныеОНоменклатуре.Номенклатура   = ТекущиеДанные.Номенклатура;
		ДанныеОНоменклатуре.Характеристика = ТекущиеДанные.Характеристика;
		
	КонецЕсли;
	
	ОбеспечениеПроизводстваКлиент.ЗаполнитьДеревоОстатковТоваров(ЭтотОбъект, ДанныеОНоменклатуре);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьНастройкуВыводаОстатков(ЗначениеНастройки)

	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ДеревоРесурсныхСпецификаций", "ОтображатьОстаткиТоваров", ЗначениеНастройки);

КонецПроцедуры 

&НаСервереБезКонтекста
Функция ЗначениеНастройкиВыводаСкладскихОстатков()

	Возврат ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ДеревоРесурсныхСпецификаций", "ОтображатьОстаткиТоваров");

КонецФункции

#КонецОбласти


