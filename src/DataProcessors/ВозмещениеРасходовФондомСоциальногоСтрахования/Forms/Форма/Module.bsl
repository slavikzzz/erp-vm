
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьУсловноеОформление();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ОбновитьСписокЗавершение", 0.5, Истина);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("ОбновитьСписокЗавершение", 0.5, Истина);
КонецПроцедуры

#Область РедактированиеМесяцаСтрокой

&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтотОбъект, "ПериодРегистрации", "ПериодРегистрацииСтрокой");
	ПодключитьОбработчикОжидания("ОбновитьСписокЗавершение", 0.5, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОповещениеЗавершения = Новый ОписаниеОповещения("ПериодРегистрацииНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтотОбъект, ЭтотОбъект, "ПериодРегистрации", "ПериодРегистрацииСтрокой",, ОповещениеЗавершения);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	ПодключитьОбработчикОжидания("ОбновитьСписокЗавершение", 0.5, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтотОбъект, "ПериодРегистрации", "ПериодРегистрацииСтрокой", Направление, Модифицированность);
	ПодключитьОбработчикОжидания("ОбновитьСписокЗавершение", 0.5, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	ПодключитьОбработчикОжидания("ОбновитьСписокЗавершение", 0.5, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	ПодключитьОбработчикОжидания("ОбновитьСписокЗавершение", 0.5, Истина);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВозмещение

&НаКлиенте
Процедура ВозмещенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Объект.Возмещения.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если Поле.Имя = Элементы.ВозмещенияПредставлениеОснования.Имя Тогда
		ПоказатьЗначение(, ТекущиеДанные.ДокументОснование);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьДокументыОтражения();
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	УстановитьПометку(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметки(Команда)
	УстановитьПометку(Ложь);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьСписокЗавершение()
	ОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	Объект.Возмещения.Очистить();
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ДатаПередачиФССВыплатыПособий = ПрямыеВыплатыПособийСоциальногоСтрахования.ДатаПередачиФССВыплатыПособий(Объект.Организация);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаПередачиФССВыплатыПособий) И ДатаПередачиФССВыплатыПособий <> '20210101' Тогда
		ТекстПодсказки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Выплата пособий передана в ФСС с %1';
				|en = 'Allowance payment is transferred to SSF since %1'"), Формат(ДатаПередачиФССВыплатыПособий, "ДЛФ=D"));
	Иначе
		ТекстПодсказки = 
			НСтр("ru = 'Выплата пособий осуществляется организацией. Дополнительное отражение не требуется.';
				|en = 'Allowance payment is performed by the company. Additional recording is not required.'");
	КонецЕсли;
	
	Элементы.Организация.РасширеннаяПодсказка.Заголовок = ТекстПодсказки;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФСС) КАК ВидСтрахования,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС) КАК СчетУчета
	|ПОМЕСТИТЬ СчетаУчетаСтраховыхВзносов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФССНесчастныеСлучаи),
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(РасчетыСФондами.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам КАК РасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаУчетаСтраховыхВзносов КАК СчетаУчета
	|		ПО РасчетыСФондами.ВидОбязательногоСтрахованияСотрудников = СчетаУчета.ВидСтрахования
	|ГДЕ
	|	Организация = &Организация И ЭтоСтраховыеВзносы
	|		И Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Активность И ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И РасчетыПоПособиям = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетовПоСредствамФСС.ПолученоИзФонда)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеДокумента.Ссылка КАК ДокументОснование,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.Ссылка) КАК ПредставлениеОснования,
	|	ДанныеДокумента.ДатаПроведенияБанком КАК ДатаВозмещения,
	|	СчетаУчета.ВидСтрахования КАК ВидСтрахования,
	|	Расшифровка.Сумма КАК СуммаВозмещения
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Расшифровка
	|		ПО Расшифровка.Ссылка = ДанныеДокумента.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиСчетовУчетаПрочихОпераций КАК НастройкиСчетовУчета
	|		ПО Расшифровка.НастройкаСчетовУчета = НастройкиСчетовУчета.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаУчетаСтраховыхВзносов КАК СчетаУчета
	|		ПО НастройкиСчетовУчета.СчетУчета = СчетаУчета.СчетУчета
	|ГДЕ
	|	ДанныеДокумента.Организация = &Организация И ДанныеДокумента.ПроведеноБанком
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств)
	|	И ДанныеДокумента.ДатаПроведенияБанком МЕЖДУ &НачалоПериода И &КонецПериода";
	
	Если НЕ ПравоДоступа("Просмотр", Метаданные.Документы.ПоступлениеБезналичныхДенежныхСредств) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДанныеДокумента.Ссылка КАК ДокументОснование", "НЕОПРЕДЕЛЕНО КАК ДокументОснование");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	ИтогиОтражения = РезультатЗапроса[1].Выбрать();
	Если ИтогиОтражения.Следующий() Тогда
		СуммаОтражена = ИтогиОтражения.Сумма;
	Иначе
		СуммаОтражена = 0;
	КонецЕсли;
	
	ТаблицаДокументов = РезультатЗапроса[2].Выгрузить();
	Объект.Возмещения.Загрузить(ТаблицаДокументов);
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		Элементы.Организация.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьАвто;
	Иначе
		Элементы.Организация.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
	КонецЕсли;
	
	Элементы.ВозмещенияСформировать.Доступность = ПериодРегистрации >= ДатаПередачиФССВыплатыПособий;

КонецПроцедуры

&НаСервере
Процедура УстановитьПометку(Значение)
	
	Для Каждого СтрокаТаблицы Из Объект.Возмещения Цикл
		СтрокаТаблицы.Пометка = Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДокументыОтражения()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Комментарий", КомментарийДокументовОтражения());
	
	Запрос.УстановитьПараметр("Таблица", Объект.Возмещения.Выгрузить(Новый Структура("Пометка", Истина)));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НАЧАЛОПЕРИОДА(ПереносДанных.Дата, ДЕНЬ) КАК Дата,
	|	ПереносДанных.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПереносДанных КАК ПереносДанных
	|ГДЕ
	|	ПереносДанных.Организация = &Организация
	|	И ПереносДанных.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПереносДанных.Комментарий ПОДОБНО &Комментарий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.ВидСтрахования,
	|	Таблица.ДатаВозмещения,
	|	Таблица.СуммаВозмещения
	|ПОМЕСТИТЬ ВТСуммыВозмещений
	|ИЗ &Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатаВозмещения КАК Период,
	|	ВидСтрахования КАК ВидОбязательногоСтрахованияСотрудников,
	|	СуммаВозмещения КАК Сумма
	|ИЗ ВТСуммыВозмещений
	|ИТОГИ ПО Период";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ДокументыОтражения = Новый Соответствие;
	
	Выборка = Результат[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ДокументыОтражения.Получить(Выборка.Дата) = Неопределено Тогда
			ДокументыОтражения.Вставить(Выборка.Дата, Выборка.Ссылка);
		Иначе
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.УстановитьПометкуУдаления(Истина);
		КонецЕсли;
	КонецЦикла;
	
	РасчетыСФондом = РегистрыНакопления.РасчетыСФондамиПоСтраховымВзносам.СоздатьНаборЗаписей().ВыгрузитьКолонки(
		"Период, ВидОбязательногоСтрахованияСотрудников, Сумма");
	
	Выборка = Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		ДокументСсылка = ДокументыОтражения.Получить(Выборка.Период);
		Если ЗначениеЗаполнено(ДокументСсылка) Тогда
			ДокументыОтражения.Удалить(Выборка.Период);
			ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
			ДокументОбъект.ПометкаУдаления = Ложь;
		Иначе
			ДокументОбъект = Документы.ПереносДанных.СоздатьДокумент();
			ДокументОбъект.Дата = КонецДня(Выборка.Период);
			ДокументОбъект.Комментарий = КомментарийДокументовОтражения();
			ДокументОбъект.ПериодРегистрации = НачалоМесяца(Выборка.Период);
			ДокументОбъект.Организация = Объект.Организация;
			ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
			ДокументОбъект.УстановитьНовыйНомер();
		КонецЕсли;
		
		Если ДокументОбъект.ТаблицаРегистров.Найти("РасчетыСФондамиПоСтраховымВзносам", "Имя") = Неопределено Тогда
			ДокументОбъект.ТаблицаРегистров.Добавить().Имя = "РасчетыСФондамиПоСтраховымВзносам";
		КонецЕсли;
		
		ВыборкаСтрок = Выборка.Выбрать();
		Пока ВыборкаСтрок.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(РасчетыСФондом.Добавить(), ВыборкаСтрок);
		КонецЦикла;
		
		УчетСтраховыхВзносов.СформироватьВозмещениеРасходовПоСоциальномуСтрахованию(
			ДокументОбъект.Движения, Ложь, Объект.Организация, РасчетыСФондом);
		
		ДокументОбъект.Записать();
		
		РасчетыСФондом.Очистить();
		
	КонецЦикла;
	
	Для Каждого ЭлементСписка Из ДокументыОтражения Цикл
		ДокументОбъект = ЭлементСписка.Значение.ПолучитьОбъект();
		ДокументОбъект.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КомментарийДокументовОтражения()
	Возврат НСтр("ru = '##ОтражениеВозмещенийОтФСС# Создан автоматически';
				|en = '##ОтражениеВозмещенийОтФСС# Created automatically'");
КонецФункции

#КонецОбласти
