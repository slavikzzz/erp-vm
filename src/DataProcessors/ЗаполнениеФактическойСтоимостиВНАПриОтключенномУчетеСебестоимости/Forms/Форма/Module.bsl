
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПроверитьНаличиеДанныхКОбработке();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьСтоимость(Команда)
	
	ДлительнаяОперация = ЗаполнитьСтоимостьНаСервере();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыполненияЗадания", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьНаличиеДанныхКОбработке()
	
	ИспользоватьУчетСебестоимости = ПолучитьФункциональнуюОпцию("ИспользоватьУчетСебестоимости");
	ДатаНачалаУчетаСебестоимости = Константы.ДатаНачалаУчетаСебестоимости.Получить();
	
	Если ИспользоватьУчетСебестоимости
		И НЕ ЗначениеЗаполнено(ДатаНачалаУчетаСебестоимости) Тогда
		
		Элементы.ИнформационнаяНадпись.Заголовок = НСтр("ru = 'При включенном учете себестоимости заполнение стоимости не требуется.';
														|en = 'When the cost accounting is off, filling of the cost is not required.'");
		Элементы.ФормаЗаполнитьСтоимость.Доступность = Ложь;
			
		Возврат; 
	КонецЕсли;
	
	Если НЕ Обработки.ЗаполнениеФактическойСтоимостиВНАПриОтключенномУчетеСебестоимости.ЕстьДокументыКОбработке() Тогда
		
		Элементы.ИнформационнаяНадпись.Заголовок = НСтр("ru = 'Нет документов, в которых требуется заполнить стоимость.';
														|en = 'No documents where filling of the cost is required.'");
		Элементы.ФормаЗаполнитьСтоимость.Доступность = Ложь;
		
		Возврат;
		
	КонецЕсли;
	
	Если ИспользоватьУчетСебестоимости Тогда
		
		ЗаголовокНадписи = НСтр("ru = 'Учет себестоимости ведется с %1.
                                 |Обнаружены документы до этой даты, в которых стоимость, указанная в документе, отличается от фактической.
                                 |Требуется заполнить фактическую стоимость в документе по данным расчета стоимости.';
                                 |en = 'Cost is accounted since %1.
                                 | Documents before this date are found where the cost specified in the document is different from the actual cost.
                                 |Fill the actual cost in the document by cost calculation data.'");
		
		ЗаголовокНадписи = СтрШаблон(ЗаголовокНадписи, Формат(ДатаНачалаУчетаСебестоимости, "ДЛФ=D"));
		
	Иначе
		
		ЗаголовокНадписи = НСтр("ru = 'Учет себестоимости отключен.
                                 |Обнаружены документы, в которых стоимость, указанная в документе, отличается от фактической.
                                 |Требуется заполнить фактическую стоимость в документе по данным расчета стоимости.';
                                 |en = 'Cost accounting is off.
                                 |Documents where the cost specified in the document is different from the actual cost are found.
                                 |Fill the actual cost in the document by cost calculation data.'");
		
	КонецЕсли; 
	
	Элементы.ИнформационнаяНадпись.Заголовок = ЗаголовокНадписи;
	
	Элементы.ФормаЗаполнитьСтоимость.Доступность = Истина;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьСтоимостьНаСервере()
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.НаименованиеФоновогоЗадания = 
		Метаданные.Обработки.ЗаполнениеФактическойСтоимостиВНАПриОтключенномУчетеСебестоимости.Синоним;
	
	Результат = ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.ЗаполнениеФактическойСтоимостиВНАПриОтключенномУчетеСебестоимости.ЗаполнитьСтоимость",
		Новый Структура,
		ПараметрыВыполненияВФоне);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПослеВыполненияЗадания(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
		Возврат;
	КонецЕсли;
	
	ПослеВыполненияЗаданияНаСервере(Результат.АдресРезультата);
	
КонецПроцедуры

&НаСервере
Процедура ПослеВыполненияЗаданияНаСервере(АдресРезультата)

	Если ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
		
		ТекстОшибки = ПолучитьИзВременногоХранилища(АдресРезультата);
		
		Если ТекстОшибки <> Неопределено Тогда
			
			ЗаголовокНадписи = НСтр("ru = 'При заполнении стоимости возникла ошибка:
                                     |%1';
                                     |en = 'While the cost is being filled in, the error occurred:
                                     |%1'");
			
			ЗаголовокНадписи = СтрШаблон(ЗаголовокНадписи, ТекстОшибки);
			Элементы.ИнформационнаяНадпись.Заголовок = ЗаголовокНадписи;
			
			Возврат;
		КонецЕсли; 
		
	КонецЕсли; 
	
	ПроверитьНаличиеДанныхКОбработке();

КонецПроцедуры

#КонецОбласти
