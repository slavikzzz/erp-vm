#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Проверяет наличие документов к обработке.
// 
// Возвращаемое значение:
//  Булево - Истина, если есть документы к обработке.
//
Функция ЕстьДокументыКОбработке() Экспорт

	Результат = ДокументыКОбработке(1);
	
	Возврат НЕ Результат.Пустой();

КонецФункции 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДокументыКОбработке(Первые)

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|	СтоимостьОС.Регистратор КАК Регистратор,
	|	""ПринятиеКУчетуОС2_4"" КАК ИмяДокумента
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4.ОС КАК ТаблицаОС
	|		ПО (ТаблицаОС.Ссылка = СтоимостьОС.Регистратор)
	|			И (ТаблицаОС.ОсновноеСредство = СтоимостьОС.ОсновноеСредство)
	|ГДЕ
	|	СтоимостьОС.РасчетСтоимости
	|	И СтоимостьОС.Активность
	|	И СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И СтоимостьОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|	И (СтоимостьОС.Период < &ДатаНачалаУчетаСебестоимости
	|			ИЛИ &ДатаНачалаУчетаСебестоимости = ДАТАВРЕМЯ(1, 1, 1))
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьОС.Регистратор,
	|	СтоимостьОС.ОсновноеСредство
	|
	|ИМЕЮЩИЕ
	|	(МАКСИМУМ(ТаблицаОС.СтоимостьБУ) <> СУММА(СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ)
	|		ИЛИ МАКСИМУМ(ТаблицаОС.СтоимостьНУ) <> СУММА(СтоимостьОС.СтоимостьНУ + СтоимостьОС.СтоимостьНУЦФ)
	|		ИЛИ МАКСИМУМ(ТаблицаОС.СтоимостьПР) <> СУММА(СтоимостьОС.СтоимостьПР + СтоимостьОС.СтоимостьПРЦФ)
	|		ИЛИ МАКСИМУМ(ТаблицаОС.СтоимостьВР) <> СУММА(СтоимостьОС.СтоимостьВР + СтоимостьОС.СтоимостьВРЦФ)
	|		ИЛИ МАКСИМУМ(ТаблицаОС.СтоимостьУУ) <> СУММА(СтоимостьОС.Стоимость))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|	СтоимостьОС.Регистратор,
	|	""МодернизацияОС2_4"" КАК ИмяДокумента
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС2_4.ОС КАК ТаблицаОС
	|		ПО (ТаблицаОС.Ссылка = СтоимостьОС.Регистратор)
	|			И (ТаблицаОС.ОсновноеСредство = СтоимостьОС.ОсновноеСредство)
	|ГДЕ
	|	СтоимостьОС.РасчетСтоимости
	|	И СтоимостьОС.Активность
	|	И СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И СтоимостьОС.Регистратор ССЫЛКА Документ.МодернизацияОС2_4
	|	И (СтоимостьОС.Период < &ДатаНачалаУчетаСебестоимости
	|			ИЛИ &ДатаНачалаУчетаСебестоимости = ДАТАВРЕМЯ(1, 1, 1))
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьОС.Регистратор,
	|	СтоимостьОС.ОсновноеСредство
	|
	|ИМЕЮЩИЕ
	|	(МАКСИМУМ(ТаблицаОС.СтоимостьБУ) <> СУММА(СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ)
	|		ИЛИ МАКСИМУМ(ТаблицаОС.СтоимостьНУ) <> СУММА(СтоимостьОС.СтоимостьНУ + СтоимостьОС.СтоимостьНУЦФ)
	|		ИЛИ МАКСИМУМ(ТаблицаОС.СтоимостьПР) <> СУММА(СтоимостьОС.СтоимостьПР + СтоимостьОС.СтоимостьПРЦФ)
	|		ИЛИ МАКСИМУМ(ТаблицаОС.СтоимостьВР) <> СУММА(СтоимостьОС.СтоимостьВР + СтоимостьОС.СтоимостьВРЦФ)
	|		ИЛИ МАКСИМУМ(ТаблицаОС.СтоимостьУУ) <> СУММА(СтоимостьОС.Стоимость))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|	СтоимостьНМА.Регистратор,
	|	""ПринятиеКУчетуНМА2_4"" КАК ИмяДокумента
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуНМА2_4 КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = СтоимостьНМА.Регистратор)
	|			И (ДанныеДокумента.НематериальныйАктив = СтоимостьНМА.НематериальныйАктив)
	|ГДЕ
	|	СтоимостьНМА.РасчетСтоимости
	|	И СтоимостьНМА.Активность
	|	И СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И СтоимостьНМА.Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА2_4
	|	И (СтоимостьНМА.Период < &ДатаНачалаУчетаСебестоимости
	|			ИЛИ &ДатаНачалаУчетаСебестоимости = ДАТАВРЕМЯ(1, 1, 1))
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьНМА.Регистратор,
	|	СтоимостьНМА.НематериальныйАктив
	|
	|ИМЕЮЩИЕ
	|	(МАКСИМУМ(ДанныеДокумента.ПервоначальнаяСтоимостьБУ) <> СУММА(СтоимостьНМА.СтоимостьРегл + СтоимостьНМА.СтоимостьЦФ)
	|		ИЛИ МАКСИМУМ(ДанныеДокумента.ПервоначальнаяСтоимостьНУ) <> СУММА(СтоимостьНМА.СтоимостьНУ + СтоимостьНМА.СтоимостьНУЦФ)
	|		ИЛИ МАКСИМУМ(ДанныеДокумента.ПервоначальнаяСтоимостьПР) <> СУММА(СтоимостьНМА.СтоимостьПР + СтоимостьНМА.СтоимостьПРЦФ)
	|		ИЛИ МАКСИМУМ(ДанныеДокумента.ПервоначальнаяСтоимостьВР) <> СУММА(СтоимостьНМА.СтоимостьВР + СтоимостьНМА.СтоимостьВРЦФ)
	|		ИЛИ МАКСИМУМ(ДанныеДокумента.ПервоначальнаяСтоимостьУУ) <> СУММА(СтоимостьНМА.Стоимость))";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗЛИЧНЫЕ ПЕРВЫЕ 1", "РАЗЛИЧНЫЕ ПЕРВЫЕ " + Формат(Первые, "ЧГ="));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДатаНачалаУчетаСебестоимости", Константы.ДатаНачалаУчетаСебестоимости.Получить());
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьСтоимость(Параметры = "", АдресХранилища = "") Экспорт

	ИспользоватьУчетСебестоимости = ПолучитьФункциональнуюОпцию("ИспользоватьУчетСебестоимости");
	ДатаНачалаУчетаСебестоимости = Константы.ДатаНачалаУчетаСебестоимости.Получить();
	
	Если ИспользоватьУчетСебестоимости
		И НЕ ЗначениеЗаполнено(ДатаНачалаУчетаСебестоимости) Тогда
		Возврат; 
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстОшибки = Неопределено;
	
	Пока Истина Цикл
	
		Результат = ДокументыКОбработке(100);
		
		Если Результат.Пустой() Тогда
			Прервать;
		КонецЕсли; 
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НачатьТранзакцию();
			
			Попытка
				
				Если Выборка.ИмяДокумента = "ПринятиеКУчетуОС2_4" Тогда
					ОбновитьДокументПринятиеКУчетуОС(Выборка)
				ИначеЕсли Выборка.ИмяДокумента = "МодернизацияОС2_4" Тогда
					ОбновитьДокументМодернизацияОС(Выборка)
				Иначе
					ОбновитьДокументПринятиеКУчетуНМА(Выборка)
				КонецЕсли; 
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				
				ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				
				Прервать;
				
			КонецПопытки;
			
		КонецЦикла;
		
		Если ТекстОшибки <> Неопределено Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ИспользоватьУчетСебестоимости Тогда
		УдалитьЗаданияКРасчетуСтоимости();
	КонецЕсли; 
	
	ПоместитьВоВременноеХранилище(ТекстОшибки, АдресХранилища);
	
КонецПроцедуры

Процедура ОбновитьДокументПринятиеКУчетуОС(ВыборкаДокумент)

	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("Документ.ПринятиеКУчетуОС2_4");
	ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаДокумент.Регистратор);
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СтоимостьОС.НаборЗаписей");
	ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаДокумент.Регистратор);
	
	Блокировка.Заблокировать(); 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ) КАК СтоимостьБУ,
	|	СУММА(СтоимостьОС.СтоимостьНУ + СтоимостьОС.СтоимостьНУЦФ) КАК СтоимостьНУ,
	|	СУММА(СтоимостьОС.СтоимостьПР + СтоимостьОС.СтоимостьПРЦФ) КАК СтоимостьПР,
	|	СУММА(СтоимостьОС.СтоимостьВР + СтоимостьОС.СтоимостьВРЦФ) КАК СтоимостьВР,
	|	СУММА(СтоимостьОС.Стоимость) КАК СтоимостьУУ
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|ГДЕ
	|	СтоимостьОС.РасчетСтоимости
	|	И СтоимостьОС.Активность
	|	И СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И СтоимостьОС.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьОС.ОсновноеСредство";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Регистратор", ВыборкаДокумент.Регистратор);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ДокументОбъект = ВыборкаДокумент.Регистратор.ПолучитьОбъект(); // ДокументОбъект.ПринятиеКУчетуОС2_4 - 
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеСтроки = ДокументОбъект.ОС.Найти(Выборка.ОсновноеСредство, "ОсновноеСредство");
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);
		
	КонецЦикла;
	
	ДокументОбъект.Записать();
	
КонецПроцедуры

Процедура ОбновитьДокументМодернизацияОС(ВыборкаДокумент)

	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("Документ.МодернизацияОС2_4");
	ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаДокумент.Регистратор);
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СтоимостьОС.НаборЗаписей");
	ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаДокумент.Регистратор);
	
	Блокировка.Заблокировать(); 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ) КАК СтоимостьБУ,
	|	СУММА(СтоимостьОС.СтоимостьНУ + СтоимостьОС.СтоимостьНУЦФ) КАК СтоимостьНУ,
	|	СУММА(СтоимостьОС.СтоимостьПР + СтоимостьОС.СтоимостьПРЦФ) КАК СтоимостьПР,
	|	СУММА(СтоимостьОС.СтоимостьВР + СтоимостьОС.СтоимостьВРЦФ) КАК СтоимостьВР,
	|	СУММА(СтоимостьОС.Стоимость) КАК СтоимостьУУ
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|ГДЕ
	|	СтоимостьОС.РасчетСтоимости
	|	И СтоимостьОС.Активность
	|	И СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И СтоимостьОС.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьОС.ОсновноеСредство";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Регистратор", ВыборкаДокумент.Регистратор);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ДокументОбъект = ВыборкаДокумент.Регистратор.ПолучитьОбъект(); // ДокументОбъект.МодернизацияОС2_4 - 
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеСтроки = ДокументОбъект.ОС.Найти(Выборка.ОсновноеСредство, "ОсновноеСредство");
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);
		
	КонецЦикла;
	
	ДокументОбъект.Записать();
	
КонецПроцедуры

Процедура ОбновитьДокументПринятиеКУчетуНМА(ВыборкаДокумент)

	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("Документ.ПринятиеКУчетуНМА2_4");
	ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаДокумент.Регистратор);
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СтоимостьНМА.НаборЗаписей");
	ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаДокумент.Регистратор);
	
	Блокировка.Заблокировать(); 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СУММА(СтоимостьНМА.СтоимостьРегл + СтоимостьНМА.СтоимостьЦФ) КАК ПервоначальнаяСтоимостьБУ,
	|	СУММА(СтоимостьНМА.СтоимостьНУ + СтоимостьНМА.СтоимостьНУЦФ) КАК ПервоначальнаяСтоимостьНУ,
	|	СУММА(СтоимостьНМА.СтоимостьПР + СтоимостьНМА.СтоимостьПРЦФ) КАК ПервоначальнаяСтоимостьПР,
	|	СУММА(СтоимостьНМА.СтоимостьВР + СтоимостьНМА.СтоимостьВРЦФ) КАК ПервоначальнаяСтоимостьВР,
	|	СУММА(СтоимостьНМА.Стоимость) КАК ПервоначальнаяСтоимостьУУ
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|ГДЕ
	|	СтоимостьНМА.РасчетСтоимости
	|	И СтоимостьНМА.Активность
	|	И СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И СтоимостьНМА.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьНМА.НематериальныйАктив
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СтоимостьНМА.СтоимостьРегл + СтоимостьНМА.СтоимостьЦФ) <> 0
	|		ИЛИ СУММА(СтоимостьНМА.СтоимостьНУ + СтоимостьНМА.СтоимостьНУЦФ) <> 0
	|		ИЛИ СУММА(СтоимостьНМА.СтоимостьПР + СтоимостьНМА.СтоимостьПРЦФ) <> 0
	|		ИЛИ СУММА(СтоимостьНМА.СтоимостьВР + СтоимостьНМА.СтоимостьВРЦФ) <> 0
	|		ИЛИ СУММА(СтоимостьНМА.Стоимость) <> 0)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Регистратор", ВыборкаДокумент.Регистратор);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	ДокументОбъект = ВыборкаДокумент.Регистратор.ПолучитьОбъект(); // ДокументОбъект.ПринятиеКУчетуНМА2_4 - 
	ЗаполнитьЗначенияСвойств(ДокументОбъект, Выборка);

	ДокументОбъект.Записать();
	
КонецПроцедуры

Процедура УдалитьЗаданияКРасчетуСтоимости()

	НаборЗаписей = РегистрыСведений.ЗаданияКРасчетуСтоимостиВНА.СоздатьНаборЗаписей();
	НаборЗаписей.Записать();
	
КонецПроцедуры
 
#КонецОбласти

#КонецЕсли