#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает текст запроса динамического списка полуфабрикатов, используется в форме документа "План производства"
//
// Параметры:
//  СписокОтборов	 - Структура	 - список предопределенных отборов динамического списка
// 
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаДинамическогоСписокПолуфабрикатов(СписокОтборов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПланыПроизводства.Регистратор КАК Регистратор,
	|	ПланыПроизводства.НомерСтроки КАК НомерСтроки,
	|
	|	ПланыПроизводства.ПланПроизводства КАК ПланПроизводства,
	|	ПланыПроизводства.Период           КАК Период,
	|	ПланыПроизводства.Номенклатура     КАК Номенклатура,
	|	ПланыПроизводства.Характеристика   КАК Характеристика,
	|	ПланыПроизводства.Назначение       КАК Назначение,
	|	ПланыПроизводства.Спецификация     КАК Спецификация,
	|
	|	ПланыПроизводства.ДатаВыпускаПолуфабриката КАК ДатаВыпускаПолуфабриката,
	|	ПланыПроизводства.ДатаЗапускаВыпуска КАК ДатаЗапускаВыпуска,
	|
	|	ПланыПроизводства.Количество КАК Количество,
	|	ПланыПроизводства.КЗаказу КАК КЗаказу,
	|
	|	ПланыПроизводства.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ВЫБОР
	|		КОГДА ПланыПроизводства.Номенклатура.ИспользованиеХарактеристик В (
	|												ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
	|												ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры),
	|												ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                          КАК ХарактеристикиИспользуются,
	|
	|	ПланыПроизводства.РучнаяКорректировка КАК РучнаяКорректировка,
	|	ПланыПроизводства.ДатаКорректировки   КАК ДатаКорректировки,
	|	ПланыПроизводства.АвторКорректировки  КАК АвторКорректировки,
	|	ПланыПроизводства.Комментарий         КАК Комментарий
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
	|ГДЕ
	|	ПланыПроизводства.ПланПроизводства = &ПланПроизводства И ПланыПроизводства.ЭтоПолуфабрикат
	|	И &ЕстьОтборПоВхождениямПолуфабриката";
	
	Если СписокОтборов.Свойство("ЕстьОтборПоВхождениямПолуфабриката") И СписокОтборов.ЕстьОтборПоВхождениямПолуфабриката Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПланыПроизводства.Регистратор КАК Регистратор,
		|	ПланыПроизводства.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВтОтборПоВхождениямПолуфабриката
		|ИЗ
		|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПланыПотребленияМатериалов КАК ПланыПотребленияМатериалов
		|		ПО ПланыПроизводства.ПланПроизводства = ПланыПотребленияМатериалов.ПланПроизводства
		|		 И ПланыПроизводства.Период           = ПланыПотребленияМатериалов.ДатаПроизводства
		|		 И ПланыПроизводства.Спецификация     = ПланыПотребленияМатериалов.СпецификацияПродукции
		|		 И ПланыПроизводства.Назначение       = ПланыПотребленияМатериалов.НазначениеПродукции
		|		 И ПланыПроизводства.Характеристика   = ПланыПотребленияМатериалов.ХарактеристикаПродукции
		|ГДЕ
		|	ПланыПотребленияМатериалов.ПланПроизводства = &ПланПроизводства
		|	И ПланыПотребленияМатериалов.Период         = &ДатаВыпускаПолуфабриката
		|	И ПланыПотребленияМатериалов.Назначение     = &Назначение
		|	И ПланыПотребленияМатериалов.Номенклатура   = &Номенклатура
		|	И ПланыПотребленияМатериалов.Характеристика = &Характеристика
		|" + "
		|;
		|" + ТекстЗапроса;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьОтборПоВхождениямПолуфабриката", "
			|(ПланыПроизводства.Регистратор, ПланыПроизводства.НомерСтроки) 
			|В 
			|(ВЫБРАТЬ
			|		ТаблицаОтбора.Регистратор КАК Регистратор,
			|		ТаблицаОтбора.НомерСтроки КАК НомерСтроки
			|	ИЗ
			|		ВтОтборПоВхождениямПолуфабриката КАК ТаблицаОтбора
			|)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьОтборПоВхождениямПолуфабриката", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса
	
КонецФункции

// Рассчитывает количество полуфабрикатов, используется при отображении количества строк в динамическом списке полуфабрикатов
//
// Параметры:
//  ПланПроизводства - ДокументСсылка.ПланПроизводства - ссылка на документ план производства
// 
// Возвращаемое значение:
//  Число - количество строк 
//
Функция РассчитатьКоличествоПолуфабрикатов(ПланПроизводства) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоСтрок
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
	|ГДЕ
	|	ПланыПроизводства.ПланПроизводства = &ПланПроизводства
	|	И ПланыПроизводства.ЭтоПолуфабрикат
	|");
	Запрос.УстановитьПараметр("ПланПроизводства", ПланПроизводства);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.КоличествоСтрок;
	
КонецФункции

// Возвращает данные регистра по заданному плану.
//
// Параметры:
//  Ссылка					 - ДокументСсылка.ПланПроизводства - план, данные которого необходимо прочитать.
//  ПолучитьПродукцию		 - Булево - Истина, если требуется получить план выпуска готовой продукции.
//  ПолучитьПолуфабрикаты	 - Булево - Истина, если требуется получить план выпуска производимых полуфабрикатов.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - данные регистра.
//
Функция ПрочитатьПланПроизводства(Ссылка, ПолучитьПродукцию = Истина, ПолучитьПолуфабрикаты = Истина) Экспорт
	
	Если НЕ ПолучитьПродукцию И НЕ ПолучитьПолуфабрикаты Тогда
		ТекстИсключения = НСтр("ru = 'Ошибка чтения данных плана производства. В процедуру переданы некорректные параметры.';
								|en = 'An error occurred while reading production plan data. Invalid parameters were passed to the procedure.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПланыПроизводства.*
		|ИЗ
		|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
		|ГДЕ
		|	ПланыПроизводства.Регистратор = &Ссылка
		|	И &ПродукцияПолуфабрикат";
		
	Если ПолучитьПродукцию И ПолучитьПолуфабрикаты Тогда
		ТекстУсловия = "ИСТИНА";
	ИначеЕсли ПолучитьПродукцию Тогда
		ТекстУсловия = "ПланыПроизводства.ЭтоПолуфабрикат = ЛОЖЬ";
	ИначеЕсли ПолучитьПолуфабрикаты Тогда
		ТекстУсловия = "ПланыПроизводства.ЭтоПолуфабрикат = ИСТИНА";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПродукцияПолуфабрикат", ТекстУсловия);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает список продукции, потребляющей заданный полуфабрикат.
//
// Параметры:
//  ПланПроизводства - ДокументСсылка.ПланПроизводства			 - план производства
//  ДатаПотребности	 - Дата										 - дата потребности (дата производства, дата выпуска полуфабриката)
//  Назначение		 - СправочникСсылка.Назначения				 - назначение
//  Номенклатура	 - СправочникСсылка.Номенклатура			 - номенклатура
//  Характеристика	 - СправочникСсылка.ХарактеристикиНоменклатуры	 - характеристика
// 
// Возвращаемое значение:
//  ТаблицаЗначений - данные о потребителях полуфабриката.
//
Функция ПолуфабрикатВходитВПродукцию(ПланПроизводства, ДатаПотребности, Назначение, Номенклатура, Характеристика) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПланыПроизводства.Номенклатура КАК Номенклатура,
	|	ПланыПроизводства.Характеристика КАК Характеристика,
	|	ПланыПроизводства.Назначение КАК Назначение,
	|	ПланыПроизводства.Спецификация КАК Спецификация
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПланыПотребленияМатериалов КАК ПланыПотребленияМатериалов
	|		ПО ПланыПроизводства.ПланПроизводства = ПланыПотребленияМатериалов.ПланПроизводства
	|		 И ПланыПроизводства.Период           = ПланыПотребленияМатериалов.ДатаПроизводства
	|		 И ПланыПроизводства.Спецификация     = ПланыПотребленияМатериалов.СпецификацияПродукции
	|		 И ПланыПроизводства.Назначение       = ПланыПотребленияМатериалов.НазначениеПродукции
	|		 И ПланыПроизводства.Характеристика   = ПланыПотребленияМатериалов.ХарактеристикаПродукции
	|ГДЕ
	|	ПланыПотребленияМатериалов.ПланПроизводства = &ПланПроизводства
	|	И ПланыПотребленияМатериалов.Период         = &ДатаПотребности
	|	И ПланыПотребленияМатериалов.Назначение     = &Назначение
	|	И ПланыПотребленияМатериалов.Номенклатура   = &Номенклатура
	|	И ПланыПотребленияМатериалов.Характеристика = &Характеристика
	|	И ( ПланыПотребленияМатериалов.ЭтоПолуфабрикат
	|		И НЕ ПланыПроизводства.ЭтоПолуфабрикат )
	|");
	Запрос.УстановитьПараметр("ПланПроизводства", ПланПроизводства);
	Запрос.УстановитьПараметр("ДатаПотребности",  ДатаПотребности);
	Запрос.УстановитьПараметр("Назначение",       Назначение);
	Запрос.УстановитьПараметр("Номенклатура",     Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",   Характеристика);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Подразделение)
	|	И ЗначениеРазрешено(Сценарий)
	|	И ЗначениеРазрешено(ВидПлана)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ НЕ УТКА

#Область Корректировка

Процедура СохранитьРучныеКорректировкиПриЗаписи(Регистратор, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтарыеДвижения.ПланПроизводства КАК ПланПроизводства,
	|	СтарыеДвижения.Номенклатура КАК Номенклатура,
	|	СтарыеДвижения.Характеристика КАК Характеристика,
	|	СтарыеДвижения.Назначение КАК Назначение,
	|	СтарыеДвижения.Спецификация КАК Спецификация,
	|	ВЫБОР
	|		КОГДА СтарыеДвижения.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Разборка)
	|			ТОГДА СтарыеДвижения.Период
	|		ИНАЧЕ СтарыеДвижения.ДатаЗапускаВыпуска
	|	КОНЕЦ КАК ДатаЗапуска,
	|	ВЫБОР
	|		КОГДА СтарыеДвижения.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Разборка)
	|			ТОГДА СтарыеДвижения.ДатаЗапускаВыпуска
	|		ИНАЧЕ СтарыеДвижения.Период
	|	КОНЕЦ КАК ДатаВыпуска,
	|	СтарыеДвижения.ДатаВыпускаПолуфабриката КАК ДатаВыпускаПолуфабриката,
	|	СтарыеДвижения.ЭтоПолуфабрикат КАК ЭтоПолуфабрикат,
	|	СтарыеДвижения.Количество КАК Количество,
	|	СтарыеДвижения.КЗаказу КАК КЗаказу,
	|	СтарыеДвижения.ДатаКорректировки КАК ДатаКорректировки,
	|	СтарыеДвижения.АвторКорректировки КАК АвторКорректировки,
	|	СтарыеДвижения.Комментарий КАК Комментарий
	|ИЗ
	|	СписокКорректировокПередЗаписью КАК СтарыеДвижения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПланыПроизводства КАК НовыеДвижения
	|		ПО НовыеДвижения.Регистратор = &Регистратор
	|			И СтарыеДвижения.Период = НовыеДвижения.Период
	|			И СтарыеДвижения.Сценарий = НовыеДвижения.Сценарий
	|			И СтарыеДвижения.Номенклатура = НовыеДвижения.Номенклатура
	|			И СтарыеДвижения.Характеристика = НовыеДвижения.Характеристика
	|			И СтарыеДвижения.Подразделение = НовыеДвижения.Подразделение
	|			И СтарыеДвижения.ПланПроизводства = НовыеДвижения.ПланПроизводства
	|			И СтарыеДвижения.Спецификация = НовыеДвижения.Спецификация
	|			И СтарыеДвижения.Назначение = НовыеДвижения.Назначение
	|			И СтарыеДвижения.ДатаВыпускаПолуфабриката = НовыеДвижения.ДатаВыпускаПолуфабриката
	|			И СтарыеДвижения.ДатаЗапускаВыпуска = НовыеДвижения.ДатаЗапускаВыпуска
	|			И СтарыеДвижения.ЭтоПолуфабрикат = НовыеДвижения.ЭтоПолуфабрикат
	|			И СтарыеДвижения.РучнаяКорректировка = НовыеДвижения.РучнаяКорректировка
	|ГДЕ
	|	СтарыеДвижения.РучнаяКорректировка И НовыеДвижения.Номенклатура ЕСТЬ NULL");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	
	РегистрыСведений.ОтменаКорректировокПланаПроизводства.ЗаписатьКорректировки(Запрос.Выполнить().Выгрузить(), Регистратор);
	
КонецПроцедуры

#КонецОбласти

//-- НЕ УТКА

#КонецОбласти

#КонецЕсли
