#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Собирает структуру из текстов запросов для дальнейшей проверки даты запрета.
// 
// Параметры:
// 	Запрос - Запрос - Запрос по проверке даты запрета, можно установить параметры
// Возвращаемое значение:
// 	Структура - см. ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов
Функция ТекстЗапросаКонтрольДатыЗапрета(Запрос) Экспорт
	ИмяРегистра = Метаданные.РегистрыНакопления.ПодарочныеСертификаты.Имя;
	ИмяТаблицыИзменений = "ТаблицаИзмененийПодарочныеСертификаты"; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Период КАК Период,
	|	НЕОПРЕДЕЛЕНО КАК Организация,
	|	&ИмяРегистра КАК ИмяРегистра,
	|	&Раздел КАК РазделДатыЗапрета
	|ИЗ
	|	&ИмяТаблицыИзменений КАК Таблица
	|";
	
	ИмяПараметраИмяРегистра = "ИмяРегистра" + ИмяРегистра;
	ИмяПараметраРаздел = "Раздел" + ИмяРегистра;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ИмяРегистра", "&" + ИмяПараметраИмяРегистра);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Раздел", "&" + ИмяПараметраРаздел);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ИмяТаблицыИзменений", ИмяТаблицыИзменений);
	
	Запрос.УстановитьПараметр(ИмяПараметраИмяРегистра, ИмяРегистра);
	Запрос.УстановитьПараметр(ИмяПараметраРаздел, "ФинансовыйКонтур");
	
	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	Возврат СтруктураТекстовЗапросов

КонецФункции

//++ НЕ УТ

// Заполняет параметры отражения движений регистра в финансовом учете
//
// Параметры:
//  МетаданныеРегистра - ОбъектМетаданныхРегистрНакопления - Метаданные регистра накопления
//  РегистрацияКОтражению - Булево - Признак получения параметров для регистрации к отражению в учете
//
// Возвращаемое значение:
// 	см. ФинансовыйУчетПоДаннымБалансовыхРегистров.ПараметрыОтраженияДвиженийВФинансовомУчете
//
Функция ПараметрыОтраженияДвиженийВФинансовомУчете(МетаданныеРегистра = Неопределено, РегистрацияКОтражению = Ложь) Экспорт
	
	ПараметрыОтражения = ФинансовыйУчетПоДаннымБалансовыхРегистров.ПараметрыОтраженияДвиженийВФинансовомУчете(РегистрацияКОтражению);
	ПараметрыОтражения.ПутьКДаннымОрганизация = СтрЗаменить(
		"ВЫБОР
		|		КОГДА ПсевдонимИсточникаДанных.ПодарочныйСертификат.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА ПсевдонимИсточникаДанных.ПодарочныйСертификат.Организация
		|		КОГДА ПсевдонимИсточникаДанных.ПодарочныйСертификат.Владелец.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА ПсевдонимИсточникаДанных.ПодарочныйСертификат.Владелец.Организация
		|		ИНАЧЕ ПсевдонимИсточникаДанных.Регистратор.Организация
		|	КОНЕЦ",
		"ПсевдонимИсточникаДанных",
		ПараметрыОтражения.ПсевдонимИсточникаДанных);
	
	Если РегистрацияКОтражению Тогда
		Возврат ПараметрыОтражения;
	КонецЕсли;
	
	ПараметрыОтражения.ИнверсияДвижений = Истина;
	ПараметрыОтражения.ПутьКДаннымВалюта = "ПодарочныйСертификат.Владелец.Валюта";
	ПараметрыОтражения.РесурсыРегл.Добавить("0");
	ПараметрыОтражения.РесурсыРегл.Добавить("СуммаРегл");
	ПараметрыОтражения.РесурсыВал.Добавить("Сумма");
	ПараметрыОтражения.ТипДанныхУчета = Перечисления.ТипыДанныхУчета.Контрагенты;
	ПараметрыОтражения.СтруктураАналитики = ОбщегоНазначения.СкопироватьРекурсивно(ИсточникиДанныхПовтИсп.СтруктураАналитикиПоТипуДанныхУчета(ПараметрыОтражения.ТипДанныхУчета));
	ПараметрыОтражения.СтруктураАналитики.Партнер.ПутьКДанным = "ПодарочныйСертификат.Партнер";
	ПараметрыОтражения.СтруктураАналитики.Контрагент.ПутьКДанным = "ПодарочныйСертификат.Контрагент";
	ПараметрыОтражения.СтруктураАналитики.ОбъектРасчетов.ПутьКДанным = "ПодарочныйСертификат.ОбъектРасчетов";
	ПараметрыОтражения.СтруктураАналитики.Договор.Вставить("Значение", Неопределено);
	ПараметрыОтражения.СтруктураАналитики.РасчетныйДокумент.Вставить("Значение", Неопределено);
	
	Если МетаданныеРегистра = Неопределено Тогда
		МетаданныеРегистра = СоздатьНаборЗаписей().Метаданные();
	КонецЕсли;
	
	ФинансовыйУчетПоДаннымБалансовыхРегистров.ЗаполнитьПараметрыОтраженияПоМетаданнымРегистра(ПараметрыОтражения, МетаданныеРегистра);
	
	Возврат ПараметрыОтражения;
	
КонецФункции

//-- НЕ УТ

#КонецОбласти
	
#Область ДляВызоваИзДругихПодсистем

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли