
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//++ НЕ УТ

// Заполняет параметры отражения движений регистра в финансовом учете
//
// Параметры:
//  МетаданныеРегистра - ОбъектМетаданныхРегистрНакопления - Метаданные регистра накопления
//  РегистрацияКОтражению - Булево - Признак получения параметров для регистрации к отражению в учете
//
// Возвращаемое значение:
// 	см. ФинансовыйУчетПоДаннымБалансовыхРегистров.ПараметрыОтраженияДвиженийВФинансовомУчете
//
Функция ПараметрыОтраженияДвиженийВФинансовомУчете(МетаданныеРегистра = Неопределено, РегистрацияКОтражению = Ложь) Экспорт
	
	ПараметрыОтражения = ФинансовыйУчетПоДаннымБалансовыхРегистров.ПараметрыОтраженияДвиженийВФинансовомУчете(РегистрацияКОтражению);
	ПараметрыОтражения.ПутьКДаннымОрганизация = "АналитикаУчетаПоПартнерам.Организация";
	
	Если РегистрацияКОтражению Тогда
		Возврат ПараметрыОтражения;
	КонецЕсли;
	
	ПараметрыОтражения.ПутьКДаннымНаправлениеДеятельности = "АналитикаУчетаПоПартнерам.НаправлениеДеятельности";
	ПараметрыОтражения.ПутьКДаннымПодразделение = "ОбъектРасчетов.Подразделение";
	//++ НЕ УТКА
	ПараметрыОтражения.ПутьКДаннымОбъектНастройки = "ОбъектРасчетов.ГруппаФинансовогоУчета";
	//-- НЕ УТКА
	ПараметрыОтражения.ПутьКДаннымВалюта = "Валюта";
	ПараметрыОтражения.РесурсыУпр.Добавить("СуммаДисконтированияУпр");
	ПараметрыОтражения.РесурсыРегл.Добавить("СуммаДисконтированияРегл");
	ПараметрыОтражения.РесурсыВал.Добавить("СуммаДисконтирования");
	ПараметрыОтражения.ТипДанныхУчета = Перечисления.ТипыДанныхУчета.Контрагенты;
	
	Если МетаданныеРегистра = Неопределено Тогда
		МетаданныеРегистра = СоздатьНаборЗаписей().Метаданные();
	КонецЕсли;
	
	ФинансовыйУчетПоДаннымБалансовыхРегистров.ЗаполнитьПараметрыОтраженияПоМетаданнымРегистра(ПараметрыОтражения, МетаданныеРегистра);
	
	Возврат ПараметрыОтражения;
	
КонецФункции

//-- НЕ УТ

// Для отбора по типу в запросах
// 
// Возвращаемое значение:
//  Массив - типы документов, для которых применимо дисконтирование
//
Функция ПолучитьТипыДокументовУчаствующихВДисконтировании() Экспорт 
	
	ТипыДокументов = Новый Массив;
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПриобретениеТоваровУслуг"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПриобретениеУслугПрочихАктивов"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.КорректировкаПриобретения"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ВводОстатковВзаиморасчетов"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПервичныйДокумент"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.Сторно"));
	
	Возврат ТипыДокументов;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК Т
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Т1 
	|	ПО Т.АналитикаУчетаПоПартнерам = Т1.КлючАналитики
	|;
	|РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Т1.Организация)
	|	И ЗначениеРазрешено(Т1.Партнер)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли
