#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает занятость видов рабочих центров этапом
//
// Параметры:
//  Ссылка	 - ДокументСсылка.ЭтапПроизводства2_2	 - этап производства.
// 
// Возвращаемое значение:
//   - ТаблицаЗначений - занято этапом.
//
Функция ЗанятоЭтапом(Ссылка) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
		|	Таблица.ДатаИнтервала     КАК ДатаИнтервала,
		|	Таблица.Занято            КАК Количество
		|ИЗ
		|	РегистрНакопления.ДоступностьВидовРабочихЦентров КАК Таблица
		|ГДЕ
		|	Таблица.Регистратор = &Ссылка");
		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Записывает в регистр данные о загрузке оборудования графиком производства.
//
// Параметры:
//  Регистраторы		 - Массив - документы, движения которых необходимо записать.
//  ГрафикПроизводства	 - ТаблицаЗначений - данные о загрузке для записи.
//
Процедура ЗаписатьЗанятоГрафикомПроизводства(Регистраторы, ГрафикПроизводства) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ГрафикПроизводства.Индексы.Добавить("ЭтапПроизводства");
	СтруктураПоиска = Новый Структура("ЭтапПроизводства");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЭтапПроизводства2_2.Ссылка КАК Регистратор,
	|	ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.ДоступностьВидовРабочихЦентров КАК Т
	|		ГДЕ
	|			Т.Регистратор = ЭтапПроизводства2_2.Ссылка) КАК ИмеетДвижения,
	|	ЭтапПроизводства2_2.Дата КАК Период
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
	|ГДЕ
	|	ЭтапПроизводства2_2.Ссылка В(&Регистраторы)");
	Запрос.УстановитьПараметр("Регистраторы", Регистраторы);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПоиска.ЭтапПроизводства = Выборка.Регистратор;
		НайденныеСтроки = ГрафикПроизводства.НайтиСтроки(СтруктураПоиска);
		
		Если ЗначениеЗаполнено(НайденныеСтроки) Тогда
			
			Набор = РегистрыНакопления.ДоступностьВидовРабочихЦентров.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Выборка.Регистратор);
			Для каждого Строка Из НайденныеСтроки Цикл
				
				Запись = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, Строка);
				Запись.Период = Выборка.Период;
				
			КонецЦикла;
			Набор.Записать();
			
		ИначеЕсли Выборка.ИмеетДвижения Тогда
			
			Набор = РегистрыНакопления.ДоступностьВидовРабочихЦентров.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Выборка.Регистратор);
			Набор.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
	КолонкиИнтервалов = "ВидРабочегоЦентра, ДатаИнтервала";
	Интервалы = ГрафикПроизводства.Скопировать(, КолонкиИнтервалов);
	Интервалы.Свернуть(КолонкиИнтервалов);
	ПроверитьЗагрузкаНеПревышаетДоступностьГрафика(Интервалы);
	
КонецПроцедуры

// Выполняет проверку того, что загрузка оборудования не превышает доступное время.
// При выявлении превышения в базу записываются задания к пересчету графика производства.
//
// Параметры:
//  Интервалы - ТаблицаЗначений - интервалы времени, которые необходимо проверить. 
//
Процедура ПроверитьЗагрузкаНеПревышаетДоступностьГрафика(Интервалы) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Интервалы.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
	|	Интервалы.ДатаИнтервала КАК ДатаИнтервала
	|ПОМЕСТИТЬ ВТВсеИнтервалы
	|ИЗ
	|	&Интервалы КАК Интервалы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРабочегоЦентра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВсеИнтервалы.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
	|	ВТВсеИнтервалы.ДатаИнтервала КАК ДатаИнтервала
	|ПОМЕСТИТЬ ВТИнтервалы
	|ИЗ
	|	ВТВсеИнтервалы КАК ВТВсеИнтервалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыРабочихЦентров КАК ВидыРабочихЦентров
	|		ПО ВТВсеИнтервалы.ВидРабочегоЦентра = ВидыРабочихЦентров.Ссылка
	|ГДЕ
	|	ВидыРабочихЦентров.УчитыватьДоступностьПоГрафикуРаботы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРабочегоЦентра,
	|	ДатаИнтервала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
	|	ВложенныйЗапрос.ДатаИнтервала КАК ДатаИнтервала,
	|	ВложенныйЗапрос.Регистратор КАК Регистратор,
	|	СУММА(ВложенныйЗапрос.Доступность) КАК Доступность,
	|	СУММА(ВложенныйЗапрос.Загрузка) КАК Загрузка,
	|	МАКСИМУМ(ВложенныйЗапрос.ДобавлятьВЗадания) КАК ДобавлятьВЗадания
	|ПОМЕСТИТЬ ВТДоступность
	|ИЗ
	|	(ВЫБРАТЬ
	|		Доступность.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
	|		Доступность.ДатаИнтервала КАК ДатаИнтервала,
	|		Доступность.Регистратор КАК Регистратор,
	|		ВЫБОР
	|			КОГДА Доступность.ВидРабочегоЦентра.ВводитьДоступностьДляВидаРЦ
	|				ТОГДА Доступность.ДоступностьПоВидуРЦ
	|			ИНАЧЕ Доступность.ДоступностьПоРЦ
	|		КОНЕЦ КАК Доступность,
	|		0 КАК Загрузка,
	|		ЛОЖЬ КАК ДобавлятьВЗадания
	|	ИЗ
	|		РегистрНакопления.ДоступностьВидовРабочихЦентров КАК Доступность
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИнтервалы КАК ВТИнтервалы
	|			ПО Доступность.ВидРабочегоЦентра = ВТИнтервалы.ВидРабочегоЦентра
	|				И Доступность.ДатаИнтервала = ВТИнтервалы.ДатаИнтервала
	|	ГДЕ
	|		Доступность.ЭтоДвижениеВводаДоступности
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Доступность.ВидРабочегоЦентра,
	|		Доступность.ДатаИнтервала,
	|		Доступность.Регистратор,
	|		0,
	|		Доступность.Занято,
	|		ВЫРАЗИТЬ(Доступность.Регистратор КАК Документ.ЭтапПроизводства2_2).Статус В (&СтатусыЭтапа)
	|	ИЗ
	|		РегистрНакопления.ДоступностьВидовРабочихЦентров КАК Доступность
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИнтервалы КАК ВТИнтервалы
	|			ПО Доступность.ВидРабочегоЦентра = ВТИнтервалы.ВидРабочегоЦентра
	|				И Доступность.ДатаИнтервала = ВТИнтервалы.ДатаИнтервала
	|	ГДЕ
	|		Доступность.Регистратор ССЫЛКА Документ.ЭтапПроизводства2_2
	|		И ВЫРАЗИТЬ(Доступность.Регистратор КАК Документ.ЭтапПроизводства2_2).Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
	|	
	//++ Устарело_Производство21
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Доступность.ВидРабочегоЦентра,
	|		Доступность.ДатаИнтервала,
	|		Доступность.Регистратор,
	|		0,
	|		Доступность.Занято,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрНакопления.ДоступностьВидовРабочихЦентров КАК Доступность
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИнтервалы КАК ВТИнтервалы
	|			ПО Доступность.ВидРабочегоЦентра = ВТИнтервалы.ВидРабочегоЦентра
	|				И Доступность.ДатаИнтервала = ВТИнтервалы.ДатаИнтервала
	|	ГДЕ
	|		Доступность.Регистратор ССЫЛКА Документ.ЗаказНаПроизводство
	|		И ВЫРАЗИТЬ(Доступность.Регистратор КАК Документ.ЗаказНаПроизводство).Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовНаПроизводство.Закрыт)
	//-- Устарело_Производство21
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ВидРабочегоЦентра,
	|	ВложенныйЗапрос.ДатаИнтервала,
	|	ВложенныйЗапрос.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРабочегоЦентра,
	|	ДатаИнтервала,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДоступность.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
	|	ВТДоступность.ДатаИнтервала КАК ДатаИнтервала,
	|	СУММА(ВТДоступность.Доступность) КАК ДоступностьИнтервал
	|ПОМЕСТИТЬ ВТПревышениеДоступности
	|ИЗ
	|	ВТДоступность КАК ВТДоступность
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДоступность.ВидРабочегоЦентра,
	|	ВТДоступность.ДатаИнтервала
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТДоступность.Загрузка) > СУММА(ВТДоступность.Доступность)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРабочегоЦентра,
	|	ДатаИнтервала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДоступность.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
	|	ВТДоступность.ДатаИнтервала КАК ДатаИнтервала,
	|	ВТДоступность.Регистратор КАК Регистратор,
	|	ВТДоступность.Загрузка КАК Загрузка,
	|	ВТДоступность.ДобавлятьВЗадания КАК ДобавлятьВЗадания,
	|	ВТПревышениеДоступности.ДоступностьИнтервал КАК ДоступностьИнтервал,
	|	ВЫБОР
	|		КОГДА ВТДоступность.Регистратор ССЫЛКА Документ.ЭтапПроизводства2_2
	|			ТОГДА ВЫРАЗИТЬ(ВТДоступность.Регистратор КАК Документ.ЭтапПроизводства2_2).Распоряжение.Приоритет.РеквизитДопУпорядочивания
	//++ Устарело_Производство21
	|		КОГДА ВТДоступность.Регистратор ССЫЛКА Документ.ЗаказНаПроизводство
	|			ТОГДА ВЫРАЗИТЬ(ВТДоступность.Регистратор КАК Документ.ЗаказНаПроизводство).Приоритет.РеквизитДопУпорядочивания
	//-- Устарело_Производство21
	|	КОНЕЦ КАК Приоритет,
	|	ВЫБОР
	|		КОГДА ВТДоступность.Регистратор ССЫЛКА Документ.ЭтапПроизводства2_2
	|			ТОГДА ВЫРАЗИТЬ(ВТДоступность.Регистратор КАК Документ.ЭтапПроизводства2_2).Распоряжение.Подразделение.РеквизитДопУпорядочивания
	//++ Устарело_Производство21
	|		КОГДА ВТДоступность.Регистратор ССЫЛКА Документ.ЗаказНаПроизводство
	|			ТОГДА ВЫРАЗИТЬ(ВТДоступность.Регистратор КАК Документ.ЗаказНаПроизводство).Подразделение.РеквизитДопУпорядочивания
	//-- Устарело_Производство21
	|	КОНЕЦ КАК ПодразделениеПриоритет,
	|	ВЫБОР
	|		КОГДА ВТДоступность.Регистратор ССЫЛКА Документ.ЭтапПроизводства2_2
	|			ТОГДА 2
	//++ Устарело_Производство21
	|		КОГДА ВТДоступность.Регистратор ССЫЛКА Документ.ЗаказНаПроизводство
	|			ТОГДА 1
	//-- Устарело_Производство21
	|	КОНЕЦ КАК ПриоритетЗаказа,
	|	ВЫБОР
	|		КОГДА ВТДоступность.Регистратор ССЫЛКА Документ.ЭтапПроизводства2_2
	|			ТОГДА ВЫРАЗИТЬ(ВТДоступность.Регистратор КАК Документ.ЭтапПроизводства2_2).Распоряжение.Очередь
	//++ Устарело_Производство21
	|		КОГДА ВТДоступность.Регистратор ССЫЛКА Документ.ЗаказНаПроизводство
	|			ТОГДА ВЫРАЗИТЬ(ВТДоступность.Регистратор КАК Документ.ЗаказНаПроизводство).Очередь
	//-- Устарело_Производство21
	|	КОНЕЦ КАК Очередь
	|ИЗ
	|	ВТДоступность КАК ВТДоступность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПревышениеДоступности КАК ВТПревышениеДоступности
	|		ПО ВТДоступность.ВидРабочегоЦентра = ВТПревышениеДоступности.ВидРабочегоЦентра
	|			И ВТДоступность.ДатаИнтервала = ВТПревышениеДоступности.ДатаИнтервала
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафикЭтаповПроизводства
	|		ПО ВТДоступность.Регистратор = НормативныйГрафикЭтаповПроизводства.ЭтапПроизводства
	|ГДЕ
	|	ВТДоступность.Регистратор ССЫЛКА Документ.ЭтапПроизводства2_2
	//++ Устарело_Производство21
	|		ИЛИ ВТДоступность.Регистратор ССЫЛКА Документ.ЗаказНаПроизводство
	//-- Устарело_Производство21
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет,
	|	ПодразделениеПриоритет,
	|	ПриоритетЗаказа,
	|	Очередь,
	|	НормативныйГрафикЭтаповПроизводства.ДлительностьДоВыпуска УБЫВ,
	|	НормативныйГрафикЭтаповПроизводства.Ресурсоемкость УБЫВ
	|ИТОГИ
	|	МАКСИМУМ(ДоступностьИнтервал)
	|ПО
	|	ВидРабочегоЦентра,
	|	ДатаИнтервала");
	
	Запрос.УстановитьПараметр("Интервалы", Интервалы);
	Запрос.УстановитьПараметр("СтатусыЭтапа", Документы.ЭтапПроизводства2_2.СтатусыЭтапМожетБытьЗапланирован());
	Этапы = Новый Массив;
	
	ВыборкаВидРабочегоЦентра = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВидРабочегоЦентра.Следующий() Цикл
		
		ВыборкаДатаИнтервала = ВыборкаВидРабочегоЦентра.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДатаИнтервала.Следующий() Цикл
			
			Доступность = ВыборкаДатаИнтервала.ДоступностьИнтервал;
			Выборка = ВыборкаДатаИнтервала.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Если Выборка.Загрузка > Доступность Тогда
					
					Доступность = 0;
					
					Если Выборка.ДобавлятьВЗадания Тогда
						Этапы.Добавить(Выборка.Регистратор);
					КонецЕсли;
					
				Иначе
					
					Доступность = Доступность - Выборка.Загрузка;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если Этапы.Количество() > 0 Тогда
		
		ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(Этапы);
		РегистрыСведений.ЗаданияКРасчетуГрафикаПроизводства.ДобавитьЗадания(Этапы);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
