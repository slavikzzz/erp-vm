#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиПравилРегистрации

// См. ЗарплатаКадрыРасширенныйСинхронизацияДанных.ШаблонОбработчика
Процедура ПриЗаполненииНастроекОбработчиковПравилРегистрации(Настройки) Экспорт
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляРегистраПодчиненногоРегистратору(Настройки);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьОбновлениеЗависимыхДанныхПриОбменеПередЗаписью(Объект) Экспорт
	СохранитьПрежнийНаборЗаписей(Объект);
КонецПроцедуры

Процедура ПодготовитьОбновлениеЗависимыхДанныхПриОбменеПриЗаписи(Объект) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ОстаткиОтпусков.АналитикаДанных") Тогда
		МодульОстаткиОтпусковАналитикаДанных = ОбщегоНазначения.ОбщийМодуль("ОстаткиОтпусковАналитикаДанных");
		МодульОстаткиОтпусковАналитикаДанных.ЗаполнитьТаблицуОбновленияФактическихОтпусков(Объект);
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьПрежнийНаборЗаписей(Объект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Объект.Отбор.Регистратор.Значение);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеНабора.Период КАК Период,
		|	ДанныеНабора.Сотрудник КАК Сотрудник,
		|	ДанныеНабора.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
		|	ДанныеНабора.Количество КАК Количество
		|ИЗ
		|	РегистрНакопления.ФактическиеОтпуска КАК ДанныеНабора
		|ГДЕ
		|	ДанныеНабора.Регистратор = &Регистратор";
	
	Объект.ДополнительныеСвойства.Вставить("ПрежнийНабор", Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли