#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ОбеспечениеПотребностей

// Возвращает текст запроса полуфабрикатов производимых в процессе запланированный к запуску в производство по переданному отбору.
//
// Параметры:
//  ИменаВременныхТаблиц - Структура - структура с полями:
//   * ОтборПоПотребности - Строка - имя временной таблицы отбора по потребности.
//   * Результат          - Строка - имя временной таблицы, в которую нужно поместить результат.
// Возвращаемое значение:
//  Строка - текст запроса полуфабрикатов производимых в процессе запланированный к запуску в производство.
//
Функция ТекстЗапросаПолуфабрикатыКЗапускуВПроизводство(ИменаВременныхТаблиц) Экспорт
	
	ИмяВТОтборПоПотребности       = ИменаВременныхТаблиц.ОтборПоПотребности;
	ИмяВременнойТаблицыРезультата = ИменаВременныхТаблиц.Результат;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|
	|	Таблица.Номенклатура   КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Назначение     КАК Назначение,
	|	Таблица.Склад          КАК Склад,
	|	Таблица.Подразделение  КАК Подразделение,
	|	Таблица.Распоряжение   КАК Распоряжение,
	|	Таблица.Этап           КАК Этап,
	|
	|	ВЫБОР КОГДА Таблица.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|		КОНЕЦ КАК ЭтоТовар,
	|	
	|	(Таблица.ТребуетсяОборот
	|		- Таблица.ЗапланированоОборот
	|		- Таблица.ПереданоКПроизводствуОборот
	|		- Таблица.ПроизводитсяОборот
	|		- Таблица.ПроизведеноОборот) + Таблица.ЗапланированаРазборкаОборот КАК Количество
	|	
	|ПОМЕСТИТЬ ВтОборотыПолуфабрикатыКЗапускуВПроизводствоПереопределяемый
	|
	|ИЗ
	|	РегистрНакопления.ОбеспечениеПроизводственныхПроцессов.Обороты(,,,
	|	
	|			(Номенклатура,Характеристика,Склад,Подразделение,Назначение) В(
	|				ВЫБРАТЬ
	|					Фильтр.Номенклатура   КАК Номенклатура,
	|					Фильтр.Характеристика КАК Характеристика,
	|					Фильтр.Склад          КАК Склад,
	|					Фильтр.Подразделение  КАК Подразделение,
	|					Фильтр.Назначение     КАК Назначение
	|				ИЗ
	|					ВТОтборПоПотребности КАК Фильтр)
	|			
	|			И Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			
	|		) КАК Таблица
	|
	|ГДЕ
	|
	|	(Таблица.ТребуетсяОборот
	|		- Таблица.ЗапланированоОборот
	|		- Таблица.ПереданоКПроизводствуОборот
	|		- Таблица.ПроизводитсяОборот
	|		- Таблица.ПроизведеноОборот) + Таблица.ЗапланированаРазборкаОборот > 0
	|;
	|
	|ВЫБРАТЬ
	|
	|	Таблица.Номенклатура   КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Назначение     КАК Назначение,
	|	Таблица.Склад          КАК Склад,
	|	Таблица.Подразделение  КАК Подразделение,
	|	Таблица.ЭтоТовар       КАК ЭтоТовар,
	|
	|	СУММА(Таблица.Количество) КАК Количество
	|
	|ПОМЕСТИТЬ ВтПолуфабрикатыКЗапускуВПроизводствоПереопределяемый
	|
	|ИЗ
	|	ВтОборотыПолуфабрикатыКЗапускуВПроизводствоПереопределяемый КАК Таблица
	|
	|ГДЕ
	|	ВЫРАЗИТЬ(&ТекстПоляЗаказ КАК Документ.ЭтапПроизводства2_2).Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Номенклатура, Таблица.Характеристика, Таблица.Назначение, Таблица.Склад, Таблица.Подразделение, Таблица.ЭтоТовар
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура, Характеристика, Склад, Назначение, ЭтоТовар
	|;
	|
	|УНИЧТОЖИТЬ ВтОборотыПолуфабрикатыКЗапускуВПроизводствоПереопределяемый
	|
	|";
	
	ТекстПоляЗаказ = Документы.ЭтапПроизводства2_2.ТекстЗапросаПолеЭтапИсточник(
															"Таблица.Распоряжение",
															"Таблица.Этап",
															"Таблица.Назначение");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПоляЗаказ", ТекстПоляЗаказ);
		
	Если ЗначениеЗаполнено(ИмяВТОтборПоПотребности) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТОтборПоПотребности", ИмяВТОтборПоПотребности);
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВтПолуфабрикатыКЗапускуВПроизводствоПереопределяемый", ИмяВременнойТаблицыРезультата);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ДинамическаяСтруктура

// Возвращает текст запроса продукции заказа по переданному отбору.
// 
// Параметры:
//  ИмяВременнойТаблицы	       - Строка	- имя временной таблицы, в которую нужно поместить результат.
//  ИмяПоляЗаказНаПроизводство - Строка	- имя параметра для отбора по заказу на производство.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица полуфабрикатов производимых в процессе.
//
Функция ТекстЗапросаПродукцияЗаказа(ИмяВременнойТаблицы = "ПродукцияЗаказа", ИмяПоляЗаказНаПроизводство = "ЗаказНаПроизводство") Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	
	|	Таблица.Номенклатура        КАК Номенклатура,
	|	Таблица.Характеристика      КАК Характеристика,
	|	Таблица.Склад               КАК Склад,
	|	Таблица.Подразделение       КАК Подразделение,
	|	Таблица.Назначение          КАК Назначение,
	|	Таблица.Распоряжение        КАК ЗаказНаПроизводство,
	|	Таблица.КлючНоменклатура    КАК КлючНоменклатура,
	|	Таблица.Спецификация        КАК Спецификация,
	|
	|	СУММА(Таблица.Требуется)   КАК Количество
	|
	|ПОМЕСТИТЬ ПродукцияЗаказа
	|ИЗ
	|	РегистрНакопления.ОбеспечениеПроизводственныхПроцессов КАК Таблица
	|
	|ГДЕ
	|	Таблица.Регистратор = &ЗаказНаПроизводство
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Склад,
	|	Таблица.Подразделение,
	|	Таблица.Назначение,
	|	Таблица.Распоряжение,
	|	Таблица.КлючНоменклатура,
	|	Таблица.Спецификация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад,
	|	Подразделение,
	|	Назначение,
	|	ЗаказНаПроизводство
	|";
	
	Если Не ПустаяСтрока(ИмяВременнойТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПродукцияЗаказа", ИмяВременнойТаблицы);
	КонецЕсли;
	
	Если Не ПустаяСтрока(ИмяПоляЗаказНаПроизводство) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&" + "ЗаказНаПроизводство", "&" + ИмяПоляЗаказНаПроизводство);
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

// Возвращает текст запроса продукции заказа по переданному отбору.
// 
// Параметры:
//  ИмяВременнойТаблицы	               - Строка	- имя временной таблицы, в которую нужно поместить результат.
//  ИмяВременнойТаблицыПродукцияЗаказа - Строка	- имя временной таблицы для отбора по таблице продукции заказа.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица полуфабрикатов производимых в процессе.
//
Функция ТекстЗапросаЗапущеноИлиВыпущеноПродукцияЗаказа(ИмяВременнойТаблицы = "ЗапущеноИлиВыпущено", ИмяВременнойТаблицыПродукцияЗаказа = "ПродукцияЗаказа") Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|
	|	Доступно.Номенклатура        КАК Номенклатура,
	|	Доступно.Характеристика      КАК Характеристика,
	|	Доступно.Склад               КАК Склад,
	|	Доступно.Подразделение       КАК Подразделение,
	|	Доступно.Назначение          КАК Назначение,
	|	Доступно.Распоряжение        КАК ЗаказНаПроизводство,
	|	Доступно.ВыпускающийЭтап     КАК ВыпускающийЭтап,
	|
	|	Доступно.ЗапланированоОборот
	|	 + Доступно.ПереданоКПроизводствуОборот
	|	 + Доступно.ПроизводитсяОборот  КАК Запущено,
	|	Доступно.ПроизведеноОборот      КАК Выпущено
	|
	|ПОМЕСТИТЬ ЗапущеноИлиВыпущено
	|ИЗ
	|	РегистрНакопления.ОбеспечениеПроизводственныхПроцессов.Обороты(
	|			,,,
	|			(Номенклатура, Характеристика, Склад, Подразделение, Назначение, Распоряжение) В
	|					(ВЫБРАТЬ
	|						Таблица.Номенклатура,
	|						Таблица.Характеристика,
	|						Таблица.Склад,
	|						Таблица.Подразделение,
	|						Таблица.Назначение,
	|						Таблица.ЗаказНаПроизводство
	|					ИЗ
	|						ПродукцияЗаказа КАК Таблица)) КАК Доступно
	|";
	
	Если Не ПустаяСтрока(ИмяВременнойТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЗапущеноИлиВыпущено", ИмяВременнойТаблицы);
	КонецЕсли;
	
	Если Не ПустаяСтрока(ИмяВременнойТаблицыПродукцияЗаказа) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПродукцияЗаказа", ИмяВременнойТаблицыПродукцияЗаказа);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Прочее

// Возвращает текст запроса полуфабрикатов производимых в процессе по переданному отбору.
//
// Параметры:
//  ИменаВременныхТаблиц - Структура:
//   * ОтборПоПотребности - Строка - имя временной таблицы отбора по потребности.
//   * Результат          - Строка - имя временной таблицы, в которую нужно поместить результат, если не указано, то результат будет выгружен.
//  ПостфиксСлужебныхВременныхТаблиц - Строка - если в одном пакете запросов необходимо несклоько раз использовать функцию, то нужно указывать уникальный постфикс
//                                              который будет использоваться в именах служебных временных таблиц текста запроса.
// Возвращаемое значение:
//  Строка - текст запроса полуфабрикатов производимых в процессе.
//
Функция ТекстЗапросаПолуфабрикатыВПроизводстве(ИменаВременныхТаблиц, ПостфиксСлужебныхВременныхТаблиц) Экспорт
	
	ИмяВТОтборПоПотребности       = ИменаВременныхТаблиц.ОтборПоПотребности;
	ИмяВременнойТаблицыРезультата = ИменаВременныхТаблиц.Результат;
	
	ВыгрузитьРезультат = ИмяВременнойТаблицыРезультата = "";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОборотыПолуфабрикатов.Распоряжение КАК Распоряжение,
	|	
	|	ОборотыПолуфабрикатов.Номенклатура   КАК Номенклатура,
	|	ОборотыПолуфабрикатов.Характеристика КАК Характеристика,
	|	
	|	ОборотыПолуфабрикатов.Назначение КАК Назначение,
	|	ОборотыПолуфабрикатов.Этап       КАК Этап,
	|	
	|	ОборотыПолуфабрикатов.Склад          КАК Склад,
	|	ОборотыПолуфабрикатов.Подразделение  КАК Подразделение,
	|	
	|	ВЫБОР КОГДА ОборотыПолуфабрикатов.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|		КОНЕЦ                             КАК ЭтоТовар,
	|	
	|	(ОборотыПолуфабрикатов.ТребуетсяОборот + ОборотыПолуфабрикатов.ЗапланированаРазборкаОборот) КАК Количество
	|	
	|ПОМЕСТИТЬ ВтОборотыПолуфабрикатовВПроизводствеПереопределяемый
	|ИЗ
	|	РегистрНакопления.ОбеспечениеПроизводственныхПроцессов.Обороты(,,,
	|	
	|			(Номенклатура,Характеристика,Склад,Подразделение,Назначение) В(
	|				ВЫБРАТЬ
	|					Фильтр.Номенклатура   КАК Номенклатура,
	|					Фильтр.Характеристика КАК Характеристика,
	|					Фильтр.Склад          КАК Склад,
	|					Фильтр.Подразделение  КАК Подразделение,
	|					Фильтр.Назначение     КАК Назначение
	|				ИЗ
	|					ВТОтборПоПотребности КАК Фильтр)
	|			
	|			И Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			
	|		) КАК ОборотыПолуфабрикатов
	|ГДЕ
	|	(ОборотыПолуфабрикатов.ТребуетсяОборот + ОборотыПолуфабрикатов.ЗапланированаРазборкаОборот) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ТекстПоляЗаказ КАК Заказ,
	|
	|	Таблица.Номенклатура   КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Назначение     КАК Назначение,
	|	
	|	Таблица.Склад         КАК Склад,
	|	Таблица.Подразделение КАК Подразделение,
	|	
	|	ВЫБОР КОГДА Таблица.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|		КОНЕЦ              КАК ЭтоТовар,
	|	
	|	Таблица.Количество КАК Количество
	|	
	|ПОМЕСТИТЬ ВтПолуфабрикатыВПроизводствеПереопределяемый
	|ИЗ
	|	ВтОборотыПолуфабрикатовВПроизводствеПереопределяемый КАК Таблица
	|ГДЕ
	|	ВЫРАЗИТЬ(&ТекстПоляЗаказ КАК Документ.ЭтапПроизводства2_2).Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|ИНДЕКСИРОВАТЬ ПО Номенклатура,Характеристика,Назначение,Склад,Подразделение";
	
	ТекстПоляЗаказ = Документы.ЭтапПроизводства2_2.ТекстЗапросаПолеЭтапИсточник(
															"Таблица.Распоряжение",
															"Таблица.Этап",
															"Таблица.Назначение");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПоляЗаказ", ТекстПоляЗаказ);
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"ВтОборотыПолуфабрикатовВПроизводствеПереопределяемый",
		"ВтОборотыПолуфабрикатовВПроизводстве" + ПостфиксСлужебныхВременныхТаблиц);
	
	Если ЗначениеЗаполнено(ИмяВТОтборПоПотребности) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТОтборПоПотребности", ИмяВТОтборПоПотребности);
	КонецЕсли;
	
	Если ВыгрузитьРезультат Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВтПолуфабрикатыВПроизводствеПереопределяемый", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИНДЕКСИРОВАТЬ ПО Номенклатура,Характеристика,Назначение,Склад,Подразделение", "");
		
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВтПолуфабрикатыВПроизводствеПереопределяемый", ИмяВременнойТаблицыРезультата);
	КонецЕсли;
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает таблицу полуфабрикатов производимых в процессе по переданному отбору
//
// Параметры:
//  МенеджерВременныхТаблиц	      - МенеджерВременныхТаблиц - менеджер временных таблиц
//  ИмяВТОтборПоПотребности	      - Строка				    - имя временной таблицы отбора по потребности
//  ИмяВременнойТаблицыРезультата - Строка				    - имя временной таблицы, в которую нужно поместить результат, если не указано, то результат будет выгружен.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица полуфабрикатов производимых в процессе.
//
Функция ПолуфабрикатыВПроизводстве(МенеджерВременныхТаблиц, ИмяВТОтборПоПотребности = "", ИмяВременнойТаблицыРезультата = "") Экспорт
	
	ВыгрузитьРезультат = ИмяВременнойТаблицыРезультата = "";
	
	ИменаВременныхТаблиц = Новый Структура();
	ИменаВременныхТаблиц.Вставить("ОтборПоПотребности",                 ИмяВТОтборПоПотребности);
	ИменаВременныхТаблиц.Вставить("Результат",                          ИмяВременнойТаблицыРезультата);
	
	ТекстЗапроса = ТекстЗапросаПолуфабрикатыВПроизводстве(ИменаВременныхТаблиц, "");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатВыполненияЗапроса = Запрос.Выполнить();
	
	Результат = Неопределено;
	Если ВыгрузитьРезультат Тогда
		Результат = РезультатВыполненияЗапроса.Выгрузить();
	КонецЕсли;
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - См. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыНакопления.ОбеспечениеПроизводственныхПроцессов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.14.30";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("857f879e-5ac2-4b16-8fa8-0bfcbf40a078");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ОбеспечениеПроизводственныхПроцессов.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Порядок = Перечисления.ПорядокОбработчиковОбновления.Некритичный;
	Обработчик.Комментарий = НСтр("ru = 'Выполняется переформирование движений документов ""Заказ на производство"" и ""Этап производства"" с учетом флага ""Динамическая структура""';
									|en = 'Regenerating register records of the ""Production order"" and ""Production stage"" documents with the ""Dynamic structure"" check box selected'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ЗаказНаПроизводство2_2.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ЭтапПроизводства2_2.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ОбеспечениеПроизводственныхПроцессов.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.ОбеспечениеПроизводственныхПроцессов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
КонецПроцедуры

// Параметры:
//  Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ОбеспечениеПроизводственныхПроцессов";
	
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("Документ.ЗаказНаПроизводство2_2");
	СписокДокументов.Добавить("Документ.ЭтапПроизводства2_2");
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = СтрСоединить(СписокДокументов, ",");
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Период УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Период УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиРегистраторыРегистра();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПараметрыВыборки.ПолныеИменаРегистров;
	
	Для каждого ПолноеИмяДокумента Из СписокДокументов Цикл
		
		ИмяДокумента = СтрРазделить(ПолноеИмяДокумента, ".")[1];
		
		Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
						Документы[ИмяДокумента].АдаптированныйТекстЗапросаДвиженийПоРегистру("ОбеспечениеПроизводственныхПроцессов"),
						ПолноеИмяРегистра,
						ПолноеИмяДокумента);
		
		ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ЗаказНаПроизводство2_2");
	Регистраторы.Добавить("Документ.ЭтапПроизводства2_2");
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
									Регистраторы,
									"РегистрНакопления.ОбеспечениеПроизводственныхПроцессов",
									Параметры.Очередь);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
