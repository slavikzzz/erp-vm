#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
//++ НЕ УТ

// Процедуры и функции используемые механизмом отражения в МФУ.

// Заполняет параметры отражения движений регистра в финансовом учете
//
// Параметры:
//  МетаданныеРегистра - ОбъектМетаданныхРегистрНакопления - Метаданные регистра накопления
//  РегистрацияКОтражению - Булево - Признак получения параметров для регистрации к отражению в учете
//
// Возвращаемое значение:
// 	см. ФинансовыйУчетПоДаннымБалансовыхРегистров.ПараметрыОтраженияДвиженийВФинансовомУчете
//
Функция ПараметрыОтраженияДвиженийВФинансовомУчете(МетаданныеРегистра = Неопределено, РегистрацияКОтражению = Ложь) Экспорт
	
	ПараметрыОтражения = ФинансовыйУчетПоДаннымБалансовыхРегистров.ПараметрыОтраженияДвиженийВФинансовомУчете(РегистрацияКОтражению);
	
	Если РегистрацияКОтражению Тогда
		Возврат ПараметрыОтражения;
	КонецЕсли;
	
	ПараметрыОтражения.РесурсыУпр.Добавить("НДСУпр");
	ПараметрыОтражения.РесурсыРегл.Добавить("НДС");
	ПараметрыОтражения.ЭтоРегистрУчетаНДС = Истина;
	ПараметрыОтражения.ТипДанныхУчета = Перечисления.ТипыДанныхУчета.НДС;
	ПараметрыОтражения.ПутьКДаннымДопНастройкаХозОперации = СтрЗаменить(
		"ВЫБОР
		|		КОГДА ПсевдонимИсточникаДанных.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РеализацияКлиенту)
		|			ТОГДА ВЫБОР
		|				КОГДА ПсевдонимИсточникаДанных.Регистратор ССЫЛКА Документ.РеализацияУслугПрочихАктивов
		|					ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РеализацияПрочихУслуг)
		|				КОГДА ПсевдонимИсточникаДанных.Регистратор ССЫЛКА Документ.КорректировкаРеализации
		|					И (ПсевдонимИсточникаДанных.НДСУпр < 0 ИЛИ ПсевдонимИсточникаДанных.НДС < 0)
		|					ТОГДА ВЫБОР
		|						КОГДА ВЫРАЗИТЬ(ПсевдонимИсточникаДанных.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование.Дата < НАЧАЛОПЕРИОДА(ПсевдонимИсточникаДанных.Период, МЕСЯЦ)
		|							ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВозвратТоваровОтКлиентаПрошлыхПериодов)
		|						ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СторноРеализации)
		|					КОНЕЦ
		|				ИНАЧЕ ПсевдонимИсточникаДанных.НастройкаХозяйственнойОперации
		|			КОНЕЦ
		|		ИНАЧЕ ПсевдонимИсточникаДанных.НастройкаХозяйственнойОперации
		|	КОНЕЦ",
		"ПсевдонимИсточникаДанных",
		ПараметрыОтражения.ПсевдонимИсточникаДанных);
	ОпределитьПоказатели(ПараметрыОтражения);
	
	ПараметрыОтражения.УсловиеДебет = СтрЗаменить(
		"ПсевдонимИсточникаДанных.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Входящий)",
		"ПсевдонимИсточникаДанных",
		ПараметрыОтражения.ПсевдонимИсточникаДанных);
	
	ПараметрыОтражения.УсловиеКредит = СтрЗаменить(
		"ПсевдонимИсточникаДанных.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Исходящий)",
		"ПсевдонимИсточникаДанных",
		ПараметрыОтражения.ПсевдонимИсточникаДанных);
	
	Если МетаданныеРегистра = Неопределено Тогда
		МетаданныеРегистра = СоздатьНаборЗаписей().Метаданные();
	КонецЕсли;
	
	ФинансовыйУчетПоДаннымБалансовыхРегистров.ЗаполнитьПараметрыОтраженияПоМетаданнымРегистра(ПараметрыОтражения, МетаданныеРегистра);
	
	Возврат ПараметрыОтражения;
	
КонецФункции

//++ НЕ УТКА

// Определяет источники уточнения счета, доступные в регистре и их свойства.
//
// Параметры:
//  СвойстваИсточника - Строка - "ИмяПоля" - имя атрибута регистра накопления, из которого планируется получать источник уточнения счета.
//
// Возвращаемое значение:
//  Соответствие - Ключ - название источника уточнения счета. 
//                 Значение - структура свойств источника уточнения счета.
//
Функция ИсточникиУточненияСчета(СвойстваИсточника) Экспорт
	
	ИсточникиУточненияСчета = Новый Соответствие;
	
	// Источники уточнения не доступны.
	
	Возврат ИсточникиУточненияСчета;
	
КонецФункции

// Определяет источники подразделений регистра и их свойства.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя источника. 
//                 Значение - структура свойств источника. 
//
Функция ИсточникиПодразделений() Экспорт

	ИсточникиПодразделений = Новый Соответствие;
	
	Возврат ИсточникиПодразделений;
	
КонецФункции

// Определяет источники направлений регистра и их свойства.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя источника. 
//                 Значение - структура свойств источника. 
//
Функция ИсточникиНаправлений() Экспорт
	
	Результат = Новый Соответствие;
	
	Возврат Результат;

КонецФункции

// Определяет источники заполнения субконто.
//
// Возвращаемое значение:
//  Массив - массив атрибутов регистра.
//
Функция ИсточникиСубконто() Экспорт

	МассивСубконто = Новый Массив;
	МассивСубконто.Добавить("Контрагент");
	МассивСубконто.Добавить("СчетФактура");
	МассивСубконто.Добавить("ВидЦенности");
	МассивСубконто.Добавить("СтавкаНДС");

	Возврат Новый Структура("СубконтоДт, СубконтоКт", МассивСубконто, МассивСубконто);
	
КонецФункции

// Определяет показатели в валюте регистра.
//
// Параметры:
//  СвойстваПоказателей - Строка - "ИсточникВалюты" - источник валюты для показателя регистра.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция ПоказателиВВалюте(СвойстваПоказателей) Экспорт

	ПоказателиВВалюте = Новый Соответствие;
	
	// Показатели в валюте не предусмотрены.
	
	Возврат ПоказателиВВалюте;

КонецФункции

// Определяет показатели в валюте регистра.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция ПоказателиКоличества() Экспорт

	ПоказателиКоличества = Новый Соответствие;
	Возврат ПоказателиКоличества;

КонецФункции

//-- НЕ УТКА

// Определяет показатели регистра.
//
// Параметры:
//  Свойства - Структура - содержащая ключи СвойстваПоказателей, СвойстваРесурсов
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция Показатели(Свойства) Экспорт

	Показатели = Новый Соответствие;
	
	СвойстваПоказателей = Свойства.СвойстваПоказателей;
	СвойстваРесурсов = Свойства.СвойстваРесурсов;
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "НДСУпр", "ВалютаУпр"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "НДС", "ВалютаРегл"));
	
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаНДС, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	Возврат Показатели;
	
КонецФункции
//-- НЕ УТ

// Собирает структуру из текстов запросов для дальнейшей проверки даты запрета.
// 
// Параметры:
// 	Запрос - Запрос - Запрос по проверке даты запрета, можно установить параметры
// Возвращаемое значение:
// 	Структура - см. ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов
Функция ТекстЗапросаКонтрольДатыЗапрета(Запрос) Экспорт
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияПоНДС.Имя;
	ИмяТаблицыИзменений = "ТаблицаИзмененийДвиженияПоНДС"; 
	СтруктураТекстовЗапросов = ПроведениеДокументов.ШаблонТекстЗапросаКонтрольДатыЗапрета(Запрос, 
		ИмяРегистра, 
		ИмяТаблицыИзменений, 
		"ФинансовыйКонтур");
	Возврат СтруктураТекстовЗапросов

КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ НЕ УТ

// Определяет показатели регистра
//
// Параметры:
//  ПараметрыОтражения - см. ПараметрыОтраженияДвиженийВФинансовомУчете()
//
Процедура ОпределитьПоказатели(ПараметрыОтражения)
	
	// Сумма НДС
	ПараметрыОтраженияПоказателя = Перечисления.ПоказателиАналитическихРегистров.ПараметрыОтраженияПоказателя();
	ПараметрыОтраженияПоказателя.РесурсыУпр.Добавить("НДСУпр");
	ПараметрыОтраженияПоказателя.РесурсыРегл.Добавить("НДС");
	ПараметрыОтраженияПоказателя.РесурсыКоличество.Добавить("0");
	ПараметрыОтраженияПоказателя.ПутьКДаннымИдентификаторФинЗаписи = СтрЗаменить(
		"ВЫБОР
		|		КОГДА ПсевдонимИсточникаДанных.ОбъектРасчетов <> ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
		|			ТОГДА ПсевдонимИсточникаДанных.ОбъектРасчетов.УникальныйИдентификатор
		|		ИНАЧЕ ПсевдонимИсточникаДанных.ИдентификаторФинЗаписи
		|	КОНЕЦ",
		"ПсевдонимИсточникаДанных",
		ФинансовыйУчетПоДаннымБалансовыхРегистров.ПсевдонимИсточникаДанныхПоУмолчанию());
	ПараметрыОтраженияПоказателя.ПутьКДаннымИдентификаторСтроки = "ИдентификаторФинЗаписи";
	ПараметрыОтражения.Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаНДС, ПараметрыОтраженияПоказателя);
	
КонецПроцедуры

//-- НЕ УТ

#КонецОбласти

#КонецЕсли
