#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
		
	Если ПривилегированныйРежим() Тогда
		
		// Проверим даты получения дохода.
		ПараметрыРасчета = УчетНДФЛ.ПараметрыРасчетаНДФЛПоПрогрессивнойШкале();
		НачалоРасчетаНДФЛПоПрогрессивнойШкале = ПараметрыРасчета.НачалоРасчетаНДФЛПоПрогрессивнойШкале;
		ГодОбъединенияНалоговыхБаз = ПараметрыРасчета.ГодОбъединенияНалоговыхБаз;
		ПерваяСтрокаНабора = ЭтотОбъект[0];
		НачалоПериода = ПерваяСтрокаНабора.ДатаПолученияДохода;
		КонецПериода = ПерваяСтрокаНабора.ДатаПолученияДохода;
		ФизическиеЛица = Новый Массив;
		Для Каждого СтрокаНабора Из ЭтотОбъект Цикл
			НачалоПериода = Мин(НачалоПериода, СтрокаНабора.ДатаПолученияДохода);
			КонецПериода = Макс(КонецПериода, СтрокаНабора.ДатаПолученияДохода);
			Если СтрокаНабора.ДатаПолученияДохода >= НачалоРасчетаНДФЛПоПрогрессивнойШкале Тогда
				ФизическиеЛица.Добавить(СтрокаНабора.ФизическоеЛицо)
			КонецЕсли;
		КонецЦикла;
		
		// Если доходы относятся еще к 2020 году или ранее, проверять доходы не требуется.
		Если КонецПериода < НачалоРасчетаНДФЛПоПрогрессивнойШкале Тогда
			Возврат;
		КонецЕсли;
		
		// Проверим состояние учетной политики.
		ГоловнаяОрганизация = ПерваяСтрокаНабора.ГоловнаяОрганизация;
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетнаяПолитикаПоНДФЛ.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	УчетнаяПолитикаПоНДФЛ.ВыполнятьРасчетНДФЛПоПрогрессивнойШкале КАК ВыполнятьРасчетНДФЛПоПрогрессивнойШкале
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаПоНДФЛ КАК УчетнаяПолитикаПоНДФЛ
		|ГДЕ
		|	УчетнаяПолитикаПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И УчетнаяПолитикаПоНДФЛ.ВыполнятьРасчетНДФЛПоПрогрессивнойШкале";
		// Если флажок расчета по прогрессивной шкале взведен, проверять доходы не требуется.
		Если Не Запрос.Выполнить().Пустой() Тогда 
			Возврат;
		КонецЕсли;
		
		НачалоПериода = ДобавитьМесяц(Макс(НачалоГода(НачалоПериода), НачалоРасчетаНДФЛПоПрогрессивнойШкале), -3);
		КонецПериода = КонецГода(КонецПериода);
		Запрос.УстановитьПараметр("НачалоРасчетаНДФЛПоПрогрессивнойШкале", НачалоРасчетаНДФЛПоПрогрессивнойШкале);
		Запрос.УстановитьПараметр("ДатаОбъединенияНалоговыхБаз", Дата(ГодОбъединенияНалоговыхБаз, 1, 1));
		Запрос.УстановитьПараметр("СоответствиеНалоговыхБаз", УчетНДФЛПовтИсп.СоставНалоговыхБаз());
		Запрос.УстановитьПараметр("ДатаЗакона176ФЗ", УчетНДФЛ.ДатаЗакона176ФЗ());
		Запрос.УстановитьПараметр("ДоходыОтТрудовойДеятельности", Перечисления.КатегорииДоходовНДФЛ.ДоходыОтТрудовойДеятельности());
		Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
		Запрос.УстановитьПараметр("Предел2024", 5000000);
		Запрос.УстановитьПараметр("Предел2025", 2400000);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеНалоговыхБаз.НалоговаяБаза КАК НалоговаяБаза,
		|	СоответствиеНалоговыхБаз.КатегорияДохода КАК КатегорияДохода,
		|	ВЫБОР
		|		КОГДА СоответствиеНалоговыхБаз.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.РайонныеСеверныеНадбавки)
		|			ТОГДА &Предел2024
		|		ИНАЧЕ &Предел2025
		|	КОНЕЦ КАК Предел
		|ПОМЕСТИТЬ ВТСоответствиеНалоговыхБаз
		|ИЗ
		|	&СоответствиеНалоговыхБаз КАК СоответствиеНалоговыхБаз
		|ГДЕ
		|	СоответствиеНалоговыхБаз.СтатусФизическогоЛица = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
		|	И СоответствиеНалоговыхБаз.НалоговаяБаза <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
		|	И СоответствиеНалоговыхБаз.ПериодС = &ДатаЗакона176ФЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.ДатаПолученияДохода, ГОД) КАК НалоговыйПериод,
		|	ВЫБОР
		|		КОГДА СведенияОДоходахНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
		|			ТОГДА СведенияОДоходахНДФЛ.КатегорияДохода
		|		КОГДА СведенияОДоходахНДФЛ.ДатаПолученияДохода >= &ДатаЗакона176ФЗ
		|			ТОГДА ЕСТЬNULL(СоответствиеНалоговыхБаз.НалоговаяБаза, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка))
		|		КОГДА СведенияОДоходахНДФЛ.ДатаПолученияДохода >= &ДатаОбъединенияНалоговыхБаз
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
		|		КОГДА СведенияОДоходахНДФЛ.КатегорияДохода В (&ДоходыОтТрудовойДеятельности)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
		|		КОГДА СведенияОДоходахНДФЛ.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыОтДолевогоУчастия), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыПоВыигрышам), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыЦБ), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыРЕПО), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыЗаймЦБ), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыИИС), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыПоОблигациям))
		|			ТОГДА СведенияОДоходахНДФЛ.КатегорияДохода
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
		|	КОНЕЦ КАК НалоговаяБаза,
		|	СоответствиеНалоговыхБаз.Предел КАК Предел,
		|	СУММА(ВЫБОР
		|			КОГДА ВидыДоходовНДФЛ.НеОблагаетсяУНалоговогоАгента
		|				ТОГДА 0
		|			КОГДА СведенияОДоходахНДФЛ.ДатаПолученияДохода < &НачалоРасчетаНДФЛПоПрогрессивнойШкале
		|				ТОГДА 0
		|			КОГДА СведенияОДоходахНДФЛ.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке03), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке05), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке06), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке07), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке10), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке15))
		|				ТОГДА 0
		|			КОГДА СведенияОДоходахНДФЛ.ДатаПолученияДохода < &ДатаЗакона176ФЗ
		|					И СведенияОДоходахНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыПоСтавкеПункта11Статьи224НКРФ)
		|				ТОГДА 0
		|			КОГДА ВидыДоходовНДФЛ.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|					И СведенияОДоходахНДФЛ.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
		|				ТОГДА 0
		|			ИНАЧЕ СведенияОДоходахНДФЛ.СуммаДохода - СведенияОДоходахНДФЛ.СуммаВычета
		|		КОНЕЦ) КАК СуммаДохода
		|ПОМЕСТИТЬ ВТДоходы
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
		|		ПО СведенияОДоходахНДФЛ.КодДохода = ВидыДоходовНДФЛ.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеНалоговыхБаз КАК СоответствиеНалоговыхБаз
		|		ПО СведенияОДоходахНДФЛ.КатегорияДохода = СоответствиеНалоговыхБаз.КатегорияДохода
		|ГДЕ
		|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И СведенияОДоходахНДФЛ.ФизическоеЛицо В(&ФизическиеЛица)
		|	И СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
		|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.ДатаПолученияДохода, ГОД),
		|	ВЫБОР
		|		КОГДА СведенияОДоходахНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
		|			ТОГДА СведенияОДоходахНДФЛ.КатегорияДохода
		|		КОГДА СведенияОДоходахНДФЛ.ДатаПолученияДохода >= &ДатаЗакона176ФЗ
		|			ТОГДА ЕСТЬNULL(СоответствиеНалоговыхБаз.НалоговаяБаза, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка))
		|		КОГДА СведенияОДоходахНДФЛ.ДатаПолученияДохода >= &ДатаОбъединенияНалоговыхБаз
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
		|		КОГДА СведенияОДоходахНДФЛ.КатегорияДохода В (&ДоходыОтТрудовойДеятельности)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
		|		КОГДА СведенияОДоходахНДФЛ.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыОтДолевогоУчастия), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыПоВыигрышам), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыЦБ), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыРЕПО), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыЗаймЦБ), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыИИС), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыПоОблигациям))
		|			ТОГДА СведенияОДоходахНДФЛ.КатегорияДохода
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
		|	КОНЕЦ,
		|	СоответствиеНалоговыхБаз.Предел
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле
		|ИЗ
		|	ВТДоходы КАК Доходы
		|ГДЕ
		|	Доходы.НалоговаяБаза <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
		|	И Доходы.СуммаДохода > ВЫБОР
		|			КОГДА Доходы.НалоговыйПериод >= &ДатаЗакона176ФЗ
		|				ТОГДА Доходы.Предел
		|			ИНАЧЕ &Предел2024
		|		КОНЕЦ";
		Если Не Запрос.Выполнить().Пустой() Тогда
			УчетнаяПолитикаПоНДФЛЗначение = РегистрыСведений.УчетнаяПолитикаПоНДФЛ.СоздатьНаборЗаписей();
			УчетнаяПолитикаПоНДФЛЗначение.Отбор.ГоловнаяОрганизация.Установить(ГоловнаяОрганизация);
			УчетнаяПолитикаПоНДФЛЗначение.Прочитать();
			Если УчетнаяПолитикаПоНДФЛЗначение.Количество() = 0 Тогда
				Запись = УчетнаяПолитикаПоНДФЛЗначение.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, РегистрыСведений.УчетнаяПолитикаПоНДФЛ.Умолчания());
				Запись.ГоловнаяОрганизация = ГоловнаяОрганизация;
			Иначе
				Запись = УчетнаяПолитикаПоНДФЛЗначение[0] 
			КонецЕсли;
			Запись.ВыполнятьРасчетНДФЛПоПрогрессивнойШкале = Истина;
			УчетнаяПолитикаПоНДФЛЗначение.Записать();
		КонецЕсли;;
	КонецЕсли;
	    
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли