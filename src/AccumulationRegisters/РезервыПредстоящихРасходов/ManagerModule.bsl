#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Заполняет параметры отражения движений регистра в финансовом учете
//
// Параметры:
//  МетаданныеРегистра - ОбъектМетаданныхРегистрНакопления - Метаданные регистра накопления
//  РегистрацияКОтражению - Булево - Признак получения параметров для регистрации к отражению в учете
//
// Возвращаемое значение:
// 	см. ФинансовыйУчетПоДаннымБалансовыхРегистров.ПараметрыОтраженияДвиженийВФинансовомУчете
//
Функция ПараметрыОтраженияДвиженийВФинансовомУчете(МетаданныеРегистра = Неопределено, РегистрацияКОтражению = Ложь) Экспорт
	
	ПараметрыОтражения = ФинансовыйУчетПоДаннымБалансовыхРегистров.ПараметрыОтраженияДвиженийВФинансовомУчете(РегистрацияКОтражению);
	
	Если РегистрацияКОтражению Тогда
		Возврат ПараметрыОтражения;
	КонецЕсли;
	
	ПараметрыОтражения.ПутьКДаннымНаправлениеДеятельности = "НаправлениеДеятельности";
	//++ НЕ УТКА
	ПараметрыОтражения.ПутьКДаннымОбъектНастройки = "ВидРезервов";
	//-- НЕ УТКА
	ПараметрыОтражения.РесурсыУпр.Добавить("СуммаУпр");
	ПараметрыОтражения.РесурсыУпр.Добавить("СуммаДисконтированияУпр");
	ПараметрыОтражения.РесурсыРегл.Добавить("СуммаРегл");
	ПараметрыОтражения.РесурсыРегл.Добавить("СуммаДисконтированияРегл");
	ПараметрыОтражения.ТипДанныхУчета = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
	ПараметрыОтражения.СтруктураАналитики = ОбщегоНазначения.СкопироватьРекурсивно(
		ИсточникиДанныхПовтИсп.СтруктураАналитикиПоТипуДанныхУчета(ПараметрыОтражения.ТипДанныхУчета));
	ПараметрыОтражения.СтруктураАналитики.СтатьяАктивовПассивов.Вставить("Значение",
		ПланыВидовХарактеристик.СтатьиАктивовПассивов.РезервыПоВознаграждениям);
	ПараметрыОтражения.СтруктураАналитики.АналитикаАктивовПассивов.ПутьКДанным = "ВидРезервов";
	ПараметрыОтражения.СтруктураАналитики.ГруппаФинансовогоУчета.Вставить("Значение", Неопределено);
	ПараметрыОтражения.СтруктураАналитики.Контрагент.Вставить("Значение", Неопределено);
	
	Если МетаданныеРегистра = Неопределено Тогда
		МетаданныеРегистра = СоздатьНаборЗаписей().Метаданные();
	КонецЕсли;
	
	ФинансовыйУчетПоДаннымБалансовыхРегистров.ЗаполнитьПараметрыОтраженияПоМетаданнымРегистра(ПараметрыОтражения, МетаданныеРегистра);
	
	Возврат ПараметрыОтражения;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
