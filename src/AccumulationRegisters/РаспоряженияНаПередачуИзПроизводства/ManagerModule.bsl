#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получает оформленное накладными по заказам количество.
// 
// Параметры:
// 	ТаблицаОтбора - ТаблицаЗначений - Таблица с полями "Ссылка" и "КодСтроки", строки должны быть уникальными.
// 	ОтборПоИзмерениям - Структура - ключ структуры определяет имя измерения, по которому будет накладываться отбор,
//  									а значение структуры - искомое значение.
// 	ИсключитьЗаказ - Булево - Признак исключающий заказ из списка оформленных накладных.
// Возвращаемое значение:
// 	ТаблицаЗначений - Таблица с полями "Ссылка", "КодСтроки", "Количество". Для каждой пары Заказ-КодСтроки содержит
//                    оформленное накладными количество.
Функция ТаблицаОформлено(ТаблицаОтбора, ОтборПоИзмерениям = Неопределено, ИсключитьЗаказ = Ложь) Экспорт

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.Ссылка    КАК Ссылка,
		|	Таблица.КодСтроки КАК КодСтроки
		|ПОМЕСТИТЬ ВтОтбор
		|ИЗ
		|	&ТаблицаОтбора КАК Таблица
		|ГДЕ
		|	Таблица.КодСтроки > 0
		|;
		|
		|////////////////////////////////////////
		|ВЫБРАТЬ
		|	Отбор.КодСтроки КАК КодСтроки,
		|	Отбор.Ссылка    КАК Ссылка,
		|	МАКСИМУМ(РегистрЗаказы.Номенклатура)   КАК Номенклатура,
		|	МАКСИМУМ(РегистрЗаказы.Характеристика) КАК Характеристика,
		|	МАКСИМУМ(РегистрЗаказы.Получатель)     КАК Склад,
		|	МАКСИМУМ(РегистрЗаказы.Серия)          КАК Серия,
		|	СУММА(РегистрЗаказы.Количество)        КАК Количество
		|ИЗ
		|	ВтОтбор КАК Отбор
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РаспоряженияНаПередачуИзПроизводства КАК РегистрЗаказы
		|		ПО РегистрЗаказы.Распоряжение = Отбор.Ссылка
		|		 И РегистрЗаказы.КодСтроки = Отбор.КодСтроки
		|		 И РегистрЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		 И РегистрЗаказы.Количество <> 0
		|		 И РегистрЗаказы.Активность
		|		 И &ОтборПереопределяемый
		|СГРУППИРОВАТЬ ПО
		|	Отбор.Ссылка, Отбор.КодСтроки";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаОтбора", ТаблицаОтбора);
	
	Отбор = Новый Массив;
	Если ИсключитьЗаказ Тогда
		Отбор.Добавить("РегистрЗаказы.Распоряжение <> РегистрЗаказы.Регистратор");
	КонецЕсли;
	Если ЗначениеЗаполнено(ОтборПоИзмерениям) Тогда
		Для Каждого КлючЗначение Из ОтборПоИзмерениям Цикл
			Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
			Отбор.Добавить("РегистрЗаказы." + КлючЗначение.Ключ + " В(&" + КлючЗначение.Ключ + ")");
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст =
		СтрЗаменить(
			Запрос.Текст,
			"&ОтборПереопределяемый",
			?(ЗначениеЗаполнено(Отбор), СтрСоединить(Отбор, " И "), "ИСТИНА"));
	
	УстановитьПривилегированныйРежим(Истина);
	Таблица = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	Таблица.Индексы.Добавить("Ссылка, КодСтроки");
	
	Возврат Таблица;
	
КонецФункции

// Текст запроса получает остаток по ресурсам КОформлению и Заказано
// Остаток дополняется движениями, сделанными накладной заданной в параметре Регистратор.
//
// Параметры:
//  ИмяВременнойТаблицы	 - Строка - Поместить результат во временную таблицу с заданным именем.
//  Измерения	 		 - Соответствие - Ключ - левое значение: единичное поле или поля через запятые,
//										а значение - Структура - 1. Ключ: "ВидСравнения";   Значение - Строка - оператор сравнения в запросе
//																 2. Ключ: "ПравоеЗначение"; Значение - Строка - единичное поле с амперсандом или запрос к таблице.
//  Ресурсы				 - Строка - Условие для секции ИМЕЮЩИЕ по ресурсам.
//  								Например, строка вида "КОформлению <> 0" будет преобразована в тексте запроса в:
//  								СУММА(Набор.КОформлению) <> 0.
// 
// Возвращаемое значение:
//  Строка - Текст запроса
//
Функция ТекстЗапросаОстатки(ИмяВременнойТаблицы = "", Измерения = Неопределено, Ресурсы = "") Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Набор.Организация           КАК Организация,
	|	Набор.Распоряжение          КАК Распоряжение,
	|	Набор.Номенклатура          КАК Номенклатура,
	|	Набор.Характеристика        КАК Характеристика,
	|	Набор.КодСтроки             КАК КодСтроки,
	|	Набор.Назначение            КАК Назначение,
	|	Набор.НазначениеОтправителя КАК НазначениеОтправителя,
	|	Набор.Серия                 КАК Серия,
	|	Набор.Отправитель           КАК Отправитель,
	|	Набор.Получатель            КАК Получатель,
	|	СУММА(Набор.Количество)     КАК КОформлению,
	|	0                           КАК Заказано
	|ПОМЕСТИТЬ ИмяВТ
	|ИЗ(
	|	ВЫБРАТЬ
	|		Таблица.Организация           КАК Организация,
	|		Таблица.Распоряжение          КАК Распоряжение,
	|		Таблица.Номенклатура          КАК Номенклатура,
	|		Таблица.Характеристика        КАК Характеристика,
	|		Таблица.КодСтроки             КАК КодСтроки,
	|		Таблица.Назначение            КАК Назначение,
	|		Таблица.НазначениеОтправителя КАК НазначениеОтправителя,
	|		Таблица.Серия                 КАК Серия,
	|		Таблица.Отправитель           КАК Отправитель,
	|		Таблица.Получатель            КАК Получатель,
	|		Таблица.КоличествоОстаток     КАК Количество
	|	ИЗ
	|		РегистрНакопления.РаспоряженияНаПередачуИзПроизводства.Остатки(, 
	|			&ОтборПоИзмерениямРегистр
	|			) КАК Таблица
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Таблица.Организация           КАК Организация,
	|		Таблица.Распоряжение          КАК Распоряжение,
	|		Таблица.Номенклатура          КАК Номенклатура,
	|		Таблица.Характеристика        КАК Характеристика,
	|		Таблица.КодСтроки             КАК КодСтроки,
	|		Таблица.Назначение            КАК Назначение,
	|		Таблица.НазначениеОтправителя КАК НазначениеОтправителя,
	|		Таблица.Серия                 КАК Серия,
	|		Таблица.Получатель            КАК Получатель,
	|		Таблица.Отправитель           КАК Отправитель,
	|		Таблица.Количество            КАК Количество
	|	ИЗ
	|		РегистрНакопления.РаспоряженияНаПередачуИзПроизводства КАК Таблица
	|	ГДЕ
	|		Активность
	|		И Регистратор = &Регистратор
	|		И ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Расход)
	|		И &ОтборПоИзмерениямСторно
	|	) КАК Набор
	|
	|СГРУППИРОВАТЬ ПО
	|	Организация,
	|	Распоряжение,
	|	Номенклатура,
	|	Характеристика,
	|	КодСтроки,
	|	Назначение,
	|	НазначениеОтправителя,
	|	Серия,
	|	Отправитель,
	|	Получатель
	|";
	
	Если Не ПустаяСтрока(Ресурсы) Тогда
		
		Если СтрНайти(Ресурсы, "Количество") <> 0 Тогда
			Ресурсы = СтрЗаменить(Ресурсы, "Количество", "СУММА(Набор.Количество)");
		КонецЕсли;
		
		ТекстЗапроса =
			ТекстЗапроса +
			"
			|ИМЕЮЩИЕ
			|	" + Ресурсы;
		
	КонецЕсли;
	
	ТекстЗапроса =
		СтрЗаменить(
			ТекстЗапроса,
			"ПОМЕСТИТЬ ИмяВТ",
			?(ПустаяСтрока(ИмяВременнойТаблицы), "","ПОМЕСТИТЬ " + ИмяВременнойТаблицы));
	
	Если Не ПустаяСтрока(ИмяВременнойТаблицы) Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Распоряжение,
		|	КодСтроки,
		|	Номенклатура,
		|	Характеристика,
		|	Серия";
		
	КонецЕсли;
	
	ТекстОтбораПоИзмерениям = "ИСТИНА";
	Если ЗначениеЗаполнено(Измерения) Тогда
		Для Каждого КлючЗначение Из Измерения Цикл
			
			ЛевоеЗначение  		= КлючЗначение.Ключ;
			ВидСравненияЗапроса = КлючЗначение.Значение.ВидСравнения;
			ПравоеЗначение 		= КлючЗначение.Значение.ПравоеЗначение;
			
			ТекстОтбораПоИзмерениям = ТекстОтбораПоИзмерениям
									+ " И " + "(" + ЛевоеЗначение + ") " + ВидСравненияЗапроса + " (" + ПравоеЗначение + ")";
			
		КонецЦикла;
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоИзмерениямРегистр", ТекстОтбораПоИзмерениям);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоИзмерениямСторно",  ТекстОтбораПоИзмерениям);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И (ЗначениеРазрешено(Отправитель)
	|	ИЛИ ЗначениеРазрешено(Получатель))";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли