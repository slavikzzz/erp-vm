
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиПравилРегистрации

// См. ЗарплатаКадрыРасширенныйСинхронизацияДанных.ШаблонОбработчика
Процедура ПриЗаполненииНастроекОбработчиковПравилРегистрации(Настройки) Экспорт
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляНезависимогоРегистра(Настройки, "Родственник");
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьДатуНачалаСобытия(ПараметрыОбновления = Неопределено) Экспорт
	ОбработкаЗавершена = Истина;
	
	ОбъектМетаданных = Метаданные.РегистрыНакопления.ПериодыУходаЗаБольнымиРодственниками;
	Блокировка = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОписаниеБлокируемыхДанных(ОбъектМетаданных);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПериодыУхода.Регистратор КАК Регистратор,
	|	Больничный.ДатаНачалаСобытия КАК ДатаНачалаСобытияВБольничном
	|ИЗ
	|	РегистрНакопления.ПериодыУходаЗаБольнымиРодственниками КАК ПериодыУхода
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК Больничный
	|		ПО ПериодыУхода.Регистратор = Больничный.Ссылка
	|			И ПериодыУхода.ДатаНачалаСобытия <> Больничный.ДатаНачалаСобытия
	|
	|СГРУППИРОВАТЬ ПО
	|	Больничный.ДатаНачалаСобытия,
	|	ПериодыУхода.Регистратор";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Блокировка.ПоляБлокировки.Регистратор = Выборка.Регистратор;
		Успех = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.НачатьОбновлениеДанных(Блокировка, ПараметрыОбновления);
		Если Не Успех Тогда
			ОбработкаЗавершена = Ложь;
			Продолжить;
		КонецЕсли;
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Значение = Выборка.Регистратор;
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Прочитать();
		Для Каждого Запись Из НаборЗаписей Цикл
			Запись.ДатаНачалаСобытия = Выборка.ДатаНачалаСобытияВБольничном;
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей, Истина);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
	КонецЦикла;
	
	Если ПараметрыОбновления <> Неопределено Тогда
		ПараметрыОбновления.ОбработкаЗавершена = ОбработкаЗавершена;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#КонецОбласти


#КонецЕсли
