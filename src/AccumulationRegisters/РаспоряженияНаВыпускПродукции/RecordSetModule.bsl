//++ Устарело_Производство21
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если Не ПроведениеДокументов.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	БлокироватьДляИзменения = Истина;
	
	// Текущее состояние набора помещается во временную таблицу,
	// чтобы при записи получить изменение нового набора относительно текущего.
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый",    ДополнительныеСвойства.СвойстваДокумента.ЭтоНовый);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Период              КАК Период,
	|	Таблица.Распоряжение        КАК Распоряжение,
	|	Таблица.Подразделение       КАК Подразделение,
	|	Таблица.Номенклатура        КАК Номенклатура,
	|	Таблица.Характеристика      КАК Характеристика,
	|	Таблица.КодСтроки           КАК КодСтроки,
	|	Таблица.Склад               КАК Склад,
	|	Таблица.ВидДвижения         КАК ВидДвижения,
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			Таблица.Заказано
	|		ИНАЧЕ
	|			-Таблица.Заказано
	|	КОНЕЦ                       КАК ЗаказаноПередЗаписью,
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			Таблица.КОформлению
	|		ИНАЧЕ
	|			-Таблица.КОформлению
	|	КОНЕЦ                       КАК КОформлениюПередЗаписью
	|ПОМЕСТИТЬ ДвиженияРаспоряженияНаВыпускПродукцииПередЗаписью
	|ИЗ
	|	РегистрНакопления.РаспоряженияНаВыпускПродукции КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор
	|	И НЕ &ЭтоНовый
	|";
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Или Не ПроведениеДокументов.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаИзменений.ДатаКонтроляПриЗаписи) КАК ДатаКонтроля,
	|	ТаблицаИзменений.Распоряжение                 КАК Распоряжение,
	|	ТаблицаИзменений.Подразделение                КАК Подразделение,
	|	ТаблицаИзменений.Номенклатура                 КАК Номенклатура,
	|	ТаблицаИзменений.Характеристика               КАК Характеристика,
	|	ТаблицаИзменений.КодСтроки                    КАК КодСтроки,
	|	ТаблицаИзменений.Склад                        КАК Склад,
	|	СУММА(ТаблицаИзменений.ЗаказаноИзменение)     КАК ЗаказаноИзменение,
	|	СУММА(ТаблицаИзменений.КОформлениюИзменение)  КАК КОформлениюИзменение
	|ПОМЕСТИТЬ ДвиженияРаспоряженияНаВыпускПродукцииИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДАТАВРЕМЯ(1,1,1)                КАК ДатаКонтроляПриЗаписи,
	|		ВЫБОР
	|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ)
	|			ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ), МЕСЯЦ, 1)
	|		КОНЕЦ                           КАК ДатаКонтроляПередЗаписью,
	|		Таблица.Распоряжение            КАК Распоряжение,
	|		Таблица.Подразделение           КАК Подразделение,
	|		Таблица.Номенклатура            КАК Номенклатура,
	|		Таблица.Характеристика          КАК Характеристика,
	|		Таблица.КодСтроки               КАК КодСтроки,
	|		Таблица.Склад                   КАК Склад,
	|		Таблица.ЗаказаноПередЗаписью    КАК ЗаказаноИзменение,
	|		Таблица.КОформлениюПередЗаписью КАК КОформлениюИзменение
	|	ИЗ
	|		ДвиженияРаспоряженияНаВыпускПродукцииПередЗаписью КАК Таблица
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ)
	|			ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ), МЕСЯЦ, 1)
	|		КОНЕЦ                           КАК ДатаКонтроляПриЗаписи,
	|		ДАТАВРЕМЯ(1,1,1)                КАК ДатаКонтроляПередЗаписью,
	|		Таблица.Распоряжение            КАК Распоряжение,
	|		Таблица.Подразделение           КАК Подразделение,
	|		Таблица.Номенклатура            КАК Номенклатура,
	|		Таблица.Характеристика          КАК Характеристика,
	|		Таблица.КодСтроки               КАК КодСтроки,
	|		Таблица.Склад                   КАК Склад,
	|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				-Таблица.Заказано
	|			ИНАЧЕ
	|				Таблица.Заказано
	|		КОНЕЦ                           КАК ЗаказаноИзменение,
	|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				-Таблица.КОформлению
	|			ИНАЧЕ
	|				Таблица.КОформлению
	|		КОНЕЦ                           КАК КОформлениюИзменение
	|	ИЗ
	|		РегистрНакопления.РаспоряженияНаВыпускПродукции КАК Таблица
	|	ГДЕ
	|		Таблица.Регистратор = &Регистратор) КАК ТаблицаИзменений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменений.Распоряжение,
	|	ТаблицаИзменений.Подразделение,
	|	ТаблицаИзменений.Номенклатура,
	|	ТаблицаИзменений.Характеристика,
	|	ТаблицаИзменений.КодСтроки,
	|	ТаблицаИзменений.Склад
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаИзменений.КОформлениюИзменение) > 0 
	|		ИЛИ СУММА(ТаблицаИзменений.ЗаказаноИзменение) > 0
	|		ИЛИ МАКСИМУМ(ТаблицаИзменений.ДатаКонтроляПриЗаписи) <> МАКСИМУМ(ТаблицаИзменений.ДатаКонтроляПередЗаписью)
	|;
	|УНИЧТОЖИТЬ ДвиженияРаспоряженияНаВыпускПродукцииПередЗаписью
	|";
	
	Выборка = Запрос.ВыполнитьПакет()[0].Выбрать();
	ПроведениеДокументов.ЗарегистрироватьТаблицуКонтроля(ДополнительныеСвойства,
		"ДвиженияРаспоряженияНаВыпускПродукцииИзменение", Выборка.Следующий() И Выборка.Количество > 0);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
//-- Устарело_Производство21