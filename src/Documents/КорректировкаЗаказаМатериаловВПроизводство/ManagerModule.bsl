//++ Устарело_Производство21
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("Обеспечение");
	МеханизмыДокумента.Добавить("Производство");
	МеханизмыДокумента.Добавить("Производство21");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("АдресныйСклад");
	
КонецПроцедуры

#КонецОбласти

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.РасходныйОрдерНаТовары.ДобавитьКомандуСоздатьНаОснованииРасходныйОрдерНаТовары(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Корректировка заказа материалов".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.КорректировкаЗаказаМатериаловВПроизводство) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.КорректировкаЗаказаМатериаловВПроизводство.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.КорректировкаЗаказаМатериаловВПроизводство);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьКорректировкиЗаказаМатериаловВПроизводство,ИспользоватьПроизводство";
	
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента           = "Документ.КорректировкаЗаказаМатериаловВПроизводство";
	СинонимТаблицыДокумента      = "";
	ВЗапросеЕстьИсточник         = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	ЗначенияПараметров.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПередачаВПроизводство);
	
	Если ИмяРегистра = "ЗаказыМатериаловВПроизводство" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаЗаказыМатериаловВПроизводство(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаМатериалы";
		
	ИначеЕсли ИмяРегистра = "ЗаказыМатериаловСУчетомКорректировок" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаЗаказыМатериаловСУчетомКорректировок(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаМатериалы";
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтОснований", ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса));
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.КорректировкаЗаказаМатериаловВПроизводство") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаЗаказыМатериаловВПроизводство(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаЗаказыМатериаловСУчетомКорректировок(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	ОтразитьРаспределениеЗапасовДвижения(Запрос, ТекстыЗапроса, Регистры);
	ОтразитьРезерв(Запрос, ТекстыЗапроса, Регистры);
	ЗапланироватьОтгрузкуТоваров(Запрос, ТекстыЗапроса, Регистры);
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеШапки.Дата           КАК Период,
		|	ДанныеШапки.Организация    КАК Организация,
		|	ДанныеШапки.Подразделение  КАК Подразделение,
		|	ДанныеШапки.Номер          КАК Номер,
		|	ДанныеШапки.Ответственный  КАК Ответственный,
		|	ДанныеШапки.Проведен       КАК Проведен,
		|	ДанныеШапки.ПометкаУдаления КАК ПометкаУдаления,
		|	ДанныеШапки.Распоряжение   КАК Распоряжение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) КАК ХозяйственнаяОперация
		|ИЗ
		|	Документ.КорректировкаЗаказаМатериаловВПроизводство КАК ДанныеШапки
		|ГДЕ
		|	ДанныеШапки.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период", 			Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", 		Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение", 		Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Распоряжение", 		Реквизиты.Распоряжение);
	Запрос.УстановитьПараметр("Номер", 				Реквизиты.Номер);
	Запрос.УстановитьПараметр("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	Запрос.УстановитьПараметр("Ответственный", 		Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("Проведен", 			Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления", 	Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", 	Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(ДокументСсылка)));

КонецПроцедуры

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;

	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	&Период КАК ДатаДокументаИБ,
	|	&Номер КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	&Организация КАК Организация,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КоличествоНаправленийДеятельности = 1
	|			ТОГДА ДанныеДокумента.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КоличествоМестХранения = 1
	|			ТОГДА ДанныеДокумента.МестоХранения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК МестоХранения,
	|	&Подразделение КАК Подразделение,
	|	&Ответственный КАК Ответственный,
	|	"""" КАК Комментарий,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	0 КАК Сумма,
	|	НЕОПРЕДЕЛЕНО КАК Статус,
	|	&Проведен КАК Проведен,
	|	&ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	"""" КАК Дополнительно,
	|	&Период КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать КАК НомерПервичногоДокумента,
	|	ЛОЖЬ  КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК ИсправляемыйДокумент,
	|	&Период КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет
	|ИЗ
	|	ВтОснований КАК ДанныеДокумента";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОтразитьРезерв(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапросаДанныхДокумента = 
	"ВЫБРАТЬ
	|	ТоварыДокумента.Ссылка				КАК Ссылка,
	|	ДанныеШапки.Дата					КАК Период,
	|	ДанныеШапки.Распоряжение			КАК Заказ,
	|	НЕОПРЕДЕЛЕНО						КАК Накладная,
	|	ЛОЖЬ								КАК Исправление,
	|	НЕОПРЕДЕЛЕНО						КАК ИсправляемыйДокумент,
	|	ДанныеШапки.Подразделение			КАК Получатель,
	|	ТоварыДокумента.СкладИсходный		КАК Склад,
	|	ТоварыДокумента.Номенклатура		КАК Номенклатура,
	|	ТоварыДокумента.Характеристика		КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.ОбособленноИсходный
	|			ТОГДА ТоварыДокумента.НазначениеИсходный
	|		ИНАЧЕ &НазначениеПоУмолчанию
	|	КОНЕЦ								КАК Назначение,
	|	ТоварыДокумента.СерияИсходный		КАК Серия,
	|	ТоварыДокумента.СтатусУказанияСерий	КАК СтатусУказанияСерий,
	|	-ТоварыДокумента.Количество			КАК Количество,
	|	ЛОЖЬ								КАК СверхЗаказа,
	|	ЛОЖЬ								КАК Отменено,
	|	ЛОЖЬ								КАК ЭтоНакладная,
	|	ИСТИНА								КАК ОтгрузкаПоЗаказу
	|ИЗ
	|	Документ.КорректировкаЗаказаМатериаловВПроизводство.МатериалыИУслуги КАК ТоварыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаказаМатериаловВПроизводство КАК ДанныеШапки
	|		ПО ТоварыДокумента.Ссылка = ДанныеШапки.Ссылка
	|
	|ГДЕ
	|	ТоварыДокумента.Ссылка В(&Ссылка)
	|	И ТоварыДокумента.Количество <> 0
	|	И ТоварыДокумента.КодСтрокиИсходный <> 0
	|	И ТоварыДокумента.ВариантОбеспеченияИсходный = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыДокумента.Ссылка				КАК Ссылка,
	|	ДанныеШапки.Дата					КАК Период,
	|	ДанныеШапки.Распоряжение			КАК Заказ,
	|	НЕОПРЕДЕЛЕНО						КАК Накладная,
	|	ЛОЖЬ								КАК Исправление,
	|	НЕОПРЕДЕЛЕНО						КАК ИсправляемыйДокумент,
	|	ДанныеШапки.Подразделение			КАК Получатель,
	|	ТоварыДокумента.Склад				КАК Склад,
	|	ТоварыДокумента.Номенклатура		КАК Номенклатура,
	|	ТоварыДокумента.Характеристика		КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Обособленно
	|			ТОГДА ТоварыДокумента.Назначение
	|		ИНАЧЕ &НазначениеПоУмолчанию
	|	КОНЕЦ								КАК Назначение,
	|	ТоварыДокумента.Серия				КАК Серия,
	|	ТоварыДокумента.СтатусУказанияСерий	КАК СтатусУказанияСерий,
	|	ТоварыДокумента.Количество			КАК Количество,
	|	ЛОЖЬ								КАК СверхЗаказа,
	|	ЛОЖЬ								КАК Отменено,
	|	ЛОЖЬ								КАК ЭтоНакладная,
	|	ИСТИНА								КАК ОтгрузкаПоЗаказу
	|ИЗ
	|	Документ.КорректировкаЗаказаМатериаловВПроизводство.МатериалыИУслуги КАК ТоварыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаказаМатериаловВПроизводство КАК ДанныеШапки
	|		ПО ТоварыДокумента.Ссылка = ДанныеШапки.Ссылка
	|
	|ГДЕ
	|	ТоварыДокумента.Ссылка В(&Ссылка)
	|	И ТоварыДокумента.Количество <> 0
	|	И ТоварыДокумента.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)";
	
	ТекстЗапросаДанныхДокумента = СтрЗаменить(ТекстЗапросаДанныхДокумента,
												"&НазначениеПоУмолчанию",
												"ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)");
	
	СкладыСервер.ОтразитьРезерв(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаДанныхДокумента);
	
КонецПроцедуры

Процедура ЗапланироватьОтгрузкуТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапросаДанныхДокумента = 
	"ВЫБРАТЬ
	|	ТоварыДокумента.Ссылка				КАК Ссылка,
	|	ДанныеШапки.Дата					КАК Период,
	|	ДанныеШапки.Распоряжение			КАК Заказ,
	|	НЕОПРЕДЕЛЕНО						КАК Накладная,
	|	ЛОЖЬ								КАК Исправление,
	|	НЕОПРЕДЕЛЕНО						КАК ИсправляемыйДокумент,
	|	ДанныеШапки.Подразделение			КАК Получатель,
	|	ТоварыДокумента.СкладИсходный		КАК Склад,
	|	ТоварыДокумента.Номенклатура		КАК Номенклатура,
	|	ТоварыДокумента.Характеристика		КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.ОбособленноИсходный
	|			ТОГДА ТоварыДокумента.НазначениеИсходный
	|		ИНАЧЕ &НазначениеПоУмолчанию
	|	КОНЕЦ								КАК Назначение,
	|	ТоварыДокумента.СерияИсходный		КАК Серия,
	|	ТоварыДокумента.СтатусУказанияСерий	КАК СтатусУказанияСерий,
	|	-ТоварыДокумента.Количество			КАК Количество,
	|	ЛОЖЬ								КАК СверхЗаказа,
	|	ЛОЖЬ								КАК Отменено,
	|	ЛОЖЬ								КАК ЭтоНакладная,
	|	ИСТИНА								КАК ОтгрузкаПоЗаказу
	|ИЗ
	|	Документ.КорректировкаЗаказаМатериаловВПроизводство.МатериалыИУслуги КАК ТоварыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаказаМатериаловВПроизводство КАК ДанныеШапки
	|		ПО ТоварыДокумента.Ссылка = ДанныеШапки.Ссылка
	|
	|ГДЕ
	|	ТоварыДокумента.Ссылка В(&Ссылка)
	|	И ТоварыДокумента.Количество <> 0
	|	И ТоварыДокумента.КодСтрокиИсходный <> 0
	|	И ТоварыДокумента.ВариантОбеспеченияИсходный = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыДокумента.Ссылка				КАК Ссылка,
	|	ДанныеШапки.Дата					КАК Период,
	|	ДанныеШапки.Распоряжение			КАК Заказ,
	|	НЕОПРЕДЕЛЕНО						КАК Накладная,
	|	ЛОЖЬ								КАК Исправление,
	|	НЕОПРЕДЕЛЕНО						КАК ИсправляемыйДокумент,
	|	ДанныеШапки.Подразделение			КАК Получатель,
	|	ТоварыДокумента.Склад				КАК Склад,
	|	ТоварыДокумента.Номенклатура		КАК Номенклатура,
	|	ТоварыДокумента.Характеристика		КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Обособленно
	|			ТОГДА ТоварыДокумента.Назначение
	|		ИНАЧЕ &НазначениеПоУмолчанию
	|	КОНЕЦ								КАК Назначение,
	|	ТоварыДокумента.Серия				КАК Серия,
	|	ТоварыДокумента.СтатусУказанияСерий	КАК СтатусУказанияСерий,
	|	ТоварыДокумента.Количество			КАК Количество,
	|	ЛОЖЬ								КАК СверхЗаказа,
	|	ЛОЖЬ								КАК Отменено,
	|	ЛОЖЬ								КАК ЭтоНакладная,
	|	ИСТИНА								КАК ОтгрузкаПоЗаказу
	|ИЗ
	|	Документ.КорректировкаЗаказаМатериаловВПроизводство.МатериалыИУслуги КАК ТоварыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаказаМатериаловВПроизводство КАК ДанныеШапки
	|		ПО ТоварыДокумента.Ссылка = ДанныеШапки.Ссылка
	|
	|ГДЕ
	|	ТоварыДокумента.Ссылка В(&Ссылка)
	|	И ТоварыДокумента.Количество <> 0
	|	И ТоварыДокумента.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)";
	
	ТекстЗапросаДанныхДокумента = СтрЗаменить(ТекстЗапросаДанныхДокумента,
												"&НазначениеПоУмолчанию",
												"ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)");
	
	СкладыСервер.ЗапланироватьОтгрузкуТоваров(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаДанныхДокумента);
	
КонецПроцедуры

Функция ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтОснований";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                                             КАК Ссылка,
	|	МАКСИМУМ(
	|		ЕСТЬNULL(ТаблицаТовары.Назначение.НаправлениеДеятельности,
	|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))) КАК НаправлениеДеятельности,
	|	МАКСИМУМ(ТаблицаТовары.Склад)                                       КАК МестоХранения,
	|	КОЛИЧЕСТВО(
	|		РАЗЛИЧНЫЕ ЕСТЬNULL(ТаблицаТовары.Назначение.НаправлениеДеятельности,
	|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))) КАК КоличествоНаправленийДеятельности,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаТовары.Склад)                           КАК КоличествоМестХранения
	|ПОМЕСТИТЬ ВтОснований
	|ИЗ
	|	Документ.КорректировкаЗаказаМатериаловВПроизводство КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаказаМатериаловВПроизводство.МатериалыИУслуги КАК ТаблицаТовары
	|		ПО ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	&Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОтразитьРаспределениеЗапасовДвижения(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка              КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата         КАК Период,
		|	ТабЧасть.Номенклатура        КАК Номенклатура,
		|	ТабЧасть.Характеристика      КАК Характеристика,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|				ТабЧасть.Ссылка.Подразделение
		|			ИНАЧЕ
		|				ТабЧасть.Склад
		|		КОНЕЦ КАК Склад,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Обособленно ТОГДА
		|				
		|				ТабЧасть.Назначение
		|				
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		КОНЕЦ КАК Назначение,
		|	
		|	ТабЧасть.Количество          КАК Количество,
		|	ТабЧасть.Ссылка.Распоряжение КАК ЗапланированныйРасходРаспределенногоЗапаса,
		|	ИСТИНА                       КАК КонтрольСвободногоОстатка
		|ИЗ
		|	Документ.КорректировкаЗаказаМатериаловВПроизводство.МатериалыИУслуги КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)";
	
	РаспределениеЗапасовДвижения.РасходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка            КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата       КАК Период,
		|	ТабЧасть.Номенклатура      КАК Номенклатура,
		|	ТабЧасть.Характеристика    КАК Характеристика,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|				ТабЧасть.Ссылка.Подразделение
		|			ИНАЧЕ
		|				ТабЧасть.СкладИсходный
		|		КОНЕЦ КАК Склад,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ОбособленноИсходный ТОГДА
		|				
		|				ТабЧасть.НазначениеИсходный
		|				
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		КОНЕЦ КАК Назначение,
		|	
		|	-ТабЧасть.Количество         КАК Количество,
		|	ТабЧасть.Ссылка.Распоряжение КАК ЗапланированныйРасходРаспределенногоЗапаса,
		|	ИСТИНА                       КАК КонтрольСвободногоОстатка
		|ИЗ
		|	Документ.КорректировкаЗаказаМатериаловВПроизводство.МатериалыИУслуги КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.ВариантОбеспеченияИсходный = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
		|		И ТабЧасть.КодСтрокиИсходный <> 0";
	
	РаспределениеЗапасовДвижения.РасходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка              КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата         КАК Период,
		|	ТабЧасть.Номенклатура        КАК Номенклатура,
		|	ТабЧасть.Характеристика      КАК Характеристика,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|			ТабЧасть.Ссылка.Подразделение
		|		ИНАЧЕ
		|			ТабЧасть.Склад
		|		КОНЕЦ КАК Склад,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Обособленно ТОГДА
		|				
		|				ТабЧасть.Назначение
		|				
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		КОНЕЦ КАК Назначение,
		|	
		|	ТабЧасть.Количество          КАК Количество,
		|	ТабЧасть.ВариантОбеспечения  КАК ВариантОбеспечения,
		|	ТабЧасть.Ссылка.Распоряжение КАК Заказ,
		|	ТабЧасть.ДатаПотребности     КАК ЖелаемаяДатаОтгрузки,
		|	ЛОЖЬ                         КАК ПоГрафику,
		|	НЕОПРЕДЕЛЕНО                 КАК РаспоряжениеВГрафике,
		|	0                            КАК КоличествоВГрафике
		|ИЗ
		|	Документ.КорректировкаЗаказаМатериаловВПроизводство.МатериалыИУслуги КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)";
		
	РаспределениеЗапасовДвижения.ЗапланироватьРасходЗапаса(
		Запрос,
		ТекстыЗапроса,
		Регистры,
		ТекстЗапросаТабЧасть);
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка                     КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата                КАК Период,
		|	ТабЧасть.Номенклатура               КАК Номенклатура,
		|	ТабЧасть.Характеристика             КАК Характеристика,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|			ТабЧасть.Ссылка.Подразделение
		|		ИНАЧЕ
		|			ТабЧасть.СкладИсходный
		|		КОНЕЦ КАК Склад,
		|	
		|	
		|	ВЫБОР КОГДА ТабЧасть.ОбособленноИсходный ТОГДА
		|				
		|				ТабЧасть.НазначениеИсходный
		|				
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		КОНЕЦ КАК Назначение,
		|	
		|	-ТабЧасть.Количество                КАК Количество,
		|	ТабЧасть.ВариантОбеспеченияИсходный КАК ВариантОбеспечения,
		|	ТабЧасть.Ссылка.Распоряжение        КАК Заказ,
		|	ТабЧасть.ДатаПотребностиИсходный    КАК ЖелаемаяДатаОтгрузки,
		|	ЛОЖЬ                                КАК ПоГрафику,
		|	НЕОПРЕДЕЛЕНО                        КАК РаспоряжениеВГрафике,
		|	0                                   КАК КоличествоВГрафике
		|ИЗ
		|	Документ.КорректировкаЗаказаМатериаловВПроизводство.МатериалыИУслуги КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.ВариантОбеспеченияИсходный <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
		|		И ТабЧасть.КодСтрокиИсходный <> 0";
	
	РаспределениеЗапасовДвижения.ЗапланироватьРасходЗапаса(
		Запрос,
		ТекстыЗапроса,
		Регистры,
		ТекстЗапросаТабЧасть);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаЗаказыМатериаловВПроизводство(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ЗаказыМатериаловВПроизводство";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	// Отмена заказа
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Распоряжение КАК Распоряжение,
	|	&Подразделение КАК Подразделение,
	|	&Подразделение КАК Получатель,
	|	ТаблицаМатериалы.Номенклатура КАК Номенклатура,
	|	ТаблицаМатериалы.Характеристика КАК Характеристика,
	|	ТаблицаМатериалы.СерияИсходный КАК Серия,
	|	ТаблицаМатериалы.СкладИсходный КАК Склад,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.ОбособленноИсходный
	|			ТОГДА ТаблицаМатериалы.НазначениеИсходный
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.ОбособленноИсходный
	|			ТОГДА ТаблицаМатериалы.НазначениеИсходный
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК НазначениеОтправителя,
	|	ТаблицаМатериалы.КодСтрокиИсходный КАК КодСтроки,
	|	-ТаблицаМатериалы.Количество КАК Заказано,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.ВариантОбеспеченияИсходный = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
	|			ТОГДА -ТаблицаМатериалы.Количество
	|	КОНЕЦ КАК КОформлению
	|ИЗ
	|	Документ.КорректировкаЗаказаМатериаловВПроизводство.МатериалыИУслуги КАК ТаблицаМатериалы
	|ГДЕ
	|	ТаблицаМатериалы.Ссылка = &Ссылка
	|	И ТаблицаМатериалы.ЗаказатьНаСкладИсходный
	|	И ТаблицаМатериалы.КодСтрокиИсходный <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Распоряжение КАК Распоряжение,
	|	&Подразделение КАК Подразделение,
	|	&Подразделение КАК Получатель,
	|	ТаблицаМатериалы.Номенклатура КАК Номенклатура,
	|	ТаблицаМатериалы.Характеристика КАК Характеристика,
	|	ТаблицаМатериалы.Серия КАК Серия,
	|	ТаблицаМатериалы.Склад КАК Склад,
	|	ВЫБОР 
	|		КОГДА ТаблицаМатериалы.Обособленно
	|			ТОГДА ТаблицаМатериалы.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ВЫБОР 
	|		КОГДА ТаблицаМатериалы.Обособленно
	|			ТОГДА ТаблицаМатериалы.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК НазначениеОтправителя,
	|	ТаблицаМатериалы.КодСтроки КАК КодСтроки,
	|	ТаблицаМатериалы.Количество КАК Заказано,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
	|			ТОГДА ТаблицаМатериалы.Количество
	|	КОНЕЦ КАК КОформлению
	|ИЗ
	|	Документ.КорректировкаЗаказаМатериаловВПроизводство.МатериалыИУслуги КАК ТаблицаМатериалы
	|ГДЕ
	|	ТаблицаМатериалы.Ссылка = &Ссылка
	|	И ТаблицаМатериалы.ЗаказатьНаСклад";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаЗаказыМатериаловСУчетомКорректировок(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ЗаказыМатериаловСУчетомКорректировок";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	// Сторно движений
	|ВЫБРАТЬ
	|	ТаблицаМатериалы.НомерСтроки                   КАК НомерСтроки,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)                   КАК Период,
	|	&Организация                                   КАК Организация,
	|	&Подразделение                                 КАК Подразделение,
	|	&Распоряжение                                  КАК Распоряжение,
	|	ТаблицаМатериалы.КодСтрокиРаспоряжения         КАК КодСтрокиРаспоряжения,
	|	ТаблицаМатериалы.ВариантОбеспеченияИсходный    КАК ВариантОбеспечения,
	|	ТаблицаМатериалы.ОбособленноИсходный    	   КАК Обособленно,
	|	ТаблицаМатериалы.ДатаПотребностиИсходный       КАК ДатаПотребности,
	|	ТаблицаМатериалы.КодСтрокиИсходный             КАК КодСтроки,
	|	ТаблицаМатериалы.ОтмененоИсходный              КАК Отменено,
	|	ТаблицаМатериалы.СерияИсходный                 КАК Серия,
	|	ТаблицаМатериалы.СкладИсходный                 КАК Склад,
	|	ТаблицаМатериалы.УпаковкаИсходный              КАК Упаковка,
	|	ТаблицаМатериалы.Номенклатура                  КАК Номенклатура,
	|	ТаблицаМатериалы.Характеристика                КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.ОбособленноИсходный
	|			ТОГДА ТаблицаМатериалы.НазначениеИсходный
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
	|	КОНЕЦ                                          КАК Назначение,
	|	-ТаблицаМатериалы.Количество                   КАК Количество,
	|	-ТаблицаМатериалы.КоличествоУпаковок           КАК КоличествоУпаковок
	|ИЗ
	|	Документ.КорректировкаЗаказаМатериаловВПроизводство.МатериалыИУслуги КАК ТаблицаМатериалы
	|ГДЕ
	|	ТаблицаМатериалы.Ссылка = &Ссылка
	|	И ТаблицаМатериалы.КодСтрокиИсходный <> 0
	|	И НЕ ТаблицаМатериалы.КорректировкаНовойСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Движения по текущему документу
	|ВЫБРАТЬ
	|	ТаблицаМатериалы.НомерСтроки                   КАК НомерСтроки,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)                   КАК Период,
	|	&Организация                                   КАК Организация,
	|	&Подразделение                                 КАК Подразделение,
	|	&Распоряжение                                  КАК Распоряжение,
	|	ТаблицаМатериалы.КодСтрокиРаспоряжения         КАК КодСтрокиРаспоряжения,
	|	ТаблицаМатериалы.ВариантОбеспечения            КАК ВариантОбеспечения,
	|	ТаблицаМатериалы.Обособленно    	   		   КАК Обособленно,
	|	ТаблицаМатериалы.ДатаПотребности               КАК ДатаПотребности,
	|	ТаблицаМатериалы.КодСтроки                     КАК КодСтроки,
	|	ТаблицаМатериалы.Отменено                      КАК Отменено,
	|	ТаблицаМатериалы.Серия                         КАК Серия,
	|	ТаблицаМатериалы.Склад                         КАК Склад,
	|	ТаблицаМатериалы.Упаковка                      КАК Упаковка,
	|	ТаблицаМатериалы.Номенклатура                  КАК Номенклатура,
	|	ТаблицаМатериалы.Характеристика                КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.Обособленно
	|			ТОГДА ТаблицаМатериалы.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
	|	КОНЕЦ                                          КАК Назначение,
	|	ТаблицаМатериалы.Количество                    КАК Количество,
	|	ТаблицаМатериалы.КоличествоУпаковок            КАК КоличествоУпаковок
	|ИЗ
	|	Документ.КорректировкаЗаказаМатериаловВПроизводство.МатериалыИУслуги КАК ТаблицаМатериалы
	|ГДЕ
	|	ТаблицаМатериалы.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
//-- Устарело_Производство21
