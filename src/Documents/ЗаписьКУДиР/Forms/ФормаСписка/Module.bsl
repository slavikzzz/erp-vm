#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Документы.ЗаписьКУДиР);
	Элементы.СписокКонтекстноеМенюИзменитьВыделенные.Видимость = МожноРедактировать;

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		ОтборОрганизация = Параметры.Отбор.Организация;
	КонецЕсли;
	
	ОтборДата = Неопределено;
	РежимОтборПоДате = Неопределено;
	
	Если Параметры.Отбор.Свойство("Дата", ОтборДата) Тогда
		
		Если Параметры.Свойство("РежимОтбораПоДате", РежимОтборПоДате) Тогда
			
			Если РежимОтборПоДате = "ДоДаты" Тогда			
				ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(
					Список, "Дата", КонецДня(ОтборДата), ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);			
			ИначеЕсли РежимОтборПоДате = "СДаты" Тогда			
				ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(
					Список, "Дата", НачалоДня(ОтборДата), ВидСравненияКомпоновкиДанных.БольшеИлиРавно);
			Иначе
				ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(
					Список, "Дата", КонецДня(ОтборДата), ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);
				ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(
					Список, "Дата", НачалоДня(ОтборДата), ВидСравненияКомпоновкиДанных.БольшеИлиРавно);
			КонецЕсли; 
			
		Иначе
			ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(
				Список, "Дата", КонецДня(ОтборДата), ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);
			ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(
				Список, "Дата", НачалоДня(ОтборДата), ВидСравненияКомпоновкиДанных.БольшеИлиРавно);
		КонецЕсли;
		
		Параметры.Отбор.Удалить("Дата");
		
	КонецЕсли;
	

	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список.Дата", Элементы.Дата.Имя);


	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		ОтборОрганизация = ОбщегоНазначенияБПКлиент.ИзменитьОтборПоОсновнойОрганизации(Список, ,Параметр);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)

	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список, 
		"Организация", 
		ОтборОрганизация, 
		ЗначениеЗаполнено(ОтборОрганизация));

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);

КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти

