#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(Сотрудники.Сотрудник, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.РеестрДСВ_3;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыгрузитьФайлыВоВременноеХранилище(Ссылка, УникальныйИдентификатор = Неопределено) Экспорт
	
	ДанныеФайла = ЗарплатаКадры.ПолучитьДанныеФайла(Ссылка, УникальныйИдентификатор);
	
	ОписаниеВыгруженногоФайла = ПерсонифицированныйУчет.ОписаниеВыгруженногоФайлаОтчетности();
	
	ОписаниеВыгруженногоФайла.Владелец = Ссылка;
	ОписаниеВыгруженногоФайла.АдресВоВременномХранилище = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	ОписаниеВыгруженногоФайла.ИмяФайла = ДанныеФайла.ИмяФайла;
	ОписаниеВыгруженногоФайла.ПроверятьCheckXML = Истина;
	ОписаниеВыгруженногоФайла.ПроверятьCheckUFA = Истина;
	ОписаниеВыгруженногоФайла.ПроверятьПОПД = Истина;
	
	ВыгруженныеФайлы = Новый Массив;
	ВыгруженныеФайлы.Добавить(ОписаниеВыгруженногоФайла);
	
	Возврат ВыгруженныеФайлы;
	
КонецФункции

Функция ПолучитьСтруктуруПроверяемыхДанных() Экспорт
	Возврат ПерсонифицированныйУчет.ПолучитьСтруктуруПроверяемыхДанных();
КонецФункции

Функция ПолучитьПредставленияПроверяемыхРеквизитов() Экспорт
	Возврат ПерсонифицированныйУчет.ПолучитьПредставленияПроверяемыхРеквизитов();
КонецФункции

Функция ПолучитьСоответствиеРеквизитовФормеОбъекта(ДанныеДляПроверки) Экспорт
	Возврат ПерсонифицированныйУчет.ПолучитьСоответствиеРеквизитовФормеОбъекта();
КонецФункции

Функция ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта() Экспорт
	
	СоответствиеРеквизитовПутиВФормеОбъекта = ПерсонифицированныйУчет.ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта();
	
	Возврат СоответствиеРеквизитовПутиВФормеОбъекта;
	
КонецФункции

Функция ПолучитьСоответствиеПроверяемыхРеквизитовОткрываемымОбъектам(ДокументСсылка, ДанныеДляПроверки) Экспорт
	Возврат Новый Структура;
КонецФункции

#Область ПроцедурыПолученияДанныхДляЗаполненияИПроведенияДокумента

Функция СформироватьЗапросПоШапкеДляПечати(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивОбъектов);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.РеестрДСВ_3";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = МассивОбъектов;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрДСВ_3.Ссылка КАК Ссылка,
	|	РеестрДСВ_3.Организация КАК Организация,
	|	СведенияОбОрганизациях.ИНН КАК ИНН,
	|	СведенияОбОрганизациях.КПП КАК КПП,
	|	СведенияОбОрганизациях.НаименованиеСокращенное КАК Наименование,
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР,
	|	РеестрДСВ_3.НомерПлатежногоПоручения,
	|	РеестрДСВ_3.ДатаПлатежногоПоручения,
	|	РеестрДСВ_3.ДатаИсполненияПлатежногоПоручения,
	|	РеестрДСВ_3.ОтчетныйПериод КАК ПериодРегистрации,
	|	РеестрДСВ_3.Руководитель,
	|	РеестрДСВ_3.ГлавныйБухгалтер,
	|	РеестрДСВ_3.ДолжностьРуководителя.Наименование КАК Должность,
	|	РеестрДСВ_3.Дата,
	|	РеестрДСВ_3.ОкончаниеОтчетногоПериода
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.РеестрДСВ_3 КАК РеестрДСВ_3
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО РеестрДСВ_3.Организация = СведенияОбОрганизациях.Организация
	|			И РеестрДСВ_3.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период
	|ГДЕ
	|	РеестрДСВ_3.Ссылка В(&МассивСсылок)";
	
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	ИменаПолейОтветственныхЛиц.Добавить("ГлавныйБухгалтер");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрДСВ_3.Ссылка КАК Документ,
	|	РеестрДСВ_3.Дата КАК Дата,
	|	РеестрДСВ_3.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
	|	РеестрДСВ_3.ИНН КАК ИНН,
	|	РеестрДСВ_3.КПП КАК КПП,
	|	РеестрДСВ_3.Наименование КАК Наименование,
	|	РеестрДСВ_3.НомерПлатежногоПоручения КАК НомерПлатежногоПоручения,
	|	РеестрДСВ_3.ДатаПлатежногоПоручения КАК ДатаПлатежногоПоручения,
	|	РеестрДСВ_3.ДатаИсполненияПлатежногоПоручения КАК ДатаИсполненияПлатежногоПоручения,
	|	РеестрДСВ_3.ПериодРегистрации КАК ПериодРегистрации,
	|	РеестрДСВ_3.Должность КАК РуководительДолжность,
	|	ЕСТЬNULL(ВТФИОРуководителейПоследние.РасшифровкаПодписи, """") КАК Руководитель,
	|	ЕСТЬNULL(ВТФИОГлавБухПоследние.РасшифровкаПодписи, """") КАК ГлавныйБухгалтер
	|ИЗ
	|	ВТДанныеДокументов КАК РеестрДСВ_3
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОРуководителейПоследние
	|		ПО РеестрДСВ_3.Ссылка = ВТФИОРуководителейПоследние.Ссылка
	|			И РеестрДСВ_3.Руководитель = ВТФИОРуководителейПоследние.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОГлавБухПоследние
	|		ПО РеестрДСВ_3.Ссылка = ВТФИОГлавБухПоследние.Ссылка
	|			И РеестрДСВ_3.ГлавныйБухгалтер = ВТФИОГлавБухПоследние.ФизическоеЛицо";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоСотрудникамДляПечатиМассивОбъектов(МассивОбъектов)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрДСВ_3Сотрудники.Ссылка КАК Документ,
	|	РеестрДСВ_3Сотрудники.Фамилия + "" "" + РеестрДСВ_3Сотрудники.Имя + "" "" + РеестрДСВ_3Сотрудники.Отчество КАК ФИО,
	|	РеестрДСВ_3Сотрудники.СтраховойНомерПФР,
	|	РеестрДСВ_3Сотрудники.ВзносыРаботника,
	|	РеестрДСВ_3Сотрудники.ВзносыРаботодателя,
	|	РеестрДСВ_3Сотрудники.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.РеестрДСВ_3.Сотрудники КАК РеестрДСВ_3Сотрудники
	|ГДЕ
	|	РеестрДСВ_3Сотрудники.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ,
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

#Область ДляОбеспеченияФормированияВыходногоФайла

// Формирует файл, который можно будет записать на дискетку.
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаПоСотрудникам) Экспорт
	
	ВыборкаПоШапкеДокумента.Следующий();
	
	Если ВыборкаПоШапкеДокумента.ОтчетныйПериод >= Дата(2023, 1, 1) Тогда 
		Возврат СформироватьВыходнойФайлЕФС1(ВыборкаПоШапкеДокумента, ВыборкаПоСотрудникам);
	КонецЕсли;
	
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР70XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	ТекстФайла	=	"";
	НомерДокументаВПачке = 0;
	
	ДатаЗаполнения 			= ВыборкаПоШапкеДокумента.Дата;
	КоличествоДокументов 	= ВыборкаПоСотрудникам.Количество();
	
	НомерДокументаВПачке = 1;
	// Загружаем формат файла сведений.
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	
	УзелПФР = ПерсонифицированныйУчет.УзелФайлаПФР(ДеревоВыгрузки);
	
	ПерсонифицированныйУчет.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, ДеревоФормата, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР);
	
	// Добавляем реквизит ПачкаВходящихДокументов.
	УзелПачкаВходящихДокументов = ПерсонифицированныйУчет.ЗаполнитьНаборЗаписейВходящаяОпись(УзелПФР, ДеревоФормата, "РЕЕСТР_ДСВ_РАБОТОДАТЕЛЬ", ВыборкаПоШапкеДокумента, КоличествоДокументов, НомерДокументаВПачке,,,"ВХОДЯЩАЯ_ОПИСЬ_РЕЕСТРА");
	
	ФорматЗаявлениеДСВ = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "РЕЕСТР_ДСВ_РАБОТОДАТЕЛЬ");
	
	ОписаниеРаботодателя = ОбщегоНазначения.СкопироватьРекурсивно(ФорматЗаявлениеДСВ.Работодатель.Значение);
	ПерсонифицированныйУчет.ЗаполнитьСоставительПачки(ОписаниеРаботодателя, ВыборкаПоШапкеДокумента);
	
	Пока ВыборкаПоСотрудникам.Следующий() Цикл
		
		НомерДокументаВПачке = НомерДокументаВПачке + 1;
		
		НаборЗаписейЗаявлениеДСВ = ОбщегоНазначения.СкопироватьРекурсивно(ФорматЗаявлениеДСВ);
		
		НаборЗаписейЗаявлениеДСВ.НомерВПачке.Значение = НомерДокументаВПачке;
		НаборЗаписейЗаявлениеДСВ.СтраховойНомер.Значение = ВыборкаПоСотрудникам.СтраховойНомерПФР;
		
		НаборЗаписейФИО = НаборЗаписейЗаявлениеДСВ.ФИО.Значение;
		НаборЗаписейФИО.Фамилия = ВРег(СокрЛП(ВыборкаПоСотрудникам.Фамилия));
		НаборЗаписейФИО.Имя = ВРег(СокрЛП(ВыборкаПоСотрудникам.Имя));
		НаборЗаписейФИО.Отчество = ВРег(СокрЛП(ВыборкаПоСотрудникам.Отчество));
		
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейЗаявлениеДСВ.ФИО, "Фамилия");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейЗаявлениеДСВ.ФИО, "Имя");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейЗаявлениеДСВ.ФИО, "Отчество");
		
		НаборЗаписейЗаявлениеДСВ.Работодатель.Значение = ОбщегоНазначения.СкопироватьРекурсивно(ОписаниеРаботодателя);
		
		НаборЗаписейЗаявлениеДСВ.СуммаДСВРаботника.Значение = ВыборкаПоСотрудникам.ВзносыРаботника;
		НаборЗаписейЗаявлениеДСВ.СуммаДСВРаботодателя.Значение = ВыборкаПоСотрудникам.ВзносыРаботодателя;
		
		ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "РЕЕСТР_ДСВ_РАБОТОДАТЕЛЬ",""), НаборЗаписейЗаявлениеДСВ);
		
	КонецЦикла;
	
	// Преобразуем дерево в строковое описание XML.
	ТекстФайла = ПерсонифицированныйУчет.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки,  "Окружение=""В составе файла"" Стадия=""До обработки"" ДобровольныеПравоотношения=""ДСВ""");
	
	Возврат ТекстФайла;
	
КонецФункции

Функция СформироватьВыходнойФайлЕФС1(ВыборкаПоШапкеДокумента, ВыборкаПоСотрудникам) Экспорт
	
	РазделыЕФС1 = ПерсонифицированныйУчет.СписокРазделовЕФС1();
	РазделыЕФС1.ДСВ = Истина;
	
	Возврат ПерсонифицированныйУчет.СформироватьВыходнойФайлЕФС1(РазделыЕФС1, ВыборкаПоШапкеДокумента, , , , ВыборкаПоСотрудникам);
	
КонецФункции

Функция СформироватьЗапросПоШапкеДокумента(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.РеестрДСВ_3";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = Ссылка;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеестрДСВ_3Сотрудники.Ссылка КАК Ссылка,
		|	СУММА(РеестрДСВ_3Сотрудники.ВзносыРаботника) КАК ВзносыРаботника,
		|	СУММА(РеестрДСВ_3Сотрудники.ВзносыРаботодателя) КАК ВзносыРаботодателя,
		|	СУММА(ВЫБОР
		|			КОГДА РеестрДСВ_3Сотрудники.ВзносыРаботника > 0
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВзносыРаботникаКоличество,
		|	СУММА(ВЫБОР
		|			КОГДА РеестрДСВ_3Сотрудники.ВзносыРаботодателя > 0
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВзносыРаботодателяКоличество,
		|	КОЛИЧЕСТВО(РеестрДСВ_3Сотрудники.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ВТИтогиВзносы
		|ИЗ
		|	Документ.РеестрДСВ_3.Сотрудники КАК РеестрДСВ_3Сотрудники
		|ГДЕ
		|	РеестрДСВ_3Сотрудники.Ссылка В(&Ссылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	РеестрДСВ_3Сотрудники.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеестрДСВ_3.Дата КАК Дата,
		|	РеестрДСВ_3.Номер КАК Номер,
		|	РеестрДСВ_3.Ссылка КАК Ссылка,
		|	РеестрДСВ_3.Организация КАК Организация,
		|	СведенияОбОрганизациях.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
		|	СведенияОбОрганизациях.РегистрационныйНомерСФР КАК РегистрационныйНомерСФР,
		|	СведенияОбОрганизациях.НаименованиеСокращенное КАК НаименованиеСокращенное,
		|	СведенияОбОрганизациях.ИНН КАК ИНН,
		|	СведенияОбОрганизациях.КПП КАК КПП,
		|	СведенияОбОрганизациях.НаименованиеПолное КАК НаименованиеПолное,
		|	СведенияОбОрганизациях.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
		|	СведенияОбОрганизациях.КодПоОКПО КАК КодПоОКПО,
		|	СведенияОбОрганизациях.ОГРН КАК ОГРН,
		|	СведенияОбОрганизациях.КодОКФС КАК КодОКФС,
		|	СведенияОбОрганизациях.КодОКВЭД КАК КодОКВЭД,
		|	СведенияОбОрганизациях.КодОКВЭД2 КАК КодОКВЭД2,
		|	ГОД(РеестрДСВ_3.ОтчетныйПериод) КАК Год,
		|	РеестрДСВ_3.ОтчетныйПериод КАК ОтчетныйПериод,
		|	РеестрДСВ_3.НомерПлатежногоПоручения КАК НомерПоручения,
		|	РеестрДСВ_3.ДатаПлатежногоПоручения КАК ДатаПоручения,
		|	РеестрДСВ_3.ДатаИсполненияПлатежногоПоручения КАК ДатаИсполненияПоручения,
		|	РеестрДСВ_3.НомерПачки КАК НомерПачки,
		|	РеестрДСВ_3.ПрежнийСтраховательНаименованиеПолное КАК ПрежнийСтраховательНаименованиеПолное,
		|	РеестрДСВ_3.ПрежнийСтраховательРегистрационныйНомерПФР КАК ПрежнийСтраховательРегистрационныйНомерПФР,
		|	РеестрДСВ_3.ПрежнийСтраховательИНН КАК ПрежнийСтраховательИНН,
		|	РеестрДСВ_3.ПрежнийСтраховательКПП КАК ПрежнийСтраховательКПП,
		|	РеестрДСВ_3.ПрежнийСтраховательОКФС КАК ПрежнийСтраховательОКФС,
		|	РеестрДСВ_3.ПрежнийСтраховательОКОГУ КАК ПрежнийСтраховательОКОГУ,
		|	РеестрДСВ_3.ПрежнийСтраховательОКПО КАК ПрежнийСтраховательОКПО,
		|	РеестрДСВ_3.ПрежнийСтраховательОКВЭД КАК ПрежнийСтраховательОКВЭД,
		|	РеестрДСВ_3.ПрежнийСтраховательОГРН КАК ПрежнийСтраховательОГРН,
		|	РеестрДСВ_3.ПрежнийСтраховательКодКатегории КАК ПрежнийСтраховательКодКатегории,
		|	ЕСТЬNULL(ИтогиВзносы.ВзносыРаботника, 0) + ЕСТЬNULL(ИтогиВзносы.ВзносыРаботодателя, 0) КАК СуммаДСВОбщая,
		|	ЕСТЬNULL(ИтогиВзносы.ВзносыРаботника, 0) КАК СуммаДСВРаботника,
		|	ЕСТЬNULL(ИтогиВзносы.ВзносыРаботодателя, 0) КАК СуммаДСВРаботодателя,
		|	ЕСТЬNULL(ИтогиВзносы.ВзносыРаботникаКоличество, 0) КАК ВзносыРаботникаКоличество,
		|	ЕСТЬNULL(ИтогиВзносы.ВзносыРаботодателяКоличество, 0) КАК ВзносыРаботодателяКоличество,
		|	ЕСТЬNULL(ИтогиВзносы.НомерСтроки, 0) КАК КоличествоСтрок,
		|	РеестрДСВ_3.Руководитель КАК Руководитель,
		|	РеестрДСВ_3.ДолжностьРуководителя КАК ДолжностьРуководителя,
		|	РеестрДСВ_3.ИмяФайлаДляПФР КАК ИмяФайлаДляПФР
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ИЗ
		|	Документ.РеестрДСВ_3 КАК РеестрДСВ_3
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
		|		ПО РеестрДСВ_3.Организация = СведенияОбОрганизациях.Организация
		|			И РеестрДСВ_3.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтогиВзносы КАК ИтогиВзносы
		|		ПО РеестрДСВ_3.Ссылка = ИтогиВзносы.Ссылка
		|ГДЕ
		|	РеестрДСВ_3.Ссылка В(&Ссылка)";
	
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Истина, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДокументов.Дата КАК Дата,
		|	ДанныеДокументов.Номер КАК Номер,
		|	ДанныеДокументов.Ссылка КАК Ссылка,
		|	ДанныеДокументов.Организация КАК Организация,
		|	ДанныеДокументов.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
		|	ДанныеДокументов.РегистрационныйНомерСФР КАК РегистрационныйНомерСФР,
		|	ДанныеДокументов.НаименованиеСокращенное КАК НаименованиеСокращенное,
		|	ДанныеДокументов.ИНН КАК ИНН,
		|	ДанныеДокументов.КПП КАК КПП,
		|	ДанныеДокументов.НаименованиеПолное КАК НаименованиеПолное,
		|	ДанныеДокументов.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
		|	ДанныеДокументов.ОГРН КАК ОГРН,
		|	ДанныеДокументов.КодПоОКПО КАК ОКПО,
		|	ДанныеДокументов.КодОКФС КАК КодОКФС,
		|	ДанныеДокументов.КодОКВЭД КАК КодОКВЭД,
		|	ДанныеДокументов.КодОКВЭД2 КАК КодОКВЭД2,
		|	ДанныеДокументов.Год КАК Год,
		|	ДанныеДокументов.ОтчетныйПериод КАК ОтчетныйПериод,
		|	ДанныеДокументов.НомерПоручения КАК НомерПоручения,
		|	ДанныеДокументов.ДатаПоручения КАК ДатаПоручения,
		|	ДанныеДокументов.ДатаИсполненияПоручения КАК ДатаИсполненияПоручения,
		|	ДанныеДокументов.НомерПачки КАК НомерПачки,
		|	ДанныеДокументов.ПрежнийСтраховательНаименованиеПолное КАК ПрежнийСтраховательНаименованиеПолное,
		|	ДанныеДокументов.ПрежнийСтраховательРегистрационныйНомерПФР КАК ПрежнийСтраховательРегистрационныйНомерПФР,
		|	ДанныеДокументов.ПрежнийСтраховательИНН КАК ПрежнийСтраховательИНН,
		|	ДанныеДокументов.ПрежнийСтраховательКПП КАК ПрежнийСтраховательКПП,
		|	ДанныеДокументов.ПрежнийСтраховательОКФС КАК ПрежнийСтраховательОКФС,
		|	ДанныеДокументов.ПрежнийСтраховательОКОГУ КАК ПрежнийСтраховательОКОГУ,
		|	ДанныеДокументов.ПрежнийСтраховательОКПО КАК ПрежнийСтраховательОКПО,
		|	ДанныеДокументов.ПрежнийСтраховательОКВЭД КАК ПрежнийСтраховательОКВЭД,
		|	ДанныеДокументов.ПрежнийСтраховательОГРН КАК ПрежнийСтраховательОГРН,
		|	ДанныеДокументов.ПрежнийСтраховательКодКатегории КАК ПрежнийСтраховательКодКатегории,
		|	ДанныеДокументов.СуммаДСВОбщая КАК СуммаДСВОбщая,
		|	ДанныеДокументов.СуммаДСВРаботника КАК СуммаДСВРаботника,
		|	ДанныеДокументов.СуммаДСВРаботодателя КАК СуммаДСВРаботодателя,
		|	ДанныеДокументов.ВзносыРаботникаКоличество КАК ВзносыРаботникаКоличество,
		|	ДанныеДокументов.ВзносыРаботодателяКоличество КАК ВзносыРаботодателяКоличество,
		|	ДанныеДокументов.КоличествоСтрок КАК КоличествоСтрок,
		|	ДанныеДокументов.ДолжностьРуководителя КАК ДолжностьРуководителя,
		|	ЕСТЬNULL(ФИОПоследние.ФИОПолные, """") КАК Руководитель,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(ЕСТЬNULL(ФИОПоследние.Фамилия, """"), 1, 10) = ""-""
		|			ТОГДА """"
		|		ИНАЧЕ ЕСТЬNULL(ФИОПоследние.Фамилия, """")
		|	КОНЕЦ КАК ФамилияРуководителя,
		|	ЕСТЬNULL(ФИОПоследние.Имя, """") КАК ИмяРуководителя,
		|	ЕСТЬNULL(ФИОПоследние.Отчество, """") КАК ОтчествоРуководителя,
		|	ДанныеДокументов.ИмяФайлаДляПФР КАК ИмяФайлаДляПФР
		|ИЗ
		|	ВТДанныеДокументов КАК ДанныеДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИОПоследние
		|		ПО ДанныеДокументов.Ссылка = ФИОПоследние.Ссылка
		|			И ДанныеДокументов.Руководитель = ФИОПоследние.ФизическоеЛицо";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоСотрудникам(Ссылка)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеестрДСВ_3Сотрудники.Ссылка КАК Ссылка,
		|	РеестрДСВ_3Сотрудники.НомерСтроки КАК НомерСтроки,
		|	РеестрДСВ_3Сотрудники.Сотрудник КАК Сотрудник,
		|	РеестрДСВ_3Сотрудники.Фамилия КАК Фамилия,
		|	РеестрДСВ_3Сотрудники.Имя КАК Имя,
		|	РеестрДСВ_3Сотрудники.Отчество КАК Отчество,
		|	РеестрДСВ_3Сотрудники.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	РеестрДСВ_3Сотрудники.ВзносыРаботника КАК ВзносыРаботника,
		|	РеестрДСВ_3Сотрудники.ВзносыРаботодателя КАК ВзносыРаботодателя
		|ИЗ
		|	Документ.РеестрДСВ_3.Сотрудники КАК РеестрДСВ_3Сотрудники
		|ГДЕ
		|	РеестрДСВ_3Сотрудники.Ссылка В(&Ссылка)";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ОбработкаФормированияФайла(Объект) Экспорт
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДокумента(Объект.Ссылка).Выбрать();
	ВыборкаПоСотрудникам = СформироватьЗапросПоСотрудникам(Объект.Ссылка).Выбрать();
	
	ТекстФайла = СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаПоСотрудникам);
	
	Если Объект.ОтчетныйПериод >= Дата(2023, 1, 1) Тогда
		ЗарплатаКадры.ЗаписатьФайлВАрхив(Объект.Ссылка, Объект.ИмяФайлаДляПФР, ТекстФайла, , "UTF-8", Ложь, Ложь);
	Иначе 
		ЗарплатаКадры.ЗаписатьФайлВАрхив(Объект.Ссылка, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР, ТекстФайла);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_ФормаЕФС_1";
	КомандаПечати.Представление = НСтр("ru = 'ЕФС-1';
										|en = 'Unified Information Form-1'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИсключитьПередачуВКабинетСотрудника");
	
	// ДСВ-3, 2009 год
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'ДСВ-3, форма 2009 года';
										|en = 'DSV-3, 2009 form'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	// ДСВ-3, 2016 год
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "Реестр2016";
	КомандаПечати.Представление = НСтр("ru = 'ДСВ-3, форма 2016 года';
										|en = 'DSV-3, 2016 form'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Реестр") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Реестр", "Реестр, 2009 год", СформироватьПечатнуюФормуДСВ_3(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Реестр2016") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Реестр2016", "Реестр, 2016 год", СформироватьПечатнуюФормуДСВ_3(МассивОбъектов, ОбъектыПечати, "ПФ_MXL_Реестр2016"));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ФормаЕФС_1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ПФ_MXL_ФормаЕФС_1", 
			"ЕФС-1", 
			ПечатнаяФормаЕФС_1(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуДСВ_3(МассивОбъектов, ОбъектыПечати, ИмяМакета = "ПФ_MXL_Реестр")
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ВыборкаПоДокументам = СформироватьЗапросПоШапкеДляПечати(МассивОбъектов).Выбрать();
	
	ВыборкаПоСотрудникам = СформироватьЗапросПоСотрудникамДляПечатиМассивОбъектов(МассивОбъектов).Выбрать();
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрДСВ_3_Реестр";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеестрДСВ_3." + ИмяМакета);

	ВзносыРаботникаИтог = 0;
	ВзносыРаботодателяИтог = 0;

	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если ИмяМакета = "ПФ_MXL_Реестр2016" Тогда 
			Макет = ?(ВыборкаПоДокументам.Дата < '20220819',
				УправлениеПечатью.МакетПечатнойФормы("Документ.РеестрДСВ_3." + ИмяМакета),
				УправлениеПечатью.МакетПечатнойФормы("Документ.РеестрДСВ_3.ПФ_MXL_Реестр2022"));
		КонецЕсли;	
	
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ПовторятьПриПечати");
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаРаботника");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);
		
		СтруктураПоиска = Новый Структура("Документ", ВыборкаПоДокументам.Документ);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ВыборкаПоСотрудникам.Сбросить();
		
		Если ВыборкаПоСотрудникам.НайтиСледующий(СтруктураПоиска) Тогда
			
			ВзносыРаботникаИтог = 0;
			ВзносыРаботодателяИтог = 0;
			
			ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("Документ");
			
			Пока ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("НомерСтроки") Цикл
				ОбластьСтрока.Параметры.Заполнить(ВыборкаПоСотрудникам);
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				
				ВзносыРаботникаИтог = ВзносыРаботникаИтог + ВыборкаПоСотрудникам.ВзносыРаботника;
				ВзносыРаботодателяИтог = ВзносыРаботодателяИтог + ВыборкаПоСотрудникам.ВзносыРаботодателя;
			КонецЦикла;
		КонецЕсли;
		
		ОбластьПодвал.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ОбластьПодвал.Параметры.ВзносыРаботника = ВзносыРаботникаИтог;
		ОбластьПодвал.Параметры.ВзносыРаботодателя = ВзносыРаботодателяИтог;
		
		ОбластьПодвал.Параметры.ВзносыВсего = ВзносыРаботникаИтог + ВзносыРаботодателяИтог;
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Документ);
		
	КонецЦикла;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатнаяФормаЕФС_1(МассивОбъектов, ОбъектыПечати)
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДокумента(МассивОбъектов).Выбрать();
	ВыборкаПоРаботникам = СформироватьЗапросПоСотрудникам(МассивОбъектов).Выбрать();
	
	РазделыЕФС1 = ПерсонифицированныйУчет.СписокРазделовЕФС1();
	РазделыЕФС1.ДСВ = Истина;
	
	Возврат ПерсонифицированныйУчет.ПечатнаяФормаЕФС_1(ОбъектыПечати, РазделыЕФС1, ВыборкаПоШапкеДокумента, , , , ВыборкаПоРаботникам);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли