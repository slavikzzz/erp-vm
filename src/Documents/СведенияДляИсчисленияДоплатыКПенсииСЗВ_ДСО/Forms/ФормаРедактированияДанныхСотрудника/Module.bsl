#Область ОписаниеПеременных

&НаКлиенте
Перем СтарыеЗначенияКонтролируемыхПолейЧленыЛетныхЭкипажей;

&НаКлиенте
Перем СтарыеЗначенияКонтролируемыхПолейШахтеры;

&НаКлиенте
Перем СтарыеЗначенияКонтролируемыхПолейЗаработок;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РедактируемыйДокументСсылка = Параметры.РедактируемыйДокументСсылка;
	Организация = Параметры.Организация;
	Период = Параметры.Период;
	ОкончаниеПериода = Параметры.ОкончаниеПериода;
	Сотрудник = Параметры.Сотрудник;
	ТипСведений = Параметры.ТипСведений;
	
	ПорядокМесяцев = Новый ФиксированноеСоответствие(Документы.СведенияДляИсчисленияДоплатыКПенсииСЗВ_ДСО.ПорядокМесяцевСЗВ_ДСО());
	
	ДобавитьКонтрольИсправлений();
	УстановитьСписокВыбораМесяцев();
	
	ДанныеИзВременногоХранилищаВДанныеФормы(Параметры.АдресВоВременномХранилище);
	
	УстановитьЗаголовокКарточки();
	УстановитьСвойстваЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СтруктураДанныхПоСотруднику = СтруктураДанныхПоСотруднику(ЭтотОбъект);	
	
	ПерсонифицированныйУчетКлиентСервер.ДокументыСЗВУстановитьЗначенияКонтролируемыхПолей(
		СтруктураДанныхПоСотруднику, 
		КонтролируемыеПоля, 
		СтарыеЗначенияКонтролируемыхПолейЗаработок);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОтмененаИсправления" Тогда
		ДанныеИзВременногоХранилищаВДанныеФормы(Параметр.АдресХранилища);
		Активизировать();
	ИначеЕсли ИмяСобытия = "ИзменениеДанныхФизическогоЛица" И Не ТолькоПросмотр Тогда 
		ЗаполнитьИзменившиесяДанныеФизическогоЛица(Параметр);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)
	
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Фамилия");
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Имя");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчествоПриИзменении(Элемент)
	
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "Отчество");
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойНомерПФРПриИзменении(Элемент)
	
	ПерсонифицированныйУчетКлиентСервер.УстановитьФорматСтраховогоНомераПФР(СтраховойНомерПФР);
	ЗарплатаКадрыОтображениеОшибокКлиент.ПриИзмененииДанныхВЭлементеСФлагомИндикацииОшибок(ЭтотОбъект, Элемент, "СтраховойНомерПФР");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЧленыЛетныхЭкипажей

&НаКлиенте
Процедура ЧленыЛетныхЭкипажейПриАктивизацииСтроки(Элемент)
	
	СтруктураДанныхПоСотруднику = СтруктураДанныхПоСотруднику(ЭтотОбъект);
	
	ПерсонифицированныйУчетКлиент.ДокументыСЗВЗаписиОСтажеПриАктивацииСтроки(
		Элементы.ЧленыЛетныхЭкипажей.ТекущиеДанные, 
		КонтролируемыеПоля, 
		СтарыеЗначенияКонтролируемыхПолейЧленыЛетныхЭкипажей, 
		СтруктураДанныхПоСотруднику);	
			
КонецПроцедуры

&НаКлиенте
Процедура ЧленыЛетныхЭкипажейПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СтруктураДанныхПоСотруднику = СтруктураДанныхПоСотруднику(ЭтотОбъект);
	
	ПерсонифицированныйУчетКлиент.ДокументыСЗВЗаписиОСтажеПриОкончанииРедактирования(
		Элементы.ЧленыЛетныхЭкипажей.ТекущиеДанные, 
		НоваяСтрока, 
		КонтролируемыеПоля, 
		СтарыеЗначенияКонтролируемыхПолейЧленыЛетныхЭкипажей, 
		СтруктураДанныхПоСотруднику);
			
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураДанныхПоСотруднику);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЧленыЛетныхЭкипажейПослеУдаления(Элемент)
	
	ФиксСтаж = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыШахтеры

&НаКлиенте
Процедура ШахтерыПриАктивизацииСтроки(Элемент)
	
	СтруктураДанныхПоСотруднику = СтруктураДанныхПоСотруднику(ЭтотОбъект);
	
	ПерсонифицированныйУчетКлиент.ДокументыСЗВЗаписиОСтажеПриАктивацииСтроки(
		Элементы.Шахтеры.ТекущиеДанные, 
		КонтролируемыеПоля, 
		СтарыеЗначенияКонтролируемыхПолейШахтеры, 
		СтруктураДанныхПоСотруднику);	
	
КонецПроцедуры

&НаКлиенте
Процедура ШахтерыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СтруктураДанныхПоСотруднику = СтруктураДанныхПоСотруднику(ЭтотОбъект);
	
	ПерсонифицированныйУчетКлиент.ДокументыСЗВЗаписиОСтажеПриОкончанииРедактирования(
		Элементы.Шахтеры.ТекущиеДанные, 
		НоваяСтрока, 
		КонтролируемыеПоля, 
		СтарыеЗначенияКонтролируемыхПолейШахтеры, 
		СтруктураДанныхПоСотруднику);
			
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураДанныхПоСотруднику);	
	
КонецПроцедуры

&НаКлиенте
Процедура ШахтерыПослеУдаления(Элемент)
	
	ФиксСтаж = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСведенияОЗаработке

&НаКлиенте
Процедура СведенияОЗаработкеПриАктивизацииСтроки(Элемент)
	
	СтруктураДанныхПоСотруднику = СтруктураДанныхПоСотруднику(ЭтотОбъект);
	
	ПерсонифицированныйУчетКлиент.ДокументыСЗВЗаписиОСтажеПриАктивацииСтроки(
		Элементы.СведенияОЗаработке.ТекущиеДанные, 
		КонтролируемыеПоля, 
		СтарыеЗначенияКонтролируемыхПолейЗаработок, 
		СтруктураДанныхПоСотруднику);	
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОЗаработкеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанныхПоСотруднику = СтруктураДанныхПоСотруднику(ЭтотОбъект);
	
	ПерсонифицированныйУчетКлиент.ДокументыСЗВЗаписиОСтажеПриОкончанииРедактирования(
		Элементы.СведенияОЗаработке.ТекущиеДанные, 
		НоваяСтрока, 
		КонтролируемыеПоля, 
		СтарыеЗначенияКонтролируемыхПолейЗаработок, 
		СтруктураДанныхПоСотруднику);
			
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураДанныхПоСотруднику);	
	
	СпозиционироватьСтроку(Элементы.СведенияОЗаработке.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОЗаработкеПослеУдаления(Элемент)
	
	ФиксЗаработок = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ВыбратьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьДанныеФизическогоЛица(Команда)
	
	ПараметрыФормы = Новый Структура("Ключ, АктивнаяСтраница, РедактируемоеПоле", Сотрудник, "ЛичныеДанные");
	ОткрытьФорму("Справочник.ФизическиеЛица.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДанныеИзВременногоХранилищаВДанныеФормы(АдресВоВременномХранилище)
	
	Модифицированность = Ложь;
	
	ДанныеДокументаПоСотруднику = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	Если ДанныеДокументаПоСотруднику = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Не удалось получить редактируемые данные.';
								|en = 'Cannot receive edited data.'");	
	КонецЕсли;
	
	Сотрудник = ДанныеДокументаПоСотруднику.Сотрудник;
	Фамилия = ДанныеДокументаПоСотруднику.Фамилия;
	Имя = ДанныеДокументаПоСотруднику.Имя;
	Отчество = ДанныеДокументаПоСотруднику.Отчество;
	СтраховойНомерПФР = ДанныеДокументаПоСотруднику.СтраховойНомерПФР;
	ИдентификаторСтрокиСотрудника = ДанныеДокументаПоСотруднику.ИдентификаторСтрокиСотрудника;
	ФиксСтаж = ДанныеДокументаПоСотруднику.ФиксСтаж;
	ФиксЗаработок = ДанныеДокументаПоСотруднику.ФиксЗаработок;
	ИспользуетсяТрудЧленовЛетныхЭкипажей = ДанныеДокументаПоСотруднику.ИспользуетсяТрудЧленовЛетныхЭкипажей;
	ИспользуетсяТрудШахтеров = ДанныеДокументаПоСотруднику.ИспользуетсяТрудШахтеров;
	
	ЧленыЛетныхЭкипажей.Очистить();
	Для Каждого СтрокаТаблицы Из ДанныеДокументаПоСотруднику.ЧленыЛетныхЭкипажей Цикл
		СтрокаТаблицыФормы = ЧленыЛетныхЭкипажей.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыФормы, СтрокаТаблицы);
	КонецЦикла;	
	
	Шахтеры.Очистить();
	Для Каждого СтрокаТаблицы Из ДанныеДокументаПоСотруднику.Шахтеры Цикл
		СтрокаТаблицыФормы = Шахтеры.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыФормы, СтрокаТаблицы);
	КонецЦикла;
	
	СведенияОЗаработке.Очистить();
	Для Каждого СтрокаЗаработок Из ДанныеДокументаПоСотруднику.СведенияОЗаработке Цикл
		СтрокаТаблицы = СведенияОЗаработке.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаЗаработок);
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ВыбратьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	АдресВоВременномХранилище = ДанныеСотрудникаВоВременноеХранилище();
	
	ПараметрыОповещения = Новый Структура("РедактируемыйДокументСсылка, Сотрудник, АдресВоВременномХранилище");
	ПараметрыОповещения.РедактируемыйДокументСсылка = РедактируемыйДокументСсылка;
	ПараметрыОповещения.Сотрудник = Сотрудник;
	ПараметрыОповещения.АдресВоВременномХранилище = АдресВоВременномХранилище;	
	
	Оповестить("ИзмененыДанныеСотрудникаСЗВ_ДСО", ПараметрыОповещения, ЭтаФорма);
	
	Модифицированность = Ложь;

	Закрыть();
	
КонецПроцедуры

&НаСервере 
Функция ДанныеСотрудникаВоВременноеХранилище()	
	
	ДанныеСотрудника = Новый Структура;
	ДанныеСотрудника.Вставить("Сотрудник", Сотрудник);
	ДанныеСотрудника.Вставить("СтраховойНомерПФР", СтраховойНомерПФР);
	ДанныеСотрудника.Вставить("Фамилия", Фамилия);
	ДанныеСотрудника.Вставить("Имя", Имя);
	ДанныеСотрудника.Вставить("Отчество", Отчество);
	ДанныеСотрудника.Вставить("ФиксСтаж", ФиксСтаж);
	ДанныеСотрудника.Вставить("ФиксЗаработок", ФиксЗаработок);
	ДанныеСотрудника.Вставить("Модифицированность", Модифицированность);
	ДанныеСотрудника.Вставить("ИдентификаторСтрокиСотрудника", ИдентификаторСтрокиСотрудника);
	ДанныеСотрудника.Вставить("РедактируемыйДокументСсылка", РедактируемыйДокументСсылка);
	ДанныеСотрудника.Вставить("ИзменилисьДанныеФизическогоЛица", ИзменилисьДанныеФизическогоЛица);
	
	СведенияОЗаработкеСотрудника = Новый Массив;
	ДанныеСотрудника.Вставить("СведенияОЗаработке", СведенияОЗаработкеСотрудника);
	Для Каждого СтрокаСведенийОЗаработке Из СведенияОЗаработке Цикл
		СтруктураПолейСведенияОЗаработке = СтруктураПолейСведенияОЗаработке();
		ЗаполнитьЗначенияСвойств(СтруктураПолейСведенияОЗаработке, СтрокаСведенийОЗаработке);
		СведенияОЗаработкеСотрудника.Добавить(СтруктураПолейСведенияОЗаработке);
	КонецЦикла;	
	
	СтажЧленовЛетныхЭкипажей = Новый Массив;
	ДанныеСотрудника.Вставить("ЧленыЛетныхЭкипажей", СтажЧленовЛетныхЭкипажей);
	Для Каждого СтрокаСтажа Из ЧленыЛетныхЭкипажей Цикл
		СтруктураПолейЧленыЛетныхЭкипажей = СтруктураПолейЧленыЛетныхЭкипажей();
		ЗаполнитьЗначенияСвойств(СтруктураПолейЧленыЛетныхЭкипажей, СтрокаСтажа);
		СтажЧленовЛетныхЭкипажей.Добавить(СтруктураПолейЧленыЛетныхЭкипажей);
	КонецЦикла;	
		
	СтажШахтеров = Новый Массив;
	ДанныеСотрудника.Вставить("Шахтеры", СтажШахтеров);
	Для Каждого СтрокаСтажа Из Шахтеры Цикл
		СтруктураПолейШахтеры = СтруктураПолейШахтеры();
		ЗаполнитьЗначенияСвойств(СтруктураПолейШахтеры, СтрокаСтажа);
		СтажШахтеров.Добавить(СтруктураПолейШахтеры);
	КонецЦикла;	
	
	Возврат ПоместитьВоВременноеХранилище(ДанныеСотрудника);
	
КонецФункции	

&НаСервере
Функция СтруктураПолейЧленыЛетныхЭкипажей()
	
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("ВидСтажа");
	СтруктураПолей.Вставить("ДатаНачалаПериода");
	СтруктураПолей.Вставить("ДатаОкончанияПериода");
	СтруктураПолей.Вставить("Часы");
	СтруктураПолей.Вставить("Минуты");
	
	Возврат СтруктураПолей;
	
КонецФункции

&НаСервере
Функция СтруктураПолейШахтеры()
	
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("ВидСтажа");
	СтруктураПолей.Вставить("ДатаНачалаПериода");
	СтруктураПолей.Вставить("ДатаОкончанияПериода");

	Возврат СтруктураПолей;
	
КонецФункции

&НаСервере
Функция СтруктураПолейСведенияОЗаработке()
	
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("КодМесяца");
	СтруктураПолей.Вставить("Заработок");
	
	Возврат СтруктураПолей;
	
КонецФункции

&НаСервере
Процедура УстановитьСвойстваЭлементовФормы()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЧленыЛетныхЭкипажей", "Видимость", ИспользуетсяТрудЧленовЛетныхЭкипажей);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Шахтеры", "Видимость", ИспользуетсяТрудШахтеров);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЧленыЛетныхЭкипажейОтменитьИсправленияПоСтажу", "Доступность", ФиксСтаж);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ШахтерыОтменитьИсправленияПоСтажу", "Доступность", ФиксСтаж);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СведенияОЗаработкеОтменитьИсправленияПоЗаработку", "Доступность", ФиксЗаработок);
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ_ДСО.Отменяющая Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Страницы", "Видимость", Ложь);
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьЗаголовокКарточки()
	
	ИнфонадписьЗаголовокКарточки = НСтр("ru = 'Данные застрахованного лица';
										|en = 'Insured person data'");
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Функция СтруктураДанныхПоСотруднику(Форма)
	
	СтруктураДанныхПоСотруднику = Новый Структура;
	СтруктураДанныхПоСотруднику.Вставить("ФиксСтаж", Форма.ФиксСтаж);
	СтруктураДанныхПоСотруднику.Вставить("ФиксЗаработок", Форма.ФиксЗаработок);

	ЗаполнитьЗначенияСвойств(СтруктураДанныхПоСотруднику, Форма);
	
	Возврат СтруктураДанныхПоСотруднику;
	
КонецФункции	

&НаКлиенте
Процедура СпозиционироватьСтроку(СтрокаТаблицы)
	
	Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодМесяца) Тогда 
		Возврат;
	КонецЕсли;
	
	НомерМесяца = ПорядокМесяцев.Получить(СтрокаТаблицы.КодМесяца);
	
	Если НомерМесяца = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	НовыйИндексСтроки = СведенияОЗаработке.Индекс(СтрокаТаблицы);
	Для Каждого ОбрабатываемаяСтрока Из СведенияОЗаработке Цикл
		НомерМесяцаСтроки = ПорядокМесяцев[ОбрабатываемаяСтрока.КодМесяца];
		Если НомерМесяцаСтроки = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		Если НомерМесяца < НомерМесяцаСтроки И НовыйИндексСтроки > СведенияОЗаработке.Индекс(ОбрабатываемаяСтрока) Тогда
			НовыйИндексСтроки = СведенияОЗаработке.Индекс(ОбрабатываемаяСтрока);
		КонецЕсли;			
	КонецЦикла;	
	
	Если НовыйИндексСтроки <> СведенияОЗаработке.Индекс(СтрокаТаблицы) Тогда
		Сдвиг = НовыйИндексСтроки - СведенияОЗаработке.Индекс(СтрокаТаблицы);	
		СведенияОЗаработке.Сдвинуть(СведенияОЗаработке.Индекс(СтрокаТаблицы), Сдвиг);		
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьИзменившиесяДанныеФизическогоЛица(ДанныеФизическогоЛица)	
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ДанныеФизическогоЛица);
	Если СокрЛП(Фамилия) = "-" Тогда
		Фамилия = "";
	КонецЕсли;
	
	ИзменилисьДанныеФизическогоЛица = Истина;
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьСписокВыбораМесяцев()
	
	ПервыйМесяц = Месяц(Период);
	ПоследнийМесяц  = Месяц(ОкончаниеПериода);
	
	Элементы.СведенияОЗаработкеКодМесяца.СписокВыбора.Очистить();
	КодыМесяцев = Документы.СведенияДляИсчисленияДоплатыКПенсииСЗВ_ДСО.КодыМесяцевСЗВ_ДСО();
	
	Для Сч = ПервыйМесяц По ПоследнийМесяц Цикл 
		Элементы.СведенияОЗаработкеКодМесяца.СписокВыбора.Добавить(КодыМесяцев[Сч]);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКонтрольИсправлений() Экспорт
	
	КонтролируемыеПоляЧленыЛетныхЭкипажей = Новый Массив;
	КонтролируемыеПоляЧленыЛетныхЭкипажей.Добавить("ДатаНачалаПериода");
	КонтролируемыеПоляЧленыЛетныхЭкипажей.Добавить("ДатаОкончанияПериода");
	КонтролируемыеПоляЧленыЛетныхЭкипажей.Добавить("ВидСтажа");
	
	КонтролируемыеПоляШахтеры = Новый Массив;
	КонтролируемыеПоляШахтеры.Добавить("ДатаНачалаПериода");
	КонтролируемыеПоляШахтеры.Добавить("ДатаОкончанияПериода");
	КонтролируемыеПоляШахтеры.Добавить("ВидСтажа");
	
	КонтролируемыеПоляЗаработок = Новый Массив;
	КонтролируемыеПоляЗаработок.Добавить("КодМесяца");
	КонтролируемыеПоляЗаработок.Добавить("Заработок");

	СведенияОКонтролируемыхПолях = Новый Структура;
	
	ОписаниеКонтролируемыхПолей = Новый Структура("ИмяПоляФиксДанных, КонтролируемыеПоля", "ФиксСтаж", Новый ФиксированныйМассив(КонтролируемыеПоляЧленыЛетныхЭкипажей));
	СведенияОКонтролируемыхПолях.Вставить("ЧленыЛетныхЭкипажей",  Новый ФиксированнаяСтруктура(ОписаниеКонтролируемыхПолей));	
	
	ОписаниеКонтролируемыхПолей = Новый Структура("ИмяПоляФиксДанных, КонтролируемыеПоля", "ФиксСтаж", Новый ФиксированныйМассив(КонтролируемыеПоляШахтеры));
	СведенияОКонтролируемыхПолях.Вставить("Шахтеры",  Новый ФиксированнаяСтруктура(ОписаниеКонтролируемыхПолей));	
	
	ОписаниеКонтролируемыхПолей = Новый Структура("ИмяПоляФиксДанных, КонтролируемыеПоля", "ФиксЗаработок", Новый ФиксированныйМассив(КонтролируемыеПоляЗаработок));
	СведенияОКонтролируемыхПолях.Вставить("Заработок", Новый ФиксированнаяСтруктура(ОписаниеКонтролируемыхПолей));
	
	КонтролируемыеПоля = Новый ФиксированнаяСтруктура(СведенияОКонтролируемыхПолях);

КонецПроцедуры	

#КонецОбласти

#Область Инициализация

СтарыеЗначенияКонтролируемыхПолейЧленыЛетныхЭкипажей = Новый Структура;

СтарыеЗначенияКонтролируемыхПолейШахтеры = Новый Структура;

СтарыеЗначенияКонтролируемыхПолейЗаработок = Новый Структура;

#КонецОбласти
