#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПерерасчетИмущественныхНалогов") Тогда
		ЗаполнитьПоПерерасчетуИмущественныхНалогов(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ПлатежиВБюджет.ИспользуетсяЕдиныйНалоговыйПлатеж(Организация, Дата) Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Организация %1 не является плательщиком единого налогового платежа';
				|en = '%1 company is not a unified tax payer'"),
			Организация);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Организация", "Объект", Отказ);
		Возврат;
	КонецЕсли;
	
	РегистрацияОрганизацииВНО = Справочники.РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане(Организация, Дата);
	Если НЕ ЗначениеЗаполнено(РегистрацияОрганизацииВНО) Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Для организации %1 на дату документа не указана основная регистрация в налоговом органе';
				|en = 'For the %1 company, the main registration with the tax authority is not specified as of the document date'"),
			Организация);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Организация", "Объект", Отказ);
	КонецЕсли;
	
	Для Каждого ЭлементСписка Из СписокИспользуемыхРегистрацийВНО(РегистрацияОрганизацииВНО) Цикл
		
		Если ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементСписка.Значение, "КодПоОКТМО")) Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Для регистрации в налоговом органе %1 не указан код по ОКТМО';
				|en = 'For registration with the %1 tax authority, the RNCMT code is required'"),
			ЭлементСписка.Значение);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , ЭлементСписка.Представление, "Объект", Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ПроведениеНачислениеЕНП");
	ДополнительныеСвойства.Вставить("ОписаниеЗамера", ОписаниеЗамера);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	СуммаДокумента = РасшифровкаНалогов.Итог("Сумма");
	
	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект, "РасшифровкаНалогов");
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
	ОписаниеЗамера = Неопределено;
	Если ДополнительныеСвойства.Свойство("ОписаниеЗамера", ОписаниеЗамера) Тогда
		ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, 1);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СписокИспользуемыхРегистрацийВНО(Знач ОсновнаяРегистрация)
	
	СписокРегистраций = Новый СписокЗначений;
	Для Каждого СтрокаТаблицы Из РасшифровкаНалогов Цикл
		
		Если ТипЗнч(СтрокаТаблицы.Субконто1) = Тип("СправочникСсылка.РегистрацииВНалоговомОргане") И ЗначениеЗаполнено(СтрокаТаблицы.Субконто1) Тогда
			ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РасшифровкаНалогов", СтрокаТаблицы.НомерСтроки, "Субконто1");
			РегистрацияВНО = СтрокаТаблицы.Субконто1;
		ИначеЕсли ТипЗнч(СтрокаТаблицы.Субконто2) = Тип("СправочникСсылка.РегистрацииВНалоговомОргане") И ЗначениеЗаполнено(СтрокаТаблицы.Субконто2) Тогда
			ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РасшифровкаНалогов", СтрокаТаблицы.НомерСтроки, "Субконто2");
			РегистрацияВНО = СтрокаТаблицы.Субконто2;
		ИначеЕсли ТипЗнч(СтрокаТаблицы.Субконто3) = Тип("СправочникСсылка.РегистрацииВНалоговомОргане") И ЗначениеЗаполнено(СтрокаТаблицы.Субконто3) Тогда
			ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РасшифровкаНалогов", СтрокаТаблицы.НомерСтроки, "Субконто3");
			РегистрацияВНО = СтрокаТаблицы.Субконто3;
		Иначе
			РегистрацияВНО = ОсновнаяРегистрация;
			ПутьКДанным = "Организация";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РегистрацияВНО) И СписокРегистраций.НайтиПоЗначению(РегистрацияВНО) = Неопределено Тогда
			СписокРегистраций.Добавить(РегистрацияВНО, ПутьКДанным);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СписокРегистраций;
	
КонецФункции

Процедура ЗаполнитьПоПерерасчетуИмущественныхНалогов(ДанныеЗаполнения)
	
	РеквизитыДокументаОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения,
									"Проведен, Организация, Дата, ОсновноеСредство");
	
	// Ввод Начисления ЕНП только на основании проведенных перерасчетов имущественных налогов.
	Если ДанныеЗаполнения.Пустая() Или Не РеквизитыДокументаОснования.Проведен Тогда
		ТекстОшибки = НСтр("ru = 'Начисление ЕНП можно создавать только на основании проведенных перерасчетов имущественных налогов.';
							|en = 'You can create the ""UTP charge"" document only based on the posted ""Recalculate property taxes"" document.'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	// Разрешено вводить только одно Начисление ЕНП на основании одного перерасчета имущественных налогов.
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачислениеЕНП.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.НачислениеЕНП КАК НачислениеЕНП
	|ГДЕ
	|	НачислениеЕНП.ДокументОснование = &ДанныеЗаполнения";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДанныеЗаполнения", ДанныеЗаполнения);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ШаблонТекстаОшибки =  НСтр("ru = 'На основании %1
								 |уже создан документ %2';
								 |en = 'The %2 document
								 |is already created based on %1'");
			ТекстОшибки = СтрШаблон(ШаблонТекстаОшибки, ДанныеЗаполнения, Выборка.Ссылка);
			ВызватьИсключение ТекстОшибки;
		КонецЦикла;
	КонецЕсли;
	
	// Заполним по перерасчету имущественных налогов.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ 
	|	ПерерасчетИмущественныхНалогов.Ссылка КАК ДокументОснование,
	|	ПерерасчетИмущественныхНалогов.Организация КАК Организация
	|ИЗ
	|	Документ.ПерерасчетИмущественныхНалогов КАК ПерерасчетИмущественныхНалогов
	|ГДЕ
	|	ПерерасчетИмущественныхНалогов.Ссылка = &ДанныеЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПерерасчетИмущественныхНалогов.ВидНалога = ЗНАЧЕНИЕ(перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ЗемельныйНалог)
	|		КОГДА ПерерасчетИмущественныхНалогов.ВидНалога = ЗНАЧЕНИЕ(перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ТранспортныйНалог)
	|		КОГДА ПерерасчетИмущественныхНалогов.ВидНалога = ЗНАЧЕНИЕ(перечисление.ВидыИмущественныхНалогов.НалогНаИмущество)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НалогНаИмущество)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПустаяСсылка)
	|	КОНЕЦ КАК ТипНалога,
	|	ВЫБОР
	|		КОГДА ПерерасчетИмущественныхНалогов.ВидНалога = ЗНАЧЕНИЕ(перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог)
	|			ТОГДА ЕСТЬNULL(РегистрацияЗемельногоУчастка.КБК, """")
	|		КОГДА ПерерасчетИмущественныхНалогов.ВидНалога = ЗНАЧЕНИЕ(перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог)
	|			ТОГДА &КБКТранспортногоНалога
	|		КОГДА ПерерасчетИмущественныхНалогов.ВидНалога = ЗНАЧЕНИЕ(перечисление.ВидыИмущественныхНалогов.НалогНаИмущество)
	|			ТОГДА &КБКНалогаНаИмущество
	|	КОНЕЦ КАК КодБК,
	|	ПерерасчетИмущественныхНалогов.СуммаКорректировки * ВЫБОР
	|		КОГДА
	|			ПерерасчетИмущественныхНалогов.ВариантПерерасчета = ЗНАЧЕНИЕ(Перечисление.ВариантыПерерасчетаИмущественныхНалогов.Доначислить)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК Сумма,
	|	ПерерасчетИмущественныхНалогов.НачалоПериода КАК НачалоПериода,
	|	ПерерасчетИмущественныхНалогов.КонецПериода КАК КонецПериода,
	|	ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ПерерасчетИмущественныхНалогов.КонецПериода, Квартал), день, 28) КАК СрокУплаты,
	|	ВЫБОР
	|		КОГДА ПерерасчетИмущественныхНалогов.ВидНалога = ЗНАЧЕНИЕ(перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог)
	|			ТОГДА &СчетУчетаЗемельногоНалога
	|		КОГДА ПерерасчетИмущественныхНалогов.ВидНалога = ЗНАЧЕНИЕ(перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог)
	|			ТОГДА &СчетУчетаТранспортногоНалога
	|		КОГДА ПерерасчетИмущественныхНалогов.ВидНалога = ЗНАЧЕНИЕ(перечисление.ВидыИмущественныхНалогов.НалогНаИмущество)
	|			ТОГДА &СчетУчетаНалогаНаИмущество
	|	КОНЕЦ КАК СчетУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам) КАК Субконто1,
	|	ПерерасчетИмущественныхНалогов.НалоговыйОрган КАК Субконто2,
	|	ЛОЖЬ КАК ФормироватьУведомление
	|ИЗ
	|	Документ.ПерерасчетИмущественныхНалогов КАК ПерерасчетИмущественныхНалогов
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрацияЗемельныхУчастков_СрезПоследних КАК РегистрацияЗемельногоУчастка
	|	ПО ПерерасчетИмущественныхНалогов.ОсновноеСредство = РегистрацияЗемельногоУчастка.ОсновноеСредство
	|ГДЕ
	|	ПерерасчетИмущественныхНалогов.Ссылка = &ДанныеЗаполнения";
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("СчетУчетаЗемельногоНалога",    ПланыСчетов.Хозрасчетный.ЗемельныйНалог);
	Запрос.УстановитьПараметр("СчетУчетаТранспортногоНалога", ПланыСчетов.Хозрасчетный.ТранспортныйНалог);
	Запрос.УстановитьПараметр("СчетУчетаНалогаНаИмущество",   ПланыСчетов.Хозрасчетный.НалогНаИмущество);
	
	Запрос.УстановитьПараметр("КБКТранспортногоНалога", 
								Перечисления.ТипыНалогов.КБКПоВидуНалоговогоОбязательства(
									Перечисления.ТипыНалогов.ТранспортныйНалог));
									
	Запрос.УстановитьПараметр("КБКНалогаНаИмущество", 
								Перечисления.ТипыНалогов.КБКПоВидуНалоговогоОбязательства(
									Перечисления.ТипыНалогов.НалогНаИмущество));
									
	// КБК земельного налога берем на дату перерасчета из параметров начисления земельного налога по ОС, с учетом исправлений.
	СписокОС = Новый Массив;
	СписокОС.Добавить(РеквизитыДокументаОснования.ОсновноеСредство);
	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("МенеджерВременныхТаблиц", Запрос.МенеджерВременныхТаблиц);
	ПараметрыРасчета.Вставить("Организация", РеквизитыДокументаОснования.Организация);
	ПараметрыРасчета.Вставить("ПериодРасчета", РеквизитыДокументаОснования.Дата);
	ПараметрыРасчета.Вставить("СписокОС", СписокОС);
	
	РасчетИмущественныхНалоговУП.СформироватьТаблицуРегистрацияЗемельныхУчастковСрезПоследних(ПараметрыРасчета, 
																								РеквизитыДокументаОснования.Дата, 
																								Неопределено);
	
	Результат = Запрос.ВыполнитьПакет();
	ДанныеШапки = Результат.Получить(0);
	Если ДанныеШапки.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаШапки = ДанныеШапки.Выбрать();
	ВыборкаШапки.Следующий();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапки);
	
	ДанныеТаблицы = Результат.Получить(1);
	
	РасшифровкаНалогов.Загрузить(ДанныеТаблицы.Выгрузить());
		
Конецпроцедуры

#КонецОбласти

#КонецЕсли