
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Организация", Организация);
	Если НЕ Параметры.Свойство("ДатаОстатков", ДатаОстатков) Тогда
		ДатаОстатков = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если Параметры.Свойство("МножественныйВыбор") И Параметры.МножественныйВыбор Тогда
		МножественныйВыбор = Истина;
	КонецЕсли;
	
	ЗаполнитьТаблицуВыбора();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТипыНалогов

&НаКлиенте
Процедура ТипыНалоговВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущаяСтрока = Налоги.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ТекущаяСтрока.Пометка = Не ТекущаяСтрока.Пометка;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ВыбранныеЗначения = Новый Соответствие;
	
	Для Каждого СтрокаТаблицы Из Налоги Цикл
		Если Не СтрокаТаблицы.Пометка Тогда Продолжить; КонецЕсли;
		Если ВыбранныеЗначения.Получить(СтрокаТаблицы.ТипНалога) = Неопределено Тогда
			ВыбранныеЗначения.Вставить(СтрокаТаблицы.ТипНалога, Новый Массив);
		КонецЕсли;
		ВыбранныеЗначения[СтрокаТаблицы.ТипНалога].Добавить(СтрокаТаблицы.СчетУчета);
	КонецЦикла;
	
	Если ВыбранныеЗначения.Количество() > 0 Тогда
		ОповеститьОВыборе(ВыбранныеЗначения);
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отметить(Команда)
	УстановитьПометку(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметку(Команда)
	УстановитьПометку(Ложь);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуВыбора()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	НеактуальныеТипыНалогов = ЕдиныйНалоговыйСчет.ВидыНалоговУстаревшие(ДатаОстатков);
	Запрос.УстановитьПараметр("НеактуальныеТипыНалогов", НеактуальныеТипыНалогов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТипыНалогов.Ссылка КАК ТипНалога,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
	|ИЗ
	|	Перечисление.ТипыНалогов КАК ТипыНалогов
	|
	|ГДЕ
	|	НЕ ТипыНалогов.Ссылка В (&НеактуальныеТипыНалогов)";
	ТипыНалогов = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицы Из ТипыНалогов Цикл
		СтрокаТаблицы.Счет = РеглУчетСервер.СчетУчетаПоТипуНалога(СтрокаТаблицы.ТипНалога);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ТипыНалогов", ТипыНалогов);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаОстатков", Новый Граница(ДатаОстатков, ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("СчетаУчета", ЕдиныйНалоговыйСчет.ОбслуживаемыеСчетаУчета(ДатаОстатков));
	Запрос.УстановитьПараметр("ВидСубконтоУровниБюджетов",
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таблица.ТипНалога,
	|	Таблица.Счет
	|ПОМЕСТИТЬ СчетаУчетаНалогов
	|ИЗ &ТипыНалогов КАК Таблица
	|;
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК СчетУчета,
	|	ЕСТЬNULL(СчетаУчетаНалогов.ТипНалога,
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПустаяСсылка)) КАК ТипНалога,
	|	-ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
	|	ХозрасчетныйОстатки.Счет.Код КАК Порядок
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаОстатков,
	|			Счет В (&СчетаУчета)
	|				И НЕ Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСБюджетом),
	|			,
	|			Организация = &Организация
	|		) КАК ХозрасчетныйОстатки
	|	ЛЕВОЕ СОЕДИНЕНИЕ СчетаУчетаНалогов КАК СчетаУчетаНалогов
	|		ПО ХозрасчетныйОстатки.Счет = СчетаУчетаНалогов.Счет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК СчетУчета,
	|	ВЫБОР ХозрасчетныйОстатки.Субконто1
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.ФедеральныйБюджет)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НалогНаПрибыль_ФедеральныйБюджет)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.РегиональныйБюджет)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НалогНаПрибыль_РегиональныйБюджет)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ЕСХН)
	|	КОНЕЦ КАК ТипНалога,
	|	-ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
	|	ХозрасчетныйОстатки.Счет.Код КАК Порядок
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаОстатков,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСБюджетом),
	|			&ВидСубконтоУровниБюджетов,
	|			Организация = &Организация
	|		) КАК ХозрасчетныйОстатки";
	ОстаткиРасчетов = Запрос.Выполнить().Выгрузить();
	ОстаткиРасчетов.Сортировать("Порядок");
	
	Отбор = Новый Структура("ТипНалога", Перечисления.ТипыНалогов.ПустаяСсылка());
	Для Каждого СтрокаТаблицы Из ОстаткиРасчетов.НайтиСтроки(Отбор) Цикл
		СтрокаТаблицы.ТипНалога = РеглУчетСервер.ТипНалогаПоСчетуУчета(СтрокаТаблицы.СчетУчета);
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ТипНалога) Тогда
			СтрокаТаблицы.ТипНалога = Перечисления.ТипыНалогов.ПрочиеНалогиИСборы;
		КонецЕсли;
	КонецЦикла;
	
	Налоги.Загрузить(ОстаткиРасчетов);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометку(Значение)
	
	Для Каждого СтрокаТаблицы Из Налоги Цикл
		СтрокаТаблицы.Пометка = Значение;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
