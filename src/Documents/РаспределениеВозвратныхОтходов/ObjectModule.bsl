#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализирует параметры заполнения видов запасов дополнительных свойств документа, используемых при записи документа
// в режиме 'Проведения' или 'Отмены проведения'.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект.РаспределениеВозвратныхОтходов - документ, для которого выполняется инициализация параметров.
//	РежимЗаписи - РежимЗаписиДокумента - режим записи документа.
//
Процедура ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ДокументОбъект, РежимЗаписи = Неопределено) Экспорт
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	
	ПараметрыЗаполнения.ОтборыВидовЗапасов.НалогообложениеНДС = ВыпускПодДеятельность;
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ПродукцияДавальца);
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ПараметрыЗаполненияВидовЗапасов", ПараметрыЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ИсправлениеДокументов.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	// Обновляем сумму документа
	Сумма = Количество * Цена;
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.РаспределениеВозвратныхОтходов);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий);
	
	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект, "ПартииПроизводства,ПрочиеРасходы");
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ПараметрыАналитики = Новый Структура("Номенклатура, Характеристика, Серия, Склад, Назначение");
		ЗаполнитьЗначенияСвойств(ПараметрыАналитики, ЭтотОбъект);
		ПараметрыАналитики.Склад = Получатель;
		АналитикаУчетаНоменклатуры = РегистрыСведений.АналитикаУчетаНоменклатуры.ЗначениеКлючаАналитики(ПараметрыАналитики);
		
		УстановитьПривилегированныйРежим(Ложь);
		
		ЗаполнитьВидыЗапасов(Отказ);
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ВидыЗапасов.Очистить();
	КонецЕсли;
	
	ДоходыИРасходыСервер.ПередЗаписью(ЭтотОбъект, 
		Документы.РаспределениеВозвратныхОтходов.ПараметрыВыбораСтатейИАналитик());
	
	//++ НЕ УТ

	//Настройка счетов учета
	НастройкаСчетовУчетаСервер.ПередЗаписью(ЭтотОбъект,
		Документы.РаспределениеВозвратныхОтходов.ПараметрыНастройкиСчетовУчета());
	//-- НЕ УТ
	
	РаспределениеВозвратныхОтходовЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	ИнициализироватьДокумент();
	РаспределениеВозвратныхОтходовЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	
	ДоходыИРасходыСервер.ОбработкаЗаполнения(ЭтотОбъект, 
		Документы.РаспределениеВозвратныхОтходов.ПараметрыВыбораСтатейИАналитик());
	
	ЗаполнениеОбъектовПоСтатистике.ЗаполнитьРеквизитыОбъекта(ЭтотОбъект, ДанныеЗаполнения);

	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ЗатратыСервер.ПроверитьИспользованиеПартионногоУчета22(ЭтотОбъект, Дата, Отказ);
	
	#Область ПроверкаХарактеристик
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры")
		И Не Справочники.Номенклатура.ХарактеристикиИспользуются(Номенклатура) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Характеристика");
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПроверкаСерий

	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.РаспределениеВозвратныхОтходов);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
												ПараметрыУказанияСерий,
												Отказ,
												МассивНепроверяемыхРеквизитов);
	
	#КонецОбласти

	#Область ПроверкаКоличеств
	
	Если Не Количество = КоличествоПоПравилу + ПартииПроизводства.Итог("Количество") + ПрочиеРасходы.Итог("Количество") Тогда
		
		ТекстСообщения = НСтр("ru = 'Не совпадает количество выпущенных и распределенных возвратных отходов.';
								|en = 'Number of issued and allocated recyclable waste does not match.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Количество", "Объект", Отказ);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПроверкаПолучателяРабот
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ТипНоменклатуры") = Перечисления.ТипыНоменклатуры.Работа
		И Подразделение = Получатель
		И Не КоличествоПоПравилу = 0 Тогда
		КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
		ТекстСообщения = НСтр("ru = 'При распределении по правилам подразделение-получатель работы не может совпадать с выпускающим подразделением.';
								|en = 'When allocating by rules, a business unit receiving works cannot be the same as a releasing business unit.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных , "Получатель", "Объект", Отказ);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПроверкаПравил
	
	Если КоличествоПоПравилу = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПравилоРаспределения");
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяКалькуляции");
	КонецЕсли;
	
	Если Не КоличествоПоПравилу = 0 И НЕ ЗначениеЗаполнено(ПравилоРаспределения) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяКалькуляции");
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПроверкаПолучателейИАналитик
	
	ДоходыИРасходыСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, 
		Документы.РаспределениеВозвратныхОтходов.ПараметрыВыбораСтатейИАналитик());
	
	#КонецОбласти
	
#Область ПроверкаНДС
	ПараметрыПроверки = УчетНДСУП.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС();
	ПараметрыПроверки.ИмяТабличнойЧасти						= "ПрочиеРасходы";
	ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов			= "СтатьяРасходов";
	ПараметрыПроверки.ИмяРеквизитаАналитикаРасходов			= "АналитикаРасходов";
	ПараметрыПроверки.ИмяРеквизитаСтатьяАктивовПассивов		= "СтатьяРасходов";
	ПараметрыПроверки.ИмяРеквизитаАналитикаАктивовПассивов	= "АналитикаАктивовПассивов";
	
	УчетНДСУП.ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(
		ЭтотОбъект,
		ВыпускПодДеятельность,
		ПараметрыПроверки,
		Отказ);
#КонецОбласти
	
	ЗапасыСервер.ПроверитьНаличиеИзделийВШапкеСУчетомПоГТД(ЭтотОбъект, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если Не Отказ И ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	РаспределениеВозвратныхОтходовЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ЭтотОбъект);
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
	РаспределениеВозвратныхОтходовЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ЭтотОбъект);
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
	РаспределениеВозвратныхОтходовЛокализация.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
	РаспределениеВозвратныхОтходовЛокализация.ПриЗаписи(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ВидыЗапасов.Очистить();
	
	ОбщегоНазначенияУТ.ОчиститьИдентификаторыДокумента(ЭтотОбъект, "ПартииПроизводства,ПрочиеРасходы");
	Автор = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Дата           = ТекущаяДатаСеанса();
	ВидЦены        = Справочники.ВидыЦен.ВидЦеныПлановойСтоимостиТМЦ(ВидЦены);
	Валюта         = ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета(Справочники.ВидыЦен.ПолучитьРеквизитыВидаЦены(ВидЦены).ВалютаЦены);
	Автор          = Пользователи.ТекущийПользователь();
	
	ПараметрыЗаполнения = Документы.РаспределениеВозвратныхОтходов.ПараметрыЗаполненияВидаДеятельностиНДС(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьВидДеятельностиНДС(ВыпускПодДеятельность, ПараметрыЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеВидовЗапасов

Процедура ЗаполнитьВидыЗапасов(Отказ)
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ТипНоменклатуры") = Перечисления.ТипыНоменклатуры.Работа Тогда
		ВидыЗапасов.Очистить();
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ПерезаполнитьВидыЗапасов =
		ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ЭтотОбъект)
		Или ПроверитьИзменениеРеквизитовДокумента();
	
	МенеджерВременныхТаблиц = ВременныеТаблицыДанных();
	
	Если Не Проведен
		Или ПерезаполнитьВидыЗапасов
		Или ПроверитьИзменениеТаблицыИзделий(МенеджерВременныхТаблиц) Тогда
		
		ТаблицаВидыЗапасовИзделий = ТаблицаДляЗаполненияВидыЗапасовИзделия(МенеджерВременныхТаблиц);
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ТаблицаВидыЗапасовИзделий);
		ВидыЗапасов.Загрузить(ТаблицаВидыЗапасовИзделий);
		
		Коэффициенты = ВидыЗапасов.ВыгрузитьКолонку("Количество");
		Суммы = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Сумма, Коэффициенты);
		Если Не Суммы = Неопределено Тогда
			Индекс = 0;
			Для Каждого ТекСумма Из Суммы Цикл
				ВидыЗапасов[Индекс].Сумма = ТекСумма;
				Индекс = Индекс + 1;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект, "ВидыЗапасов");
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьИзменениеРеквизитовДокумента()
	
	ИменаРеквизитов = "Организация, Дата, ВыпускПодДеятельность, Сумма";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация			КАК Организация,
	|	&Дата					КАК Дата,
	|	&Сумма					КАК Сумма,
	|	&ВыпускПодДеятельность	КАК ВыпускПодДеятельность
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|";
	
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("Дата",					Дата);
	Запрос.УстановитьПараметр("Сумма",					Сумма);
	Запрос.УстановитьПараметр("ВыпускПодДеятельность",	ВыпускПодДеятельность);
	
	Запрос.Выполнить();
	
	Возврат ЗапасыСервер.ПроверитьИзменениеРеквизитовДокумента(Запрос.МенеджерВременныхТаблиц, Ссылка, ИменаРеквизитов);
	
КонецФункции

Функция ПроверитьИзменениеТаблицыИзделий(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.Подразделение					КАК Подразделение,
		|	ТаблицаТоваров.Получатель						КАК Получатель,
		|	ТаблицаТоваров.ПартияПроизводства				КАК ПартияПроизводства,
		|	ТаблицаТоваров.СтатьяКалькуляции				КАК СтатьяКалькуляции,
		|	ТаблицаТоваров.СтатьяРасходов					КАК СтатьяРасходов,
		|	ТаблицаТоваров.АналитикаРасходов				КАК АналитикаРасходов,
		|	ТаблицаТоваров.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
		|	ТаблицаТоваров.ИдентификаторСтроки				КАК ИдентификаторСтроки,
		|	ТаблицаТоваров.НастройкаСчетовУчета				КАК НастройкаСчетовУчета
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаТоваров.Подразделение					КАК Подразделение,
		|		ТаблицаТоваров.Получатель						КАК Получатель,
		|		ТаблицаТоваров.ПартияПроизводства				КАК ПартияПроизводства,
		|		ТаблицаТоваров.СтатьяКалькуляции				КАК СтатьяКалькуляции,
		|		ТаблицаТоваров.СтатьяРасходов					КАК СтатьяРасходов,
		|		ТаблицаТоваров.АналитикаРасходов				КАК АналитикаРасходов,
		|		ТаблицаТоваров.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
		|		ТаблицаТоваров.ИдентификаторСтроки				КАК ИдентификаторСтроки,
		|		ТаблицаТоваров.НастройкаСчетовУчета				КАК НастройкаСчетовУчета,
		|		ТаблицаТоваров.Количество						КАК Количество
		|	ИЗ
		|		ТаблицаТоваров КАК ТаблицаТоваров
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаВидыЗапасов.Подразделение					КАК Подразделение,
		|		ТаблицаВидыЗапасов.Получатель						КАК Получатель,
		|		ТаблицаВидыЗапасов.ПартияПроизводства				КАК ПартияПроизводства,
		|		ТаблицаВидыЗапасов.СтатьяКалькуляции				КАК СтатьяКалькуляции,
		|		ТаблицаВидыЗапасов.СтатьяРасходов					КАК СтатьяРасходов,
		|		ТаблицаВидыЗапасов.АналитикаРасходов				КАК АналитикаРасходов,
		|		ТаблицаВидыЗапасов.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
		|		ТаблицаВидыЗапасов.ИдентификаторСтроки				КАК ИдентификаторСтроки,
		|		ТаблицаВидыЗапасов.НастройкаСчетовУчета				КАК НастройкаСчетовУчета,
		|		-ТаблицаВидыЗапасов.Количество						КАК Количество
		|	ИЗ
		|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов) КАК ТаблицаТоваров
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.Подразделение,
		|	ТаблицаТоваров.Получатель,
		|	ТаблицаТоваров.ПартияПроизводства,
		|	ТаблицаТоваров.СтатьяКалькуляции,
		|	ТаблицаТоваров.СтатьяРасходов,
		|	ТаблицаТоваров.АналитикаРасходов,
		|	ТаблицаТоваров.АналитикаАктивовПассивов,
		|	ТаблицаТоваров.ИдентификаторСтроки,
		|	ТаблицаТоваров.НастройкаСчетовУчета
		|
		|ИМЕЮЩИЕ
		|	НЕ СУММА(ТаблицаТоваров.Количество) = 0");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Функция ВременныеТаблицыДанных()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки + 1		КАК НомерСтроки,
	|	&Номенклатура						КАК Номенклатура,
	|	&Характеристика						КАК Характеристика,
	|	&Назначение							КАК Назначение,
	|	&АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Подразделение		КАК Подразделение,
	|	&Получатель							КАК Получатель,
	|	ТаблицаТоваров.ПартияПроизводства	КАК ПартияПроизводства,
	|	ТаблицаТоваров.СтатьяКалькуляции	КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.ИдентификаторСтроки	КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.Количество			КАК Количество
	|ПОМЕСТИТЬ ТаблицаПартийПроизводства
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПрочихРасходов.НомерСтроки + &КоличествоПартий + 1 КАК НомерСтроки,
	|	&Номенклатура									КАК Номенклатура,
	|	&Характеристика									КАК Характеристика,
	|	&Назначение										КАК Назначение,
	|	&АналитикаУчетаНоменклатуры						КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаПрочихРасходов.Подразделение				КАК Подразделение,
	|	&Получатель										КАК Получатель,
	|	ТаблицаПрочихРасходов.СтатьяРасходов			КАК СтатьяРасходов,
	|	ТаблицаПрочихРасходов.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТаблицаПрочихРасходов.АналитикаАктивовПассивов	КАК АналитикаАктивовПассивов,
	|	ТаблицаПрочихРасходов.НастройкаСчетовУчета		КАК НастройкаСчетовУчета,
	|	ТаблицаПрочихРасходов.ИдентификаторСтроки		КАК ИдентификаторСтроки,
	|	ТаблицаПрочихРасходов.Количество				КАК Количество
	|ПОМЕСТИТЬ ТаблицаПрочихРасходов
	|ИЗ
	|	&ТаблицаПрочихРасходов КАК ТаблицаПрочихРасходов
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура					КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика				КАК Характеристика,
	|	ТаблицаТоваров.Назначение					КАК Назначение,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Подразделение				КАК Подразделение,
	|	ТаблицаТоваров.Получатель					КАК Получатель,
	|	ТаблицаТоваров.ПартияПроизводства			КАК ПартияПроизводства,
	|	ТаблицаТоваров.СтатьяКалькуляции			КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО								КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО								КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО								КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО								КАК НастройкаСчетовУчета,
	|	ТаблицаТоваров.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.Количество					КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)	КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ТаблицаПартийПроизводства КАК ТаблицаТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаПрочихРасходов.НомерСтроки						КАК НомерСтроки,
	|	ТаблицаПрочихРасходов.Номенклатура						КАК Номенклатура,
	|	ТаблицаПрочихРасходов.Характеристика					КАК Характеристика,
	|	ТаблицаПрочихРасходов.Назначение						КАК Назначение,
	|	ТаблицаПрочихРасходов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаПрочихРасходов.Подразделение						КАК Подразделение,
	|	ТаблицаПрочихРасходов.Получатель						КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)	КАК ПартияПроизводства,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)		КАК СтатьяКалькуляции,
	|	ТаблицаПрочихРасходов.СтатьяРасходов					КАК СтатьяРасходов,
	|	ТаблицаПрочихРасходов.АналитикаРасходов					КАК АналитикаРасходов,
	|	ТаблицаПрочихРасходов.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаПрочихРасходов.НастройкаСчетовУчета				КАК НастройкаСчетовУчета,
	|	ТаблицаПрочихРасходов.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	ТаблицаПрочихРасходов.Количество						КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)				КАК НомерГТД
	|ИЗ
	|	ТаблицаПрочихРасходов КАК ТаблицаПрочихРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0														КАК НомерСтроки,
	|	&Номенклатура											КАК Номенклатура,
	|	&Характеристика											КАК Характеристика,
	|	&Назначение												КАК Назначение,
	|	&АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	&Подразделение											КАК Подразделение,
	|	&Получатель												КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)	КАК ПартияПроизводства,
	|	&СтатьяКалькуляции										КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО											КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО											КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО											КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО											КАК НастройкаСчетовУчета,
	|	НЕОПРЕДЕЛЕНО											КАК ИдентификаторСтроки,
	|	&КоличествоПоПравилу									КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)				КАК НомерГТД
	|ГДЕ
	|	НЕ &КоличествоПоПравилу = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Подразделение				КАК Подразделение,
	|	ТаблицаВидыЗапасов.Получатель					КАК Получатель,
	|	ТаблицаВидыЗапасов.ПартияПроизводства			КАК ПартияПроизводства,
	|	ТаблицаВидыЗапасов.СтатьяКалькуляции			КАК СтатьяКалькуляции,
	|	ТаблицаВидыЗапасов.СтатьяРасходов				КАК СтатьяРасходов,
	|	ТаблицаВидыЗапасов.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)		КАК НомерГТД,
	|	ТаблицаВидыЗапасов.НастройкаСчетовУчета			КАК НастройкаСчетовУчета,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Подразделение				КАК Подразделение,
	|	ТаблицаВидыЗапасов.Получатель					КАК Получатель,
	|	ТаблицаВидыЗапасов.ПартияПроизводства			КАК ПартияПроизводства,
	|	ТаблицаВидыЗапасов.СтатьяКалькуляции			КАК СтатьяКалькуляции,
	|	ТаблицаВидыЗапасов.СтатьяРасходов				КАК СтатьяРасходов,
	|	ТаблицаВидыЗапасов.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)		КАК НомерГТД,
	|	ТаблицаВидыЗапасов.НастройкаСчетовУчета			КАК НастройкаСчетовУчета,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТаблицаТоваров",				ПартииПроизводства);
	Запрос.УстановитьПараметр("КоличествоПартий",			ПартииПроизводства.Количество());
	Запрос.УстановитьПараметр("ТаблицаПрочихРасходов",		ПрочиеРасходы);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",			ВидыЗапасов);
	Запрос.УстановитьПараметр("Номенклатура",				Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",				Характеристика);
	Запрос.УстановитьПараметр("Назначение",					Назначение);
	Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры",	АналитикаУчетаНоменклатуры);
	Запрос.УстановитьПараметр("Подразделение",				Подразделение);
	Запрос.УстановитьПараметр("Получатель",					Получатель);
	Запрос.УстановитьПараметр("СтатьяКалькуляции",			СтатьяКалькуляции);
	Запрос.УстановитьПараметр("КоличествоПоПравилу",		КоличествоПоПравилу);
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

// Таблицы для заполнения виды запасов изделия.
// 
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблицы для заполнения виды запасов изделия
//
Функция ТаблицаДляЗаполненияВидыЗапасовИзделия(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация												КАК Организация,
	|	&Валюта														КАК Валюта,
	|	&НалогообложениеОрганизации									КАК НалогообложениеОрганизации,
	|	НЕОПРЕДЕЛЕНО												КАК Соглашение,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)	КАК НалогообложениеНДС,
	|	ТаблицаТоваров.ХозяйственнаяОперация						КАК ХозяйственнаяОперация,
	|	ТаблицаТоваров.Подразделение								КАК Подразделение,
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки)						КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура									КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика								КАК Характеристика,
	|	ТаблицаТоваров.Назначение									КАК Назначение,
	|	ВЫБОР
	//++ НЕ УТКА
	|		КОГДА ЕСТЬNULL(ТаблицаТоваров.Назначение.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) В (
	//++ Устарело_Переработка24
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеПродукция22),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22),
	//-- Устарело_Переработка24
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалыПодЭтап22),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.Давальческое2_5))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	//-- НЕ УТКА
	|		КОГДА ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ														КАК ТипЗапасов,
	|	ВЫБОР
	//++ НЕ УТКА
	|		КОГДА ЕСТЬNULL(ТаблицаТоваров.Назначение.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) В (
	//++ Устарело_Переработка24
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеПродукция22),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22),
	//-- Устарело_Переработка24
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалыПодЭтап22),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.Давальческое2_5))
	|			ТОГДА ТаблицаТоваров.Назначение.Партнер
	//-- НЕ УТКА
	|		КОГДА ИСТИНА
	|			ТОГДА &Организация
	|	КОНЕЦ														КАК ВладелецТовара,
	|	ЕСТЬNULL(ТаблицаТоваров.Назначение.Договор.Контрагент, НЕОПРЕДЕЛЕНО) КАК Контрагент,
	|	ЕСТЬNULL(ТаблицаТоваров.Назначение.Договор, НЕОПРЕДЕЛЕНО)	КАК Договор,
	|	ТаблицаТоваров.Получатель									КАК Получатель,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры					КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.ПартияПроизводства							КАК ПартияПроизводства,
	|	ТаблицаТоваров.СтатьяРасходов								КАК СтатьяРасходов,
	|	ТаблицаТоваров.АналитикаРасходов							КАК АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов						КАК АналитикаАктивовПассивов,
	|	ТаблицаТоваров.СтатьяКалькуляции							КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.НастройкаСчетовУчета							КАК НастройкаСчетовУчета,
	|	ТаблицаТоваров.ИдентификаторСтроки							КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.НомерГТД										КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)				КАК ТекущийВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)				КАК ВидЗапасов,
	|	СУММА(ТаблицаТоваров.Количество)							КАК Количество,
	|	ЛОЖЬ														КАК ЭтоВозвратнаяТара
	|ПОМЕСТИТЬ ИсходнаяТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	НЕ ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.ХозяйственнаяОперация,
	|	ТаблицаТоваров.Подразделение,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.Назначение,
	|	ВЫБОР
	//++ НЕ УТКА
	|		КОГДА ЕСТЬNULL(ТаблицаТоваров.Назначение.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) В (
	//++ Устарело_Переработка24
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеПродукция22),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22),
	//-- Устарело_Переработка24
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалыПодЭтап22),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.Давальческое2_5))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	//-- НЕ УТКА
	|		КОГДА ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ,
	|	ВЫБОР
	//++ НЕ УТКА
	|		КОГДА ЕСТЬNULL(ТаблицаТоваров.Назначение.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) В (
	//++ Устарело_Переработка24
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеПродукция22),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22),
	//-- Устарело_Переработка24
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалыПодЭтап22),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.Давальческое2_5))
	|			ТОГДА ТаблицаТоваров.Назначение.Партнер
	//-- НЕ УТКА
	|		КОГДА ИСТИНА
	|			ТОГДА &Организация
	|	КОНЕЦ,
	|	ЕСТЬNULL(ТаблицаТоваров.Назначение.Договор.Контрагент, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(ТаблицаТоваров.Назначение.Договор, НЕОПРЕДЕЛЕНО),
	|	ТаблицаТоваров.Получатель,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.ПартияПроизводства,
	|	ТаблицаТоваров.СтатьяРасходов,
	|	ТаблицаТоваров.АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов,
	|	ТаблицаТоваров.СтатьяКалькуляции,
	|	ТаблицаТоваров.НастройкаСчетовУчета,
	|	ТаблицаТоваров.ИдентификаторСтроки,
	|	ТаблицаТоваров.НомерГТД
	|";
	
	Запрос.УстановитьПараметр("Организация",				Организация);
	Запрос.УстановитьПараметр("Валюта",						Валюта);
	Запрос.УстановитьПараметр("НалогообложениеОрганизации",	УчетНДСУП.ПараметрыУчетаПоОрганизации(Организация, Дата).ОсновноеНалогообложениеНДСПродажи);
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	Результат = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	Возврат Результат[0].Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
