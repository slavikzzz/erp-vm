#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокументПередЗаполнением();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	НепроверяемыеРеквизиты.Добавить("Товары.КоличествоПоДаннымУчета");
	НепроверяемыеРеквизиты.Добавить("Товары.КоличествоФактическое");
		
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, НепроверяемыеРеквизиты, Отказ);
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ИнвентаризацияТМЦВЭксплуатации);
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект, ПараметрыУказанияСерий, Отказ, НепроверяемыеРеквизиты);

	ВыполнитьПроверкуЗаполнения(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Документы.ИнвентаризацияТМЦВЭксплуатации.ЗаполнитьДанныеУчета(ЭтотОбъект, Товары);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокументПередЗаполнением()
	
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
КонецПроцедуры

Процедура ВыполнитьПроверкуЗаполнения(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты, Отказ)
	
	ПроверитьОтсутствиеДублейВТабличнойЧасти(Отказ);
	
	Если ДатаНачалаИнвентаризации > ДатаОкончанияИнвентаризации
		И ДатаОкончанияИнвентаризации <> '000101010000' Тогда
		
		ТекстСообщения = НСтр("ru = 'Начало инвентаризации должно быть не позже окончания';
								|en = 'The physical inventory count start must not be later than the end'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.ДатаНачалаИнвентаризации",, Отказ);
	КонецЕсли;
	
	ШаблонСообщения = НСтр("ru = 'В строке %1 указан инвентарный номер. Если ведется инвентарный учет, то количество должно быть 1.';
							|en = 'Inventory number is specified in line %1. If stocktaking record is kept, the quantity must be 1.'");
	
	Для Каждого ДанныеСтроки Из Товары Цикл
		
		Если ЗначениеЗаполнено(ДанныеСтроки.ИнвентарныйНомер)
			И ДанныеСтроки.КоличествоФактическое <> 1
			И ДанныеСтроки.КоличествоФактическое <> 0 Тогда
			
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Формат(ДанныеСтроки.НомерСтроки, "ЧГ="));
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", ДанныеСтроки.НомерСтроки, "КоличествоФактическое");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "", Отказ);
		
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьОтсутствиеДублейВТабличнойЧасти(Отказ)
	
	ШаблонСообщения = НСтр("ru = 'ТМЦ ""%1"" уже выбран в строке %2.';
							|en = 'The ""%1"" inventory is already selected in line %2.'");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.ФизическоеЛицо КАК ФизическоеЛицо
	|
	|ПОМЕСТИТЬ втТовары
	|
	|ИЗ
	|	&Товары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ИнвентарныйНомер,
	|	Серия,
	|	Характеристика,
	|	ФизическоеЛицо,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ТоварыДубль.НомерСтроки КАК НомерСтрокиДубль,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).Представление КАК НоменклатураПредставление,
	|	ВЫРАЗИТЬ(Товары.Характеристика КАК Справочник.ХарактеристикиНоменклатуры).Представление КАК ХарактеристикаПредставление
	|ИЗ
	|	втТовары КАК Товары
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТовары КАК ТоварыДубль
	|		ПО (ТоварыДубль.ИнвентарныйНомер = Товары.ИнвентарныйНомер)
	|			И (ТоварыДубль.Номенклатура = Товары.Номенклатура)
	|			И (ТоварыДубль.Характеристика = Товары.Характеристика)
	|			И (ТоварыДубль.Серия = Товары.Серия)
	|			И (НЕ &ПроверитьФизическоеЛицо ИЛИ ТоварыДубль.ФизическоеЛицо = Товары.ФизическоеЛицо)
	|			И (ТоварыДубль.НомерСтроки <> Товары.НомерСтроки)
	|
	|ГДЕ
	|	Товары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить());
	Запрос.УстановитьПараметр("ПроверитьФизическоеЛицо", НЕ ЗначениеЗаполнено(ФизическоеЛицо));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, Выборка.ХарактеристикаПредставление);
				
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПредставлениеНоменклатуры, Формат(Выборка.НомерСтрокиДубль, "ЧГ="));
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, Поле, "Объект", Отказ);
	
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли
