#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(Сотрудники.Сотрудник, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ПачкаДокументовАДВ_3;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыгрузитьФайлыВоВременноеХранилище(Ссылка, УникальныйИдентификатор = Неопределено) Экспорт 
	
	ДанныеФайла = ЗарплатаКадры.ПолучитьДанныеФайла(Ссылка, УникальныйИдентификатор);
	
	ОписаниеВыгруженногоФайла = ПерсонифицированныйУчет.ОписаниеВыгруженногоФайлаОтчетности();
	
	ОписаниеВыгруженногоФайла.Владелец = Ссылка;
	ОписаниеВыгруженногоФайла.АдресВоВременномХранилище = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	ОписаниеВыгруженногоФайла.ИмяФайла = ДанныеФайла.ИмяФайла;
	ОписаниеВыгруженногоФайла.ПроверятьCheckXML = Истина;
	ОписаниеВыгруженногоФайла.ПроверятьCheckUFA = Истина;
	ОписаниеВыгруженногоФайла.ПроверятьПОПД = Истина;
	
	ВыгруженныеФайлы = Новый Массив;
	ВыгруженныеФайлы.Добавить(ОписаниеВыгруженногоФайла);
	
	Возврат ВыгруженныеФайлы;
	
КонецФункции

Функция ПолучитьСтруктуруПроверяемыхДанных() Экспорт 
	
	СтруктураПроверяемыхДанных = ПерсонифицированныйУчет.ПолучитьСтруктуруПроверяемыхДанных();
	ПерсонифицированныйУчет.ДокументыАДВДополнитьСтруктуруПроверяемыхДанных(СтруктураПроверяемыхДанных);
	СтруктураПроверяемыхДанных.Удалить("СтраховойНомерПФР");	
	СтруктураПроверяемыхДанных.Вставить("СтраховойНомерПФРВСвидетельстве");
	СтруктураПроверяемыхДанных.Вставить("ФамилияВСвидетельстве");
	СтруктураПроверяемыхДанных.Вставить("ИмяВСвидетельстве");
	СтруктураПроверяемыхДанных.Вставить("ПолВСвидетельстве");
	СтруктураПроверяемыхДанных.Вставить("ДатаРожденияВСвидетельстве");
	СтруктураПроверяемыхДанных.Вставить("МестоРожденияВСвидетельстве");
	
	Возврат СтруктураПроверяемыхДанных;
	
КонецФункции

Функция ПолучитьПредставленияПроверяемыхРеквизитов() Экспорт
	Возврат ПерсонифицированныйУчет.ПолучитьПредставленияПроверяемыхРеквизитов();
КонецФункции

Функция ПолучитьСоответствиеРеквизитовФормеОбъекта(ДанныеДляПроверки) Экспорт
	
	СоответствиеРеквизитовПутиВФорме = ПерсонифицированныйУчет.ПолучитьСоответствиеРеквизитовФормеОбъекта();
	ПерсонифицированныйУчет.ДокументыАДВДополнитьСоответствиеРеквизитовФормеОбъекта(СоответствиеРеквизитовПутиВФорме);
	
	СоответствиеРеквизитовПутиВФорме.Вставить("СтраховойНомерПФРВСвидетельстве", "СтраховойНомерПФР");
	СоответствиеРеквизитовПутиВФорме.Вставить("ФамилияВСвидетельстве",  "Объект.Сотрудники[" + Формат(ДанныеДляПроверки.НомерСтроки -1, "ЧН=0; ЧГ=0") + "].Сотрудник");
	СоответствиеРеквизитовПутиВФорме.Вставить("ИмяВСвидетельстве",  "Объект.Сотрудники[" + Формат(ДанныеДляПроверки.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник");
	СоответствиеРеквизитовПутиВФорме.Вставить("ПолВСвидетельстве",    "Объект.Сотрудники[" + Формат(ДанныеДляПроверки.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник");
	СоответствиеРеквизитовПутиВФорме.Вставить("ДатаРожденияВСвидетельстве",    "Объект.Сотрудники[" + Формат(ДанныеДляПроверки.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник");
	СоответствиеРеквизитовПутиВФорме.Вставить("МестоРожденияВСвидетельстве",   "Объект.Сотрудники[" + Формат(ДанныеДляПроверки.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник");
	
	Возврат СоответствиеРеквизитовПутиВФорме;
	
КонецФункции

Функция ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта() Экспорт
	
	СоответствиеРеквизитовПутиВФормеОбъекта = ПерсонифицированныйУчет.ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта();
	ПерсонифицированныйУчет.ДокументыАДВДополнитьСоответствиеРеквизитовПутиВФормеОбъекта(СоответствиеРеквизитовПутиВФормеОбъекта);
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("СтраховойНомерПФРВСвидетельстве", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("ФамилияВСвидетельстве", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("ИмяВСвидетельстве", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("ПолВСвидетельстве", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("ДатаРожденияВСвидетельстве", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("МестоРожденияВСвидетельстве", "");
	
	Возврат СоответствиеРеквизитовПутиВФормеОбъекта;
	
КонецФункции

Функция ПолучитьСоответствиеПроверяемыхРеквизитовОткрываемымОбъектам(ДокументСсылка, ДанныеДляПроверки) Экспорт
	
	СтруктураСоответствия = Новый Структура;
	СтруктураСоответствия.Вставить("ФамилияВСвидетельстве", ДокументСсылка);
	СтруктураСоответствия.Вставить("ИмяВСвидетельстве", ДокументСсылка);
	СтруктураСоответствия.Вставить("ПолВСвидетельстве", ДокументСсылка);
	СтруктураСоответствия.Вставить("ДатаРожденияСвидетельстве", ДокументСсылка);
	СтруктураСоответствия.Вставить("МестоРожденияВСвидетельстве", ДокументСсылка);
	
	Возврат СтруктураСоответствия;
	
КонецФункции

#Область ПроцедурыПолученияДанныхДляЗаполненияИПроведенияДокумента

// Возвращает результат запроса, содержащий данные  физ. лиц, для заполнения
// в табличную часть "Сотрудники" документа "ПачкаДокументовАДВ_1".
//
// Параметры:
//	СписокФизЛиц
//	Дата
//
// Возвращаемое значение:
//	Выборка из результата запроса с данными физ. лица.
//
Функция СформироватьЗапросПоДаннымФизЛицДокумента(ДокументСсылка, Дата, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	МассивНеобходимыхКадровыхДанных = Новый Массив();
	МассивНеобходимыхКадровыхДанных.Добавить("ФизическоеЛицо");
	МассивНеобходимыхКадровыхДанных.Добавить("Пол");
	МассивНеобходимыхКадровыхДанных.Добавить("ДатаРождения");
	МассивНеобходимыхКадровыхДанных.Добавить("МестоРождения");
	МассивНеобходимыхКадровыхДанных.Добавить("СтраховойНомерПФР");
	МассивНеобходимыхКадровыхДанных.Добавить("ДокументВид");
	МассивНеобходимыхКадровыхДанных.Добавить("ДокументСерия");
	МассивНеобходимыхКадровыхДанных.Добавить("ДокументНомер");
	МассивНеобходимыхКадровыхДанных.Добавить("ДокументКемВыдан");
	МассивНеобходимыхКадровыхДанных.Добавить("ДокументДатаВыдачи");
	МассивНеобходимыхКадровыхДанных.Добавить("Фамилия");
	МассивНеобходимыхКадровыхДанных.Добавить("Имя");
	МассивНеобходимыхКадровыхДанных.Добавить("Отчество");
	МассивНеобходимыхКадровыхДанных.Добавить("Страна");
	МассивНеобходимыхКадровыхДанных.Добавить("ТелефонДомашнийПредставление");
	МассивНеобходимыхКадровыхДанных.Добавить("АдресМестаПроживания");
	МассивНеобходимыхКадровыхДанных.Добавить("АдресМестаПроживанияПредставление");
	МассивНеобходимыхКадровыхДанных.Добавить("АдресПоПрописке");
	МассивНеобходимыхКадровыхДанных.Добавить("АдресПоПропискеПредставление");
	МассивНеобходимыхКадровыхДанных.Добавить("ИНН");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТСписокФизлицДокумента.ФизическоеЛицо
	|ИЗ
	|	ВТСписокФизлицДокумента КАК ВТСписокФизлицДокумента";
	
	СписокФизическихЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	
	КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, Истина, СписокФизическихЛиц, МассивНеобходимыхКадровыхДанных, Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Анкета.Сотрудник КАК ФизическоеЛицо,
	|	Анкета.АдресРегистрации,
	|	Анкета.АдресФактический,
	|	Анкета.Телефоны,
	|	Анкета.Фамилия,
	|	Анкета.Имя,
	|	Анкета.Отчество,
	|	Анкета.Пол,
	|	Анкета.ДатаРождения,
	|	Анкета.МестоРождения,
	|	Анкета.Гражданство,
	|	Анкета.ИНН,
	|	Анкета.Ссылка.Дата КАК ДатаАнкеты
	|ПОМЕСТИТЬ ВТАнкетыСотрудников
	|ИЗ
	|	ВТСписокФизлицДокумента КАК ПачкаДокументовАДВ_3Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовАДВ_1.Сотрудники КАК Анкета
	|		ПО ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо = Анкета.Сотрудник
	|			И ПачкаДокументовАДВ_3Сотрудники.Организация = Анкета.Ссылка.Организация
	|			И ПачкаДокументовАДВ_3Сотрудники.УточненнаяДатаПолученияСвидетельства >= Анкета.Ссылка.Дата
	|			И (Анкета.Ссылка.Проведен)
	|			И (Анкета.Ссылка.ДокументПринятВПФР)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	ДатаАнкеты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Анкета.Фамилия КАК Фамилия,
	|	Анкета.Имя КАК Имя,
	|	Анкета.Отчество КАК Отчество,
	|	Анкета.Пол КАК Пол,
	|	Анкета.ДатаРождения КАК ДатаРождения,
	|	Анкета.МестоРождения КАК МестоРождения,
	|	ВЫБОР
	|		КОГДА Анкета.Гражданство = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|		ИНАЧЕ Анкета.Гражданство
	|	КОНЕЦ КАК Гражданство,
	|	Анкета.ИНН,
	|	Анкета.АдресРегистрации КАК АдресРегистрации,
	|	Анкета.АдресФактический КАК АдресФактический,
	|	Анкета.Телефоны КАК Телефоны
	|ПОМЕСТИТЬ ВТДанныеАнкет
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Анкета.ДатаАнкеты) КАК МаксимальнаяДата,
	|		Анкета.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТАнкетыСотрудников КАК Анкета
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Анкета.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТАнкетыСотрудников КАК Анкета
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Анкета.ДатаАнкеты
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Анкета.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Заявление.Ссылка.Дата КАК ДатаСтарогоДокумента,
	|	Заявление.СтраховойНомерПФРВСвидетельстве,
	|	Заявление.Гражданство,
	|	Заявление.ИНН,
	|	Заявление.АдресРегистрации,
	|	Заявление.АдресФактический,
	|	Заявление.Телефоны,
	|	Заявление.Фамилия,
	|	Заявление.Имя,
	|	Заявление.Отчество,
	|	Заявление.ФамилияВСвидетельстве,
	|	Заявление.ИмяВСвидетельстве,
	|	Заявление.ОтчествоВСвидетельстве,
	|	Заявление.Пол,
	|	ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка) КАК ПолВСвидетельстве,
	|	Заявление.ДатаРождения,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРожденияВСвидетельстве,
	|	Заявление.МестоРождения,
	|	"""" КАК МестоРожденияВСвидетельстве
	|ПОМЕСТИТЬ ВТПредыдущиеЗаявления
	|ИЗ
	|	ВТСписокФизлицДокумента КАК ПачкаДокументовАДВ_3Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовАДВ_2.Сотрудники КАК Заявление
	|		ПО ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо = Заявление.Сотрудник
	|			И (Заявление.Ссылка.Проведен)
	|			И (Заявление.Ссылка.ДокументПринятВПФР)
	|			И (Заявление.Ссылка.Организация = ПачкаДокументовАДВ_3Сотрудники.Организация)
	|			И (Заявление.Ссылка.Дата <= ПачкаДокументовАДВ_3Сотрудники.УточненнаяДатаПолученияСвидетельства)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо,
	|	Заявление.Ссылка.Дата,
	|	Заявление.СтраховойНомерПФРВСвидетельстве,
	|	Заявление.Гражданство,
	|	Заявление.ИНН,
	|	Заявление.АдресРегистрации,
	|	Заявление.АдресФактический,
	|	Заявление.Телефоны,
	|	Заявление.Фамилия,
	|	Заявление.Имя,
	|	Заявление.Отчество,
	|	Заявление.ФамилияВСвидетельстве,
	|	Заявление.ИмяВСвидетельстве,
	|	Заявление.ОтчествоВСвидетельстве,
	|	Заявление.Пол,
	|	Заявление.ПолВСвидетельстве,
	|	Заявление.ДатаРождения,
	|	Заявление.ДатаРожденияВСвидетельстве,
	|	Заявление.МестоРождения,
	|	Заявление.МестоРожденияВСвидетельстве
	|ИЗ
	|	ВТСписокФизлицДокумента КАК ПачкаДокументовАДВ_3Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовАДВ_3.Сотрудники КАК Заявление
	|		ПО ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо = Заявление.Сотрудник
	|			И (Заявление.Ссылка.Проведен)
	|			И (Заявление.Ссылка <> &Ссылка)
	|			И (Заявление.Ссылка.ДокументПринятВПФР)
	|			И (Заявление.Ссылка.Организация = ПачкаДокументовАДВ_3Сотрудники.Организация)
	|			И (Заявление.Ссылка.Дата <= ПачкаДокументовАДВ_3Сотрудники.УточненнаяДатаПолученияСвидетельства)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	ДатаСтарогоДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА Заявление.Фамилия = """"
	|			ТОГДА Заявление.ФамилияВСвидетельстве
	|		ИНАЧЕ Заявление.Фамилия
	|	КОНЕЦ КАК Фамилия,
	|	ВЫБОР
	|		КОГДА Заявление.Имя = """"
	|			ТОГДА Заявление.ИмяВСвидетельстве
	|		ИНАЧЕ Заявление.Имя
	|	КОНЕЦ КАК Имя,
	|	ВЫБОР
	|		КОГДА Заявление.Отчество = """"
	|			ТОГДА Заявление.ОтчествоВСвидетельстве
	|		ИНАЧЕ Заявление.Отчество
	|	КОНЕЦ КАК Отчество,
	|	Заявление.СтраховойНомерПФРВСвидетельстве
	|ПОМЕСТИТЬ ВТСтарыеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА Заявление.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка)
	|			ТОГДА Заявление.ПолВСвидетельстве
	|		ИНАЧЕ Заявление.Пол
	|	КОНЕЦ КАК Пол
	|ПОМЕСТИТЬ ВТСтарыеДанныеОПоле
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		(Заявление.Пол <> ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка)
	|				ИЛИ Заявление.ПолВСвидетельстве <> ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА Заявление.ДатаРождения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Заявление.ДатаРожденияВСвидетельстве
	|		ИНАЧЕ Заявление.ДатаРождения
	|	КОНЕЦ КАК ДатаРождения
	|ПОМЕСТИТЬ ВТСтарыеДанныеОДатеРождения
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		(Заявление.ДатаРождения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ИЛИ Заявление.ДатаРожденияВСвидетельстве <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА Заявление.МестоРождения = """"
	|			ТОГДА Заявление.МестоРожденияВСвидетельстве
	|		ИНАЧЕ Заявление.МестоРождения
	|	КОНЕЦ КАК МестоРождения
	|ПОМЕСТИТЬ ВТСтарыеДанныеОМестеРождения
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		(Заявление.МестоРождения <> """"
	|				ИЛИ Заявление.МестоРожденияВСвидетельстве <> """")
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Заявление.Гражданство КАК Гражданство
	|ПОМЕСТИТЬ ВТСтарыеДанныеОГражданстве
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		Заявление.Гражданство <> ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Заявление.ИНН КАК ИНН
	|ПОМЕСТИТЬ ВТСтарыеДанныеОбИНН
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		Заявление.ИНН <> """"
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Заявление.Телефоны КАК Телефоны
	|ПОМЕСТИТЬ ВТСтарыеДанныеОТелефоне
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		(ВЫРАЗИТЬ(Заявление.Телефоны КАК СТРОКА(1000))) <> """"
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Заявление.АдресФактический КАК АдресФактический
	|ПОМЕСТИТЬ ВТСтарыеДанныеАдресаФактического
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		(ВЫРАЗИТЬ(Заявление.АдресФактический КАК СТРОКА(1000))) <> """"
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Заявление.АдресРегистрации КАК АдресРегистрации
	|ПОМЕСТИТЬ ВТСтарыеДанныеАдресаРегистрации
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.ДатаСтарогоДокумента) КАК МаксимальнаяДата,
	|		Заявление.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПредыдущиеЗаявления КАК Заявление
	|	ГДЕ
	|		(ВЫРАЗИТЬ(Заявление.АдресРегистрации КАК СТРОКА(1000))) <> """"
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заявление.ФизическоеЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредыдущиеЗаявления КАК Заявление
	|		ПО МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.ДатаСтарогоДокумента
	|			И МаксимальныеДатыПоСотрудникам.ФизическоеЛицо = Заявление.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КомплектыОтчетностиПерсУчетаСписокПачекСЗВ.ПачкаДокументов
	|ПОМЕСТИТЬ ВТПереданныеВПФРДокументы
	|ИЗ
	|	Справочник.КомплектыОтчетностиПерсУчета.СписокПачекСЗВ КАК КомплектыОтчетностиПерсУчетаСписокПачекСЗВ
	|ГДЕ
	|	(КомплектыОтчетностиПерсУчетаСписокПачекСЗВ.Ссылка.СостояниеКомплекта = ЗНАЧЕНИЕ(Перечисление.СостояниеКомплектаОтчетностиПерсучета.СведенияОтправлены)
	|			ИЛИ КомплектыОтчетностиПерсУчетаСписокПачекСЗВ.Ссылка.СостояниеКомплекта = ЗНАЧЕНИЕ(Перечисление.СостояниеКомплектаОтчетностиПерсучета.СведенияСкорректированы))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеОТрудовомСтажеИЗаработкеСЗВ_6.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТДанныеОСЗВ6
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка.Дата КАК Дата,
	|		ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТСписокФизлицДокумента КАК ПачкаДокументовАДВ_3Сотрудники
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_1.Сотрудники КАК ПачкаДокументовСЗВ_6_1Сотрудники
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПереданныеВПФРДокументы КАК ПереданныеВПФРДокументы
	|				ПО ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка = ПереданныеВПФРДокументы.ПачкаДокументов
	|			ПО ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо = ПачкаДокументовСЗВ_6_1Сотрудники.Сотрудник
	|				И ПачкаДокументовАДВ_3Сотрудники.Организация = ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка.Организация
	|				И (ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ПачкаДокументовАДВ_3Сотрудники.УточненнаяДатаПолученияСвидетельства, ГОД) И ПачкаДокументовАДВ_3Сотрудники.УточненнаяДатаПолученияСвидетельства)
	|				И (ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка.Проведен)
	|				И (ПачкаДокументовСЗВ_6_1Сотрудники.Ссылка.ДокументПринятВПФР)
	|				И ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо = ПачкаДокументовСЗВ_6_1Сотрудники.Сотрудник
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РеестрСЗВ_6_2Сотрудники.Ссылка.Дата,
	|		ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо
	|	ИЗ
	|		ВТСписокФизлицДокумента КАК ПачкаДокументовАДВ_3Сотрудники
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПереданныеВПФРДокументы КАК ПереданныеВПФРДокументы
	|				ПО РеестрСЗВ_6_2Сотрудники.Ссылка = ПереданныеВПФРДокументы.ПачкаДокументов
	|			ПО ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо = РеестрСЗВ_6_2Сотрудники.Сотрудник
	|				И ПачкаДокументовАДВ_3Сотрудники.Организация = РеестрСЗВ_6_2Сотрудники.Ссылка.Организация
	|				И (РеестрСЗВ_6_2Сотрудники.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ПачкаДокументовАДВ_3Сотрудники.УточненнаяДатаПолученияСвидетельства, ГОД) И ПачкаДокументовАДВ_3Сотрудники.УточненнаяДатаПолученияСвидетельства)
	|				И (РеестрСЗВ_6_2Сотрудники.Ссылка.Проведен)
	|				И (РеестрСЗВ_6_2Сотрудники.Ссылка.ДокументПринятВПФР)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.Дата,
	|		ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо
	|	ИЗ
	|		ВТСписокФизлицДокумента КАК ПачкаДокументовАДВ_3Сотрудники
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПереданныеВПФРДокументы КАК ПереданныеВПФРДокументы
	|				ПО ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка = ПереданныеВПФРДокументы.ПачкаДокументов
	|			ПО ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо = ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник
	|				И ПачкаДокументовАДВ_3Сотрудники.Организация = ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.Организация
	|				И (ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ПачкаДокументовАДВ_3Сотрудники.УточненнаяДатаПолученияСвидетельства, ГОД) И ПачкаДокументовАДВ_3Сотрудники.УточненнаяДатаПолученияСвидетельства)
	|				И (ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.Проведен)
	|				И (ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.ДокументПринятВПФР)
	|				И ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо = ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка.Дата,
	|		ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо
	|	ИЗ
	|		ВТСписокФизлицДокумента КАК ПачкаДокументовАДВ_3Сотрудники
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК ПачкаРазделов6РасчетаРСВ_1Сотрудники
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПереданныеВПФРДокументы КАК ПереданныеВПФРДокументы
	|				ПО ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка = ПереданныеВПФРДокументы.ПачкаДокументов
	|			ПО ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо = ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник
	|				И ПачкаДокументовАДВ_3Сотрудники.Организация = ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка.Организация
	|				И (ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ПачкаДокументовАДВ_3Сотрудники.УточненнаяДатаПолученияСвидетельства, ГОД) И ПачкаДокументовАДВ_3Сотрудники.УточненнаяДатаПолученияСвидетельства)
	|				И (ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка.Проведен)
	|				И (ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка.ДокументПринятВПФР)
	|				И ПачкаДокументовАДВ_3Сотрудники.ФизическоеЛицо = ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник) КАК ДанныеОТрудовомСтажеИЗаработкеСЗВ_6
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОТрудовомСтажеИЗаработкеСЗВ_6.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераСтрок.НомерСтроки КАК НомерСтроки,
	|	НомераСтрок.ФизическоеЛицо КАК Сотрудник,
	|	НомераСтрок.УточненнаяДатаПолученияСвидетельства КАК ДатаПолученияСвидетельства,
	|	КадровыеДанныеФизЛиц.СтраховойНомерПФР КАК СтраховойНомерПФРВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОПоле.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанныеОПоле.Пол
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.Пол
	|		ИНАЧЕ КадровыеДанныеФизЛиц.Пол
	|	КОНЕЦ КАК ПолВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанные.Фамилия
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.Фамилия
	|		ИНАЧЕ КадровыеДанныеФизЛиц.Фамилия
	|	КОНЕЦ КАК ФамилияВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанные.Имя
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.Имя
	|		ИНАЧЕ КадровыеДанныеФизЛиц.Имя
	|	КОНЕЦ КАК ИмяВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанные.Отчество
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.Отчество
	|		ИНАЧЕ КадровыеДанныеФизЛиц.Отчество
	|	КОНЕЦ КАК ОтчествоВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОДатеРождения.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанныеОДатеРождения.ДатаРождения
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.ДатаРождения
	|		ИНАЧЕ КадровыеДанныеФизЛиц.ДатаРождения
	|	КОНЕЦ КАК ДатаРожденияВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОМестеРождения.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанныеОМестеРождения.МестоРождения
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.МестоРождения
	|		ИНАЧЕ КадровыеДанныеФизЛиц.МестоРождения
	|	КОНЕЦ КАК МестоРожденияВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Фамилия <> СтарыеДанные.Фамилия
	|						ТОГДА КадровыеДанныеФизЛиц.Фамилия
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Фамилия <> ДанныеАнкет.Фамилия
	|						ТОГДА КадровыеДанныеФизЛиц.Фамилия
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Фамилия,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Имя <> СтарыеДанные.Имя
	|						ТОГДА КадровыеДанныеФизЛиц.Имя
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Имя <> ДанныеАнкет.Имя
	|						ТОГДА КадровыеДанныеФизЛиц.Имя
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Имя,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Отчество <> СтарыеДанные.Отчество
	|						ТОГДА КадровыеДанныеФизЛиц.Отчество
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Отчество <> ДанныеАнкет.Отчество
	|						ТОГДА КадровыеДанныеФизЛиц.Отчество
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Отчество,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА СтарыеДанные.Отчество <> """"
	|							И КадровыеДанныеФизЛиц.Отчество = """"
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеАнкет.Отчество <> """"
	|							И КадровыеДанныеФизЛиц.Отчество = """"
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПризнакОтменыОтчества,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОПоле.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Пол = СтарыеДанныеОПоле.Пол
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка)
	|					ИНАЧЕ КадровыеДанныеФизЛиц.Пол
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.Пол = ДанныеАнкет.Пол
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка)
	|					ИНАЧЕ КадровыеДанныеФизЛиц.Пол
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка)
	|	КОНЕЦ КАК Пол,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОДатеРождения.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.ДатаРождения = СтарыеДанныеОДатеРождения.ДатаРождения
	|						ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ИНАЧЕ КадровыеДанныеФизЛиц.ДатаРождения
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.ДатаРождения = ДанныеАнкет.ДатаРождения
	|						ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ИНАЧЕ КадровыеДанныеФизЛиц.ДатаРождения
	|				КОНЕЦ
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ДатаРождения,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОМестеРождения.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.МестоРождения КАК СТРОКА(1000))) = СтарыеДанныеОМестеРождения.МестоРождения
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.МестоРождения
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеФизЛиц.МестоРождения = ДанныеАнкет.МестоРождения
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.МестоРождения
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК МестоРождения,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОГражданстве.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(КадровыеДанныеФизЛиц.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = СтарыеДанныеОГражданстве.Гражданство
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|					ИНАЧЕ ЕСТЬNULL(КадровыеДанныеФизЛиц.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия))
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(КадровыеДанныеФизЛиц.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ДанныеАнкет.Гражданство
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|					ИНАЧЕ ЕСТЬNULL(КадровыеДанныеФизЛиц.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия))
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|	КОНЕЦ КАК Гражданство,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОбИНН.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(КадровыеДанныеФизЛиц.ИНН, """") = СтарыеДанныеОбИНН.ИНН
	|						ТОГДА """"
	|					ИНАЧЕ ЕСТЬNULL(КадровыеДанныеФизЛиц.ИНН, """")
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(КадровыеДанныеФизЛиц.ИНН, """") = ДанныеАнкет.ИНН
	|						ТОГДА """"
	|					ИНАЧЕ ЕСТЬNULL(КадровыеДанныеФизЛиц.ИНН, """")
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИНН,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеАдресаРегистрации.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресПоПрописке КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(СтарыеДанныеАдресаРегистрации.АдресРегистрации КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресПоПрописке
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресПоПрописке КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(ДанныеАнкет.АдресРегистрации КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресПоПрописке
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресРегистрации,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеАдресаРегистрации.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресПоПрописке КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(СтарыеДанныеАдресаРегистрации.АдресРегистрации КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресПоПропискеПредставление
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресПоПрописке КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(ДанныеАнкет.АдресРегистрации КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресПоПропискеПредставление
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресРегистрацииПредставление,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеАдресаФактического.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресМестаПроживания КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(СтарыеДанныеАдресаФактического.АдресФактический КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресМестаПроживания
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресМестаПроживания КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(ДанныеАнкет.АдресФактический КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресМестаПроживания
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресФактический,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеАдресаФактического.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресМестаПроживания КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(СтарыеДанныеАдресаФактического.АдресФактический КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресМестаПроживанияПредставление
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.АдресМестаПроживания КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(ДанныеАнкет.АдресФактический КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.АдресМестаПроживанияПредставление
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресФактическийПредставление,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОТелефоне.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.ТелефонДомашнийПредставление КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(СтарыеДанныеОТелефоне.Телефоны КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.ТелефонДомашнийПредставление
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(КадровыеДанныеФизЛиц.ТелефонДомашнийПредставление КАК СТРОКА(1000))) = (ВЫРАЗИТЬ(ДанныеАнкет.Телефоны КАК СТРОКА(1000)))
	|						ТОГДА """"
	|					ИНАЧЕ КадровыеДанныеФизЛиц.ТелефонДомашнийПредставление
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Телефоны,
	|	КадровыеДанныеФизЛиц.ДокументВид КАК ВидДокумента,
	|	КадровыеДанныеФизЛиц.ДокументСерия КАК СерияДокумента,
	|	КадровыеДанныеФизЛиц.ДокументНомер КАК НомерДокумента,
	|	КадровыеДанныеФизЛиц.ДокументДатаВыдачи КАК ДатаВыдачи,
	|	КадровыеДанныеФизЛиц.ДокументКемВыдан КАК КемВыдан,
	|	КадровыеДанныеФизЛиц.Фамилия КАК ДанныеФизЛицаФамилия,
	|	КадровыеДанныеФизЛиц.Имя КАК ДанныеФизЛицаИмя,
	|	КадровыеДанныеФизЛиц.Отчество КАК ДанныеФизЛицаОтчество,
	|	КадровыеДанныеФизЛиц.Пол КАК ДанныеФизЛицаПол,
	|	КадровыеДанныеФизЛиц.ДатаРождения КАК ДанныеФизЛицаДатаРождения,
	|	КадровыеДанныеФизЛиц.МестоРождения КАК ДанныеФизЛицаМестоРождения,
	|	КадровыеДанныеФизЛиц.ИНН КАК ДанныеФизЛицаИНН,
	|	КадровыеДанныеФизЛиц.Страна КАК ДанныеФизЛицаГражданство,
	|	КадровыеДанныеФизЛиц.АдресПоПрописке КАК ДанныеФизЛицаАдресРегистрации,
	|	КадровыеДанныеФизЛиц.АдресПоПропискеПредставление КАК ДанныеФизЛицаАдресРегистрацииПредставление,
	|	КадровыеДанныеФизЛиц.АдресМестаПроживания КАК ДанныеФизЛицаАдресФактический,
	|	КадровыеДанныеФизЛиц.АдресМестаПроживанияПредставление КАК ДанныеФизЛицаАдресФактическийПредставление,
	|	КадровыеДанныеФизЛиц.ТелефонДомашнийПредставление КАК ДанныеФизЛицаТелефоны,
	|	КадровыеДанныеФизЛиц.ДокументВид КАК ДанныеФизЛицаВидДокумента,
	|	КадровыеДанныеФизЛиц.ДокументСерия КАК ДанныеФизЛицаСерияДокумента,
	|	КадровыеДанныеФизЛиц.ДокументНомер КАК ДанныеФизЛицаНомерДокумента,
	|	КадровыеДанныеФизЛиц.ДокументДатаВыдачи КАК ДанныеФизЛицаДатаВыдачи,
	|	КадровыеДанныеФизЛиц.ДокументКемВыдан КАК ДанныеФизЛицаКемВыдан
	|ИЗ
	|	ВТСписокФизлицДокумента КАК НомераСтрок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизЛиц
	|		ПО НомераСтрок.ФизическоеЛицо = КадровыеДанныеФизЛиц.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеАнкет КАК ДанныеАнкет
	|		ПО НомераСтрок.ФизическоеЛицо = ДанныеАнкет.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанные КАК СтарыеДанные
	|		ПО НомераСтрок.ФизическоеЛицо = СтарыеДанные.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеОПоле КАК СтарыеДанныеОПоле
	|		ПО НомераСтрок.ФизическоеЛицо = СтарыеДанныеОПоле.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеОДатеРождения КАК СтарыеДанныеОДатеРождения
	|		ПО НомераСтрок.ФизическоеЛицо = СтарыеДанныеОДатеРождения.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеОМестеРождения КАК СтарыеДанныеОМестеРождения
	|		ПО НомераСтрок.ФизическоеЛицо = СтарыеДанныеОМестеРождения.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеОГражданстве КАК СтарыеДанныеОГражданстве
	|		ПО (НомераСтрок.ФизическоеЛицо = СтарыеДанныеОМестеРождения.ФизическоеЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеОбИНН КАК СтарыеДанныеОбИНН
	|		ПО (НомераСтрок.ФизическоеЛицо = СтарыеДанныеОбИНН.ФизическоеЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеОТелефоне КАК СтарыеДанныеОТелефоне
	|		ПО НомераСтрок.ФизическоеЛицо = СтарыеДанныеОТелефоне.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеАдресаФактического КАК СтарыеДанныеАдресаФактического
	|		ПО НомераСтрок.ФизическоеЛицо = СтарыеДанныеАдресаФактического.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеДанныеАдресаРегистрации КАК СтарыеДанныеАдресаРегистрации
	|		ПО НомераСтрок.ФизическоеЛицо = СтарыеДанныеАдресаРегистрации.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОСЗВ6 КАК ДанныеОСЗВ6
	|		ПО НомераСтрок.ФизическоеЛицо = ДанныеОСЗВ6.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоСотрудникамДляПечати(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовАДВ_3Сотрудники.Ссылка КАК Ссылка,
	|	ПачкаДокументовАДВ_3Сотрудники.НомерСтроки КАК НомерСтроки,
	|	ПачкаДокументовАДВ_3Сотрудники.Сотрудник КАК ФизическоеЛицо,
	|	ПачкаДокументовАДВ_3Сотрудники.ДатаПолученияСвидетельства КАК ДатаПолученияСвидетельства,
	|	ПачкаДокументовАДВ_3Сотрудники.СтраховойНомерПФРВСвидетельстве КАК СтраховойНомерПФРВСвидетельстве,
	|	ПачкаДокументовАДВ_3Сотрудники.ФамилияВСвидетельстве КАК ФамилияВСвидетельстве,
	|	ПачкаДокументовАДВ_3Сотрудники.ИмяВСвидетельстве КАК ИмяВСвидетельстве,
	|	ПачкаДокументовАДВ_3Сотрудники.ОтчествоВСвидетельстве КАК ОтчествоВСвидетельстве,
	|	ПачкаДокументовАДВ_3Сотрудники.Фамилия КАК Фамилия,
	|	ПачкаДокументовАДВ_3Сотрудники.Имя КАК Имя,
	|	ПачкаДокументовАДВ_3Сотрудники.Отчество КАК Отчество,
	|	ПачкаДокументовАДВ_3Сотрудники.Пол КАК Пол,
	|	ПачкаДокументовАДВ_3Сотрудники.ДатаРождения КАК ДатаРождения,
	|	ПачкаДокументовАДВ_3Сотрудники.МестоРождения КАК МестоРождения,
	|	ПачкаДокументовАДВ_3Сотрудники.МестоРожденияПредставление КАК МестоРожденияПредставление,
	|	ПачкаДокументовАДВ_3Сотрудники.Гражданство КАК Гражданство,
	|	ПачкаДокументовАДВ_3Сотрудники.АдресРегистрации КАК АдресРегистрации,
	|	ПачкаДокументовАДВ_3Сотрудники.АдресФактический КАК АдресФактический,
	|	ПачкаДокументовАДВ_3Сотрудники.АдресРегистрацииПредставление КАК АдресРегистрацииПредставление,
	|	ПачкаДокументовАДВ_3Сотрудники.АдресФактическийПредставление КАК АдресФактическийПредставление,
	|	ПачкаДокументовАДВ_3Сотрудники.Телефоны КАК Телефоны,
	|	ПачкаДокументовАДВ_3Сотрудники.ПризнакОтменыОтчества КАК ПризнакОтменыОтчества,
	|	ПачкаДокументовАДВ_3Сотрудники.ПризнакОтменыМестаРождения КАК ПризнакОтменыМестаРождения,
	|	ПачкаДокументовАДВ_3Сотрудники.ВидДокумента КАК ВидДокумента,
	|	ПачкаДокументовАДВ_3Сотрудники.СерияДокумента КАК СерияДокумента,
	|	ПачкаДокументовАДВ_3Сотрудники.НомерДокумента КАК НомерДокумента,
	|	ПачкаДокументовАДВ_3Сотрудники.ДатаВыдачи КАК ДатаВыдачи,
	|	ПачкаДокументовАДВ_3Сотрудники.КемВыдан КАК КемВыдан,
	|	ПачкаДокументовАДВ_3Сотрудники.ВидДокумента.КодПФР КАК ВидДокументаКодПФР,
	|	ПачкаДокументовАДВ_3Сотрудники.ВидДокумента.Наименование КАК ДокументВидНаименование,
	|	ПачкаДокументовАДВ_3Сотрудники.ПолВСвидетельстве КАК ПолВСвидетельстве,
	|	ПачкаДокументовАДВ_3Сотрудники.ДатаРожденияВСвидетельстве КАК ДатаРожденияВСвидетельстве,
	|	ПачкаДокументовАДВ_3Сотрудники.МестоРожденияВСвидетельстве КАК МестоРожденияВСвидетельстве,
	|	ПачкаДокументовАДВ_3Сотрудники.ОтметкаОПредставленииСведений КАК ОтметкаОПредставленииСведений,
	|	ПачкаДокументовАДВ_3Сотрудники.ИНН КАК ИНН,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовАДВ_3Сотрудники.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.СвидетельствоОРождении)
	|			ТОГДА ПачкаДокументовАДВ_3Сотрудники.НомерАктовойЗаписиПриРождении
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерАктовойЗаписи,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовАДВ_3Сотрудники.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.СвидетельствоОРождении)
	|			ТОГДА ПачкаДокументовАДВ_3Сотрудники.ДатаСоставленияАктовойЗаписиПриРождении
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаАктовойЗаписи,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовАДВ_3Сотрудники.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.СвидетельствоОРождении)
	|			ТОГДА ПачкаДокументовАДВ_3Сотрудники.НаименованиеОрганаРегистрацииАктовойЗаписиПриРождении
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ОрганРегистрацииАктовойЗаписи,
	|	ПачкаДокументовАДВ_3Сотрудники.Ссылка.Руководитель КАК Руководитель,
	|	ПачкаДокументовАДВ_3Сотрудники.Ссылка.Дата КАК Дата,
	|	ПачкаДокументовАДВ_3Сотрудники.Ссылка.ДолжностьРуководителя.Наименование КАК ДолжностьРуководителя
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ПачкаДокументовАДВ_3.Сотрудники КАК ПачкаДокументовАДВ_3Сотрудники
	|ГДЕ
	|	ПачкаДокументовАДВ_3Сотрудники.Ссылка В(&МассивОбъектов)";
	
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.НомерСтроки КАК НомерСтроки,
	|	ДанныеДокументов.ФизическоеЛицо,
	|	ДанныеДокументов.ДатаПолученияСвидетельства,
	|	ДанныеДокументов.СтраховойНомерПФРВСвидетельстве,
	|	ДанныеДокументов.ФамилияВСвидетельстве,
	|	ДанныеДокументов.ИмяВСвидетельстве,
	|	ДанныеДокументов.ОтчествоВСвидетельстве,
	|	ДанныеДокументов.Фамилия,
	|	ДанныеДокументов.Имя,
	|	ДанныеДокументов.Отчество,
	|	ДанныеДокументов.Пол,
	|	ДанныеДокументов.ДатаРождения,
	|	ДанныеДокументов.МестоРождения,
	|	ДанныеДокументов.МестоРожденияПредставление,
	|	ДанныеДокументов.Гражданство,
	|	ДанныеДокументов.АдресРегистрации,
	|	ДанныеДокументов.АдресФактический,
	|	ДанныеДокументов.АдресРегистрацииПредставление,
	|	ДанныеДокументов.АдресФактическийПредставление,
	|	ДанныеДокументов.Телефоны,
	|	ДанныеДокументов.ПризнакОтменыОтчества,
	|	ДанныеДокументов.ПризнакОтменыМестаРождения,
	|	ДанныеДокументов.ВидДокумента,
	|	ДанныеДокументов.СерияДокумента,
	|	ДанныеДокументов.НомерДокумента,
	|	ДанныеДокументов.ДатаВыдачи,
	|	ДанныеДокументов.КемВыдан,
	|	ДанныеДокументов.ВидДокументаКодПФР,
	|	ДанныеДокументов.ДокументВидНаименование,
	|	ДанныеДокументов.ПолВСвидетельстве,
	|	ДанныеДокументов.ДатаРожденияВСвидетельстве,
	|	ДанныеДокументов.МестоРожденияВСвидетельстве,
	|	ДанныеДокументов.ОтметкаОПредставленииСведений,
	|	ДанныеДокументов.ИНН,
	|	ДанныеДокументов.НомерАктовойЗаписи,
	|	ДанныеДокументов.ДатаАктовойЗаписи,
	|	ДанныеДокументов.ОрганРегистрацииАктовойЗаписи,
	|	ЕСТЬNULL(ФИООтветственныхЛиц.РасшифровкаПодписи, """") КАК РуководительРасшифровкаПодписи,
	|	ДанныеДокументов.ДолжностьРуководителя,
	|	ДанныеДокументов.Дата
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИООтветственныхЛиц
	|		ПО ДанныеДокументов.Ссылка = ФИООтветственныхЛиц.Ссылка
	|			И ДанныеДокументов.Руководитель = ФИООтветственныхЛиц.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

#Область ДляОбеспеченияФормированияВыходногоФайла

// Формирует файл, который можно будет записать на дискетку.
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаСотрудники)
	
	Если ВыборкаПоШапкеДокумента.Дата >= ПерсонифицированныйУчетКлиентСервер.ДатаПостановленияАДВ2022() Тогда 
		Возврат СформироватьВыходнойФайл2022(ВыборкаПоШапкеДокумента, ВыборкаСотрудники);
	КонецЕсли;
	
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР70XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	СписокОбработанныхЗаявлений = Новый Соответствие;
	
	ТекстФайла	= "";
	НомерДокументаВПачке = 0;
	
	ДатаЗаполнения			= ВыборкаПоШапкеДокумента.Дата;
	КоличествоДокументов 	= ВыборкаСотрудники.Количество();
	
	ДатаПостановления846п = РегистрыСведений.ДатыВступленияВСилуНА.ДатаВступленияВСилуНА("ОбновлениеФорматаАДВСогласноПостановлению846п");
	ИспользоватьФормат2021 = ЗначениеЗаполнено(ДатаПостановления846п) И ДатаПостановления846п <= ВыборкаПоШапкеДокумента.Дата;
	
	ДатаПостановленияАДВ2022 = ПерсонифицированныйУчетКлиентСервер.ДатаПостановленияАДВ2022();
	ИспользоватьФормат2022 = ДатаПостановленияАДВ2022 <= ВыборкаПоШапкеДокумента.Дата;
	
	// Формируем файл версии 07.00.
	
	// Список стран
	СписокСтран = Новый Соответствие;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтраныМира.Наименование,
	|	СтраныМира.Код
	|ИЗ
	|	Справочник.СтраныМира КАК СтраныМира";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокСтран.Вставить(СокрЛП(Выборка.Наименование), Строка(Выборка.Код));
	КонецЦикла;
	
	НомерДокументаВПачке = 1;
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	
	УзелПФР = ПерсонифицированныйУчет.УзелФайлаПФР(ДеревоВыгрузки);
	
	ПерсонифицированныйУчет.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, ДеревоФормата, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР);
		
	ТипДокумента = "ЗАЯВЛЕНИЕ_О_ДУБЛИКАТЕ";
	
	// Добавляем реквизит ПачкаВходящихДокументов.
	УзелПачкаВходящихДокументов = ПерсонифицированныйУчет.ЗаполнитьНаборЗаписейВходящаяОпись(УзелПФР, ДеревоФормата, ТипДокумента, ВыборкаПоШапкеДокумента, КоличествоДокументов, НомерДокументаВПачке);
	
	Сокращение = "";
	ФорматАДВ3 = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, ТипДокумента);
	ФорматАДВ3.Удалить("ПризнакОтменыОтчества");
	ФорматАДВ3.Удалить("ПризнакОтменыМестаРождения");
	ФорматИностранныйАдрес = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "АдресОбщий", 3);
	ФорматНеструктурированныйАдрес = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "АдресОбщий", 2);
	
	Пока ВыборкаСотрудники.Следующий() Цикл
		
		НомерДокументаВПачке = НомерДокументаВПачке + 1;
		
		НаборЗаписейАДВ3 = ОбщегоНазначения.СкопироватьРекурсивно(ФорматАДВ3);
		
		НаборЗаписейАДВ3.НомерВПачке.Значение = НомерДокументаВПачке;
		НаборЗаписейАДВ3.СтраховойНомер.Значение = ВыборкаСотрудники.СтраховойНомерПФРВСвидетельстве;
		
		// ФИОИзСтрахового
		НаборЗаписейФИОИзСтрахового = НаборЗаписейАДВ3.ФИОИзСтрахового.Значение;
		НаборЗаписейФИОИзСтрахового.Фамилия = ВРег(СокрЛП(ВыборкаСотрудники.ФамилияВСвидетельстве));
		НаборЗаписейФИОИзСтрахового.Имя = ВРег(СокрЛП(ВыборкаСотрудники.ИмяВСвидетельстве));
		НаборЗаписейФИОИзСтрахового.Отчество = ВРег(СокрЛП(ВыборкаСотрудники.ОтчествоВСвидетельстве));
		
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейАДВ3.ФИОИзСтрахового, "Фамилия");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейАДВ3.ФИОИзСтрахового, "Имя");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейАДВ3.ФИОИзСтрахового, "Отчество");
		
		// Отметка о предоставлении сведений.
		Если СокрЛП(ВыборкаСотрудники.ОтметкаОПредставленииСведений)= "Представлялись" Тогда
			НаборЗаписейАДВ3.ОтметкаОПредставленииСведений.Значение = "ПРЕДСТАВЛЕНЫ РАНЕЕ";
		ИначеЕсли СокрЛП(ВыборкаСотрудники.ОтметкаОПредставленииСведений)= "Будут представлены" Тогда	
			НаборЗаписейАДВ3.ОтметкаОПредставленииСведений.Значение = "БУДУТ ПРЕДСТАВЛЕНЫ";
		Иначе
			НаборЗаписейАДВ3.ОтметкаОПредставленииСведений.НеВыводитьВФайл = Истина;
		КонецЕсли;
		// ПолИзСтрахового
		НаборЗаписейАДВ3.ПолИзСтрахового.Значение = ?(ВыборкаСотрудники.ПолВСвидетельстве = Перечисления.ПолФизическогоЛица.Мужской, "МУЖСКОЙ", "ЖЕНСКИЙ");
		// ДатаРожденияИзСтрахового
		НаборЗаписейАДВ3.ДатаРожденияИзСтрахового.Значение = ВыборкаСотрудники.ДатаРожденияВСвидетельстве;
		// МестоРожденияИзСтрахового
		НаборЗаписейМестоРожденияИзСтрахового = НаборЗаписейАДВ3.МестоРожденияИзСтрахового.Значение;
		
		Если ЗначениеЗаполнено(ВыборкаСотрудники.МестоРожденияВСвидетельстве) Тогда 
			МестоРожденияИзСтрахового = ПерсонифицированныйУчетКлиентСервер.РазложитьМестоРождения(ВыборкаСотрудники.МестоРожденияВСвидетельстве); 
		
			НаборЗаписейМестоРожденияИзСтрахового.ТипМестаРождения = ?(МестоРожденияИзСтрахового.Особое = 1, "ОСОБОЕ", "СТАНДАРТНОЕ");
			
			НаборЗаписейМестоРожденияИзСтрахового.ГородРождения = ПерсонифицированныйУчет.НаименованиеИАдресноеСокращение(ВРЕГ(СокрЛП(МестоРожденияИзСтрахового.НаселенныйПункт)), Сокращение);
			НаборЗаписейМестоРожденияИзСтрахового.РайонРождения = ПерсонифицированныйУчет.НаименованиеИАдресноеСокращение(ВРЕГ(СокрЛП(МестоРожденияИзСтрахового.Район)), Сокращение);
			НаборЗаписейМестоРожденияИзСтрахового.РегионРождения = МестоРожденияИзСтрахового.Область;
			НаборЗаписейМестоРожденияИзСтрахового.СтранаРождения = МестоРожденияИзСтрахового.Страна;
		Иначе
			НаборЗаписейАДВ3.Удалить("МестоРожденияИзСтрахового");
		КонецЕсли;	
		
		// ИзменившиесяДанные
		НаборЗаписейИзменившиесяДанные = НаборЗаписейАДВ3.ИзменившиесяДанные.Значение;
		НаборЗаписейИзменившиесяДанные.Удалить("МестоРождения");
		
		// Гражданство
		НаборЗаписейИзменившиесяДанные.Гражданство.Значение = СокрЛП(ВыборкаСотрудники.Гражданство);
		
		// Адрес регистрации
		Если ПустаяСтрока(ВыборкаСотрудники.АдресРегистрации) Тогда
			НаборЗаписейИзменившиесяДанные.Удалить("АдресРегистрации");
		Иначе
			ТекстОшибки  ="";
			НаборЗаписейАдресРегистрации = НаборЗаписейИзменившиесяДанные.АдресРегистрации.Значение;
			ПерсонифицированныйУчет.ЗаполнитьАдрес(НаборЗаписейАдресРегистрации, ВыборкаСотрудники.АдресРегистрации, 
					СписокСтран, ФорматНеструктурированныйАдрес, ФорматИностранныйАдрес, Ложь);
			НаборЗаписейИзменившиесяДанные.АдресРегистрации.Значение = НаборЗаписейАдресРегистрации;
		КонецЕсли;
		
		// Адрес фактический
		Если ПустаяСтрока(ВыборкаСотрудники.АдресФактический) Тогда
			НаборЗаписейИзменившиесяДанные.Удалить("АдресФактический");
		Иначе
			ТекстОшибки = "";
			НаборЗаписейАдресФактический = НаборЗаписейИзменившиесяДанные.АдресФактический.Значение;
			ПерсонифицированныйУчет.ЗаполнитьАдрес(НаборЗаписейАдресФактический, ВыборкаСотрудники.АдресФактический, 
				СписокСтран, ФорматНеструктурированныйАдрес, ФорматИностранныйАдрес, Ложь);
			НаборЗаписейИзменившиесяДанные.АдресФактический.Значение = НаборЗаписейАдресФактический;
		КонецЕсли;
		
		// Телефон
		НаборЗаписейИзменившиесяДанные.Телефон.Значение = ВыборкаСотрудники.Телефоны;
		
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейИзменившиесяДанные.Пол, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейИзменившиесяДанные.ДатаРождения, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейИзменившиесяДанные.Телефон, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейИзменившиесяДанные.Гражданство, "Значение");
		
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейИзменившиесяДанные.ФИО, "Фамилия");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейИзменившиесяДанные.ФИО, "Имя");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейИзменившиесяДанные.ФИО, "Отчество");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСтруктуры(НаборЗаписейИзменившиесяДанные.ФИО);
		
		ПерсонифицированныйУчет.УстановитьВыводВФайлГруппыЭлементов(НаборЗаписейАДВ3.ИзменившиесяДанные);
		
		// УдостоверяющийДокумент
		НаборЗаписейУдостоверяющийДокумент = НаборЗаписейАДВ3.УдостоверяющийДокумент.Значение;
		НаборЗаписейДокумент = НаборЗаписейУдостоверяющийДокумент.Документ.Значение;
		
		ДанныеДокумента = ПерсонифицированныйУчет.ПолучитьДанныеДокументаВФорматеПФР(ВыборкаСотрудники.ВидДокумента, ВыборкаСотрудники.СерияДокумента,
				ВыборкаСотрудники.НомерДокумента, ВыборкаСотрудники.ДатаВыдачи,
				ВыборкаСотрудники.КемВыдан, ВыборкаСотрудники.ВидДокументаКодПФР, ВыборкаСотрудники.ДокументВидНаименование);
		
		НаборЗаписейУдостоверяющийДокумент.ТипУдостоверяющего.Значение = ДанныеДокумента.ТипУдостоверяющегоДокумента;
		НаборЗаписейДокумент.НаименованиеУдостоверяющего = ДанныеДокумента.НаименованиеУдостоверяющегоДокумента;
		
		НаборЗаписейДокумент.СерияРимскиеЦифры = ДанныеДокумента.СерияРимскиеЦифры;
		НаборЗаписейДокумент.СерияРусскиеБуквы = ДанныеДокумента.СерияРусскиеБуквы;
		НаборЗаписейДокумент.НомерУдостоверяющего = ДанныеДокумента.НомерУдостоверяющегоДокумента;
		НаборЗаписейДокумент.ДатаВыдачи = ДанныеДокумента.ДатаВыдачи;
		НаборЗаписейДокумент.КемВыдан = ДанныеДокумента.КемВыдан;
		
		Если ИспользоватьФормат2021 Тогда
			НаборЗаписейУдостоверяющийДокумент.НомерАктовойЗаписи.Значение = ВыборкаСотрудники.НомерАктовойЗаписи;
			НаборЗаписейУдостоверяющийДокумент.ИННФизическогоЛица.Значение = ВыборкаСотрудники.ИНН;
		КонецЕсли;
		
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейУдостоверяющийДокумент.Документ, "НаименованиеУдостоверяющего");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейУдостоверяющийДокумент.Документ, "СерияРимскиеЦифры");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейУдостоверяющийДокумент.Документ, "СерияРусскиеБуквы");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейУдостоверяющийДокумент.Документ, "НомерУдостоверяющего");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейУдостоверяющийДокумент.Документ, "ДатаВыдачи");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейУдостоверяющийДокумент.Документ, "КемВыдан");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейУдостоверяющийДокумент.НомерАктовойЗаписи, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейУдостоверяющийДокумент.ИННФизическогоЛица, "Значение");
		
		// ДатаЗаполнения
		НаборЗаписейАДВ3.ДатаЗаполнения.Значение = ДатаЗаполнения;
		ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокумента,""), НаборЗаписейАДВ3);
	КонецЦикла;
	
	// Преобразуем дерево в строковое описание XML.
	ТекстФайла = ПерсонифицированныйУчет.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки);
	
	Возврат ТекстФайла;
КонецФункции 

Функция СформироватьВыходнойФайл2022(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникам)
	
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматАДВ_2022XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	// Список стран
	СписокСтран = Новый Соответствие;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СтраныМира.Наименование,
		|	СтраныМира.Код
		|ИЗ
		|	Справочник.СтраныМира КАК СтраныМира";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокСтран.Вставить(СокрЛП(Выборка.Наименование), Строка(Выборка.Код));
	КонецЦикла;
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	
	Атрибуты = Новый Соответствие;
	Атрибуты.Вставить("xmlns", "http://пф.рф/АДВ-3/2022-03-23");   
	Атрибуты.Вставить("xmlns:АФ4", "http://пф.рф/АФ/2017-08-21");
	Атрибуты.Вставить("xmlns:УТ3", "http://пф.рф/УТ/2022-07-14");
	
	УзелПФР = ЗарплатаКадры.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ЭДПФР", "", Атрибуты);
	
	ФорматАДВ_3 = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "АДВ_3");
	
	Если ВыборкаПоРаботникам.Следующий() Тогда 
		
		ФорматАДВ_3.УТ3__СНИЛС.Значение =  ВыборкаПоРаботникам.СтраховойНомерПФРВСвидетельстве;
		
		НаборЗаписейФИОИзСтрахового = ФорматАДВ_3.УТ3__ФИО.Значение;
		НаборЗаписейФИОИзСтрахового.УТ3__Фамилия = СокрЛП(ВыборкаПоРаботникам.ФамилияВСвидетельстве);
		НаборЗаписейФИОИзСтрахового.УТ3__Имя = СокрЛП(ВыборкаПоРаботникам.ИмяВСвидетельстве);
		НаборЗаписейФИОИзСтрахового.УТ3__Отчество = СокрЛП(ВыборкаПоРаботникам.ОтчествоВСвидетельстве);
		
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(ФорматАДВ_3.УТ3__ФИО, "УТ3__Фамилия");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(ФорматАДВ_3.УТ3__ФИО, "УТ3__Имя");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(ФорматАДВ_3.УТ3__ФИО, "УТ3__Отчество");
		
		НаборЗаписейРеквизитыАктовойЗаписи = ФорматАДВ_3.АктоваяЗапись.Значение.РеквизитыДокумента.Значение;
		Если ЗначениеЗаполнено(ВыборкаПоРаботникам.ДатаАктовойЗаписи) Тогда 
			НаборЗаписейРеквизитыАктовойЗаписи.УТ3__Дата = ПерсонифицированныйУчетКлиентСервер.ДатаВФорматеПФР(ВыборкаПоРаботникам.ДатаАктовойЗаписи);
			НаборЗаписейРеквизитыАктовойЗаписи.УТ3__Номер = ВыборкаПоРаботникам.НомерАктовойЗаписи;
			ФорматАДВ_3.АктоваяЗапись.Значение.УТ3__Наименование.Значение = ВыборкаПоРаботникам.ОрганРегистрацииАктовойЗаписи;
		КонецЕсли;
		
		ПерсонифицированныйУчет.УстановитьВыводВФайл(ФорматАДВ_3.АктоваяЗапись, "Значение.РеквизитыДокумента.Значение.УТ3__Дата");
		
		ФорматАДВ_3.ИНН.Значение =  ВыборкаПоРаботникам.ИНН;
		ФорматАДВ_3.УТ3__Пол.Значение = ?(ВыборкаПоРаботникам.ПолВСвидетельстве = Перечисления.ПолФизическогоЛица.Мужской, "М", "Ж");
		ФорматАДВ_3.УТ3__ДатаРождения.Значение = ПерсонифицированныйУчетКлиентСервер.ДатаВФорматеПФР(ВыборкаПоРаботникам.ДатаРожденияВСвидетельстве);
		ФорматАДВ_3.УТ3__Телефоны.Значение.УТ3__Телефон = ПерсонифицированныйУчет.ПредставлениеТелефонаЕФС1(ВыборкаПоРаботникам.Телефоны);
		
		ПерсонифицированныйУчет.УстановитьВыводВФайл(ФорматАДВ_3.ИНН, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(ФорматАДВ_3.УТ3__Пол, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(ФорматАДВ_3.УТ3__ДатаРождения, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(ФорматАДВ_3.УТ3__Телефоны, "Значение.УТ3__Телефон");
		
		НаборЗаписейМестоРождения = ФорматАДВ_3.УТ3__МестоРождения.Значение;
		МестоРождения = ПерсонифицированныйУчетКлиентСервер.РазложитьМестоРождения(ВыборкаПоРаботникам.МестоРожденияВСвидетельстве, Ложь); 
		Сокращение = "";
		
		НаборЗаписейМестоРождения.УТ3__Тип = ?(МестоРождения.Особое = 1, "2", "1");
		НаборЗаписейМестоРождения.УТ3__Город = ПерсонифицированныйУчет.НаименованиеИАдресноеСокращение(СокрЛП(МестоРождения.НаселенныйПункт), Сокращение);
		НаборЗаписейМестоРождения.УТ3__Район = ПерсонифицированныйУчет.НаименованиеИАдресноеСокращение(СокрЛП(МестоРождения.Район), Сокращение);
		НаборЗаписейМестоРождения.УТ3__Регион = МестоРождения.Область;
		НаборЗаписейМестоРождения.УТ3__Страна = МестоРождения.Страна;
		
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(ФорматАДВ_3.УТ3__МестоРождения, "УТ3__Город");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(ФорматАДВ_3.УТ3__МестоРождения, "УТ3__Район");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(ФорматАДВ_3.УТ3__МестоРождения, "УТ3__Регион");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(ФорматАДВ_3.УТ3__МестоРождения, "УТ3__Страна");
		
		НаборЗаписейГражданство = ФорматАДВ_3.УТ3__Гражданство.Значение;
		НаборЗаписейГражданство.УТ3__Тип.Значение = 
			?(ВыборкаПоРаботникам.Гражданство = Справочники.СтраныМира.Россия, "1",
			?(ЗначениеЗаполнено(ВыборкаПоРаботникам.Гражданство), "2", "3"));
			
		Если НаборЗаписейГражданство.УТ3__Тип.Значение = "2" Тогда 
			НаборЗаписейГражданство.УТ3__Государство.Значение.УТ3__Наименование = СокрЛП(ВыборкаПоРаботникам.Гражданство);			
			НаборЗаписейГражданство.УТ3__Государство.Значение.УТ3__КодСтраны = СписокСтран[Строка(ВыборкаПоРаботникам.Гражданство)];
		Иначе 
			НаборЗаписейГражданство.УТ3__Государство.НеВыводитьВФайл = Истина;
		КонецЕсли;
		
		Если ПустаяСтрока(ВыборкаПоРаботникам.АдресРегистрации) Тогда
			ФорматАДВ_3.УТ3__АдресРегистрации.НеВыводитьВФайл = Истина;
		Иначе
			НаборЗаписейАдресРегистрации = ФорматАДВ_3.УТ3__АдресРегистрации.Значение;
			ПерсонифицированныйУчет.ЗаполнитьАдресАДВ2022(НаборЗаписейАдресРегистрации, ВыборкаПоРаботникам.АдресРегистрации);
		КонецЕсли;
		
		Если ПустаяСтрока(ВыборкаПоРаботникам.АдресФактический)
			Или ВыборкаПоРаботникам.АдресФактический = ВыборкаПоРаботникам.АдресРегистрации Тогда
			ФорматАДВ_3.УТ3__АдресФактический.НеВыводитьВФайл = Истина;
		Иначе
			НаборЗаписейАдресФактический = ФорматАДВ_3.УТ3__АдресФактический.Значение;
			ПерсонифицированныйУчет.ЗаполнитьАдресАДВ2022(НаборЗаписейАдресФактический, ВыборкаПоРаботникам.АдресФактический); 
		КонецЕсли;
		
		// Заполняем Удостоверяющий документ.
		НаборЗаписейДокумент = ФорматАДВ_3.УдостоверяющийДокумент.Значение;
		НаборЗаписейДокумент.УТ3__Тип = СокрЛП(ВыборкаПоРаботникам.ВидДокументаКодПФР);
		Если НаборЗаписейДокумент.УТ3__Тип = "ПРОЧЕЕ" Тогда 
			НаборЗаписейДокумент.УТ3__Наименование = СокрЛП(ВыборкаПоРаботникам.ДокументВидНаименование);
		КонецЕсли;
		НаборЗаписейДокумент.УТ3__Серия = СтрЗаменить(СокрЛП(ВыборкаПоРаботникам.СерияДокумента), " ", "");
		НаборЗаписейДокумент.УТ3__Номер = СокрЛП(ВыборкаПоРаботникам.НомерДокумента);
		НаборЗаписейДокумент.УТ3__ДатаВыдачи = ПерсонифицированныйУчетКлиентСервер.ДатаВФорматеПФР(ВыборкаПоРаботникам.ДатаВыдачи);
		НаборЗаписейДокумент.УТ3__КемВыдан = СокрЛП(ВыборкаПоРаботникам.КемВыдан);
		НаборЗаписейДокумент.УТ3__КодПодразделения = СокрЛП(ВыборкаПоРаботникам.КодПодразделения);
		
		ПерсонифицированныйУчет.УстановитьВыводВФайл(ФорматАДВ_3.УдостоверяющийДокумент, "Значение.УТ3__Тип");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(ФорматАДВ_3.УдостоверяющийДокумент, "УТ3__Наименование");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(ФорматАДВ_3.УдостоверяющийДокумент, "УТ3__Серия");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(ФорматАДВ_3.УдостоверяющийДокумент, "УТ3__Номер");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(ФорматАДВ_3.УдостоверяющийДокумент, "УТ3__ДатаВыдачи");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(ФорматАДВ_3.УдостоверяющийДокумент, "УТ3__КемВыдан");
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(ФорматАДВ_3.УдостоверяющийДокумент, "УТ3__КодПодразделения");
		
		ФорматАДВ_3.ДатаЗаполнения.Значение = ПерсонифицированныйУчетКлиентСервер.ДатаВФорматеПФР(ВыборкаПоШапкеДокумента.Дата);
		
	КонецЕсли;
	
	УзелФормы = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПФР, "АДВ-3", "");
	ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелФормы, ФорматАДВ_3);
	
	// Служебная информация о файле
	НаборЗаписейСлужебнаяИнформация = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СлужебнаяИнформация");
	Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР) Тогда
		ЧастиИмениФайла = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СокрЛП(ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР),"_");
		НаборЗаписейСлужебнаяИнформация.АФ4__GUID.Значение = ЧастиИмениФайла[ЧастиИмениФайла.ВГраница()];
	КонецЕсли;
	НаборЗаписейСлужебнаяИнформация.АФ4__ДатаВремя.Значение = ПерсонифицированныйУчет.ПредставлениеДатыВФорматеdateTimeСЧасовымПоясом(ВыборкаПоШапкеДокумента.Дата);
	
	НаборЗаписейСоставитель = НаборЗаписейСлужебнаяИнформация.Составитель.Значение;
	НаборЗаписейСоставитель.УТ3__РегНомер = ВыборкаПоШапкеДокумента.РегистрационныйНомерПФР;
	Если ЗарплатаКадры.ИспользованиеРегистрационногоНомераСФР(ВыборкаПоШапкеДокумента.Дата, ВыборкаПоШапкеДокумента.Организация) 
		И ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.РегистрационныйНомерСФР) Тогда
		НаборЗаписейСоставитель.УТ3__РегНомер = ВыборкаПоШапкеДокумента.РегистрационныйНомерСФР;
	КонецЕсли;
	НаборЗаписейСоставитель.УТ3__ИНН = ВыборкаПоШапкеДокумента.ИНН;
	НаборЗаписейСоставитель.УТ3__КПП = ВыборкаПоШапкеДокумента.КПП;
	НаборЗаписейСоставитель.УТ3__НаименованиеКраткое = СокрЛП(ВыборкаПоШапкеДокумента.НаименованиеСокращенное);
	
	ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейСлужебнаяИнформация.Составитель, "УТ3__РегНомер");
	ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейСлужебнаяИнформация.Составитель, "УТ3__ИНН");
	ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейСлужебнаяИнформация.Составитель, "УТ3__КПП");
	ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейСлужебнаяИнформация.Составитель, "УТ3__НаименованиеКраткое");
	
	ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПФР, "СлужебнаяИнформация",""), НаборЗаписейСлужебнаяИнформация);
	
	// Преобразуем дерево в строковое описание XML
	ПотокВыгрузкиXML = ЗарплатаКадры.СоздатьПотокXML(, "UTF-8");
	ЗарплатаКадры.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML, "xsi", "http://www.w3.org/2001/XMLSchema", Ложь);
	ТекстФайла = ЗарплатаКадры.ЗаписатьПотокXML(ПотокВыгрузкиXML);
	
	Возврат СтрЗаменить(ТекстФайла, "__", ":");
	
КонецФункции

// Выбирает данные, необходимые для проверки.
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Результат запроса к данным работников документа.
//
Функция СформироватьЗапросПоСотрудникам(Ссылка)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаПостановленияАДВ2022", ПерсонифицированныйУчетКлиентСервер.ДатаПостановленияАДВ2022());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовАДВ_3Сотрудники.Ссылка КАК Ссылка,
	|	ПачкаДокументовАДВ_3Сотрудники.НомерСтроки КАК НомерСтроки,
	|	ПачкаДокументовАДВ_3Сотрудники.Сотрудник КАК ФизическоеЛицо,
	|	ПачкаДокументовАДВ_3Сотрудники.ДатаПолученияСвидетельства КАК ДатаПолученияСвидетельства,
	|	ПачкаДокументовАДВ_3Сотрудники.СтраховойНомерПФРВСвидетельстве КАК СтраховойНомерПФРВСвидетельстве,
	|	ПачкаДокументовАДВ_3Сотрудники.ФамилияВСвидетельстве КАК ФамилияВСвидетельстве,
	|	ПачкаДокументовАДВ_3Сотрудники.ИмяВСвидетельстве КАК ИмяВСвидетельстве,
	|	ПачкаДокументовАДВ_3Сотрудники.ОтчествоВСвидетельстве КАК ОтчествоВСвидетельстве,
	|	ПачкаДокументовАДВ_3Сотрудники.Фамилия КАК Фамилия,
	|	ПачкаДокументовАДВ_3Сотрудники.Имя КАК Имя,
	|	ПачкаДокументовАДВ_3Сотрудники.Отчество КАК Отчество,
	|	ПачкаДокументовАДВ_3Сотрудники.Пол КАК Пол,
	|	ПачкаДокументовАДВ_3Сотрудники.ДатаРождения КАК ДатаРождения,
	|	ПачкаДокументовАДВ_3Сотрудники.МестоРождения КАК МестоРождения,
	|	ПачкаДокументовАДВ_3Сотрудники.МестоРожденияПредставление КАК МестоРожденияПредставление,
	|	ПачкаДокументовАДВ_3Сотрудники.Гражданство КАК Гражданство,
	|	ПачкаДокументовАДВ_3Сотрудники.АдресРегистрации КАК АдресРегистрации,
	|	ПачкаДокументовАДВ_3Сотрудники.АдресФактический КАК АдресФактический,
	|	ПачкаДокументовАДВ_3Сотрудники.АдресРегистрацииПредставление КАК АдресРегистрацииПредставление,
	|	ПачкаДокументовАДВ_3Сотрудники.АдресФактическийПредставление КАК АдресФактическийПредставление,
	|	ПачкаДокументовАДВ_3Сотрудники.Телефоны КАК Телефоны,
	|	ПачкаДокументовАДВ_3Сотрудники.ПризнакОтменыОтчества КАК ПризнакОтменыОтчества,
	|	ПачкаДокументовАДВ_3Сотрудники.ПризнакОтменыМестаРождения КАК ПризнакОтменыМестаРождения,
	|	ПачкаДокументовАДВ_3Сотрудники.ВидДокумента КАК ВидДокумента,
	|	ПачкаДокументовАДВ_3Сотрудники.СерияДокумента КАК СерияДокумента,
	|	ПачкаДокументовАДВ_3Сотрудники.НомерДокумента КАК НомерДокумента,
	|	ПачкаДокументовАДВ_3Сотрудники.ДатаВыдачи КАК ДатаВыдачи,
	|	ПачкаДокументовАДВ_3Сотрудники.КемВыдан КАК КемВыдан,
	|	ПачкаДокументовАДВ_3Сотрудники.КодПодразделения КАК КодПодразделения,
	|	ПачкаДокументовАДВ_3Сотрудники.ВидДокумента.КодПФР КАК ВидДокументаКодПФР,
	|	ПачкаДокументовАДВ_3Сотрудники.ВидДокумента.Наименование КАК ДокументВидНаименование,
	|	ПачкаДокументовАДВ_3Сотрудники.ОтметкаОПредставленииСведений КАК ОтметкаОПредставленииСведений,
	|	ПачкаДокументовАДВ_3Сотрудники.ПолВСвидетельстве КАК ПолВСвидетельстве,
	|	ПачкаДокументовАДВ_3Сотрудники.ДатаРожденияВСвидетельстве КАК ДатаРожденияВСвидетельстве,
	|	ПачкаДокументовАДВ_3Сотрудники.МестоРожденияВСвидетельстве КАК МестоРожденияВСвидетельстве,
	|	ПачкаДокументовАДВ_3Сотрудники.ИНН КАК ИНН,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовАДВ_3Сотрудники.Ссылка.Дата >= &ДатаПостановленияАДВ2022
	|				ИЛИ ПачкаДокументовАДВ_3Сотрудники.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.СвидетельствоОРождении)
	|			ТОГДА ПачкаДокументовАДВ_3Сотрудники.НомерАктовойЗаписиПриРождении
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерАктовойЗаписи,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовАДВ_3Сотрудники.Ссылка.Дата >= &ДатаПостановленияАДВ2022
	|				ИЛИ ПачкаДокументовАДВ_3Сотрудники.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.СвидетельствоОРождении)
	|			ТОГДА ПачкаДокументовАДВ_3Сотрудники.ДатаСоставленияАктовойЗаписиПриРождении
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаАктовойЗаписи,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовАДВ_3Сотрудники.Ссылка.Дата >= &ДатаПостановленияАДВ2022
	|				ИЛИ ПачкаДокументовАДВ_3Сотрудники.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.СвидетельствоОРождении)
	|			ТОГДА ПачкаДокументовАДВ_3Сотрудники.НаименованиеОрганаРегистрацииАктовойЗаписиПриРождении
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ОрганРегистрацииАктовойЗаписи
	|ИЗ
	|	Документ.ПачкаДокументовАДВ_3.Сотрудники КАК ПачкаДокументовАДВ_3Сотрудники
	|ГДЕ
	|	ПачкаДокументовАДВ_3Сотрудники.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Формирует запрос по шапке документа.
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Ссылка)
	
	Запрос = Новый Запрос;
	// Установим параметры запроса.
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	// Впишем в запрос дополнительные таблицы.
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.ПачкаДокументовАДВ_3";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = Ссылка;
	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных, Ложь);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПачкаДокументовАДВ_3.Дата КАК Дата,
	|	ПачкаДокументовАДВ_3.Номер КАК Номер,
	|	СведенияОбОрганизациях.Организация КАК Организация,
	|	СведенияОбОрганизациях.НаименованиеПолное КАК НаименованиеПолное,
	|	СведенияОбОрганизациях.НаименованиеСокращенное КАК НаименованиеСокращенное,
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
	|	СведенияОбОрганизациях.РегистрационныйНомерСФР КАК РегистрационныйНомерСФР,
	|	СведенияОбОрганизациях.ИНН КАК ИНН,
	|	СведенияОбОрганизациях.КПП КАК КПП,
	|	СведенияОбОрганизациях.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
	|	СведенияОбОрганизациях.ОГРН КАК ОГРН,
	|	СведенияОбОрганизациях.КодПоОКПО КАК КодПоОКПО,
	|	СведенияОбОрганизациях.Наименование КАК Наименование,
	|	ПачкаДокументовАДВ_3.Ответственный КАК Ответственный,
	|	ПачкаДокументовАДВ_3.Ссылка КАК Ссылка,
	|	ПачкаДокументовАДВ_3.НомерПачки КАК НомерПачки,
	|	ПачкаДокументовАДВ_3.ИмяФайлаДляПФР КАК ИмяФайлаДляПФР
	|ИЗ
	|	Документ.ПачкаДокументовАДВ_3 КАК ПачкаДокументовАДВ_3
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО ПачкаДокументовАДВ_3.Организация = СведенияОбОрганизациях.ОрганизацияДокумента
	|			И ПачкаДокументовАДВ_3.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период
	|ГДЕ
	|	ПачкаДокументовАДВ_3.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ОбработкаФормированияФайла(Объект) Экспорт
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке(Объект.Ссылка).Выбрать();
	ВыборкаСотрудники = СформироватьЗапросПоСотрудникам(Объект.Ссылка).Выбрать();
	
	ВыборкаПоШапкеДокумента.Следующий();
	
	ТекстФайла = СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаСотрудники);
	
	Если Объект.Дата >= ПерсонифицированныйУчетКлиентСервер.ДатаПостановленияАДВ2022() Тогда
		ЗарплатаКадры.ЗаписатьФайлВАрхив(Объект.Ссылка, Объект.ИмяФайлаДляПФР, ТекстФайла, , "UTF-8", Ложь, Ложь);
	Иначе 
		ЗарплатаКадры.ЗаписатьФайлВАрхив(Объект.Ссылка, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР, ТекстФайла);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыПечатиДокумента

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// АДВ-3
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаАДВ_3";
	КомандаПечати.Представление = НСтр("ru = 'АДВ-3';
										|en = 'ADV-3'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	// АДВ-6-1
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаАДВ_6_1";
	КомандаПечати.Представление = НСтр("ru = 'АДВ-6-1';
										|en = 'ADV-6-1'");
	КомандаПечати.Порядок = 20;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	// Все формы
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаАДВ_3,ФормаАДВ_6_1";
	КомандаПечати.Представление = НСтр("ru = 'Все формы';
										|en = 'All forms'");
	КомандаПечати.Порядок = 30;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаАДВ_3") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ФормаАДВ_3", "Форма АДВ-3", СформироватьПечатнуюФормуАДВ3(МассивОбъектов, ОбъектыПечати));	
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаАДВ_6_1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ФормаАДВ_6_1", "Форма АДВ-6-1", СформироватьПечатнуюФормуАДВ6(МассивОбъектов, ОбъектыПечати));	
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуАДВ3(МассивОбъектов, ОбъектыПечати)
	
	Сокращение = "";
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АнкетаЗастрахованногоЛица_ФормаАДВ_3";
	
	ДатаПостановления485п = РегистрыСведений.ДатыВступленияВСилуНА.ДатаВступленияВСилуНА("ПостановлениеПравленияПФРот27сентября2019Номер485п");
	ДатаПостановленияАДВ2022 = ПерсонифицированныйУчетКлиентСервер.ДатаПостановленияАДВ2022();
	ДатаПостановленияАДВ2023 = ПерсонифицированныйУчетКлиентСервер.ДатаПостановленияАДВ2023();
	
	ВыборкаДокументов = СформироватьЗапросПоСотрудникамДляПечати(МассивОбъектов).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		ВыборкаСотрудники = ВыборкаДокументов.Выбрать();
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Пока ВыборкаСотрудники.Следующий() Цикл
			
			ИспользоватьФорму2019 = ДатаПостановления485п <> Неопределено И ДатаПостановления485п <= ВыборкаСотрудники.Дата;
			ИспользоватьФорму2021 = '20210123' <= ВыборкаСотрудники.Дата;
			ИспользоватьФорму2022 = ДатаПостановленияАДВ2022 <= ВыборкаСотрудники.Дата;
			ИспользоватьФорму2023 = ДатаПостановленияАДВ2023 <= ВыборкаСотрудники.Дата;
			
			Если ИспользоватьФорму2023 Тогда
				Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПачкаДокументовАДВ_3.ПФ_MXL_ФормаАДВ_3_2023");
			ИначеЕсли ИспользоватьФорму2022 Тогда
				Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПачкаДокументовАДВ_3.ПФ_MXL_ФормаАДВ_3_2022");
			ИначеЕсли ИспользоватьФорму2021 Тогда
				Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПачкаДокументовАДВ_3.ПФ_MXL_ФормаАДВ_3_2021");
			ИначеЕсли ИспользоватьФорму2019 Тогда
				Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПачкаДокументовАДВ_3.ПФ_MXL_ФормаАДВ_3_2019");
			Иначе
				Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПачкаДокументовАДВ_3.ПФ_MXL_ФормаАДВ_3");
			КонецЕсли;
		
			ОбластьЗаявление = Макет.ПолучитьОбласть("Заявление");
		
			ОбластьЗаявление.Параметры.СтраховойНомерПФР = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.СтраховойНомерПФРВСвидетельстве);
			
			ОбластьЗаявление.Параметры.ФамилияВСвидетельстве  = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.ФамилияВСвидетельстве);
			ОбластьЗаявление.Параметры.ИмяВСвидетельстве      = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.ИмяВСвидетельстве);
			ОбластьЗаявление.Параметры.ОтчествоВСвидетельстве = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.ОтчествоВСвидетельстве);
			
			Если ЗначениеЗаполнено(ВыборкаСотрудники.ДатаРожденияВСвидетельстве) Тогда 
				ОбластьЗаявление.Параметры.ДатаРожденияВСвидетельстве = ПерсонифицированныйУчет.ДатаВОтчет(ВыборкаСотрудники.ДатаРожденияВСвидетельстве);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаСотрудники.ПолВСвидетельстве) Тогда
				Если ВыборкаСотрудники.ПолВСвидетельстве = Перечисления.ПолФизическогоЛица.Мужской Тогда
					ОбластьЗаявление.Параметры.ПолВСвидетельстве = "М     (м/ж)"; 
				Иначе
					ОбластьЗаявление.Параметры.ПолВСвидетельстве = "Ж     (м/ж)";
				КонецЕсли;
			Иначе
				ОбластьЗаявление.Параметры.ПолВСвидетельстве = "      (м/ж)";	
			КонецЕсли;
			
			МестоРожденияВСвидетельстве = ПерсонифицированныйУчетКлиентСервер.РазложитьМестоРождения(ВыборкаСотрудники.МестоРожденияВСвидетельстве);
			
			ОбластьЗаявление.Параметры.МестоРожденияТипВСвидетельстве = ?(МестоРожденияВСвидетельстве.Особое = 1, "особое", "");
			
			МестоРожденияВСвидетельстве.НаселенныйПункт = ПерсонифицированныйУчет.НаименованиеИАдресноеСокращение(ВРЕГ(СокрЛП(МестоРожденияВСвидетельстве.НаселенныйПункт)), Сокращение);
			ОбластьЗаявление.Параметры.МестоРожденияГородВСвидетельстве =  ПерсонифицированныйУчет.СтрокаВОтчет(МестоРожденияВСвидетельстве.НаселенныйПункт);
			МестоРожденияВСвидетельстве.Район = ПерсонифицированныйУчет.НаименованиеИАдресноеСокращение(ВРЕГ(СокрЛП(МестоРожденияВСвидетельстве.Район)), Сокращение);
			ОбластьЗаявление.Параметры.МестоРожденияРайонВСвидетельстве = ПерсонифицированныйУчет.СтрокаВОтчет(МестоРожденияВСвидетельстве.Район);
			ОбластьЗаявление.Параметры.МестоРожденияОбластьВСвидетельстве = ПерсонифицированныйУчет.СтрокаВОтчет(МестоРожденияВСвидетельстве.Область);
			ОбластьЗаявление.Параметры.МестоРожденияСтранаВСвидетельстве = ПерсонифицированныйУчет.СтрокаВОтчет(МестоРожденияВСвидетельстве.Страна);
			
			ОбластьЗаявление.Параметры.Гражданство = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.Гражданство);
			
			СтруктураАдресРегистрации = РаботаСАдресами.СведенияОбАдресе(ВыборкаСотрудники.АдресРегистрации);
			СтруктураАдресФактический = РаботаСАдресами.СведенияОбАдресе(ВыборкаСотрудники.АдресФактический);
			
			АдресРегистрации = СтруктураАдресРегистрации.Представление;
			АдресФактический = СтруктураАдресФактический.Представление;
			
			ИменаПолей = "Индекс, Регион, РегионТипКраткий, Район, РайонТипКраткий, Город, ГородТипКраткий, НаселенныйПункт, НаселенныйПунктТипКраткий, Улица, УлицаТипКраткий, Дом, Корпус, Строение, Квартира";
			
			Если СтруктураАдресРегистрации.Страна = "РОССИЯ" И СтруктураАдресРегистрации.Свойство("Индекс") Тогда
				СведенияОбАдресе = КонтактнаяИнформацияБЗК.СвернутьСведенияОбАдресе(СтруктураАдресРегистрации, ИменаПолей);
				АдресРегистрации = ПерсонифицированныйУчет.ПолучитьПредставлениеАдресаДляПФР2022(СведенияОбАдресе);
			КонецЕсли;
			
			Если СтруктураАдресФактический.Страна = "РОССИЯ" И СтруктураАдресФактический.Свойство("Индекс") Тогда
				СведенияОбАдресе = КонтактнаяИнформацияБЗК.СвернутьСведенияОбАдресе(СтруктураАдресФактический, ИменаПолей);
				АдресФактический = ПерсонифицированныйУчет.ПолучитьПредставлениеАдресаДляПФР2022(СведенияОбАдресе);
			КонецЕсли;
			
			ОбластьЗаявление.Параметры.АдресРегистрации = АдресРегистрации;
			Если (ИспользоватьФорму2022 Или ИспользоватьФорму2023)
				И ВыборкаСотрудники.АдресРегистрации = ВыборкаСотрудники.АдресФактический Тогда
				ОбластьЗаявление.Параметры.АдресФактический = "";
			Иначе 
				ОбластьЗаявление.Параметры.АдресФактический = АдресФактический;
			КонецЕсли;
			
			ОбластьЗаявление.Параметры.Телефоны = ПерсонифицированныйУчет.СтрокаВОтчет(ВыборкаСотрудники.Телефоны);
			
			ДанныеДокумента = ПерсонифицированныйУчет.ПолучитьДанныеДокументаВФорматеПФР(ВыборкаСотрудники.ВидДокумента, ВыборкаСотрудники.СерияДокумента, ВыборкаСотрудники.НомерДокумента, 
					ВыборкаСотрудники.ДатаВыдачи, ВыборкаСотрудники.КемВыдан, ВыборкаСотрудники.ВидДокументаКодПФР, ВыборкаСотрудники.ДокументВидНаименование);
					
			СерияНомер = ДанныеДокумента.СерияРимскиеЦифры + " " + ДанныеДокумента.СерияРусскиеБуквы + ",  " + ДанныеДокумента.НомерУдостоверяющегоДокумента;
			ОбластьЗаявление.Параметры.СерияНомер = СерияНомер;
			ОбластьЗаявление.Параметры.НаименованиеДокумента = ДанныеДокумента.НаименованиеУдостоверяющегоДокумента; 
			ОбластьЗаявление.Параметры.ДатаВыдачи = ПерсонифицированныйУчет.ДатаВОтчет(ДанныеДокумента.ДатаВыдачи);
			ОбластьЗаявление.Параметры.КемВыдан   = ДанныеДокумента.КемВыдан;
			
			Если Не ИспользоватьФорму2022 И Не ИспользоватьФорму2023 Тогда 
				
				НормальныйШрифт = Новый Шрифт(ОбластьЗаявление.Области.СведенияПредставлялись.Шрифт);
				ЗачеркнутыйШрифт = Новый Шрифт(ОбластьЗаявление.Области.СведенияПредставлялись.Шрифт,,,,,,ИСТИНА);
				
				Если ВРег(ВыборкаСотрудники.ОтметкаОПредставленииСведений) <> ВРег("Представлялись") Тогда
					ОбластьЗаявление.Области.СведенияПредставлялись.Шрифт 		= ЗачеркнутыйШрифт;
					ОбластьЗаявление.Области.СведенияБудутПредставлены.Шрифт 	= НормальныйШрифт;
				Иначе
					ОбластьЗаявление.Области.СведенияПредставлялись.Шрифт 		= НормальныйШрифт;
					ОбластьЗаявление.Области.СведенияБудутПредставлены.Шрифт 	= ЗачеркнутыйШрифт;
				КонецЕсли;
			
				ОбластьЗаявление.Параметры.РасшифровкаПодписиРуководителя = ВыборкаСотрудники.РуководительРасшифровкаПодписи;
				ОбластьЗаявление.Параметры.ДолжностьРуководителя = ВыборкаСотрудники.ДолжностьРуководителя;
				
				ОбластьЗаявление.Параметры.ДатаЗаполнения = ?(ИспользоватьФорму2019,
					ПерсонифицированныйУчет.ДатаВОтчет(ВыборкаСотрудники.Дата), Формат(ВыборкаСотрудники.Дата, "ДФ=дд.ММ.гггг"));
				
			КонецЕсли;
			
			Если ИспользоватьФорму2021 Тогда
				ОбластьЗаявление.Параметры.ИНН = ВыборкаСотрудники.ИНН;
				ОбластьЗаявление.Параметры.НомерАктовойЗаписи = ВыборкаСотрудники.НомерАктовойЗаписи;
			КонецЕсли;
			
			Если ИспользоватьФорму2022 Или ИспользоватьФорму2023 Тогда
				ОбластьЗаявление.Параметры.ИНН = ВыборкаСотрудники.ИНН;
				ОбластьЗаявление.Параметры.НомерАктовойЗаписи = ВыборкаСотрудники.НомерАктовойЗаписи;
				ОбластьЗаявление.Параметры.ДатаСоставленияАктовойЗаписи = Формат(ВыборкаСотрудники.ДатаАктовойЗаписи, "ДЛФ=ДД");
				ОбластьЗаявление.Параметры.КемПроизведенаАктоваяЗапись = ВыборкаСотрудники.ОрганРегистрацииАктовойЗаписи;
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьЗаявление);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.ПолеСверху = 5;
	ТабличныйДокумент.ПолеСнизу = 5;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуАДВ6(МассивОбъектов, ОбъектыПечати)
	Возврат ПерсонифицированныйУчет.ВывестиОписьАДВ6(МассивОбъектов, ОбъектыПечати, "ДУБЛ", "ПФ_MXL_ФормаАДВ_6_1_2017");
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли