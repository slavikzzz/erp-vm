
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	ЗаявкиСотрудниковФормы.ПриСозданииНаСервере(ЭтотОбъект, ОписаниеДокумента());
	ИнициализацияФормы();
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаявкиСотрудниковФормы.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект, ОписаниеДокумента());
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ВывестиДокументыИзТаблицыДокументовЗаявкиНаСервере();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, ПараметрОповещения, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, ПараметрОповещения) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	ЗаявкиСотрудниковФормыКлиент.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, ПараметрОповещения, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_УдалитьДокументПоЗаявке(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ЗаявкиСотрудниковФормыКлиент.УдалитьДокументПоЗаявке(ЭтаФорма, Элемент);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ОбработчикиПодключаемыхКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура ЗаявкаВыполнена(Команда)
	
	РезультатВыполненияЗаявки = ПредопределенноеЗначение("Перечисление.РезультатыВыполненияЗаявокКабинетСотрудника.Выполнена");
	ВыполнитьЗаявкуНаКлиенте(РезультатВыполненияЗаявки);

КонецПроцедуры

&НаКлиенте
Процедура ЗаявкаОтклонена(Команда)
	
	РезультатВыполненияЗаявки = ПредопределенноеЗначение("Перечисление.РезультатыВыполненияЗаявокКабинетСотрудника.Отклонена");
	ВыполнитьЗаявкуНаКлиенте(РезультатВыполненияЗаявки);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТиповойОтвет(Команда)
	
	ЗаявкиСотрудниковФормыКлиент.ВыбратьТиповойОтвет(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйДокумент(Команда)
	
	НовыйДокументНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДокумент(Команда)
	
	ЗначенияДляВыбора = Новый Структура("Отбор,ЗначенияДляВыбораВидаДокумента");
	ЗначенияДляВыбора.Отбор = Новый Структура("Организация,Сотрудник", Объект.Организация, Объект.ФизическоеЛицо);
	ЗначенияДляВыбора.ЗначенияДляВыбораВидаДокумента = ЗначенияДляВыбораВидаДокумента(Объект.ВидВычета);

	ЗаявкиСотрудниковФормыКлиент.ВыполнитьКомандуВыбратьДокумент(ЭтаФорма, ЗначенияДляВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСрокИсполнения(Команда)
	
	ЗаявкиСотрудниковФормыКлиент.ИзменитьСрокИсполнения(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиПодсистем

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ЗавершениеЗаявки

&НаКлиенте
Процедура ВыполнитьЗаявкуНаКлиенте(РезультатВыполненияЗаявки)

	Если ЗаявкиСотрудниковФормыКлиент.ЗаявкаГотоваКВыполнению(ЭтаФорма, РезультатВыполненияЗаявки, ОписаниеДокумента()) Тогда
		ЗаявкиСотрудниковФормыКлиент.НачатьВыполнениеКомандыЗаявкаВыполнена(ЭтаФорма, РезультатВыполненияЗаявки);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция РезультатЗаписиВыполненияЗаявки(РезультатВыполненияЗаявки) Экспорт

	Возврат РезультатЗаписиВыполненияЗаявкиНаСервере(РезультатВыполненияЗаявки);

КонецФункции

&НаСервере
Функция РезультатЗаписиВыполненияЗаявкиНаСервере(РезультатВыполненияЗаявки) Экспорт
	
	Возврат ЗаявкиСотрудников.РезультатЗаписиВыполненияЗаявки(ЭтаФорма, РезультатВыполненияЗаявки, ОписаниеДокумента());
	
КонецФункции

&НаКлиенте
Процедура ОбработчикЗавершенияЗаписиВыполненияЗаявки(Результат, ДополнительныеПараметры) Экспорт
	
	ЗаявкиСотрудниковФормыКлиент.ОбработчикЗавершенияЗаписиВыполненияЗаявки(Результат, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму()
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область ВыводДокументовИзТаблицыДокументовЗаявки

&НаКлиенте
Процедура ВывестиДокументыИзТаблицыДокументовЗаявки() Экспорт
	
	ВывестиДокументыИзТаблицыДокументовЗаявкиНаСервере()
	
КонецПроцедуры

&НаСервере
Процедура ВывестиДокументыИзТаблицыДокументовЗаявкиНаСервере()
	
	ЗаявкиСотрудниковФормы.ВывестиДокументыИзТаблицыДокументовЗаявки(ЭтаФорма, ОписаниеДокумента());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработатьИзменениеТЧДокументыПоЗаявке

&НаКлиенте
Процедура ОбработатьИзменениеДокументыПоЗаявке() Экспорт

	ОбработатьИзменениеДокументыПоЗаявкеНаСервере();
	Модифицированность = Истина;

КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеДокументыПоЗаявкеНаСервере()
	
	ВывестиДокументыИзТаблицыДокументовЗаявкиНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СозданиеНовогоДокумента

&НаКлиенте
Процедура НовыйДокументНаКлиенте()
	
	Если Объект.ВидВычета = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхВычетовКабинетСотрудника.НаДетей") Тогда
		ОткрытьФорму("Документ.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ.Форма.ФормаДокумента", ПараметрыЗаполненияЗаявления(), ЭтотОбъект);
	ИначеЕсли Объект.ВидВычета = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхВычетовКабинетСотрудника.Личный") Тогда
		НачатьВыборВидаНовогоДокументаНаВычеты();
	Иначе
		ОткрытьФорму("Документ.УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.Форма.ФормаДокумента", ПараметрыЗаполненияУведомления(), ЭтотОбъект);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НачатьВыборВидаНовогоДокументаНаВычеты()
	
	ЗначенияДляВыбора = ЗначенияДляВыбораВидаДокумента(Объект.ВидВычета);
	ТекстЗаголовка = НСтр("ru = 'Выбор типа данных';
							|en = 'Выбор типа данных'");
	
	ПараметрыОткрытия = Новый Структура("Заголовок,ЗначенияДляВыбора");
	ПараметрыОткрытия.Заголовок 		= ТекстЗаголовка;
	ПараметрыОткрытия.ЗначенияДляВыбора = ЗначенияДляВыбора;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборВидаНовогоДокументаНаВычетыЗавершение", ЭтаФорма);
	
	ОткрытьФорму("ОбщаяФорма.ВыборЗначенияИзСпискаБЗК", ПараметрыОткрытия, ЭтаФорма,,,,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ВыборВидаНовогоДокументаНаВычетыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФормыВыбора = СтрШаблон("%1.%2", Результат, "Форма.ФормаДокумента");
	ОткрытьФорму(ИмяФормыВыбора, ПараметрыЗаполненияЗаявления(), ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ПараметрыЗаполненияЗаявления()

	ПараметрыЗаполнения = Новый Структура("Основание");
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Ссылка", Неопределено);
	ДанныеЗаполнения.Вставить("Действие", 		"ЗаполнитьПоПараметрамЗаполнения");
	ДанныеЗаполнения.Вставить("Сотрудник", 		Объект.ФизическоеЛицо);
	ДанныеЗаполнения.Вставить("Организация", 	Объект.Организация);
	
	Если Объект.ВидВычета = Перечисления.ВидыНалоговыхВычетовКабинетСотрудника.НаДетей Тогда
		ДанныеЗаполнения.Вставить("Вычеты", ОбщегоНазначения.ТаблицаЗначенийВМассив(Объект.ДанныеВычетовНаДетей.Выгрузить()));
		ПараметрыЗаполнения.Вставить("ОчищатьВычетыНаДетей", Ложь);
	КонецЕсли;
	
	ПараметрыЗаполнения.Основание = ДанныеЗаполнения;
		
	Возврат ПараметрыЗаполнения;

КонецФункции

&НаСервере
Функция ПараметрыЗаполненияУведомления()
	
	ПараметрыЗаполнения = Новый Структура("Основание");
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Ссылка", Неопределено);
	ДанныеЗаполнения.Вставить("Действие", 		"ЗаполнитьПоПараметрамЗаполнения");
	ДанныеЗаполнения.Вставить("Сотрудник", 		Объект.ФизическоеЛицо);
	ДанныеЗаполнения.Вставить("Организация", 	Объект.Организация); 
	
	ПараметрыЗаполнения.Основание = ДанныеЗаполнения;
		
	Возврат ПараметрыЗаполнения;

КонецФункции

#КонецОбласти

&НаСервере
Процедура ИнициализацияФормы()
	
	ЗаголовокДекорацияВидВычета = "";
	Если Объект.ВидВычета = Перечисления.ВидыНалоговыхВычетовКабинетСотрудника.Личный Тогда
		ЗаголовокДекорацияВидВычета = НСтр("ru = 'Заявление на личный вычет по НДФЛ';
											|en = 'Заявление на личный вычет по НДФЛ'");
	ИначеЕсли Объект.ВидВычета = Перечисления.ВидыНалоговыхВычетовКабинетСотрудника.НаДетей Тогда
		ЗаголовокДекорацияВидВычета = НСтр("ru = 'Заявление на вычеты по НДФЛ на детей';
											|en = 'Заявление на вычеты по НДФЛ на детей'");
	ИначеЕсли Объект.ВидВычета = Перечисления.ВидыНалоговыхВычетовКабинетСотрудника.Недвижимость Тогда
		ЗаголовокДекорацияВидВычета = НСтр("ru = 'Заявление на имущественный вычет';
											|en = 'Заявление на имущественный вычет'");
	ИначеЕсли Объект.ВидВычета = Перечисления.ВидыНалоговыхВычетовКабинетСотрудника.НаЛечение Тогда
		ЗаголовокДекорацияВидВычета = НСтр("ru = 'Заявление на социальный вычет (на лечение)';
											|en = 'Заявление на социальный вычет (на лечение)'");
	ИначеЕсли Объект.ВидВычета = Перечисления.ВидыНалоговыхВычетовКабинетСотрудника.НаОбучение Тогда
		ЗаголовокДекорацияВидВычета = НСтр("ru = 'Заявление на социальный вычет (на обучение)';
											|en = 'Заявление на социальный вычет (на обучение)'");
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДекорацияВидВычета", "Заголовок", ЗаголовокДекорацияВидВычета);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ДанныеВычетовНаДетей", "Видимость", Объект.ВидВычета = Перечисления.ВидыНалоговыхВычетовКабинетСотрудника.НаДетей);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначенияДляВыбораВидаДокумента(ВидВычета)
	
	ЗначенияДляВыбора = Новый СписокЗначений;
	Если ВидВычета = Перечисления.ВидыНалоговыхВычетовКабинетСотрудника.НаДетей Тогда
		МетаданныеОбъекта = Метаданные.Документы.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ;
		ЗначенияДляВыбора.Добавить(МетаданныеОбъекта.ПолноеИмя(), МетаданныеОбъекта.Синоним);
	ИначеЕсли ВидВычета = Перечисления.ВидыНалоговыхВычетовКабинетСотрудника.Личный Тогда
		МетаданныеОбъекта = Метаданные.Документы.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ;
		ЗначенияДляВыбора.Добавить(МетаданныеОбъекта.ПолноеИмя(), МетаданныеОбъекта.Синоним);
		МетаданныеОбъекта = Метаданные.Документы.ЕжегодныеСтандартныеВычеты;
		ЗначенияДляВыбора.Добавить(МетаданныеОбъекта.ПолноеИмя(), МетаданныеОбъекта.Синоним);
	Иначе
		МетаданныеОбъекта = Метаданные.Документы.УведомлениеОПравеНаИмущественныйВычетДляНДФЛ;
		ЗначенияДляВыбора.Добавить(МетаданныеОбъекта.ПолноеИмя(), МетаданныеОбъекта.Синоним);
	КонецЕсли;
	
	Возврат ЗначенияДляВыбора;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеДокумента()

	Описание = ЗаявкиСотрудниковКлиентСервер.НовоеОписаниеДокументаЗаявки();
	Описание.ДокументыПоЗаявкеИмя 			= "ДокументыПоЗаявке";
	Описание.ДокументыПоЗаявкеДокументИмя 	= "ДокументСсылка";
	Описание.ВыводитьДокументыЗаявки 		= Истина;
	
	Возврат Описание;

КонецФункции

#КонецОбласти