
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьПереопределяемый.ПолучитьСписокОтчетовИУведомленийВходяшихВРасширенныйФункционал(ОтчетыВходяшиеВРасширенныйФункционал);
	
	Данные = Неопределено;
	Параметры.Свойство("Данные", Данные);
	АдресДанные = ПоместитьВоВременноеХранилище(Данные, УникальныйИдентификатор);
	
	СозданиеСообщения = Параметры.Свойство("Создание_УведомлениеОСпецрежимахНалогообложения");
	УчитыватьУведомленияНеВходящиеВБРО = Параметры.Свойство("УчитыватьУведомленияНеВходящиеВБРО");
	Параметры.Свойство("UIDФорма1СОтчетность", UIDФорма1СОтчетность);
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
	Если Параметры.Свойство("ВидУведомления") Тогда
		ВидУведомления = Параметры.ВидУведомления;
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
		ОргПоУмолчанию = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации").ОрганизацияПоУмолчанию();
		Организация = ОргПоУмолчанию;
	ИначеЕсли Не ЗначениеЗаполнено(Организация) Тогда 
		Попытка
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
			|	Организации.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Организации КАК Организации
			|ГДЕ
			|	НЕ Организации.ПометкаУдаления";
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() И Выборка.Количество() = 1 Тогда
				Организация = Выборка.Ссылка;
			КонецЕсли;
		Исключение
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось определить организацию по умолчанию';
														|en = 'Не удалось определить организацию по умолчанию'"));
		КонецПопытки;
	КонецЕсли;
	
	ЭтоЗаявлениеПФР = ВидУведомления = Новый ОписаниеТипов("ДокументСсылка.ЗаявленияПоЭлДокументооборотуСПФР");
	Если СозданиеСообщения И ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(ВидУведомления) И НЕ ЭтоЗаявлениеПФР Тогда
		Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация) Тогда 
			Если Не ДанноеСообщениеДоступноДляОрганизации(ВидУведомления) Тогда 
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Уведомление %1 не доступно для организации';
																								|en = 'Уведомление %1 не доступно для организации'"), ВидУведомления);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		Иначе
			Если Не ДанноеСообщениеДоступноДляИП(ВидУведомления) Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Уведомление %1 не доступно для индивидуального предпринимателя';
																								|en = 'Уведомление %1 не доступно для индивидуального предпринимателя'"), ВидУведомления);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Формируем список уведомлений
	Если Параметры.Свойство("ВидыПрочихУведомлений")
		И ТипЗнч(Параметры.ВидыПрочихУведомлений) = Тип("Массив") Тогда 
		
		ВидыУведомленийОрг = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВидыУведомленийДляОрганизации();
		ВидыУведомленийИП = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВидыУведомленийДляИП();
		
		Для Каждого Элемент Из Параметры.ВидыПрочихУведомлений Цикл
			Если ВидыУведомленийИП.Найти(Элемент) <> Неопределено Тогда 
				ВидыСообщенийИП.Добавить(Элемент);
			КонецЕсли;
			Если ВидыУведомленийОрг.Найти(Элемент) <> Неопределено Тогда 
				ВидыСообщенийОрганизации.Добавить(Элемент);
			КонецЕсли;
			ВидыСообщенийОбщий.Добавить(Элемент);
		КонецЦикла;
		СформироватьСписок();
	Иначе 
		СформироватьДерево();
	КонецЕсли;
	
	ОрганизацияПредидущийВыбор = Организация;
	Если ЗначениеЗаполнено(Организация) Тогда 
		Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация) Тогда 
			ЗначениеВРеквизитФормы(РеквизитФормыВЗначение("ДеревоУведомленийООО"), "ВидыСообщений");
		Иначе
			ЗначениеВРеквизитФормы(РеквизитФормыВЗначение("ДеревоУведомленийИП"), "ВидыСообщений");
		КонецЕсли;
	КонецЕсли;
	
	// Если вид уведомления известен, то позиционируемся на нем
	Если ЗначениеЗаполнено(ВидУведомления) Тогда
		ВидУведомления = Параметры.ВидУведомления;
		Идентификатор = Неопределено;
		ПолучитьИдентификаторНужногоЭлемента(ВидыСообщений.ПолучитьЭлементы(), ВидУведомления, Идентификатор);
		Элементы.ВидыСообщений.ТекущаяСтрока = Идентификатор;
	КонецЕсли;
	
	Если СозданиеСообщения Тогда
		Элементы.Выбрать.Доступность = ЗначениеЗаполнено(Организация);
	Иначе
		Элементы.Организация.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Если организация и ВидУведомления заполнены, то пропускаем эту форму, сразу создаем объект (только в режиме создания)
	Если СозданиеСообщения Тогда
		Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(ВидУведомления) Тогда
			Данные = Элементы.ВидыСообщений.ТекущиеДанные;
			Если Данные <> Неопределено Тогда
				ОбработкаВыбораВидаУведомления(Данные.Тип, Данные.Наименование, Данные);
			КонецЕсли;
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидыСообщенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Организация) И СозданиеСообщения
		И Не ВыбраноУведомлениеДляРегистрацииНовогоПредприятия() Тогда
		
		ОчиститьСообщения();
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Укажите организацию';
				|en = 'Укажите организацию'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка()),, "Организация");
		Возврат;
	КонецЕсли;
	
	Данные = Элементы.ВидыСообщений.ТекущиеДанные;
	Если Данные <> Неопределено Тогда
		ОбработкаВыбораВидаУведомления(Данные.Тип, Данные.Наименование, Данные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыСообщенийПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ВидыСообщений.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбраноУведомлениеДляРегистрацииНовогоПредприятия() Тогда
		Элементы.Выбрать.Доступность = Истина;
		Элементы.Организация.АвтоОтметкаНезаполненного = Ложь;
	Иначе
		Элементы.Выбрать.Доступность = ЗначениеЗаполнено(Организация);
		Элементы.Организация.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	НаложитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура ПоискОчистка(Элемент, СтандартнаяОбработка)
	НаложитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура ПоискПриИзменении(Элемент)
	НаложитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура ПоискИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Элемент.ОбновлениеТекстаРедактирования = ОбновлениеТекстаРедактирования.НеИспользовать;
	Поиск = Текст;
	НаложитьОтборы();
	ТекущийЭлемент = Элемент;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Данные = Элементы.ВидыСообщений.ТекущиеДанные;
	Если Данные <> Неопределено Тогда
		ОбработкаВыбораВидаУведомления(Данные.Тип, Данные.Наименование);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПерестроитьДерево(ВидУведомленияВыбранный)
	ТермыПоиска = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Поиск, " ", Истина, Истина);
	Хеш = ПолучитьХеш(Поиск);
	Если Организация <> ОрганизацияПредидущийВыбор Или ПрошлыйХеш <> Хеш Тогда
		ЗначениеВРеквизитФормы(РеквизитФормыВЗначение("ДеревоУведомленийОбщее"), "ВидыСообщений");
		ФильтроватьСтроки(ВидыСообщений.ПолучитьЭлементы(), Организация, Хеш, 
			РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация), ТермыПоиска);
	КонецЕсли;
	ОрганизацияПредидущийВыбор = Организация;
	ПрошлыйХеш = Хеш;
КонецПроцедуры

&НаСервере
Процедура СформироватьСписок()
	
	КорневойУровень = ВидыСообщений.ПолучитьЭлементы();
	КорневойУровень.Очистить();
	ДеревоУведомлений = РеквизитФормыВЗначение("ВидыСообщений");
	
	ДеревоУведомленийООО.ПолучитьЭлементы().Очистить();
	ДеревоУведомленийИП.ПолучитьЭлементы().Очистить();
	
	Если Не ЗначениеЗаполнено(Организация) Тогда 
		Список = ВидыСообщенийОбщий;
	ИначеЕсли РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация) Тогда 
		Список = ВидыСообщенийОрганизации;
	Иначе 
		Список = ВидыСообщенийИП;
	КонецЕсли;
	
	Для Каждого ОтправляемыйЭлемент Из Список Цикл
		ДобавитьВеткуВДеревоУведомлений(ДеревоУведомлений.Строки, ОтправляемыйЭлемент.Значение);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоУведомлений, "ВидыСообщений");
	ЗначениеВРеквизитФормы(ДеревоУведомлений, "ДеревоУведомленийОбщее");
	СформироватьДеревоОООИП(ДеревоУведомленийООО, ВидыСообщений, Ложь);
	СформироватьДеревоОООИП(ДеревоУведомленийИП, ВидыСообщений, Истина);
	
	ПерестроитьДерево(Неопределено);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДанноеСообщениеДоступноДляИП(Вид)
	Возврат (УведомлениеОСпецрежимахНалогообложенияВызовСервера.ВидыУведомленийДляИП().Найти(Вид) <> Неопределено);
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ДанноеСообщениеДоступноДляОрганизации(Вид)
	Возврат (УведомлениеОСпецрежимахНалогообложенияВызовСервера.ВидыУведомленийДляОрганизации().Найти(Вид) <> Неопределено);
КонецФункции

&НаСервере
Процедура СформироватьДерево()
	ДеревоУведомлений = УведомлениеОСпецрежимахНалогообложенияПовтИсп.ДеревоУведомленийДляФормыОтчетности(СозданиеСообщения, УчитыватьУведомленияНеВходящиеВБРО);
	СоответствиеАдрес = ПоместитьВоВременноеХранилище(УникальныйИдентификатор);
	ЗначениеВРеквизитФормы(ДеревоУведомлений, "ВидыСообщений");
	ЗначениеВРеквизитФормы(ДеревоУведомлений, "ДеревоУведомленийОбщее");
	СформироватьДеревоОООИП(ДеревоУведомленийООО, ВидыСообщений, Ложь);
	СформироватьДеревоОООИП(ДеревоУведомленийИП, ВидыСообщений, Истина);
КонецПроцедуры

&НаСервере
Функция ПолучитьХеш(Стр)
	Хеш = СтрЗаменить(НРег(Стр), " ", "");
	Хеш = СтрЗаменить(Хеш, """", "");
	Хеш = СтрЗаменить(Хеш, ",", "");
	Хеш = СтрЗаменить(Хеш, "ё", "е");
	Возврат Хеш;
КонецФункции

&НаСервере
Процедура СформироватьДеревоОООИП(НовЭлтРек, ИсхЭлт, ДляИП)
	Для Каждого Элт Из ИсхЭлт.ПолучитьЭлементы() Цикл 
		ЭтоПапка = (Элт.ПолучитьЭлементы().Количество() > 0);
		Если ЭтоПапка Тогда
			НовЭлтПапка = НовЭлтРек.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НовЭлтПапка, Элт);
			СформироватьДеревоОООИП(НовЭлтПапка, Элт, ДляИП);
		Иначе
			Если ТипЗнч(Элт.Тип) <> Тип("ПеречислениеСсылка.ВидыУведомленийОСпецрежимахНалогообложения")
				Или (ДляИП И ДанноеСообщениеДоступноДляИП(Элт.Тип))
				Или ((Не ДляИП) И ДанноеСообщениеДоступноДляОрганизации(Элт.Тип)) Тогда 
				
				НовЭлт = НовЭлтРек.ПолучитьЭлементы().Добавить();
				ЗаполнитьЗначенияСвойств(НовЭлт, Элт);
			КонецЕсли;
		КонецЕсли;
		
		Если ЭтоПапка И (НовЭлтПапка.ПолучитьЭлементы().Количество() = 0) Тогда
			НовЭлтРек.ПолучитьЭлементы().Удалить(НовЭлтПапка);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ЭтоЮридическоеЛицо(Организация)
	
	Возврат РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация);
	
КонецФункции

&НаСервере
Функция ЭтотТипНеВходитВБРО(Тип) Экспорт
	
	ТаблицаОбъектовНеВходящихВБРО = РегламентированнаяОтчетность.ТаблицаОписанияОбъектовРегламентированнойОтчетности();
	ЭлектронныйДокументооборотСКонтролирующимиОрганами.ОпределитьТаблицуОписанияОбъектовЗаявленияПоЭлДокументооборотуСПФР(ТаблицаОбъектовНеВходящихВБРО);
	СведенияПоОбъекту = ТаблицаОбъектовНеВходящихВБРО.Найти(Тип, "ТипОбъекта");
	
	Возврат СведенияПоОбъекту <> Неопределено;
	
КонецФункции

&НаСервере
Функция ПолноеИмяОбъектаМетаданных(Тип)
	
	Возврат Метаданные.НайтиПоТипу(Тип).ПолноеИмя();
	
КонецФункции

&НаСервере
Процедура ДобавитьВеткуВДеревоУведомлений(Родитель, ТипУведомления)
	Если ОтчетыВходяшиеВРасширенныйФункционал.НайтиПоЗначению(ТипУведомления) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяОтчета = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПолучитьИмяОтчетаПоВидуУведомления(ТипУведомления);
	Если (ЗначениеЗаполнено(ИмяОтчета) И Метаданные.Отчеты.Найти(ИмяОтчета) = Неопределено)
		Или Не ЗначениеЗаполнено(ИмяОтчета) 
		Или Метаданные.Отчеты.Найти(ИмяОтчета) = Неопределено Тогда 
		
		Возврат;
	КонецЕсли;
	
	Сообщение = Родитель.Добавить();
	Сообщение.Наименование = Строка(ТипУведомления);
	Сообщение.ИндексКартинки = 1;
	Сообщение.Хеш = ПолучитьХеш(Сообщение.Наименование);
	Если ТипЗнч(ТипУведомления) = Тип("ПеречислениеСсылка.ВидыУведомленийОСпецрежимахНалогообложения") Тогда 
		Сообщение.Тип = ТипУведомления;
		Сообщение.Хеш = НРег(Сообщение.Хеш + Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПолучитьХеш(ТипУведомления));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораВидаУведомления(Тип, Наименование, ТекущаяСтрокаДерева = Неопределено)
	
	Данные = ПолучитьИзВременногоХранилища(АдресДанные);
	
	Если ТипЗнч(Тип) = Тип("ПеречислениеСсылка.ВидыУведомленийОСпецрежимахНалогообложения") Тогда
		
		ВидУведомления = Тип;
		
		Если СозданиеСообщения Тогда
			
			ЭтоРегистрацияНовогоПредприятия = ВыбраноУведомлениеДляРегистрацииНовогоПредприятия();
			ЭтоЮридическоеЛицо = ЭтоЮридическоеЛицо(Организация);
			
			Если ЭтоЮридическоеЛицо И Не ЭтоРегистрацияНовогоПредприятия Тогда
				Если НЕ ДанноеСообщениеДоступноДляОрганизации(ВидУведомления) Тогда
					ТекстПредупреждения = НСтр("ru = 'Уведомление ""%1"" можно создавать только для ИП';
												|en = 'Уведомление ""%1"" можно создавать только для ИП'");
					ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "%1", Строка(ВидУведомления));
					ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстПредупреждения);
					Возврат;
				КонецЕсли;
				
			ИначеЕсли Не ЭтоРегистрацияНовогоПредприятия Тогда
				Если НЕ ДанноеСообщениеДоступноДляИП(ВидУведомления) Тогда
					ТекстПредупреждения = НСтр("ru = 'Уведомление ""%1"" можно создавать только для организаций';
												|en = 'Уведомление ""%1"" можно создавать только для организаций'");
					ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "%1", Строка(ВидУведомления));
					ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстПредупреждения);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
			СтандартнаяОбработка = Истина;
			Попытка
				РегламентированнаяОтчетностьКлиентПереопределяемый.ПередОткрытиемФормыУведомления(Организация, ВидУведомления, СтандартнаяОбработка);
			Исключение
				СтандартнаяОбработка = Истина;
			КонецПопытки;
			
			ПараметрыУведомления = Новый Структура;
			ПараметрыУведомления.Вставить("Организация", Организация);
			ПараметрыУведомления.Вставить("ВидУведомления", ВидУведомления);
			ПараметрыУведомления.Вставить("UIDФорма1СОтчетность", UIDФорма1СОтчетность);
			ПараметрыУведомления.Вставить("Данные", Данные);
			
			Если СтандартнаяОбработка Или Данные <> Неопределено Тогда
				ОткрытьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.ФормаОбъекта",  ПараметрыУведомления, ВладелецФормы);
			Иначе
				Оповестить("РеализованаНестандартнаяОбработкаОткрытияУведомления", ПараметрыУведомления);
			КонецЕсли;
			
		КонецЕсли;
		
		Закрыть(ВидУведомления);
	Иначе
		
		
		Если Наименование = НСтр("ru = 'Помощник создания МЧД';
								|en = 'Помощник создания МЧД'") Тогда
			
			ДополнительныеПараметры = Новый Структура();
			ДополнительныеПараметры.Вставить("Организация", Организация);
			ОткрытьФорму("Обработка.ДокументооборотСКонтролирующимиОрганами.Форма.ПомощникМЧД", ДополнительныеПараметры);
			
		Иначе

			// Если это тип, не входящий в БРО, то объект создаем с помощью переопределемого метода
			ТипСоздаваемогоОбъекта = ?(ТипЗнч(Тип) = Тип("ОписаниеТипов") И Тип.Типы().Количество() > 0, Тип.Типы()[0], Тип);
			
			Если ЭтотТипНеВходитВБРО(ТипСоздаваемогоОбъекта) Тогда // Если это тип, не входящий в БРО, то объект создаем с помощью переопределемого метода

				Если СозданиеСообщения Тогда
					СтандартнаяОбработка = Истина;
					РегламентированнаяОтчетностьКлиентПереопределяемый.СоздатьНовыйОбъект(Организация, ТипСоздаваемогоОбъекта, СтандартнаяОбработка);
					Если СтандартнаяОбработка Тогда
						// Создаем объект
						
						Если ТипСоздаваемогоОбъекта = Тип("ДокументСсылка.ЗаявленияПоЭлДокументооборотуСПФР") Тогда
							
							Если Строка(ПредопределенноеЗначение("Перечисление.ВидыЗаявленийНаЭДОВПФР.НаОтключение")) = Наименование Тогда
								Вид = ПредопределенноеЗначение("Перечисление.ВидыЗаявленийНаЭДОВПФР.НаОтключение");
							Иначе
								Вид = ПредопределенноеЗначение("Перечисление.ВидыЗаявленийНаЭДОВПФР.НаПодключение");
							КонецЕсли;
							
							ДокументооборотСКОКлиент.СоздатьНовоеИлиОткрытьЗаявлениеВПФР(Вид, Организация);
							
						ИначеЕсли ТипСоздаваемогоОбъекта = Тип("ДокументСсылка.УведомлениеОПредоставленииПолномочийПредставителю") Тогда
							
							ДокументооборотСКОКлиент.СоздатьНовоеИлиОткрытьУведомлениеОПредоставленииПолномочийПредставителю(Организация);
							
						ИначеЕсли ТипСоздаваемогоОбъекта = Тип("ДокументСсылка.УведомлениеОПрекращенииПолномочийПредставителя") Тогда
							
							ИмяОбъектаМетаданных = ПолноеИмяОбъектаМетаданных(ТипСоздаваемогоОбъекта);
							Если ИмяОбъектаМетаданных = "Документ.УведомлениеОПрекращенииПолномочийПредставителя" Тогда
								ОткрытьФорму(
									ИмяОбъектаМетаданных + ".Форма.ФормаВыбораМЧД",
									Новый Структура("Организация, Данные", Организация, Данные),
									ВладелецФормы,,,,,
									РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
							КонецЕсли;
							
						ИначеЕсли ТипСоздаваемогоОбъекта = Тип("СправочникСсылка.МашиночитаемыеДоверенностиРаспределенныйРеестр")
							И Наименование =
							НСтр("ru = 'Заявление об отзыве машиночитаемой доверенности (ФНС, распределенный реестр)';
								|en = 'Заявление об отзыве машиночитаемой доверенности (ФНС, распределенный реестр)'") Тогда
							
							ИмяОбъектаМетаданных = ПолноеИмяОбъектаМетаданных(ТипСоздаваемогоОбъекта);
							Если ИмяОбъектаМетаданных = "Справочник.МашиночитаемыеДоверенностиРаспределенныйРеестр" Тогда
								ОткрытьФорму(
									ИмяОбъектаМетаданных + ".Форма.ФормаВыбораМЧД",
									Новый Структура("Организация, Данные", Организация, Данные),
									ВладелецФормы,,,,,
									РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
							КонецЕсли;
							
						ИначеЕсли ТипСоздаваемогоОбъекта = Тип("СправочникСсылка.МашиночитаемыеДоверенностиРаспределенныйРеестр")
							И Наименование = НСтр("ru = 'Машиночитаемая доверенность (ФТС)';
													|en = 'Машиночитаемая доверенность (ФТС)'") Тогда
							
							ИмяОбъектаМетаданных = ПолноеИмяОбъектаМетаданных(ТипСоздаваемогоОбъекта);
							Если ИмяОбъектаМетаданных = "Справочник.МашиночитаемыеДоверенностиРаспределенныйРеестр" Тогда
								ОткрытьФорму(
									ИмяОбъектаМетаданных + ".ФормаОбъекта",
									Новый Структура("Организация, РежимыИспользования, Данные", Организация, "ФТС", Данные),
									ВладелецФормы);
							КонецЕсли;
							
						Иначе
							
							ИмяОбъектаМетаданных = ПолноеИмяОбъектаМетаданных(ТипСоздаваемогоОбъекта);
							Если ИмяОбъектаМетаданных = "Справочник.ЗаявленияОбОтзывеМЧДФНС" Тогда
								ОткрытьФорму(ИмяОбъектаМетаданных + ".Форма.ФормаВыбораМЧД",
									Новый Структура("Организация, Данные", Организация, Данные),
									ВладелецФормы,,,,,
									РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
							Иначе
								ОткрытьФорму(ИмяОбъектаМетаданных + ".ФормаОбъекта",
									Новый Структура("Организация, Данные", Организация, Данные),
									ВладелецФормы);
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ПараметрыЗакрытия = Новый Структура();
		ПараметрыЗакрытия.Вставить("Тип", 			Тип);
		ПараметрыЗакрытия.Вставить("Наименование", 	Наименование);
		Если Тип = Неопределено И ТипЗнч(ТекущаяСтрокаДерева) = Тип("ДанныеФормыЭлементДерева") Тогда 
			ПараметрыЗакрытия.Вставить("СписокНаименованийУведомлений", Новый СписокЗначений);
			ДополнитьНаименования(ПараметрыЗакрытия["СписокНаименованийУведомлений"], ТекущаяСтрокаДерева);
			Если ПараметрыЗакрытия["СписокНаименованийУведомлений"].Количество() = 0 Тогда 
				ПараметрыЗакрытия.Удалить("СписокНаименованийУведомлений");
			КонецЕсли;
		КонецЕсли;
		
		Закрыть(ПараметрыЗакрытия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьНаименования(СписокНаименований, ТекущаяСтрокаДерева)
	Если ТекущаяСтрокаДерева.ПолучитьЭлементы().Количество() = 0 Тогда
		СписокНаименований.Добавить(ТекущаяСтрокаДерева.Наименование);
	КонецЕсли;
	
	Для Каждого Элемент Из ТекущаяСтрокаДерева.ПолучитьЭлементы() Цикл 
		ДополнитьНаименования(СписокНаименований, Элемент);
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПолучитьИдентификаторНужногоЭлемента(Элементы, ВидУведомления, Идентификатор)

	Для каждого Элемент из Элементы Цикл
		
		Если Элемент.Тип = ВидУведомления Тогда
			Идентификатор = Элемент.ПолучитьИдентификатор();
			Возврат;
		Конецесли;
		
		ПолучитьИдентификаторНужногоЭлемента(Элемент.ПолучитьЭлементы(), ВидУведомления, Идентификатор);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НаложитьОтборы()
	ТекущийВидУведомления = ?(Элементы.ВидыСообщений.ТекущиеДанные = Неопределено, Неопределено, Элементы.ВидыСообщений.ТекущиеДанные.Тип);
	Если ВыбраноУведомлениеДляРегистрацииНовогоПредприятия() Тогда
		Элементы.Выбрать.Доступность = Истина;
	Иначе
		Элементы.Выбрать.Доступность = ЗначениеЗаполнено(Организация);
	КонецЕсли;
	
	Если ВидыСообщенийИП.Количество() > 0 Тогда
		СформироватьСписок();
	ИначеЕсли Организация <> ОрганизацияПредидущийВыбор
		Или ПолучитьХеш(Поиск) <> ПрошлыйХеш Тогда
		
		Если Элементы.ВидыСообщений.ТекущиеДанные = Неопределено Тогда 
			ПерестроитьДерево(Неопределено);
		Иначе 
			ПерестроитьДерево(Элементы.ВидыСообщений.ТекущиеДанные.Тип);
		КонецЕсли;
		РазвернутьДеревоПослеФильтрации();
	КонецЕсли;
	
	Если ТекущийВидУведомления <> Неопределено Тогда 
		ИдСтроки = НайтиВДеревеПоТипу(ТекущийВидУведомления, ВидыСообщений.ПолучитьЭлементы());
		Если ТипЗнч(ИдСтроки) = Тип("Число") Тогда 
			Элементы.ВидыСообщений.ТекущаяСтрока = ИдСтроки;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДеревоПослеФильтрации()
	ВсегоГрупп = 0;
	Для Каждого Стр Из ВидыСообщений.ПолучитьЭлементы() Цикл 
		ВсегоГрупп = ВсегоГрупп + ?(Стр.ПолучитьЭлементы().Количество() > 0, 1, 0);
	КонецЦикла;
	Если ВсегоГрупп <= 3 Тогда 
		Для Каждого Стр Из ВидыСообщений.ПолучитьЭлементы() Цикл
			РазвернутьСтроку(Стр);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьСтроку(Строка)
	Для Каждого Стр Из Строка.ПолучитьЭлементы() Цикл 
		РазвернутьСтроку(Стр);
	КонецЦикла;
	Элементы.ВидыСообщений.Развернуть(Строка.ПолучитьИдентификатор());
КонецПроцедуры

&НаСервере
Процедура ФильтроватьСтроки(СтрокиДерева, Организация, Хеш, ЭтоЮЛ, ТермыПоиска)
	КС = СтрокиДерева.Количество();
	Пока КС > 0 Цикл 
		КС = КС - 1;
		Стр = СтрокиДерева[КС];
		Если Стр.ПолучитьЭлементы().Количество() = 0 Тогда
			Если ЗначениеЗаполнено(Хеш) И СтрНайти(Стр.Хеш, Хеш) = 0 Тогда 
				Найдено = Ложь; НеНайдено = Ложь;
				Для Каждого Терм Из ТермыПоиска Цикл
					Если СтрНачинаетсяС(Терм, "-") Тогда 
						Если СтрНайти(Стр.Хеш, СтрЗаменить(Терм, "-", "")) > 0 Тогда 
							НеНайдено = Истина;
						КонецЕсли;
					ИначеЕсли СтрНайти(Стр.Хеш, НРег(Терм)) = 0 Тогда 
						НеНайдено = Истина;
					Иначе
						Найдено = Истина;
					КонецЕсли;
				КонецЦикла;
				
				Если НеНайдено Или Не Найдено Тогда 
					СтрокиДерева.Удалить(Стр);
				ИначеЕсли ЗначениеЗаполнено(Организация) И ТипЗнч(Стр.Тип) = Тип("ПеречислениеСсылка.ВидыУведомленийОСпецрежимахНалогообложения") Тогда 
					Если (ЭтоЮЛ И Не ДанноеСообщениеДоступноДляОрганизации(Стр.Тип))
						Или (Не ЭтоЮЛ И Не ДанноеСообщениеДоступноДляИП(Стр.Тип)) Тогда 
						СтрокиДерева.Удалить(Стр);
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(Организация) И ТипЗнч(Стр.Тип) = Тип("ПеречислениеСсылка.ВидыУведомленийОСпецрежимахНалогообложения") Тогда 
				Если (ЭтоЮЛ И Не ДанноеСообщениеДоступноДляОрганизации(Стр.Тип))
					Или (Не ЭтоЮЛ И Не ДанноеСообщениеДоступноДляИП(Стр.Тип)) Тогда 
					СтрокиДерева.Удалить(Стр);
				КонецЕсли;
			КонецЕсли;
		Иначе
			ФильтроватьСтроки(Стр.ПолучитьЭлементы(), Организация, Хеш, ЭтоЮЛ, ТермыПоиска);
			Если Стр.ПолучитьЭлементы().Количество() = 0 Тогда 
				СтрокиДерева.Удалить(Стр);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ВыбраноУведомлениеДляРегистрацииНовогоПредприятия()
	
	ВыбранноеУведомление = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Элементы.ВидыСообщений.ТекущиеДанные, "Тип");
	
	ВидыУведомлений = Новый Массив;
	ВидыУведомлений.Добавить(ПредопределенноеЗначение("Перечисление.ВидыУведомленийОСпецрежимахНалогообложения.ФормаР11001"));
	ВидыУведомлений.Добавить(ПредопределенноеЗначение("Перечисление.ВидыУведомленийОСпецрежимахНалогообложения.ФормаР21001"));
	
	Возврат ВидыУведомлений.Найти(ВыбранноеУведомление) <> Неопределено;
	
КонецФункции

&НаКлиенте
Функция НайтиВДеревеПоТипу(ТипСтроки, ТекущиеЭлементы)
	Для Каждого Стр Из ТекущиеЭлементы Цикл 
		Если Стр.Тип = ТипСтроки Тогда 
			Возврат Стр.ПолучитьИдентификатор();
		КонецЕсли;
		
		Результат = НайтиВДеревеПоТипу(ТипСтроки, Стр.ПолучитьЭлементы());
		Если ТипЗнч(Результат) = Тип("Число") Тогда 
			Возврат Результат;
		КонецЕсли;
	КонецЦикла;
КонецФункции

#КонецОбласти
