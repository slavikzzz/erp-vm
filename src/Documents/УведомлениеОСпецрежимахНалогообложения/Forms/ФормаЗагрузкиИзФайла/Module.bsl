#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Организация = Параметры.Организация;
	Представление.УстановитьТекст(Параметры.ТекстВыгрузки);
	
	РаспознатьФайлВыгрузки(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ДоступныПараметрыЗагрузки Тогда 
		ПараметрыОткрытия = Новый Структура("Организация, ПредставлениеXML, РегистрацияВНалоговомОргане, КНДФайла, ФорматФайла", 
											Организация, Представление.ПолучитьТекст(), РегистрацияВНалоговомОргане,
											КНДФайла, ФорматФайла);
		ВладелецФормы.ЗагрузитьИзXML(ПараметрыОткрытия);
		Отказ = Истина;
		ВладелецФормы.Активизировать();
		ОО = Новый Структура("ОписаниеОповещенияОЗавершенииЗагрузки");
		ЗаполнитьЗначенияСвойств(ОО, ВладелецФормы);
		Если ТипЗнч(ОО.ОписаниеОповещенияОЗавершенииЗагрузки) = Тип("ОписаниеОповещения") Тогда 
			ВыполнитьОбработкуОповещения(ВладелецФормы.ОписаниеОповещенияОЗавершенииЗагрузки);
		КонецЕсли;
		Закрыть();
	Иначе
		ОрганизацияПриИзменении(Элементы.Организация);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Элементы.ФормаСоздать.Доступность = Истина;
	Если Не ЗначениеЗаполнено(Организация) Тогда 
		Элементы.ФормаСоздать.Доступность = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Необходимо выбрать организацию';
														|en = 'Необходимо выбрать организацию'"));
	ИначеЕсли ЭтоЮридическоеЛицо(Организация) Тогда 
		Если Не ДоступноДляОрганизации Тогда 
			Элементы.ФормаСоздать.Доступность = Ложь;
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Данный документ недоступен для юридического лица';
															|en = 'Данный документ недоступен для юридического лица'"));
		КонецЕсли;
	ИначеЕсли Не ДоступноДляИП Тогда 
		Элементы.ФормаСоздать.Доступность = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Данный документ недоступен для индивидуального предпринимателя';
														|en = 'Данный документ недоступен для индивидуального предпринимателя'"));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Создать(Команда)
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Необходимо указать организацию';
														|en = 'Необходимо указать организацию'"));
		Возврат;
	КонецЕсли;
	ПараметрыОткрытия = Новый Структура("Организация, ПредставлениеXML, РегистрацияВНалоговомОргане, КНДФайла, ФорматФайла", 
										Организация, Представление.ПолучитьТекст(), РегистрацияВНалоговомОргане,
										КНДФайла, ФорматФайла);
	ОткрытьФорму(ПолныйПутьКФорме, ПараметрыОткрытия, ВладелецФормы);
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьОписаниеОтчетаПоИмени(ИмяОтчета)
	Для Каждого КЗ Из УведомлениеОСпецрежимахНалогообложенияПовтИсп.ПолучитьСоответствиеВидовУведомленийИменамОтчетов() Цикл 
		Если КЗ.Значение = ИмяОтчета Тогда 
			Возврат КЗ.Ключ;
		КонецЕсли;
	КонецЦикла;
	
	Возврат "";
КонецФункции

&НаСервере
Процедура РаспознатьФайлВыгрузки(Отказ)
	КНД = "";
	ВерсияФормата = "";
	ИНН = "";
	КодНО = "";
	ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(Представление.ПолучитьТекст());
	УзелКНД = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/КНД", "ИмяЭлемента");
	УзелВерсияФормата = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/ВерсФорм", "ИмяЭлемента");
	Если ТипЗнч(УзелКНД) = Тип("СтрокаДереваЗначений") Тогда 
		КНД = УзелКНД.ЗначениеЭлемента;
	КонецЕсли;
	Если ТипЗнч(УзелВерсияФормата) = Тип("СтрокаДереваЗначений") Тогда 
		ВерсияФормата = УзелВерсияФормата.ЗначениеЭлемента;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КНД) И ЗначениеЗаполнено(ВерсияФормата) Тогда 
		Элементы.ИнформацияОФормате.Заголовок = "КНД: " + КНД + ", версия формата: " + ВерсияФормата;
		Элементы.ИнформацияОФормате.ЦветТекста = ЦветаСтиля.ЦветГиперссылкиБРО;
	Иначе
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Не удалось распознать документ");
		Возврат;
	КонецЕсли;
	
	КодНО = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/КодНО", "ИмяЭлемента");
	Если ТипЗнч(КодНО) = Тип("СтрокаДереваЗначений") Тогда 
		КодНО = КодНО.ЗначениеЭлемента;
	КонецЕсли;
	
	ВозможныеПутиИНН = Новый Массив;
	ВозможныеПутиИНН.Добавить("Файл/Документ/СвНП/ИНН");
	ВозможныеПутиИНН.Добавить("Файл/Документ/СвНП/ИННЮЛ");
	ВозможныеПутиИНН.Добавить("Файл/Документ/СвНП/ИННФЛ");
	ВозможныеПутиИНН.Добавить("Файл/Документ/СвНП/НПЮЛ/ИННЮЛ");
	ВозможныеПутиИНН.Добавить("Файл/Документ/СвНП/НПЮЛ/ИНН");
	ВозможныеПутиИНН.Добавить("Файл/Документ/СвНП/НПФЛ/ИННФЛ");
	ВозможныеПутиИНН.Добавить("Файл/Документ/СвНП/НПФЛ/ИНН");
	ВозможныеПутиИНН.Добавить("Файл/Документ/СвНП/НПИП/ИННФЛ");
	ВозможныеПутиИНН.Добавить("Файл/Документ/СвНП/НПИП/ИННИП");
	ВозможныеПутиИНН.Добавить("Файл/Документ/СвНП/НПИП/ИНН");
	
	Для Каждого ВозможныйПуть Из ВозможныеПутиИНН Цикл 
		УзелИНН = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, ВозможныйПуть, "ИмяЭлемента");
		Если ТипЗнч(УзелИНН) = Тип("СтрокаДереваЗначений") Тогда 
			ИНН = УзелИНН.ЗначениеЭлемента;
		КонецЕсли;
		Если ЗначениеЗаполнено(ИНН) Тогда 
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Параметры.Свойство("ПараметрыXML") Тогда 
		КНДФайла = Параметры.ПараметрыXML.КНД;
		ФорматФайла = Параметры.ПараметрыXML.ВерсФорм;
		Если Параметры.ПараметрыXML.КНД <> КНД Тогда 
			Отказ = Истина;
			ОбщегоНазначения.СообщитьПользователю("КНД в файле не соответствует КНД уведомления, требуется файл с КНД " + Параметры.ПараметрыXML.КНД);
			Возврат;
		КонецЕсли;
		Если Параметры.ПараметрыXML.ВерсФорм <> ВерсияФормата Тогда 
			Отказ = Истина;
			ОбщегоНазначения.СообщитьПользователю("Версия формата в файле не соответствует версии формата текущего уведомления, требуется файл версии " + Параметры.ПараметрыXML.ВерсФорм);
			Возврат;
		КонецЕсли;
		ДоступныПараметрыЗагрузки = Истина;
	Иначе
		ДоступныПараметрыЗагрузки = Ложь;
	КонецЕсли;
	
	ИмяОтчета = УведомлениеОСпецрежимахНалогообложенияПовтИсп.ПолучитьСоответствиеОтчетаПоКНД()[КНД];
	Если Не ЗначениеЗаполнено(ИмяОтчета) Тогда
		Отказ = Истина;
		ЖурналСправок = УведомлениеОСпецрежимахНалогообложенияПовтИсп.СписокКНДСправокОбОплате().НайтиПоЗначению(КНД);
		Если ТипЗнч(ЖурналСправок) = Тип("ЭлементСпискаЗначений") Тогда 
			МетаданныеОтчета = Метаданные.Отчеты.Найти(ЖурналСправок.Представление);
			Если МетаданныеОтчета = Неопределено Тогда
				ОбщегоНазначения.СообщитьПользователю("Загрузка отчета с КНД " + КНД + " не поддерживается");
			Иначе
				ОбщегоНазначения.СообщитьПользователю("Приложенный файл является справкой для отчета: " + МетаданныеОтчета.Синоним);
				ОбщегоНазначения.СообщитьПользователю("Загрузка справки возможна в существующий журнал на странице с налогоплательщиком");
			КонецЕсли;
			Возврат;
		Иначе
			ОбщегоНазначения.СообщитьПользователю("Загрузка отчета с КНД " + КНД + " не поддерживается");
		КонецЕсли;
		Возврат;
	ИначеЕсли Метаданные.Отчеты.Найти(ИмяОтчета) = Неопределено Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю( "Загрузка отчета """ + ПолучитьОписаниеОтчетаПоИмени(ИмяОтчета) + """ не поддерживается");
		Возврат;
	КонецЕсли;
	
	МодульМенеджера = ОбщегоНазначения.ОбщийМодуль("Отчеты." + ИмяОтчета);
	Попытка
		ТаблицаПримененияФорматов = МодульМенеджера.ПолучитьТаблицуПримененияФорматов();
		ОтобранныеСтроки = ТаблицаПримененияФорматов.НайтиСтроки(Новый Структура("КНД, ВерсияФормата", КНД, ВерсияФормата));
		Если ОтобранныеСтроки.Количество() = 0 Тогда
			Элементы.ИнформацияОВозможностиЗагрузки.ЦветТекста = ЦветаСтиля.ЦветОшибкиВПротоколеБРО;
			Элементы.ФормаСоздать.Доступность = Ложь;
			ОписаниеОтчета = ПолучитьОписаниеОтчетаПоИмени(ИмяОтчета);
			Если ЗначениеЗаполнено(ОписаниеОтчета) Тогда 
				Элементы.ИнформацияОВозможностиЗагрузки.Заголовок = "Загрузка отчета """ + ОписаниеОтчета + """ не поддерживается";
			КонецЕсли;
			Возврат;
		КонецЕсли;
		ПолныйПутьКФорме = "Отчет." + ИмяОтчета + ".Форма." + ОтобранныеСтроки[0].ИмяФормы;
		
		ДоступноДляИП = Отчеты[ИмяОтчета].ДанноеУведомлениеДоступноДляИП();
		ДоступноДляОрганизации = Отчеты[ИмяОтчета].ДанноеУведомлениеДоступноДляОрганизации();
	Исключение
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю( "Загрузка отчета """ + ПолучитьОписаниеОтчетаПоИмени(ИмяОтчета) + """ не поддерживается");
		Возврат;
	КонецПопытки;
	
	Если Не ЗначениеЗаполнено(Организация)
		И ЗначениеЗаполнено(ИНН)
		И Метаданные.Справочники.Организации.Реквизиты.Найти("ИНН") <> Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ИНН", ИНН);
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Организации.Ссылка КАК Организация
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.ИНН = &ИНН
		|	И Не Организации.ПометкаУдаления";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда 
			Организация = Выборка.Организация;
		КонецЕсли;
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
		Элементы.Организация.Видимость = Ложь;
		Модуль = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации");
		Организация = Модуль.ОрганизацияПоУмолчанию();
	КонецЕсли;
	Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(КодНО) Тогда 
		РегистрацияВНалоговомОргане = УведомлениеОСпецрежимахНалогообложенияПовтИсп.ПолучитьРегистрациюВИФНСПоКоду(КодНО, Организация);
	КонецЕсли;
	Если ЗначениеЗаполнено(Организация) И Не ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда 
		РегистрацияВНалоговомОргане = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Организация);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоЮридическоеЛицо(Организация) 
	Возврат РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация);
КонецФункции

#КонецОбласти
