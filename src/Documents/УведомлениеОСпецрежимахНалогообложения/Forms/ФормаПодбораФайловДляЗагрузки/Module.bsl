#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВерсияФормата = ОбщегоНазначения.СкопироватьРекурсивно(Параметры.ВерсияФормата);
	КНД = ВРег(Параметры.КНД);
	ПрефиксФайлаВыгрузки = ВРег(Параметры.ПрефиксФайлаВыгрузки);
	
	Элементы.ДекорацияОписание.Заголовок = "Для загрузки доступны файлы xml, префикс имени "
		+ ПрефиксФайлаВыгрузки + " в форматах " + Строка(ВерсияФормата);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыФайлыВыгрузки

&НаКлиенте
Процедура ФайлыВыгрузкиПриАктивизацииСтроки(Элемент)
	Элементы.ФормаУдалитьФайл.Доступность = (Элементы.ФайлыВыгрузки.ТекущиеДанные <> Неопределено);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьФайлы(Команда)
	ОчиститьСообщения();
	ДобавитьФайлыАсинх();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда)
	ОчиститьСообщения();
	ФайлыВыгрузки.Удалить(Элементы.ФайлыВыгрузки.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСОчисткой(Команда)
	Если ФайлыВыгрузки.Количество() = 0 Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнены файлы';
														|en = 'Не заполнены файлы'"));
		Возврат;
	КонецЕсли;
	ВладелецФормы.ЗаполнитьНаОснованииФайлов(ФайлыВыгрузкиВХранилище(), Истина);
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Дополнить(Команда)
	Если ФайлыВыгрузки.Количество() = 0 Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнены файлы';
														|en = 'Не заполнены файлы'"));
		Возврат;
	КонецЕсли;
	ВладелецФормы.ЗаполнитьНаОснованииФайлов(ФайлыВыгрузкиВХранилище(), Ложь);
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВыгрузку(Команда)
	ОчиститьСообщения();
	ОО = Новый ОписаниеОповещения("ДобавитьВыгрузкуЗавершение", ЭтотОбъект, Новый Структура);
	ОтборУведомления = Новый Структура("ВидУведомления, ИмяФормы", 
		ВладелецФормы.Объект.ВидУведомления,
		СтрРазделить(ВладелецФормы.ИмяФормы, ".")[3]);
	ОткрытьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаВыбора",
		Новый Структура("Отбор, ИсключенноеЗначение", ОтборУведомления, ВладелецФормы.Объект.Ссылка), ЭтотОбъект,,,, ОО, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Асинх Процедура ДобавитьФайлыАсинх()
	ОчиститьСообщения();
	Если Ждать РегламентированнаяОтчетностьКлиент.РезультатПодключенияРасширенияРаботыСФайламиАсинх() Тогда 
		ДВФ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДВФ.Заголовок = НСтр("ru = 'Выберите файл для загрузки';
							|en = 'Выберите файл для загрузки'");
		ДВФ.МножественныйВыбор = Истина;
		ДВФ.ПроверятьСуществованиеФайла = Истина;
		ДВФ.Фильтр = НСтр("ru = 'Файлы xml';
							|en = 'Файлы xml'") + " (*.xml)|*.xml";
		ВыбранныеФайлы = Ждать ДВФ.ВыбратьАсинх();
		Если ТипЗнч(ВыбранныеФайлы) = Тип("Массив") Тогда 
			ТД = Новый ТекстовыйДокумент;
			Для Каждого Элт Из ВыбранныеФайлы Цикл 
				Если ФайлыВыгрузки.НайтиСтроки(Новый Структура("ИмяФайла", ИмяФайлаПоПолномуПути(Элт))).Количество() > 0 Тогда 
					ОбщегоНазначенияКлиент.СообщитьПользователю("файл " + Элт + " уже добавлен");
					Продолжить;
				КонецЕсли;
				Ждать ТД.ПрочитатьАсинх(Элт, "windows-1251");
				Если Не ОбработкаСодержимогоФайла(Элт, ТД.ПолучитьТекст(), РасширениеФайлаПоПолномуПути(Элт)) Тогда 
					ОбщегоНазначенияКлиент.СообщитьПользователю("файл " + Элт + " не соответствует формату");
				КонецЕсли;
				ТД.Очистить();
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ФайлыВыгрузкиВХранилище()
	Возврат ПоместитьВоВременноеХранилище(ДанныеФормыВЗначение(ФайлыВыгрузки, Тип("ТаблицаЗначений")), УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ДобавитьВыгрузкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения") Тогда 
		ОбработкаВыгрузкиОтчета(Результат);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыгрузкиОтчета(Уведомление)
	УведомлениеОбъект = Уведомление.ПолучитьОбъект();
	Выгрузка = УведомлениеОбъект.ВыгрузитьДокумент(Новый УникальныйИдентификатор);
	Если Выгрузка = Неопределено Тогда 
		ОбщегоНазначения.СообщитьПользователю("Не удалось выгрузить отчет");
		Возврат;
	КонецЕсли;
	
	Для Каждого Стр Из Выгрузка Цикл 
		Если ФайлыВыгрузки.НайтиСтроки(Новый Структура("Уведомление", Уведомление)).Количество() > 0 Тогда 
			ОбщегоНазначения.СообщитьПользователю("Уведомление уже было добавлено ранее");
			Продолжить;
		КонецЕсли;
		ОбработкаСодержимогоФайла(Строка(Уведомление), Стр.ТестВыгрузки, "xml", Уведомление);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ИмяФайлаПоПолномуПути(ПолныйПуть)
	ИндексРазделителя = СтрНайти(ПолныйПуть, ПолучитьРазделительПути(), НаправлениеПоиска.СКонца);
	Возврат ?(ИндексРазделителя = 0, ПолныйПуть, Сред(ПолныйПуть, ИндексРазделителя + 1));
КонецФункции

&НаКлиенте
Функция РасширениеФайлаПоПолномуПути(ПолныйПуть)
	ИндексРазделителя = СтрНайти(ПолныйПуть, ".", НаправлениеПоиска.СКонца);
	Возврат ?(ИндексРазделителя = 0, "", Сред(ПолныйПуть, ИндексРазделителя));
КонецФункции

&НаСервере
Функция ОбработкаСодержимогоФайла(ИмяФайла, ПредставлениеXML, РасширениеФайла, УведомлениеСсылка = Неопределено)
	Попытка
		ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ПредставлениеXML);
	Исключение
		ОбщегоНазначения.СообщитьПользователю("Не удалось обработать файл " + ИмяФайла);
		Возврат Ложь;
	КонецПопытки;
	УзелКНД = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/КНД", "ИмяЭлемента");
	УзелВерсФорм = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/ВерсФорм", "ИмяЭлемента");
	УзелИдФайл = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/ИдФайл", "ИмяЭлемента");
	Если УзелКНД = Неопределено 
		Или УзелВерсФорм = Неопределено
		Или УзелИдФайл = Неопределено
		Или УзелКНД.ЗначениеЭлемента <> КНД 
		Или Неопределено = ВерсияФормата.НайтиПоЗначению(УзелВерсФорм.ЗначениеЭлемента) Тогда 
		
		Возврат Ложь;
	КонецЕсли;
	
	УзелИНН = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СвНП/НПЮЛ/ИННЮЛ", "ИмяЭлемента");
	Если УзелИНН = Неопределено Тогда
		УзелИНН = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СвНП/НПФЛ/ИННФЛ", "ИмяЭлемента");
	КонецЕсли;
	Если УзелИНН = Неопределено Тогда
		УзелИНН = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СвНП/НПИП/ИННФЛ", "ИмяЭлемента");
	КонецЕсли;
	УзелКПП = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СвНП/НПЮЛ/КПП", "ИмяЭлемента");
	
	Если УзелИНН = Неопределено Тогда
		ИНН = "----";
	Иначе
		ИНН = УзелИНН.ЗначениеЭлемента;
	КонецЕсли;
	Если УзелКПП = Неопределено Тогда
		КПП = "----";
	Иначе
		КПП = УзелКПП.ЗначениеЭлемента;
	КонецЕсли;
	
	НовСтр = ФайлыВыгрузки.Добавить();
	НовСтр.ИНН = ИНН;
	НовСтр.КПП = КПП;
	НовСтр.Адрес = ПоместитьВоВременноеХранилище(ДеревоЗагрузки, Новый УникальныйИдентификатор);
	НовСтр.ИмяФайла = ?(ЗначениеЗаполнено(УведомлениеСсылка), Строка(УведомлениеСсылка), УзелИдФайл.ЗначениеЭлемента + РасширениеФайла);
	НовСтр.Уведомление = УведомлениеСсылка;
	
	Возврат Истина;
КонецФункции

#КонецОбласти
