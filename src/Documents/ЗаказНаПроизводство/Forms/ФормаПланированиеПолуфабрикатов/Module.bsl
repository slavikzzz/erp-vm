//++ Устарело_Производство21
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПодборТоваровКлиентСервер.СформироватьЗаголовокФормыПодбора(
		Заголовок, 
		Параметры.Заказ);
		
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры.ПараметрыПланирования);
	
	ПараметрыВыбораСпецификаций = Параметры.ПараметрыВыбораСпецификаций;
	УправлениеДаннымиОбИзделияхКлиентСервер.УстановитьПараметрыВыбораСпецификаций(Элементы.ТаблицаПолуфабрикатыСпецификация, ПараметрыВыбораСпецификаций);
	
	ЗаполнитьТаблицуПолуфабрикатов(Параметры.ПараметрыПланирования);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ОповещениеСохранитьИЗакрыть = Новый ОписаниеОповещения(
		"ПередЗакрытиемСохранитьИЗакрыть", ЭтотОбъект);
	
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(
		ОповещениеСохранитьИЗакрыть, Отказ, ЗавершениеРаботы);
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемСохранитьИЗакрыть(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ПеренестиСтрокиВДокумент();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура ВыбратьСтроки(Команда)

	ОтметитьСтроки(Истина);

КонецПроцедуры

&НаКлиенте
Процедура ИсключитьСтроки(Команда)

	ОтметитьСтроки(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)

	ПеренестиСтрокиВДокумент();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПолуфабрикаты.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПолуфабрикаты.ПрисутствуетВДокументе");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаНеактуальногоСписка);

КонецПроцедуры

#Область Прочее

&НаСервере
Процедура ЗаполнитьТаблицуПолуфабрикатов(ПараметрыПродукции)
	
	ПолуфабрикатыКОбеспечению = ПолучитьИзВременногоХранилища(ПараметрыПродукции.АдресПолуфабрикатыКОбеспечению);
	ОбеспеченныеПолуфабрикаты = ПолучитьИзВременногоХранилища(ПараметрыПродукции.АдресОбеспеченныеПолуфабрикаты);
	
	ДанныеОбИзделиях = Новый Массив;
	Для Каждого ПолуфабрикатКОбеспечению Из ПолуфабрикатыКОбеспечению Цикл
		
		НоваяСтрока = ТаблицаПолуфабрикаты.Добавить();
		НоваяСтрока.ИндексСтроки = ТаблицаПолуфабрикаты.Индекс(НоваяСтрока);
		
		НоваяСтрока.СтрокаВыбрана = Истина;
		
		НоваяСтрока.КлючСвязиПродукция = ПолуфабрикатКОбеспечению.КлючСвязиПродукция;
		НоваяСтрока.КлючСвязиМатериалыИУслуги = ПолуфабрикатКОбеспечению.КлючСвязи;
		
		НоваяСтрока.Номенклатура = ПолуфабрикатКОбеспечению.Номенклатура;
		НоваяСтрока.Характеристика = ПолуфабрикатКОбеспечению.Характеристика;
		НоваяСтрока.Склад = ПолуфабрикатКОбеспечению.Склад;
		
		НоваяСтрока.Назначение = ПолуфабрикатКОбеспечению.Назначение;
		
		НоваяСтрока.РазмещениеВыпуска = ПараметрыПродукции.РазмещениеВыпуска;
		НоваяСтрока.ДатаПотребности = ДатаПотребности;
		НоваяСтрока.НачатьНеРанее = НачатьНеРанее;
		
		НоваяСтрока.Упаковка = ПолуфабрикатКОбеспечению.Упаковка;
		
		НоваяСтрока.КоличествоУпаковок = ПолуфабрикатКОбеспечению.КоличествоУпаковок;
		НоваяСтрока.Количество         = ПолуфабрикатКОбеспечению.Количество;
		НоваяСтрока.ВНаличии           = 0;
		
		ОбеспеченныйПолуфабрикат = ОбеспеченныеПолуфабрикаты.Найти(ПолуфабрикатКОбеспечению.КлючСвязи, "КлючСвязиМатериалыИУслуги");
		
		Если ОбеспеченныйПолуфабрикат <> Неопределено Тогда
			
			НоваяСтрока.СтрокаВыбрана = Ложь;
			
			НоваяСтрока.Спецификация = ОбеспеченныйПолуфабрикат.Спецификация;
			НоваяСтрока.ДатаПотребности = ОбеспеченныйПолуфабрикат.ДатаПотребности;
			НоваяСтрока.НачатьНеРанее = ОбеспеченныйПолуфабрикат.НачатьНеРанее;
			НоваяСтрока.РазмещениеВыпуска = ОбеспеченныйПолуфабрикат.РазмещениеВыпуска;
			НоваяСтрока.Склад = ОбеспеченныйПолуфабрикат.Склад;
			НоваяСтрока.Назначение = ОбеспеченныйПолуфабрикат.Назначение;
			НоваяСтрока.ИзмененияЗапрещены = ОбеспеченныйПолуфабрикат.ИзмененияЗапрещены;
			НоваяСтрока.КодСтроки = ОбеспеченныйПолуфабрикат.КодСтроки;
			НоваяСтрока.ПрисутствуетВДокументе = Истина;
			
			НоваяСтрока.Запланировано = ОбеспеченныйПолуфабрикат.КоличествоУпаковок;
			
		КонецЕсли;
		
		НоваяСтрока.Запланировать = НоваяСтрока.КоличествоУпаковок - НоваяСтрока.Запланировано;
		
		Если НоваяСтрока.Запланировать > 0 Тогда
			
			НоваяСтрока.СтрокаВыбрана = Истина;
			
		КонецЕсли;
		
		ДанныеОбИзделии = УправлениеДаннымиОбИзделияхКлиентСервер.СтруктураДанныхОбИзделииДляВыбораСпецификации();
		ДанныеОбИзделии.ТекущаяСпецификация     = НоваяСтрока.Спецификация;
		ДанныеОбИзделии.Номенклатура            = НоваяСтрока.Номенклатура;
		ДанныеОбИзделии.Характеристика          = НоваяСтрока.Характеристика;
		ДанныеОбИзделии.НачалоПроизводства      = НоваяСтрока.НачатьНеРанее;
		ДанныеОбИзделии.ПодразделениеДиспетчер  = Подразделение;
		
		ДанныеОбИзделиях.Добавить(ДанныеОбИзделии);
		
	КонецЦикла;
	
	УправлениеДаннымиОбИзделиях.ЗаполнитьСпецификациюВСтроках(ТаблицаПолуфабрикаты, ДанныеОбИзделиях, ПараметрыВыбораСпецификаций);
	
	Запрос = Новый Запрос();
	
	Тексты = Новый Массив();
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаПолуфабрикаты.ИндексСтроки   КАК ИндексСтроки,
		|	ТаблицаПолуфабрикаты.Номенклатура   КАК Номенклатура,
		|	ТаблицаПолуфабрикаты.Характеристика КАК Характеристика,
		|	ТаблицаПолуфабрикаты.Склад          КАК Склад,
		|	ТаблицаПолуфабрикаты.Упаковка       КАК Упаковка
		|
		|ПОМЕСТИТЬ ВТПолуфабрикаты
		|
		|ИЗ
		|	&ТаблицаПолуфабрикаты КАК ТаблицаПолуфабрикаты
		|
		|;
		|//////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПолуфабрикаты.Номенклатура КАК Номенклатура,
		|	ТаблицаПолуфабрикаты.Характеристика КАК Характеристика,
		|	ТаблицаПолуфабрикаты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение
		|ПОМЕСТИТЬ ТаблицаПолуфабрикаты
		|ИЗ
		|	ВТПолуфабрикаты КАК ТаблицаПолуфабрикаты
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение";
	Тексты.Добавить(ТекстЗапроса);
		
	ТекстЗапроса = ОбеспечениеВДокументахСервер.ВременнаяТаблицаОстаткиВНаличииПоВсемНазначениям("ТаблицаПолуфабрикаты", "ТаблицаОстатков");
	Тексты.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Полуфабрикаты.ИндексСтроки КАК ИндексСтроки,
		|	ОстатокНаСкладе.Количество / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК ВНаличии
		|ИЗ
		|	ВТПолуфабрикаты КАК Полуфабрикаты
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК ОстатокНаСкладе
		|		ПО ОстатокНаСкладе.Номенклатура = Полуфабрикаты.Номенклатура
		|			И ОстатокНаСкладе.Характеристика = Полуфабрикаты.Характеристика
		|			И ОстатокНаСкладе.Склад = Полуфабрикаты.Склад
		|ГДЕ
		|	ОстатокНаСкладе.Количество > 0";
	Тексты.Добавить(ТекстЗапроса);
	
	Запрос.Текст = СтрСоединить(Тексты, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Полуфабрикаты.Упаковка",
			"Полуфабрикаты.Номенклатура"));
	
	Запрос.УстановитьПараметр("ТаблицаПолуфабрикаты", ТаблицаПолуфабрикаты.Выгрузить(, "ИндексСтроки,
																						|Номенклатура,
																						|Характеристика,
																						|Склад,
																						|Упаковка"));
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекущаяСтрока = ТаблицаПолуфабрикаты[Выборка.ИндексСтроки];
			
			ТекущаяСтрока.ВНаличии = Выборка.ВНаличии;
			
			ТекущаяСтрока.Запланировать = (ТекущаяСтрока.КоличествоУпаковок 
												- ТекущаяСтрока.ВНаличии 
												- ТекущаяСтрока.Запланировано);
			
			Если ТекущаяСтрока.Запланировать <= 0 Тогда
				
				ТекущаяСтрока.СтрокаВыбрана = Ложь;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьПолуфабрикатыВХранилище()

	ПараметрыОтбора = Новый Структура("СтрокаВыбрана", Истина);
	ВыбранныеПолуфабрикаты = ТаблицаПолуфабрикаты.Выгрузить(ПараметрыОтбора);
	
	Данные = Новый Структура("Полуфабрикаты", ВыбранныеПолуфабрикаты);
	АдресВХранилище = ПоместитьВоВременноеХранилище(Данные);

	Возврат АдресВХранилище;

КонецФункции

&НаКлиенте
Процедура ПеренестиСтрокиВДокумент()

	// Снятие модифицированности, т.к. перед закрытием признак проверяется.
	Модифицированность = Ложь;

	АдресВХранилище = ПоместитьПолуфабрикатыВХранилище();
	
	ОповеститьОВыборе(Новый Структура("ВыполняемаяОперация, АдресВХранилище",
						"ПланированиеПолуфабрикатов", АдресВХранилище));

КонецПроцедуры

&НаСервере
Процедура ОтметитьСтроки(Значение)

	Для каждого СтрокаТаблицаПолуфабрикаты Из ТаблицаПолуфабрикаты.НайтиСтроки(Новый Структура("СтрокаВыбрана", Не Значение)) Цикл

		СтрокаТаблицаПолуфабрикаты.СтрокаВыбрана = Значение;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецОбласти
//-- Устарело_Производство21
