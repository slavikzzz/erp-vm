
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует описание реквизитов объекта, заполняемых по статистике их использования.
//
// Параметры:
//  ОписаниеРеквизитов - Структура - описание реквизитов, для которых необходимо получить значения по статистике
//
//
Процедура ЗадатьОписаниеЗаполняемыхРеквизитовПоСтатистике(ОписаниеРеквизитов) Экспорт
	
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов,
		"Организация");
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Организация";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов,
		"ВидЦены", Параметры);
		
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьТолькоЗаполненные = "Организация";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(
		ОписаниеРеквизитов, "Ответственный", Параметры);
	
КонецПроцедуры

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * ТаблицаИмяРегистра - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.ПлановаяКалькуляция2_2") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаМножителиПартийИПолуфабрикатов(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

Процедура ЗаполнитьДокументУстановкаЦенНоменклатуры(ДокументУстановки, ДанныеЗаполнения) Экспорт
	
	НаборВалют = Константы.СоздатьНабор("ВалютаРегламентированногоУчета, ВалютаУправленческогоУчета");
	НаборВалют.Прочитать();
	
	ПлановыйВидЦены = Справочники.ВидыЦен.ВидЦеныПлановойСтоимостиТМЦ();
	ВалютаПлана = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПлановыйВидЦены, "ВалютаЦены");
	ИспользуетсяЦенообразование25 = ПолучитьФункциональнуюОпцию("ИспользуетсяЦенообразование25");
	
	Если ИспользуетсяЦенообразование25 Тогда
		
		ТабличнаяЧастьТовары = "Товары2_5";
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ОбъектыКалькуляции.Номенклатура КАК Номенклатура,
			|	ОбъектыКалькуляции.Характеристика.ХарактеристикаНоменклатурыДляЦенообразования КАК ХарактеристикаЦО,
			|	ОбъектыКалькуляции.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
			|	&ПлановыйВидЦены КАК ВидЦены,
			|	ВЫБОР
			|		КОГДА &ИспользоватьСуммуРегл
			|			ТОГДА ВЫРАЗИТЬ(МножителиПартийИПолуфабрикатов.СтоимостьРегл / МножителиПартийИПолуфабрикатов.КоличествоПолуфабриката КАК ЧИСЛО(31, 2))
			|		КОГДА &ИспользоватьСуммуУпр
			|			ТОГДА ВЫРАЗИТЬ(МножителиПартийИПолуфабрикатов.СтоимостьБезНДС / МножителиПартийИПолуфабрикатов.КоличествоПолуфабриката КАК ЧИСЛО(31, 2))
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Цена
			|ИЗ
			|	Документ.ПлановаяКалькуляция2_2.ОбъектыКалькуляции КАК ОбъектыКалькуляции
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МножителиПартийИПолуфабрикатов КАК МножителиПартийИПолуфабрикатов
			|		ПО ОбъектыКалькуляции.Ссылка = МножителиПартийИПолуфабрикатов.Калькуляция
			|			И (ВЫБОР
			|				КОГДА ТИПЗНАЧЕНИЯ(ОбъектыКалькуляции.Объект) = ТИП(Справочник.РесурсныеСпецификации)
			|					ТОГДА ОбъектыКалькуляции.Объект = МножителиПартийИПолуфабрикатов.ПартияСпецификацияПродукции
			|				ИНАЧЕ ОбъектыКалькуляции.Объект = ВЫРАЗИТЬ(МножителиПартийИПолуфабрикатов.ПартияСпецификацияПродукции КАК Документ.ЭтапПроизводства2_2).Распоряжение
			|			КОНЕЦ)
			|			И ОбъектыКалькуляции.Номенклатура = МножителиПартийИПолуфабрикатов.Продукция
			|			И ОбъектыКалькуляции.Характеристика = МножителиПартийИПолуфабрикатов.ХарактеристикаПродукции
			|			И ОбъектыКалькуляции.Назначение = МножителиПартийИПолуфабрикатов.Назначение
			|			И (МножителиПартийИПолуфабрикатов.Полуфабрикат = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
			|ГДЕ
			|	ОбъектыКалькуляции.Ссылка = &Ссылка";
	
	Иначе
	
		ТабличнаяЧастьТовары = "Товары";
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ОбъектыКалькуляции.Номенклатура КАК Номенклатура,
			|	ОбъектыКалькуляции.Характеристика КАК Характеристика,
			|	ОбъектыКалькуляции.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
			|	&ПлановыйВидЦены КАК ВидЦены,
			|	ВЫБОР
			|		КОГДА &ИспользоватьСуммуРегл
			|			ТОГДА ВЫРАЗИТЬ(МножителиПартийИПолуфабрикатов.СтоимостьРегл / МножителиПартийИПолуфабрикатов.КоличествоПолуфабриката КАК ЧИСЛО(31,2))
			|		КОГДА &ИспользоватьСуммуУпр
			|			ТОГДА ВЫРАЗИТЬ(МножителиПартийИПолуфабрикатов.СтоимостьБезНДС / МножителиПартийИПолуфабрикатов.КоличествоПолуфабриката КАК ЧИСЛО(31,2))
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Цена
			|ИЗ
			|	Документ.ПлановаяКалькуляция2_2.ОбъектыКалькуляции КАК ОбъектыКалькуляции
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МножителиПартийИПолуфабрикатов КАК МножителиПартийИПолуфабрикатов
			|		ПО ОбъектыКалькуляции.Ссылка = МножителиПартийИПолуфабрикатов.Калькуляция
			|			И (ВЫБОР
			|				КОГДА ТИПЗНАЧЕНИЯ(ОбъектыКалькуляции.Объект) = ТИП(Справочник.РесурсныеСпецификации)
			|					ТОГДА ОбъектыКалькуляции.Объект = МножителиПартийИПолуфабрикатов.ПартияСпецификацияПродукции
			|				ИНАЧЕ ОбъектыКалькуляции.Объект = ВЫРАЗИТЬ(МножителиПартийИПолуфабрикатов.ПартияСпецификацияПродукции КАК Документ.ЭтапПроизводства2_2).Распоряжение
			|			КОНЕЦ)
			|			И ОбъектыКалькуляции.Номенклатура = МножителиПартийИПолуфабрикатов.Продукция
			|			И ОбъектыКалькуляции.Характеристика = МножителиПартийИПолуфабрикатов.ХарактеристикаПродукции
			|			И ОбъектыКалькуляции.Назначение = МножителиПартийИПолуфабрикатов.Назначение
			|			И (МножителиПартийИПолуфабрикатов.Полуфабрикат = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
			|ГДЕ
			|	ОбъектыКалькуляции.Ссылка = &Ссылка";
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ПлановыйВидЦены", ПлановыйВидЦены);
	Запрос.УстановитьПараметр("ИспользоватьСуммуРегл", 
		(ВалютаПлана = НаборВалют.ВалютаРегламентированногоУчета));
	Запрос.УстановитьПараметр("ИспользоватьСуммуУпр", 
		(ВалютаПлана = НаборВалют.ВалютаУправленческогоУчета));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не требуется вводить установку цен номенклатуры на основании документа %1';
				|en = 'It is not required to enter pricing of products based on document %1'"),
			ДанныеЗаполнения);
		ВызватьИсключение Текст;
		
	ИначеЕсли Не ЗначениеЗаполнено(ПлановыйВидЦены) Тогда
		
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не установлен плановый вид цены.';
				|en = 'Planned price type not set.'"),
			ДанныеЗаполнения);
		ВызватьИсключение Текст;
		
	Иначе
		
		ДанныеТовары = РезультатЗапроса.Выгрузить();
		ДокументУстановки.ДокументОснование = ДанныеЗаполнения;
		ДокументУстановки[ТабличнаяЧастьТовары].Загрузить(РезультатЗапроса.Выгрузить());
		
		ДокументУстановки.ВидыЦен.Загрузить(ДанныеТовары);
		Если ДанныеТовары.Найти(ПлановыйВидЦены, "ВидЦены") = Неопределено Тогда
			НовыйВидЦены = ДокументУстановки.ВидыЦен.Добавить();
			НовыйВидЦены.ВидЦены = ПлановыйВидЦены;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗапускВыполненияФоновогоПроведения(ДокументСсылка) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Ключ = ДокументСсылка.УникальныйИдентификатор();
	
	Отбор = Новый Структура();
	Отбор.Вставить("Ключ", Ключ);
	Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	
	АктивныеЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	
	Если АктивныеЗадания.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	НаименованиеЗадания = НСтр("ru = 'Проведение документа: %Ссылка%';
								|en = 'Posting the document: %Ссылка%'");
	НаименованиеЗадания = СтрЗаменить(НаименованиеЗадания, "%Ссылка%", ДокументСсылка);
	
	ИмяЭкспортнойПроцедуры = "РегистрыСведений.МножителиПартийИПолуфабрикатов.ВыполнитьПроведение";
	
	ПараметрыЭкспортнойПроцедуры = Новый Массив();
	ПараметрыЭкспортнойПроцедуры.Добавить(Новый Структура("Калькуляция", ДокументСсылка));
	
	ПараметрыЗадания = Новый Массив();
	ПараметрыЗадания.Добавить(ИмяЭкспортнойПроцедуры);
	ПараметрыЗадания.Добавить(ПараметрыЭкспортнойПроцедуры);
	
	ФоновыеЗадания.Выполнить("ОбщегоНазначения.ВыполнитьМетодКонфигурации", ПараметрыЗадания, Ключ, НаименованиеЗадания);

КонецПроцедуры

#Область АудитСостоянияСистемы

// Добавляет проверку для регистрации ошибок.
// 
// Параметры:
// 	ТаблицаГруппПроверок - см. АудитСостоянияСистемы.ТаблицаГруппПроверокСостоянияСистемы
//
Процедура ЗаполнитьГруппыПроверокДляРегистрации(ТаблицаГруппПроверок) Экспорт
	
	ОписаниеГруппыПроверок = ТаблицаГруппПроверок.Добавить();
	ОписаниеГруппыПроверок.ИдентификаторРодителя = "";
	ОписаниеГруппыПроверок.Наименование = НСтр("ru = 'Калькуляции продукции';
												|en = 'Product costings'");
	ОписаниеГруппыПроверок.КонтекстПроверокВеденияУчета = Документы.ПлановаяКалькуляция2_2.ПустаяСсылка();
	ОписаниеГруппыПроверок.Идентификатор = "КалькуляцииПродукции";
	
КонецПроцедуры

// Заполняет проверки, выполняемые после расчета плановой калькуляции.
// 
// Параметры:
// 	ТаблицаПроверок - см. АудитСостоянияСистемы.ТаблицаПроверокСостоянияСистемы
//
Процедура ЗаполнитьПроверкиДляРегистрации(ТаблицаПроверок) Экспорт
	
	// Наличие движений с нулевой стоимостью.
	ОписаниеПроверки = ДобавитьОписаниеНовойПроверки(ТаблицаПроверок,
		"ДвиженияСНулевойСтоимостью",
		Документы.ПлановаяКалькуляция2_2.ПустаяСсылка(),
		Перечисления.МоментЗапускаПроверкиОперацииЗакрытияМесяца.ПослеРасчета,
		"Документы.ПлановаяКалькуляция2_2.ПроверкаДвиженийСНулевойСтоимостью");
	
	ЗакрытиеМесяцаСервер.ЗаполнитьПредставлениеНовойПроверки(ОписаниеПроверки,
		НСтр("ru = 'Наличие движений с нулевой стоимостью.';
			|en = 'There are movements with zero cost.'", ОбщегоНазначения.КодОсновногоЯзыка()),
		НСтр("ru = 'Для всей номенклатуры и видов работ должны быть назначены плановые цены.';
			|en = 'Planned prices should be assigned for all products and activity kinds.'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
КонецПроцедуры

// Выполняет проверку на коррректность расчета плановой кальклуяции.
// 
// Параметры:
// 	ПараметрыПроверки - см. АудитСостоянияСистемы.ИнициализироватьПараметрыПроверки
//
Процедура ПроверкаДвиженийСНулевойСтоимостью(ПараметрыПроверки) Экспорт
	
	ДополнительныеПараметры = ПараметрыПроверки.ДополнительныеПараметры; // Структура
	Калькуляции = ДополнительныеПараметры.Калькуляции;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	РегистрыСведений.МножителиПартийИПолуфабрикатов.ПолучитьЦеныНоменклатуры(Калькуляции, МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокКалькуляций", Калькуляции);
	
	Запрос.Текст = 
	
		"ВЫБРАТЬ
		|	ПлановыеТрудозатраты.Калькуляция КАК Калькуляция,
		|	ПлановыеТрудозатраты.ВидРабот КАК ВидРабот,
		|	ПлановыеТрудозатраты.Период КАК Период
		|ПОМЕСТИТЬ ВидыРабот
		|ИЗ
		|	РегистрНакопления.ПлановыеТрудозатраты КАК ПлановыеТрудозатраты
		|ГДЕ
		|	ПлановыеТрудозатраты.Калькуляция В (&СписокКалькуляций)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеТрудозатраты.Калькуляция,
		|	ПлановыеТрудозатраты.Период,
		|	ПлановыеТрудозатраты.ВидРабот
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыРабот.Калькуляция КАК Калькуляция,
		|	ВидыРабот.ВидРабот КАК ВидРабот,
		|	ВидыРабот.Период КАК Период,
		|	МАКСИМУМ(РасценкиРаботСотрудников.Период) КАК ПериодРасценки
		|ПОМЕСТИТЬ ДатыРасценок
		|ИЗ
		|	ВидыРабот КАК ВидыРабот
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасценкиРаботСотрудников КАК РасценкиРаботСотрудников
		|		ПО (РасценкиРаботСотрудников.ВидРабот = ВидыРабот.ВидРабот)
		|			И (РасценкиРаботСотрудников.Период <= ВидыРабот.Период)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВидыРабот.Калькуляция,
		|	ВидыРабот.ВидРабот,
		|	ВидыРабот.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатыРасценок.Калькуляция,
		|	ДатыРасценок.ВидРабот КАК ВидРабот,
		|	ДатыРасценок.Период КАК Период,
		|	ЕСТЬNULL(РасценкиРаботСотрудников.Расценка, 0) КАК Расценка
		|ПОМЕСТИТЬ Расценки
		|ИЗ
		|	ДатыРасценок КАК ДатыРасценок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасценкиРаботСотрудников КАК РасценкиРаботСотрудников
		|		ПО ДатыРасценок.ВидРабот = РасценкиРаботСотрудников.ВидРабот
		|			И ДатыРасценок.ПериодРасценки = РасценкиРаботСотрудников.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеМатериальныеЗатраты.Калькуляция КАК Калькуляция,
		|	""Материальные"" КАК ТипЗатраты,
		|	СУММА(1) КАК КоличествоСтрок
		|ПОМЕСТИТЬ Ошибки
		|ИЗ
		|	РегистрНакопления.ПлановыеМатериальныеЗатраты КАК ПлановыеМатериальныеЗатраты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|		ПО ПлановыеМатериальныеЗатраты.Калькуляция = ЦеныНоменклатуры.Калькуляция
		|			И ПлановыеМатериальныеЗатраты.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|			И ПлановыеМатериальныеЗатраты.Характеристика = ЦеныНоменклатуры.Характеристика
		|			И ПлановыеМатериальныеЗатраты.Период = ЦеныНоменклатуры.Период
		|ГДЕ
		|	НЕ ПлановыеМатериальныеЗатраты.ЭтоПолуфабрикат
		|	И ПлановыеМатериальныеЗатраты.Калькуляция В (&СписокКалькуляций)
		|	И ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) = 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеМатериальныеЗатраты.Калькуляция
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПлановыеТрудозатраты.Калькуляция,
		|	""Трудозатраты"",
		|	СУММА(1)
		|ИЗ
		|	РегистрНакопления.ПлановыеТрудозатраты КАК ПлановыеТрудозатраты
		|	ЛЕВОЕ СОЕДИНЕНИЕ Расценки КАК Расценки
		|	ПО ПлановыеТрудозатраты.Калькуляция = Расценки.Калькуляция
		|		И ПлановыеТрудозатраты.ВидРабот = Расценки.ВидРабот
		|		И ПлановыеТрудозатраты.Период = Расценки.Период
		|ГДЕ
		|	ПлановыеТрудозатраты.Калькуляция В (&СписокКалькуляций)
		|	И ЕСТЬNULL(Расценки.Расценка, 0) = 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеТрудозатраты.Калькуляция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Ошибки.Калькуляция КАК Калькуляция,
		|	Ошибки.ТипЗатраты КАК ТипЗатраты,
		|	Ошибки.КоличествоСтрок КАК КоличествоСтрок,
		|	Ошибки.Калькуляция.Организация КАК Организация
		|ИЗ
		|	Ошибки КАК Ошибки
		|ИТОГИ ПО
		|	Организация";
	
	Результат = Запрос.Выполнить();
	ВыборкаПоОрганизациям = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	КалькуляцииСОшибкамиРасчета = Новый Массив;;
	
	Пока ВыборкаПоОрганизациям.Следующий() Цикл
		
		АудитСостоянияСистемы.ДобавитьСтрокуВТаблицуВыявленныхПроблем(
			ПараметрыПроверки, 
			ВыборкаПоОрганизациям.Организация, 
			'00010101', 
			НСтр("ru = 'Присутствуют движения по материалам или видам работы с нулевой стоимостью.';
				|en = 'There are movements of materials and activity kinds with zero value.'"));
		
		ВыборкаДетальная = ВыборкаПоОрганизациям.Выбрать();
		Пока ВыборкаДетальная.Следующий() Цикл
			
			Если ВыборкаДетальная.ТипЗатраты = "Материальные" Тогда
				Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Не заданы плановые цены для %1 позиций номенклатуры.';
						|en = 'Scheduled prices for the %1 items of products are not specified.'"),
					ВыборкаДетальная.КоличествоСтрок);
			Иначе
				Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Не заданы плановые расценки для %1 видов работ.';
						|en = 'Planned rates for the %1 activity kinds are not specified.'"),
					ВыборкаДетальная.КоличествоСтрок);
				КонецЕсли;
				
			АудитСостоянияСистемы.ДобавитьОбъектКЗафиксированнойПроблеме(
				ПараметрыПроверки,
				ВыборкаДетальная.Калькуляция,
				Представление);
				
			Если КалькуляцииСОшибкамиРасчета.Найти(ВыборкаДетальная.Калькуляция) = Неопределено Тогда
				КалькуляцииСОшибкамиРасчета.Добавить(ВыборкаДетальная.Калькуляция);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ДополнительныеПараметры.Вставить("КалькуляцииСОшибкамиРасчета", КалькуляцииСОшибкамиРасчета);
	
КонецПроцедуры

#КонецОбласти

#Область Команды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.УстановкаЦенНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Заполняет список команд создания на основании.
//
// Параметры:
//  КомандыСоздатьНаОсновании - ТаблицаЗначений - описание в СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании
// Возвращаемое значение:
// 	СтрокаТаблицыЗначений - описание в СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании 
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	Если ПравоДоступа("Добавление", Метаданные.Документы.ПлановаяКалькуляция2_2) Тогда
		
		ТолькоПроизводство22 = ПолучитьФункциональнуюОпцию("ИспользуетсяТолькоУправлениеПроизводством22");
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ПлановаяКалькуляция2_2.ПолноеИмя();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ПлановаяКалькуляция2_2.ПолноеИмя();
		КомандаСоздатьНаОсновании.МножественныйВыбор = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьУправлениеПроизводством2_2";
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ПлановаяКалькуляция2_2)
			+ ?(ТолькоПроизводство22, "", " 2.2");

		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - см. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - см. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт

	Если ПравоДоступа("Просмотр", Метаданные.Отчеты.ПлановаяСебестоимостьПродукции) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		
		КомандаОтчет.Менеджер			= Метаданные.Отчеты.ПлановаяСебестоимостьПродукции.ПолноеИмя();
		КомандаОтчет.Представление		= НСтр("ru = 'Плановая себестоимость продукции';
												|en = 'Product standard cost'");
		КомандаОтчет.ВидимостьВФормах	= "ФормаДокумента, ФормаСписка";
		КомандаОтчет.КлючВарианта 		= "ПлановаяСебестоимостьПродукцииКонтекст";
		КомандаОтчет.Порядок            = 1;
		КомандаОтчет.Важность 			= "Важное";
		КомандаОтчет.МножественныйВыбор = Ложь;
		
	КонецЕсли;
	
	Если ПравоДоступа("Просмотр", Метаданные.Отчеты.ОшибкиРасчетаКалькуляцииПродукции) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		
		КомандаОтчет.Менеджер               = Метаданные.Отчеты.ОшибкиРасчетаКалькуляцииПродукции.ПолноеИмя();
		КомандаОтчет.Представление               = НСтр("ru = 'Протокол расчета';
														|en = 'Calculation protocol'");
		КомандаОтчет.ВидимостьВФормах            = "ФормаДокумента, ФормаСписка";
		КомандаОтчет.Порядок                     = 1;
		КомандаОтчет.Важность = "Важное";
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - См. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПлановаяКалькуляцияСводно";
	КомандаПечати.Представление = НСтр("ru = 'Сводная калькуляция';
										|en = 'Summary cost estimate'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПлановаяКалькуляцияПодробно";
	КомандаПечати.Представление = НСтр("ru = 'Подробная калькуляция';
										|en = 'Detailed cost estimate'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПротоколОшибок";
	КомандаПечати.Порядок = 60;
	КомандаПечати.Представление = НСтр("ru = 'Протокол ошибок';
										|en = 'Error log'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
//
//  Возвращаемое значение:
//  См. Справочники.Назначения.МакетФормыВыбораНазначений
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ВсеНазначения", Истина, "Объект.ОбъектыКалькуляции.Назначение");
	
	Возврат МакетФормы;
	
КонецФункции

#КонецОбласти

// Возвращает параметры выбора спецификаций для изделий, указанных в документе.
//
// Параметры:
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров выбора спецификаций.
//
// Возвращаемое значение:
//   Структура - Структура, переопределяющая умолчания, заданные в функции УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций().
//
Функция ПараметрыВыбораСпецификаций(Объект) Экспорт
	
	ПараметрыВыбораСпецификаций = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций();
	
	ПараметрыВыбораСпецификаций.ДоступныеТипы.Добавить(Перечисления.ТипыПроизводственныхПроцессов.Сборка);
	ПараметрыВыбораСпецификаций.ДоступныеТипы.Добавить(Перечисления.ТипыПроизводственныхПроцессов.Ремонт);
	
	ПараметрыВыбораСпецификаций.ДоступныеСтатусы.Добавить(Перечисления.СтатусыСпецификаций.Действует);
	
	СвязиПараметровВыбора = Новый Структура(УправлениеДаннымиОбИзделияхКлиентСервер.ПоляСтруктурыДанныхОбИзделииДляВыбораСпецификации());
	СвязиПараметровВыбора.Номенклатура            = "Объект.ОбъектыКалькуляции.Номенклатура";
	СвязиПараметровВыбора.Характеристика          = "Объект.ОбъектыКалькуляции.Характеристика";
	СвязиПараметровВыбора.НачалоПроизводства      = "Объект.Дата";
	СвязиПараметровВыбора.ПодразделениеДиспетчер  = "Объект.ПодразделениеДиспетчер";
	
	ПараметрыВыбораСпецификаций.СвязиПараметровВыбора.Вставить("Объект.ОбъектыКалькуляции.Объект", СвязиПараметровВыбора);
	
	Возврат ПараметрыВыбораСпецификаций;
	
КонецФункции

// Имена реквизитов, от значений которых зависят параметры выбора спецификаций
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровВыбораСпецификаций() Экспорт
	
	ИменаРеквизитов = "";
	Возврат ИменаРеквизитов;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ЗаполнениеДокументов

Функция ОписаниеПараметраЗаполненияЦенВКоллекции() Экспорт
	
	Описание = Новый Структура;
	Описание.Вставить("ДатаДокумента", Дата(1, 1, 1));
	Описание.Вставить("ВалютаДокумента", Справочники.Валюты.ПустаяСсылка());
	Описание.Вставить("Калькуляция", Документы.ПлановаяКалькуляция2_2.ПустаяСсылка());
	
	Возврат Описание;
	
КонецФункции

Процедура ЗаполнитьЦеныПоКалькуляцииВКоллекции(Коллекция, НаборСтрок, ПараметрыЗаполнения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Строки.Номенклатура КАК Номенклатура,
		|	Строки.Характеристика КАК Характеристика,
		|	Строки.Назначение КАК Назначение,
		|	Строки.Количество КАК Количество,
		|	&Калькуляция КАК Калькуляция
		|ПОМЕСТИТЬ ТаблицаПродукции
		|ИЗ
		|	&Коллекция КАК Строки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Назначение,
		|	Калькуляция
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПродукции.Номенклатура КАК Номенклатура,
		|	ТаблицаПродукции.Характеристика КАК Характеристика,
		|	ТаблицаПродукции.Назначение КАК Назначение,
		|	ТаблицаПродукции.Калькуляция КАК Калькуляция,
		|	Множители.Стоимость / Множители.КоличествоПолуфабриката КАК Цена,
		|	1 КАК Приоритет
		|ПОМЕСТИТЬ ЦеныПродукции
		|ИЗ
		|	РегистрСведений.МножителиПартийИПолуфабрикатов КАК Множители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПродукции КАК ТаблицаПродукции
		|		ПО ТаблицаПродукции.Калькуляция = Множители.Калькуляция
		|		И ТаблицаПродукции.Номенклатура = Множители.Продукция
		|		И ТаблицаПродукции.Характеристика = Множители.ХарактеристикаПродукции
		|		И ТаблицаПродукции.Назначение = Множители.Назначение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаПродукции.Номенклатура,
		|	ТаблицаПродукции.Характеристика,
		|	ТаблицаПродукции.Назначение,
		|	ТаблицаПродукции.Калькуляция,
		|	Множители.Стоимость / Множители.КоличествоПолуфабриката,
		|	2 КАК Приоритет
		|ИЗ
		|	РегистрСведений.МножителиПартийИПолуфабрикатов КАК Множители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПродукции КАК ТаблицаПродукции
		|		ПО ТаблицаПродукции.Калькуляция = Множители.Калькуляция
		|		И ТаблицаПродукции.Номенклатура = Множители.Продукция
		|		И ТаблицаПродукции.Характеристика = Множители.ХарактеристикаПродукции
		|		И Множители.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаПродукции.Номенклатура,
		|	ТаблицаПродукции.Характеристика,
		|	ТаблицаПродукции.Назначение,
		|	ТаблицаПродукции.Калькуляция,
		|	Множители.Стоимость / Множители.КоличествоПолуфабриката,
		|	3 КАК Приоритет
		|ИЗ
		|	РегистрСведений.МножителиПартийИПолуфабрикатов КАК Множители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПродукции КАК ТаблицаПродукции
		|		ПО ТаблицаПродукции.Калькуляция = Множители.Калькуляция
		|		И ТаблицаПродукции.Номенклатура = Множители.Продукция
		|		И ТаблицаПродукции.Характеристика = Множители.ХарактеристикаПродукции
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЦеныПродукции.Номенклатура,
		|	ЦеныПродукции.Характеристика,
		|	ЦеныПродукции.Назначение,
		|	ЦеныПродукции.Калькуляция,
		|	ЦеныПродукции.Цена,
		|	ЦеныПродукции.Приоритет КАК Приоритет
		|ИЗ
		|	ЦеныПродукции КАК ЦеныПродукции
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";
	
	Запрос.УстановитьПараметр("Коллекция", Коллекция.Выгрузить(НаборСтрок));
	Запрос.УстановитьПараметр("Калькуляция", ПараметрыЗаполнения.Калькуляция);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ТребуетсяПересчет = Не (ПараметрыЗаполнения.ВалютаДокумента = ВалютаУпр);
	Если ТребуетсяПересчет Тогда
		
		ПараметрыКурсаКалькуляции = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(ВалютаУпр, 
			ПараметрыЗаполнения.ДатаДокумента);
		ПараметрыКурсаДокумента = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(ПараметрыЗаполнения.ВалютаДокумента, 
			ПараметрыЗаполнения.ДатаДокумента); 
		
	КонецЕсли;
	
	Для Каждого ДанныеСтроки Из НаборСтрок Цикл
		
		ОтборСтрок = Новый Структура;
		ОтборСтрок.Вставить("Номенклатура", ДанныеСтроки.Номенклатура);
		ОтборСтрок.Вставить("Характеристика", ДанныеСтроки.Характеристика);
		ОтборСтрок.Вставить("Назначение", ДанныеСтроки.Назначение);

		Пока Выборка.НайтиСледующий(ОтборСтрок) Цикл
			
			Если ТребуетсяПересчет Тогда
				ДанныеСтроки.Цена = РаботаСКурсамиВалютУТ.ПересчитатьПоКурсу(Выборка.Цена, 
					ПараметрыКурсаКалькуляции, ПараметрыКурсаДокумента);
			Иначе
				ДанныеСтроки.Цена = Выборка.Цена;
			КонецЕсли;
			
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ДанныеСтроки, СтруктураДействий, Неопределено);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных; 
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Период", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "Дата"));
	Запрос.УстановитьПараметр("ВидЦены", Справочники.ВидыЦен.ВидЦеныПлановойСтоимостиТМЦ());
	
КонецПроцедуры

Функция ТекстыЗапросаДляФормированияДвижений(Запрос, ТекстыЗапроса)
	
	УстановитьВыходныеИзделияПоСпецификации(Запрос);
	ТекстЗапросаВТОбъектыКалькуляции(Запрос, ТекстыЗапроса);
	
	Возврат ТекстыЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаМножителиПартийИПолуфабрикатов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МножителиПартийИПолуфабрикатов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВТОбъектыКалькуляции", ТекстыЗапроса) Тогда
		ТекстыЗапросаДляФормированияДвижений(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	&Ссылка КАК Калькуляция,
		|	ВТОбъектыКалькуляции.Номенклатура КАК Продукция,
		|	ВТОбъектыКалькуляции.Характеристика КАК ХарактеристикаПродукции,
		|	ВТОбъектыКалькуляции.Назначение КАК Назначение,
		|	ВыходныеИзделияПоЗаказу.ВыпускающийЭтап КАК ПартияСпецификацияПродукции,
		|	НЕОПРЕДЕЛЕНО КАК ПартияСпецификацияПолуфабриката,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Полуфабрикат,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаПолуфабриката,
		|	0 КАК Порядок,
		|	ВыходныеИзделияПоЗаказу.ДоляСтоимости КАК Числитель,
		|	ВсегоДолейСтоимости.ВсегоДолей КАК Знаменатель,
		|	ВыходныеИзделияПоЗаказу.Количество КАК КоличествоПолуфабриката,
		|	ЛОЖЬ КАК РасчетЗавершен
		|ИЗ
		|	ВТОбъектыКалькуляции КАК ВТОбъектыКалькуляции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыходныеИзделияПоЗаказу КАК ВыходныеИзделияПоЗаказу
		|		ПО ВТОбъектыКалькуляции.Объект = ВыходныеИзделияПоЗаказу.Объект
		|			И ВТОбъектыКалькуляции.Номенклатура = ВыходныеИзделияПоЗаказу.Номенклатура
		|			И ВТОбъектыКалькуляции.Характеристика = ВыходныеИзделияПоЗаказу.Характеристика
		|			И ВТОбъектыКалькуляции.Назначение = ВыходныеИзделияПоЗаказу.Назначение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсегоДолейСтоимости КАК ВсегоДолейСтоимости
		|		ПО (ВыходныеИзделияПоЗаказу.ВыпускающийЭтап = ВсегоДолейСтоимости.Объект)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период,
		|	&Ссылка,
		|	ВТОбъектыКалькуляции.Номенклатура,
		|	ВТОбъектыКалькуляции.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка),
		|	ВыходныеИзделияПоСпецификации.Спецификация,
		|	НЕОПРЕДЕЛЕНО,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
		|	0,
		|	ВыходныеИзделияПоСпецификации.ДоляСтоимости,
		|	ВЫБОР 
		|		КОГДА ВсегоДолейСтоимости.ВсегоДолей = 0
		|			ТОГДА 1
		|		ИНАЧЕ
		|			ВсегоДолейСтоимости.ВсегоДолей
		|	КОНЕЦ,
		|	ВыходныеИзделияПоСпецификации.Количество,
		|	ЛОЖЬ
		|ИЗ
		|	ВТОбъектыКалькуляции КАК ВТОбъектыКалькуляции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыходныеИзделияПоСпецификации КАК ВыходныеИзделияПоСпецификации
		|		ПО ВТОбъектыКалькуляции.Объект = ВыходныеИзделияПоСпецификации.Спецификация
		|			И ВТОбъектыКалькуляции.Номенклатура = ВыходныеИзделияПоСпецификации.Номенклатура
		|			И (ВТОбъектыКалькуляции.Характеристика = ВыходныеИзделияПоСпецификации.Характеристика 
		|				ИЛИ ВыходныеИзделияПоСпецификации.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсегоДолейСтоимости КАК ВсегоДолейСтоимости
		|		ПО (ВыходныеИзделияПоСпецификации.Спецификация = ВсегоДолейСтоимости.Объект)
		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации КАК РесурсныеСпецификации
		|		ПО ВТОбъектыКалькуляции.Объект = РесурсныеСпецификации.Ссылка
		|			И (РесурсныеСпецификации.ТипПроизводственногоПроцесса В (ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка), ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Ремонт)))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаВТОбъектыКалькуляции(Запрос, ТекстыЗапроса)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОбъектыКалькуляции.Номенклатура,
		|	ОбъектыКалькуляции.Характеристика,
		|	ОбъектыКалькуляции.Назначение,
		|	ОбъектыКалькуляции.Объект
		|ПОМЕСТИТЬ ВТОбъектыКалькуляции
		|ИЗ
		|	Документ.ПлановаяКалькуляция2_2.ОбъектыКалькуляции КАК ОбъектыКалькуляции
		|ГДЕ
		|	ОбъектыКалькуляции.Ссылка = &Ссылка";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВТОбъектыКалькуляции");
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОбъектыКалькуляции.Объект КАК Объект
		|ПОМЕСТИТЬ ОбъектыКРазузлованию
		|ИЗ
		|	ВТОбъектыКалькуляции КАК ОбъектыКалькуляции
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Объект";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВТОбъектыКалькуляции");
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ОбъектыКРазузлованию.Объект КАК Объект,
		|	ВыходныеИзделия.Номенклатура КАК Номенклатура,
		|	ВыходныеИзделия.Характеристика КАК Характеристика,
		|	ВыходныеИзделия.Назначение КАК Назначение,
		|	ВыходныеИзделия.Ссылка КАК ВыпускающийЭтап,
		|	СУММА(ВЫБОР
		|			КОГДА ВыходныеИзделия.ДоляСтоимости = 0
		|				ТОГДА 1
		|			ИНАЧЕ ВыходныеИзделия.ДоляСтоимости
		|		КОНЕЦ) КАК ДоляСтоимости,
		|	СУММА(ВыходныеИзделия.Количество) КАК Количество
		|ПОМЕСТИТЬ ВыходныеИзделияПоЗаказу
		|ИЗ
		|	ОбъектыКРазузлованию КАК ОбъектыКРазузлованию
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ВыходныеИзделия
		|		ПО &УсловияСоединения
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъектыКРазузлованию.Объект,
		|	ВыходныеИзделия.Назначение,
		|	ВыходныеИзделия.Номенклатура,
		|	ВыходныеИзделия.Характеристика,
		|	ВыходныеИзделия.Ссылка";
	
	ВыбираемыеПоля = Новый Структура;
	ВыбираемыеПоля.Вставить("Номенклатура",   "ВыходныеИзделия.Номенклатура");
	ВыбираемыеПоля.Вставить("Характеристика", "ВыходныеИзделия.Характеристика");
	ВыбираемыеПоля.Вставить("Назначение",     "ВыходныеИзделия.Назначение");
	ВыбираемыеПоля.Вставить("ДоляСтоимости",  "ВыходныеИзделия.ДоляСтоимости");
	ВыбираемыеПоля.Вставить("Количество",     "ВыходныеИзделия.Количество");
	
	ТекстЗапроса = Документы.ЭтапПроизводства2_2.ПодставитьВыбираемыеПоля(ТекстЗапроса, ВыбираемыеПоля);
	ТекстЗапроса = Документы.ЭтапПроизводства2_2.ПодставитьСоединениеДляПолученияВыходныхИзделий(ТекстЗапроса, 
		"УсловияСоединения",
		Новый Структура("Распоряжение", "ОбъектыКРазузлованию.Объект"));
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВыходныеИзделияПоЗаказу");
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ИзделияСпецификаций.Номенклатура КАК Номенклатура,
		|	ИзделияСпецификаций.Характеристика КАК Характеристика,
		|	ИзделияСпецификаций.Спецификация КАК Спецификация,
		|	ИзделияСпецификаций.ДоляСтоимости КАК ДоляСтоимости,
		|	ИзделияСпецификаций.ВсегоДолей КАК ВсегоДолей,
		|	ИзделияСпецификаций.КоличествоИзделие КАК Количество
		|ПОМЕСТИТЬ РезультатыРазузлования
		|ИЗ
		|	&ИзделияСпецификаций КАК ИзделияСпецификаций";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "РезультатыРазузлования");
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВТОбъектыКалькуляции.Номенклатура КАК Номенклатура,
		|	ВТОбъектыКалькуляции.Характеристика КАК Характеристика,
		|	ВТОбъектыКалькуляции.Объект КАК Спецификация,
		|	МАКСИМУМ(РезультатыРазузлования.ДоляСтоимости) КАК ДоляСтоимости,
		|	МАКСИМУМ(РезультатыРазузлования.Количество) КАК Количество
		|ПОМЕСТИТЬ ВыходныеИзделияПоСпецификации
		|ИЗ
		|	ВТОбъектыКалькуляции КАК ВТОбъектыКалькуляции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РезультатыРазузлования КАК РезультатыРазузлования
		|		ПО ВТОбъектыКалькуляции.Номенклатура = РезультатыРазузлования.Номенклатура
		|			И ВТОбъектыКалькуляции.Характеристика = РезультатыРазузлования.Характеристика
		|			И ВТОбъектыКалькуляции.Объект = РезультатыРазузлования.Спецификация
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТОбъектыКалькуляции.Номенклатура,
		|	ВТОбъектыКалькуляции.Характеристика,
		|	ВТОбъектыКалькуляции.Объект";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВыходныеИзделияПоСпецификации");
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ОбъектыКРазузлованию.Объект КАК Объект,
		|	МАКСИМУМ(РезультатыРазузлования.ВсегоДолей) КАК ВсегоДолей
		|ПОМЕСТИТЬ ВсегоДолейСтоимости
		|ИЗ
		|	ОбъектыКРазузлованию КАК ОбъектыКРазузлованию
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РезультатыРазузлования КАК РезультатыРазузлования
		|		ПО ОбъектыКРазузлованию.Объект = РезультатыРазузлования.Спецификация
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъектыКРазузлованию.Объект
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВыходныеИзделияПоЗаказу.ВыпускающийЭтап,
		|	СУММА(ВЫБОР
		|			КОГДА ВыходныеИзделияПоЗаказу.ДоляСтоимости = 0
		|				ТОГДА 1
		|			ИНАЧЕ ВыходныеИзделияПоЗаказу.ДоляСтоимости
		|		КОНЕЦ)
		|ИЗ
		|	ВыходныеИзделияПоЗаказу КАК ВыходныеИзделияПоЗаказу
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыходныеИзделияПоЗаказу.ВыпускающийЭтап
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Объект";
	
	ПараметрыПодстановки = ПроизводствоСервер.ПараметрыПодстановкиАлгоритмаРасчетаДолейСтоимости("Изделия", "Реквизиты.СпособРаспределенияЗатратНаВыходныеИзделия");
	ПараметрыПодстановки.ДоляСтоимости = "&ДоляСтоимости";
	ПараметрыПодстановки.СоединениеДоляСтоимости = "И &СоединениеДоляСтоимости";
	ПараметрыПодстановки.Дата = "&Период";
	
	ПроизводствоСервер.ВыполнитьПодстановкуАлгоритмаРасчетаДолейСтоимости(ТекстЗапроса, ПараметрыПодстановки);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВсегоДолейСтоимости");
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Процедура УстановитьВыходныеИзделияПоСпецификации(Запрос)
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Объекты.Номенклатура КАК Номенклатура,
		|	Объекты.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	Объекты.Характеристика КАК Характеристика,
		|	Объекты.Количество КАК Количество,
		|	Объекты.Объект КАК Спецификация,
		|	Реквизиты.Дата КАК НачалоПроизводства,
		|	Реквизиты.ПодразделениеДиспетчер КАК ПодразделениеДиспетчер,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности
		|ИЗ
		|	Документ.ПлановаяКалькуляция2_2.ОбъектыКалькуляции КАК Объекты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПлановаяКалькуляция2_2 КАК Реквизиты
		|		ПО Объекты.Ссылка = Реквизиты.Ссылка
		|ГДЕ
		|	Реквизиты.Ссылка = &Ссылка
		|	И Реквизиты.ОбъектКалькуляции = ЗНАЧЕНИЕ(Перечисление.ОбъектыКалькуляции.РесурснаяСпецификация)";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СписокНоменклатуры = Справочники.РесурсныеСпецификации.СписокНоменклатуры();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = СписокНоменклатуры.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла;
	
	КЧ = Новый КвалификаторыЧисла(10, 3);
	Изделия = Новый ТаблицаЗначений;
	Изделия.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Изделия.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Изделия.Колонки.Добавить("Спецификация", Новый ОписаниеТипов("СправочникСсылка.РесурсныеСпецификации"));
	Изделия.Колонки.Добавить("ДоляСтоимости", Новый ОписаниеТипов("Число", КЧ));
	Изделия.Колонки.Добавить("ВсегоДолей", Новый ОписаниеТипов("Число", КЧ));
	Изделия.Колонки.Добавить("КоличествоИзделие", Новый ОписаниеТипов("Число", КЧ));
	
	ПараметрыВыборки = Справочники.РесурсныеСпецификации.ПараметрыВыборкиДанных("ВыходныеИзделия");
	ПараметрыВыборки.ПереопределениеНастройкиПартииВыпуска.Использовать = Истина;
	ПараметрыВыборки.ОкруглятьКоличествоШтучныхТоваров = Ложь;
	ПараметрыВыборки.РассчитыватьДолиСтоимостиВыходныхИзделий = Истина;
	
	ПараметрыВыборки.Вставить("ОтключитьРасчетПараметрическихФормул", Истина);
	
	ДанныеСпецификаций = Справочники.РесурсныеСпецификации.ДанныеСпецификацииПоСпискуНоменклатуры(СписокНоменклатуры, ПараметрыВыборки);
	
	Индекс = 0;
	Пока Индекс < ДанныеСпецификаций.Количество() Цикл
		
		ДанныеСпецификации = ДанныеСпецификаций[Индекс];
		ДанныеПоНоменклатуре = СписокНоменклатуры[Индекс];
		Индекс = Индекс + 1;
		
		ВыходныеИзделия = ДанныеСпецификации.ВыходныеИзделия;
		КлючПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(КлючПоиска, ДанныеПоНоменклатуре);
		
		ДанныеПоИзделию = ВыходныеИзделия.НайтиСтроки(КлючПоиска);
		Если ДанныеПоИзделию.Количество() = 0 Тогда
			
			КлючПоиска.Характеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
			ДанныеПоИзделию = ВыходныеИзделия.НайтиСтроки(КлючПоиска);
			
			Если ДанныеПоИзделию.Количество() = 0 Тогда
				
				КлючПоиска = Новый Структура("ВидНоменклатуры");
				ЗаполнитьЗначенияСвойств(КлючПоиска, ДанныеПоНоменклатуре);
				
				ДанныеПоИзделию = ВыходныеИзделия.НайтиСтроки(КлючПоиска);
				Если ДанныеПоИзделию.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		НовоеИзделие = Изделия.Добавить();
		ЗаполнитьЗначенияСвойств(НовоеИзделие, ДанныеПоНоменклатуре);
		Для Каждого Изделие Из ДанныеПоИзделию Цикл
			
			НовоеИзделие.КоличествоИзделие = НовоеИзделие.КоличествоИзделие
				+ Изделие.КоличествоУпаковокНаЕдиницуПартииВыпуска * Изделие.ДанныеУпаковки.Числитель / Изделие.ДанныеУпаковки.Знаменатель;
			Если Изделие.ДоляСтоимостиНаЕдиницу = 0 Тогда
				НовоеИзделие.ДоляСтоимости = 1;
			Иначе
				НовоеИзделие.ДоляСтоимости = НовоеИзделие.ДоляСтоимости + Изделие.ДоляСтоимостиНаЕдиницу;
			КонецЕсли;
			
		КонецЦикла;
		
		Для каждого Изделие Из ВыходныеИзделия Цикл
			НовоеИзделие.ВсегоДолей = НовоеИзделие.ВсегоДолей + Изделие.ДоляСтоимостиНаЕдиницу
				* Изделие.КоличествоУпаковокНаЕдиницуПартииВыпуска * Изделие.ДанныеУпаковки.Числитель / Изделие.ДанныеУпаковки.Знаменатель;
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ИзделияСпецификаций", Изделия);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов - см. УправлениеПечатьюПереопределяемый.ПриПечати.МассивОбъектов
//  ПараметрыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыПечати
//  КоллекцияПечатныхФорм - см. УправлениеПечатьюПереопределяемый.ПриПечати.КоллекцияПечатныхФорм
//  ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//  ПараметрыВывода - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыВывода
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПлановаяКалькуляцияСводно") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПлановаяКалькуляцияСводно", НСтр("ru = 'Калькуляция продукции (сводно)';
																														|en = 'Product costing (summary)'"), СформироватьПечатнуюФормуКалькуляции(МассивОбъектов, ОбъектыПечати, Истина));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПлановаяКалькуляцияПодробно") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПлановаяКалькуляцияПодробно", НСтр("ru = 'Калькуляция продукции (подробно)';
																														|en = 'Product costing (detailed)'"), СформироватьПечатнуюФормуКалькуляции(МассивОбъектов, ОбъектыПечати, Ложь));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПротоколОшибок") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПротоколОшибок", НСтр("ru = 'Протокол ошибок';
																											|en = 'Error log'"), СформироватьПечатнуюФормуПротоколаОшибок(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуКалькуляции(МассивОбъектов, ОбъектыПечати, Сводно)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПлановаяКалькуляция2_2.ПФ_MXL_ПлановаяКалькуляция");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Реквизиты.Организация КАК Организация,
		|	Реквизиты.Ссылка КАК Ссылка,
		|	Реквизиты.ОбъектКалькуляции КАК ОбъектКалькуляции,
		|	ПлановаяКалькуляция.Номенклатура КАК Номенклатура,
		|	ПлановаяКалькуляция.Характеристика КАК Характеристика,
		|	ПлановаяКалькуляция.Назначение КАК Назначение,
		|	ПлановаяКалькуляция.Объект КАК Объект,
		|	ПлановаяКалькуляция.Упаковка КАК Упаковка,
		|	ПлановаяКалькуляция.Количество КАК Количество,
		|	ПлановаяКалькуляция.КоличествоУпаковок КАК КоличествоУпаковок,
		|	Реквизиты.Номер КАК Номер,
		|	Реквизиты.Дата КАК Дата,
		|	Реквизиты.Ответственный.ФизическоеЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ШапкаТаблицы
		|ИЗ
		|	Документ.ПлановаяКалькуляция2_2.ОбъектыКалькуляции КАК ПлановаяКалькуляция
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПлановаяКалькуляция2_2 КАК Реквизиты
		|		ПО ПлановаяКалькуляция.Ссылка = Реквизиты.Ссылка
		|ГДЕ
		|	Реквизиты.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МножителиПартийИПолуфабрикатов.Продукция КАК Продукция,
		|	МножителиПартийИПолуфабрикатов.ХарактеристикаПродукции КАК ХарактеристикаПродукции,
		|	МножителиПартийИПолуфабрикатов.Назначение КАК Назначение,
		|	МножителиПартийИПолуфабрикатов.ПартияСпецификацияПродукции КАК ПартияСпецификацияПродукции,
		|	МножителиПартийИПолуфабрикатов.Калькуляция КАК Калькуляция,
		|	СУММА(МножителиПартийИПолуфабрикатов.КоличествоПолуфабриката) КАК ВсегоКоличество
		|ПОМЕСТИТЬ РассчитанноеКоличество
		|ИЗ
		|	РегистрСведений.МножителиПартийИПолуфабрикатов КАК МножителиПартийИПолуфабрикатов
		|ГДЕ
		|	МножителиПартийИПолуфабрикатов.Калькуляция В(&МассивОбъектов)
		|	И МножителиПартийИПолуфабрикатов.Полуфабрикат = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	МножителиПартийИПолуфабрикатов.ПартияСпецификацияПродукции,
		|	МножителиПартийИПолуфабрикатов.Продукция,
		|	МножителиПартийИПолуфабрикатов.ХарактеристикаПродукции,
		|	МножителиПартийИПолуфабрикатов.Назначение,
		|	МножителиПартийИПолуфабрикатов.Калькуляция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РассчитанноеКоличество.ПартияСпецификацияПродукции КАК ПартияСпецификацияПродукции,
		|	РассчитанноеКоличество.Продукция КАК Продукция,
		|	РассчитанноеКоличество.ХарактеристикаПродукции КАК ХарактеристикаПродукции,
		|	РассчитанноеКоличество.Назначение КАК Назначение,
		|	РассчитанноеКоличество.Калькуляция КАК Калькуляция,
		|	РеквизитыЭтапа.Распоряжение КАК Распоряжение,
		|	ШапкаТаблицы.Количество / РассчитанноеКоличество.ВсегоКоличество КАК ДоляСтоимости
		|ПОМЕСТИТЬ ДолиСтоимости
		|ИЗ
		|	РассчитанноеКоличество КАК РассчитанноеКоличество
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
		|		ПО РассчитанноеКоличество.ПартияСпецификацияПродукции = РеквизитыЭтапа.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ШапкаТаблицы КАК ШапкаТаблицы
		|		ПО РассчитанноеКоличество.Калькуляция = ШапкаТаблицы.Ссылка
		|			И РассчитанноеКоличество.Продукция = ШапкаТаблицы.Номенклатура
		|			И РассчитанноеКоличество.ХарактеристикаПродукции = ШапкаТаблицы.Характеристика
		|			И РассчитанноеКоличество.Назначение = ШапкаТаблицы.Назначение
		|			И (ЕСТЬNULL(РеквизитыЭтапа.Распоряжение, РассчитанноеКоличество.ПартияСпецификацияПродукции) = ШапкаТаблицы.Объект)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Множители.Калькуляция КАК Калькуляция,
		|	СписокОбъектов.Объект КАК Объект,
		|	Множители.ПартияСпецификацияПродукции КАК Партия
		|ПОМЕСТИТЬ СоответствиеОбъектовИПартий
		|ИЗ
		|	РегистрСведений.МножителиПартийИПолуфабрикатов КАК Множители
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
		|		ПО Множители.ПартияСпецификацияПродукции = РеквизитыЭтапа.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлановаяКалькуляция2_2.ОбъектыКалькуляции КАК СписокОбъектов
		|		ПО Множители.Калькуляция = СписокОбъектов.Ссылка
		|			И Множители.Продукция = СписокОбъектов.Номенклатура
		|			И Множители.ХарактеристикаПродукции = СписокОбъектов.Характеристика
		|			И Множители.Назначение = СписокОбъектов.Назначение
		|			И (ЕСТЬNULL(РеквизитыЭтапа.Распоряжение, Множители.ПартияСпецификацияПродукции) = СписокОбъектов.Объект)
		|ГДЕ
		|	Множители.Калькуляция В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МножителиПартийИПолуфабрикатов.Калькуляция КАК Калькуляция,
		|	МножителиПартийИПолуфабрикатов.Продукция КАК Продукция,
		|	МножителиПартийИПолуфабрикатов.ХарактеристикаПродукции КАК ХарактеристикаПродукции,
		|	МножителиПартийИПолуфабрикатов.ПартияСпецификацияПродукции КАК ПартияСпецификацияПродукции,
		|	МножителиПартийИПолуфабрикатов.Полуфабрикат КАК Полуфабрикат,
		|	МножителиПартийИПолуфабрикатов.ХарактеристикаПолуфабриката КАК ХарактеристикаПолуфабриката,
		|	МножителиПартийИПолуфабрикатов.ПартияСпецификацияПолуфабриката КАК ПартияСпецификацияПолуфабриката,
		|	СУММА(МножителиПартийИПолуфабрикатов.КоличествоПолуфабриката * ДолиСтоимости.ДоляСтоимости) КАК КоличествоПолуфабриката,
		|	СУММА(МножителиПартийИПолуфабрикатов.Числитель * ДолиСтоимости.ДоляСтоимости) КАК Числитель,
		|	МножителиПартийИПолуфабрикатов.Знаменатель КАК Знаменатель,
		|	МножителиПартийИПолуфабрикатов.ПартияВыпущена КАК ПартияВыпущена,
		|	ВЫБОР
		|		КОГДА МножителиПартийИПолуфабрикатов.Полуфабрикат = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоПродукция,
		|	МножителиПартийИПолуфабрикатов.Назначение КАК Назначение,
		|	СУММА(ДолиСтоимости.ДоляСтоимости) КАК ДоляСтоимости
		|ПОМЕСТИТЬ ОбщиеМножители
		|ИЗ
		|	РегистрСведений.МножителиПартийИПолуфабрикатов КАК МножителиПартийИПолуфабрикатов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолиСтоимости КАК ДолиСтоимости
		|		ПО МножителиПартийИПолуфабрикатов.Калькуляция = ДолиСтоимости.Калькуляция
		|			И МножителиПартийИПолуфабрикатов.ПартияСпецификацияПродукции = ДолиСтоимости.ПартияСпецификацияПродукции
		|			И МножителиПартийИПолуфабрикатов.Продукция = ДолиСтоимости.Продукция
		|			И МножителиПартийИПолуфабрикатов.ХарактеристикаПродукции = ДолиСтоимости.ХарактеристикаПродукции
		|			И МножителиПартийИПолуфабрикатов.Назначение = ДолиСтоимости.Назначение
		|
		|СГРУППИРОВАТЬ ПО
		|	МножителиПартийИПолуфабрикатов.ПартияСпецификацияПродукции,
		|	МножителиПартийИПолуфабрикатов.ХарактеристикаПродукции,
		|	МножителиПартийИПолуфабрикатов.Продукция,
		|	МножителиПартийИПолуфабрикатов.Калькуляция,
		|	МножителиПартийИПолуфабрикатов.ХарактеристикаПолуфабриката,
		|	МножителиПартийИПолуфабрикатов.Полуфабрикат,
		|	МножителиПартийИПолуфабрикатов.ПартияСпецификацияПолуфабриката,
		|	МножителиПартийИПолуфабрикатов.ПартияВыпущена,
		|	МножителиПартийИПолуфабрикатов.Знаменатель,
		|	МножителиПартийИПолуфабрикатов.Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбщиеМножители.Калькуляция КАК Калькуляция,
		|	ОбщиеМножители.Продукция КАК Продукция,
		|	ОбщиеМножители.ХарактеристикаПродукции КАК ХарактеристикаПродукции,
		|	ОбщиеМножители.ПартияСпецификацияПродукции КАК ПартияСпецификацияПродукции,
		|	ОбщиеМножители.Полуфабрикат КАК Полуфабрикат,
		|	ОбщиеМножители.ХарактеристикаПолуфабриката КАК ХарактеристикаПолуфабриката,
		|	ОбщиеМножители.ПартияСпецификацияПолуфабриката КАК ПартияСпецификацияПолуфабриката,
		|	ЭтапПроизводства2_2ВыходныеИзделия.Количество КАК КоличествоПолуфабриката,
		|	ОбщиеМножители.Числитель КАК Числитель,
		|	ОбщиеМножители.Знаменатель КАК Знаменатель,
		|	ОбщиеМножители.ПартияВыпущена КАК ПартияВыпущена,
		|	ОбщиеМножители.ЭтоПродукция КАК ЭтоПродукция,
		|	ОбщиеМножители.Назначение КАК Назначение,
		|	ОбщиеМножители.ДоляСтоимости КАК ДоляСтоимости,
		|	ВЫБОР
		|		КОГДА ОбщиеМножители.Продукция.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			ТОГДА АналитикиУчетаПартийРабот.КлючАналитики
		|		ИНАЧЕ АналитикиУчетаПартийТоваров.КлючАналитики
		|	КОНЕЦ КАК АналитикаУчетаПартий
		|ПОМЕСТИТЬ ОбщиеМножителиСАналитикойПартии
		|ИЗ
		|	ОбщиеМножители КАК ОбщиеМножители
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ЭтапПроизводства2_2ВыходныеИзделия
		|		ПО ОбщиеМножители.ПартияСпецификацияПродукции = ЭтапПроизводства2_2ВыходныеИзделия.Ссылка
		|			И ОбщиеМножители.Продукция = ЭтапПроизводства2_2ВыходныеИзделия.Номенклатура
		|			И ОбщиеМножители.ХарактеристикаПродукции = ЭтапПроизводства2_2ВыходныеИзделия.Характеристика
		|			И ОбщиеМножители.Назначение = ЭтапПроизводства2_2ВыходныеИзделия.Назначение
		|			И (НЕ ЭтапПроизводства2_2ВыходныеИзделия.Отменено)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиУчетаПартийТоваров
		|		ПО (АналитикиУчетаПартийТоваров.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
		|			И (АналитикиУчетаПартийТоваров.Поставщик = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
		|			И (АналитикиУчетаПартийТоваров.Контрагент = НЕОПРЕДЕЛЕНО)
		|			И (АналитикиУчетаПартийТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))
		|			И (АналитикиУчетаПартийТоваров.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
		|			И (АналитикиУчетаПартийТоваров.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
		|			И (АналитикиУчетаПартийТоваров.КодСтроки = ЭтапПроизводства2_2ВыходныеИзделия.КодСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиУчетаПартийРабот
		|		ПО (АналитикиУчетаПартийРабот.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
		|			И (АналитикиУчетаПартийРабот.Поставщик = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
		|			И (АналитикиУчетаПартийРабот.Контрагент = НЕОПРЕДЕЛЕНО)
		|			И (АналитикиУчетаПартийРабот.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))
		|			И (АналитикиУчетаПартийРабот.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
		|			И (АналитикиУчетаПартийРабот.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги))
		|			И (АналитикиУчетаПартийРабот.КодСтроки = ЭтапПроизводства2_2ВыходныеИзделия.КодСтроки)
		|ГДЕ
		|	ОбщиеМножители.ПартияВыпущена
		|	И ОбщиеМножители.ЭтоПродукция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Множители.Калькуляция КАК Калькуляция,
		|	Множители.ПартияСпецификацияПродукции,
		|	Множители.Продукция КАК Продукция,
		|	Множители.ХарактеристикаПродукции КАК ХарактеристикаПродукции,
		|	Множители.Назначение КАК Назначение,
		|	Множители.КоличествоПолуфабриката КАК КоличествоПолуфабриката,
		|	ВЫБОР
		|		КОГДА ПлановыеМатериальныеЗатраты.Количество < 0
		|			ТОГДА ""ВозвратныеОтходы""
		|		ИНАЧЕ
		|			""Материальные""
		|	КОНЕЦ КАК ТипЗатрат,
		|	ПлановыеМатериальныеЗатраты.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|	ПлановыеМатериальныеЗатраты.Номенклатура КАК Номенклатура,
		|	ПлановыеМатериальныеЗатраты.Номенклатура.ЕдиницаИзмерения КАК НоменклатураЕдиницаИзмерения,
		|	ПлановыеМатериальныеЗатраты.Характеристика КАК Характеристика,
		|	ПлановыеМатериальныеЗатраты.Количество * Множители.Числитель / Множители.Знаменатель КАК Количество,
		|	ВЫБОР
		|		КОГДА ПлановыеМатериальныеЗатраты.ЭтоПолуфабрикат
		|			ТОГДА 0
		|		ИНАЧЕ ПлановыеМатериальныеЗатраты.СтоимостьРегл * Множители.Числитель / Множители.Знаменатель
		|	КОНЕЦ КАК Стоимость,
		|	ВЫБОР
		|		КОГДА ПлановыеМатериальныеЗатраты.ЭтоПолуфабрикат
		|			ТОГДА 0
		|		ИНАЧЕ ПлановыеМатериальныеЗатраты.СтоимостьЗабалансоваяРегл * Множители.Числитель / Множители.Знаменатель
		|	КОНЕЦ КАК СтоимостьЗабалансовая
		|ПОМЕСТИТЬ ПлановыеЗатраты
		|ИЗ
		|	ОбщиеМножители КАК Множители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПлановыеМатериальныеЗатраты КАК ПлановыеМатериальныеЗатраты
		|		ПО Множители.Калькуляция = ПлановыеМатериальныеЗатраты.Калькуляция
		|			И Множители.ПартияСпецификацияПродукции = ПлановыеМатериальныеЗатраты.ПартияСпецификация
		|ГДЕ
		|	НЕ Множители.ПартияВыпущена
		|	И Множители.ЭтоПродукция
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Множители.Калькуляция,
		|	Множители.ПартияСпецификацияПродукции,
		|	Множители.Продукция,
		|	Множители.ХарактеристикаПродукции,
		|	Множители.Назначение,
		|	Множители.КоличествоПолуфабриката,
		|	""ОплатаТруда"",
		|	ПлановыеТрудозатраты.СтатьяКалькуляции,
		|	ПлановыеТрудозатраты.ВидРабот,
		|	ПлановыеТрудозатраты.ВидРабот.ЕдиницаИзмерения,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
		|	ПлановыеТрудозатраты.Количество * Множители.Числитель / Множители.Знаменатель,
		|	ПлановыеТрудозатраты.СтоимостьРегл * Множители.Числитель / Множители.Знаменатель,
		|	0
		|ИЗ
		|	ОбщиеМножители КАК Множители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПлановыеТрудозатраты КАК ПлановыеТрудозатраты
		|		ПО Множители.Калькуляция = ПлановыеТрудозатраты.Калькуляция
		|			И Множители.ПартияСпецификацияПродукции = ПлановыеТрудозатраты.ПартияСпецификация
		|ГДЕ
		|	НЕ Множители.ПартияВыпущена
		|	И Множители.ЭтоПродукция
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Множители.Калькуляция,
		|	Множители.ПартияСпецификацияПродукции,
		|	Множители.Продукция,
		|	Множители.ХарактеристикаПродукции,
		|	Множители.Назначение,
		|	Множители.КоличествоПолуфабриката,
		|	""Постатейные"",
		|	ПлановыеПрочиеЗатраты.СтатьяКалькуляции,
		|	ПлановыеПрочиеЗатраты.СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
		|	0,
		|	ПлановыеПрочиеЗатраты.СтоимостьРегл * Множители.Числитель / Множители.Знаменатель,
		|	0
		|ИЗ
		|	ОбщиеМножители КАК Множители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПлановыеПрочиеЗатраты КАК ПлановыеПрочиеЗатраты
		|		ПО Множители.Калькуляция = ПлановыеПрочиеЗатраты.Калькуляция
		|			И Множители.ПартияСпецификацияПродукции = ПлановыеПрочиеЗатраты.ПартияСпецификация
		|ГДЕ
		|	НЕ Множители.ПартияВыпущена
		|	И Множители.ЭтоПродукция
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Множители.Калькуляция,
		|	Множители.ПартияСпецификацияПродукции,
		|	Множители.Продукция,
		|	Множители.ХарактеристикаПродукции,
		|	Множители.Назначение,
		|	Множители.КоличествоПолуфабриката,
		|	ВЫБОР
		|		КОГДА ПлановыеМатериальныеЗатраты.Количество < 0
		|			ТОГДА ""ВозвратныеОтходы""
		|		ИНАЧЕ
		|			""Материальные""
		|	КОНЕЦ КАК ТипЗатрат,
		|	ПлановыеМатериальныеЗатраты.СтатьяКалькуляции,
		|	ПлановыеМатериальныеЗатраты.Номенклатура,
		|	ПлановыеМатериальныеЗатраты.Номенклатура.ЕдиницаИзмерения,
		|	ПлановыеМатериальныеЗатраты.Характеристика,
		|	ПлановыеМатериальныеЗатраты.Количество * Множители.Числитель / Множители.Знаменатель,
		|	ВЫБОР
		|		КОГДА ПлановыеМатериальныеЗатраты.ЭтоПолуфабрикат
		|			ТОГДА 0
		|		ИНАЧЕ ПлановыеМатериальныеЗатраты.СтоимостьРегл * Множители.Числитель / Множители.Знаменатель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ПлановыеМатериальныеЗатраты.ЭтоПолуфабрикат
		|			ТОГДА 0
		|		ИНАЧЕ ПлановыеМатериальныеЗатраты.СтоимостьЗабалансоваяРегл * Множители.Числитель / Множители.Знаменатель
		|	КОНЕЦ
		|ИЗ
		|	ОбщиеМножители КАК Множители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПлановыеМатериальныеЗатраты КАК ПлановыеМатериальныеЗатраты
		|		ПО Множители.Калькуляция = ПлановыеМатериальныеЗатраты.Калькуляция
		|			И Множители.ПартияСпецификацияПолуфабриката = ПлановыеМатериальныеЗатраты.ПартияСпецификация
		|ГДЕ
		|	НЕ Множители.ПартияВыпущена
		|	И НЕ Множители.ЭтоПродукция
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Множители.Калькуляция,
		|	Множители.ПартияСпецификацияПродукции,
		|	Множители.Продукция,
		|	Множители.ХарактеристикаПродукции,
		|	Множители.Назначение,
		|	Множители.КоличествоПолуфабриката,
		|	""ОплатаТруда"",
		|	ПлановыеТрудозатраты.СтатьяКалькуляции,
		|	ПлановыеТрудозатраты.ВидРабот,
		|	ПлановыеТрудозатраты.ВидРабот.ЕдиницаИзмерения,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
		|	ПлановыеТрудозатраты.Количество * Множители.Числитель / Множители.Знаменатель,
		|	ПлановыеТрудозатраты.СтоимостьРегл * Множители.Числитель / Множители.Знаменатель,
		|	0
		|ИЗ
		|	ОбщиеМножители КАК Множители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПлановыеТрудозатраты КАК ПлановыеТрудозатраты
		|		ПО Множители.Калькуляция = ПлановыеТрудозатраты.Калькуляция
		|			И Множители.ПартияСпецификацияПолуфабриката = ПлановыеТрудозатраты.ПартияСпецификация
		|ГДЕ
		|	НЕ Множители.ПартияВыпущена
		|	И НЕ Множители.ЭтоПродукция
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Множители.Калькуляция,
		|	Множители.ПартияСпецификацияПродукции,
		|	Множители.Продукция,
		|	Множители.ХарактеристикаПродукции,
		|	Множители.Назначение,
		|	Множители.КоличествоПолуфабриката,
		|	""Постатейные"",
		|	ПлановыеПрочиеЗатраты.СтатьяКалькуляции,
		|	ПлановыеПрочиеЗатраты.СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
		|	0,
		|	ПлановыеПрочиеЗатраты.СтоимостьРегл * Множители.Числитель / Множители.Знаменатель,
		|	0
		|ИЗ
		|	ОбщиеМножители КАК Множители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПлановыеПрочиеЗатраты КАК ПлановыеПрочиеЗатраты
		|		ПО Множители.Калькуляция = ПлановыеПрочиеЗатраты.Калькуляция
		|			И Множители.ПартияСпецификацияПолуфабриката = ПлановыеПрочиеЗатраты.ПартияСпецификация
		|ГДЕ
		|	НЕ Множители.ПартияВыпущена
		|	И НЕ Множители.ЭтоПродукция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбщиеМножителиСАналитикойПартии.Калькуляция КАК Калькуляция,
		|	ОбщиеМножителиСАналитикойПартии.Продукция КАК Продукция,
		|	ОбщиеМножителиСАналитикойПартии.ХарактеристикаПродукции КАК ХарактеристикаПродукции,
		|	ОбщиеМножителиСАналитикойПартии.КоличествоПолуфабриката КАК КоличествоПолуфабриката,
		|	СебестоимостьТоваров.Партия КАК ПартияПроизводства,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.МестоХранения КАК Подразделение,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	СУММА(СебестоимостьТоваров.Количество) КАК Количество,
		|	СУММА(СебестоимостьТоваров.СтоимостьРегл) КАК Стоимость,
		|	""Материальные"" КАК ТипЗатрат,
		|	ОбщиеМножителиСАналитикойПартии.Продукция.ЕдиницаИзмерения КАК ПродукцияЕдиницаИзмерения,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК НоменклатураЕдиницаИзмерения,
		|	ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции КАК ПартияСпецификацияПродукции,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ОбщиеМножителиСАналитикойПартии.Числитель КАК Числитель,
		|	ОбщиеМножителиСАналитикойПартии.Знаменатель КАК Знаменатель,
		|	ОбщиеМножителиСАналитикойПартии.Продукция КАК Полуфабрикат,
		|	ОбщиеМножителиСАналитикойПартии.ХарактеристикаПродукции КАК ХарактеристикаПолуфабриката,
		|	ОбщиеМножителиСАналитикойПартии.ЭтоПродукция КАК ЭтоПродукция,
		|	ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции КАК ПартияПолуфабриката,
		|	ОбщиеМножителиСАналитикойПартии.Назначение КАК Назначение,
		|	СУММА(СебестоимостьТоваров.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансовая
		|ПОМЕСТИТЬ ФактическиеЗатраты
		|ИЗ
		|	ОбщиеМножителиСАналитикойПартии КАК ОбщиеМножителиСАналитикойПартии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
		|		ПО ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции = СебестоимостьТоваров.КорПартия
		|			И ОбщиеМножителиСАналитикойПартии.АналитикаУчетаПартий = СебестоимостьТоваров.КорАналитикаУчетаПартий
		|			И (СебестоимостьТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
		|			И (НЕ СебестоимостьТоваров.Партия = НЕОПРЕДЕЛЕНО)
		|ГДЕ
		|	ОбщиеМножителиСАналитикойПартии.ПартияВыпущена
		|	И ОбщиеМножителиСАналитикойПартии.ЭтоПродукция
		|	И НЕ СебестоимостьТоваров.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.СтатьяКалькуляции,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура,
		|	СебестоимостьТоваров.Партия,
		|	ОбщиеМножителиСАналитикойПартии.ХарактеристикаПродукции,
		|	ОбщиеМножителиСАналитикойПартии.Продукция,
		|	ОбщиеМножителиСАналитикойПартии.Калькуляция,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.МестоХранения,
		|	СебестоимостьТоваров.КорАналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Характеристика,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
		|	ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции,
		|	ОбщиеМножителиСАналитикойПартии.КоличествоПолуфабриката,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры,
		|	ОбщиеМножителиСАналитикойПартии.Продукция.ЕдиницаИзмерения,
		|	ОбщиеМножителиСАналитикойПартии.Знаменатель,
		|	ОбщиеМножителиСАналитикойПартии.Числитель,
		|	ОбщиеМножителиСАналитикойПартии.ЭтоПродукция,
		|	ОбщиеМножителиСАналитикойПартии.Назначение,
		|	ОбщиеМножителиСАналитикойПартии.Продукция,
		|	ОбщиеМножителиСАналитикойПартии.ХарактеристикаПродукции,
		|	ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбщиеМножителиСАналитикойПартии.Калькуляция,
		|	ОбщиеМножителиСАналитикойПартии.Продукция,
		|	ОбщиеМножителиСАналитикойПартии.ХарактеристикаПродукции,
		|	ОбщиеМножителиСАналитикойПартии.КоличествоПолуфабриката,
		|	ПрочиеРасходыНезавершенногоПроизводства.ПартияПроизводства,
		|	ПрочиеРасходыНезавершенногоПроизводства.Подразделение,
		|	ПрочиеРасходыНезавершенногоПроизводства.СтатьяКалькуляции,
		|	ПрочиеРасходыНезавершенногоПроизводства.СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
		|	СУММА(0),
		|	СУММА(ПрочиеРасходыНезавершенногоПроизводства.СтоимостьРегл * ОбщиеМножителиСАналитикойПартии.ДоляСтоимости),
		|	""Постатейные"" КАК ТипЗатрат,
		|	ОбщиеМножителиСАналитикойПартии.Продукция.ЕдиницаИзмерения,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
		|	ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка),
		|	ОбщиеМножителиСАналитикойПартии.Числитель,
		|	ОбщиеМножителиСАналитикойПартии.Знаменатель,
		|	ОбщиеМножителиСАналитикойПартии.Продукция,
		|	ОбщиеМножителиСАналитикойПартии.ХарактеристикаПродукции,
		|	ОбщиеМножителиСАналитикойПартии.ЭтоПродукция,
		|	ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции,
		|	ОбщиеМножителиСАналитикойПартии.Назначение,
		|	0
		|ИЗ
		|	ОбщиеМножителиСАналитикойПартии КАК ОбщиеМножителиСАналитикойПартии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ПрочиеРасходыНезавершенногоПроизводства
		|		ПО ОбщиеМножителиСАналитикойПартии.Продукция = ПрочиеРасходыНезавершенногоПроизводства.АналитикаУчетаПродукции.Номенклатура
		|			И ОбщиеМножителиСАналитикойПартии.ХарактеристикаПродукции = ПрочиеРасходыНезавершенногоПроизводства.АналитикаУчетаПродукции.Характеристика
		|			И ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции = ПрочиеРасходыНезавершенногоПроизводства.Регистратор
		|			И (ПрочиеРасходыНезавершенногоПроизводства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
		|			И ОбщиеМножителиСАналитикойПартии.АналитикаУчетаПартий = ПрочиеРасходыНезавершенногоПроизводства.КорАналитикаУчетаПартий
		|ГДЕ
		|	ОбщиеМножителиСАналитикойПартии.ПартияВыпущена
		|	И ОбщиеМножителиСАналитикойПартии.ЭтоПродукция

		|СГРУППИРОВАТЬ ПО
		|	ПрочиеРасходыНезавершенногоПроизводства.Подразделение,
		|	ПрочиеРасходыНезавершенногоПроизводства.ПартияПроизводства,
		|	ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции,
		|	ПрочиеРасходыНезавершенногоПроизводства.СтатьяКалькуляции,
		|	ОбщиеМножителиСАналитикойПартии.Продукция,
		|	ОбщиеМножителиСАналитикойПартии.ХарактеристикаПродукции,
		|	ОбщиеМножителиСАналитикойПартии.Калькуляция,
		|	ПрочиеРасходыНезавершенногоПроизводства.СтатьяРасходов,
		|	ОбщиеМножителиСАналитикойПартии.КоличествоПолуфабриката,
		|	ОбщиеМножителиСАналитикойПартии.Продукция.ЕдиницаИзмерения,
		|	ОбщиеМножителиСАналитикойПартии.Знаменатель,
		|	ОбщиеМножителиСАналитикойПартии.Числитель,
		|	ОбщиеМножителиСАналитикойПартии.ЭтоПродукция,
		|	ОбщиеМножителиСАналитикойПартии.Назначение,
		|	ОбщиеМножителиСАналитикойПартии.Продукция,
		|	ОбщиеМножителиСАналитикойПартии.ХарактеристикаПродукции,
		|	ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбщиеМножителиСАналитикойПартии.Калькуляция,
		|	ОбщиеМножителиСАналитикойПартии.Продукция,
		|	ОбщиеМножителиСАналитикойПартии.ХарактеристикаПродукции,
		|	ОбщиеМножителиСАналитикойПартии.КоличествоПолуфабриката,
		|	ТрудозатратыНезавершенногоПроизводства.ПартияПроизводства,
		|	ТрудозатратыНезавершенногоПроизводства.Подразделение,
		|	ТрудозатратыНезавершенногоПроизводства.СтатьяКалькуляции,
		|	ТрудозатратыНезавершенногоПроизводства.ВидРабот,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
		|	СУММА(ТрудозатратыНезавершенногоПроизводства.Количество * ОбщиеМножителиСАналитикойПартии.ДоляСтоимости),
		|	СУММА(ТрудозатратыНезавершенногоПроизводства.СтоимостьРегл * ОбщиеМножителиСАналитикойПартии.ДоляСтоимости),
		|	""ОплатаТруда"" КАК ТипЗатрат,
		|	ОбщиеМножителиСАналитикойПартии.Продукция.ЕдиницаИзмерения,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
		|	ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка),
		|	ОбщиеМножителиСАналитикойПартии.Числитель,
		|	ОбщиеМножителиСАналитикойПартии.Знаменатель,
		|	ОбщиеМножителиСАналитикойПартии.Продукция,
		|	ОбщиеМножителиСАналитикойПартии.ХарактеристикаПродукции,
		|	ОбщиеМножителиСАналитикойПартии.ЭтоПродукция,
		|	ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции,
		|	ОбщиеМножителиСАналитикойПартии.Назначение,
		|	0
		|ИЗ
		|	ОбщиеМножителиСАналитикойПартии КАК ОбщиеМножителиСАналитикойПартии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК ТрудозатратыНезавершенногоПроизводства
		|		ПО ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции = ТрудозатратыНезавершенногоПроизводства.Регистратор
		|			И ОбщиеМножителиСАналитикойПартии.Продукция = ТрудозатратыНезавершенногоПроизводства.КорАналитикаУчетаПродукции.Номенклатура
		|			И ОбщиеМножителиСАналитикойПартии.ХарактеристикаПродукции = ТрудозатратыНезавершенногоПроизводства.КорАналитикаУчетаПродукции.Характеристика
		|			И (ТрудозатратыНезавершенногоПроизводства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
		|			И ОбщиеМножителиСАналитикойПартии.АналитикаУчетаПартий = ТрудозатратыНезавершенногоПроизводства.КорАналитикаУчетаПартий
		|ГДЕ
		|	ОбщиеМножителиСАналитикойПартии.ПартияВыпущена
		|	И ОбщиеМножителиСАналитикойПартии.ЭтоПродукция

		|СГРУППИРОВАТЬ ПО
		|	ОбщиеМножителиСАналитикойПартии.ХарактеристикаПродукции,
		|	ОбщиеМножителиСАналитикойПартии.Калькуляция,
		|	ОбщиеМножителиСАналитикойПартии.Продукция,
		|	ТрудозатратыНезавершенногоПроизводства.ПартияПроизводства,
		|	ТрудозатратыНезавершенногоПроизводства.ВидРабот,
		|	ТрудозатратыНезавершенногоПроизводства.Подразделение,
		|	ТрудозатратыНезавершенногоПроизводства.СтатьяКалькуляции,
		|	ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции,
		|	ОбщиеМножителиСАналитикойПартии.КоличествоПолуфабриката,
		|	ОбщиеМножителиСАналитикойПартии.Продукция.ЕдиницаИзмерения,
		|	ОбщиеМножителиСАналитикойПартии.Знаменатель,
		|	ОбщиеМножителиСАналитикойПартии.Числитель,
		|	ОбщиеМножителиСАналитикойПартии.ЭтоПродукция,
		|	ОбщиеМножителиСАналитикойПартии.Назначение,
		|	ОбщиеМножителиСАналитикойПартии.Продукция,
		|	ОбщиеМножителиСАналитикойПартии.ХарактеристикаПродукции,
		|	ОбщиеМножителиСАналитикойПартии.ПартияСпецификацияПродукции
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбщиеМножители.Калькуляция,
		|	ОбщиеМножители.Продукция,
		|	ОбщиеМножители.ХарактеристикаПродукции,
		|	ОбщиеМножители.КоличествоПолуфабриката,
		|	СебестоимостьТоваров.Партия КАК ПартияПроизводства,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.МестоХранения,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.СтатьяКалькуляции,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Характеристика,
		|	СУММА(СебестоимостьТоваров.Количество * ОбщиеМножители.Числитель / ОбщиеМножители.Знаменатель),
		|	СУММА(СебестоимостьТоваров.СтоимостьРегл * ОбщиеМножители.Числитель / ОбщиеМножители.Знаменатель),
		|	""Материальные"" КАК ТипЗатрат,
		|	ОбщиеМножители.Продукция.ЕдиницаИзмерения,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
		|	ОбщиеМножители.ПартияСпецификацияПродукции,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры,
		|	ОбщиеМножители.Числитель,
		|	ОбщиеМножители.Знаменатель,
		|	ОбщиеМножители.Полуфабрикат,
		|	ОбщиеМножители.ХарактеристикаПолуфабриката,
		|	ОбщиеМножители.ЭтоПродукция,
		|	ОбщиеМножители.ПартияСпецификацияПолуфабриката,
		|	ОбщиеМножители.Назначение,
		|	СУММА(СебестоимостьТоваров.СтоимостьЗабалансоваяРегл * ОбщиеМножители.Числитель / ОбщиеМножители.Знаменатель)
		|ИЗ
		|	ОбщиеМножители КАК ОбщиеМножители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
		|		ПО ОбщиеМножители.ПартияСпецификацияПолуфабриката = СебестоимостьТоваров.КорПартия
		|			И ОбщиеМножители.Полуфабрикат = СебестоимостьТоваров.КорАналитикаУчетаНоменклатуры.Номенклатура
		|			И ОбщиеМножители.ХарактеристикаПолуфабриката = СебестоимостьТоваров.КорАналитикаУчетаНоменклатуры.Характеристика
		|			И (СебестоимостьТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
		|			И (НЕ СебестоимостьТоваров.Партия = НЕОПРЕДЕЛЕНО)
		|ГДЕ
		|	ОбщиеМножители.ПартияВыпущена
		|	И НЕ ОбщиеМножители.ЭтоПродукция
		|	И НЕ СебестоимостьТоваров.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.СтатьяКалькуляции,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура,
		|	СебестоимостьТоваров.Партия,
		|	ОбщиеМножители.ХарактеристикаПродукции,
		|	ОбщиеМножители.Продукция,
		|	ОбщиеМножители.Калькуляция,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.МестоХранения,
		|	СебестоимостьТоваров.КорАналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Характеристика,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
		|	ОбщиеМножители.ПартияСпецификацияПродукции,
		|	ОбщиеМножители.КоличествоПолуфабриката,
		|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры,
		|	ОбщиеМножители.Продукция.ЕдиницаИзмерения,
		|	ОбщиеМножители.Знаменатель,
		|	ОбщиеМножители.Числитель,
		|	ОбщиеМножители.Полуфабрикат,
		|	ОбщиеМножители.ХарактеристикаПолуфабриката,
		|	ОбщиеМножители.ЭтоПродукция,
		|	ОбщиеМножители.ПартияСпецификацияПолуфабриката,
		|	ОбщиеМножители.Назначение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбщиеМножители.Калькуляция,
		|	ОбщиеМножители.Продукция,
		|	ОбщиеМножители.ХарактеристикаПродукции,
		|	ОбщиеМножители.КоличествоПолуфабриката,
		|	ПрочиеРасходыНезавершенногоПроизводства.ПартияПроизводства,
		|	ПрочиеРасходыНезавершенногоПроизводства.Подразделение,
		|	ПрочиеРасходыНезавершенногоПроизводства.СтатьяКалькуляции,
		|	ПрочиеРасходыНезавершенногоПроизводства.СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
		|	0,
		|	СУММА(ПрочиеРасходыНезавершенногоПроизводства.СтоимостьРегл * ОбщиеМножители.Числитель / ОбщиеМножители.Знаменатель),
		|	""Постатейные"" КАК ТипЗатрат,
		|	ОбщиеМножители.Продукция.ЕдиницаИзмерения,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
		|	ОбщиеМножители.ПартияСпецификацияПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка),
		|	ОбщиеМножители.Числитель,
		|	ОбщиеМножители.Знаменатель,
		|	ОбщиеМножители.Полуфабрикат,
		|	ОбщиеМножители.ХарактеристикаПолуфабриката,
		|	ОбщиеМножители.ЭтоПродукция,
		|	ОбщиеМножители.ПартияСпецификацияПолуфабриката,
		|	ОбщиеМножители.Назначение,
		|	0
		|ИЗ
		|	ОбщиеМножители КАК ОбщиеМножители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ПрочиеРасходыНезавершенногоПроизводства
		|		ПО ОбщиеМножители.ПартияСпецификацияПолуфабриката = ПрочиеРасходыНезавершенногоПроизводства.Регистратор
		|			И ОбщиеМножители.Полуфабрикат = ПрочиеРасходыНезавершенногоПроизводства.АналитикаУчетаПродукции.Номенклатура
		|			И ОбщиеМножители.ХарактеристикаПолуфабриката = ПрочиеРасходыНезавершенногоПроизводства.АналитикаУчетаПродукции.Характеристика
		|			И (ПрочиеРасходыНезавершенногоПроизводства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
		|ГДЕ
		|	ОбщиеМножители.ПартияВыпущена
		|	И НЕ ОбщиеМножители.ЭтоПродукция
		|
		|СГРУППИРОВАТЬ ПО
		|	ПрочиеРасходыНезавершенногоПроизводства.Подразделение,
		|	ПрочиеРасходыНезавершенногоПроизводства.ПартияПроизводства,
		|	ОбщиеМножители.ПартияСпецификацияПродукции,
		|	ПрочиеРасходыНезавершенногоПроизводства.СтатьяКалькуляции,
		|	ОбщиеМножители.Продукция,
		|	ОбщиеМножители.ХарактеристикаПродукции,
		|	ОбщиеМножители.Калькуляция,
		|	ПрочиеРасходыНезавершенногоПроизводства.СтатьяРасходов,
		|	ОбщиеМножители.КоличествоПолуфабриката,
		|	ОбщиеМножители.Продукция.ЕдиницаИзмерения,
		|	ОбщиеМножители.Знаменатель,
		|	ОбщиеМножители.Числитель,
		|	ОбщиеМножители.Полуфабрикат,
		|	ОбщиеМножители.ХарактеристикаПолуфабриката,
		|	ОбщиеМножители.ЭтоПродукция,
		|	ОбщиеМножители.ПартияСпецификацияПолуфабриката,
		|	ОбщиеМножители.Назначение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбщиеМножители.Калькуляция,
		|	ОбщиеМножители.Продукция,
		|	ОбщиеМножители.ХарактеристикаПродукции,
		|	ОбщиеМножители.КоличествоПолуфабриката,
		|	ТрудозатратыНезавершенногоПроизводства.ПартияПроизводства,
		|	ТрудозатратыНезавершенногоПроизводства.Подразделение,
		|	ТрудозатратыНезавершенногоПроизводства.СтатьяКалькуляции,
		|	ТрудозатратыНезавершенногоПроизводства.ВидРабот,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
		|	СУММА(ТрудозатратыНезавершенногоПроизводства.Количество * ОбщиеМножители.Числитель / ОбщиеМножители.Знаменатель),
		|	СУММА(ТрудозатратыНезавершенногоПроизводства.СтоимостьРегл * ОбщиеМножители.Числитель / ОбщиеМножители.Знаменатель),
		|	""ОплатаТруда"" КАК ТипЗатрат,
		|	ОбщиеМножители.Продукция.ЕдиницаИзмерения,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
		|	ОбщиеМножители.ПартияСпецификацияПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка),
		|	ОбщиеМножители.Числитель,
		|	ОбщиеМножители.Знаменатель,
		|	ОбщиеМножители.Полуфабрикат,
		|	ОбщиеМножители.ХарактеристикаПолуфабриката,
		|	ОбщиеМножители.ЭтоПродукция,
		|	ОбщиеМножители.ПартияСпецификацияПолуфабриката,
		|	ОбщиеМножители.Назначение,
		|	0
		|ИЗ
		|	ОбщиеМножители КАК ОбщиеМножители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК ТрудозатратыНезавершенногоПроизводства
		|		ПО ОбщиеМножители.ПартияСпецификацияПолуфабриката = ТрудозатратыНезавершенногоПроизводства.Регистратор
		|			И ОбщиеМножители.Полуфабрикат = ТрудозатратыНезавершенногоПроизводства.КорАналитикаУчетаПродукции.Номенклатура
		|			И ОбщиеМножители.ХарактеристикаПолуфабриката = ТрудозатратыНезавершенногоПроизводства.КорАналитикаУчетаПродукции.Характеристика
		|			И (ТрудозатратыНезавершенногоПроизводства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
		|ГДЕ
		|	ОбщиеМножители.ПартияВыпущена
		|	И НЕ ОбщиеМножители.ЭтоПродукция
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбщиеМножители.ХарактеристикаПродукции,
		|	ОбщиеМножители.Калькуляция,
		|	ОбщиеМножители.Продукция,
		|	ТрудозатратыНезавершенногоПроизводства.ПартияПроизводства,
		|	ТрудозатратыНезавершенногоПроизводства.ВидРабот,
		|	ТрудозатратыНезавершенногоПроизводства.Подразделение,
		|	ТрудозатратыНезавершенногоПроизводства.СтатьяКалькуляции,
		|	ОбщиеМножители.ПартияСпецификацияПродукции,
		|	ОбщиеМножители.КоличествоПолуфабриката,
		|	ОбщиеМножители.Продукция.ЕдиницаИзмерения,
		|	ОбщиеМножители.Знаменатель,
		|	ОбщиеМножители.Числитель,
		|	ОбщиеМножители.Полуфабрикат,
		|	ОбщиеМножители.ХарактеристикаПолуфабриката,
		|	ОбщиеМножители.ЭтоПродукция,
		|	ОбщиеМножители.ПартияСпецификацияПолуфабриката,
		|	ОбщиеМножители.Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФактическиеЗатраты.АналитикаУчетаНоменклатуры,
		|	ФактическиеЗатраты.ПартияСпецификацияПродукции,
		|	ФактическиеЗатраты.ПартияПроизводства
		|ПОМЕСТИТЬ АналитикиПартии
		|ИЗ
		|	ФактическиеЗатраты КАК ФактическиеЗатраты
		|ГДЕ
		|	НЕ ФактическиеЗатраты.АналитикаУчетаНоменклатуры = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|	И ФактическиеЗатраты.ЭтоПродукция
		|	И ФактическиеЗатраты.ТипЗатрат = ""Материальные""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФактическиеЗатраты.АналитикаУчетаНоменклатуры,
		|	ФактическиеЗатраты.ПартияПолуфабриката,
		|	ФактическиеЗатраты.ПартияПроизводства	
		|ИЗ
		|	ФактическиеЗатраты КАК ФактическиеЗатраты
		|ГДЕ
		|	НЕ ФактическиеЗатраты.ЭтоПродукция
		|	И ФактическиеЗатраты.ТипЗатрат = ""Материальные""
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПартияСпецификацияПродукции,
		|	АналитикаУчетаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АналитикиПартии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	АналитикиПартии.ПартияСпецификацияПродукции КАК ПартияСпецификацияПродукции,
		|	(ДвиженияВыпуска.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)) КАК ФиксСтоимость,
		|	СУММА(ЕСТЬNULL(ДвиженияВыпуска.Количество, 0)) КАК Количество,
		|	
		|	СУММА(ЕСТЬNULL(ДвиженияВыпуска.СтоимостьРегл, 0) +
		|				ЕСТЬNULL(ДвиженияВыпуска.ДопРасходыРегл, 0) +
		|				ЕСТЬNULL(ДвиженияВыпуска.ПостатейныеПостоянныеРегл, 0) +
		|				ЕСТЬNULL(ДвиженияВыпуска.ПостатейныеПеременныеРегл, 0) +
		|				ЕСТЬNULL(ДвиженияВыпуска.ТрудозатратыРегл, 0)) КАК Стоимость,
		|	СУММА(ЕСТЬNULL(ДвиженияВыпуска.СтоимостьЗабалансоваяРегл, 0)) КАК СтоимостьЗабалансовая
		|	
		|ПОМЕСТИТЬ ОпределениеПолуфабрикатов
		|ИЗ
		|	АналитикиПартии КАК АналитикиПартии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК ОпределениеПартии
		|		ПО АналитикиПартии.ПартияПроизводства = ОпределениеПартии.КорПартия
		|			И АналитикиПартии.АналитикаУчетаНоменклатуры = ОпределениеПартии.КорАналитикаУчетаНоменклатуры
		|			И (ОпределениеПартии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
		|			И (ОпределениеПартии.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты), ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)))
		|			И (ОпределениеПартии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства))
		|			И ОпределениеПартии.Количество > 0
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК ДвиженияВыпуска
		|		ПО ОпределениеПартии.Партия = ДвиженияВыпуска.Партия
		|			И ОпределениеПартии.АналитикаУчетаПартий = ДвиженияВыпуска.АналитикаУчетаПартий
		|			И ДвиженияВыпуска.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
		|														ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
		|СГРУППИРОВАТЬ ПО
		|	АналитикиПартии.АналитикаУчетаНоменклатуры,
		|	АналитикиПартии.ПартияСпецификацияПродукции,
		|	(ДвиженияВыпуска.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШапкаТаблицы.Организация КАК Организация,
		|	ШапкаТаблицы.Ссылка КАК Калькуляция,
		|	ШапкаТаблицы.ОбъектКалькуляции КАК ОбъектКалькуляции,
		|	ШапкаТаблицы.Номенклатура КАК Продукция,
		|	ШапкаТаблицы.Характеристика КАК Характеристика,
		|	ШапкаТаблицы.Назначение КАК Назначение,
		|	ШапкаТаблицы.Объект КАК Объект,
		|	ВЫБОР
		|		КОГДА ШапкаТаблицы.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(ШапкаТаблицы.Номенклатура.ЕдиницаИзмерения)
		|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ШапкаТаблицы.Упаковка)
		|	КОНЕЦ КАК ЕдиницаИзмерения,
		|	ШапкаТаблицы.КоличествоУпаковок КАК Количество,
		|	ШапкаТаблицы.Номер КАК Номер,
		|	ШапкаТаблицы.Дата КАК Дата,
		|	ШапкаТаблицы.ФизЛицо КАК ФизЛицо,
		|	ПРЕДСТАВЛЕНИЕ(ШапкаТаблицы.Ссылка) КАК Представление
		|ИЗ
		|	ШапкаТаблицы КАК ШапкаТаблицы
		|
		|УПОРЯДОЧИТЬ ПО
		|	Калькуляция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Калькуляция КАК Калькуляция,
		|	ВложенныйЗапрос.Объект КАК Объект,
		|	ВложенныйЗапрос.Продукция КАК Продукция,
		|	ВложенныйЗапрос.ХарактеристикаПродукции КАК Характеристика,
		|	ВложенныйЗапрос.Назначение КАК Назначение,
		|	ВложенныйЗапрос.ТипЗатрат КАК ТипЗатраты,
		|	ВложенныйЗапрос.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|	ВложенныйЗапрос.Номенклатура КАК Затрата,
		|	ВложенныйЗапрос.НоменклатураЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВложенныйЗапрос.Характеристика КАК ХарактеристикаЗатраты,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
		|	СУММА(ВложенныйЗапрос.Стоимость) КАК Сумма,
		|	СУММА(ВложенныйЗапрос.СтоимостьЗабалансовая) КАК СуммаЗабалансовая,
		|	ВЫБОР
		|		КОГДА СУММА(ВложенныйЗапрос.Количество) = 0
		|				ТОГДА 0
		|			ИНАЧЕ СУММА(ВложенныйЗапрос.Стоимость) / СУММА(ВложенныйЗапрос.Количество)
		|		КОНЕЦ КАК Цена,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВложенныйЗапрос.Номенклатура) КАК ЗатратаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВложенныйЗапрос.Характеристика) КАК ХарактеристикаЗатратыПредставление
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПлановыеЗатраты.Калькуляция КАК Калькуляция,
		|		ОбъектыПартии.Объект КАК Объект,
		|		ПлановыеЗатраты.Продукция КАК Продукция,
		|		ПлановыеЗатраты.ХарактеристикаПродукции КАК ХарактеристикаПродукции,
		|		ПлановыеЗатраты.Назначение КАК Назначение,
		|		ПлановыеЗатраты.ТипЗатрат КАК ТипЗатрат,
		|		ПлановыеЗатраты.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|		ПлановыеЗатраты.Номенклатура КАК Номенклатура,
		|		ПлановыеЗатраты.НоменклатураЕдиницаИзмерения КАК НоменклатураЕдиницаИзмерения,
		|		ПлановыеЗатраты.Характеристика КАК Характеристика,
		|		ПлановыеЗатраты.Количество КАК Количество,
		|		ПлановыеЗатраты.Стоимость КАК Стоимость,
		|		ПлановыеЗатраты.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая
		|	ИЗ
		|		ПлановыеЗатраты КАК ПлановыеЗатраты
		|			ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеОбъектовИПартий КАК ОбъектыПартии
		|			ПО ПлановыеЗатраты.ПартияСпецификацияПродукции = ОбъектыПартии.Партия
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ФактическиеЗатраты.Калькуляция,
		|		ОбъектыПартии.Объект,
		|		ФактическиеЗатраты.Продукция,
		|		ФактическиеЗатраты.ХарактеристикаПродукции,
		|		ФактическиеЗатраты.Назначение,
		|		ФактическиеЗатраты.ТипЗатрат,
		|		ФактическиеЗатраты.СтатьяКалькуляции,
		|		ФактическиеЗатраты.Номенклатура,
		|		ФактическиеЗатраты.НоменклатураЕдиницаИзмерения,
		|		ФактическиеЗатраты.Характеристика,
		|		ВЫБОР
		|			КОГДА ОпределениеПолуфабрикатов.АналитикаУчетаНоменклатуры ЕСТЬ NULL
		|				ТОГДА ФактическиеЗатраты.Количество
		|			ИНАЧЕ ОпределениеПолуфабрикатов.Количество * ФактическиеЗатраты.Числитель / ФактическиеЗатраты.Знаменатель
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ОпределениеПолуфабрикатов.АналитикаУчетаНоменклатуры ЕСТЬ NULL
		|				ТОГДА ФактическиеЗатраты.Стоимость
		|			КОГДА НЕ ОпределениеПолуфабрикатов.ФиксСтоимость
		|				ТОГДА 0
		|			ИНАЧЕ ОпределениеПолуфабрикатов.Стоимость * ФактическиеЗатраты.Числитель / ФактическиеЗатраты.Знаменатель
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ОпределениеПолуфабрикатов.АналитикаУчетаНоменклатуры ЕСТЬ NULL
		|				ТОГДА ФактическиеЗатраты.СтоимостьЗабалансовая
		|			КОГДА НЕ ОпределениеПолуфабрикатов.ФиксСтоимость
		|				ТОГДА 0
		|			ИНАЧЕ ОпределениеПолуфабрикатов.СтоимостьЗабалансовая * ФактическиеЗатраты.Числитель / ФактическиеЗатраты.Знаменатель
		|		КОНЕЦ
		|	ИЗ
		|		ФактическиеЗатраты КАК ФактическиеЗатраты
		|			ЛЕВОЕ СОЕДИНЕНИЕ ОпределениеПолуфабрикатов КАК ОпределениеПолуфабрикатов
		|			ПО ФактическиеЗатраты.АналитикаУчетаНоменклатуры = ОпределениеПолуфабрикатов.АналитикаУчетаНоменклатуры
		|				И (ВЫБОР
		|					КОГДА ФактическиеЗатраты.ЭтоПродукция
		|						ТОГДА ФактическиеЗатраты.ПартияСпецификацияПродукции = ОпределениеПолуфабрикатов.ПартияСпецификацияПродукции
		|					ИНАЧЕ ФактическиеЗатраты.ПартияПолуфабриката = ОпределениеПолуфабрикатов.ПартияСпецификацияПродукции
		|					КОНЕЦ)
		|			ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеОбъектовИПартий КАК ОбъектыПартии
		|			ПО ФактическиеЗатраты.ПартияСпецификацияПродукции = ОбъектыПартии.Партия) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.СтатьяКалькуляции,
		|	ВложенныйЗапрос.Объект,
		|	ВложенныйЗапрос.НоменклатураЕдиницаИзмерения,
		|	ВложенныйЗапрос.Назначение,
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Продукция,
		|	ВложенныйЗапрос.Калькуляция,
		|	ВложенныйЗапрос.ТипЗатрат,
		|	ВложенныйЗапрос.ХарактеристикаПродукции,
		|	ВложенныйЗапрос.Характеристика
		|
		|ИМЕЮЩИЕ
		|	НЕ СУММА(ВложенныйЗапрос.Количество) = 0
		|		ИЛИ НЕ СУММА(ВложенныйЗапрос.Стоимость) = 0";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПлановаяКалькуляция";
	
	Запрос.Текст = Документы.ЭтапПроизводства2_2.ПодставитьВыбираемыеПоля(Запрос.Текст, 
		Новый Структура("Количество, КодСтроки", 
			"ЭтапПроизводства2_2ВыходныеИзделия.Количество", "ЭтапПроизводства2_2ВыходныеИзделия.КодСтроки"));
	
	ПоляСоединения = Новый Структура;
	ПоляСоединения.Вставить("Этап", "ОбщиеМножители.ПартияСпецификацияПродукции");
	ПоляСоединения.Вставить("Номенклатура", "ОбщиеМножители.Продукция");
	ПоляСоединения.Вставить("Характеристика", "ОбщиеМножители.ХарактеристикаПродукции");
	ПоляСоединения.Вставить("Назначение", "ОбщиеМножители.Назначение");
	Запрос.Текст = Документы.ЭтапПроизводства2_2.ПодставитьСоединениеДляПолученияВыходныхИзделий(Запрос.Текст, 
		"УсловияСоединения",
		ПоляСоединения);
	
	МассивРезультатов  = Запрос.ВыполнитьПакет();
	
	ДанныеШапки = МассивРезультатов[МассивРезультатов.Количество() - 2].Выбрать();
	ДетальныеЗаписи = МассивРезультатов[МассивРезультатов.Количество() - 1].Выгрузить(); // ТаблицаЗначений
	Если Сводно Тогда
		ДетальныеЗаписи.Свернуть("Продукция, Характеристика, Назначение, Калькуляция, Объект, ТипЗатраты, СтатьяКалькуляции", "Сумма, СуммаЗабалансовая");
	КонецЕсли;
	
	ДетальныеЗаписи.Индексы.Добавить("Калькуляция, Объект, Продукция, Характеристика, Назначение");
	
	ПервыйДокумент = Истина;
		
	Пока ДанныеШапки.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
					
		// Вывод общих реквизитов шапки.
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
		ПараметрыОбласти = Новый Структура("ТекстЗаголовка");
		ПараметрыОбласти.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(
			ДанныеШапки, НСтр("ru = 'Калькуляция продукции';
								|en = 'Product costing'", ОбщегоНазначения.КодОсновногоЯзыка()));
		ОбластьМакета.Параметры.Заполнить(ПараметрыОбласти);
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеШапки.Калькуляция);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ПервыйДокумент    = Ложь;
		КалькуляцияЗаказа = ДанныеШапки.ОбъектКалькуляции = Перечисления.ОбъектыКалькуляции.ЗаказНаПроизводство;

		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок_Организация");
		ПараметрыОбласти = Новый Структура("Организация", ДанныеШапки.Организация);
		ОбластьМакета.Параметры.Заполнить(ПараметрыОбласти);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Если КалькуляцияЗаказа Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок_Заказ");
		Иначе
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок_Спецификация");
		КонецЕсли;
		
		ПараметрыОбласти = Новый Структура("Количество", 
			Формат(ДанныеШапки.Количество, "ЧЦ=10; ЧДЦ=3") + " " + ДанныеШапки.ЕдиницаИзмерения);
		ОбластьМакета.Параметры.Заполнить(ДанныеШапки);
		ОбластьМакета.Параметры.Заполнить(ПараметрыОбласти);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		СтруктураПоиска = Новый Структура("Калькуляция, Объект, Продукция, Характеристика, Назначение");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ДанныеШапки);
		
		ОтборБезЗабаланса = Новый Структура("СуммаЗабалансовая", 0);
		
		ДетальныеЗаписиНабора = ДетальныеЗаписи.Скопировать(СтруктураПоиска);
		Если ДетальныеЗаписиНабора.Количество() - ДетальныеЗаписиНабора.НайтиСтроки(ОтборБезЗабаланса).Количество() > 0 Тогда
			ШапкаБезДетализации = "ШапкаБезДетализацииСЗабалансом";
			СтрокиТаблицыСводно = "СтрокиТаблицыСводноСЗабалансом";
			СтрокиТаблицыСводноТипЗатраты = "СтрокиТаблицыСводноТипЗатратыСЗабалансом";
			ИтогиТаблицыСводно = "ИтогиТаблицыСводноСЗабалансом";
			ШапкаПодробно = "ШапкаПодробноСЗабалансом";
			СтрокиТаблицыПодробно = "СтрокиТаблицыПодробноСЗабалансом";
			СтрокиТаблицыПодробноТипЗатраты = "СтрокиТаблицыПодробноТипЗатратыСЗабалансом";
			СтрокиТаблицыПодробноСтатьяКалькуляции = "СтрокиТаблицыПодробноСтатьяКалькуляцииСЗабалансом";
			ИтогиТаблицыПодробно = "ИтогиТаблицыПодробноСЗабалансом";
		Иначе
			ШапкаБезДетализации = "ШапкаБезДетализации";
			СтрокиТаблицыСводно = "СтрокиТаблицыСводно";
			СтрокиТаблицыСводноТипЗатраты = "СтрокиТаблицыСводноТипЗатраты";
			ИтогиТаблицыСводно = "ИтогиТаблицыСводно";
			ШапкаПодробно = "ШапкаПодробно";
			СтрокиТаблицыПодробно = "СтрокиТаблицыПодробно";
			СтрокиТаблицыПодробноТипЗатраты = "СтрокиТаблицыПодробноТипЗатраты";
			СтрокиТаблицыПодробноСтатьяКалькуляции = "СтрокиТаблицыПодробноСтатьяКалькуляции";
			ИтогиТаблицыПодробно = "ИтогиТаблицыПодробно";
		КонецЕсли;
		
		Если Сводно Тогда
			
			ОбластьШапки = Макет.ПолучитьОбласть(ШапкаБезДетализации);
			ОбластьСтрок = Макет.ПолучитьОбласть(СтрокиТаблицыСводно);
			ОбластьТипЗатрат = Макет.ПолучитьОбласть(СтрокиТаблицыСводноТипЗатраты);
			ОбластьСтатьяКалькуляции = Неопределено;
			ОбластьИтогов = Макет.ПолучитьОбласть(ИтогиТаблицыСводно);
			
		Иначе
			
			ОбластьШапки = Макет.ПолучитьОбласть(ШапкаПодробно);
			ОбластьСтрок = Макет.ПолучитьОбласть(СтрокиТаблицыПодробно);
			ОбластьТипЗатрат = Макет.ПолучитьОбласть(СтрокиТаблицыПодробноТипЗатраты);
			ОбластьСтатьяКалькуляции = Макет.ПолучитьОбласть(СтрокиТаблицыПодробноСтатьяКалькуляции);
			ОбластьИтогов = Макет.ПолучитьОбласть(ИтогиТаблицыПодробно);
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьШапки);
		
		Если Сводно Тогда
			ДетальныеЗаписиНабора.Сортировать("ТипЗатраты, СтатьяКалькуляции");
		Иначе
			ДетальныеЗаписиНабора.Сортировать("ТипЗатраты, СтатьяКалькуляции, Затрата");
		КонецЕсли;
		
		Материальные = 0;
		ВозвратныеОтходы = 0;
		МатериальныеЗабаланс = 0;
		ОплатаТруда = 0;
		Постатейные = 0;
		
		ТипЗатраты = "";
		СтатьяКалькуляции = Неопределено;
		
		Для Каждого ДетальнаяЗапись Из ДетальныеЗаписиНабора Цикл
			
			Если Не ТипЗатраты = ДетальнаяЗапись.ТипЗатраты Тогда
				
				СтатьяКалькуляции = Неопределено;
				ИтогоПоТипуЗатрат = 0;
				ИтогоПоТипуЗатратЗабаланс = 0;
				СтрокиПоТипуЗатрат = ДетальныеЗаписиНабора.НайтиСтроки(Новый Структура("ТипЗатраты", ДетальнаяЗапись.ТипЗатраты));
				
				Для Каждого СтрокаПоТипуЗатрат Из СтрокиПоТипуЗатрат Цикл
					
					ИтогоПоТипуЗатрат = ИтогоПоТипуЗатрат + СтрокаПоТипуЗатрат.Сумма;
					ИтогоПоТипуЗатратЗабаланс = ИтогоПоТипуЗатратЗабаланс + СтрокаПоТипуЗатрат.СуммаЗабалансовая;
					
				КонецЦикла;
				
				Если ДетальнаяЗапись.ТипЗатраты = "Материальные" Тогда
					
					ПредставлениеТипаЗатрат = НСтр("ru = 'Материальные';
													|en = 'Material'", ОбщегоНазначения.КодОсновногоЯзыка());
					Материальные = ИтогоПоТипуЗатрат;
					МатериальныеЗабаланс = ИтогоПоТипуЗатратЗабаланс;
					
				ИначеЕсли ДетальнаяЗапись.ТипЗатраты = "ВозвратныеОтходы" Тогда
					
					ПредставлениеТипаЗатрат = НСтр("ru = 'Возвратные отходы/Побочный выпуск';
													|en = 'Scrap and spoilage/Side release'", ОбщегоНазначения.КодОсновногоЯзыка());
					ВозвратныеОтходы = ИтогоПоТипуЗатрат;
					
				ИначеЕсли ДетальнаяЗапись.ТипЗатраты = "ОплатаТруда" Тогда
					
					ПредставлениеТипаЗатрат = НСтр("ru = 'Оплата труда';
													|en = 'Payroll'", ОбщегоНазначения.КодОсновногоЯзыка());
					ОплатаТруда = ИтогоПоТипуЗатрат;
					
				Иначе
					
					ПредставлениеТипаЗатрат = НСтр("ru = 'Постатейные';
													|en = 'Itemized'", ОбщегоНазначения.КодОсновногоЯзыка());
					Постатейные = ИтогоПоТипуЗатрат;
					
				КонецЕсли;
				
				ПараметрыОбласти = Новый Структура;
				ПараметрыОбласти.Вставить("ТипЗатраты", ПредставлениеТипаЗатрат);
				ПараметрыОбласти.Вставить("Сумма", ИтогоПоТипуЗатрат);
				ПараметрыОбласти.Вставить("СуммаЗабалансовая", ИтогоПоТипуЗатратЗабаланс);
				ОбластьТипЗатрат.Параметры.Заполнить(ПараметрыОбласти);
				
				ТабличныйДокумент.Вывести(ОбластьТипЗатрат);
				
			КонецЕсли;
			
			Если Не ОбластьСтатьяКалькуляции = Неопределено И Не СтатьяКалькуляции = ДетальнаяЗапись.СтатьяКалькуляции Тогда
				
				ОтборСтрок = Новый Структура("ТипЗатраты, СтатьяКалькуляции", 
					ДетальнаяЗапись.ТипЗатраты, ДетальнаяЗапись.СтатьяКалькуляции);
					
				СтрокиПоСтатьейКалькуляции = ДетальныеЗаписиНабора.НайтиСтроки(ОтборСтрок);
				ИтогоПоСтатье = 0;
				ИтогоПоСтатьеЗабаланс = 0;
				
				Для Каждого СтрокаПоСтатье Из СтрокиПоСтатьейКалькуляции Цикл
					
					ИтогоПоСтатье = ИтогоПоСтатье + СтрокаПоСтатье.Сумма;
					ИтогоПоСтатьеЗабаланс = ИтогоПоСтатьеЗабаланс + СтрокаПоСтатье.СуммаЗабалансовая;
					
				КонецЦикла;
				
				ПараметрыОбласти = Новый Структура;
				ПараметрыОбласти.Вставить("СтатьяКалькуляции", ДетальнаяЗапись.СтатьяКалькуляции);
				ПараметрыОбласти.Вставить("Сумма", ИтогоПоСтатье);
				ПараметрыОбласти.Вставить("СуммаЗабалансовая", ИтогоПоСтатьеЗабаланс);
				ОбластьСтатьяКалькуляции.Параметры.Заполнить(ПараметрыОбласти);
				
				ТабличныйДокумент.Вывести(ОбластьСтатьяКалькуляции);
				
			КонецЕсли;
			
			ТипЗатраты = ДетальнаяЗапись.ТипЗатраты;
			СтатьяКалькуляции = ДетальнаяЗапись.СтатьяКалькуляции;
			
			ОбластьСтрок.Параметры.Заполнить(ДетальнаяЗапись);
			Если Не Сводно И ЗначениеЗаполнено(ДетальнаяЗапись.ХарактеристикаЗатраты) Тогда
				
				ПараметрыОбласти = Новый Структура("Затрата", 
					ДетальнаяЗапись.ЗатратаПредставление + ", " + ДетальнаяЗапись.ХарактеристикаЗатратыПредставление);
				ОбластьСтрок.Параметры.Заполнить(ПараметрыОбласти);
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрок);
			
		КонецЦикла;
		
		ПараметрыОбласти = Новый Структура;
		ПараметрыОбласти.Вставить("ВсегоМатериальные", Материальные);
		ПараметрыОбласти.Вставить("ВсегоВозвратныеОтходы", ВозвратныеОтходы);
		ПараметрыОбласти.Вставить("ВсегоТрудозатрат", ОплатаТруда);
		ПараметрыОбласти.Вставить("ВсегоПостатейные", Постатейные);
		ПараметрыОбласти.Вставить("Итого", Материальные + ОплатаТруда + Постатейные + ВозвратныеОтходы);
		ПараметрыОбласти.Вставить("ИтогоЗабаланс", МатериальныеЗабаланс);
		ПараметрыОбласти.Вставить("Валюта", Строка(ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(ДанныеШапки.Организация)));
		ОбластьИтогов.Параметры.Заполнить(ПараметрыОбласти);
		
		ТабличныйДокумент.Вывести(ОбластьИтогов);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ПараметрыОбласти = Новый Структура("Ответственный",
			ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеШапки.ФизЛицо, ДанныеШапки.Дата));
		ОбластьМакета.Параметры.Заполнить(ПараметрыОбласти);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуПротоколаОшибок(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПлановаяКалькуляция2_2.ПФ_MXL_ПротоколОшибок");
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	РегистрыСведений.МножителиПартийИПолуфабрикатов.ПолучитьЦеныНоменклатуры(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	
		"ВЫБРАТЬ
		|	ПлановыеТрудозатраты.Калькуляция КАК Калькуляция,
		|	ПлановыеТрудозатраты.ВидРабот КАК ВидРабот,
		|	ПлановыеТрудозатраты.Период КАК Период
		|ПОМЕСТИТЬ ВидыРабот
		|ИЗ
		|	РегистрНакопления.ПлановыеТрудозатраты КАК ПлановыеТрудозатраты
		|ГДЕ
		|	ПлановыеТрудозатраты.Калькуляция В (&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеТрудозатраты.Калькуляция,
		|	ПлановыеТрудозатраты.Период,
		|	ПлановыеТрудозатраты.ВидРабот
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыРабот.Калькуляция КАК Калькуляция,
		|	ВидыРабот.ВидРабот КАК ВидРабот,
		|	ВидыРабот.Период КАК Период,
		|	МАКСИМУМ(РасценкиРаботСотрудников.Период) КАК ПериодРасценки
		|ПОМЕСТИТЬ ДатыРасценок
		|ИЗ
		|	ВидыРабот КАК ВидыРабот
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасценкиРаботСотрудников КАК РасценкиРаботСотрудников
		|		ПО (РасценкиРаботСотрудников.ВидРабот = ВидыРабот.ВидРабот)
		|			И (РасценкиРаботСотрудников.Период <= ВидыРабот.Период)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВидыРабот.Калькуляция,
		|	ВидыРабот.ВидРабот,
		|	ВидыРабот.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатыРасценок.Калькуляция,
		|	ДатыРасценок.ВидРабот КАК ВидРабот,
		|	ДатыРасценок.Период КАК Период,
		|	ЕСТЬNULL(РасценкиРаботСотрудников.Расценка, 0) КАК Расценка
		|ПОМЕСТИТЬ Расценки
		|ИЗ
		|	ДатыРасценок КАК ДатыРасценок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасценкиРаботСотрудников КАК РасценкиРаботСотрудников
		|		ПО ДатыРасценок.ВидРабот = РасценкиРаботСотрудников.ВидРабот
		|			И ДатыРасценок.ПериодРасценки = РасценкиРаботСотрудников.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеМатериальныеЗатраты.Калькуляция КАК Регистратор,
		|	ПлановыеМатериальныеЗатраты.Номенклатура КАК Затрата,
		|	ПлановыеМатериальныеЗатраты.Характеристика,
		|	""Материальные"" КАК ТипЗатраты
		|ПОМЕСТИТЬ Затраты
		|ИЗ
		|	РегистрНакопления.ПлановыеМатериальныеЗатраты КАК ПлановыеМатериальныеЗатраты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|		ПО ПлановыеМатериальныеЗатраты.Калькуляция = ЦеныНоменклатуры.Калькуляция
		|			И ПлановыеМатериальныеЗатраты.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|			И ПлановыеМатериальныеЗатраты.Характеристика = ЦеныНоменклатуры.Характеристика
		|			И ПлановыеМатериальныеЗатраты.Период = ЦеныНоменклатуры.Период
		|ГДЕ
		|	НЕ ПлановыеМатериальныеЗатраты.ЭтоПолуфабрикат
		|	И ПлановыеМатериальныеЗатраты.Калькуляция В (&МассивОбъектов)
		|	И ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) = 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеМатериальныеЗатраты.Калькуляция,
		|	ПлановыеМатериальныеЗатраты.Номенклатура,
		|	ПлановыеМатериальныеЗатраты.Характеристика
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПлановыеТрудозатраты.Калькуляция КАК Регистратор,
		|	ПлановыеТрудозатраты.ВидРабот,
		|	НЕОПРЕДЕЛЕНО,
		|	""Трудозатраты""
		|ИЗ
		|	РегистрНакопления.ПлановыеТрудозатраты КАК ПлановыеТрудозатраты
		|	ЛЕВОЕ СОЕДИНЕНИЕ Расценки КАК Расценки
		|	ПО ПлановыеТрудозатраты.Калькуляция = Расценки.Калькуляция
		|		И ПлановыеТрудозатраты.ВидРабот = Расценки.ВидРабот
		|		И ПлановыеТрудозатраты.Период = Расценки.Период
		|ГДЕ
		|	ПлановыеТрудозатраты.Калькуляция В (&МассивОбъектов)
		|	И ЕСТЬNULL(Расценки.Расценка, 0) = 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеТрудозатраты.Калькуляция,
		|	ПлановыеТрудозатраты.ВидРабот
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Затраты.Затрата КАК Затрата,
		|	Затраты.Характеристика КАК Характеристика,
		|	Затраты.Регистратор КАК Регистратор,
		|	Затраты.ТипЗатраты КАК ТипЗатраты,
		|	Реквизиты.Дата КАК Дата,
		|	Реквизиты.Номер КАК Номер
		|ИЗ
		|	Затраты КАК Затраты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлановаяКалькуляция2_2 КАК Реквизиты
		|		ПО Затраты.Регистратор = Реквизиты.Ссылка
		|ИТОГИ ПО
		|	Регистратор";
	
	Затраты = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПротоколОшибок";
	
	ПервыйДокумент = Истина;
	
	Для Каждого СтрокаРегистратора Из Затраты.Строки Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Вывод общих реквизитов шапки.
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, СтрокаРегистратора.Регистратор);
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Протокол ошибок %1';
				|en = 'Error log %1'", ОбщегоНазначения.КодОсновногоЯзыка()),
			ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(СтрокаРегистратора, НСтр("ru = 'калькуляции продукции';
																									|en = 'product costings'", ОбщегоНазначения.КодОсновногоЯзыка())));
		ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ПервыйДокумент = Ложь;
		
		СтрокиЗатрат = СтрокаРегистратора.Строки;
		Если СтрокиЗатрат.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Материалы = СтрокиЗатрат.НайтиСтроки(Новый Структура("ТипЗатраты", "Материальные"));
		Трудозатраты = СтрокиЗатрат.НайтиСтроки(Новый Структура("ТипЗатраты", "Трудозатраты"));
		
		Если Материалы.Количество() >= Трудозатраты.Количество() Тогда
			
			ИмяОбласти = "Материалы";
			ТаблицаОбхода = Материалы;
			ТаблицаДополнения = Трудозатраты;
			
			ПолеОбласти = "Номенклатура";
			ПолеДополнения = "ВидРаботы";
			
		Иначе
			
			ИмяОбласти = "Работы";
			ТаблицаОбхода = Трудозатраты;
			ТаблицаДополнения = Материалы;
			
			ПолеОбласти = "ВидРаботы";
			ПолеДополнения = "Номенклатура";
			
		КонецЕсли;
		
		ОбластьДополнения = "";
		Если Материалы.Количество() > 0 И Трудозатраты.Количество() > 0 Тогда
			ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ИначеЕсли Материалы.Количество() = 0 И Трудозатраты.Количество() > 0 Тогда
			
			ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаРаботы");
			ОбластьДополнения = "|КолонкаРаботы";
			
		Иначе 
			
			ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаМатериалы");
			ОбластьДополнения = "|КолонкаМатериалы";
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		Индекс = 0;
		Для Каждого СтрокаЗатраты Из ТаблицаОбхода Цикл
			
			СтрокаДополнения = Неопределено;
			Если Индекс < ТаблицаДополнения.Количество() Тогда
				
				ОбластьМакета = Макет.ПолучитьОбласть("МатериалыРаботы");
				СтрокаДополнения = ТаблицаДополнения[Индекс];
				
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти + ОбластьДополнения);
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(СтрокаЗатраты);
			ОбластьМакета.Параметры[ПолеОбласти] = СтрокаЗатраты.Затрата;
			
			Если Не СтрокаДополнения = Неопределено Тогда
				
				ОбластьМакета.Параметры.Заполнить(СтрокаДополнения);
				ОбластьМакета.Параметры[ПолеДополнения] = СтрокаДополнения.Затрата;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		СтруктураИтогов = Новый Структура();
		СтруктураИтогов.Вставить("КоличествоМатериалов", Материалы.Количество());
		СтруктураИтогов.Вставить("КоличествоРабот", Трудозатраты.Количество());
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал" + ОбластьДополнения);
		ОбластьМакета.Параметры.Заполнить(СтруктураИтогов);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#Область АудитСостоянияСистемы

// Добавляет новую проверку состояния системы в таблицу проверок и заполняет ее ключевые поля.
//
// Параметры:
//	ТаблицаПроверок 			 - см. АудитСостоянияСистемы.ТаблицаПроверокСостоянияСистемы
//	Идентификатор 				 - Строка - уникальный строковый идентификатор (код) проверки
//	КонтекстПроверокВеденияУчета 			 - ПеречислениеСсылка.ОперацииЗакрытияМесяца - этап закрытия месяца (владелец), к которому относится проверка
//	УточнениеКонтекстаПроверокВеденияУчета - ПеречислениеСсылка.МоментЗапускаПроверкиОперацииЗакрытияМесяца - когда надо выполнять проверку
//	Обработчик 					 - Строка - полное имя экспортной процедуры-обработчика, вызываемого для выполнения проверки
//	ВажностьПроблемы 					 - ПеречислениеСсылка.ВажностьПроблемыУчета - статус по умолчанию для результатов выполнения проверки.
// 
// Возвращаемое значение:
//	СтрокаТаблицыЗначений - добавленная строка таблицы проверок.
//
Функция ДобавитьОписаниеНовойПроверки(ТаблицаПроверок, Идентификатор, КонтекстПроверокВеденияУчета,
			УточнениеКонтекстаПроверокВеденияУчета, Обработчик, ВажностьПроблемы = Неопределено) Экспорт
	
	ОписаниеПроверки = ТаблицаПроверок.Добавить();
	
	ОписаниеПроверки.Идентификатор 				  = Идентификатор;
	ОписаниеПроверки.ИдентификаторРодителя 		 = "КалькуляцииПродукции";
	ОписаниеПроверки.КонтекстПроверокВеденияУчета 		  = КонтекстПроверокВеденияУчета;
	ОписаниеПроверки.УточнениеКонтекстаПроверокВеденияУчета = УточнениеКонтекстаПроверокВеденияУчета;
	ОписаниеПроверки.Обработчик 				  = Обработчик;
	ОписаниеПроверки.ВажностьПроблемы 					  =
		?(ЗначениеЗаполнено(ВажностьПроблемы), ВажностьПроблемы, Перечисления.ВажностьПроблемыУчета.Ошибка);
		
	ОписаниеПроверки.ВыполняетсяТолькоВКонтексте = Истина;
	ОписаниеПроверки.ВозможноИзменениеВажности   = Ложь;
	
	ОписаниеПроверки.ДетализацияДоОрганизации    = Истина;
	ОписаниеПроверки.ДетализацияДоПериода        = Ложь;
	ОписаниеПроверки.Использование			     = Истина;
	
	Возврат ОписаниеПроверки;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
