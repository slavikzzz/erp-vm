
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПриЧтенииСозданииНаСервере();
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриЧтенииСозданииНаСервере();
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ИзменитьЗаголовокПоТипуОперации();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипОперацииПриИзменении(Элемент)
	
	ТипОперацииПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТипОперацииПриИзмененииНаСервере()
	
	ИзменитьЗаголовокПоТипуОперации();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Записать(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Провести(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ИзменитьЗаголовокПоТипуОперации();
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьЗаголовокПоТипуОперации()

	Создание = НСтр("ru = '(создание)';
					|en = '(Create)'");
	ТипыОпераций = Перечисления.ТипыРегламентныхОперацийМеждународныйУчет;
	Если Объект.ТипОперации = ТипыОпераций.ЗакрытиеСчетовДоходовРасходов Тогда
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Заголовок = СтрШаблон(
							МеждународнаяОтчетностьВызовСервера.ПредставлениеЗакрытияДоходовРасходов(),
							Объект.Номер,
							Объект.Дата);
		Иначе
			Заголовок = МеждународнаяОтчетностьВызовСервера.ПредставлениеЗакрытияДоходовРасходов(Ложь) + " " + Создание;
		КонецЕсли;
		
	ИначеЕсли Объект.ТипОперации = ТипыОпераций.РасчетКурсовыхРазницФункциональнаяВалюта Тогда
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Заголовок = СтрШаблон(
							МеждународнаяОтчетностьВызовСервера.ПредставлениеРасчетКурсовыхРазницФункциональнойВалюте(),
							Объект.Номер,
							Объект.Дата);
		Иначе
			Заголовок = МеждународнаяОтчетностьВызовСервера.ПредставлениеРасчетКурсовыхРазницФункциональнойВалюте(Ложь) + " " + Создание;
		КонецЕсли;
		
	ИначеЕсли Объект.ТипОперации = ТипыОпераций.РасчетКурсовыхРазницВалютаПредставления Тогда
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Заголовок = СтрШаблон(
							МеждународнаяОтчетностьВызовСервера.ПредставлениеРасчетКурсовыхРазницВалютеПредставления(),
							Объект.Номер,
							Объект.Дата);
		Иначе
			Заголовок = МеждународнаяОтчетностьВызовСервера.ПредставлениеРасчетКурсовыхРазницВалютеПредставления(Ложь) + " " + Создание;
		КонецЕсли;
		
	Иначе
		
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Заголовок = СтрШаблон(
									НСтр("ru = 'Регламентная операция (международный учет) %1 от %2';
										|en = 'Period-end transaction — Financial accounting %1 from %2'"),
									Объект.Номер,
									Объект.Дата);
		Иначе
			Заголовок = НСтр("ru = 'Регламентная операция (международный учет) (создание)';
							|en = 'Period-end transaction — Financial accounting (create)'");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#Область СтандартныеПодсистемы_ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти