#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НомерСтроки = 1;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СписокСделок(Команда)
	ОткрытьФорму("Отчет.СписокЦепочекСозданияСтоимостиКонтролируемыхСделок.Форма.ФормаОтчета", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)

	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("НомерСтроки",             НомерСтроки);
	ДопПараметры.Вставить("ЗагружатьДоСтроки",       ЗагружатьДоСтроки);
	ДопПараметры.Вставить("НомерМаксимальнойСтроки", НомерМаксимальнойСтроки);
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьФайлПослеПомещенияФайла", ЭтотОбъект, ДопПараметры);
	
	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ФайловаяСистемаКлиент.ЗагрузитьФайл(Оповещение, ПараметрыЗагрузки);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьФайлПослеПомещенияФайла (Результат, ДопПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		
		// Результат - это Структура с полямя Имя - имя файла, Хранение - адрес хранилища значений
		
		ДопПараметры.Вставить("ИмяФайла", Результат.Имя);
		ДопПараметры.Вставить("Хранение", Результат.Хранение);
		
		// 1. Запуск фонового задания на сервере.
		ДлительнаяОперация = ЗагрузитьЦепочкиСделокВФоне(ДопПараметры);
		
		// 2. Подключение обработчика завершения фонового задания.
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		Оповещение = Новый ОписаниеОповещения("ЗагрузитьЦепочкиСделокЗавершение", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
		
	КонецЕсли
КонецПроцедуры

&НаСервере
Функция ЗагрузитьЦепочкиСделокВФоне(ПараметрыЗначений)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияПроцедуры();
	
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	
	Возврат ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения, 
				"Документы.ЦепочкаСозданияСтоимостиКонтролируемойСделки.ЗагрузитьЦепочкиСделок", 
				ПараметрыЗначений, АдресХранилища);

КонецФункции

&НаСервереБезКонтекста
Функция ЗагрузитьРезультат(Знач АдресХранилищаРезультата)
	
	Возврат ПолучитьИзВременногоХранилища(АдресХранилищаРезультата);
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьЦепочкиСделокЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда // Пользователь отменил задание.
		Возврат;
	КонецЕсли;

	Если Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'При загрузке файла возникла ошибка по причине %1';
							|en = 'При загрузке файла возникла ошибка по причине %1'"),
			Результат.КраткоеПредставлениеОшибки));
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Загрузка завершена.';
														|en = 'Загрузка завершена.'"));
		
		СообщенияПользователю = ЗагрузитьРезультат(АдресХранилища);
		
		Если ТипЗнч(СообщенияПользователю) = Тип("Массив") Тогда
		
			// Выводим сообщения об ошибках загрузки, которые были на сервере.
			Для Каждого Сообщение Из СообщенияПользователю Цикл
				ОбщегоНазначенияКлиент.СообщитьПользователю(Сообщение);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;

	УдалитьИзВременногоХранилища(АдресХранилища);
	
КонецПроцедуры

#КонецОбласти
