#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УведомлениеОКонтролируемойСделке) Тогда
		Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УведомлениеОКонтролируемойСделке, "Организация");
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если Сделки.Количество() > КонтролируемыеСделкиКлиентСервер.МаксимальноеКоличествоСделокВЦепочке() Тогда
		ТекстСообщения = НСтр("ru = 'В цепочке не может быть более 4 сделок';
								|en = 'В цепочке не может быть более 4 сделок'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Сделки", "Объект", Отказ);
	КонецЕсли;
	
	ПроверитьЗаполнениеОбязательныхПолейТабличнойЧастиСделки(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ);
	
	ПроверитьИспользованиеПроисхождениеТовара(Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьЗаполнениеОбязательныхПолейТабличнойЧастиСделки(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ)
	
	ПроверяемыеУсловноПоля = НайтиПроверяемыеУсловноПоляСделок(ПроверяемыеРеквизиты);
	
	// Добавим в непроверяемые реквизиты поля, которые будут отдельно проверяться условно.
	Для Каждого ИмяПроверяемогоПоля Из ПроверяемыеУсловноПоля Цикл
		МассивНепроверяемыхРеквизитов.Добавить("Сделки" + "." + ИмяПроверяемогоПоля);
	КонецЦикла;
	
	Для Каждого СтрокаСделок Из Сделки Цикл
		
		НезаполняемыеПоля = Документы.ЦепочкаСозданияСтоимостиКонтролируемойСделки.НезаполняемыеПоляСтрокиСделок(
			СтрокаСделок.ИспользованиеПроисхождениеТовара, СтрокаСделок.ПризнакУчастникаСделки);
		
		Для Каждого ИмяПроверяемогоПоля Из ПроверяемыеУсловноПоля Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаСделок[ИмяПроверяемогоПоля])
				И НезаполняемыеПоля.Найти(ИмяПроверяемогоПоля) = Неопределено Тогда
				СообщитьОбОшибкеНезаполненногоРеквизитаВСтроке(СтрокаСделок, ИмяПроверяемогоПоля, Отказ);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция НайтиПроверяемыеУсловноПоляСделок(ПроверяемыеРеквизиты)
	
	ПроверяемыеУсловноПоля = Новый Массив;
	
	ИсключаемыеИзУсловнойПроверкиПоляСделок = ИсключаемыеИзУсловнойПроверкиПоляСделок();
	
	Для Каждого ПроверяемыйРеквизит Из ПроверяемыеРеквизиты Цикл
		ЧастиИмениРеквизита = СтрРазделить(ПроверяемыйРеквизит, ".");
		Если ЧастиИмениРеквизита.Количество() <> 2 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ВРег(ЧастиИмениРеквизита[0]) <> ВРег("Сделки") Тогда
			Продолжить;
		КонецЕсли;
		
		Если ИсключаемыеИзУсловнойПроверкиПоляСделок.Найти(ВРег(ЧастиИмениРеквизита[1])) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ПроверяемыеУсловноПоля.Добавить(ЧастиИмениРеквизита[1]);
		
	КонецЦикла;
	
	Возврат ПроверяемыеУсловноПоля;
	
КонецФункции

Функция ИсключаемыеИзУсловнойПроверкиПоляСделок()
	Исключаемые = Новый Массив;
	Исключаемые.Добавить(ВРег("ИспользованиеПроисхождениеТовара"));
	Возврат Исключаемые;
КонецФункции

Процедура СообщитьОбОшибкеНезаполненногоРеквизитаВСтроке(СтрокаСделок, ИмяПроверяемогоПоля, Отказ)
	
	ИмяСписка = НСтр("ru = 'Сделки';
					|en = 'Сделки'");
	
	МетаданныеТЧ = Метаданные.Документы.ЦепочкаСозданияСтоимостиКонтролируемойСделки.ТабличныеЧасти.Сделки;
	МетаданныеРеквизита = МетаданныеТЧ.Реквизиты.Найти(ИмяПроверяемогоПоля);
	Если МетаданныеРеквизита <> Неопределено Тогда
		ПредставлениеРеквизита = МетаданныеРеквизита.Синоним;
	Иначе
		ПредставлениеРеквизита = ИмяПроверяемогоПоля;
	КонецЕсли;
	
	ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, ПредставлениеРеквизита,
		СтрокаСделок.НомерСтроки, ИмяСписка);
	
	Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Сделки", СтрокаСделок.НомерСтроки, ИмяПроверяемогоПоля);
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
	
КонецПроцедуры

Процедура ПроверитьИспользованиеПроисхождениеТовара(Отказ)
	
	Для Каждого СтрокаСделок Из Сделки Цикл
		
		ЭтоПоследняяСтрока = СтрокаСделок.НомерСтроки = Сделки.Количество();
		
		Если ЭтоПоследняяСтрока Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не КонтролируемыеСделкиКлиентСервер.НужноЗаполнятьСведенияОСделкеЛиста1В(СтрокаСделок.ИспользованиеПроисхождениеТовара) Тогда
			
			СообщитьОбОшибкеЗаполненияПоляНеПоследнейСтроки(
				СтрокаСделок,
				"ИспользованиеПроисхождениеТовара",
				НСтр("ru = 'Использование/происхождение товара';
					|en = 'Использование/происхождение товара'"),
				СтрокаСделок.ИспользованиеПроисхождениеТовара,
				Отказ);
			
			Продолжить;
			
		КонецЕсли;
		
		Если СтрокаСделок.ПризнакУчастникаСделки <> Перечисления.ТипыУчастниковЦепочкиКонтролируемыхСделок.ТорговыйПосредник Тогда
			
			СообщитьОбОшибкеЗаполненияПоляНеПоследнейСтроки(
				СтрокаСделок,
				"ПризнакУчастникаСделки",
				НСтр("ru = 'Признак участника сделки';
					|en = 'Признак участника сделки'"),
				СтрокаСделок.ПризнакУчастникаСделки,
				Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СообщитьОбОшибкеЗаполненияПоляНеПоследнейСтроки(СтрокаСделок, ИмяРеквизита, ПредставлениеРеквизита, ЗначениеРеквизита, Отказ)
	
	ИмяСписка = НСтр("ru = 'Сделки';
					|en = 'Сделки'");
	
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Использовать значение ""%1"" можно только в последней сделке цепочки';
									|en = 'Использовать значение ""%1"" можно только в последней сделке цепочки'"),
		ЗначениеРеквизита);
	ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Корректность", ПредставлениеРеквизита,
		СтрокаСделок.НомерСтроки, ИмяСписка, ТекстСообщения);
	
	Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Сделки", СтрокаСделок.НомерСтроки, ИмяРеквизита);
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли