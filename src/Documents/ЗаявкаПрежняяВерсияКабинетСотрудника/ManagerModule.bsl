#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" И Параметры.Свойство("Ключ") Тогда
		
		ЗаданиеЗаявки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "Задание", Ложь);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("БизнесПроцесс", ЗаданиеЗаявки);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗадачаИсполнителя.Ссылка КАК Ссылка,
		|	ЗадачаИсполнителя.БизнесПроцесс КАК БизнесПроцесс,
		|	ЗадачаИсполнителя.Выполнена КАК Выполнена,
		|	ЗадачаИсполнителя.Дата КАК Дата
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|ГДЕ
		|	ЗадачаИсполнителя.БизнесПроцесс = &БизнесПроцесс
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
		ЗадачиЗаявки = Запрос.Выполнить().Выгрузить();
		ЗадачаЗаявки = Неопределено;
		Если ЗадачиЗаявки.Количество()= 1 Тогда
			ЗадачаЗаявки = ЗадачиЗаявки[0].Ссылка;
		Иначе
			Для каждого СтрокаТЗ Из ЗадачиЗаявки Цикл
				Если Не СтрокаТЗ.Выполнена Тогда
					ЗадачаЗаявки = СтрокаТЗ.Ссылка;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если Не ЗначениеЗаполнено(ЗадачаЗаявки) Тогда
				ЗадачаЗаявки = ЗадачиЗаявки[0].Ссылка;
			КонецЕсли;
		КонецЕсли;
		Параметры.Ключ = ЗадачаЗаявки;
		
		ПараметрыФормы = БизнесПроцессыИЗадачиВызовСервера.ФормаВыполненияЗадачи(Параметры.Ключ);
		ИмяФормыЗадачи = "";
		Результат = ПараметрыФормы.Свойство("ИмяФормы", ИмяФормыЗадачи);
		Если Результат Тогда
			ВыбраннаяФорма = ИмяФормыЗадачи;
			СтандартнаяОбработка = Ложь;
			ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Параметры, ПараметрыФормы.ПараметрыФормы, Ложь);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	ОписаниеСостава = ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта();
	ОписаниеСостава.ИспользоватьКраткийСостав = Ложь;
	ОписаниеСостава.ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента = Ложь;
	ОписаниеСостава.ЗаполнятьФизическиеЛицаПоСотрудникам = Ложь;
	
	ОписаниеХранения = ЗарплатаКадрыСоставДокументов.ОписаниеХраненияСотрудниковФизическихЛиц();
	ОписаниеХранения.ПолеСотрудник      = "Сотрудник";
	ОписаниеХранения.ПолеФизическоеЛицо = "ФизическоеЛицо";
	
	ОписаниеСостава.ОписаниеХраненияСотрудниковФизическихЛиц.Добавить(ОписаниеХранения);
	
	Возврат ОписаниеСостава;
	
	
КонецФункции

#КонецОбласти

#КонецЕсли