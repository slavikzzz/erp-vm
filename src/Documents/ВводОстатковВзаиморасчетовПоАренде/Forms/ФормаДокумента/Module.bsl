#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Автотест") Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Дата = ТекущаяДатаСеанса();
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	АдресГрафикиДоговора = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		
	#Область СтандартныеПодсистемы
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец ИнтеграцияС1СДокументооборотом
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.РаботаСФайлами
	ГиперссылкаФайлов = РаботаСФайлами.ГиперссылкаФайлов();
	ГиперссылкаФайлов.Размещение = "КоманднаяПанель";
	РаботаСФайлами.ПриСозданииНаСервере(ЭтотОбъект, ГиперссылкаФайлов);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ПриЧтенииСозданииНаСервере();
	
	СобытияФорм.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормКлиент.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	СобытияФормКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	СобытияФорм.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ВводОстатковВзаиморасчетовПоАренде", ПараметрыЗаписи, Объект.Ссылка);
	Оповестить("Запись_ВводОстатков", ПараметрыЗаписи, Объект.Ссылка);
	ОбщегоНазначенияУТКлиент.ОповеститьОЗаписиДокументаВЖурнал();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#Область СтраницаОсновное

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	ПартнерПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	КонтрагентПриИзмененииСервер();

КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	
	ДоговорПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтражатьВОперативномУчетеПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтражатьВБУиНУПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтражатьВУУПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(Элемент.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область СтраницаРасчетыПоДоговору

&НаКлиенте
Процедура СуммаОбеспечительногоПлатежаПриИзменении(Элемент)
	
	ПересчитатьСуммуДоговораИСуммуНДС(Объект);
	
	НастроитьЗависимыеЭлементыФормы(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПервогоОбеспечительногоПлатежаПриИзменении(Элемент)
	НастроитьЗависимыеЭлементыФормы(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СуммаУслугПоАренде(Элемент)
	
	СуммаУслугПоАрендеПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ДатаПервогоПлатежаПриИзменении(Элемент)
	НастроитьЗависимыеЭлементыФормы(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СуммаВыкупаПредметовАрендыПриИзменении(Элемент)
	
	СуммаВыкупаПредметовАрендыПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура СуммаНДСПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	
	СтавкаНДСПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура СрокАрендыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	УчетАрендованныхОСКлиент.ВвестиСрокАренды(
		ЭтотОбъект, 
		Объект,
		Новый ОписаниеОповещения("ВвестиСрокАрендыЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьОплатПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ПериодичностьОплат) Тогда
		Объект.ПериодичностьОплат = ПредопределенноеЗначение("Перечисление.ПериодичностьГрафика.Месяц");
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьНачисленийПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ПериодичностьНачислений) Тогда
		Объект.ПериодичностьНачислений = ПредопределенноеЗначение("Перечисление.ПериодичностьГрафика.Месяц");
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ОплатаУслугиПоАрендеПриИзменении(Элемент)
	
	ИзмененныеРеквизиты = Элемент.Имя;
	
	Если Объект.ПериодичностьОплат = Объект.ПериодичностьНачислений
		И Объект.ПериодичностьОплат <> ПредопределенноеЗначение("Перечисление.ПериодичностьГрафика.Произвольная")
		И Объект.НачислениеУслугиПоАренде = 0
		И Объект.ОплатаУслугиПоАренде <> 0 Тогда
			
		Объект.НачислениеУслугиПоАренде = Объект.ОплатаУслугиПоАренде;
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",НачислениеУслугиПоАренде";
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ИзмененныеРеквизиты);

КонецПроцедуры

&НаКлиенте
Процедура НачислениеУслугиПоАрендеПриИзменении(Элемент)
	
	ИзмененныеРеквизиты = Элемент.Имя;
	
	Если Объект.ПериодичностьОплат = Объект.ПериодичностьНачислений
		И Объект.ПериодичностьОплат <> ПредопределенноеЗначение("Перечисление.ПериодичностьГрафика.Произвольная")
		И Объект.ОплатаУслугиПоАренде = 0
		И Объект.НачислениеУслугиПоАренде <> 0 Тогда
			
		Объект.ОплатаУслугиПоАренде = Объект.НачислениеУслугиПоАренде;
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",ОплатаУслугиПоАренде";
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ИзмененныеРеквизиты);

КонецПроцедуры

&НаКлиенте
Процедура ПодвалИнформацияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "#ЗаполнитьГрафик" Тогда
		ЗаполнитьГрафикПоРасчетам();		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "#ЗаполнитьРасчетыПоГрафику" Тогда
		ЗаполнитьРасчетыПоГрафику();		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "#ИзменитьВерсиюДокумента" Тогда
		ИзменитьВерсиюДокумента();		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СтраницаОстаткиРасчетов

&НаКлиенте
Процедура АрендныеОбязательстваОстатокПриИзменении(Элемент)
	
	Если Элементы.АрендныеОбязательстваОстатокРегл.Видимость
		И ВалютаДоговора = ВалютаРегл
		И Объект.АрендныеОбязательстваОстатокРегл = ЗначенияРеквизитовДоИзменения.АрендныеОбязательстваОстаток Тогда
		Объект.АрендныеОбязательстваОстатокРегл = Объект.АрендныеОбязательстваОстаток;
	КонецЕсли;
	
	Если Элементы.АрендныеОбязательстваОстатокУпр.Видимость
		И ВалютаДоговора = ВалютаУпр
		И Объект.АрендныеОбязательстваОстатокУпр = ЗначенияРеквизитовДоИзменения.АрендныеОбязательстваОстаток Тогда
		Объект.АрендныеОбязательстваОстатокУпр = Объект.АрендныеОбязательстваОстаток;
	КонецЕсли;

	НастроитьЗависимыеЭлементыФормы(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АрендныеОбязательстваОстатокРеглПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура АрендныеОбязательстваОстатокУпрПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура УслугаПоАрендеОстатокПриИзменении(Элемент)
	
	Если Элементы.УслугаПоАрендеОстатокРегл.Видимость
		И ВалютаДоговора = ВалютаРегл
		И Объект.УслугаПоАрендеОстатокРегл = ЗначенияРеквизитовДоИзменения.УслугаПоАрендеОстаток Тогда
		Объект.УслугаПоАрендеОстатокРегл = Объект.УслугаПоАрендеОстаток;
	КонецЕсли;
	
	Если Элементы.УслугаПоАрендеОстатокУпр.Видимость
		И ВалютаДоговора = ВалютаУпр
		И Объект.УслугаПоАрендеОстатокУпр = ЗначенияРеквизитовДоИзменения.УслугаПоАрендеОстаток Тогда
		Объект.УслугаПоАрендеОстатокУпр = Объект.УслугаПоАрендеОстаток;
	КонецЕсли;

	НастроитьЗависимыеЭлементыФормы(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура УслугаПоАрендеОстатокРеглПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура УслугаПоАрендеОстатокУпрПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ВыкупнаяСтоимостьОстатокПриИзменении(Элемент)
	
	Если Элементы.ВыкупнаяСтоимостьОстатокРегл.Видимость
		И ВалютаДоговора = ВалютаРегл
		И Объект.ВыкупнаяСтоимостьОстатокРегл = ЗначенияРеквизитовДоИзменения.ВыкупнаяСтоимостьОстаток Тогда
		Объект.ВыкупнаяСтоимостьОстатокРегл = Объект.ВыкупнаяСтоимостьОстаток;
	КонецЕсли;
	
	Если Элементы.ВыкупнаяСтоимостьОстатокУпр.Видимость
		И ВалютаДоговора = ВалютаУпр
		И Объект.ВыкупнаяСтоимостьОстатокУпр = ЗначенияРеквизитовДоИзменения.ВыкупнаяСтоимостьОстаток Тогда
		Объект.ВыкупнаяСтоимостьОстатокУпр = Объект.ВыкупнаяСтоимостьОстаток;
	КонецЕсли;

	НастроитьЗависимыеЭлементыФормы(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ВыкупнаяСтоимостьОстатокРеглПриИзменении(Элемент)
	НастроитьЗависимыеЭлементыФормы(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВыкупнаяСтоимостьОстатокУпрПриИзменении(Элемент)
	НастроитьЗависимыеЭлементыФормы(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура НДСОстатокПриИзменении(Элемент)
	
	Если Элементы.НДСОстатокРегл.Видимость
		И ВалютаДоговора = ВалютаРегл
		И Объект.НДСОстатокРегл = ЗначенияРеквизитовДоИзменения.НДСОстаток Тогда
		Объект.НДСОстатокРегл = Объект.НДСОстаток;
	КонецЕсли;
	
	Если Элементы.НДСОстатокУпр.Видимость
		И ВалютаДоговора = ВалютаУпр
		И Объект.НДСОстатокУпр = ЗначенияРеквизитовДоИзменения.НДСОстаток Тогда
		Объект.НДСОстатокУпр = Объект.НДСОстаток;
	КонецЕсли;

	НастроитьЗависимыеЭлементыФормы(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура НДСОстатокРеглПриИзменении(Элемент)
	НастроитьЗависимыеЭлементыФормы(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура НДСОстатокУпрПриИзменении(Элемент)
	НастроитьЗависимыеЭлементыФормы(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПроцентыОстатокПриИзменении(Элемент)
	
	Если Элементы.ПроцентыОстатокРегл.Видимость
		И ВалютаДоговора = ВалютаРегл
		И Объект.ПроцентыОстатокРегл = ЗначенияРеквизитовДоИзменения.ПроцентыОстаток Тогда
		Объект.ПроцентыОстатокРегл = Объект.ПроцентыОстаток;
	КонецЕсли;
	
	Если Элементы.ПроцентыОстатокУпр.Видимость
		И ВалютаДоговора = ВалютаУпр
		И Объект.ПроцентыОстатокУпр = ЗначенияРеквизитовДоИзменения.ПроцентыОстаток Тогда
		Объект.ПроцентыОстатокУпр = Объект.ПроцентыОстаток;
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентыОстатокРеглПриИзменении(Элемент)
	НастроитьЗависимыеЭлементыФормы(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПроцентыОстатокУпрПриИзменении(Элемент)
	НастроитьЗависимыеЭлементыФормы(Элемент);
КонецПроцедуры

#КонецОбласти

#Область СтраницаДополнительно

&НаКлиенте
Процедура НалогообложениеНДСПриИзменении(Элемент)
	НалогообложениеНДСПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗакупкаПодДеятельностьОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраНажатие(Элемент, СтандартнаяОбработка)

	РаботаСФайламиКлиент.ПолеПредпросмотраНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)

	РаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания(ЭтотОбъект, Элемент,
				ПараметрыПеретаскивания, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)

	РаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание(ЭтотОбъект, Элемент,
				ПараметрыПеретаскивания, СтандартнаяОбработка);

КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАвансыПоДоговорамАренды

&НаКлиенте
Процедура АвансыПоДоговорамАрендыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока 
		И НЕ Копирование
		И СлужебныеПараметрыФормы.РеквизитыДоговора <> Неопределено Тогда
		
		ТекущиеДанные = Элементы.АвансыПоДоговорамАренды.ТекущиеДанные;
		Если СлужебныеПараметрыФормы.РеквизитыДоговора.ЕстьОбеспечительныйПлатеж Тогда
			ТекущиеДанные.ТипПлатежа = ПредопределенноеЗначение("Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж");
		Иначе
			ТекущиеДанные.ТипПлатежа = ПредопределенноеЗначение("Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимостьАванс");
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Записать(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Провести(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГрафикОплат(Команда)
	
	ОткрытьГрафикОплатИНачислений("ГрафикОплатУслуг");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГрафикНачислений(Команда)
	
	ОткрытьГрафикОплатИНачислений("ГрафикНачисленияУслуг");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГрафикНачисленияПроцентов(Команда)
	
	ОткрытьГрафикОплатИНачислений("ГрафикНачисленияПроцентов");

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСтавкуИлиСтоимость(Команда)
	
	Если УчетАрендованныхОСКлиент.МожноРассчитатьСтавкуИлиСтоимость(Объект, СлужебныеПараметрыФормы.РеквизитыДоговора, "") Тогда
		РассчитатьСтавкуСтоимостьПроцентыНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриВыполненииКоманды(Команда)

	ВводОстатковВзаиморасчетовПоАрендеКлиентЛокализация.ПриВыполненииКоманды(Команда, ЭтотОбъект);

КонецПроцедуры

#Область СтандартныеПодсистемы

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)

	РаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);

КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПриИзмененииРеквизитов

&НаКлиенте
Процедура НастроитьЗависимыеЭлементыФормы(Знач ИзмененныеРеквизитыИлиЭлемент = "")

	Если ТипЗнч(ИзмененныеРеквизитыИлиЭлемент) = Тип("Строка") Тогда
		ИзмененныеРеквизиты = ИзмененныеРеквизитыИлиЭлемент;
	Иначе
		ИзмененныеРеквизиты = ИзмененныеРеквизитыИлиЭлемент.Имя;
	КонецЕсли;

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	
	Если ТребуетсяВызовСервераДляНастройкиЭлементовФормы(СтруктураИзмененныхРеквизитов) Тогда
		НастроитьЗависимыеЭлементыФормыНаСервере(ИзмененныеРеквизиты)
	Иначе
		НастроитьЗависимыеЭлементыФормыНаКлиентеНаСервере(ЭтотОбъект, ИзмененныеРеквизиты);
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормыНаКлиентеНаСервере(Знач Форма, Знач ИзмененныеРеквизиты = "")
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	СлужебныеПараметрыФормы = Форма.СлужебныеПараметрыФормы;
	
	ВспомогательныеРеквизиты = Новый Структура;
	ВспомогательныеРеквизиты.Вставить("ИспользуетсяУправлениеВНА_2_4", СлужебныеПараметрыФормы.ИспользуетсяУправлениеВНА_2_4);
	ВспомогательныеРеквизиты.Вставить("ИспользуетсяУчетАрендыПоФСБУ25_2018", СлужебныеПараметрыФормы.ИспользуетсяУчетАрендыПоФСБУ25_2018);
	ВспомогательныеРеквизиты.Вставить("НачалоУчетаАрендыПоФСБУ25_2018", СлужебныеПараметрыФормы.НачалоУчетаАрендыПоФСБУ25_2018);
	ВспомогательныеРеквизиты.Вставить("РеквизитыДоговора", СлужебныеПараметрыФормы.РеквизитыДоговора);
	ВспомогательныеРеквизиты.Вставить("НезначащаяСтавкаНДС", СлужебныеПараметрыФормы.НезначащаяСтавкаНДС);
	ВспомогательныеРеквизиты.Вставить("РаздельныйУчетВНАПоНалогообложениюНДС", СлужебныеПараметрыФормы.РаздельныйУчетВНАПоНалогообложениюНДС);
	ВспомогательныеРеквизиты.Вставить("ИспользоватьРеглУчет", СлужебныеПараметрыФормы.ИспользоватьРеглУчет);
	ВспомогательныеРеквизиты.Вставить("ВестиУУНаПланеСчетовХозрасчетный", СлужебныеПараметрыФормы.ВестиУУНаПланеСчетовХозрасчетный);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВУУ", Объект.ОтражатьВУУ);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВБУиНУ", Объект.ОтражатьВБУиНУ);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВОперативномУчете", Объект.ОтражатьВОперативномУчете);
	ВспомогательныеРеквизиты.Вставить("ВерсияДокумента24", Ложь);
	ВспомогательныеРеквизиты.Вставить("ИмяТабличнойЧастиОС", "");

	ПараметрыРеквизитовОбъекта = УчетАрендованныхОСКлиентСервер.ЗначенияСвойствЗависимыхРеквизитов_ВводОстатковВзаиморасчетовПоАренде(
									Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты);
									
	ОбщегоНазначенияУТКлиентСервер.НастроитьЗависимыеЭлементыФормы(Форма, ПараметрыРеквизитовОбъекта);
	
	Если НЕ ОбновитьВсе Тогда
		ОбщегоНазначенияУТКлиентСервер.ОчиститьНеиспользуемыеРеквизиты(
			Объект, ПараметрыРеквизитовОбъекта, "ГрафикОплатУслуг,ГрафикНачисленияУслуг,ГрафикНачисленияПроцентов");
	КонецЕсли;
	
	УчетЗаБалансом = (СлужебныеПараметрыФормы.РеквизитыДоговора.Балансодержатель = ПредопределенноеЗначение("Перечисление.БалансодержательПредметовАренды.Арендодатель"));
	
	#Область СтраницаОсновное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.Комментарий.МаксимальнаяШирина = 
			?(СлужебныеПараметрыФормы.ИспользуетсяУчетАрендыПоФСБУ25_2018 ИЛИ НЕ УчетЗаБалансом, 67, 75);
		
		Элементы.ВводОстатковПо.Видимость = 
				Элементы.ОтражатьВОперативномУчете.Видимость
				ИЛИ Элементы.ОтражатьВБУиНУ.Видимость
				ИЛИ Элементы.ОтражатьВУУ.Видимость;
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаРасчетыПоДоговору
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018 
			ИЛИ НЕ УчетЗаБалансом;
			
		Элементы.КартинкаКакЗаполнитьРасчеты.Видимость = ЗначениеСвойства;
		Элементы.ПояснениеКакЗаполнитьРасчеты.Видимость = ЗначениеСвойства;	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВОперативномУчете;
				
		Элементы.СрокАренды.Видимость = ЗначениеСвойства;
		Элементы.ОткрытьГрафикОплат.Видимость = ЗначениеСвойства;
		Элементы.ОткрытьГрафикНачислений.Видимость = ЗначениеСвойства;
		
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = Элементы.ПериодичностьОплат.Видимость;

		Элементы.КартинкаКакЗаполнитьРасчеты.Видимость = ЗначениеСвойства;
		Элементы.ПояснениеКакЗаполнитьРасчеты.Видимость = ЗначениеСвойства;
		
	КонецЕсли;
		
	#КонецОбласти
	
	#Область Имя
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ДекорацияОстаткиВВалютеДоговора.Видимость = 
			Элементы.АрендныеОбязательстваОстаток.Видимость
			ИЛИ Элементы.УслугаПоАрендеОстаток.Видимость
			ИЛИ Элементы.ВыкупнаяСтоимостьОстаток.Видимость
			ИЛИ Элементы.НДСОстаток.Видимость
			ИЛИ Элементы.ПроцентыОстаток.Видимость;
			
		Элементы.ДекорацияОстаткиРегл.Видимость = 
			Элементы.АрендныеОбязательстваОстатокРегл.Видимость
			ИЛИ Элементы.УслугаПоАрендеОстатокРегл.Видимость
			ИЛИ Элементы.ВыкупнаяСтоимостьОстатокРегл.Видимость
			ИЛИ Элементы.НДСОстатокРегл.Видимость
			ИЛИ Элементы.ПроцентыОстатокРегл.Видимость;

		Элементы.ДекорацияОстаткиУпр.Видимость = 
			Элементы.АрендныеОбязательстваОстатокУпр.Видимость
			ИЛИ Элементы.УслугаПоАрендеОстатокУпр.Видимость
			ИЛИ Элементы.ВыкупнаяСтоимостьОстатокУпр.Видимость
			ИЛИ Элементы.НДСОстатокУпр.Видимость
			ИЛИ Элементы.ПроцентыОстатокУпр.Видимость;

		Элементы.ДекорацияОстаткиОтступ.Видимость = 
			Элементы.ДекорацияОстаткиВВалютеДоговора.Видимость
			ИЛИ Элементы.ДекорацияОстаткиРегл.Видимость
			ИЛИ Элементы.ДекорацияОстаткиУпр.Видимость;

		//
		Элементы.АрендныеОбязательстваОстатокДекорация.Видимость =
			Элементы.АрендныеОбязательстваОстаток.Видимость
			ИЛИ Элементы.АрендныеОбязательстваОстатокРегл.Видимость
			ИЛИ Элементы.АрендныеОбязательстваОстатокУпр.Видимость;

		Элементы.УслугаПоАрендеОстатокДекорация.Видимость =
			Элементы.УслугаПоАрендеОстаток.Видимость
			ИЛИ Элементы.УслугаПоАрендеОстатокРегл.Видимость
			ИЛИ Элементы.УслугаПоАрендеОстатокУпр.Видимость;

		Элементы.ВыкупнаяСтоимостьОстатокДекорация.Видимость =
			Элементы.ВыкупнаяСтоимостьОстаток.Видимость
			ИЛИ Элементы.ВыкупнаяСтоимостьОстатокРегл.Видимость
			ИЛИ Элементы.ВыкупнаяСтоимостьОстатокУпр.Видимость;

		Элементы.НДСОстатокДекорация.Видимость =
			Элементы.НДСОстаток.Видимость
			ИЛИ Элементы.НДСОстатокРегл.Видимость
			ИЛИ Элементы.НДСОстатокУпр.Видимость;

		Элементы.ПроцентыОстатокДекорация.Видимость =
			Элементы.ПроцентыОстаток.Видимость
			ИЛИ Элементы.ПроцентыОстатокРегл.Видимость
			ИЛИ Элементы.ПроцентыОстатокУпр.Видимость;

		//
		Элементы.АрендныеОбязательстваСальдоДебетовое.Видимость = 
			Элементы.АрендныеОбязательстваОстаток.Видимость
			ИЛИ Элементы.АрендныеОбязательстваОстатокРегл.Видимость
			ИЛИ Элементы.АрендныеОбязательстваОстатокУпр.Видимость;
		
		Элементы.УслугаПоАрендеСальдоДебетовое.Видимость = 
			Элементы.УслугаПоАрендеОстаток.Видимость
			ИЛИ Элементы.УслугаПоАрендеОстатокРегл.Видимость
			ИЛИ Элементы.УслугаПоАрендеОстатокУпр.Видимость;
		
		Элементы.ВыкупнаяСтоимостьСальдоДебетовое.Видимость = 
			Элементы.ВыкупнаяСтоимостьОстаток.Видимость
			ИЛИ Элементы.ВыкупнаяСтоимостьОстатокРегл.Видимость
			ИЛИ Элементы.ВыкупнаяСтоимостьОстатокУпр.Видимость;

		Элементы.НДССальдоДебетовое.Видимость = 
			Элементы.НДСОстаток.Видимость
			ИЛИ Элементы.НДСОстатокРегл.Видимость
			ИЛИ Элементы.НДСОстатокУпр.Видимость;

		Элементы.ПроцентыСальдоДебетовое.Видимость = 
			Элементы.ПроцентыОстаток.Видимость
			ИЛИ Элементы.ПроцентыОстатокРегл.Видимость
			ИЛИ Элементы.ПроцентыОстатокУпр.Видимость;

		//
		Элементы.ДекорацияОстаткиСальдо.Видимость = 
			Элементы.АрендныеОбязательстваСальдоДебетовое.Видимость
			ИЛИ Элементы.УслугаПоАрендеСальдоДебетовое.Видимость
			ИЛИ Элементы.ВыкупнаяСтоимостьСальдоДебетовое.Видимость
			ИЛИ Элементы.НДССальдоДебетовое.Видимость
			ИЛИ Элементы.ПроцентыСальдоДебетовое.Видимость;
		
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("АрендныеОбязательстваОстаток")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("АрендныеОбязательстваОстатокРегл")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("АрендныеОбязательстваОстатокУпр")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("УслугаПоАрендеОстаток")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("УслугаПоАрендеОстатокРегл")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("УслугаПоАрендеОстатокУпр")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВыкупнаяСтоимостьОстаток")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВыкупнаяСтоимостьОстатокРегл")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВыкупнаяСтоимостьОстатокУпр")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НДСОстаток")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НДСОстатокРегл")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НДСОстатокУпр")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПроцентыОстаток")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПроцентыОстатокРегл")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПроцентыОстатокУпр") Тогда
			
		ОбновитьЗначенияРеквизитовДоИзменения(Форма);
	КонецЕсли;
		
	#КонецОбласти
	
	#Область СтраницаДисконтирование
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете")
		ИЛИ ОбновитьВсе Тогда

		Элементы.СправедливаяСтоимостьВалюта.Видимость = Элементы.СправедливаяСтоимость.Видимость;
		Элементы.НегарантированнаяСтоимостьВалюта.Видимость = Элементы.НегарантированнаяСтоимость.Видимость;
		Элементы.СтоимостьВалюта.Видимость = Элементы.Стоимость.Видимость;
	
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ГруппаПодвал
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НалогообложениеНДС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗакупкаОблагаетсяНДС = УчетНДСУПКлиентСервер.ОтображатьНДСВИтогахДокументаЗакупки(Объект.НалогообложениеНДС);
		
		Если ЗакупкаОблагаетсяНДС Тогда
			Элементы.ГруппаСтраницыНДС.ТекущаяСтраница   = Элементы.СтраницаСНДС;
			Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Элементы.СтраницаВсегоСНДС;
		Иначе
			Элементы.ГруппаСтраницыНДС.ТекущаяСтраница   = Элементы.СтраницаБезНДС;
			Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Элементы.СтраницаВсегоБезНДС;
		КонецЕсли;
	
	КонецЕсли;
	
	#КонецОбласти
	
	УчетАрендованныхОСКлиентСервер.НастроитьЗависимыеЭлементыФормы_Аренда(Форма, ВспомогательныеРеквизиты, ИзмененныеРеквизиты);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЗависимыеЭлементыФормыНаСервере(Знач ИзмененныеРеквизиты = "")

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	#Область СтраницаОсновное
	
	Если ОбновитьВсе Тогда
		Элементы.ВводОстатковПо.Видимость = Ложь;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаОстаткиРасчетов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ ОбновитьВсе Тогда
		
		ВалютаДоговора = СлужебныеПараметрыФормы.РеквизитыДоговора.ВалютаВзаиморасчетов;
		Элементы.ДекорацияОстаткиВВалютеДоговора.Заголовок = Строка(ВалютаДоговора);
		
		ПараметрВыбораОтбор = Неопределено;
		ИндексОтбора = 0;
		Для Каждого ПараметрВыбора Из Элементы.АвансыПоДоговорамАрендыТипПлатежа.ПараметрыВыбора Цикл 
			ИндексОтбора = ИндексОтбора+1;
			Если ПараметрВыбора.Имя = "Отбор.Ссылка" Тогда
				ЭлементУслугаПоАрендеАванс = ПараметрВыбора.Значение.Найти(Перечисления.ТипыПлатежейПоАренде.УслугаПоАрендеАванс);
				Если СлужебныеПараметрыФормы.РеквизитыДоговора.ВестиУчетАвансовПоТекущимАренднымПлатежамВРазрезеПлатежныхДокументов = Истина Тогда 
					Если ЭлементУслугаПоАрендеАванс = Неопределено Тогда 
						ДоступныеТипыПлатежей = Новый Массив(ПараметрВыбора.Значение);
						ДоступныеТипыПлатежей.Добавить(Перечисления.ТипыПлатежейПоАренде.УслугаПоАрендеАванс);
						ПараметрВыбораОтбор = Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(ДоступныеТипыПлатежей));
					КонецЕсли;
				Иначе
					Если ЭлементУслугаПоАрендеАванс <> Неопределено Тогда 
						ДоступныеТипыПлатежей = Новый Массив(ПараметрВыбора.Значение);
						ДоступныеТипыПлатежей.Удалить(ЭлементУслугаПоАрендеАванс);
						ПараметрВыбораОтбор = Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(ДоступныеТипыПлатежей));
					КонецЕсли;
				КонецЕсли;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ПараметрВыбораОтбор <> Неопределено Тогда
			ПараметрыВыбораТиповПлатежей = Новый Массив(Элементы.АвансыПоДоговорамАрендыТипПлатежа.ПараметрыВыбора);
			ПараметрыВыбораТиповПлатежей.Удалить(ИндексОтбора-1);
			ПараметрыВыбораТиповПлатежей.Добавить(ПараметрВыбораОтбор);
			Элементы.АвансыПоДоговорамАрендыТипПлатежа.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораТиповПлатежей);
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ДекорацияОстаткиУпр.Заголовок = СтрШаблон(НСтр("ru = 'Упр. (%1):';
																|en = 'Manag. (%1):'"), Строка(ВалютаУпр));
		
		Если ЗначениеЗаполнено(ВалютаРегл) Тогда
			Элементы.ДекорацияОстаткиРегл.Заголовок = СтрШаблон(НСтр("ru = 'Регл. (%1):';
																	|en = 'Local (%1):'"), Строка(ВалютаРегл));
		Иначе
			Элементы.ДекорацияОстаткиРегл.Заголовок = НСтр("ru = 'Регл.:';
															|en = 'Local.:'");
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Прочее
	
	Если ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ИспользоватьУчетНДС",
			ПолучитьФункциональнуюОпцию("ИспользоватьУчетНДС"),
			СлужебныеПараметрыФормы);
		
		Если НЕ СлужебныеПараметрыФормы.ИспользоватьУчетНДС Тогда
			Элементы.СуммаНДСВалюта.Видимость = Ложь;
		КонецЕсли;
		
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ИспользоватьРеглУчет",
			ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет"),
			СлужебныеПараметрыФормы);
			
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ВестиУУНаПланеСчетовХозрасчетный",
			ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный"),
			СлужебныеПараметрыФормы);

	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ ОбновитьВсе Тогда
			
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ВалютаРеглПредставление",
			Строка(ВалютаРегл),
			СлужебныеПараметрыФормы);
			
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ВалютыСовпадают",
			СлужебныеПараметрыФормы.ВалютаУпрПредставление = СлужебныеПараметрыФормы.ВалютаРеглПредставление,
			СлужебныеПараметрыФормы);
		ГоловнаяОрганизация = НастройкиНалоговУчетныхПолитикПовтИсп.ГоловнаяОрганизация(Объект.Организация);
		УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", ГоловнаяОрганизация));
		
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") Тогда
		
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"НачалоУчетаАрендыПоФСБУ25_2018",
			УчетАрендованныхОС.НачалоУчетаАрендыПоФСБУ25_2018(Объект.Организация),
			СлужебныеПараметрыФормы);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") Тогда
		
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ИспользуетсяУправлениеВНА_2_4",
			ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Объект.Дата),
			СлужебныеПараметрыФормы);
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ИспользуетсяУчетАрендыПоФСБУ25_2018",
			УчетАрендованныхОС.ИспользуетсяУчетАрендыПоФСБУ25_2018(Объект.Организация, Объект.Дата),
			СлужебныеПараметрыФормы);
		
		//
		ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
			"НастройкиУчетаНДС", Объект.Организация, ?(Объект.Дата <> '000101010000', КонецМесяца(Объект.Дата), '000101010000'));

		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"РаздельныйУчетВНАПоНалогообложениюНДС",
			ПараметрыУчетнойПолитики <> Неопределено И ПараметрыУчетнойПолитики.РаздельныйУчетВНАПоНалогообложениюНДС,
			СлужебныеПараметрыФормы);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СтавкаНДС") Тогда
		
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"НезначащаяСтавкаНДС",
			УчетНДСУП.НезначащаяСтавка(Объект.СтавкаНДС),
			СлужебныеПараметрыФормы);
		
	КонецЕсли;

	#КонецОбласти
	
	НастроитьЗависимыеЭлементыФормыНаКлиентеНаСервере(ЭтотОбъект, ИзмененныеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Функция ТребуетсяВызовСервераДляНастройкиЭлементовФормы(СтруктураИзмененныхРеквизитов)

	Возврат СтруктураИзмененныхРеквизитов.Количество() = 0
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор");

КонецФункции

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	
	АктуализироватьЗакупкуПодДеятельность();
	
	НастроитьЗависимыеЭлементыФормыНаСервере("Дата,ЗакупкаПодДеятельность");
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Объект.Организация);
	
	АктуализироватьЗакупкуПодДеятельность();
	
	НастроитьЗависимыеЭлементыФормыНаСервере("Организация,Договор,ЗакупкаПодДеятельность");
	
КонецПроцедуры

&НаСервере
Процедура ПартнерПриИзмененииНаСервере()
	
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Объект.Партнер, Объект.Контрагент);
	
	КонтрагентПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииСервер()
	
	ПараметрыЗаполнения = Документы.ВводОстатковВзаиморасчетовПоАренде.ПараметрыЗаполненияНалогообложенияНДСЗакупки(Объект);
	
	УчетНДСУП.ЗаполнитьСписокВыбораНалогообложенияНДСЗакупки(Элементы.НалогообложениеНДС,
		Объект.НалогообложениеНДС,
		ПараметрыЗаполнения,
		УчетНДСКэшированныеЗначенияПараметров);

	УчетНДСУП.ЗаполнитьНалогообложениеНДСЗакупки(
		Объект.НалогообложениеНДС, 
		ПараметрыЗаполнения, 
		УчетНДСКэшированныеЗначенияПараметров);
		
	Договор = Справочники.ДоговорыАренды.ДоговорПоУмолчанию(
					Объект.Организация, Объект.Партнер, Объект.Контрагент, Объект.Договор);
	
	Если Договор <> Объект.Договор Тогда
		Объект.Договор = Договор;
		ДоговорПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДоговорПриИзмененииНаСервере()
	
	ПараметрыЗаполнения = Документы.ВводОстатковВзаиморасчетовПоАренде.ПараметрыЗаполненияНалогообложенияНДСЗакупки(Объект);
	
	УчетНДСУП.ЗаполнитьСписокВыбораНалогообложенияНДСЗакупки(Элементы.НалогообложениеНДС,
		Объект.НалогообложениеНДС,
		ПараметрыЗаполнения,
		УчетНДСКэшированныеЗначенияПараметров);

	УчетНДСУП.ЗаполнитьНалогообложениеНДСЗакупки(
		Объект.НалогообложениеНДС, 
		ПараметрыЗаполнения, 
		УчетНДСКэшированныеЗначенияПараметров);
		
	АктуализироватьЗакупкуПодДеятельность();

	ДобавитьРеквизитыДоговораВСлужебныеПараметрыФормы();
	
	Если НЕ ЗначениеЗаполнено(Объект.Договор) Тогда
		ВалютаДокумента = Справочники.Валюты.ПустаяСсылка();
	КонецЕсли;
	
	РеквизитыДоговора = СлужебныеПараметрыФормы.РеквизитыДоговора;
	
	ВалютаДокумента = РеквизитыДоговора.ВалютаВзаиморасчетов;
	ВалютаДокументаПредставление = Строка(ВалютаДокумента);
	
	НастроитьЗависимыеЭлементыФормыНаСервере("Договор,НалогообложениеНДС,ЗакупкаПодДеятельность");
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыДоговораВСлужебныеПараметрыФормы()
	
	ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
		"РеквизитыДоговора",
		УчетАрендованныхОС.РеквизитыДоговораАренды(Объект.Договор),
		СлужебныеПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Процедура СуммаУслугПоАрендеПриИзмененииНаСервере()
	
	ПересчитатьСуммуДоговораИСуммуНДС(Объект);
	НастроитьЗависимыеЭлементыФормыНаСервере("СуммаУслугПоАренде");
	
КонецПроцедуры

&НаСервере
Процедура СуммаВыкупаПредметовАрендыПриИзмененииНаСервере()

	ПересчитатьСуммуДоговораИСуммуНДС(Объект);
	ПересчитатьСуммуНДСВыкупаПредметовАренды(Объект);

	НастроитьЗависимыеЭлементыФормыНаСервере("СуммаВыкупаПредметовАренды");
	
КонецПроцедуры

&НаСервере
Процедура СтавкаНДСПриИзмененииНаСервере()
	
	ПересчитатьСуммуДоговораИСуммуНДС(Объект);
	ПересчитатьСуммуНДСВыкупаПредметовАренды(Объект);
	
	Объект.ПриведеннаяСтоимость = ПриведеннаяСтоимость(Объект, СлужебныеПараметрыФормы.РеквизитыДоговора);

	НастроитьЗависимыеЭлементыФормыНаСервере("СтавкаНДС");
	
КонецПроцедуры

#КонецОбласти

#Область ПересчетСумм

&НаКлиентеНаСервереБезКонтекста
Процедура ПересчитатьСуммуДоговораИСуммуНДС(Объект)
	
	УчетАрендованныхОСКлиентСервер.ПересчитатьСуммуДокументаАренды(Объект);
	УчетАрендованныхОСКлиентСервер.ПересчитатьСуммуНДСВДокументеАренды(Объект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПересчитатьСуммуНДСВыкупаПредметовАренды(Объект)
	
	ТекПроцентНДС = УчетНДСУПКлиентСервер.ЗначениеСтавкиНДС(Объект.СтавкаНДС);
	Объект.СуммаНДСВыкупаПредметовАренды = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(Объект.СуммаВыкупаПредметовАренды, ТекПроцентНДС, Истина);
	
КонецПроцедуры
	
#КонецОбласти

#Область Прочее

&НаСервере
Процедура ИнициализироватьСлужебныеПараметрыФормы()

	НовыеСлужебныеПараметрыФормы = Новый Структура;
	НовыеСлужебныеПараметрыФормы.Вставить("Балансодержатель", Неопределено);

	ЗначениеПараметра = ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Объект.Дата);
	НовыеСлужебныеПараметрыФормы.Вставить("ИспользуетсяУправлениеВНА_2_4", ЗначениеПараметра);

	ЗначениеПараметра = УчетАрендованныхОС.НачалоУчетаАрендыПоФСБУ25_2018(Объект.Организация);
	НовыеСлужебныеПараметрыФормы.Вставить("НачалоУчетаАрендыПоФСБУ25_2018", ЗначениеПараметра);

	ЗначениеПараметра = УчетАрендованныхОС.ИспользуетсяУчетАрендыПоФСБУ25_2018(Объект.Организация, Объект.Дата);
	НовыеСлужебныеПараметрыФормы.Вставить("ИспользуетсяУчетАрендыПоФСБУ25_2018", ЗначениеПараметра);

	ЗначениеПараметра = ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА();
	НовыеСлужебныеПараметрыФормы.Вставить("ВедетсяРегламентированныйУчетВНА", ЗначениеПараметра);
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Объект.Организация);
	
	НовыеСлужебныеПараметрыФормы.Вставить("ВалютаУпрПредставление", Строка(ВалютаУпр));
	НовыеСлужебныеПараметрыФормы.Вставить("ВалютаРеглПредставление", Строка(ВалютаРегл));
	НовыеСлужебныеПараметрыФормы.Вставить("ВалютыСовпадают", ВалютаУпр = ВалютаРегл);
	
	НовыеСлужебныеПараметрыФормы.Вставить("НезначащаяСтавкаНДС", УчетНДСУП.НезначащаяСтавка(Объект.СтавкаНДС));
	
	СлужебныеПараметрыФормы = Новый ФиксированнаяСтруктура(НовыеСлужебныеПараметрыФормы);

	ДобавитьРеквизитыДоговораВСлужебныеПараметрыФормы();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализацияФормыПриСозданииНаСервере()

	ПараметрыЗаполнения = Документы.ВводОстатковВзаиморасчетовПоАренде.ПараметрыЗаполненияНалогообложенияНДСЗакупки(Объект);
	УчетНДСУП.ЗаполнитьСписокВыбораНалогообложенияНДСЗакупки(
		Элементы.НалогообложениеНДС,
		Объект.НалогообложениеНДС,
		ПараметрыЗаполнения,
		УчетНДСКэшированныеЗначенияПараметров);

	АктуализироватьЗакупкуПодДеятельность();

	ИнициализироватьСлужебныеПараметрыФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ИнициализацияФормыПриСозданииНаСервере();
	
	ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Объект.Организация);
	
	ИспользоватьПартнеровИКонтрагентов = ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов");
	Элементы.Контрагент.Видимость = ИспользоватьПартнеровИКонтрагентов;
	
	КонтрагентДоИзменения = Объект.Контрагент;
	ПартнерДоИзменения = Объект.Партнер;
	
	ОбновитьЗначенияРеквизитовДоИзменения(ЭтотОбъект);
	
	НастроитьЗависимыеЭлементыФормыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура НалогообложениеНДСПриИзмененииНаСервере()
	
	ЗаполнитьСтавкуНДС();
	ПересчитатьСуммуДоговораИСуммуНДС(Объект);

	НастроитьЗависимыеЭлементыФормыНаСервере("НалогообложениеНДС,СтавкаНДС");	
	
КонецПроцедуры

&НаСервере
Процедура АктуализироватьЗакупкуПодДеятельность(Заполнить = Истина)
	
	ПараметрыЗаполнения = Документы.ВводОстатковВзаиморасчетовПоАренде.ПараметрыЗаполненияВидаДеятельностиНДС(Объект);
	
	Если Заполнить Тогда
		УчетНДСУП.ЗаполнитьВидДеятельностиНДС(
			Объект.ЗакупкаПодДеятельность, 
			ПараметрыЗаполнения,
			УчетНДСКэшированныеЗначенияПараметров);
	КонецЕсли;
	
	УчетНДСУП.ЗаполнитьСписокВыбораВидаДеятельностиНДС(
		Элементы.ЗакупкаПодДеятельность,
		Объект.ЗакупкаПодДеятельность,
		ПараметрыЗаполнения, 
		УчетНДСКэшированныеЗначенияПараметров);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтавкуНДС()
	
	Если Объект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
		Или Объект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС Тогда
		Объект.СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
	Иначе
		Объект.СтавкаНДС = УчетНДСУП.СтавкаНДСПоУмолчанию(Объект.Организация, Объект.Дата);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГрафикОплатИНачислений(ИмяГрафика)
	
	ВнеоборотныеАктивыКлиент.ОткрытьГрафикОплатИНачислений(
		Объект, 
		ЭтотОбъект, 
		ПоместитьГрафикиВоВременноеХранилище(), 
		Новый ОписаниеОповещения("ОткрытьГрафикОплатИНачисленийЗавершение", ЭтотОбъект), 
		ИмяГрафика);
		
КонецПроцедуры

&НаСервере
Функция ПоместитьГрафикиВоВременноеХранилище()

	ГрафикиДоговора = Новый Структура;
	ГрафикиДоговора.Вставить("ГрафикНачисленияУслуг", Объект.ГрафикНачисленияУслуг.Выгрузить());
	ГрафикиДоговора.Вставить("ГрафикОплатУслуг", Объект.ГрафикОплатУслуг.Выгрузить());
	ГрафикиДоговора.Вставить("ГрафикНачисленияПроцентов", Объект.ГрафикНачисленияПроцентов.Выгрузить());

	Адрес = ПоместитьВоВременноеХранилище(ГрафикиДоговора, АдресГрафикиДоговора);
		
	Возврат Адрес;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьГрафикОплатИНачисленийЗавершение(РезультатЗакрытия, ДопПараметры) Экспорт

	Если ЭтоАдресВременногоХранилища(РезультатЗакрытия) Тогда
		ОткрытьГрафикОплатИНачисленийЗавершениеНаСервере(РезультатЗакрытия);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОткрытьГрафикОплатИНачисленийЗавершениеНаСервере(Знач РезультатЗакрытия)
	
	Модифицированность = Истина;

	ГрафикиДоговора = ПолучитьИзВременногоХранилища(РезультатЗакрытия);

	Объект.ГрафикНачисленияПроцентовВведенВручную = ГрафикиДоговора.ГрафикНачисленияПроцентовВведенВручную;
	Объект.СуммаПроцентов = ГрафикиДоговора.СуммаПроцентов;
	Объект.ГрафикОплатУслуг.Загрузить(ГрафикиДоговора.ГрафикОплатУслуг);
	Объект.ГрафикНачисленияУслуг.Загрузить(ГрафикиДоговора.ГрафикНачисленияУслуг);
	Объект.ГрафикНачисленияПроцентов.Загрузить(ГрафикиДоговора.ГрафикНачисленияПроцентов);
	
	УчетАрендованныхОСКлиентСервер.ПересчитатьСуммуНДСВДокументеАренды(Объект);

	Объект.ПриведеннаяСтоимость = ПриведеннаяСтоимость(Объект, СлужебныеПараметрыФормы.РеквизитыДоговора);

	НастроитьЗависимыеЭлементыФормыНаСервере(
		"ГрафикОплатУслуг,ГрафикНачисленияУслуг,ГрафикНачисленияПроцентов,ГрафикНачисленияПроцентовВведенВручную");
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСтавкуСтоимостьПроцентыНаСервере()

	Документы.ВводОстатковВзаиморасчетовПоАренде.РассчитатьСтавкуСтоимостьПроценты(Объект, СлужебныеПараметрыФормы.РеквизитыДоговора);
		
	НастроитьЗависимыеЭлементыФормыНаСервере("ОССправедливаяСтоимость");
			
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГрафикПоРасчетам()
	
	Если (Объект.ПериодичностьОплат = ПредопределенноеЗначение("Перечисление.ПериодичностьГрафика.Произвольная")
			ИЛИ НЕ ЗначениеЗаполнено(Объект.ПериодичностьОплат))
		И (Объект.ПериодичностьНачислений = ПредопределенноеЗначение("Перечисление.ПериодичностьГрафика.Произвольная")
			ИЛИ НЕ ЗначениеЗаполнено(Объект.ПериодичностьНачислений)) Тогда
				
		Возврат;
	КонецЕсли;
	
	Если УчетАрендованныхОСКлиент.ПроверитьВозможностьЗаполненияГрафикаПоРасчетам(Объект, СлужебныеПараметрыФормы.РеквизитыДоговора) Тогда
		
		РассчитатьСтавкуИлиСтоимость = УчетАрендованныхОСКлиент.МожноРассчитатьСтавкуИлиСтоимость(
			Объект, СлужебныеПараметрыФормы.РеквизитыДоговора, "", Ложь);
		
		ЗаполнитьГрафикПоРасчетамНаСервере(РассчитатьСтавкуИлиСтоимость);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГрафикПоРасчетамНаСервере(Знач РассчитатьСтавкуИлиСтоимость)
	
	Модифицированность = Истина;
	
	УчетАрендованныхОС.ЗаполнитьГрафикОплатИНачисленийПоРасчетам(Объект, СлужебныеПараметрыФормы.РеквизитыДоговора);
	
	Объект.ПриведеннаяСтоимость = ПриведеннаяСтоимость(Объект, СлужебныеПараметрыФормы.РеквизитыДоговора);

	Если РассчитатьСтавкуИлиСтоимость Тогда
		РассчитатьСтавкуСтоимостьПроцентыНаСервере();
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормыНаСервере("ГрафикОплатУслуг,ГрафикНачисленияУслуг");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасчетыПоГрафику()
	
	Модифицированность = Истина;

	УчетАрендованныхОС.ЗаполнитьРасчетыПоГрафикуОплатИНачислений(Объект, СлужебныеПараметрыФормы.РеквизитыДоговора);
	
	СрокАрендыИзменен = Ложь;
	
	ИзмененныеРеквизиты = 
	"СуммаОбеспечительногоПлатежа,ДатаПервогоОбеспечительногоПлатежа,
	|СуммаУслугПоАренде,ДатаПервогоПлатежа,
	|СуммаВыкупаПредметовАренды,СуммаНДСВыкупаПредметовАренды,
	|СуммаНДС,
	|ПериодичностьОплат,ОплатаУслугиПоАренде,
	|ПериодичностьНачислений,НачислениеУслугиПоАренде";

	НастроитьЗависимыеЭлементыФормыНаСервере(ИзмененныеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВерсиюДокумента()
	
	ТекстВопроса = НСтр("ru = 'После изменения версии документа некоторые реквизиты будут обязательны для заполнения.
						|Вернуться к старой версии документа будет невозможно. 
						|Продолжить?';
						|en = 'Some attributes will become mandatory after changing the document version.
						|It will be impossible to return to the old version of the document.
						|Continue?'");
	ОписаниеОповещения = Новый ОписаниеОповещения("ИзменитьВерсиюДокументаЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВерсиюДокументаЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Модифицированность = Истина;
		Объект.ВерсияДокумента24 = Ложь;
		НастроитьЗависимыеЭлементыФормы("ВерсияДокумента24");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиСрокАрендыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено 
		ИЛИ ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;

	НастроитьЗависимыеЭлементыФормы("ДатаНачалаАренды,СрокЛет,СрокМес,СрокДней");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПриведеннаяСтоимость(Объект, РеквизитыДоговора)

	СтоимостьПредметовАренды = УчетАрендованныхОСКлиентСервер.СтоимостьПредметовАренды(
		Объект, РеквизитыДоговора, "");
	
	ПриведеннаяСтоимость = УчетАрендованныхОСКлиентСервер.ПриведеннаяСтоимость(
									СтоимостьПредметовАренды, 
									Объект.ГрафикОплатУслуг, 
									Объект.ДатаНачалаАренды);
	Возврат ПриведеннаяСтоимость;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЗначенияРеквизитовДоИзменения(Форма)

	СписокРеквизитов = 
	"АрендныеОбязательстваОстаток,АрендныеОбязательстваОстатокРегл,АрендныеОбязательстваОстатокУпр,
	|УслугаПоАрендеОстаток,УслугаПоАрендеОстатокРегл,УслугаПоАрендеОстатокУпр,
	|ВыкупнаяСтоимостьОстаток,ВыкупнаяСтоимостьОстатокРегл,ВыкупнаяСтоимостьОстатокУпр,
	|НДСОстаток,НДСОстатокРегл,НДСОстатокУпр,
	|ПроцентыОстаток,ПроцентыОстатокРегл,ПроцентыОстатокУпр";
	
	НовыеЗначения = Новый Структура(СписокРеквизитов);
	ЗаполнитьЗначенияСвойств(НовыеЗначения, Форма);
	
	Форма.ЗначенияРеквизитовДоИзменения = Новый ФиксированнаяСтруктура(НовыеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьВыполнениеКомандыЛокализации(ИмяКоманды, ПараметрыОповещения) Экспорт
	
	Если ПараметрыОповещения.ТребуетсяВызовСервера Тогда
		ПриВыполненииКомандыЗавершениеНаСервере(ИмяКоманды, ПараметрыОповещения.ПараметрыОбработки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриВыполненииКомандыЗавершениеНаСервере(Знач ИмяКоманды, Знач ДополнительныеПараметры)
	
	ВводОстатковВзаиморасчетовПоАрендеЛокализация.ПриВыполненииКоманды(ИмяКоманды, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
