
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("ОсновныеСредства");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("СуммыДокументовВВалютахУчета");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("ФинансовыеИнструменты");
	
	ВводОстатковВзаиморасчетовПоАрендеЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Дополнительные источники данных для движений.
// 
// Параметры:
//  ИмяРегистра - Строка - Имя регистра
// 
// Возвращаемое значение:
//  Соответствие - Дополнительные источники данных для движений.
Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных;
	
КонецФункции

// Формирует адаптированный текст запроса движений по регистру.
// 
// Параметры:
//  ИмяРегистра - Строка - Имя регистра для которого нужно сформировать текст запроса.
// 
// Возвращаемое значение:
//  Структура - Содержит:
// 	* ТекстЗапроса - Строка - Текст запроса.
// 	* ЗначенияПараметров - Структура - Значения параметров запроса.
Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ВводОстатковВзаиморасчетовПоАренде";
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	
	ВЗапросеЕстьИсточник = Истина;
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("ВалютаВзаиморасчетов", "ДанныеДокумента.Договор.ВалютаВзаиморасчетов");
	
	ТекстЗапроса = Неопределено;
	СинонимТаблицыДокумента = Неопределено;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		ВЗапросеЕстьИсточник = Ложь;
		
	КонецЕсли;
				
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура:
//     * Ключ - Строка - Имя таблицы.
//     * Значение - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.ВводОстатковВзаиморасчетовПоАренде") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаУсловияДоговоровАренды(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаГрафикОплатУслугПоАренде(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаГрафикНачисленияУслугПоАренде(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаГрафикНачисленияПроцентовПоАренде(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры);
		
		//++ НЕ УТКА
		ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Регистры);
		//-- НЕ УТКА
		
		ВводОстатковВзаиморасчетовПоАрендеЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
		
	КонецЕсли;
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

#Область ПроведениеРегламентированныйУчет

// Формирует текст отражения в регл. учете.
// 
// Возвращаемое значение:
//  Строка - Текст отражения в регл учете
Функция ТекстОтраженияВРеглУчете() Экспорт

	Возврат ВводОстатковВзаиморасчетовПоАрендеЛокализация.ТекстОтраженияВРеглУчете();

КонецФункции

// Формирует текст запроса временных таблицы, используемых при отражении в регл. учете.
// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт

	Возврат ВводОстатковВзаиморасчетовПоАрендеЛокализация.ТекстЗапросаВТОтраженияВРеглУчете();

КонецФункции

#КонецОбласти

#Область УчетНДС

// Инициализирует параметры заполнения вида деятельности НДС
//
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковВзаиморасчетовПоАренде, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС
//
Функция ПараметрыЗаполненияВидаДеятельностиНДС(Объект) Экспорт
	
	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Договор, "НаправлениеДеятельности,Балансодержатель");
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС();
	ПараметрыЗаполнения.Организация = Объект.Организация;
	ПараметрыЗаполнения.Дата = Объект.Дата;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	ПараметрыЗаполнения.НаправлениеДеятельности = РеквизитыДоговора.НаправлениеДеятельности;
	ПараметрыЗаполнения.ПриобретениеНаСтатьи = Истина;
	ПараметрыЗаполнения.ЛизинговоеИмуществоНаБалансе =
		(РеквизитыДоговора.Балансодержатель = Перечисления.БалансодержательПредметовАренды.Арендатор);
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Инициализирует параметры заполнения налогообложения НДС закупки
//
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковВзаиморасчетовПоАренде, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки
//
Функция ПараметрыЗаполненияНалогообложенияНДСЗакупки(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки();
	ПараметрыЗаполнения.Контрагент = Объект.Контрагент;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	ПараметрыЗаполнения.Период  = Объект.Дата;
	
	ПараметрыЗаполнения.УслугаПоАренде = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Инициализирует параметры проверки заполнения налогообложения НДС закупки
//
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковВзаиморасчетовПоАренде, ДанныеФормыСтруктура - документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  Структура - см. УчетНДСУП.ПараметрыПроверкиЗаполнениеДокументаПоНалогообложениюНДСЗакупки
//
Функция ПараметрыПроверкиЗаполнениеДокументаПоНалогообложениюНДСЗакупки(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУП.ПараметрыПроверкиЗаполнениеДокументаПоНалогообложениюНДСЗакупки();
	ПараметрыЗаполнения.ИмяТабличнойЧасти = "ОС";
	ПараметрыЗаполнения.ИмяРеквизитаСтатьяРасходов = "СтатьяРасходов";
	ПараметрыЗаполнения.ИмяРеквизитаАналитикаРасходов = "АналитикаРасходов";
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Инициализирует параметры проверки заполнения документа по виду деятельности НДС
//
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковВзаиморасчетовПоАренде, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  Структура - см. УчетНДСУП.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС
//
Функция ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУП.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС();
	ПараметрыЗаполнения.ИмяТабличнойЧасти = "ОС";
	ПараметрыЗаполнения.ИмяРеквизитаСтатьяРасходов = "СтатьяРасходов";
	ПараметрыЗаполнения.ИмяРеквизитаАналитикаРасходов = "АналитикаРасходов";
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

#КонецОбласти

#Область Команды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
		
КонецПроцедуры

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ЗаполнениеПоДаннымОперативногоУчета

// Возвращает таблицу значения для заполнения документа ввода остатков данными, полученными по данным оперативного учета.
// 
// Параметры:
// 	Дата - Дата - Дата, на которую формируются остатки.
// 	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция, для которой выбираются остатки
// 	Организации - Массив - Массив, содержащий элементы типа СправочникСсылка.Организации, для которых выбираются остатки.
// 	ДополнительныйОтбор - Структура - Структура, содержащая ключ и значение дополнительного отбора.
// 	ПараметрыЗаполненияОстатков - Структура - Структура, содержащая дополнительные параметры необходимые, для заполнения остатков.
// Возвращаемое значение:
// 	ТаблицаЗначений, Неопределено - Если для данной хозяйственной операции есть данные, для нее возвращается таблица значений с значениями заполнения.
//
Функция ОстаткиПоТипуОперации(Дата, ХозяйственнаяОперация, Организации, ДополнительныйОтбор = Неопределено, ПараметрыЗаполненияОстатков = Неопределено) Экспорт
	
	Результат = ВводОстатковВзаиморасчетовПоАрендеЛокализация.ОстаткиПоТипуОперации(
					Дата, 
					ХозяйственнаяОперация, 
					Организации, 
					ДополнительныйОтбор, 
					ПараметрыЗаполненияОстатков);

	Возврат Результат;
			
КонецФункции

// Возвращает массив в котором содержатся имена полей при изменении которых, необходимо генерировать новый документ ввода остатков.
// 
// Параметры:
// 	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция, для которой определяются ключевые поля.
// Возвращаемое значение:
// 	Массив - Массив содержащий имена полей.
//
Функция КлючевыеПоляРеглУчетаПоТипуОперации(ХозяйственнаяОперация) Экспорт
	
	КлючевыеРеквизиты = Новый Массив;
	КлючевыеРеквизиты.Добавить("Организация");
	КлючевыеРеквизиты.Добавить("Партнер");
	КлючевыеРеквизиты.Добавить("Контрагент");
	КлючевыеРеквизиты.Добавить("Договор");
				
	Возврат КлючевыеРеквизиты;
		
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                               КАК Ссылка,
	|	ДанныеДокумента.Дата                                 КАК Период,
	|	ДанныеДокумента.Номер                                КАК Номер,
	|	ДанныеДокумента.Организация                          КАК Организация,
	|	ДанныеДокумента.Ответственный                        КАК Ответственный,
	|	ДанныеДокумента.Комментарий                          КАК Комментарий,
	|	ДанныеДокумента.Проведен                             КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                      КАК ПометкаУдаления,
	|	ДанныеДокумента.ИдентификаторДокумента               КАК ИдентификаторДокумента,
	|	ДанныеДокумента.ОтражатьВБУиНУ                       КАК ОтражатьВБУиНУ,
	|	ДанныеДокумента.ОтражатьВОперативномУчете            КАК ОтражатьВОперативномУчете,
	|	ДанныеДокумента.ОтражатьВУУ                          КАК ОтражатьВУУ,
	|	ДанныеДокумента.Партнер                              КАК Партнер,
	|	ДанныеДокумента.Контрагент                           КАК Контрагент,
	|
	|	ДанныеДокумента.Договор                              КАК Договор,
	|	ДанныеДокумента.Договор.ЕстьОбеспечительныйПлатеж    КАК ЕстьОбеспечительныйПлатеж,
	|	ДанныеДокумента.Договор.ЕстьВыкупПредметовАренды     КАК ЕстьВыкупПредметовАренды,
	|	ДанныеДокумента.Договор.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Договор.ВалютаВзаиморасчетов         КАК ВалютаВзаиморасчетов,
	|
	|	ДанныеДокумента.АрендныеОбязательстваОстаток КАК АрендныеОбязательстваОстаток,
	|	ДанныеДокумента.АрендныеОбязательстваОстатокРегл КАК АрендныеОбязательстваОстатокРегл,
	|	ДанныеДокумента.АрендныеОбязательстваОстатокУпр КАК АрендныеОбязательстваОстатокУпр,
	|	ДанныеДокумента.АрендныеОбязательстваСальдоДебетовое КАК АрендныеОбязательстваСальдоДебетовое,
	|
	|	ДанныеДокумента.ВыкупнаяСтоимостьОстаток КАК ВыкупнаяСтоимостьОстаток,
	|	ДанныеДокумента.ВыкупнаяСтоимостьОстатокРегл КАК ВыкупнаяСтоимостьОстатокРегл,
	|	ДанныеДокумента.ВыкупнаяСтоимостьОстатокУпр КАК ВыкупнаяСтоимостьОстатокУпр,
	|	ДанныеДокумента.ВыкупнаяСтоимостьСальдоДебетовое КАК ВыкупнаяСтоимостьСальдоДебетовое,
	|
	|	ДанныеДокумента.ДатаВыкупа КАК ДатаВыкупа,
	|	ДанныеДокумента.ДатаНачалаАренды КАК ДатаНачалаАренды,
	|	ДанныеДокумента.ДатаПервогоОбеспечительногоПлатежа КАК ДатаПервогоОбеспечительногоПлатежа,
	|	ДанныеДокумента.ДатаПервогоПлатежа КАК ДатаПервогоПлатежа,
	|	ДанныеДокумента.НачислениеУслугиПоАренде КАК НачислениеУслугиПоАренде,
	|
	|	ДанныеДокумента.НДСОстаток КАК НДСОстаток,
	|	ДанныеДокумента.НДСОстатокРегл КАК НДСОстатокРегл,
	|	ДанныеДокумента.НДСОстатокУпр КАК НДСОстатокУпр,
	|	ДанныеДокумента.НДССальдоДебетовое КАК НДССальдоДебетовое,
	|
	|	ДанныеДокумента.ОплатаУслугиПоАренде КАК ОплатаУслугиПоАренде,
	|	ДанныеДокумента.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ДанныеДокумента.ПериодичностьОплат КАК ПериодичностьОплат,
	|	ДанныеДокумента.ПроцентнаяСтавка КАК ПроцентнаяСтавка,
	|	ДанныеДокумента.ПроцентыОстаток КАК ПроцентыОстаток,
	|	ДанныеДокумента.ПроцентыОстатокРегл КАК ПроцентыОстатокРегл,
	|	ДанныеДокумента.ПроцентыОстатокУпр КАК ПроцентыОстатокУпр,
	|	ДанныеДокумента.ПроцентыСальдоДебетовое КАК ПроцентыСальдоДебетовое,
	|	ДанныеДокумента.СрокДней КАК СрокДней,
	|	ДанныеДокумента.СрокЛет КАК СрокЛет,
	|	ДанныеДокумента.СрокМес КАК СрокМес,
	|	ДанныеДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ДанныеДокумента.СуммаНДС КАК СуммаНДС,
	|	ДанныеДокумента.СуммаСНДС КАК СуммаСНДС,
	|	ДанныеДокумента.Сумма КАК Сумма,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.СуммаВыкупаПредметовАренды КАК СуммаВыкупаПредметовАренды,
	|	ДанныеДокумента.СуммаНДСВыкупаПредметовАренды КАК СуммаНДСВыкупаПредметовАренды,
	|	ДанныеДокумента.СуммаОбеспечительногоПлатежа КАК СуммаОбеспечительногоПлатежа,
	|	ДанныеДокумента.СуммаПроцентов КАК СуммаПроцентов,
	|	ДанныеДокумента.СуммаУслугПоАренде КАК СуммаУслугПоАренде,
	|	ДанныеДокумента.Стоимость КАК Стоимость,
	|	ДанныеДокумента.СправедливаяСтоимость КАК СправедливаяСтоимость,
	|	ДанныеДокумента.НегарантированнаяСтоимость КАК НегарантированнаяСтоимость,
	|	ДанныеДокумента.ПриведеннаяСтоимость КАК ПриведеннаяСтоимость,
	|	ДанныеДокумента.УслугаПоАрендеОстаток КАК УслугаПоАрендеОстаток,
	|	ДанныеДокумента.УслугаПоАрендеОстатокРегл КАК УслугаПоАрендеОстатокРегл,
	|	ДанныеДокумента.УслугаПоАрендеОстатокУпр КАК УслугаПоАрендеОстатокУпр,
	|	ДанныеДокумента.УслугаПоАрендеСальдоДебетовое КАК УслугаПоАрендеСальдоДебетовое,
	|	ДанныеДокумента.ГрафикНачисленияПроцентовВведенВручную КАК ГрафикНачисленияПроцентовВведенВручную,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС
	|	
	|ИЗ
	|	Документ.ВводОстатковВзаиморасчетовПоАренде КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ВводОстатковВзаиморасчетовПоАренде"));
	ЗначенияПараметровПроведения.Вставить("ДатаНачалаУчета", ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	ЗначенияПараметровПроведения.Вставить("НазваниеДокумента", НСтр("ru = 'Ввод остатков взаиморасчетов по аренде';
																	|en = 'OB entry: rental AR/AP'"));
	ЗначенияПараметровПроведения.Вставить("ВедетсяРегламентированныйУчетВНА", ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА());
	ЗначенияПараметровПроведения.Вставить("ИдентификаторНеиспользуемойФинЗаписи", ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды);
	ЗначенияПараметровПроведения.Вставить("НастройкаХозяйственнойОперации", Справочники.НастройкиХозяйственныхОпераций.ВводОстатковВзаиморасчетовПоДоговорамАренды);
	
	Если Реквизиты <> Неопределено Тогда
		
		ЗначенияПараметровПроведения.Вставить("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
		
		ЗначенияПараметровПроведения.Вставить("ИспользуетсяУчетАрендыПоФСБУ25_2018",
			УчетАрендованныхОС.ИспользуетсяУчетАрендыПоФСБУ25_2018(Реквизиты.Организация, Реквизиты.Период));
			
	КонецЕсли; 
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Партнер                                КАК Партнер,
	|	&Договор                                КАК Договор,
	|	&СуммаДокумента                         КАК Сумма,
	|	&ВалютаВзаиморасчетов                   КАК Валюта,
	|	&Контрагент                             КАК Контрагент,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	ЛОЖЬ                                    КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО                            КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО                            КАК ИсправляемыйДокумент,
	|	&Период                                 КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаУсловияДоговоровАренды(ТекстыЗапроса, Регистры)

	ИмяРегистра = "УсловияДоговоровАренды";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                       КАК Регистратор,
	|	&Период                                       КАК Период,
	|	&Договор                                      КАК Договор,
	|	&СуммаОбеспечительногоПлатежа                 КАК СуммаОбеспечительногоПлатежа,
	|	&СуммаУслугПоАренде                           КАК СуммаУслугПоАренде,
	|	&СуммаВыкупаПредметовАренды                   КАК СуммаВыкупаПредметовАренды,
	|	&СуммаПроцентов                               КАК СуммаПроцентов,
	|	&СуммаНДС                                     КАК СуммаНДС,
	|	&СтавкаНДС                                    КАК СтавкаНДС,
	|	&СрокЛет                                      КАК СрокЛет,
	|	&СрокМес                                      КАК СрокМес,
	|	&СрокДней                                     КАК СрокДней,
	|	&ДатаНачалаАренды                             КАК ДатаНачалаАренды,
	|	&ДатаПервогоПлатежа                           КАК ДатаПервогоПлатежа,
	|	&ДатаПервогоОбеспечительногоПлатежа           КАК ДатаПервогоОбеспечительногоПлатежа,
	|	&ДатаВыкупа                                   КАК ДатаВыкупа,
	|	&ПроцентнаяСтавка                             КАК ПроцентнаяСтавка,
	|	&ПериодичностьОплат                           КАК ПериодичностьОплат,
	|	&ПериодичностьНачислений                      КАК ПериодичностьНачислений,
	|	&Стоимость                                    КАК СтоимостьПредметовАренды,
	|	&ОплатаУслугиПоАренде                         КАК ОплатаУслугиПоАренде,
	|	&НачислениеУслугиПоАренде                     КАК НачислениеУслугиПоАренде,
	|	&ГрафикНачисленияПроцентовВведенВручную       КАК ГрафикНачисленияПроцентовВведенВручную,
	|	&НалогообложениеНДС                           КАК НалогообложениеНДС,
	|	&Ссылка                                       КАК АктуальныеУсловияДоговора,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияДоговоровКонтрагентов.Действует) КАК Состояние";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
		
КонецПроцедуры

Функция ТекстЗапросаТаблицаГрафикОплатУслугПоАренде(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикОплатУслугПоАренде";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                 КАК ДатаИзменения,
	|	&Договор                                КАК Договор,
	|	&Ссылка                                 КАК АктуальныеУсловияДоговора,
	|	ТаблицаГрафика.Дата                     КАК Дата,
	|	ТаблицаГрафика.УслугаПоАренде           КАК УслугаПоАренде,
	|	ТаблицаГрафика.УслугаПоАрендеНДС        КАК УслугаПоАрендеНДС,
	|
	|	ВЫБОР 
	|		КОГДА &ЕстьОбеспечительныйПлатеж
	|			ТОГДА ТаблицаГрафика.ОбеспечительныйПлатеж
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбеспечительныйПлатеж,
	|
	|	ВЫБОР 
	|		КОГДА &ЕстьОбеспечительныйПлатеж
	|			ТОГДА ТаблицаГрафика.ОбеспечительныйПлатежНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбеспечительныйПлатежНДС,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаГрафика.Дата >= &ДатаВыкупа
	|				И &ЕстьВыкупПредметовАренды
	|			ТОГДА ТаблицаГрафика.ВыкупнаяСтоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыкупнаяСтоимость,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаГрафика.Дата < &ДатаВыкупа
	|				И &ЕстьВыкупПредметовАренды
	|			ТОГДА ТаблицаГрафика.ВыкупнаяСтоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыкупнаяСтоимостьАванс,
	|
	|	ВЫБОР 
	|		КОГДА &ЕстьВыкупПредметовАренды
	|			ТОГДА ТаблицаГрафика.ВыкупнаяСтоимостьНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыкупнаяСтоимостьНДС
	|ИЗ
	|	Документ.ВводОстатковВзаиморасчетовПоАренде.ГрафикОплатУслуг КАК ТаблицаГрафика
	|ГДЕ
	|	ТаблицаГрафика.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаГрафикНачисленияУслугПоАренде(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикНачисленияУслугПоАренде";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                 КАК ДатаИзменения,
	|	&Договор                                КАК Договор,
	|	&Ссылка                                 КАК АктуальныеУсловияДоговора,
	|	ТаблицаГрафика.Дата                     КАК Дата,
	|	ТаблицаГрафика.УслугаПоАренде           КАК УслугаПоАренде,
	|	ТаблицаГрафика.УслугаПоАрендеНДС        КАК УслугаПоАрендеНДС,
	|
	|	ВЫБОР 
	|		КОГДА &ЕстьОбеспечительныйПлатеж
	|			ТОГДА ТаблицаГрафика.ОбеспечительныйПлатеж
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбеспечительныйПлатеж,
	|
	|	ВЫБОР 
	|		КОГДА &ЕстьОбеспечительныйПлатеж
	|			ТОГДА ТаблицаГрафика.ОбеспечительныйПлатежНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбеспечительныйПлатежНДС,
	|
	|	ВЫБОР 
	|		КОГДА &ДатаВыкупа = ТаблицаГрафика.Дата
	|				И &ЕстьВыкупПредметовАренды
	|			ТОГДА &СуммаВыкупаПредметовАренды
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыкупнаяСтоимость,
	|
	|	ВЫБОР 
	|		КОГДА &ДатаВыкупа = ТаблицаГрафика.Дата
	|				И &ЕстьВыкупПредметовАренды
	|			ТОГДА &СуммаНДСВыкупаПредметовАренды
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыкупнаяСтоимостьНДС
	|ИЗ
	|	Документ.ВводОстатковВзаиморасчетовПоАренде.ГрафикНачисленияУслуг КАК ТаблицаГрафика
	|ГДЕ
	|	ТаблицаГрафика.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                 КАК ДатаИзменения,
	|	&Договор                                КАК Договор,
	|	&Ссылка                                 КАК АктуальныеУсловияДоговора,
	|	&ДатаВыкупа                             КАК Дата,
	|	0                                       КАК УслугаПоАренде,
	|	0                                       КАК УслугаПоАрендеНДС,
	|	0                                       КАК ОбеспечительныйПлатеж,
	|	0                                       КАК ОбеспечительныйПлатежНДС,
	|	&СуммаВыкупаПредметовАренды             КАК ВыкупнаяСтоимость,
	|	&СуммаНДСВыкупаПредметовАренды          КАК ВыкупнаяСтоимостьНДС
	|ИЗ
	|	Документ.ВводОстатковВзаиморасчетовПоАренде КАК ДанныеДокумента
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВзаиморасчетовПоАренде.ГрафикНачисленияУслуг КАК ТаблицаГрафика
	|		ПО ТаблицаГрафика.Ссылка = ДанныеДокумента.Ссылка
	|			И ТаблицаГрафика.Дата = ДанныеДокумента.ДатаВыкупа
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ТаблицаГрафика.Ссылка ЕСТЬ NULL
	|	И &СуммаВыкупаПредметовАренды <> 0
	|	И &ЕстьВыкупПредметовАренды
	|	И &ДатаВыкупа <> ДАТАВРЕМЯ(1, 1, 1)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаГрафикНачисленияПроцентовПоАренде(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикНачисленияПроцентовПоАренде";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                    КАК ДатаИзменения,
	|	&Договор                   КАК Договор,
	|	&Ссылка                    КАК АктуальныеУсловияДоговора,
	|	ТаблицаГрафика.Дата        КАК Дата,
	|	ТаблицаГрафика.Проценты    КАК Проценты
	|ИЗ
	|	Документ.ВводОстатковВзаиморасчетовПоАренде.ГрафикНачисленияПроцентов КАК ТаблицаГрафика
	|ГДЕ
	|	ТаблицаГрафика.Ссылка = &Ссылка
	|	И &ИспользуетсяУчетАрендыПоФСБУ25_2018";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыПоФинансовымИнструментам";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиПоПартнерам(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.АрендныеОбязательстваСальдоДебетовое ТОГДА
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	ДанныеДокумента.Договор                                                      КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства)            КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	ДанныеДокумента.Договор.ВалютаВзаиморасчетов                                 КАК Валюта,
	|	
	|	ДанныеДокумента.АрендныеОбязательстваОстаток                                 КАК Сумма,
	|	ДанныеДокумента.АрендныеОбязательстваОстатокУпр                              КАК СуммаУпр,
	|	ДанныеДокумента.АрендныеОбязательстваОстатокРегл                             КАК СуммаРегл,
	|	
	|	&ИдентификаторДокумента                                                      КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                                              КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ВводОстатковВзаиморасчетовПоАренде КАК ДанныеДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (ДанныеДокумента.АрендныеОбязательстваОстаток <> 0
	|		ИЛИ ДанныеДокумента.АрендныеОбязательстваОстатокУпр <> 0
	|		ИЛИ ДанныеДокумента.АрендныеОбязательстваОстатокРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ВыкупнаяСтоимостьСальдоДебетовое ТОГДА
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	ДанныеДокумента.Договор                                                      КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)                КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	ДанныеДокумента.Договор.ВалютаВзаиморасчетов                                 КАК Валюта,
	|	
	|	ДанныеДокумента.ВыкупнаяСтоимостьОстаток                                     КАК Сумма,
	|	ДанныеДокумента.ВыкупнаяСтоимостьОстатокУпр                                  КАК СуммаУпр,
	|	ДанныеДокумента.ВыкупнаяСтоимостьОстатокРегл                                 КАК СуммаРегл,
	|	
	|	&ИдентификаторДокумента                                                      КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                                              КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ВводОстатковВзаиморасчетовПоАренде КАК ДанныеДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (ДанныеДокумента.ВыкупнаяСтоимостьОстаток <> 0
	|		ИЛИ ДанныеДокумента.ВыкупнаяСтоимостьОстатокУпр <> 0
	|		ИЛИ ДанныеДокумента.ВыкупнаяСтоимостьОстатокРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.НДССальдоДебетовое ТОГДА
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	ДанныеДокумента.Договор                                                      КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.НДС)                              КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	ДанныеДокумента.Договор.ВалютаВзаиморасчетов                                 КАК Валюта,
	|	
	|	ДанныеДокумента.НДСОстаток                                                   КАК Сумма,
	|	ДанныеДокумента.НДСОстатокУпр                                                КАК СуммаУпр,
	|	ДанныеДокумента.НДСОстатокРегл                                               КАК СуммаРегл,
	|	
	|	&ИдентификаторДокумента                                                      КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                                              КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ВводОстатковВзаиморасчетовПоАренде КАК ДанныеДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (ДанныеДокумента.НДСОстаток <> 0
	|		ИЛИ ДанныеДокумента.НДСОстатокУпр <> 0
	|		ИЛИ ДанныеДокумента.НДСОстатокРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ПроцентыСальдоДебетовое ТОГДА
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	ДанныеДокумента.Договор                                                      КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.Проценты)                         КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	ДанныеДокумента.Договор.ВалютаВзаиморасчетов                                 КАК Валюта,
	|	
	|	ДанныеДокумента.ПроцентыОстаток                                              КАК Сумма,
	|	ДанныеДокумента.ПроцентыОстатокУпр                                           КАК СуммаУпр,
	|	ДанныеДокумента.ПроцентыОстатокРегл                                          КАК СуммаРегл,
	|	
	|	&ИдентификаторДокумента                                                      КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                                              КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ВводОстатковВзаиморасчетовПоАренде КАК ДанныеДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (ДанныеДокумента.ПроцентыОстаток <> 0
	|		ИЛИ ДанныеДокумента.ПроцентыОстатокУпр <> 0
	|		ИЛИ ДанныеДокумента.ПроцентыОстатокРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.УслугаПоАрендеСальдоДебетовое ТОГДА
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	ДанныеДокумента.Договор                                                      КАК Договор,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.УслугаПоАрендеСальдоДебетовое ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|	КОНЕЦ                                                                        КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	ДанныеДокумента.Договор.ВалютаВзаиморасчетов                                 КАК Валюта,
	|	
	|	ДанныеДокумента.УслугаПоАрендеОстаток                                        КАК Сумма,
	|	ДанныеДокумента.УслугаПоАрендеОстатокУпр                                     КАК СуммаУпр,
	|	ДанныеДокумента.УслугаПоАрендеОстатокРегл                                    КАК СуммаРегл,
	|	
	|	&ИдентификаторДокумента                                                      КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                                              КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ВводОстатковВзаиморасчетовПоАренде КАК ДанныеДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (ДанныеДокумента.УслугаПоАрендеОстаток <> 0
	|		ИЛИ ДанныеДокумента.УслугаПоАрендеОстатокУпр <> 0
	|		ИЛИ ДанныеДокумента.УслугаПоАрендеОстатокРегл <> 0)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                       КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                     КАК Договор,
	|	ДанныеДокумента.ТипПлатежа                                                   КАК ТипСуммы,
	|	ДанныеДокумента.РасчетныйДокумент                                            КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                        КАК Валюта,
	|	
	|	ДанныеДокумента.Сумма                                                        КАК Сумма,
	|	ДанныеДокумента.СуммаУпр                                                     КАК СуммаУпр,
	|	ДанныеДокумента.СуммаРегл                                                    КАК СуммаРегл,
	|	
	|	ДанныеДокумента.ИдентификаторСтроки                                          КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                                              КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ВводОстатковВзаиморасчетовПоАренде.АвансыПоДоговорамАренды КАК ДанныеДокумента
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (ДанныеДокумента.Сумма <> 0
	|		ИЛИ ДанныеДокумента.СуммаУпр <> 0
	|		ИЛИ ДанныеДокумента.СуммаРегл <> 0)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПоПартнерамИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация                                           КАК Организация,
	|	&Партнер                                               КАК Партнер,
	|	&Контрагент                                            КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ДанныеДоговора.НаправлениеДеятельности                 КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ВводОстатковВзаиморасчетовПоАренде КАК ДанныеДокумента
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыАренды КАК ДанныеДоговора
	|		ПО ДанныеДокумента.Договор = ДанныеДоговора.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО Аналитика.Организация = &Организация
	|			И Аналитика.Контрагент = &Контрагент
	|			И Аналитика.Партнер = &Партнер
	|			И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И Аналитика.НаправлениеДеятельности = ДанныеДоговора.НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|";
	
	ЗапросАналитик.УстановитьПараметр("Ссылка",      Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Организация", Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("Партнер",     Запрос.Параметры.Партнер);
	ЗапросАналитик.УстановитьПараметр("Контрагент",  Запрос.Параметры.Контрагент);
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПоПартнерамИнициализированы", Истина);
	
КонецПроцедуры

//++ НЕ УТКА

Функция ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВМеждународномУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                        КАК Период,
	|	&Организация                   КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)   КАК ДатаОтражения,
	|	&ХозяйственнаяОперация         КАК ХозяйственнаяОперация
	|ГДЕ
	|	&Период >= &ДатаНачалаУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- НЕ УТКА

#КонецОбласти

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = Справочники.ДоговорыАренды.ДобавитьКомандуРасшифровкиРасчетаПроцентов(КомандыПечати);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура РассчитатьСтавкуСтоимостьПроценты(Объект, РеквизитыДоговора) Экспорт
	
	ПараметрыРасчета = УчетАрендованныхОС.ПараметрыРасчетаСтавкиСтоимостиПроцентов(Объект, РеквизитыДоговора);

	Если РеквизитыДоговора.ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоровАренды.Аренда")
		И РеквизитыДоговора.СпособОпределенияСтоимостиАктивов = ПредопределенноеЗначение("Перечисление.СпособыОпределенияСтоимостиПредметовАренды.ПоФактическойСтоимости") Тогда
		ПараметрыРасчета.СтоимостьПредметовАренды = Объект.СправедливаяСтоимость - Объект.НегарантированнаяСтоимость;
	Иначе
		ПараметрыРасчета.СтоимостьПредметовАренды = Объект.Стоимость;
	КонецЕсли;

	УчетАрендованныхОС.РассчитатьСтавкуСтоимостьПроценты(ПараметрыРасчета);

	Объект.ПроцентнаяСтавка = ПараметрыРасчета.ПроцентнаяСтавка;
	Объект.СуммаПроцентов = ПараметрыРасчета.СуммаПроцентов;
	Объект.ПриведеннаяСтоимость = ПараметрыРасчета.ПриведеннаяСтоимость;
	
	Если ПараметрыРасчета.РеквизитыДоговора.СпособОпределенияСтоимостиАктивов = 
		Перечисления.СпособыОпределенияСтоимостиПредметовАренды.Дисконтирование Тогда
		Объект.Стоимость = ПараметрыРасчета.СтоимостьПредметовАренды;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли