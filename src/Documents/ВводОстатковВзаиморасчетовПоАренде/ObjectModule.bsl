
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	ИнициализироватьДокументПередЗаполнением();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ВнеоборотныеАктивы.ПроверитьСоответствиеДатыВерсииУчета(ЭтотОбъект, Истина, Отказ);
	
	Если НЕ ОтражатьВОперативномУчете И НЕ ОтражатьВБУиНУ И НЕ ОтражатьВУУ Тогда
		ТекстСообщения = НСтр("ru = 'Документ должен отражаться в одном из учетов';
								|en = 'The document must be recorded in one of accounting types'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , 
			"Объект.ОтражатьВОперативномУчете", , Отказ);
	КонецЕсли;

	ВспомогательныеРеквизиты = ВспомогательныеРеквизиты();

	ПараметрыРеквизитовОбъекта = 
		УчетАрендованныхОСКлиентСервер.ЗначенияСвойствЗависимыхРеквизитов_ВводОстатковВзаиморасчетовПоАренде(ЭтотОбъект, ВспомогательныеРеквизиты);
	ОбщегоНазначенияУТ.ОтключитьПроверкуЗаполненияРеквизитовОбъекта(ПараметрыРеквизитовОбъекта, МассивНепроверяемыхРеквизитов);

	УчетАрендованныхОС.ПроверитьДокументАренды(ЭтотОбъект, ВспомогательныеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Комментарий = "";

	ИнициализироватьДокументПередЗаполнением();
	
	ОбщегоНазначенияУТ.ОчиститьИдентификаторыДокумента(ЭтотОбъект, "АвансыПоДоговорамАренды");

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ЗаполнитьРеквизитыПередЗаписью(РежимЗаписи);
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокументПередЗаполнением()
	
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);

	ПараметрыЗаполнения = Документы.ВводОстатковВзаиморасчетовПоАренде.ПараметрыЗаполненияНалогообложенияНДСЗакупки(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьНалогообложениеНДСЗакупки(НалогообложениеНДС, ПараметрыЗаполнения);
	
	ПараметрыЗаполнения = Документы.ВводОстатковВзаиморасчетовПоАренде.ПараметрыЗаполненияВидаДеятельностиНДС(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьВидДеятельностиНДС(ЗакупкаПодДеятельность, ПараметрыЗаполнения);

	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
		Или НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС Тогда
		СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
	Иначе
		СтавкаНДС = УчетНДСУП.СтавкаНДСПоУмолчанию(Организация, Дата,, НалогообложениеНДС);
	КонецЕсли;

	ОтражатьВОперативномУчете = Истина;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный") Тогда
		ОтражатьВУУ = Истина;
	КонецЕсли;
	
	ВводОстатковВзаиморасчетовПоАрендеЛокализация.ИнициализироватьДокументПередЗаполнением(ЭтотОбъект);
	
КонецПроцедуры

Функция ВспомогательныеРеквизиты()

	ВспомогательныеРеквизиты = Новый Структура;
	ВспомогательныеРеквизиты.Вставить("ИспользуетсяУправлениеВНА_2_4", ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Дата));
	ВспомогательныеРеквизиты.Вставить("ИспользуетсяУчетАрендыПоФСБУ25_2018", УчетАрендованныхОС.ИспользуетсяУчетАрендыПоФСБУ25_2018(Организация, Дата));
	ВспомогательныеРеквизиты.Вставить("НачалоУчетаАрендыПоФСБУ25_2018", УчетАрендованныхОС.НачалоУчетаАрендыПоФСБУ25_2018(Организация));
	ВспомогательныеРеквизиты.Вставить("НезначащаяСтавкаНДС", УчетНДСУП.НезначащаяСтавка(СтавкаНДС));
	ВспомогательныеРеквизиты.Вставить("ОтражатьВУУ", ОтражатьВУУ);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВБУиНУ", ОтражатьВБУиНУ);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВОперативномУчете", ОтражатьВОперативномУчете);
	ВспомогательныеРеквизиты.Вставить("ВерсияДокумента24", Ложь);
	ВспомогательныеРеквизиты.Вставить("ИмяТабличнойЧастиОС", "");
	
	ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
									"НастройкиУчетаНДС", Организация, ?(Дата <> '000101010000', КонецМесяца(Дата), '000101010000'));
	ВспомогательныеРеквизиты.Вставить("РаздельныйУчетВНАПоНалогообложениюНДС", ПараметрыУчетнойПолитики <> Неопределено И ПараметрыУчетнойПолитики.РаздельныйУчетВНАПоНалогообложениюНДС);
	
	ВспомогательныеРеквизиты.Вставить("РеквизитыДоговора", УчетАрендованныхОС.РеквизитыДоговораАренды(Договор));
	
	ВспомогательныеРеквизиты.Вставить("ИспользоватьРеглУчет", ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет"));
	ВспомогательныеРеквизиты.Вставить("ВестиУУНаПланеСчетовХозрасчетный", ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный"));

	Возврат ВспомогательныеРеквизиты;
	
КонецФункции

Процедура ЗаполнитьРеквизитыПередЗаписью(РежимЗаписи)

	ВспомогательныеРеквизиты = ВспомогательныеРеквизиты();

	ОчиститьНеиспользуемыеРеквизиты(ВспомогательныеРеквизиты);

	СуммаДокумента = СуммаСНДС;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Если ОтражатьВОперативномУчете Тогда
			Документы.ВводОстатковВзаиморасчетовПоАренде.РассчитатьСтавкуСтоимостьПроценты(
				ЭтотОбъект, ВспомогательныеРеквизиты.РеквизитыДоговора);
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект, "АвансыПоДоговорамАренды");
	
КонецПроцедуры

Процедура ОчиститьНеиспользуемыеРеквизиты(ВспомогательныеРеквизиты)
	
	ПараметрыРеквизитовОбъекта = УчетАрендованныхОСКлиентСервер.ЗначенияСвойствЗависимыхРеквизитов_ВводОстатковВзаиморасчетовПоАренде(
		ЭтотОбъект, ВспомогательныеРеквизиты);
		
	ОбщегоНазначенияУТКлиентСервер.ОчиститьНеиспользуемыеРеквизиты(
		ЭтотОбъект, 
		ПараметрыРеквизитовОбъекта, 
		"ГрафикОплатУслуг,ГрафикНачисленияУслуг,ГрафикНачисленияПроцентов");

КонецПроцедуры

#КонецОбласти

#КонецЕсли
