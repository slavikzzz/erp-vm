#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Не ЗначениеЗаполнено(Дата) Тогда
		Дата = ТекущаяДата(); // АПК:143 Для фильтрации событий в журнале регистрации требуется дата сервера.
	КонецЕсли;
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	РеквизитыСведений = РеквизитыСведений();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыСведений, "ФизическоеЛицо, ГоловнаяОрганизация, СНИЛС, Страхователь");
	
	ОбновитьВторичныеРеквизиты();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	РегистрыСведений.ЗастрахованныеЛицаСЭДО.ПриЗаписиРегистрацииСведений(ЭтотОбъект, РеквизитыСведений());
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьВторичныеРеквизиты() Экспорт
	Если Не Доставлен Тогда
		ТекстОшибки = ДоставкаТекстОшибки;
	ИначеЕсли ЕстьОшибкиЛогическогоКонтроля Тогда
		ТекстОшибки = ОшибкиЛогическогоКонтроля;
	ИначеЕсли Не Зарегистрирован Тогда
		ТекстОшибки = РегистрацияПротокол;
	Иначе
		ТекстОшибки = НесоответствиеПротокол;
	КонецЕсли;
	
	ЕстьНесоответствия = ЗначениеЗаполнено(НесоответствиеИдентификатор)
		И ЗначениеЗаполнено(НесоответствиеПротокол);
	
	Состояние = СостояниеРегистрации();
КонецПроцедуры

Функция СостояниеРегистрации()
	
	Если ЗначениеЗаполнено(ДоставкаТекстОшибки) Тогда // Дата отправки при этом не заполнена.
		
		Возврат Перечисления.СостоянияДокументаСЭДОФСС.ОшибкаПриОтправке; // Ошибка при отправке.
		
	ИначеЕсли Не ЗначениеЗаполнено(ДатаОтправки) И Не ЗначениеЗаполнено(ДатаОтправкиОператору) Тогда
		
		Возврат Перечисления.СостоянияДокументаСЭДОФСС.ПустаяСсылка(); // Не отправлен.
		
	ИначеЕсли ЕстьОшибкиЛогическогоКонтроля Тогда
		
		Возврат Перечисления.СостоянияДокументаСЭДОФСС.ОшибкаЛогическогоКонтроля; // Отправлен, получены ошибки.
		
	ИначеЕсли ЕстьНесоответствия Тогда
		
		Если Зарегистрирован Тогда
			Возврат Перечисления.СостоянияДокументаСЭДОФСС.ПринятСЗамечаниями;
		Иначе
			Возврат Перечисления.СостоянияДокументаСЭДОФСС.НеПринят;
		КонецЕсли;
		
	ИначеЕсли ОтправленОператору И Не Доставлен Тогда
		
		Возврат Перечисления.СостоянияДокументаСЭДОФСС.ОтправленОператору; // Передан оператору для доставки.
		
	ИначеЕсли Не Доставлен
		Или Не ЗначениеЗаполнено(РегистрацияИдентификатор)
		Или ВРег(РегистрацияСтатус) = "RECEIVED" Тогда
		
		Возврат Перечисления.СостоянияДокументаСЭДОФСС.Отправлен; // Отправлен, но не зарегистрирован.
		
	ИначеЕсли Не Зарегистрирован Тогда
		
		Возврат Перечисления.СостоянияДокументаСЭДОФСС.НеПринят;
		
	Иначе
		
		Возврат Перечисления.СостоянияДокументаСЭДОФСС.Принят;
		
	КонецЕсли;
	
КонецФункции

Функция РеквизитыСведений()
	РеквизитыСведений = ОбщегоНазначенияБЗК.ЗначениеСвойства(ДополнительныеСвойства, "РеквизитыСведений");
	Если РеквизитыСведений <> Неопределено Тогда
		Возврат РеквизитыСведений;
	КонецЕсли;
	
	ТребуемыеРеквизитыСведений = РегистрыСведений.ЗастрахованныеЛицаСЭДО.ТребуемыеРеквизитыСведений();
	ТребуемыеРеквизитыСведений = СтрРазделить(ТребуемыеРеквизитыСведений, ", ", Ложь);
	ИменаПолейДляРегистрации = СтрРазделить("Ссылка, ФизическоеЛицо, ГоловнаяОрганизация, СНИЛС, Страхователь", ", ", Ложь);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ТребуемыеРеквизитыСведений, ИменаПолейДляРегистрации, Истина);
	ИменаРеквизитовСведений = СтрСоединить(ТребуемыеРеквизитыСведений, ", ");
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		РеквизитыСведений = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, ИменаРеквизитовСведений);
	ИначеЕсли ЗначениеЗаполнено(ФизическоеЛицо) И ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		РеквизитыСведений = Документы.СведенияОЗастрахованномЛицеФСС.НайтиПоФизлицу(
			ФизическоеЛицо,
			ГоловнаяОрганизация,
			ИменаРеквизитовСведений);
	КонецЕсли;
	
	Если РеквизитыСведений = Неопределено Тогда
		РеквизитыСведений = Новый Структура(ИменаРеквизитовСведений);
		ЗаполнитьЗначенияСвойств(РеквизитыСведений, ЭтотОбъект);
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("РеквизитыСведений", РеквизитыСведений);
	
	Возврат РеквизитыСведений;
КонецФункции

#КонецОбласти


#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли