#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаФизическоеЛицоВШапке("ФизическоеЛицо", "");
КонецФункции

#Область ОбработчикиРегистрацииФизическихЛиц

Функция ПринадлежностиОбъекта() Экспорт
	Возврат ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Организация");
КонецФункции

#КонецОбласти

#Область ОбработчикиПравилРегистрации

// См. ЗарплатаКадрыРасширенныйСинхронизацияДанных.ШаблонОбработчика
Процедура ПриЗаполненииНастроекОбработчиковПравилРегистрации(Настройки) Экспорт
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляОтбораПоОрганизации(Настройки);
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляОбъектаСПрисоединеннымиФайлами(Настройки);
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляРегистрацииДвижений(Настройки);
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляСовместноРегистрируемыхОбъектов(Настройки);
КонецПроцедуры

#КонецОбласти

#Область ОбменДанными

// Регистрирует изменение организации или структурного подразделения для сотрудников и физических лиц
//
// Параметры:
//		МассивДокументов - Массив - Массив объектов заполненный при загрузке сообщения обмена
//
Процедура ЗарегистрироватьЗависимыеОбъектыПослеЗагрузкиОбменаДанными(МассивДокументов) Экспорт
	
	// Зарегистрируем сотрудников по виду документа, изменяющего принадлежность к организации
	Для Каждого ДокументОбъект Из МассивДокументов Цикл
		Если ЗначениеЗаполнено(ДокументОбъект.ФизическоеЛицо) И ОбщегоНазначения.СсылкаСуществует(ДокументОбъект.ФизическоеЛицо) Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(ДокументОбъект.ОбменДанными.Получатели, ДокументОбъект.ФизическоеЛицо);
		КонецЕсли;
		
		СинхронизацияДанныхЗарплатаКадры.ПринадлежностьФизлицаОрганизацииПриЗаписи(ДокументОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Если Пользователи.РолиДоступны("ДобавлениеИзменениеИсполнительныхДокументов,ПолныеПрава,ЧтениеИсполнительныхДокументов", , Ложь) Тогда
		
		// Карточка учета исполнительных документов.
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
		КомандаПечати.МенеджерПечати = "Отчет.ЖурналУчетаИсполнительныхДокументов";
		КомандаПечати.ФункциональныеОпции = "ИспользоватьИсполнительныеЛисты";
		КомандаПечати.Идентификатор = "КарточкаУчетаИсполнительныхДокументов";
		КомандаПечати.Представление = НСтр("ru = 'Карточка учета исполнительных документов';
											|en = 'Record card of garnishment documents'");
		
		Если Пользователи.РолиДоступны("ДобавлениеИзменениеНачисленнойЗарплаты,ПолныеПрава,ЧтениеНачисленнойЗарплаты") Тогда  
			// Карточка учета исполнительных документов с оплатами.
			КомандаПечати = КомандыПечати.Добавить();
			КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
			КомандаПечати.ФункциональныеОпции = "ИспользоватьИсполнительныеЛисты";
			КомандаПечати.Идентификатор = "КарточкаУчетаИсполнительныхДокументовСОплатами";
			КомандаПечати.Представление = НСтр("ru = 'Карточка учета исполнительных документов с оплатами';
												|en = 'Record card of garnishment documents with payments'");
		КонецЕсли;
		
		// Справка к заявлению о признании банкротом.
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
		КомандаПечати.ФункциональныеОпции = "ИспользоватьИсполнительныеЛисты";
		КомандаПечати.Идентификатор = "СправкаКЗаявлениюОБанкротстве";
		КомандаПечати.Представление = НСтр("ru = 'Справка к заявлению о признании банкротом';
											|en = 'Certificate for the bankruptcy application'");
		
		// Заявление о выдаче справки для признания банкротом.
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
		КомандаПечати.ФункциональныеОпции = "ИспользоватьИсполнительныеЛисты";
		КомандаПечати.Идентификатор = "ЗаявлениеОВыдачеСправки";
		КомандаПечати.Представление = НСтр("ru = 'Заявление о выдаче справки для признания банкротом';
											|en = 'Application for issue of the bankruptcy certificate'");

	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КарточкаУчетаИсполнительныхДокументовСОплатами") Тогда
		ДанныеПечатиОбъектов = Документы.ИсполнительныйЛист.ДанныеПечатиКарточкиУчетаИсполнительногоДокументаСОплатами(МассивОбъектов);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, "КарточкаУчетаИсполнительныхДокументовСОплатами", НСтр("ru = 'Карточка учета исполнительных документов с оплатами';
																							|en = 'Record card of garnishment documents with payments'"), КарточкаУчетаИсполнительногоДокументаСОплатами(МассивОбъектов, ОбъектыПечати, ДанныеПечатиОбъектов));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СправкаКЗаявлениюОБанкротстве") Тогда
		ДанныеПечатиОбъектов = Документы.ИсполнительныйЛист.ДанныеПечатиСправкиКЗаявлениюОБанкротстве(МассивОбъектов);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, "СправкаКЗаявлениюОБанкротстве", НСтр("ru = 'Справка к заявлению о признании банкротом';
																		|en = 'Certificate for the bankruptcy application'"), СправкаКЗаявлениюОБанкротстве(МассивОбъектов, ОбъектыПечати, ДанныеПечатиОбъектов));
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаявлениеОВыдачеСправки") Тогда
		ДанныеПечатиОбъектов = Документы.ИсполнительныйЛист.ДанныеПечатиЗаявленияОВыдачеСправки(МассивОбъектов);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, "ЗаявлениеОВыдачеСправки", НСтр("ru = 'Заявление о выдаче справки для признания банкротом';
																	|en = 'Application for issue of the bankruptcy certificate'"), ЗаявлениеОВыдачеСправки(МассивОбъектов, ОбъектыПечати, ДанныеПечатиОбъектов));
	КонецЕсли;

КонецПроцедуры

Функция СправкаКЗаявлениюОБанкротстве(МассивОбъектов, ОбъектыПечати, ДанныеПечатиОбъектов)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИсполнительныйЛист.ПФ_MXL_СправкаКЗаявлениюОБанкротстве");
	
	ПервыйДокумент = Истина;
	Для Каждого ДокументСсылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		ДанныеПечати = ДанныеПечатиОбъектов.Получить(ДокументСсылка);
		ДокументРезультат.Вывести(ОбластьСПараметрами(Макет, "Шапка", ДанныеПечати.ПараметрыШапки));
		ДокументРезультат.Вывести(ОбластьСПараметрами(Макет, "Сведения", ДанныеПечати.ПараметрыСведений));
		ДокументРезультат.Вывести(ОбластьСПараметрами(Макет, "Подвал", ДанныеПечати.ПараметрыПодвала));

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ДокументСсылка);
		
		ПервыйДокумент = Ложь;
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция ЗаявлениеОВыдачеСправки(МассивОбъектов, ОбъектыПечати, ДанныеПечатиОбъектов)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИсполнительныйЛист.ПФ_MXL_ЗаявлениеОВыдачеСправки");
	
	ПервыйДокумент = Истина;
	Для Каждого ДокументСсылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		ДанныеПечати = ДанныеПечатиОбъектов.Получить(ДокументСсылка);
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.Заполнить(ДанныеПечати.СведенияФизЛица);
		ОбластьШапка.Параметры.Заполнить(ДанныеПечати.СведенияОбОрганизации);

		ДокументРезультат.Вывести(ОбластьШапка);
		ДокументРезультат.Вывести(ОбластьПодвал);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ДокументСсылка);
		
		ПервыйДокумент = Ложь;
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция КарточкаУчетаИсполнительногоДокументаСОплатами(МассивОбъектов, ОбъектыПечати, ДанныеПечатиОбъектов)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИсполнительныйЛист.ПФ_MXL_КарточкаУчетаИсполнительногоДокументаСОплатами");
	
	ПервыйДокумент = Истина;
	Для Каждого ДокументСсылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		ДанныеПечати = ДанныеПечатиОбъектов.Получить(ДокументСсылка);
		ДокументРезультат.Вывести(ОбластьСПараметрами(Макет, "Шапка", ДанныеПечати));
		
		Если ДанныеПечати.ТаблицаОплат.Количество() > 0 Тогда
			ДокументРезультат.Вывести(Макет.ПолучитьОбласть("ШапкаТаблицы"));
			
			Для Каждого СтрокаТаблицы Из ДанныеПечати.ТаблицаОплат Цикл
				
				ДокументРезультат.Вывести(ОбластьСПараметрами(Макет, "СтрокаТаблицы", СтрокаТаблицы));
				
			КонецЦикла;
			
			ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
			ОбластьПодвалТаблицы.Параметры.СуммаУдержания = ДанныеПечати.ИтогоУдержано;
			ДокументРезультат.Вывести(ОбластьПодвалТаблицы);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеПечати.Предел) Тогда
			
			ОбластьОстаток = Макет.ПолучитьОбласть("Остаток");
			ОбластьОстаток.Параметры.Остаток = ?(ДанныеПечати.Остаток > 0, ДанныеПечати.Остаток, 0);
			ДокументРезультат.Вывести(ОбластьОстаток);
			
		КонецЕсли;	
		
		ДокументРезультат.Вывести(ОбластьСПараметрами(Макет, "Подвал", ДанныеПечати));
				
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ДокументСсылка);
		
		ПервыйДокумент = Ложь;
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция ДанныеПечатиСправкиКЗаявлениюОБанкротстве(МассивОбъектов) Экспорт
	
	ДанныеПечатиОбъектов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ДатаСправки КАК Период,
	|	ИсполнительныйЛист.Организация КАК Организация,
	|	ИсполнительныйЛист.Ссылка КАК ИсполнительныйЛист,
	|	ИсполнительныйЛист.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ИсполнительныйЛист.Дата КАК Дата,
	|	ИсполнительныйЛист.Номер КАК Номер,
	|	ИсполнительныйЛист.ВидИсполнительногоДокумента КАК ВидИсполнительногоДокумента,
	|	ИсполнительныйЛист.РеквизитыИсполнительногоДокумента КАК РеквизитыИсполнительногоДокумента,
	|	ИсполнительныйЛист.ДатаВыдачи КАК ДатаВыдачиИсполнительногоДокумента,
	|	ИсполнительныйЛист.ОрганВыдавшийИсполнительныйДокумент КАК ОрганВыдавшийИсполнительныйДокумент,
	|	ИсполнительныйЛист.НомерИсполнительногоДокумента КАК НомерИсполнительногоДокумента
	|ПОМЕСТИТЬ ВТДанныеИсполнительныхЛистов
	|ИЗ
	|	Документ.ИсполнительныйЛист КАК ИсполнительныйЛист
	|ГДЕ
	|	ИсполнительныйЛист.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеИсполнительныхЛистов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеИсполнительныхЛистов.Период КАК Период
	|ПОМЕСТИТЬ ВТОтборФизическиеЛица
	|ИЗ
	|	ВТДанныеИсполнительныхЛистов КАК ДанныеИсполнительныхЛистов";
	
	Запрос.УстановитьПараметр("ДатаСправки", НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Выполнить();
	
	КадровыеДанные = 
	"Фамилия,
	|Имя,
	|Отчество,
	|АдресПоПропискеПредставление,
	|СтраховойНомерПФР,
	|ИНН,
	|ДокументВид,
	|ДокументСерия,
	|ДокументНомер,
	|ДатаРождения";
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТОтборФизическиеЛица");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, КадровыеДанные);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеИсполнительныхЛистов.Период КАК Период,
	|	ДанныеИсполнительныхЛистов.Организация КАК Организация,
	|	ДанныеИсполнительныхЛистов.ИсполнительныйЛист КАК ИсполнительныйЛист,
	|	ДанныеИсполнительныхЛистов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеИсполнительныхЛистов.Дата КАК Дата,
	|	ДанныеИсполнительныхЛистов.Номер КАК Номер,
	|	ДанныеИсполнительныхЛистов.ВидИсполнительногоДокумента КАК ВидИсполнительногоДокумента,
	|	ДанныеИсполнительныхЛистов.РеквизитыИсполнительногоДокумента КАК РеквизитыИсполнительногоДокумента,
	|	ДанныеИсполнительныхЛистов.ДатаВыдачиИсполнительногоДокумента КАК ДатаВыдачиИсполнительногоДокумента,
	|	ДанныеИсполнительныхЛистов.ОрганВыдавшийИсполнительныйДокумент КАК ОрганВыдавшийИсполнительныйДокумент,
	|	ДанныеИсполнительныхЛистов.НомерИсполнительногоДокумента КАК НомерИсполнительногоДокумента,
	|	КадровыеДанныеФизическихЛиц.Фамилия КАК Фамилия,
	|	КадровыеДанныеФизическихЛиц.Имя КАК Имя,
	|	КадровыеДанныеФизическихЛиц.Отчество КАК Отчество,
	|	КадровыеДанныеФизическихЛиц.ДатаРождения КАК ДатаРождения,
	|	КадровыеДанныеФизическихЛиц.АдресПоПропискеПредставление КАК АдресПоПропискеПредставление,
	|	КадровыеДанныеФизическихЛиц.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	КадровыеДанныеФизическихЛиц.ДокументВид КАК ДокументВид,
	|	КадровыеДанныеФизическихЛиц.ДокументСерия КАК ДокументСерия,
	|	КадровыеДанныеФизическихЛиц.ДокументНомер КАК ДокументНомер,
	|	КадровыеДанныеФизическихЛиц.ИНН КАК ИНН
	|ИЗ
	|	ВТДанныеИсполнительныхЛистов КАК ДанныеИсполнительныхЛистов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
	|		ПО ДанныеИсполнительныхЛистов.Период = КадровыеДанныеФизическихЛиц.Период
	|			И ДанныеИсполнительныхЛистов.ФизическоеЛицо = КадровыеДанныеФизическихЛиц.ФизическоеЛицо";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеПечати = ПараметрыПечатнойФормыСправкиКЗаявлениюОБанкротстве();
		
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Выборка.Организация, Выборка.Период, "ИННЮЛ,НаимЮЛПол,ПолныйАдрЮР");
		
		ЗаполнитьЗначенияСвойств(ДанныеПечати.ПараметрыШапки, Выборка);
		ЗаполнитьЗначенияСвойств(ДанныеПечати.ПараметрыСведений, Выборка);
		ЗаполнитьЗначенияСвойств(ДанныеПечати.ПараметрыПодвала, СведенияОбОрганизации);
		
		ДанныеПечатиОбъектов.Вставить(Выборка.ИсполнительныйЛист, ДанныеПечати);
		
	КонецЦикла; 
	
	Возврат ДанныеПечатиОбъектов;
	
КонецФункции

Функция ДанныеПечатиЗаявленияОВыдачеСправки(МассивОбъектов) Экспорт
	
	ДанныеПечатиОбъектов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ДатаСправки КАК Период,
	|	ИсполнительныйЛист.Организация КАК Организация,
	|	ИсполнительныйЛист.Ссылка КАК ИсполнительныйЛист,
	|	ИсполнительныйЛист.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТДанныеИсполнительныхЛистов
	|ИЗ
	|	Документ.ИсполнительныйЛист КАК ИсполнительныйЛист
	|ГДЕ
	|	ИсполнительныйЛист.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеИсполнительныхЛистов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеИсполнительныхЛистов.Период КАК Период
	|ПОМЕСТИТЬ ВТОтборФизическиеЛица
	|ИЗ
	|	ВТДанныеИсполнительныхЛистов КАК ДанныеИсполнительныхЛистов";
	
	Запрос.УстановитьПараметр("ДатаСправки", НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Выполнить();
	
	КадровыеДанные = 
	"ФИОПолные,
	|ТелефонМобильныйПредставление,
	|Фамилия,
	|Имя,
	|Отчество,
	|Пол,
	|АдресПоПропискеПредставление,
	|СтраховойНомерПФР,
	|ИНН,
	|ДокументВид,
	|ДокументСерия,
	|ДокументНомер,
	|МестоРождения,
	|ДатаРождения";
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТОтборФизическиеЛица");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, КадровыеДанные);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеИсполнительныхЛистов.Период КАК Период,
	|	ДанныеИсполнительныхЛистов.Организация КАК Организация,
	|	ДанныеИсполнительныхЛистов.ИсполнительныйЛист КАК ИсполнительныйЛист,
	|	ДанныеИсполнительныхЛистов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	КадровыеДанныеФизическихЛиц.Фамилия КАК Фамилия,
	|	КадровыеДанныеФизическихЛиц.Имя КАК Имя,
	|	КадровыеДанныеФизическихЛиц.Отчество КАК Отчество,
	|	ВЫБОР
	|		КОГДА КадровыеДанныеФизическихЛиц.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Мужской)
	|			ТОГДА 1
	|		КОГДА КадровыеДанныеФизическихЛиц.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Женский)
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Пол,
	|	КадровыеДанныеФизическихЛиц.ДатаРождения КАК ДатаРождения,
	|	КадровыеДанныеФизическихЛиц.ФИОПолные КАК ФИОПолные,
	|	КадровыеДанныеФизическихЛиц.ТелефонМобильныйПредставление КАК ТелефонМобильныйПредставление,
	|	КадровыеДанныеФизическихЛиц.МестоРождения КАК МестоРождения,
	|	КадровыеДанныеФизическихЛиц.АдресПоПропискеПредставление КАК АдресПоПропискеПредставление,
	|	КадровыеДанныеФизическихЛиц.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	КадровыеДанныеФизическихЛиц.ДокументВид КАК ДокументВид,
	|	КадровыеДанныеФизическихЛиц.ДокументСерия КАК ДокументСерия,
	|	КадровыеДанныеФизическихЛиц.ДокументНомер КАК ДокументНомер,
	|	КадровыеДанныеФизическихЛиц.ИНН КАК ИНН
	|ИЗ
	|	ВТДанныеИсполнительныхЛистов КАК ДанныеИсполнительныхЛистов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
	|		ПО ДанныеИсполнительныхЛистов.Период = КадровыеДанныеФизическихЛиц.Период
	|			И ДанныеИсполнительныхЛистов.ФизическоеЛицо = КадровыеДанныеФизическихЛиц.ФизическоеЛицо";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеПечати = ПараметрыПечатнойФормыЗаявленияОВыдачеСправки();

		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Выборка.Организация, Выборка.Период, "ИННЮЛ,НаимЮЛПол,ПолныйАдрЮР");
		ЗаполнитьЗначенияСвойств(ДанныеПечати.СведенияОбОрганизации, СведенияОбОрганизации);

		ЗаполнитьЗначенияСвойств(ДанныеПечати.СведенияФизЛица, Выборка,,"ФИОПолные,МестоРождения");
		Если Выборка.Пол = 0 Тогда
			ДанныеПечати.СведенияФизЛица.ФИОПолные = СклонениеПредставленийОбъектов.ПросклонятьФИО(Выборка.ФИОПолные, 2, Выборка.ФизическоеЛицо);
		Иначе
			ДанныеПечати.СведенияФизЛица.ФИОПолные = СклонениеПредставленийОбъектов.ПросклонятьФИО(Выборка.ФИОПолные, 2, Выборка.ФизическоеЛицо, Выборка.Пол);
		КонецЕсли;
		ДанныеПечати.СведенияФизЛица.МестоРождения = ПерсонифицированныйУчетКлиентСервер.ПредставлениеМестаРождения(Выборка.МестоРождения);
		
		ДанныеПечатиОбъектов.Вставить(Выборка.ИсполнительныйЛист, ДанныеПечати);
		
	КонецЦикла;
	
	Возврат ДанныеПечатиОбъектов;
	
КонецФункции

Функция ДанныеПечатиКарточкиУчетаИсполнительногоДокументаСОплатами(МассивОбъектов) Экспорт
	
	ДанныеПечатиОбъектов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ОписаниеПериода = ЗарплатаКадрыПериодическиеРегистры.ОписаниеПериодаДляСоздатьВТИмяРегистра();
	ОписаниеПериода.ДатаНачала = Дата(1, 1, 1);
	ОписаниеПериода.ДатаОкончания = ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата();
	
	ОписаниеФильтра = ЗарплатаКадрыПериодическиеРегистры.ОписаниеФильтраДляСоздатьВТИмяРегистраПоСпискуЗначений(ОписаниеПериода,"ДокументОснование", МассивОбъектов);
	ПараметрыПостроения = ЗарплатаКадрыПериодическиеРегистры.ПараметрыПостроенияДляСоздатьВТИмяРегистра();
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыПостроения.Отборы, "Используется", "=", Истина);
	ЗарплатаКадрыПериодическиеРегистры.СоздатьВТИмяРегистраПериоды("ПлановыеУдержания", Запрос.МенеджерВременныхТаблиц, Истина, ОписаниеФильтра, ПараметрыПостроения);
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ВидыНДФЛ", Обработки.МенеджерРасчетаЗарплаты.ВидыНДФЛДополненияРасчетнойБазыУдержаний());
	Запрос.УстановитьПараметр("ВидыНачисленийДополнения", Обработки.МенеджерРасчетаЗарплаты.ВидыНачисленийДополненияРасчетнойБазыУдержаний());
	Запрос.УстановитьПараметр("РабочееВремя", ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.РабочееВремя"));
	                                    
	Запрос.Текст = "ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(ИсполнительныйЛист.ДатаДействия, МЕСЯЦ) КАК Период,
	               |	ИсполнительныйЛист.Организация КАК Организация,
	               |	ИсполнительныйЛист.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	               |	ИсполнительныйЛист.Ссылка КАК ИсполнительныйЛист,
	               |	ИсполнительныйЛист.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ИсполнительныйЛист.ФизическоеЛицо.Наименование КАК НаименованиеФизическогоЛица,
	               |	ИсполнительныйЛист.Дата КАК Дата,
	               |	ИсполнительныйЛист.Номер КАК Номер,
	               |	ИсполнительныйЛист.ВидИсполнительногоДокумента КАК ВидИсполнительногоДокумента,
	               |	ИсполнительныйЛист.РеквизитыИсполнительногоДокумента КАК РеквизитыИсполнительногоДокумента,
	               |	ИсполнительныйЛист.Получатель КАК Получатель,
	               |	ИсполнительныйЛист.Получатель.НаименованиеПолное КАК ПолноеНаименованиеПолучателя,
	               |	ИсполнительныйЛист.Получатель.Наименование КАК НаименованиеПолучателя,
	               |	ИсполнительныйЛист.АдресПолучателяПредставление КАК АдресПолучателя,
	               |	ИсполнительныйЛист.Удержание КАК Удержание
	               |ПОМЕСТИТЬ ВТСотрудники
	               |ИЗ
	               |	Документ.ИсполнительныйЛист КАК ИсполнительныйЛист
	               |ГДЕ
	               |	ИсполнительныйЛист.Ссылка В(&МассивОбъектов)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	Сотрудники.Период КАК Период
	               |ПОМЕСТИТЬ ВТОтборФизическиеЛица
	               |ИЗ
	               |	ВТСотрудники КАК Сотрудники";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТОтборФизическиеЛица");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, "ФИОПолные, АдресМестаПроживанияПредставление");	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	УдержанияДоПределаПоСотрудникамОстатки.Организация КАК Организация,
	               |	УдержанияДоПределаПоСотрудникамОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	УдержанияДоПределаПоСотрудникамОстатки.ДокументОснование КАК ДокументОснование,
	               |	УдержанияДоПределаПоСотрудникамОстатки.СуммаОстаток КАК Остаток
	               |ПОМЕСТИТЬ ВТЗадолженностьПоУдержаниям
	               |ИЗ
	               |	РегистрНакопления.УдержанияДоПределаПоСотрудникам.Остатки(,
	               |			(Организация, ФизическоеЛицо, ДокументОснование) В
	               |				(ВЫБРАТЬ
	               |					Сотрудники.ГоловнаяОрганизация,
	               |					Сотрудники.ФизическоеЛицо,
	               |					Сотрудники.ИсполнительныйЛист
	               |				ИЗ
	               |					ВТСотрудники КАК Сотрудники)) КАК УдержанияДоПределаПоСотрудникамОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗадолженностьПоУдержаниямФизическихЛицОстатки.Организация,
	               |	ЗадолженностьПоУдержаниямФизическихЛицОстатки.ФизическоеЛицо,
	               |	ЗадолженностьПоУдержаниямФизическихЛицОстатки.ДокументОснование,
	               |	ЗадолженностьПоУдержаниямФизическихЛицОстатки.СуммаОстаток
	               |ИЗ
	               |	РегистрНакопления.ЗадолженностьПоУдержаниямФизическихЛиц.Остатки(,
	               |			(Организация, ФизическоеЛицо, ДокументОснование) В
	               |				(ВЫБРАТЬ
	               |					Сотрудники.ГоловнаяОрганизация,
	               |					Сотрудники.ФизическоеЛицо,
	               |					Сотрудники.ИсполнительныйЛист
	               |				ИЗ
	               |					ВТСотрудники КАК Сотрудники)) КАК ЗадолженностьПоУдержаниямФизическихЛицОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗадолженностьПоУдержаниям.Организация КАК Организация,
	               |	ЗадолженностьПоУдержаниям.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ЗадолженностьПоУдержаниям.ДокументОснование КАК ДокументОснование,
	               |	СУММА(ЗадолженностьПоУдержаниям.Остаток) КАК Остаток
	               |ПОМЕСТИТЬ ВТОстаткиПоИсполнительнымЛистам
	               |ИЗ
	               |	ВТЗадолженностьПоУдержаниям КАК ЗадолженностьПоУдержаниям
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗадолженностьПоУдержаниям.Организация,
	               |	ЗадолженностьПоУдержаниям.ФизическоеЛицо,
	               |	ЗадолженностьПоУдержаниям.ДокументОснование";
	
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Сотрудники.Удержание КАК Удержание
	               |ПОМЕСТИТЬ ВТУникальныеУдержания
	               |ИЗ
	               |	ВТСотрудники КАК Сотрудники
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УникальныеУдержания.Удержание КАК Удержание,
	               |	УдержанияБазовыеВидыРасчета.ВидРасчета КАК БазовоеНачисление
	               |ПОМЕСТИТЬ ВТБазовыеНачисления
	               |ИЗ
	               |	ВТУникальныеУдержания КАК УникальныеУдержания
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания.БазовыеВидыРасчета КАК УдержанияБазовыеВидыРасчета
	               |		ПО УникальныеУдержания.Удержание = УдержанияБазовыеВидыРасчета.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПлановыеУдержанияПериоды.ДокументОснование КАК ИсполнительныйЛист,
	               |	ПлановыеУдержанияПериоды.Удержание КАК Удержание,
	               |	НачисленияУдержанияПоСотрудникам.Период КАК Период,
	               |	НачисленияУдержанияПоСотрудникам.Организация КАК Организация,
	               |	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	НачисленияУдержанияПоСотрудникам.НачислениеУдержание КАК НачислениеУдержание,
	               |	НачисленияУдержанияПоСотрудникам.ДокументОснование КАК ДокументОснование,
	               |	НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты КАК ГруппаНачисленияУдержанияВыплаты,
	               |	НачисленияУдержанияПоСотрудникам.Сотрудник КАК Сотрудник,
	               |	НачисленияУдержанияПоСотрудникам.Сумма КАК Сумма
	               |ПОМЕСТИТЬ ВТНачисленияУдержания
	               |ИЗ
	               |	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПлановыеУдержанияПериоды КАК ПлановыеУдержанияПериоды
	               |		ПО НачисленияУдержанияПоСотрудникам.Организация.ГоловнаяОрганизация = ПлановыеУдержанияПериоды.Организация
	               |			И НачисленияУдержанияПоСотрудникам.ФизическоеЛицо = ПлановыеУдержанияПериоды.ФизическоеЛицо
	               |			И (НачисленияУдержанияПоСотрудникам.Период >= НАЧАЛОПЕРИОДА(ПлановыеУдержанияПериоды.НачалоПериода, МЕСЯЦ))
	               |			И НачисленияУдержанияПоСотрудникам.Период <= ПлановыеУдержанияПериоды.КонецПериода
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудники КАК ВТСотрудники
	               |		ПО (ВТСотрудники.ИсполнительныйЛист = ПлановыеУдержанияПериоды.ДокументОснование)
	               |			И (ВТСотрудники.Удержание = ПлановыеУдержанияПериоды.Удержание)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПлановыеУдержанияПериоды.ДокументОснование,
	               |	ПлановыеУдержанияПериоды.Удержание,
	               |	НачисленияУдержанияПоКонтрагентамАкционерам.Период,
	               |	НачисленияУдержанияПоКонтрагентамАкционерам.Организация,
	               |	НачисленияУдержанияПоКонтрагентамАкционерам.ФизическоеЛицо,
	               |	НачисленияУдержанияПоКонтрагентамАкционерам.НачислениеУдержание,
	               |	НачисленияУдержанияПоКонтрагентамАкционерам.ДокументОснование,
	               |	НачисленияУдержанияПоКонтрагентамАкционерам.ГруппаНачисленияУдержанияВыплаты,
	               |	НачисленияУдержанияПоКонтрагентамАкционерам.Сотрудник,
	               |	НачисленияУдержанияПоКонтрагентамАкционерам.Сумма
	               |ИЗ
	               |	РегистрНакопления.НачисленияУдержанияПоКонтрагентамАкционерам КАК НачисленияУдержанияПоКонтрагентамАкционерам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПлановыеУдержанияПериоды КАК ПлановыеУдержанияПериоды
	               |		ПО НачисленияУдержанияПоКонтрагентамАкционерам.Организация.ГоловнаяОрганизация = ПлановыеУдержанияПериоды.Организация
	               |			И НачисленияУдержанияПоКонтрагентамАкционерам.ФизическоеЛицо = ПлановыеУдержанияПериоды.ФизическоеЛицо
	               |			И (НачисленияУдержанияПоКонтрагентамАкционерам.Период >= НАЧАЛОПЕРИОДА(ПлановыеУдержанияПериоды.НачалоПериода, МЕСЯЦ))
	               |			И НачисленияУдержанияПоКонтрагентамАкционерам.Период <= ПлановыеУдержанияПериоды.КонецПериода
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудники КАК ВТСотрудники
	               |		ПО (ВТСотрудники.ИсполнительныйЛист = ПлановыеУдержанияПериоды.ДокументОснование)
	               |			И (ВТСотрудники.Удержание = ПлановыеУдержанияПериоды.Удержание)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НачисленияУдержания.ИсполнительныйЛист КАК ИсполнительныйЛист,
	               |	НачисленияУдержания.Период КАК Период,
	               |	НачисленияУдержания.Организация КАК Организация,
	               |	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	НачисленияУдержания.НачислениеУдержание КАК НачислениеУдержание,
	               |	НачисленияУдержания.Сумма КАК Сумма
	               |ПОМЕСТИТЬ ВТБазаИсполнительныхЛистовПредварительно
	               |ИЗ
	               |	ВТНачисленияУдержания КАК НачисленияУдержания
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБазовыеНачисления КАК БазовыеНачисления
	               |		ПО НачисленияУдержания.Удержание = БазовыеНачисления.Удержание
	               |			И НачисленияУдержания.НачислениеУдержание = БазовыеНачисления.БазовоеНачисление
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НачисленияУдержания.ИсполнительныйЛист,
	               |	НачисленияУдержания.Период,
	               |	НачисленияУдержания.Организация,
	               |	НачисленияУдержания.ФизическоеЛицо,
	               |	НачисленияУдержания.НачислениеУдержание,
	               |	НачисленияУдержания.Сумма
	               |ИЗ
	               |	ВТНачисленияУдержания КАК НачисленияУдержания
	               |ГДЕ
	               |	НачисленияУдержания.НачислениеУдержание В(&ВидыНачисленийДополнения)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	БазаИсполнительныхЛистовПредварительно.ИсполнительныйЛист КАК ИсполнительныйЛист,
	               |	БазаИсполнительныхЛистовПредварительно.Период КАК Период,
	               |	СУММА(БазаИсполнительныхЛистовПредварительно.Сумма) КАК Сумма
	               |ПОМЕСТИТЬ ВТБазаИсполнительныхЛистов
	               |ИЗ
	               |	ВТБазаИсполнительныхЛистовПредварительно КАК БазаИсполнительныхЛистовПредварительно
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	БазаИсполнительныхЛистовПредварительно.ИсполнительныйЛист,
	               |	БазаИсполнительныхЛистовПредварительно.Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НачисленияУдержания.Организация КАК Организация,
	               |	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	НачисленияУдержания.ИсполнительныйЛист КАК ИсполнительныйЛист,
	               |	НачисленияУдержания.Период КАК Период,
	               |	СУММА(ВЫБОР
	               |			КОГДА НачисленияУдержания.НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления
	               |					ИЛИ НачисленияУдержания.НачислениеУдержание В (&ВидыНачисленийДополнения)
	               |				ТОГДА НачисленияУдержания.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаНачислений,
	               |	СУММА(ВЫБОР
	               |			КОГДА НачисленияУдержания.НачислениеУдержание В (&ВидыНДФЛ)
	               |				ТОГДА НачисленияУдержания.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК НДФЛ
	               |ПОМЕСТИТЬ ВТНачисленияНалоги
	               |ИЗ
	               |	ВТНачисленияУдержания КАК НачисленияУдержания
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НачисленияУдержания.ИсполнительныйЛист,
	               |	НачисленияУдержания.Период,
	               |	НачисленияУдержания.Организация,
	               |	НачисленияУдержания.ФизическоеЛицо
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УдержанияПоИсполнительнымДокументам.Период КАК Период,
	               |	УдержанияПоИсполнительнымДокументам.Организация КАК Организация,
	               |	УдержанияПоИсполнительнымДокументам.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	УдержанияПоИсполнительнымДокументам.ИсполнительныйДокумент КАК ИсполнительныйДокумент,
	               |	СУММА(УдержанияПоИсполнительнымДокументам.СуммаУдержания) КАК СуммаУдержания
	               |ПОМЕСТИТЬ ВТУдержанияПоИсполнительнымДокументам
	               |ИЗ
	               |	РегистрНакопления.УдержанияПоИсполнительнымДокументам КАК УдержанияПоИсполнительнымДокументам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудники КАК Сотрудники
	               |		ПО УдержанияПоИсполнительнымДокументам.Организация = Сотрудники.Организация
	               |			И УдержанияПоИсполнительнымДокументам.ФизическоеЛицо = Сотрудники.ФизическоеЛицо
	               |			И УдержанияПоИсполнительнымДокументам.ИсполнительныйДокумент = Сотрудники.ИсполнительныйЛист
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УдержанияПоИсполнительнымДокументам.Период,
	               |	УдержанияПоИсполнительнымДокументам.Организация,
	               |	УдержанияПоИсполнительнымДокументам.ФизическоеЛицо,
	               |	УдержанияПоИсполнительнымДокументам.ИсполнительныйДокумент
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(УдержанияПоИсполнительнымДокументам.Организация, НачисленияНалоги.Организация) КАК Организация,
	               |	ЕСТЬNULL(УдержанияПоИсполнительнымДокументам.ФизическоеЛицо, НачисленияНалоги.ФизическоеЛицо) КАК ФизическоеЛицо,
	               |	ЕСТЬNULL(УдержанияПоИсполнительнымДокументам.ИсполнительныйДокумент, НачисленияНалоги.ИсполнительныйЛист) КАК ИсполнительныйЛист,
	               |	ЕСТЬNULL(УдержанияПоИсполнительнымДокументам.Период, НачисленияНалоги.Период) КАК Период,
	               |	ЕСТЬNULL(НачисленияНалоги.СуммаНачислений, 0) КАК СуммаНачислений,
	               |	ЕСТЬNULL(НачисленияНалоги.СуммаНачислений, 0) - ЕСТЬNULL(БазаИсполнительныхЛистов.Сумма, 0) КАК НеудерживаемаяСумма,
	               |	ЕСТЬNULL(НачисленияНалоги.НДФЛ, 0) КАК НДФЛ,
	               |	ЕСТЬNULL(УдержанияПоИсполнительнымДокументам.СуммаУдержания, 0) КАК СуммаУдержания
	               |ПОМЕСТИТЬ ВТВыплатыПоИсполнительнымДокументамПредварительно
	               |ИЗ
	               |	ВТНачисленияНалоги КАК НачисленияНалоги
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаИсполнительныхЛистов КАК БазаИсполнительныхЛистов
	               |		ПО НачисленияНалоги.ИсполнительныйЛист = БазаИсполнительныхЛистов.ИсполнительныйЛист
	               |			И НачисленияНалоги.Период = БазаИсполнительныхЛистов.Период
	               |		ПОЛНОЕ СОЕДИНЕНИЕ ВТУдержанияПоИсполнительнымДокументам КАК УдержанияПоИсполнительнымДокументам
	               |		ПО НачисленияНалоги.ИсполнительныйЛист = УдержанияПоИсполнительнымДокументам.ИсполнительныйДокумент
	               |			И НачисленияНалоги.Период = УдержанияПоИсполнительнымДокументам.Период";
	
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
	               |	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОкончания,
	               |	Сотрудники.ИсполнительныйЛист КАК ИсполнительныйДокумент
	               |ПОМЕСТИТЬ ВТИзмеренияДаты
	               |ИЗ
	               |	ВТСотрудники КАК Сотрудники";
			
	Запрос.Выполнить();
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистра(
		"УсловияУдержанияПоИсполнительномуДокументу",
		Запрос.МенеджерВременныхТаблиц,
		Истина,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра("ВТИзмеренияДаты", "ИсполнительныйДокумент"),,
		"ВТУсловияУдержанияПоИсполнительномуДокументу");
		
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВыплатыПоИсполнительнымДокументам.Период КАК Период,
	               |	ВыплатыПоИсполнительнымДокументам.ИсполнительныйЛист КАК ИсполнительныйЛист,
	               |	МАКСИМУМ(ПроцентУдержания.Период) КАК ДатаИзменения
	               |ПОМЕСТИТЬ ВТПроцентУдержанияМаксимальныеДаты
	               |ИЗ
	               |	ВТВыплатыПоИсполнительнымДокументамПредварительно КАК ВыплатыПоИсполнительнымДокументам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУсловияУдержанияПоИсполнительномуДокументу КАК ПроцентУдержания
	               |		ПО ВыплатыПоИсполнительнымДокументам.ИсполнительныйЛист = ПроцентУдержания.ИсполнительныйДокумент
	               |			И (ВыплатыПоИсполнительнымДокументам.Период >= НАЧАЛОПЕРИОДА(ПроцентУдержания.Период, МЕСЯЦ))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВыплатыПоИсполнительнымДокументам.Период,
	               |	ВыплатыПоИсполнительнымДокументам.ИсполнительныйЛист
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПроцентУдержанияМаксимальныеДаты.Период КАК Период,
	               |	ПроцентУдержанияМаксимальныеДаты.ИсполнительныйЛист КАК ИсполнительныйЛист,
	               |	ПроцентУдержания.Процент КАК Процент,
	               |	ПроцентУдержания.Числитель КАК Числитель,
	               |	ПроцентУдержания.Знаменатель КАК Знаменатель
	               |ПОМЕСТИТЬ ВТПроцентУдержанияПериоды
	               |ИЗ
	               |	ВТПроцентУдержанияМаксимальныеДаты КАК ПроцентУдержанияМаксимальныеДаты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУсловияУдержанияПоИсполнительномуДокументу КАК ПроцентУдержания
	               |		ПО ПроцентУдержанияМаксимальныеДаты.ИсполнительныйЛист = ПроцентУдержания.ИсполнительныйДокумент
	               |			И ПроцентУдержанияМаксимальныеДаты.ДатаИзменения = ПроцентУдержания.Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВыплатыПоИсполнительнымДокументам.Организация КАК Организация,
	               |	ВыплатыПоИсполнительнымДокументам.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ВыплатыПоИсполнительнымДокументам.ИсполнительныйЛист КАК ИсполнительныйЛист,
	               |	ВыплатыПоИсполнительнымДокументам.Период КАК Период,
	               |	ВыплатыПоИсполнительнымДокументам.СуммаНачислений КАК СуммаНачислений,
	               |	ВыплатыПоИсполнительнымДокументам.НеудерживаемаяСумма КАК НеудерживаемаяСумма,
	               |	ВыплатыПоИсполнительнымДокументам.НДФЛ КАК НДФЛ,
	               |	ВыплатыПоИсполнительнымДокументам.СуммаУдержания КАК СуммаУдержания,
	               |	ЕСТЬNULL(ПроцентУдержанияПериоды.Процент, 0) КАК Процент,
	               |	ЕСТЬNULL(ПроцентУдержанияПериоды.Числитель, 0) КАК Числитель,
	               |	ЕСТЬNULL(ПроцентУдержанияПериоды.Знаменатель, 0) КАК Знаменатель
	               |ПОМЕСТИТЬ ВТВыплатыПоИсполнительнымДокументам
	               |ИЗ
	               |	ВТВыплатыПоИсполнительнымДокументамПредварительно КАК ВыплатыПоИсполнительнымДокументам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТПроцентУдержанияПериоды КАК ПроцентУдержанияПериоды
	               |		ПО ВыплатыПоИсполнительнымДокументам.ИсполнительныйЛист = ПроцентУдержанияПериоды.ИсполнительныйЛист
	               |			И ВыплатыПоИсполнительнымДокументам.Период = ПроцентУдержанияПериоды.Период";
	
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо
	               |ИЗ
	               |	ВТСотрудники КАК Сотрудники";

	СписокФизическихЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	
	КадровыйУчет.СоздатьВТОсновныеСотрудникиФизическихЛиц(Запрос.МенеджерВременныхТаблиц, Истина, СписокФизическихЛиц, Неопределено, ТекущаяДатаСеанса()); 
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НачисленияУдержания.Организация КАК Организация,
	               |	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	НачисленияУдержания.Сотрудник КАК Сотрудник,
	               |	НачисленияУдержания.Период КАК Период
	               |ПОМЕСТИТЬ ВТОсновныеСотрудники
	               |ИЗ
	               |	ВТНачисленияУдержания КАК НачисленияУдержания
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОсновныеСотрудникиФизическихЛиц КАК ОсновныеСотрудникиФизическихЛиц
	               |		ПО НачисленияУдержания.Сотрудник = ОсновныеСотрудникиФизическихЛиц.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОсновныеСотрудники.Организация КАК Организация,
	               |	ОсновныеСотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ОсновныеСотрудники.Сотрудник КАК Сотрудник,
	               |	ОсновныеСотрудники.Период КАК Период
	               |ПОМЕСТИТЬ ВТСотрудникиПериоды
	               |ИЗ
	               |	ВТОсновныеСотрудники КАК ОсновныеСотрудники
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НачисленияУдержания.Организация,
	               |	НачисленияУдержания.ФизическоеЛицо,
	               |	МАКСИМУМ(НачисленияУдержания.Сотрудник),
	               |	НачисленияУдержания.Период
	               |ИЗ
	               |	ВТНачисленияУдержания КАК НачисленияУдержания
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсновныеСотрудники КАК ОсновныеСотрудники
	               |		ПО НачисленияУдержания.Организация = ОсновныеСотрудники.Организация
	               |			И НачисленияУдержания.ФизическоеЛицо = ОсновныеСотрудники.ФизическоеЛицо
	               |			И НачисленияУдержания.Период = ОсновныеСотрудники.Период
	               |ГДЕ
	               |	ОсновныеСотрудники.Организация ЕСТЬ NULL
	               |	И НачисленияУдержания.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НачисленияУдержания.Организация,
	               |	НачисленияУдержания.ФизическоеЛицо,
	               |	НачисленияУдержания.Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СотрудникиПериоды.Сотрудник КАК Сотрудник,
	               |	СотрудникиПериоды.Период КАК Месяц,
	               |	КОНЕЦПЕРИОДА(СотрудникиПериоды.Период, МЕСЯЦ) КАК ДатаАктуальности,
	               |	НАЧАЛОПЕРИОДА(СотрудникиПериоды.Период, МЕСЯЦ) КАК ДатаНачала,
	               |	КОНЕЦПЕРИОДА(СотрудникиПериоды.Период, МЕСЯЦ) КАК ДатаОкончания
	               |ПОМЕСТИТЬ ВТСотрудникиДляРасчетаВремени
	               |ИЗ
	               |	ВТСотрудникиПериоды КАК СотрудникиПериоды";
	
	Запрос.Выполнить();
	
	ПараметрыПолученияДанныхОВремени = УчетРабочегоВремениРасширенный.ПараметрыДляСоздатьВТДанныеУчетаРабочегоВремениСотрудников();
	ПараметрыПолученияДанныхОВремени.ИмяВТСотрудники = "ВТСотрудникиДляРасчетаВремени";
	УчетРабочегоВремениРасширенный.СоздатьВТДанныеУчетаРабочегоВремениСотрудников(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияДанныхОВремени);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеУчетаРабочегоВремениСотрудников.Сотрудник КАК Сотрудник,
	               |	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ДанныеУчетаРабочегоВремениСотрудников.Месяц КАК Месяц,
	               |	СУММА(ДанныеУчетаРабочегоВремениСотрудников.Дней) КАК ОтработаноДней
	               |ПОМЕСТИТЬ ВТОтработанноеВремя
	               |ИЗ
	               |	ВТДанныеУчетаРабочегоВремениСотрудников КАК ДанныеУчетаРабочегоВремениСотрудников
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	               |		ПО ДанныеУчетаРабочегоВремениСотрудников.Сотрудник = Сотрудники.Ссылка
	               |ГДЕ
	               |	ДанныеУчетаРабочегоВремениСотрудников.ВидУчетаВремени = &РабочееВремя
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ДанныеУчетаРабочегоВремениСотрудников.Сотрудник,
	               |	ДанныеУчетаРабочегоВремениСотрудников.Месяц,
	               |	Сотрудники.ФизическоеЛицо
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(УсловияУдержанияПоИсполнительномуДокументу.Период) КАК ДатаИзменения,
	               |	УсловияУдержанияПоИсполнительномуДокументу.ИсполнительныйДокумент КАК ИсполнительныйДокумент,
	               |	ВыплатыПоИсполнительнымДокументам.Период КАК Период
	               |ПОМЕСТИТЬ ВТПериодыВыплатИДатыИзменений
	               |ИЗ
	               |	ВТУсловияУдержанияПоИсполнительномуДокументу КАК УсловияУдержанияПоИсполнительномуДокументу
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВыплатыПоИсполнительнымДокументам КАК ВыплатыПоИсполнительнымДокументам
	               |		ПО (ВыплатыПоИсполнительнымДокументам.ИсполнительныйЛист = УсловияУдержанияПоИсполнительномуДокументу.ИсполнительныйДокумент)
	               |			И (ВыплатыПоИсполнительнымДокументам.Период >= НАЧАЛОПЕРИОДА(УсловияУдержанияПоИсполнительномуДокументу.Период, МЕСЯЦ))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УсловияУдержанияПоИсполнительномуДокументу.ИсполнительныйДокумент,
	               |	ВыплатыПоИсполнительнымДокументам.Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УсловияУдержанияПоИсполнительномуДокументу.Период КАК ДатаИзменения,
	               |	УсловияУдержанияПоИсполнительномуДокументу.ИсполнительныйДокумент КАК ИсполнительныйДокумент,
	               |	УсловияУдержанияПоИсполнительномуДокументу.СпособРасчета КАК СпособРасчета,
	               |	УсловияУдержанияПоИсполнительномуДокументу.ВидБазы КАК ВидБазы,
	               |	УсловияУдержанияПоИсполнительномуДокументу.Процент КАК Процент,
	               |	УсловияУдержанияПоИсполнительномуДокументу.Сумма КАК Сумма,
	               |	УсловияУдержанияПоИсполнительномуДокументу.Числитель КАК Числитель,
	               |	УсловияУдержанияПоИсполнительномуДокументу.Знаменатель КАК Знаменатель,
	               |	УсловияУдержанияПоИсполнительномуДокументу.ПрожиточныйМинимум КАК ПрожиточныйМинимум,
	               |	УсловияУдержанияПоИсполнительномуДокументу.Предел КАК Предел,
	               |	ВТПериодыВыплатИДатыИзменений.Период КАК Период
	               |ПОМЕСТИТЬ ВТУсловияУдержанияПоДатамВыплат
	               |ИЗ
	               |	ВТПериодыВыплатИДатыИзменений КАК ВТПериодыВыплатИДатыИзменений
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловияУдержанияПоИсполнительномуДокументу КАК УсловияУдержанияПоИсполнительномуДокументу
	               |		ПО (УсловияУдержанияПоИсполнительномуДокументу.ИсполнительныйДокумент = ВТПериодыВыплатИДатыИзменений.ИсполнительныйДокумент)
	               |			И (УсловияУдержанияПоИсполнительномуДокументу.Период = ВТПериодыВыплатИДатыИзменений.ДатаИзменения)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Сотрудники.Период КАК МесяцНачисления,
	               |	Сотрудники.ИсполнительныйЛист КАК ИсполнительныйЛист,
	               |	Сотрудники.Организация КАК Организация,
	               |	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ЕСТЬNULL(КадровыеДанныеФизическихЛиц.ФИОПолные, Сотрудники.НаименованиеФизическогоЛица) КАК ФИОСотрудника,
	               |	Сотрудники.Дата КАК Дата,
	               |	Сотрудники.Номер КАК Номер,
	               |	УсловияУдержанияПоИсполнительномуДокументу.СпособРасчета КАК СпособРасчета,
	               |	УсловияУдержанияПоИсполнительномуДокументу.ВидБазы КАК ВидБазы,
	               |	УсловияУдержанияПоИсполнительномуДокументу.Процент КАК ТекущийПроцент,
	               |	УсловияУдержанияПоИсполнительномуДокументу.Сумма КАК Сумма,
	               |	УсловияУдержанияПоИсполнительномуДокументу.Числитель КАК ТекущийЧислитель,
	               |	УсловияУдержанияПоИсполнительномуДокументу.Знаменатель КАК ТекущийЗнаменатель,
	               |	УсловияУдержанияПоИсполнительномуДокументу.Предел КАК Предел,
	               |	ЕСТЬNULL(ОстаткиПоИсполнительнымЛистам.Остаток, 0) КАК Остаток,
	               |	Сотрудники.ВидИсполнительногоДокумента КАК ВидИсполнительногоДокумента,
	               |	Сотрудники.РеквизитыИсполнительногоДокумента КАК РеквизитыИсполнительногоДокумента,
	               |	Сотрудники.Получатель КАК Получатель,
	               |	Сотрудники.ПолноеНаименованиеПолучателя КАК ПолноеНаименованиеПолучателя,
	               |	Сотрудники.НаименованиеПолучателя КАК НаименованиеПолучателя,
	               |	Сотрудники.АдресПолучателя КАК ФактическийАдресПолучателя,
	               |	КадровыеДанныеФизическихЛиц.АдресМестаПроживанияПредставление КАК АдресМестаПроживанияСотрудника,
	               |	ВыплатыПоИсполнительнымДокументам.Период КАК Месяц,
	               |	ВыплатыПоИсполнительнымДокументам.СуммаНачислений КАК СуммаНачислений,
	               |	ВыплатыПоИсполнительнымДокументам.НеудерживаемаяСумма КАК НеудерживаемаяСумма,
	               |	ВыплатыПоИсполнительнымДокументам.НДФЛ КАК НДФЛ,
	               |	ВыплатыПоИсполнительнымДокументам.СуммаУдержания КАК СуммаУдержания,
	               |	ВыплатыПоИсполнительнымДокументам.Процент КАК Процент,
	               |	ВыплатыПоИсполнительнымДокументам.Числитель КАК Числитель,
	               |	ВыплатыПоИсполнительнымДокументам.Знаменатель КАК Знаменатель,
	               |	ОтработанноеВремя.ОтработаноДней КАК ОтработаноДней
	               |ИЗ
	               |	ВТСотрудники КАК Сотрудники
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
	               |		ПО Сотрудники.ФизическоеЛицо = КадровыеДанныеФизическихЛиц.ФизическоеЛицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПоИсполнительнымЛистам КАК ОстаткиПоИсполнительнымЛистам
	               |		ПО Сотрудники.ФизическоеЛицо = ОстаткиПоИсполнительнымЛистам.ФизическоеЛицо
	               |			И Сотрудники.ИсполнительныйЛист = ОстаткиПоИсполнительнымЛистам.ДокументОснование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТВыплатыПоИсполнительнымДокументам КАК ВыплатыПоИсполнительнымДокументам
	               |			ЛЕВОЕ СОЕДИНЕНИЕ ВТОтработанноеВремя КАК ОтработанноеВремя
	               |			ПО ВыплатыПоИсполнительнымДокументам.ФизическоеЛицо = ОтработанноеВремя.ФизическоеЛицо
	               |				И ВыплатыПоИсполнительнымДокументам.Период = ОтработанноеВремя.Месяц
	               |		ПО Сотрудники.ИсполнительныйЛист = ВыплатыПоИсполнительнымДокументам.ИсполнительныйЛист
				   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловияУдержанияПоДатамВыплат КАК УсловияУдержанияПоИсполнительномуДокументу
	               |			ПО ВыплатыПоИсполнительнымДокументам.ИсполнительныйЛист = УсловияУдержанияПоИсполнительномуДокументу.ИсполнительныйДокумент
	               |				И ВыплатыПоИсполнительнымДокументам.Период = УсловияУдержанияПоИсполнительномуДокументу.Период
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ИсполнительныйЛист,
	               |	Месяц";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("ИсполнительныйЛист") Цикл
		
		ДанныеПечати = ПараметрыПечатнойФормыКарточкиУчетаИсполнительногоДокументаСОплатами();
		
		ЗаполнитьЗначенияСвойств(ДанныеПечати, Выборка);
				
		Если Выборка.ВидБазы = Перечисления.ВидыБазыУдержанияПоИсполнительномуДокументу.ПрожиточныйМинимум Тогда 
			ДанныеПечати.ПорядокРасчета = НСтр("ru = ' прож. миним.';
												|en = ' subsistence rate'");
		КонецЕсли;
				
		Если ЗначениеЗаполнено(Выборка.ФактическийАдресПолучателя) И ЗначениеЗаполнено(Выборка.Получатель) Тогда
			ДанныеПечати.РазделительПолучателя = "; "; 
		Иначе
			ДанныеПечати.РазделительПолучателя = ""; 
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.ПолноеНаименованиеПолучателя) Тогда 
			ДанныеПечати.Получатель = Выборка.ПолноеНаименованиеПолучателя;
		Иначе 
			ДанныеПечати.Получатель = Выборка.НаименованиеПолучателя;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.АдресМестаПроживанияСотрудника) И ЗначениеЗаполнено(Выборка.ФИОСотрудника) Тогда
			ДанныеПечати.РазделительСотрудника = "; "; 
		Иначе
			ДанныеПечати.РазделительСотрудника = ""; 
		КонецЕсли;

		ДанныеПечати.Дата = Формат(Выборка.Дата, "ДФ=""ММММ гггг 'г.'""");
		ДанныеПечати.МесяцНачисления = Формат(Выборка.МесяцНачисления, "ДФ=""ММММ гггг 'г.'""");
		ДанныеПечати.ДатаПечати = Формат(ТекущаяДатаСеанса(), "ДЛФ=Д");
		
		НомерМесяца = 1;
		ИтогоУдержано = 0;
		Пока Выборка.Следующий() Цикл
			
			Если ЗначениеЗаполнено(ДанныеПечати.Предел) 
				И ИтогоУдержано >= ДанныеПечати.Предел
				И Выборка.СуммаУдержания = 0 Тогда 
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ДанныеПечати.ТаблицаОплат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.НомерМесяца = НомерМесяца;
			ПорядокРасчета = "";
			
			Если Выборка.СпособРасчета = Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.ФиксированнойСуммой Тогда
				Размер = Выборка.Сумма;
				ПорядокРасчета = НСтр("ru = ' руб.';
										|en = ' rub.'");
			ИначеЕсли Выборка.СпособРасчета = Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Процентом Тогда
				Размер = ?(ЗначениеЗаполнено(Выборка.Процент), Выборка.Процент, Выборка.ТекущийПроцент);
				ПорядокРасчета = НСтр("ru = ' %';
										|en = ' %'");
			ИначеЕсли Выборка.СпособРасчета = Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Долей Тогда
				Размер = ?(ЗначениеЗаполнено(Выборка.Числитель), Строка(Выборка.Числитель), Строка(Выборка.ТекущийЧислитель)) 
					+ " / " + ?(ЗначениеЗаполнено(Выборка.Знаменатель), Строка(Выборка.Знаменатель), Строка(Выборка.ТекущийЗнаменатель));
				ПорядокРасчета = НСтр("ru = ' заработка';
										|en = ' earnings'");
			КонецЕсли;
			
			Если Выборка.ВидБазы = Перечисления.ВидыБазыУдержанияПоИсполнительномуДокументу.ПрожиточныйМинимум Тогда 
				ПорядокРасчета = НСтр("ru = ' прож. миним.';
										|en = ' subsistence rate'");
			КонецЕсли;
			
			НоваяСтрока.РазмерУдержания = "" + Размер + ПорядокРасчета;
			НомерМесяца = НомерМесяца + 1;
			ИтогоУдержано = ИтогоУдержано + НоваяСтрока.СуммаУдержания;
			
		КонецЦикла;
		
		Если Выборка.СпособРасчета = Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.ФиксированнойСуммой Тогда
			ДанныеПечати.Размер = Выборка.Сумма;
			ДанныеПечати.ПорядокРасчета = НСтр("ru = ' руб.';
												|en = ' rub.'");
		ИначеЕсли Выборка.СпособРасчета = Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Процентом Тогда
			ДанныеПечати.Размер = Выборка.ТекущийПроцент;
			ДанныеПечати.ПорядокРасчета = НСтр("ru = ' %';
												|en = ' %'");
		ИначеЕсли Выборка.СпособРасчета = Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Долей Тогда
			ДанныеПечати.Размер = Строка(Выборка.ТекущийЧислитель) + " / " + Строка(Выборка.ТекущийЗнаменатель);
			ДанныеПечати.ПорядокРасчета = НСтр("ru = ' заработка';
												|en = ' earnings'");
		КонецЕсли;
		
		ДанныеПечати.ИтогоУдержано = ИтогоУдержано;
		ДанныеПечатиОбъектов.Вставить(Выборка.ИсполнительныйЛист, ДанныеПечати);
		
	КонецЦикла;
	
	Возврат ДанныеПечатиОбъектов;
	
КонецФункции

Функция ПараметрыПечатнойФормыКарточкиУчетаИсполнительногоДокументаСОплатами() Экспорт
	
	ПараметрыПечатнойФормы = Новый Структура;
	ПараметрыПечатнойФормы.Вставить("РеквизитыИсполнительногоДокумента");
	ПараметрыПечатнойФормы.Вставить("Получатель");
	ПараметрыПечатнойФормы.Вставить("ФактическийАдресПолучателя");
	ПараметрыПечатнойФормы.Вставить("Размер");
	ПараметрыПечатнойФормы.Вставить("ПорядокРасчета");
	ПараметрыПечатнойФормы.Вставить("Предел");
	ПараметрыПечатнойФормы.Вставить("Остаток");
	ПараметрыПечатнойФормы.Вставить("ФИОСотрудника");
	ПараметрыПечатнойФормы.Вставить("АдресМестаПроживанияСотрудника");
	ПараметрыПечатнойФормы.Вставить("РазделительПолучателя");
	ПараметрыПечатнойФормы.Вставить("РазделительСотрудника");
	ПараметрыПечатнойФормы.Вставить("ВидИсполнительногоДокумента");
	ПараметрыПечатнойФормы.Вставить("Дата");
	ПараметрыПечатнойФормы.Вставить("Номер");
	ПараметрыПечатнойФормы.Вставить("МесяцНачисления");
	ПараметрыПечатнойФормы.Вставить("ДатаПечати");
	ПараметрыПечатнойФормы.Вставить("ИтогоУдержано");
			
	ТаблицаОплат = Новый ТаблицаЗначений;
	ТаблицаОплат.Колонки.Добавить("НомерМесяца", Новый ОписаниеТипов("Число"));
	ТаблицаОплат.Колонки.Добавить("Месяц", Новый ОписаниеТипов("Дата"));
	ТаблицаОплат.Колонки.Добавить("ОтработаноДней", Новый ОписаниеТипов("Число"));
	ТаблицаОплат.Колонки.Добавить("СуммаНачислений", Новый ОписаниеТипов("Число"));
	ТаблицаОплат.Колонки.Добавить("НеудерживаемаяСумма", Новый ОписаниеТипов("Число"));
	ТаблицаОплат.Колонки.Добавить("НДФЛ", Новый ОписаниеТипов("Число"));
	ТаблицаОплат.Колонки.Добавить("РазмерУдержания", Новый ОписаниеТипов("Строка"));
	ТаблицаОплат.Колонки.Добавить("СуммаУдержания", Новый ОписаниеТипов("Число"));
	
	ПараметрыПечатнойФормы.Вставить("ТаблицаОплат", ТаблицаОплат);	
		
	Возврат ПараметрыПечатнойФормы;
	
КонецФункции

Функция ПараметрыПечатнойФормыСправкиКЗаявлениюОБанкротстве() Экспорт
	
	ПараметрыПечатнойФормы = Новый Структура;
	
	ПараметрыШапки = Новый Структура;
	ПараметрыШапки.Вставить("Фамилия");
	ПараметрыШапки.Вставить("Имя");
	ПараметрыШапки.Вставить("Отчество");
	ПараметрыШапки.Вставить("ДатаРождения");
	ПараметрыШапки.Вставить("ДокументВид");
	ПараметрыШапки.Вставить("ДокументСерия");
	ПараметрыШапки.Вставить("ДокументНомер");
	ПараметрыШапки.Вставить("ИНН");
	ПараметрыШапки.Вставить("СтраховойНомерПФР");
	ПараметрыШапки.Вставить("АдресПоПропискеПредставление");

	ПараметрыСведений = Новый Структура;
	ПараметрыСведений.Вставить("ВидИсполнительногоДокумента");
	ПараметрыСведений.Вставить("ОрганВыдавшийИсполнительныйДокумент");
	ПараметрыСведений.Вставить("ДатаВыдачиИсполнительногоДокумента");
	
	ПараметрыПодвала = Новый Структура;
	ПараметрыПодвала.Вставить("НаимЮЛПол");
	ПараметрыПодвала.Вставить("ПолныйАдрЮР");
	ПараметрыПодвала.Вставить("ИННЮЛ");
	
	ПараметрыПечатнойФормы.Вставить("ПараметрыШапки", ПараметрыШапки);
	ПараметрыПечатнойФормы.Вставить("ПараметрыСведений", ПараметрыСведений);
	ПараметрыПечатнойФормы.Вставить("ПараметрыПодвала", ПараметрыПодвала);

	Возврат ПараметрыПечатнойФормы;
	
КонецФункции

Функция ПараметрыПечатнойФормыЗаявленияОВыдачеСправки() Экспорт
	
	ПараметрыПечатнойФормы = Новый Структура;
	
	СведенияФизЛица = Новый Структура;
	СведенияФизЛица.Вставить("ФИОПолные");
	СведенияФизЛица.Вставить("Фамилия");
	СведенияФизЛица.Вставить("Имя");
	СведенияФизЛица.Вставить("Отчество");
	СведенияФизЛица.Вставить("ДатаРождения");
	СведенияФизЛица.Вставить("МестоРождения");
	СведенияФизЛица.Вставить("ДокументВид");
	СведенияФизЛица.Вставить("ДокументСерия");
	СведенияФизЛица.Вставить("ДокументНомер");
	СведенияФизЛица.Вставить("ИНН");
	СведенияФизЛица.Вставить("СтраховойНомерПФР");
	СведенияФизЛица.Вставить("АдресПоПропискеПредставление");
	СведенияФизЛица.Вставить("ТелефонМобильныйПредставление");

	СведенияОбОрганизации = Новый Структура;
	СведенияОбОрганизации.Вставить("НаимЮЛПол");
	СведенияОбОрганизации.Вставить("ПолныйАдрЮР");
	
	ПараметрыПечатнойФормы.Вставить("СведенияФизЛица", СведенияФизЛица);
	ПараметрыПечатнойФормы.Вставить("СведенияОбОрганизации", СведенияОбОрганизации);

	Возврат ПараметрыПечатнойФормы;
	
КонецФункции

Функция ОбластьСПараметрами(Макет, ИмяОбласти, ДанныеПечати)
	
	Область = Макет.ПолучитьОбласть(ИмяОбласти);
	Область.Параметры.Заполнить(ДанныеПечати);
	
	Возврат Область;
	
КонецФункции

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

#КонецОбласти

#КонецЕсли
