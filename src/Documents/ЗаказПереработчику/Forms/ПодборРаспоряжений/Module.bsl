
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	//++ НЕ УТКА
	УстановитьУсловноеОформление();
	//-- НЕ УТКА
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	//++ НЕ УТКА
	ЗапрещенВыборНовыхЭтапов = Параметры.ЗапрещенВыборНовыхЭтапов;
	
	ПараметрыОтбора = ХранилищеНастроекДанныхФорм.Загрузить("ЗаказПереработчикуРабочееМесто", "ПараметрыОтбора");
	Если ЗначениеЗаполнено(ПараметрыОтбора) Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ПараметрыОтбора, "ОтборПериод");
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.Организация) Тогда
		Элементы.ГрафикПроизводстваОрганизация.Видимость = Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.Склад) Тогда
		Элементы.ГрафикПроизводстваСклад.Видимость = Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.Партнер) Тогда
		Элементы.ГрафикПроизводстваПереработчик.Видимость = Ложь;
	КонецЕсли;
	//++ Устарело_Производство21
	Если Параметры.ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВЗаказеПереработчику.ПоЗаказамНаПроизводство Тогда
		Заголовок = НСтр("ru = 'Выбор заказов на производство';
						|en = 'Select production orders'");
	Иначе
	//-- Устарело_Производство21	
		Заголовок = НСтр("ru = 'Выбор этапов производства';
						|en = 'Production stage selection'");
	//++ Устарело_Производство21	
	КонецЕсли;
	//-- Устарело_Производство21
	
	Если Параметры.ТолькоПросмотр Тогда
		Элементы.ГрафикПроизводстваПеренестиВДокумент.Доступность = Ложь;
		Элементы.ГрафикПроизводстваВыбратьПродукцию.Доступность = Ложь;
		Элементы.ГрафикПроизводстваИсключитьПродукцию.Доступность = Ложь;
		Элементы.ГрафикПроизводства.ТолькоПросмотр = Истина;
	ИначеЕсли ЗапрещенВыборНовыхЭтапов Тогда
		Элементы.ГрафикПроизводстваВыбратьПродукцию.Доступность = Ложь;
		Элементы.ОтборПериод.Видимость = Ложь;
	КонецЕсли; 
	
	Для каждого СтрокаУслуга Из Параметры.Услуги Цикл
		ЗаполнитьЗначенияСвойств(РаспоряженияЗаказа.Добавить(),СтрокаУслуга);
	КонецЦикла; 
	
	Элементы.ГрафикПроизводстваЗаказПредставление.Заголовок = Параметры.ЗаголовокПоляГруппыЗатрат;
	
	ЗаполнитьГрафикПроизводства();

	//-- НЕ УТКА
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборПериодПриИзменении(Элемент)
	
	//++ НЕ УТКА
	ЗаполнитьГрафикПроизводства();
	//-- НЕ УТКА
	
	Возврат; // В КА пустой обработчик
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыГрафикПроизводства

&НаКлиенте
Процедура ГрафикПроизводстваВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ГрафикПроизводстваЗаказПредставление Тогда
		СтандартнаяОбработка = Ложь;
		ТекущиеДанные = Элементы.ГрафикПроизводства.ТекущиеДанные;
		ПоказатьЗначение(, ТекущиеДанные.Распоряжение);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	//++ НЕ УТКА
	
	СтруктураПоиска = Новый Структура("Пометка", Истина);
 	СписокСтрок = ГрафикПроизводства.НайтиСтроки(СтруктураПоиска);
	
	ДанныеЗаполнения = ПереработкаНаСторонеКлиент.ДанныеДляФормированияЗаказовПереработчикам(СписокСтрок);
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		Закрыть(ДанныеЗаполнения);
	КонецЕсли;
	
	//-- НЕ УТКА
	
	Возврат; // В КА пустой обработчик
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПродукцию(Команда)
	
	Для каждого ТекущиеДанные Из ГрафикПроизводства Цикл
		ТекущиеДанные.Пометка = Истина;
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьПродукцию(Команда)
	
	Для каждого ТекущиеДанные Из ГрафикПроизводства Цикл
		ТекущиеДанные.Пометка = Ложь;
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТКА

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтаФорма, 
																			 "ГрафикПроизводстваХарактеристика",
																		     "ГрафикПроизводства.ХарактеристикиИспользуются");
	
	// Переработчик не указан
	#Область ГрафикПроизводства_Переработчик
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ГрафикПроизводстваПереработчик.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ГрафикПроизводства.Переработчик");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не указан>';
																|en = '<not specified>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекста);
	#КонецОбласти
	
	// Дата начала просрочена
	#Область ГрафикПроизводства_Начало
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ГрафикПроизводстваНачало.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ГрафикПроизводства.ДатаЗапускаПросрочена");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОсобогоТекста);
	#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГрафикПроизводства()

	//++ Устарело_Производство21
	Если Параметры.ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВЗаказеПереработчику.ПоЗаказамНаПроизводство Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЭтапыГрафика.ЗаказНаПроизводство   КАК ЗаказНаПроизводство,
		|	ЭтапыГрафика.КодСтрокиЭтапыГрафик  КАК КодСтрокиЭтапыГрафик,
		|	ЭтапыГрафика.Номенклатура          КАК Номенклатура,
		|	ЭтапыГрафика.Характеристика        КАК Характеристика,
		|	ЭтапыГрафика.Склад                 КАК Склад,
		|	СУММА(ЭтапыГрафика.Количество)     КАК Количество
		|ПОМЕСТИТЬ ПродукцияКЗаказу
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЭтапыГрафика.ЗаказНаПроизводство   КАК ЗаказНаПроизводство,
		|		ЭтапыГрафика.КодСтрокиЭтапыГрафик  КАК КодСтрокиЭтапыГрафик,
		|		ЭтапыГрафика.Номенклатура          КАК Номенклатура,
		|		ЭтапыГрафика.Характеристика        КАК Характеристика,
		|		ЭтапыГрафика.Склад                 КАК Склад,
		|		ЭтапыГрафика.КЗаказуОстаток        КАК Количество
		|	ИЗ
		|		РегистрНакопления.ПереработкаПоГрафикуПроизводства.Остатки(
		|			,
		|			&Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|				ИЛИ Склад В ИЕРАРХИИ (&Склад)) КАК ЭтапыГрафика
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ЭтапыГрафика.ЗаказНаПроизводство   КАК ЗаказНаПроизводство,
		|		ЭтапыГрафика.КодСтрокиЭтапыГрафик  КАК КодСтрокиЭтапыГрафик,
		|		ЭтапыГрафика.Номенклатура          КАК Номенклатура,
		|		ЭтапыГрафика.Характеристика        КАК Характеристика,
		|		ЭтапыГрафика.Склад                 КАК Склад,
		|		ЭтапыГрафика.КЗаказу               КАК Количество
		|	ИЗ
		|		РегистрНакопления.ПереработкаПоГрафикуПроизводства КАК ЭтапыГрафика
		|	ГДЕ
		|		ЭтапыГрафика.Регистратор = &Ссылка
		|		И ЭтапыГрафика.Активность
		|		И (&Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|				ИЛИ ЭтапыГрафика.Склад В ИЕРАРХИИ (&Склад))
		|
		|	) КАК ЭтапыГрафика
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭтапыГрафика.ЗаказНаПроизводство,
		|	ЭтапыГрафика.КодСтрокиЭтапыГрафик,
		|	ЭтапыГрафика.Номенклатура,
		|	ЭтапыГрафика.Характеристика,
		|	ЭтапыГрафика.Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПереработкаПоГрафику.ЗаказНаПроизводство.Организация         КАК Организация,
		|	ПереработкаПоГрафику.ЗаказНаПроизводство                     КАК Распоряжение,
		|	ПереработкаПоГрафику.ЗаказНаПроизводство.Номер               КАК НомерРаспоряжения,
		|	ПереработкаПоГрафику.ЗаказНаПроизводство.Дата                КАК ДатаРаспоряжения,
		|	ЗаказЭтапы.Подразделение                                     КАК Подразделение,
		|	ЗаказЭтапы.Партнер                                           КАК Переработчик,
		|	ПереработкаПоГрафику.КодСтрокиЭтапыГрафик                    КАК КодСтрокиЭтапыГрафик,
		|	ПереработкаПоГрафику.Номенклатура                            КАК Номенклатура,
		|	ПереработкаПоГрафику.Характеристика                          КАК Характеристика,
		|	ПереработкаПоГрафику.Склад                                   КАК Склад,
		|	ПереработкаПоГрафику.Склад.Родитель                          КАК ГруппаСкладов,
		|	ЕСТЬNULL(ПереработкаПоГрафику.Склад.Родитель.ВыборГруппы, НЕОПРЕДЕЛЕНО) КАК ВыборГруппы,
		|	ПереработкаПоГрафику.Количество                              КАК Количество,
		|	ЗаказЭтапыГрафик.Этап.Представление                          КАК ЭтапПредставление,
		|	ЗаказНаПроизводствоПродукция.Спецификация.Представление      КАК СпецификацияПредставление,
		|	ЕСТЬNULL(ЗаказНаПроизводствоПродукция.Спецификация.МногоэтапныйПроизводственныйПроцесс, ЛОЖЬ) КАК МногоэтапныйПроизводственныйПроцесс,
		|	ЗаказЭтапыГрафик.НачалоПредварительногоБуфера                КАК Начало,
		|	ВЫБОР
		|		КОГДА ЗаказНаПроизводствоПродукция.Номенклатура.ИспользованиеХарактеристик В (
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры), 
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры), 
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                                        КАК ХарактеристикиИспользуются,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(ЗаказЭтапыГрафик.НачалоПредварительногоБуфера, ДЕНЬ) < &ТекущаяДата
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                                        КАК ДатаЗапускаПросрочена,
		|	ПереработкаПоГрафику.ЗаказНаПроизводство.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПустаяСсылка) КАК ВариантПриемкиТоваров,
		|	ЛОЖЬ КАК ДинамическаяСтруктура
		|ИЗ
		|	ПродукцияКЗаказу КАК ПереработкаПоГрафику
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство КАК ДокЗаказНаПроизводство
		|		ПО (ДокЗаказНаПроизводство.Ссылка = ПереработкаПоГрафику.ЗаказНаПроизводство)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.ЭтапыГрафик КАК ЗаказЭтапыГрафик
		|		ПО (ЗаказЭтапыГрафик.Ссылка = ПереработкаПоГрафику.ЗаказНаПроизводство)
		|			И (ЗаказЭтапыГрафик.КодСтроки = ПереработкаПоГрафику.КодСтрокиЭтапыГрафик)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Этапы КАК ЗаказЭтапы
		|		ПО (ЗаказЭтапы.Ссылка = ЗаказЭтапыГрафик.Ссылка)
		|			И (ЗаказЭтапы.КлючСвязи = ЗаказЭтапыГрафик.КлючСвязиЭтапы)
		|			И (ЗаказЭтапы.КлючСвязиПродукция = ЗаказЭтапыГрафик.КлючСвязиПродукция)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
		|		ПО (ЗаказНаПроизводствоПродукция.Ссылка = ЗаказЭтапыГрафик.Ссылка)
		|			И (ЗаказНаПроизводствоПродукция.КлючСвязи = ЗаказЭтапыГрафик.КлючСвязиПродукция)
		|ГДЕ
		|	(&ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
		|			ИЛИ НАЧАЛОПЕРИОДА(ЗаказЭтапыГрафик.НачалоПредварительногоБуфера, ДЕНЬ) >= &ДатаНачала)
		|	И (&ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|			ИЛИ КОНЕЦПЕРИОДА(ЗаказЭтапыГрафик.НачалоПредварительногоБуфера, ДЕНЬ) <= &ДатаОкончания)
		|
		|	И (&Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ИЛИ ДокЗаказНаПроизводство.Организация = &Организация)
		|
		|	И (&Переработчик = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|			ИЛИ ЗаказЭтапы.Партнер = &Переработчик
		|			ИЛИ ЗаказЭтапы.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
		|
		|	И (&Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ИЛИ ЗаказЭтапы.Подразделение = &Подразделение)
		|	И (&НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|			ИЛИ ДокЗаказНаПроизводство.НаправлениеДеятельности = &НаправлениеДеятельности)
		|
		|	И (&ДинамическаяСтруктура = НЕОПРЕДЕЛЕНО
		|			ИЛИ &ДинамическаяСтруктура = ЛОЖЬ)";
		
		ШаблонРаспоряжения = НСтр("ru = 'Заказ № %1 от %2 (%3)';
									|en = 'Order No. %1 from %2 (%3)'");
		
	Иначе
	//-- Устарело_Производство21
		
		ТекстыЗапросов = Новый Массив();
		ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ДокЭтапПроизводства.Организация КАК Организация,
			|	ДокЭтапПроизводства.Ссылка КАК Распоряжение,
			|	ДокЭтапПроизводства.Номер КАК НомерРаспоряжения,
			|	ДокЭтапПроизводства.Дата КАК ДатаРаспоряжения,
			|	ДокЭтапПроизводства.Подразделение КАК Подразделение,
			|	ДокЭтапПроизводства.Этап.Партнер КАК Переработчик,
			|	ВЫБОР
			|		КОГДА &ПланируетсяГрафикПроизводства
			|				И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
			|			ТОГДА ГрафикПроизводства.НачалоЭтапа
			|		КОГДА НормативныйГрафикСтруктурыЗаказа.Начало ЕСТЬ НЕ NULL
			|			ТОГДА НормативныйГрафикСтруктурыЗаказа.Начало
			|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ДокЭтапПроизводства.Распоряжение.НачатьНеРанее, СЕКУНДА, ЕСТЬNULL(НормативныйГрафикПроизводства.ДлительностьДоЗапуска, 0))
			|	КОНЕЦ КАК Начало,
			|	ДокЭтапПроизводства.НаименованиеЭтапа КАК ЭтапПредставление,
			|	ДокЭтапПроизводства.Спецификация.Представление КАК СпецификацияПредставление,
			|	ЕСТЬNULL(ДокЭтапПроизводства.Спецификация.МногоэтапныйПроизводственныйПроцесс, ЛОЖЬ) КАК МногоэтапныйПроизводственныйПроцесс,
			|	ВЫБОР
			|		КОГДА &ПланируетсяГрафикПроизводства
			|				И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
			|			ТОГДА ГрафикПроизводства.НачалоЭтапа < &ТекущаяДата
			|		КОГДА НормативныйГрафикСтруктурыЗаказа.Начало ЕСТЬ НЕ NULL
			|			ТОГДА НормативныйГрафикСтруктурыЗаказа.Начало < &ТекущаяДата
			|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ДокЭтапПроизводства.Распоряжение.НачатьНеРанее, СЕКУНДА, ЕСТЬNULL(НормативныйГрафикПроизводства.ДлительностьДоЗапуска, 0)) < &ТекущаяДата
			|	КОНЕЦ КАК ДатаЗапускаПросрочена,
			|	ДокЭтапПроизводства.НаправлениеДеятельности КАК НаправлениеДеятельности,
			|	ДокЭтапПроизводства.ВариантПриемкиТоваров КАК ВариантПриемкиТоваров,
			|	ДокЭтапПроизводства.ДинамическаяСтруктура КАК ДинамическаяСтруктура
			|ПОМЕСТИТЬ ВТРаспоряжения
			|ИЗ
			|	Документ.ЭтапПроизводства2_2 КАК ДокЭтапПроизводства
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
			|		ПО (ГрафикПроизводства.ЭтапПроизводства = ДокЭтапПроизводства.Ссылка)
			|			И (ГрафикПроизводства.СтатусГрафика = &СтатусГрафика)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафикПроизводства
			|		ПО ДокЭтапПроизводства.Ссылка = НормативныйГрафикПроизводства.ЭтапПроизводства
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикСтруктурыЗаказа КАК НормативныйГрафикСтруктурыЗаказа
			|		ПО ДокЭтапПроизводства.Ссылка = НормативныйГрафикСтруктурыЗаказа.Этап
			|ГДЕ
			|	ДокЭтапПроизводства.Ссылка В(&СписокРаспоряженийЗаказа)
			|	И ДокЭтапПроизводства.ПроизводствоНаСтороне
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ДокЭтапПроизводства.Организация,
			|	ДокЭтапПроизводства.Ссылка,
			|	ДокЭтапПроизводства.Номер,
			|	ДокЭтапПроизводства.Дата,
			|	ДокЭтапПроизводства.Подразделение,
			|	ДокЭтапПроизводства.Этап.Партнер,
			|	ВЫБОР
			|		КОГДА &ПланируетсяГрафикПроизводства
			|				И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
			|			ТОГДА ГрафикПроизводства.НачалоЭтапа
			|		КОГДА НормативныйГрафикСтруктурыЗаказа.Начало ЕСТЬ НЕ NULL
			|			ТОГДА НормативныйГрафикСтруктурыЗаказа.Начало
			|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ДокЭтапПроизводства.Распоряжение.НачатьНеРанее, СЕКУНДА, ЕСТЬNULL(НормативныйГрафикПроизводства.ДлительностьДоЗапуска, 0))
			|	КОНЕЦ,
			|	ДокЭтапПроизводства.НаименованиеЭтапа,
			|	ДокЭтапПроизводства.Спецификация.Представление,
			|	ЕСТЬNULL(ДокЭтапПроизводства.Спецификация.МногоэтапныйПроизводственныйПроцесс, ЛОЖЬ),
			|	ВЫБОР
			|		КОГДА &ПланируетсяГрафикПроизводства
			|				И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
			|			ТОГДА ГрафикПроизводства.НачалоЭтапа < &ТекущаяДата
			|		КОГДА НормативныйГрафикСтруктурыЗаказа.Начало ЕСТЬ НЕ NULL
			|			ТОГДА НормативныйГрафикСтруктурыЗаказа.Начало < &ТекущаяДата
			|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ДокЭтапПроизводства.Распоряжение.НачатьНеРанее, СЕКУНДА, ЕСТЬNULL(НормативныйГрафикПроизводства.ДлительностьДоЗапуска, 0)) < &ТекущаяДата
			|	КОНЕЦ,
			|	ДокЭтапПроизводства.НаправлениеДеятельности,
			|	ДокЭтапПроизводства.ВариантПриемкиТоваров КАК ВариантПриемкиТоваров,
			|	ДокЭтапПроизводства.ДинамическаяСтруктура КАК ДинамическаяСтруктура
			|ИЗ
			|	Документ.ЭтапПроизводства2_2 КАК ДокЭтапПроизводства
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
			|		ПО (ГрафикПроизводства.ЭтапПроизводства = ДокЭтапПроизводства.Ссылка)
			|			И (ГрафикПроизводства.СтатусГрафика = &СтатусГрафика)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафикПроизводства
			|		ПО ДокЭтапПроизводства.Ссылка = НормативныйГрафикПроизводства.ЭтапПроизводства
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикСтруктурыЗаказа КАК НормативныйГрафикСтруктурыЗаказа
			|		ПО ДокЭтапПроизводства.Ссылка = НормативныйГрафикСтруктурыЗаказа.Этап
			|ГДЕ
			|	НЕ &ЗапрещенВыборНовыхЭтапов
			|	И НЕ ДокЭтапПроизводства.Ссылка В (&СписокРаспоряженийЗаказа)
			|	И НЕ ДокЭтапПроизводства.Статус В
			|		(ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется),
			|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован))
			|	И ДокЭтапПроизводства.ПроизводствоНаСтороне
			|	И ДокЭтапПроизводства.Проведен
			|	И (&ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
			|			ИЛИ ВЫБОР
			|				КОГДА &ПланируетсяГрафикПроизводства
			|						И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
			|					ТОГДА ГрафикПроизводства.НачалоЭтапа
			|				ИНАЧЕ ДОБАВИТЬКДАТЕ(ДокЭтапПроизводства.Распоряжение.НачатьНеРанее, СЕКУНДА, ЕСТЬNULL(НормативныйГрафикПроизводства.ДлительностьДоЗапуска, 0))
			|			КОНЕЦ >= &ДатаНачала)
			|	И (&ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
			|			ИЛИ ВЫБОР
			|				КОГДА &ПланируетсяГрафикПроизводства
			|						И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
			|					ТОГДА ГрафикПроизводства.НачалоЭтапа
			|				ИНАЧЕ ДОБАВИТЬКДАТЕ(ДокЭтапПроизводства.Распоряжение.НачатьНеРанее, СЕКУНДА, ЕСТЬNULL(НормативныйГрафикПроизводства.ДлительностьДоЗапуска, 0))
			|			КОНЕЦ <= &ДатаОкончания)
			|	И (ДокЭтапПроизводства.ЗаказПереработчику = НЕОПРЕДЕЛЕНО
			|			ИЛИ ДокЭтапПроизводства.ЗаказПереработчику = &Ссылка)
			|	И (&Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|			ИЛИ ДокЭтапПроизводства.Организация = &Организация)
			|	И (&Переработчик = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
			|			ИЛИ ДокЭтапПроизводства.Этап.Партнер = &Переработчик
			|			ИЛИ ЕСТЬNULL(ДокЭтапПроизводства.Этап.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
			|	И (&Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
			|			ИЛИ ДокЭтапПроизводства.Подразделение = &Подразделение)
			|	И (&НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
			|			ИЛИ ДокЭтапПроизводства.НаправлениеДеятельности = &НаправлениеДеятельности)
			|	И (&ДинамическаяСтруктура = НЕОПРЕДЕЛЕНО
			|			ИЛИ ДокЭтапПроизводства.ДинамическаяСтруктура = &ДинамическаяСтруктура)
			|";
		ТекстыЗапросов.Добавить(ТекстЗапроса);
		
		ИмяРегистраДанныеОНоменклатуреВПроизводстве = "РегистрНакопления.ЗапасыИПотребности";
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	НоменклатураВПроизводстве.Регистратор КАК Этап,
			|	МИНИМУМ(НоменклатураВПроизводстве.НомерСтроки) КАК НомерСтроки
			|ПОМЕСТИТЬ ВТНоменклатураВПроизводствеНомераСтрок
			|ИЗ
			|	РегистрНакопления.ЗапасыИПотребности КАК НоменклатураВПроизводстве
			|ГДЕ
			|	НоменклатураВПроизводстве.Регистратор В
			|			(ВЫБРАТЬ
			|				ВТРаспоряжения.Распоряжение КАК Регистратор
			|			ИЗ
			|				ВТРаспоряжения)
			|	И НоменклатураВПроизводстве.Активность 
			|		И (НоменклатураВПроизводстве.Поступит > 0 Или НоменклатураВПроизводстве.Заказано > 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	НоменклатураВПроизводстве.Регистратор
			|";
		ТекстыЗапросов.Добавить(ТекстЗапроса);
		
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ВТРаспоряжения.Организация КАК Организация,
			|	ВТРаспоряжения.Распоряжение КАК Распоряжение,
			|	ВТРаспоряжения.НомерРаспоряжения КАК НомерРаспоряжения,
			|	ВТРаспоряжения.ДатаРаспоряжения КАК ДатаРаспоряжения,
			|	ВТРаспоряжения.Подразделение КАК Подразделение,
			|	ВТРаспоряжения.Переработчик КАК Переработчик,
			|	ВТРаспоряжения.Начало КАК Начало,
			|	ВТРаспоряжения.ЭтапПредставление КАК ЭтапПредставление,
			|	ВТРаспоряжения.СпецификацияПредставление КАК СпецификацияПредставление,
			|	ВТРаспоряжения.МногоэтапныйПроизводственныйПроцесс КАК МногоэтапныйПроизводственныйПроцесс,
			|	ВТРаспоряжения.ДатаЗапускаПросрочена КАК ДатаЗапускаПросрочена,
			|	ВТРаспоряжения.НаправлениеДеятельности КАК НаправлениеДеятельности,
			|	ВТРаспоряжения.ВариантПриемкиТоваров КАК ВариантПриемкиТоваров,
			|	НоменклатураВПроизводстве.Номенклатура КАК Номенклатура,
			|	НоменклатураВПроизводстве.Характеристика КАК Характеристика,
			|	НоменклатураВПроизводстве.Склад КАК Склад,
			|	ВЫБОР
			|		КОГДА НоменклатураВПроизводстве.Номенклатура.ИспользованиеХарактеристик В
			|			(
			|				ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
			|				ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры),
			|				ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры)
			|			)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ХарактеристикиИспользуются,
			|	ВТРаспоряжения.ДинамическаяСтруктура КАК ДинамическаяСтруктура
			|ИЗ
			|	ВТРаспоряжения КАК ВТРаспоряжения
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНоменклатураВПроизводствеНомераСтрок КАК ВТНоменклатураВПроизводствеНомераСтрок
			|		ПО ВТРаспоряжения.Распоряжение = ВТНоменклатураВПроизводствеНомераСтрок.Этап
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ИмяРегистраДанныеОНоменклатуреВПроизводстве КАК НоменклатураВПроизводстве
			|		ПО ВТНоменклатураВПроизводствеНомераСтрок.Этап = НоменклатураВПроизводстве.Регистратор
			|			И ВТНоменклатураВПроизводствеНомераСтрок.НомерСтроки = НоменклатураВПроизводстве.НомерСтроки
			|";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяРегистраДанныеОНоменклатуреВПроизводстве", ИмяРегистраДанныеОНоменклатуреВПроизводстве);
		ТекстыЗапросов.Добавить(ТекстЗапроса);
		
		ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
		
		ШаблонРаспоряжения = НСтр("ru = 'Этап № %1 от %2 (%3)';
									|en = 'Stage No. %1 dated %2 (%3)'");
	
	//++ Устарело_Производство21	
	КонецЕсли; 
	//-- Устарело_Производство21

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТекущаяДата",   ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Ссылка",        Параметры.Ссылка);
	Запрос.УстановитьПараметр("Организация",   Параметры.Организация);
	Запрос.УстановитьПараметр("Склад",         Параметры.Склад);
	Запрос.УстановитьПараметр("Переработчик",  Параметры.Партнер);
	Запрос.УстановитьПараметр("Подразделение", Параметры.Подразделение);
	Запрос.УстановитьПараметр("НаправлениеДеятельности", Параметры.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ДатаНачала",    ОтборПериод.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ОтборПериод.ДатаОкончания);
	Запрос.УстановитьПараметр("СтатусГрафика", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	Запрос.УстановитьПараметр("ЗапрещенВыборНовыхЭтапов", ЗапрещенВыборНовыхЭтапов);
	Запрос.УстановитьПараметр("СписокРаспоряженийЗаказа", РаспоряженияЗаказа.Выгрузить().ВыгрузитьКолонку("Распоряжение"));
	Запрос.УстановитьПараметр("ПланируетсяГрафикПроизводства", УправлениеПроизводством.ИспользуетсяГрафикПроизводства());
	Запрос.УстановитьПараметр("ДинамическаяСтруктура", Параметры.ДинамическаяСтруктура);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ГрафикПроизводства.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеСтроки = ГрафикПроизводства.Добавить();
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);
		
		СпецификацияСтрока = УправлениеДаннымиОбИзделияхКлиентСервер.ПредставлениеЭтапа(
										Выборка.СпецификацияПредставление,
										Выборка.ЭтапПредставление,
										Выборка.МногоэтапныйПроизводственныйПроцесс);
		
		Если Не ЗначениеЗаполнено(СпецификацияСтрока) Тогда
			СпецификацияСтрока = НСтр("ru = 'без спецификации';
										|en = 'without bill of materials'");
		КонецЕсли;
		
		ДанныеСтроки.РаспоряжениеПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
														ШаблонРаспоряжения,
														ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.НомерРаспоряжения, Ложь, Истина),
														Формат(Выборка.ДатаРаспоряжения, "ДЛФ=D"),
														СпецификацияСтрока);
		
		//++ Устарело_Производство21												
		Если Параметры.ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВЗаказеПереработчику.ПоЗаказамНаПроизводство Тогда
			СтруктураПоиска = Новый Структура("Распоряжение,КодСтрокиЭтапыГрафик", 
									ДанныеСтроки.Распоряжение, ДанныеСтроки.КодСтрокиЭтапыГрафик);
		Иначе	
		//-- Устарело_Производство21	
			СтруктураПоиска = Новый Структура("Распоряжение", ДанныеСтроки.Распоряжение);
		//++ Устарело_Производство21	
		КонецЕсли; 
		//-- Устарело_Производство21
   		СписокСтрок = РаспоряженияЗаказа.НайтиСтроки(СтруктураПоиска);
		ДанныеСтроки.Пометка = (СписокСтрок.Количество() <> 0);
		
	КонецЦикла;
	
	ГрафикПроизводства.Сортировать("Пометка Убыв, Начало");
	
КонецПроцедуры

#КонецОбласти

//-- НЕ УТКА