#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("ИнтеграцияБЗК");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.РегламентнаяОперация") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДопПараметры.МенеджерВременныхТаблиц;
	ТекстыЗапроса = Новый СписокЗначений;
	Если Запрос.МенеджерВременныхТаблиц = Неопределено
		Или Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("втУплатаНалогов") = Неопределено Тогда
		ТекстыЗапроса.Добавить(ТекстЗапросаПустаяВременнаяТаблицаУплатаНалогов(), "втУплатаНалогов");
	КонецЕсли;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРасчетыСФондамиПоСтраховымВзносам(Запрос, ТекстыЗапроса, Регистры);
		РеглУчетПроведениеСервер.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
	
КонецПроцедуры

// Добавляет команду создания документа "Регламентная операция".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.РегламентнаяОперация) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РегламентнаяОперация.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.РегламентнаяОперация);
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьРеглУчет";
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ЗаполнениеПустыхВременныхТаблицДляОтраженияВРеглУчете

Функция ТекстЗапросаПустаяВременнаяТаблицаРеклассификацияРасчетыПоФинИнструментам() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка) КАК ГруппаФинансовогоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.ПустаяСсылка) КАК ТипДоговора,
	|	ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.ПустаяСсылка) КАК ХарактерДоговора,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ПустаяСсылка) КАК ТипСуммы,
	|	ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка) КАК БанковскийСчетКонтрагента,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр,
	|	0 КАК СуммаЗадолженности	
	|ПОМЕСТИТЬ вт_РеклассификацияРасчетыПоФинИнструментам
	|ГДЕ
	|	ЛОЖЬ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПустаяВременнаяТаблицаРеклассификацияРасчетыСКлиентами() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка) КАК ГруппаФинансовогоУчета,
	|	0 КАК ПредоплатаРегл,
	|	0 КАК ПредоплатаУпр,
	|	0 КАК ДолгРегл,
	|	0 КАК ДолгУпр,
	|	0 КАК Долг,
	|	0 КАК Предоплата
	|ПОМЕСТИТЬ вт_РеклассификацияРасчетыСКлиентами
	|ГДЕ
	|	ЛОЖЬ";
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаПустаяВременнаяТаблицаРеклассификацияРасчетыСПоставщиками() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка) КАК ГруппаФинансовогоУчета,
	|	0 КАК ПредоплатаРегл,
	|	0 КАК ПредоплатаУпр,
	|	0 КАК ДолгРегл,
	|	0 КАК ДолгУпр,
	|	0 КАК Долг,
	|	0 КАК Предоплата
	|ПОМЕСТИТЬ вт_РеклассификацияРасчетыСПоставщиками
	|ГДЕ
	|	ЛОЖЬ";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаПустаяВременнаяТаблицаРеклассификацияРасчетыПоАренде() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка) КАК ГруппаФинансовогоУчета,
	|	0 КАК Сумма,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр
	|ПОМЕСТИТЬ вт_РеклассификацияРасчетыПоАренде
	|ГДЕ
	|	ЛОЖЬ";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаПустаяВременнаяТаблицаРеклассификацияРасчетыПоДисконтированию() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка) КАК ГруппаФинансовогоУчета,
	|	0 КАК Долг,
	|	0 КАК ДолгРегл,
	|	0 КАК ДолгУпр
	|ПОМЕСТИТЬ вт_РеклассификацияРасчетыПоДисконтированию
	|ГДЕ
	|	ЛОЖЬ";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаПустаяВременнаяТаблицаУплатаНалогов() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПустаяСсылка) КАК ТипНалога,
	|	ЗНАЧЕНИЕ(Документ.СписаниеБезналичныхДенежныхСредств.ПустаяСсылка) КАК ПлатежныйДокумент,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка) КАК Субконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка) КАК Субконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка) КАК Субконто3,
	|	0 КАК Сумма
	|
	|ПОМЕСТИТЬ втУплатаНалогов
	|ГДЕ
	|	ЛОЖЬ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиЭтаповЗакрытияМесяца
//++ НЕ УТ
#Область РасчетКурсовыхРазниц

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
//
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_РасчетКурсовыхРазниц(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.РасчетКурсовыхРазниц,
		Ложь, Истина, Ложь,
		Перечисления.ОперацииЗакрытияМесяца.РеклассификацияДолгосрочныхАктивовОбязательств);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.РасчетПартийИСебестоимости);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ОтражениеДокументовВРегламентированномУчете);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ФормированиеРезервовПоСомнительнымДолгам);
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Рассчитать';
										|en = 'Calculate'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"Документы.РегламентнаяОперация.Использование_РасчетКурсовыхРазниц");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"Документы.РегламентнаяОперация.Выполнить_РасчетКурсовыхРазниц");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаЛокализация.ОписаниеДействия_ОткрытьСписокДокументовРегламентнаяОперация();
	НоваяСтрока.ТипыРегламентныхОпераций.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетКурсовыхРазниц);
	
КонецПроцедуры

// Обработчики этапа.

Процедура Использование_РасчетКурсовыхРазниц(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.ПроверитьИспользованиеРегламентированногоУчета(ПараметрыОбработчика);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	
	Запрос.УстановитьПараметр("ВестиУУНаПланеСчетов", 
		ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный")
		И НачалоМесяца(ПараметрыОбработчика.ПараметрыРасчета.Период) >= Константы.ДатаНачалаУУНаПланеСчетовХозрасчетный.Получить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка,
	|	Хозрасчетный.Валютный,
	|	Хозрасчетный.НалоговыйУчет,
	|	Хозрасчетный.ИсключитьСуммуБУИзПереоценкиПоПлануСчетов,
	|	Хозрасчетный.ИсключитьСуммуУУИзПереоценкиПоПлануСчетов
	|ПОМЕСТИТЬ втСчета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Валютный
	|	И НЕ (&ВестиУУНаПланеСчетов И Хозрасчетный.ИсключитьСуммуУУИзПереоценкиПоПлануСчетов)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Т.Счет                    КАК Счет,
	|	Т.Организация             КАК Организация,
	|	ЕСТЬNULL(Т.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
	|	ЕСТЬNULL(Т.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение,
	|	ЕСТЬNULL(Т.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(Т.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
	|	ЕСТЬNULL(Т.Субконто2, НЕОПРЕДЕЛЕНО) КАК Субконто2,
	|	ЕСТЬNULL(Т.Субконто3, НЕОПРЕДЕЛЕНО) КАК Субконто3,
	|	СУММА(Т.ВалютнаяСуммаОстаток) КАК ВалютнаяСуммаОстаток,
	|	СУММА(Т.СуммаОстаток) КАК СуммаБУОстаток,
	|	СУММА(Т.СуммаУУОстаток) КАК СуммаУУОстаток
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаКонецПериода,
	|			Счет В (ВЫБРАТЬ Т.Ссылка ИЗ втСчета КАК Т),
	|			,
	|			Организация В (&МассивОрганизаций)) КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Счет,
	|	Т.Организация,
	|	ЕСТЬNULL(Т.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)),
	|	ЕСТЬNULL(Т.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)),
	|	ЕСТЬNULL(Т.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|	ЕСТЬNULL(Т.Субконто1, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(Т.Субконто3, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(Т.Субконто2, НЕОПРЕДЕЛЕНО)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация
	|ИЗ
	|	втОстатки КАК Т";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, РезультатЗапроса.Выгрузить().Количество());
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru = 'Нет остатков по переоцениваемым валютным счетам в регистре бухгалтерии ""Хозрасчетный"".';
				|en = 'No balance for revalued currency accounts in the Self-financing accounting register.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Возврат;
		
	КонецЕсли;
	
	ТекстыЗапросов = Новый Массив;
	
	#Область РасчетКурсовыхРазниц
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.Период,
	|	Т.Валюта,
	|	Т.БазоваяВалюта,
	|	Т.КурсЧислитель,
	|	Т.КурсЗнаменатель
	|ПОМЕСТИТЬ втКурсы
	|ИЗ
	|	РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&КонецПериода, ) КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Период,
	|	Т.Валюта,
	|	Т.БазоваяВалюта,
	|	Т.КурсЧислитель,
	|	Т.КурсЗнаменатель
	|ПОМЕСТИТЬ втКурсУУ
	|ИЗ
	|	втКурсы КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО Т.Валюта = Константы.ВалютаУправленческогоУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютРасчетовПоДоговорамСрезПоследних.Договор         КАК Договор,
	|	КурсыВалютРасчетовПоДоговорамСрезПоследних.КурсЧислитель   КАК КурсЧислитель,
	|	КурсыВалютРасчетовПоДоговорамСрезПоследних.КурсЗнаменатель КАК КурсЗнаменатель
	|ПОМЕСТИТЬ ВтКурсыВалютРасчетовПоДоговорамСрезПоследних
	|ИЗ
	|	РегистрСведений.КурсыВалютРасчетовПоДоговорам.СрезПоследних(&КонецПериода, ) КАК КурсыВалютРасчетовПоДоговорамСрезПоследних
	|ИНДЕКСИРОВАТЬ ПО
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОстатки.Субконто1 КАК Субконто
	|ПОМЕСТИТЬ ВтОстаткиСчетовВсеСубконто
	|ИЗ
	|	ВтОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтОстатки.Субконто2 КАК Субконто
	|ИЗ
	|	ВтОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтОстатки.Субконто3 КАК Субконто
	|ИЗ
	|	ВтОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ДоговорыКонтрагентов.ВариантКурсаДоговора КАК ВариантКурсаДоговора,
	|	ДоговорыКонтрагентов.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(КурсыВалютРасчетовПоДоговорамСрезПоследних.КурсЧислитель, 1) КАК КурсЧислитель,
	|	ЕСТЬNULL(КурсыВалютРасчетовПоДоговорамСрезПоследних.КурсЗнаменатель, 1) КАК КурсЗнаменатель
	|ПОМЕСТИТЬ ВтДоговоры
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалютРасчетовПоДоговорамСрезПоследних КАК КурсыВалютРасчетовПоДоговорамСрезПоследних
	|		ПО ДоговорыКонтрагентов.Ссылка = КурсыВалютРасчетовПоДоговорамСрезПоследних.Договор
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОстаткиСчетовВсеСубконто КАК ВтОстаткиСчетовВсеСубконто
	|		ПО ВтОстаткиСчетовВсеСубконто.Субконто = ДоговорыКонтрагентов.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДоговорыМеждуОрганизациями.Ссылка,
	|	ДоговорыМеждуОрганизациями.ВариантКурсаДоговора,
	|	ДоговорыМеждуОрганизациями.ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(КурсыВалютРасчетовПоДоговорамСрезПоследних.КурсЧислитель, 1),
	|	ЕСТЬNULL(КурсыВалютРасчетовПоДоговорамСрезПоследних.КурсЗнаменатель, 1)
	|ИЗ
	|	Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалютРасчетовПоДоговорамСрезПоследних КАК КурсыВалютРасчетовПоДоговорамСрезПоследних
	|		ПО ДоговорыМеждуОрганизациями.Ссылка = КурсыВалютРасчетовПоДоговорамСрезПоследних.Договор
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОстаткиСчетовВсеСубконто КАК ВтОстаткиСчетовВсеСубконто
	|		ПО ВтОстаткиСчетовВсеСубконто.Субконто = ДоговорыМеждуОрганизациями.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОстатки.Счет КАК Счет,
	|	ВтОстатки.Организация КАК Организация,
	|	ВтОстатки.Подразделение КАК Подразделение,
	|	ВтОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтОстатки.Субконто1 КАК Субконто1,
	|	ВтОстатки.Субконто2 КАК Субконто2,
	|	ВтОстатки.Субконто3 КАК Субконто3,
	|	ВтОстатки.Валюта КАК Валюта,
	|	ВтОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСуммаОстаток,
	|	ВтОстатки.СуммаБУОстаток КАК СуммаБУОстаток,
	|	ВтОстатки.СуммаУУОстаток КАК СуммаУУОстаток,
	|	ЕСТЬNULL(ЕСТЬNULL(ВтДоговоры1.ВариантКурсаДоговора, ВтДоговоры2.ВариантКурсаДоговора), ЕСТЬNULL(ВтДоговоры3.ВариантКурсаДоговора, ЗНАЧЕНИЕ(Перечисление.ВариантыКурсаДоговора.Переменный))) КАК ВариантКурсаДоговора,
	|	ЕСТЬNULL(ЕСТЬNULL(ВтДоговоры1.КурсЧислитель, ВтДоговоры2.КурсЧислитель), ЕСТЬNULL(ВтДоговоры3.КурсЧислитель, 1)) КАК КурсЧислитель,
	|	ЕСТЬNULL(ЕСТЬNULL(ВтДоговоры1.КурсЗнаменатель, ВтДоговоры2.КурсЗнаменатель), ЕСТЬNULL(ВтДоговоры3.КурсЗнаменатель, 1)) КАК КурсЗнаменатель,
	|	ЕСТЬNULL(ЕСТЬNULL(ВтДоговоры1.ВалютаВзаиморасчетов, ВтДоговоры2.ВалютаВзаиморасчетов), ЕСТЬNULL(ВтДоговоры3.ВалютаВзаиморасчетов, НЕОПРЕДЕЛЕНО)) КАК ВалютаВзаиморасчетов
	|ПОМЕСТИТЬ ВтОстаткиСКурсомДоговора
	|ИЗ
	|	ВтОстатки КАК ВтОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДоговоры КАК ВтДоговоры1
	|		ПО ВтОстатки.Субконто1 = ВтДоговоры1.Договор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДоговоры КАК ВтДоговоры2
	|		ПО ВтОстатки.Субконто2 = ВтДоговоры2.Договор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДоговоры КАК ВтДоговоры3
	|		ПО ВтОстатки.Субконто3 = ВтДоговоры3.Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОстаткиСКурсомДоговора.Счет КАК Счет,
	|	ВтОстаткиСКурсомДоговора.Организация КАК Организация,
	|	ВтОстаткиСКурсомДоговора.Подразделение КАК Подразделение,
	|	ВтОстаткиСКурсомДоговора.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтОстаткиСКурсомДоговора.Субконто1 КАК Субконто1,
	|	ВтОстаткиСКурсомДоговора.Субконто2 КАК Субконто2,
	|	ВтОстаткиСКурсомДоговора.Субконто3 КАК Субконто3,
	|	ВтОстаткиСКурсомДоговора.Валюта КАК Валюта,
	|	ВтОстаткиСКурсомДоговора.ВалютнаяСуммаОстаток КАК ВалютнаяСуммаОстаток,
	|	ВтОстаткиСКурсомДоговора.СуммаБУОстаток КАК СуммаБУОстаток,
	|	ВтОстаткиСКурсомДоговора.СуммаУУОстаток КАК СуммаУУОстаток,
	|	ВтОстаткиСКурсомДоговора.ВариантКурсаДоговора КАК ВариантКурсаДоговора,
	|	ВЫБОР
	|		КОГДА ВтОстаткиСКурсомДоговора.ВариантКурсаДоговора = ЗНАЧЕНИЕ(Перечисление.ВариантыКурсаДоговора.УстановленныйВДоговоре)
	|				И ВтОстаткиСКурсомДоговора.Валюта = ВтОстаткиСКурсомДоговора.ВалютаВзаиморасчетов
	|			ТОГДА ВтОстаткиСКурсомДоговора.КурсЧислитель
	|		ИНАЧЕ втКурсы.КурсЧислитель
	|	КОНЕЦ КАК КурсЧислитель,
	|	ВЫБОР
	|		КОГДА ВтОстаткиСКурсомДоговора.ВариантКурсаДоговора = ЗНАЧЕНИЕ(Перечисление.ВариантыКурсаДоговора.УстановленныйВДоговоре)
	|				И ВтОстаткиСКурсомДоговора.Валюта = ВтОстаткиСКурсомДоговора.ВалютаВзаиморасчетов
	|			ТОГДА ВтОстаткиСКурсомДоговора.КурсЗнаменатель
	|		ИНАЧЕ втКурсы.КурсЗнаменатель
	|	КОНЕЦ КАК КурсЗнаменатель,
	|	ВЫБОР
	|		КОГДА ВтОстаткиСКурсомДоговора.ВариантКурсаДоговора = ЗНАЧЕНИЕ(Перечисление.ВариантыКурсаДоговора.УстановленныйВДоговоре)
	|				И Константы.ВалютаУправленческогоУчета = ВтОстаткиСКурсомДоговора.ВалютаВзаиморасчетов
	|			ТОГДА ВтОстаткиСКурсомДоговора.КурсЧислитель
	|		ИНАЧЕ втКурсУУ.КурсЧислитель
	|	КОНЕЦ КАК КурсЧислительУУ,
	|	ВЫБОР
	|		КОГДА ВтОстаткиСКурсомДоговора.ВариантКурсаДоговора = ЗНАЧЕНИЕ(Перечисление.ВариантыКурсаДоговора.УстановленныйВДоговоре)
	|				И Константы.ВалютаУправленческогоУчета = ВтОстаткиСКурсомДоговора.ВалютаВзаиморасчетов
	|			ТОГДА ВтОстаткиСКурсомДоговора.КурсЗнаменатель
	|		ИНАЧЕ втКурсУУ.КурсЗнаменатель
	|	КОНЕЦ КАК КурсЗнаменательУУ
	|ПОМЕСТИТЬ ВтОстаткиСКурсами
	|ИЗ
	|	ВтОстаткиСКурсомДоговора КАК ВтОстаткиСКурсомДоговора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКурсы КАК втКурсы
	|		ПО ВтОстаткиСКурсомДоговора.Валюта = втКурсы.Валюта
	|			И ВтОстаткиСКурсомДоговора.Организация.ВалютаРегламентированногоУчета = втКурсы.БазоваяВалюта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКурсУУ КАК втКурсУУ
	|		ПО ВтОстаткиСКурсомДоговора.Организация.ВалютаРегламентированногоУчета = втКурсУУ.БазоваяВалюта
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВтОстаткиСКурсомДоговора.ВариантКурсаДоговора <> ЗНАЧЕНИЕ(Перечисление.ВариантыКурсаДоговора.ФиксированныйНаДатуОтгрузки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Счет                      КАК Счет,
	|	Данные.Организация               КАК Организация,
	|	Данные.Подразделение             КАК Подразделение,
	|	Данные.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	Данные.Субконто1                 КАК Субконто1,
	|	Данные.Субконто2                 КАК Субконто2,
	|	Данные.Субконто3                 КАК Субконто3,
	|	Данные.Валюта                    КАК Валюта,
	|	Данные.ОстатокВалюты             КАК ОстатокВалюты,
	|	
	|	СУММА(Данные.ОстатокРегл)        КАК ОстатокРегл,
	|	СУММА(Данные.ОстатокПоКурсу)     КАК ОстатокПоКурсу,
	|	СУММА(Данные.АбсолютнаяРазница)  КАК АбсолютнаяРазница,
	|	СУММА(Данные.КурсоваяРазница)    КАК КурсоваяРазница,
	|	
	|	СУММА(Данные.ОстатокПоКурсуУУ)    КАК ОстатокПоКурсуУУ,
	|	СУММА(Данные.АбсолютнаяРазницаУУ) КАК АбсолютнаяРазницаУУ,
	|	СУММА(Данные.КурсоваяРазницаУУ)   КАК КурсоваяРазницаУУ
	|ПОМЕСТИТЬ ДанныеДляПереоценки
	|ИЗ
	|	(ВЫБРАТЬ
	|		Остатки.Счет,
	|		Остатки.Организация,
	|		Остатки.Подразделение,
	|		Остатки.НаправлениеДеятельности,
	|		Остатки.Субконто1,
	|		Остатки.Субконто2,
	|		Остатки.Субконто3,
	|		Остатки.Валюта,
	|		Остатки.ВалютнаяСуммаОстаток КАК ОстатокВалюты,
	|		
	|		Остатки.СуммаБУОстаток КАК ОстатокРегл,
	|		Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель КАК ОстатокПоКурсу,
	|		Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель - Остатки.СуммаБУОстаток КАК АбсолютнаяРазница,
	|		ВЫРАЗИТЬ(Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель КАК ЧИСЛО(31,2)) - Остатки.СуммаБУОстаток КАК КурсоваяРазница,
	|		
	|		0 КАК ОстатокПоКурсуУУ,
	|		0 КАК АбсолютнаяРазницаУУ,
	|		0 КАК КурсоваяРазницаУУ
	|	
	|	ИЗ
	|		ВтОстаткиСКурсами КАК Остатки
	|	ГДЕ
	|		НЕ Остатки.Счет.ИсключитьСуммуБУИзПереоценкиПоПлануСчетов
	|		И ВЫРАЗИТЬ(Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель КАК ЧИСЛО(31,2)) <> Остатки.СуммаБУОстаток
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.Счет,
	|		Остатки.Организация,
	|		Остатки.Подразделение,
	|		Остатки.НаправлениеДеятельности,
	|		Остатки.Субконто1,
	|		Остатки.Субконто2,
	|		Остатки.Субконто3,
	|		Остатки.Валюта,
	|		Остатки.ВалютнаяСуммаОстаток КАК ОстатокВалюты,
	|		
	|		0 КАК ОстатокРегл,
	|		0 КАК ОстатокПоКурсу,
	|		0 КАК АбсолютнаяРазница,
	|		0 КАК КурсоваяРазница,
	|		
	|		Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель / Остатки.КурсЧислительУУ * Остатки.КурсЗнаменательУУ КАК ОстатокПоКурсуУУ,
	|		Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель / Остатки.КурсЧислительУУ * Остатки.КурсЗнаменательУУ - Остатки.СуммаУУОстаток КАК АбсолютнаяРазницаУУ,
	|		ВЫРАЗИТЬ(Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель / Остатки.КурсЧислительУУ * Остатки.КурсЗнаменательУУ КАК ЧИСЛО(31,2)) - Остатки.СуммаУУОстаток КАК КурсоваяРазницаУУ
	|	
	|	ИЗ
	|		ВтОстаткиСКурсами КАК Остатки
	|	ГДЕ
	|		&ВестиУУНаПланеСчетов
	|		И НЕ Остатки.Счет.ИсключитьСуммуУУИзПереоценкиПоПлануСчетов
	|		И ВЫРАЗИТЬ(Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель / Остатки.КурсЧислительУУ * Остатки.КурсЗнаменательУУ КАК ЧИСЛО(31,2)) <> Остатки.СуммаУУОстаток
	|	) КАК Данные
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.Счет,
	|	Данные.Организация,
	|	Данные.Подразделение,
	|	Данные.НаправлениеДеятельности,
	|	Данные.Субконто1,
	|	Данные.Субконто2,
	|	Данные.Субконто3,
	|	Данные.Валюта,
	|	Данные.ОстатокВалюты
	|";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область Переход67ФЗ
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	НастройкиУчетаНалогаНаПрибыльСрезПоследних.Организация КАК Организация
	|ПОМЕСТИТЬ ОрганизацииСПереходом67ФЗ
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(
	|			&ГраницаКонецПериода,
	|			Организация В (&МассивОрганизаций)
	|				И НАЧАЛОПЕРИОДА(ДатаНезависимогоПризнанияДоходовРасходов, МЕСЯЦ) = &НачалоПериода) КАК НастройкиУчетаНалогаНаПрибыльСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Организация В
	|			(ВЫБРАТЬ
	|				Организации.Организация
	|			ИЗ
	|				ОрганизацииСПереходом67ФЗ КАК Организации)
	|	И РегламентнаяОперация.Дата = &КонецПериода
	|	И РегламентнаяОперация.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетКурсовыхРазниц)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	СУММА(ВложенныйЗапрос.ОтложенныйДоход) КАК ОтложенныйДоход
	|ПОМЕСТИТЬ ОтложенныйДоходОУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыСКлиентамиНУОстатки.ОбъектРасчетов.Организация КАК Организация,
	|		РасчетыСКлиентамиНУОстатки.ОтложенныйДоходОстаток КАК ОтложенныйДоход
	|	ИЗ
	|		РегистрНакопления.РасчетыСКлиентамиНУ.Остатки(
	|				&ГраницаКонецПредыдущегоПериода,
	|				ОбъектРасчетов.Организация В
	|					(ВЫБРАТЬ
	|						Организации.Организация
	|					ИЗ
	|						ОрганизацииСПереходом67ФЗ КАК Организации)) КАК РасчетыСКлиентамиНУОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасчетыПоФинансовымИнструментамНУОстатки.АналитикаУчетаПоПартнерам.Организация,
	|		РасчетыПоФинансовымИнструментамНУОстатки.ОтложенныйДоходОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыПоФинансовымИнструментамНУ.Остатки(
	|				&ГраницаКонецПредыдущегоПериода,
	|				АналитикаУчетаПоПартнерам.Организация В
	|					(ВЫБРАТЬ
	|						Организации.Организация
	|					ИЗ
	|						ОрганизацииСПереходом67ФЗ КАК Организации)) КАК РасчетыПоФинансовымИнструментамНУОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасчетыСПоставщикамиНУОстатки.ОбъектРасчетов.Организация,
	|		РасчетыСПоставщикамиНУОстатки.ОтложенныйДоходОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиНУ.Остатки(
	|				&ГраницаКонецПредыдущегоПериода,
	|				ОбъектРасчетов.Организация В
	|					(ВЫБРАТЬ
	|						Организации.Организация
	|					ИЗ
	|						ОрганизацииСПереходом67ФЗ КАК Организации)) КАК РасчетыСПоставщикамиНУОстатки) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Организация КАК Организация,
	|	СУММА(-Хозрасчетный.СуммаНУДт) КАК ОтложенныйДоход
	|ПОМЕСТИТЬ ОтложенныйДоходБУ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документы КАК Документы
	|		ПО Хозрасчетный.Регистратор = Документы.Ссылка
	|ГДЕ
	|	Хозрасчетный.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОтложенныеДоходыПоКурсовымРазницам)
	|	И Хозрасчетный.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходы)
	|
	|СГРУППИРОВАТЬ ПО
	|	Хозрасчетный.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ОтложенныйДоходБУ.Организация, ОтложенныйДоходОУ.Организация) КАК Организация
	|ПОМЕСТИТЬ ОрганизацииСПерерасчетом67ФЗ
	|ИЗ
	|	ОтложенныйДоходОУ КАК ОтложенныйДоходОУ
	|		ПОЛНОЕ СОЕДИНЕНИЕ ОтложенныйДоходБУ КАК ОтложенныйДоходБУ
	|		ПО ОтложенныйДоходОУ.Организация = ОтложенныйДоходБУ.Организация
	|ГДЕ
	|	ЕСТЬNULL(ОтложенныйДоходОУ.ОтложенныйДоход, 0) <> ЕСТЬNULL(ОтложенныйДоходБУ.ОтложенныйДоход, 0)";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация КАК Организация,
	|	Т.Счет КАК Счет
	|ИЗ
	|	ДанныеДляПереоценки КАК Т
	|
	|УПОРЯДОЧИТЬ ПО
	|	Т.Организация
	|ИТОГИ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация КАК Организация
	|ИЗ
	|	ОрганизацииСПерерасчетом67ФЗ КАК Т
	|
	|УПОРЯДОЧИТЬ ПО
	|	Т.Организация";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Запрос.Текст = СтрСоединить(ТекстыЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаОрганизация = РезультатЗапроса[13].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, ВыборкаОрганизация.Количество());
	
	Пока ВыборкаОрганизация.Следующий() Цикл
		
		ВыборкаДетальныеЗаписи = ВыборкаОрганизация.Выбрать();

		Счета = "";
		Сч = 1;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Счета = Счета + ВыборкаДетальныеЗаписи.Счет +?(Сч < ВыборкаДетальныеЗаписи.Количество(),"; ","");
			Сч = Сч + 1;
		КонецЦикла;
	
		Если ВыборкаДетальныеЗаписи.Количество()>1 Тогда
			Сообщение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По организации ""%1"" для счетов %2 есть расхождения суммы в валюте ""%3"" с валютным остатком, необходимо выполнить переоценку.';
					|en = 'By the ""%1"" company for accounts %2, there are amount discrepancies in currency ""%3"" with the currency balance. Perform a revaluation.'",
					ОбщегоНазначения.КодОсновногоЯзыка()),
				ВыборкаОрганизация.Организация,
				СокрЛП(Счета),
				ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(ВыборкаОрганизация.Организация));
		Иначе
			Сообщение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По организации ""%1"" для счета %2 есть расхождение суммы в валюте ""%3"" с валютным остатком, необходимо выполнить переоценку.';
					|en = 'By the ""%1"" company for account %2, there are amount discrepancies in currency ""%3"" with the currency balance. Perform a revaluation.'",
					ОбщегоНазначения.КодОсновногоЯзыка()),
				ВыборкаОрганизация.Организация,
				СокрЛП(Счета),
				ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(ВыборкаОрганизация.Организация));
		КонецЕсли;
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			Сообщение);
		
	КонецЦикла;
	
	Выборка = РезультатЗапроса[14].Выбрать();
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, Выборка.Количество());
	
	Пока Выборка.Следующий() Цикл
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По организации ""%1"" необходимо выполнить переоценку в связи с применением 67-ФЗ.';
					|en = 'Perform a revaluation for the ""%1"" company due to application of Federal Law No. 67-FZ.'",
					ОбщегоНазначения.КодОсновногоЯзыка()),
				Выборка.Организация));
		
	КонецЦикла;
	
КонецПроцедуры

Процедура Выполнить_РасчетКурсовыхРазниц(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаЛокализация.СформироватьДокументРегламентнаяОперация(ПараметрыОбработчика, ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
	
КонецПроцедуры

#КонецОбласти

#Область РасчетТорговогоСбора

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
//
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_РасчетТорговогоСбора(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.РасчетТорговогоСбора,,,,
		Перечисления.ОперацииЗакрытияМесяца.РасчетЗемельногоНалога);
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Рассчитать';
										|en = 'Calculate'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"Документы.РегламентнаяОперация.Использование_РасчетТорговогоСбора");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"Документы.РегламентнаяОперация.Выполнить_РасчетТорговогоСбора");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаЛокализация.ОписаниеДействия_ОткрытьСписокДокументовРегламентнаяОперация();
	НоваяСтрока.ТипыРегламентныхОпераций.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетТорговогоСбора);
КонецПроцедуры

// Обработчики этапа.

Процедура Использование_РасчетТорговогоСбора(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, 1);
	
	Если НЕ ПолучитьФункциональнуюОпцию("УплачиваетсяТорговыйСбор") Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеОтключено(
			ПараметрыОбработчика,
			НСтр("ru = 'Учет торгового сбора не ведется.';
				|en = 'Sales charge accounting is not kept.'", ОбщегоНазначения.КодОсновногоЯзыка()));
			
		Возврат;
		
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.ПроверитьИспользованиеРегламентированногоУчета(ПараметрыОбработчика);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	МесяцРасчета = Месяц(ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
	Если МесяцРасчета % 3 <> 0 Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru = 'Торговый сбор рассчитывается в последнем месяце квартала.';
				|en = 'Sales charge is calculated in the last month of the quarter.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация КАК Ссылка
	|ПОМЕСТИТЬ ВТОрганизацииДляРасчета
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПараметрыТорговыхТочекСрезПоследних.Организация КАК Организация
	|	ИЗ
	|		РегистрСведений.ПараметрыТорговыхТочек.СрезПоследних(&КонецПериода, Организация В (&МассивОрганизаций)) КАК ПараметрыТорговыхТочекСрезПоследних
	|	ГДЕ
	|		ПараметрыТорговыхТочекСрезПоследних.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийТорговыеТочки.СнятиеСУчета)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПараметрыТорговыхТочек.Организация
	|	ИЗ
	|		РегистрСведений.ПараметрыТорговыхТочек КАК ПараметрыТорговыхТочек
	|	ГДЕ
	|		ПараметрыТорговыхТочек.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ПараметрыТорговыхТочек.Организация В(&МассивОрганизаций)) КАК Т";
	
	Запрос.Выполнить();
	
	Если ЗакрытиеМесяцаСервер.РазмерВременнойТаблицы(Запрос, "ВТОрганизацииДляРасчета", ПараметрыОбработчика) = 0 Тогда
			
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru = 'Нет торговых точек для расчета налога.';
				|en = 'No sales outlets to calculate taxes.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Возврат;
		
	КонецЕсли;
	
	ВведеныРегламентныеДокументы = ЗакрытиеМесяцаСервер.ПроверитьНаличиеДокументаРегламентнаяОперация(ПараметрыОбработчика,, "ВТОрганизацииДляРасчета", Ложь);
	
КонецПроцедуры

Процедура Выполнить_РасчетТорговогоСбора(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаЛокализация.СформироватьДокументРегламентнаяОперация(ПараметрыОбработчика, ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
	
КонецПроцедуры

#КонецОбласти
//-- НЕ УТ
#КонецОбласти

// Список операций, которые отражаются в регламентированном учете через стандартный механизм отражения.
// 
// Возвращаемое значение:
//  Массив - Операции к отражению в регл. учете
Функция ОперацииКОтражениюВРеглУчете() Экспорт
	
	ОперацииКОтражениюВРеглУчете = Новый Массив;
	ОперацииКОтражениюВРеглУчете.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество);
	ОперацииКОтражениюВРеглУчете.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетЗемельногоНалога);
	ОперацииКОтражениюВРеглУчете.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетТранспортногоНалога);
	ОперацииКОтражениюВРеглУчете.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетТорговогоСбора);
	ОперацииКОтражениюВРеглУчете.Добавить(Перечисления.ТипыРегламентныхОпераций.ПризнаниеВНУАрендныхПлатежей);
	ОперацииКОтражениюВРеглУчете.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетЕНС);
	ОперацииКОтражениюВРеглУчете.Добавить(Перечисления.ТипыРегламентныхОпераций.РеклассификацияДолгосрочныхАктивовОбязательств);
	ОперацииКОтражениюВРеглУчете.Добавить(Перечисления.ТипыРегламентныхОпераций.КорректировкаНалоговойБазыПоКурсовымРазницам);
	
	Возврат ОперацииКОтражениюВРеглУчете;
	
КонецФункции

// Список операций этапа формирования финансового результата.
// 
// Возвращаемое значение:
//  Массив - ПеречислениеСсылка.ТипыРегламентныхОпераций - типы операций
Функция ТипыОперацийФинРеза() Экспорт
	
	ТипыОперацийФинРеза = Новый Массив;
	ТипыОперацийФинРеза.Добавить(Перечисления.ТипыРегламентныхОпераций.КорректировкаНалоговойБазыПоКурсовымРазницам);
	ТипыОперацийФинРеза.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетДолейСписанияКосвенныхРасходов);
	ТипыОперацийФинРеза.Добавить(Перечисления.ТипыРегламентныхОпераций.СписаниеКосвенныхРасходов);
	ТипыОперацийФинРеза.Добавить(Перечисления.ТипыРегламентныхОпераций.ФормированиеФинансовогоРезультата);
	ТипыОперацийФинРеза.Добавить(Перечисления.ТипыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет);
	ТипыОперацийФинРеза.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаПрибыль);
	ТипыОперацийФинРеза.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетОтложенногоНалога);
	ТипыОперацийФинРеза.Добавить(Перечисления.ТипыРегламентныхОпераций.ПереоценкаСуммыВВалютеФинОтчетности);
	ТипыОперацийФинРеза.Добавить(Перечисления.ТипыРегламентныхОпераций.ЗакрытиеГода);
	
	Возврат ТипыОперацийФинРеза;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяТаблицы = "РасчетыНалоговыхАгентовСБюджетомПоНДФЛ";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяТаблицы, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	Расшифровка.Сумма КАК Сумма,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК МесяцНалоговогоПериода,
	|	&Организация КАК Организация,
	|	ДанныеПервичныхДокументов.Номер КАК ПлатежноеПоручениеНомер,
	|	ДанныеПервичныхДокументов.Дата КАК ПлатежноеПоручениеДата,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Расшифровка.Субконто1) = ТИП(Справочник.РегистрацииВНалоговомОргане)
	|			ТОГДА Расшифровка.Субконто1
	|		КОГДА ТИПЗНАЧЕНИЯ(Расшифровка.Субконто2) = ТИП(Справочник.РегистрацииВНалоговомОргане)
	|			ТОГДА Расшифровка.Субконто2
	|		КОГДА ТИПЗНАЧЕНИЯ(Расшифровка.Субконто3) = ТИП(Справочник.РегистрацииВНалоговомОргане)
	|			ТОГДА Расшифровка.Субконто3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|	КОНЕЦ КАК РегистрацияВНалоговомОргане,
	|	Расшифровка.ТипНалога КАК ТипНалога,
	|	""0"" КАК ПоказательОснования,
	|	""0"" КАК ПоказательПериода
	|ИЗ
	|	Документ.РегламентнаяОперация КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втУплатаНалогов КАК Расшифровка
	|		ПО ДанныеДокумента.Ссылка = Расшифровка.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО Расшифровка.ПлатежныйДокумент = ДанныеПервичныхДокументов.Документ
	|			И ДанныеДокумента.Организация = ДанныеПервичныхДокументов.Организация
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьНачислениеЗарплаты
	|	И Расшифровка.ТипНалога В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛ),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛСПревышения),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛДоначисленныйПоРезультатамПроверки),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛДоходыКонтрагентов),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛПередачаЗадолженностиВНалоговыйОрган),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛПрочиеРасчетыСПерсоналом))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСФондамиПоСтраховымВзносам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяТаблицы = "РасчетыСФондамиПоСтраховымВзносам";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяТаблицы, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТипыНалоговВФонды", ТекстыЗапроса) Тогда
		ЕдиныйНалоговыйСчет.ТекстЗапросаВтТипыНалоговВФонды(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТипыНалоговВзносов.ВидСтрахования КАК ВидОбязательногоСтрахованияСотрудников,
	|	ДанныеПервичныхДокументов.Номер КАК ПлатежноеПоручениеНомер,
	|	ДанныеПервичныхДокументов.Дата КАК ПлатежноеПоручениеДата,
	|	ИСТИНА КАК ЭтоСтраховыеВзносы,
	|	0 КАК ГодЗадолженностиПоЕСН,
	|	Расшифровка.Сумма КАК Сумма
	|ИЗ
	|	Документ.РегламентнаяОперация КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втУплатаНалогов КАК Расшифровка
	|		ПО ДанныеДокумента.Ссылка = Расшифровка.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТипыНалоговВФонды КАК ТипыНалоговВзносов
	|		ПО Расшифровка.ТипНалога = ТипыНалоговВзносов.ТипНалога
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО Расшифровка.ПлатежныйДокумент = ДанныеПервичныхДокументов.Документ
	|			И ДанныеДокумента.Организация = ДанныеПервичныхДокументов.Организация
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьНачислениеЗарплаты
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область ПроводкиРеглУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса отражения в регл. учете.
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстыОтражения = Новый Массив;

#Область НачислениеИмущественныхНалогов
	ТекстЗапроса = "
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	РасходыПоНалогу.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	РасходыПоНалогу.СуммаРегл КАК Сумма,
	|	РасходыПоНалогу.СуммаУпр КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	РасходыПоНалогу.СтатьяРасходов КАК АналитикаУчетаДт,
	|	РасходыПоНалогу.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	РасходыПоНалогу.Подразделение КАК ПодразделениеДт,
	|	РасходыПоНалогу.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	РасходыПоНалогу.СтатьяРасходов КАК СубконтоДт1,
	|	РасходыПоНалогу.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL
	|		ТОГДА 
	|				ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|						ТОГДА ОбъектыСтроительства.СпособСтроительства
	|					ИНАЧЕ 
	|						ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	РасходыПоНалогу.СуммаРегл - РасходыПоНалогу.ПостояннаяРазница - РасходыПоНалогу.ВременнаяРазница КАК СуммаНУДт,
	|	РасходыПоНалогу.ПостояннаяРазница КАК СуммаПРДт,
	|	РасходыПоНалогу.ВременнаяРазница КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	РасходыПоНалогу.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР КОГДА Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество) ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НалогНаИмущество)
	|	КОГДА Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетТранспортногоНалога) ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТранспортныйНалог)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ЗемельныйНалог)
	|	КОНЕЦ КАК СчетКт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	РасходыПоНалогу.РегистрацияВНалоговомОргане КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	РасходыПоНалогу.СуммаРегл КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	РасходыПоНалогу.СуммаРегл - РасходыПоНалогу.ПостояннаяРазница - РасходыПоНалогу.ВременнаяРазница КАК СуммаНУКт,
	|	РасходыПоНалогу.ПостояннаяРазница КАК СуммаПРКт,
	|	РасходыПоНалогу.ВременнаяРазница КАК СуммаВРКт,
	|	""Начисление имущественных налогов"" КАК Содержание
	|
	|ИЗ
	|	Документ.РегламентнаяОперация КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК РасходыПоНалогу
	|		ПО Операция.Ссылка = РасходыПоНалогу.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО РасходыПоНалогу.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = РасходыПоНалогу.АналитикаРасходов
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетТранспортногоНалога),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетЗемельногоНалога))
	|	И РасходыПоНалогу.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРБП)
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
#КонецОбласти
	
#Область ТекстРасходыНаПлатон
	ТекстЗапроса = " // Поступление услуг (Дт <25, 26, 44, 20, 23, 08.3, 20> :: Кт <97.21> )
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	РасходыПоНалогу.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	РасходыПоНалогу.СуммаРегл КАК Сумма,
	|	РасходыПоНалогу.СуммаУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	РасходыПоНалогу.СтатьяРасходов КАК АналитикаУчетаДт,
	|	РасходыПоНалогу.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	РасходыПоНалогу.Подразделение КАК ПодразделениеДт,
	|	РасходыПоНалогу.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	РасходыПоНалогу.СтатьяРасходов КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	РасходыПоНалогу.АналитикаРасходов КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	РасходыПоНалогу.СуммаРегл - РасходыПоНалогу.ПостояннаяРазница - РасходыПоНалогу.ВременнаяРазница КАК СуммаНУДт,
	|	РасходыПоНалогу.ПостояннаяРазница КАК СуммаПРДт,
	|	РасходыПоНалогу.ВременнаяРазница КАК СуммаВРДт,
	|
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыНаПлатон) КАК АналитикаУчетаКт,
	|	РасходыПоНалогу.Подразделение КАК МестоУчетаКт,
	|
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	РасходыПоНалогу.Подразделение КАК ПодразделениеКт,
	|	РасходыПоНалогу.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыНаПлатон) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	РасходыПоНалогу.СуммаРегл КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	РасходыПоНалогу.СуммаРегл - РасходыПоНалогу.ВременнаяРазница КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	РасходыПоНалогу.ВременнаяРазница КАК СуммаВРКт,
	|	""Отражение в расходах платы по системе """"Платон"""""" КАК Содержание
	|
	|ИЗ
	|	Документ.РегламентнаяОперация КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК РасходыПоНалогу
	|		ПО Операция.Ссылка = РасходыПоНалогу.Регистратор
	|			И РасходыПоНалогу.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетТранспортногоНалога)
	|	И РасходыПоНалогу.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРБП)
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
#КонецОбласти
	
#Область НачислениеТорговогоСбора
	ТекстЗапроса = "
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	КосвенныеРасходы.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	КосвенныеРасходы.СуммаРегл КАК Сумма,
	|	КосвенныеРасходы.СуммаУпр КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	КосвенныеРасходы.СтатьяРасходов КАК АналитикаУчетаДт,
	|	КосвенныеРасходы.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	КосвенныеРасходы.Подразделение КАК ПодразделениеДт,
	|	КосвенныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	КосвенныеРасходы.СтатьяРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	КосвенныеРасходы.СуммаРегл - КосвенныеРасходы.ПостояннаяРазница - КосвенныеРасходы.ВременнаяРазница КАК СуммаНУДт,
	|	КосвенныеРасходы.ПостояннаяРазница КАК СуммаПРДт,
	|	КосвенныеРасходы.ВременнаяРазница КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	КосвенныеРасходы.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТорговыйСбор) КАК СчетКт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	КосвенныеРасходы.СуммаРегл КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	КосвенныеРасходы.СуммаРегл - КосвенныеРасходы.ПостояннаяРазница - КосвенныеРасходы.ВременнаяРазница КАК СуммаНУКт,
	|	КосвенныеРасходы.ПостояннаяРазница КАК СуммаПРКт,
	|	КосвенныеРасходы.ВременнаяРазница КАК СуммаВРКт,
	|	""Начисление торгового сбора"" КАК Содержание
	|
	|ИЗ
	|	Документ.РегламентнаяОперация КАК Операция
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК КосвенныеРасходы
	|		ПО Операция.Ссылка = КосвенныеРасходы.Регистратор
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетТорговогоСбора)
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
#КонецОбласти
	
#Область РасходыПоАренднымПлатежамНУ
	ТекстЗапроса = "
	|ВЫБРАТЬ // Расходы по арендным платежам НУ (Дт <25, 26, 44, 20, 23> :: Кт <01.К>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.ПодразделениеЗатрат КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.ПодразделениеЗатрат КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиЗатрат КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыЛизинговыеПлатежи) КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2, 
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаПлатежаНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.СуммаПлатежаНУ КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.ПодразделениеЗатрат КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаПлатежаНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.СуммаПлатежаНУ КАК СуммаВРКт,
	|	""Услуга по аренде за вычетом амортизации признана в расходах налогового учета"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РегламентнаяОперация КАК Операция
	|		ПО ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасходыПоАренднымПлатежам КАК Строки
	|		ПО ИСТИНА
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|		ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|			И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.ПризнаниеВНУАрендныхПлатежей)
	|	И Строки.СуммаПлатежаНУ <> 0
	|
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
#КонецОбласти

#Область КорректировкаАмортизацииПоАренднымПлатежамНУ
	ТекстЗапроса = "
	|ВЫБРАТЬ // Коррректировка расходов по амортизации (Дт <25, 26, 44, 20, 23> :: Кт <01.К>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.ПодразделениеЗатрат КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.ПодразделениеЗатрат КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиЗатрат КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2, 
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА 
	|				ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|						ТОГДА ОбъектыСтроительства.СпособСтроительства
	|					ИНАЧЕ 
	|						ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|				КОНЕЦ
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) 
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.КорректировкаАмортизацииНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.КорректировкаАмортизацииНУ КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.КорректировкаАмортизацииНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.КорректировкаАмортизацииНУ КАК СуммаВРКт,
	|	""Коррректировка расходов по амортизации на величину превышения над арендными платежами"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РегламентнаяОперация КАК Операция
	|		ПО ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтКорректировкаАмортизации КАК Строки
	|		ПО ИСТИНА
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|		ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|			И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|		ПО ОбъектыСтроительства.Ссылка = Строки.АналитикаРасходов
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.ПризнаниеВНУАрендныхПлатежей)
	|	И Строки.КорректировкаАмортизацииНУ <> 0
	|
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
#КонецОбласти
	
#Область Реклассификация

// Кредиты, депозиты, займы
#Область Реклассификация_КредитыИЗаймы // (Дт <66, 67, 67, 76.09> :: Кт <66, 67, 67, 76.09>)
	ТекстЗапроса = "
	|ВЫБРАТЬ // Реклассификация долгосрочных активов и обязательств (Дт <66, 67, 67, 76.09> :: Кт <66, 67, 67, 76.09>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.СуммаУпр КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг)
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия) КОНЕЦ КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.СуммаЗадолженности КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг)
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия) КОНЕЦ КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.СуммаЗадолженности КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаРегл КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Реклассификация долгосрочных активов и обязательств"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		вт_РеклассификацияРасчетыПоФинИнструментам КАК Строки
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РеклассификацияДолгосрочныхАктивовОбязательств)
	|	И Строки.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|";
	
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти

#Область Реклассификация_Депозиты // (Дт <55.03, 58.03, 76.09> :: Кт <55.03, 58.03, 76.09>)
	ТекстЗапроса = "
	|ВЫБРАТЬ // Реклассификация долгосрочных активов и обязательств (Дт <55.03, 58.03, 76.09> :: Кт <55.03, 58.03, 76.09>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.СуммаУпр КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|			ИЛИ (Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|					И Строки.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.ДепозитВБанкеСКапитализацией))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг)
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты)
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Договор КАК СубконтоДт1,
	|	Строки.Контрагент КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.СуммаЗадолженности КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|			ИЛИ (Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|					И Строки.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.ДепозитВБанкеСКапитализацией))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг)
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты)
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	Строки.Договор КАК СубконтоКт1,
	|	Строки.Контрагент КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.СуммаЗадолженности КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаРегл КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Реклассификация долгосрочных активов и обязательств"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		вт_РеклассификацияРасчетыПоФинИнструментам КАК Строки
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РеклассификацияДолгосрочныхАктивовОбязательств)
	|	И Строки.ХарактерДоговора <> ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|";
	
	ТекстыОтражения.Добавить(ТекстЗапроса);
#КонецОбласти

// Аренда
#Область Реклассификация_Аренда // (Дт <76.07.Х> :: Кт <76.07.Х>)
	ТекстЗапроса = "
	|ВЫБРАТЬ // Реклассификация долгосрочных активов и обязательств (Дт <76.07.Х> :: Кт <76.07.Х>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.СуммаУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаРегл КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Реклассификация долгосрочных активов и обязательств"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		вт_РеклассификацияРасчетыПоАренде КАК Строки
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РеклассификацияДолгосрочныхАктивовОбязательств)
	|";
	
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти

// Расчеты с клиентами
#Область Реклассификация_РасчетыСКлиентами
	ТекстЗапроса = "
	|ВЫБРАТЬ // Реклассификация долгосрочных активов и обязательств (Дт <62.х> :: Кт <62.х>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР
	|		КОГДА Строки.ДолгРегл > 0
	|		ТОГДА Строки.ДолгРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Строки.ДолгУпр > 0
	|		ТОГДА Строки.ДолгУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	ВЫБОР
	|		КОГДА Строки.Долг > 0
	|		ТОГДА Строки.Долг
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР
	|		КОГДА Строки.ДолгРегл > 0
	|		ТОГДА Строки.ДолгРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ВЫБОР
	|		КОГДА Строки.Долг > 0
	|		ТОГДА Строки.Долг
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ВЫБОР
	|		КОГДА Строки.ДолгРегл > 0
	|		ТОГДА Строки.ДолгРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Реклассификация долгосрочных расчетов с клиентами"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		вт_РеклассификацияРасчетыСКлиентами КАК Строки
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РеклассификацияДолгосрочныхАктивовОбязательств)";
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти

// Расчеты с клиентами авансы
#Область Реклассификация_РасчетыСКлиентами_Предоплата
	ТекстЗапроса = "
	|ВЫБРАТЬ // Реклассификация долгосрочных активов и обязательств (Дт Кт <62.х> :: Кт <62.х>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР
	|		КОГДА Строки.ПредоплатаРегл > 0
	|		ТОГДА Строки.ПредоплатаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Строки.ПредоплатаУпр > 0
	|		ТОГДА Строки.ПредоплатаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	ВЫБОР
	|		КОГДА Строки.Предоплата > 0
	|		ТОГДА Строки.Предоплата
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР
	|		КОГДА Строки.ПредоплатаРегл > 0
	|		ТОГДА Строки.ПредоплатаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ВЫБОР
	|		КОГДА Строки.Предоплата > 0
	|		ТОГДА Строки.Предоплата
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ВЫБОР
	|		КОГДА Строки.ПредоплатаРегл > 0
	|		ТОГДА Строки.ПредоплатаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Реклассификация долгосрочных расчетов с клиентами"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		вт_РеклассификацияРасчетыСКлиентами КАК Строки
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РеклассификацияДолгосрочныхАктивовОбязательств)";
	
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти

// Расчеты с поставщиками
#Область Реклассификация_РасчетыСПоставщиками
	ТекстЗапроса = "
	|ВЫБРАТЬ // Реклассификация долгосрочных активов и обязательств (Дт <60.х> :: Кт <60.х>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР
	|		КОГДА Строки.ДолгРегл > 0
	|		ТОГДА Строки.ДолгРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Строки.ДолгУпр > 0
	|		ТОГДА Строки.ДолгУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	ВЫБОР
	|		КОГДА Строки.Долг > 0
	|		ТОГДА Строки.Долг
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР
	|		КОГДА Строки.ДолгРегл > 0
	|		ТОГДА Строки.ДолгРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ВЫБОР
	|		КОГДА Строки.Долг > 0
	|		ТОГДА Строки.Долг
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ВЫБОР
	|		КОГДА Строки.ДолгРегл > 0
	|		ТОГДА Строки.ДолгРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Реклассификация долгосрочных расчетов с поставщиками"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		вт_РеклассификацияРасчетыСПоставщиками КАК Строки
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РеклассификацияДолгосрочныхАктивовОбязательств)";
	
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти

// Расчеты с поставщиками авансы
#Область Реклассификация_РасчетыСПоставщиками_Предоплата
	ТекстЗапроса = "
	|ВЫБРАТЬ // Реклассификация долгосрочных активов и обязательств (Дт Кт <60.х> :: Кт <60.х>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР
	|		КОГДА Строки.ПредоплатаРегл > 0
	|		ТОГДА Строки.ПредоплатаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Строки.ПредоплатаУпр > 0
	|		ТОГДА Строки.ПредоплатаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	ВЫБОР
	|		КОГДА Строки.Предоплата > 0
	|		ТОГДА Строки.Предоплата
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР
	|		КОГДА Строки.ПредоплатаРегл > 0
	|		ТОГДА Строки.ПредоплатаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ВЫБОР
	|		КОГДА Строки.Предоплата > 0
	|		ТОГДА Строки.Предоплата
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ВЫБОР
	|		КОГДА Строки.ПредоплатаРегл > 0
	|		ТОГДА Строки.ПредоплатаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Реклассификация долгосрочных расчетов с поставщиками"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		вт_РеклассификацияРасчетыСПоставщиками КАК Строки
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РеклассификацияДолгосрочныхАктивовОбязательств)";
	
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти
	
// Расчеты по дисконтированию
#Область Реклассификация_РасчетыПоДисконтированию
	ТекстЗапроса = "
	|ВЫБРАТЬ // Реклассификация долгосрочных активов и обязательств (Дт Кт <76.хх> :: Кт <76.хх>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Строки.ДолгРегл < 0 ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Строки.ДолгРегл КАК Сумма,
	|	ВЫБОР КОГДА Строки.ДолгУпр < 0 ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Строки.ДолгУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПроцентыПоДисконтированию) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	ВЫБОР КОГДА Строки.Долг < 0 ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Строки.Долг КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	ВЫБОР КОГДА Строки.ДолгРегл < 0 ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Строки.ДолгРегл КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПроцентыПоДисконтированию) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ВЫБОР КОГДА Строки.Долг < 0 ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Строки.Долг КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	ВЫБОР КОГДА Строки.ДолгРегл < 0 ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Строки.ДолгРегл КАК СуммаВРКт,
	|	""Реклассификация долгосрочных расчетов по дисконтированию"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		вт_РеклассификацияРасчетыПоДисконтированию КАК Строки
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РеклассификацияДолгосрочныхАктивовОбязательств)
	|	И Строки.ДолгРегл + Строки.ДолгУпр <> 0
	|";
	
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти

#КонецОбласти

// Корректировка налоговой базы по Письму Минфина от 22.12.2022 03-03-10/126074
#Область КорректировкаНалоговойБазПоКурсовымРазницам

#Область Корректировка_РасчетыСКлиентами

	ТекстЗапроса = "
	|ВЫБРАТЬ // Зачет расходов и отложенного дохода за 2022 год с клиентами Дт <62.х>:: Кт <98.КР>)
	|
	|	Расчеты.ДокументРегистратор КАК Ссылка,
	|	Расчеты.Период КАК Период,
	|	ДанныеОбъекта.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	ДанныеОбъекта.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	ДанныеОбъекта.Подразделение КАК ПодразделениеДт,
	|	ДанныеОбъекта.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	ДанныеОбъекта.Контрагент КАК СубконтоДт1,
	|	ДанныеОбъекта.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	ДанныеОбъекта.Подразделение КАК ПодразделениеКт,
	|	ДанныеОбъекта.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОтложенныеДоходыПоКурсовымРазницам) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	-Расчеты.ОтложенныйДоход КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	Расчеты.ОтложенныйДоход КАК СуммаВРКт,
	|	""Зачет расходов и отложенного дохода за 2022 год"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиНУ КАК Расчеты
	|	ПО Расчеты.ДокументРегистратор = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ДанныеОбъекта
	|	ПО Расчеты.ОбъектРасчетов = ДанныеОбъекта.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО УчетнаяПолитикаОрганизаций.Ссылка = Расчеты.ДокументРегистратор
	|		И УчетнаяПолитикаОрганизаций.Организация = ДанныеОбъекта.Организация
	|		И УчетнаяПолитикаОрганизаций.ДатаОтражения = НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ)
	|		И УчетнаяПолитикаОрганизаций.ДатаНачалаПрименения67ФЗ <= Расчеты.Период
	|ГДЕ
	|	Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Расчеты.ОтложенныйДоход <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Зачет расходов и отложенного дохода за 2022 год с клиентами Дт <91.02>:: Кт <62.х>)
	|
	|	Расчеты.ДокументРегистратор КАК Ссылка,
	|	ДокументыКОтражению.Период КАК Период,
	|	ДанныеОбъекта.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) КАК АналитикаУчетаДт,
	|	ДанныеОбъекта.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ДанныеОбъекта.Подразделение КАК ПодразделениеДт,
	|	ДанныеОбъекта.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	-Расчеты.ОтложенныйДоход КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	Расчеты.ОтложенныйДоход КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаКт,
	|	ДанныеОбъекта.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Расчеты.Валюта КАК ВалютаКт,
	|	ДанныеОбъекта.Подразделение КАК ПодразделениеКт,
	|	ДанныеОбъекта.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	ДанныеОбъекта.Контрагент КАК СубконтоКт1,
	|	ДанныеОбъекта.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Зачет расходов и отложенного дохода за 2022 год"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиНУ КАК Расчеты
	|	ПО Расчеты.ДокументРегистратор = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ДанныеОбъекта
	|	ПО Расчеты.ОбъектРасчетов = ДанныеОбъекта.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО УчетнаяПолитикаОрганизаций.Ссылка = Расчеты.ДокументРегистратор
	|		И УчетнаяПолитикаОрганизаций.Организация = ДанныеОбъекта.Организация
	|		И УчетнаяПолитикаОрганизаций.ДатаОтражения = НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ)
	|		И УчетнаяПолитикаОрганизаций.ДатаНачалаПрименения67ФЗ <= Расчеты.Период
	|ГДЕ
	|	Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Расчеты.ОтложенныйДоход <> 0";
	
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти

#Область Корректировка_РасчетыСПоставщиками
	
	ТекстЗапроса = "
	|ВЫБРАТЬ // Зачет расходов и отложенного дохода за 2022 год с поставщиками Дт <60.х> :: Кт <98.КР>)
	|
	|	Расчеты.ДокументРегистратор КАК Ссылка,
	|	Расчеты.Период КАК Период,
	|	ДанныеОбъекта.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаДт,
	|	ДанныеОбъекта.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	ДанныеОбъекта.Подразделение КАК ПодразделениеДт,
	|	ДанныеОбъекта.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	ДанныеОбъекта.Контрагент КАК СубконтоДт1,
	|	ДанныеОбъекта.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	ДанныеОбъекта.Подразделение КАК ПодразделениеКт,
	|	ДанныеОбъекта.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОтложенныеДоходыПоКурсовымРазницам) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	-Расчеты.ОтложенныйДоход КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	Расчеты.ОтложенныйДоход КАК СуммаВРКт,
	|	""Зачет расходов и отложенного дохода за 2022 год"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщикамиНУ КАК Расчеты
	|	ПО Расчеты.ДокументРегистратор = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ДанныеОбъекта
	|	ПО Расчеты.ОбъектРасчетов = ДанныеОбъекта.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО УчетнаяПолитикаОрганизаций.Ссылка = Расчеты.ДокументРегистратор
	|		И УчетнаяПолитикаОрганизаций.Организация = ДанныеОбъекта.Организация
	|		И УчетнаяПолитикаОрганизаций.ДатаОтражения = НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ)
	|		И УчетнаяПолитикаОрганизаций.ДатаНачалаПрименения67ФЗ <= Расчеты.Период
	|ГДЕ
	|	Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Расчеты.ОтложенныйДоход <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Зачет расходов и отложенного дохода за 2022 год с поставщиками Дт <91.02>:: Кт <60.х>)
	|
	|	Расчеты.ДокументРегистратор КАК Ссылка,
	|	ДокументыКОтражению.Период КАК Период,
	|	ДанныеОбъекта.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) КАК АналитикаУчетаДт,
	|	ДанныеОбъекта.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ДанныеОбъекта.Подразделение КАК ПодразделениеДт,
	|	ДанныеОбъекта.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	-Расчеты.ОтложенныйДоход КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	Расчеты.ОтложенныйДоход КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	ДанныеОбъекта.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Расчеты.Валюта КАК ВалютаКт,
	|	ДанныеОбъекта.Подразделение КАК ПодразделениеКт,
	|	ДанныеОбъекта.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ДанныеОбъекта.Контрагент КАК СубконтоКт1,
	|	ДанныеОбъекта.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Зачет расходов и отложенного дохода за 2022 год"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщикамиНУ КАК Расчеты
	|	ПО Расчеты.ДокументРегистратор = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ДанныеОбъекта
	|	ПО Расчеты.ОбъектРасчетов = ДанныеОбъекта.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО УчетнаяПолитикаОрганизаций.Ссылка = Расчеты.ДокументРегистратор
	|		И УчетнаяПолитикаОрганизаций.Организация = ДанныеОбъекта.Организация
	|		И УчетнаяПолитикаОрганизаций.ДатаОтражения = НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ)
	|		И УчетнаяПолитикаОрганизаций.ДатаНачалаПрименения67ФЗ <= Расчеты.Период
	|ГДЕ
	|	Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Расчеты.ОтложенныйДоход <> 0";
	
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти

#Область Корректировка_Депозиты

	ТекстЗапроса = "
	|ВЫБРАТЬ // Зачет расходов и отложенного дохода за 2022 год (Дт <55.03, 58.03> :: Кт <98.КР>)
	|
	|	Расчеты.ДокументРегистратор КАК Ссылка,
	|	Расчеты.Период КАК Период,
	|	ДанныеДоговора.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|			ИЛИ (Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|				И ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.ДепозитВБанкеСКапитализацией))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг)
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты)
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ДанныеДоговора.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ДанныеДоговора.Контрагент КАК СубконтоДт1,
	|	ДанныеДоговора.Ссылка КАК СубконтоДт2,
	|	ВЫБОР 
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|		ТОГДА ДанныеДоговора.СтатьяДДСПоступленияВыдачи
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|		ТОГДА ДанныеДоговора.СтатьяДДСПроцентов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОтложенныеДоходыПоКурсовымРазницам) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	-Расчеты.ОтложенныйДоход КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	Расчеты.ОтложенныйДоход КАК СуммаВРКт,
	|	""Зачет расходов и отложенного дохода за 2022 год"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыПоФинансовымИнструментамНУ КАК Расчеты
	|	ПО
	|		Расчеты.ДокументРегистратор = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		ДанныеДоговора.Ссылка = Расчеты.Договор
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО УчетнаяПолитикаОрганизаций.Ссылка = Расчеты.ДокументРегистратор
	|		И УчетнаяПолитикаОрганизаций.Организация = ДанныеДоговора.Организация
	|		И УчетнаяПолитикаОрганизаций.ДатаОтражения = НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ)
	|		И УчетнаяПолитикаОрганизаций.ДатаНачалаПрименения67ФЗ <= Расчеты.Период
	|ГДЕ
	|	Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеДоговора.ХарактерДоговора <> ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|	И Расчеты.ТипСуммы В (ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты))
	|	И Расчеты.ОтложенныйДоход <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Зачет расходов и отложенного дохода за 2022 год (Дт <91.02> :: Кт <55.03, 58.03>)
	|
	|	Расчеты.ДокументРегистратор КАК Ссылка,
	|	ДокументыКОтражению.Период КАК Период,
	|	ДанныеДоговора.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) КАК АналитикаУчетаДт,
	|	ДанныеДоговора.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	-Расчеты.ОтложенныйДоход КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	Расчеты.ОтложенныйДоход КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|			ИЛИ (Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|				И ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.ДепозитВБанкеСКапитализацией))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг)
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты)
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ДанныеДоговора.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	ДанныеДоговора.Контрагент КАК СубконтоКт1,
	|	ДанныеДоговора.Ссылка КАК СубконтоКт2,
	|	ВЫБОР 
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|		ТОГДА ДанныеДоговора.СтатьяДДСПоступленияВыдачи
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|		ТОГДА ДанныеДоговора.СтатьяДДСПроцентов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Зачет расходов и отложенного дохода за 2022 год"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыПоФинансовымИнструментамНУ КАК Расчеты
	|	ПО
	|		Расчеты.ДокументРегистратор = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		ДанныеДоговора.Ссылка = Расчеты.Договор
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО УчетнаяПолитикаОрганизаций.Ссылка = Расчеты.ДокументРегистратор
	|		И УчетнаяПолитикаОрганизаций.Организация = ДанныеДоговора.Организация
	|		И УчетнаяПолитикаОрганизаций.ДатаОтражения = НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ)
	|		И УчетнаяПолитикаОрганизаций.ДатаНачалаПрименения67ФЗ <= Расчеты.Период
	|ГДЕ
	|	Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеДоговора.ХарактерДоговора <> ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|	И Расчеты.ТипСуммы В (ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты))";
		
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти

#Область Корректировка_Кредиты

	ТекстЗапроса = "
	|ВЫБРАТЬ // Зачет расходов и отложенного дохода за 2022 год (Дт <66, 67, 67, 76.09> :: Кт <98.КР>)
	|
	|	Расчеты.ДокументРегистратор КАК Ссылка,
	|	Расчеты.Период КАК Период,
	|	ДанныеДоговора.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг)
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты)
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ДанныеДоговора.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ДанныеДоговора.Контрагент КАК СубконтоДт1,
	|	ДанныеДоговора.Ссылка КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОтложенныеДоходыПоКурсовымРазницам) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	-Расчеты.ОтложенныйДоход КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	Расчеты.ОтложенныйДоход КАК СуммаВРКт,
	|	""Зачет расходов и отложенного дохода за 2022 год"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыПоФинансовымИнструментамНУ КАК Расчеты
	|	ПО
	|		Расчеты.ДокументРегистратор = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		ДанныеДоговора.Ссылка = Расчеты.Договор
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО УчетнаяПолитикаОрганизаций.Ссылка = Расчеты.ДокументРегистратор
	|		И УчетнаяПолитикаОрганизаций.Организация = ДанныеДоговора.Организация
	|		И УчетнаяПолитикаОрганизаций.ДатаОтражения = НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ)
	|		И УчетнаяПолитикаОрганизаций.ДатаНачалаПрименения67ФЗ <= Расчеты.Период
	|ГДЕ
	|	Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|	И Расчеты.ОтложенныйДоход <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Зачет расходов и отложенного дохода за 2022 год (Дт <91.02> :: Кт <66, 67, 67, 76.09>)
	|
	|	Расчеты.ДокументРегистратор КАК Ссылка,
	|	ДокументыКОтражению.Период КАК Период,
	|	ДанныеДоговора.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) КАК АналитикаУчетаДт,
	|	ДанныеДоговора.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	-Расчеты.ОтложенныйДоход КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	Расчеты.ОтложенныйДоход КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг)
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты)
	|		КОГДА Расчеты.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ДанныеДоговора.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	ДанныеДоговора.Контрагент КАК СубконтоКт1,
	|	ДанныеДоговора.Ссылка КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Зачет расходов и отложенного дохода за 2022 год"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыПоФинансовымИнструментамНУ КАК Расчеты
	|	ПО
	|		Расчеты.ДокументРегистратор = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		ДанныеДоговора.Ссылка = Расчеты.Договор
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО УчетнаяПолитикаОрганизаций.Ссылка = Расчеты.ДокументРегистратор
	|		И УчетнаяПолитикаОрганизаций.Организация = ДанныеДоговора.Организация
	|		И УчетнаяПолитикаОрганизаций.ДатаОтражения = НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ)
	|		И УчетнаяПолитикаОрганизаций.ДатаНачалаПрименения67ФЗ <= Расчеты.Период
	|ГДЕ
	|	Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|	И Расчеты.ОтложенныйДоход <> 0";
	
		
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти

#Область Корректировка_Аренда

	ТекстЗапроса = "
	|ВЫБРАТЬ // Зачет расходов и отложенного дохода за 2022 год (Дт <76.07.Х> :: Кт <98.КР>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.УслугаПоАренде)
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.УслугаПоАренде)
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупнаяСтоимость)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ДанныеДоговора.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	ДанныеДоговора.Контрагент КАК СубконтоДт1,
	|	ДанныеДоговора.Ссылка КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОтложенныеДоходыПоКурсовымРазницам) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	-Строки.ОтложенныйДоход КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	Строки.ОтложенныйДоход КАК СуммаВРКт,
	|	""Зачет расходов и отложенного дохода за 2022 год"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыПоФинансовымИнструментамНУ КАК Строки
	|	ПО
	|		Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыАренды КАК ДанныеДоговора
	|	ПО
	|		ДанныеДоговора.Ссылка = Строки.Договор
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Строки.ДокументРегистратор = ДокументыКОтражению.Ссылка
	|	И Строки.ОтложенныйДоход <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Зачет расходов и отложенного дохода за 2022 год (Дт <91.02> :: Кт <76.07.Х>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) КАК АналитикаУчетаДт,
	|	ДанныеДоговора.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	-Строки.ОтложенныйДоход КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	Строки.ОтложенныйДоход КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.УслугаПоАренде)
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.УслугаПоАренде)
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупнаяСтоимость)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ДанныеДоговора.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	ДанныеДоговора.Контрагент КАК СубконтоКт1,
	|	ДанныеДоговора.Ссылка КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Зачет расходов и отложенного дохода за 2022 год"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыПоФинансовымИнструментамНУ КАК Строки
	|	ПО
	|		Строки.Регистратор = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыАренды КАК ДанныеДоговора
	|	ПО
	|		ДанныеДоговора.Ссылка = Строки.Договор
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Строки.ДокументРегистратор = ДокументыКОтражению.Ссылка
	|	И Строки.ОтложенныйДоход <> 0
	|";
		
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти

#КонецОбласти

	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса создания временных таблиц.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	МассивТекстовЗапроса = Новый Массив;
	
	МассивТекстовЗапроса.Добавить(ТекстЗапросаПустаяВременнаяТаблицаРеклассификацияРасчетыПоФинИнструментам());
	МассивТекстовЗапроса.Добавить(ТекстЗапросаПустаяВременнаяТаблицаРеклассификацияРасчетыСКлиентами());
	МассивТекстовЗапроса.Добавить(ТекстЗапросаПустаяВременнаяТаблицаРеклассификацияРасчетыСПоставщиками());
	МассивТекстовЗапроса.Добавить(ТекстЗапросаПустаяВременнаяТаблицаРеклассификацияРасчетыПоАренде());
	МассивТекстовЗапроса.Добавить(ТекстЗапросаПустаяВременнаяТаблицаРеклассификацияРасчетыПоДисконтированию());
	
	МассивТекстовЗапроса.Добавить(УчетАрендованныхОСЛокализация.ТекстЗапросаПустаяВременнаяТаблицаКорректировкаАмортизации());
	МассивТекстовЗапроса.Добавить(УчетАрендованныхОСЛокализация.ТекстЗапросаПустаяВременнаяТаблицаРасходыПоАренднымПлатежам());
	
	// Добавим пустой запрос, для того чтобы последний запрос тоже заканчивался на разделитель пакета запросов:
	МассивТекстовЗапроса.Добавить("");
	
	Возврат СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецФункции

// Создает и проводит документы "Регламентная операция" за указанный месяц.
//
//	Параметры:
//		Период - Дата - Начало месяца, в котором необходимо создать документы.
//		МассивОпераций - Массив - Содержит массив типов регламентных операций (значений перечисления "ТипыРегламентныхОпераций")
//		Организация - Массив, Неопределено - Список организаций по которым формируются документы. Если список пустой,
//												то документы формируются по всем организациям.
//		Отказ - Булево - Используется при вызове из формы закрытия месяца. При установке в "Истина" - дальнейшие операции
//							выполняться не будут.
//		ПроверятьНеобходимостьРаспределения - Булево - Признак того, что операцию выполнять только в случае если требуется. В противном случае выполнятся безусловно.
//		ПроводитьДокументы - Булево - Признак того, что созданные документы необходимо провести.
//
// Возвращаемое значение:
//		РезультатРасчета - Структура - структура, содержащая:
//			* МассивДокументов - Массив - массив ссылок на созданные/измененные документы
//			* ТекстОшибки - Строка - текст описание ошибки; заполнен при Отказ = Истина
//			* ТипОперации - ПеречислениеСсылка.ТипыРегламентныхОпераций - операция, завершившаяся с ошибкой
//			* Организация - СправочникСсылка.Организации - организация, по которой возникла ошибка.
//
Функция РассчитатьРегламентныеОперации(Период, МассивОпераций, Организация = Неопределено, Отказ = Ложь,
	ПроверятьНеобходимостьРаспределения = Ложь,	ПроводитьДокументы = Истина) Экспорт
	
	РезультатРасчета = Новый Структура;
	РезультатРасчета.Вставить("МассивДокументов", Новый Массив);
	РезультатРасчета.Вставить("СписокОшибок", Новый Массив);
	РезультатРасчета.Вставить("ТекстОшибки", "");
	РезультатРасчета.Вставить("ДокументСОшибкой");
	РезультатРасчета.Вставить("КоличествоДанных", 0);
	РезультатРасчета.Вставить("ТипОперации");
	РезультатРасчета.Вставить("Организация");
	
	ОперацииРеглУчета = Новый Массив;
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетДолейСписанияКосвенныхРасходов);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетКурсовыхРазниц);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.СписаниеКосвенныхРасходов);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.ФормированиеФинансовогоРезультата);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаПрибыль);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетОтложенногоНалога);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.ПереоценкаСуммыВВалютеФинОтчетности);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.КорректировкаНалоговойБазыПоКурсовымРазницам);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.ЗакрытиеГода);
	
	Если ПроверятьНеобходимостьРаспределения Тогда
		Состояние = СостояниеРасчетДолейСписанияКосвенныхРасходов(Организация, Период);
		Если Состояние = Перечисления.СостоянияОперацийЗакрытияМесяца.НеТребуется Тогда
			Возврат РезультатРасчета;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Организация) = Тип("Массив") Тогда
		МассивОрганизаций = Организация;
	ИначеЕсли ТипЗнч(Организация) = Тип("СписокЗначений") Тогда
		МассивОрганизаций = Организация.ВыгрузитьЗначения();
	Иначе
		МассивОрганизаций = Новый Массив;
		Если ЗначениеЗаполнено(Организация) Тогда
			МассивОрганизаций.Добавить(Организация);
		КонецЕсли;
	КонецЕсли;
	
	ТаблицаОпераций = Новый ТаблицаЗначений;
	ТаблицаОпераций.Колонки.Добавить("ТипОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыРегламентныхОпераций"));
	ТаблицаОпераций.Колонки.Добавить("Порядок", ОбщегоНазначения.ОписаниеТипаЧисло(1));
	Для Сч = 1 По МассивОпераций.Количество() Цикл
		СтрокаОперации = ТаблицаОпераций.Добавить();
		СтрокаОперации.ТипОперации = МассивОпераций[Сч-1];
		СтрокаОперации.Порядок = Сч;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОпераций.Порядок      КАК Порядок,
	|	ТаблицаОпераций.ТипОперации  КАК ТипОперации
	|ПОМЕСТИТЬ ВтТипыОпераций
	|ИЗ &ТаблицаОпераций КАК ТаблицаОпераций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСправочника.Ссылка КАК Ссылка,
	|	ДанныеСправочника.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДанныеСправочника.ОбособленноеПодразделение КАК ОбособленноеПодразделение
	|ПОМЕСТИТЬ ВтОрганизации
	|ИЗ
	|	Справочник.Организации КАК ДанныеСправочника
	|ГДЕ
	|	(ДанныеСправочника.Ссылка В (&МассивОрганизаций)
	|			ИЛИ (&ПоВсемОрганизациям
	|		И ДанныеСправочника.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОрганизаций.Действует)))
	|	И (ДанныеСправочника.Ссылка <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|			ИЛИ &УчитыватьУпрОрганизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Ссылка                    КАК Организация,
	|	Организации.ГоловнаяОрганизация       КАК ГоловнаяОрганизация,
	|	Организации.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ТипыРегламентныхОпераций.ТипОперации  КАК ТипОперации,
	|	ТипыРегламентныхОпераций.Порядок      КАК Порядок
	|ПОМЕСТИТЬ ВтТипыОперацийПоОрганизациям
	|ИЗ
	|	ВтОрганизации КАК Организации,
	|	ВтТипыОпераций КАК ТипыРегламентныхОпераций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТипыОпераций.Организация,
	|	ТипыОпераций.ОбособленноеПодразделение,
	|	ТипыОпераций.ТипОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НастройкиСистемыНалогообложения.СистемаНалогообложения, &ОСНО) = &ОСНО
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрганизацияНаОСНО,
	|	ЕСТЬNULL(НастройкиУчетаУСН.ПрименяетсяУСНДоходыМинусРасходы, ЛОЖЬ) КАК ПрименяетсяУСНДоходыМинусРасходы,
	|	ЕСТЬNULL(НастройкиУчетаНалогаНаПрибыль.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи, ЛОЖЬ) КАК ВключатьВСоставНалоговыхРасходовАрендныеПлатежи,
	|	ЕСТЬNULL(УчетнаяПолитикаФинансовогоУчета.ИспользоватьВыделениеДолгосрочныхАктивовОбязательств, ЛОЖЬ) КАК ИспользуетсяВыделениеДолгосрочныхАктивовОбязательств,
	|	НАЧАЛОПЕРИОДА(ЕСТЬNULL(НастройкиУчетаНалогаНаПрибыль.ДатаНезависимогоПризнанияДоходовРасходов, ДАТАВРЕМЯ(1, 1, 1)), МЕСЯЦ) КАК ДатаНачалаПрименения67ФЗ,
	|	МАКСИМУМ(ЕСТЬNULL(РегламентнаяОперацияПроведена.Ссылка, РегламентнаяОперацияЗаписана.Ссылка)) КАК Ссылка
	|ИЗ
	|	ВтТипыОперацийПоОрганизациям КАК ТипыОпераций
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК РегламентнаяОперацияПроведена
	|	ПО
	|		ТипыОпераций.Организация = РегламентнаяОперацияПроведена.Организация
	|		И ТипыОпераций.ТипОперации = РегламентнаяОперацияПроведена.ТипОперации
	|		И РегламентнаяОперацияПроведена.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|		И РегламентнаяОперацияПроведена.Проведен
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК РегламентнаяОперацияЗаписана
	|	ПО
	|		ТипыОпераций.Организация = РегламентнаяОперацияЗаписана.Организация
	|		И ТипыОпераций.ТипОперации = РегламентнаяОперацияЗаписана.ТипОперации
	|		И РегламентнаяОперацияЗаписана.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|		И НЕ РегламентнаяОперацияЗаписана.ПометкаУдаления
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(
	|				&ДатаОкончания,
	|				Организация В
	|					(ВЫБРАТЬ
	|						Т.ГоловнаяОрганизация
	|					ИЗ
	|						ВтОрганизации КАК Т)) КАК НастройкиУчетаНалогаНаПрибыль
	|		ПО ТипыОпераций.ГоловнаяОрганизация = НастройкиУчетаНалогаНаПрибыль.Организация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(
	|				&ДатаОкончания,
	|				Организация В
	|					(ВЫБРАТЬ
	|						Т.ГоловнаяОрганизация
	|					ИЗ
	|						ВтОрганизации КАК Т)) КАК НастройкиСистемыНалогообложения
	|		ПО ТипыОпераций.ГоловнаяОрганизация = НастройкиСистемыНалогообложения.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаУСН.СрезПоследних(
	|				&ДатаОкончания,
	|				Организация В
	|					(ВЫБРАТЬ
	|						Т.ГоловнаяОрганизация
	|					ИЗ
	|						ВтОрганизации КАК Т)) КАК НастройкиУчетаУСН
	|		ПО ТипыОпераций.ГоловнаяОрганизация = НастройкиУчетаУСН.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(
	|				&ДатаОкончания,
	|				Организация В
	|					(ВЫБРАТЬ
	|						Т.ГоловнаяОрганизация
	|					ИЗ
	|						ВтОрганизации КАК Т)) КАК УчетнаяПолитикаФинансовогоУчета
	|		ПО ТипыОпераций.ГоловнаяОрганизация = УчетнаяПолитикаФинансовогоУчета.Организация
	|СГРУППИРОВАТЬ ПО
	|	ТипыОпераций.Организация,
	|	ТипыОпераций.ОбособленноеПодразделение,
	|	ТипыОпераций.ТипОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НастройкиСистемыНалогообложения.СистемаНалогообложения, &ОСНО) = &ОСНО
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЕСТЬNULL(НастройкиУчетаУСН.ПрименяетсяУСНДоходыМинусРасходы, ЛОЖЬ),
	|	ЕСТЬNULL(НастройкиУчетаНалогаНаПрибыль.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи, ЛОЖЬ),
	|	ЕСТЬNULL(УчетнаяПолитикаФинансовогоУчета.ИспользоватьВыделениеДолгосрочныхАктивовОбязательств, ЛОЖЬ),
	|	НАЧАЛОПЕРИОДА(ЕСТЬNULL(НастройкиУчетаНалогаНаПрибыль.ДатаНезависимогоПризнанияДоходовРасходов, ДАТАВРЕМЯ(1, 1, 1)), МЕСЯЦ),
	|	ТипыОпераций.Порядок
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипыОпераций.Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Ссылка,
	|	РегламентнаяОперация.Организация КАК Организация
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтОрганизации КАК Организации
	|	ПО
	|		РегламентнаяОперация.Организация = Организации.Ссылка 
	|ГДЕ
	|	РегламентнаяОперация.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И РегламентнаяОперация.Проведен
	|	И РегламентнаяОперация.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.ЗакрытиеГода)
	|
	|";

	Запрос.УстановитьПараметр("ДатаНачала", 			 НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", 			 КонецМесяца(Период));
	Запрос.УстановитьПараметр("УчитыватьУпрОрганизацию", ПолучитьФункциональнуюОпцию("ИспользоватьУправленческуюОрганизацию"));
	Запрос.УстановитьПараметр("ОСНО", 					 Перечисления.СистемыНалогообложения.Общая);
	Запрос.УстановитьПараметр("ТаблицаОпераций", 		 ТаблицаОпераций);
	Запрос.УстановитьПараметр("МассивОрганизаций", 		 МассивОрганизаций);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", 	 НЕ ЗначениеЗаполнено(МассивОрганизаций));
	
	Результат = Запрос.ВыполнитьПакет();

	ТаблицаОпераций     = Результат[3].Выгрузить();
	ТаблицаЗакрытияГода = Результат[4].Выгрузить();
	ИмяСобытия		= НСтр("ru = 'РегламентнаяОперация';
							|en = 'РегламентнаяОперация'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
	КоличествоОбработанныхДанных = 0;
	
	ОперацииБезОтменыПроведения = РегламентныеОперацииБезОтменыПроведения();
	
	Для Каждого Строка Из ТаблицаОпераций Цикл
		
		Если Строка.Организация = Справочники.Организации.УправленческаяОрганизация
				И (Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ФормированиеФинансовогоРезультата
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.СписаниеКосвенныхРасходов
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаПрибыль
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетОтложенногоНалога
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ЗакрытиеГода) Тогда
			Продолжить;
		ИначеЕсли Строка.ОбособленноеПодразделение
				И НЕ ОперацияИспользуетсяДляОбособленногоПодразделения(Строка.ТипОперации) Тогда
			Продолжить; // Эти операции выполняются только для головной организации
		ИначеЕсли НЕ Строка.ОрганизацияНаОСНО 
				И (Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаПрибыль
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетОтложенногоНалога
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.СписаниеКосвенныхРасходов
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет) Тогда   
			Продолжить; // Расчет налога на прибыль выполняем только для организация на ОСНО
		ИначеЕсли Строка.ОрганизацияНаОСНО 
				И (Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ПризнаниеРасходовПриУСН
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетНалогаУСН) Тогда   
			Продолжить; // Эти операции выполняются только для организаций не на ОСНО
		ИначеЕсли НЕ Строка.ПрименяетсяУСНДоходыМинусРасходы 
				И Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ПризнаниеРасходовПриУСН Тогда   
				   Продолжить; // Эта операция выполняются только для организаций на УСН "Доходы минус расходы"
		ИначеЕсли Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ПризнаниеВНУАрендныхПлатежей
			И НЕ Строка.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи Тогда
			Продолжить;
		ИначеЕсли ОперацииРеглУчета.Найти(Строка.ТипОперации) <> Неопределено
			И (Не ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") ИЛИ Период < Константы.ДатаНачалаВеденияРеглУчета.Получить()) Тогда
			Продолжить; // Эта операция выполняется только при включенной опции регламентированного учета
		ИначеЕсли НЕ РеглУчетСервер.НастройкиУчета().ДополнительноВедетсяУчетВВалютеФинОтчетности
			И Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ПереоценкаСуммыВВалютеФинОтчетности Тогда   
			Продолжить; // Эта операция выполняются только при ведении управленческого учета на плане счетов в валюте ФО
		ИначеЕсли НЕ Строка.ИспользуетсяВыделениеДолгосрочныхАктивовОбязательств
				И Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РеклассификацияДолгосрочныхАктивовОбязательств Тогда
					Продолжить; // Эта операция выполняются только для организаций с выделением долгосрочных активов и обязательств
		ИначеЕсли Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.КорректировкаНалоговойБазыПоКурсовымРазницам 
				И (НЕ Строка.ОрганизацияНаОСНО ИЛИ НЕ ЗначениеЗаполнено(Строка.ДатаНачалаПрименения67ФЗ) ИЛИ Период <> '20221201') Тогда
					Продолжить; // Эта операция выполняется только для декабря 2022г.
		КонецЕсли;
			
		Если Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.СписаниеКосвенныхРасходов
			ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ФормированиеФинансовогоРезультата
			ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет
			ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаПрибыль
			ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетОтложенногоНалога Тогда
			
			// Отменим проведение закрытия года, т.к. они оперируют одними данными
			СтруктураПоиска = Новый Структура("Организация", Строка.Организация);
			ЗакрытияГода = ТаблицаЗакрытияГода.НайтиСтроки(СтруктураПоиска);
			Для каждого ЗакрытиеГода Из ЗакрытияГода Цикл
				ЗакрытиеГодаДокумент = ЗакрытиеГода.Ссылка.ПолучитьОбъект();
				РезультатРасчета.МассивДокументов.Добавить(ЗакрытиеГода.Ссылка);
				Попытка 
					// Проверим, что документ находится в доступном для изменения периоде.
					ОписаниеОшибкиДаты = "";
					Если ДатыЗапретаИзменения.ИзменениеЗапрещено(ЗакрытиеГодаДокумент, , ОписаниеОшибкиДаты) Тогда
						ОписаниеОшибкиДаты = РасчетСебестоимостиПротоколРасчета.ПредставлениеМногострочногоТекста(ОписаниеОшибкиДаты);
						ВызватьИсключение ОписаниеОшибкиДаты;
					КонецЕсли;
					ЗакрытиеГодаДокумент.ДополнительныеСвойства.Вставить("ОчисткаДляПоследующегоПроведения",Истина);
					ЗакрытиеГодаДокумент.Записать(РежимЗаписиДокумента.ОтменаПроведения);
					
				Исключение
					Отказ = Истина;
					ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
					РезультатРасчета.ТекстОшибки = СокрЛП(РезультатРасчета.ТекстОшибки + Символы.ПС + ТекстОшибки);
					РезультатРасчета.ТипОперации = Строка.ТипОперации;
					РезультатРасчета.Организация = Строка.Организация;
					РезультатРасчета.ДокументСОшибкой = ЗакрытиеГода.Ссылка;
					
					ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
					Возврат РезультатРасчета;
				КонецПопытки;
			КонецЦикла;
		КонецЕсли;
		
		Если Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество Тогда
			
			УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоНалогуНаИмущество(
									Строка.Организация, Период);
			
			НеобходимРасчетНалогаНаИмущество = 
				Месяц(Период) = 12 
				ИЛИ (Месяц(Период)%3 = 0 И УплачиваютсяАвансы);
			
			Если Не НеобходимРасчетНалогаНаИмущество Тогда
				Продолжить;
			КонецЕсли;
			
		ИначеЕсли Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетТранспортногоНалога Тогда
			
			УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоТранспортномуНалогу(
									Строка.Организация, Период);
			
			НеобходимРасчетТранспортногоНалога = 
				Месяц(Период) = 12 
				ИЛИ (Месяц(Период)%3 = 0 И УплачиваютсяАвансы);
			
			Если Не НеобходимРасчетТранспортногоНалога Тогда
				Продолжить;
			КонецЕсли;
			
		ИначеЕсли Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетЗемельногоНалога Тогда
			
			УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоЗемельномуНалогу(
									Строка.Организация, Период);
			
			НеобходимРасчетЗемельногоНалога = 
				Месяц(Период) = 12 
				ИЛИ (Месяц(Период)%3 = 0 И УплачиваютсяАвансы);
			
			Если Не НеобходимРасчетЗемельногоНалога Тогда
				Продолжить;
			КонецЕсли;
		
		ИначеЕсли Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.КорректировкаНалоговойБазыПоКурсовымРазницам Тогда
			
			//Корректировка применяется только для декабря 2022 года для организаций на ОСНО, использующих независимое признание доходов и раходов.
			Если Не Строка.ОрганизацияНаОСНО ИЛИ Период <> '20221201' ИЛИ НЕ ЗначениеЗаполнено(Строка.ДатаНачалаПрименения67ФЗ) Тогда
				Продолжить;
			КонецЕсли;
				
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Строка.Ссылка) Тогда
			РеглОперация = Документы.РегламентнаяОперация.СоздатьДокумент();
			РеглОперация.Дата = КонецМесяца(Период);
			РеглОперация.ТипОперации = Строка.ТипОперации;
			РеглОперация.Организация = Строка.Организация;
		Иначе
			РеглОперация = Строка.Ссылка.ПолучитьОбъект();
		КонецЕсли;
		
		// Проверим, что документ находится в доступном для изменения периоде.
		ОписаниеОшибкиДаты = "";
		
		Если ДатыЗапретаИзменения.ИзменениеЗапрещено(РеглОперация, , ОписаниеОшибкиДаты) Тогда
			Отказ = Истина;
			ТекстОшибки = РасчетСебестоимостиПротоколРасчета.ПредставлениеМногострочногоТекста(ОписаниеОшибкиДаты);
			РезультатРасчета.ТекстОшибки = СокрЛП(РезультатРасчета.ТекстОшибки + Символы.ПС + ТекстОшибки);
			РезультатРасчета.ТипОперации = Строка.ТипОперации;
			РезультатРасчета.Организация = Строка.Организация;
			РезультатРасчета.ДокументСОшибкой = Строка.Ссылка;
			
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
			Возврат РезультатРасчета;
		КонецЕсли;
		
		Если РеглОперация.Проведен
			И ОперацииБезОтменыПроведения.Найти(Строка.ТипОперации) = Неопределено Тогда
				
			РеглОперация.ДополнительныеСвойства.Вставить("ОчисткаДляПоследующегоПроведения",Истина);
			Попытка 
				РеглОперация.Записать(РежимЗаписиДокумента.ОтменаПроведения)
			Исключение
				Отказ = Истина;
				ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				РезультатРасчета.ТекстОшибки = СокрЛП(РезультатРасчета.ТекстОшибки + Символы.ПС + ТекстОшибки);
				РезультатРасчета.ТипОперации = Строка.ТипОперации;
				РезультатРасчета.Организация = Строка.Организация;
				РезультатРасчета.ДокументСОшибкой = РеглОперация.Ссылка;
				
				ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
				Возврат РезультатРасчета;
			КонецПопытки;
		КонецЕсли;
		
		РеглОперация.ДополнительныеСвойства.Вставить("ДатаНачалаПрименения67ФЗ", Строка.ДатаНачалаПрименения67ФЗ);
		
		РеглОперация.ДополнительныеСвойства.Вставить("ВыводитьСообщенияВЖурналРегистрации", Истина);
		РеглОперация.Записать(РежимЗаписиДокумента.Запись);
		РезультатРасчета.МассивДокументов.Добавить(РеглОперация.Ссылка);
		
		Если ПроводитьДокументы Тогда
			
			СообщенияПроверки = РасчетСебестоимостиПрикладныеАлгоритмы.ПроверитьЗаполнениеОбъектаСПерехватомСообщений(РеглОперация);
			
			Если ЗначениеЗаполнено(СообщенияПроверки) Тогда
				
				Отказ = Истина;
				
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'При проверке документа ""%1"" были обнаружены ошибки:
						|%2';
						|en = 'Errors were detected while checking the ""%1"" document:
						|%2'"),
					СокрЛП(РеглОперация.Ссылка),
					РасчетСебестоимостиПротоколРасчета.ПредставлениеМногострочногоТекста(СообщенияПроверки, " - "));
				
				РезультатРасчета.ТекстОшибки = СокрЛП(РезультатРасчета.ТекстОшибки + Символы.ПС + ТекстОшибки);
				РезультатРасчета.ТипОперации = Строка.ТипОперации;
				РезультатРасчета.Организация = Строка.Организация;
				РезультатРасчета.ДокументСОшибкой = РеглОперация.Ссылка;
				
				ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
				
				Возврат РезультатРасчета;
				
			КонецЕсли;
				
			Попытка
				
				РеглОперация.Записать(РежимЗаписиДокумента.Проведение);
				
				Если РеглОперация.ДополнительныеСвойства.Свойство("КоличествоОбработанныхДанных") Тогда
					КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + РеглОперация.ДополнительныеСвойства.КоличествоОбработанныхДанных;
				КонецЕсли; 
				
				Если РеглОперация.ДополнительныеСвойства.Свойство("СписокОшибок") Тогда
					ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
						РезультатРасчета.СписокОшибок, 
						РеглОперация.ДополнительныеСвойства.СписокОшибок);
				КонецЕсли;
				
			Исключение
				
				Отказ = Истина;
				
				РезультатРасчета.ТипОперации = Строка.ТипОперации;
				РезультатРасчета.Организация = Строка.Организация;
				РезультатРасчета.ДокументСОшибкой = РеглОперация.Ссылка;
				
				Если РеглОперация.ДополнительныеСвойства.Свойство("СписокОшибок")
					И РеглОперация.ДополнительныеСвойства.СписокОшибок.Количество() <> 0 Тогда
					
					ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
						РезультатРасчета.СписокОшибок, 
						РеглОперация.ДополнительныеСвойства.СписокОшибок);
					
				Иначе
					
					ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
					РезультатРасчета.ТекстОшибки = СокрЛП(РезультатРасчета.ТекстОшибки + Символы.ПС + ТекстОшибки);
					ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
					
				КонецЕсли; 
				
				Возврат РезультатРасчета;
				
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
	РезультатРасчета.Вставить("КоличествоДанных", КоличествоОбработанныхДанных);
	
	Возврат РезультатРасчета;
	
КонецФункции

// Регламентные операции без отмены проведения.
// 
// Возвращаемое значение:
//  Массив из ПеречислениеСсылка.ТипыРегламентныхОпераций- Регламентные операции без отмены проведения
Функция РегламентныеОперацииБезОтменыПроведения()
	
	ОперацииБезОтменыПроведения = Новый Массив;
	
	ОперацииБезОтменыПроведения.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество);
	ОперацииБезОтменыПроведения.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетЗемельногоНалога);
	ОперацииБезОтменыПроведения.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетТранспортногоНалога);
	
	Возврат ОперацииБезОтменыПроведения;
	
КонецФункции

// Возвращает текст запроса определения необходимости расчета долей списания косвенных расходов.
//
// Возвращаемое значение:
// 	ТекстЗапроса - Строка - Текст запроса.
//
Функция ТекстРасчетаДолейСписанияКосвенныхРасходов()
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Ссылка,
	|	ДД.ГоловнаяОрганизация
	|ПОМЕСТИТЬ ОрганизацииИОбособленныеПодразделения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСТЬNULL(ОбособПодр.Ссылка, ДД.Ссылка) КАК Ссылка,
	|		ДД.Ссылка КАК ГоловнаяОрганизация
	|	ИЗ
	|		Справочник.Организации КАК ДД
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОбособПодр
	|		ПО 
	|			ДД.Ссылка = ОбособПодр.ГоловнаяОрганизация
	|			И ДД.Ссылка <> ОбособПодр.Ссылка
	|	
	|	ГДЕ
	|		НЕ ДД.ОбособленноеПодразделение
	|		И ЕСТЬNULL(ОбособПодр.ОбособленноеПодразделение, ИСТИНА)
	|		И ДД.Ссылка В (&СписокОрганизаций)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.Ссылка КАК Ссылка, // Добавим ссылки на сами головные организации
	|		ДД.Ссылка КАК ГоловнаяОрганизация
	|	ИЗ
	|		Справочник.Организации КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОбособПодр
	|		ПО ДД.Ссылка = ОбособПодр.ГоловнаяОрганизация
	|	ГДЕ
	|		НЕ ДД.ОбособленноеПодразделение
	|		И ОбособПодр.ОбособленноеПодразделение
	|		И ДД.Ссылка В (&СписокОрганизаций)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.Ссылка КАК Ссылка, // Добавим ссылки на филиалы
	|		ДД.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|	ИЗ
	|		Справочник.Организации КАК ДД
	|	ГДЕ
	|		ДД.ОбособленноеПодразделение
	|		И ДД.Ссылка В (&СписокОрганизаций)
	|	) КАК ДД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрОрганизации.ГоловнаяОрганизация КАК Организация,
	|	СпрОрганизации.Ссылка КАК ОбособленноеПодразделение
	|ПОМЕСТИТЬ
	|	ВтГоловныеОрганизации
	|ИЗ
	|	Справочник.Организации КАК СпрОрганизации
	|ГДЕ
	|	СпрОрганизации.Ссылка В (&СписокОрганизаций)
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация;
	|
	|ВЫБРАТЬ
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Ссылка
	|ПОМЕСТИТЬ ВтОрганизацииФормированияРезервовПоСомнительнымДолгам
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(&ДатаНачала, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтГоловныеОрганизации КАК ГоловныеОрганизации 
	|	ПО ГоловныеОрганизации.Организация = Т.Организация
	|ГДЕ
	|	Т.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.Нет)
	|	
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Ссылка
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(&ДатаНачала, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтГоловныеОрганизации КАК ГоловныеОрганизации 
	|	ПО ГоловныеОрганизации.Организация = Т.Организация
	|ГДЕ
	|	Т.ФормироватьРезервыПоСомнительнымДолгам
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Ссылка
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(&ДатаНачала, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтГоловныеОрганизации КАК ГоловныеОрганизации 
	|	ПО ГоловныеОрганизации.Организация = Т.Организация
	|ГДЕ
	|	Т.ФормироватьРезервыПоСомнительнымДолгамНУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка
	|ПОМЕСТИТЬ ВТКосвенныеРасходы
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
	|	ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
	|	ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
	|	ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Ссылка
	|ПОМЕСТИТЬ ВТОрганизацииСРасходами
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.ОстаткиИОбороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,,,
	|			Организация В (
	|						ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ОрганизацииИОбособленныеПодразделения.Ссылка КАК Ссылка 
	|						ИЗ
	|							ОрганизацииИОбособленныеПодразделения КАК ОрганизацииИОбособленныеПодразделения)
	|	) КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКосвенныеРасходы КАК ВТКосвенныеРасходы
	|		ПО ДанныеРегистра.СтатьяРасходов = ВТКосвенныеРасходы.Ссылка
	|ГДЕ
	|	(ДанныеРегистра.СуммаРеглНачальныйОстаток 
	|		- ДанныеРегистра.ПостояннаяРазницаНачальныйОстаток
	|		- ДанныеРегистра.ВременнаяРазницаНачальныйОстаток) <> 0
	|	ИЛИ
	|	(ДанныеРегистра.СуммаРеглПриход
	|		- ДанныеРегистра.ПостояннаяРазницаПриход
	|		- ДанныеРегистра.ВременнаяРазницаПриход) <> 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Ссылка КАК Ссылка
	|ИЗ 
	|	ВТОрганизацииСРасходами КАК Организации 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Ссылка КАК Ссылка
	|ИЗ
	|	ВтОрганизацииФормированияРезервовПоСомнительнымДолгам КАК Организации
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Ссылка.ГоловнаяОрганизация
	|ИЗ
	|	ВТОрганизацииСРасходами КАК Организации
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДолиСписанияКосвенныхРасходов КАК ДанныеРегистра
	|		ПО Организации.Ссылка.ГоловнаяОрганизация = ДанныеРегистра.Организация 
	|		И ДанныеРегистра.ПериодРасчета МЕЖДУ &ДатаНачала И &ДатаОкончания
	|ГДЕ
	|	ДанныеРегистра.Организация ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Ссылка.ГоловнаяОрганизация
	|ИЗ
	|	ВтОрганизацииФормированияРезервовПоСомнительнымДолгам КАК Организации
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДолиСписанияКосвенныхРасходов КАК ДанныеРегистра
	|		ПО Организации.Ссылка.ГоловнаяОрганизация = ДанныеРегистра.Организация 
	|		И ДанныеРегистра.ПериодРасчета МЕЖДУ &ДатаНачала И &ДатаОкончания
	|ГДЕ
	|	ДанныеРегистра.Организация ЕСТЬ NULL
	|";
	
КонецФункции

// Метод рассчитывает доли списания косвенных расходов.
//
// Параметры:
//  СписокОрганизаций - Массив - Массив организаций к расчету.
//  Период - Дата - Месяц, в котором производится расчет.
//
// Возвращаемое значение:
//	Перечисления.СостоянияОперацийЗакрытияМесяца - состояние расчета долей.
//
Функция СостояниеРасчетДолейСписанияКосвенныхРасходов(СписокОрганизаций, Период)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстРасчетаДолейСписанияКосвенныхРасходов();
	
	ТипыСубконто = Новый Массив;
	ТипыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ТипыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	ТипыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	
	МассивОрганизаций = ?(ЗначениеЗаполнено(СписокОрганизаций), СписокОрганизаций, Справочники.Организации.ДоступныеОрганизации());
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Период));
	Запрос.УстановитьПараметр("СписокОрганизаций", МассивОрганизаций);
	Запрос.УстановитьПараметр("Граница", Новый Граница(КонецМесяца(Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ТипыСубконто", ТипыСубконто);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если Результат[5].Пустой() Тогда
		Состояние = Перечисления.СостоянияОперацийЗакрытияМесяца.НеТребуется;
	ИначеЕсли НЕ Результат[6].Пустой() Тогда
		Состояние = Перечисления.СостоянияОперацийЗакрытияМесяца.НеВыполнено;
	Иначе
		Состояние = Перечисления.СостоянияОперацийЗакрытияМесяца.ВыполненоУспешно;
	КонецЕсли;
	
	Возврат Состояние;
	
КонецФункции

// Возвращает признак необходимости выполнения указанной операции для обособленного подразделения.
//
Функция ОперацияИспользуетсяДляОбособленногоПодразделения(ТипОперации) Экспорт
	
	Если ТипОперации = Перечисления.ТипыРегламентныхОпераций.ФормированиеФинансовогоРезультата
	 ИЛИ ТипОперации = Перечисления.ТипыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет
	 ИЛИ ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаПрибыль
	 ИЛИ ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетОтложенногоНалога
	 ИЛИ ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетЕНС
	 ИЛИ ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетДолейСписанияКосвенныхРасходов Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                    КАК Период,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	Документ.РегламентнаяОперация КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("НачПериода", НачалоМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("КонПериода", Реквизиты.Период);
	Запрос.УстановитьПараметр("КонГраница", Новый Граница(Реквизиты.Период, ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.РегламентнаяОперация"));
	Запрос.УстановитьПараметр("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	Запрос.УстановитьПараметр("ХозОперацияДляРеестра", Перечисления.ХозяйственныеОперации.РегламентнаяОперация);
	Запрос.УстановитьПараметр("ИспользоватьНачислениеЗарплаты", Константы.ИспользоватьНачислениеЗарплаты.Получить());
	
КонецПроцедуры

// Подготовка параметров выполнения операций документа

Функция ТекстЗапросаРеквизиты()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Дата КАК Период,
	|	РегламентнаяОперация.Организация КАК Организация
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Расчет долей списания косвенных расходов

Функция ПодготовитьДанныеРасчетаДолейСписанияКосвенныхРасходов(СтруктураШапки, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", СтруктураШапки.Ссылка);
	
	Запрос.Текст = ТекстЗапросаРеквизиты();
	Результат    = Запрос.ВыполнитьПакет();
	НомераТаблиц = Новый Структура;
	
	НомераТаблиц.Вставить("ТаблицаРеквизитыРасчетДолей", НомераТаблиц.Количество());
	
	Возврат ТаблицыПроведения(НомераТаблиц, Результат);
	
КонецФункции

// Списание косвенных расходов

Функция ТекстЗапросаСписаниеКосвенныхРасходов(НомераТаблиц)
	
	// Временные таблицы
	НомераТаблиц.Вставить("ВТ_СтатьиРасходов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_СписаниеРасходов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПрочиеРасходы", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатьиРасходов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СтатьиРасходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|
	|ГДЕ
	|	СтатьиРасходов.ВидРасходов В (&ВидыРасходовНормируемые)
	|	И НЕ СтатьиРасходов.ВариантРаспределенияРасходовРегл В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов), 
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&КонДата                               КАК Период,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ПрочиеРасходы.Организация              КАК Организация,
	|	ПрочиеРасходы.Подразделение            КАК Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов           КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов        КАК АналитикаРасходов,
	|	ПрочиеРасходы.СуммаРеглОстаток         КАК СуммаРегл,
	|	ПрочиеРасходы.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазницаОстаток  КАК ВременнаяРазница
	|ПОМЕСТИТЬ СписаниеРасходов
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Остатки(
	|			&Граница,
	|			Организация = &Организация
	|				И СтатьяРасходов В (ВЫБРАТЬ Т.Ссылка ИЗ СтатьиРасходов КАК Т)) КАК ПрочиеРасходы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеРасходов.Период                   КАК Период,
	|	СписаниеРасходов.ХозяйственнаяОперация    КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	СписаниеРасходов.Организация              КАК Организация,
	|	СписаниеРасходов.Подразделение            КАК Подразделение,
	|	СписаниеРасходов.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	СписаниеРасходов.СтатьяРасходов           КАК СтатьяРасходов,
	|	СписаниеРасходов.АналитикаРасходов        КАК АналитикаРасходов,
	|	СписаниеРасходов.СуммаРегл                КАК СуммаРегл,
	|	СписаниеРасходов.ПостояннаяРазница        КАК ПостояннаяРазница,
	|	СписаниеРасходов.ВременнаяРазница         КАК ВременнаяРазница,
	|	НастройкиХозяйственныхОпераций.Ссылка     КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|		ПО СписаниеРасходов.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|ГДЕ
	|	(СписаниеРасходов.СуммаРегл - СписаниеРасходов.ПостояннаяРазница - СписаниеРасходов.ВременнаяРазница) <> 0
	|";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Формирование финансового результата

Функция ПодготовитьПараметрыЗакрытиеСчетов90_91(СтруктураШапки, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос     = Новый Запрос;
	Содержание = НСтр("ru = 'Определение финансовых результатов';
						|en = 'Determine financial results'");
	Запрос.УстановитьПараметр("Ссылка",          СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("КоэффициентЕНВД", НалоговыйУчет.КоэффициентРаспределенияРасходовПоВидамДеятельности(СтруктураШапки.Организация, СтруктураШапки.КонДата));
	Запрос.УстановитьПараметр("Содержание",      Содержание);
	Запрос.УстановитьПараметр("ИспользуетсяРаздельныйУчетПоНалогуНаПрибыль",
		РаздельныйУчетПоНалогуНаПрибыль.ИспользуетсяРаздельныйУчет(СтруктураШапки.Организация, СтруктураШапки.КонДата));
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаЗакрытиеСчетов90_91(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции // ПодготовитьПараметрыЗакрытиеСчетов90_91()

Функция ТекстЗапросаЗакрытиеСчетов90_91(НомераТаблиц)
	
	// Временные таблицы
	НомераТаблиц.Вставить("ТаблицаРеквизитыЗакрытие90_91", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК НачДата,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК КонДата,
	|	&КоэффициентЕНВД КАК КоэффициентЕНВД,
	|	&ИспользуетсяРаздельныйУчетПоНалогуНаПрибыль КАК ИспользуетсяРаздельныйУчетПоНалогуНаПрибыль,
	|	&Содержание КАК Содержание
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции // ТекстЗапросаЗакрытиеСчетов90_91()

Функция ТекстЗапросаОкруглениеНДС(НомераТаблиц)
	
	// Временные таблицы
	НомераТаблиц.Вставить("ТаблицаРеквизитыОкруглениеНДС", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ) КАК НачДата,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ) КАК КонДата,
	|	&Содержание КАК Содержание
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции // ТекстЗапросаОкруглениеНДС()

Функция ПодготовитьПараметрыОкругленияНДС(СтруктураШапки) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос     = Новый Запрос;
	Содержание = НСтр("ru = 'Отклонение при округлениии до рублей';
						|en = 'Variance on rounding up to rubles'");
	Запрос.УстановитьПараметр("Ссылка",          СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("Содержание",      Содержание);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаОкруглениеНДС(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции // ПодготовитьПараметрыОкругленияНДС()

// Списание убытков прошлых лет

Функция ПодготовитьПараметрыСписаниеУбытков(СтруктураШапки, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос     = Новый Запрос;
	Содержание = НСтр("ru = 'Списание убытков прошлых лет';
						|en = 'Debiting of previous years losses'");
	Запрос.УстановитьПараметр("Ссылка",     СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("Содержание", Содержание);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаСписаниеУбытковПрошлыхЛет(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции // ПодготовитьПараметрыСписаниеУбытковПрошлыхЛет()

Функция ТекстЗапросаСписаниеУбытковПрошлыхЛет(НомераТаблиц)
	
	// Временная таблица
	НомераТаблиц.Вставить("ТаблицаРеквизитыСписаниеУбытков", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК НачДата,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК КонДата,
	|	&Содержание КАК Содержание
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции // ТекстЗапросаСписаниеУбытковПрошлыхЛет()

// Расчет налога на прибыль

// Подготовка данных для регл. операции "Расчет налога на прибыль"
// 
// Параметры:
// 	СтруктураШапки - Структура - структура шапки документа "Регламентная операция"
// 	Отказ - Булево -
//
// Возвращаемое значение:
// 	Структура - Описание:
// 		* ТаблицаРеквизитыРасчетНалога - ТаблицаЗначений - содержит:
// 			** Регистратор - ДокументСсылка.РегламентнаяОперация -
//			** Организация - СправочникСсылка.Организации -
//			** Дата        - Дата -
//			** Период      - Дата -
//			** НачалоГода  - Дата -
//			** НачДата     - Дата -
//			** КонДата     - Дата -
//			** РегистрацияВНалоговомОргане - СправочникСсылка.РегистрацииВНалоговомОргане -
//			** КоэффициентЕНВД             - Число -
//			** СтавкаНалогаНаПрибыль       - Число -
//			** Содержание                  - Строка
//
Функция ПодготовитьДанныеРасчетаНалогаНаПрибыль(СтруктураШапки, Отказ) Экспорт
	
#Область ДопПараметрыШапки // Для передачи "наверх!" - в ПроведениеПересчетаОНАиОНОКаждыйМесяц()
	СтруктураШапки.Вставить(
		"ПоддержкаПБУ18",
		УчетнаяПолитика.ПоддержкаПБУ18(СтруктураШапки.Организация, СтруктураШапки.КонДата));
	СтруктураШапки.Вставить(
		"СтавкаНалогаНаПрибыль",
		БухгалтерскийУчетПереопределяемый.ПолучитьСтавкуНалогаНаПрибыль(СтруктураШапки));
#Конецобласти
	
	Запрос = Новый Запрос;
	
	РегистрацияВНалоговомОргане = НалоговыйУчет.РегистрацияОрганизацииВНалоговомОргане(
		СтруктураШапки.Организация,
		СтруктураШапки.КонДата);
	
	КоэффициентЕНВД = НалоговыйУчет.КоэффициентРаспределенияРасходовПоВидамДеятельности(
		СтруктураШапки.Организация,
		СтруктураШапки.КонДата);
	
	Запрос.УстановитьПараметр("Ссылка",                      СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("СтавкаНалогаНаПрибыль",       СтруктураШапки.СтавкаНалогаНаПрибыль);
	Запрос.УстановитьПараметр("КоэффициентЕНВД",             КоэффициентЕНВД);
	Запрос.УстановитьПараметр("Содержание",                  НСтр("ru = 'Налог на прибыль';
																	|en = 'Income tax'"));
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРасчетНалога(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	
	Возврат ТаблицыПроведения(НомераТаблиц, Результат);
	
КонецФункции

Функция ТекстЗапросаРасчетНалога(НомераТаблиц)
	
	// Временные таблицы
	НомераТаблиц.Вставить("ТаблицаРеквизитыРасчетНалога", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Дата,
	|	РегламентнаяОперация.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, ГОД) КАК НачалоГода,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК НачДата,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК КонДата,
	|	&РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	&КоэффициентЕНВД КАК КоэффициентЕНВД,
	|	&СтавкаНалогаНаПрибыль КАК СтавкаНалогаНаПрибыль,
	|	&Содержание КАК Содержание
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Закрытие года

Функция ПодготовитьДанныеЗакрытияГода(СтруктураШапки, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	
	СодержаниеРеформация   = НСтр("ru = 'Реформация баланса';
									|en = 'Balance sheet closing'");;
	СодержаниеЗакрытиеГода = НСтр("ru = 'Закрытие года';
									|en = 'Year-end closing'");
	
	Период                 = СтруктураШапки.Дата;
	СтруктураШапки.Дата    = КонецМесяца(СтруктураШапки.Дата) + 1;
	НоваяСтавка            = БухгалтерскийУчетПереопределяемый.ПолучитьСтавкуНалогаНаПрибыль(СтруктураШапки) * 100;
	
	СтруктураШапки.Дата    = Период;
	СтараяСтавка           = БухгалтерскийУчетПереопределяемый.ПолучитьСтавкуНалогаНаПрибыль(СтруктураШапки) * 100;
	
	Запрос.УстановитьПараметр("Ссылка",                  СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("НоваяСтавка",             НоваяСтавка);
	Запрос.УстановитьПараметр("СтараяСтавка",            СтараяСтавка);
	Запрос.УстановитьПараметр("Предприниматель",         СтруктураШапки.Предприниматель);
	Запрос.УстановитьПараметр("СодержаниеРеформация",    СодержаниеРеформация);
	Запрос.УстановитьПараметр("СодержаниеЗакрытиеГода",  СодержаниеЗакрытиеГода);
	Запрос.УстановитьПараметр("ЗакрытиеГода",            Истина);
	Запрос.УстановитьПараметр("ДоляСписанияТР",          0);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",   Перечисления.ХозяйственныеОперации.ЗакрытиеМесяца);
	Запрос.УстановитьПараметр("НачДата",                 СтруктураШапки.НачДата);
	Запрос.УстановитьПараметр("КонДата",                 СтруктураШапки.КонДата);
	Запрос.УстановитьПараметр("Граница",                 СтруктураШапки.КонГраница);
	Запрос.УстановитьПараметр("Организация",             СтруктураШапки.Организация);
	Запрос.УстановитьПараметр("ВидыРасходовНормируемые", Перечисления.ВидыРасходовНУ.НормируемыеРасходы());
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаЗакрытиеГода(НомераТаблиц)
	             + ТекстЗапросаСписаниеКосвенныхРасходов(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	
	Возврат ТаблицыПроведения(НомераТаблиц, Результат);
	
КонецФункции

Функция ТекстЗапросаЗакрытиеГода(НомераТаблиц)
	
	// Временная таблица
	НомераТаблиц.Вставить("ТаблицаРеквизитыЗакрытиеГода", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, ГОД) КАК НачалоГода,
	|	&НачДата КАК НачДата,
	|	&КонДата КАК КонДата,
	|	&НоваяСтавка КАК НоваяСтавка,
	|	&СтараяСтавка КАК СтараяСтавка,
	|	&Предприниматель КАК Предприниматель,
	|	&СодержаниеРеформация КАК СодержаниеРеформация,
	|	&СодержаниеЗакрытиеГода КАК СодержаниеЗакрытиеГода
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Прочее

Функция ТаблицыПроведения(НомераТаблиц, Результат)
	
	ТаблицыПроведения = Новый Структура;
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		Если НРег(Лев(НомерТаблицы.Ключ, 7)) = "таблица" Тогда
			ТаблицыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицыПроведения;
	
КонецФункции

// Расчет налога на имущество

Функция ПодготовитьПараметрыРасчетИмущественныхНалогов(СтруктураШапки, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;

	Если СтруктураШапки.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		
		НачалоПериода = НачалоГода(СтруктураШапки.НачДата);
		ИмяРегистраРасчетНалогов = "РасчетНалогаНаИмущество";
		
	Иначе
		НачалоПериода = ?(КонецГода(СтруктураШапки.КонДата) = КонецКвартала(СтруктураШапки.КонДата),
						НачалоГода(СтруктураШапки.НачДата),
						НачалоКвартала(СтруктураШапки.НачДата));
						
		Если СтруктураШапки.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
			ИмяРегистраРасчетНалогов = "РасчетТранспортногоНалога";
			
		ИначеЕсли СтруктураШапки.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
			Если НачалоГода(СтруктураШапки.НачДата) < РасчетИмущественныхНалоговКлиентСервер.НачалоПримененияНовогоРасчетаЗемельногоНалога() Тогда
				ИмяРегистраРасчетНалогов = "РасчетЗемельногоНалогаДо2020";
			Иначе
				ИмяРегистраРасчетНалогов = "РасчетЗемельногоНалога";
			КонецЕсли;
			
		КонецЕсли;
			
	КонецЕсли;
	
	Содержание  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Начислен %1 за %2';
			|en = '%1 accrued for %2'"),
		Строка(СтруктураШапки.ВидНалога),
		ПредставлениеПериода(НачалоПериода, СтруктураШапки.КонДата, "ФП = Истина"));
	
	Запрос = Новый Запрос;
		
	Запрос.УстановитьПараметр("Ссылка", СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("Содержание", Содержание);
	Запрос.УстановитьПараметр("ВидНалога", СтруктураШапки.ВидНалога);
	Запрос.УстановитьПараметр("ИмяРегистраРасчетНалогов", ИмяРегистраРасчетНалогов);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРасчетИмущественныхНалогов(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРасчетИмущественныхНалогов(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаРеквизитыРасчетИмущественныхНалогов", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	&ВидНалога КАК ВидНалога,
	|	&Содержание КАК Содержание,
	|	&ИмяРегистраРасчетНалогов КАК ИмяРегистраРасчетНалогов
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

// Расчет курсовых разниц

Процедура РасчетКурсовыхРазниц(ПараметрыРасчета, Отказ) Экспорт
	
	ПериодУчетаКурсовыхРазницНУПо67ФЗ = РеглУчетКлиентСервер.ПериодУчетаКурсовыхРазницНУПо67ФЗ();
	
	ПроводкиДокумента = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
	ПроводкиДокумента.Отбор.Регистратор.Установить(ПараметрыРасчета.Ссылка);
		
	Период = КонецМесяца(ПараметрыРасчета.Дата);
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(ПараметрыРасчета.Организация));
	Запрос.УстановитьПараметр("ГраницаОстатков", Новый Граница(Период, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НаДату", Период);
	Запрос.УстановитьПараметр("НачалоПериодаКорректировки", ПериодУчетаКурсовыхРазницНУПо67ФЗ.Начало);
	Запрос.УстановитьПараметр("КонецПериодаКорректировки", ПараметрыРасчета.НачДата);
	
	ДатаНачалаПрименения67ФЗ = '00010101';
	Если ПараметрыРасчета.Свойство("ДатаНачалаПрименения67ФЗ") Тогда
		ДатаНачалаПрименения67ФЗ = ПараметрыРасчета.ДатаНачалаПрименения67ФЗ;
	Иначе
		НастройкиУП = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаНалогаНаПрибыль", ПараметрыРасчета.Организация, Период);
		Если НастройкиУП <> Неопределено Тогда
			ДатаНачалаПрименения67ФЗ = НастройкиУП.ДатаНезависимогоПризнанияДоходовРасходов;
		КонецЕсли;
	КонецЕсли;
	
	#Область Переход67ФЗ
	
	Переход67ФЗ = ?(ДатаНачалаПрименения67ФЗ = ПараметрыРасчета.НачДата, Истина, Ложь);
	
	Если Переход67ФЗ = Истина Тогда
		
		ПроводкиКорректировки = ПроводкиДокумента.ВыгрузитьКолонки();
		
		КолонкиИсключения = "Сумма, СуммаНУДт, СуммаВРДт, СуммаНУКт, СуммаВРКт, Содержание";
		КолонкиГруппировки = "СчетДт, СубконтоДт1, СубконтоДт2, СубконтоДт3, ВалютаДт, ПодразделениеДт, НаправлениеДеятельностиДт, ВидСубконтоДт1, ВидСубконтоДт2, ВидСубконтоДт3,
			|СчетКт, СубконтоКт1, СубконтоКт2, СубконтоКт3, ВалютаКт, ПодразделениеКт, НаправлениеДеятельностиКт, ВидСубконтоКт1, ВидСубконтоКт2, ВидСубконтоКт3,
			|Период, Активность, Организация";
		
		ИсключаемыеСодержания = Новый Массив();
		ИсключаемыеСодержания.Добавить("Курсовая разница (доходы)");
		ИсключаемыеСодержания.Добавить("Курсовая разница (расходы)");
		
		Запрос.УстановитьПараметр("ИсключаемыеСодержания", ИсключаемыеСодержания);
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконто.СчетДт КАК СчетДт,
		|	ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК СубконтоДт1,
		|	ХозрасчетныйДвиженияССубконто.СубконтоДт2 КАК СубконтоДт2,
		|	ХозрасчетныйДвиженияССубконто.СубконтоДт3 КАК СубконтоДт3,
		|	ХозрасчетныйДвиженияССубконто.СчетКт КАК СчетКт,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК СубконтоКт1,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт2 КАК СубконтоКт2,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт3 КАК СубконтоКт3,
		|	ХозрасчетныйДвиженияССубконто.ВалютаДт КАК ВалютаДт,
		|	ХозрасчетныйДвиженияССубконто.ВалютаКт КАК ВалютаКт,
		|	ХозрасчетныйДвиженияССубконто.ПодразделениеДт КАК ПодразделениеДт,
		|	ХозрасчетныйДвиженияССубконто.ПодразделениеКт КАК ПодразделениеКт,
		|	ХозрасчетныйДвиженияССубконто.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
		|	ХозрасчетныйДвиженияССубконто.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,
		|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.Сумма, 0) КАК Сумма,
		|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.СуммаНУДт, 0) КАК СуммаНУДт,
		|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.СуммаВРДт, 0) КАК СуммаВРДт,
		|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.СуммаНУКт, 0) КАК СуммаНУКт,
		|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.СуммаВРКт, 0) КАК СуммаВРКт,
		|	ХозрасчетныйДвиженияССубконто.Содержание КАК Содержание,
		|	ХозрасчетныйДвиженияССубконто.ВидСубконтоДт1 КАК ВидСубконтоДт1,
		|	ХозрасчетныйДвиженияССубконто.ВидСубконтоДт2 КАК ВидСубконтоДт2,
		|	ХозрасчетныйДвиженияССубконто.ВидСубконтоДт3 КАК ВидСубконтоДт3,
		|	ХозрасчетныйДвиженияССубконто.ВидСубконтоКт1 КАК ВидСубконтоКт1,
		|	ХозрасчетныйДвиженияССубконто.ВидСубконтоКт2 КАК ВидСубконтоКт2,
		|	ХозрасчетныйДвиженияССубконто.ВидСубконтоКт3 КАК ВидСубконтоКт3,
		|	НЕ ХозрасчетныйДвиженияССубконто.СуммаНУДт ЕСТЬ NULL КАК НалоговыйУчетДт,
		|	НЕ ХозрасчетныйДвиженияССубконто.СуммаНУКт ЕСТЬ NULL КАК НалоговыйУчетКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(&НачалоПериодаКорректировки, &КонецПериодаКорректировки,
		|		Организация = &Организация
		|	И ТИПЗНАЧЕНИЯ(Регистратор) = ТИП(Документ.РасчетКурсовыхРазниц)
		|	И (СчетДт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходыИРасходы))
		|	ИЛИ СчетКт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходыИРасходы)))
		|	И (ВидСубконтоДт2 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
		|	И ТИПЗНАЧЕНИЯ(СубконтоДт2) <> ТИП(Справочник.ДоговорыАренды)
		|	ИЛИ ВидСубконтоКт2 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
		|	И ТИПЗНАЧЕНИЯ(СубконтоКт2) <> ТИП(Справочник.ДоговорыАренды)),,) КАК ХозрасчетныйДвиженияССубконто
		|ГДЕ
		|	НЕ ХозрасчетныйДвиженияССубконто.Содержание В (&ИсключаемыеСодержания)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Организация КАК Организация,
		|	СУММА(ВложенныйЗапрос.ОтложенныйДоход) КАК ОтложенныйДоход,
		|	ВложенныйЗапрос.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ВложенныйЗапрос.Подразделение КАК Подразделение
		|ИЗ
		|	(ВЫБРАТЬ
		|		РасчетыСКлиентамиНУОстатки.ОбъектРасчетов.Организация КАК Организация,
		|		РасчетыСКлиентамиНУОстатки.ОбъектРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|		РасчетыСКлиентамиНУОстатки.ОбъектРасчетов.Подразделение КАК Подразделение,
		|		РасчетыСКлиентамиНУОстатки.ОтложенныйДоходОстаток КАК ОтложенныйДоход
		|	ИЗ
		|		РегистрНакопления.РасчетыСКлиентамиНУ.Остатки(&КонецПериодаКорректировки,
		|			ОбъектРасчетов.Организация = &Организация) КАК РасчетыСКлиентамиНУОстатки
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		РасчетыПоФинансовымИнструментамНУОстатки.Договор.Организация,
		|		РасчетыПоФинансовымИнструментамНУОстатки.Договор.НаправлениеДеятельности,
		|		РасчетыПоФинансовымИнструментамНУОстатки.Договор.Подразделение,
		|		РасчетыПоФинансовымИнструментамНУОстатки.ОтложенныйДоходОстаток
		|	ИЗ
		|		РегистрНакопления.РасчетыПоФинансовымИнструментамНУ.Остатки(&КонецПериодаКорректировки,
		|			АналитикаУчетаПоПартнерам.Организация = &Организация) КАК РасчетыПоФинансовымИнструментамНУОстатки
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		РасчетыСПоставщикамиНУОстатки.ОбъектРасчетов.Организация,
		|		РасчетыСПоставщикамиНУОстатки.ОбъектРасчетов.НаправлениеДеятельности,
		|		РасчетыСПоставщикамиНУОстатки.ОбъектРасчетов.Подразделение,
		|		РасчетыСПоставщикамиНУОстатки.ОтложенныйДоходОстаток
		|	ИЗ
		|		РегистрНакопления.РасчетыСПоставщикамиНУ.Остатки(&КонецПериодаКорректировки,
		|			ОбъектРасчетов.Организация = &Организация) КАК РасчетыСПоставщикамиНУОстатки) КАК ВложенныйЗапрос
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Организация,
		|	ВложенныйЗапрос.НаправлениеДеятельности,
		|	ВложенныйЗапрос.Подразделение";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		// Если ранее уже выполнялся переход на старую версию алгоритма по 67-ФЗ, то необходимо отсторнировать все ранее выполненные изменения
		// и привести данные на счетах к тому состоянию, как если бы продолжал применяться алгоритм до перехода на 67-ФЗ
		ВыборкаСторно = РезультатЗапроса[0].Выбрать();
		
		Пока ВыборкаСторно.Следующий() Цикл
			
			ПроводкаСторно = ПроводкиКорректировки.Добавить();

			ЗаполнитьЗначенияСвойств(ПроводкаСторно, ВыборкаСторно, , КолонкиИсключения);
			
			ПроводкаСторно.Период = Период;
			ПроводкаСторно.Активность = Истина;
			ПроводкаСторно.Организация = ПараметрыРасчета.Организация;
			
			Если ВыборкаСторно.НалоговыйУчетДт Тогда
				Если ВыборкаСторно.СуммаНУДт <> 0 Тогда 
					ПроводкаСторно.СуммаНУДт = - ВыборкаСторно.СуммаНУДт;
				КонецЕсли;
				Если ВыборкаСторно.СуммаВРДт <> 0 Тогда 
					ПроводкаСторно.СуммаВРДт = - ВыборкаСторно.СуммаВРДт;
				КонецЕсли; 
				Если ВыборкаСторно.Сумма <> 0 Тогда
					ПроводкаСторно.СуммаНУДт = ПроводкаСторно.СуммаНУДт + ВыборкаСторно.Сумма;
				КонецЕсли;
			КонецЕсли;
			
			Если ВыборкаСторно.НалоговыйУчетКт Тогда
				Если ВыборкаСторно.СуммаНУКт <> 0 Тогда 
					ПроводкаСторно.СуммаНУКт = - ВыборкаСторно.СуммаНУКт;
				КонецЕсли;
				Если ВыборкаСторно.СуммаВРКт <> 0 Тогда 
					ПроводкаСторно.СуммаВРКт = - ВыборкаСторно.СуммаВРКт;
				КонецЕсли;
				Если ВыборкаСторно.Сумма <> 0 Тогда
					ПроводкаСторно.СуммаНУКт = ПроводкаСторно.СуммаНУКт + ВыборкаСторно.Сумма;
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла;
		
		ПроводкиКорректировки.Свернуть(КолонкиГруппировки, КолонкиИсключения);
		
		// Перенесем на 98.КР накопленный отложенный доход
		ВыборкаОтложенныеДоходы = РезультатЗапроса[1].Выбрать();
		Пока ВыборкаОтложенныеДоходы.Следующий() Цикл
			
			ПроводкаОтложенныйДоход = ПроводкиКорректировки.Добавить();
			ПроводкаОтложенныйДоход.СчетДт = ПланыСчетов.Хозрасчетный.ОтложенныеДоходыПоКурсовымРазницам;
			ПроводкаОтложенныйДоход.НаправлениеДеятельностиДт = ВыборкаОтложенныеДоходы.НаправлениеДеятельности;
			ПроводкаОтложенныйДоход.ПодразделениеДт = ВыборкаОтложенныеДоходы.Подразделение;
			ПроводкаОтложенныйДоход.СчетКт = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
			ПроводкаОтложенныйДоход.НаправлениеДеятельностиКт = ВыборкаОтложенныеДоходы.НаправлениеДеятельности;
			ПроводкаОтложенныйДоход.ПодразделениеКт = ВыборкаОтложенныеДоходы.Подразделение;
			ПроводкаОтложенныйДоход.ПодразделениеКт = ВыборкаОтложенныеДоходы.Подразделение;
			ПроводкаОтложенныйДоход.ВидСубконтоКт1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
			ПроводкаОтложенныйДоход.ВидСубконтоКт2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РеализуемыеАктивы;
			ПроводкаОтложенныйДоход.СубконтоКт1 = ПланыВидовХарактеристик.СтатьиДоходов.КурсовыеРазницы;
			ПроводкаОтложенныйДоход.СубконтоКт2 = Перечисления.ТипыЗатратРегл.Прочее;
			ПроводкаОтложенныйДоход.СуммаНУДт = -ВыборкаОтложенныеДоходы.ОтложенныйДоход;
			ПроводкаОтложенныйДоход.СуммаВРДт = ВыборкаОтложенныеДоходы.ОтложенныйДоход;
			ПроводкаОтложенныйДоход.СуммаНУКт = -ВыборкаОтложенныеДоходы.ОтложенныйДоход;
			ПроводкаОтложенныйДоход.СуммаВРКт = ВыборкаОтложенныеДоходы.ОтложенныйДоход;
			
			ПроводкаОтложенныйДоход.Период = Период;
			ПроводкаОтложенныйДоход.Активность = Истина;
			ПроводкаОтложенныйДоход.Период = Период;
			ПроводкаОтложенныйДоход.Организация = ПараметрыРасчета.Организация;
			
		КонецЦикла;
		
		Содержание = НСтр("ru = 'Корректировка налоговой базы при начале независимого признания доходов и расходов';
							|en = 'Tax base adjustment when starting independent income and expense recognition'");
		
		ПроводкиКорректировки.ЗаполнитьЗначения(Содержание, "Содержание");
		
		ПроводкиДокумента.Загрузить(ПроводкиКорректировки);

	КонецЕсли;
	
	#КонецОбласти

	
	Содержание = НСтр("ru = 'Курсовые разницы по данным регламентированного учета';
						|en = 'Exchange differences based on local accounting data'");
	
	ИспользоватьРаздельныйУчетПрибыли = РаздельныйУчетПоНалогуНаПрибыль.ИспользуетсяРаздельныйУчет(
		ПараметрыРасчета.Организация, Период);
	Запрос.Текст = ТекстЗапросаРасчетКурсовыхРазниц(ИспользоватьРаздельныйУчетПрибыли);
	
	НастройкиРеглУчета = РеглУчетСервер.НастройкиУчета(); 
	УправленческийУчетНаПланеСчетовРегл = НастройкиРеглУчета.ДополнительноВедетсяУправленческийУчет;
	ДатаНачалаВеденияУУ = НастройкиРеглУчета.ДатаНачалаВеденияУправленческогоУчета;
	Запрос.УстановитьПараметр("ВестиУУНаПланеСчетов", УправленческийУчетНаПланеСчетовРегл И Период >= ДатаНачалаВеденияУУ);
	Запрос.УстановитьПараметр("ВалютаУпр", Константы.ВалютаУправленческогоУчета.Получить());
	
	СтатьяДДС = Новый Структура("ВидСубконто, Прибыль, Убыток");
	СтатьяДДС.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств;
	СтатьяДДС.Прибыль = Справочники.СтатьиДвиженияДенежныхСредств.КурсовыеРазницыПрибыль;
	СтатьяДДС.Убыток = Справочники.СтатьиДвиженияДенежныхСредств.КурсовыеРазницыУбыток;
	
	КурсоваяРазница = Новый Структура("Ресурс, Сумма");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Проводка = ПроводкиДокумента.Добавить();
		Проводка.Активность = Истина;
		Проводка.Период = Период;
		Проводка.Организация = ПараметрыРасчета.Организация;
		Проводка.Содержание = Содержание;
		
		КурсоваяРазница.Ресурс = "Сумма";
		КурсоваяРазница.Сумма = Выборка.КурсоваяРазница;
		ЗаполнитьПроводку(Проводка, Выборка, КурсоваяРазница, СтатьяДДС);
		
		Если УправленческийУчетНаПланеСчетовРегл Тогда
			
			КурсоваяРазница.Ресурс = "СуммаУУ";
			КурсоваяРазница.Сумма = Выборка.КурсоваяРазницаУУ;
			
			Если Выборка.РазныйЗнакКусовыхРазниц Тогда
				// Добавим новую проводку для отражение курсовой разницы по УУ
				Проводка = ПроводкиДокумента.Добавить();
				Проводка.Активность = Истина;
				Проводка.Период = Период;
				Проводка.Организация = ПараметрыРасчета.Организация;
				
				ЗаполнитьПроводку(Проводка, Выборка, КурсоваяРазница, СтатьяДДС);
			Иначе
				// Заполним данные в текущей проводке
				ЗаполнитьПроводку(Проводка, Выборка, КурсоваяРазница, СтатьяДДС);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;// по валютным остаткам
	
	ПроводкиДокумента.Записать();
	
КонецПроцедуры

Процедура ЗаполнитьПроводку(Проводка, Выборка, КурсоваяРазница, ПараметрыСтатьиДДС = Неопределено)
	
	Перем КорСчет, КорСубконто, КорВидСубконто;
	
	СуммаРазницы = Макс(КурсоваяРазница.Сумма, -КурсоваяРазница.Сумма);
	
	Если КурсоваяРазница.Сумма > 0 Тогда // отразим прибыль
		Счет = "Дт";
		Кор = "Кт";
		КорУчетПоПодразделениям = Выборка.СчетДоходовУчетПоПодразделениям;
		КорУчетПоНаправлениям = Выборка.СчетДоходовУчетПоНаправлениямДеятельности;
		Если Не Выборка.СчетЗабалансовый Тогда
			КорСчет = Выборка.СчетДоходов;
			КорСубконто = Выборка.СтатьяДоходов;
			КорВидСубконто = Выборка.ВидСубконтоДоходыРасходы;
		КонецЕсли;
		СтатьяДДС = ?(ПараметрыСтатьиДДС = Неопределено, Неопределено, ПараметрыСтатьиДДС.Прибыль);
		
	ИначеЕсли КурсоваяРазница.Сумма < 0 Тогда // отразим убытки
		Счет = "Кт";
		Кор = "Дт";
		КорУчетПоПодразделениям = Выборка.СчетРасходовУчетПоПодразделениям;
		КорУчетПоНаправлениям = Выборка.СчетРасходовУчетПоНаправлениямДеятельности;
		Если Не Выборка.СчетЗабалансовый Тогда
			КорСчет = Выборка.СчетРасходов;
			КорСубконто = Выборка.СтатьяРасходов;
			КорВидСубконто = Выборка.ВидСубконтоДоходыРасходы;
		КонецЕсли;
		СтатьяДДС = ?(ПараметрыСтатьиДДС = Неопределено, Неопределено, ПараметрыСтатьиДДС.Убыток);
	Иначе // проводку не заполняем
		Возврат;
	КонецЕсли;
	
	// заполним счет и аналитику возникновения курсовой разницы
	Проводка["Счет"+Счет] = Выборка.Счет;
	Проводка["Валюта"+Счет] = Выборка.Валюта;
	Проводка["Подразделение"+Счет] = Выборка.Подразделение;
	Проводка["НаправлениеДеятельности"+Счет] = Выборка.НаправлениеДеятельности;
	ВидыСубконтоСчета = Выборка.ВидыСубконтоСчета.Выгрузить();
	Для Каждого СтрокаТаблицы Из ВидыСубконтоСчета Цикл
		Если Счет = "Дт" Тогда
			Проводка.СубконтоДт[СтрокаТаблицы.ВидСубконто] = Выборка["Субконто"+СтрокаТаблицы.НомерСтроки];
		Иначе
			Проводка.СубконтоКт[СтрокаТаблицы.ВидСубконто] = Выборка["Субконто"+СтрокаТаблицы.НомерСтроки];
		КонецЕсли;
		Если СтатьяДДС <> Неопределено 
			И СтрокаТаблицы.ВидСубконто = ПараметрыСтатьиДДС.ВидСубконто 
			И СтрокаТаблицы.ТолькоОбороты Тогда
			
			Если Счет = "Дт" Тогда
				Проводка.СубконтоДт[СтрокаТаблицы.ВидСубконто] = СтатьяДДС;
			Иначе
				Проводка.СубконтоКт[СтрокаТаблицы.ВидСубконто] = СтатьяДДС;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	// заполним счет учета прибыли\убытка от курсовой разницы
	Проводка["Счет" + Кор] = КорСчет;
	Если КорУчетПоПодразделениям И Не Выборка.СчетЗабалансовый Тогда
		Проводка["Подразделение"+Кор] = Выборка.Подразделение;
	КонецЕсли;
	Если КорУчетПоНаправлениям И Не Выборка.СчетЗабалансовый Тогда
		Проводка["НаправлениеДеятельности"+Кор] = Выборка.НаправлениеДеятельности;
	КонецЕсли;
	Если ЗначениеЗаполнено(КорВидСубконто) И  КорСчет.ВидыСубконто.Найти(КорВидСубконто, "ВидСубконто") <> Неопределено Тогда
		Если Кор = "Дт" Тогда
			Проводка.СубконтоДт[КорВидСубконто] = КорСубконто;
		Иначе
			Проводка.СубконтоКт[КорВидСубконто] = КорСубконто;
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(Выборка.ВариантНО) Тогда
		Если Кор = "Дт" Тогда
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
				"ВариантыНалогообложенияПрибыли", Выборка.ВариантНО);
		Иначе
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт,
				"ВариантыНалогообложенияПрибыли", Выборка.ВариантНО);
		КонецЕсли;
	КонецЕсли;
	
	Проводка[КурсоваяРазница.Ресурс] = СуммаРазницы;
	Если КурсоваяРазница.Ресурс = "Сумма" Тогда
		Если Выборка.НалоговыйУчет Тогда
			Проводка["СуммаНУ"+Счет] = СуммаРазницы;
		КонецЕсли;
		Если Не Выборка.СчетЗабалансовый Тогда
			Проводка["СуммаНУ"+Кор] = СуммаРазницы;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаРасчетКурсовыхРазниц(ИспользоватьРаздельныйУчетПрибыли)
	
	ТекстыЗапроса = Новый Массив;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Период,
	|	КурсыВалютСрезПоследних.Валюта,
	|	КурсыВалютСрезПоследних.КурсЧислитель,
	|	КурсыВалютСрезПоследних.КурсЗнаменатель
	|ПОМЕСТИТЬ втКурсУУ
	|ИЗ
	|	РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&НаДату, Валюта = &ВалютаУпр И БазоваяВалюта = &ВалютаРегламентированногоУчета) КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Период,
	|	КурсыВалютСрезПоследних.Валюта,
	|	КурсыВалютСрезПоследних.КурсЧислитель,
	|	КурсыВалютСрезПоследних.КурсЗнаменатель
	|ПОМЕСТИТЬ втКурсы
	|ИЗ
	|	РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&НаДату, БазоваяВалюта = &ВалютаРегламентированногоУчета) КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка,
	|	Хозрасчетный.Валютный,
	|	Хозрасчетный.НалоговыйУчет,
	|	Хозрасчетный.ИсключитьСуммуБУИзПереоценкиПоПлануСчетов,
	|	Хозрасчетный.ИсключитьСуммуУУИзПереоценкиПоПлануСчетов
	|ПОМЕСТИТЬ втСчета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Валютный
	|	И НЕ (&ВестиУУНаПланеСчетов И Хозрасчетный.ИсключитьСуммуУУИзПереоценкиПоПлануСчетов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Счет                    КАК Счет,
	|	Остатки.Организация             КАК Организация,
	|	Остатки.Подразделение           КАК Подразделение,
	|	Остатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Остатки.Субконто1               КАК Субконто1,
	|	Остатки.Субконто2               КАК Субконто2,
	|	Остатки.Субконто3               КАК Субконто3,
	|	Остатки.Валюта                  КАК Валюта,
	|	Остатки.ВалютнаяСуммаОстаток    КАК ВалютнаяСуммаОстаток,
	|	Остатки.СуммаОстаток            КАК СуммаБУОстаток,
	|	Остатки.СуммаУУОстаток          КАК СуммаУУОстаток
	|ПОМЕСТИТЬ ВтОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаОстатков,
	|			Счет В (ВЫБРАТЬ Т.Ссылка ИЗ втСчета КАК Т),
	|			,
	|			Организация = &Организация) КАК Остатки
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсДоговора.Договор КАК Договор,
	|	КурсДоговора.КурсЧислитель КАК КурсЧислитель,
	|	КурсДоговора.КурсЗнаменатель КАК КурсЗнаменатель
	|ПОМЕСТИТЬ втКурсыДоговоров
	|ИЗ
	|	РегистрСведений.КурсыВалютРасчетовПоДоговорам.СрезПоследних(&НаДату) КАК КурсДоговора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ДоговорыКонтрагентов.ВариантКурсаДоговора КАК ВариантКурсаДоговора,
	|	ДоговорыКонтрагентов.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(КурсыВалютРасчетовПоДоговорамСрезПоследних.КурсЧислитель, 1) КАК КурсЧислитель,
	|	ЕСТЬNULL(КурсыВалютРасчетовПоДоговорамСрезПоследних.КурсЗнаменатель, 1) КАК КурсЗнаменатель
	|ПОМЕСТИТЬ ВтДоговоры
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыДоговоров КАК КурсыВалютРасчетовПоДоговорамСрезПоследних
	|		ПО ДоговорыКонтрагентов.Ссылка = КурсыВалютРасчетовПоДоговорамСрезПоследних.Договор
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка В
	|			(ВЫБРАТЬ
	|				ВтОстатки.Субконто1
	|			ИЗ
	|				ВтОстатки
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ВтОстатки.Субконто2
	|			ИЗ
	|				ВтОстатки
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ВтОстатки.Субконто3
	|			ИЗ
	|				ВтОстатки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДоговорыМеждуОрганизациями.Ссылка,
	|	ДоговорыМеждуОрганизациями.ВариантКурсаДоговора,
	|	ДоговорыМеждуОрганизациями.ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(КурсыВалютРасчетовПоДоговорамСрезПоследних.КурсЧислитель, 1),
	|	ЕСТЬNULL(КурсыВалютРасчетовПоДоговорамСрезПоследних.КурсЗнаменатель, 1)
	|ИЗ
	|	Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыДоговоров КАК КурсыВалютРасчетовПоДоговорамСрезПоследних
	|		ПО ДоговорыМеждуОрганизациями.Ссылка = КурсыВалютРасчетовПоДоговорамСрезПоследних.Договор
	|ГДЕ
	|	ДоговорыМеждуОрганизациями.Ссылка В
	|			(ВЫБРАТЬ
	|				ВтОстатки.Субконто1
	|			ИЗ
	|				ВтОстатки
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ВтОстатки.Субконто2
	|			ИЗ
	|				ВтОстатки
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ВтОстатки.Субконто3
	|			ИЗ
	|				ВтОстатки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОстатки.Счет КАК Счет,
	|	ВтОстатки.Организация КАК Организация,
	|	ВтОстатки.Подразделение КАК Подразделение,
	|	ВтОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтОстатки.Субконто1 КАК Субконто1,
	|	ВтОстатки.Субконто2 КАК Субконто2,
	|	ВтОстатки.Субконто3 КАК Субконто3,
	|	ВтОстатки.Валюта КАК Валюта,
	|	ВтОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСуммаОстаток,
	|	ВтОстатки.СуммаБУОстаток КАК СуммаБУОстаток,
	|	ВтОстатки.СуммаУУОстаток КАК СуммаУУОстаток,
	|	ЕСТЬNULL(ЕСТЬNULL(ВтДоговоры1.ВариантКурсаДоговора, ВтДоговоры2.ВариантКурсаДоговора), ЕСТЬNULL(ВтДоговоры3.ВариантКурсаДоговора, ЗНАЧЕНИЕ(Перечисление.ВариантыКурсаДоговора.Переменный))) КАК ВариантКурсаДоговора,
	|	ЕСТЬNULL(ЕСТЬNULL(ВтДоговоры1.КурсЧислитель, ВтДоговоры2.КурсЧислитель), ЕСТЬNULL(ВтДоговоры3.КурсЧислитель, 1)) КАК КурсЧислитель,
	|	ЕСТЬNULL(ЕСТЬNULL(ВтДоговоры1.КурсЗнаменатель, ВтДоговоры2.КурсЗнаменатель), ЕСТЬNULL(ВтДоговоры3.КурсЗнаменатель, 1)) КАК КурсЗнаменатель,
	|	ЕСТЬNULL(ЕСТЬNULL(ВтДоговоры1.ВалютаВзаиморасчетов, ВтДоговоры2.ВалютаВзаиморасчетов), ЕСТЬNULL(ВтДоговоры3.ВалютаВзаиморасчетов, НЕОПРЕДЕЛЕНО)) КАК ВалютаВзаиморасчетов
	|ПОМЕСТИТЬ ВтОстаткиСКурсомДоговора
	|ИЗ
	|	ВтОстатки КАК ВтОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДоговоры КАК ВтДоговоры1
	|		ПО ВтОстатки.Субконто1 = ВтДоговоры1.Договор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДоговоры КАК ВтДоговоры2
	|		ПО ВтОстатки.Субконто2 = ВтДоговоры2.Договор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДоговоры КАК ВтДоговоры3
	|		ПО ВтОстатки.Субконто3 = ВтДоговоры3.Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОстаткиСКурсомДоговора.Счет КАК Счет,
	|	ВтОстаткиСКурсомДоговора.Организация КАК Организация,
	|	ВтОстаткиСКурсомДоговора.Подразделение КАК Подразделение,
	|	ВтОстаткиСКурсомДоговора.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтОстаткиСКурсомДоговора.Субконто1 КАК Субконто1,
	|	ВтОстаткиСКурсомДоговора.Субконто2 КАК Субконто2,
	|	ВтОстаткиСКурсомДоговора.Субконто3 КАК Субконто3,
	|	ВтОстаткиСКурсомДоговора.Валюта КАК Валюта,
	|	ВтОстаткиСКурсомДоговора.ВалютнаяСуммаОстаток КАК ВалютнаяСуммаОстаток,
	|	ВтОстаткиСКурсомДоговора.СуммаБУОстаток КАК СуммаБУОстаток,
	|	ВтОстаткиСКурсомДоговора.СуммаУУОстаток КАК СуммаУУОстаток,
	|	ВтОстаткиСКурсомДоговора.ВариантКурсаДоговора КАК ВариантКурсаДоговора,
	|	ВЫБОР
	|		КОГДА ВтОстаткиСКурсомДоговора.ВариантКурсаДоговора = ЗНАЧЕНИЕ(Перечисление.ВариантыКурсаДоговора.УстановленныйВДоговоре)
	|				И ВтОстаткиСКурсомДоговора.Валюта = ВтОстаткиСКурсомДоговора.ВалютаВзаиморасчетов
	|			ТОГДА ВтОстаткиСКурсомДоговора.КурсЧислитель
	|		ИНАЧЕ втКурсы.КурсЧислитель
	|	КОНЕЦ КАК КурсЧислитель,
	|	ВЫБОР
	|		КОГДА ВтОстаткиСКурсомДоговора.ВариантКурсаДоговора = ЗНАЧЕНИЕ(Перечисление.ВариантыКурсаДоговора.УстановленныйВДоговоре)
	|				И ВтОстаткиСКурсомДоговора.Валюта = ВтОстаткиСКурсомДоговора.ВалютаВзаиморасчетов
	|			ТОГДА ВтОстаткиСКурсомДоговора.КурсЗнаменатель
	|		ИНАЧЕ втКурсы.КурсЗнаменатель
	|	КОНЕЦ КАК КурсЗнаменатель,
	|	ВЫБОР
	|		КОГДА ВтОстаткиСКурсомДоговора.ВариантКурсаДоговора = ЗНАЧЕНИЕ(Перечисление.ВариантыКурсаДоговора.УстановленныйВДоговоре)
	|				И &ВалютаУпр = ВтОстаткиСКурсомДоговора.ВалютаВзаиморасчетов
	|			ТОГДА ВтОстаткиСКурсомДоговора.КурсЧислитель
	|		ИНАЧЕ втКурсУУ.КурсЧислитель
	|	КОНЕЦ КАК КурсЧислительУУ,
	|	ВЫБОР
	|		КОГДА ВтОстаткиСКурсомДоговора.ВариантКурсаДоговора = ЗНАЧЕНИЕ(Перечисление.ВариантыКурсаДоговора.УстановленныйВДоговоре)
	|				И &ВалютаУпр = ВтОстаткиСКурсомДоговора.ВалютаВзаиморасчетов
	|			ТОГДА ВтОстаткиСКурсомДоговора.КурсЗнаменатель
	|		ИНАЧЕ втКурсУУ.КурсЗнаменатель
	|	КОНЕЦ КАК КурсЗнаменательУУ
	|ПОМЕСТИТЬ ВтОстаткиСКурсами
	|ИЗ
	|	ВтОстаткиСКурсомДоговора КАК ВтОстаткиСКурсомДоговора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКурсы КАК втКурсы
	|		ПО ВтОстаткиСКурсомДоговора.Валюта = втКурсы.Валюта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКурсУУ КАК втКурсУУ
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВтОстаткиСКурсомДоговора.ВариантКурсаДоговора <> ЗНАЧЕНИЕ(Перечисление.ВариантыКурсаДоговора.ФиксированныйНаДатуОтгрузки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&НаДату                          КАК Период,
	|	Данные.Счет                      КАК Счет,
	|	Данные.Организация               КАК Организация,
	|	Данные.Подразделение             КАК Подразделение,
	|	Данные.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	Данные.Субконто1                 КАК Субконто1,
	|	Данные.Субконто2                 КАК Субконто2,
	|	Данные.Субконто3                 КАК Субконто3,
	|	Данные.Валюта                    КАК Валюта,
	|	Данные.ОстатокВалюты             КАК ОстатокВалюты,
	|	
	|	СУММА(Данные.ОстатокРегл)        КАК ОстатокРегл,
	|	СУММА(Данные.ОстатокПоКурсу)     КАК ОстатокПоКурсу,
	|	СУММА(Данные.АбсолютнаяРазница)  КАК АбсолютнаяРазница,
	|	СУММА(Данные.КурсоваяРазница)    КАК КурсоваяРазница,
	|	
	|	СУММА(Данные.ОстатокПоКурсуУУ)    КАК ОстатокПоКурсуУУ,
	|	СУММА(Данные.АбсолютнаяРазницаУУ) КАК АбсолютнаяРазницаУУ,
	|	СУММА(Данные.КурсоваяРазницаУУ)   КАК КурсоваяРазницаУУ
	|ПОМЕСТИТЬ втКурсовыеРазницы
	|ИЗ
	|	(ВЫБРАТЬ
	|		Остатки.Счет,
	|		Остатки.Организация,
	|		Остатки.Подразделение,
	|		Остатки.НаправлениеДеятельности,
	|		Остатки.Субконто1,
	|		Остатки.Субконто2,
	|		Остатки.Субконто3,
	|		Остатки.Валюта,
	|		Остатки.ВалютнаяСуммаОстаток КАК ОстатокВалюты,
	|		
	|		Остатки.СуммаБУОстаток КАК ОстатокРегл,
	|		Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель КАК ОстатокПоКурсу,
	|		Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель - Остатки.СуммаБУОстаток КАК АбсолютнаяРазница,
	|		ВЫРАЗИТЬ(Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель КАК ЧИСЛО(31,2)) - Остатки.СуммаБУОстаток КАК КурсоваяРазница,
	|		
	|		0 КАК ОстатокПоКурсуУУ,
	|		0 КАК АбсолютнаяРазницаУУ,
	|		0 КАК КурсоваяРазницаУУ
	|	
	|	ИЗ
	|		ВтОстаткиСКурсами КАК Остатки
	|	ГДЕ
	|		НЕ Остатки.Счет.ИсключитьСуммуБУИзПереоценкиПоПлануСчетов
	|		И ВЫРАЗИТЬ(Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель КАК ЧИСЛО(31,2)) <> Остатки.СуммаБУОстаток
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.Счет,
	|		Остатки.Организация,
	|		Остатки.Подразделение,
	|		Остатки.НаправлениеДеятельности,
	|		Остатки.Субконто1,
	|		Остатки.Субконто2,
	|		Остатки.Субконто3,
	|		Остатки.Валюта,
	|		Остатки.ВалютнаяСуммаОстаток КАК ОстатокВалюты,
	|		
	|		0 КАК ОстатокРегл,
	|		0 КАК ОстатокПоКурсу,
	|		0 КАК АбсолютнаяРазница,
	|		0 КАК КурсоваяРазница,
	|		
	|		Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель / Остатки.КурсЧислительУУ * Остатки.КурсЗнаменательУУ КАК ОстатокПоКурсуУУ,
	|		Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель / Остатки.КурсЧислительУУ * Остатки.КурсЗнаменательУУ - Остатки.СуммаУУОстаток КАК АбсолютнаяРазницаУУ,
	|		ВЫРАЗИТЬ(Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель / Остатки.КурсЧислительУУ * Остатки.КурсЗнаменательУУ КАК ЧИСЛО(31,2)) - Остатки.СуммаУУОстаток КАК КурсоваяРазницаУУ
	|	
	|	ИЗ
	|		ВтОстаткиСКурсами КАК Остатки
	|	ГДЕ
	|		&ВестиУУНаПланеСчетов
	|		И НЕ Остатки.Счет.ИсключитьСуммуУУИзПереоценкиПоПлануСчетов
	|		И ВЫРАЗИТЬ(Остатки.ВалютнаяСуммаОстаток * Остатки.КурсЧислитель / Остатки.КурсЗнаменатель / Остатки.КурсЧислительУУ * Остатки.КурсЗнаменательУУ КАК ЧИСЛО(31,2)) <> Остатки.СуммаУУОстаток
	|	) КАК Данные
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.Счет,
	|	Данные.Организация,
	|	Данные.Подразделение,
	|	Данные.НаправлениеДеятельности,
	|	Данные.Субконто1,
	|	Данные.Субконто2,
	|	Данные.Субконто3,
	|	Данные.Валюта,
	|	Данные.ОстатокВалюты";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	#Область РаздельныйУчет_НастройкиНалогообложенияПрибыли
	Если ИспользоватьРаздельныйУчетПрибыли Тогда
		ПараметрыПолученияНалогообложенияПрибыли = РаздельныйУчетПоНалогуНаПрибыль.НовыйПараметрыПолученияТаблицыНастроекНалогообложенияПрибыли();
		ПараметрыПолученияНалогообложенияПрибыли.ИмяТаблицы = "втКурсовыеРазницы";
		ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_Период = "Период";
		ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_Организация = "Организация";
		ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_Подразделение = "Подразделение";
		ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_НаправлениеДеятельности = "НаправлениеДеятельности";
		ТекстыЗапроса.Добавить(РаздельныйУчетПоНалогуНаПрибыль.ТекстЗапроса_НастройкиНалогообложенияПрибыли(ПараметрыПолученияНалогообложенияПрибыли));
	Иначе
		ТекстыЗапроса.Добавить(РаздельныйУчетПоНалогуНаПрибыль.ПолучитьПустуюТаблицуНастройкиНалогообложенияПрибыли());
	КонецЕсли;
	#КонецОбласти
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Данные.Счет                      КАК Счет,
	|	Данные.Организация               КАК Организация,
	|	Данные.Подразделение             КАК Подразделение,
	|	Данные.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	Данные.Субконто1                 КАК Субконто1,
	|	Данные.Субконто2                 КАК Субконто2,
	|	Данные.Субконто3                 КАК Субконто3,
	|	Данные.Валюта                    КАК Валюта,
	|	Данные.ОстатокВалюты             КАК ОстатокВалюты,
	|	
	|	Данные.ОстатокРегл               КАК ОстатокРегл,
	|	Данные.ОстатокПоКурсу            КАК ОстатокПоКурсу,
	|	Данные.АбсолютнаяРазница         КАК АбсолютнаяРазница,
	|	Данные.КурсоваяРазница           КАК КурсоваяРазница,
	|	
	|	Данные.ОстатокПоКурсуУУ          КАК ОстатокПоКурсуУУ,
	|	Данные.АбсолютнаяРазницаУУ       КАК АбсолютнаяРазницаУУ,
	|	Данные.КурсоваяРазницаУУ         КАК КурсоваяРазницаУУ,
	|	
	|	ВЫБОР 
	|		КОГДА Данные.КурсоваяРазница < 0 И Данные.КурсоваяРазницаУУ > 0 
	|			ТОГДА ИСТИНА
	|		КОГДА Данные.КурсоваяРазница > 0 И Данные.КурсоваяРазницаУУ < 0 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                            КАК РазныйЗнакКусовыхРазниц, 
	|	
	|	ЕСТЬNULL(НастройкиПоАналитикеДоходов.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходы)) КАК СчетДоходов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.КурсовыеРазницы) КАК СтатьяДоходов,
	|	
	|	ЕСТЬNULL(НастройкиПоАналитикеРасходов.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы)) КАК СчетРасходов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) КАК СтатьяРасходов,
	|	
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИрасходы) КАК ВидСубконтоДоходыРасходы,
	|	
	|	ЕСТЬNULL(ТаблицаНалогообложенияПрибыли.ВариантНалогообложенияПрибыли, ЗНАЧЕНИЕ(Справочник.ВариантыНалогообложенияПрибыли.ПустаяСсылка)) КАК ВариантНО
	|
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	втКурсовыеРазницы КАК Данные
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК КурсовыеРазницыРасходов
	|	ПО
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) = КурсовыеРазницыРасходов.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиДоходов КАК КурсовыеРазницыДоходов
	|	ПО
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.КурсовыеРазницы) = КурсовыеРазницыДоходов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоАналитикеРасходов
	|	ПО 
	|		НастройкиПоАналитикеРасходов.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|		И НастройкиПоАналитикеРасходов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И НастройкиПоАналитикеРасходов.АналитикаУчета = КурсовыеРазницыРасходов.ГруппаФинансовогоУчетаРегл
	|		И НастройкиПоАналитикеРасходов.МестоУчета = НЕОПРЕДЕЛЕНО
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоАналитикеДоходов
	|	ПО 
	|		НастройкиПоАналитикеДоходов.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы)
	|		И НастройкиПоАналитикеДоходов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И НастройкиПоАналитикеДоходов.АналитикаУчета = КурсовыеРазницыДоходов.ГруппаФинансовогоУчета
	|		И НастройкиПоАналитикеДоходов.МестоУчета = НЕОПРЕДЕЛЕНО
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РаздельныйУчет_НастройкиНалогообложенияПрибыли КАК ТаблицаНалогообложенияПрибыли
	|	ПО 
	|		ТаблицаНалогообложенияПрибыли.Период = Данные.Период
	|		И ТаблицаНалогообложенияПрибыли.Организация = Данные.Организация
	|		И ТаблицаНалогообложенияПрибыли.Подразделение = Данные.Подразделение
	|		И ТаблицаНалогообложенияПрибыли.НаправлениеДеятельности = Данные.НаправлениеДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Счет                      КАК Счет,
	|	Данные.Счет.ВидыСубконто         КАК ВидыСубконтоСчета,
	|	Данные.Счет.Валютный             КАК СчетВалютный,
	|	Данные.Счет.Забалансовый         КАК СчетЗабалансовый,
	|	Данные.Счет.НалоговыйУчет        КАК НалоговыйУчет,
	|	Данные.Организация               КАК Организация,
	|	Данные.Подразделение             КАК Подразделение,
	|	Данные.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	Данные.Субконто1                 КАК Субконто1,
	|	Данные.Субконто2                 КАК Субконто2,
	|	Данные.Субконто3                 КАК Субконто3,
	|	Данные.Валюта                    КАК Валюта,
	|	Данные.ОстатокВалюты             КАК ОстатокВалюты,
	|	
	|	Данные.ОстатокРегл               КАК ОстатокРегл,
	|	Данные.ОстатокПоКурсу            КАК ОстатокПоКурсу,
	|	Данные.АбсолютнаяРазница         КАК АбсолютнаяРазница,
	|	Данные.КурсоваяРазница           КАК КурсоваяРазница,
	|	
	|	Данные.ОстатокПоКурсуУУ          КАК ОстатокПоКурсуУУ,
	|	Данные.АбсолютнаяРазницаУУ       КАК АбсолютнаяРазницаУУ,
	|	Данные.КурсоваяРазницаУУ         КАК КурсоваяРазницаУУ,
	|	
	|	Данные.РазныйЗнакКусовыхРазниц   КАК РазныйЗнакКусовыхРазниц, 
	|	
	|	Данные.СчетДоходов КАК СчетДоходов,
	|	Данные.СчетДоходов.УчетПоПодразделениям КАК СчетДоходовУчетПоПодразделениям,
	|	Данные.СчетДоходов.УчетПоНаправлениямДеятельности КАК СчетДоходовУчетПоНаправлениямДеятельности,
	|	Данные.СтатьяДоходов КАК СтатьяДоходов,
	|	
	|	Данные.СчетРасходов КАК СчетРасходов,
	|	Данные.СчетРасходов.УчетПоПодразделениям КАК СчетРасходовУчетПоПодразделениям,
	|	Данные.СчетРасходов.УчетПоНаправлениямДеятельности КАК СчетРасходовУчетПоНаправлениямДеятельности,
	|	Данные.СтатьяРасходов КАК СтатьяРасходов,
	|	
	|	Данные.ВидСубконтоДоходыРасходы КАК ВидСубконтоДоходыРасходы,
	|	
	|	Данные.ВариантНО КАК ВариантНО
	|
	|ИЗ
	|	втДанные КАК Данные
	|";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Возврат СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецФункции

Процедура РасчетКурсовыхРазницФО(ПараметрыРасчета, Отказ) Экспорт
	
	НастройкиРеглУчета = РеглУчетСервер.НастройкиУчета();
	
	Если НЕ НастройкиРеглУчета.ДополнительноВедетсяУчетВВалютеФинОтчетности Тогда
		Возврат;
	КонецЕсли;
	
	ВалютаРегламентированногоУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(ПараметрыРасчета.Организация);
	Если Константы.ИсточникСуммыДляПересчетаВВалютуФинОтчетности.Получить() = Перечисления.ИсточникиСуммыДляПересчетаВВалютуФинОтчетности.БУ Тогда
		ТекущаяВалюта = ВалютаРегламентированногоУчета;
		ПолеИсточника = "Остатки.СуммаОстаток";
	ИначеЕсли Константы.ИсточникСуммыДляПересчетаВВалютуФинОтчетности.Получить() = Перечисления.ИсточникиСуммыДляПересчетаВВалютуФинОтчетности.УУ Тогда
		ТекущаяВалюта = Константы.ВалютаУправленческогоУчета.Получить();
		ПолеИсточника = "Остатки.СуммаУУОстаток";
	Иначе
		Возврат;
	КонецЕсли;
	НоваяВалюта = НастройкиРеглУчета.ВалютаФинОтчетности;
	Период = КонецМесяца(ПараметрыРасчета.Дата);
	КоэффициентПересчетаВалютыФО = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
										ТекущаяВалюта, НоваяВалюта, Период, ВалютаРегламентированногоУчета);
	
	ИспользоватьРаздельныйУчетПрибыли = РаздельныйУчетПоНалогуНаПрибыль.ИспользуетсяРаздельныйУчет(
		ПараметрыРасчета.Организация, Период);
	ТекстЗапроса = ТекстЗапросаРасчетКурсовыхРазницФО(ИспользоватьРаздельныйУчетПрибыли);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИсточникДляПересчета", ПолеИсточника);
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ГраницаОстатков", Новый Граница(Период, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НаДату", Период);
	Запрос.УстановитьПараметр("КоэффициентПересчета", КоэффициентПересчетаВалютыФО);
	
	ПроводкиДокумента = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
	ПроводкиДокумента.Отбор.Регистратор.Установить(ПараметрыРасчета.Ссылка);
	
	КурсоваяРазница = Новый Структура("Ресурс, Сумма");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Проводка = ПроводкиДокумента.Добавить();
		Проводка.Активность = Истина;
		Проводка.Период = Период;
		Проводка.Организация = ПараметрыРасчета.Организация;
		
		КурсоваяРазница.Ресурс = "СуммаФО";
		КурсоваяРазница.Сумма = Выборка.КурсоваяРазница;
		ЗаполнитьПроводку(Проводка, Выборка, КурсоваяРазница);
		ДебетКредит = ?(Проводка.СчетДт = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД Или Проводка.СчетДт.Пустая(), "Дт", "Кт");
		Проводка["Подразделение"+ДебетКредит] = Неопределено;
		Проводка["НаправлениеДеятельности"+ДебетКредит] = Неопределено;
		
	КонецЦикла;// по валютным остаткам
	
	ПроводкиДокумента.Записать();
	
КонецПроцедуры

Функция ТекстЗапросаРасчетКурсовыхРазницФО(ИспользоватьРаздельныйУчетПрибыли)
	
	ТекстыЗапроса = Новый Массив;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&НаДату КАК Период,
	|	Остатки.Счет,
	|	Остатки.Организация,
	|	Остатки.Валюта,
	|	Остатки.Подразделение,
	|	Остатки.НаправлениеДеятельности,
	|	Остатки.Счет.Валютный КАК СчетВалютный,
	|	Остатки.Счет.Забалансовый КАК СчетЗабалансовый,
	|	Остатки.Счет.НалоговыйУчет КАК НалоговыйУчет,
	|	Остатки.Субконто1,
	|	Остатки.Субконто2,
	|	Остатки.Субконто3,
	|
	|	Остатки.ВалютнаяСуммаОстаток КАК ОстатокВалюты,
	|	Остатки.СуммаОстаток КАК ОстатокРегл,
	|	Остатки.СуммаУУОстаток КАК ОстатокУпр,
	|	Остатки.СуммаФООстаток КАК ОстатокФО,
	|	&ИсточникДляПересчета * &КоэффициентПересчета КАК ОстатокПоКурсу,
	|	&ИсточникДляПересчета * &КоэффициентПересчета - Остатки.СуммаФООстаток КАК АбсолютнаяРазница,
	|	(ВЫРАЗИТЬ(&ИсточникДляПересчета * &КоэффициентПересчета КАК ЧИСЛО(31,2))) - Остатки.СуммаФООстаток КАК КурсоваяРазница,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД) КАК СчетДоходов,
	|	ЛОЖЬ КАК СчетДоходовУчетПоПодразделениям,
	|	ЛОЖЬ КАК СчетДоходовУчетПоНаправлениямДеятельности,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД) КАК СчетРасходов,
	|	ЛОЖЬ КАК СчетРасходовУчетПоПодразделениям,
	|	ЛОЖЬ КАК СчетРасходовУчетПоНаправлениямДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ПрибылиИУбытки.КурсовыеРазницыОтПересчетаВВалютуФО) КАК СтатьяДоходов,
	|	ЗНАЧЕНИЕ(Перечисление.ПрибылиИУбытки.КурсовыеРазницыОтПересчетаВВалютуФО) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрибылиИУбытки) КАК ВидСубконтоДоходыРасходы
	|	
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ГраницаОстатков,
	|		НЕ Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибылиИУбытки)),
	|		,
	|		Организация = &Организация) КАК Остатки
	|ГДЕ
	|	(ВЫРАЗИТЬ(&ИсточникДляПересчета * &КоэффициентПересчета КАК ЧИСЛО(31,2))) <> Остатки.СуммаФООстаток";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	#Область РаздельныйУчет_НастройкиНалогообложенияПрибыли
	Если ИспользоватьРаздельныйУчетПрибыли Тогда
		ПараметрыПолученияНалогообложенияПрибыли = РаздельныйУчетПоНалогуНаПрибыль.НовыйПараметрыПолученияТаблицыНастроекНалогообложенияПрибыли();
		ПараметрыПолученияНалогообложенияПрибыли.ИмяТаблицы = "ТаблицаДвижений";
		ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_Период = "Период";
		ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_Организация = "Организация";
		ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_Подразделение = "Подразделение";
		ПараметрыПолученияНалогообложенияПрибыли.ИмяПоля_НаправлениеДеятельности = "НаправлениеДеятельности";
		ТекстыЗапроса.Добавить(РаздельныйУчетПоНалогуНаПрибыль.ТекстЗапроса_НастройкиНалогообложенияПрибыли(ПараметрыПолученияНалогообложенияПрибыли));
	Иначе
		ТекстыЗапроса.Добавить(РаздельныйУчетПоНалогуНаПрибыль.ПолучитьПустуюТаблицуНастройкиНалогообложенияПрибыли());
	КонецЕсли;
	#КонецОбласти
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДвижений.Период КАК Период,
	|	ТаблицаДвижений.Счет,
	|	ТаблицаДвижений.Организация,
	|	ТаблицаДвижений.Валюта,
	|	ТаблицаДвижений.Подразделение,
	|	ТаблицаДвижений.НаправлениеДеятельности,
	|	ТаблицаДвижений.Счет.ВидыСубконто КАК ВидыСубконтоСчета,
	|	ТаблицаДвижений.СчетВалютный КАК СчетВалютный,
	|	ТаблицаДвижений.СчетЗабалансовый КАК СчетЗабалансовый,
	|	ТаблицаДвижений.НалоговыйУчет КАК НалоговыйУчет,
	|	ТаблицаДвижений.Субконто1,
	|	ТаблицаДвижений.Субконто2,
	|	ТаблицаДвижений.Субконто3,
	|
	|	ТаблицаДвижений.ОстатокВалюты КАК ОстатокВалюты,
	|	ТаблицаДвижений.ОстатокРегл КАК ОстатокРегл,
	|	ТаблицаДвижений.ОстатокУпр КАК ОстатокУпр,
	|	ТаблицаДвижений.ОстатокФО КАК ОстатокФО,
	|	ТаблицаДвижений.ОстатокПоКурсу КАК ОстатокПоКурсу,
	|	ТаблицаДвижений.АбсолютнаяРазница КАК АбсолютнаяРазница,
	|	ТаблицаДвижений.КурсоваяРазница КАК КурсоваяРазница,
	|
	|	ТаблицаДвижений.СчетДоходов КАК СчетДоходов,
	|	ТаблицаДвижений.СчетДоходовУчетПоПодразделениям КАК СчетДоходовУчетПоПодразделениям,
	|	ТаблицаДвижений.СчетДоходовУчетПоНаправлениямДеятельности КАК СчетДоходовУчетПоНаправлениямДеятельности,
	|	ТаблицаДвижений.СчетРасходов КАК СчетРасходов,
	|	ТаблицаДвижений.СчетРасходовУчетПоПодразделениям КАК СчетРасходовУчетПоПодразделениям,
	|	ТаблицаДвижений.СчетРасходовУчетПоНаправлениямДеятельности КАК СчетРасходовУчетПоНаправлениямДеятельности,
	|	ТаблицаДвижений.СтатьяДоходов КАК СтатьяДоходов,
	|	ТаблицаДвижений.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаДвижений.ВидСубконтоДоходыРасходы КАК ВидСубконтоДоходыРасходы,
	|	ЕСТЬNULL(ТаблицаНалогообложенияПрибыли.ВариантНалогообложенияПрибыли, ЗНАЧЕНИЕ(Справочник.ВариантыНалогообложенияПрибыли.ПустаяСсылка)) КАК ВариантНО
	|	
	|ИЗ
	|	ТаблицаДвижений КАК ТаблицаДвижений
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РаздельныйУчет_НастройкиНалогообложенияПрибыли КАК ТаблицаНалогообложенияПрибыли
	|	ПО 
	|		ТаблицаНалогообложенияПрибыли.Период = ТаблицаДвижений.Период
	|		И ТаблицаНалогообложенияПрибыли.Организация = ТаблицаДвижений.Организация
	|		И ТаблицаНалогообложенияПрибыли.Подразделение = ТаблицаДвижений.Подразделение
	|		И ТаблицаНалогообложенияПрибыли.НаправлениеДеятельности = ТаблицаДвижений.НаправлениеДеятельности
	|
	|";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Возврат СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецФункции

Процедура РасчетКорректировкаНалоговойБазыПоКурсовымРазницам(ПараметрыРасчета, Отказ) Экспорт
	
	// Корректировка налоговой базы по Письму Минфина от 22.12.2022 03-03-10/126074
	
	ПериодУчетаКурсовыхРазницНУПо67ФЗ = РеглУчетКлиентСервер.ПериодУчетаКурсовыхРазницНУПо67ФЗ();
	
	Период = КонецМесяца(ПараметрыРасчета.Дата);
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(ПараметрыРасчета.Организация));
	Запрос.УстановитьПараметр("ГраницаОстатков", Новый Граница(Период, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НачПериода", НачалоГода(Период));
	Запрос.УстановитьПараметр("КонПериода", Период);
	
	ДатаНачалаПрименения67ФЗ = '00010101';
	Если ПараметрыРасчета.Свойство("ДатаНачалаПрименения67ФЗ") Тогда
		ДатаНачалаПрименения67ФЗ = ПараметрыРасчета.ДатаНачалаПрименения67ФЗ;
	Иначе
		НастройкиУП = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаНалогаНаПрибыль", ПараметрыРасчета.Организация, Период);
		Если НастройкиУП <> Неопределено Тогда
			ДатаНачалаПрименения67ФЗ = НастройкиУП.ДатаНезависимогоПризнанияДоходовРасходов;
		КонецЕсли;
	КонецЕсли;

	Если ДатаНачалаПрименения67ФЗ > '00010101' И Период = '20221231235959' Тогда
		
		Попытка
			
			Запрос.Текст = ТекстЗапросаАналитикиКорректировкиБазы();
			
			РезультатЗапроса = Запрос.ВыполнитьПакет();
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСКлиентамиНУ");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.ИсточникДанных = РезультатЗапроса[3];
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаПоПартнерам", "АналитикаУчетаПоПартнерам");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОбъектРасчетов", "ОбъектРасчетов");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Валюта", "Валюта");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("РасчетныйДокумент", "РасчетныйДокумент");
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПоставщикамиНУ");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.ИсточникДанных = РезультатЗапроса[4];
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаПоПартнерам", "АналитикаУчетаПоПартнерам");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОбъектРасчетов", "ОбъектРасчетов");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Валюта", "Валюта");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("РасчетныйДокумент", "РасчетныйДокумент");
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыПоФинансовымИнструментамНУ");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.ИсточникДанных = РезультатЗапроса[5];
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаПоПартнерам", "АналитикаУчетаПоПартнерам");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Договор", "Договор");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ТипСуммы", "ТипСуммы");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Валюта", "Валюта");
			Блокировка.Заблокировать(); 
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСКлиентамиПоСрокам");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			ЭлементБлокировки.ИсточникДанных = РезультатЗапроса[3];
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаПоПартнерам", "АналитикаУчетаПоПартнерам");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОбъектРасчетов", "ОбъектРасчетов");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Валюта", "Валюта");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("РасчетныйДокумент", "РасчетныйДокумент");
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоСрокам");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			ЭлементБлокировки.ИсточникДанных = РезультатЗапроса[4];
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаПоПартнерам", "АналитикаУчетаПоПартнерам");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОбъектРасчетов", "ОбъектРасчетов");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Валюта", "Валюта");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("РасчетныйДокумент", "РасчетныйДокумент");
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыПоФинансовымИнструментам");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			ЭлементБлокировки.ИсточникДанных = РезультатЗапроса[5];
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаПоПартнерам", "АналитикаУчетаПоПартнерам");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Договор", "Договор");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ТипСуммы", "ТипСуммы");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Валюта", "Валюта");
			Блокировка.Заблокировать(); 
			
			Запрос.Текст = ТекстЗапросаКорректировкаНалоговойБазы();
			
			РезультатЗапроса = Запрос.ВыполнитьПакет();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса[14].Выбрать();
			
			НаборЗаписейФинИнструменты = РегистрыНакопления.РасчетыПоФинансовымИнструментамНУ.СоздатьНаборЗаписей();
			НаборЗаписейФинИнструменты.Отбор.Регистратор.Установить(ПараметрыРасчета.Ссылка);
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Запись = НаборЗаписейФинИнструменты.Добавить();
				Запись.Период = Период;
				Запись.ВидДвижения = ВидДвиженияНакопления.Расход;
				Запись.АналитикаУчетаПоПартнерам = ВыборкаДетальныеЗаписи.АналитикаУчетаПоПартнерам;
				Запись.Договор = ВыборкаДетальныеЗаписи.Договор;
				Запись.ТипСуммы = ВыборкаДетальныеЗаписи.ТипСуммы;
				Запись.Валюта = ВыборкаДетальныеЗаписи.Валюта;
				Запись.ДокументРегистратор = ПараметрыРасчета.Ссылка;
				Запись.ОтложенныйДоход = Мин(ВыборкаДетальныеЗаписи.СуммаРасходовНУ, ВыборкаДетальныеЗаписи.ОтложенныйДоход);
			КонецЦикла;
			
			НаборЗаписейФинИнструменты.Записать();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса[15].Выбрать();
			
			НаборЗаписейРасчетыСКлиентами = РегистрыНакопления.РасчетыСКлиентамиНУ.СоздатьНаборЗаписей();
			НаборЗаписейРасчетыСКлиентами.Отбор.Регистратор.Установить(ПараметрыРасчета.Ссылка);
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Запись = НаборЗаписейРасчетыСКлиентами.Добавить();
				Запись.Период = Период;
				Запись.ВидДвижения = ВидДвиженияНакопления.Расход;
				Запись.АналитикаУчетаПоПартнерам = ВыборкаДетальныеЗаписи.АналитикаУчетаПоПартнерам;
				Запись.ОбъектРасчетов = ВыборкаДетальныеЗаписи.ОбъектРасчетов;
				Запись.Валюта = ВыборкаДетальныеЗаписи.Валюта;
				Запись.РасчетныйДокумент = ВыборкаДетальныеЗаписи.РасчетныйДокумент;
				Запись.ДокументРегистратор = ПараметрыРасчета.Ссылка;
				Запись.ОтложенныйДоход = Мин(ВыборкаДетальныеЗаписи.СуммаРасходовНУ, ВыборкаДетальныеЗаписи.ОтложенныйДоход);
			КонецЦикла;
			
			НаборЗаписейРасчетыСКлиентами.Записать();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса[16].Выбрать();
			
			НаборЗаписейРасчетыСПоставщиками= РегистрыНакопления.РасчетыСПоставщикамиНУ.СоздатьНаборЗаписей();
			НаборЗаписейРасчетыСПоставщиками.Отбор.Регистратор.Установить(ПараметрыРасчета.Ссылка);
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Запись = НаборЗаписейРасчетыСПоставщиками.Добавить();
				Запись.Период = Период;
				Запись.ВидДвижения = ВидДвиженияНакопления.Расход;
				Запись.АналитикаУчетаПоПартнерам = ВыборкаДетальныеЗаписи.АналитикаУчетаПоПартнерам;
				Запись.ОбъектРасчетов = ВыборкаДетальныеЗаписи.ОбъектРасчетов;
				Запись.Валюта = ВыборкаДетальныеЗаписи.Валюта;
				Запись.РасчетныйДокумент = ВыборкаДетальныеЗаписи.РасчетныйДокумент;
				Запись.ДокументРегистратор = ПараметрыРасчета.Ссылка;
				Запись.ОтложенныйДоход = Мин(ВыборкаДетальныеЗаписи.СуммаРасходовНУ, ВыборкаДетальныеЗаписи.ОтложенныйДоход);
			КонецЦикла;
			
			НаборЗаписейРасчетыСПоставщиками.Записать(); 
			
		Исключение
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось создать задания к закрытию месяца по причине: %1';
											|en = 'Cannot create jobs for month-end closing due to: %1'"),
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Проверка необходимости переоценки денежных и валютных средств.';
				|en = 'Check whether cash and currency revaluation is required.'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения);
			
			ВызватьИсключение ТекстСообщения; 
			
		КонецПопытки;
		
	КонецЕсли;

КонецПроцедуры

Функция ТекстЗапросаАналитикиКорректировкиБазы()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	РасчетыСКлиентамиНУОстатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	РасчетыСКлиентамиНУОстатки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РасчетыСКлиентамиНУОстатки.Валюта КАК Валюта,
	|	РасчетыСКлиентамиНУОстатки.РасчетныйДокумент КАК РасчетныйДокумент
	|ПОМЕСТИТЬ вт_АналитикаРасчетыСКлиентами
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиНУ.Остатки(&ГраницаОстатков, АналитикаУчетаПоПартнерам.Организация = &Организация) КАК РасчетыСКлиентамиНУОстатки
	|ГДЕ
	|	РасчетыСКлиентамиНУОстатки.ОтложенныйДоходОстаток <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСПоставщикамиНУОстатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	РасчетыСПоставщикамиНУОстатки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РасчетыСПоставщикамиНУОстатки.Валюта КАК Валюта,
	|	РасчетыСПоставщикамиНУОстатки.РасчетныйДокумент КАК РасчетныйДокумент
	|ПОМЕСТИТЬ вт_АналитикаРасчетыСПоставщиками
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиНУ.Остатки(&ГраницаОстатков, АналитикаУчетаПоПартнерам.Организация = &Организация) КАК РасчетыСПоставщикамиНУОстатки
	|ГДЕ
	|	РасчетыСПоставщикамиНУОстатки.ОтложенныйДоходОстаток <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыПоФинансовымИнструментамНУОстатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	РасчетыПоФинансовымИнструментамНУОстатки.Договор КАК Договор,
	|	РасчетыПоФинансовымИнструментамНУОстатки.ТипСуммы КАК ТипСуммы,
	|	РасчетыПоФинансовымИнструментамНУОстатки.Валюта КАК Валюта
	|ПОМЕСТИТЬ вт_АналитикаПоФинИнструментам
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментамНУ.Остатки(&ГраницаОстатков, АналитикаУчетаПоПартнерам.Организация = &Организация) КАК РасчетыПоФинансовымИнструментамНУОстатки
	|ГДЕ
	|	РасчетыПоФинансовымИнструментамНУОстатки.ОтложенныйДоходОстаток <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_АналитикаРасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	вт_АналитикаРасчетыСКлиентами.ОбъектРасчетов КАК ОбъектРасчетов,
	|	вт_АналитикаРасчетыСКлиентами.Валюта КАК Валюта,
	|	вт_АналитикаРасчетыСКлиентами.РасчетныйДокумент КАК РасчетныйДокумент
	|ИЗ
	|	вт_АналитикаРасчетыСКлиентами КАК вт_АналитикаРасчетыСКлиентами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_АналитикаРасчетыСПоставщиками.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	вт_АналитикаРасчетыСПоставщиками.ОбъектРасчетов КАК ОбъектРасчетов,
	|	вт_АналитикаРасчетыСПоставщиками.Валюта КАК Валюта,
	|	вт_АналитикаРасчетыСПоставщиками.РасчетныйДокумент КАК РасчетныйДокумент
	|ИЗ
	|	вт_АналитикаРасчетыСПоставщиками КАК вт_АналитикаРасчетыСПоставщиками
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_АналитикаПоФинИнструментам.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	вт_АналитикаПоФинИнструментам.Договор КАК Договор,
	|	вт_АналитикаПоФинИнструментам.ТипСуммы КАК ТипСуммы,
	|	вт_АналитикаПоФинИнструментам.Валюта КАК Валюта
	|ИЗ
	|	вт_АналитикаПоФинИнструментам КАК вт_АналитикаПоФинИнструментам";

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаКорректировкаНалоговойБазы()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	РасчетыСКлиентамиНУОстатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	РасчетыСКлиентамиНУОстатки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РасчетыСКлиентамиНУОстатки.Валюта КАК Валюта,
	|	РасчетыСКлиентамиНУОстатки.РасчетныйДокумент КАК РасчетныйДокумент,
	|	РасчетыСКлиентамиНУОстатки.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	РасчетыСКлиентамиНУОстатки.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РасчетыСКлиентамиНУОстатки.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|	РасчетыСКлиентамиНУОстатки.ОтложенныйДоходОстаток КАК ОтложенныйДоход
	|ПОМЕСТИТЬ вт_РасчетыСКлиентамиОстатокНУ
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиНУ.Остатки(
	|			&ГраницаОстатков,
	|			(АналитикаУчетаПоПартнерам, ОбъектРасчетов, Валюта, РасчетныйДокумент) В
	|				(ВЫБРАТЬ
	|					вт_АналитикаРасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|					вт_АналитикаРасчетыСКлиентами.ОбъектРасчетов КАК ОбъектРасчетов,
	|					вт_АналитикаРасчетыСКлиентами.Валюта КАК Валюта,
	|					вт_АналитикаРасчетыСКлиентами.РасчетныйДокумент КАК РасчетныйДокумент
	|				ИЗ
	|					вт_АналитикаРасчетыСКлиентами КАК вт_АналитикаРасчетыСКлиентами)) КАК РасчетыСКлиентамиНУОстатки
	|ГДЕ
	|	РасчетыСКлиентамиНУОстатки.ОтложенныйДоходОстаток <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаПоПартнерам,
	|	ОбъектРасчетов,
	|	Валюта,
	|	РасчетныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСПоставщикамиНУОстатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	РасчетыСПоставщикамиНУОстатки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РасчетыСПоставщикамиНУОстатки.Валюта КАК Валюта,
	|	РасчетыСПоставщикамиНУОстатки.РасчетныйДокумент КАК РасчетныйДокумент,
	|	РасчетыСПоставщикамиНУОстатки.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	РасчетыСПоставщикамиНУОстатки.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РасчетыСПоставщикамиНУОстатки.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|	РасчетыСПоставщикамиНУОстатки.ОтложенныйДоходОстаток КАК ОтложенныйДоход
	|ПОМЕСТИТЬ вт_РасчетыСПоставщикамиОстатокНУ
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиНУ.Остатки(
	|			&ГраницаОстатков,
	|			(АналитикаУчетаПоПартнерам, ОбъектРасчетов, Валюта, РасчетныйДокумент) В
	|				(ВЫБРАТЬ
	|					вт_АналитикаРасчетыСПоставщиками.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|					вт_АналитикаРасчетыСПоставщиками.ОбъектРасчетов КАК ОбъектРасчетов,
	|					вт_АналитикаРасчетыСПоставщиками.Валюта КАК Валюта,
	|					вт_АналитикаРасчетыСПоставщиками.РасчетныйДокумент КАК РасчетныйДокумент
	|				ИЗ
	|					вт_АналитикаРасчетыСПоставщиками КАК вт_АналитикаРасчетыСПоставщиками)) КАК РасчетыСПоставщикамиНУОстатки
	|ГДЕ
	|	РасчетыСПоставщикамиНУОстатки.ОтложенныйДоходОстаток <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаПоПартнерам,
	|	ОбъектРасчетов,
	|	Валюта,
	|	РасчетныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыПоФинансовымИнструментамНУОстатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	РасчетыПоФинансовымИнструментамНУОстатки.Договор КАК Договор,
	|	РасчетыПоФинансовымИнструментамНУОстатки.ТипСуммы КАК ТипСуммы,
	|	РасчетыПоФинансовымИнструментамНУОстатки.Валюта КАК Валюта,
	|	РасчетыПоФинансовымИнструментамНУОстатки.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	РасчетыПоФинансовымИнструментамНУОстатки.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РасчетыПоФинансовымИнструментамНУОстатки.ОтложенныйДоходОстаток КАК ОтложенныйДоход
	|ПОМЕСТИТЬ вт_РасчетыПоФинИнструментамОстаткиНУ
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментамНУ.Остатки(
	|			&ГраницаОстатков,
	|			(АналитикаУчетаПоПартнерам, Договор, ТипСуммы, Валюта) В
	|				(ВЫБРАТЬ
	|					вт_АналитикаПоФинИнструментам.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|					вт_АналитикаПоФинИнструментам.Договор КАК Договор,
	|					вт_АналитикаПоФинИнструментам.ТипСуммы КАК ТипСуммы,
	|					вт_АналитикаПоФинИнструментам.Валюта КАК Валюта
	|				ИЗ
	|					вт_АналитикаПоФинИнструментам КАК вт_АналитикаПоФинИнструментам)) КАК РасчетыПоФинансовымИнструментамНУОстатки
	|ГДЕ
	|	РасчетыПоФинансовымИнструментамНУОстатки.ОтложенныйДоходОстаток <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаПоПартнерам,
	|	Договор,
	|	ТипСуммы,
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСКлиентамиПоСрокамОстатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	РасчетыСКлиентамиПоСрокамОстатки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РасчетыСКлиентамиПоСрокамОстатки.Валюта КАК Валюта,
	|	РасчетыСКлиентамиПоСрокамОстатки.РасчетныйДокумент КАК РасчетныйДокумент,
	|	РасчетыСКлиентамиПоСрокамОстатки.ДолгОстаток КАК ОстатокВВалюте2022
	|ПОМЕСТИТЬ вт_РасчетыСКлиентамиОстатокВВалюте
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоСрокам.Остатки(
	|			&ГраницаОстатков,
	|			(АналитикаУчетаПоПартнерам, ОбъектРасчетов, Валюта, РасчетныйДокумент) В
	|				(ВЫБРАТЬ
	|					вт_РасчетыСКлиентамиОстатокНУ.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|					вт_РасчетыСКлиентамиОстатокНУ.ОбъектРасчетов КАК ОбъектРасчетов,
	|					вт_РасчетыСКлиентамиОстатокНУ.Валюта КАК Валюта,
	|					вт_РасчетыСКлиентамиОстатокНУ.РасчетныйДокумент КАК РасчетныйДокумент
	|				ИЗ
	|					вт_РасчетыСКлиентамиОстатокНУ КАК вт_РасчетыСКлиентамиОстатокНУ)) КАК РасчетыСКлиентамиПоСрокамОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСПоставщикамиПоСрокамОстатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	РасчетыСПоставщикамиПоСрокамОстатки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РасчетыСПоставщикамиПоСрокамОстатки.Валюта КАК Валюта,
	|	РасчетыСПоставщикамиПоСрокамОстатки.РасчетныйДокумент КАК РасчетныйДокумент,
	|	РасчетыСПоставщикамиПоСрокамОстатки.ДолгОстаток КАК ОстатокВВалюте2022
	|ПОМЕСТИТЬ вт_РасчетыСПоставщикамиОстатокВВалюте
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам.Остатки(
	|			&ГраницаОстатков,
	|			(АналитикаУчетаПоПартнерам, ОбъектРасчетов, Валюта, РасчетныйДокумент) В
	|				(ВЫБРАТЬ
	|					вт_РасчетыСПоставщикамиОстатокНУ.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|					вт_РасчетыСПоставщикамиОстатокНУ.ОбъектРасчетов КАК ОбъектРасчетов,
	|					вт_РасчетыСПоставщикамиОстатокНУ.Валюта КАК Валюта,
	|					вт_РасчетыСПоставщикамиОстатокНУ.РасчетныйДокумент КАК РасчетныйДокумент
	|				ИЗ
	|					вт_РасчетыСПоставщикамиОстатокНУ КАК вт_РасчетыСПоставщикамиОстатокНУ)) КАК РасчетыСПоставщикамиПоСрокамОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыПоФинИнструментамОстатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	РасчетыПоФинИнструментамОстатки.Договор КАК Договор,
	|	РасчетыПоФинИнструментамОстатки.ТипСуммы КАК ТипСуммы,
	|	РасчетыПоФинИнструментамОстатки.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА РасчетыПоФинИнструментамОстатки.СуммаОстаток > 0
	|			ТОГДА РасчетыПоФинИнструментамОстатки.СуммаОстаток
	|		ИНАЧЕ -РасчетыПоФинИнструментамОстатки.СуммаОстаток
	|	КОНЕЦ КАК ОстатокВВалюте2022
	|ПОМЕСТИТЬ вт_РасчетыПоФинИнструментамОстатокВВалюте
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам.Остатки(
	|			&ГраницаОстатков,
	|			(АналитикаУчетаПоПартнерам, Договор, ТипСуммы, Валюта) В
	|				(ВЫБРАТЬ
	|					вт_РасчетыПоФинИнструментамОстаткиНУ.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|					вт_РасчетыПоФинИнструментамОстаткиНУ.Договор КАК Договор,
	|					вт_РасчетыПоФинИнструментамОстаткиНУ.ТипСуммы КАК ТипСуммы,
	|					вт_РасчетыПоФинИнструментамОстаткиНУ.Валюта КАК Валюта
	|				ИЗ
	|					вт_РасчетыПоФинИнструментамОстаткиНУ КАК вт_РасчетыПоФинИнструментамОстаткиНУ)) КАК РасчетыПоФинИнструментамОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_РасчетыПоФинИнструментамОстаткиНУ.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	вт_РасчетыПоФинИнструментамОстаткиНУ.Договор КАК Договор,
	|	вт_РасчетыПоФинИнструментамОстаткиНУ.ТипСуммы КАК ТипСуммы,
	|	вт_РасчетыПоФинИнструментамОстаткиНУ.Валюта КАК Валюта,
	|	-РасчетПереоценкиВалютныхСредствНУ.СуммаПереоценкиНУ КАК СуммаПереоценкиНУ,
	|	РасчетПереоценкиВалютныхСредствНУ.ОстатокВВалюте КАК ОстатокВВалюте
	|ПОМЕСТИТЬ вт_РасчетыПереоценкиПоФинИнструментам
	|ИЗ
	|	РегистрСведений.РасчетПереоценкиВалютныхСредствНУ КАК РасчетПереоценкиВалютныхСредствНУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РасчетыПоФинИнструментамОстаткиНУ КАК вт_РасчетыПоФинИнструментамОстаткиНУ
	|		ПО (вт_РасчетыПоФинИнструментамОстаткиНУ.Организация = РасчетПереоценкиВалютныхСредствНУ.Организация)
	|			И (вт_РасчетыПоФинИнструментамОстаткиНУ.Валюта = РасчетПереоценкиВалютныхСредствНУ.Валюта)
	|			И (вт_РасчетыПоФинИнструментамОстаткиНУ.Контрагент = РасчетПереоценкиВалютныхСредствНУ.Аналитика1)
	|			И (вт_РасчетыПоФинИнструментамОстаткиНУ.Договор = РасчетПереоценкиВалютныхСредствНУ.Аналитика2)
	|			И (вт_РасчетыПоФинИнструментамОстаткиНУ.ТипСуммы = РасчетПереоценкиВалютныхСредствНУ.ТипСуммы)
	|			И (РасчетПереоценкиВалютныхСредствНУ.ДокументОплаты = НЕОПРЕДЕЛЕНО)
	|			И (РасчетПереоценкиВалютныхСредствНУ.СуммаПереоценкиНУ < 0)
	|			И (РасчетПереоценкиВалютныхСредствНУ.Период МЕЖДУ &НачПериода И &КонПериода)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаПоПартнерам,
	|	Договор,
	|	ТипСуммы,
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_РасчетыСКлиентамиОстатокНУ.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	вт_РасчетыСКлиентамиОстатокНУ.ОбъектРасчетов КАК ОбъектРасчетов,
	|	вт_РасчетыСКлиентамиОстатокНУ.Валюта КАК Валюта,
	|	вт_РасчетыСКлиентамиОстатокНУ.РасчетныйДокумент КАК РасчетныйДокумент,
	|	-РасчетПереоценкиВалютныхСредствНУ.СуммаПереоценкиНУ КАК СуммаПереоценкиНУ,
	|	РасчетПереоценкиВалютныхСредствНУ.ОстатокВВалюте КАК ОстатокВВалюте
	|ПОМЕСТИТЬ вт_РасчетыПереоценкиСКлиентами
	|ИЗ
	|	РегистрСведений.РасчетПереоценкиВалютныхСредствНУ КАК РасчетПереоценкиВалютныхСредствНУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РасчетыСКлиентамиОстатокНУ КАК вт_РасчетыСКлиентамиОстатокНУ
	|		ПО РасчетПереоценкиВалютныхСредствНУ.Организация = вт_РасчетыСКлиентамиОстатокНУ.Организация
	|			И РасчетПереоценкиВалютныхСредствНУ.Валюта = вт_РасчетыСКлиентамиОстатокНУ.Валюта
	|			И РасчетПереоценкиВалютныхСредствНУ.Аналитика1 = вт_РасчетыСКлиентамиОстатокНУ.Контрагент
	|			И РасчетПереоценкиВалютныхСредствНУ.Аналитика2 = вт_РасчетыСКлиентамиОстатокНУ.Договор
	|			И РасчетПереоценкиВалютныхСредствНУ.Аналитика3 = вт_РасчетыСКлиентамиОстатокНУ.РасчетныйДокумент
	|			И (РасчетПереоценкиВалютныхСредствНУ.ДокументОплаты = НЕОПРЕДЕЛЕНО)
	|			И РасчетПереоценкиВалютныхСредствНУ.ОбъектРасчетов = вт_РасчетыСКлиентамиОстатокНУ.ОбъектРасчетов
	|			И (РасчетПереоценкиВалютныхСредствНУ.СуммаПереоценкиНУ < 0)
	|			И (РасчетПереоценкиВалютныхСредствНУ.Период МЕЖДУ &НачПериода И &КонПериода)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаПоПартнерам,
	|	ОбъектРасчетов,
	|	Валюта,
	|	РасчетныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_РасчетыСПоставщикамиОстатокНУ.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	вт_РасчетыСПоставщикамиОстатокНУ.ОбъектРасчетов КАК ОбъектРасчетов,
	|	вт_РасчетыСПоставщикамиОстатокНУ.Валюта КАК Валюта,
	|	вт_РасчетыСПоставщикамиОстатокНУ.РасчетныйДокумент КАК РасчетныйДокумент,
	|	-РасчетПереоценкиВалютныхСредствНУ.СуммаПереоценкиНУ КАК СуммаПереоценкиНУ,
	|	РасчетПереоценкиВалютныхСредствНУ.ОстатокВВалюте КАК ОстатокВВалюте
	|ПОМЕСТИТЬ вт_РасчетыПереоценкиСПоставщиками
	|ИЗ
	|	РегистрСведений.РасчетПереоценкиВалютныхСредствНУ КАК РасчетПереоценкиВалютныхСредствНУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РасчетыСПоставщикамиОстатокНУ КАК вт_РасчетыСПоставщикамиОстатокНУ
	|		ПО РасчетПереоценкиВалютныхСредствНУ.Организация = вт_РасчетыСПоставщикамиОстатокНУ.Организация
	|			И РасчетПереоценкиВалютныхСредствНУ.Валюта = вт_РасчетыСПоставщикамиОстатокНУ.Валюта
	|			И РасчетПереоценкиВалютныхСредствНУ.Аналитика1 = вт_РасчетыСПоставщикамиОстатокНУ.Контрагент
	|			И РасчетПереоценкиВалютныхСредствНУ.Аналитика2 = вт_РасчетыСПоставщикамиОстатокНУ.Договор
	|			И РасчетПереоценкиВалютныхСредствНУ.Аналитика3 = вт_РасчетыСПоставщикамиОстатокНУ.РасчетныйДокумент
	|			И (РасчетПереоценкиВалютныхСредствНУ.ДокументОплаты = НЕОПРЕДЕЛЕНО)
	|			И РасчетПереоценкиВалютныхСредствНУ.ОбъектРасчетов = вт_РасчетыСПоставщикамиОстатокНУ.ОбъектРасчетов
	|			И (РасчетПереоценкиВалютныхСредствНУ.СуммаПереоценкиНУ < 0)
	|			И (РасчетПереоценкиВалютныхСредствНУ.Период МЕЖДУ &НачПериода И &КонПериода)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаПоПартнерам,
	|	ОбъектРасчетов,
	|	Валюта,
	|	РасчетныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_РасчетыСКлиентамиОстатокНУ.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	вт_РасчетыСКлиентамиОстатокНУ.ОбъектРасчетов КАК ОбъектРасчетов,
	|	вт_РасчетыСКлиентамиОстатокНУ.Валюта КАК Валюта,
	|	вт_РасчетыСКлиентамиОстатокНУ.РасчетныйДокумент КАК РасчетныйДокумент,
	|	вт_РасчетыСКлиентамиОстатокНУ.Организация КАК Организация,
	|	вт_РасчетыСКлиентамиОстатокНУ.Контрагент КАК Контрагент,
	|	вт_РасчетыСКлиентамиОстатокНУ.Договор КАК Договор,
	|	-РасчетПереоценкиВалютныхСредствНУ.СуммаПереоценкиНУ КАК СуммаПереоценкиНУ,
	|	РасчетПереоценкиВалютныхСредствНУ.ОстатокВВалюте КАК ОстатокВВалюте
	|ПОМЕСТИТЬ вт_РасчетыПереоценкиСКлиентами_ВторойПроход
	|ИЗ
	|	РегистрСведений.РасчетПереоценкиВалютныхСредствНУ КАК РасчетПереоценкиВалютныхСредствНУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РасчетыСКлиентамиОстатокНУ КАК вт_РасчетыСКлиентамиОстатокНУ
	|		ПО РасчетПереоценкиВалютныхСредствНУ.Организация = вт_РасчетыСКлиентамиОстатокНУ.Организация
	|			И РасчетПереоценкиВалютныхСредствНУ.Валюта = вт_РасчетыСКлиентамиОстатокНУ.Валюта
	|			И РасчетПереоценкиВалютныхСредствНУ.Аналитика1 = вт_РасчетыСКлиентамиОстатокНУ.Контрагент
	|			И РасчетПереоценкиВалютныхСредствНУ.Аналитика2 = вт_РасчетыСКлиентамиОстатокНУ.Договор
	|			И (РасчетПереоценкиВалютныхСредствНУ.Аналитика3 = НЕОПРЕДЕЛЕНО)
	|			И (РасчетПереоценкиВалютныхСредствНУ.ДокументОплаты = НЕОПРЕДЕЛЕНО)
	|			И РасчетПереоценкиВалютныхСредствНУ.ОбъектРасчетов = вт_РасчетыСКлиентамиОстатокНУ.ОбъектРасчетов
	|			И (РасчетПереоценкиВалютныхСредствНУ.СуммаПереоценкиНУ < 0)
	|			И (РасчетПереоценкиВалютныхСредствНУ.Период МЕЖДУ &НачПериода И &КонПериода)
	|ГДЕ
	|	НЕ (вт_РасчетыСКлиентамиОстатокНУ.АналитикаУчетаПоПартнерам, вт_РасчетыСКлиентамиОстатокНУ.ОбъектРасчетов, вт_РасчетыСКлиентамиОстатокНУ.Валюта, вт_РасчетыСКлиентамиОстатокНУ.РасчетныйДокумент) В
	|				(ВЫБРАТЬ
	|					вт_РасчетыПереоценкиСКлиентами.АналитикаУчетаПоПартнерам,
	|					вт_РасчетыПереоценкиСКлиентами.ОбъектРасчетов,
	|					вт_РасчетыПереоценкиСКлиентами.Валюта,
	|					вт_РасчетыПереоценкиСКлиентами.РасчетныйДокумент
	|				ИЗ
	|					вт_РасчетыПереоценкиСКлиентами)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_РасчетыСПоставщикамиОстатокНУ.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	вт_РасчетыСПоставщикамиОстатокНУ.ОбъектРасчетов КАК ОбъектРасчетов,
	|	вт_РасчетыСПоставщикамиОстатокНУ.Валюта КАК Валюта,
	|	вт_РасчетыСПоставщикамиОстатокНУ.РасчетныйДокумент КАК РасчетныйДокумент,
	|	вт_РасчетыСПоставщикамиОстатокНУ.Организация КАК Организация,
	|	вт_РасчетыСПоставщикамиОстатокНУ.Контрагент КАК Контрагент,
	|	вт_РасчетыСПоставщикамиОстатокНУ.Договор КАК Договор,
	|	-РасчетПереоценкиВалютныхСредствНУ.СуммаПереоценкиНУ КАК СуммаПереоценкиНУ,
	|	РасчетПереоценкиВалютныхСредствНУ.ОстатокВВалюте КАК ОстатокВВалюте
	|ПОМЕСТИТЬ вт_РасчетыПереоценкиСПоставщиками_ВторойПроход
	|ИЗ
	|	РегистрСведений.РасчетПереоценкиВалютныхСредствНУ КАК РасчетПереоценкиВалютныхСредствНУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РасчетыСПоставщикамиОстатокНУ КАК вт_РасчетыСПоставщикамиОстатокНУ
	|		ПО РасчетПереоценкиВалютныхСредствНУ.Организация = вт_РасчетыСПоставщикамиОстатокНУ.Организация
	|			И РасчетПереоценкиВалютныхСредствНУ.Валюта = вт_РасчетыСПоставщикамиОстатокНУ.Валюта
	|			И РасчетПереоценкиВалютныхСредствНУ.Аналитика1 = вт_РасчетыСПоставщикамиОстатокНУ.Контрагент
	|			И РасчетПереоценкиВалютныхСредствНУ.Аналитика2 = вт_РасчетыСПоставщикамиОстатокНУ.Договор
	|			И (РасчетПереоценкиВалютныхСредствНУ.Аналитика3 = НЕОПРЕДЕЛЕНО)
	|			И (РасчетПереоценкиВалютныхСредствНУ.ДокументОплаты = НЕОПРЕДЕЛЕНО)
	|			И РасчетПереоценкиВалютныхСредствНУ.ОбъектРасчетов = вт_РасчетыСПоставщикамиОстатокНУ.ОбъектРасчетов
	|			И (РасчетПереоценкиВалютныхСредствНУ.СуммаПереоценкиНУ < 0)
	|			И (РасчетПереоценкиВалютныхСредствНУ.Период МЕЖДУ &НачПериода И &КонПериода)
	|ГДЕ
	|	НЕ (вт_РасчетыСПоставщикамиОстатокНУ.АналитикаУчетаПоПартнерам, вт_РасчетыСПоставщикамиОстатокНУ.ОбъектРасчетов, вт_РасчетыСПоставщикамиОстатокНУ.Валюта, вт_РасчетыСПоставщикамиОстатокНУ.РасчетныйДокумент) В
	|				(ВЫБРАТЬ
	|					вт_РасчетыПереоценкиСПоставщиками.АналитикаУчетаПоПартнерам,
	|					вт_РасчетыПереоценкиСПоставщиками.ОбъектРасчетов,
	|					вт_РасчетыПереоценкиСПоставщиками.Валюта,
	|					вт_РасчетыПереоценкиСПоставщиками.РасчетныйДокумент
	|				ИЗ
	|					вт_РасчетыПереоценкиСПоставщиками)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_РасчетыПереоценкиПоФинИнструментам.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	вт_РасчетыПереоценкиПоФинИнструментам.Договор КАК Договор,
	|	вт_РасчетыПереоценкиПоФинИнструментам.ТипСуммы КАК ТипСуммы,
	|	вт_РасчетыПереоценкиПоФинИнструментам.Валюта КАК Валюта,
	|	СУММА(вт_РасчетыПереоценкиПоФинИнструментам.СуммаПереоценкиНУ * вт_РасчетыПоФинИнструментамОстатокВВалюте.ОстатокВВалюте2022 / вт_РасчетыПереоценкиПоФинИнструментам.ОстатокВВалюте) КАК СуммаРасходовНУ
	|ПОМЕСТИТЬ вт_ФинИнструментыРасходы
	|ИЗ
	|	вт_РасчетыПереоценкиПоФинИнструментам КАК вт_РасчетыПереоценкиПоФинИнструментам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РасчетыПоФинИнструментамОстатокВВалюте КАК вт_РасчетыПоФинИнструментамОстатокВВалюте
	|		ПО вт_РасчетыПереоценкиПоФинИнструментам.АналитикаУчетаПоПартнерам = вт_РасчетыПоФинИнструментамОстатокВВалюте.АналитикаУчетаПоПартнерам
	|			И вт_РасчетыПереоценкиПоФинИнструментам.Договор = вт_РасчетыПоФинИнструментамОстатокВВалюте.Договор
	|			И вт_РасчетыПереоценкиПоФинИнструментам.ТипСуммы = вт_РасчетыПоФинИнструментамОстатокВВалюте.ТипСуммы
	|			И вт_РасчетыПереоценкиПоФинИнструментам.Валюта = вт_РасчетыПоФинИнструментамОстатокВВалюте.Валюта
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_РасчетыПереоценкиПоФинИнструментам.АналитикаУчетаПоПартнерам,
	|	вт_РасчетыПереоценкиПоФинИнструментам.Договор,
	|	вт_РасчетыПереоценкиПоФинИнструментам.ТипСуммы,
	|	вт_РасчетыПереоценкиПоФинИнструментам.Валюта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаПоПартнерам,
	|	Договор,
	|	ТипСуммы,
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_РасчетыПереоценкиСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	вт_РасчетыПереоценкиСКлиентами.ОбъектРасчетов КАК ОбъектРасчетов,
	|	вт_РасчетыПереоценкиСКлиентами.Валюта КАК Валюта,
	|	вт_РасчетыПереоценкиСКлиентами.РасчетныйДокумент КАК РасчетныйДокумент,
	|	СУММА(вт_РасчетыПереоценкиСКлиентами.СуммаПереоценкиНУ * вт_РасчетыСКлиентамиОстатокВВалюте.ОстатокВВалюте2022 / вт_РасчетыПереоценкиСКлиентами.ОстатокВВалюте) КАК СуммаРасходовНУ
	|ПОМЕСТИТЬ вт_РасчетыСКлиентамиРасходы
	|ИЗ
	|	вт_РасчетыПереоценкиСКлиентами КАК вт_РасчетыПереоценкиСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РасчетыСКлиентамиОстатокВВалюте КАК вт_РасчетыСКлиентамиОстатокВВалюте
	|		ПО вт_РасчетыПереоценкиСКлиентами.АналитикаУчетаПоПартнерам = вт_РасчетыСКлиентамиОстатокВВалюте.АналитикаУчетаПоПартнерам
	|			И вт_РасчетыПереоценкиСКлиентами.ОбъектРасчетов = вт_РасчетыСКлиентамиОстатокВВалюте.ОбъектРасчетов
	|			И вт_РасчетыПереоценкиСКлиентами.Валюта = вт_РасчетыСКлиентамиОстатокВВалюте.Валюта
	|			И вт_РасчетыПереоценкиСКлиентами.РасчетныйДокумент = вт_РасчетыСКлиентамиОстатокВВалюте.РасчетныйДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_РасчетыПереоценкиСКлиентами.АналитикаУчетаПоПартнерам,
	|	вт_РасчетыПереоценкиСКлиентами.ОбъектРасчетов,
	|	вт_РасчетыПереоценкиСКлиентами.Валюта,
	|	вт_РасчетыПереоценкиСКлиентами.РасчетныйДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	вт_РасчетыПереоценкиСКлиентами_ВторойПроход.АналитикаУчетаПоПартнерам,
	|	вт_РасчетыПереоценкиСКлиентами_ВторойПроход.ОбъектРасчетов,
	|	вт_РасчетыПереоценкиСКлиентами_ВторойПроход.Валюта,
	|	вт_РасчетыПереоценкиСКлиентами_ВторойПроход.РасчетныйДокумент,
	|	СУММА(вт_РасчетыПереоценкиСКлиентами_ВторойПроход.СуммаПереоценкиНУ * вт_РасчетыСКлиентамиОстатокВВалюте.ОстатокВВалюте2022 / вт_РасчетыПереоценкиСКлиентами_ВторойПроход.ОстатокВВалюте)
	|ИЗ
	|	вт_РасчетыПереоценкиСКлиентами_ВторойПроход КАК вт_РасчетыПереоценкиСКлиентами_ВторойПроход
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РасчетыСКлиентамиОстатокВВалюте КАК вт_РасчетыСКлиентамиОстатокВВалюте
	|		ПО вт_РасчетыПереоценкиСКлиентами_ВторойПроход.АналитикаУчетаПоПартнерам = вт_РасчетыСКлиентамиОстатокВВалюте.АналитикаУчетаПоПартнерам
	|			И вт_РасчетыПереоценкиСКлиентами_ВторойПроход.ОбъектРасчетов = вт_РасчетыСКлиентамиОстатокВВалюте.ОбъектРасчетов
	|			И вт_РасчетыПереоценкиСКлиентами_ВторойПроход.Валюта = вт_РасчетыСКлиентамиОстатокВВалюте.Валюта
	|			И вт_РасчетыПереоценкиСКлиентами_ВторойПроход.РасчетныйДокумент = вт_РасчетыСКлиентамиОстатокВВалюте.РасчетныйДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_РасчетыПереоценкиСКлиентами_ВторойПроход.АналитикаУчетаПоПартнерам,
	|	вт_РасчетыПереоценкиСКлиентами_ВторойПроход.ОбъектРасчетов,
	|	вт_РасчетыПереоценкиСКлиентами_ВторойПроход.Валюта,
	|	вт_РасчетыПереоценкиСКлиентами_ВторойПроход.РасчетныйДокумент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаПоПартнерам,
	|	ОбъектРасчетов,
	|	Валюта,
	|	РасчетныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_РасчетыПереоценкиСПоставщиками.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	вт_РасчетыПереоценкиСПоставщиками.ОбъектРасчетов КАК ОбъектРасчетов,
	|	вт_РасчетыПереоценкиСПоставщиками.Валюта КАК Валюта,
	|	вт_РасчетыПереоценкиСПоставщиками.РасчетныйДокумент КАК РасчетныйДокумент,
	|	СУММА(вт_РасчетыПереоценкиСПоставщиками.СуммаПереоценкиНУ * вт_РасчетыСПоставщикамиОстатокВВалюте.ОстатокВВалюте2022 / вт_РасчетыПереоценкиСПоставщиками.ОстатокВВалюте) КАК СуммаРасходовНУ
	|ПОМЕСТИТЬ вт_РасчетыСПоставщикамиРасходы
	|ИЗ
	|	вт_РасчетыПереоценкиСПоставщиками КАК вт_РасчетыПереоценкиСПоставщиками
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РасчетыСПоставщикамиОстатокВВалюте КАК вт_РасчетыСПоставщикамиОстатокВВалюте
	|		ПО вт_РасчетыПереоценкиСПоставщиками.АналитикаУчетаПоПартнерам = вт_РасчетыСПоставщикамиОстатокВВалюте.АналитикаУчетаПоПартнерам
	|			И вт_РасчетыПереоценкиСПоставщиками.ОбъектРасчетов = вт_РасчетыСПоставщикамиОстатокВВалюте.ОбъектРасчетов
	|			И вт_РасчетыПереоценкиСПоставщиками.Валюта = вт_РасчетыСПоставщикамиОстатокВВалюте.Валюта
	|			И вт_РасчетыПереоценкиСПоставщиками.РасчетныйДокумент = вт_РасчетыСПоставщикамиОстатокВВалюте.РасчетныйДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_РасчетыПереоценкиСПоставщиками.АналитикаУчетаПоПартнерам,
	|	вт_РасчетыПереоценкиСПоставщиками.ОбъектРасчетов,
	|	вт_РасчетыПереоценкиСПоставщиками.Валюта,
	|	вт_РасчетыПереоценкиСПоставщиками.РасчетныйДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	вт_РасчетыПереоценкиСПоставщиками_ВторойПроход.АналитикаУчетаПоПартнерам,
	|	вт_РасчетыПереоценкиСПоставщиками_ВторойПроход.ОбъектРасчетов,
	|	вт_РасчетыПереоценкиСПоставщиками_ВторойПроход.Валюта,
	|	вт_РасчетыПереоценкиСПоставщиками_ВторойПроход.РасчетныйДокумент,
	|	СУММА(вт_РасчетыПереоценкиСПоставщиками_ВторойПроход.СуммаПереоценкиНУ * вт_РасчетыСПоставщикамиОстатокВВалюте.ОстатокВВалюте2022 / вт_РасчетыПереоценкиСПоставщиками_ВторойПроход.ОстатокВВалюте)
	|ИЗ
	|	вт_РасчетыПереоценкиСПоставщиками_ВторойПроход КАК вт_РасчетыПереоценкиСПоставщиками_ВторойПроход
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РасчетыСПоставщикамиОстатокВВалюте КАК вт_РасчетыСПоставщикамиОстатокВВалюте
	|		ПО вт_РасчетыПереоценкиСПоставщиками_ВторойПроход.АналитикаУчетаПоПартнерам = вт_РасчетыСПоставщикамиОстатокВВалюте.АналитикаУчетаПоПартнерам
	|			И вт_РасчетыПереоценкиСПоставщиками_ВторойПроход.ОбъектРасчетов = вт_РасчетыСПоставщикамиОстатокВВалюте.ОбъектРасчетов
	|			И вт_РасчетыПереоценкиСПоставщиками_ВторойПроход.Валюта = вт_РасчетыСПоставщикамиОстатокВВалюте.Валюта
	|			И вт_РасчетыПереоценкиСПоставщиками_ВторойПроход.РасчетныйДокумент = вт_РасчетыСПоставщикамиОстатокВВалюте.РасчетныйДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_РасчетыПереоценкиСПоставщиками_ВторойПроход.АналитикаУчетаПоПартнерам,
	|	вт_РасчетыПереоценкиСПоставщиками_ВторойПроход.ОбъектРасчетов,
	|	вт_РасчетыПереоценкиСПоставщиками_ВторойПроход.Валюта,
	|	вт_РасчетыПереоценкиСПоставщиками_ВторойПроход.РасчетныйДокумент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаПоПартнерам,
	|	ОбъектРасчетов,
	|	Валюта,
	|	РасчетныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ФинИнструментыРасходы.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	вт_ФинИнструментыРасходы.Договор КАК Договор,
	|	вт_ФинИнструментыРасходы.ТипСуммы КАК ТипСуммы,
	|	вт_ФинИнструментыРасходы.Валюта КАК Валюта,
	|	вт_ФинИнструментыРасходы.СуммаРасходовНУ КАК СуммаРасходовНУ,
	|	вт_РасчетыПоФинИнструментамОстаткиНУ.ОтложенныйДоход КАК ОтложенныйДоход
	|ИЗ
	|	вт_ФинИнструментыРасходы КАК вт_ФинИнструментыРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РасчетыПоФинИнструментамОстаткиНУ КАК вт_РасчетыПоФинИнструментамОстаткиНУ
	|		ПО вт_ФинИнструментыРасходы.АналитикаУчетаПоПартнерам = вт_РасчетыПоФинИнструментамОстаткиНУ.АналитикаУчетаПоПартнерам
	|			И вт_ФинИнструментыРасходы.Договор = вт_РасчетыПоФинИнструментамОстаткиНУ.Договор
	|			И вт_ФинИнструментыРасходы.ТипСуммы = вт_РасчетыПоФинИнструментамОстаткиНУ.ТипСуммы
	|			И вт_ФинИнструментыРасходы.Валюта = вт_РасчетыПоФинИнструментамОстаткиНУ.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_РасчетыСКлиентамиРасходы.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	вт_РасчетыСКлиентамиРасходы.ОбъектРасчетов КАК ОбъектРасчетов,
	|	вт_РасчетыСКлиентамиРасходы.Валюта КАК Валюта,
	|	вт_РасчетыСКлиентамиРасходы.РасчетныйДокумент КАК РасчетныйДокумент,
	|	вт_РасчетыСКлиентамиРасходы.СуммаРасходовНУ КАК СуммаРасходовНУ,
	|	вт_РасчетыСКлиентамиОстатокНУ.ОтложенныйДоход КАК ОтложенныйДоход
	|ИЗ
	|	вт_РасчетыСКлиентамиРасходы КАК вт_РасчетыСКлиентамиРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РасчетыСКлиентамиОстатокНУ КАК вт_РасчетыСКлиентамиОстатокНУ
	|		ПО вт_РасчетыСКлиентамиРасходы.АналитикаУчетаПоПартнерам = вт_РасчетыСКлиентамиОстатокНУ.АналитикаУчетаПоПартнерам
	|			И вт_РасчетыСКлиентамиРасходы.ОбъектРасчетов = вт_РасчетыСКлиентамиОстатокНУ.ОбъектРасчетов
	|			И вт_РасчетыСКлиентамиРасходы.Валюта = вт_РасчетыСКлиентамиОстатокНУ.Валюта
	|			И вт_РасчетыСКлиентамиРасходы.РасчетныйДокумент = вт_РасчетыСКлиентамиОстатокНУ.РасчетныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_РасчетыСПоставщикамиРасходы.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	вт_РасчетыСПоставщикамиРасходы.ОбъектРасчетов КАК ОбъектРасчетов,
	|	вт_РасчетыСПоставщикамиРасходы.Валюта КАК Валюта,
	|	вт_РасчетыСПоставщикамиРасходы.РасчетныйДокумент КАК РасчетныйДокумент,
	|	вт_РасчетыСПоставщикамиРасходы.СуммаРасходовНУ КАК СуммаРасходовНУ,
	|	вт_РасчетыСПоставщикамиОстатокНУ.ОтложенныйДоход КАК ОтложенныйДоход
	|ИЗ
	|	вт_РасчетыСПоставщикамиРасходы КАК вт_РасчетыСПоставщикамиРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РасчетыСПоставщикамиОстатокНУ КАК вт_РасчетыСПоставщикамиОстатокНУ
	|		ПО вт_РасчетыСПоставщикамиРасходы.АналитикаУчетаПоПартнерам = вт_РасчетыСПоставщикамиОстатокНУ.АналитикаУчетаПоПартнерам
	|			И вт_РасчетыСПоставщикамиРасходы.ОбъектРасчетов = вт_РасчетыСПоставщикамиОстатокНУ.ОбъектРасчетов
	|			И вт_РасчетыСПоставщикамиРасходы.Валюта = вт_РасчетыСПоставщикамиОстатокНУ.Валюта
	|			И вт_РасчетыСПоставщикамиРасходы.РасчетныйДокумент = вт_РасчетыСПоставщикамиОстатокНУ.РасчетныйДокумент";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Расчет торгового сбора

Функция ПодготовитьПараметрыРасчетТорговогоСбора(СтруктураШапки, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	НачалоПериода = НачалоКвартала(СтруктураШапки.НачДата);
	КонецПериода  = КонецКвартала(СтруктураШапки.КонДата);
	
	Содержание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Начислен торговый сбор за %1';
			|en = 'Sales charge is accrued for %1'"),
		ПредставлениеПериода(НачалоПериода, КонецПериода, "ФП = Истина"));
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("Содержание", Содержание);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРасчетТорговогоСбора(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРасчетТорговогоСбора(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаРеквизитыРасчетТорговогоСбора", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка                       КАК Регистратор,
	|	РегламентнаяОперация.Организация                  КАК Организация,
	|	РегламентнаяОперация.Дата                         КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ) КАК НачДата,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ)  КАК КонДата,
	|	&Содержание                                       КАК Содержание
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

// Начисление налога УСН

Функция ПодготовитьПараметрыНачисленияНалогаУСН(СтруктураШапки, Отказ) Экспорт

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", СтруктураШапки.Ссылка);
	
	Запрос.УстановитьПараметр("ПрименяетсяУСН",
		УчетнаяПолитика.ПрименяетсяУСН(СтруктураШапки.Организация, СтруктураШапки.КонДата));
	Запрос.УстановитьПараметр("ПрименяетсяУСНДоходы",
		УчетнаяПолитика.ПрименяетсяУСНДоходы(СтруктураШапки.Организация, СтруктураШапки.КонДата));
	Запрос.УстановитьПараметр("ПрименяетсяУСНДоходыМинусРасходы",
		УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(СтруктураШапки.Организация, СтруктураШапки.КонДата));
	Запрос.УстановитьПараметр("СтавкаНалогаУСН",
		УчетнаяПолитика.СтавкаНалогаУСН(СтруктураШапки.Организация, СтруктураШапки.КонДата));
		
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаНачислениеНалогаУСН(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	
	Возврат ТаблицыПроведения(НомераТаблиц, Результат);

КонецФункции

Функция ТекстЗапросаНачислениеНалогаУСН(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаРеквизитыНалогУСН", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, ГОД) КАК НачалоГода,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ) КАК КонДата,
	|	&ПрименяетсяУСН КАК ПрименяетсяУСН,
	|	&ПрименяетсяУСНДоходы КАК ПрименяетсяУСНДоходы,
	|	&ПрименяетсяУСНДоходыМинусРасходы КАК ПрименяетсяУСНДоходыМинусРасходы,
	|	&СтавкаНалогаУСН,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, ГОД) = НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоНачалоГода,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, ГОД) = КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКонецГода
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	&ХозОперацияДляРеестра КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Партнер,
	|	НЕОПРЕДЕЛЕНО КАК МестоХранения,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	&Период КАК ДатаДокументаИБ,
	|	&Ссылка КАК Ссылка,
	|	&Номер КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО КАК Статус,
	|	НЕОПРЕДЕЛЕНО КАК Ответственный,
	|	НЕОПРЕДЕЛЕНО КАК Автор,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО КАК Дополнительно,
	|	&Комментарий КАК Комментарий,
	|	&Проведен КАК Проведен,
	|	&ПометкаУдаления КАК ПометкаУдаления,
	|	&Период КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать КАК НомерПервичногоДокумента,
	|	0 КАК Сумма,
	|	НЕОПРЕДЕЛЕНО КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ЛОЖЬ КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК ИсправляемыйДокумент,
	|	&Период КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.РегламентнаяОперация";
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.РегламентнаяОперация"));
	ЗначенияПараметров.Вставить("ХозОперацияДляРеестра", Перечисления.ХозяйственныеОперации.РегламентнаяОперация);
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "";
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента, Ложь);
	Иначе
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента);
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

// Расчет ЕНС

Функция ПодготовитьПараметрыЗачетАвансаПоЕдиномуНалоговомуСчету(СтруктураШапки, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", СтруктураШапки.Ссылка);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаЗачетАвансаПоЕдиномуНалоговомуСчету(НомераТаблиц);
	Результат = Запрос.Выполнить();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат.Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаЗачетАвансаПоЕдиномуНалоговомуСчету(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК Период,
	|	ИСТИНА КАК ВыдаватьСообщения,
	|	РегламентнаяОперация.ТипОперации КАК ВидОперации
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции


#Область БлокировкаПриОбновленииИБ

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ПредставлениеОперации, ТипОперации) Экспорт
	
	ВходящиеДанные = Новый Соответствие;
	
	ВходящиеДанные.Вставить(Метаданные.Документы.РегламентнаяОперация);
	ВходящиеДанные.Вставить(Метаданные.РегистрыБухгалтерии.Хозрасчетный);
	
	Если ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетДолейСписанияКосвенныхРасходов Тогда
		
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияКонтрагентДоходыРасходы);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.СебестоимостьТоваров);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТрудозатратыНезавершенногоПроизводства);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.АналитикаУчетаНоменклатуры);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.АналитикаУчетаПоПартнерам);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ДолиСписанияКосвенныхРасходов);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПорядокОтраженияНаСчетахУчета);
		
	ИначеЕсли ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество
	 ИЛИ ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетТранспортногоНалога
	 ИЛИ ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетЗемельногоНалога Тогда
		
		ВходящиеДанные.Вставить(Метаданные.Документы.ИзменениеПараметровОС);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.МестонахождениеОС);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПервоначальныеСведенияОС);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПорядокУплатыНалоговНаМестах);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПорядокУчетаОС);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПорядокУчетаОСБУ);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПараметрыНачисленияЗемельногоНалога);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПараметрыНачисленияТранспортногоНалога);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.СпособыОтраженияРасходовПоИмущественнымНалогам);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.СтавкиНалогаНаИмущество);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПараметрыНачисленияНалогаНаИмущество);
		
	ИначеЕсли ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетКурсовыхРазниц Тогда
		
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ОтносительныеКурсыВалют);
		
	ИначеЕсли ТипОперации = Перечисления.ТипыРегламентныхОпераций.ФормированиеФинансовогоРезультата Тогда
		
		ВходящиеДанные.Вставить(Метаданные.Документы.СчетФактураНалоговыйАгент);
		
	ИначеЕсли ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаПрибыль
		ИЛИ ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетОтложенногоНалога Тогда
		
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПервоначальныеСведенияОС);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.РасчетДолейБазыНалогаНаПрибыль);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.РасчетСтавкиНалогаНаПрибыльЗаМесяц);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.РегистрацииВНалоговомОргане);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ);
		
	ИначеЕсли ТипОперации = Перечисления.ТипыРегламентныхОпераций.ЗакрытиеГода Тогда
		
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ДолиСписанияКосвенныхРасходов);
		
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ВходящиеДанные, ПредставлениеОперации);
	
КонецПроцедуры

#КонецОбласти


#КонецОбласти

#КонецЕсли
