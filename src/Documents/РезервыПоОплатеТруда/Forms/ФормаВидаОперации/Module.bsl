////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	СтрокаТаблицы = Элементы.СписокВидовОпераций.ТекущиеДанные;
	
	Если НЕ СтрокаТаблицы = Неопределено Тогда
		
		ОткрытьДокументВида(СтрокаТаблицы.Значение);
		
	КонецЕсли; 
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	Если Параметры.Свойство("ЗначениеКопирования") Тогда
		ЗначениеКопирования = Параметры.ЗначениеКопирования;
	КонецЕсли;
	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		ЗначенияЗаполнения  = Параметры.ЗначенияЗаполнения;
	КонецЕсли;
	Если Параметры.Свойство("Основание") Тогда
		Основание           = Параметры.Основание;
	КонецЕсли;
	Если Параметры.Свойство("Ключ") Тогда
		Ключ 				= Параметры.Ключ;
	КонецЕсли;
	
	// Список видов операций для выбора
	НоваяОперация = СписокВидовОпераций.Добавить();
	НоваяОперация.Значение      = Перечисления.ВидыОперацийРезервовПоОплатеТруда.Начисление;
	НоваяОперация.Представление = НСтр("ru = 'Начисление';
										|en = 'Accrued payroll'");
	
	НоваяОперация = СписокВидовОпераций.Добавить();
	НоваяОперация.Значение      = Перечисления.ВидыОперацийРезервовПоОплатеТруда.Инвентаризация;
	НоваяОперация.Представление = НСтр("ru = 'Инвентаризация';
										|en = 'Stocktaking'");
	
	НоваяОперация = СписокВидовОпераций.Добавить();
	НоваяОперация.Значение      = Перечисления.ВидыОперацийРезервовПоОплатеТруда.Списание;
	НоваяОперация.Представление = НСтр("ru = 'Списание';
										|en = 'Write-off'");
	
	НоваяОперация = СписокВидовОпераций.Добавить();
	НоваяОперация.Значение      = Перечисления.ВидыОперацийРезервовПоОплатеТруда.Корректировка;
	НоваяОперация.Представление = НСтр("ru = 'Корректировка';
										|en = 'Adjustment'");
	
	РезервыПоОплатеТруда.ЗаполнитьПодробноеОписаниеВидовОперациий(СписокВидовОперацийОписание);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВидовОперацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтрокаТаблицы = СписокВидовОпераций.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ОткрытьДокументВида(СтрокаТаблицы.Значение);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументВида(ВыбранныйВидОперации)
	
	Если ТипЗнч(ЗначенияЗаполнения) <> Тип("Структура") Тогда
		ЗначенияЗаполнения = Новый Структура();
	КонецЕсли;

	ЗначенияЗаполнения.Вставить("ВидОперации", ВыбранныйВидОперации);
	Если ЗначениеЗаполнено(Основание) Тогда
		ЗначенияЗаполнения.Вставить("Основание", Основание);
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Ключ",                Ключ);
	СтруктураПараметров.Вставить("ЗначенияЗаполнения",  ЗначенияЗаполнения);
	Если ЗначениеЗаполнено(ЗначениеКопирования) Тогда
		СтруктураПараметров.Вставить("ЗначениеКопирования", ЗначениеКопирования);
	КонецЕсли;
	
	Модифицированность = Ложь;
	Закрыть();
	
	ОткрытьФорму("Документ.РезервыПоОплатеТруда.Форма.ФормаДокумента", СтруктураПараметров, ВладелецФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВидовОперацийПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.СписокВидовОпераций.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВидОперации = ТекущиеДанные.Значение;
	
	ЗначенияДляОписания = СписокВидовОперацийОписание.НайтиПоЗначению(ВидОперации);
	РасшифрокаВидаОперации = ЗначенияДляОписания.Представление;
	
КонецПроцедуры
