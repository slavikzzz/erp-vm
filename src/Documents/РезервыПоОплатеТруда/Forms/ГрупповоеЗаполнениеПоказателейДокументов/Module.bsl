
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	РасширенноеРедактирование = Параметры.РасширенноеРедактирование;
	
	АдресОбщихПоказателей         = Параметры.АдресОбщихПоказателей;
	АдресПоказателейПодразделений = Параметры.АдресПоказателейПодразделений;
	АдресПоказателейСотрудников   = Параметры.АдресПоказателейСотрудников;
	
	МассивПоказателей = ПолучитьИзВременногоХранилища(АдресОбщихПоказателей);
	Если МассивПоказателей.Количество() > 0 Тогда
		ДополнитьФорму(МассивПоказателей);
		ЗаполнитьПоказатели(МассивПоказателей);
	КонецЕсли;
	Если МассивПоказателей.Количество() = 0 Тогда
		Элементы.ГруппаОбщиеПоказатели.Видимость = Ложь;
	КонецЕсли;
	
	ПоказателиПодразделений.Загрузить(ПолучитьИзВременногоХранилища(АдресПоказателейПодразделений));
	Если ПоказателиПодразделений.Количество() = 0 Тогда
		Элементы.ГруппаПоказателиПодразделений.Видимость = Ложь;
	Иначе
		МассивПоказателейПодразделений = ОбщегоНазначения.ВыгрузитьКолонку(ПоказателиПодразделений, "Показатель", Истина);
		ЗначенияРеквизитовПоказателя = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивПоказателейПодразделений, "КраткоеНаименование");
		Для Каждого СтрокаТаблицы Из ПоказателиПодразделений Цикл
			СтрокаТаблицы.ПоказательКраткоеНаименование = ЗначенияРеквизитовПоказателя[СтрокаТаблицы.Показатель];
		КонецЦикла;
	КонецЕсли;
	
	ПоказателиСотрудников.Загрузить(ПолучитьИзВременногоХранилища(АдресПоказателейСотрудников));
	Если ПоказателиСотрудников.Количество() = 0 Тогда
		Элементы.ГруппаПоказателиСотрудников.Видимость = Ложь;
	Иначе
		МассивПоказателейСотрудников = ОбщегоНазначения.ВыгрузитьКолонку(ПоказателиСотрудников, "Показатель", Истина);
		ЗначенияРеквизитовПоказателя = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивПоказателейСотрудников, "КраткоеНаименование");
		Для Каждого СтрокаТаблицы Из ПоказателиСотрудников Цикл
			СтрокаТаблицы.ПоказательКраткоеНаименование = ЗначенияРеквизитовПоказателя[СтрокаТаблицы.Показатель];
		КонецЦикла;
	КонецЕсли;
	
	КоличествоДоступныхСтраниц = (МассивПоказателей.Количество() > 0)
		+ (ПоказателиПодразделений.Количество() > 0)
		+ (ПоказателиСотрудников.Количество() > 0);
	
	Если КоличествоДоступныхСтраниц <= 1 Тогда
		Элементы.ПоказателиСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	Элементы.ГруппаПоказателиОтсутствуют.Видимость = КоличествоДоступныхСтраниц = 0; 
	
	КлючСохраненияПоложенияОкна = Строка(КоличествоПоказателей);
	
	УстановитьДоступностьЗначенийПоказателей(ЭтотОбъект);
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_ИспользованиеПоказателяПриИзменении(Элемент)
	
	УстановитьДоступностьЗначенийПоказателей(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПоказательДействие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыПоказателиСотрудников

&НаКлиенте
Процедура ПоказателиСотрудниковПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ПоказателиСотрудников.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элементы.ПоказателиСотрудниковЗначение.ФорматРедактирования = "ЧДЦ=" + ТекущиеДанные.Точность;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыПоказателиПодразделений

&НаКлиенте
Процедура ПоказателиПодразделенийПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ПоказателиПодразделений.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элементы.ПоказателиПодразделенийЗначение.ФорматРедактирования = "ЧДЦ=" + ТекущиеДанные.Точность;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	НачисленияПоказатели = ПолучитьПоказателиНаСервере();
	Оповестить("ИзмененыПоказателиДокументаРезервыПоОплатеТруда", НачисленияПоказатели, ЭтотОбъект);
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	// Табличная часть ПоказателиПодразделений
	
	// Доступность ввода значения
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПоказателиПодразделений.Использование");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение	= Ложь;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	ОформляемоеПоле =  ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПоказателиПодразделенийЗначение");
	ОформляемоеПоле.Использование = Истина;
	
	// Отметка обязательности значения
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПоказателиПодразделений.Использование");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение	= Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	ОформляемоеПоле =  ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПоказателиПодразделенийЗначение");
	ОформляемоеПоле.Использование = Истина;
	
	// Формат ввода значения
	Для ЗначениеТочности = 0 по 5 Цикл
		
		ЭлементОформления = УсловноеОформление.Элементы.Добавить();
		ЭлементОформления.Использование = Истина;
		
		ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.Использование		= Истина;
		ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПоказателиПодразделений.Точность");
		ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение	= ЗначениеТочности;
		
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Формат", "ЧДЦ=" + ЗначениеТочности);
		
		ОформляемоеПоле =  ЭлементОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПоказателиПодразделенийЗначение");
		ОформляемоеПоле.Использование = Истина;
		
	КонецЦикла;
	
	// Табличная часть ПоказателиСотрудников
	
	// Доступность ввода значения
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПоказателиСотрудников.Использование");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение	= Ложь;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	ОформляемоеПоле =  ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПоказателиСотрудниковЗначение");
	ОформляемоеПоле.Использование = Истина;
	
	// Отметка обязательности значения
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПоказателиСотрудников.Использование");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение	= Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	ОформляемоеПоле =  ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПоказателиСотрудниковЗначение");
	ОформляемоеПоле.Использование = Истина;
	
	// Формат ввода значения
	Для ЗначениеТочности = 0 по 5 Цикл
		
		ЭлементОформления = УсловноеОформление.Элементы.Добавить();
		ЭлементОформления.Использование = Истина;
		
		ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.Использование		= Истина;
		ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПоказателиСотрудников.Точность");
		ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение	= ЗначениеТочности;
		
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Формат", "ЧДЦ=" + ЗначениеТочности);
		
		ОформляемоеПоле =  ЭлементОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПоказателиСотрудниковЗначение");
		ОформляемоеПоле.Использование = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьФорму(МассивПоказателей)

	КоличествоПоказателей = МассивПоказателей.Количество();
	ФиксированнаяСумма = КоличествоПоказателей = 0;
	
	РеквизитыПоказателей = Новый Соответствие;
	Если КоличествоПоказателей <> 0 Тогда 
		РеквизитыПоказателей = РезервыПоОплатеТрудаРасширенный.СведенияОПоказателяхРасчетаРезервов(МассивПоказателей);
	КонецЕсли;
	
	КоличествоПоказателей = ?(ФиксированнаяСумма, 1, КоличествоПоказателей);
	
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(ЭтотОбъект, МассивИменРеквизитовФормы);
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	МассивТиповПоказателей = Новый Массив;
	МассивТиповПоказателей.Добавить(Тип("СправочникСсылка.ПоказателиРасчетаЗарплаты"));
	МассивТиповПоказателей.Добавить(Тип("СправочникСсылка.ПоказателиРасчетаРезервовПоОплатеТруда"));
	
	Для Сч = 1 По КоличествоПоказателей Цикл
		
		ПоказательРеквизит = Новый РеквизитФормы(
			"Показатель" + Сч, Новый ОписаниеТипов(МассивТиповПоказателей));
		ДобавляемыеРеквизиты.Добавить(ПоказательРеквизит);
		
		НаименованиеПоказателя = ?(ФиксированнаяСумма, 
			НСтр("ru = 'Сумма';
				|en = 'Amount'"), ?(ЗначениеЗаполнено(РеквизитыПоказателей[МассивПоказателей[Сч-1]].КраткоеНаименование), 
			РеквизитыПоказателей[МассивПоказателей[Сч-1]].КраткоеНаименование, РеквизитыПоказателей[МассивПоказателей[Сч-1]].Наименование));
		
		ИспользованиеПоказателяРеквизит = Новый РеквизитФормы(
			"Показатель" + Сч + "Использование", Новый ОписаниеТипов("Булево"), , НаименованиеПоказателя);
		ДобавляемыеРеквизиты.Добавить(ИспользованиеПоказателяРеквизит);
		
		Если РасширенноеРедактирование Тогда
			ДействиеРеквизит = Новый РеквизитФормы("Показатель" + Сч + "Действие",
				Новый ОписаниеТипов("Строка"));
			ДобавляемыеРеквизиты.Добавить(ДействиеРеквизит);
		КонецЕсли;
			
		ЗначениеРеквизит = Новый РеквизитФормы("Показатель" + Сч + "Значение",
			Справочники.ПоказателиРасчетаЗарплаты.ОписаниеТиповЗначенияПоказателяРасчетаЗарплаты());
		ДобавляемыеРеквизиты.Добавить(ЗначениеРеквизит);
		
	КонецЦикла;
	
	ЗарплатаКадры.ИзменитьРеквизитыФормы(ЭтотОбъект, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
	ТипЧисло = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2));
	
	Для Сч = 1 По КоличествоПоказателей Цикл
		
		Если Элементы.Найти("Показатель" + Сч + "Использование") = Неопределено Тогда 
			
			Использование = Элементы.Добавить("Показатель" + Сч + "Использование", Тип("ПолеФормы"), Элементы.ПоказателиЛеваяКолонка);
			Использование.Вид = ВидПоляФормы.ПолеФлажка;
			Использование.ПутьКДанным = "Показатель" + Сч + "Использование";
			Использование.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
			Использование.УстановитьДействие("ПриИзменении", "Подключаемый_ИспользованиеПоказателяПриИзменении");
			
			Если РасширенноеРедактирование Тогда
				Действие = Элементы.Добавить("Показатель" + Сч + "Действие", Тип("ПолеФормы"), Элементы.ПоказателиСредняяКолонка);
				Действие.Вид = ВидПоляФормы.ПолеВвода;
				Действие.ПутьКДанным = "Показатель" + Сч + "Действие";
				Действие.РастягиватьПоГоризонтали = Ложь;
				Действие.Ширина = 16;
				Действие.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
				Действие.РежимВыбораИзСписка = Истина;
				Действие.РедактированиеТекста = Ложь;
				ЗаполнитьСписокДействийСПоказателями(Действие.СписокВыбора);
				ЭтаФорма["Показатель" + Сч + "Действие"] = Действие.СписокВыбора[0].Значение;
				Действие.УстановитьДействие("Очистка", "Подключаемый_ПоказательДействие");
			КонецЕсли;
			
			Значение = Элементы.Добавить("Показатель" + Сч + "Значение", Тип("ПолеФормы"), Элементы.ПоказателиПраваяКолонка);
			Значение.Вид = ВидПоляФормы.ПолеВвода;
			Значение.ПутьКДанным = "Показатель" + Сч + "Значение";
			Значение.РастягиватьПоГоризонтали = Ложь;
			Значение.Ширина = 16;
			Значение.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			
			ТипПоказателя = ?(ФиксированнаяСумма, ТипЧисло, РеквизитыПоказателей[МассивПоказателей[Сч-1]].ТипПоказателяПриРасчете);
			Если РасширенноеРедактирование Тогда
				ТипПоказателя = Новый ОписаниеТипов(ТипПоказателя, "Число",,Новый КвалификаторыЧисла(15, 4));
			КонецЕсли;
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, "Показатель" + Сч + "Значение", "ОграничениеТипа", ТипПоказателя);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоказатели(МассивПоказателей)
	
	Сч = 1;
	Для Каждого Показатель Из МассивПоказателей Цикл 
		ЭтотОбъект["Показатель" + Сч] = Показатель;
		Сч = Сч + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЗначенийПоказателей(Форма)
	
	Для Сч = 1 По Форма.КоличествоПоказателей Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, 
			"Показатель" + Сч + "Значение", "Доступность", Форма["Показатель" + Сч + "Использование"]);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, 
			"Показатель" + Сч + "Действие", "Доступность", Форма["Показатель" + Сч + "Использование"]);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДействийСПоказателями(СписокДействий)
	
	СписокДействий.Добавить("ФиксЗначение", "Фикс. значение");
	СписокДействий.Добавить("Прибавить", "Прибавить");
	СписокДействий.Добавить("Умножить", "Умножить на");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПоказателиНаСервере()
	
	ЗначенияПоказателей = Новый Соответствие;
	Для Сч = 1 По КоличествоПоказателей Цикл
		Если ЭтотОбъект["Показатель" + Сч + "Использование"] Тогда 
			Если РасширенноеРедактирование Тогда
				ДействиеСПоказателем = Новый Структура;
				ДействиеСПоказателем.Вставить("Действие", ЭтотОбъект["Показатель" + Сч + "Действие"]);
				ДействиеСПоказателем.Вставить("Значение", ЭтотОбъект["Показатель" + Сч + "Значение"]);
				ЗначенияПоказателей.Вставить(ЭтотОбъект["Показатель" + Сч], ДействиеСПоказателем);
			Иначе
				ЗначенияПоказателей.Вставить(ЭтотОбъект["Показатель" + Сч], ЭтотОбъект["Показатель" + Сч + "Значение"]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Отбор = Новый Структура("Использование", Истина);
	
	АдресОбщихПоказателей = ПоместитьВоВременноеХранилище(ЗначенияПоказателей, Новый УникальныйИдентификатор);
	
	ТаблицаПоказателейПодразделений = ПоказателиПодразделений.Выгрузить(Отбор);
	АдресПоказателейПодразделений = ПоместитьВоВременноеХранилище(ТаблицаПоказателейПодразделений, Новый УникальныйИдентификатор);
	
	ТаблицаПоказателейСотрудников = ПоказателиСотрудников.Выгрузить(Отбор);
	АдресПоказателейСотрудников = ПоместитьВоВременноеХранилище(ТаблицаПоказателейСотрудников, Новый УникальныйИдентификатор);
	
	НачисленияПоказатели = Новый Структура("АдресОбщихПоказателей, АдресПоказателейПодразделений, АдресПоказателейСотрудников",
		АдресОбщихПоказателей, АдресПоказателейПодразделений, АдресПоказателейСотрудников);
		
	Возврат НачисленияПоказатели;
	
КонецФункции

#КонецОбласти
