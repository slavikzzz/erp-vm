
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокРаспоряжений = СформироватьСписокРаспоряжений();
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список,
		"СписокРаспоряжений",
		СписокРаспоряжений);

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СформироватьСписокРаспоряжений()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаЗаказы.ЗаказПоставщику КАК ЗаказПоставщику
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
	|		ЗаказыОстатки.КОформлениюОстаток КАК КОформлению
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|				,
	|				ЗаказПоставщику.Организация = &Организация
	|					И ЗаказПоставщику ССЫЛКА Документ.ЗаказДавальца
	|					И ЗаказПоставщику.Контрагент = &Контрагент
	|					И ЗаказПоставщику.Договор = &Договор
	|					И ЗаказПоставщику.Партнер = &Партнер
	|					И (Склад = &Склад
	|						ИЛИ Склад В ИЕРАРХИИ (&Склад)
	|						ИЛИ Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))) КАК ЗаказыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыДвижения.ЗаказПоставщику,
	|		ВЫБОР
	|			КОГДА ЗаказыДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЗаказыДвижения.КОформлению
	|			ИНАЧЕ ЗаказыДвижения.КОформлению
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам КАК ЗаказыДвижения
	|	ГДЕ
	|		ЗаказыДвижения.Регистратор = &Регистратор
	|		И ЗаказыДвижения.Активность
	|		И ЗаказыДвижения.ЗаказПоставщику ССЫЛКА Документ.ЗаказДавальца
	|		И ЗаказыДвижения.ЗаказПоставщику.Организация = &Организация
	|		И ЗаказыДвижения.ЗаказПоставщику.Контрагент = &Контрагент
	|		И ЗаказыДвижения.ЗаказПоставщику.Договор = &Договор
	|		И ЗаказыДвижения.ЗаказПоставщику.Партнер = &Партнер
	|		И (ЗаказыДвижения.Склад = &Склад
	|				ИЛИ ЗаказыДвижения.Склад В ИЕРАРХИИ (&Склад)
	|				ИЛИ ЗаказыДвижения.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))) КАК ТаблицаЗаказы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗаказы.ЗаказПоставщику
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаЗаказы.КОформлению) > 0");
	
	МассивОтборов = Новый Массив;
	МассивОтборов.Добавить("Организация");
	МассивОтборов.Добавить("Контрагент");
	МассивОтборов.Добавить("Договор");
	МассивОтборов.Добавить("Партнер");
	
	Для каждого ИмяОтбора Из МассивОтборов Цикл
		
		ЗначениеОтбора = Неопределено;
		Если Параметры.Отбор.Свойство(ИмяОтбора, ЗначениеОтбора) Тогда
			Параметры.Отбор.Удалить(ИмяОтбора);
		КонецЕсли;
		Запрос.УстановитьПараметр(ИмяОтбора, ЗначениеОтбора);
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Регистратор", Параметры.Регистратор);
	Запрос.УстановитьПараметр("Склад", Параметры.Склад);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ЗаказПоставщику");
	
КонецФункции

#КонецОбласти