#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачала, "Объект.ДатаНачала", Отказ, НСтр("ru = 'Дата начала';
																								|en = 'Start date'"), , , Ложь);
	ВыплатыПоДоговорамОпеки.ПроверитьДатаОкончанияНеМеньшеДатыНачала(ДатаНачала, ДатаОкончания, ЭтотОбъект, "ДатаОкончания", Отказ);
	Если Не ОтразитьТрудовуюДеятельность Тогда
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("КодПоОКЗ"));
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения, , Истина)
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВыплатыПоДоговорамОпеки") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, , "Номер,Дата,Проведен");
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВыплатыПоДоговорамОпекиВыплаты.*
			|ИЗ
			|	Документ.ВыплатыПоДоговорамОпеки.Выплаты КАК ВыплатыПоДоговорамОпекиВыплаты
			|ГДЕ
			|	ВыплатыПоДоговорамОпекиВыплаты.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		РезультатЗапроса = Запрос.Выполнить();
		ДанныеЗаполненияВыплаты = РезультатЗапроса.Выбрать();
		Пока ДанныеЗаполненияВыплаты.Следующий() Цикл
			НоваяСтрока = Выплаты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеЗаполненияВыплаты, , "ИдентификаторВыплаты");
			НоваяСтрока.ИдентификаторВыплаты = Новый УникальныйИдентификатор;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	Для Каждого УсловияДоговора Из ДанныеДляПроведения.УсловияДоговора Цикл 
		Движения.УсловияДоговораОпеки.Записывать = Истина;
	    НоваяСтрока = Движения.УсловияДоговораОпеки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, УсловияДоговора);
		НоваяСтрока.Период = УсловияДоговора.ДатаНачала;
	КонецЦикла;
	
	УсловияВыплат = ДанныеДляПроведения.УсловияВыплат;
	Для Каждого Строка Из УсловияВыплат Цикл
		Движения.УсловияВыплатПоДоговоруОпеки.Записывать = Истина;
	    НоваяСтрока = Движения.УсловияВыплатПоДоговоруОпеки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		НоваяСтрока.Период = ДатаНачала;
	КонецЦикла;
	
	ОтражениеЗарплатыВБухучете.СформироватьДвиженияБухучетДоговоровГПХ(Движения, ДанныеДляПроведения.НастройкиБухучета);
	
	КадровыйУчет.СформироватьДвиженияДоговоровГПХ(Движения, ДанныеДляПроведения.ПериодыДействияДоговоровГражданскоПравовогоХарактера);
	УчетСтажаПФР.ЗарегистрироватьПериодыВУчетеСтажаПФР(Движения, ДанныеДляРегистрацииВУчетаСтажаПФР());
	
	ЭлектронныеТрудовыеКнижки.СформироватьДвиженияМероприятийТрудовойДеятельности(
		Движения.МероприятияТрудовойДеятельности,
		ДанныеДляПроведения.МероприятияТрудовойДеятельности);
	
	ЗарегистрироватьДанныеОВремениДляРасчетаСреднегоФСС();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбменДанными

Функция СовместноРегистрируемыеОбъекты() Экспорт
	Возврат ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудник);
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получает данные для формирования движений.
// Возвращает таблицу значений - данные, необходимые для формирования плановых начислений по договорам.
//
Функция ДанныеДляПроведения()
	
	ДатаВыделенияДоходовПоДоговоруОпеки = УчетНДФЛ.ДатаВыделенияДоходовПоДоговоруОпеки();
	
	ДатаАктуальности = ДатаВыделенияДоходовПоДоговоруОпеки;
	
	ВидДохода = УчетНДФЛ.ВидДоходаПоДоговоруОпеки(ДатаАктуальности);
	ВидВычета = УчетНДФЛ.ВидВычетаПоДоговоруОпеки(ДатаАктуальности);
	
	Если ПолучаетСтраховуюПенсию Тогда
		КодДоходаСтраховыеВзносы = ?(ОблагаетсяФСС_НС, 
		ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыДоходовПоСтраховымВзносам.ВыплатыПоДоговорамОпекиПолучающимСтраховыеПенсииОблагаемыеФСС_НС"),
		ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыДоходовПоСтраховымВзносам.ВыплатыПоДоговорамОпекиПолучающимСтраховыеПенсии"));
	Иначе 
		КодДоходаСтраховыеВзносы = УчетСтраховыхВзносов.ВидДоходаДляДоговораНаВыполнениеРабот(ОблагаетсяФСС_НС);
	КонецЕсли;
	
	ВсеУсловияДоговора = Новый Массив;

	УсловияДоговора = Новый Структура;
	УсловияДоговора.Вставить("Организация", Организация);
	УсловияДоговора.Вставить("Сотрудник", Сотрудник);
	УсловияДоговора.Вставить("ФизическоеЛицо", ФизическоеЛицо);
	УсловияДоговора.Вставить("Договор", Ссылка);
	УсловияДоговора.Вставить("КодДохода", УчетНДФЛ.ВидДоходаПоДоговоруОпеки(ДатаНачала));
	УсловияДоговора.Вставить("КодВычета", УчетНДФЛ.ВидВычетаПоДоговоруОпеки(ДатаНачала));
	УсловияДоговора.Вставить("КодДоходаСтраховыеВзносы", КодДоходаСтраховыеВзносы);
	УсловияДоговора.Вставить("Подразделение", Подразделение);
	УсловияДоговора.Вставить("СуммаВычета", СуммаВычета);
	УсловияДоговора.Вставить("ДатаНачала", ДатаНачала);
	УсловияДоговора.Вставить("ДатаОкончания", ДатаОкончания);
	УсловияДоговора.Вставить("Территория", Территория);
	УсловияДоговора.Вставить("КатегорияДохода", КатегорияДохода);
	УсловияДоговора.Вставить("ПолучаетСтраховуюПенсию", ПолучаетСтраховуюПенсию);
	Если ДатаНачала<ДатаВыделенияДоходовПоДоговоруОпеки И ДатаВыделенияДоходовПоДоговоруОпеки<=ДатаОкончания Тогда // Надо делить.
		НачальныеУсловияДоговора = Новый ФиксированнаяСтруктура(УсловияДоговора);
		СтарыеУсловияДоговора = Новый Структура(НачальныеУсловияДоговора);
		СтарыеУсловияДоговора.ДатаОкончания = НачалоДня(НачалоДня(ДатаВыделенияДоходовПоДоговоруОпеки)-1);
		ВсеУсловияДоговора.Добавить(СтарыеУсловияДоговора);
		НовыеУсловияДоговора = Новый Структура(НачальныеУсловияДоговора);
		НовыеУсловияДоговора.ДатаНачала = ДатаВыделенияДоходовПоДоговоруОпеки;
		НовыеУсловияДоговора.КодДохода = УчетНДФЛ.ВидДоходаПоДоговоруОпеки(ДатаВыделенияДоходовПоДоговоруОпеки);
		НовыеУсловияДоговора.КодВычета = УчетНДФЛ.ВидВычетаПоДоговоруОпеки(ДатаВыделенияДоходовПоДоговоруОпеки);
		ВсеУсловияДоговора.Добавить(НовыеУсловияДоговора);
	Иначе 
		ВсеУсловияДоговора.Добавить(УсловияДоговора);
	КонецЕсли;
	
	ДанныеДляПроведения = Новый Структура;
	ДанныеДляПроведения.Вставить("УсловияДоговора", ВсеУсловияДоговора);
	
	УсловияВыплат = Новый Массив;
	
	Дети = Новый Массив;
	Для Каждого СтрокаВыплаты Из Выплаты Цикл 
		Если ЗначениеЗаполнено(СтрокаВыплаты.Ребенок) И Дети.Найти(СтрокаВыплаты.Ребенок)=Неопределено Тогда 
			Дети.Добавить(СтрокаВыплаты.Ребенок);
		КонецЕсли;
	КонецЦикла;
	ДатыРождения = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Дети, "ДатаРождения");
	
	Для Каждого СтрокаВыплаты Из Выплаты Цикл 
		
		Если ЗначениеЗаполнено(СтрокаВыплаты.Ребенок) Тогда 
			ДатаРождения = ДатыРождения.Получить(СтрокаВыплаты.Ребенок);
		Иначе 
			ДатаРождения = Неопределено;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаРождения) Тогда 
			Если СтрокаВыплаты.ВыплачиваетсяПриВозрастеОт>0 Тогда 
				ДатаНачалаВыплаты = ДобавитьМесяц(ДатаРождения, СтрокаВыплаты.ВыплачиваетсяПриВозрастеОт);
				Если СтрокаВыплаты.ИсключаяДатуОт Тогда 
					ДатаНачалаВыплаты = ДатаНачалаВыплаты + 24*60*60;
				КонецЕсли;
				Если ДатаНачалаВыплаты < ДатаНачала Тогда 
					ДатаНачалаВыплаты = ДатаНачала;
				КонецЕсли;
			Иначе 
				ДатаНачалаВыплаты = ДатаНачала;
			КонецЕсли;
			
			Если СтрокаВыплаты.ВыплачиваетсяПриВозрастеДо>0 Тогда 
				ДатаОкончанияВыплаты = ДобавитьМесяц(НачалоДня(НачалоДня(ДатаРождения)-1), СтрокаВыплаты.ВыплачиваетсяПриВозрастеДо);
				Если СтрокаВыплаты.ВключаяДатуДо Тогда 
					ДатаОкончанияВыплаты = ДатаОкончанияВыплаты + 24*60*60;
				КонецЕсли;
				Если ДатаОкончанияВыплаты > ДатаОкончания Тогда 
					ДатаОкончанияВыплаты = ДатаОкончания;
				КонецЕсли;
			Иначе 
				ДатаОкончанияВыплаты = ДатаОкончания;
			КонецЕсли;

		Иначе 
			ДатаНачалаВыплаты = ДатаНачала;
			ДатаОкончанияВыплаты = ДатаОкончания;
		КонецЕсли;
		
		
		Если ДатаОкончанияВыплаты<ДатаНачалаВыплаты Тогда 
			Продолжить;
		КонецЕсли;
		
		ПараметрыВыплаты = Новый Структура;
		ПараметрыВыплаты.Вставить("Договор", Ссылка);
		ПараметрыВыплаты.Вставить("ИдентификаторВыплаты", СтрокаВыплаты.ИдентификаторВыплаты);
		ПараметрыВыплаты.Вставить("ДатаНачала", ДатаНачалаВыплаты);
		ПараметрыВыплаты.Вставить("ДатаОкончания", ДатаОкончанияВыплаты);
		ПараметрыВыплаты.Вставить("СпособРасчета", СтрокаВыплаты.СпособРасчета);
		ПараметрыВыплаты.Вставить("ПрожиточныйМинимум", СтрокаВыплаты.ПрожиточныйМинимум);
		ПараметрыВыплаты.Вставить("Размер", СтрокаВыплаты.Размер);
		ПараметрыВыплаты.Вставить("Коэффициент", СтрокаВыплаты.Коэффициент);
		ПараметрыВыплаты.Вставить("Наименование", СтрокаВыплаты.Наименование);
		ПараметрыВыплаты.Вставить("Ребенок", СтрокаВыплаты.Ребенок);
		УсловияВыплат.Добавить(ПараметрыВыплаты);
	КонецЦикла;
	
	ДанныеДляПроведения.Вставить("УсловияВыплат", УсловияВыплат);
	
	ПериодыДействияДоговоровГражданскоПравовогоХарактера = Новый Структура;
	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Вставить("Организация", Организация);
	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Вставить("Филиал", Организация);
	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Вставить("Сотрудник", Сотрудник);
	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Вставить("ФизическоеЛицо", ФизическоеЛицо);
	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Вставить("ДатаНачала", ДатаНачала);
	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Вставить("ДатаОкончания", ДатаОкончания);
	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Вставить("Подразделение", Подразделение);
	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Вставить("Территория", Территория);
	
	ДанныеДляПроведения.Вставить("ПериодыДействияДоговоровГражданскоПравовогоХарактера",
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПериодыДействияДоговоровГражданскоПравовогоХарактера));
	
	ДанныеДляПроведения.Вставить("МероприятияТрудовойДеятельности",
		Документы.ВыплатыПоДоговорамОпеки.ДанныеДляПроведенияМероприятияТрудовойДеятельности(Ссылка).Получить(Ссылка));
		
	НовыеНастройкиБухучета = ОтражениеЗарплатыВБухучете.НоваяТаблицаНастройкиБухучетаДоговоровГПХ();
	РаботаВХозрасчетнойОрганизации = ПолучитьФункциональнуюОпцию("РаботаВХозрасчетнойОрганизации");
	СтатьяРасходовДоговора = Справочники.СтатьиРасходовЗарплата.ПустаяСсылка();
	Если РаботаВХозрасчетнойОрганизации Тогда
		ОписаниеСтатейРасходов = ЗарплатаКадры.СтатьиРасходовПоСпособамРасчетовСФизическимиЛицами();
		СтатьяРасходовДоговора = ОписаниеСтатейРасходов[Перечисления.СпособыРасчетовСФизическимиЛицами.РасчетыСКонтрагентами];
	КонецЕсли;
	
	НоваяСтрока = НовыеНастройкиБухучета.Добавить();
	НоваяСтрока.ДоговорАкт 					= Ссылка;
	НоваяСтрока.ИдентификаторСтроки 		= 0;
	НоваяСтрока.ПодразделениеУчетаЗатрат 	= Подразделение;
	НоваяСтрока.СтатьяФинансирования 		= СтатьяФинансирования;
	НоваяСтрока.ОблагаетсяЕНВД 				= Ложь;
	НоваяСтрока.ДоляРаспределения 			= 1;
	НоваяСтрока.СпособОтраженияЗарплатыВБухучете = СпособОтраженияЗарплатыВБухучете;
	Если РаботаВХозрасчетнойОрганизации Тогда
		НоваяСтрока.СтатьяРасходов = СтатьяРасходовДоговора;
	Иначе
		НоваяСтрока.СтатьяРасходов = СтатьяРасходов;
	КонецЕсли;
	
	ДанныеДляПроведения.Вставить("НастройкиБухучета", НовыеНастройкиБухучета);
		
	Возврат ДанныеДляПроведения;
	
КонецФункции

Функция ДанныеДляРегистрацииВУчетаСтажаПФР()
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Ссылка);
	
	ДанныеДляРегистрации = Документы.ВыплатыПоДоговорамОпеки.ДанныеДляРегистрацииВУчетаСтажаПФР(МассивСсылок);
	
	Возврат ДанныеДляРегистрации[Ссылка];
	
КонецФункции

Процедура ПриКопировании(ОбъектКопирования)
	Для Каждого СтрокаВыплат Из Выплаты Цикл 
		СтрокаВыплат.ИдентификаторВыплаты = Новый УникальныйИдентификатор;
	КонецЦикла;
КонецПроцедуры

Процедура ЗарегистрироватьДанныеОВремениДляРасчетаСреднегоФСС() Экспорт
	Если ПолучаетСтраховуюПенсию Тогда
		Возврат;
	КонецЕсли;
	ДатаОбъединенияВзносов = УчетСтраховыхВзносов.ДатаОбъединенияВзносов();
	Если ДатаОкончания < ДатаОбъединенияВзносов Тогда
		Возврат;
	КонецЕсли;
	РегистрыСведений.ДанныеОВремениДляРасчетаСреднегоФСС.УстановитьОтработанныеДни(
		Движения,
		ДанныеДляСреднегоФСС(),
		Макс(ДатаНачала, ДатаОбъединенияВзносов),
		ДатаОкончания);
КонецПроцедуры

Функция ДанныеДляСреднегоФСС()
	Возврат РегистрыСведений.ДанныеОВремениДляРасчетаСреднегоФСС.ДанныеДляУстановитьОтработанныеДни(
		Ссылка,
		ФизическоеЛицо,
		ЗарплатаКадры.ГоловнаяОрганизация(Организация),
		Ссылка,
		ПланыВидовРасчета.Начисления.ПустаяСсылка());
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли