#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		ЗаполнитьДокументПоОтбору(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
		ЗаполнитьНаОснованииОбъектаЭксплуатации(ДанныеЗаполнения);
	КонецЕсли;
	
	ПараметрыВыбораСтатейИАналитик = Документы.ПараметрыНачисленияЗемельногоНалога.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ОбработкаЗаполнения(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ЗаполнитьРеквизитыПередЗаписью();
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ПроверитьНаличиеПараметровНаДату(Отказ);
	КонецЕсли;
	
	ПараметрыВыбораСтатейИАналитик = Документы.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ПередЗаписью(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	ПроверитьРеквизиты(НепроверяемыеРеквизиты, Отказ);
	
	ПараметрыВыбораСтатейИАналитик = Документы.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, ПараметрыВыбораСтатейИАналитик);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Документы.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(
		НСтр("ru = 'Ввод первоначальных сведений для расчета земельного налога';
			|en = 'Enter initial information to calculate a land value tax'"));
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Ответственный = Пользователи.ТекущийПользователь();
	
	ЗаполнениеОбъектовПоСтатистике.ЗаполнитьРеквизитыОбъекта(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПередЗаписью()
	
	УчетСНачалаГода = (КонецМесяца(Дата) = КонецГода(Дата));
	
	ПараметрыРеквизитовОбъекта = ИмущественныеНалогиКлиентСервер.НастройкаРеквизитов_ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога(ЭтотОбъект);
	ОбщегоНазначенияУТКлиентСервер.ОчиститьНеиспользуемыеРеквизиты(
		ЭтотОбъект, ПараметрыРеквизитовОбъекта, "ПараметрыРегистрации,ПараметрыНалога,НалоговыйОрган");
	
	УказаныСпособыОтражениеРасходов = (ОтражениеРасходов.Количество() <> 0);
	
	Для Каждого ДанныеСтроки Из ПараметрыРегистрации Цикл
		
		Если Не ДанныеСтроки.ОбщаяСобственность Тогда
			ДанныеСтроки.ДоляВПравеОбщейСобственностиЧислитель = 0;
			ДанныеСтроки.ДоляВПравеОбщейСобственностиЗнаменатель = 0;
		КонецЕсли;
		
		Если Не ДанныеСтроки.ЖилищноеСтроительство Тогда
			ДанныеСтроки.ДатаРегистрацииПравНаОбъектНедвижимости = '000101010000';
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ДанныеСтроки Из ПараметрыНалога Цикл
		
		Если УчетСНачалаГода Тогда
			ДанныеСтроки.ДатаПараметров = КонецМесяца(Дата) + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ДанныеСтроки Из НалоговыйОрган Цикл
		
		Если УчетСНачалаГода Тогда
			ДанныеСтроки.ДатаПараметров = КонецМесяца(Дата) + 1;
		КонецЕсли;
		
		Если ДанныеСтроки.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО
			И ДанныеСтроки.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
			
			ДанныеСтроки.КодПоОКТМО = "";
		КонецЕсли;
		
		Если ДанныеСтроки.ПостановкаНаУчетВНалоговомОргане <> Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
			ДанныеСтроки.НалоговыйОрган = Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоОтбору(Основание)

	Если Основание.Свойство("Дата") Тогда
		Дата = Основание.Дата;
	КонецЕсли;
	
	Если Основание.Свойство("Организация")
		И ЗначениеЗаполнено(Основание.Организация) Тогда
		Организация = Основание.Организация;
	КонецЕсли;

	Если Основание.Свойство("ОсновноеСредство") Тогда
		ЗаполнитьНаОснованииОбъектаЭксплуатации(Основание.ОсновноеСредство);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииОбъектаЭксплуатации(ДанныеЗаполнения)
	
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "ЭтоГруппа,ГруппаОС");
	
	Если РеквизитыОснования.ЭтоГруппа Тогда
		
		ТекстСообщения = НСтр("ru = 'Оформление документа на основании группы ОС невозможен.
			|Выберите ОС. Для раскрытия группы используйте клавиши Ctrl и стрелку вниз.';
			|en = 'Cannot create documents based on the fixed assets group.
			|Select fixed assets. To expand the group, press Ctrl+Down.'");
			
		ВызватьИсключение(ТекстСообщения);
		
	ИначеЕсли РеквизитыОснования.ГруппаОС <> Перечисления.ГруппыОС.ЗемельныеУчастки Тогда
		
		ТекстСообщения = НСтр("ru = 'Оформление документа доступно только для земельных участков.';
								|en = 'You can create the document only for land plots.'");
			
		ВызватьИсключение(ТекстСообщения);
			
	КонецЕсли;
	
	ОсновноеСредство = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ПроверитьРеквизиты(НепроверяемыеРеквизиты, Отказ)
	
	ПараметрыРеквизитовОбъекта = ИмущественныеНалогиКлиентСервер.НастройкаРеквизитов_ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога(
									ЭтотОбъект);
									
	ОбщегоНазначенияУТ.ОтключитьПроверкуЗаполненияРеквизитовОбъекта(ПараметрыРеквизитовОбъекта, НепроверяемыеРеквизиты);
	
	ПроверитьДатыПараметров(НепроверяемыеРеквизиты, Отказ);
	
	ПроверитьПараметрыРегистрации(НепроверяемыеРеквизиты, Отказ);
	ПроверитьПараметрыНалога(НепроверяемыеРеквизиты, Отказ);
	ПроверитьНалоговыйОрган(НепроверяемыеРеквизиты, Отказ);
	
КонецПроцедуры

Процедура ПроверитьДатыПараметров(НепроверяемыеРеквизиты, Отказ)
	
	УчетСНачалаГода = (КонецМесяца(Дата) = КонецГода(Дата));

	Если УчетСНачалаГода Тогда
		
		НепроверяемыеРеквизиты.Добавить("ПараметрыНалога.ДатаПараметров");
		НепроверяемыеРеквизиты.Добавить("НалоговыйОрган.ДатаПараметров");
		
		Возврат;
		
	КонецЕсли;
	
	МинимальнаяДата = '000101010000';
	НачалоГода = НачалоГода(Дата);
	
	Для Каждого ДанныеСтроки Из ПараметрыРегистрации Цикл
		
		Если ДанныеСтроки.ДатаРегистрации > КонецДня(Дата)
			И ЗначениеЗаполнено(ДанныеСтроки.ДатаРегистрации) Тогда
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Дата сведений о регистрации должна быть раньше начала учета %1';
					|en = 'The registration information date must be earlier than the accounting start date %1'"),
				ОбщегоНазначенияУТКлиентСервер.ПолучитьПредставлениеПериодаРегистрации(КонецМесяца(Дата) + 1));
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"ПараметрыРегистрации", ДанныеСтроки.НомерСтроки, "ДатаРегистрации");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		КонецЕсли;
		
		Если ДанныеСтроки.ДатаСнятияСРегистрации < НачалоГода
			И ЗначениеЗаполнено(ДанныеСтроки.ДатаСнятияСРегистрации) Тогда
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Дата снятия с регистрации должна быть не раньше начала года %1';
					|en = 'The registration removal date must not be earlier than the beginning of the year %1'"),
				Формат(НачалоГода, "ДЛФ=D;"));
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"ПараметрыРегистрации", ДанныеСтроки.НомерСтроки, "ДатаСнятияСРегистрации");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		ИначеЕсли ДанныеСтроки.ДатаСнятияСРегистрации > КонецДня(Дата)
			И ЗначениеЗаполнено(ДанныеСтроки.ДатаСнятияСРегистрации) Тогда
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Дата снятия с регистрации должна быть раньше начала учета %1';
					|en = 'The registration removal date must be earlier than the accounting start%1'"),
				ОбщегоНазначенияУТКлиентСервер.ПолучитьПредставлениеПериодаРегистрации(КонецМесяца(Дата) + 1));
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"ПараметрыРегистрации", ДанныеСтроки.НомерСтроки, "ДатаСнятияСРегистрации");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		КонецЕсли;
		
		Если ДанныеСтроки.ДатаСнятияСРегистрации < ДанныеСтроки.ДатаРегистрации 
			И ЗначениеЗаполнено(ДанныеСтроки.ДатаРегистрации)
			И ЗначениеЗаполнено(ДанныеСтроки.ДатаСнятияСРегистрации) Тогда
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Дата снятия с регистрации должна быть не раньше даты регистрации или изменений %1';
					|en = 'The registration removal date must not be earlier than the registration date or change date %1'"),
				Формат(ДанныеСтроки.ДатаРегистрации, "ДЛФ=D;"));
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"ПараметрыРегистрации", ДанныеСтроки.НомерСтроки, "ДатаСнятияСРегистрации");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		КонецЕсли;
		
		МинимальнаяДата = ?(МинимальнаяДата <> '000101010000', 
							Мин(ДанныеСтроки.ДатаРегистрации, МинимальнаяДата), 
							ДанныеСтроки.ДатаРегистрации);
		
	КонецЦикла;
	
	Для Каждого ДанныеСтроки Из ПараметрыНалога Цикл
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.ДатаПараметров) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДанныеСтроки.ДатаПараметров < НачалоГода Тогда
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Дата параметров начисления налога должна быть не раньше начала года %1';
					|en = 'The date of financial details of tax charge must not be earlier than the beginning of the year %1'"),
				Формат(НачалоГода, "ДЛФ=D;"));
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"ПараметрыНалога", ДанныеСтроки.НомерСтроки, "ДатаПараметров");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		ИначеЕсли ДанныеСтроки.ДатаПараметров > КонецДня(Дата) Тогда
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Дата параметров начисления налога должна быть не позже даты документа %1';
					|en = 'The date of financial details of tax charge must not be later than the document date %1'"),
				Формат(Дата, "ДЛФ=D;"));
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"ПараметрыНалога", ДанныеСтроки.НомерСтроки, "ДатаПараметров");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		КонецЕсли;
		
		МинимальнаяДата = ?(МинимальнаяДата <> '000101010000', 
							Мин(ДанныеСтроки.ДатаПараметров, МинимальнаяДата), 
							ДанныеСтроки.ДатаПараметров);
		
	КонецЦикла;
	
	Для Каждого ДанныеСтроки Из НалоговыйОрган Цикл

		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.ДатаПараметров) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДанныеСтроки.ДатаПараметров < НачалоГода Тогда
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Дата регистрации в налоговом органе должна быть не раньше начала года %1';
					|en = 'The date of registration with tax authority must not be earlier than the beginning of the year %1'"),
				Формат(НачалоГода, "ДЛФ=D;"));
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"НалоговыйОрган", ДанныеСтроки.НомерСтроки, "ДатаПараметров");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		ИначеЕсли ДанныеСтроки.ДатаПараметров > КонецДня(Дата) Тогда
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Дата регистрации в налоговом органе должна быть не позже даты документа %1';
					|en = 'The date of registration with tax authority must not be later than the document date %1'"),
				Формат(Дата, "ДЛФ=D;"));
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"НалоговыйОрган", ДанныеСтроки.НомерСтроки, "ДатаПараметров");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		КонецЕсли;
		
		МинимальнаяДата = ?(МинимальнаяДата <> '000101010000', 
							Мин(ДанныеСтроки.ДатаПараметров, МинимальнаяДата), 
							ДанныеСтроки.ДатаПараметров);

	КонецЦикла;
	
	Если МинимальнаяДата <> '000101010000' Тогда
		
		МинимальнаяДата = Макс(МинимальнаяДата, НачалоГода);
		
		Если ПараметрыРегистрации.Найти(МинимальнаяДата, "ДатаРегистрации") = Неопределено
			И ПараметрыРегистрации.Количество() <> 0 Тогда
			
			ЕстьПараметры = Ложь;
			Для Каждого ДанныеСтроки Из ПараметрыРегистрации Цикл
				Если ДанныеСтроки.ДатаРегистрации < МинимальнаяДата
					И ЗначениеЗаполнено(ДанныеСтроки.ДатаРегистрации) Тогда
					ЕстьПараметры = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если НЕ ЕстьПараметры Тогда
				
				ТекстСообщения = СтрШаблон(
					НСтр("ru = 'В списке ""Сведения о регистрации"" необходимо указать параметры на дату %1';
						|en = 'In the ""Registration information"" list, specify financial details for the date %1'"), 
					Формат(МинимальнаяДата, "ДЛФ=D;"));
					
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ПараметрыРегистрации",, Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ПараметрыНалога.Найти(МинимальнаяДата, "ДатаПараметров") = Неопределено
			И ПараметрыНалога.Количество() <> 0 Тогда
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'В списке ""Земельный налог"" необходимо указать параметры на дату %1';
					|en = 'In the ""Land value tax"" list, specify financial details for the date %1'"), 
				Формат(МинимальнаяДата, "ДЛФ=D;"));
				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ПараметрыНалога",, Отказ);
			
		КонецЕсли;
		
		Если НалоговыйОрган.Найти(МинимальнаяДата, "ДатаПараметров") = Неопределено
			И НалоговыйОрган.Количество() <> 0 Тогда
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'В списке ""Налоговый орган"" необходимо указать параметры на дату %1';
					|en = 'In the ""Tax authority"" list, specify financial details for the date %1'"), 
				Формат(МинимальнаяДата, "ДЛФ=D;"));
				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "НалоговыйОрган",, Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПараметрыРегистрации(НепроверяемыеРеквизиты, Отказ)
	
	НепроверяемыеРеквизиты.Добавить("ПараметрыРегистрации.ДоляВПравеОбщейСобственностиЧислитель");
	НепроверяемыеРеквизиты.Добавить("ПараметрыРегистрации.ДоляВПравеОбщейСобственностиЗнаменатель");
	НепроверяемыеРеквизиты.Добавить("ПараметрыРегистрации.ДатаРегистрацииПравНаОбъектНедвижимости");
	
	УчетСНачалаГода = (КонецМесяца(Дата) = КонецГода(Дата));
	
	ШаблонСообщения = НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2 списка ""Сведения о регистрации""';
							|en = 'Column %1 in line %2 of the ""Registration information"" list is not filled'");
	
	Если УчетСНачалаГода И ПараметрыРегистрации.Количество() > 1 Тогда
		
		ТекстСообщения = НСтр("ru = 'При учете с начала года вводится только одна строка сведений о регистрации';
								|en = 'When accounting from the beginning of the year, enter only one line of registration information'");
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ПараметрыРегистрации",, Отказ);
		
	Иначе
		
		ВнеоборотныеАктивы.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "ПараметрыРегистрации", "ДатаРегистрации", Отказ);
	
	КонецЕсли;
	
	Для Каждого ДанныеСтроки Из ПараметрыРегистрации Цикл
		
		Если ДанныеСтроки.ОбщаяСобственность Тогда
			
			Если Не ЗначениеЗаполнено(ДанныеСтроки.ДоляВПравеОбщейСобственностиЧислитель) Тогда
				
				ТекстСообщения = СтрШаблон(ШаблонСообщения, НСтр("ru = 'Числитель доли в праве общей собственности';
																|en = 'Numerator of share in ownership rights'"), ДанныеСтроки.НомерСтроки);
				
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"ПараметрыРегистрации", ДанныеСтроки.НомерСтроки, "ДоляВПравеОбщейСобственностиЧислитель");
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
				
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ДанныеСтроки.ДоляВПравеОбщейСобственностиЗнаменатель) Тогда
				
				ТекстСообщения = СтрШаблон(ШаблонСообщения, НСтр("ru = 'Знаменатель доли в праве общей собственности';
																|en = 'Denominator of share in ownership rights'"), ДанныеСтроки.НомерСтроки);
				
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"ПараметрыРегистрации", ДанныеСтроки.НомерСтроки, "ДоляВПравеОбщейСобственностиЗнаменатель");
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
				
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьПараметрыНалога(НепроверяемыеРеквизиты, Отказ)
	
	УчетСНачалаГода = (КонецМесяца(Дата) = КонецГода(Дата));

	Если УчетСНачалаГода И ПараметрыНалога.Количество() > 1 Тогда
		
		ТекстСообщения = НСтр("ru = 'При учете с начала года вводится только одна строка параметров налога';
								|en = 'When accounting from the beginning of the year, enter only one line of tax details'");
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ПараметрыНалога",, Отказ);
		
	Иначе
		
		ВнеоборотныеАктивы.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "ПараметрыНалога", "ДатаПараметров", Отказ);
		
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьНалоговыйОрган(НепроверяемыеРеквизиты, Отказ)
	
	УчетСНачалаГода = (КонецМесяца(Дата) = КонецГода(Дата));
	
	Если УчетСНачалаГода И НалоговыйОрган.Количество() > 1 Тогда
		
		ТекстСообщения = НСтр("ru = 'При учете с начала года вводится только одна строка параметров налогового органа';
								|en = 'When accounting from the beginning of the year, enter only one line of tax authority details'");
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "НалоговыйОрган",, Отказ);
		
	Иначе
		
		ВнеоборотныеАктивы.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "НалоговыйОрган", "ДатаПараметров", Отказ);
		
	КонецЕсли;
	
	ИмущественныеНалоги.ПроверитьНалоговыйОрган(ЭтотОбъект, НепроверяемыеРеквизиты, Отказ);
	
КонецПроцедуры

Процедура ПроверитьНаличиеПараметровНаДату(Отказ)

	СписокЗапросов = Новый СписокЗначений();
	
	Документы.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога.ТекстЗапросаТаблицаВтДатыПараметровПоследние(СписокЗапросов);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.ОсновноеСредство КАК ОсновноеСредство,
	|	ДанныеРегистра.ОсновноеСредство.Представление КАК ОсновноеСредствоПредставление
	|ИЗ
	|	втДатыПараметровПоследние КАК втДатыПараметровПоследние
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ДанныеРегистра
	|		ПО ДанныеРегистра.Период = НАЧАЛОПЕРИОДА(втДатыПараметровПоследние.Дата, ДЕНЬ)
	|			И ДанныеРегистра.Регистратор <> &Ссылка
	|			И ДанныеРегистра.Организация = &Организация
	|			И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство
	|			И ДанныеРегистра.Активность
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(КонецДня(Дата) + 1));
	
	ШаблонСообщения = НСтр("ru = 'Для земельного участка ""%1"" уже введены параметры на %2 документом %3.
						   |Не поддерживается ввод параметров на одну дату разными документами.';
						   |en = 'For the ""%1"" land plot, the parameters for %2 are already entered based on the %3 document.
						   |You cannot enter parameters for the same date by different documents.'");
	
	Результаты = ОбщегоНазначенияУТ.ВыполнитьПакетЗапросов(Запрос, СписокЗапросов);
	Выборка = Результаты[Результаты.ВГраница()].Выбрать();

	Если Выборка.Следующий() Тогда
	
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.ОсновноеСредствоПредставление, Формат(Выборка.Период, "ДЛФ=D;"), Выборка.Регистратор);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ОсновноеСредство", , Отказ);
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли