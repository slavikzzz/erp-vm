#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнитьРеквизитыПоУмолчанию();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Или ТипЗнч(ДанныеЗаполнения) = Тип("ВыборкаИзРезультатаЗапроса") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Подразделение) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,
		ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭтотОбъект.Подразделение, "ИспользоватьКТУ,ИспользоватьТарифныеСтавки,ИспользоватьОтработанноеВремя"));
	КонецЕсли;
	
	Если ВидНаряда = Перечисления.ВидыБригадныхНарядов.БригадныйПоЗаказу21
		Или ВидНаряда = Перечисления.ВидыБригадныхНарядов.БригадныйБезЗаказа21
		Или ВидНаряда = Перечисления.ВидыБригадныхНарядов.Ремонт Тогда
		Автораспределение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтотОбъект.Бригада, "ПрименятьРаспределениеПоКТУ");
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("ЗаполнитьПоОтбору") Тогда
			
			Документы.ВыработкаСотрудников.ЗаполнитьВидыРаботПоОстаткам(ЭтотОбъект, ДанныеЗаполнения);
			
			Если ВидНаряда <> Перечисления.ВидыБригадныхНарядов.Персональный Тогда
				Документы.ВыработкаСотрудников.ЗаполнитьРаботников(ЭтотОбъект);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ВключатьВПериодВыполненияРабот") И ДанныеЗаполнения.ВключатьВПериодВыполненияРабот
			И ЗначениеЗаполнено(КонецПериода) Тогда
			Дата = КонецПериода;
		КонецЕсли;
		
	КонецЕсли;
	
	ПроверяемаяДата = Дата;
	Если НЕ ЗначениеЗаполнено(ПроверяемаяДата) Тогда
		ПроверяемаяДата = ?(ЗначениеЗаполнено(НачалоПериода), НачалоПериода, ТекущаяДатаСеанса());
	КонецЕсли;
	
	УчетТрудозатратВРазрезеСотрудников = ПроизводствоСервер.ИспользуетсяУчетТрудозатратВРазрезеСотрудников(ПроверяемаяДата);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Перем МассивВсехРеквизитов;
	Перем МассивРеквизитовОперации;
	Перем МассивНеИспользуемыхРеквизитов;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Документы.ВыработкаСотрудников.ИменаРеквизитовПоВидуНаряда(
		ЭтотОбъект,
		МассивВсехРеквизитов,
		МассивРеквизитовОперации);
		
	Если УчетТрудозатратВРазрезеСотрудников И МассивРеквизитовОперации.Найти("ВидыРабот.Сотрудник") <> Неопределено Тогда
		МассивРеквизитовОперации.Добавить("ВидыРабот.Работник");
	КонецЕсли;
	
	МассивНеИспользуемыхРеквизитов = ОбщегоНазначенияКлиентСервер.РазностьМассивов(МассивВсехРеквизитов, МассивРеквизитовОперации);
	
	Для Каждого Реквизит Из МассивНеИспользуемыхРеквизитов Цикл
		МассивНепроверяемыхРеквизитов.Добавить(Реквизит);
	КонецЦикла;
	
	Если ВидНаряда = Перечисления.ВидыБригадныхНарядов.Бригадный Или Автораспределение Тогда
		Если ВидыРабот.Итог("Сумма") <> Работники.Итог("Сумма") Тогда
			
			ТекстСообщения = НСтр("ru = 'Сумма работ не распределена по участникам бригады. Требуется распределить сумму на закладке ""Работники""';
									|en = 'The amount for the works is not allocated by the work team members. Allocate the amount on the ""Employees"" tab'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				ЭтотОбъект,
				"Работники",
				,
				Отказ);
			
		КонецЕсли;
	КонецЕсли;
	
	//++ Локализация
	Если УчетТрудозатратВРазрезеСотрудников Тогда
		
		ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоВременнойТаблице();
		ПараметрыПолученияСотрудников.Организация = Организация;
		ПараметрыПолученияСотрудников.ПодработкиРаботниковПоТрудовымДоговорам = Истина;
		ПараметрыПолученияСотрудников.НачалоПериода = Дата;
		ПараметрыПолученияСотрудников.ОкончаниеПериода = Дата;
		
		ПараметрыСообщения = Новый Структура("ИмяОбъекта, ИмяПоляСотрудник");
		ПараметрыСообщения.ИмяПоляСотрудник = "Сотрудник";
		
		ПроверяемыеСотрудники = Новый Массив;
		Если МассивРеквизитовОперации.Найти("Работники.Сотрудник") <> Неопределено Тогда
			ПроверяемыеСотрудники.Добавить(Работники.ВыгрузитьКолонку("Сотрудник"));
			ПараметрыСообщения.ИмяОбъекта = "Объект.Работники";
		ИначеЕсли МассивРеквизитовОперации.Найти("ВидыРабот.Сотрудник") <> Неопределено Тогда
			ПроверяемыеСотрудники.Добавить(ВидыРабот.ВыгрузитьКолонку("Сотрудник"));
			ПараметрыСообщения.ИмяОбъекта = "Объект.ВидыРабот";
		КонецЕсли;
		
		КадровыйУчет.ПроверитьРаботающихСотрудников(ПроверяемыеСотрудники, ПараметрыПолученияСотрудников, Отказ, ПараметрыСообщения);
		
	КонецЕсли;
	//-- Локализация
	
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		ТекстСообщения = НСтр("ru = 'Не задана валюта расценок на виды работ. Валюта задается в разделе ""НСИ и администрирование \ Производство"".';
								|en = 'Currency of activity kind rates is not specified. The currency is set in Master data and settings / Manufacturing.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
	КонецЕсли;
	МассивНепроверяемыхРеквизитов.Добавить("Валюта");
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	// Пытаемся повторно заполнить реквизит Валюта, если незаполнен.
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Валюта = Константы.ВалютаРасценокВидовРабот.Получить();
	КонецЕсли;
	
	СуммаДокумента = ВидыРабот.Итог("Сумма");
	Если ВидНаряда = Перечисления.ВидыБригадныхНарядов.Персональный Тогда
		ФизическиеЛица = ВидыРабот.ВыгрузитьКолонку("Работник");
		ФизическиеЛица = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ФизическиеЛица);
		Исполнители = ФизическиеЛицаУТ.КраткийСоставФизЛиц(ФизическиеЛица, Дата);
	Иначе
		Исполнители = Бригада;
	КонецЕсли;
	
	Если ВидНаряда = Перечисления.ВидыБригадныхНарядов.Бригадный Или
		Автораспределение Тогда
		Для Каждого Строка Из ВидыРабот Цикл
			Строка.Работник = Неопределено;
		КонецЦикла;
	Иначе
		Работники.Очистить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
	ОбновитьСвязанныеДанные();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
	ОбновитьСвязанныеДанные();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРеквизитыПоУмолчанию()
	
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию();
	Ответственный = Пользователи.ТекущийПользователь();
	Валюта = Константы.ВалютаРасценокВидовРабот.Получить();
	
	Если ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация") Тогда
		ВидНаряда = Перечисления.ВидыБригадныхНарядов.БригадныйБезЗаказа21;
	КонецЕсли;
	
КонецПроцедуры

#Область Прочее

Процедура ОбновитьСвязанныеДанные()
	
	//++ НЕ УТКА
	
	Этапы = Новый Массив;
	
	Для каждого Строка Из ВидыРабот Цикл
		
		Если ТипЗнч(Строка.Распоряжение) = Тип("ДокументСсылка.ЭтапПроизводства2_2")
			И Этапы.Найти(Строка.Распоряжение) = Неопределено Тогда
			
			Этапы.Добавить(Строка.Распоряжение);
			
		КонецЕсли;
		
	КонецЦикла;
		
	Если Этапы.Количество() > 0 Тогда
			
		РегистрыСведений.СостоянияЭтаповПроизводства.ОбновитьСостояниеОформленияВыработки(Этапы);
			
	КонецЕсли;
	
	//-- НЕ УТКА
	
	Возврат; // пустой обработчик
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
