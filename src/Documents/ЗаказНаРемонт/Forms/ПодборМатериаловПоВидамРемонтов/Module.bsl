#Область ОписаниеПеременных

&НаКлиенте
Перем КэшированныеЗначения;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПолучитьДанныеЗаказа();
	ЗаполнитьМатериалыИРаботы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность И ЕстьДанныеДляПереноса() Тогда
		
		ОповещениеСохранитьИЗакрыть = Новый ОписаниеОповещения(
			"ПередЗакрытиемПеренестиИЗакрыть", ЭтотОбъект);
	
		ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(
			ОповещениеСохранитьИЗакрыть,
			Отказ,
			ЗавершениеРаботы,
			НСтр("ru = 'Данные были изменены. Перенести в документ?';
				|en = 'Data has changed. Transfer to the document?'"));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМатериалы

&НаКлиенте
Процедура МатериалыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Материалы.ТекущиеДанные;
	
	Если Поле = Элементы.МатериалыНоменклатура И ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
		
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, ТекущиеДанные.Номенклатура);
		
	ИначеЕсли Поле = Элементы.МатериалыВидРемонта И ЗначениеЗаполнено(ТекущиеДанные.ВидРемонта) Тогда
		
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, ТекущиеДанные.ВидРемонта);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура МатериалыКоличествоУпаковокПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Материалы.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц", Новый Структура("НужноОкруглять", Ложь));
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	Если ЕстьДанныеДляПереноса() Тогда
		
		ПеренестиМатериалыВДокумент();
		
	Иначе
		
		ОчиститьСообщения();
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Необходимо указать количество номенклатуры';
				|en = 'Specify the amount of products'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСтроки(Команда)
	УстановитьВыборСтрок(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьСтроки(Команда)
	УстановитьВыборСтрок(Ложь);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	НоменклатураСервер.УстановитьУсловноеОформлениеЕдиницИзмерения(
		ЭтотОбъект, "МатериалыНоменклатураЕдиницаИзмерения", "Материалы.Упаковка");
	
	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(
		ЭтотОбъект, "МатериалыХарактеристика", "Материалы.ХарактеристикиИспользуются");

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМатериалыИРаботы()
	
	Модифицированность = Ложь;
	
	Материалы.Очистить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РемонтыЗаказа.ВидРемонта КАК ВидРемонта,
	|	РемонтыЗаказа.КодРемонта КАК КодРемонта
	|ПОМЕСТИТЬ РемонтыЗаказа
	|ИЗ
	|	&РемонтыЗаказа КАК РемонтыЗаказа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРемонта
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МатериалыИРаботыЗаказа.КодРемонта,
	|	МатериалыИРаботыЗаказа.Номенклатура,
	|	МатериалыИРаботыЗаказа.Характеристика,
	|	МатериалыИРаботыЗаказа.Упаковка,
	|	МатериалыИРаботыЗаказа.КоличествоУпаковок,
	|	МатериалыИРаботыЗаказа.Количество
	|ПОМЕСТИТЬ МатериалыИРаботыЗаказа
	|ИЗ
	|	&МатериалыИРаботыЗаказа КАК МатериалыИРаботыЗаказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РемонтыЗаказа.КодРемонта КАК КодРемонта,
	|	МатериалыИРаботы.Ссылка КАК ВидРемонта,
	|	МатериалыИРаботы.Номенклатура,
	|	МатериалыИРаботы.Характеристика,
	|	МатериалыИРаботы.Упаковка,
	|	СУММА(МатериалыИРаботы.Количество) КАК Количество,
	|	СУММА(МатериалыИРаботы.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ МатериалыИРаботыПоВидамРемонтов
	|ИЗ
	|	Справочник.ВидыРемонтов.МатериалыИРаботы КАК МатериалыИРаботы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РемонтыЗаказа КАК РемонтыЗаказа
	|		ПО РемонтыЗаказа.ВидРемонта = МатериалыИРаботы.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РемонтыЗаказа.КодРемонта,
	|	МатериалыИРаботы.Ссылка,
	|	МатериалыИРаботы.Номенклатура,
	|	МатериалыИРаботы.Характеристика,
	|	МатериалыИРаботы.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МатериалыИРаботыПоВидамРемонтов.КодРемонта КАК КодРемонта,
	|	МатериалыИРаботыПоВидамРемонтов.ВидРемонта КАК ВидРемонта,
	|	МатериалыИРаботыПоВидамРемонтов.Номенклатура КАК Номенклатура,
	|	МатериалыИРаботыПоВидамРемонтов.Характеристика КАК Характеристика,
	|	МатериалыИРаботыПоВидамРемонтов.Упаковка КАК Упаковка,
	|
	|	ИСТИНА КАК СтрокаВыбрана,
	|	МатериалыИРаботыПоВидамРемонтов.Количество КАК Количество,
	|	МатериалыИРаботыПоВидамРемонтов.КоличествоУпаковок КАК КоличествоУпаковок,
	|
	|	ЕСТЬNULL(МатериалыИРаботыЗаказа.КоличествоУпаковок, 0) КАК КоличествоУпаковокВЗаказе,
	|	МатериалыИРаботыПоВидамРемонтов.КоличествоУпаковок КАК КоличествоУпаковокВВидеРемонта
	|
	|ИЗ
	|	МатериалыИРаботыПоВидамРемонтов КАК МатериалыИРаботыПоВидамРемонтов
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МатериалыИРаботыЗаказа КАК МатериалыИРаботыЗаказа
	|		ПО МатериалыИРаботыЗаказа.Номенклатура = МатериалыИРаботыПоВидамРемонтов.Номенклатура
	|			И МатериалыИРаботыЗаказа.Характеристика = МатериалыИРаботыПоВидамРемонтов.Характеристика
	|			И МатериалыИРаботыЗаказа.Упаковка = МатериалыИРаботыПоВидамРемонтов.Упаковка
	|			И МатериалыИРаботыЗаказа.КодРемонта = МатериалыИРаботыПоВидамРемонтов.КодРемонта
	|
	|ГДЕ
	|	ЕСТЬNULL(МатериалыИРаботыЗаказа.Количество, 0) <> МатериалыИРаботыПоВидамРемонтов.Количество
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МатериалыИРаботыЗаказа.КодРемонта КАК КодРемонта,
	|	РемонтыЗаказа.ВидРемонта КАК ВидРемонта,
	|	МатериалыИРаботыЗаказа.Номенклатура КАК Номенклатура,
	|	МатериалыИРаботыЗаказа.Характеристика КАК Характеристика,
	|	МатериалыИРаботыЗаказа.Упаковка КАК Упаковка,
	|
	|	ИСТИНА КАК СтрокаВыбрана,
	|	0 КАК Количество,
	|	0 КАК КоличествоУпаковок,
	|
	|	МатериалыИРаботыЗаказа.КоличествоУпаковок КАК КоличествоУпаковокВЗаказе,
	|	0 КАК КоличествоУпаковокВВидеРемонта
	|
	|ИЗ
	|	МатериалыИРаботыЗаказа КАК МатериалыИРаботыЗаказа
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РемонтыЗаказа КАК РемонтыЗаказа
	|		ПО РемонтыЗаказа.КодРемонта = МатериалыИРаботыЗаказа.КодРемонта
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МатериалыИРаботыПоВидамРемонтов КАК МатериалыИРаботыПоВидамРемонтов
	|		ПО МатериалыИРаботыПоВидамРемонтов.Номенклатура = МатериалыИРаботыЗаказа.Номенклатура
	|			И МатериалыИРаботыПоВидамРемонтов.Характеристика = МатериалыИРаботыЗаказа.Характеристика
	|			И МатериалыИРаботыПоВидамРемонтов.Упаковка = МатериалыИРаботыЗаказа.Упаковка
	|			И МатериалыИРаботыПоВидамРемонтов.КодРемонта = МатериалыИРаботыЗаказа.КодРемонта
	|
	|ГДЕ
	|	МатериалыИРаботыПоВидамРемонтов.Номенклатура ЕСТЬ NULL";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("РемонтыЗаказа", РемонтыЗаказа.Выгрузить());
	Запрос.УстановитьПараметр("МатериалыИРаботыЗаказа", МатериалыИРаботыЗаказа.Выгрузить());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	НомерСтроки = 1;
	Пока Выборка.Следующий() Цикл
	
		НоваяСтрока = Материалы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.НомерСтроки = НомерСтроки;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить(
		"ЗаполнитьПризнакХарактеристикиИспользуются",
		Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
		
	СтруктураДействий.Вставить(
		"ЗаполнитьПризнакАртикул",
		Новый Структура("Номенклатура", "Артикул"));
		
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Материалы, СтруктураДействий);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеЗаказа()

	АдресДанныеЗаказа = Параметры.АдресДанныеЗаказа;
	ДанныеЗаказа = ПолучитьИзВременногоХранилища(АдресДанныеЗаказа);
	
	ОбщегоНазначенияУТКлиентСервер.ДополнитьТаблицу(ДанныеЗаказа.Ремонты, РемонтыЗаказа);
	
	ИсходнаяТаблица = ДанныеЗаказа.МатериалыИРаботы; // ТаблицаЗначений - 
	ИсходнаяТаблица.Свернуть("Номенклатура,Характеристика,Упаковка,КодРемонта", "Количество,КоличествоУпаковок");
	ОбщегоНазначенияУТКлиентСервер.ДополнитьТаблицу(ИсходнаяТаблица, МатериалыИРаботыЗаказа);
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьДанныеДляПереноса()
	
	Для каждого Строка Из Материалы Цикл
		
		Если Строка.СтрокаВыбрана Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытиемПеренестиИЗакрыть(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ПеренестиМатериалыВДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиМатериалыВДокумент()
	
	Модифицированность = Ложь;
	
	ПодготовитьДанныеДляПодбораМатериаловПоВидамРемонтов();
	
	Закрыть(АдресДанныеЗаказа);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьДанныеДляПодбораМатериаловПоВидамРемонтов()
	
	ТаблицаВыбранныхМатериалов = Материалы.Выгрузить(Новый Структура("СтрокаВыбрана", Истина));
	ПоместитьВоВременноеХранилище(ТаблицаВыбранныхМатериалов, АдресДанныеЗаказа);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВыборСтрок(ЗначениеВыбора)
	
	Для Каждого НомерСтроки Из Элементы.Материалы.ВыделенныеСтроки Цикл
		СтрокаТЧ = Материалы.НайтиПоИдентификатору(НомерСтроки);
		СтрокаТЧ.СтрокаВыбрана = ЗначениеВыбора;        
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
