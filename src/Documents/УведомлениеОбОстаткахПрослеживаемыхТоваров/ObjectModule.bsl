#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует временные таблицы с данными документа. Используется для заполнения видов запасов.
//
// Параметры:
//	ТаблицаВидыЗапасов - ТаблицаЗначений - таблица видов запасов документа.
//	УчетПоНомерамГТД - Булево - признак того, что учет номеров ГТД является обязательным.
//
// Возвращаемое значение:
//	МенеджерВременныхТаблиц - менеджер временных таблиц.
//
Функция ВременныеТаблицыДанныхДокумента(ТаблицаВидыЗапасов, УчетПоНомерамГТД = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК Партнер,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура					КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика				КАК Характеристика,
	|	ТаблицаТоваров.Назначение					КАК Назначение,
	|	ТаблицаТоваров.Серия						КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий			КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА ТаблицаТоваров.Склад
	|		КОГДА ТаблицаТоваров.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ТаблицаТоваров.Подразделение
	|		КОГДА ТаблицаТоваров.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|			ТОГДА ТаблицаТоваров.Договор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ										КАК МестоХранения,
	|	ТаблицаТоваров.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТДОтсутствует,
	|	ТаблицаТоваров.НомерГТД						КАК НомерГТД,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Количество					КАК Количество,
	|	ТаблицаТоваров.КоличествоПоРНПТ				КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ГДЕ
	|	(ТаблицаТоваров.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) = (НЕ &УчетПоНомерамГТД)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки						КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура						КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика					КАК Характеристика,
	|	ТаблицаТоваров.Назначение						КАК Назначение,
	|	ТаблицаТоваров.Серия							КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий				КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.МестоХранения					КАК Склад,
	|	ТаблицаТоваров.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТДОтсутствует,
	|	ТаблицаТоваров.НомерГТД							КАК НомерГТД,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Количество						КАК Количество,
	|	ТаблицаТоваров.КоличествоПоРНПТ					КАК КоличествоПоРНПТ,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)		КАК СтавкаНДС,
	|	0												КАК СуммаНДС,
	|	0												КАК СуммаСНДС
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД						КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ				КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ГДЕ
	|	(&УчетПоНомерамГТД
	|		И ТаблицаВидыЗапасов.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))
	|	ИЛИ (НЕ &УчетПоНомерамГТД
	|		И ТаблицаВидыЗапасов.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки						КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура								КАК Номенклатура,
	|	Аналитика.Характеристика							КАК Характеристика,
	|	Аналитика.Серия										КАК Серия,
	|	Аналитика.МестоХранения								КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД							КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество						КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ					КАК КоличествоПоРНПТ,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)			КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)	КАК Сделка,
	|	&ВидыЗапасовУказаныВручную							КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка",						Ссылка);
	Запрос.УстановитьПараметр("Дата",						Дата);
	Запрос.УстановитьПараметр("Организация",				Организация);
	Запрос.УстановитьПараметр("ТаблицаТоваров",				Товары);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",			ТаблицаВидыЗапасов);
	Запрос.УстановитьПараметр("УчетПоНомерамГТД",			УчетПоНомерамГТД);
	Запрос.УстановитьПараметр("ВидыЗапасовУказаныВручную",	ВидыЗапасовУказаныВручную);
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

// Инициализирует параметры заполнения видов запасов дополнительных свойств документа, используемых при записи документа
// в режиме 'Проведения' или 'Отмены проведения'.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект.УведомлениеОбОстаткахПрослеживаемыхТоваров - документ, для которого выполняется 
//																					инициализация параметров.
//	РежимЗаписи -РежимЗаписиДокумента - режим записи документа.
//
Процедура ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ДокументОбъект, РежимЗаписи = Неопределено) Экспорт
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ПараметрыЗаполненияВидовЗапасов", ПараметрыЗаполненияВидовЗапасов());
	
КонецПроцедуры

// Заполняет реквизиты, хранящие информацию о видах запасов и аналитиках учета номенклатуры в табличной части 'Товары'
// документа, а также заполняет табличную часть 'ВидыЗапасов'.
//
// Параметры:
//	Отказ - Булево - признак того, что не удалось заполнить данные.
//	ТаблицыДокумента - см. Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров.КоллекцияТабличныхЧастейТоваров.
//
Процедура ЗаполнитьВидыЗапасовПриОбмене(Отказ, ТаблицыДокумента) Экспорт
	
	ЗаполнитьАналитикиУчетаНоменклатурыВТабличныхЧастяхТоваров();
	ЗаполнитьВидыЗапасов(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект,
																		Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров);
	
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
												ПараметрыУказанияСерий,
												Отказ,
												МассивНепроверяемыхРеквизитов);
	
	ПроверитьКорректностьЗаполнениеТабличнойЧасти(Отказ);
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.КоличествоПоРНПТ");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.НомерГТД");
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если Не Отказ
		И ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты) Тогда
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект,
																		Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ЗаполнитьАналитикиУчетаНоменклатурыВТабличныхЧастяхТоваров();
		ЗаполнитьВидыЗапасов(Отказ);
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ВидыЗапасов.Очистить();
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И ЗначениеЗаполнено(РНПТ) Тогда
		ТЧВидыЗапасов =  ВидыЗапасов.Выгрузить(, "НомерСтроки,НомерГТД,РНПТ");
		ТЧВидыЗапасов.Колонки.Добавить("СтранаПроисхождения", Новый ОписаниеТипов("СправочникСсылка.СтраныМира")); 
		ДанныеПоГТД = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ТЧВидыЗапасов.ВыгрузитьКолонку("НомерГТД") ,"СтранаПроисхождения");
		Для Каждого Стр Из ТЧВидыЗапасов Цикл
			Стр.СтранаПроисхождения = ДанныеПоГТД[Стр.НомерГТД];
			Стр.НомерГТД = Стр.РНПТ;
		КонецЦикла;
		ТЧОсновныеСредства =  ОсновныеСредства.Выгрузить(, "НомерСтроки, НомерГТД, СтранаПроисхождения");
		УчетПрослеживаемыхТоваровЛокализация.ЗаполнитьНомера(ЭтотОбъект, ТЧВидыЗапасов, "ВидыЗапасов", "РНПТ");
		УчетПрослеживаемыхТоваровЛокализация.ЗаполнитьНомера(ЭтотОбъект, ТЧОсновныеСредства, "ОсновныеСредства", "НомерГТД");
		
		ТЧТМЦВЭксплуатации =  ТМЦВЭксплуатации.Выгрузить(, "НомерСтроки,НомерГТД, РНПТ");
		ТЧТМЦВЭксплуатации.Колонки.Добавить("СтранаПроисхождения", Новый ОписаниеТипов("СправочникСсылка.СтраныМира"));
		ДанныеПоГТД = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ТЧТМЦВЭксплуатации.ВыгрузитьКолонку("НомерГТД") ,"СтранаПроисхождения");
		Для Каждого Стр Из ТЧТМЦВЭксплуатации Цикл
			Стр.СтранаПроисхождения = ДанныеПоГТД[Стр.НомерГТД];
			Стр.НомерГТД = Стр.РНПТ;
		КонецЦикла;
		УчетПрослеживаемыхТоваровЛокализация.ЗаполнитьНомера(ЭтотОбъект, ТЧТМЦВЭксплуатации, "ТМЦВЭксплуатации", "РНПТ");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ЭтотОбъект);
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ЭтотОбъект);
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ВидыЗапасов.Очистить();
	
	ОформленНаОснованииВозвратаТоваров = Ложь;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Ответственный	= Пользователи.ТекущийПользователь();
	Организация		= ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
	ЗаполнениеОбъектовПоСтатистике.ЗаполнитьРеквизитыОбъекта(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПроверитьКорректностьЗаполнениеТабличнойЧасти(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки		КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура		КАК Номенклатура,
	|	ТаблицаТоваров.КоличествоПоРНПТ	КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				И ТаблицаТоваров.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И ТаблицаТоваров.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ							КАК ПустоеМестоХранения
	|ПОМЕСТИТЬ ТаблицаТоварыДляЗапроса
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокумента.НомерСтроки							КАК НомерСтроки,
	|	ТоварыДокумента.Номенклатура						КАК Номенклатура,
	|	МИНИМУМ(ТоварыДокумента.ПрослеживаемыйТовар)		КАК ПрослеживаемыйТовар,
	|	МАКСИМУМ(ТоварыДокумента.ПустоеКоличествоПоРНПТ)	КАК ПустоеКоличествоПоРНПТ,
	|	МАКСИМУМ(ТоварыДокумента.ПустоеМестоХранения)		КАК ПустоеМестоХранения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТоваров.НомерСтроки	КАК НомерСтроки,
	|		ТаблицаТоваров.Номенклатура	КАК Номенклатура,
	|		ЕСТЬNULL(ТаблицаНоменклатуры.ПрослеживаемыйТовар, ЛОЖЬ)
	|			И ЕСТЬNULL(ТаблицаНоменклатуры.ВестиУчетПоГТД, ЛОЖЬ) КАК ПрослеживаемыйТовар,
	|		ЛОЖЬ						КАК ПустоеКоличествоПоРНПТ,
	|		ЛОЖЬ						КАК ПустоеМестоХранения
	|	ИЗ
	|		ТаблицаТоварыДляЗапроса КАК ТаблицаТоваров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|			ПО ТаблицаТоваров.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|				И ТаблицаНоменклатуры.ТипНоменклатуры В(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	ГДЕ
	|		НЕ (ЕСТЬNULL(ТаблицаНоменклатуры.ПрослеживаемыйТовар, ЛОЖЬ)
	|			И ЕСТЬNULL(ТаблицаНоменклатуры.ВестиУчетПоГТД, ЛОЖЬ))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.НомерСтроки	КАК НомерСтроки,
	|		ТаблицаТоваров.Номенклатура	КАК Номенклатура,
	|		ИСТИНА						КАК ПрослеживаемыйТовар,
	|		&ПроверитьКоличествоПоРНПТ
	|			И ТаблицаТоваров.КоличествоПоРНПТ = 0
	|			И ЕСТЬNULL(ТаблицаНоменклатуры.ВестиУчетПоГТД, ЛОЖЬ)
	|			И ЕСТЬNULL(ТаблицаНоменклатуры.ПрослеживаемыйТовар, ЛОЖЬ) КАК ПустоеКоличествоПоРНПТ,
	|		ЛОЖЬ						КАК ПустоеМестоХранения
	|	ИЗ
	|		ТаблицаТоварыДляЗапроса КАК ТаблицаТоваров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|			ПО ТаблицаТоваров.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|				И ТаблицаНоменклатуры.ТипНоменклатуры В(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	ГДЕ
	|		&ПроверитьКоличествоПоРНПТ
	|		И ТаблицаТоваров.КоличествоПоРНПТ = 0
	|		И ЕСТЬNULL(ТаблицаНоменклатуры.ВестиУчетПоГТД, ЛОЖЬ)
	|		И ЕСТЬNULL(ТаблицаНоменклатуры.ПрослеживаемыйТовар, ЛОЖЬ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.НомерСтроки			КАК НомерСтроки,
	|		ТаблицаТоваров.Номенклатура			КАК Номенклатура,
	|		ИСТИНА								КАК ПрослеживаемыйТовар,
	|		ЛОЖЬ								КАК ПустоеКоличествоПоРНПТ,
	|		ТаблицаТоваров.ПустоеМестоХранения	КАК ПустоеМестоХранения
	|	ИЗ
	|		ТаблицаТоварыДляЗапроса КАК ТаблицаТоваров
	|	
	|	ГДЕ
	|		ТаблицаТоваров.ПустоеМестоХранения
	|	
	|	) КАК ТоварыДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыДокумента.НомерСтроки,
	|	ТоварыДокумента.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	НЕ МИНИМУМ(ТоварыДокумента.ПрослеживаемыйТовар)
	|	ИЛИ МАКСИМУМ(ТоварыДокумента.ПустоеКоличествоПоРНПТ)
	|	ИЛИ МАКСИМУМ(ТоварыДокумента.ПустоеМестоХранения)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ТаблицаТоваров", Товары.Выгрузить());
	Запрос.УстановитьПараметр("ПроверитьКоличествоПоРНПТ",
								ПолучитьФункциональнуюОпцию("ИспользуетсяУчетВЕдиницеИзмеренияТНВЭД"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ОшибкаНаличияНепрослеживаемогоТовара	= НСтр("ru = 'Непрослеживаемый товар ""%Номенклатура%"" в строке %НомерСтроки% списка ""Товары"".';
													|en = 'Untraced goods ""%Номенклатура%"" in line %НомерСтроки% if the Item list.'");
	ОшибкаЗаполненияКоличестваПоРНПТ		= НСтр("ru = 'Не заполнена колонка ""Количество по РНПТ"" в строке %НомерСтроки% списка ""Товары"".';
													|en = 'The ""Quantity by GBRN"" column is not filled in line %НомерСтроки% of the ""Goods"" list.'");
	ОшибкаЗаполненияМестаХранения			= НСтр("ru = 'Не заполнена колонка ""Место хранения"" в строке %НомерСтроки% списка ""Товары"".';
													|en = 'Column ""Storage location"" in line %НомерСтроки% of the ""Goods"" list is not filled in.'");
	КлючДанных								= ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	Пока Выборка.Следующий() Цикл
		
		Если Не Выборка.ПрослеживаемыйТовар Тогда
			ТекстСообщения = СтрЗаменить(ОшибкаНаличияНепрослеживаемогоТовара, "%Номенклатура%", Выборка.Номенклатура);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары",
																	Выборка.НомерСтроки,
																	"Номенклатура");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле, "Объект", Отказ);
		КонецЕсли;
		
		Если Выборка.ПустоеКоличествоПоРНПТ Тогда
			ТекстСообщения = СтрЗаменить(ОшибкаЗаполненияКоличестваПоРНПТ, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "КоличествоПоРНПТ");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле, "Объект", Отказ);
		КонецЕсли;
		
		Если Выборка.ПустоеМестоХранения Тогда
			ТекстСообщения = СтрЗаменить(ОшибкаЗаполненияМестаХранения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, КлючДанных, "", "Объект", Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ВидыЗапасов

Процедура ЗаполнитьВидыЗапасов(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаВидовЗапасов			= ВидыЗапасов.Выгрузить();
	МенеджерВременныхТаблиц		= ВременныеТаблицыДанныхДокумента(ТаблицаВидовЗапасов, Ложь);
	ПерезаполнитьВидыЗапасов	= ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ЭтотОбъект);
	
	ВидыЗапасовБезГТД	= ВидыЗапасов.ВыгрузитьКолонки();
	ВидыЗапасовСГТД		= ВидыЗапасов.ВыгрузитьКолонки();
	
	ВидыЗапасовПерезаполнены = Ложь;
	
	Если Не Проведен
		Или ПерезаполнитьВидыЗапасов
		Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
		Или ПроверитьИзменениеТоваров(МенеджерВременныхТаблиц) Тогда
		
		ДополнительныеСвойства.Вставить("КонтролироватьНомераГТД", Ложь);
		
		ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов();
		
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоТоварамОрганизаций(ЭтотОбъект,
																МенеджерВременныхТаблиц,
																Отказ,
																ПараметрыЗаполнения);
		
		ВидыЗапасов.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД", "Количество");
		
		ВидыЗапасовБезГТД = ВидыЗапасов.Выгрузить();
		ВидыЗапасовПерезаполнены = Истина;
		
	КонецЕсли;
	
	МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокумента(ТаблицаВидовЗапасов, Истина);
	
	Если Не Проведен
		Или ПерезаполнитьВидыЗапасов
		Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
		Или ПроверитьИзменениеТоваров(МенеджерВременныхТаблиц) Тогда
		
		ДополнительныеСвойства.Вставить("КонтролироватьНомераГТД", Истина);
		
		ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов();
		
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоТоварамОрганизаций(ЭтотОбъект,
																МенеджерВременныхТаблиц,
																Отказ,
																ПараметрыЗаполнения);
		
		ВидыЗапасов.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД", "Количество");
		
		ВидыЗапасовСГТД = ВидыЗапасов.Выгрузить();
		ВидыЗапасовПерезаполнены = Истина;
		
	КонецЕсли;
	
	Если ВидыЗапасовПерезаполнены Тогда
		
		ОбщиеВидыЗапасов = ВидыЗапасов.ВыгрузитьКолонки();
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВидыЗапасовБезГТД,	ОбщиеВидыЗапасов);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВидыЗапасовСГТД,		ОбщиеВидыЗапасов);
		
		ВидыЗапасов.Загрузить(ОбщиеВидыЗапасов);
		
		ЗаполнитьДопКолонкиВидовЗапасов()
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
	
	ИменаРеквизитов = "Дата, Организация";
	
	Возврат ЗапасыСервер.ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц, Ссылка, ИменаРеквизитов);
	
КонецФункции

Функция ПроверитьИзменениеТоваров(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НомерГТД						КАК НомерГТД
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.НомерГТД						КАК НомерГТД,
	|		ТаблицаТоваров.Количество					КАК Количество,
	|		ТаблицаТоваров.КоличествоПоРНПТ				КАК КоличествоПоРНПТ
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасов.НомерГТД						КАК НомерГТД,
	|		-ТаблицаВидыЗапасов.Количество					КАК Количество,
	|		-ТаблицаВидыЗапасов.КоличествоПоРНПТ			КАК КоличествоПоРНПТ
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.КоличествоПоРНПТ) <> 0";
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат Не РезультатЗапрос.Пустой();
	
КонецФункции

Функция ПараметрыЗаполненияВидовЗапасов()
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	ПараметрыЗаполнения.ПодбиратьВидыЗапасовПоИнтеркампани = Ложь;
	ПараметрыЗаполнения.ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение.Вставить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи, "Всегда");
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Процедура ЗаполнитьДопКолонкиВидовЗапасов() Экспорт
	
	КолонкиГруппировки  = "АналитикаУчетаНоменклатуры, НомерГТД";
	КолонкиСуммирования = "Количество, КоличествоПоРНПТ";
	
	ТаблицаТовары = Товары.Выгрузить(, КолонкиГруппировки + ", " + КолонкиСуммирования);
	ТаблицаТовары.Свернуть(КолонкиГруппировки, КолонкиСуммирования);
	
	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры, НомерГТД");
	
	Для Каждого СтрокаТоваров Из ТаблицаТовары Цикл
		
		КоличествоТоваров		= СтрокаТоваров.Количество;
		КоличествоТоваровПоРНПТ	= СтрокаТоваров.КоличествоПоРНПТ;
		
		Если КоличествоТоваров = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТоваров);
		
		Для Каждого СтрокаЗапасов Из ВидыЗапасов.НайтиСтроки(СтруктураПоиска) Цикл
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество				= Мин(КоличествоТоваров, СтрокаЗапасов.Количество);
			
			НоваяСтрока = ВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			НоваяСтрока.Количество				= Количество;
			НоваяСтрока.КоличествоПоРНПТ		= Количество * КоличествоТоваровПоРНПТ / КоличествоТоваров;
			
			СтрокаЗапасов.Количество			= СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			СтрокаЗапасов.КоличествоПоРНПТ		= КоличествоТоваровПоРНПТ - НоваяСтрока.КоличествоПоРНПТ;
			
			КоличествоТоваров		= КоличествоТоваров - НоваяСтрока.Количество;
			КоличествоТоваровПоРНПТ	= КоличествоТоваровПоРНПТ - НоваяСтрока.КоличествоПоРНПТ;
			
			Если КоличествоТоваров = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ПараметрыПоиска = Новый Структура("Количество", 0);
	МассивУдаляемыхСтрок = ВидыЗапасов.НайтиСтроки(ПараметрыПоиска);
	
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет аналитики учета номенклатуры в табличных частях документа, хранящих информацию о товарах.
// Если параметр не передан, тогда будет выполнено заполнение данных в табличных частях документа.
//
// Параметры:
//	ТаблицыДокумента - см. Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров.КоллекцияТабличныхЧастейТоваров.
//
Процедура ЗаполнитьАналитикиУчетаНоменклатурыВТабличныхЧастяхТоваров(ТаблицыДокумента = Неопределено)
	
	Если ТаблицыДокумента = Неопределено Тогда
		ТаблицыДокумента = Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров.КоллекцияТабличныхЧастейТоваров();
		
		ЗаполнитьЗначенияСвойств(ТаблицыДокумента, ЭтотОбъект);
	КонецЕсли;
	
	ТаблицаТовары = ТаблицыДокумента.Товары;
	МенеджерАналитики = РегистрыСведений.АналитикаУчетаНоменклатуры;
	
	МестаУчета = МенеджерАналитики.МестаУчета(Неопределено, Неопределено, Неопределено, Неопределено);
	
	ТекстПоляСклад =
	"ВЫБОР
	|	КОГДА Коллекция.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|		ТОГДА Коллекция.Склад
	|	КОГДА Коллекция.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|		ТОГДА Коллекция.Договор
	|	КОГДА Коллекция.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|		ТОГДА Коллекция.Подразделение
	|	ИНАЧЕ НЕОПРЕДЕЛЕНО
	|КОНЕЦ";
	
	ИменаПолей = МенеджерАналитики.ИменаПолейКоллекцииПоУмолчанию();
	ИменаПолей.Вставить("Товар",				Новый Структура("ТекстПоля", ТекстПоляСклад));
	ИменаПолей.Вставить("МногооборотнаяТара",	Новый Структура("ТекстПоля", ТекстПоляСклад));
	
	МенеджерАналитики.ЗаполнитьВКоллекции(ТаблицаТовары, МестаУчета, ИменаПолей);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
