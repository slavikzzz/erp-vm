#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//  КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ФизическоеЛицо)
	|	И ЗначениеРазрешено(Страхователь)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

#Область СоставДокументов

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
//
Функция ОписаниеСоставаОбъекта() Экспорт
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаФизическоеЛицоВШапке("ФизическоеЛицо", "");
КонецФункции

#КонецОбласти

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область СЭДО

Функция РеквизитыИсходящегоДокумента(ИсходящийДокумент)
	ИменаПолей = "ФизическоеЛицо, Ссылка, ИдентификаторРеестра, ИдентификаторСтрокиРеестра";
	Если Не ЗначениеЗаполнено(ИсходящийДокумент) Тогда
		Результат = Новый Структура(ИменаПолей);
		Результат.Ссылка = ИсходящийДокумент;
		Результат.ИдентификаторРеестра = "";
		Результат.ИдентификаторСтрокиРеестра = "";
		Возврат Результат;
	КонецЕсли;
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсходящийДокумент, ИменаПолей, Ложь);
КонецФункции

Функция СоздатьПоСообщению85(Запись, ТаблицаСведенийОВыплатах) Экспорт
	РеквизитыИсходящегоДокумента = РеквизитыИсходящегоДокумента(Запись.ИсходящийДокумент);
	
	// Определение ссылки на физическое лицо и заполнение физлица в строках таблицы.
	ФизическоеЛицо = Неопределено;
	МассивСНИЛС = КоллекцииБЗК.УникальныеЗначенияКолонки(ТаблицаСведенийОВыплатах, "СотрудникСНИЛС");
	КоллекцииБЗК.УдалитьПустыеЗначенияМассива(МассивСНИЛС);
	Если МассивСНИЛС.Количество() > 0 Тогда
		ТаблицаФизлиц = СЭДОФСС.ТаблицаФизлицПоСНИЛС(МассивСНИЛС);
		Для Каждого СтрокаТаблицыФизлиц Из ТаблицаФизлиц Цикл
			ФизическоеЛицо = СтрокаТаблицыФизлиц.ФизическоеЛицо;
			Фильтр = Новый Структура("СотрудникСНИЛС", СтрокаТаблицыФизлиц.СтраховойНомерПФР);
			Найденные = ТаблицаСведенийОВыплатах.НайтиСтроки(Фильтр);
			Для Каждого СтрокаТаблицы Из Найденные Цикл
				СтрокаТаблицы.ФизическоеЛицо = СтрокаТаблицыФизлиц.ФизическоеЛицо;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		ФизическоеЛицо = РеквизитыИсходящегоДокумента.ФизическоеЛицо;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		НомераПроцессов = КоллекцииБЗК.УникальныеЗначенияКолонки(ТаблицаСведенийОВыплатах, "НомерПроцесса");
		КоллекцииБЗК.УдалитьПустыеЗначенияМассива(НомераПроцессов);
		ФизическоеЛицо = ФизическоеЛицоПоНомерамПроцессов(НомераПроцессов);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		ИдентификаторыРеестров = КоллекцииБЗК.УникальныеЗначенияКолонки(ТаблицаСведенийОВыплатах, "ИдентификаторРеестра");
		КоллекцииБЗК.УдалитьПустыеЗначенияМассива(ИдентификаторыРеестров);
		ФизическоеЛицо = ФизическоеЛицоПоИдентификаторамРеестров(ИдентификаторыРеестров);
	КонецЕсли;
	
	ДокументОбъект = СоздатьДокументПоСообщению(Запись.Страхователь, Запись.РегистрацияИдентификатор);
	Если Не ДокументОбъект.Загружен Тогда
		ДокументОбъект.Дата = ТекущаяДатаСеанса();
		ДокументОбъект.Загружен = Истина;
	КонецЕсли;
	ДокументОбъект.ДатаСообщения = Запись.РегистрацияДата;
	ДокументОбъект.Страхователь = Запись.Страхователь;
	Если ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		ДокументОбъект.ФизическоеЛицо = ФизическоеЛицо;
	КонецЕсли;
	ДокументОбъект.СведенияОВыплатах.Загрузить(ТаблицаСведенийОВыплатах);
	ДокументОбъект.ИсходящийДокумент = Запись.ИсходящийДокумент;
	ДокументОбъект.ИдентификаторСтрокиРеестра = РеквизитыИсходящегоДокумента.ИдентификаторСтрокиРеестра;
	ДокументОбъект.ИдентификаторРеестра = РеквизитыИсходящегоДокумента.ИдентификаторРеестра;
	ДокументОбъект.ТекстОшибки = Запись.РегистрацияТекстОшибки;
	
	РежимЗаписи = ?(ДокументОбъект.ПометкаУдаления, РежимЗаписиДокумента.Запись, РежимЗаписиДокумента.Проведение);
	СЭДОФСС.ЗаписатьДокумент(ДокументОбъект, Истина, "БЗК", РежимЗаписи);
	Возврат ДокументОбъект;
КонецФункции

Функция СоздатьДокументПоСообщению(Страхователь, ИдентификаторСообщения)
	НастройкиЗапроса = ЗапросыБЗК.НастройкиЗапросаКТаблице();
	НастройкиЗапроса.Количество = 1;
	ЗапросыБЗК.ДобавитьОтбор(НастройкиЗапроса.Отбор, "ИдентификаторСообщения", , ИдентификаторСообщения);
	ЗапросыБЗК.ДобавитьОтбор(НастройкиЗапроса.Отбор, "Страхователь",           , Страхователь);
	Запрос = ЗапросыБЗК.ЗапросКТаблице(Метаданные.Документы.СтатусыВыплатыПособия, "Ссылка", НастройкиЗапроса);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка.ПолучитьОбъект();
	Иначе
		Объект = СоздатьДокумент();
		Объект.Страхователь = Страхователь;
		Объект.ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Страхователь);
		Объект.ИдентификаторСообщения = ИдентификаторСообщения;
		Возврат Объект;
	КонецЕсли;
КонецФункции

Функция ФизическоеЛицоПоНомерамПроцессов(НомераПроцессов)
	Если НомераПроцессов.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Шапка.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	Документ.ВходящийЗапросФССДляРасчетаПособия КАК Шапка
	|ГДЕ
	|	Шапка.НомерПроцесса В(&НомераПроцессов)
	|	И Шапка.ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Шапка.ФизическоеЛицо
	|ИЗ
	|	Документ.ОтветНаЗапросФССДляРасчетаПособия КАК Шапка
	|ГДЕ
	|	Шапка.НомерПроцесса В(&НомераПроцессов)
	|	И Шапка.ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)";
	Запрос.УстановитьПараметр("НомераПроцессов", НомераПроцессов);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ФизическоеЛицо;
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ФизическоеЛицоПоИдентификаторамРеестров(ИдентификаторыРеестров)
	Если ИдентификаторыРеестров.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Регистр.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.РегистрацииОтветовНаЗапросыФССДляРасчетаПособий КАК Регистр
	|ГДЕ
	|	Регистр.РегистрацияНомерРеестра В(&ИдентификаторыРеестров)
	|	И Регистр.ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)";
	Запрос.УстановитьПараметр("ИдентификаторыРеестров", ИдентификаторыРеестров);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ФизическоеЛицо;
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

#КонецОбласти

#Область ФизическиеЛица

Процедура ПриИзмененииСНИЛСФизическогоЛица(ФизическоеЛицо, СтарыйСНИЛС, НовыйСНИЛС) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СтатусыВыплатыПособия.СведенияОВыплатах КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.СотрудникСНИЛС = &НовыйСНИЛС
	|	И ТабличнаяЧасть.ФизическоеЛицо <> &ФизическоеЛицо
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка
	|ИЗ
	|	Документ.СтатусыВыплатыПособия.СведенияОВыплатах КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.ФизическоеЛицо = &ФизическоеЛицо
	|	И ТабличнаяЧасть.СотрудникСНИЛС <> &НовыйСНИЛС";
	Если ЗначениеЗаполнено(НовыйСНИЛС) Тогда
		Запрос.УстановитьПараметр("НовыйСНИЛС", НовыйСНИЛС);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТабличнаяЧасть.СотрудникСНИЛС = &НовыйСНИЛС", "ЛОЖЬ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТабличнаяЧасть.СотрудникСНИЛС <> &НовыйСНИЛС", "ИСТИНА");
	КонецЕсли;
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаВыборки Из Таблица Цикл
		Если Не ЗначениеЗаполнено(СтрокаВыборки.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		ЕстьИзменения = Ложь;
		ДокументОбъект = СтрокаВыборки.Ссылка.ПолучитьОбъект();
		Для Каждого СтрокаТаблицы Из ДокументОбъект.СведенияОВыплатах Цикл
			Если ДокументОбъект.СотрудникСНИЛС = НовыйСНИЛС И ЗначениеЗаполнено(НовыйСНИЛС) Тогда
				ДокументОбъект.ФизическоеЛицо = ФизическоеЛицо;
			ИначеЕсли ДокументОбъект.ФизическоеЛицо = ФизическоеЛицо И ДокументОбъект.СотрудникСНИЛС <> НовыйСНИЛС Тогда
				ДокументОбъект.ФизическоеЛицо = Неопределено;
			Иначе
				Продолжить;
			КонецЕсли;
			ЕстьИзменения = Истина;
		КонецЦикла;
		Если ЕстьИзменения Тогда
			СЭДОФСС.ЗаписатьДокумент(ДокументОбъект, Истина, "БЗК", РежимЗаписиДокумента.Запись);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
