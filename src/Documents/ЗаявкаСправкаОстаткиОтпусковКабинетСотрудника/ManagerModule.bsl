#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Дата");
	Поля.Добавить("Номер");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Шаблон = НСтр("ru = 'Справка об остатке отпусков %1 от %2';
					|en = 'Справка об остатке отпусков %1 от %2'");
	Представление = СтрШаблон(Шаблон, Данные.Номер, Данные.Дата);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	ОписаниеСостава = ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта();
	ОписаниеСостава.ИспользоватьКраткийСостав = Ложь;
	ОписаниеСостава.ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента = Ложь;
	ОписаниеСостава.ЗаполнятьФизическиеЛицаПоСотрудникам = Ложь;
	
	ОписаниеХранения = ЗарплатаКадрыСоставДокументов.ОписаниеХраненияСотрудниковФизическихЛиц();
	ОписаниеХранения.ПолеСотрудник      = "Сотрудник";
	ОписаниеХранения.ПолеФизическоеЛицо = "ФизическоеЛицо";
	
	ОписаниеСостава.ОписаниеХраненияСотрудниковФизическихЛиц.Добавить(ОписаниеХранения);
	
	Возврат ОписаниеСостава;
	
	
КонецФункции

Функция ОписаниеДокументаДляЗаявки(СписокОбщихПолей) Экспорт
	
	Возврат Новый Структура(СписокОбщихПолей);

КонецФункции

Функция БизнесПроцессМенеджер() Экспорт

	Возврат БизнесПроцессы.ИсполнениеЗаявкиСотрудника;

КонецФункции

Функция НаименованиеЗадачи(ДокументОбъект) Экспорт
	
	ШаблонНаименования = НСтр("ru = 'Справка об остатке отпусков';
								|en = 'Справка об остатке отпусков'");
	Возврат СтрШаблон("%1: %2", ШаблонНаименования, Строка(ДокументОбъект.ФизическоеЛицо));

КонецФункции

Функция СодержаниеЗадачи(ДокументОбъект) Экспорт
	
	ШаблонНаименования = НСтр("ru = 'Обработать запрос на справку об остатке отпусков';
								|en = 'Обработать запрос на справку об остатке отпусков'");
	
	Шаблон = НСтр("ru = '%1
	|Организация: %2
	|Сотрудник: %3';
	|en = '%1
	|Организация: %2
	|Сотрудник: %3'");
	
	Возврат СтрШаблон(Шаблон, ШаблонНаименования, Строка(ДокументОбъект.Организация), Строка(ДокументОбъект.Сотрудник));
	
КонецФункции

Функция РольИсполнителяЗаявки() Экспорт

	Возврат Справочники.РолиИсполнителей.ОтветственныйЗаСправкиОбОстаткахОтпусков;

КонецФункции

#КонецОбласти

#КонецЕсли