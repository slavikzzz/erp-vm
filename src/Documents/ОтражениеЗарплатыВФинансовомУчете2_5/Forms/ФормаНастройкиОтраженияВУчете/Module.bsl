
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ВариантыОтражения", ВариантыОтражения);
	Если ВариантыОтражения = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Для Каждого ЭлементСписка Из ВариантыОтражения Цикл
		ПараметрыВариантаОтражения = ЭлементСписка.Значение;
		Если ПараметрыВариантаОтражения.Используется Тогда
			Элементы.ВариантОтражения.СписокВыбора.Добавить(ЭлементСписка.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Параметры.Свойство("Организация",     Организация);
	Параметры.Свойство("ДатаДокумента",   ДатаДокумента);
	Параметры.Свойство("ВалютаДокумента", ВалютаДокумента);
	
	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ЗначенияЗаполнения);
	КонецЕсли;
	
	// Выбор статей и аналитик
	ПараметрыВыбораСтатьиИАналитики = ПараметрыВыбораСтатьиИАналитики();
	Если ЗначениеЗаполнено(ПараметрыВыбораСтатьиИАналитики) Тогда
		ДоходыИРасходыСервер.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыВыбораСтатьиИАналитики);
	КонецЕсли;
	// Конец Выбор статей и аналитик
	
	// Настройка счетов учета
	ПараметрыНастройкиСчетовУчета = ПараметрыНастройкиСчетовУчета();
	Если ЗначениеЗаполнено(ПараметрыНастройкиСчетовУчета) Тогда
		НастройкаСчетовУчетаСервер.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыНастройкиСчетовУчета);
	КонецЕсли;
	// Конец Настройка счетов учета
	
	УстановитьПодсказкуАвтоподбораАналитики(СтатьяРасходов, Элементы.АналитикаРасходов.Имя);
	УстановитьПодсказкуАвтоподбораАналитики(СтатьяДоходов, Элементы.АналитикаДоходов.Имя);
	
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Принять(Команда)
	
	ПринятьНаСервере();
	
	ПараметрыВариантаОтражения = ВариантыОтражения[ВариантОтражения];
	Если НЕ ПараметрыВариантаОтражения = Неопределено Тогда
		Результат = Новый Структура("ВариантОтражения," + ПараметрыВариантаОтражения.Реквизиты);
		ЗаполнитьЗначенияСвойств(Результат, ЭтотОбъект);
	Иначе
		Результат = Новый Структура("ВариантОтражения", ВариантОтражения);
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ПринятьНаСервере()
	
	Если ВариантОтражения = Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы Тогда
		НастройкаСчетовУчетаСервер.ЗаписатьНастройкиСчетовУчетаФормы(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантОтраженияПриИзменении(Элемент)
	ВариантОтраженияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВариантОтраженияПриИзмененииНаСервере()
	
	// Выбор статей и аналитик
	ПараметрыВыбораСтатьиИАналитики = ПараметрыВыбораСтатьиИАналитики();
	Если ЗначениеЗаполнено(ПараметрыВыбораСтатьиИАналитики) Тогда
		ДоходыИРасходыСервер.ПриИзмененииПараметровВыбораСтатей(ЭтотОбъект, ПараметрыВыбораСтатьиИАналитики);
	КонецЕсли;
	// Конец Выбор статей и аналитик
	
	// Настройка счетов учета
	ПараметрыНастройкиСчетовУчета = ПараметрыНастройкиСчетовУчета();
	Если ЗначениеЗаполнено(ПараметрыНастройкиСчетовУчета) Тогда
		НастройкаСчетовУчетаСервер.ПриИзмененииПараметровНастройки(ЭтотОбъект, ПараметрыНастройкиСчетовУчета);
	КонецЕсли;
	// Конец Настройка счетов учета
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяДоходовИРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
	УстановитьПодсказкуАвтоподбораАналитики(СтатьяРасходов, Элементы.АналитикаРасходов.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяДоходовПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
	УстановитьПодсказкуАвтоподбораАналитики(СтатьяДоходов, Элементы.АналитикаДоходов.Имя);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаДоходовПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.АналитикаДоходовПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаАктивовПассивовПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.АналитикаАктивовПассивовПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСчетовУчетаПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	НастройкаСчетовУчетаКлиент.ПриНажатии(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектРасчетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначенияОтбора = Новый Структура;
	ЗначенияОтбора.Вставить("ТипРасчетов",
		ПредопределенноеЗначение("Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом"));
	ЗначенияОтбора.Вставить("Организация", Организация);
	ЗначенияОтбора.Вставить("Контрагент",  Контрагент);
	
	НастройкиВыбора = Новый Структура;
	НастройкиВыбора.Вставить("ПодборДебиторскойЗадолженности", Истина);
	НастройкиВыбора.Вставить("Валюта", ВалютаДокумента);
	НастройкиВыбора.Вставить("Отбор", ЗначенияОтбора);
	НастройкиВыбора.Вставить("ТекущаяСтрока", ОбъектРасчетов);
	
	ОткрытьФорму("Справочник.ОбъектыРасчетов.ФормаВыбора", НастройкиВыбора, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектРасчетовАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Текст) Тогда
		ОбъектРасчетовОбработкаПолученияДанныхВыбора(ДанныеВыбора, Организация, Контрагент, Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектРасчетовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Текст) Тогда
		ОбъектРасчетовОбработкаПолученияДанныхВыбора(ДанныеВыбора, Организация, Контрагент, Текст);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеФормой()
	
	Элементы.ВариантОтражения.Подсказка = "";
	Элементы.НаправлениеДеятельности.Видимость = Ложь;
	
	Элементы.НачисленияПостатейноеОтражение.Видимость        = Ложь;
	Элементы.НачисленияРаспределениеНаПроизводство.Видимость = Ложь;
	Элементы.УдержанияПостатейноеОтражение.Видимость         = Ложь;
	Элементы.УдержанияПогашенияВзаиморасчетов.Видимость      = Ложь;
	Элементы.УдержанияРасчетыСПодотчетниками.Видимость       = Ложь;
	
	ПараметрыВариантаОтражения = ВариантыОтражения[ВариантОтражения];
	Если ПараметрыВариантаОтражения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ВариантОтражения.Подсказка = ПараметрыВариантаОтражения.ОписаниеВарианта;
	
	Если ПараметрыВариантаОтражения.СвойстваРеквизитов.Свойство("ТипБазыРаспределения") Тогда
		Элементы.НачисленияРаспределениеНаПроизводство.Видимость = Истина;
	ИначеЕсли ПараметрыВариантаОтражения.СвойстваРеквизитов.Свойство("СтатьяРасходов") Тогда
		Элементы.НачисленияПостатейноеОтражение.Видимость = Истина;
	ИначеЕсли ПараметрыВариантаОтражения.СвойстваРеквизитов.Свойство("СтатьяДоходов") Тогда
		Элементы.УдержанияПостатейноеОтражение.Видимость = Истина;
	ИначеЕсли ПараметрыВариантаОтражения.СвойстваРеквизитов.Свойство("Контрагент") Тогда
		Элементы.УдержанияПогашенияВзаиморасчетов.Видимость = Истина;
	ИначеЕсли ПараметрыВариантаОтражения.СвойстваРеквизитов.Свойство("ЦельВыдачи") Тогда
		Элементы.УдержанияРасчетыСПодотчетниками.Видимость = Истина;
	КонецЕсли;
	
	Элементы.НаправлениеДеятельности.Видимость =
		ПараметрыВариантаОтражения.СвойстваРеквизитов.Свойство("НаправлениеДеятельности")
		И ПараметрыВариантаОтражения.СвойстваРеквизитов.НаправлениеДеятельности.Используется;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыВыбораСтатьиИАналитики()
	
	МассивПараметров = Новый Массив;
	
	ПараметрыВариантаОтражения = ВариантыОтражения[ВариантОтражения];
	Если ПараметрыВариантаОтражения = Неопределено Тогда
		Возврат МассивПараметров;
	КонецЕсли;
	
	Если ПараметрыВариантаОтражения.СвойстваРеквизитов.Свойство("СтатьяРасходов") Тогда
		ПараметрыВыбора = ПараметрыВыбораСтатьиРасходов();
		ПараметрыВыбора.ВыборСтатьиРасходов =
			ВариантОтражения = Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеРасходы;
		ПараметрыВыбора.ВыборСтатьиАктивовПассивов =
			ВариантОтражения = Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы;
		МассивПараметров.Добавить(ПараметрыВыбора);
	КонецЕсли;
	
	Если ПараметрыВариантаОтражения.СвойстваРеквизитов.Свойство("СтатьяДоходов") Тогда
		ПараметрыВыбора = ПараметрыВыбораСтатьиДоходов();
		ПараметрыВыбора.ВыборСтатьиДоходов =
			ВариантОтражения = Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеДоходы;
		ПараметрыВыбора.ВыборСтатьиАктивовПассивов =
			ВариантОтражения = Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы;
		МассивПараметров.Добавить(ПараметрыВыбора);
	КонецЕсли;
	
	Возврат МассивПараметров;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПараметрыВыбораСтатьиРасходов()
	
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьиРасходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("АналитикаАктивов");
	
	Возврат ПараметрыВыбора;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПараметрыВыбораСтатьиДоходов()
	
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	
	ПараметрыВыбора.Статья = "СтатьяДоходов";
	ПараметрыВыбора.АналитикаДоходов = "АналитикаДоходов";
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьиДоходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяДоходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("АналитикаДоходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("АналитикаПассивов");
	
	Возврат ПараметрыВыбора;
	
КонецФункции

&НаСервере
Функция ПараметрыНастройкиСчетовУчета()
	
	МассивПараметров = Новый Массив;
	
	ПараметрыВариантаОтражения = ВариантыОтражения[ВариантОтражения];
	Если ПараметрыВариантаОтражения = Неопределено Тогда
		Возврат МассивПараметров;
	КонецЕсли;
	
	Если ПараметрыВариантаОтражения.СвойстваРеквизитов.Свойство("СтатьяРасходов") Тогда
		
		ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
		ПараметрыНастройки.СтатьяАктивовПассивов = "СтатьяРасходов";
		ПараметрыНастройки.Представление = "НастройкаСчетовУчетаПредставление";
		ПараметрыНастройки.ТипСтатьи = "ТипСтатьиРасходов";
		
		ПараметрыНастройки.Организация = "Организация";
		
		ПараметрыНастройки.ИсточникиПодбораСубконто.Добавить(Тип("СправочникСсылка.Организации"),          "Организация");
		ПараметрыНастройки.ИсточникиПодбораСубконто.Добавить(Тип("СправочникСсылка.СтруктураПредприятия"), "Подразделение");
		ПараметрыНастройки.ИсточникиПодбораСубконто.Добавить(Тип("СправочникСсылка.ФизическиеЛица"),       "ФизическоеЛицо");
		
		ПараметрыНастройки.ЭлементыФормы.Добавить("НастройкаСчетовУчетаНачислений");
		МассивПараметров.Добавить(ПараметрыНастройки);
		
	КонецЕсли;
	
	Если ПараметрыВариантаОтражения.СвойстваРеквизитов.Свойство("СтатьяДоходов") Тогда
		
		ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
		ПараметрыНастройки.СтатьяАктивовПассивов = "СтатьяДоходов";
		ПараметрыНастройки.Представление = "НастройкаСчетовУчетаПредставление";
		ПараметрыНастройки.ТипСтатьи = "ТипСтатьиДоходов";
		
		ПараметрыНастройки.Организация = "Организация";
		
		ПараметрыНастройки.ИсточникиПодбораСубконто.Добавить(Тип("СправочникСсылка.Организации"),          "Организация");
		ПараметрыНастройки.ИсточникиПодбораСубконто.Добавить(Тип("СправочникСсылка.СтруктураПредприятия"), "Подразделение");
		
		ПараметрыНастройки.ЭлементыФормы.Добавить("НастройкаСчетовУчетаУдержаний");
		МассивПараметров.Добавить(ПараметрыНастройки);
		
	КонецЕсли;
	
	Возврат МассивПараметров;
	
КонецФункции

&НаСервере
Процедура УстановитьПодсказкуАвтоподбораАналитики(Статья, ЭлементАналитики)
	
	Элементы[ЭлементАналитики].ПодсказкаВвода = "";
	Если Не ЗначениеЗаполнено(Статья) Тогда
		Возврат;
	КонецЕсли;
	
	СвойстваСтатьи = Документы.ОтражениеЗарплатыВФинансовомУчете2_5.СвойстваСтатьиОтражения(Статья);
	
	Если СвойстваСтатьи.ДоступноАвтозаполнение Тогда
		Элементы[ЭлементАналитики].ПодсказкаВвода = НСтр("ru = '<подбирается автоматически>';
														|en = '<picked automatically>'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбъектРасчетовОбработкаПолученияДанныхВыбора(ДанныеВыбора, Организация, Контрагент, Текст)
	
	СтруктураПараметров = ВзаиморасчетыКлиентСервер.СтруктураОтбораДанныхВыбора();
	СтруктураПараметров.ТипРасчетов = Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом;
	СтруктураПараметров.Организация = Организация;
	СтруктураПараметров.Контрагент  = Контрагент;
	СтруктураПараметров.Текст       = Текст;
	
	ВзаиморасчетыСервер.ЗаполнитьДанныеВыбораОбъектаРасчетов(ДанныеВыбора, СтруктураПараметров);
	
КонецПроцедуры

#КонецОбласти