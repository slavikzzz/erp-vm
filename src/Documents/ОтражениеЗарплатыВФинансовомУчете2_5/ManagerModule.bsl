#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//   МеханизмыДокумента - Массив из Строка - содержит список имен учетных механизмов, для которых будет выполнена
//                        регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("Взаиморасчеты");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("ОборотныеРегистрыУправленческогоУчета");
	МеханизмыДокумента.Добавить("РасчетыСПодотчетниками");
	МеханизмыДокумента.Добавить("СебестоимостьИПартионныйУчет");
	МеханизмыДокумента.Добавить("УчетНЗП");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("ИсправлениеДокументов");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  см. ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.ОтражениеЗарплатыВФинансовомУчете2_5") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицыДокумента(ТекстыЗапроса);
	
	ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТрудозатратыНезавершенногоПроизводства(ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаПрочиеДоходы(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(ТекстыЗапроса, Регистры);
	
	ДобавитьТекстыОтраженияВзаиморасчетов(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаВыработкаСотрудников", ТекстыЗапроса) Тогда
		ТаблицаВыработки = РаспределитьНачисленияПоЭтапамПроизводства(Запрос.Параметры);
		Запрос.УстановитьПараметр("ТаблицаВыработкаСотрудников", ТаблицаВыработки);
	КонецЕсли;
	
	ПроведениеДокументов.ДобавитьЗапросыСторноДвижений(Запрос, ТекстыЗапроса, Регистры, ПустаяСсылка().Метаданные());
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - См. ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения.КомандыЗаполнения
//   Параметры - См. ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения.Параметры
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	ИсправлениеДокументов.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, ПустаяСсылка().Метаданные());
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом
// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//   Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Возвращает параметры настройки счетов учета в документе.
// 
// Возвращаемое значение:
// 	Массив - Массив параметров настройки счетов учета (См. НастройкаСчетовУчетаСервер.ПараметрыНастройкиСчетаУчетаОперации).
//
Функция ПараметрыНастройкиСчетовУчета() Экспорт
	
	МассивПараметров = Новый Массив();
	
	#Область Начисления
	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ПутьКДанным = "Объект.Начисления";
	ПараметрыНастройки.СтатьяАктивовПассивов = "СтатьяРасходов";
	ПараметрыНастройки.Представление = "";
	
	ПараметрыНастройки.ИсточникиПодбораСубконто.Добавить(
		Тип("СправочникСсылка.Организации"),          "Объект.Организация");
	ПараметрыНастройки.ИсточникиПодбораСубконто.Добавить(
		Тип("СправочникСсылка.СтруктураПредприятия"), "Объект.Начисления.Подразделение");
	ПараметрыНастройки.ИсточникиПодбораСубконто.Добавить(
		Тип("СправочникСсылка.ФизическиеЛица"),       "Объект.Начисления.ФизическоеЛицо");
	
	МассивПараметров.Добавить(ПараметрыНастройки);
	#КонецОбласти
	
	#Область НалогиВзносыОрганизации
	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ПутьКДанным = "Объект.НалогиВзносыОрганизации";
	ПараметрыНастройки.СтатьяАктивовПассивов = "СтатьяРасходов";
	ПараметрыНастройки.Представление = "";
	
	ПараметрыНастройки.ИсточникиПодбораСубконто.Добавить(
		Тип("СправочникСсылка.Организации"),          "Объект.Организация");
	ПараметрыНастройки.ИсточникиПодбораСубконто.Добавить(
		Тип("СправочникСсылка.СтруктураПредприятия"), "Объект.НалогиВзносыОрганизации.Подразделение");
	ПараметрыНастройки.ИсточникиПодбораСубконто.Добавить(
		Тип("СправочникСсылка.ФизическиеЛица"),       "Объект.НалогиВзносыОрганизации.ФизическоеЛицо");
	
	МассивПараметров.Добавить(ПараметрыНастройки);
	#КонецОбласти
	
	#Область Удержания
	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ПутьКДанным = "Объект.Удержания";
	ПараметрыНастройки.СтатьяАктивовПассивов = "СтатьяДоходов";
	ПараметрыНастройки.Представление = "";
	
	ПараметрыНастройки.ИсточникиПодбораСубконто.Добавить(
		Тип("СправочникСсылка.Организации"),          "Объект.Организация");
	ПараметрыНастройки.ИсточникиПодбораСубконто.Добавить(
		Тип("СправочникСсылка.СтруктураПредприятия"), "Объект.Удержания.Подразделение");
	
	МассивПараметров.Добавить(ПараметрыНастройки);
	#КонецОбласти
	
	Возврат МассивПараметров;
	
КонецФункции

// Возвращает параметры выбора статей и аналитик.
// 
// Возвращаемое значение:
//  Структура - Параметры выбора статей и аналитик (См. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики).
//
Функция ПараметрыВыбораСтатейИАналитик() Экспорт
	
	МассивПараметров = Новый Массив;
	
	#Область Начисления_НаПрочиеРасходыПассивы
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.Начисления";
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	
	ВариантыОтражения = Новый Массив;
	ВариантыОтражения.Добавить(Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеРасходы);
	ВариантыОтражения.Добавить(Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы);
	
	ПараметрыВыбора.УсловияДоступностиСтатьиВСтроках.Вставить("ВариантОтражения", ВариантыОтражения);
	
	МассивПараметров.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	#Область НалогиВзносыОрганизации_НаПрочиеРасходыПассивы
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.НалогиВзносыОрганизации";
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	
	ВариантыОтражения = Новый Массив;
	ВариантыОтражения.Добавить(Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеРасходы);
	ВариантыОтражения.Добавить(Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы);
	
	ПараметрыВыбора.УсловияДоступностиСтатьиВСтроках.Вставить("ВариантОтражения", ВариантыОтражения);
	
	МассивПараметров.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	#Область Удержания_НаПрочиеДоходыАктивы
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.Удержания";
	ПараметрыВыбора.ВыборСтатьиДоходов = Истина;
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.Статья = "СтатьяДоходов";
	ПараметрыВыбора.АналитикаДоходов = "АналитикаДоходов";
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	
	ВариантыОтражения = Новый Массив;
	ВариантыОтражения.Добавить(Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеДоходы);
	ВариантыОтражения.Добавить(Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы);
	
	ПараметрыВыбора.УсловияДоступностиСтатьиВСтроках.Вставить("ВариантОтражения", ВариантыОтражения);
	
	МассивПараметров.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	Возврат МассивПараметров;

КонецФункции

#Область ЗагрузкаДанныхИзФайла

// Производит сопоставление данных, загружаемых в табличную часть ПолноеИмяТабличнойЧасти,
// с данными в ИБ, и заполняет параметры АдресТаблицыСопоставления и СписокНеоднозначностей.
// 
// Параметры:
//  АдресЗагружаемыхДанных    - Строка - адрес временного хранилища с таблицей значений, в которой
//                                       находятся загруженные данные из файла.
//  АдресТаблицыСопоставления - Строка - адрес временного хранилища с пустой таблицей значений,
//                                       являющейся копией табличной части документа, 
//                                       которую необходимо заполнить из таблицы АдресЗагружаемыхДанных.
//  СписокНеоднозначностей - ТаблицаЗначений - список неоднозначных значений, для которых в ИБ имеется несколько подходящих вариантов:
//   * Колонка       - Строка - имя колонки, в которой была обнаружена неоднозначность;
//   * Идентификатор - Число  - идентификатор строки, в которой была обнаружена неоднозначность.
//  ПолноеИмяТабличнойЧасти - Строка - полное имя табличной части, в которую загружаются данные.
//  ДополнительныеПараметры - Произвольный - Любые дополнительные сведения.
Процедура СопоставитьЗагружаемыеДанные(АдресЗагружаемыхДанных, АдресТаблицыСопоставления, СписокНеоднозначностей, ПолноеИмяТабличнойЧасти, ДополнительныеПараметры) Экспорт
	
	ЧастиПути = СтрРазделить(ПолноеИмяТабличнойЧасти, ".");
	ИмяТабличнойЧасти = ЧастиПути.Получить(ЧастиПути.ВГраница());
	
	ЗагружаемыеДанные    = ПолучитьИзВременногоХранилища(АдресЗагружаемыхДанных); // ТаблицаЗначений - 
	ТаблицаСопоставления = ПолучитьИзВременногоХранилища(АдресТаблицыСопоставления); // ТаблицаЗначений - 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ЗагружаемыеДанные", ЗагружаемыеДанные);
	Запрос.УстановитьПараметр("Организация", ДополнительныеПараметры.Организация);
	Запрос.УстановитьПараметр("ЗагрузкаУдержаний", ИмяТабличнойЧасти = "Удержания");
	Запрос.УстановитьПараметр("НалогиВзносыСотрудников", ИмяТабличнойЧасти = "НалогиВзносыСотрудников");
	Запрос.УстановитьПараметр("ДоступныеВариантыОтражения", ДополнительныеПараметры.ДоступныеВариантыОтражения);
	
	МассивЗапросов = Новый Массив;
	МассивЗапросов.Добавить(ТекстЗапросаЗагружаемыхДанных(ЗагружаемыеДанные.Колонки));
	МассивЗапросов.Добавить(ТекстЗапросаСопоставленияДанных(ЗагружаемыеДанные.Колонки));
	МассивЗапросов.Добавить(ТекстЗапросаВыборкиСопоставленныхДанных());
	
	Запрос.Текст = СтрСоединить(МассивЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаСопоставления.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если Выборка.КоличествоПодразделений > 1 Тогда
			ЗаписьОНеоднозначности = СписокНеоднозначностей.Добавить();
			ЗаписьОНеоднозначности.Идентификатор = Выборка.Идентификатор; 
			ЗаписьОНеоднозначности.Колонка = "ПодразделениеНаименование";
		КонецЕсли;
		
		Если Выборка.КоличествоФизическихЛиц > 1 Тогда
			ЗаписьОНеоднозначности = СписокНеоднозначностей.Добавить();
			ЗаписьОНеоднозначности.Идентификатор = Выборка.Идентификатор; 
			ЗаписьОНеоднозначности.Колонка = "ФизическоеЛицоФИО";
		КонецЕсли;
		
		Если Выборка.КоличествоВидовНачисленийУдержаний > 1 Тогда
			ЗаписьОНеоднозначности = СписокНеоднозначностей.Добавить();
			ЗаписьОНеоднозначности.Идентификатор = Выборка.Идентификатор; 
			ЗаписьОНеоднозначности.Колонка = "ВидНачисленияУдержанияНаименование";
		КонецЕсли;
		
		Если Выборка.КоличествоВидовНалогов > 1 Тогда
			ЗаписьОНеоднозначности = СписокНеоднозначностей.Добавить();
			ЗаписьОНеоднозначности.Идентификатор = Выборка.Идентификатор; 
			ЗаписьОНеоднозначности.Колонка = "ВидНалогаНаименование";
		КонецЕсли;
		
		Если Не Выборка.ВариантОтраженияДоступен Тогда
			НоваяСтрока.ВариантОтражения = Неопределено;
			ЗаписьОНеоднозначности = СписокНеоднозначностей.Добавить();
			ЗаписьОНеоднозначности.Идентификатор = Выборка.Идентификатор; 
			ЗаписьОНеоднозначности.Колонка = "ВариантОтражения";
		КонецЕсли;
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ТаблицаСопоставления, АдресТаблицыСопоставления);
	
КонецПроцедуры

// Возвращает список подходящих объектов ИБ для неоднозначного значения ячейки.
//
// Параметры:
//   ПолноеИмяТабличнойЧасти   - Строка - Полное имя табличной части, в которую загружаются данные.
//   СписокНеоднозначностей    - Массив - Массив для заполнения с неоднозначными данными.
//   ИмяКолонки                - Строка - Имя колонки, в который возникла неоднозначность. 
//   ЗагружаемыеЗначенияСтрока - Строка - Загружаемые данные, на основании которых возникла неоднозначность.
//   ДополнительныеПараметры   - Произвольный - Любые дополнительные сведения
//
Процедура ЗаполнитьСписокНеоднозначностей(ПолноеИмяТабличнойЧасти, СписокНеоднозначностей, ИмяКолонки, ЗагружаемыеЗначенияСтрока, ДополнительныеПараметры) Экспорт
	
	ЧастиПути = СтрРазделить(ПолноеИмяТабличнойЧасти, ".");
	ИмяТабличнойЧасти = ЧастиПути.Получить(ЧастиПути.ВГраница());
	
	Если ИмяКолонки = "Подразделение" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ Ссылка
		|ИЗ Справочник.СтруктураПредприятия
		|ГДЕ Наименование = &Наименование";
		
		Запрос.УстановитьПараметр("Наименование",
			ЗагружаемыеЗначенияСтрока.ПодразделениеНаименование);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокНеоднозначностей.Добавить(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЕсли;
	
	Если ИмяКолонки = "ФизическоеЛицо" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ Ссылка
		|ИЗ Справочник.ФизическиеЛица
		|ГДЕ Наименование = &Наименование";
		
		Запрос.УстановитьПараметр("Наименование",
			ЗагружаемыеЗначенияСтрока.ФизическоеЛицоФИО);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокНеоднозначностей.Добавить(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЕсли;
	
	Если ИмяКолонки = "ВидНачисления" ИЛИ ИмяКолонки = "ВидУдержания" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ Ссылка
		|ИЗ Справочник.ВидыНачисленийУдержаний
		|ГДЕ ЯвляетсяУдержанием = &ЯвляетсяУдержанием
		|	И Наименование = &Наименование";
		
		Запрос.УстановитьПараметр("Наименование",
			ЗагружаемыеЗначенияСтрока.ВидНачисленияУдержанияНаименование);
		Запрос.УстановитьПараметр("ЯвляетсяУдержанием", ИмяТабличнойЧасти = "Удержания");
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокНеоднозначностей.Добавить(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЕсли;
	
	Если ИмяКолонки = "ВидНалога" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ Ссылка
		|ИЗ Справочник.ВидыНалоговВзносов
		|ГДЕ ПлательщикСотрудник = &ПлательщикСотрудник
		|	И Наименование = &Наименование";
		
		Запрос.УстановитьПараметр("Наименование",
			ЗагружаемыеЗначенияСтрока.ВидНалогаНаименование);
		Запрос.УстановитьПараметр("ПлательщикСотрудник", ИмяТабличнойЧасти = "НалогиВзносыСотрудников");
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокНеоднозначностей.Добавить(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЕсли;
	
	Если ИмяКолонки = "ВариантОтражения" Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
			СписокНеоднозначностей, ДополнительныеПараметры.ДоступныеВариантыОтражения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ВариантыОтраженияНачислений() Экспорт
	
	ВариантыОтражения = Новый Соответствие;
	
	// Отражение затрат по статье расходов
	
	ОписаниеВарианта = НовыйВариантОтражения(
		Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеРасходы,
		НСтр("ru = 'Сумма принимается к учету как постатейный расход и распределяется в соответствии с настройками статьи';
			|en = 'The amount is accounted for as an itemized expense and is allocated according to the item''s settings'"),
		"СтатьяРасходов, АналитикаРасходов, НаправлениеДеятельности");
	ОписаниеВарианта.ПроверятьЗаполнение = Ложь;
	
	СтатьяРасходов = ОписаниеВарианта.СвойстваРеквизитов.СтатьяРасходов; // см. СвойстваРеквизитаОтражения
	СтатьяРасходов.Основной = Истина;
	
	НаправлениеДеятельности = ОписаниеВарианта.СвойстваРеквизитов.НаправлениеДеятельности; // см. СвойстваРеквизитаОтражения
	НаправлениеДеятельности.Используется = ПолучитьФункциональнуюОпцию("ИспользоватьУчетЗатратПоНаправлениямДеятельности");
	НаправлениеДеятельности.РеквизитОбязательный = Ложь;
	
	ВариантыОтражения.Вставить(ОписаниеВарианта.Значение, Новый ФиксированнаяСтруктура(ОписаниеВарианта));
	
	// Отражение затрат по статье активов/пассивов
	
	ОписаниеВарианта = НовыйВариантОтражения(
		Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы,
		НСтр("ru = 'Сумма принимается к учету как постатейный расход и распределяется в соответствии с настройками статьи';
			|en = 'The amount is accounted for as an itemized expense and is allocated according to the item''s settings'"),
		"СтатьяРасходов, АналитикаАктивовПассивов, НастройкаСчетовУчета, НаправлениеДеятельности");
	ОписаниеВарианта.ПроверятьЗаполнение = Ложь;
	
	ОписаниеВарианта.Используется = ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов");
	
	СтатьяРасходов = ОписаниеВарианта.СвойстваРеквизитов.СтатьяРасходов; // см. СвойстваРеквизитаОтражения
	СтатьяРасходов.Основной = Истина;
	
	НастройкаСчетовУчета = ОписаниеВарианта.СвойстваРеквизитов.НастройкаСчетовУчета; // см. СвойстваРеквизитаОтражения
	НастройкаСчетовУчета.Используется =
		НастройкаСчетовУчетаСервер.ДоступнаНастройкаСчетовРеглУчета() ИЛИ НастройкаСчетовУчетаСервер.ДоступнаНастройкаСчетовМеждународногоУчета();
	
	НаправлениеДеятельности = ОписаниеВарианта.СвойстваРеквизитов.НаправлениеДеятельности; // см. СвойстваРеквизитаОтражения
	НаправлениеДеятельности.Используется = ПолучитьФункциональнуюОпцию("ИспользоватьУчетЗатратПоНаправлениямДеятельности");
	НаправлениеДеятельности.РеквизитОбязательный = Ложь;
	
	ВариантыОтражения.Вставить(ОписаниеВарианта.Значение, Новый ФиксированнаяСтруктура(ОписаниеВарианта));
	
	// Распределение расходов на производство
	
	ОписаниеВарианта = НовыйВариантОтражения(
		Перечисления.ВариантыОтраженияНачисленийУдержаний.РаспределитьНаПроизводство,
		НСтр("ru = 'Начисленная сумма распределяется на партии производства по выработке сотрудников';
			|en = 'Accrued amount is allocated to production lots for timesheets charge'"),
		"ТипБазыРаспределения, СтатьяКалькуляции");
	
	ТипБазыРаспределения = ОписаниеВарианта.СвойстваРеквизитов.ТипБазыРаспределения; // см. СвойстваРеквизитаОтражения
	ТипБазыРаспределения.Основной = Истина;
	
	СтатьяКалькуляции = ОписаниеВарианта.СвойстваРеквизитов.СтатьяКалькуляции; // см. СвойстваРеквизитаОтражения
	СтатьяКалькуляции.РеквизитОбязательный = Ложь;
	
	ВариантыОтражения.Вставить(ОписаниеВарианта.Значение, Новый ФиксированнаяСтруктура(ОписаниеВарианта));
	
	// 
	
	Возврат Новый ФиксированноеСоответствие(ВариантыОтражения);
	
КонецФункции

Функция ВариантыОтраженияУдержаний() Экспорт
	
	ВариантыОтражения = Новый Соответствие;
	
	// Отражение удержаний по статье доходов
	
	ОписаниеВарианта = НовыйВариантОтражения(
		Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеДоходы,
		НСтр("ru = 'Сумма удержания принимается к учету как постатейный доход и распределяется в соответствии с настройками статьи';
			|en = 'The amount of deduction is accounted for as itemized income and is allocated according to the item''s settings.'"),
		"СтатьяДоходов, АналитикаДоходов");
	ОписаниеВарианта.ПроверятьЗаполнение = Ложь;
	
	СтатьяДоходов = ОписаниеВарианта.СвойстваРеквизитов.СтатьяДоходов; // см. СвойстваРеквизитаОтражения
	СтатьяДоходов.Основной = Истина;
	
	ВариантыОтражения.Вставить(ОписаниеВарианта.Значение, Новый ФиксированнаяСтруктура(ОписаниеВарианта));
	
	// Отражение удержаний по статье активов/пассивов
	
	ОписаниеВарианта = НовыйВариантОтражения(
		Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы,
		НСтр("ru = 'Сумма удержания принимается к учету как постатейный доход и распределяется в соответствии с настройками статьи';
			|en = 'The amount of deduction is accounted for as itemized income and is allocated according to the item''s settings.'"),
		"СтатьяДоходов, АналитикаАктивовПассивов, НастройкаСчетовУчета");
	ОписаниеВарианта.ПроверятьЗаполнение = Ложь;
	
	ОписаниеВарианта.Используется = ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов");
	
	СтатьяДоходов = ОписаниеВарианта.СвойстваРеквизитов.СтатьяДоходов; // см. СвойстваРеквизитаОтражения
	СтатьяДоходов.Основной = Истина;
	
	НастройкаСчетовУчета = ОписаниеВарианта.СвойстваРеквизитов.НастройкаСчетовУчета; // см. СвойстваРеквизитаОтражения
	НастройкаСчетовУчета.Используется =
		НастройкаСчетовУчетаСервер.ДоступнаНастройкаСчетовРеглУчета() ИЛИ НастройкаСчетовУчетаСервер.ДоступнаНастройкаСчетовМеждународногоУчета();
	
	ВариантыОтражения.Вставить(ОписаниеВарианта.Значение, Новый ФиксированнаяСтруктура(ОписаниеВарианта));
	
	// Погашение взаиморасчетов удержанием
	
	ОписаниеВарианта = НовыйВариантОтражения(
		Перечисления.ВариантыОтраженияНачисленийУдержаний.ПогаситьВзаиморасчеты,
		НСтр("ru = 'Сумма удержания направляется на погашение взаиморасчетов';
			|en = 'The amount of deduction is directed to the mutual settlements repayment'"),
		"Контрагент, ОбъектРасчетов");
	
	Контрагент = ОписаниеВарианта.СвойстваРеквизитов.Контрагент; // см. СвойстваРеквизитаОтражения
	Контрагент.Основной = Истина;
	
	ВариантыОтражения.Вставить(ОписаниеВарианта.Значение, Новый ФиксированнаяСтруктура(ОписаниеВарианта));
	
	// Погашение расчетов с подотчетником
	
	ОписаниеВарианта = НовыйВариантОтражения(
		Перечисления.ВариантыОтраженияНачисленийУдержаний.ПогаситьРасчетыСПодотчетником,
		НСтр("ru = 'Сумма удержания направляется на погашение расчетов с подотчетным лицом';
			|en = 'The amount of deduction is directed to the settlement repayment with advance holder'"),
		"ЦельВыдачи");
	
	ЦельВыдачи = ОписаниеВарианта.СвойстваРеквизитов.ЦельВыдачи; // см. СвойстваРеквизитаОтражения
	ЦельВыдачи.Используется = ПолучитьФункциональнуюОпцию("КонтролироватьВыдачуПодОтчетВРазрезеЦелей");
	ЦельВыдачи.РеквизитОбязательный = Ложь;
	
	ВариантыОтражения.Вставить(ОписаниеВарианта.Значение, Новый ФиксированнаяСтруктура(ОписаниеВарианта));
	
	// 
	
	Возврат Новый ФиксированноеСоответствие(ВариантыОтражения);
	
КонецФункции

Функция СвойстваСтатьиОтражения(Статья) Экспорт
	
	Результат = ДоходыИРасходыВызовСервераПовтИсп.ЗначенияРеквизитовСтатьи(Статья);
	Результат.Вставить("ДоступнаНастройкаСчетовУчета", Ложь);
	Результат.Вставить("ДоступноАвтозаполнение", Ложь);
	
	Если ТипЗнч(Статья) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда
		ПодбираемыеТипы = ТипыАналитикиНачисленийДоступныеКЗаполнению();
	ИначеЕсли ТипЗнч(Статья) = Тип("ПланВидовХарактеристикСсылка.СтатьиДоходов") Тогда
		ПодбираемыеТипы = ТипыАналитикиУдержанийДоступныеКЗаполнению();
	ИначеЕсли ТипЗнч(Статья) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов") Тогда
		//++ НЕ УТКА
		СтатьиСНастройкамиПоОбъектам = МеждународныйУчетСерверПовтИсп.СтатьиАктивовПассивовСНастройкамиПоОбъектам();
		Результат.ДоступнаНастройкаСчетовУчета = СтатьиСНастройкамиПоОбъектам.Найти(Статья) = Неопределено;
		//-- НЕ УТКА
		Возврат Результат;
	КонецЕсли;
	
	Для Каждого ТипАналитики Из ПодбираемыеТипы Цикл
		Если Результат.ТипЗначения.СодержитТип(ТипАналитики) Тогда
			Результат.ДоступноАвтозаполнение = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ОписаниеКолонокМакетаДляЗагрузкиИзФайла(ИмяТабличнойЧасти, ТребуютсяПодразделения, ТребуютсяФизическиеЛица, ТребуютсяВидыРасчетов) Экспорт
	
	КолонкиМакета = Новый Массив;
	
	Если ТребуютсяПодразделения Тогда
		
		Группа = НСтр("ru = 'Подразделение';
						|en = 'Business unit'");
		
		Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.ОписаниеКолонкиМакета(
			"ПодразделениеКод", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(9)));
		Колонка.Заголовок = НСтр("ru = 'Код';
								|en = 'Code'");
		Колонка.Группа = Группа;
		Колонка.Ширина = 10;
		Колонка.Родитель = "Подразделение";
		Колонка.Позиция = КолонкиМакета.ВГраница() + 1;
		КолонкиМакета.Добавить(Колонка);
		
		Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.ОписаниеКолонкиМакета(
			"ПодразделениеНаименование", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
		Колонка.Заголовок = НСтр("ru = 'Наименование';
								|en = 'Description'");
		Колонка.ОбязательнаДляЗаполнения = Истина;
		Колонка.Группа = Группа;
		Колонка.Родитель = "Подразделение";
		Колонка.Позиция = КолонкиМакета.ВГраница() + 1;
		КолонкиМакета.Добавить(Колонка);
		
	КонецЕсли;
	
	Если ТребуютсяФизическиеЛица ИЛИ ИмяТабличнойЧасти ="Удержания" Тогда
		
		Группа = НСтр("ru = 'Физическое лицо';
						|en = 'Person'");
		
		Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.ОписаниеКолонкиМакета(
			"ФизическоеЛицоКод", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(10)));
		Колонка.Заголовок = НСтр("ru = 'Код';
								|en = 'Code'");
		Колонка.Группа = Группа;
		Колонка.Ширина = 10;
		Колонка.Родитель = "ФизическоеЛицо";
		Колонка.Позиция = КолонкиМакета.ВГраница() + 1;
		КолонкиМакета.Добавить(Колонка);
		
		Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.ОписаниеКолонкиМакета(
			"ФизическоеЛицоФИО", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
		Колонка.Заголовок = НСтр("ru = 'ФИО';
								|en = 'Full name'");
		Колонка.ОбязательнаДляЗаполнения = Истина;
		Колонка.Группа = Группа;
		Колонка.Родитель = "ФизическоеЛицо";
		Колонка.Позиция = КолонкиМакета.ВГраница() + 1;
		КолонкиМакета.Добавить(Колонка);
		
	КонецЕсли;
	
	Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.ОписаниеКолонкиМакета("ВидНачисленияУдержанияНаименование",
		Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
	Если ИмяТабличнойЧасти = "Удержания" Тогда
		Колонка.Заголовок = НСтр("ru = 'Вид удержания';
								|en = 'Deduction kind'");
		Колонка.Родитель = "ВидУдержания";
	Иначе
		Колонка.Заголовок = НСтр("ru = 'Вид начисления';
								|en = 'Accrual item'");
		Колонка.Родитель = "ВидНачисления";
	КонецЕсли;
	Колонка.Группа = Колонка.Заголовок;
	Колонка.Позиция = КолонкиМакета.ВГраница() + 1;
	КолонкиМакета.Добавить(Колонка);
	
	Если ТребуютсяВидыРасчетов И ИмяТабличнойЧасти <> "НалогиВзносыОрганизации" Тогда
		
		Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.ОписаниеКолонкиМакета(
			"ВидРасчетов", Новый ОписаниеТипов("СправочникСсылка.ВидыРасчетовССотрудниками"));
		Колонка.Заголовок = НСтр("ru = 'Вид расчетов';
								|en = 'Payroll item'");
		Колонка.ОбязательнаДляЗаполнения = Истина;
		Колонка.Группа = Колонка.Заголовок;
		Колонка.Позиция = КолонкиМакета.ВГраница() + 1;
		КолонкиМакета.Добавить(Колонка);
		
	КонецЕсли;
	
	Если ИмяТабличнойЧасти = "НалогиВзносыОрганизации" ИЛИ ИмяТабличнойЧасти = "НалогиВзносыСотрудников" Тогда
		
		Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.ОписаниеКолонкиМакета(
			"ВидНалогаНаименование", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
		Колонка.ОбязательнаДляЗаполнения = Истина;
		Колонка.Заголовок = НСтр("ru = 'Вид налога';
								|en = 'Tax kind'");
		Колонка.Группа = Колонка.Заголовок;
		Колонка.Родитель = "ВидНалога";
		Колонка.Позиция = КолонкиМакета.ВГраница() + 1;
		КолонкиМакета.Добавить(Колонка);
		
		Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.ОписаниеКолонкиМакета(
			"НалоговаяБаза", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла()));
		Колонка.Заголовок = НСтр("ru = 'Налоговая база';
								|en = 'Tax base'");
		Колонка.Группа = Колонка.Заголовок;
		Колонка.Ширина = 15;
		Колонка.Позиция = КолонкиМакета.ВГраница() + 1;
		КолонкиМакета.Добавить(Колонка);
		
	КонецЕсли;
	
	Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.ОписаниеКолонкиМакета(
		"Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла()), НСтр("ru = 'Сумма';
																				|en = 'Amount'"));
	Колонка.ОбязательнаДляЗаполнения = Истина;
	Колонка.Группа = Колонка.Заголовок;
	Колонка.Ширина = 15;
	Колонка.Позиция = КолонкиМакета.ВГраница() + 1;
	КолонкиМакета.Добавить(Колонка);
	
	Если ИмяТабличнойЧасти <> "НалогиВзносыСотрудников" Тогда
		
		Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.ОписаниеКолонкиМакета(
			"ВариантОтражения", Новый ОписаниеТипов("ПеречислениеСсылка.ВариантыОтраженияНачисленийУдержаний"));
		Колонка.Заголовок = НСтр("ru = 'Вариант отражения';
								|en = 'Posting option'");
		Колонка.Группа = Колонка.Заголовок;
		Колонка.Позиция = КолонкиМакета.ВГраница() + 1;
		КолонкиМакета.Добавить(Колонка);
		
	КонецЕсли;
	
	Возврат КолонкиМакета;
	
КонецФункции

#Область ПроцедурыЗаполнения

Функция ПараметрыЗаполненияДокумента() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("Организация");
	Параметры.Вставить("НачалоПериода", '00010101');
	Параметры.Вставить("КонецПериода",  '00010101');
	Параметры.Вставить("ФизическиеЛицаПодробно", Ложь);
	Параметры.Вставить("Подразделение");
	
	Параметры.Вставить("Источники", Новый Структура);
	
	Возврат Параметры;
	
КонецФункции

Функция ПодготовитьДанныеЗаполнения(Параметры) Экспорт
	
	Источники = Параметры.Источники;
	
	Результат = Новый Структура;
	Если Источники.Свойство("ВыработкаСотрудников") ИЛИ Источники.Количество() = 0 Тогда
		Результат.Вставить("ВыработкаСотрудников", ПолучитьДанныеВыработки(Параметры));
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыйВариантОтражения(Значение, Описание, Реквизиты)
	
	ВариантОтражения = Новый Структура;
	
	ВариантОтражения.Вставить("Значение", Значение);
	ВариантОтражения.Вставить("ОписаниеВарианта", Описание);
	
	ВариантОтражения.Вставить("Используется", Истина);
	
	ВариантОтражения.Вставить("Реквизиты", Реквизиты);
	
	СписокРеквизитов = Новый Массив;
	СвойстваРеквизитов = Новый Структура;
	Для Каждого ЭлементСписка Из СтрРазделить(Реквизиты, ",") Цикл
		ИмяРеквизита = СокрЛП(ЭлементСписка);
		СвойстваРеквизитов.Вставить(ИмяРеквизита, СвойстваРеквизитаОтражения());
		СписокРеквизитов.Добавить(ИмяРеквизита);
	КонецЦикла;
	
	ВариантОтражения.Вставить("ШаблонПредставления", "[" + СтрСоединить(СписокРеквизитов, "][") + "]");
	ВариантОтражения.Вставить("СвойстваРеквизитов", Новый ФиксированнаяСтруктура(СвойстваРеквизитов));
	ВариантОтражения.Вставить("ПроверятьЗаполнение", Истина);
	
	Возврат ВариантОтражения;
	
КонецФункции

// Свойства реквизита отражения
//
// Возвращаемое значение:
//  Структура - пустая структура:
//    * Используется - Булево - признак использования реквизита для варианта отражения,
//    * РеквизитОбязательный - Булево - признак обязательности заполнения,
//    * Основной - Булево - основной реквизит.
//
Функция СвойстваРеквизитаОтражения()
	
	СвойстваРеквизита = Новый Структура;
	СвойстваРеквизита.Вставить("Используется", Истина);
	СвойстваРеквизита.Вставить("РеквизитОбязательный", Истина);
	СвойстваРеквизита.Вставить("Основной", Ложь);
	
	Возврат СвойстваРеквизита;
	
КонецФункции

Функция ТипыАналитикиНачисленийДоступныеКЗаполнению()
	
	МассивТипов = Новый Массив;
	
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	МассивТипов.Добавить(Тип("СправочникСсылка.СтруктураПредприятия"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	
	Возврат Новый ФиксированныйМассив(МассивТипов);
	
КонецФункции

Функция ТипыАналитикиУдержанийДоступныеКЗаполнению()
	
	МассивТипов = Новый Массив;
	
	МассивТипов.Добавить(Тип("СправочникСсылка.СтруктураПредприятия"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	
	Возврат Новый ФиксированныйМассив(МассивТипов);
	
КонецФункции

Функция ПолучитьДанныеВыработки(Параметры)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",   Параметры.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  Параметры.КонецПериода);
	
	Запрос.УстановитьПараметр("Подразделение", Параметры.Подразделение);
	Запрос.УстановитьПараметр("ФильтрПоПодразделению", ЗначениеЗаполнено(Параметры.Подразделение));
	
	Запрос.УстановитьПараметр("ФизическиеЛицаПодробно", Параметры.ФизическиеЛицаПодробно);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Выработка.Дата КАК Дата,
	|	Выработка.Ссылка КАК Выработка,
	|	Выработка.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА &ФизическиеЛицаПодробно = ИСТИНА ТОГДА ТЧРаботники.Работник
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	КОНЕЦ КАК ФизическоеЛицо,
	|	СУММА(ТЧРаботники.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ВыработкаСотрудников КАК Выработка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыработкаСотрудников.Работники КАК ТЧРаботники
	|	ПО Выработка.ВидНаряда = ЗНАЧЕНИЕ(Перечисление.ВидыБригадныхНарядов.Бригадный)
	|		И Выработка.Ссылка = ТЧРаботники.Ссылка
	|		И Выработка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Выработка.Организация = &Организация
	|		И (НЕ &ФильтрПоПодразделению
	|			ИЛИ Выработка.Подразделение = &Подразделение)
	|		И Выработка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	Выработка.Ссылка,
	|	Выработка.Подразделение,
	|	ВЫБОР
	|		КОГДА &ФизическиеЛицаПодробно = ИСТИНА ТОГДА ТЧРаботники.Работник
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Выработка.Дата,
	|	Выработка.Ссылка,
	|	Выработка.Подразделение,
	|	ВЫБОР
	|		КОГДА &ФизическиеЛицаПодробно = ИСТИНА ТОГДА ТЧВидыРабот.Работник
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	КОНЕЦ,
	|	СУММА(ТЧВидыРабот.Сумма)
	|ИЗ
	|	Документ.ВыработкаСотрудников КАК Выработка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыработкаСотрудников.ВидыРабот КАК ТЧВидыРабот
	|	ПО Выработка.ВидНаряда <> ЗНАЧЕНИЕ(Перечисление.ВидыБригадныхНарядов.Бригадный)
	|		И ТЧВидыРабот.Работник <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|		И Выработка.Ссылка = ТЧВидыРабот.Ссылка
	|		И Выработка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Выработка.Организация = &Организация
	|		И (НЕ &ФильтрПоПодразделению
	|			ИЛИ Выработка.Подразделение = &Подразделение)
	|		И Выработка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	Выработка.Ссылка,
	|	Выработка.Подразделение,
	|	ВЫБОР
	|		КОГДА &ФизическиеЛицаПодробно = ИСТИНА ТОГДА ТЧВидыРабот.Работник
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	КОНЕЦ";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#Область ПроцедурыПроведения

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка          КАК Ссылка,
	|	Реквизиты.Дата            КАК Дата,
	|	Реквизиты.Номер           КАК Номер,
	|	Реквизиты.ПериодРасчетов  КАК ПериодРасчетов,
	|	Реквизиты.Организация     КАК Организация,
	|	Реквизиты.Валюта          КАК Валюта,
	|	Реквизиты.Исправление     КАК Исправление,
	|	Реквизиты.СторнируемыйДокумент КАК СторнируемыйДокумент,
	|	Реквизиты.ИсправляемыйДокумент КАК ИсправляемыйДокумент,
	|	Реквизиты.ДетализацияДоФизическихЛиц КАК ДетализацияДоФизическихЛиц
	|ИЗ
	|	Документ.ОтражениеЗарплатыВФинансовомУчете2_5 КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	ВалютаРегламентированногоУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Реквизиты.Организация);
	Коэффициенты = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Реквизиты.Валюта, Реквизиты.Валюта, КонецМесяца(Реквизиты.ПериодРасчетов), Реквизиты.Организация);
	
	ТипыАналитикиОплатыТруда = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПланыВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда, "ТипЗначения");
	
	Запрос.УстановитьПараметр("Ссылка",                                 Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Период",                                 КонецМесяца(Реквизиты.ПериодРасчетов));
	Запрос.УстановитьПараметр("Дата",                                   Реквизиты.Дата);
	Запрос.УстановитьПараметр("Номер",                                  Реквизиты.Номер);
	Запрос.УстановитьПараметр("ПериодРасчетов",                         Реквизиты.ПериодРасчетов);
	Запрос.УстановитьПараметр("Организация",                            Реквизиты.Организация);
	Запрос.УстановитьПараметр("ДатаНачала",                             НачалоМесяца(Реквизиты.ПериодРасчетов));
	Запрос.УстановитьПараметр("ДатаОкончания",                          КонецМесяца(Реквизиты.ПериодРасчетов));
	
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",             Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",         ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",        Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",         Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("Исправление",                            Реквизиты.Исправление);
	Запрос.УстановитьПараметр("СторнируемыйДокумент",                   Реквизиты.СторнируемыйДокумент);
	Запрос.УстановитьПараметр("ИсправляемыйДокумент",                   Реквизиты.ИсправляемыйДокумент);
	
	Запрос.УстановитьПараметр("ДетализацияДоФизическихЛиц",             Реквизиты.ДетализацияДоФизическихЛиц);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихАктивовПассивов",  ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов"));
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",          ОбщегоНазначения.ИдентификаторОбъектаМетаданных(
		ПустаяСсылка().Метаданные().ПолноеИмя()));
	Запрос.УстановитьПараметр("АналитикаОплатыТруда",                   ТипыАналитикиОплатыТруда.ПривестиЗначение());
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицыДокумента(ТекстыЗапроса)
	
	ИмяТаблицы = "ДокументыКОтражению";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДокументыКОтражению
	|ИЗ
	|	Документ.ОтражениеЗарплатыВФинансовомУчете2_5 КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
	// Табличные части документа
	
	ИмяТаблицы = "ВтНачисления";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	&Организация КАК Организация,
	|	Таблица.НомерСтроки,
	|	Таблица.Подразделение,
	|	Таблица.ФизическоеЛицо,
	|	Таблица.ВидРасчетов,
	|	Таблица.ВидНачисления,
	|	Таблица.ВариантОтражения,
	|	Таблица.ТипБазыРаспределения,
	|	Таблица.СтатьяКалькуляции,
	|	Таблица.СтатьяРасходов,
	|	Таблица.АналитикаРасходов,
	|	ВЫБОР Таблица.АналитикаРасходов
	|		КОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА Таблица.Подразделение
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Таблица.ФизическоеЛицо
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА &Организация
	|		ИНАЧЕ Таблица.АналитикаРасходов
	|	КОНЕЦ КАК АвтоАналитикаРасходов,
	|	Таблица.АналитикаАктивовПассивов,
	|	ВЫБОР Таблица.АналитикаАктивовПассивов
	|		КОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА Таблица.Подразделение
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Таблица.ФизическоеЛицо
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА &Организация
	|		ИНАЧЕ Таблица.АналитикаАктивовПассивов
	|	КОНЕЦ КАК АвтоАналитикаАктивовПассивов,
	|	Таблица.НастройкаСчетовУчета,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтражениеЗаработнойПлаты) КАК НастройкаХозяйственнойОперации,
	|	ВЫРАЗИТЬ(Таблица.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(Таблица.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаУпр,
	|	Таблица.Сумма
	|ПОМЕСТИТЬ ВтНачисления
	|ИЗ
	|	Документ.ОтражениеЗарплатыВФинансовомУчете2_5.Начисления КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОтражению КАК ДокументыКОтражению
	|		ПО Таблица.Ссылка = ДокументыКОтражению.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
	ИмяТаблицы = "ВтНалогиВзносыОрганизации";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	&Организация КАК Организация,
	|	Таблица.НомерСтроки,
	|	Таблица.Подразделение,
	|	Таблица.ФизическоеЛицо,
	|	Таблица.ВидНачисления,
	|	Таблица.ВидНалога,
	|	Таблица.ВариантОтражения,
	|	Таблица.ТипБазыРаспределения,
	|	Таблица.СтатьяКалькуляции,
	|	Таблица.СтатьяРасходов,
	|	Таблица.АналитикаРасходов,
	|	ВЫБОР Таблица.АналитикаРасходов
	|		КОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА Таблица.Подразделение
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Таблица.ФизическоеЛицо
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА &Организация
	|		ИНАЧЕ Таблица.АналитикаРасходов
	|	КОНЕЦ КАК АвтоАналитикаРасходов,
	|	Таблица.АналитикаАктивовПассивов,
	|	ВЫБОР Таблица.АналитикаАктивовПассивов
	|		КОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА Таблица.Подразделение
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Таблица.ФизическоеЛицо
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА &Организация
	|		ИНАЧЕ Таблица.АналитикаАктивовПассивов
	|	КОНЕЦ КАК АвтоАналитикаАктивовПассивов,
	|	Таблица.НастройкаСчетовУчета,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтражениеНалоговВзносовСЗаработнойПлаты) КАК НастройкаХозяйственнойОперации,
	|	ВЫРАЗИТЬ(Таблица.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(Таблица.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаУпр,
	|	Таблица.Сумма
	|ПОМЕСТИТЬ ВтНалогиВзносыОрганизации
	|ИЗ
	|	Документ.ОтражениеЗарплатыВФинансовомУчете2_5.НалогиВзносыОрганизации КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОтражению КАК ДокументыКОтражению
	|		ПО Таблица.Ссылка = ДокументыКОтражению.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
	ИмяТаблицы = "ВтНалогиВзносыСотрудников";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	&Организация КАК Организация,
	|	Таблица.НомерСтроки,
	|	Таблица.Подразделение,
	|	ВЫБОР
	|		КОГДА &ДетализацияДоФизическихЛиц ТОГДА Таблица.ФизическоеЛицо
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	КОНЕЦ КАК ФизическоеЛицо,
	|	Таблица.ВидНачисления,
	|	Таблица.ВидНалога,
	|	Таблица.ВидРасчетов,
	|	Таблица.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтражениеНДФЛ) КАК НастройкаХозяйственнойОперации,
	|	ВЫРАЗИТЬ(Таблица.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(Таблица.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаУпр,
	|	Таблица.Сумма
	|ПОМЕСТИТЬ ВтНалогиВзносыСотрудников
	|ИЗ
	|	Документ.ОтражениеЗарплатыВФинансовомУчете2_5.НалогиВзносыСотрудников КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОтражению КАК ДокументыКОтражению
	|		ПО Таблица.Ссылка = ДокументыКОтражению.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
	ИмяТаблицы = "ВтУдержания";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	&Организация КАК Организация,
	|	Таблица.НомерСтроки,
	|	Таблица.Подразделение,
	|	Таблица.ФизическоеЛицо,
	|	Таблица.ВидРасчетов,
	|	Таблица.ВидУдержания,
	|	Таблица.ВариантОтражения,
	|	Таблица.Контрагент,
	|	Таблица.ЦельВыдачи,
	|	Таблица.СтатьяДоходов,
	|	Таблица.АналитикаДоходов,
	|	ВЫБОР Таблица.АналитикаДоходов
	|		КОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА Таблица.Подразделение
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА &Организация
	|		ИНАЧЕ Таблица.АналитикаДоходов
	|	КОНЕЦ КАК АвтоАналитикаДоходов,
	|	Таблица.АналитикаАктивовПассивов,
	|	ВЫБОР Таблица.АналитикаАктивовПассивов
	|		КОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА Таблица.Подразделение
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА &Организация
	|		ИНАЧЕ Таблица.АналитикаАктивовПассивов
	|	КОНЕЦ КАК АвтоАналитикаАктивовПассивов,
	|	Таблица.НастройкаСчетовУчета,
	|	Таблица.ОбъектРасчетов,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ВЫБОР
	|		КОГДА Таблица.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ПогаситьРасчетыСПодотчетником)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.УдержаниеНеизрасходованныхПодотчетныхСумм)
	|		КОГДА Таблица.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ПогаситьВзаиморасчеты)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.УдержаниеИзЗарплатыВСчетРеализацииСотруднику)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.УдержаниеИзЗарплатыСотрудника)
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации,
	|	ВЫРАЗИТЬ(Таблица.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(Таблица.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаУпр,
	|	Таблица.Сумма
	|ПОМЕСТИТЬ ВтУдержания
	|ИЗ
	|	Документ.ОтражениеЗарплатыВФинансовомУчете2_5.Удержания КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОтражению КАК ДокументыКОтражению
	|		ПО Таблица.Ссылка = ДокументыКОтражению.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтПрочиеРасходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ВтНачисления.Подразделение КАК Подразделение,
	|	ВтНачисления.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтНачисления.СтатьяРасходов КАК СтатьяРасходов,
	|	ВтНачисления.АвтоАналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	СУММА(ВтНачисления.СуммаУпр) КАК СуммаСНДС,
	|	СУММА(ВтНачисления.СуммаУпр) КАК СуммаБезНДС,
	|	СУММА(ВтНачисления.СуммаУпр) КАК СуммаБезНДСУпр,
	|	СУММА(ВтНачисления.СуммаРегл) КАК СуммаСНДСРегл,
	|	СУММА(ВтНачисления.СуммаРегл) КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	
	|	ВтНачисления.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтНачисления.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	ВтНачисления КАК ВтНачисления
	|
	|ГДЕ
	|	ВтНачисления.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеРасходы)
	|	И ВтНачисления.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|	И ВтНачисления.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВтНачисления.Подразделение,
	|	ВтНачисления.НаправлениеДеятельности,
	|	ВтНачисления.СтатьяРасходов,
	|	ВтНачисления.АвтоАналитикаРасходов,
	|	ВтНачисления.ИдентификаторФинЗаписи,
	|	ВтНачисления.НастройкаХозяйственнойОперации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Организация,
	|	ВтНалогиВзносыОрганизации.Подразделение,
	|	ВтНалогиВзносыОрганизации.НаправлениеДеятельности,
	|	ВтНалогиВзносыОрганизации.СтатьяРасходов,
	|	ВтНалогиВзносыОрганизации.АвтоАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО,
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаУпр),
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаУпр),
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаУпр),
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаРегл),
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаРегл),
	|	0,
	|	0,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	
	|	ВтНалогиВзносыОрганизации.ИдентификаторФинЗаписи,
	|	ВтНалогиВзносыОрганизации.НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтНалогиВзносыОрганизации КАК ВтНалогиВзносыОрганизации
	|
	|ГДЕ
	|	ВтНалогиВзносыОрганизации.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеРасходы)
	|	И ВтНалогиВзносыОрганизации.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|	И ВтНалогиВзносыОрганизации.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНалогиВзносыОрганизации.Подразделение,
	|	ВтНалогиВзносыОрганизации.НаправлениеДеятельности,
	|	ВтНалогиВзносыОрганизации.СтатьяРасходов,
	|	ВтНалогиВзносыОрганизации.АвтоАналитикаРасходов,
	|	ВтНалогиВзносыОрганизации.ИдентификаторФинЗаписи,
	|	ВтНалогиВзносыОрганизации.НастройкаХозяйственнойОперации";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВтИсходныеПрочиеРасходы");
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса, Регистры)
	
	ИмяТаблицы = "ПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяТаблицы, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса);
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтПартииПрочихРасходов(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтПартииПрочихРасходов";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ВтНачисления.Подразделение КАК Подразделение,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ВтНачисления.СтатьяРасходов КАК СтатьяРасходов,
	|	ВтНачисления.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ВтНачисления.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	СУММА(ВтНачисления.СуммаУпр) КАК Стоимость,
	|	СУММА(ВтНачисления.СуммаУпр) КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	СУММА(ВтНачисления.СуммаРегл) КАК СтоимостьРегл,
	|	0 КАК ВременнаяРазница,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК НДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|	
	|	ВтНачисления.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтНачисления.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтИсходныеПартииПрочихРасходов
	|ИЗ
	|	ВтНачисления КАК ВтНачисления
	|ГДЕ
	|	ВтНачисления.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеРасходы)
	|	И ВтНачисления.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|	И ВтНачисления.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНачисления.Подразделение,
	|	ВтНачисления.НаправлениеДеятельности,
	|	ВтНачисления.СтатьяРасходов,
	|	ВтНачисления.АналитикаРасходов,
	|	ВтНачисления.ИдентификаторФинЗаписи,
	|	ВтНачисления.НастройкаХозяйственнойОперации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ВтНалогиВзносыОрганизации.Подразделение КАК Подразделение,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ВтНалогиВзносыОрганизации.СтатьяРасходов КАК СтатьяРасходов,
	|	ВтНалогиВзносыОрганизации.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ВтНалогиВзносыОрганизации.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаУпр) КАК Стоимость,
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаУпр) КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаРегл) КАК СтоимостьРегл,
	|	0 КАК ВременнаяРазница,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК НДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|	
	|	ВтНалогиВзносыОрганизации.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтНалогиВзносыОрганизации.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтНалогиВзносыОрганизации КАК ВтНалогиВзносыОрганизации
	|ГДЕ
	|	ВтНалогиВзносыОрганизации.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеРасходы)
	|	И ВтНалогиВзносыОрганизации.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|	И ВтНалогиВзносыОрганизации.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНалогиВзносыОрганизации.Подразделение,
	|	ВтНалогиВзносыОрганизации.НаправлениеДеятельности,
	|	ВтНалогиВзносыОрганизации.СтатьяРасходов,
	|	ВтНалогиВзносыОрганизации.АналитикаРасходов,
	|	ВтНалогиВзносыОрганизации.ИдентификаторФинЗаписи,
	|	ВтНалогиВзносыОрганизации.НастройкаХозяйственнойОперации";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВтИсходныеПартииПрочихРасходов");
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПартииПрочихРасходов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтПартииПрочихРасходов(ТекстыЗапроса);
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПрочиеАктивыПассивы(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	// Зарплата к выплате на пассивы
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	СУММА(ВтНачисления.СуммаУпр) КАК Сумма
	|ИЗ
	|	ВтНачисления КАК ВтНачисления
	|ИМЕЮЩИЕ
	|	СУММА(ВтНачисления.СуммаУпр) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Налоги, взносы с зарплаты к перечислению на пассивы
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги),
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаУпр) КАК Сумма
	|ИЗ
	|	ВтНалогиВзносыОрганизации КАК ВтНалогиВзносыОрганизации
	|ИМЕЮЩИЕ
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаУпр) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Зарплата, налоги и взносы на прочие активы/пассивы
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Организация,
	|	ВтНачисления.Подразделение,
	|	ВтНачисления.НаправлениеДеятельности,
	|	ВтНачисления.СтатьяРасходов,
	|	ВтНачисления.АвтоАналитикаАктивовПассивов,
	|	СУММА(ВтНачисления.СуммаУпр)
	|ИЗ
	|	ВтНачисления КАК ВтНачисления
	|ГДЕ
	|	ВтНачисления.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы)
	|	И ВтНачисления.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И ВтНачисления.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНачисления.Подразделение,
	|	ВтНачисления.НаправлениеДеятельности,
	|	ВтНачисления.СтатьяРасходов,
	|	ВтНачисления.АвтоАналитикаАктивовПассивов
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВтНачисления.СуммаУпр) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Организация,
	|	ВтНалогиВзносыОрганизации.Подразделение,
	|	ВтНалогиВзносыОрганизации.НаправлениеДеятельности,
	|	ВтНалогиВзносыОрганизации.СтатьяРасходов,
	|	ВтНалогиВзносыОрганизации.АвтоАналитикаАктивовПассивов,
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаУпр)
	|ИЗ
	|	ВтНалогиВзносыОрганизации КАК ВтНалогиВзносыОрганизации
	|ГДЕ
	|	ВтНалогиВзносыОрганизации.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы)
	|	И ВтНалогиВзносыОрганизации.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И ВтНалогиВзносыОрганизации.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНалогиВзносыОрганизации.Подразделение,
	|	ВтНалогиВзносыОрганизации.НаправлениеДеятельности,
	|	ВтНалогиВзносыОрганизации.СтатьяРасходов,
	|	ВтНалогиВзносыОрганизации.АвтоАналитикаАктивовПассивов
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаУпр) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Уменьшаем сумму по оплате труда на величину удержаний
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда),
	|	НЕОПРЕДЕЛЕНО,
	|	СУММА(ВтУдержания.СуммаУпр)
	|ИЗ
	|	ВтУдержания КАК ВтУдержания
	|ИМЕЮЩИЕ
	|	СУММА(ВтУдержания.СуммаУпр) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Уменьшаем сумму по оплате труда на величину налогов удерживаемых с сотрудников
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда),
	|	НЕОПРЕДЕЛЕНО,
	|	СУММА(ВтНалогиВзносыСотрудников.СуммаУпр)
	|ИЗ
	|	ВтНалогиВзносыСотрудников КАК ВтНалогиВзносыСотрудников
	|ИМЕЮЩИЕ
	|	СУММА(ВтНалогиВзносыСотрудников.СуммаУпр) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Удержания на прочие активы/пассивы
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация,
	|	ВтУдержания.Подразделение КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ВтУдержания.СтатьяДоходов,
	|	ВтУдержания.АвтоАналитикаАктивовПассивов,
	|	СУММА(ВтУдержания.СуммаУпр)
	|ИЗ
	|	ВтУдержания КАК ВтУдержания
	|ГДЕ
	|	ВтУдержания.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы)
	|	И ВтУдержания.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И ВтУдержания.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтУдержания.Подразделение,
	|	ВтУдержания.СтатьяДоходов,
	|	ВтУдержания.АвтоАналитикаАктивовПассивов
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВтУдержания.СуммаУпр) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// НДФЛ
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги),
	|	НЕОПРЕДЕЛЕНО,
	|	СУММА(ВтНалогиВзносыСотрудников.СуммаУпр)
	|ИЗ
	|	ВтНалогиВзносыСотрудников КАК ВтНалогиВзносыСотрудников
	|ИМЕЮЩИЕ
	|	СУММА(ВтНалогиВзносыСотрудников.СуммаУпр) <> 0";
	
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ"
		+ РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы();
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияПоПрочимАктивамПассивам";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	// Зарплата к выплате на пассивы
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ВтНачисления.Подразделение КАК Подразделение,
	|	ВтНачисления.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК Статья,
	|	ВЫБОР
	|		КОГДА &АналитикаОплатыТруда = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА ВтНачисления.Подразделение
	|		КОГДА &АналитикаОплатыТруда = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ВтНачисления.ФизическоеЛицо
	|		КОГДА &АналитикаОплатыТруда = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА &Организация
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиСчетовУчетаПрочихОпераций.ПустаяСсылка) КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	ВтНачисления.СуммаРегл КАК СуммаРегл,
	|	ВтНачисления.СуммаУпр КАК СуммаУпр,
	|	ВтНачисления.СуммаУпр КАК СуммаСНДС,
	|	ВтНачисления.СуммаУпр КАК СуммаБезНДС,
	|
	|	ВтНачисления.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтНачисления.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтНачисления КАК ВтНачисления
	|ГДЕ
	|	ВтНачисления.СуммаУпр <> 0 ИЛИ ВтНачисления.СуммаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Налоги, взносы с зарплаты к перечислению на пассивы
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ВтНалогиВзносыОрганизации.Подразделение КАК Подразделение,
	|	ВтНалогиВзносыОрганизации.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиСчетовУчетаПрочихОпераций.ПустаяСсылка) КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	ВтНалогиВзносыОрганизации.СуммаРегл КАК СуммаРегл,
	|	ВтНалогиВзносыОрганизации.СуммаУпр КАК СуммаУпр,
	|	ВтНалогиВзносыОрганизации.СуммаУпр КАК СуммаСНДС,
	|	ВтНалогиВзносыОрганизации.СуммаУпр КАК СуммаБезНДС,
	|
	|	ВтНалогиВзносыОрганизации.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтНалогиВзносыОрганизации.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтНалогиВзносыОрганизации КАК ВтНалогиВзносыОрганизации
	|ГДЕ
	|	ВтНалогиВзносыОрганизации.СуммаУпр <> 0 ИЛИ ВтНалогиВзносыОрганизации.СуммаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Зарплата, налоги и взносы на прочие активы/пассивы
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ВтНачисления.Подразделение КАК Подразделение,
	|	ВтНачисления.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтНачисления.СтатьяРасходов КАК Статья,
	|	ВтНачисления.АвтоАналитикаАктивовПассивов КАК Аналитика,
	|	ВтНачисления.НастройкаСчетовУчета КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ВтНачисления.СуммаРегл КАК СуммаРегл,
	|	ВтНачисления.СуммаУпр КАК СуммаУпр,
	|	ВтНачисления.СуммаУпр КАК СуммаСНДС,
	|	ВтНачисления.СуммаУпр КАК СуммаБезНДС,
	|
	|	ВтНачисления.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтНачисления.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтНачисления КАК ВтНачисления
	|ГДЕ
	|	ВтНачисления.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы)
	|	И ВтНачисления.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И ВтНачисления.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И (ВтНачисления.СуммаУпр <> 0 ИЛИ ВтНачисления.СуммаРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ВтНалогиВзносыОрганизации.Подразделение КАК Подразделение,
	|	ВтНалогиВзносыОрганизации.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтНалогиВзносыОрганизации.СтатьяРасходов КАК Статья,
	|	ВтНалогиВзносыОрганизации.АвтоАналитикаАктивовПассивов КАК Аналитика,
	|	ВтНалогиВзносыОрганизации.НастройкаСчетовУчета КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ВтНалогиВзносыОрганизации.СуммаРегл КАК СуммаРегл,
	|	ВтНалогиВзносыОрганизации.СуммаУпр КАК СуммаУпр,
	|	ВтНалогиВзносыОрганизации.СуммаУпр КАК СуммаСНДС,
	|	ВтНалогиВзносыОрганизации.СуммаУпр КАК СуммаБезНДС,
	|
	|	ВтНалогиВзносыОрганизации.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтНалогиВзносыОрганизации.НастройкаХозяйственнойОперации НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтНалогиВзносыОрганизации КАК ВтНалогиВзносыОрганизации
	|ГДЕ
	|	ВтНалогиВзносыОрганизации.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы)
	|	И ВтНалогиВзносыОрганизации.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И ВтНалогиВзносыОрганизации.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И (ВтНалогиВзносыОрганизации.СуммаУпр <> 0 ИЛИ ВтНалогиВзносыОрганизации.СуммаРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Уменьшаем сумму по оплате труда на величину удержаний
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ВтУдержания.Подразделение КАК Подразделение,
	|	ВтУдержания.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК Статья,
	|	ВЫБОР
	|		КОГДА &АналитикаОплатыТруда = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА ВтУдержания.Подразделение
	|		КОГДА &АналитикаОплатыТруда = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ВтУдержания.ФизическоеЛицо
	|		КОГДА &АналитикаОплатыТруда = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА &Организация
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиСчетовУчетаПрочихОпераций.ПустаяСсылка) КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ВтУдержания.СуммаРегл КАК СуммаРегл,
	|	ВтУдержания.СуммаУпр КАК СуммаУпр,
	|	ВтУдержания.СуммаУпр КАК СуммаСНДС,
	|	ВтУдержания.СуммаУпр КАК СуммаБезНДС,
	|
	|	ВтУдержания.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтУдержания.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтУдержания КАК ВтУдержания
	|ГДЕ
	|	ВтУдержания.СуммаУпр <> 0 ИЛИ ВтУдержания.СуммаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Уменьшаем сумму по оплате труда на величину налогов удерживаемых с сотрудников
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ВтНалогиВзносыСотрудников.Подразделение КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК Статья,
	|	ВЫБОР
	|		КОГДА &АналитикаОплатыТруда = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА ВтНалогиВзносыСотрудников.Подразделение
	|		КОГДА &АналитикаОплатыТруда = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ВтНалогиВзносыСотрудников.ФизическоеЛицо
	|		КОГДА &АналитикаОплатыТруда = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА &Организация
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиСчетовУчетаПрочихОпераций.ПустаяСсылка) КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ВтНалогиВзносыСотрудников.СуммаРегл КАК СуммаРегл,
	|	ВтНалогиВзносыСотрудников.СуммаУпр КАК СуммаУпр,
	|	ВтНалогиВзносыСотрудников.СуммаУпр КАК СуммаСНДС,
	|	ВтНалогиВзносыСотрудников.СуммаУпр КАК СуммаБезНДС,
	|
	|	ВтНалогиВзносыСотрудников.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтНалогиВзносыСотрудников.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтНалогиВзносыСотрудников КАК ВтНалогиВзносыСотрудников
	|ГДЕ
	|	ВтНалогиВзносыСотрудников.СуммаУпр <> 0 ИЛИ ВтНалогиВзносыСотрудников.СуммаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Удержания на прочие активы/пассивы
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ВтУдержания.Подразделение КАК Подразделение,
	|	ВтУдержания.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтУдержания.СтатьяДоходов КАК Статья,
	|	ВтУдержания.АвтоАналитикаАктивовПассивов КАК Аналитика,
	|	ВтУдержания.НастройкаСчетовУчета КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	ВтУдержания.СуммаРегл КАК СуммаРегл,
	|	ВтУдержания.СуммаУпр КАК СуммаУпр,
	|	ВтУдержания.СуммаУпр КАК СуммаСНДС,
	|	ВтУдержания.СуммаУпр КАК СуммаБезНДС,
	|
	|	ВтУдержания.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтУдержания.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтУдержания КАК ВтУдержания
	|ГДЕ
	|	ВтУдержания.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы)
	|	И ВтУдержания.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И ВтУдержания.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И (ВтУдержания.СуммаУпр <> 0 ИЛИ ВтУдержания.СуммаРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// НДФЛ
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ВтНалогиВзносыСотрудников.Подразделение КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиСчетовУчетаПрочихОпераций.ПустаяСсылка) КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	ВтНалогиВзносыСотрудников.СуммаРегл КАК СуммаРегл,
	|	ВтНалогиВзносыСотрудников.СуммаУпр КАК СуммаУпр,
	|	ВтНалогиВзносыСотрудников.СуммаУпр КАК СуммаСНДС,
	|	ВтНалогиВзносыСотрудников.СуммаУпр КАК СуммаБезНДС,
	|
	|	ВтНалогиВзносыСотрудников.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтНалогиВзносыСотрудников.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтНалогиВзносыСотрудников КАК ВтНалогиВзносыСотрудников
	|ГДЕ
	|	ВтНалогиВзносыСотрудников.СуммаУпр <> 0 ИЛИ ВтНалогиВзносыСотрудников.СуммаРегл <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	// Начисленная зарплата на расходы
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеЗаработнойПлаты) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,

	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК Статья,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаАктивовПассивов,
	|	ВтНачисления.Подразделение                        КАК КорПодразделение,
	|	ВтНачисления.НаправлениеДеятельности              КАК КорНаправлениеДеятельности,
	|	ВтНачисления.СтатьяРасходов                       КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаДоходов,
	|	ВтНачисления.АвтоАналитикаРасходов                КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаАктивовПассивов,

	|	СУММА(ВтНачисления.СуммаУпр) КАК Сумма,
	|	СУММА(ВтНачисления.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ВтНачисления.СуммаРегл) КАК СуммаРегл,
	|	НЕОПРЕДЕЛЕНО КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК СуммаВВалюте
	|	
	|ИЗ
	|	ВтНачисления КАК ВтНачисления
	|ГДЕ
	|	ВтНачисления.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеРасходы)
	|	И ВтНачисления.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|	И ВтНачисления.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНачисления.Подразделение,
	|	ВтНачисления.СтатьяРасходов,
	|	ВтНачисления.АвтоАналитикаРасходов,
	|	ВтНачисления.НаправлениеДеятельности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Налоги, взносы организации на расходы
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНалоговВзносовСЗаработнойПлаты),
	|	&Организация,

	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги),
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаАктивовПассивов,
	|	ВтНалогиВзносыОрганизации.Подразделение           КАК КорПодразделение,
	|	ВтНалогиВзносыОрганизации.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВтНалогиВзносыОрганизации.СтатьяРасходов          КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаДоходов,
	|	ВтНалогиВзносыОрганизации.АвтоАналитикаРасходов   КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаАктивовПассивов,

	|	СУММА(ВтНалогиВзносыОрганизации.СуммаУпр) КАК Сумма,
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаРегл) КАК СуммаРегл,
	|	НЕОПРЕДЕЛЕНО КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК СуммаВВалюте
	|	
	|ИЗ
	|	ВтНалогиВзносыОрганизации КАК ВтНалогиВзносыОрганизации
	|ГДЕ
	|	ВтНалогиВзносыОрганизации.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеРасходы)
	|	И ВтНалогиВзносыОрганизации.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|	И ВтНалогиВзносыОрганизации.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНалогиВзносыОрганизации.Подразделение,
	|	ВтНалогиВзносыОрганизации.СтатьяРасходов,
	|	ВтНалогиВзносыОрганизации.АвтоАналитикаРасходов,
	|	ВтНалогиВзносыОрганизации.НаправлениеДеятельности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Начисленная зарплата на прочие активы/пассивы
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеЗаработнойПлаты),
	|	&Организация КАК Организация,

	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда),
	|	НЕОПРЕДЕЛЕНО                                           КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                           КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                           КАК АналитикаАктивовПассивов,

	|	ВтНачисления.Подразделение                                КАК КорПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК КорНаправлениеДеятельности,
	|	ВтНачисления.СтатьяРасходов                               КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорАналитикаРасходов,
	|	ВтНачисления.АвтоАналитикаАктивовПассивов                 КАК КорАналитикаАктивовПассивов,

	|	СУММА(ВтНачисления.СуммаУпр) КАК Сумма,
	|	СУММА(ВтНачисления.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ВтНачисления.Сумма) КАК СуммаРегл,
	|	
	|	НЕОПРЕДЕЛЕНО КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтНачисления КАК ВтНачисления
	|ГДЕ
	|	ВтНачисления.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы)
	|	И ВтНачисления.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И ВтНачисления.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНачисления.Подразделение,
	|	ВтНачисления.НаправлениеДеятельности,
	|	ВтНачисления.СтатьяРасходов,
	|	ВтНачисления.АвтоАналитикаАктивовПассивов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Налоги, взносы организации на прочие активы/пассивы
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНалоговВзносовСЗаработнойПлаты),
	|	&Организация КАК Организация,

	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги),
	|	НЕОПРЕДЕЛЕНО                                           КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                           КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                           КАК АналитикаАктивовПассивов,

	|	ВтНалогиВзносыОрганизации.Подразделение                   КАК КорПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК КорНаправлениеДеятельности,
	|	ВтНалогиВзносыОрганизации.СтатьяРасходов                  КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорАналитикаРасходов,
	|	ВтНалогиВзносыОрганизации.АвтоАналитикаАктивовПассивов    КАК КорАналитикаАктивовПассивов,

	|	СУММА(ВтНалогиВзносыОрганизации.СуммаУпр) КАК Сумма,
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ВтНалогиВзносыОрганизации.СуммаРегл) КАК СуммаРегл,
	|	
	|	НЕОПРЕДЕЛЕНО КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтНалогиВзносыОрганизации КАК ВтНалогиВзносыОрганизации
	|ГДЕ
	|	ВтНалогиВзносыОрганизации.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы)
	|	И ВтНалогиВзносыОрганизации.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И ВтНалогиВзносыОрганизации.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНалогиВзносыОрганизации.Подразделение,
	|	ВтНалогиВзносыОрганизации.НаправлениеДеятельности,
	|	ВтНалогиВзносыОрганизации.СтатьяРасходов,
	|	ВтНалогиВзносыОрганизации.АвтоАналитикаАктивовПассивов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Удержания на прочие активы/пассивы
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УдержаниеИзЗарплатыСотрудника),
	|	&Организация,
	
	|	ВтУдержания.Подразделение,
	|	ВтУдержания.НаправлениеДеятельности,
	|	ВтУдержания.СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ВтУдержания.АналитикаАктивовПассивов,
	
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)    КАК КорПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорАналитикаАктивовПассивов,
	
	|	СУММА(ВтУдержания.СуммаУпр) КАК Сумма,
	|	СУММА(ВтУдержания.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ВтУдержания.СуммаРегл) КАК СуммаРегл,
	|	
	|	НЕОПРЕДЕЛЕНО КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтУдержания КАК ВтУдержания
	|ГДЕ
	|	ВтУдержания.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы)
	|	И ВтУдержания.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И ВтУдержания.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтУдержания.Подразделение,
	|	ВтУдержания.НаправлениеДеятельности,
	|	ВтУдержания.СтатьяДоходов,
	|	ВтУдержания.АналитикаАктивовПассивов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Удержания из зарплаты на прочие доходы
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УдержаниеИзЗарплатыСотрудника),
	|	&Организация,
	
	|	ВтУдержания.Подразделение,
	|	ВтУдержания.НаправлениеДеятельности,
	|	ВтУдержания.СтатьяДоходов,
	|	ВтУдержания.АвтоАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                  КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                  КАК АналитикаАктивовПассивов,

	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)    КАК КорПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                                  КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                  КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                  КАК КорАналитикаАктивовПассивов,
	
	|	СУММА(ВтУдержания.СуммаУпр) КАК Сумма,
	|	СУММА(ВтУдержания.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ВтУдержания.СуммаРегл) КАК СуммаРегл,
	|	
	|	НЕОПРЕДЕЛЕНО КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтУдержания КАК ВтУдержания
	|ГДЕ
	|	ВтУдержания.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеДоходы)
	|	И ВтУдержания.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиДоходов
	|	И ВтУдержания.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтУдержания.Подразделение,
	|	ВтУдержания.НаправлениеДеятельности,
	|	ВтУдержания.СтатьяДоходов,
	|	ВтУдержания.АвтоАналитикаДоходов
	|
	// Налоги удерживаемые с сотрудников корреспондируют со статьей активов\пассивов оплата труда
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНалоговВзносовСЗаработнойПлаты),
	|	&Организация,

	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги),
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаАктивовПассивов,

	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда),
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаАктивовПассивов,

	|	СУММА(ВтНалогиВзносыСотрудников.СуммаУпр) КАК Сумма,
	|	СУММА(ВтНалогиВзносыСотрудников.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ВтНалогиВзносыСотрудников.СуммаРегл) КАК СуммаРегл,
	|	
	|	НЕОПРЕДЕЛЕНО КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтНалогиВзносыСотрудников КАК ВтНалогиВзносыСотрудников
	|ИМЕЮЩИЕ
	|	СУММА(ВтНалогиВзносыСотрудников.СуммаРегл) <> 0
	|	И СУММА(ВтНалогиВзносыСотрудников.СуммаУпр) <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваДоходыРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	Значение(Перечисление.ХозяйственныеОперации.УдержаниеНеизрасходованныхПодотчетныхСумм) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	ВтУдержания.Подразделение КАК Подразделение,
	|
	|	ВтУдержания.ФизическоеЛицо КАК ДенежныеСредства,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица) КАК ТипДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяДвиженияДенежныхСредств,
	|	&ВалютаРегламентированногоУчета КАК Валюта,
	|
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|
	|	ВтУдержания.СуммаУпр  КАК Сумма,
	|	ВтУдержания.СуммаРегл КАК СуммаРегл,
	|	ВтУдержания.Сумма     КАК СуммаВВалюте,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДоходовРасходов
	|ИЗ
	|	ВтУдержания КАК ВтУдержания
	|	
	|ГДЕ
	|	ВтУдержания.ВариантОтражения =
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ПогаситьРасчетыСПодотчетником)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентДоходыРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УдержаниеИзЗарплатыВСчетРеализацииСотруднику) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	ВтУдержания.Подразделение КАК Подразделение,
	|	ВтУдержания.ОбъектРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	
	|	ВтУдержания.ОбъектРасчетов.Партнер КАК Партнер,
	|	ВтУдержания.ОбъектРасчетов.Контрагент КАК Контрагент,
	|	ВтУдержания.ОбъектРасчетов.Договор КАК Договор,
	|	ВтУдержания.ОбъектРасчетов КАК ОбъектРасчетов,
	|	
	|	ВтУдержания.НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	
	|	ВтУдержания.СуммаУпр КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	ВтУдержания.СуммаРегл КАК СуммаРегл,
	|	0 КАК СуммаРеглБезНДС,

	|	ВтУдержания.Ссылка.Валюта КАК Валюта,
	|	ВтУдержания.Сумма КАК СуммаВВалюте,
	|	0 КАК СуммаБезНДСВВалюте,

	|	ВтУдержания.Ссылка.Валюта КАК ВалютаВзаиморасчетов,
	|	ВтУдержания.Сумма КАК СуммаВВалютеВзаиморасчетов,
	|	0 КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	
	|	ВтУдержания.ОбъектРасчетов КАК ИсточникГФУРасчетов,
	|	ВтУдержания.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи
	|ИЗ
	|	ВтУдержания КАК ВтУдержания
	|ГДЕ
	|	ВтУдержания.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ПогаситьВзаиморасчеты)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПрочиеДоходы(ТекстыЗапроса, Регистры)
	
	ИмяТаблицы = "ПрочиеДоходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяТаблицы, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ВтУдержания.Подразделение КАК Подразделение,
	|	ВтУдержания.СтатьяДоходов КАК СтатьяДоходов,
	|	ВтУдержания.АвтоАналитикаДоходов КАК АналитикаДоходов,
	|	СУММА(ВтУдержания.Сумма * &КоэффициентПересчетаВВалютуУпр) КАК Сумма,
	|	СУММА(ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ВтУдержания.СуммаУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпр,
	|	СУММА(ВЫБОР
	|		КОГДА &ИспользоватьУчетПрочихДоходовРасходовРегл
	|			ТОГДА ВтУдержания.СуммаРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаРегл,
	|	Неопределено КАК ХозяйственнаяОперация,
	|	
	|	ВтУдержания.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтУдержания.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтУдержания КАК ВтУдержания
	|
	|ГДЕ
	|	ВтУдержания.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеДоходы)
	|	И ВтУдержания.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиДоходов
	|	И ВтУдержания.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтУдержания.СтатьяДоходов,
	|	ВтУдержания.АвтоАналитикаДоходов,
	|	ВтУдержания.Подразделение,
	|	ВтУдержания.ИдентификаторФинЗаписи,
	|	ВтУдержания.НастройкаХозяйственнойОперации";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(ТекстыЗапроса, Регистры)
	
	ИмяТаблицы = "ДенежныеСредстваУПодотчетныхЛиц";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяТаблицы, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ВтУдержания.ФизическоеЛицо КАК ПодотчетноеЛицо,
	|	ВтУдержания.Подразделение КАК Подразделение,
	|	&ВалютаРегламентированногоУчета КАК Валюта,
	|
	|	ВтУдержания.ЦельВыдачи КАК ЦельВыдачи,
	|	
	|	ВтУдержания.СуммаРегл КАК Сумма,
	|	ВтУдержания.СуммаРегл КАК СуммаРегл,
	|	ВтУдержания.СуммаУпр КАК СуммаУпр,
	|	ВтУдержания.СуммаРегл КАК КОтчету,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УдержаниеНеизрасходованныхПодотчетныхСумм) КАК ХозяйственнаяОперация,
	|	
	|	ВтУдержания.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтУдержания.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ВтУдержания КАК ВтУдержания
	|	
	|ГДЕ
	|	ВтУдержания.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ПогаситьРасчетыСПодотчетником)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаВтТаблицаВыработкаСотрудников(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтТаблицаВыработкаСотрудников";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Организация,
	|	Таблица.Подразделение,
	
	|	Таблица.ПартияПроизводства,
	|	Таблица.ЗаказНаПроизводство,
	|	Таблица.КодСтрокиПродукция,
	|	Таблица.ВидРабот,
	|	Таблица.ГруппаПродукции,
	|	Таблица.Этап,
	
	|	Таблица.СтатьяКалькуляции,
	|	Таблица.Сотрудник,
	
	|	Таблица.СтоимостьРегл,
	|	Таблица.Стоимость,

	|	Таблица.ИдентификаторФинЗаписи,
	|	Таблица.НастройкаХозяйственнойОперации
	
	|ПОМЕСТИТЬ ВтТаблицаВыработкаСотрудников
	|ИЗ
	|	&ТаблицаВыработкаСотрудников КАК Таблица";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаТрудозатратыНезавершенногоПроизводства(ТекстыЗапроса, Регистры)
	
	ИмяТаблицы = "ТрудозатратыНезавершенногоПроизводства";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяТаблицы, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаВтТаблицаВыработкаСотрудников(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                   КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Организация                              КАК Организация,
	|	ВыработкаСотрудников.Подразделение        КАК Подразделение,
	|	ВыработкаСотрудников.ПартияПроизводства   КАК ПартияПроизводства,
	|	ВыработкаСотрудников.ЗаказНаПроизводство  КАК ЗаказНаПроизводство,
	|	ВыработкаСотрудников.КодСтрокиПродукция   КАК КодСтрокиПродукция,
	|	ВыработкаСотрудников.Этап                 КАК Этап,
	|	ВыработкаСотрудников.СтатьяКалькуляции    КАК СтатьяКалькуляции,
	|	ВыработкаСотрудников.ВидРабот             КАК ВидРабот,
	|	ВыработкаСотрудников.ГруппаПродукции      КАК ГруппаПродукции,
	|	СУММА(ВыработкаСотрудников.Стоимость)     КАК Стоимость,
	|	СУММА(ВыработкаСотрудников.СтоимостьРегл) КАК СтоимостьРегл,
	|	
	|	ВыработкаСотрудников.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВыработкаСотрудников.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаВыработкаСотрудников КАК ВыработкаСотрудников
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыработкаСотрудников.Подразделение,
	|	ВыработкаСотрудников.ПартияПроизводства,
	|	ВыработкаСотрудников.ЗаказНаПроизводство,
	|	ВыработкаСотрудников.КодСтрокиПродукция,
	|	ВыработкаСотрудников.Этап,
	|	ВыработкаСотрудников.СтатьяКалькуляции,
	|	ВыработкаСотрудников.ВидРабот,
	|	ВыработкаСотрудников.ГруппаПродукции,
	|	ВыработкаСотрудников.ИдентификаторФинЗаписи,
	|	ВыработкаСотрудников.НастройкаХозяйственнойОперации";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Истина);
	
КонецПроцедуры

#Область РаспределениеЗатратНаПроизводство

Функция РаспределитьНачисленияПоЭтапамПроизводства(ПараметрыЗапроса)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ПараметрыЗапроса.Ссылка);
	Запрос.УстановитьПараметр("Организация", ПараметрыЗапроса.Организация);
	Запрос.УстановитьПараметр("ДатаНачала",    ПараметрыЗапроса.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ПараметрыЗапроса.ДатаОкончания);
	Запрос.УстановитьПараметр("ДетализацияДоФизическихЛиц", ПараметрыЗапроса.ДетализацияДоФизическихЛиц);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", ПараметрыЗапроса.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",  ПараметрыЗапроса.КоэффициентПересчетаВВалютуУпр);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицыДокумента(ТекстыЗапроса);
	
	ТекстЗапросаРасходыРаспределяемыеНаПроизводство(ТекстыЗапроса);
	ИндексТаблицыРасходов = ТекстыЗапроса.Количество() - 1;
	
	ТекстЗапросаТаблицаВыработкиСотрудников(ТекстыЗапроса);
	ИндексТаблицыВыработки = ТекстыЗапроса.Количество() - 1;
	
	Запрос.Текст = СтрСоединить(ТекстыЗапроса.ВыгрузитьЗначения(), ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Результат = Запрос.ВыполнитьПакет();
	РаспределяемыеРасходы = Результат[ИндексТаблицыРасходов].Выгрузить();
	ТаблицаВыработки = Результат[ИндексТаблицыВыработки].Выгрузить();
	
	ТаблицаРаспределения = НоваяТаблицаВыработкаСотрудников();
	
	СтруктураОтбора = Новый Структура("Организация, Подразделение, ФизическоеЛицо");
	
	Для Каждого РаспределяемаяСтрока Из РаспределяемыеРасходы Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, РаспределяемаяСтрока);
		БазаРаспределения = ТаблицаВыработки.НайтиСтроки(СтруктураОтбора);
		
		Если РаспределяемаяСтрока.ТипБазыРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.НормативыОплатыТруда Тогда
			КоэффициентыРаспределения = ПолучитьКоэффициентыРаспределения_НормативыОплатыТруда(БазаРаспределения);
		ИначеЕсли РаспределяемаяСтрока.ТипБазыРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ДлительностьВыполненияРабот Тогда
			КоэффициентыРаспределения = ПолучитьКоэффициентыРаспределения_ДлительностьВыполненияРабот(БазаРаспределения);
		Иначе
			КоэффициентыРаспределения = Новый Массив();
		КонецЕсли;
		
		МассивРаспределенияРегл = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			РаспределяемаяСтрока.СуммаРегл, КоэффициентыРаспределения);
		
		Если РаспределяемаяСтрока.СуммаРегл = РаспределяемаяСтрока.СуммаУпр Тогда
			МассивРаспределенияУпр = МассивРаспределенияРегл;
		Иначе
			МассивРаспределенияУпр = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
				РаспределяемаяСтрока.СуммаУпр, КоэффициентыРаспределения);
		КонецЕсли;
		
		Если МассивРаспределенияРегл = Неопределено ИЛИ МассивРаспределенияУпр = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для Индекс = 0 По БазаРаспределения.ВГраница() Цикл
			
			СтрокаБазыРаспределения = БазаРаспределения[Индекс];
			
			НоваяСтрока = ТаблицаРаспределения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаБазыРаспределения);
			
			Если СтрокаБазыРаспределения.ДоступноПереопределениеСтатьиКалькуляции
				И ЗначениеЗаполнено(РаспределяемаяСтрока.СтатьяКалькуляции) Тогда
				НоваяСтрока.СтатьяКалькуляции = РаспределяемаяСтрока.СтатьяКалькуляции;
			Иначе
				НоваяСтрока.СтатьяКалькуляции = СтрокаБазыРаспределения.СтатьяКалькуляцииВыработки;
			КонецЕсли;
			
			НоваяСтрока.Стоимость     = МассивРаспределенияУпр[Индекс];
			НоваяСтрока.СтоимостьРегл = МассивРаспределенияРегл[Индекс];
			НоваяСтрока.ИдентификаторФинЗаписи = РаспределяемаяСтрока.ИдентификаторФинЗаписи;
			НоваяСтрока.НастройкаХозяйственнойОперации = РаспределяемаяСтрока.НастройкаХозяйственнойОперации;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаРаспределения;
	
КонецФункции

Процедура ТекстЗапросаРасходыРаспределяемыеНаПроизводство(ТекстыЗапроса)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтНачисления.Ссылка,
	|	ВтНачисления.Организация,
	|	ВтНачисления.НомерСтроки,
	|	ВтНачисления.Подразделение,
	|	ВтНачисления.ФизическоеЛицо,
	|	ВтНачисления.ВидНачисления,
	|	ВтНачисления.ТипБазыРаспределения,
	|	ВтНачисления.СтатьяКалькуляции,
	|	ВтНачисления.НаправлениеДеятельности,
	|	ВтНачисления.ИдентификаторФинЗаписи,
	|	ВтНачисления.НастройкаХозяйственнойОперации,
	|	ВтНачисления.СуммаРегл,
	|	ВтНачисления.СуммаУпр
	|ИЗ
	|	ВтНачисления КАК ВтНачисления
	|ГДЕ
	|	ВтНачисления.ВариантОтражения =
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.РаспределитьНаПроизводство)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтНалогиВзносыОрганизации.Ссылка,
	|	ВтНалогиВзносыОрганизации.Организация,
	|	ВтНалогиВзносыОрганизации.НомерСтроки,
	|	ВтНалогиВзносыОрганизации.Подразделение,
	|	ВтНалогиВзносыОрганизации.ФизическоеЛицо,
	|	ВтНалогиВзносыОрганизации.ВидНалога,
	|	ВтНалогиВзносыОрганизации.ТипБазыРаспределения,
	|	ВтНалогиВзносыОрганизации.СтатьяКалькуляции,
	|	ВтНалогиВзносыОрганизации.НаправлениеДеятельности,
	|	ВтНалогиВзносыОрганизации.ИдентификаторФинЗаписи,
	|	ВтНалогиВзносыОрганизации.НастройкаХозяйственнойОперации,
	|	ВтНалогиВзносыОрганизации.СуммаРегл,
	|	ВтНалогиВзносыОрганизации.СуммаУпр
	|ИЗ
	|	ВтНалогиВзносыОрганизации КАК ВтНалогиВзносыОрганизации
	|ГДЕ
	|	ВтНалогиВзносыОрганизации.ВариантОтражения =
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.РаспределитьНаПроизводство)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВыработкиСотрудников(ТекстыЗапроса)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТрудозатратыНЗП.Организация,
	|	ТрудозатратыНЗП.Подразделение,
	|	ВЫБОР
	|		КОГДА &ДетализацияДоФизическихЛиц ТОГДА ТрудозатратыНЗП.Сотрудник
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	КОНЕЦ КАК ФизическоеЛицо,
	|	ТрудозатратыНЗП.ПартияПроизводства,
	|	ТрудозатратыНЗП.ЗаказНаПроизводство,
	|	ВЫБОР
	//++ Локализация

	//++ НЕ УТКА
	|		КОГДА НЕ ПродукцияЗаказа.Ссылка ЕСТЬ NULL ТОГДА
	|			ПродукцияЗаказа.Назначение.НаправлениеДеятельности
	//-- НЕ УТКА

	//-- Локализация
	|		КОГДА ИСТИНА ТОГДА
	|			ЕСТЬNULL(СпрПартииПроизводства.НаправлениеДеятельности,
	|				ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ТрудозатратыНЗП.КодСтрокиПродукция,
	|	ТрудозатратыНЗП.Этап,
	|	ТрудозатратыНЗП.ВидРабот,
	|	ТрудозатратыНЗП.ГруппаПродукции,
	|	ТрудозатратыНЗП.СтатьяКалькуляции КАК СтатьяКалькуляцииВыработки,
	|	СУММА(ТрудозатратыНЗП.НормативнаяСтоимость) КАК НормативнаяСтоимость,
	|	""ТрудозатратыНезавершенногоПроизводства"" КАК ИдентификаторНабора,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаПродукции,
	|	ТрудозатратыНЗП.Количество,
	|	ВЫБОР
	|		КОГДА НЕ ТрудозатратыНЗП.ПартияПроизводства = ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	//++ Локализация

	//++ НЕ УТКА
	|		КОГДА НЕ ПродукцияЗаказа.Ссылка ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	//-- НЕ УТКА

	//-- Локализация
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоступноПереопределениеСтатьиКалькуляции
	|ПОМЕСТИТЬ ВтТрудозатраты
	|ИЗ
	|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК ТрудозатратыНЗП
	//++ Локализация

	//++ НЕ УТКА
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК ПродукцияЗаказа
	|	ПО ТрудозатратыНЗП.ЗаказНаПроизводство = ПродукцияЗаказа.Ссылка
	|		И ТрудозатратыНЗП.КодСтрокиПродукция = ПродукцияЗаказа.КодСтроки
	//-- НЕ УТКА

	//-- Локализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|	ПО СпрПартииПроизводства.Ссылка = ТрудозатратыНЗП.ПартияПроизводства
	|
	|ГДЕ
	|	ТрудозатратыНЗП.Организация = &Организация
	|	И ТрудозатратыНЗП.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ТрудозатратыНЗП.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ТрудозатратыНЗП.Регистратор ССЫЛКА Документ.ВыработкаСотрудников
	|	И ТрудозатратыНЗП.НормативнаяСтоимость > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТрудозатратыНЗП.Организация,
	|	ТрудозатратыНЗП.Подразделение,
	|	ВЫБОР
	|		КОГДА &ДетализацияДоФизическихЛиц ТОГДА ТрудозатратыНЗП.Сотрудник
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТрудозатратыНЗП.ПартияПроизводства,
	|	ТрудозатратыНЗП.ЗаказНаПроизводство,
	|	ТрудозатратыНЗП.Этап,
	|	ТрудозатратыНЗП.СтатьяКалькуляции,
	|	ТрудозатратыНЗП.ВидРабот,
	|	ТрудозатратыНЗП.ГруппаПродукции,
	|	ТрудозатратыНЗП.КодСтрокиПродукция,
	|	ВЫБОР
	//++ Локализация

	//++ НЕ УТКА
	|		КОГДА НЕ ПродукцияЗаказа.Ссылка ЕСТЬ NULL ТОГДА
	|			ПродукцияЗаказа.Назначение.НаправлениеДеятельности
	//-- НЕ УТКА

	//-- Локализация
	|		КОГДА ИСТИНА ТОГДА
	|			ЕСТЬNULL(СпрПартииПроизводства.НаправлениеДеятельности,
	|				ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	КОНЕЦ,
	|	ТрудозатратыНЗП.Количество,
	|	ВЫБОР
	|		КОГДА НЕ ТрудозатратыНЗП.ПартияПроизводства = ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	//++ Локализация

	//++ НЕ УТКА
	|		КОГДА НЕ ПродукцияЗаказа.Ссылка ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	//-- НЕ УТКА

	//-- Локализация
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВтТрудозатраты");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтТрудозатраты.Организация,
	|	ВтТрудозатраты.Подразделение,
	|	ВтТрудозатраты.ФизическоеЛицо,
	|	ВтТрудозатраты.ПартияПроизводства,
	|	ВтТрудозатраты.ЗаказНаПроизводство,
	|	ВтТрудозатраты.НаправлениеДеятельности,
	|	ВтТрудозатраты.КодСтрокиПродукция,
	|	ВтТрудозатраты.Этап,
	|	ВтТрудозатраты.ВидРабот,
	|	ВтТрудозатраты.ГруппаПродукции,
	|	ВтТрудозатраты.АналитикаУчетаПродукции,
	|	ВтТрудозатраты.ИдентификаторНабора,
	|	ВтТрудозатраты.СтатьяКалькуляцииВыработки,
	|	ВтТрудозатраты.ДоступноПереопределениеСтатьиКалькуляции,
	|	ВтТрудозатраты.НормативнаяСтоимость,
	|	ВтТрудозатраты.Количество,
	|	ЕСТЬNULL(ВидыРабот.КратностьТрудоемкости, 0) КАК КратностьТрудоемкости,
	|	ЕСТЬNULL(ВидыРабот.Трудоемкость, 0) КАК Трудоемкость
	|ИЗ
	|	ВтТрудозатраты КАК ВтТрудозатраты
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыРаботСотрудников КАК ВидыРабот
	|		ПО ВТТрудозатраты.ВидРабот = ВидыРабот.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Функция НоваяТаблицаВыработкаСотрудников()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 0
	|	ТрудозатратыНЗП.Период,
	|	ТрудозатратыНЗП.Регистратор,
	|	ТрудозатратыНЗП.НомерСтроки,
	|	ТрудозатратыНЗП.Активность,
	|	ТрудозатратыНЗП.Организация,
	|	ТрудозатратыНЗП.Подразделение,
	|	ТрудозатратыНЗП.ВидРабот,
	|	ТрудозатратыНЗП.Этап,
	|	ТрудозатратыНЗП.Сотрудник,
	|	ТрудозатратыНЗП.ГруппаПродукции,
	|	ТрудозатратыНЗП.ЗаказНаПроизводство,
	|	ТрудозатратыНЗП.КодСтрокиПродукция,
	|	ТрудозатратыНЗП.СтатьяКалькуляции,
	|	ТрудозатратыНЗП.ПартияПроизводства,
	|	ТрудозатратыНЗП.СтоимостьРегл,
	|	ТрудозатратыНЗП.Стоимость,
	|	ТрудозатратыНЗП.ИдентификаторФинЗаписи,
	|	ТрудозатратыНЗП.НастройкаХозяйственнойОперации
	|ИЗ
	|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК ТрудозатратыНЗП";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьКоэффициентыРаспределения_НормативыОплатыТруда(БазаРаспределения)
	
	МассивКоэффициентов = Новый Массив(БазаРаспределения.Количество());
	
	Для Индекс = 0 По БазаРаспределения.ВГраница() Цикл
		МассивКоэффициентов[Индекс] = БазаРаспределения[Индекс].НормативнаяСтоимость;
	КонецЦикла;
	
	Возврат МассивКоэффициентов;
	
КонецФункции

Функция ПолучитьКоэффициентыРаспределения_ДлительностьВыполненияРабот(БазаРаспределения)
	
	МассивКоэффициентов = Новый Массив(БазаРаспределения.Количество());
	
	Для Индекс = 0 По БазаРаспределения.ВГраница() Цикл
		КратностьТрудоемкости = БазаРаспределения[Индекс].КратностьТрудоемкости;
		Трудоемкость = БазаРаспределения[Индекс].Трудоемкость;
		Количество = БазаРаспределения[Индекс].Количество;
		Если КратностьТрудоемкости > 0 Тогда
			Коэффициент = Количество * Трудоемкость / КратностьТрудоемкости;
		Иначе
			Коэффициент = 0;
		КонецЕсли;
		МассивКоэффициентов[Индекс] = Коэффициент;
	КонецЦикла;
	
	Возврат МассивКоэффициентов;
	
КонецФункции

#КонецОбласти

Процедура ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Регистры)
	
	ИмяТаблицы = "ОтражениеДокументовВМеждународномУчете";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяТаблицы, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Истина);
	
КонецПроцедуры

Процедура ДобавитьТекстыОтраженияВзаиморасчетов(Запрос, ТекстыЗапроса, Регистры)
	
	#Область КурсыВалютДокумента
	
	ИмяРегистра = "ВременнаяТаблицаКурсыВалютДокумента";
	
	ТекстЗапросаКурсыВалютДокумента = 
		"ВЫБРАТЬ
		|	Удержания.Ссылка КАК Ссылка,
		|	Удержания.Организация КАК Организация,
		|	Удержания.Ссылка.Дата КАК ДатаКурса,
		|	Удержания.ОбъектРасчетов КАК ОбъектРасчетов,
		|	Удержания.Ссылка.Валюта КАК ВалютаДокумента,
		|	Удержания.Ссылка.Валюта КАК ВалютаВзаиморасчетов
		|ИЗ
		|	ВтУдержания КАК Удержания";
		
	ТекстЗапросаКурсыВалютДокумента = ВзаиморасчетыСервер.ПолучитьТаблицуКурсовВалютНаправленийДеятельности(ТекстЗапросаКурсыВалютДокумента);

	ТекстыЗапроса.Добавить(ТекстЗапросаКурсыВалютДокумента, ИмяРегистра);
	
	#КонецОбласти
	
	ВзаиморасчетыСервер.ПроведениеОплатыОтКлиента(
		Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТаблицаОплатаОтКлиента());

КонецПроцедуры

Функция ТекстЗапросаТаблицаОплатаОтКлиента()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Удержания.Ссылка                                 КАК Ссылка,
	|	Удержания.Организация                            КАК Организация,
	|	Удержания.ОбъектРасчетов.Партнер                 КАК Партнер,
	|	
	|	Удержания.Ссылка.Валюта                          КАК ВалютаВзаиморасчетов,
	|	Удержания.ОбъектРасчетов                         КАК ОбъектРасчетов,
	|	
	|	Удержания.Сумма                                  КАК СуммаВзаиморасчетов,
	|	Удержания.Сумма                                  КАК Сумма,
	|	0                                                КАК УвеличениеОплачивается,
	|	0                                                КАК УменьшениеОплачивается,
	|	
	|	Удержания.Ссылка.Дата                            КАК ДатаРегистратора,
	|	Удержания.Ссылка.Дата                            КАК ДатаКурса,
	|	ДАТАВРЕМЯ(1,1,1)                                 КАК ДатаПогашения,
	|	Удержания.Ссылка.Номер                           КАК НомерРегистратора,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УдержаниеИзЗарплатыВСчетРеализацииСотруднику) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                     КАК ФормаОплаты,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяДвиженияДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО                                     КАК СчетНаОплату,
	|	Удержания.Ссылка.Валюта                          КАК ВалютаДокумента,
	|	НЕОПРЕДЕЛЕНО                                     КАК СвязанныйДокумент,
	|	Удержания.ИдентификаторФинЗаписи                 КАК ИдентификаторФинЗаписи,
	|	Удержания.НастройкаХозяйственнойОперации         КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтУдержания КАК Удержания
	|ГДЕ
	|	Удержания.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияНачисленийУдержаний.ПогаситьВзаиморасчеты)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК ДатаДокументаИБ,
	|	&Номер КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	НЕОПРЕДЕЛЕНО КАК Сумма,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО КАК РазделительЗаписи,
	|	"""" КАК Дополнительно,
	|	&Дата КАК ДатаПервичногоДокумента,
	|	&Номер КАК НомерПервичногоДокумента,
	|	&Исправление КАК СторноИсправление,
	|	&СторнируемыйДокумент КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент КАК ИсправляемыйДокумент,
	|	&Дата КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.ОтражениеЗарплатыВФинансовомУчете2_5 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента           = ПустаяСсылка().Метаданные().ПолноеИмя();
	СинонимТаблицыДокумента      = "";
	ВЗапросеЕстьИсточник         = Истина;
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			,);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ЗагрузкаДанныхИзФайла

Функция ТекстЗапросаЗагружаемыхДанных(Колонки)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ЗагружаемыеДанные
	|ИЗ &ЗагружаемыеДанные КАК Таблица";
	
	СхемаЗапроса = Новый СхемаЗапроса();
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	
	Запрос = СхемаЗапроса.ПакетЗапросов[0].Операторы[0];
	Для Каждого Колонка Из Колонки Цикл
		Если Колонка.Имя = "Идентификатор" Тогда
			Продолжить;
		КонецЕсли;
		Запрос.ВыбираемыеПоля.Добавить("Таблица." + Колонка.Имя);
	КонецЦикла;
	
	ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСопоставленияДанных(Колонки)
	
	МассивЗапросов = Новый Массив;
	
	Если Колонки.Найти("ПодразделениеКод") = Неопределено Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Ссылка,
		|	0 КАК ИдентификаторСтроки,
		|	0 КАК Приоритет
		|ПОМЕСТИТЬ ПодразделенияСопоставленные";
	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Подразделения.Ссылка КАК Ссылка,
		|	ЗагружаемыеДанные.Идентификатор КАК ИдентификаторСтроки,
		|	2 КАК Приоритет
		|ПОМЕСТИТЬ ПодразделенияСопоставленные
		|ИЗ Справочник.СтруктураПредприятия КАК Подразделения
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗагружаемыеДанные КАК ЗагружаемыеДанные
		|		ПО Подразделения.Код = ЗагружаемыеДанные.ПодразделениеКод
		|			И Подразделения.Наименование = ЗагружаемыеДанные.ПодразделениеНаименование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Подразделения.Ссылка,
		|	ЗагружаемыеДанные.Идентификатор,
		|	1
		|ИЗ Справочник.СтруктураПредприятия КАК Подразделения
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗагружаемыеДанные КАК ЗагружаемыеДанные
		|		ПО Подразделения.Наименование = ЗагружаемыеДанные.ПодразделениеНаименование
		|			И ЗагружаемыеДанные.ПодразделениеКод = """"
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИдентификаторСтроки";
	КонецЕсли;
	МассивЗапросов.Добавить(ТекстЗапроса);
	
	Если Колонки.Найти("ФизическоеЛицоФИО") = Неопределено Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК Ссылка,
		|	0 КАК ИдентификаторСтроки,
		|	0 КАК Приоритет
		|ПОМЕСТИТЬ ФизическиеЛицаСопоставленные";
	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка КАК Ссылка,
		|	ЗагружаемыеДанные.Идентификатор КАК ИдентификаторСтроки,
		|	2 КАК Приоритет
		|ПОМЕСТИТЬ ФизическиеЛицаСопоставленные
		|ИЗ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗагружаемыеДанные КАК ЗагружаемыеДанные
		|		ПО ФизическиеЛица.Код = ЗагружаемыеДанные.ФизическоеЛицоКод
		|			И ФизическиеЛица.Наименование = ЗагружаемыеДанные.ФизическоеЛицоФИО
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка,
		|	ЗагружаемыеДанные.Идентификатор,
		|	1
		|ИЗ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗагружаемыеДанные КАК ЗагружаемыеДанные
		|		ПО ФизическиеЛица.Наименование = ЗагружаемыеДанные.ФизическоеЛицоФИО
		|			И ЗагружаемыеДанные.ФизическоеЛицоКод = """"
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИдентификаторСтроки";
	КонецЕсли;
	МассивЗапросов.Добавить(ТекстЗапроса);
	
	Если Колонки.Найти("ВидНачисленияУдержанияНаименование") = Неопределено Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(Справочник.ВидыНачисленийУдержаний.ПустаяСсылка) КАК Ссылка,
		|	0 КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВидыНачисленийУдержанийСопоставленные";
	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВидыНачисленийУдержаний.Ссылка КАК Ссылка,
		|	ЗагружаемыеДанные.Идентификатор КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВидыНачисленийУдержанийСопоставленные
		|ИЗ Справочник.ВидыНачисленийУдержаний КАК ВидыНачисленийУдержаний
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗагружаемыеДанные КАК ЗагружаемыеДанные
		|		ПО ВидыНачисленийУдержаний.Наименование = ЗагружаемыеДанные.ВидНачисленияУдержанияНаименование
		|			И ВидыНачисленийУдержаний.ЯвляетсяУдержанием = &ЗагрузкаУдержаний
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИдентификаторСтроки";
	КонецЕсли;
	МассивЗапросов.Добавить(ТекстЗапроса);
	
	Если Колонки.Найти("ВидНалогаНаименование") = Неопределено Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(Справочник.ВидыНалоговВзносов.ПустаяСсылка) КАК Ссылка,
		|	0 КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВидыНалоговСопоставленные";
	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВидыНалоговВзносов.Ссылка КАК Ссылка,
		|	ЗагружаемыеДанные.Идентификатор КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВидыНалоговСопоставленные
		|ИЗ Справочник.ВидыНалоговВзносов КАК ВидыНалоговВзносов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗагружаемыеДанные КАК ЗагружаемыеДанные
		|		ПО ВидыНалоговВзносов.Наименование = ЗагружаемыеДанные.ВидНалогаНаименование
		|			И ВидыНалоговВзносов.ПлательщикСотрудник = &НалогиВзносыСотрудников
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИдентификаторСтроки";
	КонецЕсли;
	МассивЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Идентификатор КАК Идентификатор,
	|	МАКСИМУМ(ЕСТЬNULL(Подразделения.Приоритет, 0)) КАК ПриоритетПодразделений,
	|	МАКСИМУМ(ЕСТЬNULL(ФизическиеЛица.Приоритет, 0)) КАК ПриоритетФизическихЛиц
	|ПОМЕСТИТЬ ПриоритетыСопоставления
	|ИЗ ЗагружаемыеДанные КАК Таблица
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПодразделенияСопоставленные КАК Подразделения
	|		ПО Таблица.Идентификатор = Подразделения.ИдентификаторСтроки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ФизическиеЛицаСопоставленные КАК ФизическиеЛица
	|		ПО Таблица.Идентификатор = ФизическиеЛица.ИдентификаторСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Идентификатор
	|;
	|
	|ВЫБРАТЬ
	|	Таблица.Идентификатор КАК ИдентификаторСтроки,
	|	МАКСИМУМ(Подразделения.Ссылка) КАК Подразделение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Подразделения.Ссылка) КАК КоличествоПодразделений,
	|	МАКСИМУМ(ФизическиеЛица.Ссылка) КАК ФизическоеЛицо,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ФизическиеЛица.Ссылка) КАК КоличествоФизическихЛиц,
	|	МАКСИМУМ(ВидыНачисленийУдержаний.Ссылка) КАК ВидНачисленияУдержания,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВидыНачисленийУдержаний.Ссылка) КАК КоличествоВидовНачисленийУдержаний,
	|	МАКСИМУМ(ВидыНалогов.Ссылка) КАК ВидНалога,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВидыНалогов.Ссылка) КАК КоличествоВидовНалогов
	|ПОМЕСТИТЬ СопоставленныеДанные
	|ИЗ ПриоритетыСопоставления КАК Таблица
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПодразделенияСопоставленные КАК Подразделения
	|		ПО Таблица.Идентификатор = Подразделения.ИдентификаторСтроки
	|		И Таблица.ПриоритетПодразделений = Подразделения.Приоритет
	|	ЛЕВОЕ СОЕДИНЕНИЕ ФизическиеЛицаСопоставленные КАК ФизическиеЛица
	|		ПО Таблица.Идентификатор = ФизическиеЛица.ИдентификаторСтроки
	|		И Таблица.ПриоритетФизическихЛиц = ФизическиеЛица.Приоритет
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВидыНачисленийУдержанийСопоставленные КАК ВидыНачисленийУдержаний
	|		ПО Таблица.Идентификатор = ВидыНачисленийУдержаний.ИдентификаторСтроки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВидыНалоговСопоставленные КАК ВидыНалогов
	|		ПО Таблица.Идентификатор = ВидыНалогов.ИдентификаторСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Идентификатор";
	
	МассивЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"УНИЧТОЖИТЬ ПриоритетыСопоставления;
	|УНИЧТОЖИТЬ ПодразделенияСопоставленные;
	|УНИЧТОЖИТЬ ФизическиеЛицаСопоставленные;
	|УНИЧТОЖИТЬ ВидыНачисленийУдержанийСопоставленные;
	|УНИЧТОЖИТЬ ВидыНалоговСопоставленные";
	
	МассивЗапросов.Добавить(ТекстЗапроса);
	
	Возврат СтрСоединить(МассивЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецФункции

Функция ТекстЗапросаВыборкиСопоставленныхДанных()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СопоставленныеДанные.КоличествоПодразделений = 1
	|			ТОГДА СопоставленныеДанные.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА СопоставленныеДанные.КоличествоФизическихЛиц = 1
	|			ТОГДА СопоставленныеДанные.ФизическоеЛицо
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА СопоставленныеДанные.КоличествоВидовНачисленийУдержаний = 1 И НЕ &ЗагрузкаУдержаний
	|			ТОГДА СопоставленныеДанные.ВидНачисленияУдержания
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидНачисления,
	|	ВЫБОР
	|		КОГДА СопоставленныеДанные.КоличествоВидовНачисленийУдержаний = 1 И &ЗагрузкаУдержаний
	|			ТОГДА СопоставленныеДанные.ВидНачисленияУдержания
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидУдержания,
	|	ВЫБОР
	|		КОГДА СопоставленныеДанные.КоличествоВидовНалогов = 1
	|			ТОГДА СопоставленныеДанные.ВидНалога
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидНалога,
	|	СопоставленныеДанные.КоличествоПодразделений КАК КоличествоПодразделений,
	|	СопоставленныеДанные.КоличествоФизическихЛиц КАК КоличествоФизическихЛиц,
	|	СопоставленныеДанные.КоличествоВидовНачисленийУдержаний КАК КоличествоВидовНачисленийУдержаний,
	|	СопоставленныеДанные.КоличествоВидовНалогов КАК КоличествоВидовНалогов,
	|	ЗагружаемыеДанные.ВариантОтражения В (&ДоступныеВариантыОтражения) КАК ВариантОтраженияДоступен,
	|	ЗагружаемыеДанные.*
	|ИЗ ЗагружаемыеДанные КАК ЗагружаемыеДанные
	|	ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеДанные КАК СопоставленныеДанные
	|		ПО ЗагружаемыеДанные.Идентификатор = СопоставленныеДанные.ИдентификаторСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли