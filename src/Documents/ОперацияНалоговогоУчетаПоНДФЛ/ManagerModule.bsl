#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Сотрудник)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаФизическоеЛицоВШапке("Сотрудник", "");
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

Процедура ПеренестиВычетВНалогНаПрибыль(ПараметрыОбновления = Неопределено) Экспорт

	// АПК:1327-выкл используется при начальном заполнении ИБ.
	// АПК:1328-выкл используется при начальном заполнении ИБ.
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	ДивидендыФизическимЛицамНачисления.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОперацияНалоговогоУчетаПоНДФЛ.СведенияОДоходах КАК ДивидендыФизическимЛицамНачисления
	|ГДЕ
	|	ДивидендыФизическимЛицамНачисления.ДатаПолученияДохода >= ДАТАВРЕМЯ(2021, 1, 1, 0, 0, 0)
	|	И ДивидендыФизическимЛицамНачисления.СуммаВычета <> 0
	|	И ДивидендыФизическимЛицамНачисления.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|	И ДивидендыФизическимЛицамНачисления.НалогНаПрибыльДляДивидендов = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	Если ПараметрыОбновления = НеОпределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " ПЕРВЫЕ 1000", "");
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса; 
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	НачалоРасчетаНДФЛПоПрогрессивнойШкале = УчетНДФЛ.ПараметрыРасчетаНДФЛПоПрогрессивнойШкале().НачалоРасчетаНДФЛПоПрогрессивнойШкале;
	ВыборкаДокументов = РезультатЗапроса.Выбрать();
	Пока ВыборкаДокументов.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.ОперацияНалоговогоУчетаПоНДФЛ", "Ссылка", ВыборкаДокументов.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		// Обновление документа.
		ДокументОбъект = ВыборкаДокументов.Ссылка.ПолучитьОбъект();
		Для каждого СтрокаДокумента Из ДокументОбъект.СведенияОДоходах Цикл
			Если СтрокаДокумента.СуммаВычета = 0 
				Или СтрокаДокумента.ДатаПолученияДохода < НачалоРасчетаНДФЛПоПрогрессивнойШкале 
				Или СтрокаДокумента.КатегорияДохода <> Перечисления.КатегорииДоходовНДФЛ.Дивиденды Тогда
				Продолжить;
			КонецЕсли;
			СтрокаДокумента.НалогНаПрибыльДляДивидендов = Окр(СтрокаДокумента.СуммаВычета * 0.13);
			Если СтрокаДокумента.СуммаВычета >= СтрокаДокумента.СуммаДохода Тогда
				СтрокаДокумента.СуммаНалогаИсчисленная = СтрокаДокумента.СуммаНалогаИсчисленная + СтрокаДокумента.НалогНаПрибыльДляДивидендов;
			ИначеЕсли СтрокаДокумента.СуммаСПревышения > 0 И СтрокаДокумента.СуммаНалогаИсчисленная = 0 Тогда
				СтрокаДокумента.СуммаСПревышения = СтрокаДокумента.СуммаСПревышения + СтрокаДокумента.НалогНаПрибыльДляДивидендов;
			Иначе
				СтрокаДокумента.СуммаНалогаИсчисленная = СтрокаДокумента.СуммаНалогаИсчисленная + СтрокаДокумента.НалогНаПрибыльДляДивидендов;
			КонецЕсли;
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
		
		// Обновление строк исчисленного налога в движениях.
		Если ДокументОбъект.Проведен Тогда
			ТаблицаДивидендов = ДокументОбъект.СведенияОДоходах.Выгрузить(Новый Структура("КатегорияДохода", Перечисления.КатегорииДоходовНДФЛ.Дивиденды));
			ТаблицаДивидендов.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
			ТаблицаДивидендов.Колонки.Добавить("СтавкаНалогообложенияРезидента", Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"));
			ТаблицаДивидендов.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов("ДокументСсылка.ОперацияНалоговогоУчетаПоНДФЛ"));
			ТаблицаДивидендов.Колонки.ДатаПолученияДохода.Имя = "МесяцНалоговогоПериода";
			ТаблицаДивидендов.Колонки.СуммаНалогаИсчисленная.Имя = "Сумма";
			ТаблицаДивидендов.Колонки.ОбособленноеПодразделение.Имя = "Подразделение";
			ТаблицаДивидендов.ЗаполнитьЗначения(Справочники.ВидыДоходовНДФЛ.ПустаяСсылка(), "КодДохода");
			ТаблицаДивидендов.ЗаполнитьЗначения(ДокументОбъект.Сотрудник, "ФизическоеЛицо");
			ТаблицаДивидендов.ЗаполнитьЗначения(ДокументОбъект.Ссылка, "ДокументОснование");
			ТаблицаДивидендов.ЗаполнитьЗначения(Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09, "СтавкаНалогообложенияРезидента");
			Отказ = Ложь;
			Движения = Новый Структура("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", РегистрыНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СоздатьНаборЗаписей());
			УчетНДФЛ.СформироватьИсчисленныйНалогПоТаблицеЗначений(Движения, Отказ, ДокументОбъект.Организация, ДокументОбъект.ДатаОперации, ТаблицаДивидендов);
			
			НовыйНабор = Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ;
			СтарыйНабор = ДокументОбъект.Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ;
			СтарыйНабор.Прочитать();
			Для каждого СтрокаНабора Из СтарыйНабор Цикл
				Если СтрокаНабора.ВидДвижения = ВидДвиженияНакопления.Приход И СтрокаНабора.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.Дивиденды Тогда
					Продолжить;
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(НовыйНабор.Добавить(), СтрокаНабора);
			КонецЦикла; 
			НовыйНабор.Отбор.Регистратор.Установить(ДокументОбъект.Ссылка);
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ);
		КонецЕсли;
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
	// АПК:1327-вкл
	// АПК:1328-вкл
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецЕсли