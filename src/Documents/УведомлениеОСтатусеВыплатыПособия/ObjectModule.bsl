#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаСоздания) Тогда
		ДатаСоздания = ТекущаяДата(); // АПК:143 Для фильтрации событий в журнале регистрации требуется дата сервера.
	КонецЕсли;
	ИдентификаторРеестра = Документы.УведомлениеОСтатусеВыплатыПособия.ИдентификаторРеестра(ИдентификаторСтрокиРеестра);
	СтатусВыплатыСсылка = Перечисления.СтатусыВыплатыПособия.СсылкаИзЧисла(СтатусВыплаты);
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если Загружен Тогда
		ФИО = СокрП(СотрудникФамилия + " " + СотрудникИмя + " " + СотрудникОтчество);
		РегистрыСведений.СНИЛСВходящихСообщенийСЭДО.ОбновитьПоДокументу(
			Ссылка,
			Страхователь,
			ИдентификаторСообщения,
			СотрудникСНИЛС,
			ФизическоеЛицо,
			ДатаСообщения,
			ФИО,
			Менеджер().ТипСообщения());
	КонецЕсли;
	
	РегистрыСведений.РегистрацииОтветовНаЗапросыФССДляРасчетаПособий.ПриЗаписиУведомленияОСтатусеВыплатыПособия(
		ЭтотОбъект);
	РегистрыСведений.РегистрацииЗаявленийОВозмещенииВыплатРодителямДетейИнвалидов.ПриЗаписиУведомленияОСтатусеВыплатыПособия(
		ЭтотОбъект);
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	РегистрыСведений.СНИЛСВходящихСообщенийСЭДО.ПриУдаленииДокумента(Страхователь, ИдентификаторСообщения);
	РегистрыСведений.РегистрацииОтветовНаЗапросыФССДляРасчетаПособий.ПриЗаписиУведомленияОСтатусеВыплатыПособия(
		ЭтотОбъект, Истина);
	РегистрыСведений.РегистрацииЗаявленийОВозмещенииВыплатРодителямДетейИнвалидов.ПриЗаписиУведомленияОСтатусеВыплатыПособия(
		ЭтотОбъект, Истина);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФиксацияВторичныхДанныхВДокументах

Функция ОбновитьВторичныеДанные(ПараметрыФиксации = Неопределено) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Страхователь);
	Модифицирован = Ложь;
	
	Если ОбъектЗафиксирован() Тогда
		Возврат Модифицирован;
	КонецЕсли;
	
	Если ПараметрыФиксации = Неопределено Тогда
		ПараметрыФиксации = Менеджер().ПараметрыФиксацииВторичныхДанных();
	КонецЕсли;
	
	Если ЗаполнитьПодтверждениеПолучения(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Если ЗаполнитьМаксимальнуюДатуПодтвержденияПолучения(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Если ЗаполнитьФизическоеЛицо() Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Возврат Модифицирован;
КонецФункции

Функция Менеджер()
	Возврат Документы.ОтказВВозмещенииВыплатРодителямДетейИнвалидов;
КонецФункции

Функция ОбъектЗафиксирован() Экспорт
	Возврат Менеджер().ОбъектЗафиксирован(ЭтотОбъект);
КонецФункции

Функция ЗаполнитьПодтверждениеПолучения(ПараметрыФиксации) Экспорт
	Если Не ЗначениеЗаполнено(ИдентификаторСообщения) Тогда
		Возврат Ложь;
	КонецЕсли;
	Реквизиты = Новый Структура("ДатаОтправкиПодтверждения, ПодтверждениеПолученоСФР");
	Если ФиксацияВторичныхДанныхВДокументах.РеквизитыШапкиЗафиксированы(ЭтотОбъект, Реквизиты) Тогда
		Возврат Ложь;
	КонецЕсли;
	СтрокаТаблицы = СЭДОФСС.ВходящееСообщение(ИдентификаторСообщения);
	Реквизиты.ДатаОтправкиПодтверждения = СтрокаТаблицы.ДатаОтправкиПодтверждения;
	Реквизиты.ПодтверждениеПолученоСФР  = ЗначениеЗаполнено(СтрокаТаблицы.ДатаПолученияИзвещенияОПолученииПодтверждения);
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(Реквизиты, ЭтотОбъект, ПараметрыФиксации);
КонецФункции

Функция ЗаполнитьМаксимальнуюДатуПодтвержденияПолучения(ПараметрыФиксации)
	Если ФиксацияВторичныхДанныхВДокументах.РеквизитШапкиЗафиксирован(ЭтотОбъект, "МаксимальнаяДатаПодтверждения") Тогда
		Возврат Ложь;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаСообщения) Тогда
		Возврат Ложь;
	КонецЕсли;
	Реквизиты = Новый Структура("МаксимальнаяДатаПодтверждения");
	Если ТребуетсяПодтверждение Тогда
		Реквизиты.МаксимальнаяДатаПодтверждения = Менеджер().МаксимальнаяДатаПодтвержденияПолучения(ЭтотОбъект);
	КонецЕсли;
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(Реквизиты, ЭтотОбъект, ПараметрыФиксации);
КонецФункции

Функция ЗаполнитьФизическоеЛицо()
	Если ФиксацияВторичныхДанныхВДокументах.РеквизитШапкиЗафиксирован(ЭтотОбъект, "ФизическоеЛицо") Тогда
		Возврат Ложь;
	КонецЕсли;
	ФизическоеЛицоДоИзменения = ФизическоеЛицо;
	ФизическоеЛицо = ФизическиеЛицаЗарплатаКадры.ФизическоеЛицоПоСНИЛСИлиФИО(СотрудникСНИЛС, "", "", "").ФизическоеЛицо;
	Возврат ФизическоеЛицо <> ФизическоеЛицоДоИзменения;
КонецФункции

Функция ЗаполнитьФлажокТребуетсяОбработать() Экспорт
	Если ФиксацияВторичныхДанныхВДокументах.РеквизитШапкиЗафиксирован(ЭтотОбъект, "ТребуетсяОбработать") Тогда
		Возврат Ложь;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаСообщения) Тогда
		Возврат Ложь;
	КонецЕсли;
	ТребуетсяОбработатьДоИзменения = ТребуетсяОбработать;
	ТребуетсяОбработать = ТребуетсяОбработать();
	Возврат ТребуетсяОбработать <> ТребуетсяОбработатьДоИзменения;
КонецФункции

Функция ТребуетсяОбработать()
	// Требуется обрабатывать статус "4. Оплата не прошла, от банка получен отказ".
	// Остальные статусы либо не требуют внимания (присылаются справочно),
	// либо сопровождаются другими электронными уведомлениями.
	Если СтатусВыплаты <> 4 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Исторические уведомления создаваемые обработчиком обновления обрабатывать не требуется.
	Если ОбновлениеИнформационнойБазы.ЭтоВызовИзОбработчикаОбновления()
		И ДатаСообщения <= НачалоДня(ДобавитьМесяц(ТекущаяДатаСеанса(), -1)) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина; // Требуется обработать.
КонецФункции

#КонецОбласти

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли