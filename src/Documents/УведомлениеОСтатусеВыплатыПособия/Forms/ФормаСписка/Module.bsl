#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РегистрыСведений.ПользователиСЭДО.ДобавитьТекущегоПользователя();
	
	ДокументыВРаботе = Параметры.ТолькоВРаботе;
	
	Если Параметры.ТолькоТребующиеПодтверждения Тогда
		КлючСохраненияПоложенияОкна = "ДокументыВРаботе";
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"ТребуетсяПодтверждение",
			Истина,
			ВидСравненияКомпоновкиДанных.Равно,
			,
			,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный,
			"ТребуетсяПодтверждениеИстина");
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"ДатаОтправкиПодтверждения",
			,
			ВидСравненияКомпоновкиДанных.НеЗаполнено,
			,
			,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный,
			"ДатаОтправкиПодтвержденияНеЗаполнено");
	КонецЕсли;
	
	ОбщегоНазначенияБЗК.НастроитьОформлениеПоляДата(ЭтотОбъект, Элементы.Дата);
	ОбщегоНазначенияБЗК.НастроитьОформлениеПоляДата(ЭтотОбъект, Элементы.ДатаСообщения);
	
	// Добавление отборов и сохранение их идентификаторов для быстрого поиска.
	ОтборКД = Список.КомпоновщикНастроек.Настройки.Отбор;
	
	ЭлементОтбораКД = ЗапросыБЗК.ДобавитьОтбор(ОтборКД, "Страхователь", "=", Страхователь);
	ЭлементОтбораКД.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ИдентификаторОтбораСтрахователь = ОтборКД.ПолучитьИдентификаторПоОбъекту(ЭлементОтбораКД);
	
	ЭлементОтбораКД = ЗапросыБЗК.ДобавитьОтбор(ОтборКД, "ВРаботе", "=", Истина);
	ЭлементОтбораКД.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ИдентификаторОтбораДокументыВРаботе = ОтборКД.ПолучитьИдентификаторПоОбъекту(ЭлементОтбораКД);
	
	КлючНазначенияИспользования = КлючСохраненияПоложенияОкна;
	
	ОбновитьПараметрыСписка();
	
	ОбновитьВидимостьДоступность();
	
	ПравоИзменения = ПравоДоступа("Изменение", Метаданные.Документы.УведомлениеОСтатусеВыплатыПособия);
	
	Элементы.ПолучитьСообщенияСЭДО.Видимость         = ПравоИзменения;
	Элементы.ПолучитьСообщенияСЭДОЗаПериод.Видимость = ПравоИзменения;
	Элементы.ПовторноПолучитьСообщенияСЭДО.Видимость = ПравоИзменения;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если ДокументыВРаботе Тогда
		Настройки.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОбновитьПараметрыСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_УведомлениеОСтатусеВыплатыПособия"
		Или ИмяСобытия = "Запись_РегистрацииОтветовНаЗапросыФССДляРасчетаПособий"
		Или ИмяСобытия = СЭДОФССКлиент.ИмяСобытияПослеПолученияСообщенийОтФСС()
		Или ИмяСобытия = СЭДОФССКлиент.ИмяСобытияПослеОтправкиПодтвержденияПолучения() Тогда
		ОтключитьОбработчикОжидания("ОбновитьСписок");
		ПодключитьОбработчикОжидания("ОбновитьСписок", 0.2, Истина);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФильтрПоОрганизацииПриИзменении(Элемент)
	ОбновитьСписок();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьТолькоИзвещенияВРаботеПриИзменении(Элемент)
	ОбновитьСписок();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	Оповестить("Запись_УведомлениеОСтатусеВыплатыПособия", Новый Структура, Неопределено);
	СЭДОФССКлиент.ОповеститьОНеобходимостиОбновитьТекущиеДела();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗадаватьВопросОПодвержденииПолучения(Команда)
	ЗадаватьВопросОПодвержденииПолученияНаСервере();
	ПоказатьПредупреждение(, НСтр("ru = 'Включено напоминание о необходимости отправки подтверждения получения перед открытием входящих документов СФР';
									|en = 'A reminder to send confirmation of receipt before opening incoming documents from the Social Insurance Fund of Russia is enabled'"));
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьСписок()
	ОбновитьСписокНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокНаСервере()
	
	ОбновитьВидимостьДоступность();
	
	ОбновитьПараметрыСписка();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыСписка()
	
	НастройкиКД = Список.КомпоновщикНастроек.Настройки;
	
	ЭлементОтбораКД = НастройкиКД.Отбор.ПолучитьОбъектПоИдентификатору(ИдентификаторОтбораСтрахователь);
	Если ТипЗнч(ЭлементОтбораКД) <> Тип("ЭлементОтбораКомпоновкиДанных")
		Или СтрСравнить(ЭлементОтбораКД.ЛевоеЗначение, "Страхователь") <> 0 Тогда
		ЭлементОтбораКД = ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(НастройкиКД, "Страхователь", "=", Страхователь);
		ИдентификаторОтбораСтрахователь = НастройкиКД.Отбор.ПолучитьИдентификаторПоОбъекту(ЭлементОтбораКД);
	КонецЕсли;
	ЭлементОтбораКД.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбораКД.Использование  = ЗначениеЗаполнено(Страхователь);
	ЭлементОтбораКД.ПравоеЗначение = Страхователь;
	
	ГруппаИли = НастройкиКД.Отбор.ПолучитьОбъектПоИдентификатору(ИдентификаторОтбораДокументыВРаботе);
	Если ТипЗнч(ГруппаИли) <> Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
		ГруппаИли = ОбщегоНазначенияБЗК.ДобавитьГруппуОтборовУсловногоОформления(НастройкиКД.Отбор, "ИЛИ");
		ИдентификаторОтбораДокументыВРаботе = НастройкиКД.Отбор.ПолучитьИдентификаторПоОбъекту(ГруппаИли);
		ГруппаИ1 = ОбщегоНазначенияБЗК.ДобавитьГруппуОтборовУсловногоОформления(ГруппаИли, "И");
		ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ГруппаИ1, "ТребуетсяОбработать", "=", Истина);
		ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ГруппаИ1, "Обработан", "=", Ложь);
		ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ГруппаИ1, "ПометкаУдаления", "=", Ложь);
		ГруппаИ2 = ОбщегоНазначенияБЗК.ДобавитьГруппуОтборовУсловногоОформления(ГруппаИли, "И");
		ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ГруппаИ2, "Загружен", "=", Ложь);
		ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ГруппаИ2, "ПометкаУдаления", "=", Ложь);
	КонецЕсли;
	ГруппаИли.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ГруппаИли.Использование = ДокументыВРаботе;
	
	Элементы.СписокСтрахователь.Видимость = Не ЗначениеЗаполнено(Страхователь);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьДоступность()
	Если ПравоИзменения Тогда
		ОтветНаВопрос = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"ПособияФСС.СЭДО",
			"ОтветНаВопросОПодтвержденииПолучения");
	Иначе
		ОтветНаВопрос = 2;
	КонецЕсли;
	Элементы.ЗадаватьВопросОПодвержденииПолучения.Видимость = ОтветНаВопрос <> Неопределено;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗадаватьВопросОПодвержденииПолученияНаСервере()
	ОбщегоНазначения.ХранилищеОбщихНастроекУдалить(
		"ПособияФСС.СЭДО",
		"ОтветНаВопросОПодтвержденииПолучения",
		ИмяПользователя());
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
