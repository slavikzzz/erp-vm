///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ФиксацияВторичныхДанныхВДокументахФормы.ИнициализироватьМеханизмФиксацииРеквизитов(ЭтотОбъект, ТекущийОбъект);
	ФиксацияВторичныхДанныхВДокументахФормы.ПодключитьОбработчикиФиксацииИзмененийРеквизитов(ЭтотОбъект, ФиксацияБыстрыйПоискРеквизитов());
	ОбновитьВторичныеДанныеНаСервере();
	
	ОбновитьЭлементыФормы();
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru = '%1 загружаются в автоматическом режиме';
				|en = '%1 are imported automatically'"),
			РеквизитФормыВЗначение("Объект").Метаданные().ПредставлениеСписка);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ответственный) Тогда
		ЗначенияПоУмолчанию = Новый Структура("Ответственный");
		ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗначенияПоУмолчанию);
		Объект.Ответственный = ЗначенияПоУмолчанию.Ответственный;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ИмяСобытия = СЭДОФССКлиент.ИмяСобытияПослеПолученияСообщенийОтФСС()
		Или ИмяСобытия = СЭДОФССКлиент.ИмяСобытияПослеОтправкиПодтвержденияПолучения() Тогда
			Прочитать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.СохранитьРеквизитыФормыФикс(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ФиксацияЗаполнитьРеквизитыФормыФикс(ТекущийОбъект);
	ФиксацияВторичныхДанныхВДокументахФормы.УстановитьОбъектЗафиксирован(ЭтотОбъект);
	
	ОбновитьЭлементыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УведомлениеОбИзмененииРасчетаПособия", ПараметрыЗаписи, Объект.Ссылка);
	СЭДОФССКлиент.ОповеститьОНеобходимостиОбновитьТекущиеДела();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.КомментарийНачалоВыбора(ЭтаФорма, Элемент, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ВидУведомленияПриИзменении(Элемент)
	ОбновитьЭлементыФормы();
КонецПроцедуры

&НаКлиенте
Процедура ВидУведомленияОчистка(Элемент, СтандартнаяОбработка)
	ОбновитьЭлементыФормы();
КонецПроцедуры

&НаКлиенте
Процедура СтраховательПриИзменении(Элемент)
	Объект.ГоловнаяОрганизация = ПолучитьГоловнуюОрганизацию(Объект.Страхователь);
	ЗаполнитьСвязанныеДокументы();
КонецПроцедуры

&НаКлиенте
Процедура НомерПроцессаПриИзменении(Элемент)
	ЗаполнитьСвязанныеДокументы();
КонецПроцедуры

&НаКлиенте
Процедура ВходящийЗапросПриИзменении(Элемент)
	ДанныеДокумента(Объект.ВходящийЗапрос);
	ЗафиксироватьИзменениеРеквизита("ВходящийЗапрос");
КонецПроцедуры

&НаКлиенте
Процедура ОтветНаЗапросПриИзменении(Элемент)
	ДанныеДокумента(Объект.ОтветНаЗапрос);
	ЗафиксироватьИзменениеРеквизита("ОтветНаЗапрос");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВопросВПоддержку(Команда)
	
	ВопросВПоддержку = ПодготовитьВопросВПоддержку();
	
	//   *КодОшибки - Строка - идентификатор ошибки при отправки:
	//   *СообщениеОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя;
	//   *URLСтраницы - Строка - URL страницы отправки сообщения.
	Если Не ЗначениеЗаполнено(ВопросВПоддержку.КодОшибки) Тогда
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ЗаголовокОкна", НСтр("ru = 'Отправка сообщения в службу технической поддержки';
														|en = 'Send a message to technical support.'"));
		ИнтернетПоддержкаПользователейКлиент.ОткрытьВебСтраницуСДополнительнымиПараметрами(
			ВопросВПоддержку.URLСтраницы,
			ПараметрыОткрытия);
	Иначе
		ИнформированиеПользователяКлиент.ПоказатьПодробности(ВопросВПоддержку.СообщениеОбОшибке);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВозможностьРедактирования(Команда)
	
	РедактированиеДоступно = Не РедактированиеДоступно;
	Для Каждого Элемент Из РеквизитыБлокировки() Цикл
		Элементы[Элемент].ТолькоПросмотр = Не РедактированиеДоступно;
	КонецЦикла;
	Элементы.ФормаВключитьВозможностьРедактирования.Пометка = РедактированиеДоступно;
	Если РедактированиеДоступно Тогда
		Элементы.ФормаВключитьВозможностьРедактирования.Заголовок = НСтр("ru = 'Отключить возможность редактирования';
																		|en = 'Отключить возможность редактирования'");
	Иначе
		Элементы.ФормаВключитьВозможностьРедактирования.Заголовок = НСтр("ru = 'Включить возможность редактирования';
																		|en = 'Allow editing'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьИзФСС(Команда)
	Если Модифицированность И Не Записать() Тогда
		Возврат;
	КонецЕсли;
	СЭДОФССКлиент.ПолучитьСообщенияИзФСС(Объект.Страхователь);
КонецПроцедуры

&НаКлиенте
Процедура НадписьТребуетсяПодтверждениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Модифицированность И Не Записать() Тогда
		Возврат;
	КонецЕсли;
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Объект.Ссылка);
	СЭДОФССКлиент.ОтправитьПодтверждениеПолучения(МассивСсылок);
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьИзменения(Команда)
	Если ВозможностьОбновленияВторичныхДанных() Тогда
		ОтменитьВсеИсправленияНаСервере();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Свойства

// СтандартныеПодсистемы.Свойства 
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаСервереБезКонтекста
Функция ОписаниеВидаУведомления(ВидУведомления)
	Возврат Перечисления.ВидыУведомленийОбИзмененииРасчетаПособия.ОписаниеВидаУведомления(ВидУведомления);
КонецФункции

&НаСервере
Функция ПодготовитьВопросВПоддержку()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Вложения = Новый Массив;
	Возврат СЭДОФСС.ПодготовитьВопросВПоддержку(ДокументОбъект, Вложения);
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыБлокировки()
	Реквизиты = "Страхователь,ФизическоеЛицо,Дата,Номер,ВидУведомления,ДатаСообщения,МетодНазначенияИВыплатыПособия,СНИЛС," +
		"РасчетныйГод1,РасчетныйГод2,НомерПроцесса,НомерНовогоПроцесса,Причина,ГоловнаяОрганизация,ИдентификаторСообщения," +
		"Сотрудник,МаксимальнаяДатаПодтверждения,ТребуетсяПодтверждение,ДатаОтправкиПодтверждения,ПодтверждениеПолученоСФР";
	Возврат СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Реквизиты);
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьГоловнуюОрганизацию(Страхователь)
	Возврат ЗарплатаКадры.ГоловнаяОрганизация(Страхователь);
КонецФункции

&НаСервере
Процедура ЗаполнитьСвязанныеДокументы()
	
	Даннные = Менеджер().ДанныеСвязанныхДокументов(Объект.Страхователь, Объект.НомерПроцесса, Объект.ДатаСообщения);
	ЗаполнитьЗначенияСвойств(Объект, Даннные);
	ОбновитьЭлементыФормы();

КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыФормы()
	
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбновитьФорму(ЭтотОбъект);
	ПравоИзменения   = (Элементы.Найти("ФормаПровести") <> Неопределено);
	ПравоПолученияЭД = СЭДОФСС.ЕстьПравоПолучения();
	
	Кнопка = Элементы.Найти("ФормаПовторноПолучитьИзФСС");
	Если Кнопка <> Неопределено Тогда
		Кнопка.Видимость = ПравоИзменения И ПравоПолученияЭД;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ВходящийЗапрос) Или ЗначениеЗаполнено(Объект.ОтветНаЗапрос) Тогда
		Элементы.ГруппаСвязанныеДокументы.Заголовок = НСтр("ru = 'Сязанные документы';
															|en = 'Сязанные документы'");
		Элементы.ГруппаСвязанныеДокументы.Показать();
	Иначе
		Элементы.ГруппаСвязанныеДокументы.Заголовок = НСтр(
		"ru = 'Связанные документы по номеру процесса и страхователю не найдены';
		|en = 'Связанные документы по номеру процесса и страхователю не найдены'");
		Элементы.ГруппаСвязанныеДокументы.Скрыть();
	КонецЕсли;
	
	// Подтверждение получения.
	Если Не Объект.ТребуетсяПодтверждение Тогда
		ТекущаяСтраница = Элементы.ГруппаНетПодтвержденияПолучения;
	ИначеЕсли ЗначениеЗаполнено(Объект.ДатаОтправкиПодтверждения) Тогда
		Если Объект.ПодтверждениеПолученоСФР Тогда
			ТекущаяСтраница = Элементы.ГруппаПодтверждениеОтправленоИПолучено;
			Элементы.НадписьПодтверждениеОтправленоИПолучено.Заголовок = СтрШаблон(
				НСтр("ru = 'Подтверждение получения отправлено %1 и получено СФР.';
					|en = 'Подтверждение получения отправлено %1 и получено СФР.'"),
				Формат(Объект.ДатаОтправкиПодтверждения, "ДЛФ=D"));
		Иначе
			ТекущаяСтраница = Элементы.ГруппаПодтверждениеОтправленоНоНеПолучено;
			Элементы.НадписьПодтверждениеОтправленоНоНеПолучено.Заголовок = СтрШаблон(
				НСтр("ru = 'Подтверждение получения отправлено %1.';
					|en = 'Подтверждение получения отправлено %1.'"),
				Формат(Объект.ДатаОтправкиПодтверждения, "ДЛФ=D"));
		КонецЕсли;
	Иначе
		ТекущаяСтраница = Элементы.ГруппаТребуетсяПодтверждение;
	КонецЕсли;
	СЭДОФССКлиентСервер.УстановитьСтраницу(Элементы.СтраницыПодтвержденияПолучения, ТекущаяСтраница);
	
	Если Объект.ВидУведомления = Перечисления.ВидыУведомленийОбИзмененииРасчетаПособия.ПроцессЗакрыт Тогда
		СЭДОФССКлиентСервер.УстановитьСтраницу(Элементы.СтраницыВидаУведомления, Элементы.Страница1);
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОбИзмененииРасчетаПособия.ПолученОтветДругогоСтрахователя Тогда
		СЭДОФССКлиентСервер.УстановитьСтраницу(Элементы.СтраницыВидаУведомления, Элементы.Страница2);
	ИначеЕсли Не Объект.Загружен Тогда
		СЭДОФССКлиентСервер.УстановитьСтраницу(Элементы.СтраницыВидаУведомления, Элементы.Страница3);
	Иначе
		СЭДОФССКлиентСервер.УстановитьСтраницу(Элементы.СтраницыВидаУведомления, Элементы.Страница0);
	КонецЕсли;
	Элементы.ВидУведомленияРасширеннаяПодсказка.Заголовок = ОписаниеВидаУведомления(Объект.ВидУведомления);
	
КонецПроцедуры

&НаСервере
Процедура ДанныеДокумента(Документ)
	
	Даннные = Новый Структура("Сотрудник,СотрудникСНИЛС,ФизическоеЛицо");
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ВходящийЗапросФССДляРасчетаПособия") Тогда
		Даннные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Ссылка,Сотрудник,ФизическоеЛицо,СотрудникСНИЛС,ОтветНаЗапрос");
		Объект.ВходящийЗапрос = Даннные.Ссылка;
		Объект.ОтветНаЗапрос = Даннные.ОтветНаЗапрос;
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.ОтветНаЗапросФССДляРасчетаПособия") Тогда
		Даннные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Ссылка,Сотрудник,ФизическоеЛицо,СотрудникСНИЛС,ВходящийЗапрос");
		Объект.ВходящийЗапрос = Даннные.ВходящийЗапрос;
		Объект.ОтветНаЗапрос = Даннные.Ссылка;
	КонецЕсли;
	Объект.Сотрудник = Даннные.Сотрудник;
	Объект.ФизическоеЛицо = Даннные.ФизическоеЛицо;
	Объект.СНИЛС = Даннные.СотрудникСНИЛС;
	
КонецПроцедуры

#Область ФиксацияВторичныхДанныхВДокументах

&НаКлиенте
Функция ВозможностьОбновленияВторичныхДанных()
	Если Объект.ПодтверждениеПолученоСФР Тогда
		Текст = НСтр("ru = 'Необходимо отключить флажок ""Получено СФР""';
					|en = 'Необходимо отключить флажок ""Получено СФР""'");
		СообщенияБЗККлиентСервер.СообщитьВФорме(Текст, "ПодтверждениеПолученоСФР", "Объект", ЭтотОбъект);
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции

&НаСервереБезКонтекста
Функция Менеджер()
	Возврат Документы.УведомлениеОбИзмененииРасчетаПособия;
КонецФункции

&НаСервере
Функция ОбъектЗафиксирован() Экспорт
	Возврат Менеджер().ОбъектЗафиксирован(Объект);
КонецФункции

&НаСервере
Процедура ОбновитьВторичныеДанныеНаСервере()
	Если ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбъектФормыЗафиксирован(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ФиксацияЗаполнитьИдентификаторыФиксТЧ(ЭтотОбъект);
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.СохранитьРеквизитыФормыФикс(ЭтотОбъект, ДокументОбъект);
	
	ПараметрыФиксации = ЭтотОбъект["ПараметрыФиксацииВторичныхДанных"];
	ДокументИзменен = ДокументОбъект.ОбновитьВторичныеДанные(ПараметрыФиксации);
	
	Если ДокументИзменен Тогда
		Если ТолькоПросмотр Или Не ПравоДоступа("Изменение", ДокументОбъект.Метаданные()) Тогда
			ФиксацияВторичныхДанныхВДокументахФормы.ВывестиПредупреждениеОНаличииИзмененийВИсходныхДанныхКоторыеНельзяПрименить(
				ЭтотОбъект);
		Иначе
			Если Не ДокументОбъект.ЭтоНовый() Тогда
				ФиксацияВторичныхДанныхВДокументахФормы.УстановитьМодифицированность(ЭтотОбъект, Истина);
			КонецЕсли;
			ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
			ФиксацияЗаполнитьРеквизитыФормыФикс(Объект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ФиксацияОписаниеФормы(ПараметрыФиксацииВторичныхДанных) Экспорт
	ОписаниеФормы = ФиксацияВторичныхДанныхВДокументахФормы.ОписаниеФормы();
	
	ОписаниеЭлементовФормы = Новый Соответствие();
	ОписаниеЭлементаФормы = ФиксацияВторичныхДанныхВДокументахФормы.ОписаниеЭлементаФормы();
	ОписаниеЭлементаФормы.ПрефиксПути = "Объект";
	Для Каждого ОписаниеФиксацииРеквизита Из ПараметрыФиксацииВторичныхДанных.ОписаниеФиксацииРеквизитов Цикл
		ОписаниеЭлементовФормы.Вставить(ОписаниеФиксацииРеквизита.Ключ, ОписаниеЭлементаФормы);
	КонецЦикла;
	ОписаниеФормы.Вставить("ОписаниеЭлементовФормы", ОписаниеЭлементовФормы);
	
	ОписаниеФормы.Вставить("ФормаРедактируетсяПослеФиксации", Ложь);
	Возврат ОписаниеФормы;
КонецФункции

&НаСервере
Функция ФиксацияБыстрыйПоискРеквизитов()
	БыстрыйПоискРеквизитов = Новый Соответствие; // Ключ - имя элемента, значение - имя реквизита.
	
	ПараметрыФиксации = ЭтотОбъект["ПараметрыФиксацииВторичныхДанных"];
	Для Каждого КлючИЗначение Из ПараметрыФиксации.ОписаниеФиксацииРеквизитов Цикл
		ИмяРеквизита = КлючИЗначение.Значение.ИмяРеквизита;
		Если Элементы.Найти(КлючИЗначение.Ключ) <> Неопределено Тогда
			БыстрыйПоискРеквизитов.Вставить(КлючИЗначение.Ключ, КлючИЗначение);
		ИначеЕсли Элементы.Найти(ИмяРеквизита) <> Неопределено Тогда
			БыстрыйПоискРеквизитов.Вставить(ИмяРеквизита, КлючИЗначение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат БыстрыйПоискРеквизитов;
КонецФункции

&НаСервере
Процедура ФиксацияЗаполнитьРеквизитыФормыФикс(ТекущийОбъект)
	ФиксацияВторичныхДанныхВДокументахФормы.ЗаполнитьРеквизитыФормыФикс(ЭтотОбъект, ТекущийОбъект);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ФиксацияЗаполнитьИдентификаторыФиксТЧ(Форма)
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗаполнитьИдентификаторыСтрок(Форма);
КонецПроцедуры

&НаСервере
Процедура ОтменитьВсеИсправленияНаСервере()
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОчиститьФиксациюИзменений(ЭтотОбъект, Объект);
	ФиксацияЗаполнитьРеквизитыФормыФикс(Объект);
	ОбновитьВторичныеДанныеНаСервере();
	ОбновитьЭлементыФормы();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗафиксироватьИзменениеРеквизитаВФорме(Элемент, СтандартнаяОбработка = Ложь) Экспорт
	ОписаниеЭлементов = ФиксацияБыстрыйПоискРеквизитов();
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.Подключаемый_ЗафиксироватьИзменениеРеквизитаВФорме(ЭтотОбъект, Элемент, ОписаниеЭлементов);
	ОбновитьЭлементыФормы();
КонецПроцедуры

&НаСервере
Процедура ЗафиксироватьИзменениеРеквизита(Имя)
	ОписаниеЭлементов = ФиксацияБыстрыйПоискРеквизитов();
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.Подключаемый_ЗафиксироватьИзменениеРеквизитаВФорме(
		ЭтотОбъект,
		Элементы[Имя],
		ОписаниеЭлементов);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.СброситьФиксациюИзмененийРеквизитовПоОснованиюЗаполнения(
		ЭтотОбъект,
		Имя);
КонецПроцедуры

#КонецОбласти

#КонецОбласти
