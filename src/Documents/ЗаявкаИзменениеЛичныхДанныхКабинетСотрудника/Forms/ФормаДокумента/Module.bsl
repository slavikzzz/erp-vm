
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	ЗаявкиСотрудниковФормы.ПриСозданииНаСервере(ЭтотОбъект, ОписаниеДокумента());
	ИнициализацияФормы();
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаявкиСотрудниковФормы.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект, ОписаниеДокумента());
	ПриПолученииДанных(ТекущийОбъект);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, ПараметрОповещения, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, ПараметрОповещения) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	ЗаявкиСотрудниковФормыКлиент.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, ПараметрОповещения, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ОбработчикиПодключаемыхКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура ЗаявкаВыполнена(Команда)
	
	РезультатВыполненияЗаявки = ПредопределенноеЗначение("Перечисление.РезультатыВыполненияЗаявокКабинетСотрудника.Выполнена");
	ВыполнитьЗаявкуНаКлиенте(РезультатВыполненияЗаявки);

КонецПроцедуры

&НаКлиенте
Процедура ЗаявкаОтклонена(Команда)
	
	РезультатВыполненияЗаявки = ПредопределенноеЗначение("Перечисление.РезультатыВыполненияЗаявокКабинетСотрудника.Отклонена");
	ВыполнитьЗаявкуНаКлиенте(РезультатВыполненияЗаявки);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТиповойОтвет(Команда)
	
	ЗаявкиСотрудниковФормыКлиент.ВыбратьТиповойОтвет(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСрокИсполнения(Команда)
	
	ЗаявкиСотрудниковФормыКлиент.ИзменитьСрокИсполнения(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПовернутьКартинкуПротивЧасовойСтрелки(Команда)
	ПовернутьКартинкуНаСервере(90);
КонецПроцедуры

&НаКлиенте
Процедура ПовернутьКартинкуПоЧасовойСтрелке(Команда)
	ПовернутьКартинкуНаСервере(-90);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНовуюФотографию(Команда)
	
	УстановитьНовуюФотографиюНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиПодсистем

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ЗавершениеЗаявки

&НаКлиенте
Процедура ВыполнитьЗаявкуНаКлиенте(РезультатВыполненияЗаявки)

	Если ЗаявкиСотрудниковФормыКлиент.ЗаявкаГотоваКВыполнению(ЭтаФорма, РезультатВыполненияЗаявки, ОписаниеДокумента()) Тогда
		ЗаявкиСотрудниковФормыКлиент.НачатьВыполнениеКомандыЗаявкаВыполнена(ЭтаФорма, РезультатВыполненияЗаявки);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция РезультатЗаписиВыполненияЗаявки(РезультатВыполненияЗаявки) Экспорт

	Возврат РезультатЗаписиВыполненияЗаявкиНаСервере(РезультатВыполненияЗаявки);

КонецФункции

&НаСервере
Функция РезультатЗаписиВыполненияЗаявкиНаСервере(РезультатВыполненияЗаявки) Экспорт
	
	Возврат ЗаявкиСотрудников.РезультатЗаписиВыполненияЗаявки(ЭтаФорма, РезультатВыполненияЗаявки, ОписаниеДокумента());
	
КонецФункции

&НаКлиенте
Процедура ОбработчикЗавершенияЗаписиВыполненияЗаявки(Результат, ДополнительныеПараметры) Экспорт
	
	ЗаявкиСотрудниковФормыКлиент.ОбработчикЗавершенияЗаписиВыполненияЗаявки(Результат, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму()
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область УстановкаНовойФотографии

&НаКлиенте
Процедура УстановитьНовуюФотографиюНаКлиенте()

	Если Не ЗначениеЗаполнено(АдресНовойФотографии) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаголовокВопроса = НСтр("ru = 'Подтверждение';
							|en = 'Подтверждение'");
	ТекстВопроса = НСтр("ru = 'Установка новой фотографии.';
						|en = 'Установка новой фотографии.'");
	
	Оповещение = Новый ОписаниеОповещения("УстановитьНовуюФотографиюПродолжение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, ИнтеграцияУправлениеПерсоналомКлиента.ОписаниеКнопокВопроса(),,,ЗаголовокВопроса);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьНовуюФотографиюПродолжение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		УстановитьНовуюФотографиюНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьНовуюФотографиюНаСервере()
	
	ЗаявкиСотрудниковВнутренний.УстановитьНовуюФотографию(ЭтотОбъект);
	ТекстОшибкиРазмерФайла = "";
	Объект.ФотографияУстановлена = Истина;
	Модифицированность = Истина;
	ОбновитьЭУФотографии();
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриПолученииДанных(ТекущийОбъект)
	
	Если ТекущийОбъект.ИзменитьФотографию Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Владелец", ТекущийОбъект.Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПрисоединенныеФайлы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ЗаявкаИзменениеЛичныхДанныхКабинетСотрудникаПрисоединенныеФайлы КАК ПрисоединенныеФайлы
		|ГДЕ
		|	ПрисоединенныеФайлы.Фотография
		|	И ПрисоединенныеФайлы.ВладелецФайла = &Владелец";
		ПрисоединенныеФайлы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		Если ЗначениеЗаполнено(ПрисоединенныеФайлы) Тогда
			ПрисоединенныйФайл = ПрисоединенныеФайлы[0];
			ДанныеФайла = Неопределено;
			Попытка
				ДанныеФайла = РаботаСФайлами.ДанныеФайла(ПрисоединенныйФайл, РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла());
			Исключение
				// Не обрабатываем исключение, если не удалось получить файл фотографии.
			КонецПопытки;
			Если ЗначениеЗаполнено(ДанныеФайла) Тогда
				РазмерФайла = ДанныеФайла.Размер;
				ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
				АдресНовойФотографии = ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла, Новый УникальныйИдентификатор());
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ИнициализацияФормы()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаНовыеФИО", "Видимость", Объект.ИзменитьФИО);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаНовыйДокумент", "Видимость", Объект.ИзменитьДокумент);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаНовыйАдрес", "Видимость", Объект.ИзменитьАдрес);
	Если Объект.ИзменитьАдрес Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "АдресРегистрации", "Видимость", ЗначениеЗаполнено(Объект.АдресРегистрации));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "АдресМестаПроживания", "Видимость", ЗначениеЗаполнено(Объект.АдресМестаПроживания));
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаНоваяФотография", "Видимость", Объект.ИзменитьФотографию);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Email", "Видимость", Объект.ИзменитьEmail);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "НомерМобильногоТелефона", "Видимость", Объект.ИзменитьНомерТелефона);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ИНН", "Видимость", Объект.ИзменитьИНН);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СНИЛС", "Видимость", Объект.ИзменитьСНИЛС);
	
	ОбновитьЭУФотографии();
	
КонецПроцедуры

&НаСервере
Процедура ПовернутьКартинкуНаСервере(УголПоворота)

	ОбрабатываемаяКартинка = Новый ОбрабатываемаяКартинка(Новый Картинка(ПолучитьИзВременногоХранилища(АдресНовойФотографии)));
	ОбрабатываемаяКартинка.Повернуть(УголПоворота);
	АдресНовойФотографии = ПоместитьВоВременноеХранилище(ОбрабатываемаяКартинка.ПолучитьКартинку().ПолучитьДвоичныеДанные(), УникальныйИдентификатор);

КонецПроцедуры
	
&НаСервере
Процедура ОбновитьЭУФотографии()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаКомандыРедактированияКартинки",
		"Доступность",
		Не Объект.ФотографияУстановлена);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьНовуюФотографию",
		"Доступность",
		Не Объект.ФотографияУстановлена);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДекорацияНоваяФотографияУстановлена",
		"Видимость",
		Объект.ФотографияУстановлена);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеДокумента()

	Описание = ЗаявкиСотрудниковКлиентСервер.НовоеОписаниеДокументаЗаявки();
	
	Возврат Описание;

КонецФункции

#КонецОбласти
