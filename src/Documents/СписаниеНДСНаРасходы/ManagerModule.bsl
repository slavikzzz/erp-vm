#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("УчетНДС");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("ИсправлениеДокументов");
	
	СписаниеНДСНаРасходыЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.СписаниеНДСНаРасходы") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаНДСАвансыПолученные(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры);
		СписаниеНДСНаРасходыЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	ПроведениеДокументов.ДобавитьЗапросыСторноДвижений(Запрос, ТекстыЗапроса, Регистры, ПустаяСсылка().Метаданные());
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	СписаниеНДСНаРасходыЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	СписаниеНДСНаРасходыЛокализация.ДобавитьКомандыПечати(КомандыПечати);
	
КонецПроцедуры

// Заполняет табличную часть Ценности с отбором по реквизитам шапки документа.
//
// Параметры:
//   ДокументОбъект - ДокументОбъект.СписаниеНДСНаРасходы - Ссылка на объект документа.
//
Процедура ЗаполнитьТаблицуЦенности(ДокументОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСПредъявленный.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.РеализацияЭкспорт КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСПредъявленный.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	НДСПредъявленный.НДСОстаток КАК НДС,
	|	НДСПредъявленный.НДСУпрОстаток КАК НДСУпр
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|		&Период,
	|		Организация = &Организация 
	|		И СчетФактура = &СчетФактура 
	|		И Поставщик = &Поставщик) КАК НДСПредъявленный
	|";
	
	Запрос.УстановитьПараметр("Период",      Новый Граница(ДокументОбъект.Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Поставщик",   ДокументОбъект.Контрагент);
	Запрос.УстановитьПараметр("СчетФактура", ДокументОбъект.СчетФактура);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ДокументОбъект.Ценности.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла; 
	
КонецПроцедуры

// Заполняет табличную часть АвансыПолученные с отбором по реквизитам шапки документа.
//
// Параметры:
//   ДокументОбъект - ДокументОбъект.СписаниеНДСНаРасходы - Ссылка на объект документа.
//
Процедура ЗаполнитьТаблицуАвансыПолученные(ДокументОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСАвансыПолученные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСАвансыПолученные.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСАвансыПолученные.Подразделение КАК Подразделение,
	|	НДСАвансыПолученные.СтавкаНДС КАК СтавкаНДС,
	|	НДСАвансыПолученные.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	НДСАвансыПолученные.НДСОстаток КАК НДС,
	|	НДСАвансыПолученные.НДСУпрОстаток КАК НДСУпр
	|ИЗ
	|	РегистрНакопления.НДСАвансыПолученные.Остатки(
	|		&Период,
	|		Организация = &Организация 
	|		И ДокументОплаты = &ДокументОплаты 
	|		И Контрагент = &Контрагент) КАК НДСАвансыПолученные
	|";
	
	Запрос.УстановитьПараметр("Период",         Новый Граница(ДокументОбъект.Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",    ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Контрагент",     ДокументОбъект.Контрагент);
	Запрос.УстановитьПараметр("ДокументОплаты", ДокументОбъект.ДокументОплаты);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ДокументОбъект.АвансыПолученные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла; 
	
КонецПроцедуры

//++ НЕ УТ

#Область ПроведениеПоРеглУчету

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса отражения.
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	Возврат СписаниеНДСНаРасходыЛокализация.ТекстОтраженияВРеглУчете();
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса создания временных таблиц, используемых при отражении.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат СписаниеНДСНаРасходыЛокализация.ТекстЗапросаВТОтраженияВРеглУчете();
	
КонецФункции

#КонецОбласти

//-- НЕ УТ

// Возвращает параметры выбора статей в документе.
// 
// Параметры:
// 
// Возвращаемое значение:
// 	МассивПаметровВыбора - Массив параметров настройки счетов учета (См. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики)
//
Функция ПараметрыВыбораСтатейИАналитик() Экспорт
	
	МассивПаметровВыбора = Новый Массив;
	
	#Область СтатьяРасходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным =    "Объект";
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьи";
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходов");
	
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("АналитикаАктивовПассивов");
	
	МассивПаметровВыбора.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	Возврат МассивПаметровВыбора;
	
КонецФункции

//++ НЕ УТ

// Возвращает параметры настройки счетов учета.
//  
// Возвращаемое значение:
//	См. НастройкаСчетовУчетаСервер.ПараметрыНастройки
//
Функция ПараметрыНастройкиСчетовУчета() Экспорт
	
	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ПутьКДанным = "Объект";
	ПараметрыНастройки.ДоступностьПоОперации = Истина;
	ПараметрыНастройки.Представление = "ПредставлениеОтраженияВРеглУчете";
	ПараметрыНастройки.НастройкаСчетовУчета = "НастройкаСчетовУчета";
	ПараметрыНастройки.СтатьяАктивовПассивов = "СтатьяРасходов";
	ПараметрыНастройки.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	ПараметрыНастройки.ТипСтатьи     = "ТипСтатьи";
	
	ПараметрыНастройки.Организация = "Объект.Организация";

	ПараметрыНастройки.ЭлементыФормы.Добавить("ПредставлениеОтраженияВРеглУчете");
	
	Возврат ПараметрыНастройки;
	
КонецФункции

//-- НЕ УТ

#Область ДляВызоваИзДругихПодсистем

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	ИсправлениеДокументов.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, ПустаяСсылка().Метаданные());
	
КонецПроцедуры

// Для использования в процедуре ДобавитьКомандыСозданияНаОсновании других модулей менеджеров объектов.
// Добавляет в список команд создания на основании этот объект.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//  СтрокаТаблицыЗначений, Неопределено - описание добавленной команды.
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Возврат СозданиеНаОсновании.ДобавитьКомандуСозданияНаОсновании(КомандыСозданияНаОсновании, Метаданные.Документы.СписаниеНДСНаРасходы);
	
КонецФункции

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеНДСНаРасходы.Ссылка,
	|	СписаниеНДСНаРасходы.ПометкаУдаления,
	|	СписаниеНДСНаРасходы.Номер,
	|	СписаниеНДСНаРасходы.Дата,
	|	СписаниеНДСНаРасходы.Проведен,
	|	СписаниеНДСНаРасходы.ХозяйственнаяОперация,
	|	СписаниеНДСНаРасходы.Организация,
	|	СписаниеНДСНаРасходы.Контрагент,
	|	СписаниеНДСНаРасходы.СчетФактура,
	|	СписаниеНДСНаРасходы.ДокументОплаты,
	|	СписаниеНДСНаРасходы.СтатьяРасходов,
	|	СписаниеНДСНаРасходы.Подразделение,
	|	СписаниеНДСНаРасходы.АналитикаРасходов,
	|	СписаниеНДСНаРасходы.Комментарий,
	|	СписаниеНДСНаРасходы.СуммаБезНДС,
	|	СписаниеНДСНаРасходы.Исправление,
	|	СписаниеНДСНаРасходы.СторнируемыйДокумент,
	|	СписаниеНДСНаРасходы.ИсправляемыйДокумент,
	|	СписаниеНДСНаРасходы.СуммаНДС
	|ИЗ
	|	Документ.СписаниеНДСНаРасходы КАК СписаниеНДСНаРасходы
	|ГДЕ
	|	СписаниеНДСНаРасходы.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                     Реквизиты.Дата);
	Запрос.УстановитьПараметр("Организация",                Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент",                 Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("СчетФактура",                Реквизиты.СчетФактура);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",      Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ДокументОплаты",             Реквизиты.ДокументОплаты);
	Запрос.УстановитьПараметр("Номер",                      Реквизиты.Номер);
	Запрос.УстановитьПараметр("Проведен",                   Реквизиты.Проведен);
	Запрос.УстановитьПараметр("Исправление",                Реквизиты.Исправление);
	Запрос.УстановитьПараметр("СторнируемыйДокумент",       Реквизиты.СторнируемыйДокумент);
	Запрос.УстановитьПараметр("ИсправляемыйДокумент",       Реквизиты.ИсправляемыйДокумент);
	Запрос.УстановитьПараметр("Комментарий",                Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("СуммаНДС",                   Реквизиты.СуммаНДС);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов", 	ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",          ОбщегоНазначения.ИдентификаторОбъектаМетаданных(
		ПустаяСсылка().Метаданные().ПолноеИмя()));
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСПредъявленный";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УчетНДСУПСлужебный.УстановитьПараметрТипыНалогообложенияНДСПоступления(Запрос);
	
	ТекстЗапроса = "
	|
	|ВЫБРАТЬ
	|	&Ссылка                                КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Операция.Дата                          КАК Период,
	|	Операция.Организация                   КАК Организация,
	|	Операция.СчетФактура                   КАК СчетФактура,
	|	Операция.Контрагент                    КАК Поставщик,
	|	Строки.ВидЦенности                     КАК ВидЦенности,
	|	Строки.СтавкаНДС                       КАК СтавкаНДС,
	|	Строки.ВидДеятельностиНДС              КАК ВидДеятельностиНДС,
	|	Строки.ИсправленныйСчетФактура         КАК ИсправленныйСчетФактура,
	|	Строки.РеализацияЭкспорт               КАК РеализацияЭкспорт,
	|	Строки.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	Строки.СуммаБезНДС                     КАК СуммаБезНДС,
	|	Строки.НДС                             КАК НДС,
	|	Строки.НДСУпр                          КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы) КАК Событие,
	|	НЕОПРЕДЕЛЕНО                           КАК КорВидДеятельностиНДС,
	|	Операция.Подразделение                 КАК Подразделение,
	|	Операция.СтатьяРасходов                КАК СтатьяРасходов,
	|	Операция.АналитикаРасходов             КАК АналитикаРасходов,
	|	""""                                     КАК ИдентификаторСтроки,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация,
	|	Строки.ИдентификаторСтроки             КАК ИдентификаторФинЗаписи,
	|	НастройкиХозяйственныхОпераций.Ссылка  КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.СписаниеНДСНаРасходы КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеНДСНаРасходы.Ценности КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|	ПО
	|		Операция.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (Строки.НДС <> 0 ИЛИ Строки.НДСУпр <> 0)
	|	
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	&Период КАК ДатаДокументаИБ,
	|	&Номер КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	&Комментарий КАК Комментарий,
	|	&СуммаНДС КАК Сумма,
	|	&Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО КАК РазделительЗаписи,
	|	"""" КАК Дополнительно,
	|	&Период КАК ДатаПервичногоДокумента,
	|	&Номер КАК НомерПервичногоДокумента,
	|	&Исправление КАК СторноИсправление,
	|	&СторнируемыйДокумент КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент КАК ИсправляемыйДокумент,
	|	&Период КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.СписаниеНДСНаРасходы КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента           = ПустаяСсылка().Метаданные().ПолноеИмя();
	СинонимТаблицыДокумента      = "";
	ВЗапросеЕстьИсточник         = Истина;

	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,,);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции


Функция ТекстЗапросаТаблицаНДСАвансыПолученные(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСАвансыПолученные";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|
	|ВЫБРАТЬ
	|	&Ссылка                                КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Операция.Дата                          КАК Период,
	|	Операция.Организация                   КАК Организация,
	|	Операция.ДокументОплаты                КАК ДокументОплаты,
	|	Операция.Контрагент                    КАК Контрагент,
	|	Строки.ИсправленныйСчетФактура         КАК ИсправленныйСчетФактура,
	|	Строки.Подразделение                   КАК Подразделение,
	|	Строки.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	Строки.СтавкаНДС                       КАК СтавкаНДС,
	|	Строки.СуммаБезНДС                     КАК СуммаБезНДС,
	|	Строки.НДС                             КАК НДС,
	|	Строки.НДСУпр                          КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСАвансы.СписаниеНДССПолученногоАванса) КАК Событие,
	|	НЕОПРЕДЕЛЕНО                           КАК ДокументЗачетаАванса,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация,
	|	Строки.ИдентификаторСтроки             КАК ИдентификаторФинЗаписи,
	|	НастройкиХозяйственныхОпераций.Ссылка  КАК НастройкаХозяйственнойОперации,
	|	ЛОЖЬ                                   КАК Сторно
	|ИЗ
	|	Документ.СписаниеНДСНаРасходы КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеНДСНаРасходы.АвансыПолученные КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|	ПО
	|		Операция.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|	
	|ГДЕ
	|	Операция.Ссылка В (&Ссылка)
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (Строки.НДС <> 0 ИЛИ Строки.НДСУпр <> 0)
	|	
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Операция.Дата                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	Операция.Организация                              КАК Организация,
	|	Операция.Подразделение                            КАК Подразделение,
	|	ТаблицаЦенности.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|	Операция.СтатьяРасходов                           КАК СтатьяРасходов,
	|	Операция.АналитикаРасходов                        КАК АналитикаРасходов,
	|
	|	0                                                 КАК Сумма,
	|	0                                                 КАК СуммаБезНДС,
	|	ТаблицаЦенности.НДС                               КАК СуммаРегл,
	|	ТаблицаЦенности.НДСУпр                            КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА НЕ Статьи.ПринятиеКналоговомуУчету ТОГДА
	|			ТаблицаЦенности.НДС 
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ                                             КАК ПостояннаяРазница,
	|	0                                                 КАК ВременнаяРазница,
	|	
	|	Операция.ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	ТаблицаЦенности.ИдентификаторСтроки               КАК ИдентификаторФинЗаписи,
	|	НастройкиХозяйственныхОпераций.Ссылка             КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.СписаниеНДСНаРасходы КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеНДСНаРасходы.Ценности КАК ТаблицаЦенности
	|	ПО 
	|		Операция.Ссылка = ТаблицаЦенности.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|	ПО 
	|		Операция.СтатьяРасходов = Статьи.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|	ПО
	|		Операция.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|
	|ГДЕ
	|	Операция.Ссылка В (&Ссылка)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И Операция.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Дата                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	Операция.Организация                              КАК Организация,
	|	Операция.Подразделение                            КАК Подразделение,
	|	ТаблицаАвансыПолученные.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	Операция.СтатьяРасходов                           КАК СтатьяРасходов,
	|	Операция.АналитикаРасходов                        КАК АналитикаРасходов,
	|
	|	0                                                 КАК Сумма,
	|	0                                                 КАК СуммаБезНДС,
	|	ТаблицаАвансыПолученные.НДС                       КАК СуммаРегл,
	|	ТаблицаАвансыПолученные.НДСУпр                    КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА НЕ Статьи.ПринятиеКналоговомуУчету ТОГДА
	|			ТаблицаАвансыПолученные.НДС 
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ                                             КАК ПостояннаяРазница,
	|	0                                                 КАК ВременнаяРазница,
	|	
	|	Операция.ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	ТаблицаАвансыПолученные.ИдентификаторСтроки       КАК ИдентификаторФинЗаписи,
	|	НастройкиХозяйственныхОпераций.Ссылка             КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.СписаниеНДСНаРасходы КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеНДСНаРасходы.АвансыПолученные КАК ТаблицаАвансыПолученные
	|	ПО 
	|		Операция.Ссылка = ТаблицаАвансыПолученные.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|	ПО 
	|		Операция.СтатьяРасходов = Статьи.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|	ПО
	|		Операция.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|
	|ГДЕ
	|	Операция.Ссылка В (&Ссылка)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И Операция.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияПоПрочимАктивамПассивам";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Операция.Дата                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	Операция.Организация                              КАК Организация,
	|	Операция.Подразделение                            КАК Подразделение,
	|	ТаблицаЦенности.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|	Операция.СтатьяРасходов                           КАК Статья,
	|	Операция.АналитикаАктивовПассивов                 КАК Аналитика,
	//++ НЕ УТ
	|	Операция.НастройкаСчетовУчета                     КАК НастройкаСчетовУчета,
	//-- НЕ УТ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	0                                                 КАК СуммаСНДС,
	|	0                                                 КАК СуммаБезНДС,
	|	ТаблицаЦенности.НДС                               КАК СуммаРегл,
	|	ТаблицаЦенности.НДСУпр                            КАК СуммаУпр,
	|	ТаблицаЦенности.НДС                               КАК ПостояннаяРазница,
	|	
	|	ТаблицаЦенности.ИдентификаторСтроки               КАК ИдентификаторФинЗаписи,
	|	НастройкиХозяйственныхОпераций.Ссылка             КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.СписаниеНДСНаРасходы КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеНДСНаРасходы.Ценности КАК ТаблицаЦенности
	|	ПО 
	|		Операция.Ссылка = ТаблицаЦенности.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|	ПО
	|		Операция.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|
	|ГДЕ
	|	Операция.Ссылка В (&Ссылка)
	|	И Операция.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Дата                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	Операция.Организация                              КАК Организация,
	|	Операция.Подразделение                            КАК Подразделение,
	|	ТаблицаАвансыПолученные.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	Операция.СтатьяРасходов                           КАК Статья,
	|	Операция.АналитикаАктивовПассивов                 КАК Аналитика,
	//++ НЕ УТ
	|	Операция.НастройкаСчетовУчета                     КАК НастройкаСчетовУчета,
	//-- НЕ УТ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	0                                                 КАК СуммаСНДС,
	|	0                                                 КАК СуммаБезНДС,
	|	ТаблицаАвансыПолученные.НДС                       КАК СуммаРегл,
	|	ТаблицаАвансыПолученные.НДСУпр                    КАК СуммаУпр,
	|	ТаблицаАвансыПолученные.НДС                       КАК ПостояннаяРазница,
	|	
	|	ТаблицаАвансыПолученные.ИдентификаторСтроки       КАК ИдентификаторФинЗаписи,
	|	НастройкиХозяйственныхОпераций.Ссылка             КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.СписаниеНДСНаРасходы КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеНДСНаРасходы.АвансыПолученные КАК ТаблицаАвансыПолученные
	|	ПО 
	|		Операция.Ссылка = ТаблицаАвансыПолученные.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|	ПО
	|		Операция.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|
	|ГДЕ
	|	Операция.Ссылка В (&Ссылка)
	|	И Операция.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции


#КонецОбласти

#КонецОбласти

#КонецЕсли
