#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ФизическоеЛицо)
	|	И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаФизическоеЛицоВШапке("ФизическоеЛицо", "");
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р";
	КомандаПечати.Идентификатор = "ПФ_MXL_СТД_Р";
	КомандаПечати.Представление = НСтр("ru = 'СТД-Р';
										|en = 'STD-R'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СТД_Р") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПФ_MXL_СТД_Р", НСтр("ru = 'Сведения о трудовой деятельности работника, СТД-Р';
								|en = 'Employee labor activity information, STD-R'"),
			ТабличныйДокументСТД_Р(МассивОбъектов, ОбъектыПечати), ,
			"Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.ПФ_MXL_СТД_Р");
			
	КонецЕсли;
	
КонецПроцедуры

Функция ТабличныйДокументСТД_Р(МассивОбъектов, ОбъектыПечати)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	МассивОбъектовДо20230101 = Новый Массив;
	МассивОбъектовПосле20230101 = Новый Массив;
	МассивОбъектовПосле20240101 = Новый Массив;
	ДатыДокументов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивОбъектов, "Дата");
	Для Каждого ДанныеДаты Из ДатыДокументов Цикл
		Если ДанныеДаты.Значение < '20230101' Тогда
			МассивОбъектовДо20230101.Добавить(ДанныеДаты.Ключ);
		ИначеЕсли ДанныеДаты.Значение < '20240101' Тогда
			МассивОбъектовПосле20230101.Добавить(ДанныеДаты.Ключ);
		Иначе
			МассивОбъектовПосле20240101.Добавить(ДанныеДаты.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(МассивОбъектовДо20230101) Тогда
		ЭлектронныеТрудовыеКнижки.ВывестиМакетыДокументов(
			ДокументРезультат, ВыборкаПоДокументам(МассивОбъектовДо20230101),
			"Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.ПФ_MXL_СТД_Р", ОбъектыПечати);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МассивОбъектовПосле20230101) Тогда
		ЭлектронныеТрудовыеКнижки.ВывестиМакетыДокументов(
			ДокументРезультат, ВыборкаПоДокументам(МассивОбъектовПосле20230101),
			"Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.ПФ_MXL_СТД_Р_2023", ОбъектыПечати);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МассивОбъектовПосле20240101) Тогда
		ЭлектронныеТрудовыеКнижки.ВывестиМакетыДокументовСТДР(
			ДокументРезультат, ВыборкаПоДокументам(МассивОбъектовПосле20240101),
			"Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.ПФ_MXL_СТД_Р_2023", ОбъектыПечати);
	КонецЕсли;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция ЗапросВТДанныеМероприятий(ИмяВТДанныеМероприятий = "ВТДанныеМероприятий") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МероприятияДокумента.Ссылка КАК Ссылка,
		|	МероприятияДокумента.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияДокумента.Отменено КАК Отменено,
		|	ЕСТЬNULL(Мероприятия.ФизическоеЛицо, МероприятияПрочие.ФизическоеЛицо) КАК ФизическоеЛицо,
		|	ЕСТЬNULL(Мероприятия.Организация, МероприятияПрочие.Организация) КАК Организация,
		|	ЕСТЬNULL(Мероприятия.Сотрудник, МероприятияПрочие.Сотрудник) КАК СотрудникЗаписи,
		|	ЕСТЬNULL(Мероприятия.ДатаМероприятия, МероприятияПрочие.ДатаМероприятия) КАК ДатаМероприятия,
		|	ЕСТЬNULL(Мероприятия.ВидМероприятия, МероприятияПрочие.ВидМероприятия) КАК ВидМероприятия,
		|	ЕСТЬNULL(МероприятияПереданные.Сведения, ЕСТЬNULL(Мероприятия.Сведения, МероприятияПрочие.Сведения)) КАК Сведения,
		|	ЕСТЬNULL(Мероприятия.Подразделение, МероприятияПрочие.Подразделение) КАК Подразделение,
		|	ЕСТЬNULL(Мероприятия.Должность, МероприятияПрочие.Должность) КАК Должность,
		|	ЕСТЬNULL(Мероприятия.РазрядКатегория, МероприятияПрочие.РазрядКатегория) КАК РазрядКатегория,
		|	ЕСТЬNULL(Мероприятия.КодПоРееструДолжностей, МероприятияПрочие.КодПоРееструДолжностей) КАК КодПоРееструДолжностей,
		|	ЕСТЬNULL(Мероприятия.ТрудоваяФункция, МероприятияПрочие.ТрудоваяФункция) КАК ТрудоваяФункция,
		|	ЕСТЬNULL(Мероприятия.НаименованиеДокументаОснования, МероприятияПрочие.НаименованиеДокументаОснования) КАК НаименованиеДокументаОснования,
		|	ЕСТЬNULL(Мероприятия.ДатаДокументаОснования, МероприятияПрочие.ДатаДокументаОснования) КАК ДатаДокументаОснования,
		|	ЕСТЬNULL(Мероприятия.СерияДокументаОснования, МероприятияПрочие.СерияДокументаОснования) КАК СерияДокументаОснования,
		|	ЕСТЬNULL(Мероприятия.НомерДокументаОснования, МероприятияПрочие.НомерДокументаОснования) КАК НомерДокументаОснования,
		|	ЕСТЬNULL(Мероприятия.НаименованиеВторогоДокументаОснования, МероприятияПрочие.НаименованиеВторогоДокументаОснования) КАК НаименованиеВторогоДокументаОснования,
		|	ЕСТЬNULL(Мероприятия.ДатаВторогоДокументаОснования, МероприятияПрочие.ДатаВторогоДокументаОснования) КАК ДатаВторогоДокументаОснования,
		|	ЕСТЬNULL(Мероприятия.СерияВторогоДокументаОснования, МероприятияПрочие.СерияВторогоДокументаОснования) КАК СерияВторогоДокументаОснования,
		|	ЕСТЬNULL(Мероприятия.НомерВторогоДокументаОснования, МероприятияПрочие.НомерВторогоДокументаОснования) КАК НомерВторогоДокументаОснования,
		|	ЕСТЬNULL(Мероприятия.ОснованиеУвольнения, МероприятияПрочие.ОснованиеУвольнения) КАК ОснованиеУвольнения,
		|	ЕСТЬNULL(Мероприятия.ДатаС, МероприятияПрочие.ДатаС) КАК ДатаС,
		|	ЕСТЬNULL(Мероприятия.ДатаПо, МероприятияПрочие.ДатаПо) КАК ДатаПо,
		|	ЕСТЬNULL(Мероприятия.ДатаОтмены, МероприятияПрочие.ДатаОтмены) КАК ДатаОтмены,
		|	ЕСТЬNULL(Мероприятия.ЯвляетсяСовместителем, МероприятияПрочие.ЯвляетсяСовместителем) КАК ЯвляетсяСовместителем,
		|	ЕСТЬNULL(МероприятияПереданные.ПредставлениеДолжности, ЕСТЬNULL(Мероприятия.ПредставлениеДолжности, МероприятияПрочие.ПредставлениеДолжности)) КАК ПредставлениеДолжности,
		|	ЕСТЬNULL(МероприятияПереданные.ПредставлениеПодразделения, ЕСТЬNULL(Мероприятия.ПредставлениеПодразделения, МероприятияПрочие.ПредставлениеПодразделения)) КАК ПредставлениеПодразделения,
		|	ЕСТЬNULL(МероприятияПереданные.ОснованиеУвольненияТекстОснования, ЕСТЬNULL(Мероприятия.ОснованиеУвольненияТекстОснования, МероприятияПрочие.ОснованиеУвольненияТекстОснования)) КАК ОснованиеУвольненияТекстОснования,
		|	ЕСТЬNULL(МероприятияПереданные.ОснованиеУвольненияСтатья, ЕСТЬNULL(Мероприятия.ОснованиеУвольненияСтатья, МероприятияПрочие.ОснованиеУвольненияСтатья)) КАК ОснованиеУвольненияСтатья,
		|	ЕСТЬNULL(МероприятияПереданные.ОснованиеУвольненияЧасть, ЕСТЬNULL(Мероприятия.ОснованиеУвольненияЧасть, МероприятияПрочие.ОснованиеУвольненияЧасть)) КАК ОснованиеУвольненияЧасть,
		|	ЕСТЬNULL(МероприятияПереданные.ОснованиеУвольненияПункт, ЕСТЬNULL(Мероприятия.ОснованиеУвольненияПункт, МероприятияПрочие.ОснованиеУвольненияПункт)) КАК ОснованиеУвольненияПункт,
		|	ЕСТЬNULL(МероприятияПереданные.ОснованиеУвольненияПодпункт, ЕСТЬNULL(Мероприятия.ОснованиеУвольненияПодпункт, МероприятияПрочие.ОснованиеУвольненияПодпункт)) КАК ОснованиеУвольненияПодпункт,
		|	ЕСТЬNULL(МероприятияПереданные.ОснованиеУвольненияАбзац, ЕСТЬNULL(Мероприятия.ОснованиеУвольненияАбзац, МероприятияПрочие.ОснованиеУвольненияАбзац)) КАК ОснованиеУвольненияАбзац,
		|	ЕСТЬNULL(Мероприятия.КодПоОКЗ, МероприятияПрочие.КодПоОКЗ) КАК КодПоОКЗ,
		|	ЕСТЬNULL(Мероприятия.ТерриториальныеУсловия, МероприятияПрочие.ТерриториальныеУсловия) КАК ТерриториальныеУсловия,
		|	ЕСТЬNULL(Мероприятия.ПричинаУвольненияПФР, МероприятияПрочие.ПричинаУвольненияПФР) КАК ПричинаУвольненияПФР,
		|	ЕСТЬNULL(Мероприятия.СрочностьТрудовогоДоговора, МероприятияПрочие.СрочностьТрудовогоДоговора) КАК СрочностьТрудовогоДоговора,
		|	ЕСТЬNULL(Мероприятия.УдаленностьРаботы, МероприятияПрочие.УдаленностьРаботы) КАК УдаленностьРаботы,
		|	ЕСТЬNULL(Мероприятия.СокращенностьГрафика, МероприятияПрочие.СокращенностьГрафика) КАК СокращенностьГрафика,
		|	ЕСТЬNULL(МероприятияПереданные.ОписаниеДолжности, ЕСТЬNULL(Мероприятия.ОписаниеДолжности, МероприятияПрочие.ОписаниеДолжности)) КАК ОписаниеДолжности,
		|	ЕСТЬNULL(МероприятияПереданные.ТрудоваяФункцияОписание, ЕСТЬNULL(Мероприятия.ТрудоваяФункция.Описание, МероприятияПрочие.ТрудоваяФункция.Описание)) КАК ТрудоваяФункцияОписание,
		|	ЕСТЬNULL(МероприятияПереданные.ТрудоваяФункцияКод, ЕСТЬNULL(Мероприятия.ТрудоваяФункция.КодПрофессиональнойДеятельности, МероприятияПрочие.ТрудоваяФункция.КодПрофессиональнойДеятельности)) КАК ТрудоваяФункцияКод,
		|	ВЫБОР
		|		КОГДА МероприятияПринятые.ИдМероприятия ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ МероприятияПринятые.ПринятоВПФР
		|	КОНЕЦ КАК Передано
		|ПОМЕСТИТЬ ВТДанныеМероприятий
		|ИЗ
		|	ВТМероприятияДокумента КАК МероприятияДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельности КАК Мероприятия
		|		ПО МероприятияДокумента.Организация = Мероприятия.Организация
		|			И МероприятияДокумента.ИдМероприятия = Мероприятия.ИдМероприятия
		|			И МероприятияДокумента.Отменено = Мероприятия.Отменено
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПрочие КАК МероприятияПрочие
		|		ПО МероприятияДокумента.Организация = МероприятияПрочие.Организация
		|			И МероприятияДокумента.ИдМероприятия = МероприятияПрочие.ИдМероприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияПринятые
		|		ПО МероприятияДокумента.Организация = МероприятияПринятые.Организация
		|			И МероприятияДокумента.ИдМероприятия = МероприятияПринятые.ИдМероприятия
		|			И МероприятияДокумента.Отменено = МероприятияПринятые.Отменено
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияПереданные
		|		ПО МероприятияДокумента.Организация = МероприятияПереданные.Организация
		|			И МероприятияДокумента.ИдМероприятия = МероприятияПереданные.ИдМероприятия
		|			И (НЕ МероприятияПереданные.Отменено)";
	
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаменитьИмяСоздаваемойВременнойТаблицы(Запрос.Текст, "ВТДанныеМероприятий", ИмяВТДанныеМероприятий);
	
	Возврат Запрос;
	
КонецФункции

Процедура ЗаполнитьДокумент(ОбъектДокумента, ЗаполнитьТолькоМероприятия = Ложь) Экспорт
	
	Если ЗначениеЗаполнено(ОбъектДокумента.ФизическоеЛицо) Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Если ЗначениеЗаполнено(ОбъектДокумента.Дата) Тогда
			ДатаЗаполнения = ОбъектДокумента.Дата;
		Иначе
			ДатаЗаполнения = ТекущаяДатаСеанса();
		КонецЕсли;
		
		ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
		ПараметрыПолучения.Организация = ОбъектДокумента.Организация;
		ПараметрыПолучения.ОтбиратьПоГоловнойОрганизации = Истина;
		ПараметрыПолучения.ОкончаниеПериода = ДатаЗаполнения;
		ПараметрыПолучения.СписокФизическихЛиц = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОбъектДокумента.ФизическоеЛицо);
		ПараметрыПолучения.КадровыеДанные = "ДатаПриема,ДатаУвольнения,Фамилия,Имя,Отчество,СтраховойНомерПФР,ДатаРождения,ВидЗанятости,"
			+ "ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиДата,ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиВид,"
			+ "ЗаявленияОПредоставленииСведенийОТрудовойДеятельности,ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиОтозвано";
		
		КадровыйУчет.СоздатьВТСотрудникиОрганизации(
			Запрос.МенеджерВременныхТаблиц,
			Истина,
			ПараметрыПолучения,
			"ВТКадровыеДанныеСотрудников");
		
		Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	КадровыеДанные.ДатаПриема КАК ДатаПриема,
			|	КадровыеДанные.Фамилия КАК Фамилия,
			|	КадровыеДанные.Имя КАК Имя,
			|	КадровыеДанные.Отчество КАК Отчество,
			|	КадровыеДанные.СтраховойНомерПФР КАК СтраховойНомерПФР,
			|	КадровыеДанные.ДатаРождения КАК ДатаРождения,
			|	КадровыеДанные.ДатаУвольнения КАК ДатаУвольнения,
			|	ВЫБОР
			|		КОГДА КадровыеДанные.ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиВид = ЗНАЧЕНИЕ(Перечисление.ВидыЗаявленийОПредоставленииСведенийОТрудовойДеятельности.ВедениеБумажнойТрудовойКнижки)
			|				И НЕ КадровыеДанные.ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиОтозвано
			|				И КадровыеДанные.Сотрудник.ГоловнаяОрганизация = КадровыеДанные.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.Организация.ГоловнаяОрганизация
			|				И ТИПЗНАЧЕНИЯ(КадровыеДанные.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности) = ТИП(Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности)
			|			ТОГДА КадровыеДанные.ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиДата
			|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
			|	КОНЕЦ КАК ЗаявлениеОПродолженииДата,
			|	ВЫБОР
			|		КОГДА КадровыеДанные.ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиВид = ЗНАЧЕНИЕ(Перечисление.ВидыЗаявленийОПредоставленииСведенийОТрудовойДеятельности.СведенияОТрудовойДеятельностиВЭлектроннойФорме)
			|				И НЕ КадровыеДанные.ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиОтозвано
			|				И КадровыеДанные.Сотрудник.ГоловнаяОрганизация = КадровыеДанные.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.Организация.ГоловнаяОрганизация
			|				И ТИПЗНАЧЕНИЯ(КадровыеДанные.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности) = ТИП(Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности)
			|			ТОГДА КадровыеДанные.ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиДата
			|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
			|	КОНЕЦ КАК ЗаявлениеОПредоставленииДата,
			|	ВЫБОР
			|		КОГДА КадровыеДанные.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
			|			ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
			|		ИНАЧЕ КадровыеДанные.ДатаУвольнения
			|	КОНЕЦ КАК ПорядокУвольнений
			|ИЗ
			|	ВТКадровыеДанныеСотрудников КАК КадровыеДанные
			|ГДЕ
			|	КадровыеДанные.ВидЗанятости В (ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы), ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство))
			|	И (КадровыеДанные.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
			|			ИЛИ КадровыеДанные.ДатаУвольнения >= ДАТАВРЕМЯ(2020, 1, 1))
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПорядокУвольнений УБЫВ,
			|	КадровыеДанные.ДатаПриема УБЫВ";
		
		ДатаПриема = Неопределено;
		СотрудникУволен = Ложь;
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		Если Выборка.Следующий() Тогда
			
			ДатаПриема = Выборка.ДатаПриема;
			Если Не ЗаполнитьТолькоМероприятия Тогда
				ЗаполнитьЗначенияСвойств(ОбъектДокумента, Выборка);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.ДатаУвольнения) Тогда
				СотрудникУволен = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Организация", ОбъектДокумента.Организация);
		Запрос.УстановитьПараметр("ДатаПриема", ДатаПриема);
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	Организации.Ссылка КАК Организация,
			|	КадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
			|	КадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
			|	КадровыеДанныеСотрудников.ДатаПриема КАК НачалоПериода,
			|	ВЫБОР
			|		КОГДА КадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
			|			ТОГДА КадровыеДанныеСотрудников.Период
			|		КОГДА КадровыеДанныеСотрудников.ДатаУвольнения > КадровыеДанныеСотрудников.Период
			|			ТОГДА КадровыеДанныеСотрудников.Период
			|		ИНАЧЕ КадровыеДанныеСотрудников.ДатаУвольнения
			|	КОНЕЦ КАК ОкончаниеПериода
			|ПОМЕСТИТЬ ВТСотрудникиПериодыДанных
			|ИЗ
			|	ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
			|		ПО (Организации.ГоловнаяОрганизация = &Организация)
			|ГДЕ
			|	(КадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
			|			ИЛИ КадровыеДанныеСотрудников.ДатаУвольнения >= &ДатаПриема)";
		
		Запрос.Выполнить();
		
		ПереданныеМероприятия = ЭлектронныеТрудовыеКнижки.МероприятияТрудовойДеятельностиСТД_Р(
			Запрос.МенеджерВременныхТаблиц, Истина, Не СотрудникУволен);
		
		ОбъектДокумента.Мероприятия.Загрузить(ПереданныеМероприятия);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИдМероприятий(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ПустойИдентификатор", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТРегистраторы
		|ИЗ
		|	Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.Мероприятия КАК СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия
		|ГДЕ
		|	НЕ СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Ссылка В (&МассивОбновленных)
		|	И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.ИдМероприятия = &ПустойИдентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Регистраторы.Ссылка КАК Ссылка
		|ИЗ
		|	ВТРегистраторы КАК Регистраторы";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Регистраторы.Ссылка КАК Ссылка,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(Мероприятия.ИдМероприятия, МероприятияПрочие.ИдМероприятия) КАК ИдМероприятия
		|ИЗ
		|	ВТРегистраторы КАК Регистраторы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.Мероприятия КАК СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельности КАК Мероприятия
		|			ПО СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Ссылка.Организация = Мероприятия.Организация
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Ссылка.ФизическоеЛицо = Мероприятия.ФизическоеЛицо
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьДатаМероприятия = Мероприятия.ДатаМероприятия
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьВидМероприятия = Мероприятия.ВидМероприятия
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьПодразделение = Мероприятия.Подразделение
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьДолжность = Мероприятия.Должность
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьТрудоваяФункция = Мероприятия.ТрудоваяФункция
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьЯвляетсяСовместителем = Мероприятия.ЯвляетсяСовместителем
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьОснованиеУвольнения = Мероприятия.ОснованиеУвольнения
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьДатаОтмены = Мероприятия.ДатаОтмены
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПрочие КАК МероприятияПрочие
		|			ПО СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Ссылка.Организация = МероприятияПрочие.Организация
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Ссылка.ФизическоеЛицо = МероприятияПрочие.ФизическоеЛицо
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьДатаМероприятия = МероприятияПрочие.ДатаМероприятия
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьВидМероприятия = МероприятияПрочие.ВидМероприятия
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьПодразделение = МероприятияПрочие.Подразделение
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьДолжность = МероприятияПрочие.Должность
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьТрудоваяФункция = МероприятияПрочие.ТрудоваяФункция
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьЯвляетсяСовместителем = МероприятияПрочие.ЯвляетсяСовместителем
		|				И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.УдалитьОснованиеУвольнения = МероприятияПрочие.ОснованиеУвольнения
		|		ПО Регистраторы.Ссылка = СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		МассивОбновленных.Добавить(Выборка.Ссылка);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаписатьИзменения = Ложь;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Пока Выборка.Следующий() Цикл
			
			Если ЗначениеЗаполнено(Выборка.ИдМероприятия) Тогда
				
				ЗаписатьИзменения = Истина;
				СтрокаМероприятия = ДокументОбъект.Мероприятия.Найти(Выборка.НомерСтроки, "НомерСтроки");
				Если СтрокаМероприятия <> Неопределено Тогда
					СтрокаМероприятия.ИдМероприятия = Выборка.ИдМероприятия;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЗаписатьИзменения Тогда
			
			ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
			
		КонецЕсли;
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИменаФайлов(СсылкаНаДокумент)
	
	ФайлыСТДР = Новый Соответствие;
	ДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаДокумент, "Дата");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Организация КАК Организация
		|ИЗ
		|	Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.Мероприятия КАК СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия
		|ГДЕ
		|	СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Ссылка = &Ссылка
		|	И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	Организации = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация");
	ДанныеОрганизаций = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(Организации, "РегистрационныйНомерПФР, РегистрационныйНомерСФР");
	
	Для Каждого Организация Из Организации Цикл
		
		ДанныеОрганизации = ДанныеОрганизаций.Получить(Организация);
		
		Если ЗарплатаКадры.ИспользованиеРегистрационногоНомераСФР(ДанныеДокумента.Дата, Организация)
					И ЗначениеЗаполнено(ДанныеОрганизации.РегистрационныйНомерСФР) Тогда
					
			РегистрационныйНомер = ДанныеОрганизации.РегистрационныйНомерСФР;
		ИначеЕсли ЗначениеЗаполнено(ДанныеОрганизации.РегистрационныйНомерПФР) Тогда
			РегистрационныйНомер = ДанныеОрганизации.РегистрационныйНомерПФР;
		Иначе
			РегистрационныйНомер = Строка(Организация.УникальныйИдентификатор());
		КонецЕсли;
		
		
		ФайлыСТДР.Вставить(
			ИмяФайла(РегистрационныйНомер,
			ДанныеДокумента.Дата,
			СсылкаНаДокумент.УникальныйИдентификатор()), Организация);
		
	КонецЦикла;
	
	Возврат ФайлыСТДР;
	
КонецФункции

Функция ИмяФайла(РегистрационныйНомерПФР, Дата, Идентификатор)
	
	Возврат "ПФР"
			+ "_" + ?(ЗначениеЗаполнено(РегистрационныйНомерПФР), РегистрационныйНомерПФР, "")
			+ "_СТД-Р"
			+ "_" + Формат(Дата, "ДФ=ггггММдд")
			+ "_" + Идентификатор;
	
КонецФункции

Функция ВыборкаПоДокументам(МассивОбъектов)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.Ссылка КАК Ссылка,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.Дата КАК Дата,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.Организация КАК Организация,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.Фамилия КАК Фамилия,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.Имя КАК Имя,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.Отчество КАК Отчество,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.ДатаРождения КАК ДатаРождения,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.ЗаявлениеОПродолженииДата КАК ЗаявлениеОПродолженииДата,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.ЗаявлениеОПредоставленииДата КАК ЗаявлениеОПредоставленииДата,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.РуководительКадровойСлужбы КАК РуководительКадровойСлужбы,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.ДолжностьРуководителяКадровойСлужбы КАК ДолжностьРуководителяКадровойСлужбы,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.ОснованиеПодписиРуководителяКадровойСлужбы КАК ОснованиеПодписиРуководителяКадровойСлужбы
		|ПОМЕСТИТЬ ВТДанныеДокумента
		|ИЗ
		|	Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р КАК СведенияОТрудовойДеятельностиРаботникаСТД_Р
		|ГДЕ
		|	СведенияОТрудовойДеятельностиРаботникаСТД_Р.Ссылка В(&МассивОбъектов)";
	
	Запрос.Выполнить();
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Истина, "РуководительКадровойСлужбы", "ВТДанныеДокумента");
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МероприятияСТД_Р.Ссылка КАК Ссылка,
		|	МероприятияСТД_Р.Организация КАК Организация,
		|	МероприятияСТД_Р.ИдМероприятия КАК ИдМероприятия,
		|	МероприятияСТД_Р.Отменено КАК Отменено
		|ПОМЕСТИТЬ ВТМероприятияДокумента
		|ИЗ
		|	Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.Мероприятия КАК МероприятияСТД_Р
		|ГДЕ
		|	МероприятияСТД_Р.Ссылка В(&МассивОбъектов)";
	
	Запрос.Выполнить();
	
	ЗапросДанныхМероприятий = ЗапросВТДанныеМероприятий();
	ЗапросДанныхМероприятий.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросДанныхМероприятий.Выполнить();
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеМероприятий.Организация КАК Организация,
		|	ДанныеДокумента.Дата КАК Период
		|ПОМЕСТИТЬ ВТОрганизации
		|ИЗ
		|	ВТДанныеМероприятий КАК ДанныеМероприятий
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеДокумента КАК ДанныеДокумента
		|		ПО (ДанныеДокумента.Ссылка = ДанныеДокумента.Ссылка)";
	
	Запрос.Выполнить();
	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоВременнойТаблице(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	0 КАК НомерСтрокиСотрудника,
		|	ДанныеДокумента.Ссылка КАК Ссылка,
		|	МероприятияСТД_Р.НомерСтроки КАК НомерСтроки,
		|	ДанныеМероприятий.ИдМероприятия КАК ИдМероприятия,
		|	ДанныеМероприятий.ДатаМероприятия КАК ДатаМероприятия,
		|	ДанныеМероприятий.ВидМероприятия КАК ВидМероприятия,
		|	ДанныеМероприятий.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	ДанныеМероприятий.Подразделение КАК Подразделение,
		|	ДанныеМероприятий.Должность КАК Должность,
		|	ДанныеМероприятий.РазрядКатегория КАК РазрядКатегория,
		|	ДанныеМероприятий.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	ДанныеМероприятий.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	ДанныеМероприятий.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	ДанныеМероприятий.СерияДокументаОснования КАК СерияДокументаОснования,
		|	ДанныеМероприятий.НомерДокументаОснования КАК НомерДокументаОснования,
		|	ДанныеМероприятий.НаименованиеВторогоДокументаОснования КАК НаименованиеВторогоДокументаОснования,
		|	ДанныеМероприятий.ДатаВторогоДокументаОснования КАК ДатаВторогоДокументаОснования,
		|	ДанныеМероприятий.СерияВторогоДокументаОснования КАК СерияВторогоДокументаОснования,
		|	ДанныеМероприятий.НомерВторогоДокументаОснования КАК НомерВторогоДокументаОснования,
		|	ДанныеМероприятий.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	ДанныеМероприятий.ДатаС КАК ДатаС,
		|	ДанныеМероприятий.ДатаПо КАК ДатаПо,
		|	ДанныеМероприятий.ДатаОтмены КАК ДатаОтмены,
		|	ДанныеДокумента.Дата КАК Дата,
		|	ДанныеМероприятий.Организация КАК Организация,
		|	ДанныеДокумента.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДанныеДокумента.Фамилия КАК Фамилия,
		|	ДанныеДокумента.Имя КАК Имя,
		|	ДанныеДокумента.Отчество КАК Отчество,
		|	ДанныеДокумента.ДатаРождения КАК ДатаРождения,
		|	ДанныеДокумента.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	ДанныеДокумента.ЗаявлениеОПродолженииДата КАК ЗаявлениеОПродолженииДата,
		|	ДанныеДокумента.ЗаявлениеОПредоставленииДата КАК ЗаявлениеОПредоставленииДата,
		|	ДанныеДокумента.РуководительКадровойСлужбы КАК РуководительКадровойСлужбы,
		|	ДанныеДокумента.ДолжностьРуководителяКадровойСлужбы КАК ДолжностьРуководителяКадровойСлужбы,
		|	ДанныеДокумента.ОснованиеПодписиРуководителяКадровойСлужбы КАК ОснованиеПодписиРуководителяКадровойСлужбы,
		|	ФИООтветственныхЛиц.ФИОПолные КАК РуководительКадровойСлужбыФИОПолные,
		|	ФИООтветственныхЛиц.РасшифровкаПодписи КАК РуководительКадровойСлужбыРасшифровкаПодписи,
		|	ФИООтветственныхЛиц.Фамилия КАК РуководительКадровойСлужбыФамилия,
		|	ФИООтветственныхЛиц.Имя КАК РуководительКадровойСлужбыИмя,
		|	ФИООтветственныхЛиц.Отчество КАК РуководительКадровойСлужбыОтчество,
		|	СведенияОбОрганизациях.НаименованиеСокращенное КАК ОрганизацияНаименованиеСокращенное,
		|	СведенияОбОрганизациях.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	СведенияОбОрганизациях.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
		|	СведенияОбОрганизациях.РегистрационныйНомерСФР КАК РегистрационныйНомерСФР,
		|	СведенияОбОрганизациях.ИНН КАК ИНН,
		|	СведенияОбОрганизациях.КПП КАК КПП,
		|	ВЫБОР
		|		КОГДА МероприятияСТД_Р.Отменено
		|			ТОГДА ""Х""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ПризнакОтмены,
		|	ДанныеМероприятий.ТрудоваяФункция КАК ТрудоваяФункция,
		|	ДанныеМероприятий.ТрудоваяФункцияОписание КАК ТрудоваяФункцияОписание,
		|	ДанныеМероприятий.ТрудоваяФункцияКод КАК ТрудоваяФункцияКод,
		|	ДанныеМероприятий.Сведения КАК Сведения,
		|	ДанныеМероприятий.ПредставлениеДолжности КАК ПредставлениеДолжности,
		|	ДанныеМероприятий.ПредставлениеПодразделения КАК ПредставлениеПодразделения,
		|	ДанныеМероприятий.ОснованиеУвольненияТекстОснования КАК ОснованиеУвольненияТекстОснования,
		|	ДанныеМероприятий.ОснованиеУвольненияСтатья КАК ОснованиеУвольненияСтатья,
		|	ДанныеМероприятий.ОснованиеУвольненияЧасть КАК ОснованиеУвольненияЧасть,
		|	ДанныеМероприятий.ОснованиеУвольненияПункт КАК ОснованиеУвольненияПункт,
		|	ДанныеМероприятий.ОснованиеУвольненияПодпункт КАК ОснованиеУвольненияПодпункт,
		|	ДанныеМероприятий.ОснованиеУвольненияАбзац КАК ОснованиеУвольненияАбзац,
		|	ДанныеМероприятий.КодПоОКЗ КАК КодПоОКЗ,
		|	ДанныеМероприятий.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
		|	ДанныеМероприятий.ПричинаУвольненияПФР КАК ПричинаУвольненияПФР,
		|	ДанныеМероприятий.СрочностьТрудовогоДоговора КАК СрочностьТрудовогоДоговора,
		|	ДанныеМероприятий.УдаленностьРаботы КАК УдаленностьРаботы,
		|	ДанныеМероприятий.СокращенностьГрафика КАК СокращенностьГрафика,
		|	ДанныеМероприятий.ОписаниеДолжности КАК ОписаниеДолжности,
		|	ДанныеМероприятий.Передано КАК Передано
		|ИЗ
		|	ВТДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.Мероприятия КАК МероприятияСТД_Р
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеМероприятий КАК ДанныеМероприятий
		|			ПО МероприятияСТД_Р.Организация = ДанныеМероприятий.Организация
		|				И МероприятияСТД_Р.ИдМероприятия = ДанныеМероприятий.ИдМероприятия
		|				И МероприятияСТД_Р.Отменено = ДанныеМероприятий.Отменено
		|		ПО ДанныеДокумента.Ссылка = МероприятияСТД_Р.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
		|		ПО (ДанныеМероприятий.Организация = СведенияОбОрганизациях.Организация)
		|			И ДанныеДокумента.Дата = СведенияОбОрганизациях.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИООтветственныхЛиц
		|		ПО ДанныеДокумента.РуководительКадровойСлужбы = ФИООтветственныхЛиц.ФизическоеЛицо
		|			И ДанныеДокумента.Дата = ФИООтветственныхЛиц.Дата
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтрокиСотрудника,
		|	Организация,
		|	НомерСтроки";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ДанныеВыходногоФайла(ВыборкаПоДокументу, СсылкаНаДокумент, ИмяФайлаДляПФР, Организация)
	
	// Загружаем формат файла сведений
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР_ЭТК_2019XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	ФорматСТД_Р = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СТД_Р");
	
	НаборЗаписейЗЛ = ОбщегоНазначения.СкопироватьРекурсивно(ФорматСТД_Р.ЗЛ);
	ФорматСТД_Р.Удалить("ЗЛ");
	
	НаборЗаписейРаботодатель = ОбщегоНазначения.СкопироватьРекурсивно(ФорматСТД_Р.Работодатель);
	ФорматСТД_Р.Удалить("Работодатель");
	
	НаборЗаписейЗаявления = ОбщегоНазначения.СкопироватьРекурсивно(ФорматСТД_Р.Заявления);
	ФорматСТД_Р.Удалить("Заявления");
	
	ФорматМероприятие = ОбщегоНазначения.СкопироватьРекурсивно(ФорматСТД_Р.Мероприятие.Значение);
	ФорматСТД_Р.Удалить("Мероприятие");
	
	НаборЗаписейУполномоченноеЛицо = Новый Структура("УполномоченноеЛицо", ОбщегоНазначения.СкопироватьРекурсивно(ФорматСТД_Р.УполномоченноеЛицо));
	ФорматСТД_Р.Удалить("УполномоченноеЛицо");
	
	НаборЗаписейДатаФормирования = Новый Структура("ДатаФормирования", ОбщегоНазначения.СкопироватьРекурсивно(ФорматСТД_Р.ДатаФормирования));
	ФорматСТД_Р.Удалить("ДатаФормирования");
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	
	ВыборкаПоДокументу.Сбросить();
	Пока ВыборкаПоДокументу.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если ВыборкаПоДокументу.Ссылка <> СсылкаНаДокумент Тогда
			Продолжить;
		КонецЕсли;
		
		Пока ВыборкаПоДокументу.СледующийПоЗначениюПоля("Организация") Цикл
			
			Если ВыборкаПоДокументу.Организация <> Организация Тогда
				Продолжить;
			КонецЕсли;
			
			Атрибуты = Новый Соответствие;
			Атрибуты.Вставить("xmlns", "http://пф.рф/СЗВ-ТД/2019-12-20");
			Атрибуты.Вставить("xmlns:УТ2", "http://пф.рф/УТ/2017-08-21");
			Атрибуты.Вставить("xmlns:АФ5", "http://пф.рф/АФ/2018-12-07");
			УзелПФР = ЗарплатаКадры.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ЭДПФР", "", Атрибуты);
			
			УзелФормы = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПФР, "СТД-Р", "");
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелФормы, ФорматСТД_Р);
			
			// Данные по сотруднику
			Фамилия = СокрЛП(ВыборкаПоДокументу.Фамилия);
			Имя = СокрЛП(ВыборкаПоДокументу.Имя);
			Отчество = СокрЛП(ВыборкаПоДокументу.Отчество);
			
			НаборЗаписейФИО = НаборЗаписейЗЛ.Значение.УТ2__ФИО.Значение;
			НаборЗаписейФИО.УТ2__Фамилия = ВРег(Фамилия);
			НаборЗаписейФИО.УТ2__Имя = ВРег(Имя);
			НаборЗаписейФИО.УТ2__Отчество = ВРег(Отчество);
			
			ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейЗЛ.Значение.УТ2__ФИО, "УТ2__Отчество");
			
			НаборЗаписейЗЛ.Значение.УТ2__ДатаРождения.Значение = Формат(ВыборкаПоДокументу.ДатаРождения, "ДФ=yyyy-MM-dd");
			
			НаборЗаписейЗЛ.Значение.УТ2__СНИЛС.Значение = ВыборкаПоДокументу.СтраховойНомерПФР;
			
			УзелСотрудника = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелФормы, "ЗЛ", "");
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСотрудника, НаборЗаписейЗЛ.Значение);
			
			// Данные формы и страхователя
			НаименованиеОрганизации = СокрЛП(ВРег(ВыборкаПоДокументу.ОрганизацияНаименованиеПолное));
			ПерсонифицированныйУчет.УдалитьПробелыРядомСДефисом(НаименованиеОрганизации);
			
			НаборЗаписейРаботодатель.Значение.НаименованиеОрганизации.Значение = НаименованиеОрганизации;
			Если ЗарплатаКадры.ИспользованиеРегистрационногоНомераСФР(ВыборкаПоДокументу.Дата, ВыборкаПоДокументу.Организация)
				И ЗначениеЗаполнено(ВыборкаПоДокументу.РегистрационныйНомерСФР) Тогда
				
				НаборЗаписейРаботодатель.Значение.УТ2__РегНомер.Значение = ВыборкаПоДокументу.РегистрационныйНомерСФР;
			Иначе
				НаборЗаписейРаботодатель.Значение.УТ2__РегНомер.Значение = ВыборкаПоДокументу.РегистрационныйНомерПФР;
			КонецЕсли;
			
			НаборЗаписейРаботодатель.Значение.УТ2__ИНН.Значение = ВыборкаПоДокументу.ИНН;
			Если ЗначениеЗаполнено(ВыборкаПоДокументу.КПП) Тогда
				НаборЗаписейРаботодатель.Значение.УТ2__КПП.Значение = ВыборкаПоДокументу.КПП;
			Иначе
				НаборЗаписейРаботодатель.Значение.Удалить("УТ2__КПП");
			КонецЕсли;
			
			УзелРаботодателя = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелФормы, "Работодатель", "");
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелРаботодателя, НаборЗаписейРаботодатель.Значение);
			
			// Заявления о выборе способа ведения трудовой книжки
			Если ЗначениеЗаполнено(ВыборкаПоДокументу.ЗаявлениеОПродолженииДата) Тогда
				НаборЗаписейЗаявления.Значение.ДатаПродолжение.Значение =
					Формат(ВыборкаПоДокументу.ЗаявлениеОПродолженииДата, "ДФ=yyyy-MM-dd");
			Иначе
				НаборЗаписейЗаявления.Значение.ДатаПродолжение.НеВыводитьВФайл = Истина;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаПоДокументу.ЗаявлениеОПредоставленииДата) Тогда
				НаборЗаписейЗаявления.Значение.ДатаПредоставления.Значение =
					Формат(ВыборкаПоДокументу.ЗаявлениеОПредоставленииДата, "ДФ=yyyy-MM-dd");
			Иначе
				НаборЗаписейЗаявления.Значение.ДатаПредоставления.НеВыводитьВФайл = Истина;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаПоДокументу.ЗаявлениеОПродолженииДата) 
				Или  ЗначениеЗаполнено(ВыборкаПоДокументу.ЗаявлениеОПредоставленииДата) Тогда
				
				УзелСотрудника = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелФормы, "Заявления", "");
				ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСотрудника, НаборЗаписейЗаявления.Значение);
				
			КонецЕсли;
			
			// Мероприятия трудовой деятельности
			Мероприятия = Новый Массив;
			Пока ВыборкаПоДокументу.Следующий() Цикл
				
				Если Не ЗначениеЗаполнено(ВыборкаПоДокументу.ВидМероприятия) Тогда
					Продолжить;
				КонецЕсли;
				
				НаборЗаписейМероприятие = ОбщегоНазначения.СкопироватьРекурсивно(ФорматМероприятие);
				НаборЗаписейМероприятие.UUID.Значение = Строка(ВыборкаПоДокументу.ИдМероприятия);
				НаборЗаписейМероприятие.Дата.Значение = Формат(ВыборкаПоДокументу.ДатаМероприятия, "ДФ=yyyy-MM-dd");
				НаборЗаписейМероприятие.Вид.Значение = Перечисления.ВидыМероприятийТрудовойДеятельности.Код(ВыборкаПоДокументу.ВидМероприятия);
				
				НаборЗаписейМероприятие.Сведения.Значение = СокрЛП(ВыборкаПоДокументу.Сведения);
				
				Если ВыборкаПоДокументу.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.УстановлениеВторойПрофессии
					И ЗначениеЗаполнено(ВыборкаПоДокументу.ОписаниеДолжности) Тогда
					
					НаборЗаписейМероприятие.Должность.Значение = СокрЛП(ВыборкаПоДокументу.ОписаниеДолжности);
					
				Иначе
					
					НаборЗаписейМероприятие.Должность.Значение = СокрЛП(ВыборкаПоДокументу.ПредставлениеДолжности) 
						+ ?(ЗначениеЗаполнено(ВыборкаПоДокументу.КодПоРееструДолжностей), ", " + СокрЛП(ВыборкаПоДокументу.КодПоРееструДолжностей), "")
						+ ?(ЗначениеЗаполнено(ВыборкаПоДокументу.РазрядКатегория), ", " + ЭлектронныеТрудовыеКнижкиПовтИсп.ПредставлениеРазрядаКатегории(
						ВыборкаПоДокументу.РазрядКатегория), "");
					
				КонецЕсли;
				
				НаборЗаписейМероприятие.ЯвляетсяСовместителем.Значение = ?(ВыборкаПоДокументу.ЯвляетсяСовместителем, "1", "0");
				
				НаборЗаписейМероприятие.СтруктурноеПодразделение.Значение = СокрЛП(ВыборкаПоДокументу.ПредставлениеПодразделения);
				
				НаборЗаписейМероприятие.ВидПР.Значение = СокрЛП(ВыборкаПоДокументу.ТрудоваяФункцияОписание);
				НаборЗаписейМероприятие.КодВФ.Значение = СокрЛП(ВыборкаПоДокументу.ТрудоваяФункцияКод);
				
				НаборЗаписейМероприятие.ДатаС.Значение = Формат(ВыборкаПоДокументу.ДатаС, "ДФ=yyyy-MM-dd");
				НаборЗаписейМероприятие.ДатаПо.Значение = Формат(ВыборкаПоДокументу.ДатаПо, "ДФ=yyyy-MM-dd");
				
				Если ВыборкаПоДокументу.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Увольнение Тогда
					
					НаборЗаписейМероприятие.Причина.Значение = СокрЛП(ВыборкаПоДокументу.ОснованиеУвольненияТекстОснования);
					
					НаборЗаписейМероприятие.ОснованиеУвольнения.Значение.УТ2__НормативныйДокумент = КадровыйУчет.НормативныйДокументОснованияУвольнения(ВыборкаПоДокументу.ОснованиеУвольнения);
					НаборЗаписейМероприятие.ОснованиеУвольнения.Значение.УТ2__Статья = ВыборкаПоДокументу.ОснованиеУвольненияСтатья;
					НаборЗаписейМероприятие.ОснованиеУвольнения.Значение.УТ2__Часть = ВыборкаПоДокументу.ОснованиеУвольненияЧасть;
					НаборЗаписейМероприятие.ОснованиеУвольнения.Значение.УТ2__Пункт = ВыборкаПоДокументу.ОснованиеУвольненияПункт;
					НаборЗаписейМероприятие.ОснованиеУвольнения.Значение.УТ2__Подпункт = ВыборкаПоДокументу.ОснованиеУвольненияПодпункт;
					ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейМероприятие.ОснованиеУвольнения, "УТ2__НормативныйДокумент");
					ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейМероприятие.ОснованиеУвольнения, "УТ2__Статья");
					ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейМероприятие.ОснованиеУвольнения, "УТ2__Часть");
					ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейМероприятие.ОснованиеУвольнения, "УТ2__Пункт");
					ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейМероприятие.ОснованиеУвольнения, "УТ2__Подпункт");
				Иначе 
					НаборЗаписейМероприятие.ОснованиеУвольнения.НеВыводитьВФайл = Истина;
				КонецЕсли;
				
				НаборЗаписейОснование = НаборЗаписейМероприятие.Основание.Значение;
				НаборЗаписейОснование.Наименование.Значение = СокрЛП(ВыборкаПоДокументу.НаименованиеДокументаОснования);
				НаборЗаписейОснование.Дата.Значение = Формат(ВыборкаПоДокументу.ДатаДокументаОснования, "ДФ=yyyy-MM-dd");;
				НаборЗаписейОснование.Номер.Значение = СокрЛП(ВыборкаПоДокументу.НомерДокументаОснования);
				НаборЗаписейОснование.Серия.Значение = СокрЛП(ВыборкаПоДокументу.СерияДокументаОснования);
				
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.Сведения, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.Должность, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.СтруктурноеПодразделение, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.ВидПР, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.КодВФ, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.Причина, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.ДатаС, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.ДатаПо, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейОснование.Серия, "Значение");
				
				Мероприятия.Добавить(НаборЗаписейМероприятие);
				
			КонецЦикла;
			
			Для Каждого НаборЗаписейМероприятие Из Мероприятия Цикл 
				УзелМероприятие = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелФормы, "Мероприятие", "");
				ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелМероприятие, НаборЗаписейМероприятие);
			КонецЦикла;
			
			// Уполномоченное лицо
			НаборЗаписейУполномоченноеЛицо.УполномоченноеЛицо.Значение.УТ2__Должность.Значение = СокрЛП(ВРег(ВыборкаПоДокументу.ДолжностьРуководителяКадровойСлужбы));
			НаборЗаписейФИО = НаборЗаписейУполномоченноеЛицо.УполномоченноеЛицо.Значение.УТ2__ФИО.Значение;
			НаборЗаписейФИО.УТ2__Фамилия = СокрЛП(ВРег(ВыборкаПоДокументу.РуководительКадровойСлужбыФамилия));
			НаборЗаписейФИО.УТ2__Имя = СокрЛП(ВРег(ВыборкаПоДокументу.РуководительКадровойСлужбыИмя));
			НаборЗаписейФИО.УТ2__Отчество = СокрЛП(ВРег(ВыборкаПоДокументу.РуководительКадровойСлужбыОтчество));
			ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейУполномоченноеЛицо.УполномоченноеЛицо.Значение.УТ2__ФИО, "УТ2__Отчество");
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелФормы, НаборЗаписейУполномоченноеЛицо);
			
			// Дата формирования
			НаборЗаписейДатаФормирования.ДатаФормирования.Значение = Формат(ВыборкаПоДокументу.Дата, "ДФ=yyyy-MM-dd");
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелФормы, НаборЗаписейДатаФормирования);
			
			// Служебная информация о файле
			НаборЗаписейСлужебнаяИнформация = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СлужебнаяИнформация");
			
			Если ЗначениеЗаполнено(ИмяФайлаДляПФР) Тогда
				ЧастиИмениФайла = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СокрЛП(ИмяФайлаДляПФР),"_");
				НаборЗаписейСлужебнаяИнформация.АФ5__GUID.Значение = ЧастиИмениФайла[ЧастиИмениФайла.ВГраница()];
			КонецЕсли;
			НаборЗаписейСлужебнаяИнформация.АФ5__ДатаВремя.Значение = ПерсонифицированныйУчет.ПредставлениеДатыВФорматеdateTimeСЧасовымПоясом(ВыборкаПоДокументу.Дата);
			ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПФР, "СлужебнаяИнформация",""), НаборЗаписейСлужебнаяИнформация);
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Преобразуем дерево в строковое описание XML
	ПотокВыгрузкиXML = ЗарплатаКадры.СоздатьПотокXML(, "UTF-8");
	ЗарплатаКадры.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML, "xsi", "http://www.w3.org/2001/XMLSchema", Ложь);
	ТекстФайла = ЗарплатаКадры.ЗаписатьПотокXML(ПотокВыгрузкиXML);
	
	Возврат СтрЗаменить(ТекстФайла, "__", ":");
	
КонецФункции

Функция ДанныеФайловСТДР(СсылкаНаДокумент, ИдентификаторХранилища) Экспорт
	
	ВыборкаПоДокументу = ВыборкаПоДокументам(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СсылкаНаДокумент));
	
	ДанныеФайлов = Новый Массив;
	ИменаФайловСТДР = ИменаФайлов(СсылкаНаДокумент);
	
	ФайлыСТДР = ПрисоединенныеФайлыСТДР(СсылкаНаДокумент, ИменаФайловСТДР);
	Для Каждого ИмяФайлаСТДРОрганизации Из ИменаФайловСТДР Цикл
		
		ИмяФайлаСТДР = ИмяФайлаСТДРОрганизации.Ключ;
		Организация = ИмяФайлаСТДРОрганизации.Значение;
		
		ДанныеФайла = Новый Структура("ИмяФайла, Организация, Ссылка, Данные, Хранение");
		ДанныеФайла.ИмяФайла = Строка(ИмяФайлаСТДР);
		ДанныеФайла.Организация = Организация;
		
		ФайлСТДР = ФайлыСТДР.Получить(ДанныеФайла.ИмяФайла);
		Если ФайлСТДР <> Неопределено Тогда
			ДанныеФайла.Ссылка = ФайлСТДР;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДанныеФайла.Ссылка) Тогда
			
			ДанныеФайла.Данные = ДанныеВыходногоФайла(ВыборкаПоДокументу, СсылкаНаДокумент, ДанныеФайла.ИмяФайла, ДанныеФайла.Организация);
			
			ПолноеИмяФайла = ПолучитьИмяВременногоФайла("XML");
			
			Поток = Новый ФайловыйПоток(ПолноеИмяФайла, РежимОткрытияФайла.СоздатьНовый);
			ЗаписьТекста = Новый ЗаписьТекста(Поток, "UTF-8", , , Ложь);
			ЗаписьТекста.Записать(ДанныеФайла.Данные);
			ЗаписьТекста.Закрыть();
			Поток.Закрыть();
			
			ДанныеФайла.Хранение = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПолноеИмяФайла), ИдентификаторХранилища);
			УдалитьФайлы(ПолноеИмяФайла);
			
		Иначе
			ДанныеФайла.Хранение = ПоместитьВоВременноеХранилище(РаботаСФайлами.ДвоичныеДанныеФайла(ДанныеФайла.Ссылка), ИдентификаторХранилища);
		КонецЕсли;
		
		ДанныеФайлов.Добавить(ДанныеФайла);
		
	КонецЦикла;
	
	Возврат ДанныеФайлов;
	
КонецФункции

Функция ПрисоединенныеФайлыСТДР(СсылкаНаДокумент, ИменаФайловСТДР = Неопределено) Экспорт
	
	ФайлыСТДР = Новый Соответствие;
	
	Если ИменаФайловСТДР = Неопределено Тогда
		ИменаФайловСТДР = ИменаФайлов(СсылкаНаДокумент);
	КонецЕсли;
	
	ФайлыДокумента = Новый Массив;
	РаботаСФайлами.ЗаполнитьПрисоединенныеФайлыКОбъекту(СсылкаНаДокумент, ФайлыДокумента);
	Если ФайлыДокумента.Количество() > 0 Тогда
		
		ЗначенияРеквизитовФайлов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ФайлыДокумента, "Наименование,ПометкаУдаления");
		Для Каждого ЗначенияРеквизитовФайла Из ЗначенияРеквизитовФайлов Цикл
			
			Если ЗначенияРеквизитовФайла.Значение.ПометкаУдаления Тогда
				Продолжить;
			КонецЕсли;
			
			Если ИменаФайловСТДР.Получить(ЗначенияРеквизитовФайла.Значение.Наименование) <> Неопределено Тогда
				ФайлыСТДР.Вставить(ЗначенияРеквизитовФайла.Значение.Наименование, ЗначенияРеквизитовФайла.Ключ);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ФайлыСТДР;
	
КонецФункции

Процедура ЗаполнитьОрганизацииМероприятий(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Ссылка КАК Ссылка,
		|	СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Ссылка.Организация КАК Организация
		|ИЗ
		|	Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р.Мероприятия КАК СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия
		|ГДЕ
		|	СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Ссылка.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	И СведенияОТрудовойДеятельностиРаботникаСТД_РМероприятия.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Пока Выборка.Следующий() Цикл
		
		МассивОбновленных.Добавить(Выборка.Ссылка);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.СведенияОТрудовойДеятельностиРаботникаСТД_Р", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Для Каждого СтрокаМероприятия Из ДокументОбъект.Мероприятия Цикл
			СтрокаМероприятия.Организация = Выборка.Организация;
		КонецЦикла;
		
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
