
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ГруппаЗаменитьНаАналоги.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьАналогиМатериалов");
	
	СписокДействий = Новый СписокЗначений;
	СписокДействий.Добавить("ДЕЙСТВИЕ_ОТГРУЗИТЬ_ПРИОРИТЕТНО_ОБОСОБЛЕННО", ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Отгрузить"));
	СписокДействий.Добавить("ДЕЙСТВИЕ_РЕЗЕРВИРОВАТЬ_ПРИОРИТЕТНО_ОБОСОБЛЕННО", ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.СоСклада"));
	КодДействияПоУмолчанию = "ДЕЙСТВИЕ_ОТГРУЗИТЬ_ПРИОРИТЕТНО_ОБОСОБЛЕННО"; 
	
	АвтоЗаголовок = НЕ Параметры.Свойство("ЗаголовокФормы", Заголовок);
	
	Параметры.Свойство("Организация", Организация);
	Параметры.Свойство("Подразделение", Подразделение);
	
	НуженВыборИсполнителя = Ложь;
	Если Не Параметры.Свойство("НуженВыборИсполнителя", НуженВыборИсполнителя) Тогда
		Если ЗначениеЗаполнено(Подразделение) Тогда
			НуженВыборИсполнителя = Не ПроизводствоСерверПовтИсп.ПараметрыПроизводственногоПодразделения(Подразделение).ИспользоватьПооперационноеУправление;
		Иначе
			НуженВыборИсполнителя = Истина;
		КонецЕсли;
	КонецЕсли;
	НазначитьИсполнителя = НуженВыборИсполнителя И Параметры.Свойство("ТекущийИсполнитель", Исполнитель) И ЗначениеЗаполнено(Исполнитель);
	Элементы.ГруппаТрудозатраты.Видимость = НуженВыборИсполнителя;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ЗаполнитьОбеспечение = Истина;
	
	Если СписокДействий.НайтиПоЗначению(Настройки["КодДействия"]) = Неопределено Тогда
		КодДействия = КодДействияПоУмолчанию;
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект);
	
КонецПроцедуры
  
&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НазначитьИсполнителя И Не ЗначениеЗаполнено(Исполнитель) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не заполнен исполнитель';
													|en = 'Assignee is required.'"),, "Исполнитель",, Отказ);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
 
&НаКлиенте
Процедура ЗаполнитьОбеспечениеПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(КодДействия) Тогда
		КодДействия = КодДействияПоУмолчанию;
	КонецЕсли;

	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "ЗаполнитьОбеспечение");
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ГиперссылкаТекущееДействиеНажатие(Элемент)
	
	Ответ = Ждать ВыбратьИзСпискаАсинх(СписокДействий, Элементы.ГиперссылкаТекущееДействие);
	
	Если ТипЗнч(Ответ) = Тип("ЭлементСпискаЗначений") Тогда
	 	КодДействия = Ответ.Значение;
		НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "ТекущееДействие"); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьИсполнителяПриИзменении(Элемент) 
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "НазначитьИсполнителя");
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "НазначитьИсполнителя");

КонецПроцедуры

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ИсполнительНачалоВыбораЗавершение", ЭтотОбъект);
	ПроизводствоКлиент.ОткрытьФормуВыбораИсполнителя(
		Организация,
		Подразделение,
		Исполнитель,,, 
		ОписаниеОповещения);

КонецПроцедуры
 
&НаКлиенте
Процедура ИсполнительНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Исполнитель = Результат;
	
	Если НЕ НазначитьИсполнителя И ЗначениеЗаполнено(Исполнитель) Тогда
		НазначитьИсполнителя = Истина;
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "НазначитьИсполнителя");
	
КонецПроцедуры
 
&НаКлиенте
Процедура ВозможнаОшибкаВыбораИсполнителяНажатие(Элемент)

	ПоказатьПредупреждение(, Элемент.Подсказка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(ПараметрыДействия());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
  
&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормы(Форма, СписокРеквизитов = "")
	
	Элементы = Форма.Элементы;
	
	Инициализация = ПустаяСтрока(СписокРеквизитов);
	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);
	
	Если СтруктураРеквизитов.Свойство("ТекущееДействие")
		ИЛИ Инициализация Тогда
		Элементы.ГиперссылкаТекущееДействие.Заголовок = Форма.СписокДействий.НайтиПоЗначению(Форма.КодДействия).Представление;
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("ЗаполнитьОбеспечение")
		ИЛИ Инициализация Тогда
		Элементы.ГруппаЗаполнитьОбеспечениеДетали.Доступность = Форма.ЗаполнитьОбеспечение;
		Элементы.ГруппаЗаменитьНаАналоги.Доступность          = Форма.ЗаполнитьОбеспечение;
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("НазначитьИсполнителя")
		ИЛИ Инициализация Тогда
		
		// Исполнитель
		
		Элементы.Исполнитель.АвтоОтметкаНезаполненного = Форма.НазначитьИсполнителя;
		Элементы.Исполнитель.ОтметкаНезаполненного = Форма.НазначитьИсполнителя;
		
		Элементы.Исполнитель.ЦветТекста = ?(Форма.НазначитьИсполнителя Или Не ЗначениеЗаполнено(Форма.Исполнитель),
														Новый Цвет(), WebЦвета.ТемноСерый);
		Элементы.Исполнитель.ЦветТекстаЗаголовка = ?(Форма.НазначитьИсполнителя, 
														Новый Цвет(),  WebЦвета.ТемноСерый); 
		// Подразделение
		
		Элементы.Подразделение.Видимость = ЗначениеЗаполнено(Форма.Подразделение);
		Если Элементы.Подразделение.Видимость Тогда
			Если Не Форма.НазначитьИсполнителя Тогда
				Элементы.Подразделение.ЦветТекста = WebЦвета.ТемноСерый;
			Иначе
				ИнформацияОбИсполнителе = ИнформацияОМестеРаботыИсполнителя(
					Форма.Исполнитель, 
					Форма.Подразделение);
				Элементы.ВозможнаОшибкаВыбораИсполнителя.Видимость = НЕ (ИнформацияОбИсполнителе.Подразделение = Форма.Подразделение Или Не ЗначениеЗаполнено(ИнформацияОбИсполнителе.Подразделение));
				Элементы.Подразделение.ЦветТекста = ?((ИнформацияОбИсполнителе.Подразделение = Форма.Подразделение 
															Или Не ЗначениеЗаполнено(ИнформацияОбИсполнителе.Подразделение)), 
														Новый Цвет(), WebЦвета.Красный);
			КонецЕсли;
 		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыДействия()

	КодДействияАналоги = ?(КодДействия = "ДЕЙСТВИЕ_ОТГРУЗИТЬ_ПРИОРИТЕТНО_ОБОСОБЛЕННО",  "ДЕЙСТВИЕ_АНАЛОГИ_ОТГРУЗИТЬ",
		                 ?(КодДействия = "ДЕЙСТВИЕ_РЕЗЕРВИРОВАТЬ_ПРИОРИТЕТНО_ОБОСОБЛЕННО", "ДЕЙСТВИЕ_АНАЛОГИ_РЕЗЕРВИРОВАТЬ",
		                    							""));
	Результат = Новый Структура();
	
	Результат.Вставить("ЗаполнитьОбеспечение", ЗаполнитьОбеспечение);
	Результат.Вставить("КодДействия",          КодДействия);
	Результат.Вставить("ЗаменитьНаАналоги",    ЗаменитьНаАналоги);
	Результат.Вставить("КодДействияАналоги",   КодДействияАналоги);
	Результат.Вставить("НазначитьИсполнителя", НазначитьИсполнителя);
	Результат.Вставить("Исполнитель",          ?(НазначитьИсполнителя, Исполнитель, Неопределено));
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИнформацияОМестеРаботыИсполнителя(Исполнитель, Подразделение)
	
	УстановитьПривилегированныйРежим(Истина);
	ИнформацияОбИсполнителе = УправлениеПроизводством.ИнформацияОМестеРаботыИсполнителя(Исполнитель); 
	УстановитьПривилегированныйРежим(Ложь); 
	
	Возврат ИнформацияОбИсполнителе;
	
КонецФункции

#КонецОбласти

