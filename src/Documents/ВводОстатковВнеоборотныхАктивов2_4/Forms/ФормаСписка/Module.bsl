
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПриСоздании();
	
	#Область СтандартныеМеханизмы
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	#КонецОбласти

	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПриСоздании()

	Список.Параметры.УстановитьЗначениеПараметра("ДатаНачалаУчета", ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4());

	Если ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА() Тогда
		Элементы.СписокОтражатьВОперативномУчете.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		Элементы.СписокОтражатьВБУиНУ.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		Элементы.СписокОтражатьВУУ.Видимость = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
	Иначе
		Элементы.СписокОтражатьВОперативномУчете.Видимость = Ложь;
		Элементы.СписокОтражатьВБУиНУ.Видимость = Ложь;
		Элементы.СписокОтражатьВУУ.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтборыФормыСписка") Тогда
		
		Если Параметры.Свойство("КлючНазначенияФормы")
			И Параметры.КлючНазначенияФормы = "ПомощникПерехода" Тогда
				
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Список,
				"СозданДляПереходаНаВерсию24",
				1,
				ВидСравненияКомпоновкиДанных.Равно,,
				Истина);
				
			АвтоЗаголовок = Ложь;
			Заголовок = НСтр("ru = 'Документы ввода остатков, созданные для перехода на учет внеоборотных активов версии 2.4';
							|en = 'Documents of entering balance created for migration to fixed asset accounting 2.4'");
			
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
