
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Ссылка = Параметры.Ссылка;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СУММА(ЕСТЬNULL(ВЫБОР
		|			КОГДА ПроизводственнаяОперация2_2.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПроизводственныхОпераций.Создана)
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0)) КАК Создана,
		|	СУММА(ЕСТЬNULL(ВЫБОР
		|			КОГДА ПроизводственнаяОперация2_2.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПроизводственныхОпераций.Создана)
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ, 0)) КАК Выполняется
		|ИЗ
		|	Документ.ПроизводственнаяОперация2_2 КАК ПроизводственнаяОперация2_2
		|ГДЕ
		|	ПроизводственнаяОперация2_2.Проведен
		|	И ПроизводственнаяОперация2_2.СменноеЗадание = &СменноеЗадание
		|	И ПроизводственнаяОперация2_2.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПроизводственныхОпераций.Создана), ЗНАЧЕНИЕ(Перечисление.СтатусыПроизводственныхОпераций.Выполняется))");
	Запрос.УстановитьПараметр("СменноеЗадание", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если Выборка.Создана > 0 Тогда
			Элементы.ВСтатусеСоздана.Заголовок = СтрШаблон(
				НСтр("ru = 'Операций в статусе ""Создана"": %1';
					|en = 'Operations in the Created status: %1'"),
				Выборка.Создана);
			СозданаУстановитьСтатус = 1;
		Иначе
			Элементы.ВСтатусеСоздана.Видимость = Ложь;
			Элементы.ГруппаСтатусСоздана.Видимость = Ложь;
		КонецЕсли;
		
		Если Выборка.Выполняется > 0 Тогда
			Элементы.ВСтатусеВыполняется.Заголовок = СтрШаблон(
				НСтр("ru = 'Операций в статусе ""Выполняется"": %1';
					|en = 'Operations in the ""In progress"" status: %1'"),
				Выборка.Выполняется);
		Иначе
			Элементы.ВСтатусеВыполняется.Видимость = Ложь;
			Элементы.ГруппаСтатусВыполняется.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Отказ = Ложь;
	
	Попытка
		
		УстановитьСтатусНаСервере(Отказ);
		
	Исключение
		
		Отказ = Истина;
		
	    ПоказатьПредупреждение(,
			НСтр("ru = 'Операция не может быть выполнена по причине:';
				|en = 'Cannot execute the operation. Reason:'")
			+ Символы.ПС
			+ КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
	Если НЕ Отказ Тогда
		Закрыть(Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьСтатусНаСервере(Отказ)
	
	НачатьТранзакцию();
	Попытка
		
		БлокировкаДанных = Новый БлокировкаДанных;
		
		ЭлементБлокировки = БлокировкаДанных.Добавить("Документ.ПроизводственнаяОперация2_2");
		ЭлементБлокировки.УстановитьЗначение("СменноеЗадание", Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
		БлокировкаДанных.Заблокировать();
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ПроизводственнаяОперация2_2.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ПроизводственнаяОперация2_2 КАК ПроизводственнаяОперация2_2
			|ГДЕ
			|	ПроизводственнаяОперация2_2.Проведен
			|	И ПроизводственнаяОперация2_2.СменноеЗадание = &СменноеЗадание
			|	И ПроизводственнаяОперация2_2.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПроизводственныхОпераций.Создана)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПроизводственнаяОперация2_2.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ПроизводственнаяОперация2_2 КАК ПроизводственнаяОперация2_2
			|ГДЕ
			|	ПроизводственнаяОперация2_2.Проведен
			|	И ПроизводственнаяОперация2_2.СменноеЗадание = &СменноеЗадание
			|	И ПроизводственнаяОперация2_2.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПроизводственныхОпераций.Выполняется)");
		Запрос.УстановитьПараметр("СменноеЗадание", Ссылка);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		Если НЕ МассивРезультатов[0].Пустой() Тогда
			
			Ссылки = МассивРезультатов[0].Выгрузить().ВыгрузитьКолонку("Ссылка");
			
			КоличествоОбработанных = ОбщегоНазначенияУТВызовСервера.УстановитьСтатусДокументов(
				Ссылки,
				?(СозданаУстановитьСтатус = 0, "Выполнена", "НеВыполнена"));
			
			Если КоличествоОбработанных <> Ссылки.Количество() Тогда
				Отказ = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		Если НЕ МассивРезультатов[1].Пустой() Тогда
			
			Ссылки = МассивРезультатов[1].Выгрузить().ВыгрузитьКолонку("Ссылка");
			
			КоличествоОбработанных = ОбщегоНазначенияУТВызовСервера.УстановитьСтатусДокументов(
				Ссылки,
				?(ВыполняетсяУстановитьСтатус = 0, "Выполнена", "НеВыполнена"));
			
			Если КоличествоОбработанных <> Ссылки.Количество() Тогда
				Отказ = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Сменные задания';
				|en = 'Shift tasks'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти
