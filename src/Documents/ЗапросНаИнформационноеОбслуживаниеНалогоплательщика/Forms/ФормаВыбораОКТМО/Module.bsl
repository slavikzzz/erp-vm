
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Свойства = "ТипСверки, ВидУслуги, Организация, КоличествоОКТМО, УИДРодителя";
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, Свойства);
	КоличествоОКТМО = Строка(Параметры.КоличествоОКТМО);
	ТаблицаИзАдресаВРеквизит(Параметры.Адрес);
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ТаблицаИзАдресаВРеквизит(Адрес)

	Таблица = ПолучитьИзВременногоХранилища(Адрес);
	ЗначениеВРеквизитФормы(Таблица, "ПереченьОКТМО");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КоличествоВсеПриИзменении(Элемент)
	
	ПереченьОКТМО.Очистить();
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОдинПриИзменении(Элемент)
	
	ПереченьОКТМО.Очистить();
	ПереченьОКТМО.Добавить();
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоНесколькоПриИзменении(Элемент)
	
	ПереченьОКТМО.Очистить();
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ОКТМОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыбратьИзРегистрации("ОКТМО", "КодПоОКТМО");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)

	Результат = Новый Структура();
	Результат.Вставить("НовоеКоличествоОКТМО", ПредопределенноеЗначение("Перечисление.КоличествоЭлементовДляСверкиИОН." + КоличествоОКТМО));
	Результат.Вставить("Адрес", АдресТаблицы());
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Подобрать(Команда)
	
	ВыбратьИзРегистрации("ОКТМО", "КодПоОКТМО");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеФормой()
	
	ЭтоВсе  = КоличествоОКТМО = НСтр("ru = 'Все';
									|en = 'Все'");
	ЭтоОдин = КоличествоОКТМО = НСтр("ru = 'Один';
									|en = 'Один'");
	ЭтоНесколько = КоличествоОКТМО = НСтр("ru = 'Несколько';
											|en = 'Несколько'");
	
	Элементы.ОКТМО.Видимость = ЭтоОдин;
	
	Если ЭтоНесколько Тогда
		Элементы.СтраницыНесколько.ТекущаяСтраница = Элементы.СтраницаТаблица;
	Иначе
		Элементы.СтраницыНесколько.ТекущаяСтраница = Элементы.СтраницаПустая;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПеренумероватьСтроки(Таблица)
	
	НомерСтроки = 1;
	Для каждого СтрокаТаблицы Из Таблица Цикл
		СтрокаТаблицы.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция АдресТаблицы()

	Таблица = ПереченьОКТМО.Выгрузить();
	Адрес = ПоместитьВоВременноеХранилище(Таблица, УИДРодителя);
	
	Возврат Адрес;

КонецФункции

&НаКлиенте
Процедура ВыбратьИзРегистрации(Имя, ПолеРегистрации)
	
	ЗначениеОтбора = Новый Структура("Владелец", Организация);
	ВходящийКонтекст = Новый Структура("Отбор", ЗначениеОтбора);
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Имя", Имя);
	ДополнительныеПараметры.Вставить("ПолеРегистрации", ПолеРегистрации);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыбратьИзРегистрации_Завершение", 
		ЭтотОбъект, 
		ДополнительныеПараметры);

	ОткрытьФорму("Справочник.РегистрацииВНалоговомОргане.ФормаВыбора", ВходящийКонтекст,,,,,ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзРегистрации_Завершение(Результат, ВходящийКонтекст) Экспорт
	
	ДобавитьВТаблицуИзРегистраций(Результат, ВходящийКонтекст.Имя, ВходящийКонтекст.ПолеРегистрации);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВТаблицуИзРегистраций(Регистрации, Имя, ПолеРегистрации) Экспорт
	
	Если ТипЗнч(Регистрации) = Тип("Массив") Тогда
		
		Для каждого Регистрация Из Регистрации Цикл
		
			ДобавитьВТаблицуИзРегистрации(Регистрация, Имя, ПолеРегистрации);
		
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Регистрации) = Тип("СправочникСсылка.РегистрацииВНалоговомОргане") Тогда
		
		ДобавитьВТаблицуИзРегистрации(Регистрации, Имя, ПолеРегистрации);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВТаблицуИзРегистрации(Регистрация, Имя, ПолеРегистрации) Экспорт
	
	НовоеЗначение = Регистрация[ПолеРегистрации];
	
	Если ЗначениеЗаполнено(НовоеЗначение) Тогда
		
		Если КоличествоОКТМО = "Один" Тогда
			
			// Чтобы 2,3 и т.д. строки в таблицу не добавлялись
			ПереченьОКТМО.Очистить();
			ДобавитьСтрокуТаблицыОКТМО(НовоеЗначение);
			
		Иначе
			Отбор = Новый Структура();
			Отбор.Вставить(Имя, НовоеЗначение);
			
			НайденныеСтроки = ПереченьОКТМО.НайтиСтроки(Отбор);
				
			Если НайденныеСтроки.Количество() = 0 Тогда
				
				ДобавитьСтрокуТаблицыОКТМО(НовоеЗначение);
				
			Иначе
				
				Текст = НСтр("ru = '%1 %2 не добавлено, поскольку уже есть в таблице';
							|en = '%1 %2 не добавлено, поскольку уже есть в таблице'");
				Текст = СтрШаблон(Текст, Имя, НовоеЗначение);
				ОбщегоНазначения.СообщитьПользователю(Текст);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПеренумероватьСтроки(ПереченьОКТМО);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуТаблицыОКТМО(НовоеЗначение)
	
	НоваяСтрока = ПереченьОКТМО.Добавить();
	НоваяСтрока.ОКТМО = НовоеЗначение;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереченьОКТМОПриИзменении(Элемент)
	ПеренумероватьСтроки(ПереченьОКТМО);
КонецПроцедуры


#КонецОбласти
