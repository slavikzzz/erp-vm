#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ШаблонСообщения = НСтр("ru = 'Список ошибок: %1';
							|en = 'List of errors: %1'");
	ТекстСообщения  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Объект.Ссылка);
	ЭтаФорма.Заголовок = ТекстСообщения;
	
	Параметры.Свойство("АдресХранилища", АдресХранилища);
	
	ОбновитьТаблицуОшибок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	// Перечитаем данные
	ОбновитьТаблицуОшибок();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокОшибокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	// Навигационная ссылка
	Если СтрНайти(Строка(Расшифровка),"e1cib") > 0 Тогда
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиент.ОткрытьНавигационнуюСсылку(Расшифровка);
		Возврат;
	КонецЕсли;
	
	// Комплексная расшифровка
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		ОбработатьРасшифровку(Элемент, Расшифровка);
		Возврат;
	КонецЕсли;
	
	// Несколько вариантов расшифровки
	Если ТипЗнч(Расшифровка) = Тип("Массив") Тогда
		СтандартнаяОбработка = Ложь;
		ВыбратьВариантРасшифровки(Элемент, Расшифровка);
		Возврат;
	КонецЕсли;
	
	ОтборОрганизация = Новый Структура;
	ОтборОрганизация.Вставить("Организация", Объект.Организация);
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Отбор", ОтборОрганизация);
	
  // Объект по ссылке открывается по стандартной обработке
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ОбновитьТаблицуОшибок()
	
	ДанныеХранилища = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	Если ТипЗнч(ДанныеХранилища) <> Тип("ХранилищеЗначения") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ОписаниеОшибок = ДанныеХранилища.Получить();
	
	Если ОписаниеОшибок = Неопределено Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	СписокОшибок = ОписаниеОшибок;
	
	СписокОшибок.ОтображатьСетку       = Ложь;
	СписокОшибок.ОтображатьГруппировки = Истина;
	СписокОшибок.АвтоМасштаб           = Истина;
	СписокОшибок.ПоказатьУровеньГруппировокСтрок(СписокОшибок.КоличествоУровнейГруппировокСтрок());
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьВариантРасшифровки(Элемент, Расшифровка)
	
	СписокПунктовМеню = Новый СписокЗначений;
	Для Каждого ПунктМеню Из Расшифровка Цикл
		
		// Допустимые способы расшифровки см. в ВыводСообщенийОбОшибках.НовыйОписаниеРасшифровки.
		
		Если ТипЗнч(ПунктМеню) <> Тип("Структура") Тогда
			Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Открыть ""%1""';
					|en = 'Open ""%1""'"),
				ПунктМеню);
		ИначеЕсли ПунктМеню.СпособРасшифровки = "Ссылка" Тогда
			Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Открыть ""%1""';
					|en = 'Open ""%1""'"),
				ПунктМеню.Ссылка);
		ИначеЕсли ПунктМеню.СпособРасшифровки = "ФормаСписка" Тогда
			Представление = ПунктМеню.Заголовок;
		Иначе
			Продолжить;
		КонецЕсли;
		
		СписокПунктовМеню.Добавить(ПунктМеню, Представление);
		
	КонецЦикла;
	
	Если СписокПунктовМеню.Количество() = 0 Тогда
		ВыбранноеДействие = Неопределено;
	ИначеЕсли СписокПунктовМеню.Количество() = 1 Тогда
		ВыбранноеДействие = СписокПунктовМеню[0];
		ОбработатьРасшифровку(Элемент, ВыбранноеДействие.Значение);
	Иначе
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Элемент", Элемент);
		Оповещение = Новый ОписаниеОповещения("ВыбратьИзМенюЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВыборИзМеню(Оповещение, СписокПунктовМеню, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзМенюЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьРасшифровку(ДополнительныеПараметры.Элемент, Результат.Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРасшифровку(Элемент, Действие)
	
	// Допустимые способы расшифровки см. в ВыводСообщенийОбОшибках.НовыйОписаниеРасшифровки.
	
	Если ТипЗнч(Действие) <> Тип("Структура") Тогда
		
		ПоказатьЗначение( , Действие);
		
	ИначеЕсли Действие.СпособРасшифровки = "Ссылка" Тогда
		
		ПоказатьЗначение( , Действие.Ссылка);
		
	ИначеЕсли Действие.СпособРасшифровки = "ФормаСписка" Тогда
		
		ИмяОткрываемойФормы = Действие.Объект + ".ФормаСписка";
		
		Действие.Отбор.Вставить("Организация", Объект.Организация);
		
		ПараметрыОткрываемойФормы = Новый Структура;
		ПараметрыОткрываемойФормы.Вставить("Отбор",  Действие.Отбор);
		ПараметрыОткрываемойФормы.Вставить("Период", Новый СтандартныйПериод(НачалоМесяца(Объект.Дата), КонецМесяца(Объект.Дата))); // Обработку этого параметра следует прописывать в формах
		
		ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыОткрываемойФормы);
		
	ИначеЕсли Действие.СпособРасшифровки = "ФормаДокументаСтрокаТабличнойЧасти" Тогда
		
		ИмяОткрываемойФормы = Действие.Объект + ".ФормаОбъекта";
		
		ПараметрыОткрываемойФормы = Новый Структура;
		ПараметрыОткрываемойФормы.Вставить("Ключ", Действие.Документ);
		Если Действие.Свойство("ИмяТабличнойЧасти") И Действие.Свойство("НомерСтроки") Тогда
			
			ЭлементДляАктивации = Новый Структура("ТабличнаяЧасть, НомерСтроки",
				Действие.ИмяТабличнойЧасти, Действие.НомерСтроки);
			ПараметрыОткрываемойФормы.Вставить("АктивироватьСтрокуТабличнойЧасти", ЭлементДляАктивации);
			
		КонецЕсли;
		
		ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыОткрываемойФормы);
		
	ИначеЕсли Действие.СпособРасшифровки = "ФормаЗаписиУчастникиКонтролируемыхСделок" Тогда
		
		ИмяОткрываемойФормы = "РегистрСведений.ДанныеПоКонтрагентамКонтролируемыхСделок.ФормаЗаписи";
		ПараметрыОткрываемойФормы = ПолучитьПараметрыОткрытияФормыЗаписиУчастникиКонтролируемыхСделок(Действие.Контрагент);
		
		ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыОткрываемойФормы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыОткрытияФормыЗаписиУчастникиКонтролируемыхСделок(Контрагент)
	
	Возврат РегистрыСведений.ДанныеПоКонтрагентамКонтролируемыхСделок.ПолучитьПараметрыОткрытияФормыЗаписиКонтрагента(Контрагент, Объект.Дата);
	
КонецФункции

#КонецОбласти