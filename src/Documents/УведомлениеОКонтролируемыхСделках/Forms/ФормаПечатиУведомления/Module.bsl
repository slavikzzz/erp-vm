#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("Уведомление") ИЛИ Не ЗначениеЗаполнено(Параметры.Уведомление.Ссылка) Тогда 
		Отказ = Истина;
		Возврат;
	Иначе
		Уведомление = Параметры.Уведомление.Ссылка;
	КонецЕсли;
	
	НомераКонтролируемыхСделокКорректны = КонтролируемыеСделки.НомераКонтролируемыхСделокУведомленияКорректны(Уведомление);
	
	ПервыйЛистДляПечати = 1;
	ПоследнийЛистДляПечати = 1;

	Переключатель = 1;
	Элементы.ПервыйЛистДляПечати.Доступность = Ложь;
	Элементы.ПоследнийЛистДляПечати.Доступность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("СформироватьЛистыУведомленияСПроверкойНумерации", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаПечатьНепосредственно(Команда)
	
	Если Переключатель = 2
		И ЕстьОшибкиВНомерахЛистовУведомления() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	КоличествоЛистов = ?(Переключатель = 2, ПоследнийЛистДляПечати - ПервыйЛистДляПечати + 1, ВсегоЛистов);
	ТекстВопроса = Нстр("ru = 'Распечатать уведомление о контролируемых сделках в объеме %КоличествоЛистов% страниц?';
						|en = 'Print controlled transaction notification in the amount of %КоличествоЛистов% pages?'");
	ТекстВопроса = СтрЗаменить(ТекстВопроса, "%КоличествоЛистов%", КоличествоЛистов);
	Оповещение = Новый ОписаниеОповещения("ВопросРаспечататьУведомлениеОКонтролируемыхСделкахЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СформироватьЛистыУведомленияСПроверкойНумерации()
	
	Если НЕ НомераКонтролируемыхСделокКорректны Тогда
		ТекстВопроса = НСтр("ru = 'Нумерация листов 1А не корректна.
			|Перенумеровать листы 1А?
			|(операция может занять продолжительное время)';
			|en = '1A sheet numbering is incorrect.
			|Renumber 1A sheets?
			|(The operation may take a long time)'");
		Оповещение = Новый ОписаниеОповещения("ВопросПеренумероватьЛистыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ПодключитьОбработчикОжидания("СформироватьЛистыУведомленияВФоне", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПеренумероватьЛистыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Перенумеровать = (Результат = КодВозвратаДиалога.Да);
	Если Перенумеровать Тогда
		ПеренумероватьЛисты1А(Уведомление);
	КонецЕсли;
	ПодключитьОбработчикОжидания("СформироватьЛистыУведомленияВФоне", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЛистыУведомленияВФоне()
	
	ФоновоеЗадание = СформироватьЛистыУведомления();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ОтображениеЛистов, "ФормированиеОтчета");
	Элементы.КомандаПечатьНепосредственно.Доступность = Ложь;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("СформироватьЛистыУведомленияВФонеЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция СформироватьЛистыУведомления()
	
	СведенияОбУведомлении = Документы.УведомлениеОКонтролируемыхСделках.ПолучитьСведенияОбУведомлении(Уведомление);
	ДатаАктуальностиСведений = КонецГода(СведенияОбУведомлении.ОтчетныйГод);
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("Уведомление", Уведомление);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Создание списка контролируемых сделок';
															|en = 'Create a list of controlled transactions'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"КонтролируемыеСделки.ПолучитьЛистыУведомленияВФоне",
		ПараметрыЗадания,
		ПараметрыВыполнения);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура СформироватьЛистыУведомленияВФонеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ОтображениеЛистов, "НеИспользовать");
	Элементы.КомандаПечатьНепосредственно.Доступность = Истина;
	
	Если Результат = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	АдресВременногоХранилищаЛистов = Результат.АдресРезультата;
	СформироватьДерево();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДерево()
	
	СписокЛистов.Очистить();
	
	Если Не ЗначениеЗаполнено(АдресВременногоХранилищаЛистов) Тогда
		ВызватьИсключение НСтр("ru = 'При выводе листов произошла ошибка: адрес во временном хранилище не заполнен.';
								|en = 'An error occurred while outputting sheets: address in the temporary storage is not filled.'");
	КонецЕсли;
	
	РезультатФоновогоЗадания = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаЛистов);
	
	Листы = РезультатФоновогоЗадания.Листы;
	ВсегоЛистов = Листы.Количество();
	
	СведенияОбУведомлении.Вставить("ВсегоЛистов", ВсегоЛистов);
	
	Титульный = СписокЛистов.Добавить();
	Титульный.НазваниеГруппировки = НСтр("ru = 'Титульный лист';
										|en = 'Cover page'");
	Титульный.НачальныйНомерЛиста = 1;
	Титульный.КонечныйНомерЛиста = 1;
	НомерПервогоЛиста = 2;
	
	Если Листы.Количество()>1 
		И Листы[1].Раздел = "ТитульныйЛистФизическоеЛицо" Тогда
		ТитульныйФЛ = СписокЛистов.Добавить();
		ТитульныйФЛ.НазваниеГруппировки = НСтр("ru = 'Сведения о физлице';
												|en = 'Information about the individual'");
		ТитульныйФЛ.НачальныйНомерЛиста = 2;
		ТитульныйФЛ.КонечныйНомерЛиста = 2;
		НомерПервогоЛиста = 3;
	КонецЕсли;
	
	ПоследнийЛистДляПечати = ВсегоЛистов;
	
	Если ВсегоЛистов < 150 Тогда 
		КоличествоВГруппировке = 10;
	ИначеЕсли ВсегоЛистов < 250 Тогда 
		КоличествоВГруппировке = 20;
	ИначеЕсли ВсегоЛистов < 500 Тогда 
		КоличествоВГруппировке = 50;
	ИначеЕсли ВсегоЛистов < 1000 Тогда 
		КоличествоВГруппировке = 100;
	ИначеЕсли ВсегоЛистов < 5000 Тогда
		КоличествоВГруппировке = 200;
	Иначе
		КоличествоВГруппировке = 500;
	КонецЕсли;
	
	ВставленоВДерево = НомерПервогоЛиста - 1;
	
	Пока ВставленоВДерево < ВсегоЛистов Цикл 
		
		Строка = СписокЛистов.Добавить();
		Строка.НачальныйНомерЛиста = ВставленоВДерево + 1;
		
		Если ВставленоВДерево + КоличествоВГруппировке > ВсегоЛистов Тогда 
			Строка.КонечныйНомерЛиста = ВсегоЛистов;
		ИначеЕсли ВставленоВДерево < КоличествоВГруппировке Тогда 
			Строка.КонечныйНомерЛиста = КоличествоВГруппировке;
		Иначе 
			Строка.КонечныйНомерЛиста = ВставленоВДерево + КоличествоВГруппировке;
		КонецЕсли;
		ВставленоВДерево = Строка.КонечныйНомерЛиста;
		НазваниеГруппировки = НСтр("ru = 'Листы №%1-%2';
									|en = 'Sheets No. %1-%2'");											
		Строка.НазваниеГруппировки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НазваниеГруппировки,
																					Строка.НачальныйНомерЛиста,
																					Строка.КонечныйНомерЛиста);
		
	КонецЦикла;
	
	Строка = Новый Структура("Имя,Начало,Конец", 
		Титульный.НазваниеГруппировки, Титульный.НачальныйНомерЛиста, Титульный.КонечныйНомерЛиста);
	СформироватьМакет(Строка);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьМакет(Строка)
	
	ОтображениеЛистов.Очистить();
	ОтображениеЛистов.ОбластьПечати = Неопределено;
	
	СформироватьЛисты(Строка.Начало, Строка.Конец, ОтображениеЛистов);
	
	ОтображениеЛистов.ОбластьПечати = ОтображениеЛистов.Область();
	КонтролируемыеСделки.УстановитьПараметрыПечатиУведомления(ОтображениеЛистов);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЛисты(НомерНачало, НомерКонец, ТабДок)
	
	Если Не ЗначениеЗаполнено(АдресВременногоХранилищаЛистов) Тогда
		ВызватьИсключение НСтр("ru = 'При выводе листов произошла ошибка: адрес во временном хранилище не заполнен.';
								|en = 'An error occurred while outputting sheets: address in the temporary storage is not filled.'");
	КонецЕсли;
	
	ЛистыУведомления = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаЛистов);
	
	КонтролируемыеСделки.СформироватьЛистыУведомления(ЛистыУведомления, СведенияОбУведомлении, НомерНачало, НомерКонец, ТабДок);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПеренумероватьЛисты1А(Уведомление)
	
	КонтролируемыеСделки.ПеренумерацияКонтролируемыхСделокУведомления(Уведомление);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросРаспечататьУведомлениеОКонтролируемыхСделкахЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СформироватьИНапечататьЛисты();
	КонецЕсли;
	
КонецПроцедуры

// выполняет непосредственную печать на принтер уведомления
&НаКлиенте
Процедура СформироватьИНапечататьЛисты()
	
	НастройкиПечати = Новый Структура("Вывод,ДвусторонняяПечать,ИмяПринтера,КоличествоЭкземпляров,РазборПоКопиям");
	
	ПервыйЛист = ?(Переключатель=1, 1, ПервыйЛистДляПечати);
	ПоследнийЛистДляПечати = ?(Переключатель=1, ВсегоЛистов, ПоследнийЛистДляПечати);
	КоличествоВКомплекте = 150;
	Пока ПервыйЛист <= ПоследнийЛистДляПечати Цикл 
		
		КонецИнтервалаЛистов = ПервыйЛист + КоличествоВКомплекте - 1;
		
		ПоследнийЛист = Мин(КонецИнтервалаЛистов, ПоследнийЛистДляПечати);
		
		Заголовок = СтрШаблон(НСтр("ru = 'Уведомление о контролируемых сделках листы %1 - %2 из %3';
									|en = 'Controlled transaction notification sheets %1 - %2 from %3'"),
			ПервыйЛист, ПоследнийЛист, ПоследнийЛистДляПечати - ПервыйЛистДляПечати + 1);
		
		ПакетЛистов = ПакетЛистовДляПечати(ПервыйЛист, ПоследнийЛист);
		ПакетЛистов.Заголовок = Заголовок;
		
		Если ЗначениеЗаполнено(НастройкиПечати.ИмяПринтера) Тогда
			ЗаполнитьЗначенияСвойств(ПакетЛистов, НастройкиПечати);
			ПакетЛистов.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		Иначе
			ПакетЛистов.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
			ЗаполнитьЗначенияСвойств(НастройкиПечати, ПакетЛистов);
		КонецЕсли;
		
		ПервыйЛист = ПоследнийЛист + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПакетЛистовДляПечати(Знач НомерНачало, Знач НомерКонец)
	
	Если Не ЗначениеЗаполнено(АдресВременногоХранилищаЛистов) Тогда
		ВызватьИсключение НСтр("ru = 'При выводе листов произошла ошибка: адрес во временном хранилище не заполнен.';
								|en = 'An error occurred while outputting sheets: address in the temporary storage is not filled.'");
	КонецЕсли;
	
	ЛистыУведомления = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаЛистов);
	
	Возврат КонтролируемыеСделки.ПакетЛистовУведомленияДляПечати(ЛистыУведомления, СведенияОбУведомлении, НомерНачало, НомерКонец, ЭтотОбъект.УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Функция ЕстьОшибкиВНомерахЛистовУведомления()
	
	Если ПервыйЛистДляПечати > ПоследнийЛистДляПечати Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтрШаблон(Нстр("ru = 'Последний лист диапазона печати %1 должен быть больше, чем первый лист %2';
							|en = 'Последний лист диапазона печати %1 должен быть больше, чем первый лист %2'"), ПоследнийЛистДляПечати, ПервыйЛистДляПечати),
			,
			"ПоследнийЛистДляПечати");
		Возврат Истина;
	КонецЕсли;
	
	Если ПоследнийЛистДляПечати > ВсегоЛистов Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтрШаблон(Нстр("ru = 'Последний лист диапазона печати %1 больше, чем всего листов %2';
							|en = 'Последний лист диапазона печати %1 больше, чем всего листов %2'"), ПоследнийЛистДляПечати, ВсегоЛистов),
			,
			"ПоследнийЛистДляПечати");
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура СписокЛистовПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено
	 ИЛИ Элемент.ТекущаяСтрока = ТекущаяСтрокаРазделовОтчета Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрокаРазделовОтчета = Элемент.ТекущаяСтрока;
	
	Строка = Новый Структура("Имя,Начало,Конец", Элемент.ТекущиеДанные.НазваниеГруппировки,
					Элемент.ТекущиеДанные.НачальныйНомерЛиста, Элемент.ТекущиеДанные.КонечныйНомерЛиста);
	СформироватьМакет(Строка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПереключательПриИзменении(Элемент)
	
	Элементы.ПервыйЛистДляПечати.Доступность = (Переключатель = 2);
	Элементы.ПоследнийЛистДляПечати.Доступность = (Переключатель = 2);
	
КонецПроцедуры

#КонецОбласти
