#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	ИсправлениеДокументов.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ПараметрыРеквизитовОбъекта = 
		ТМЦВЭксплуатацииКлиентСервер.ЗначенияСвойствЗависимыхРеквизитов_ВводОстатковТМЦВЭксплуатации(ЭтотОбъект, ДопПараметры());
	
	ОбщегоНазначенияУТКлиентСервер.ОчиститьНеиспользуемыеРеквизиты(ЭтотОбъект, ПараметрыРеквизитовОбъекта, "ТМЦВЭксплуатации");
	
	//++ НЕ УТ
	
	ТМЦВЭксплуатацииСервер.ЗаполнитьРеквизитыПоКатегорииЭксплуатации(ТМЦВЭксплуатации);
	
	//-- НЕ УТ
	
	Справочники.ПартииТМЦВЭксплуатации.ЗаполнитьПартии(ЭтотОбъект, РежимЗаписи);
	
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(
		ЭтотОбъект,
		НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ВводОстатковТМЦВЭксплуатации));
	
	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект, "ТМЦВЭксплуатации");

	ВводОстатковЛокализация.ВводОстатковТМЦВЭксплуатацииПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	ВводОстатковЛокализация.ВводОстатковТМЦВЭксплуатацииОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	ВводОстатковЛокализация.ВводОстатковТМЦВЭксплуатацииОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив();

	ДопПараметры = ДопПараметры();
	
	ПараметрыРеквизитовОбъекта = 
		ТМЦВЭксплуатацииКлиентСервер.ЗначенияСвойствЗависимыхРеквизитов_ВводОстатковТМЦВЭксплуатации(ЭтотОбъект, ДопПараметры);
	ОбщегоНазначенияУТ.ОтключитьПроверкуЗаполненияРеквизитовОбъекта(ПараметрыРеквизитовОбъекта, НепроверяемыеРеквизиты);

	ПроверкаЗаполненияДокумента(ДопПараметры, НепроверяемыеРеквизиты, Отказ);
	ПроверкаЗаполненияПрочихПодсистем(НепроверяемыеРеквизиты, Отказ);
	
	ИсправлениеДокументов.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ВводОстатковЛокализация.ВводОстатковТМЦВЭксплуатацииОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка." + Метаданные().Имя) Тогда
		
		ИсправлениеДокументов.ЗаполнитьИсправление(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	ВводОстатковЛокализация.ВводОстатковТМЦВЭксплуатацииОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИсправлениеДокументов.ПриКопировании(ЭтотОбъект, ОбъектКопирования);
	
	ОбщегоНазначенияУТ.ОчиститьИдентификаторыДокумента(ЭтотОбъект, "ТМЦВЭксплуатации");

	ВводОстатковЛокализация.ВводОстатковТМЦВЭксплуатацииПриКопировании(ЭтотОбъект, ОбъектКопирования);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	ВводОстатковЛокализация.ВводОстатковТМЦВЭксплуатацииПриЗаписи(ЭтотОбъект, Отказ);

КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	ВводОстатковЛокализация.ВводОстатковТМЦВЭксплуатацииПередУдалением(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("ХозяйственнаяОперация") Тогда
			ХозяйственнаяОперация = ДанныеЗаполнения.ХозяйственнаяОперация;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("Комментарий") Тогда
			Комментарий = ДанныеЗаполнения.Комментарий;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ЗначениеКопирования") Тогда
			ВводОстатковСервер.ЗаполнитьЗначенияПоСтаромуВводуОстатков(ЭтотОбъект, ДанныеЗаполнения.ЗначениеКопирования);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ПроверкаЗаполненияДокумента(ДопПараметры, НепроверяемыеРеквизиты, Отказ)
	
	Если НЕ ОтражатьВОперативномУчете 
		И НЕ ОтражатьВБУиНУ 
		И НЕ ОтражатьВУУ Тогда
			
		ТекстСообщения = НСтр("ru = 'Операция должна отражаться в одном из учетов';
								|en = 'The operation must be recorded in one of accounting types'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, "Объект.ОтражатьВОперативномУчете",, Отказ);
	КонецЕсли;
	
	//++ НЕ УТ
	
	ТМЦВЭксплуатацииСервер.ПроверитьПередачуВЭксплуатацию(ЭтотОбъект, НепроверяемыеРеквизиты, Отказ);
	
	//-- НЕ УТ

	ПроверитьТМЦВЭксплуатации(ДопПараметры, НепроверяемыеРеквизиты, Отказ);
	
КонецПроцедуры

Процедура ПроверкаЗаполненияПрочихПодсистем(НепроверяемыеРеквизиты, Отказ)
	
	//++ НЕ УТ
	Если Дата < РеглУчетКлиентСервер.НачалоПримененияФСБУ5_2019()
		И Дата <> '000101010000' Тогда
		ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
			ЭтотОбъект, Новый Структура("ТМЦВЭксплуатации"), НепроверяемыеРеквизиты, Отказ);
	КонецЕсли;
	//-- НЕ УТ
	
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверки.ИмяТЧ = "ТМЦВЭксплуатации";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, НепроверяемыеРеквизиты, Отказ, ПараметрыПроверки);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(
		ЭтотОбъект,
		НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ВводОстатковТМЦВЭксплуатации),
		Отказ,
		НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПроверитьТМЦВЭксплуатации(ДопПараметры, НепроверяемыеРеквизиты, Отказ)
	
	НепроверяемыеРеквизиты.Добавить("ТМЦВЭксплуатации.ОсновноеСредство");
	НепроверяемыеРеквизиты.Добавить("ТМЦВЭксплуатации.СтатьяРасходов");
	НепроверяемыеРеквизиты.Добавить("ТМЦВЭксплуатации.АналитикаРасходов");
	
	//++ НЕ УТ
	
	ШаблонНеЗаполненоПоле = НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2 списка ""ТМЦ в эксплуатации""';
								|en = 'The ""%1"" column in the %2 line of the ""Inventory in operation"" list is not filled in'");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.КатегорияЭксплуатации КАК Справочник.КатегорииЭксплуатации) КАК КатегорияЭксплуатации,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов) КАК СтатьяРасходов,
	|	ТабличнаяЧасть.ДатаНачалаЭксплуатации КАК ДатаНачалаЭксплуатации,
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТабличнаяЧасть
	|ИЗ
	|	&ТабличнаяЧасть КАК ТабличнаяЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезультатПроверки.НомерСтроки КАК НомерСтроки,
	|	РезультатПроверки.НеЗаполненоОсновноеСредство КАК НеЗаполненоОсновноеСредство,
	|	РезультатПроверки.НеЗаполненаСтатьяРасходов КАК НеЗаполненаСтатьяРасходов
	|	
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|
	|		ЕСТЬNULL(ТабличнаяЧасть.КатегорияЭксплуатации.УчитыватьВВидеГрупповогоОС, ЛОЖЬ)
	|			И ТабличнаяЧасть.ОсновноеСредство = ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК НеЗаполненоОсновноеСредство,
	|
	|		ТабличнаяЧасть.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|			И ТабличнаяЧасть.ДатаНачалаЭксплуатации < &НачалоПримененияФСБУ5 
	|			И ТабличнаяЧасть.ДатаНачалаЭксплуатации <> ДАТАВРЕМЯ(1,1,1) 
	|			И НЕ &СтоимостьСписана КАК НеЗаполненаСтатьяРасходов
	|
	|	ИЗ
	|		ТабличнаяЧасть КАК ТабличнаяЧасть
	|
	|	) КАК РезультатПроверки
	|
	|ГДЕ
	|	(РезультатПроверки.НеЗаполненоОсновноеСредство
	|		ИЛИ РезультатПроверки.НеЗаполненаСтатьяРасходов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТабличнаяЧасть", ТМЦВЭксплуатации.Выгрузить());
	Запрос.УстановитьПараметр("НачалоПримененияФСБУ5", РеглУчетКлиентСервер.НачалоПримененияФСБУ5_2019());
	Запрос.УстановитьПараметр("СтоимостьСписана", ДопПараметры.СтоимостьСписана);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если Выборка.НеЗаполненоОсновноеСредство Тогда
			ТекстСообщения = СтрШаблон(ШаблонНеЗаполненоПоле, НСтр("ru = 'Основное средство';
																	|en = 'Fixed asset'"), Выборка.НомерСтроки);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТМЦВЭксплуатации", Выборка.НомерСтроки, "ОсновноеСредство");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
	
		Если Выборка.НеЗаполненаСтатьяРасходов Тогда
			ТекстСообщения = СтрШаблон(ШаблонНеЗаполненоПоле, НСтр("ru = 'Статья расходов';
																	|en = 'Expense item'"), Выборка.НомерСтроки);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТМЦВЭксплуатации", Выборка.НомерСтроки, "СтатьяРасходов");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
	
	КонецЦикла;

	//-- НЕ УТ

КонецПроцедуры

Функция ДопПараметры()
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("СтоимостьСписана", Истина);
	
	//++ НЕ УТ

	//++ Локализация
	ДопПараметры.Вставить("СтоимостьСписана", ТМЦВЭксплуатацииПовтИсп.СтоимостьТМЦВЭксплуатацииСписана(Организация, Дата));
	//-- Локализация
	
	//-- НЕ УТ

	Возврат ДопПараметры;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
