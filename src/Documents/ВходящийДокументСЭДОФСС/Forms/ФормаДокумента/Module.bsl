&НаКлиенте
Перем КонтекстЭДОКлиент;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоНовый = Параметры.Ключ.Пустая();
	Если ЭтоНовый Тогда
		ТекстПредупреждения = НСтр("ru = 'Копирование входящих сообщений запрещено!';
									|en = 'Копирование входящих сообщений запрещено!'");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Ключ.Пустая() Тогда
		Если НЕ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			               |	ОтветСтрахователяНаТребованиеПроверкиФСС.Ссылка КАК Ссылка
			               |ИЗ
			               |	Документ.ОтветСтрахователяНаТребованиеПроверкиФСС КАК ОтветСтрахователяНаТребованиеПроверкиФСС
			               |ГДЕ
			               |	ОтветСтрахователяНаТребованиеПроверкиФСС.Основание = &Основание
			               |	И ОтветСтрахователяНаТребованиеПроверкиФСС.ПометкаУдаления = ЛОЖЬ
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	ОтветСтрахователяНаТребованиеПроверкиФСС.Дата УБЫВ";
			
			Запрос.УстановитьПараметр("Основание", Объект.Ссылка);
			
			
			Результат = Запрос.Выполнить();
			
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				СформированныйОтвет = Выборка.Ссылка;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.Организация.Видимость = Не РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация();
	
	ПрефиксИмениФайлаПечатнойФормы = ПрефиксИмениФайлаПечатнойФормы();
	Приложения = ПриложенияКОсновномуДокументу(Объект);
	ЭтаФорма.КоличествоФайловПриложений = Приложения.Количество();
	
	УправлениеФормой(ЭтаФорма);
	
	МассивОтветов = ПолучитьОтветыНаТребованиеФСС(Объект.Ссылка);
	ЭтаФорма.КоличествоОтветовВБазе = МассивОтветов.Количество();
	ЭтаФорма.ОшибкиОтветов = ПолучитьОшибкиОтветов();
		
	ОформитьПредставлениеПодтверждения();
	
	Если ЭлектронныйДокументооборотСФСС.ЭтоТребованиеСФРОПредоставленииДокументов(Объект) Тогда
		ОформитьПредставлениеОтвета();
	Иначе
		Элементы.ОтступПередКомментарием.Видимость = Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ВходящийДокументСЭДОФССПрисоединенныеФайлы.Наименование КАК Наименование,
	|	ВходящийДокументСЭДОФССПрисоединенныеФайлы.Расширение КАК Расширение,
	|	ВходящийДокументСЭДОФССПрисоединенныеФайлы.Размер КАК Размер
	|ИЗ
	|	Справочник.ВходящийДокументСЭДОФССПрисоединенныеФайлы КАК ВходящийДокументСЭДОФССПрисоединенныеФайлы
	|ГДЕ
	|	ВходящийДокументСЭДОФССПрисоединенныеФайлы.Ссылка = &Ссылка";
		
	Запрос.УстановитьПараметр("Ссылка", Объект.ВходящийФайл);
		
	Результат = Запрос.Выполнить();
	
	СвойстваВходящегоФайла = Неопределено;
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Если Выборка.Следующий() Тогда
			СвойстваВходящегоФайла = Новый Структура;
			СвойстваВходящегоФайла.Вставить("Наименование",	Выборка.Наименование);
			СвойстваВходящегоФайла.Вставить("Расширение",	Выборка.Расширение);
			СвойстваВходящегоФайла.Вставить("Размер",		Выборка.Размер);
		КонецЕсли;
	КонецЕсли;
	
	Если СвойстваВходящегоФайла = Неопределено Тогда
		Элементы.Вложения.Заголовок = "Файл вложения не найден.";
	Иначе
		Элементы.Вложения.Заголовок = СвойстваВходящегоФайла.Наименование +
		"." + СвойстваВходящегоФайла.Расширение + 
		" (" + Окр(СвойстваВходящегоФайла.Размер / 1024, 2) + "Кб)";
	КонецЕсли;
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганами.ОтметитьКакПрочтенное(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаголовокОтветы = "Ответы (" + ПолучитьКоличествоОтветовНаТребованиеФСС(Объект.Ссылка) + ")";
	Элементы.ГиперссылкаОтветы.Заголовок = ЗаголовокОтветы;
	Элементы.ПоказатьОтветы.Заголовок = ЗаголовокОтветы;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Объект.Организация)
		И РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации");
		Организация = Модуль.ОрганизацияПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ДатыЗапретаИзменения") Тогда
		ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Ответ страхователя на запрос, отправлен" Тогда
		ЭтаФорма.Прочитать();
		Если НЕ ЗначениеЗаполнено(Объект.ДатаОтправкиОтветаНаЗапрос) Тогда
			Объект.ДатаОтправкиОтветаНаЗапрос = ТекущаяДата();
			ЭтаФорма.Прочитать();
			Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСоздатьОтвет()
	
	СформированныйОтвет = СфомироватьОтветНаСервере(Объект.Ссылка);
	
	Если СформированныйОтвет =
			ПредопределенноеЗначение("Документ.ОтветСтрахователяНаТребованиеПроверкиФСС.ПустаяСсылка")
			ИЛИ СформированныйОтвет = Неопределено Тогда
			
			Возврат;
	КонецЕсли;
		
	ПараметрыФормы = Новый Структура("Ключ", СформированныйОтвет);
	ОткрытьФорму(
		"Документ.ОтветСтрахователяНаТребованиеПроверкиФСС.Форма.ФормаДокумента",
		ПараметрыФормы);
		
	ЗаголовокОтветы = "Ответы (" + ПолучитьКоличествоОтветовНаТребованиеФСС(Объект.Ссылка) + ")";
	Элементы.ПоказатьОтветы.Заголовок = ЗаголовокОтветы;
	
	УправлениеФормой(ЭтаФорма);
	ОформитьПредставлениеПодтверждения();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявлениеНаСправкуОРасчетах(Команда)
	
	ФормаДокумента = "Документ.ЗаявлениеНаФормированиеСправкиОРасчетах.Форма.ФормаДокумента";
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения",
		Новый Структура("Организация, ДатаЗадолженности", Объект.Организация, НачалоМесяца(ТекущаяДата())));
	
	ОткрытьФорму(ФормаДокумента, ПараметрыФормы, ЭтотОбъект, Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодтвердитьПрием(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ЗаполнитьСтрахователя(Объект.ИдентификаторСообщения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДатаОтправкиПодтверждения) Тогда
		Оповещение = Новый ОписаниеОповещения("ПодтвердитьПриемПослеВопросаОПовторе", ЭтотОбъект);
		Шаблон = НСтр("ru = 'Подтверждение получения было отправлено %1. Отправить повторно?';
						|en = 'Подтверждение получения было отправлено %1. Отправить повторно?'");
		ТекстВопроса = СтрШаблон(Шаблон, Объект.ДатаОтправкиПодтверждения);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена, , КодВозвратаДиалога.Отмена);
		Возврат;
	КонецЕсли;
	
	ПодтвердитьПриемПослеВопросаОПовторе(КодВозвратаДиалога.ОК, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияНажатие(Элемент)
	
	ФайлСсылка = ПолучитьФайлПриложения();
		
	ДанныеФайла = РаботаСФайламиКлиент.ДанныеФайла(ФайлСсылка,
		УникальныйИдентификатор, Истина);
		
	ПрефиксИмениФайлаПечатнойФормы = ПрефиксИмениФайлаПечатнойФормы();
	ОшибкаФорматаФайла = Ложь;
	РасширениеPDF = "pdf";
	Если ВРег(ДанныеФайла.Расширение) = ВРег(РасширениеPDF)
		И НЕ ЭлектронныйДокументооборотСФССКлиент.ЭтоФайлPDF(ДанныеФайла) Тогда
		Если СтрНачинаетсяС(ДанныеФайла.Наименование, ПрефиксИмениФайлаПечатнойФормы) Тогда
			// Попытка открытия основного вложения вместо печатной формы.
			ДанныеФайла = РаботаСФайламиКлиент.ДанныеФайла(Объект.ВходящийФайл,
				УникальныйИдентификатор, Истина);
		КонецЕсли;
	КонецЕсли;
	
	ПоказатьВложенныйФайл(ДанныеФайла.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияКОсновномуДокументуНажатие(Элемент)
	
	Если КоличествоФайловПриложений = 1 Тогда
		ПриложенияДокумента = ПриложенияКОсновномуДокументу(Объект);
		ПоказатьВложенныйФайл(ПриложенияДокумента[0].СсылкаНаФайл);
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Основание", Объект.Ссылка);
	
	ОткрытьФорму(
		"Документ.ВходящийДокументСЭДОФСС.Форма.ФормаФайлыПриложений",
		ДополнительныеПараметры,,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтветыНажатие(Элемент)
	
	НажатиеНаКнопкуПоказатьОтветыПоТребованию();
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаОтветыНажатие(Элемент)
	
	НажатиеНаКнопкуПоказатьОтветыПоТребованию();
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаСрокиНажатие(Элемент)
	
	ЭлектронныйДокументооборотСФССКлиент.ПоказатьИнформациюоСроках();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДатуОтвета(Команда)

	ОповещениеЗавершения = Новый ОписаниеОповещения("ИзменитьДатуОтветаЗавершение", ЭтотОбъект);
	ТребованияФНСКлиент.ИзменитьСрокТребования(Объект.Ссылка, ОповещениеЗавершения);
	ТекущийЭлемент = Элементы.Комментарий;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСвойстваОтветов(Команда)
	
	ПараметрыФормы = Новый Структура;
	Отбор = Новый Структура;
	Отбор.Вставить("Ссылка", Объект.Ссылка);
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ОткрытьФорму("РегистрСведений.СвойстваОтветовНаТребованияФСС.ФормаСписка", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСвойстваТребования(Команда)
	
	ПараметрыФормы = Новый Структура;
	Отбор = Новый Структура;
	Отбор.Вставить("Ссылка", Объект.Ссылка);
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ОткрытьФорму("РегистрСведений.ЖурналОтправокВКонтролирующиеОрганы.ФормаСписка", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы 	= Форма.Элементы;
	Объект 		= Форма.Объект;
	
	Форма.Заголовок = Объект.ВидДокументаФСС
		+ " СФР (бывш. ФСС) "
		+ Формат(Объект.ВходящийНомер, "ЧГ=")
		+ " от "
		+ Формат(Объект.ВходящаяДата, "ДФ=dd.MM.yyyy");
	Элементы.НаименованиеЭтапа.Заголовок = Объект.Статус;
	Если Объект.Статус = "" Тогда
		Элементы.НаименованиеЭтапа.Заголовок = "Подтвердите прием";
		Элементы.ОбновитьОтправку.Видимость = Ложь;
		Если ЗначениеЗаполнено(Объект.ДатаОтправкиПодтверждения) Тогда
			Элементы.НаименованиеЭтапа.Заголовок = "Прием подтвержден";
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.Статус = "Подтвердите прием" Тогда
		Элементы.ОбновитьОтправку.Видимость = Ложь;
	КонецЕсли;
	
	Форма.Отправитель = "Орган СФР "+ Объект.Отправитель + " (" + Объект.КодОтправителя + ")";
	
	Если Объект.ТипСообщения = "303" ИЛИ Объект.ТипСообщения = "308" Тогда
		Элементы.ГруппаЗапрашиваемыеДокументы.Видимость = Истина;
		Элементы.ГруппаОшибокОтвета.Видимость			= Форма.ОшибкиОтветов > 0;
	Иначе
		Элементы.ГиперссылкаОтветы.Видимость			= Ложь;
		Элементы.ПоказатьОтветы.Видимость				= Ложь;
		Элементы.ГруппаЗапрашиваемыеДокументы.Видимость	= Ложь;
		Элементы.ГруппаОтветаНаТребование.Видимость		= Ложь;
		Элементы.ГруппаБезПарсинга.Видимость			= Ложь;
		Элементы.КомандаСоздатьОтвет.Видимость			= Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ТребуетсяПодтверждение) Тогда
		Если НЕ ЗначениеЗаполнено(Объект.ДатаОтправкиПодтверждения) Тогда
			Элементы.БлокОшибокИИзвещений.Видимость = Истина;
		Иначе
			Элементы.БлокОшибокИИзвещений.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Элементы.БлокОшибокИИзвещений.Видимость = Ложь;
	КонецЕсли;
	
	Если Форма.КоличествоФайловПриложений > 0 Тогда
		Элементы.ГруппаФайлыПриложений.Видимость = Истина;
		Если Форма.КоличествоФайловПриложений = 1 Тогда
			Приложения = ПриложенияКОсновномуДокументу(Объект);
			Элементы.ВложенияКОсновномуДокументу.Заголовок = Приложения[0].ПредставлениеФайла;
		Иначе
			Шаблон = НСтр("ru = 'Файлы приложений (%1)';
							|en = 'Файлы приложений (%1)'");
			ТекстЗаголовка = СтрШаблон(Шаблон, Форма.КоличествоФайловПриложений);
			Элементы.ВложенияКОсновномуДокументу.Заголовок = ТекстЗаголовка;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОформитьПредставлениеПодтверждения()
	
	Элементы.БлокНеотправленныхИзвещений.Видимость = НЕ ЗначениеЗаполнено(Объект.ДатаОтправкиПодтверждения);
	
	КонтекстЭДО = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	ТребуетсяПодтверждение = Ложь;
	Если НЕ КонтекстЭДО = Неопределено
		И НЕ ПустаяСтрока(Объект.ТипСообщения) Тогда
		Тип = Число(Объект.ТипСообщения);
		ТребуетсяПодтверждение = КонтекстЭДО.ТребуетсяПодтверждениеТипаСообщенияДоходнойЧастиСЭДО(Тип);
	КонецЕсли;
	
	ДатаОтправкиПодтверждения = Объект.ДатаОтправкиПодтверждения;
	ПодтверждениеОтправлено = ЗначениеЗаполнено(ДатаОтправкиПодтверждения);
	
	СекундВСутках = 24 * 60 * 60;
	Состояние = Новый Структура;
	Состояние.Вставить("Ссылка", Объект.Ссылка);
	Состояние.Вставить("Подтвержден", ПодтверждениеОтправлено);
	Состояние.Вставить("ПодтвердитьДо", Объект.МаксимальнаяДатаПодтверждения);
	Если ТребуетсяПодтверждение Тогда
		Если НЕ ПодтверждениеОтправлено Тогда
			Состояние.Вставить("ПодтверждениеПросроченоНа",
				Окр((ТекущаяДатаСеанса() - Объект.МаксимальнаяДатаПодтверждения) / СекундВСутках));
			Состояние.Вставить("ОсталосьДоПодтверждения",
				Окр((Объект.МаксимальнаяДатаПодтверждения - ТекущаяДатаСеанса()) / СекундВСутках));
		Иначе
			Состояние.Вставить("ПодтверждениеПросроченоНа",
				Окр((ДатаОтправкиПодтверждения - Объект.МаксимальнаяДатаПодтверждения) / СекундВСутках));
			Состояние.Вставить("ОсталосьДоПодтверждения",
				Окр((Объект.МаксимальнаяДатаПодтверждения - ДатаОтправкиПодтверждения) / СекундВСутках));
		КонецЕсли;
	Иначе
		Состояние.Вставить("ПодтверждениеПросроченоНа", 0);
		Состояние.Вставить("ОсталосьДоПодтверждения", 0);
	КонецЕсли;
	Состояние.Вставить("ДатаПодтверждения", ДатаОтправкиПодтверждения);
	
	Сейчас = ТекущаяДатаСеанса();
	Результат = ТребованияФНС.ПредставлениеПодтверждения(Состояние, Сейчас);
	
	Элементы.ДатаПриемаПредставление.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(Результат.Представление);
	Элементы.ОгонекПодтверждения.Видимость = Результат.ДобавитьОгонек;
	Элементы.ГруппаЗаголовкаСроков.Видимость = ТребуетсяПодтверждение;
	
КонецПроцедуры

&НаСервере
Процедура ОформитьПредставлениеОтвета()
	
	ДанныеРегистра = ЭлектронныйДокументооборотСФСС.ДанныеРегистраИзвлеченныеДанныеТребованийСФР(Объект.Ссылка);
	ЭтоТребованиеСФРОПредоставленииДокументов = ЭлектронныйДокументооборотСФСС.ЭтоТребованиеСФРОПредоставленииДокументов(Объект);
	ОтветитьДо = Объект.МаксимальнаяДатаОтправкиОтвета;
	Если ЗначениеЗаполнено(ДанныеРегистра.ДатаОтветаИзмененная) Тогда
		ОтветитьДо = ДанныеРегистра.ДатаОтветаИзмененная;
	КонецЕсли;
	
	ДнейДоОтвета = Окр((ОтветитьДо - ТекущаяДатаСеанса()) / 24 / 60 / 60);
	Состояние = Новый Структура;
	Состояние.Вставить("ОсталосьДоОтвета", ДнейДоОтвета);
	Состояние.Вставить("Подтвержден", Истина);
	Состояние.Вставить("ТребуетОтвета", ЭтоТребованиеСФРОПредоставленииДокументов);
	Состояние.Вставить("ОтветУжеДан", ДанныеРегистра.ОтветУжеДан);
	Состояние.Вставить("ЕстьОтвет", КоличествоОтветовВБазе > 0);
	Состояние.Вставить("ОтветитьДо", ОтветитьДо);
	Состояние.Вставить("ДнейДоОтвета", ДнейДоОтвета);
	Состояние.Вставить("КоличествоОтветов", КоличествоОтветовВБазе);
	Состояние.Вставить("ДатаОтвета", Объект.ДатаОтправкиОтветаНаЗапрос);
	Состояние.Вставить("ЕстьОтправленныеОтветы", Состояние.ЕстьОтвет
		И ЗначениеЗаполнено(Состояние.ДатаОтвета));
	Состояние.Вставить("ОтветНеПринят", Объект.ОшибкиЛогическогоКонтроля.Количество() > 0);
	
	Сейчас = ТекущаяДатаСеанса();
	Результат = ТребованияФНС.ПредставлениеОтвета(Состояние, Сейчас);
	
	Элементы.ПоказатьОтветы.Видимость = Результат.ПоказатьОтветы;
	Элементы.ПоказатьОтветы.Заголовок = Результат.ПредставлениеСсылки;
	Элементы.ГиперссылкаОтветы.Видимость = Результат.ПоказатьОтветы;
	Элементы.ДатаОтветаПредставление.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(Результат.Представление);
	Элементы.ОгонекОтвета.Видимость = Результат.ДобавитьОгонек;
	Элементы.ИзменитьДатуОтвета.Видимость = Состояние.Подтвержден
		И НЕ Состояние.ЕстьОтправленныеОтветы;

КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьПриемПослеВопросаОПовторе(Результат, ДополнительныеПараметры) Экспорт
	
	Обработчик = Новый ОписаниеОповещения("ПодтвердитьПриемПослеПодтверждениеПолучения", ЭтотОбъект);
	ЭлектронныйДокументооборотСФССКлиент.ОтправитьПодтверждениеОПолученииСообщенийСЭДО(
		Обработчик, Объект.Организация, Объект.ИдентификаторСообщения, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьПриемПослеПодтверждениеПолучения(РезультатОтправки, ДополнительныйПараметры) Экспорт
	
	Контекст = Новый Структура;
	
	// Чтение результатов отправки.
	Если РезультатОтправки <> Неопределено Тогда
		Если РезультатОтправки.Свойство("ОписаниеОшибки") И ЗначениеЗаполнено(РезультатОтправки.ОписаниеОшибки) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатОтправки.ОписаниеОшибки);
		КонецЕсли;
		Если РезультатОтправки.Свойство("Выполнено") И РезультатОтправки.Выполнено Тогда
			Объект.ДатаОтправкиПодтверждения = ТекущаяДата();
			Объект.Статус = "Получено";
			Если ПолучитьОтправленныеОтветы() > 0 Тогда
				Объект.Статус = "Отправлено";
			КонецЕсли;
			Записать();
			УправлениеФормой(ЭтаФорма);
			ОформитьПредставлениеПодтверждения();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СфомироватьОтветНаСервере(Ссылка)
	
	Результат = Неопределено;
	
	Попытка
		Ответ = Документы.ОтветСтрахователяНаТребованиеПроверкиФСС.СоздатьДокумент();
		
		Ответ.Дата 		= ТекущаяДатаСеанса();
		Ответ.Основание	= Ссылка;
		
		Ответ.УстановитьВремя();
		Ответ.УстановитьНовыйНомер();
		
		Ответ.Заполнить(Ссылка);
		
		Ответ.Записать();
		
		Результат = Ответ.Ссылка;
	Исключение
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Невозможно сформировать ответ.';
													|en = 'Невозможно сформировать ответ.'"));
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПолучитьКоличествоОтветовНаТребованиеФСС(Ссылка)
	
	КоличествоОтветов = ПолучитьОтветыНаТребованиеФСС(Ссылка);
	
	КоличествоОтветов = ?(КоличествоОтветов = Неопределено, 0, КоличествоОтветов.Количество());
	
	Возврат КоличествоОтветов;
	
КонецФункции

&НаСервере
Функция ПолучитьОтветыНаТребованиеФСС(Ссылка)
	
	МассивОтветов = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ОтветСтрахователяНаТребованиеПроверкиФСС.Ссылка КАК Ответ
	               |ИЗ
	               |	Документ.ОтветСтрахователяНаТребованиеПроверкиФСС КАК ОтветСтрахователяНаТребованиеПроверкиФСС
	               |ГДЕ
	               |	ОтветСтрахователяНаТребованиеПроверкиФСС.Основание = &Основание
	               |	И ОтветСтрахователяНаТребованиеПроверкиФСС.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Основание", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат МассивОтветов;
	Иначе
		Выгрузка = РезультатЗапроса.Выгрузить();
		
		МассивОтветов = Выгрузка.ВыгрузитьКолонку("Ответ");
	КонецЕсли;
	
	Возврат МассивОтветов;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОбновитьОтправкуПослеПолученияКонтекста", 
		ЭтотОбъект);
		
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОбновитьОтправкуПослеПолученияКонтекста(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.КонтекстЭДО = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	ОповещениеОбратногоВызова = Новый ОписаниеОповещения("ОбновитьОтправкуПослеПолучения", ЭтотОбъект);
	Организации = Новый Массив;
	Организации.Добавить(Объект.Организация);
	КонтекстЭДОКлиент.ПолучитьВходящиеСообщенияСЭДОФСС(
		ОповещениеОбратногоВызова,
		Организации,
		Истина,
		Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтправкуПослеПолучения(Результат, ДополнительныеПараметры) Экспорт
	
	Прочитать();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НажатиеНаКнопкуПоказатьОтветыПоТребованию()
	
	КоличествоОтветов = ПолучитьОтветыНаТребованиеФСС(Объект.Ссылка);
	
	Если КоличествоОтветов = Неопределено Тогда
		
		ДлительнаяОтправкаКлиентСервер.ВывестиОшибку(НСтр("ru = 'Ответы отсутствуют';
															|en = 'Ответы отсутствуют'"));
		Возврат;
		
	КонецЕсли;
		
	Если КоличествоОтветов.Количество() > 1 Тогда
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("Основание", Объект.Ссылка);
	
		ОткрытьФорму(
			"Обработка.ДокументооборотСКонтролирующимиОрганами.Форма.ОтветыНаТребованияФСС",
			ДополнительныеПараметры,,
			Новый УникальныйИдентификатор);
		
	Иначе
		
		ПоказатьЗначение(, КоличествоОтветов[0]);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОтправленныеОтветы()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	УведомленияОПриемеОтказе.ОтветНаТребованиеФСС КАК ОтветНаТребованиеФСС
	|ИЗ
	|	Документ.ВходящийДокументСЭДОФСС.УведомленияОПриемеОтказе КАК УведомленияОПриемеОтказе
	|ГДЕ
	|	УведомленияОПриемеОтказе.Ссылка = &Основание";
	
	Запрос.УстановитьПараметр("Основание", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выгрузка = Результат.Выгрузить();
	
	Возврат Выгрузка.Количество();
	
КонецФункции

&НаСервере
Функция ПолучитьОшибкиОтветов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ОтветСтрахователяНаТребованиеПроверкиФСС.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТОтветы
	|ИЗ
	|	Документ.ОтветСтрахователяНаТребованиеПроверкиФСС КАК ОтветСтрахователяНаТребованиеПроверкиФСС
	|ГДЕ
	|	ОтветСтрахователяНаТребованиеПроверкиФСС.Основание = &Основание
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОтветСтрахователяНаТребованиеПроверкиФСС.Дата УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОшибкиЛогическогоКонтроля.СодержимоеОшибки КАК СодержимоеОшибки
	|ИЗ
	|	ВТОтветы КАК ВТОтветы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВходящийДокументСЭДОФСС.ОшибкиЛогическогоКонтроля КАК ОшибкиЛогическогоКонтроля
	|		ПО ВТОтветы.Ссылка = ОшибкиЛогическогоКонтроля.ОтветНаТребованиеФСС";
	
	Запрос.УстановитьПараметр("Основание", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 0;
	Иначе
		Возврат 1;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСтрахователя(ИдентификаторСообщения)
	
	Если НЕ ЗначениеЗаполнено(ИдентификаторСообщения) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВходящиеСообщенияСЭДОФСС.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.ВходящиеСообщенияСЭДОФСС КАК ВходящиеСообщенияСЭДОФСС
	|ГДЕ
	|	ВходящиеСообщенияСЭДОФСС.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", ИдентификаторСообщения);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Объект.Организация = Выборка.Организация;
		Записать();
		Прочитать();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьФайлПриложения(Знач ПараметрыПоиска = Неопределено)
	
	ФайлСсылка = Объект.ВходящийФайл;
	
	Если Объект.ФайлыПриложений.Количество() = 0 Тогда
		Возврат ФайлСсылка;
	КонецЕсли;
	
	// Параметры по умолчанию
	ПараметрыПоУмолчанию = Новый Структура;
	ПараметрыПоУмолчанию.Вставить("ПриоритетныйВидФайла", Объект.ВидДокументаФСС);
	ПараметрыПоУмолчанию.Вставить("ИскатьПоПрефиксу", Истина);
	
	// Обновление параметров из входных данных
	Если ПараметрыПоиска <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыПоУмолчанию, ПараметрыПоиска);
	КонецЕсли;
	ПараметрыПоиска = ПараметрыПоУмолчанию;
	
	ПрефиксПечатнойФормы = ПрефиксИмениФайлаПечатнойФормы();
	ВидФайлаПечатнойФормы = ПрефиксПечатнойФормы + " " + Объект.ВидДокументаФСС;
	ВидДляСравнения = НРег(СокрЛП(ПараметрыПоиска.ПриоритетныйВидФайла));
	
	Для Каждого ДанныеФайла Из Объект.ФайлыПриложений Цикл
		ТекущийВидФайла = ДанныеФайла.ВидФайла;
		
		// Нормализация вида файла
		ВидФайлаПриложения = СтрЗаменить(НРег(ТекущийВидФайла), НРег(ПрефиксПечатнойФормы), "");
		ВидФайлаПриложения = СокрЛП(ВидФайлаПриложения);
		
		Если ПараметрыПоиска.ИскатьПоПрефиксу Тогда
			УсловиеПоиска = СтрНачинаетсяС(ВидФайлаПриложения, ВидДляСравнения)
			Или ТекущийВидФайла = ВидФайлаПечатнойФормы
			Или ВидФайлаПриложения = ВидДляСравнения;
		Иначе
			УсловиеПоиска = ВидФайлаПриложения = ВидДляСравнения
			Или ТекущийВидФайла = ВидФайлаПечатнойФормы;
		КонецЕсли;
		
		Если УсловиеПоиска Тогда
			ФайлСсылка = ДанныеФайла.ФайлПриложения;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ФайлСсылка;
	
КонецФункции

&НаСервере
Процедура ИзменитьДатуОтветаЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Истина Тогда
		ОформитьПредставлениеОтвета();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПрефиксИмениФайлаПечатнойФормы()
	
	Возврат ЭлектронныйДокументооборотСФССКлиентСервер.ПрефиксИмениФайлаПечатнойФормыДокументаДоходнойЧастиСЭДО();
	
КонецФункции

&НаСервереБезКонтекста
Функция ПриложенияКОсновномуДокументу(Знач Объект)
	
	Приложения = Новый Массив;
	
	ПрефиксИмениФайлаПечатнойФормы = ПрефиксИмениФайлаПечатнойФормы();
	Для каждого ТекущийФайл из Объект.ФайлыПриложений Цикл
		Если НЕ СтрНачинаетсяС(ТекущийФайл.ИмяФайла, ПрефиксИмениФайлаПечатнойФормы)
			И НЕ ТекущийФайл.ВидФайла = Объект.ВидДокументаФСС Тогда
			РеквизитыФайла = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
				ТекущийФайл.ФайлПриложения, "Размер, Расширение");
			Приложение = Новый Структура("ИмяФайла, Размер, Расширение, ПредставлениеФайла, СсылкаНаФайл");
			Приложение.СсылкаНаФайл = ТекущийФайл.ФайлПриложения;
			ЗаполнитьЗначенияСвойств(Приложение, ТекущийФайл);
			ЗаполнитьЗначенияСвойств(Приложение, РеквизитыФайла);
			ИмяФайлаПриложения	= ТекущийФайл.ИмяФайла + "." + РеквизитыФайла.Расширение;
			Шаблон = НСтр("ru = '%1 (%2)';
							|en = '%1 (%2)'");
			ПредставлениеРазмера = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.ТекстовоеПредставлениеРазмераФайла(
				РеквизитыФайла.Размер);
			Приложение.ПредставлениеФайла = СтрШаблон(Шаблон, ИмяФайлаПриложения, ПредставлениеРазмера);
			Приложения.Добавить(Приложение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Приложения;
	
КонецФункции

&НаКлиенте
Процедура ПоказатьВложенныйФайл(СсылкаНаФайл)
	
	ДанныеФайла = РаботаСФайламиКлиент.ДанныеФайла(СсылкаНаФайл,
		ЭтотОбъект.УникальныйИдентификатор, Истина);
		
	РасширениеPDF = "pdf";
	Если ВРег(ДанныеФайла.Расширение) = ВРег(РасширениеPDF)
		И НЕ ЭлектронныйДокументооборотСФССКлиент.ЭтоФайлPDF(ДанныеФайла) Тогда
		ТекстСообщения = ОшибкаНеверногоФорматаPDF();
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла, Ложь);
			
КонецПроцедуры

&НаКлиенте
Функция ОшибкаНеверногоФорматаPDF()
	
	Возврат НСтр("ru = 'Открыть файл с вложением невозможно. С сервера СФР получен некорректный файл pdf.';
				|en = 'Открыть файл с вложением невозможно. С сервера СФР получен некорректный файл pdf.'");
	
КонецФункции

#КонецОбласти
