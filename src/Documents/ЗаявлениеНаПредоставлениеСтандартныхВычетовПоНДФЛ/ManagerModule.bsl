#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Сотрудник)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаФизическоеЛицоВШапке("Сотрудник", "");
КонецФункции

// Возвращает заявление на предоставление стандартных вычетов НДФЛ по физ.лицу, зарегистрированное в указанном месяце,
// либо пустую ссылку.
//
// Параметры:
//  Сотрудник - Справочник.ФизическиеЛица - физическое лицо сотрудника, по которому требуется заявление
//  Месяц     - Дата
// 
// Возвращаемое значение:
//  ДокументСсылка.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ - ссылка на заявление, 
//                                                                     либо пустая ссылка, если заявление не найдено.
//
Функция СуществующееЗаявлениеНаВычет(Сотрудник, Знач Месяц) Экспорт
	
	Месяц = НачалоМесяца(Месяц);
	ПустаяСсылка = Документы.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ.ПустаяСсылка();
	
	Запрос = УчетНДФЛДокументы.КонфликтующиеРегистраторыВычетов(ПустаяСсылка, Месяц, Сотрудник,  Новый Массив);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда 
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ") Тогда
			Возврат Выборка.Регистратор;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ПустаяСсылка;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

Функция ДатаЗапрета(Знач ДатаДокумента, Знач Месяц) Экспорт
	
	Если Не ЗначениеЗаполнено(ДатаДокумента) Тогда
		ДатаДокумента = '39991231';
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Месяц) Тогда
		Месяц = '39991231';
	КонецЕсли;
	
	Возврат КонецГода(Мин(ДатаДокумента, Месяц));
	
КонецФункции

Процедура ЗаполнитьДатыЗапрета(ПараметрыОбновления) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ТаблицаДокументов.Ссылка КАК Ссылка,
		|	ТаблицаДокументов.Дата КАК Дата,
		|	ТаблицаДокументов.Месяц КАК Месяц
		|ИЗ
		|	Документ.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ КАК ТаблицаДокументов
		|ГДЕ
		|	ТаблицаДокументов.ДатаЗапрета = ДАТАВРЕМЯ(1, 1, 1)
		|	И ТаблицаДокументов.Месяц <> ДАТАВРЕМЯ(1, 1, 1)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбработчик(ПараметрыОбновления);
	Иначе
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПродолжитьОбработчик(ПараметрыОбновления);
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(
				ПараметрыОбновления, Выборка.Ссылка.Метаданные().ПолноеИмя(), "Ссылка", Выборка.Ссылка) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			ОбъектДокумента = Выборка.Ссылка.ПолучитьОбъект();
			ОбъектДокумента.ДатаЗапрета = ДатаЗапрета(Выборка.Дата, Выборка.Месяц);
			
			ОбъектДокумента.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОбъектДокумента);
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли