#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если Дата >= '20210701' Тогда
		ОтчетныйПериод = НачалоМесяца(Дата);
	КонецЕсли;
	
	ОкончаниеОтчетногоПериода = КонецМесяца(ОтчетныйПериод);
		
	Если Не ЗначениеЗаполнено(ИмяФайлаДляПФР) Тогда
		ИмяФайлаДляПФР = Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ИмяФайла(Организация, Дата, , Год(Дата));
	Иначе		
		Если Не ДополнительныеСвойства.Свойство("СохранитьИмяФайла") Тогда
			УИДИзИмениФайла = Прав(ИмяФайлаДляПФР, 36);
			
			Если Не СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(УИДИзИмениФайла) Тогда
				УИДИзИмениФайла = Строка(Новый УникальныйИдентификатор);	
			КонецЕсли;	
			
			ИмяФайлаДляПФР = Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ИмяФайла(Организация, Дата, УИДИзИмениФайла, Год(Дата));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИмяФайлаДляПФР = "";
	ДокументПринятВПФР = Ложь;
	ФайлСформирован = Ложь;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ УчетСтраховыхВзносов.ОрганизацияОтчитываетсяПоВзносамСамостоятельно(Организация, ОтчетныйПериод) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Организация не отчитывается самостоятельно';
																|en = 'Company does not report independently'"), ЭтотОбъект, , , Отказ);
	Иначе 	
		ПерсонифицированныйУчет.ПроверитьДанныеОрганизации(ЭтотОбъект, Организация, Отказ, КонецМесяца(ОтчетныйПериод));
	КонецЕсли;
	
	МероприятияСотрудников = Новый Соответствие;
	Для Каждого ДанныеМероприятия Из Мероприятия Цикл
		СписокМероприятий = МероприятияСотрудников[ДанныеМероприятия.Сотрудник];
		Если СписокМероприятий = Неопределено Тогда 
			СписокМероприятий = Новый Массив;
		КонецЕсли;
		СписокМероприятий.Добавить(ДанныеМероприятия);
		МероприятияСотрудников.Вставить(ДанныеМероприятия.Сотрудник, СписокМероприятий);
	КонецЦикла;
	
	Если ДополнительныеСвойства.Свойство("ПроверкаЗаполненияПередЗаписьюЗагруженногоДокумента") Тогда
		СсылкаНаДокумент = Неопределено;
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Руководитель");
	Иначе
		СсылкаНаДокумент = Ссылка;
	КонецЕсли;
	
	УникальныеСтраховыеНомера = Новый Соответствие;
	Для Каждого ДанныеСотрудника Из Сотрудники Цикл 
		Если ЗначениеЗаполнено(ДанныеСотрудника.СтраховойНомерПФР) Тогда 
			Если УникальныеСтраховыеНомера[ДанныеСотрудника.СтраховойНомерПФР] <> Неопределено Тогда 
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Строка %1: СНИЛС %2 уже был введен ранее в строке %3.';
						|en = 'Line %1: SNILS%2 is already filled in line %3.'"),
					ДанныеСотрудника.НомерСтроки, ДанныеСотрудника.СтраховойНомерПФР, УникальныеСтраховыеНомера[ДанныеСотрудника.СтраховойНомерПФР]);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
					"Объект.Сотрудники[" + Формат(ДанныеСотрудника.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].СтраховойНомерПФР" , , Отказ);
			Иначе 
				УникальныеСтраховыеНомера.Вставить(ДанныеСотрудника.СтраховойНомерПФР, ДанныеСотрудника.НомерСтроки);
			КонецЕсли;
			ТекстСообщения = "";
			Если Не РегламентированныеДанныеКлиентСервер.СтраховойНомерПФРСоответствуетТребованиям(ДанныеСотрудника.СтраховойНомерПФР, ТекстСообщения) Тогда 
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
					"Объект.Сотрудники[" + Формат(ДанныеСотрудника.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].СтраховойНомерПФР" , , Отказ);
			КонецЕсли;
		КонецЕсли;
		СписокМероприятий = МероприятияСотрудников[ДанныеСотрудника.Сотрудник];
		Если Не ЗначениеЗаполнено(ДанныеСотрудника.ЗаявлениеОПродолжении) 
			И Не ЗначениеЗаполнено(ДанныеСотрудника.ЗаявлениеОПредоставлении)
			И СписокМероприятий = Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Строка %1: Не указаны мероприятия сотрудника.';
					|en = 'Line %1: Employee events are not specified.'"),
				ДанныеСотрудника.НомерСтроки);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
				"Объект.Сотрудники[" + Формат(ДанныеСотрудника.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник" , , Отказ);
		КонецЕсли;
		Если СписокМероприятий <> Неопределено Тогда 
			Для Каждого ДанныеМероприятия Из СписокМероприятий Цикл 
				Если Не ЗначениеЗаполнено(ДанныеМероприятия.ДатаМероприятия) Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = '%1: Не указана дата мероприятия.';
							|en = '%1: Event date is not specified.'"), ДанныеСотрудника.Сотрудник);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
						"Объект.Сотрудники[" + Формат(ДанныеСотрудника.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник" , , Отказ);
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ДанныеМероприятия.ВидМероприятия) Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = '%1: Не указан вид мероприятия.';
							|en = '%1: Event kind is not specified.'"), ДанныеСотрудника.Сотрудник);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
						"Объект.Сотрудники[" + Формат(ДанныеСотрудника.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник" , , Отказ);
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ДанныеМероприятия.НаименованиеДокументаОснования) Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = '%1: Не указано наименование документа-основания.';
							|en = '%1: Base document name is not specified.'"), ДанныеСотрудника.Сотрудник);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
						"Объект.Сотрудники[" + Формат(ДанныеСотрудника.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник" , , Отказ);
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ДанныеМероприятия.ДатаДокументаОснования) Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = '%1: Не указана дата документа-основания.';
							|en = '%1: Base document date is not specified.'"), ДанныеСотрудника.Сотрудник);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
						"Объект.Сотрудники[" + Формат(ДанныеСотрудника.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник" , , Отказ);
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ДанныеМероприятия.НомерДокументаОснования) Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = '%1: Не указан номер документа-основания.';
							|en = '%1: Base document number is not specified.'"), ДанныеСотрудника.Сотрудник);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
						"Объект.Сотрудники[" + Формат(ДанныеСотрудника.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник" , , Отказ);
				КонецЕсли;
				Если ДанныеМероприятия.ДатаДокументаОснования > Дата Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = '%1: Дата документа-основания не может быть больше даты СЗВ-ТД.';
							|en = '%1: Base document date cannot be later than SZV-TD date.'"), ДанныеСотрудника.Сотрудник);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
						"Объект.Сотрудники[" + Формат(ДанныеСотрудника.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник" , , Отказ);
				КонецЕсли;
				Если ЗначениеЗаполнено(ДанныеСотрудника.ДатаРождения) 
					И ДанныеМероприятия.ДатаДокументаОснования < ДанныеСотрудника.ДатаРождения Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = '%1: Дата документа-основания не может быть меньше даты рождения.';
						|en = '%1: Base document date cannot be earlier than date of birth.'"), ДанныеСотрудника.Сотрудник);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
					"Объект.Сотрудники[" + Формат(ДанныеСотрудника.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник" , , Отказ);
				КонецЕсли;
				Если ЗначениеЗаполнено(ДанныеМероприятия.ДатаОтмены) Тогда
					Если ДанныеМероприятия.ДатаОтмены > Дата Тогда
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = '%1: Дата отмены мероприятия не может быть больше даты СЗВ-ТД.';
								|en = '%1: Event cancellation date cannot be later than SZV-TD date.'"), ДанныеСотрудника.Сотрудник);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
							"Объект.Сотрудники[" + Формат(ДанныеСотрудника.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник" , , Отказ);
					КонецЕсли;
					Если ДанныеМероприятия.ДатаОтмены < '20200101' Тогда
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = '%1: Дата отмены мероприятия не может быть меньше 2020 года.';
								|en = '%1: Event cancellation date cannot be before 2020.'"), ДанныеСотрудника.Сотрудник);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
							"Объект.Сотрудники[" + Формат(ДанныеСотрудника.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник" , , Отказ);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаСотрудников = Сотрудники.Выгрузить(, "НомерСтроки,Сотрудник,ЗаявлениеОПродолжении,ЗаявлениеОПредоставлении,ЗаявлениеОПродолженииОтмена,ЗаявлениеОПредоставленииОтмена");
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТаблицаСотрудников", ТаблицаСотрудников);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаСотрудников.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСотрудников.Сотрудник КАК Сотрудник,
		|	ТаблицаСотрудников.ЗаявлениеОПродолжении КАК ЗаявлениеОПродолжении,
		|	ТаблицаСотрудников.ЗаявлениеОПредоставлении КАК ЗаявлениеОПредоставлении,
		|	ТаблицаСотрудников.ЗаявлениеОПродолженииОтмена КАК ЗаявлениеОПродолженииОтмена,
		|	ТаблицаСотрудников.ЗаявлениеОПредоставленииОтмена КАК ЗаявлениеОПредоставленииОтмена
		|ПОМЕСТИТЬ ВТТаблицаСотрудников
		|ИЗ
		|	&ТаблицаСотрудников КАК ТаблицаСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСотрудников.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСотрудников.Сотрудник КАК Сотрудник,
		|	ВЫРАЗИТЬ(ТаблицаСотрудников.ЗаявлениеОПродолжении КАК Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности).Дата КАК ЗаявлениеОПродолженииДата
		|ПОМЕСТИТЬ ВТПродолженияБезОтмены
		|ИЗ
		|	ВТТаблицаСотрудников КАК ТаблицаСотрудников
		|ГДЕ
		|	ТаблицаСотрудников.ЗаявлениеОПродолжении <> НЕОПРЕДЕЛЕНО
		|	И ТаблицаСотрудников.ЗаявлениеОПредоставлении = НЕОПРЕДЕЛЕНО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСотрудников.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСотрудников.Сотрудник КАК ФизическоеЛицо,
		|	ТаблицаСотрудников.ЗаявлениеОПродолжении КАК ЗаявлениеОПродолжении,
		|	ТаблицаСотрудников.ЗаявлениеОПродолженииОтмена КАК ЗаявлениеОПродолженииОтмена,
		|	ЗаявленияОПродолженииПереданные.Регистратор КАК ЗаявлениеОПродолженииРегистратор,
		|	ТаблицаСотрудников.ЗаявлениеОПредоставлении КАК ЗаявлениеОПредоставлении,
		|	ТаблицаСотрудников.ЗаявлениеОПредоставленииОтмена КАК ЗаявлениеОПредоставленииОтмена,
		|	ЗаявленияОПредоставлении.Регистратор КАК ЗаявлениеОПредоставленииРегистратор
		|ИЗ
		|	ВТТаблицаСотрудников КАК ТаблицаСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявленияОВеденииТрудовыхКнижекПереданные КАК ЗаявленияОПродолженииПереданные
		|		ПО ТаблицаСотрудников.Сотрудник = ЗаявленияОПродолженииПереданные.ФизическоеЛицо
		|			И ТаблицаСотрудников.ЗаявлениеОПродолжении = ЗаявленияОПродолженииПереданные.Заявление
		|			И ТаблицаСотрудников.ЗаявлениеОПродолженииОтмена = ЗаявленияОПродолженииПереданные.Отозвано
		|			И (ЗаявленияОПродолженииПереданные.Регистратор <> &Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявленияОВеденииТрудовыхКнижекПереданные КАК ЗаявленияОПредоставлении
		|		ПО ТаблицаСотрудников.Сотрудник = ЗаявленияОПредоставлении.ФизическоеЛицо
		|			И ТаблицаСотрудников.ЗаявлениеОПредоставлении = ЗаявленияОПредоставлении.Заявление
		|			И ТаблицаСотрудников.ЗаявлениеОПредоставленииОтмена = ЗаявленияОПредоставлении.Отозвано
		|			И (ЗаявленияОПредоставлении.Регистратор <> &Ссылка)
		|ГДЕ
		|	(ТаблицаСотрудников.ЗаявлениеОПродолжении <> НЕОПРЕДЕЛЕНО
		|				И ТаблицаСотрудников.ЗаявлениеОПродолжении <> ЗНАЧЕНИЕ(Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.ПустаяСсылка)
		|			ИЛИ ТаблицаСотрудников.ЗаявлениеОПредоставлении <> НЕОПРЕДЕЛЕНО
		|				И ТаблицаСотрудников.ЗаявлениеОПредоставлении <> ЗНАЧЕНИЕ(Документ.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности.ПустаяСсылка))
		|	И НЕ ЕСТЬNULL(ЗаявленияОПродолженииПереданные.Регистратор, ЗаявленияОПредоставлении.Регистратор) ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.ЗаявлениеОПродолженииРегистратор) Тогда
			
			Если Выборка.ЗаявлениеОПродолженииОтмена Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = '%1: отзыв заявления о продолжении ведения трудовой книжки передавался %2.';
						|en = '%1: the revocation of the application to continue maintaining the employment record book was transferred %2.'"), Выборка.ФизическоеЛицо, Выборка.ЗаявлениеОПродолженииРегистратор);
			Иначе
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = '%1: заявление о продолжении ведения трудовой книжки передавалось %2.';
						|en = '%1: application to continue maintaining the employment record book was transferred %2.'"), Выборка.ФизическоеЛицо, Выборка.ЗаявлениеОПродолженииРегистратор);
			КонецЕсли;
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
				"Объект.Сотрудники[" + Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].ЗаявлениеОПродолжении" , , Отказ);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.ЗаявлениеОПредоставлении) Тогда
			
			Если Выборка.ЗаявлениеОПредоставленииОтмена Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = '%1: отзыв заявления о предоставлении сведений в электронном виде передавался %2.';
						|en = '%1: the revocation of the application for the provision of information in electronic form was transferred %2.'"), Выборка.ФизическоеЛицо, Выборка.ЗаявлениеОПредоставленииРегистратор);
			Иначе
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = '%1: заявление о предоставлении сведений в электронном виде передавалось %2.';
						|en = '%1: application for the provision of information in electronic form was transferred %2.'"), Выборка.ФизическоеЛицо, Выборка.ЗаявлениеОПредоставленииРегистратор);
			КонецЕсли;
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
				"Объект.Сотрудники[" + Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].ЗаявлениеОПредоставлении" , , Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗарплатаКадры.ВТСодержитСтроки(Запрос.МенеджерВременныхТаблиц, "ВТПродолженияБезОтмены") Тогда
		
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Сотрудники.Ссылка КАК Сотрудник,
			|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДОБАВИТЬКДАТЕ(ПродолженияБезОтмены.ЗаявлениеОПродолженииДата, ДЕНЬ, -1) КАК Период,
			|	ПродолженияБезОтмены.НомерСтроки КАК НомерСтроки
			|ПОМЕСТИТЬ ВТСотрудникПериоды
			|ИЗ
			|	Справочник.Сотрудники КАК Сотрудники
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПродолженияБезОтмены КАК ПродолженияБезОтмены
			|		ПО Сотрудники.ФизическоеЛицо = ПродолженияБезОтмены.Сотрудник
			|ГДЕ
			|	Сотрудники.ГоловнаяОрганизация = &ГоловнаяОрганизация";
		
		Запрос.Выполнить();
		
		ПоляОтбораПериодическихДанных = Новый Структура;
		ОтборЗаявленияОВеденииТрудовыхКнижекПереданные = Новый Массив;
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
			ОтборЗаявленияОВеденииТрудовыхКнижекПереданные, "Регистратор", "<>", Ссылка);
		
		ПоляОтбораПериодическихДанных.Вставить("ЗаявленияОВеденииТрудовыхКнижекПереданные", ОтборЗаявленияОВеденииТрудовыхКнижекПереданные);
		
		Описатель = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
			Запрос.МенеджерВременныхТаблиц, "ВТСотрудникПериоды");
		
		КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(Описатель, Истина,
			"ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиВид,ЗаявленияОПредоставленииСведенийОТрудовойДеятельности,ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиОтозвано",
			ПоляОтбораПериодическихДанных);
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СотрудникПериоды.НомерСтроки КАК НомерСтроки,
			|	СотрудникПериоды.ФизическоеЛицо КАК Сотрудник,
			|	МАКСИМУМ(КадровыеДанныеСотрудников.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности) КАК ЗаявленияОПредоставленииСведенийОТрудовойДеятельности
			|ИЗ
			|	ВТСотрудникПериоды КАК СотрудникПериоды
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
			|		ПО СотрудникПериоды.Период = КадровыеДанныеСотрудников.Период
			|			И СотрудникПериоды.ФизическоеЛицо = КадровыеДанныеСотрудников.ФизическоеЛицо
			|ГДЕ
			|	ЕСТЬNULL(КадровыеДанныеСотрудников.ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиВид, ЗНАЧЕНИЕ(Перечисление.ВидыЗаявленийОПредоставленииСведенийОТрудовойДеятельности.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЗаявленийОПредоставленииСведенийОТрудовойДеятельности.СведенияОТрудовойДеятельностиВЭлектроннойФорме)
			|	И НЕ КадровыеДанныеСотрудников.ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиОтозвано
			|
			|СГРУППИРОВАТЬ ПО
			|	СотрудникПериоды.НомерСтроки,
			|	СотрудникПериоды.ФизическоеЛицо";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1: При передаче сведений о продолжении ведения трудовой книжки, нужно оформить
					|отзыв заявления о предоставлении сведений в электронном виде, зарегистрированное %2.';
					|en = '%1: When transferring information on maintaining the employment record book, you need to issue a
					|revocation of the application for providing information in electronic form, registered %2.'"),
				Выборка.Сотрудник,
				Выборка.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
				"Объект.Сотрудники[" + Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].ЗаявлениеОПродолжении" , , Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация", УчетСтраховыхВзносов.ОрганизацииДляКонсолидацииОтчетовПоВзносам(Организация, ОтчетныйПериод));
	Запрос.УстановитьПараметр("ТаблицаМероприятий", Мероприятия.Выгрузить());
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаМероприятий.Сотрудник КАК Сотрудник,
		|	ТаблицаМероприятий.НомерСтроки КАК НомерСтроки,
		|	ТаблицаМероприятий.ИдМероприятия КАК ИдМероприятия,
		|	ТаблицаМероприятий.ДатаОтмены КАК ДатаОтмены,
		|	ТаблицаМероприятий.ДатаМероприятия КАК ДатаМероприятия,
		|	ТаблицаМероприятий.ВидМероприятия КАК ВидМероприятия
		|ПОМЕСТИТЬ ВТТаблицаМероприятий
		|ИЗ
		|	&ТаблицаМероприятий КАК ТаблицаМероприятий
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСотрудников.Сотрудник КАК Сотрудник,
		|	ТаблицаСотрудников.НомерСтроки КАК НомерСтроки,
		|	ТаблицаМероприятий.ДатаМероприятия КАК ДатаМероприятия,
		|	ТаблицаМероприятий.ВидМероприятия КАК ВидМероприятия,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Мероприятия.ИдМероприятия, МероприятияПрочие.ИдМероприятия) ЕСТЬ NULL
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НеСуществующееМероприятие,
		|	ВЫБОР
		|		КОГДА МероприятияПереданные.ИдМероприятия ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК РанееПереданноеМероприятие,
		|	МероприятияПереданные.Регистратор КАК ДругойРегистратор
		|ИЗ
		|	ВТТаблицаСотрудников КАК ТаблицаСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаМероприятий КАК ТаблицаМероприятий
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПрочие КАК МероприятияПрочие
		|			ПО ТаблицаМероприятий.Сотрудник = МероприятияПрочие.ФизическоеЛицо
		|				И ТаблицаМероприятий.ИдМероприятия = МероприятияПрочие.ИдМероприятия
		|				И (МероприятияПрочие.Организация В (&Организация))
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельности КАК Мероприятия
		|			ПО ТаблицаМероприятий.Сотрудник = Мероприятия.ФизическоеЛицо
		|				И (Мероприятия.Организация В (&Организация))
		|				И ТаблицаМероприятий.ИдМероприятия = Мероприятия.ИдМероприятия
		|				И (ВЫБОР
		|					КОГДА ТаблицаМероприятий.ДатаОтмены = ДАТАВРЕМЯ(1, 1, 1)
		|						ТОГДА ЛОЖЬ
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ = Мероприятия.Отменено)
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МероприятияТрудовойДеятельностиПереданные КАК МероприятияПереданные
		|			ПО ТаблицаМероприятий.ИдМероприятия = МероприятияПереданные.ИдМероприятия
		|				И (ВЫБОР
		|					КОГДА ТаблицаМероприятий.ДатаОтмены = ДАТАВРЕМЯ(1, 1, 1)
		|						ТОГДА ЛОЖЬ
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ = МероприятияПереданные.Отменено)
		|				И (МероприятияПереданные.Регистратор <> &Ссылка)
		|				И (МероприятияПереданные.Организация В (&Организация))
		|		ПО ТаблицаСотрудников.Сотрудник = ТаблицаМероприятий.Сотрудник
		|ГДЕ
		|	(ЕСТЬNULL(Мероприятия.ИдМероприятия, МероприятияПрочие.ИдМероприятия) ЕСТЬ NULL
		|			ИЛИ НЕ МероприятияПереданные.ИдМероприятия ЕСТЬ NULL)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НеСуществующееМероприятие Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1: Среди мероприятий есть не зарегистрированные (%2 от %3).';
					|en = '%1: There are unregistered events (%2 dated %3) among the events.'"),
				Выборка.Сотрудник, Выборка.ВидМероприятия, Выборка.ДатаМероприятия);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
				"Объект.Сотрудники[" + Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник" , , Отказ);
			
		КонецЕсли;
		
		Если Выборка.РанееПереданноеМероприятие Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1: Среди мероприятий есть принятые в ПФР по другими документам  (%2 от %3 - %4).';
					|en = '%1: There are events accepted by the PF based on other documents (%2 dated %3 - %4) among the events.'"),
				Выборка.Сотрудник, Выборка.ВидМероприятия, Выборка.ДатаМероприятия, Выборка.ДругойРегистратор);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент,
				"Объект.Сотрудники[" + Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник" , , Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ДанныеДляПроведенияДокумента(Ссылка);
	
	ЭлектронныеТрудовыеКнижки.СформироватьДвиженияЗаявленийОВеденииТрудовыхКнижекПереданных(
		Движения.ЗаявленияОВеденииТрудовыхКнижекПереданные, ДанныеДляПроведения.ЗаявленияОВеденииТрудовыхКнижекПереданные);
	
	ДанныеДляПроведения =
		Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ДанныеДляПроведенияПоМероприятияТрудовойДеятельностиПереданные(Ссылка)[Ссылка];
	
	ЭлектронныеТрудовыеКнижки.СформироватьДвиженияМероприятийТрудовойДеятельностиПереданных(
		Движения.МероприятияТрудовойДеятельностиПереданные, ДанныеДляПроведения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьОбязательныеПоля(Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не указана организация.';
													|en = 'Company is not specified.'"), ЭтотОбъект, "Организация", "Объект", Отказ);	
		Возврат;
	КонецЕсли;
	
	ДанныеОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрационныйНомерПФР, КодОрганаПФР");

	Если Не ЗначениеЗаполнено(ДанныеОрганизации.РегистрационныйНомерПФР) Тогда
		ТекстСообщения = НСтр("ru = 'У организации не заполнен регистрационный номер ПФР.';
								|en = 'PF registration number is not specified for the company.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Организация, "РегистрационныйНомерПФР", , Отказ);
	ИначеЕсли СтрДлина(ДанныеОрганизации.РегистрационныйНомерПФР) <> 14 Тогда
		ТекстСообщения = НСтр("ru = 'У организации не верно заполнен регистрационный номер ПФР.';
								|en = 'PF registration number is specified incorrectly for the company.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Организация, "РегистрационныйНомерПФР", , Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеОрганизации.КодОрганаПФР) Тогда
		ТекстСообщения = НСтр("ru = 'У организации не заполнен код органа ПФР ';
								|en = 'PF authority code is not specified for the company.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Организация, "КодОрганаПФР", , Отказ);
	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли