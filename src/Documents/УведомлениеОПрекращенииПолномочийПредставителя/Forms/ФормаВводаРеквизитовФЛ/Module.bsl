
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Параметры.СтруктураДанных;
	
	Если СтруктураДанных.Свойство("ТолькоПросмотрФормы") И СтруктураДанных.ТолькоПросмотрФормы Тогда
		Элементы.ФИО.ТолькоПросмотр							= Истина;
		Элементы.Должность.ТолькоПросмотр					= Истина;
		Элементы.СНИЛС.ТолькоПросмотр						= Истина;
		Элементы.Телефон.ТолькоПросмотр						= Истина;
		Элементы.АдресЭлектроннойПочты.ТолькоПросмотр		= Истина;
		
		Элементы.ФормаКнопкаСохранить.Доступность			= Ложь;
	КонецЕсли;
	
	Если СтруктураДанных <> Неопределено И СтруктураДанных.Свойство("СтраховательСотрудник") Тогда
		ФИО												= СтруктураДанных.ФИО;
		Фамилия											= СтруктураДанных.Фамилия;
		Имя												= СтруктураДанных.Имя;
		Отчество										= СтруктураДанных.Отчество;
		Должность 										= СтруктураДанных.Должность;
		СотрудникСтрахователя							= Истина;
		Элементы.СНИЛС.Видимость						= Ложь;
		Элементы.Телефон.Видимость						= Ложь;
		Элементы.АдресЭлектроннойПочты.Видимость		= Ложь;
		Элементы.Должность.АвтоОтметкаНезаполненного	= Истина;
	ИначеЕсли СтруктураДанных <> Неопределено И СтруктураДанных.Свойство("ФИО") Тогда
		ФИО							= СтруктураДанных.ФИО;
		Фамилия						= СтруктураДанных.Фамилия;
		Имя							= СтруктураДанных.Имя;
		Отчество					= СтруктураДанных.Отчество;
		Должность 					= СтруктураДанных.Должность;
		СНИЛС 						= СтруктураДанных.СНИЛС;
		Телефон 					= СтруктураДанных.Телефон;
		АдресЭлектроннойПочты		= СтруктураДанных.АдресЭлектроннойПочты;
	КонецЕсли;
	
	Заголовок = СтруктураДанных.Заголовок;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если НЕ СохранениеВозможно() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ФИО",						ФИО);
	СтруктураДанных.Вставить("Фамилия",					Фамилия);
	СтруктураДанных.Вставить("Имя",						Имя);
	СтруктураДанных.Вставить("Отчество",				Отчество);
	СтруктураДанных.Вставить("Наименование",			ФИО);
	СтруктураДанных.Вставить("Должность",				Должность);
	СтруктураДанных.Вставить("СНИЛС",					СНИЛС);
	СтруктураДанных.Вставить("Телефон",					Телефон);
	СтруктураДанных.Вставить("АдресЭлектроннойПочты",	АдресЭлектроннойПочты);
	СтруктураДанных.Вставить("ЭтоЮридическоеЛицо",		Ложь);
	СтруктураДанных.Вставить("ФЛ",						Истина);
	
	Закрыть(СтруктураДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ФИОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ФормаВводаФИО = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("ФормаВводаФИО");
	
	ФормаВводаФИО.Фамилия 	= Фамилия;
	ФормаВводаФИО.Имя 		= Имя;
	ФормаВводаФИО.Отчество 	= Отчество;
	
	ФормаВводаФИО.ОписаниеОповещенияОЗакрытии =
		Новый ОписаниеОповещения("ФИОНачалоВыбораЗавершение", ЭтотОбъект);
	ФормаВводаФИО.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаВводаФИО.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ФИООчистка(Элемент, СтандартнаяОбработка)
	
	Фамилия 	= "";
	Имя 		= "";
	Отчество 	= "";
	
	ФИО = "";
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция СохранениеВозможно()
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	
	Если НЕ ЗначениеЗаполнено(ФИО) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задано ФИО физического лица.';
														|en = 'Не задано ФИО физического лица.'"),,
			"ФИО",, Отказ);
	КонецЕсли;
	
	Если СотрудникСтрахователя Тогда
		Элементы.Должность.АвтоОтметкаНезаполненного = Истина;
		Если НЕ ЗначениеЗаполнено(Должность) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задана должность физического лица.';
															|en = 'Не задана должность физического лица.'"),,
				"Должность",, Отказ);
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(СНИЛС) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задан СНИЛС физического лица.';
															|en = 'Не задан СНИЛС физического лица.'"),,
				"СНИЛС",, Отказ);
		ИначеЕсли СтрДлина(СНИЛС) <> 14 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Указан некорректный СНИЛС физического лица.';
															|en = 'Указан некорректный СНИЛС физического лица.'"),,
				"СНИЛС",, Отказ);
		КонецЕсли;
			
		Если ЗначениеЗаполнено(Телефон) ИЛИ ЗначениеЗаполнено(АдресЭлектроннойПочты) Тогда
			Если НЕ ЗначениеЗаполнено(Телефон) И НЕ ЗначениеЗаполнено(АдресЭлектроннойПочты) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задан телефон физического лица.';
																|en = 'Не задан телефон физического лица.'"),,
					"Телефон",, Отказ);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(АдресЭлектроннойПочты) И НЕ ЗначениеЗаполнено(Телефон) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задан адрес электронной почты физического лица.';
																|en = 'Не задан адрес электронной почты физического лица.'"),,
					"АдресЭлектроннойПочты",, Отказ);
			ИначеЕсли ЗначениеЗаполнено(АдресЭлектроннойПочты) Тогда
				ТекстОшибки = "";
				ЭлектроннаяПочта = СокрЛП(АдресЭлектроннойПочты);
				Если ДокументооборотСКОКлиентСервер.НайденыЗапрещенныеСимволы(
					ЭлектроннаяПочта,
					НСтр("ru = 'Адрес электронной почты ';
						|en = 'Адрес электронной почты '"),
					"АдресЭлектроннойПочты",
					Истина,
					ТекстОшибки) Тогда
					
					ОбщегоНазначенияКлиент.СообщитьПользователю((ТекстОшибки),,
						"АдресЭлектроннойПочты",, Отказ);
					
				ИначеЕсли НЕ ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(ЭлектроннаяПочта) Тогда
					
					Если НЕ СтрНайти(ЭлектроннаяПочта, "@") Тогда
						ОбщегоНазначенияКлиент.СообщитьПользователю(
							НСтр("ru = 'Некорректно указана электронная почта. Отсутствует символ @';
								|en = 'Некорректно указана электронная почта. Отсутствует символ @'"),,
							"АдресЭлектроннойПочты",, Отказ);
					Иначе
						ОбщегоНазначенияКлиент.СообщитьПользователю(
							НСтр("ru = 'Электронная почта содержит некорректные сочетания символов';
								|en = 'Электронная почта содержит некорректные сочетания символов'"),,
							"АдресЭлектроннойПочты",, Отказ);
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Необходимо задать хотя бы один вид контактной информации.';
															|en = 'Необходимо задать хотя бы один вид контактной информации.'"),,
				,, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Возврат НЕ Отказ;
	
КонецФункции

&НаКлиенте
Процедура ФИОНачалоВыбораЗавершение(РезультатРедактирования, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РезультатРедактирования) Тогда
		Возврат;
	КонецЕсли;
	
	Фамилия 	= РезультатРедактирования.Фамилия;
	Имя 		= РезультатРедактирования.Имя;
	Отчество 	= РезультатРедактирования.Отчество;
	
	ФИО = ДокументооборотСКОКлиентСервер.ПолучитьПредставлениеФИО(РезультатРедактирования);
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти
