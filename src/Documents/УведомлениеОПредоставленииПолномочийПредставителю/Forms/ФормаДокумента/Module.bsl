&НаКлиенте
Перем КонтекстЭДОКлиент Экспорт;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		Если НЕ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			Если Параметры.Свойство("Организация") И ЗначениеЗаполнено(Параметры.Организация) Тогда
				Объект.Организация = Параметры.Организация;
				Объект.Страхователь = Параметры.Организация;
				ПодставитьРеквизитыСтрахователя(ЭтаФорма);
				
			Иначе
				УчетПоВсемОрганизациям = РегламентированнаяОтчетность.ПолучитьПризнакУчетаПоВсемОрганизациям();
				Элементы.Страхователь.ТолькоПросмотр = НЕ УчетПоВсемОрганизациям;
				
				ОргПоУмолчанию = РегламентированнаяОтчетность.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
				
				КонтекстЭДОСервер = КонтекстЭДОСервер();
				
				Если ЗначениеЗаполнено(ОргПоУмолчанию)
					И ?(КонтекстЭДОСервер = Неопределено, Истина,
					КонтекстЭДОСервер.СписокДопустимыхОрганизацийВОбъектахОбмена().Найти(ОргПоУмолчанию) <> Неопределено)
					И ((ЗначениеЗаполнено(ОргПоУмолчанию) И НЕ УчетПоВсемОрганизациям)
					ИЛИ (НЕ ЗначениеЗаполнено(Объект.Организация) И УчетПоВсемОрганизациям
					И (ЗначениеЗаполнено(ОргПоУмолчанию)))) Тогда
					
					Объект.Организация = ОргПоУмолчанию;
					Объект.Страхователь = ОргПоУмолчанию;
					ПодставитьРеквизитыСтрахователя(ЭтаФорма);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗагрузитьДокументИзФайлаОбмена") И Параметры.ЗагрузитьДокументИзФайлаОбмена Тогда
		Записать();
		РезультатЗагрузки = ДокументооборотСКОВызовСервера.ЗагрузитьУПУП(
			Параметры.АдресФайла,
			Объект.Ссылка);
		Если НЕ РезультатЗагрузки.Выполнено Тогда
			ОбщегоНазначения.СообщитьПользователю(РезультатЗагрузки.Ошибка);
			Возврат;
		КонецЕсли;
		
		Прочитать();
	КонецЕсли;
	
	// Получатель
	ОпределитьПолучателя();
	
	УведомлениеОтправлено = УведомлениеОтправлено(Объект.Ссылка);
	
	Инициализация();
	ИнициализироватьДанные(Параметры);
	ИзменитьОформлениеФормы(ЭтотОбъект); // Клиент-серверная
	ИзменитьОформлениеФормыНаименованиеЭтапа(ЭтотОбъект);
	
	УправлениеФормой(ЭтаФорма);
	
	ВключитьВозможностьОтзыва();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ДатыЗапретаИзменения") Тогда
		ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	Оповестить("Запись_УведомлениеОПпредоставленииПолномочийПредставителю", , Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ЗначениеЗаполнено(Объект.Страхователь) И ИмяСобытия = "Запись_Организации"
		И (Параметр = Объект.Страхователь ИЛИ Источник = Объект.Страхователь) Тогда
		
		ПодставитьРеквизитыСтрахователя(ЭтаФорма);
	КонецЕсли;
	
	Если ИмяСобытия = "Завершение отправки" Тогда
		УведомлениеОтправлено = ПослеОтправкиНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении_Завершение(ВходящийКонтекст, Результат) Экспорт
	
	Инициализация();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховательПриИзменении(Элемент)
	
	ПодставитьРеквизитыСтрахователя(ЭтаФорма);
	
	Если НЕ ПодписьЗагружена И ТипЗнч(Объект.Страхователь) = Тип("Строка") Тогда
		ВвестиРеквизитыСтрахователя();
	КонецЕсли;
	
	// Получатель
	ОпределитьПолучателя();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховательОчистка(Элемент, СтандартнаяОбработка)
	
	Если ПодписьЗагружена Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьТЧПоВладельцу(ЭтаФорма, "Страхователь");
	Объект.Страхователь = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
	Инициализация();
	
	РегНомерПФР = "";
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховательСотрудникПриИзменении(Элемент)
	
	ПодставитьРеквизитыСотрудникаСтрахователя(ЭтаФорма);
	
	Если НЕ ПодписьЗагружена И ТипЗнч(Объект.СтраховательСотрудник) = Тип("Строка") Тогда
		ВвестиРеквизитыСотрудникаСтрахователя();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховательСотрудникОчистка(Элемент, СтандартнаяОбработка)
	
	Если ПодписьЗагружена Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьТЧПоВладельцу(ЭтаФорма, "СотрудникСтрахователя");
	Объект.СтраховательСотрудник = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
	Инициализация();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыСотрудникаСтрахователяНажатие(Элемент)
	
	ВвестиРеквизитыСотрудникаСтрахователя();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыСтрахователяНажатие(Элемент)
	
	ВвестиРеквизитыСтрахователя();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыПредставителяНажатие(Элемент)
	
	ВвестиРеквизитыПредставителя();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыСотрудникаПредставителяНажатие(Элемент)
	
	ВвестиРеквизитыСотрудникаПредставителя();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьИПроверить(Команда)
	
	Если НЕ ДокументооборотСКОКлиент.ПроверитьИЗаписать(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтправить(Команда)
	
	ДокументооборотСКОКлиент.ЗапоминаниеОшибок("Сброс");
	Если НЕ Записать() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	РезультатыПроверки = ДокументооборотСКОВызовСервера.ПроверитьУПУП(Объект);
	
	Если РезультатыПроверки.Количество() <> 0 Тогда
		Для каждого РезультатПроверки Из РезультатыПроверки Цикл
			ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатПроверки.ТекстОшибки,,
			РезультатПроверки.Поле);
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"КомандаОтправить_Завершение", 
		ЭтотОбъект);
	
	КонтекстЭДОКлиент.ОтправкаРегламентированногоОтчетаВПФР(Объект.Ссылка, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтправить_Завершение(Результат, ВходящийКонтекст) Экспорт
	
	ЗапретитьИзменение = ЗапретитьИзменение();
	
	// Перерисовка статуса отправки в форме Отчетность
	КонтекстЭДОКлиент.ОповеститьОбОтправкеУведомленияОПредоставленииПолномочийПредставителю(Объект.Ссылка, Объект.Организация);
	
	Если Открыта() И ЗапретитьИзменение Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ОчиститьСообщения();
	Если НЕ ПодписьЗагружена Тогда
		РезультатыПроверки = ДокументооборотСКОВызовСервера.ПроверитьУПУП(Объект);
		
		Если РезультатыПроверки.Количество() <> 0 Тогда
			Для каждого РезультатПроверки Из РезультатыПроверки Цикл
				ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатПроверки.ТекстОшибки,,
				РезультатПроверки.Поле);
			КонецЦикла;
			
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьПослеПроверки", ЭтотОбъект);
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура Отозвать(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДокументОснование", Объект.Ссылка);
	ОткрытьФорму("Документ.УведомлениеОПрекращенииПолномочийПредставителя.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура Инициализация()
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	Если ТипЗнч(Объект.Страхователь) = Тип("Строка") Тогда
		МассивТипов.Добавить(Тип("Строка"));
	КонецЕсли;
	Элементы.Страхователь.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	Если ТипЗнч(Объект.Представитель) = Тип("Строка") Тогда
		МассивТипов.Добавить(Тип("Строка"));
	КонецЕсли;
	Элементы.Представитель.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	Если ТипЗнч(Объект.ПредставительСотрудник) = Тип("Строка") Тогда
		МассивТипов.Добавить(Тип("Строка"));
	КонецЕсли;
	Элементы.ПредставительСотрудник.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	Если ТипЗнч(Объект.СтраховательСотрудник) = Тип("Строка") Тогда
		МассивТипов.Добавить(Тип("Строка"));
	КонецЕсли;
	Элементы.СтраховательСотрудник.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) И ЗначениеЗаполнено(Объект.ИмяФайлаВыгрузки) Тогда
		РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Ссылка, "ЭлектроннаяПодпись");
		ПодписьЗагружена = РеквизитыОбъекта.ЭлектроннаяПодпись.Получить() <> Неопределено;
	Иначе
		ПодписьЗагружена = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПрорисоватьСтатус(Форма)
	
	Объект = Форма.Объект;
	
	ВидКонтролирующегоОргана = ИмяТекущегоТипаПолучателя();
	
	ПараметрыПрорисовкиПанелиОтправки = ДокументооборотСКОВызовСервера.ПараметрыПрорисовкиПанелиОтправки(Объект.Ссылка, Объект.Организация, ВидКонтролирующегоОргана);
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.ПрименитьПараметрыПрорисовкиПанелиОтправки(Форма, ПараметрыПрорисовкиПанелиОтправки);
	
	// Для того, что состояние определяется только для записанного объекта, а у нас незаписанный.
	// Поэтому организация может быть пустой в ссылке, а в объекте она уже есть.
	// Поэтому передаем организацию в явном виде
	КомментарийЭтапа = ДокументооборотСКОВызовСервера.ДопКомментарийЭтапаВЗаявленииПФР(Объект.Ссылка, Объект.Организация);
	Если КомментарийЭтапа <> Неопределено Тогда
		Форма.Элементы.КомментарийЭтапа.Видимость = Истина;
		Форма.Элементы.КомментарийЭтапа.Заголовок = КомментарийЭтапа;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокФормы(Форма)
	
	ТекстЗаголовка = НСтр("ru = 'Уведомление о предоставлении полномочий представителю ПФР';
							|en = 'Уведомление о предоставлении полномочий представителю ПФР'");
	Форма.Заголовок = ДокументооборотСКОКлиентСервер.ЗаменитьПФРиФССнаСФР(ТекстЗаголовка, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьДанные(Параметры)

	ЧерныйЦвет  = ЦветаСтиля.ЗаголовкиСтрокЦветТекстаБРО;
	СерыйЦвет   = ЦветаСтиля.ЦветТекстаКнопки;
	СинийЦвет   = ЦветаСтиля.ГиперссылкаЦвет;
	КрасныйЦвет = ЦветаСтиля.ЦветОшибкиПроверкиБРО;
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	
	ЭтоНовый = Параметры.Ключ.Пустая();
	
	Если НЕ ЭтоНовый Тогда
		ЭлектронныйДокументооборотСКонтролирующимиОрганами.ОтметитьКакПрочтенное(Объект.Ссылка);
	КонецЕсли;
	
	ЗапретитьИзменение = ЗапретитьИзменение();
	
	Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
		ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.СкрытьЭлементыФормыПриИспользованииОднойОрганизации(
			ЭтотОбъект, 
			"Организация");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗапретитьИзменение()
	
	СтатусОтправки = СтатусОтправки();
	Возврат ЗначениеЗаполнено(СтатусОтправки) И СтатусОтправки <> Перечисления.СтатусыОтправки.ВКонверте;

КонецФункции

&НаСервере
Функция СтатусОтправки()

	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	Возврат КонтекстЭДОСервер.ПолучитьСтатусОтправкиОбъекта(Объект.Ссылка);

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяТекущегоТипаПолучателя()
	
	Возврат "ПФР";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.ФормаКомандаОтправить.Видимость = НЕ Форма.УведомлениеОтправлено;
	Форма.Элементы.ФормаЗаписать.ТолькоВоВсехДействиях = Форма.УведомлениеОтправлено;
	Форма.Элементы.ФормаЗагрузить.Видимость = НЕ Форма.УведомлениеОтправлено;
	
	Форма.Элементы.ПанельПредупреждения.Видимость = Ложь;
		
	ПредставительЮЛ = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.ПредставительЮЛ");
	РеквизитыПредставителя = Форма.Объект.РеквизитыСубъектов.НайтиСтроки(Новый Структура("Владелец", ПредставительЮЛ));
	
	Если НЕ ЗначениеЗаполнено(РеквизитыПредставителя) Тогда
		ПредставительФЛ = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.ПредставительФЛ");
		РеквизитыПредставителя = Форма.Объект.РеквизитыСубъектов.НайтиСтроки(Новый Структура("Владелец", ПредставительФЛ));
		Если ЗначениеЗаполнено(РеквизитыПредставителя) Тогда
			Форма.Элементы.ГруппаСотрудникПредставителя.Видимость = Истина;
		Иначе
			Форма.Элементы.ГруппаСотрудникПредставителя.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Форма.Элементы.ГруппаСотрудникПредставителя.Видимость = Истина;
	КонецЕсли;
	
	ТолькоПросмотрФормы = Форма.УведомлениеОтправлено ИЛИ Форма.ПодписьЗагружена;
	
	Форма.Элементы.НомерДокумента.ТолькоПросмотр 						= ТолькоПросмотрФормы;
	Форма.Элементы.НаименованиеДокумента.ТолькоПросмотр 				= ТолькоПросмотрФормы;
	Форма.Элементы.КемВыдан.ТолькоПросмотр 								= ТолькоПросмотрФормы;
	Форма.Элементы.ДатаНачалаДействия.ТолькоПросмотр 					= ТолькоПросмотрФормы;
	Форма.Элементы.ДатаОкончанияДействия.ТолькоПросмотр 				= ТолькоПросмотрФормы;
	Форма.Элементы.Страхователь.ТолькоПросмотр 							= Форма.УведомлениеОтправлено;
	Форма.Элементы.СтраховательСотрудник.ТолькоПросмотр 				= Форма.УведомлениеОтправлено;
	Форма.Элементы.Представитель.ТолькоПросмотр 						= Форма.УведомлениеОтправлено;
	Форма.Элементы.ПредставительСотрудник.ТолькоПросмотр 				= Форма.УведомлениеОтправлено;
	Форма.Элементы.Комментарий.ТолькоПросмотр 							= Ложь;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОчиститьТЧПоВладельцу(Форма, Владелец)

	Индекс = 1;
	СписокТЧ = Новый Массив;
	СписокТЧ.Добавить("ФИО");
	СписокТЧ.Добавить("КонтактнаяИнформация");
	СписокТЧ.Добавить("РеквизитыСубъектов");
	Для каждого ИмяТЧ из СписокТЧ Цикл
		Для каждого Строка из Форма.Объект[ИмяТЧ] Цикл
			Если Владелец = "Страхователь" Тогда
				Если Строка.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СтраховательЮЛ")
					ИЛИ Строка.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СтраховательФЛ") Тогда
					
					Форма.Объект[ИмяТЧ].Удалить(Строка.НомерСтроки - Индекс);
					Индекс = Индекс + 1;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Индекс = 1;
		Для каждого Строка из Форма.Объект[ИмяТЧ] Цикл
			Если Владелец = "СотрудникСтрахователя" Тогда
				Если Строка.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СотрудникСтрахователя") Тогда
					
					Форма.Объект[ИмяТЧ].Удалить(Строка.НомерСтроки - Индекс);
					Индекс = Индекс + 1;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Индекс = 1;
		Для каждого Строка из Форма.Объект[ИмяТЧ] Цикл
			Если Владелец = "СотрудникПредставителя" Тогда
				Если Строка.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СотрудникПредставителя") Тогда
					
					Форма.Объект[ИмяТЧ].Удалить(Строка.НомерСтроки - Индекс);
					Индекс = Индекс + 1;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Индекс = 1;
		Для каждого Строка из Форма.Объект[ИмяТЧ] Цикл
			Если Владелец = "Представитель" Тогда
				Если Строка.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.ПредставительЮЛ")
					ИЛИ Строка.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.ПредставительФЛ") Тогда
					
					Форма.Объект[ИмяТЧ].Удалить(Строка.НомерСтроки - Индекс);
					Индекс = Индекс + 1;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПодставитьРеквизитыСтрахователя(Форма)
	
	Если НЕ ЗначениеЗаполнено(Форма.Объект.Страхователь) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Форма.Объект.Страхователь) = Тип("СправочникСсылка.Организации")
		И Форма.Объект.Страхователь <> ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка") Тогда
		
		Форма.Объект.Организация = Форма.Объект.Страхователь;
		
		СвойстваОрганизации = ДокументооборотСКОВызовСервера.ПолучитьСвойстваОрганизации(Форма.Объект.Страхователь);
		
		Форма.Страхователь_ЮридическоеЛицо = СвойстваОрганизации.ЭтоЮридическоеЛицо;
		
		РегистрационныйНомерПФР = РегистрационныйНомерСФРОрганизации(Форма.Объект.Страхователь);
		Форма.Объект.РегНомерПФР = РегистрационныйНомерПФР;
		
		СубъектДоверенности = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо,
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СтраховательЮЛ"),
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СтраховательФЛ"));
		
		ОчиститьТЧПоВладельцу(Форма, "Страхователь");
		
		РеквизитыСубъекта			= Форма.Объект.РеквизитыСубъектов.Добавить();
		РеквизитыСубъекта.Владелец	= СубъектДоверенности;
		Если СвойстваОрганизации.ЭтоЮридическоеЛицо Тогда
		
			РеквизитыСубъекта.Наименование				= СвойстваОрганизации.НаимЮЛПол;
			РеквизитыСубъекта.НаименованиеКраткое		= ДокументооборотСКОВызовСервера.ПолучитьРеквизит(
				Форма.Объект.Страхователь, "НаименованиеСокращенное");
			РеквизитыСубъекта.РегистрационныйНомерПФР	= РегистрационныйНомерПФР;
			РеквизитыСубъекта.ИНН						= СвойстваОрганизации.ИННЮЛ;
			РеквизитыСубъекта.КПП						= СвойстваОрганизации.КППЮЛ;
		
		Иначе
			
			СтруктураФИО	= ДокументооборотСКОВызовСервера.РазложитьФИО(СвойстваОрганизации.ФИО);
			ФИО				= Форма.Объект.ФИО.Добавить();
			ФИО.Владелец	= СубъектДоверенности;
			ФИО.Фамилия		= СтруктураФИО.Фамилия;
			ФИО.Имя			= СтруктураФИО.Имя;
			ФИО.Отчество	= СтруктураФИО.Отчество;
			
			РеквизитыСубъекта.РегистрационныйНомерПФР	= РегистрационныйНомерПФР;
			РеквизитыСубъекта.ИНН						= СвойстваОрганизации.ИННФЛ;
			РеквизитыСубъекта.СНИЛС						= СвойстваОрганизации.СНИЛС;
		
		КонецЕсли;
		
		КонтактнаяИнформацияСтрахователя 	= КонтактнаяИнформацияСубъекта(Форма.Объект.Страхователь);
		КонтактнаяИнформация				= Форма.Объект.КонтактнаяИнформация.Добавить();
		КонтактнаяИнформация.Владелец		= СубъектДоверенности;
		КонтактнаяИнформация.Телефон		= КонтактнаяИнформацияСтрахователя.Телефон;
		КонтактнаяИнформация.АдресЭлПочты	= КонтактнаяИнформацияСтрахователя.АдресЭлектроннойПочты;
		
		Форма.Модифицированность = Истина;
		
		УправлениеФормой(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиРеквизитыСтрахователя()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Заголовок", "Сведения о страхователе");
	
	Если ТипЗнч(Объект.Страхователь) = Тип("Строка") Тогда
		СвойстваОрганизации = Новый Структура("ЭтоЮридическоеЛицо", Истина);
		
		СтраховательЮЛ = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СтраховательЮЛ");
		РеквизитыСтрахователя = Объект.РеквизитыСубъектов.НайтиСтроки(Новый Структура("Владелец", СтраховательЮЛ));
		
		Если НЕ ЗначениеЗаполнено(РеквизитыСтрахователя) Тогда
			СтраховательФЛ = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СтраховательФЛ");
			РеквизитыСтрахователя = Объект.РеквизитыСубъектов.НайтиСтроки(Новый Структура("Владелец", СтраховательФЛ));
			Если ЗначениеЗаполнено(РеквизитыСтрахователя) Тогда
				СвойстваОрганизации.ЭтоЮридическоеЛицо = Ложь;
			КонецЕсли;
		Иначе
			СвойстваОрганизации.ЭтоЮридическоеЛицо = Истина;
		КонецЕсли;
		
	Иначе
		СвойстваОрганизации = ДокументооборотСКОВызовСервера.ПолучитьСвойстваОрганизации(Объект.Страхователь);
	КонецЕсли;
	
	СубъектДоверенности = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СтраховательЮЛ"),
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СтраховательФЛ"));
	РеквизитыСтрахователя = Объект.РеквизитыСубъектов.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	
	Если РеквизитыСтрахователя.Количество() > 0 Тогда
		РеквизитыСтрахователя = РеквизитыСтрахователя[0];
	Иначе
		РеквизитыСтрахователя = Новый Структура("Наименование, НаименованиеКраткое, РегистрационныйНомерПФР, ИНН, КПП",
		"", "", "", "", "");
	КонецЕсли;
	
	Если СвойстваОрганизации.ЭтоЮридическоеЛицо Тогда
		СтруктураДанных.Вставить("Наименование", РеквизитыСтрахователя.Наименование);
		СтруктураДанных.Вставить("НаименованиеКраткое", РеквизитыСтрахователя.НаименованиеКраткое);
		СтруктураДанных.Вставить("РегистрационныйНомерПФР", РеквизитыСтрахователя.РегистрационныйНомерПФР);
		СтруктураДанных.Вставить("ИНН", РеквизитыСтрахователя.ИНН);
		СтруктураДанных.Вставить("КПП", РеквизитыСтрахователя.КПП);
		СтруктураДанных.Вставить("ЮЛ", Истина);
	Иначе
		СтруктураДанных.Вставить("РегистрационныйНомерПФР", РеквизитыСтрахователя.РегистрационныйНомерПФР);
		СтруктураДанных.Вставить("СНИЛС", РеквизитыСтрахователя.СНИЛС);
		СтруктураДанных.Вставить("ИНН", РеквизитыСтрахователя.ИНН);
		
		ФИОСтрахователя = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
		Если ФИОСтрахователя.Количество() > 0 Тогда
			ФИОСтрахователя = ФИОСтрахователя[0];
		Иначе
			ФИОСтрахователя = Новый Структура("Фамилия, Имя, Отчество, Должность",
			"", "", "", "");
		КонецЕсли;
		
		ФИО = ФИОСтрахователя.Фамилия + " " + ФИОСтрахователя.Имя + " " + ФИОСтрахователя.Отчество;
		СтруктураДанных.Вставить("Фамилия", ФИОСтрахователя.Фамилия);
		СтруктураДанных.Вставить("Имя", ФИОСтрахователя.Имя);
		СтруктураДанных.Вставить("Отчество", ФИОСтрахователя.Отчество);
		СтруктураДанных.Вставить("ФИО", ФИО);
		
	КонецЕсли;
	
	КонтактнаяИнформацияСтрахователя = Объект.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	Если КонтактнаяИнформацияСтрахователя.Количество() > 0 Тогда
		КонтактнаяИнформацияСтрахователя = КонтактнаяИнформацияСтрахователя[0];
	Иначе
		КонтактнаяИнформацияСтрахователя = Новый Структура("Телефон, АдресЭлПочты", "", "",);
	КонецЕсли;
	
	СтруктураДанных.Вставить("Телефон", КонтактнаяИнформацияСтрахователя.Телефон);
	СтруктураДанных.Вставить("АдресЭлектроннойПочты", КонтактнаяИнформацияСтрахователя.АдресЭлПочты);
	
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", УведомлениеОтправлено ИЛИ ПодписьЗагружена);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиРеквизитыСтрахователяПослеВвода", ЭтотОбъект);
	ОткрытьФорму(
		"Документ.УведомлениеОПредоставленииПолномочийПредставителю.Форма.ФормаВводаРеквизитов",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиРеквизитыСтрахователяПослеВвода(
		СтруктураДанных,
		ДополнительныеПараметры) Экспорт
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураДанных.Наименование) Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("Строка"));
		МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
		Элементы.Страхователь.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
		
		Если СтруктураДанных.ЭтоЮридическоеЛицо Тогда
			Объект.Страхователь = СтруктураДанных.Наименование;
		Иначе
			Объект.Страхователь = СтруктураДанных.ФИО;
		КонецЕсли;
	КонецЕсли;
	
	ОчиститьТЧПоВладельцу(ЭтаФорма, "Страхователь");
	
	СубъектДоверенности = ?(СтруктураДанных.ЭтоЮридическоеЛицо,
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СтраховательЮЛ"),
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СтраховательФЛ"));
	
	ЭтаФорма.Страхователь_ЮридическоеЛицо = СтруктураДанных.ЭтоЮридическоеЛицо;
	
	РеквизитыСубъекта			= ЭтаФорма.Объект.РеквизитыСубъектов.Добавить();
	РеквизитыСубъекта.Владелец	= СубъектДоверенности;
	Если СтруктураДанных.ЭтоЮридическоеЛицо Тогда
		
		РеквизитыСубъекта.Наименование				= СтруктураДанных.Наименование;
		РеквизитыСубъекта.НаименованиеКраткое		= СтруктураДанных.НаименованиеКраткое;
		РеквизитыСубъекта.РегистрационныйНомерПФР	= СтруктураДанных.РегистрационныйНомерПФР;
		РеквизитыСубъекта.ИНН						= СтруктураДанных.ИНН;
		РеквизитыСубъекта.КПП						= СтруктураДанных.КПП;
		
	Иначе
		
		ФИО				= ЭтаФорма.Объект.ФИО.Добавить();
		ФИО.Владелец	= СубъектДоверенности;
		ФИО.Фамилия		= СтруктураДанных.Фамилия;
		ФИО.Имя			= СтруктураДанных.Имя;
		ФИО.Отчество	= СтруктураДанных.Отчество;
		
		РеквизитыСубъекта.РегистрационныйНомерПФР	= СтруктураДанных.РегистрационныйНомерПФР;
		РеквизитыСубъекта.ИНН						= СтруктураДанных.ИНН;
		РеквизитыСубъекта.СНИЛС						= СтруктураДанных.СНИЛС;
		
	КонецЕсли;
	
	КонтактнаяИнформация				= ЭтаФорма.Объект.КонтактнаяИнформация.Добавить();
	КонтактнаяИнформация.Владелец		= СубъектДоверенности;
	КонтактнаяИнформация.Телефон		= СтруктураДанных.Телефон;
	КонтактнаяИнформация.АдресЭлПочты	= СтруктураДанных.АдресЭлектроннойПочты;
	
	Модифицированность = Истина;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПодставитьРеквизитыСотрудникаСтрахователя(Форма)
	
	Если НЕ ЗначениеЗаполнено(Форма.Объект.СтраховательСотрудник) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Форма.Объект.СтраховательСотрудник) = Тип("СправочникСсылка.ФизическиеЛица")
		И Форма.Объект.СтраховательСотрудник <> ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка") Тогда
		
		СвойстваФизическогоЛица = ДокументооборотСКОВызовСервера.ПолучитьСвойстваФизическогоЛица(Форма.Объект.СтраховательСотрудник);
		
		СубъектДоверенности = 
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СотрудникСтрахователя");
		
		ОчиститьТЧПоВладельцу(Форма, "СотрудникСтрахователя");
		
		ФИО				= Форма.Объект.ФИО.Добавить();
		ФИО.Владелец	= СубъектДоверенности;
		ФИО.Фамилия		= СвойстваФизическогоЛица.ФИО.Фамилия;
		ФИО.Имя			= СвойстваФизическогоЛица.ФИО.Имя;
		ФИО.Отчество	= СвойстваФизическогоЛица.ФИО.Отчество;
		ФИО.Должность	= СвойстваФизическогоЛица.Должность;
		
		Форма.Модифицированность = Истина;
		
		УправлениеФормой(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиРеквизитыСотрудникаСтрахователя()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Заголовок", "Сведения о представителе страхователя");
	
	СубъектДоверенности = 
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СотрудникСтрахователя");
	
	ФИОСтрахователя = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	Если ФИОСтрахователя.Количество() > 0 Тогда
		ФИОСтрахователя = ФИОСтрахователя[0];
	Иначе
		ФИОСтрахователя = Новый Структура("Фамилия, Имя, Отчество, Должность",
		"", "", "", "");
	КонецЕсли;
	
	ФИО = ФИОСтрахователя.Фамилия + " " + ФИОСтрахователя.Имя + " " + ФИОСтрахователя.Отчество;
	СтруктураДанных.Вставить("Фамилия", ФИОСтрахователя.Фамилия);
	СтруктураДанных.Вставить("Имя", ФИОСтрахователя.Имя);
	СтруктураДанных.Вставить("Отчество", ФИОСтрахователя.Отчество);
	СтруктураДанных.Вставить("ФИО", ФИО);
	СтруктураДанных.Вставить("Должность", ФИОСтрахователя.Должность);
	
	СтруктураДанных.Вставить("СтраховательСотрудник", Истина);
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", УведомлениеОтправлено ИЛИ ПодписьЗагружена);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиРеквизитыСотрудникаСтрахователяПослеВвода", ЭтотОбъект);
	ОткрытьФорму(
		"Документ.УведомлениеОПредоставленииПолномочийПредставителю.Форма.ФормаВводаРеквизитовФЛ",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиРеквизитыПредставителя()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Заголовок", "Сведения о представителе");
	СтруктураДанных.Вставить("ПредставительСотрудник",
		?(ЗначениеЗаполнено(Объект.ПредставительСотрудник), Истина, Ложь));
	
	Если ТипЗнч(Объект.Представитель) = Тип("Строка") Тогда
		СвойстваПредставителя = Новый Структура("ЭтоЮридическоеЛицо", Истина);
		
		ПредставительЮЛ = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.ПредставительЮЛ");
		РеквизитыПредставителя = Объект.РеквизитыСубъектов.НайтиСтроки(Новый Структура("Владелец", ПредставительЮЛ));
		
		Если НЕ ЗначениеЗаполнено(РеквизитыПредставителя) Тогда
			ПредставительФЛ = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.ПредставительФЛ");
			РеквизитыПредставителя = Объект.РеквизитыСубъектов.НайтиСтроки(Новый Структура("Владелец", ПредставительФЛ));
			Если ЗначениеЗаполнено(РеквизитыПредставителя) Тогда
				СвойстваПредставителя.ЭтоЮридическоеЛицо = Ложь;
			КонецЕсли;
		Иначе
			СвойстваПредставителя.ЭтоЮридическоеЛицо = Истина;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект.Представитель) = Тип("СправочникСсылка.Организации")
		И Объект.Представитель <> ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка") Тогда
		
		СвойстваПредставителя = ДокументооборотСКОВызовСервера.ПолучитьСвойстваОрганизации(Объект.Представитель);
		
	ИначеЕсли ТипЗнч(Объект.Представитель) = Тип("СправочникСсылка.Контрагенты")
		И Объект.Представитель <> ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка") Тогда
		
		СвойстваПредставителя = ДокументооборотСКОВызовСервера.ПолучитьСвойстваКонтрагента(Объект.Представитель);
		
	ИначеЕсли ТипЗнч(Объект.Представитель) = Тип("СправочникСсылка.ФизическиеЛица")
		И Объект.Представитель <> ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка") Тогда
		
		СвойстваПредставителя = ДокументооборотСКОВызовСервера.ПолучитьСвойстваФизическогоЛица(Объект.Представитель);
		СвойстваПредставителя.Вставить("ЭтоЮридическоеЛицо", Ложь);
		
	Иначе
		СвойстваПредставителя = ДокументооборотСКОВызовСервера.ПолучитьСвойстваОрганизации(Объект.Представитель);
		
	КонецЕсли;
	
	СубъектДоверенности = ?(СвойстваПредставителя.ЭтоЮридическоеЛицо,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.ПредставительЮЛ"),
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.ПредставительФЛ"));
	РеквизитыПредставителя = Объект.РеквизитыСубъектов.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	
	Представитель_ФизическоеЛицо = Ложь;
	СубъектДоверенностиФЛ = 
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СотрудникПредставителя");
	РеквизитыПредставителяФЛ = Объект.РеквизитыСубъектов.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенностиФЛ));
	
	Если РеквизитыПредставителяФЛ.Количество() > 0
		И РеквизитыПредставителя.Количество() = 0
		И НЕ ЗначениеЗаполнено(Объект.ПредставительСотрудник) Тогда
		
		РеквизитыПредставителя = РеквизитыПредставителяФЛ[0];
		Представитель_ФизическоеЛицо = Истина;
		СубъектДоверенности = СубъектДоверенностиФЛ;
		СвойстваПредставителя.ЭтоЮридическоеЛицо = Ложь;
	Иначе
		Если РеквизитыПредставителя.Количество() > 0 Тогда
			РеквизитыПредставителя = РеквизитыПредставителя[0];
		Иначе
			РеквизитыПредставителя = Новый Структура("Наименование, НаименованиеКраткое, РегистрационныйНомерПФР, ИНН, КПП",
			"", "", "", "", "");
		КонецЕсли;
	КонецЕсли;
	
	НаименованиеФормы = "Документ.УведомлениеОПредоставленииПолномочийПредставителю.Форма.ФормаВводаРеквизитов";
	Если СвойстваПредставителя.ЭтоЮридическоеЛицо Тогда
		СтруктураДанных.Вставить("Наименование",			РеквизитыПредставителя.Наименование);
		СтруктураДанных.Вставить("НаименованиеКраткое",		РеквизитыПредставителя.НаименованиеКраткое);
		СтруктураДанных.Вставить("РегистрационныйНомерПФР",	РеквизитыПредставителя.РегистрационныйНомерПФР);
		СтруктураДанных.Вставить("ИНН",						РеквизитыПредставителя.ИНН);
		СтруктураДанных.Вставить("КПП",						РеквизитыПредставителя.КПП);
		СтруктураДанных.Вставить("ЮЛ", Истина);
	ИначеЕсли Представитель_ФизическоеЛицо Тогда
		
		НаименованиеФормы = "Документ.УведомлениеОПредоставленииПолномочийПредставителю.Форма.ФормаВводаРеквизитовФЛ";
		
		СтруктураДанных.Вставить("СНИЛС", РеквизитыПредставителя.СНИЛС);
		
		ФИОПредставителя = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
		Если ФИОПредставителя.Количество() > 0 Тогда
			ФИОПредставителя = ФИОПредставителя[0];
		Иначе
			ФИОПредставителя = Новый Структура("Фамилия, Имя, Отчество, Должность",
			"", "", "", "");
		КонецЕсли;
		
		ФИО = ФИОПредставителя.Фамилия + " " + ФИОПредставителя.Имя + " " + ФИОПредставителя.Отчество;
		СтруктураДанных.Вставить("Должность", ФИОПредставителя.Должность);
		СтруктураДанных.Вставить("Фамилия", ФИОПредставителя.Фамилия);
		СтруктураДанных.Вставить("Имя", ФИОПредставителя.Имя);
		СтруктураДанных.Вставить("Отчество", ФИОПредставителя.Отчество);
		СтруктураДанных.Вставить("ФИО", ФИО);
		
	Иначе
		СтруктураДанных.Вставить("РегистрационныйНомерПФР", РеквизитыПредставителя.РегистрационныйНомерПФР);
		СтруктураДанных.Вставить("СНИЛС", РеквизитыПредставителя.СНИЛС);
		СтруктураДанных.Вставить("ИНН", РеквизитыПредставителя.ИНН);
		
		ФИОПредставителя = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
		Если ФИОПредставителя.Количество() > 0 Тогда
			ФИОПредставителя = ФИОПредставителя[0];
		Иначе
			ФИОПредставителя = Новый Структура("Фамилия, Имя, Отчество, Должность",
			"", "", "", "");
		КонецЕсли;
		
		ФИО = ФИОПредставителя.Фамилия + " " + ФИОПредставителя.Имя + " " + ФИОПредставителя.Отчество;
		СтруктураДанных.Вставить("Фамилия", ФИОПредставителя.Фамилия);
		СтруктураДанных.Вставить("Имя", ФИОПредставителя.Имя);
		СтруктураДанных.Вставить("Отчество", ФИОПредставителя.Отчество);
		СтруктураДанных.Вставить("ФИО", ФИО);
		
	КонецЕсли;
	
	КонтактнаяИнформацияПредставителя = Объект.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	Если КонтактнаяИнформацияПредставителя.Количество() > 0 Тогда
		КонтактнаяИнформацияПредставителя = КонтактнаяИнформацияПредставителя[0];
	Иначе
		КонтактнаяИнформацияПредставителя = Новый Структура("Телефон, АдресЭлПочты", "", "",);
	КонецЕсли;
	
	СтруктураДанных.Вставить("Телефон", КонтактнаяИнформацияПредставителя.Телефон);
	СтруктураДанных.Вставить("АдресЭлектроннойПочты", КонтактнаяИнформацияПредставителя.АдресЭлПочты);
	
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", УведомлениеОтправлено ИЛИ ПодписьЗагружена);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиРеквизитыПредставителяПослеВвода", ЭтотОбъект);
	ОткрытьФорму(
		НаименованиеФормы,
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиРеквизитыПредставителяПослеВвода(
		СтруктураДанных,
		ДополнительныеПараметры) Экспорт
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураДанных.Наименование) Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("Строка"));
		МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
		МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
		МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
		Элементы.Представитель.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
		
		Если СтруктураДанных.ЭтоЮридическоеЛицо Тогда
			Объект.Представитель = СтруктураДанных.Наименование;
		Иначе
			Объект.Представитель = СтруктураДанных.ФИО;
		КонецЕсли;
	КонецЕсли;
	
	ОчиститьТЧПоВладельцу(ЭтаФорма, "Представитель");
	Если НЕ ЗначениеЗаполнено(Объект.ПредставительСотрудник) Тогда
		ОчиститьТЧПоВладельцу(ЭтаФорма, "СотрудникПредставителя");
	КонецЕсли;
	
	СубъектДоверенности = ?(СтруктураДанных.ЭтоЮридическоеЛицо,
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.ПредставительЮЛ"),
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.ПредставительФЛ"));
	
	Представитель_ФизическоеЛицо = Ложь;
	Если СтруктураДанных.Свойство("ФЛ") И СтруктураДанных.ФЛ Тогда
		СубъектДоверенности = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СотрудникПредставителя");
		Представитель_ФизическоеЛицо = Истина;
	КонецЕсли;
	
	ЭтаФорма.Представитель_ЮридическоеЛицо = СтруктураДанных.ЭтоЮридическоеЛицо;
	
	Если СтруктураДанных.ЭтоЮридическоеЛицо Тогда
		Объект.Представитель = СтруктураДанных.Наименование;
	Иначе
		Объект.Представитель = СтруктураДанных.ФИО;
	КонецЕсли;
	
	РеквизитыСубъекта			= ЭтаФорма.Объект.РеквизитыСубъектов.Добавить();
	РеквизитыСубъекта.Владелец	= СубъектДоверенности;
	Если СтруктураДанных.ЭтоЮридическоеЛицо Тогда
		
		РеквизитыСубъекта.Наименование				= СтруктураДанных.Наименование;
		РеквизитыСубъекта.НаименованиеКраткое		= СтруктураДанных.НаименованиеКраткое;
		РеквизитыСубъекта.РегистрационныйНомерПФР	= СтруктураДанных.РегистрационныйНомерПФР;
		РеквизитыСубъекта.ИНН						= СтруктураДанных.ИНН;
		РеквизитыСубъекта.КПП						= СтруктураДанных.КПП;
		
	Иначе
		
		ФИО				= ЭтаФорма.Объект.ФИО.Добавить();
		ФИО.Владелец	= СубъектДоверенности;
		ФИО.Фамилия		= СтруктураДанных.Фамилия;
		ФИО.Имя			= СтруктураДанных.Имя;
		ФИО.Отчество	= СтруктураДанных.Отчество;;
		
		Если Представитель_ФизическоеЛицо Тогда
			ФИО.Должность				= СтруктураДанных.Должность;
			РеквизитыСубъекта.СНИЛС		= СтруктураДанных.СНИЛС;
		Иначе
			РеквизитыСубъекта.РегистрационныйНомерПФР	= СтруктураДанных.РегистрационныйНомерПФР;
			РеквизитыСубъекта.ИНН						= СтруктураДанных.ИНН;
			РеквизитыСубъекта.СНИЛС						= СтруктураДанных.СНИЛС;
		КонецЕсли;
		
	КонецЕсли;
	
	КонтактнаяИнформация				= ЭтаФорма.Объект.КонтактнаяИнформация.Добавить();
	КонтактнаяИнформация.Владелец		= СубъектДоверенности;
	КонтактнаяИнформация.Телефон		= СтруктураДанных.Телефон;
	КонтактнаяИнформация.АдресЭлПочты	= СтруктураДанных.АдресЭлектроннойПочты;
	
	Модифицированность = Истина;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиРеквизитыСотрудникаПредставителя()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Заголовок", "Сведения о сотруднике представителя");
	СтруктураДанных.Вставить("ПредставительСотрудник",
		?(ЗначениеЗаполнено(Объект.ПредставительСотрудник), Истина, Ложь));
	
	СубъектДоверенности = 
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СотрудникПредставителя");
	РеквизитыПредставителяФЛ = Объект.РеквизитыСубъектов.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	
	Если РеквизитыПредставителяФЛ.Количество() > 0 Тогда
		РеквизитыПредставителяФЛ = РеквизитыПредставителяФЛ[0];
	Иначе
		РеквизитыПредставителяФЛ = Новый Структура("ФИО, СНИЛС, Должность, Телефон, АдресЭлПочты",
		"", "", "", "", "");
	КонецЕсли;
	
	СтруктураДанных.Вставить("СНИЛС", РеквизитыПредставителяФЛ.СНИЛС);
	
	ФИОПредставителя = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	Если ФИОПредставителя.Количество() > 0 Тогда
		ФИОПредставителя = ФИОПредставителя[0];
	Иначе
		ФИОПредставителя = Новый Структура("Фамилия, Имя, Отчество, Должность",
		"", "", "", "");
	КонецЕсли;
	
	ФИО = ФИОПредставителя.Фамилия + " " + ФИОПредставителя.Имя + " " + ФИОПредставителя.Отчество;
	СтруктураДанных.Вставить("Должность", ФИОПредставителя.Должность);
	СтруктураДанных.Вставить("Фамилия", ФИОПредставителя.Фамилия);
	СтруктураДанных.Вставить("Имя", ФИОПредставителя.Имя);
	СтруктураДанных.Вставить("Отчество", ФИОПредставителя.Отчество);
	СтруктураДанных.Вставить("ФИО", ФИО);
	
	КонтактнаяИнформацияПредставителя = Объект.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	Если КонтактнаяИнформацияПредставителя.Количество() > 0 Тогда
		КонтактнаяИнформацияПредставителя = КонтактнаяИнформацияПредставителя[0];
	Иначе
		КонтактнаяИнформацияПредставителя = Новый Структура("Телефон, АдресЭлПочты", "", "",);
	КонецЕсли;
	
	СтруктураДанных.Вставить("Телефон", КонтактнаяИнформацияПредставителя.Телефон);
	СтруктураДанных.Вставить("АдресЭлектроннойПочты", КонтактнаяИнформацияПредставителя.АдресЭлПочты);
	
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", УведомлениеОтправлено ИЛИ ПодписьЗагружена);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиРеквизитыСотрудникаПредставителяПослеВвода", ЭтотОбъект);
	ОткрытьФорму(
		"Документ.УведомлениеОПредоставленииПолномочийПредставителю.Форма.ФормаВводаРеквизитовФЛ",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьПолучателя()
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
		Объект.Получатель = КонтекстЭДОСервер.ОпределитьОрганПФРОрганизации(Объект.Организация, КодОрганаПФР);
		
	Иначе
		КодОрганаПФР = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьОформлениеФормыНаименованиеЭтапа(Форма)
	
	Если Элементы.НаименованиеЭтапа.Заголовок = "Отозвано" Тогда
		Элементы.БлокСостоянияОтправки.ЦветФона = ЦветаСтиля.ЦветФонаОшибкиОтправки;// красный
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеФормы(Форма)
	
	УстановитьЗаголовокФормы(Форма);
	ПрорисоватьСтатус(Форма);
	ИзменитьОформлениеФормыПриЗапретеИзменений(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеФормыПриЗапретеИзменений(Форма)
	
	// Элементы отправки
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	ЗапретитьИзменение = Форма.ЗапретитьИзменение;
	
	Если Форма.ЗапретитьИзменение Тогда
		
		Для каждого Элемент Из Элементы Цикл
			Если ТипЗнч(Элемент) = Тип("ПолеФормы")
				И Элемент.Имя <> "Комментарий" Тогда
				Элемент.ТолькоПросмотр = Истина;
			КонецЕсли;
		КонецЦикла; 

	КонецЕсли;

КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, ИмяТекущегоТипаПолучателя());
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, ИмяТекущегоТипаПолучателя());
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтотОбъект, ИмяТекущегоТипаПолучателя());
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, ИмяТекущегоТипаПолучателя());
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, ИмяТекущегоТипаПолучателя());
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Загрузить(Команда)
	
	Если НЕ ДокументооборотСКОКлиент.ПроверитьИЗаписать(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьПослеЗагрузки", ЭтотОбъект);
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Фильтр",					"XML-файл УПУП СФР (*.xml)|*.xml");
	ДополнительныеПараметры.Вставить("ВозвращатьРазмер", 		Истина);
	ДополнительныеПараметры.Вставить("МножественныйВыбор", 		Ложь);
	
	ОперацииСФайламиЭДКОКлиент.ДобавитьФайлы(
		ОписаниеОповещения, 
		Новый УникальныйИдентификатор,
		НСтр("ru = 'Выберите xml-файл';
			|en = 'Выберите xml-файл'"),
		ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПослеЗагрузки(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат.Выполнено ИЛИ Результат.ОписанияФайлов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеФайла = Результат.ОписанияФайлов[0];
	
	Если ЗначениеЗаполнено(ОписаниеФайла) Тогда
		
		Попытка
			УПУП = ДокументооборотСКОВызовСервера.ЗначениеXMLФайлаПоАдресу(ОписаниеФайла.Адрес, "xmlns", "utf-8");
			Если УПУП <> "http://пф.рф/УПУП/2020-02-03" Тогда
				ТекстСообщенияПользователю = ДокументооборотСКОКлиентСервер.ЗаменитьПФРиФССнаСФР(
					НСтр("ru = 'Выбран файл не уведомления о предоставлении полномочий представителю ПФР';
						|en = 'Выбран файл не уведомления о предоставлении полномочий представителю ПФР'"), Истина);
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщенияПользователю);
				Возврат;
			КонецЕсли;
		Исключение
			ТекстСообщенияПользователю = ДокументооборотСКОКлиентСервер.ЗаменитьПФРиФССнаСФР(
					НСтр("ru = 'Выбран файл не уведомления о предоставлении полномочий представителю ПФР';
						|en = 'Выбран файл не уведомления о предоставлении полномочий представителю ПФР'"), Истина);
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				ТекстСообщенияПользователю,,,, Истина);
			Возврат;
		КонецПопытки;
		
	КонецЕсли;
	
	РезультатЗагрузки = ДокументооборотСКОВызовСервера.ЗагрузитьУПУП(
		ОписаниеФайла.Адрес,
		Объект.Ссылка);
	Если НЕ РезультатЗагрузки.Выполнено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатЗагрузки.Ошибка);
		Возврат;
	КонецЕсли;
	
	Прочитать();
	Инициализация();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КонтактнаяИнформацияСубъекта(Ссылка)
	
	КонтактнаяИнформацияСубъекта = Новый Структура;
	
	// Телефон
	Данные = Новый Структура("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
	КонтактнаяИнформацияОбъекта = Ссылка.КонтактнаяИнформация.НайтиСтроки(Данные);
	Если КонтактнаяИнформацияОбъекта.Количество() > 0 Тогда
		Для каждого Строка из КонтактнаяИнформацияОбъекта Цикл
			Если ЗначениеЗаполнено(Строка.Представление) Тогда
				КонтактнаяИнформацияСубъекта.Вставить("Телефон", Строка.Представление);
			КонецЕсли;
		КонецЦикла;
	Иначе
		КонтактнаяИнформацияСубъекта.Вставить("Телефон", "");
	КонецЕсли;
	
	// АдресЭлектроннойПочты
	Данные = Новый Структура("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	КонтактнаяИнформацияОбъекта = Ссылка.КонтактнаяИнформация.НайтиСтроки(Данные);
	Если КонтактнаяИнформацияОбъекта.Количество() > 0 Тогда
		Для каждого Строка из КонтактнаяИнформацияОбъекта Цикл
			Если ЗначениеЗаполнено(Строка.Представление) Тогда
				КонтактнаяИнформацияСубъекта.Вставить("АдресЭлектроннойПочты", Строка.Представление);
			КонецЕсли;
		КонецЦикла;
	Иначе
		КонтактнаяИнформацияСубъекта.Вставить("АдресЭлектроннойПочты", "");
	КонецЕсли;
	
	Возврат КонтактнаяИнформацияСубъекта;
	
КонецФункции

&НаКлиенте
Процедура ПредставительПриИзменении(Элемент)
	
	ПодставитьРеквизитыПредставителя(ЭтаФорма);
	
	Если НЕ ПодписьЗагружена И ТипЗнч(Объект.Представитель) = Тип("Строка") Тогда
		ВвестиРеквизитыПредставителя();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительОчистка(Элемент, СтандартнаяОбработка)
	
	Если ПодписьЗагружена Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьТЧПоВладельцу(ЭтаФорма, "Представитель");
	Объект.Представитель = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
	Инициализация();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПодставитьРеквизитыПредставителя(Форма)
	
	Если НЕ ЗначениеЗаполнено(Форма.Объект.Представитель) Тогда
		Возврат;
	КонецЕсли;
	
	Страхователь_ФизическоеЛицо = Ложь;
	Если ТипЗнч(Форма.Объект.Представитель) = Тип("СправочникСсылка.Организации")
		И Форма.Объект.Представитель <> ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка") Тогда
		
		СвойстваПредставителя = ДокументооборотСКОВызовСервера.ПолучитьСвойстваОрганизации(Форма.Объект.Представитель);
	КонецЕсли;
	
	Если ТипЗнч(Форма.Объект.Представитель) = Тип("СправочникСсылка.Контрагенты")
		И Форма.Объект.Представитель <> ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка") Тогда
		
		СвойстваПредставителя = ДокументооборотСКОВызовСервера.ПолучитьСвойстваКонтрагента(Форма.Объект.Представитель);
	КонецЕсли;
	
	Если ТипЗнч(Форма.Объект.Представитель) = Тип("СправочникСсылка.ФизическиеЛица")
		И Форма.Объект.Представитель <> ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка") Тогда
		
		СвойстваПредставителя = ДокументооборотСКОВызовСервера.ПолучитьСвойстваФизическогоЛица(Форма.Объект.Представитель);
		Страхователь_ФизическоеЛицо = Истина;
		СвойстваПредставителя.Вставить("ЭтоЮридическоеЛицо", Ложь);
		ОчиститьТЧПоВладельцу(Форма, "СотрудникПредставителя");
		Форма.Объект.ПредставительСотрудник = "";
	КонецЕсли;
	
	Форма.Страхователь_ЮридическоеЛицо = СвойстваПредставителя.ЭтоЮридическоеЛицо;
	
	РегистрационныйНомерПФР = РегистрационныйНомерСФРОрганизации(Форма.Объект.Представитель);
	
	СубъектДоверенности = ?(СвойстваПредставителя.ЭтоЮридическоеЛицо,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.ПредставительЮЛ"),
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.ПредставительФЛ"));
	Если Страхователь_ФизическоеЛицо Тогда
		СубъектДоверенности = 
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СотрудникПредставителя");
	КонецЕсли;
		
	ОчиститьТЧПоВладельцу(Форма, "Представитель");
	Если НЕ ЗначениеЗаполнено(Форма.Объект.ПредставительСотрудник) Тогда
		ОчиститьТЧПоВладельцу(Форма, "СотрудникПредставителя");
	КонецЕсли;
	
	РеквизитыСубъекта			= Форма.Объект.РеквизитыСубъектов.Добавить();
	РеквизитыСубъекта.Владелец	= СубъектДоверенности;
	Если СвойстваПредставителя.ЭтоЮридическоеЛицо Тогда
		
		Если ТипЗнч(Форма.Объект.Представитель) = Тип("СправочникСсылка.Организации") Тогда
			РеквизитыСубъекта.Наименование				= СвойстваПредставителя.НаимЮЛПол;
			РеквизитыСубъекта.НаименованиеКраткое		= ДокументооборотСКОВызовСервера.ПолучитьРеквизит(
				Форма.Объект.Представитель, "НаименованиеСокращенное");
			РеквизитыСубъекта.ИНН						= СвойстваПредставителя.ИННЮЛ;
			РеквизитыСубъекта.КПП						= СвойстваПредставителя.КППЮЛ;
		Иначе
			РеквизитыСубъекта.Наименование				= СвойстваПредставителя.НаименованиеПолное;
			РеквизитыСубъекта.НаименованиеКраткое		= ДокументооборотСКОВызовСервера.ПолучитьРеквизит(
				Форма.Объект.Представитель, "Наименование");
			РеквизитыСубъекта.ИНН						= СвойстваПредставителя.ИНН;
			РеквизитыСубъекта.КПП						= СвойстваПредставителя.КПП;
		КонецЕсли;
		РеквизитыСубъекта.РегистрационныйНомерПФР	= РегистрационныйНомерПФР;
		
	Иначе
		
		Если Страхователь_ФизическоеЛицо Тогда
			
			ФИО				= Форма.Объект.ФИО.Добавить();
			ФИО.Владелец	= СубъектДоверенности;
			ФИО.Фамилия		= СвойстваПредставителя.ФИО.Фамилия;
			ФИО.Имя			= СвойстваПредставителя.ФИО.Имя;
			ФИО.Отчество	= СвойстваПредставителя.ФИО.Отчество;
			ФИО.Должность	= СвойстваПредставителя.Должность;
		
			РеквизитыСубъекта.СНИЛС = СвойстваПредставителя.СНИЛС;
			
		Иначе
			
			Если ТипЗнч(Форма.Объект.Представитель) = Тип("СправочникСсылка.Организации") Тогда
				СтруктураФИО	= ДокументооборотСКОВызовСервера.РазложитьФИО(СвойстваПредставителя.ФИО);
				ФИО				= Форма.Объект.ФИО.Добавить();
				ФИО.Владелец	= СубъектДоверенности;
				ФИО.Фамилия		= СтруктураФИО.Фамилия;
				ФИО.Имя			= СтруктураФИО.Имя;
				ФИО.Отчество	= СтруктураФИО.Отчество;
				
				РеквизитыСубъекта.РегистрационныйНомерПФР	= РегистрационныйНомерПФР;
				РеквизитыСубъекта.ИНН						= СвойстваПредставителя.ИННФЛ;
				РеквизитыСубъекта.СНИЛС						= СвойстваПредставителя.СНИЛС;
			Иначе
				ФИО				= Форма.Объект.ФИО.Добавить();
				ФИО.Владелец	= СубъектДоверенности;
				ФИО.Фамилия		= СвойстваПредставителя.Фамилия;
				ФИО.Имя			= СвойстваПредставителя.Имя;
				ФИО.Отчество	= СвойстваПредставителя.Отчество;
				
				РеквизитыСубъекта.РегистрационныйНомерПФР	= РегистрационныйНомерПФР;
				РеквизитыСубъекта.ИНН						= СвойстваПредставителя.ИНН;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	КонтактнаяИнформацияПредставителя 	= КонтактнаяИнформацияСубъекта(Форма.Объект.Представитель);
	КонтактнаяИнформация				= Форма.Объект.КонтактнаяИнформация.Добавить();
	КонтактнаяИнформация.Владелец		= СубъектДоверенности;
	КонтактнаяИнформация.Телефон		= КонтактнаяИнформацияПредставителя.Телефон;
	КонтактнаяИнформация.АдресЭлПочты	= КонтактнаяИнформацияПредставителя.АдресЭлектроннойПочты;
	
	Форма.Модифицированность = Истина;
	
	УправлениеФормой(Форма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительСотрудникПриИзменении(Элемент)
	
	ПодставитьРеквизитыСотрудникаПредставителя(ЭтаФорма);
	
	Если НЕ ПодписьЗагружена И ТипЗнч(Объект.ПредставительСотрудник) = Тип("Строка") Тогда
		ВвестиРеквизитыСотрудникаПредставителя();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительСотрудникОчистка(Элемент, СтандартнаяОбработка)
	
	Если ПодписьЗагружена Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьТЧПоВладельцу(ЭтаФорма, "СотрудникПредставителя");
	
	ЭтаФорма.Объект.ПредставительСотрудник = "";
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПодставитьРеквизитыСотрудникаПредставителя(Форма)
	
	Если НЕ ЗначениеЗаполнено(Форма.Объект.ПредставительСотрудник) Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьТЧПоВладельцу(Форма, "СотрудникПредставителя");
	
	СубъектДоверенности = 
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СотрудникПредставителя");
	
	Если ТипЗнч(Форма.Объект.ПредставительСотрудник) = Тип("СправочникСсылка.ФизическиеЛица")
		И Форма.Объект.ПредставительСотрудник <> ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка") Тогда
		
		СвойстваПредставителя = ДокументооборотСКОВызовСервера.ПолучитьСвойстваФизическогоЛица(Форма.Объект.ПредставительСотрудник);
		
		РеквизитыСубъекта			= Форма.Объект.РеквизитыСубъектов.Добавить();
		РеквизитыСубъекта.Владелец	= СубъектДоверенности;
		РеквизитыСубъекта.СНИЛС 	= СвойстваПредставителя.СНИЛС;
	
		ФИО				= Форма.Объект.ФИО.Добавить();
		ФИО.Владелец	= СубъектДоверенности;
		ФИО.Фамилия		= СвойстваПредставителя.ФИО.Фамилия;
		ФИО.Имя			= СвойстваПредставителя.ФИО.Имя;
		ФИО.Отчество	= СвойстваПредставителя.ФИО.Отчество;
		ФИО.Должность	= СвойстваПредставителя.Должность;
		
		КонтактнаяИнформацияПредставителя 	= КонтактнаяИнформацияСубъекта(Форма.Объект.ПредставительСотрудник);
		КонтактнаяИнформация				= Форма.Объект.КонтактнаяИнформация.Добавить();
		КонтактнаяИнформация.Владелец		= СубъектДоверенности;
		КонтактнаяИнформация.Телефон		= КонтактнаяИнформацияПредставителя.Телефон;
		КонтактнаяИнформация.АдресЭлПочты	= КонтактнаяИнформацияПредставителя.АдресЭлектроннойПочты;
		
	Иначе
		
		ФИО				= Форма.Объект.ФИО.Добавить();
		ФИО.Владелец	= СубъектДоверенности;
		СтруктураФИО	= ДокументооборотСКОВызовСервера.РазложитьФИО(Форма.Объект.ПредставительСотрудник);
		ФИО.Фамилия		= СтруктураФИО.Фамилия;
		ФИО.Имя			= СтруктураФИО.Имя;
		ФИО.Отчество	= СтруктураФИО.Отчество;
		
	КонецЕсли;
	
	Форма.Модифицированность = Истина;
		
	УправлениеФормой(Форма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиРеквизитыСотрудникаСтрахователяПослеВвода(
		СтруктураДанных,
		ДополнительныеПараметры) Экспорт
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьТЧПоВладельцу(ЭтаФорма, "СотрудникСтрахователя");
	
	СубъектДоверенности = 
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СотрудникСтрахователя");
	
	СтруктураФИО	= ДокументооборотСКОВызовСервера.РазложитьФИО(СтруктураДанных.ФИО);
	ФИО				= ЭтаФорма.Объект.ФИО.Добавить();
	ФИО.Владелец	= СубъектДоверенности;
	ФИО.Фамилия		= СтруктураФИО.Фамилия;
	ФИО.Имя			= СтруктураФИО.Имя;
	ФИО.Отчество	= СтруктураФИО.Отчество;
	ФИО.Должность	= СтруктураДанных.Должность;
	
	Если ЗначениеЗаполнено(СтруктураДанных.ФИО) Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("Строка"));
		МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
		Элементы.СтраховательСотрудник.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
		
		Объект.СтраховательСотрудник = 
			СтруктураФИО.Фамилия + " " + СтруктураФИО.Имя + " " + СтруктураФИО.Отчество;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиРеквизитыСотрудникаПредставителяПослеВвода(
		СтруктураДанных,
		ДополнительныеПараметры) Экспорт
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьТЧПоВладельцу(ЭтаФорма, "СотрудникПредставителя");
	
	СубъектДоверенности = 
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиСтрахователя.СотрудникПредставителя");
	
	РеквизитыСубъекта			= ЭтаФорма.Объект.РеквизитыСубъектов.Добавить();
	РеквизитыСубъекта.Владелец	= СубъектДоверенности;
	РеквизитыСубъекта.СНИЛС		= СтруктураДанных.СНИЛС;
	
	ФИО				= ЭтаФорма.Объект.ФИО.Добавить();
	ФИО.Владелец	= СубъектДоверенности;
	ФИО.Фамилия		= СтруктураДанных.Фамилия;
	ФИО.Имя			= СтруктураДанных.Имя;
	ФИО.Отчество	= СтруктураДанных.Отчество;
	ФИО.Должность	= СтруктураДанных.Должность;
	
	Если ЗначениеЗаполнено(СтруктураДанных.ФИО) Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("Строка"));
		МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
		Элементы.ПредставительСотрудник.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
		
		Объект.ПредставительСотрудник = 
			СтруктураДанных.Фамилия + " " + СтруктураДанных.Имя + " " + СтруктураДанных.Отчество;
	КонецЕсли;
	
	КонтактнаяИнформация				= ЭтаФорма.Объект.КонтактнаяИнформация.Добавить();
	КонтактнаяИнформация.Владелец		= СубъектДоверенности;
	КонтактнаяИнформация.Телефон		= СтруктураДанных.Телефон;
	КонтактнаяИнформация.АдресЭлПочты	= СтруктураДанных.АдресЭлектроннойПочты;
	
	Модифицированность = Истина;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КонтекстЭДОСервер()
	
	Возврат ДокументооборотСКО.ПолучитьОбработкуЭДО();
	
КонецФункции

&НаСервереБезКонтекста
Функция УведомлениеОтправлено(Ссылка)
	
	СтатусОтправки = КонтекстЭДОСервер().ПолучитьСтатусОтправкиОбъекта(Ссылка);
	
	УведомлениеОтправлено =
		ЗначениеЗаполнено(СтатусОтправки) И СтатусОтправки <> Перечисления.СтатусыОтправки.ВКонверте;
	
	Возврат УведомлениеОтправлено;
	
КонецФункции

&НаСервере
Функция ПослеОтправкиНаСервере()
	
	УведомлениеОтправлено = УведомлениеОтправлено(Объект.Ссылка);
	УправлениеФормой(ЭтаФорма);
	ПрорисоватьСтатус(ЭтаФорма);
	
	Возврат УведомлениеОтправлено;
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьПослеПроверки(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДокументооборотСКОКлиент.ПроверитьИЗаписать(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВозврата = Новый Структура;
	ПараметрыВозврата.Вставить("ВозвращатьАдресВоВременномХранилище", 	Истина);
	ПараметрыВозврата.Вставить("ВозвращатьИмяФайлаСРасширением", 		Истина);
	РезультатВыгрузки = ДокументооборотСКОВызовСервера.ВыгрузитьУведомлениеОПредоставленииПолномочийПредставителю(
		Объект.Ссылка);
	
	Если ЗначениеЗаполнено(РезультатВыгрузки) Тогда
		ОперацииСФайламиЭДКОКлиент.СохранитьФайлы(РезультатВыгрузки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВключитьВозможностьОтзыва()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЖурналОтправокВКонтролирующиеОрганы.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.ЖурналОтправокВКонтролирующиеОрганы КАК ЖурналОтправокВКонтролирующиеОрганы
	|ГДЕ
	|	ЖурналОтправокВКонтролирующиеОрганы.Ссылка = &Ссылка
	|	И ЖурналОтправокВКонтролирующиеОрганы.СтатусОтправки = &СтатусОтправки";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("СтатусОтправки", "Зарегистрировано");
	
	Если НЕ Запрос.Выполнить().Пустой() Тогда
		Элементы.ФормаОтозвать.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаСервереБезКонтекста
Функция РегистрационныйНомерСФРОрганизации(ОрганизацияСсылка)
	
	Если ТипЗнч(ОрганизацияСсылка) = Тип("СправочникСсылка.Организации") Тогда
		КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
		ПараметрыОтправкиВПФР = КонтекстЭДОСервер.СформироватьПараметрыОтправкиВПФР(ОрганизацияСсылка);
		Если ЗначениеЗаполнено(ПараметрыОтправкиВПФР.РегНомерСФР) Тогда
			Возврат ПараметрыОтправкиВПФР.РегНомерСФР;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДокументооборотСКОВызовСервера.ПолучитьРеквизит(
		ОрганизацияСсылка,
		"РегистрационныйНомерПФР");
	
КонецФункции
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти