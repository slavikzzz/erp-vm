#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаКоманднаяПанель;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	Если НЕ ЗначениеЗаполнено(УведомлениеОКонтролируемыхСделках) И
		Параметры.Свойство("УведомлениеОКонтролируемыхСделках") Тогда
		УведомлениеОКонтролируемыхСделках = Параметры.УведомлениеОКонтролируемыхСделках;
	КонецЕсли;
	
	Элементы.ДекорацияОтборПоУведомлению.Заголовок = 
		КонтролируемыеСделки.ПредставлениеУведомления(УведомлениеОКонтролируемыхСделках, НСтр("ru = 'Листы 1А';
																								|en = 'Sheets 1A'"));
	
	УведомлениеУказано = ЗначениеЗаполнено(УведомлениеОКонтролируемыхСделках);
	
	Элементы.УведомлениеОКонтролируемыхСделках.Видимость = НЕ УведомлениеУказано;
	Элементы.УведомлениеОКонтролируемойСделке.Видимость = НЕ УведомлениеУказано;
	Элементы.ДекорацияОтборПоУведомлению.Видимость = УведомлениеУказано;
	
	Если ЗначениеЗаполнено(УведомлениеОКонтролируемыхСделках) Тогда
		Список.Порядок.Элементы.Очистить();
		ПорядокСписка = Список.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
		ПорядокСписка.Поле = Новый ПолеКомпоновкиДанных("Номер");
		ПорядокСписка.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
		ПорядокСписка.Использование = Истина;
	КонецЕсли;
	
	ПроверитьКорректностьНомеров();

	УстановитьУсловноеОформление();
	
	МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Документы.КонтролируемаяСделка);
	Элементы.СписокКонтекстноеМенюИзменитьВыделенные.Видимость = МожноРедактировать;
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "НомерКонтролируемойСделкиИзменился" Тогда
		Если Параметр = УведомлениеОКонтролируемыхСделках Тогда
			ПроверитьКорректностьНомеров();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УведомлениеОКонтролируемыхСделкахПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено( УведомлениеОКонтролируемыхСделках) Тогда
		Список.Отбор.Элементы.Очистить();
		ОтборПоУведомлению = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборПоУведомлению.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("УведомлениеОКонтролируемойСделке");
		ОтборПоУведомлению.ПравоеЗначение = УведомлениеОКонтролируемыхСделках;
		Элементы.УведомлениеОКонтролируемойСделке.Видимость = Ложь;
		ПроверитьКорректностьНомеров();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УведомлениеОКонтролируемыхСделкахОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Список.Отбор.Элементы.Очистить();
	УведомлениеОКонтролируемыхСделках = УведомлениеОКонтролируемыхСделках.Пустая();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ПеренумероватьДокументы(Команда)
	
	Перенумеровать = Истина;
	ПроверитьКорректностьНомеров();
	Если НомераКонтролируемыхСделокКорректны Тогда
		ТекстВопроса = Нстр("ru = 'Нумерация листов 1А по текущему уведомлению корректна.#РазделительСтрок#Все равно перенумеровать листы?#РазделительСтрок#(операция может занять продолжительное время)';
							|en = '1A sheet numbering of the current notification is correct.#РазделительСтрок#Renumber 1A sheets anyway?#РазделительСтрок#(The operation may take a long time)'");
		Оповещение = Новый ОписаниеОповещения("ВопросПеренумероватьЛистыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение,СтрЗаменить(ТекстВопроса, "#РазделительСтрок#", Символы.ПС), РежимДиалогаВопрос.ДаНет);	
	Иначе
		ВопросПеренумероватьЛистыЗавершение(КодВозвратаДиалога.Да, Новый Структура);
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);

КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();


	// НадписьРекомендуетсяПеренумероватьДокументы

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "НадписьРекомендуетсяПеренумероватьДокументы");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"НомераКонтролируемыхСделокКорректны", ВидСравненияКомпоновкиДанных.Равно, Ложь);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОсобогоТекста);

КонецПроцедуры

&НаСервере
Процедура ПеренумероватьДокументыНаСервере()
	
	КонтролируемыеСделки.ПеренумерацияКонтролируемыхСделокУведомления(УведомлениеОКонтролируемыхСделках);
	
КонецПроцедуры	

&НаКлиенте
Процедура ВопросПеренумероватьЛистыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренумероватьДокументыНаСервере();
		ПоказатьПредупреждение( , НСтр("ru = 'Листы 1А пронумерованы';
										|en = 'Sheets 1A are numbered'"));
		НомераКонтролируемыхСделокКорректны = Истина;
		РекомендуетсяПеренумероватьДокументы =  НСтр("ru = 'Нумерация листов 1А корректна';
													|en = '1A sheet numbering is correct'");
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКорректностьНомеров()
	
	НомераКонтролируемыхСделокКорректны = КонтролируемыеСделки.НомераКонтролируемыхСделокУведомленияКорректны(УведомлениеОКонтролируемыхСделках);
	РекомендуетсяПеренумероватьДокументы = ?(НЕ НомераКонтролируемыхСделокКорректны, НСтр("ru = 'Нумерация листов 1А не корректна';
																							|en = '1A sheet numbering is incorrect'"), НСтр("ru = 'Нумерация листов 1А корректна';
																																			|en = '1A sheet numbering is correct'"));
	
КонецПроцедуры	

#КонецОбласти
