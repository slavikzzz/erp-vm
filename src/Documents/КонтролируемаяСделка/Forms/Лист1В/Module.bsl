 #Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТипЛиста = Перечисления.ТипыСделокВЦепочкеКонтролируемыхСделок.ПоследующаяРеализация;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ДанныеЗаполнения);
	
	ВерсияУведомления = Параметры.ВерсияУведомления;
	
	СтранаРоссия = Справочники.СтраныМира.Россия;
	
	СвязанныеЛисты1Б = Новый Массив;
	Если Параметры.ДанныеЗаполнения.Свойство("СвязанныеЛисты1Б") Тогда
		СвязанныеЛисты1Б = Параметры.ДанныеЗаполнения.СвязанныеЛисты1Б;
	КонецЕсли;
	
	Для Каждого СтрокаСписка Из Параметры.Листы1Б Цикл
		СтрокаЛиста1Б = Листы1Б.Добавить();
		СтрокаЛиста1Б.Выбрано = СвязанныеЛисты1Б.Найти(СтрокаСписка.ИдентификаторЛиста1Б) <> Неопределено;
		СтрокаЛиста1Б.ИдентификаторЛиста1Б = СтрокаСписка.ИдентификаторЛиста1Б;
		СтрокаЛиста1Б.ДатаСовершенияСделки = СтрокаСписка.ДатаСовершенияСделки;
		СтрокаЛиста1Б.Количество = СтрокаСписка.Количество;
		СтрокаЛиста1Б.Стоимость = СтрокаСписка.Стоимость;
	КонецЦикла;
	
	Элементы.ИдентификаторЛиста1Б.СписокВыбора.Очистить();
	Элементы.ИдентификаторЛиста1Б.СписокВыбора.Добавить(
		Строка(ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор()),
		НСтр("ru = 'Не установлен';
			|en = 'Не установлен'"));
	Для Каждого СтрокаСписка Из Параметры.Листы1Б Цикл
		ОписаниеЛиста1Б = СтрШаблон(НСтр("ru = '%1 (%2 на сумму %3)';
										|en = '%1 (%2 на сумму %3)'"),
			Формат(СтрокаСписка.ДатаСовершенияСделки, "ДЛФ=D"),
			СтрокаСписка.Количество, СтрокаСписка.Стоимость);
		Элементы.ИдентификаторЛиста1Б.СписокВыбора.Добавить(Строка(СтрокаСписка.ИдентификаторЛиста1Б), ОписаниеЛиста1Б);
	КонецЦикла;
	
	Элементы.ИдентификаторПредыдущегоЛиста1В.СписокВыбора.Очистить();
	Элементы.ИдентификаторПредыдущегоЛиста1В.СписокВыбора.Добавить(
		Строка(ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор()),
		НСтр("ru = 'Нет (первая сделка цепочки)';
			|en = 'Нет (первая сделка цепочки)'"));
	Для Каждого ЗначениеСписка Из Параметры.Листы1В Цикл
		Элементы.ИдентификаторПредыдущегоЛиста1В.СписокВыбора.Добавить(Строка(ЗначениеСписка.Значение), ЗначениеСписка.Представление);
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ИдентификаторПредыдущегоЛиста1В) Тогда
		ИдентификаторПредыдущегоЛиста1В = Строка(ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор());
	КонецЕсли;
	
	НастроитьСвязьСЛистами1Б(ЭтотОбъект);
	
	НастроитьФормуПоПризнакуУчастника(ЭтотОбъект);
	
	НастроитьФормуПоИспользованиюТовара(ЭтотОбъект);
	
	НастроитьДоступностьОКТМО(ЭтотОбъект);
	
	СписокКодовПоставки = КонтролируемыеСделки.ПолучитьКодыУсловийПоставки();
	Элементы.КодУсловийПоставки.СписокВыбора.Очистить();
	Для Каждого Код Из СписокКодовПоставки Цикл
		НовыйКод = Элементы.КодУсловийПоставки.СписокВыбора.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйКод, Код);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	НезаполняемыеПоля = НезаполняемыеПоля();
	Для Каждого ИмяПоля Из НезаполняемыеПоля Цикл
		МассивНепроверяемыхРеквизитов.Добавить(ИмяПоля);
	КонецЦикла;
	
	Если ЛистВыбран Тогда
		МассивНепроверяемыхРеквизитов.Добавить("КомментарийКЛисту1Б");
	КонецЕсли;
	
	// Удаляем из проверяемых реквизитов все, по которым автоматическая проверка не нужна:
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИдентификаторЛиста1БПриИзменении(Элемент)
	
	НастроитьСвязьСЛистами1Б(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СвязьСЛистами1БНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьЛисты1Б();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеПроисхождениеТовараПриИзменении(Элемент)
	
	НастроитьФормуПоИспользованиюТовара(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПризнакУчастникаСделкиПриИзменении(Элемент)
	
	НастроитьФормуПоПризнакуУчастника(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СтранаСовершенияСделкиПриИзменении(Элемент)
	
	НастроитьДоступностьОКТМО(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	Если ПроверитьЗаполнение() Тогда
		Модифицированность = Ложь;
		СтруктураЗакрытия = ВернутьСтруктуруЗакрытия();
		Закрыть(СтруктураЗакрытия);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ВернутьСтруктуруЗакрытия()
	
	Структура = Новый Структура();
	
	Для Каждого ИмяРеквизита Из ВозвращаемыеРеквизиты() Цикл
		Структура.Вставить(ИмяРеквизита, ЭтотОбъект[ИмяРеквизита]);
	КонецЦикла;
	
	Структура.Вставить("ИдентификаторЛиста1Б", Новый УникальныйИдентификатор(ИдентификаторЛиста1Б));
	
	Если ЗначениеЗаполнено(ИдентификаторПредыдущегоЛиста1В) Тогда
		Структура.Вставить("ИдентификаторПредыдущегоЛиста1В", Новый УникальныйИдентификатор(ИдентификаторПредыдущегоЛиста1В));
	Иначе
		Структура.Вставить("ИдентификаторПредыдущегоЛиста1В", ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор());
	КонецЕсли;
	
	ВозвращаемыеЛисты1Б = Новый Массив;
	
	Если ЛистВыбран Тогда
		ВыбранныеЛисты1Б = Листы1Б.НайтиСтроки(Новый Структура("Выбрано", Истина));
		Для Каждого ВыбранныйЛист1Б Из ВыбранныеЛисты1Б Цикл
			ВозвращаемыеЛисты1Б.Добавить(ВыбранныйЛист1Б.ИдентификаторЛиста1Б);
		КонецЦикла;
	КонецЕсли;
	
	Структура.Вставить("Листы1Б", ВозвращаемыеЛисты1Б);
	
	ОчиститьЛишниеПоля(Структура);
	
	Возврат Структура;
	
КонецФункции

&НаСервере
Функция ВозвращаемыеРеквизиты()
	
	ВозвращаемыеРеквизиты = Новый Массив;
	ВозвращаемыеРеквизиты.Добавить("ТипЛиста");
	ВозвращаемыеРеквизиты.Добавить("КомментарийКЛисту1Б");
	ВозвращаемыеРеквизиты.Добавить("ИспользованиеПроисхождениеТовара");
	ВозвращаемыеРеквизиты.Добавить("НаименованиеИспользованияПроисхожденияТовара");
	ВозвращаемыеРеквизиты.Добавить("ДатаСовершенияСделки");
	ВозвращаемыеРеквизиты.Добавить("ПризнакУчастникаСделки");
	ВозвращаемыеРеквизиты.Добавить("Контрагент");
	ВозвращаемыеРеквизиты.Добавить("УчастникиВзаимозависимы");
	ВозвращаемыеРеквизиты.Добавить("НомерДоговора");
	ВозвращаемыеРеквизиты.Добавить("ДатаДоговора");
	ВозвращаемыеРеквизиты.Добавить("КодУсловийПоставки");
	ВозвращаемыеРеквизиты.Добавить("Количество");
	ВозвращаемыеРеквизиты.Добавить("ЕдиницаИзмерения");
	ВозвращаемыеРеквизиты.Добавить("Цена");
	ВозвращаемыеРеквизиты.Добавить("Валюта");
	ВозвращаемыеРеквизиты.Добавить("Стоимость");
	ВозвращаемыеРеквизиты.Добавить("СтранаСовершенияСделки");
	ВозвращаемыеРеквизиты.Добавить("ОКТМОСовершенияСделки");
	
	Возврат ВозвращаемыеРеквизиты;
	
КонецФункции

&НаСервере
Функция НезаполняемыеПоля()
	
	НезаполняемыеПоля = Новый Массив;
	
	Если ИспользованиеПроисхождениеТовара <> Перечисления.ТипыИспользованияПроисхожденияТовараКонтролируемыхСделок.Иное Тогда
		НезаполняемыеПоля.Добавить("НаименованиеИспользованияПроисхожденияТовара");
	КонецЕсли;
	
	Если Не КонтролируемыеСделкиКлиентСервер.НужноЗаполнятьСведенияОСделкеЛиста1В(ИспользованиеПроисхождениеТовара) Тогда
		НезаполняемыеПоля.Добавить("ДатаСовершенияСделки");
		НезаполняемыеПоля.Добавить("ПризнакУчастникаСделки");
		НезаполняемыеПоля.Добавить("Контрагент");
		НезаполняемыеПоля.Добавить("НомерДоговора");
		НезаполняемыеПоля.Добавить("ДатаДоговора");
		НезаполняемыеПоля.Добавить("КодУсловийПоставки");
		НезаполняемыеПоля.Добавить("Количество");
		НезаполняемыеПоля.Добавить("ЕдиницаИзмерения");
		НезаполняемыеПоля.Добавить("Цена");
		НезаполняемыеПоля.Добавить("Валюта");
		НезаполняемыеПоля.Добавить("Стоимость");
		НезаполняемыеПоля.Добавить("СтранаСовершенияСделки");
		НезаполняемыеПоля.Добавить("ОКТМОСовершенияСделки");
	ИначеЕсли КонтролируемыеСделкиКлиентСервер.ЭтоРозничнаяПродажаЦепочкиСделок(ПризнакУчастникаСделки) Тогда
		НезаполняемыеПоля.Добавить("ДатаСовершенияСделки");
		НезаполняемыеПоля.Добавить("Контрагент");
		НезаполняемыеПоля.Добавить("НомерДоговора");
		НезаполняемыеПоля.Добавить("ДатаДоговора");
		НезаполняемыеПоля.Добавить("КодУсловийПоставки");
		НезаполняемыеПоля.Добавить("Цена");
		НезаполняемыеПоля.Добавить("СтранаСовершенияСделки");
		НезаполняемыеПоля.Добавить("ОКТМОСовершенияСделки");
	КонецЕсли;
	
	Возврат НезаполняемыеПоля;
	
КонецФункции

&НаСервере
Процедура ОчиститьЛишниеПоля(ВозвращаемыйЛист1Б)
	
	НезаполняемыеПоля = НезаполняемыеПоля();
	Для Каждого ИмяПоля Из НезаполняемыеПоля Цикл
		ВозвращаемыйЛист1Б[ИмяПоля] = Неопределено;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьСвязьСЛистами1Б(Форма)
	
	Листы1Б = Форма.Листы1Б;
	Элементы = Форма.Элементы;
	
	Форма.ЛистВыбран = Форма.ИдентификаторЛиста1Б <> Строка(ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор());
	
	Элементы.КомментарийКЛисту1Б.АвтоотметкаНезаполненного = Не Форма.ЛистВыбран;
	
	Элементы.СвязьСЛистами1Б.Доступность = Форма.ЛистВыбран;
	
	ВыбранныеЛисты1Б = Листы1Б.НайтиСтроки(Новый Структура("Выбрано", Истина));
	
	Если Не Форма.ЛистВыбран Или ВыбранныеЛисты1Б.Количество() = 0 Тогда
		
		Форма.СвязьСЛистами1Б = НСтр("ru = 'Не выбраны';
									|en = 'Не выбраны'");
		
	Иначе
		
		ОписаниеСделокЛистов1Б = Новый Массив;
		Для Каждого ВыбранныйЛист1Б Из ВыбранныеЛисты1Б Цикл
			ОписаниеСделокЛистов1Б.Добавить(СтрШаблон(НСтр("ru = '%1 (%2)';
															|en = '%1 (%2)'"),
				Формат(ВыбранныйЛист1Б.ДатаСовершенияСделки, "ДЛФ=D"), ВыбранныйЛист1Б.Количество));
			Если ОписаниеСделокЛистов1Б.Количество() >= 2 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		ЕщеЛистов = ?(ОписаниеСделокЛистов1Б.Количество() = ВыбранныеЛисты1Б.Количество(),
			"",
			" " + СтрШаблон(НСтр("ru = 'и еще %1';
								|en = 'и еще %1'"), ВыбранныеЛисты1Б.Количество() - ОписаниеСделокЛистов1Б.Количество()));
		
		Форма.СвязьСЛистами1Б = СтрШаблон(НСтр("ru = '%1%2';
												|en = '%1%2'"),
			СтрСоединить(ОписаниеСделокЛистов1Б, ", "), ЕщеЛистов);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьФормуПоПризнакуУчастника(Форма)
	
	Элементы = Форма.Элементы;
	
	ПризнакУчастникаСделки = Форма.ПризнакУчастникаСделки;
	
	ЭтоРозничнаяПродажа = КонтролируемыеСделкиКлиентСервер.ЭтоРозничнаяПродажаЦепочкиСделок(ПризнакУчастникаСделки);
	Элементы.Контрагент.Видимость = Не ЭтоРозничнаяПродажа;
	Элементы.ГруппаНомерДатаДоговора.Видимость = Не ЭтоРозничнаяПродажа;
	Элементы.ДатаСовершенияСделки.Видимость = Не ЭтоРозничнаяПродажа;
	Элементы.КодУсловийПоставки.Видимость = Не ЭтоРозничнаяПродажа;
	Элементы.Цена.Видимость = Не ЭтоРозничнаяПродажа;
	Элементы.СтранаСовершенияСделки.Видимость = Не ЭтоРозничнаяПродажа;
	Элементы.ОКТМОСовершенияСделки.Видимость = Не ЭтоРозничнаяПродажа;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьФормуПоИспользованиюТовара(Форма)
	
	Элементы = Форма.Элементы;
	ИспользованиеПроисхождениеТовара = Форма.ИспользованиеПроисхождениеТовара;
	
	Элементы.НаименованиеИспользованияПроисхожденияТовара.Видимость =
		ИспользованиеПроисхождениеТовара = ПредопределенноеЗначение("Перечисление.ТипыИспользованияПроисхожденияТовараКонтролируемыхСделок.Иное");
	Элементы.ГруппаСведенияОСделке.Видимость = КонтролируемыеСделкиКлиентСервер.НужноЗаполнятьСведенияОСделкеЛиста1В(ИспользованиеПроисхождениеТовара);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьДоступностьОКТМО(Форма)
	
	Форма.Элементы.ОКТМОСовершенияСделки.Доступность = Форма.СтранаСовершенияСделки = Форма.СтранаРоссия;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЛисты1Б()
	
	Модифицированность = Истина;
	СтруктураПараметров = Новый Структура;
	
	МассивЛистов1Б = Новый Массив;
	Для Каждого СтрокаЛиста1Б Из Листы1Б Цикл
		ДанныеЛиста = Новый Структура;
		ДанныеЛиста.Вставить("ДатаСовершенияСделки");
		ДанныеЛиста.Вставить("Количество");
		ДанныеЛиста.Вставить("Стоимость");
		ДанныеЛиста.Вставить("Выбрано");
		ДанныеЛиста.Вставить("ИдентификаторЛиста1Б");
		ЗаполнитьЗначенияСвойств(ДанныеЛиста, СтрокаЛиста1Б);
		МассивЛистов1Б.Добавить(ДанныеЛиста);
	КонецЦикла;
	
	СтруктураПараметров.Вставить("Листы1Б", МассивЛистов1Б);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыбратьЛисты1БЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Документ.КонтролируемаяСделка.Форма.ВыборЛистов1Б",
		СтруктураПараметров, ЭтотОбъект,,,, ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЛисты1БЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаЛиста1Б Из Листы1Б Цикл
		Выбрано = РезультатВыбора.Получить(СтрокаЛиста1Б.ИдентификаторЛиста1Б);
		Если Выбрано = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		СтрокаЛиста1Б.Выбрано = Выбрано;
	КонецЦикла;
	
	НастроитьСвязьСЛистами1Б(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

