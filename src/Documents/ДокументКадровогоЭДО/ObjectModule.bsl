#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		
		Если ДополнительныеСвойства.Свойство("СсылкаНового") Тогда
			СсылкаНового = ДополнительныеСвойства.СсылкаНового;
			УстановитьСсылкуНового(СсылкаНового);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ИдентификаторДокумента) Тогда
			ИдентификаторДокумента = Строка(ЭлектронныйДокумент.УникальныйИдентификатор());
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Ответственный) Тогда
			
			ЗаполняемыеЗначения = Новый Структура("Ответственный");
			ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗаполняемыеЗначения);
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗаполняемыеЗначения);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(КодДокументаКадровогоМероприятия) Тогда
			КодДокументаКадровогоМероприятия = КадровыйЭДОПовтИсп.КодКадровогоДокументаПоУмолчанию();
		КонецЕсли;
		
		Если ПустаяСтрока(Расширение) И ЗначениеЗаполнено(ЭлектронныйДокумент) Тогда
			УстановитьПривилегированныйРежим(Истина);
			ДополнительныеПараметры = РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла();
			ДополнительныеПараметры.ПолучатьСсылкуНаДвоичныеДанные = Ложь;
			ДанныеФайла = РаботаСФайлами.ДанныеФайла(ЭлектронныйДокумент, ДополнительныеПараметры);
			Расширение = ДанныеФайла.Расширение;
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли;
		
	Иначе
		Если ПометкаУдаления И Не ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления") Тогда
			Если КатегорияДокумента = Перечисления.КатегорииДокументовКадровогоЭДО.РасчетныйЛисток
				И ИнтеграцияКабинетСотрудника.ФайлРасчетногоЛисткаОпубликован(Ссылка) Тогда
				
				ТекстСообщения = НСтр("ru = 'Не предусмотрено удаление файлов расчетных листов, их содержимое меняется при обновлении публикации.';
										|en = 'Payslip file deletion is not available. Payslips change upon the publication update.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, , , Отказ);
			ИначеЕсли Не Пользователи.ЭтоПолноправныйПользователь(, , Ложь)
				И Не ДополнительныеСвойства.Свойство("РазрешенаПометкаУдаления") Тогда
				
				ТекстСообщения = СтрШаблон(
					НСтр("ru = 'Пометка на удаление объектов ""%1"" не предусмотрена';
						|en = 'Cannot mark the ""%1"" objects for deletion'"),
					Метаданные().Синоним);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, , , Отказ);
			Иначе
				Если ЭлектронныйДокумент <> Неопределено И
					ЭлектронныйДокумент.Метаданные() <> Метаданные.Документы.ДокументКадровогоЭДО Тогда
					
					Если Не ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлектронныйДокумент, "ПометкаУдаления") Тогда
						ОбъектФайла = ЭлектронныйДокумент.ПолучитьОбъект();
						ОбъектФайла.ДополнительныеСвойства.Вставить("УдалениеПечатныхФорм", Истина);
						ОбъектФайла.УстановитьПометкуУдаления(Истина);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ДополнительныеСвойства.Свойство("НеПроверятьЭлектронныйДокумент") Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ЭлектронныйДокумент");
	КонецЕсли;
	
	Если Не ПроизвольнаяТаблица Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НаименованиеДокумента");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли