#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(ВнешниеПодписанты.ФизическоеЛицо, NULL КАК ИСТИНА))
	|	И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// СтандартныеПодсистемы.ВариантыОтчетов

// См. ВариантыОтчетовПереопределяемый.ОпределитьОбъектыСКомандамиОтчетов
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	Отчеты.ДокументыКЭДОСОтказами.ДобавитьКомандыФормированияОтчетов(КомандыОтчетов, Параметры);
	Отчеты.ДокументыКЭДОСотрудников.ДобавитьКомандыФормированияОтчетов(КомандыОтчетов, Параметры);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти

// Конец СтандартныеПодсистемы.УправлениеДоступом

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	ОписаниеСостава = ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта();
	ОписаниеСостава.ЗаполнятьФизическиеЛицаПоСотрудникам = Ложь;
	ОписаниеСостава.ИспользоватьКраткийСостав = Истина;
	ОписаниеСостава.ИспользоватьОграничениеДоступа = Ложь;
	ОписаниеСостава.ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента = Ложь;
	
	ЗарплатаКадрыСоставДокументов.ДобавитьОписаниеХраненияСотрудниковФизическихЛиц(
		ОписаниеСостава.ОписаниеХраненияСотрудниковФизическихЛиц,
		"ВнешниеПодписанты",
		"ФизическоеЛицо");
	
	Возврат ОписаниеСостава;
	
КонецФункции

Функция СвойстваДокумента(ЭлектронныйДокумент, Организация, ФизическоеЛицо,
	ОснованиеДокумента = Неопределено, КатегорияДокумента = Неопределено, СодержимоеДокумента = Неопределено,
	КодДокументаКадровогоМероприятия = Неопределено, ФорматДокументаСоответствуетТребованиям = Истина,
	ВариантПодписания = Неопределено) Экспорт
	
	Свойства = Новый Структура(
		"ЭлектронныйДокумент,
		|Организация,
		|ФизическоеЛицо,
		|ОснованиеДокумента,
		|КатегорияДокумента,
		|СодержимоеДокумента,
		|Дата,
		|ИдентификаторДокумента,
		|ИдентификаторЗаявкиКабинетСотрудника,
		|ДополнительныеСвойства,
		|НаСписокСотрудников,
		|Внешний,
		|КодДокументаКадровогоМероприятия,
		|ФорматДокументаСоответствуетТребованиям,
		|ВариантПодписания");
	
	Свойства.ЭлектронныйДокумент				= ЭлектронныйДокумент;
	Свойства.Организация						= Организация;
	Свойства.ФизическоеЛицо						= ФизическоеЛицо;
	Свойства.ОснованиеДокумента					= ОснованиеДокумента;
	Свойства.КатегорияДокумента					= КатегорияДокумента;
	Свойства.СодержимоеДокумента				= СодержимоеДокумента;
	Свойства.НаСписокСотрудников 				= Ложь;
	Свойства.Внешний 							= Ложь;
	Свойства.КодДокументаКадровогоМероприятия 			= КодДокументаКадровогоМероприятия;
	Свойства.ФорматДокументаСоответствуетТребованиям 	= ФорматДокументаСоответствуетТребованиям;
	Если ВариантПодписания = Неопределено Тогда
		Свойства.ВариантПодписания = Перечисления.ВариантыПодписанияДокументовКЭДО.Требуется;
	Иначе
		Свойства.ВариантПодписания = ВариантПодписания;
	КонецЕсли;
	
	Возврат Свойства;
	
КонецФункции

// Добавляет новый документ и возвращает на него ссылку
//
// Параметры:
//	Свойства - Структура, см.ОписаниеСоставаОбъекта
//
// Возвращаемое значение:
//	ДокументСсылка.ДокументКадровогоЭДО
//
Функция Добавить(Свойства) Экспорт
	
	ДокументЭДО = НовыйДокумент(Свойства);
	ДокументЭДО.Записать();
	КадровыйЭДО.ЗарегистрироватьДокументКЭДОКПересчетуСостояний(ДокументЭДО.Ссылка);
	Возврат ДокументЭДО.Ссылка;
	
КонецФункции

// Возвращает вновь созданный, еще не сохраненный объект документа
//
// Параметры:
//	Свойства - Структура, см.ОписаниеСоставаОбъекта
//
// Возвращаемое значение:
//	ДокументОбъект.ДокументКадровогоЭДО
//
Функция НовыйДокумент(Свойства) Экспорт
	
	ДокументЭДО = Документы.ДокументКадровогоЭДО.СоздатьДокумент();
	
	Если ЗначениеЗаполнено(Свойства.Дата) Тогда
		ДокументЭДО.Дата = Свойства.Дата;
	Иначе
		ДокументЭДО.Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ДокументЭДО.ЭлектронныйДокумент =	Свойства.ЭлектронныйДокумент;
	ДокументЭДО.Организация =			Свойства.Организация;
	
	Если ТипЗнч(Свойства.ФизическоеЛицо) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ДокументЭДО.ВнешниеПодписанты.Добавить().ФизическоеЛицо = Свойства.ФизическоеЛицо;
	Иначе
		Для Каждого ФизическоеЛицо Из Свойства.ФизическоеЛицо Цикл
			ДокументЭДО.ВнешниеПодписанты.Добавить().ФизическоеЛицо = ФизическоеЛицо;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Свойства.ОснованиеДокумента) Тогда
		ДокументЭДО.ОснованиеДокумента = Свойства.ОснованиеДокумента;
	Иначе
		СсылкаНового = Документы.ДокументКадровогоЭДО.ПолучитьСсылку();
		ДокументЭДО.ОснованиеДокумента = СсылкаНового;
		ДокументЭДО.ДополнительныеСвойства.Вставить("СсылкаНового", ДокументЭДО.ОснованиеДокумента)
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Свойства.ИдентификаторДокумента) Тогда
		ДокументЭДО.ИдентификаторДокумента = Свойства.ИдентификаторДокумента;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Свойства.ИдентификаторЗаявкиКабинетСотрудника) Тогда
		ДокументЭДО.ИдентификаторЗаявкиКабинетСотрудника = Свойства.ИдентификаторЗаявкиКабинетСотрудника;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Свойства.КатегорияДокумента) Тогда
		КатегорияДокумента = Свойства.КатегорияДокумента;
	Иначе
		Если КадровыйЭДО.ЭтоОбъектСПечатнымиФормами(Свойства.ОснованиеДокумента)
			И ТипЗнч(Свойства.ОснованиеДокумента) <> Тип("ДокументСсылка.СправкаНДФЛ")
			И ТипЗнч(Свойства.ОснованиеДокумента) <> Тип("ДокументСсылка.СведенияОДоходахСотрудникаДляСоцВыплат")
			И Не ЗаявкиСотрудников.ВладелецЗаявкаСотрудника(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Свойства.ОснованиеДокумента)) Тогда
			
			КатегорияДокумента = Перечисления.КатегорииДокументовКадровогоЭДО.КадровыйДокумент;
		Иначе
			КатегорияДокумента = Перечисления.КатегорииДокументовКадровогоЭДО.СправкаСотруднику;
		КонецЕсли;
	КонецЕсли;
	ДокументЭДО.КатегорияДокумента = КатегорияДокумента;
	
	Если ЗначениеЗаполнено(Свойства.СодержимоеДокумента) Тогда
		ДокументЭДО.СодержимоеДокумента = Свойства.СодержимоеДокумента;
	Иначе
		ДокументЭДО.СодержимоеДокумента = КадровыйЭДО.МаксимальноДоступноеСодержимоеДокументовПользователя();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Свойства.ДополнительныеСвойства) Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(
			ДокументЭДО.ДополнительныеСвойства, Свойства.ДополнительныеСвойства, Истина);
	КонецЕсли;
	
	ДокументЭДО.НаСписокСотрудников = Свойства.НаСписокСотрудников;
	ДокументЭДО.Внешний				= Свойства.Внешний;
	
	Если ЗначениеЗаполнено(Свойства.КодДокументаКадровогоМероприятия) Тогда
		Если ТипЗнч(Свойства.КодДокументаКадровогоМероприятия) = Тип("Строка") Тогда
			КодДокументаКадровогоМероприятия =
				КадровыйЭДОПовтИсп.СсылкаНаКодДокументаКадровогоМероприятия(Свойства.КодДокументаКадровогоМероприятия);
		Иначе
			КодДокументаКадровогоМероприятия = Свойства.КодДокументаКадровогоМероприятия
		КонецЕсли;
		Если КодДокументаКадровогоМероприятия <> КадровыйЭДОПовтИсп.КодКадровогоДокументаПоУмолчанию() Тогда
			ДокументЭДО.КодДокументаКадровогоМероприятия = КодДокументаКадровогоМероприятия;
		КонецЕсли;
	КонецЕсли;
	
	ДокументЭДО.ФорматДокументаСоответствуетТребованиям = Свойства.ФорматДокументаСоответствуетТребованиям;
	ДокументЭДО.ВариантПодписания = Свойства.ВариантПодписания;
	
	Возврат ДокументЭДО;
	
КонецФункции

Процедура УдалитьДокументыПечатныхФормОбъекта(СсылкаНаОбъект) Экспорт
	
	ФайлыПоОбъектам = КадровыйЭДО.ФайлыПечатныхФормПоОбъектам(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СсылкаНаОбъект), , Истина, Истина);
	
	ФайлыПечатныхФорм = Новый Массив;
	Для Каждого ОписаниеФайловОбъекта Из ФайлыПоОбъектам Цикл
		Для Каждого ОписаниеФайловИдентификатора Из ОписаниеФайловОбъекта.Значение Цикл
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФайлыПечатныхФорм, ОписаниеФайловИдентификатора.Значение);
		КонецЦикла;
	КонецЦикла;
	
	Если ФайлыПечатныхФорм.Количество() > 0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ЭлектронныеДокументы", ФайлыПечатныхФорм);
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ДокументКадровогоЭДО.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ДокументКадровогоЭДО КАК ДокументКадровогоЭДО
			|ГДЕ
			|	ДокументКадровогоЭДО.ЭлектронныйДокумент В(&ЭлектронныеДокументы)
			|	И НЕ ДокументКадровогоЭДО.ПометкаУдаления";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ОбъектДокумента = Выборка.Ссылка.ПолучитьОбъект();
			ОбъектДокумента.ДополнительныеСвойства.Вставить("РазрешенаПометкаУдаления", Истина);
			ОбъектДокумента.УстановитьПометкуУдаления(Истина);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Обновляет ответственного находя связанные ДокументыКадровогоЭДО по основанию документ.
//	Параметры:
//		ОснованиеДокумента - ОпределяемыйТип.ВладелецПрисоединенныхФайлов - ссылка на документ основание;
//		Ответственный - СправочникСсылка.Пользователи - новый ответственный по документу.
Процедура ОбновитьОтветственногоПоОснованиюДокумента(ОснованиеДокумента, Ответственный) Экспорт
	
	Запрос = Новый Запрос();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДокументКадровогоЭДО.Ссылка КАК ДокументКЭДО
	               |ИЗ
	               |	Документ.ДокументКадровогоЭДО КАК ДокументКадровогоЭДО
	               |ГДЕ
	               |	ДокументКадровогоЭДО.ОснованиеДокумента = &ОснованиеДокумента";
	
	Запрос.УстановитьПараметр("ОснованиеДокумента", ОснованиеДокумента);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДокументКЭДО = Выборка.ДокументКЭДО.ПолучитьОбъект();
		ДокументКЭДО.Ответственный = Ответственный;
		ДокументКЭДО.Записать();
	КонецЦикла;
	
КонецПроцедуры

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Отчеты.ДокументыКЭДОСотрудников.ДобавитьКомандуПечати(КомандыПечати);
	
КонецПроцедуры

#КонецОбласти

Процедура ПометитьНаУдалениеДокументыУдаленныхОснований(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДокументКадровогоЭДО.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ДокументКадровогоЭДО КАК ДокументКадровогоЭДО
		|ГДЕ
		|	НЕ ДокументКадровогоЭДО.Ссылка В (&МассивОбновленных)
		|	И НЕ ДокументКадровогоЭДО.ПометкаУдаления
		|	И ДокументКадровогоЭДО.ЭлектронныйДокумент.ПометкаУдаления";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Пока Выборка.Следующий() Цикл
		
		МассивОбновленных.Добавить(Выборка.Ссылка);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.ДокументКадровогоЭДО", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ПометкаУдаления = Истина;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьНаличияСведенийОЗарплате(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДокументКадровогоЭДО.Ссылка КАК Ссылка,
		|	ПодписанныеПечатныеФормы.ИдентификаторПечатнойФормы КАК ИдентификаторПечатнойФормы
		|ИЗ
		|	Документ.ДокументКадровогоЭДО КАК ДокументКадровогоЭДО
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодписанныеПечатныеФормы КАК ПодписанныеПечатныеФормы
		|		ПО ДокументКадровогоЭДО.ЭлектронныйДокумент = ПодписанныеПечатныеФормы.ПрисоединенныйФайл
		|ГДЕ
		|	НЕ ДокументКадровогоЭДО.Ссылка В (&МассивОбновленных)
		|	И ДокументКадровогоЭДО.СодержимоеДокумента = ЗНАЧЕНИЕ(Перечисление.СодержимоеДокументов.ПустаяСсылка)";
	
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Пока Выборка.Следующий() Цикл
		
		МассивОбновленных.Добавить(Выборка.Ссылка);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.ДокументКадровогоЭДО", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.СодержимоеДокумента = КадровыйЭДОВызовСервера.СодержимоеДокументаПечатнойФормы(Выборка.ИдентификаторПечатнойФормы);
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПодписантов(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДокументКадровогоЭДО.Ссылка КАК Ссылка,
		|	ДокументКадровогоЭДО.Дата КАК Дата,
		|	ДокументКадровогоЭДО.УдалитьФизическоеЛицо КАК УдалитьФизическоеЛицо,
		|	ДокументКадровогоЭДО.УдалитьПодписанСотрудником КАК УдалитьПодписанСотрудником,
		|	МАКСИМУМ(ЭлектронныеПодписи.Отпечаток) КАК Отпечаток,
		|	МАКСИМУМ(ЭлектронныеПодписи.ДатаПодписи) КАК ДатаПодписи
		|ИЗ
		|	Документ.ДокументКадровогоЭДО КАК ДокументКадровогоЭДО
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДокументКадровогоЭДО.ВнешниеПодписанты КАК ДокументКадровогоЭДОВнешниеПодписанты
		|		ПО ДокументКадровогоЭДО.Ссылка = ДокументКадровогоЭДОВнешниеПодписанты.Ссылка
		|			И ДокументКадровогоЭДО.УдалитьФизическоеЛицо = ДокументКадровогоЭДОВнешниеПодписанты.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭлектронныеПодписи КАК ЭлектронныеПодписи
		|		ПО ДокументКадровогоЭДО.ЭлектронныйДокумент = ЭлектронныеПодписи.ПодписанныйОбъект
		|			И ((ВЫРАЗИТЬ(ЭлектронныеПодписи.Комментарий КАК СТРОКА(1024))) <> """")
		|ГДЕ
		|	НЕ ДокументКадровогоЭДО.Ссылка В (&МассивОбновленных)
		|	И ДокументКадровогоЭДО.УдалитьФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|	И ДокументКадровогоЭДОВнешниеПодписанты.ФизическоеЛицо ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументКадровогоЭДО.Ссылка,
		|	ДокументКадровогоЭДО.УдалитьФизическоеЛицо,
		|	ДокументКадровогоЭДО.УдалитьПодписанСотрудником,
		|	ДокументКадровогоЭДО.Дата";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Пока Выборка.Следующий() Цикл
		
		МассивОбновленных.Добавить(Выборка.Ссылка);
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.ДокументКадровогоЭДО");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПодписиДокументовКЭДО");
			ЭлементБлокировки.УстановитьЗначение("Объект", Выборка.Ссылка);
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			НоваяСтрока = ДокументОбъект.ВнешниеПодписанты.Добавить();
			НоваяСтрока.ФизическоеЛицо = Выборка.УдалитьФизическоеЛицо;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
			Если Выборка.УдалитьПодписанСотрудником Тогда
				
				НаборЗаписей = РегистрыСведений.ПодписиДокументовКЭДО.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Объект.Установить(Выборка.Ссылка);
				НаборЗаписей.Отбор.ФизическоеЛицо.Установить(Выборка.УдалитьФизическоеЛицо);
				
				Запись = НаборЗаписей.Добавить();
				Запись.Объект = Выборка.Ссылка;
				Запись.ФизическоеЛицо = Выборка.УдалитьФизическоеЛицо;
				Запись.Отпечаток = Выборка.Отпечаток;
				Если ЗначениеЗаполнено(Выборка.ДатаПодписи) Тогда
					Запись.ДатаПодписи = Выборка.ДатаПодписи;
				Иначе
					Запись.ДатаПодписи = Выборка.Дата;
				КонецЕсли;
				
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКодыДокументовКадровыхМероприятий(ПараметрыОбновления = Неопределено) Экспорт
	
	ИмяРеквизита = "КодДокументаКадровогоМероприятия_7696640660b0414980c152bb6380949b";
	РеквизитКодДокументаКадровогоМероприятия =
		ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", ИмяРеквизита);
	
	Если Не ЗначениеЗаполнено(РеквизитКодДокументаКадровогоМероприятия) Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.УстановитьПараметр("Свойство", РеквизитКодДокументаКадровогоМероприятия);
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДокументКадровогоЭДОДополнительныеРеквизиты.Ссылка КАК Ссылка,
		|	ДокументКадровогоЭДОДополнительныеРеквизиты.Значение КАК Значение
		|ИЗ
		|	Документ.ДокументКадровогоЭДО.ДополнительныеРеквизиты КАК ДокументКадровогоЭДОДополнительныеРеквизиты
		|ГДЕ
		|	НЕ ДокументКадровогоЭДОДополнительныеРеквизиты.Ссылка В (&МассивОбновленных)
		|	И ДокументКадровогоЭДОДополнительныеРеквизиты.Свойство = &Свойство
		|	И ДокументКадровогоЭДОДополнительныеРеквизиты.Значение <> """"
		|	И ДокументКадровогоЭДОДополнительныеРеквизиты.Ссылка.КодДокументаКадровогоМероприятия = ЗНАЧЕНИЕ(Справочник.КодыДокументовКадровыхМероприятий.ПустаяСсылка)";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Пока Выборка.Следующий() Цикл
		
		МассивОбновленных.Добавить(Выборка.Ссылка);
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.ДокументКадровогоЭДО");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.КодДокументаКадровогоМероприятия = КадровыйЭДОПовтИсп.СсылкаНаКодДокументаКадровогоМероприятия(Выборка.Значение);
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПеренестиСведенияЭлектронногоДокумента(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДокументКадровогоЭДО.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ДокументКадровогоЭДО КАК ДокументКадровогоЭДО
		|ГДЕ
		|	НЕ ДокументКадровогоЭДО.Ссылка В (&МассивОбновленных)
		|	И (ДокументКадровогоЭДО.ЭлектронныйДокумент = НЕОПРЕДЕЛЕНО
		|				И ДокументКадровогоЭДО.УдалитьЭлектронныйДокумент <> НЕОПРЕДЕЛЕНО
		|			ИЛИ ДокументКадровогоЭДО.ОснованиеДокумента = НЕОПРЕДЕЛЕНО
		|				И ДокументКадровогоЭДО.УдалитьОснованиеДокумента <> НЕОПРЕДЕЛЕНО)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДокументКадровогоЭДО.Дата УБЫВ";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Пока Выборка.Следующий() Цикл
		
		МассивОбновленных.Добавить(Выборка.Ссылка);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.ДокументКадровогоЭДО", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ЭлектронныйДокумент = ДокументОбъект.УдалитьЭлектронныйДокумент;
		ДокументОбъект.ОснованиеДокумента = ДокументОбъект.УдалитьОснованиеДокумента;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРасширенияЭлектронныхДокументов(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДокументКадровогоЭДО.Ссылка КАК Ссылка,
		|	ДокументКадровогоЭДО.ЭлектронныйДокумент КАК ЭлектронныйДокумент
		|ИЗ
		|	Документ.ДокументКадровогоЭДО КАК ДокументКадровогоЭДО
		|ГДЕ
		|	НЕ ДокументКадровогоЭДО.Ссылка В (&МассивОбновленных)
		|	И ДокументКадровогоЭДО.Расширение = """"
		|	И ДокументКадровогоЭДО.ЭлектронныйДокумент <> НЕОПРЕДЕЛЕНО";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	ТаблицаОбновляемых = Запрос.Выполнить().Выгрузить();
	Если ТаблицаОбновляемых.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	РасширенияДокументов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(
		ТаблицаОбновляемых.ВыгрузитьКолонку("ЭлектронныйДокумент"), "Расширение");
	Для Каждого ДанныеДокумента Из ТаблицаОбновляемых Цикл
		
		МассивОбновленных.Добавить(ДанныеДокумента.Ссылка);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.ДокументКадровогоЭДО", "Ссылка", ДанныеДокумента.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДанныеДокумента.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Расширение = РасширенияДокументов.Получить(ДанныеДокумента.ЭлектронныйДокумент);
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПризнакСоответствияФорматаДокументаТребованиям(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДокументКадровогоЭДО.Ссылка КАК Ссылка,
		|	ДокументКадровогоЭДО.ЭлектронныйДокумент КАК ЭлектронныйДокумент
		|ИЗ
		|	Документ.ДокументКадровогоЭДО КАК ДокументКадровогоЭДО
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодписанныеПечатныеФормы КАК ПодписанныеПечатныеФормы
		|		ПО ДокументКадровогоЭДО.ЭлектронныйДокумент = ПодписанныеПечатныеФормы.ПрисоединенныйФайл
		|ГДЕ
		|	НЕ ДокументКадровогоЭДО.Ссылка В (&МассивОбновленных)
		|	И НЕ ДокументКадровогоЭДО.ФорматДокументаСоответствуетТребованиям";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	ТаблицаОбновляемых = Запрос.Выполнить().Выгрузить();
	Если ТаблицаОбновляемых.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Для Каждого ДанныеДокумента Из ТаблицаОбновляемых Цикл
		
		МассивОбновленных.Добавить(ДанныеДокумента.Ссылка);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.ДокументКадровогоЭДО", "Ссылка", ДанныеДокумента.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДанныеДокумента.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ФорматДокументаСоответствуетТребованиям = Истина;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьВариантПодписанияДокументов(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДокументКадровогоЭДО.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НастройкиПечатныхФормБЗК.ВариантПодписания, ЗНАЧЕНИЕ(Перечисление.ВариантыПодписанияДокументовКЭДО.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВариантыПодписанияДокументовКЭДО.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПодписанияДокументовКЭДО.Требуется)
		|		ИНАЧЕ НастройкиПечатныхФормБЗК.ВариантПодписания
		|	КОНЕЦ КАК ВариантПодписания
		|ИЗ
		|	Документ.ДокументКадровогоЭДО КАК ДокументКадровогоЭДО
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодписанныеПечатныеФормы КАК ПодписанныеПечатныеФормы
		|		ПО ДокументКадровогоЭДО.ЭлектронныйДокумент = ПодписанныеПечатныеФормы.ПрисоединенныйФайл
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПечатныхФормБЗК КАК НастройкиПечатныхФормБЗК
		|		ПО (ПодписанныеПечатныеФормы.ИдентификаторПечатнойФормы = НастройкиПечатныхФормБЗК.ИдентификаторПечатнойФормы)
		|ГДЕ
		|	НЕ ДокументКадровогоЭДО.Ссылка В (&МассивОбновленных)
		|	И ДокументКадровогоЭДО.ВариантПодписания = ЗНАЧЕНИЕ(Перечисление.ВариантыПодписанияДокументовКЭДО.ПустаяСсылка)";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	ТаблицаОбновляемых = Запрос.Выполнить().Выгрузить();
	Если ТаблицаОбновляемых.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ДокументыКЭДОКПересчетуСостояний = Новый Массив;
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Для Каждого ДанныеДокумента Из ТаблицаОбновляемых Цикл
		
		МассивОбновленных.Добавить(ДанныеДокумента.Ссылка);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.ДокументКадровогоЭДО", "Ссылка", ДанныеДокумента.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДанныеДокумента.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ВариантПодписания = ДанныеДокумента.ВариантПодписания;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
		ДокументыКЭДОКПересчетуСостояний.Добавить(ДанныеДокумента.Ссылка);
		
	КонецЦикла;
	
	КадровыйЭДО.ЗарегистрироватьДокументыКЭДОКПересчетуСостояний(ДокументыКЭДОКПересчетуСостояний);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
