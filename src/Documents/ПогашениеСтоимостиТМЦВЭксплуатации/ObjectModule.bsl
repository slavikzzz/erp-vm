#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
	ЗаполнитьНомерПакета();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		РассчитатьДокумент(Отказ);
	КонецЕсли;
	
	Если НЕ Отказ И РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ПодготовитьДанныеДляФормированияЗаданияКЗакрытиюМесяцаПередЗаписью();
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ПроверитьДублиДокументов(Отказ);
		ПроверитьНомерПакета(Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОчиститьДвиженияДокумента(ЭтотОбъект, "Хозрасчетный");
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
	СформироватьЗаданиеПогашениеСтоимостиТМЦВЭксплуатацииПриОтменеПроведения();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ОбщегоНазначенияУТ.ОчиститьИдентификаторыДокумента(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьДублиДокументов(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДанныеДокумента.Организация
		|ИЗ
		|	Документ.ПогашениеСтоимостиТМЦВЭксплуатации КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериодаПериода
		|	И ДанныеДокумента.Ссылка.Проведен
		|	И ДанныеДокумента.Ссылка <> &Ссылка
		|	И ДанныеДокумента.Организация = &Организация
		|	И (ДанныеДокумента.НомерПакета = &НомерПакета
		|			ИЛИ ДанныеДокумента.НомерПакета = 0
		|			ИЛИ &НомерПакета = 0)");
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериодаПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НомерПакета", НомерПакета);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		ШаблонТекста = НСтр("ru = 'За %1 уже есть проведенный документ для выбранной организации и номера пакета.
                             |Необходимо выбрать другой номер пакета или воспользоваться закрытием месяца.';
                             |en = 'There is a posted document for the selected company and package number for %1.
                             |Select another package number or use month-end closing.'");
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ТекстОшибки = СтрШаблон(ШаблонТекста, Формат(Дата, "ДФ='ММММ гггг ""г.""'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "НомерПакета", "Объект", Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьНомерПакета(Отказ)

	Если НомерПакета = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПакетыПогашенияСтоимостиТМЦ.Организация
	|ИЗ
	|	РегистрСведений.ПакетыПогашенияСтоимостиТМЦ КАК ПакетыПогашенияСтоимостиТМЦ
	|ГДЕ
	|	ПакетыПогашенияСтоимостиТМЦ.Организация = &Организация
	|	И ПакетыПогашенияСтоимостиТМЦ.НомерПакета = &НомерПакета";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НомерПакета", НомерПакета);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ТекстОшибки = НСтр("ru = 'Указанный номер пакета не существует';
							|en = 'Specified package number does not exist'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "НомерПакета", "Объект", Отказ);
	КонецЕсли; 
	
КонецПроцедуры

Процедура РассчитатьДокумент(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Расходы.Очистить();
	Доходы.Очистить();
	Списания.Очистить();
	СписанияЗабалансовыйУчет.Очистить();
	Перемещения.Очистить();
	ПеремещенияЗабалансовыйУчет.Очистить();
	Возвраты.Очистить();
	СписанияФСБУ5.Очистить();
	
	Результат = ВыполнитьЗапросПогашенияСтоимости();
	ТаблицаДоступныхСтоимостей = СоздатьТаблицуДоступныхСтоимостей();
	ТаблицаЗабалансовыхСтоимостей = Результат.ДоступныеОстаткиЗаБалансом.Выгрузить();
	
	ЗаполнитьРасходы(Результат.ДоступныеОстатки, ТаблицаДоступныхСтоимостей, Отказ);
	ЗаполнитьПеремещения(Результат.Перемещения, ТаблицаДоступныхСтоимостей, ТаблицаЗабалансовыхСтоимостей, Отказ);
	ЗаполнитьСписания(Результат.Списания, ТаблицаДоступныхСтоимостей, ТаблицаЗабалансовыхСтоимостей, Отказ);
	ЗаполнитьВозвраты(Результат.Возвраты, ТаблицаДоступныхСтоимостей, ТаблицаЗабалансовыхСтоимостей, Отказ);
	ЗаполнитьСписанияФСБУ5(Результат.ДоступныеОстатки, Результат.ДоступныеОстаткиЗаБалансом);
	
	Если Расходы.Количество() > 99999
		ИЛИ Списания.Количество() > 99999 
		ИЛИ Перемещения.Количество() > 99999 
		ИЛИ СписанияЗабалансовыйУчет.Количество() > 99999 
		ИЛИ ПеремещенияЗабалансовыйУчет.Количество() > 99999 
		ИЛИ Доходы.Количество() > 99999 
		ИЛИ Возвраты.Количество() > 99999 Тогда
			
		ТекстСообщения = НСтр("ru = 'Укажите номер пакета или воспользуйтесь закрытием месяца.';
								|en = 'Specify a package number or use month-end closing. '");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "НомерПакета",, Отказ);
		 
	КонецЕсли; 
	
КонецПроцедуры

Функция СоздатьТаблицуДоступныхСтоимостей()
	
	ТаблицаДоступныхСтоимостей = Новый ТаблицаЗначений;
	
	ТаблицаДоступныхСтоимостей.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	ТаблицаДоступныхСтоимостей.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДоступныхСтоимостей.Колонки.Добавить("Партия", Новый ОписаниеТипов("СправочникСсылка.ПартииТМЦВЭксплуатации"));
	ТаблицаДоступныхСтоимостей.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаДоступныхСтоимостей.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаДоступныхСтоимостей.Колонки.Добавить("СуммаБУ", Новый ОписаниеТипов("Число"));
	ТаблицаДоступныхСтоимостей.Колонки.Добавить("СуммаНУ", Новый ОписаниеТипов("Число"));
	ТаблицаДоступныхСтоимостей.Колонки.Добавить("СуммаПР", Новый ОписаниеТипов("Число"));
	ТаблицаДоступныхСтоимостей.Колонки.Добавить("СуммаВР", Новый ОписаниеТипов("Число"));
	
	Возврат ТаблицаДоступныхСтоимостей;
	
КонецФункции

Процедура ЗаполнитьРасходы(РезультатЗапроса, ТаблицаДоступныхСтоимостей, Отказ)
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.РесурсВыработанныйЗаПериод = 0 И Выборка.РесурсОстаточный <> 0 Тогда
			ЗаполнитьЗначенияСвойств(ТаблицаДоступныхСтоимостей.Добавить(), Выборка);
			Продолжить;
		КонецЕсли;
		
		Если Выборка.РесурсОстаточный = 0
			Или Выборка.РесурсОстаточный <= Выборка.РесурсВыработанныйЗаПериод
			Или (Выборка.СуммаБУ=0
				И Выборка.СуммаНУ=0
				И Выборка.СуммаПР=0
				И Выборка.СуммаВР=0) Тогда
			
			ЗаполнитьЗначенияСвойств(Расходы.Добавить(), Выборка);
			Продолжить;
		КонецЕсли;
		
		СтрокаРасходы = Расходы.Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрокаРасходы, Выборка, , "Количество");
		
		Коэффициент = (Выборка.РесурсВыработанныйЗаПериод/Выборка.РесурсОстаточный);
		
		СтрокаРасходы.СуммаБУ = СтрокаРасходы.СуммаБУ * Коэффициент;
		СтрокаРасходы.СуммаНУ = СтрокаРасходы.СуммаНУ * Коэффициент;
		СтрокаРасходы.СуммаПР = СтрокаРасходы.СуммаПР * Коэффициент;
		СтрокаРасходы.СуммаВР = СтрокаРасходы.СуммаБУ - СтрокаРасходы.СуммаНУ - СтрокаРасходы.СуммаПР;
		
		СтрокаДоступныеСтоимости = ТаблицаДоступныхСтоимостей.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДоступныеСтоимости, Выборка);
		
		СтрокаДоступныеСтоимости.СуммаБУ = СтрокаДоступныеСтоимости.СуммаБУ - СтрокаРасходы.СуммаБУ;
		СтрокаДоступныеСтоимости.СуммаНУ = СтрокаДоступныеСтоимости.СуммаНУ - СтрокаРасходы.СуммаНУ;
		СтрокаДоступныеСтоимости.СуммаПР = СтрокаДоступныеСтоимости.СуммаПР - СтрокаРасходы.СуммаПР;
		СтрокаДоступныеСтоимости.СуммаВР = СтрокаДоступныеСтоимости.СуммаВР - СтрокаРасходы.СуммаВР;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСписания(РезультатЗапроса, ТаблицаДоступныхСтоимостей, ТаблицаЗабалансовыхСтоимостей, Отказ)
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	СтруктураПоиска = Новый Структура("Подразделение, Номенклатура, Партия, ФизическоеЛицо");
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		Если Не ДополнитьТаблицуСписаний(Выборка, ТаблицаДоступныхСтоимостей, СтруктураПоиска) Тогда
			СтруктураПоиска.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
			ДополнитьТаблицуСписаний(Выборка, ТаблицаДоступныхСтоимостей, СтруктураПоиска);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		Если Не ДополнитьТаблицуСписанийЗабалансовыйУчет(Выборка, ТаблицаЗабалансовыхСтоимостей, СтруктураПоиска) Тогда
			СтруктураПоиска.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
			ДополнитьТаблицуСписанийЗабалансовыйУчет(Выборка, ТаблицаЗабалансовыхСтоимостей, СтруктураПоиска);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДополнитьТаблицуСписаний(СтруктураСтроки, ТаблицаДоступныхСтоимостей, СтруктураПоиска)
	
	СтрокиДоступныхСтоимостей = ТаблицаДоступныхСтоимостей.НайтиСтроки(СтруктураПоиска);
	Если СтрокиДоступныхСтоимостей.Количество()=0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтрокаСписаний = Списания.Добавить();
	СтрокаДоступныеСтоимости = СтрокиДоступныхСтоимостей[0];
	ЗаполнитьЗначенияСвойств(СтрокаСписаний, СтруктураСтроки);
	ЗаполнитьЗначенияСвойств(СтрокаСписаний, СтрокаДоступныеСтоимости);
	
	Если СтрокаДоступныеСтоимости.Количество > СтруктураСтроки.Количество Тогда
		
		Коэффициент = (СтруктураСтроки.Количество/СтрокаДоступныеСтоимости.Количество);
		
		СтрокаСписаний.Количество = СтруктураСтроки.Количество;
		СтрокаСписаний.СуммаБУ = СтрокаСписаний.СуммаБУ * Коэффициент;
		СтрокаСписаний.СуммаНУ = СтрокаСписаний.СуммаНУ * Коэффициент;
		СтрокаСписаний.СуммаПР = СтрокаСписаний.СуммаПР * Коэффициент;
		СтрокаСписаний.СуммаВР = СтрокаСписаний.СуммаБУ - СтрокаСписаний.СуммаНУ - СтрокаСписаний.СуммаПР;
		
	КонецЕсли;
	
	СтрокаДоступныеСтоимости.Количество = СтрокаДоступныеСтоимости.Количество - СтрокаСписаний.Количество;
	
	СтрокаДоступныеСтоимости.СуммаБУ = СтрокаДоступныеСтоимости.СуммаБУ - СтрокаСписаний.СуммаБУ;
	СтрокаДоступныеСтоимости.СуммаНУ = СтрокаДоступныеСтоимости.СуммаНУ - СтрокаСписаний.СуммаНУ;
	СтрокаДоступныеСтоимости.СуммаПР = СтрокаДоступныеСтоимости.СуммаПР - СтрокаСписаний.СуммаПР;
	СтрокаДоступныеСтоимости.СуммаВР = СтрокаДоступныеСтоимости.СуммаВР - СтрокаСписаний.СуммаВР;
	
	Если СтрокаДоступныеСтоимости.Количество = 0 Тогда
		ТаблицаДоступныхСтоимостей.Удалить(СтрокаДоступныеСтоимости);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ДополнитьТаблицуСписанийЗабалансовыйУчет(СтруктураСтроки, ТаблицаДоступныхСтоимостей, СтруктураПоиска)
	
	СтрокиДоступныхСтоимостей = ТаблицаДоступныхСтоимостей.НайтиСтроки(СтруктураПоиска);
	Если СтрокиДоступныхСтоимостей.Количество()=0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтрокаСписаний = СписанияЗабалансовыйУчет.Добавить();
	СтрокаДоступныеСтоимости = СтрокиДоступныхСтоимостей[0];
	ЗаполнитьЗначенияСвойств(СтрокаСписаний, СтруктураСтроки);
	ЗаполнитьЗначенияСвойств(СтрокаСписаний, СтрокаДоступныеСтоимости);
	
	Если СтрокаДоступныеСтоимости.Количество > СтруктураСтроки.Количество Тогда
		
		Коэффициент = (СтруктураСтроки.Количество/СтрокаДоступныеСтоимости.Количество);
		
		СтрокаСписаний.Количество = СтруктураСтроки.Количество;
		СтрокаСписаний.Сумма = СтрокаСписаний.Сумма * Коэффициент;
		
	КонецЕсли;
	
	СтрокаДоступныеСтоимости.Количество = СтрокаДоступныеСтоимости.Количество - СтрокаСписаний.Количество;
	
	СтрокаДоступныеСтоимости.Сумма = СтрокаДоступныеСтоимости.Сумма - СтрокаСписаний.Сумма;
	
	Если СтрокаДоступныеСтоимости.Количество = 0 Тогда
		ТаблицаДоступныхСтоимостей.Удалить(СтрокаДоступныеСтоимости);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ЗаполнитьПеремещения(РезультатЗапроса, ТаблицаДоступныхСтоимостей, ТаблицаЗабалансовыхСтоимостей, Отказ)
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Период = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	
	СтоимостьСписана = 
		НачалоМесяца(Период) >= НачалоМесяца(РеглУчетКлиентСервер.НачалоПримененияФСБУ5_2019())
		И ТМЦВЭксплуатацииПовтИсп.СтоимостьТМЦВЭксплуатацииСписана(Организация, НачалоМесяца(Период));

	Выборка = РезультатЗапроса.Выбрать();
	СтруктураПоиска = Новый Структура("Подразделение, Номенклатура, Партия, ФизическоеЛицо");
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		Если Не ДополнитьТаблицуПеремещений(Выборка, ТаблицаДоступныхСтоимостей, СтруктураПоиска) Тогда
			СтруктураПоиска.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
			ЕстьОстаток = ДополнитьТаблицуПеремещений(Выборка, ТаблицаДоступныхСтоимостей, СтруктураПоиска);
			Если НЕ ЕстьОстаток
				И НЕ СтоимостьСписана
				И (Выборка.СпособПогашенияСтоимостиБУ <> Перечисления.СпособыПогашенияСтоимостиТМЦ.ПриПередаче
					ИЛИ Выборка.СпособПогашенияСтоимостиНУ <> Перечисления.СпособыПогашенияСтоимостиТМЦ.ПриПередаче) Тогда
				ЗарегистрироватьПроблемуПеремещения(Выборка, 0);
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		Если Не ДополнитьТаблицуПеремещенийЗабалансовыйУчет(Выборка, ТаблицаЗабалансовыхСтоимостей, СтруктураПоиска) Тогда
			СтруктураПоиска.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
			ДополнитьТаблицуПеремещенийЗабалансовыйУчет(Выборка, ТаблицаЗабалансовыхСтоимостей, СтруктураПоиска);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДополнитьТаблицуПеремещений(СтруктураСтроки, ТаблицаДоступныхСтоимостей, СтруктураПоиска)
	
	СтрокиДоступныхСтоимостей = ТаблицаДоступныхСтоимостей.НайтиСтроки(СтруктураПоиска);
	Если СтрокиДоступныхСтоимостей.Количество()=0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтрокаПеремещений = Перемещения.Добавить();
	СтрокаДоступныеСтоимости = СтрокиДоступныхСтоимостей[0];
	ЗаполнитьЗначенияСвойств(СтрокаПеремещений, СтруктураСтроки);
	ЗаполнитьЗначенияСвойств(СтрокаПеремещений, СтрокаДоступныеСтоимости);
	
	Если СтрокаДоступныеСтоимости.Количество < СтруктураСтроки.Количество Тогда
		ЗарегистрироватьПроблемуПеремещения(СтруктураСтроки, СтрокаДоступныеСтоимости.Количество);
	КонецЕсли; 
	
	Если СтрокаДоступныеСтоимости.Количество > СтруктураСтроки.Количество Тогда
		
		Коэффициент = (СтруктураСтроки.Количество/СтрокаДоступныеСтоимости.Количество);
		
		СтрокаПеремещений.Количество = СтруктураСтроки.Количество;
		СтрокаПеремещений.СуммаБУ = СтрокаПеремещений.СуммаБУ * Коэффициент;
		СтрокаПеремещений.СуммаНУ = СтрокаПеремещений.СуммаНУ * Коэффициент;
		СтрокаПеремещений.СуммаПР = СтрокаПеремещений.СуммаПР * Коэффициент;
		СтрокаПеремещений.СуммаВР = СтрокаПеремещений.СуммаБУ - СтрокаПеремещений.СуммаНУ - СтрокаПеремещений.СуммаПР;
		
	КонецЕсли;
	
	СтрокаДоступныеСтоимости.Количество = СтрокаДоступныеСтоимости.Количество - СтрокаПеремещений.Количество;
	
	СтрокаДоступныеСтоимости.СуммаБУ = СтрокаДоступныеСтоимости.СуммаБУ - СтрокаПеремещений.СуммаБУ;
	СтрокаДоступныеСтоимости.СуммаНУ = СтрокаДоступныеСтоимости.СуммаНУ - СтрокаПеремещений.СуммаНУ;
	СтрокаДоступныеСтоимости.СуммаПР = СтрокаДоступныеСтоимости.СуммаПР - СтрокаПеремещений.СуммаПР;
	СтрокаДоступныеСтоимости.СуммаВР = СтрокаДоступныеСтоимости.СуммаВР - СтрокаПеремещений.СуммаВР;
	
	Если ЗначениеЗаполнено(СтруктураПоиска.ФизическоеЛицо) Тогда
		ФизическоеЛицоПолучатель = СтрокаПеремещений.ФизическоеЛицоПолучатель;
	Иначе	
		ФизическоеЛицоПолучатель = Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураПоискаПолучатель = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПоиска);
	СтруктураПоискаПолучатель.Подразделение = СтрокаПеремещений.ПодразделениеПолучатель;
	СтруктураПоискаПолучатель.ФизическоеЛицо = ФизическоеЛицоПолучатель;
	СписокСтрок = ТаблицаДоступныхСтоимостей.НайтиСтроки(СтруктураПоискаПолучатель);
	Если СписокСтрок.Количество() = 0 Тогда
		Если СтрокаДоступныеСтоимости.Количество <> 0 Тогда
			СтрокаДоступныеСтоимости = ТаблицаДоступныхСтоимостей.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СтрокаДоступныеСтоимости, СтрокаПеремещений);
		СтрокаДоступныеСтоимости.Подразделение = СтрокаПеремещений.ПодразделениеПолучатель;
		СтрокаДоступныеСтоимости.ФизическоеЛицо = ФизическоеЛицоПолучатель;
	Иначе
		СтрокаДоступныеСтоимости = СписокСтрок[0];
		СтрокаДоступныеСтоимости.Количество = СтрокаДоступныеСтоимости.Количество + СтрокаПеремещений.Количество;
		СтрокаДоступныеСтоимости.СуммаБУ = СтрокаДоступныеСтоимости.СуммаБУ + СтрокаПеремещений.СуммаБУ;
		СтрокаДоступныеСтоимости.СуммаНУ = СтрокаДоступныеСтоимости.СуммаНУ + СтрокаПеремещений.СуммаНУ;
		СтрокаДоступныеСтоимости.СуммаПР = СтрокаДоступныеСтоимости.СуммаПР + СтрокаПеремещений.СуммаПР;
		СтрокаДоступныеСтоимости.СуммаВР = СтрокаДоступныеСтоимости.СуммаВР + СтрокаПеремещений.СуммаВР;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ДополнитьТаблицуПеремещенийЗабалансовыйУчет(СтруктураСтроки, ТаблицаДоступныхСтоимостей, СтруктураПоиска)
	
	СтрокиДоступныхСтоимостей = ТаблицаДоступныхСтоимостей.НайтиСтроки(СтруктураПоиска);
	Если СтрокиДоступныхСтоимостей.Количество()=0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтрокаПеремещений = ПеремещенияЗабалансовыйУчет.Добавить();
	СтрокаДоступныеСтоимости = СтрокиДоступныхСтоимостей[0];
	ЗаполнитьЗначенияСвойств(СтрокаПеремещений, СтруктураСтроки);
	ЗаполнитьЗначенияСвойств(СтрокаПеремещений, СтрокаДоступныеСтоимости);
	
	Если СтрокаДоступныеСтоимости.Количество > СтруктураСтроки.Количество Тогда
		
		Коэффициент = (СтруктураСтроки.Количество/СтрокаДоступныеСтоимости.Количество);
		
		СтрокаПеремещений.Количество = СтруктураСтроки.Количество;
		СтрокаПеремещений.Сумма = СтрокаПеремещений.Сумма * Коэффициент;
		
	КонецЕсли;
	
	СтрокаДоступныеСтоимости.Количество = СтрокаДоступныеСтоимости.Количество - СтрокаПеремещений.Количество;
	
	СтрокаДоступныеСтоимости.Сумма = СтрокаДоступныеСтоимости.Сумма - СтрокаПеремещений.Сумма;
	
	Если ЗначениеЗаполнено(СтруктураПоиска.ФизическоеЛицо) Тогда
		ФизическоеЛицоПолучатель = СтрокаПеремещений.ФизическоеЛицоПолучатель;
	Иначе	
		ФизическоеЛицоПолучатель = Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураПоискаПолучатель = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПоиска);
	СтруктураПоискаПолучатель.Подразделение = СтрокаПеремещений.ПодразделениеПолучатель;
	СтруктураПоискаПолучатель.ФизическоеЛицо = ФизическоеЛицоПолучатель;
	СписокСтрок = ТаблицаДоступныхСтоимостей.НайтиСтроки(СтруктураПоискаПолучатель);
	Если СписокСтрок.Количество() = 0 Тогда
		Если СтрокаДоступныеСтоимости.Количество <> 0 Тогда
			СтрокаДоступныеСтоимости = ТаблицаДоступныхСтоимостей.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СтрокаДоступныеСтоимости, СтрокаПеремещений);
		СтрокаДоступныеСтоимости.Подразделение = СтрокаПеремещений.ПодразделениеПолучатель;
		СтрокаДоступныеСтоимости.ФизическоеЛицо = ФизическоеЛицоПолучатель;
	Иначе
		СтрокаДоступныеСтоимости = СписокСтрок[0];
		СтрокаДоступныеСтоимости.Количество = СтрокаДоступныеСтоимости.Количество + СтрокаПеремещений.Количество;
		СтрокаДоступныеСтоимости.Сумма = СтрокаДоступныеСтоимости.Сумма + СтрокаПеремещений.Сумма;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ЗарегистрироватьПроблемуПеремещения(СтруктураСтроки, Остаток)

	ОписаниеПроблемы = НСтр("ru = 'В документе Перемещение в эксплуатации №%1 от %2 по номенклатуре ""%3"" (партия ""%4"") количество превышает свободный остаток на %5 %6.';
							|en = 'Quantity exceeds the available stock by %5 %6 in the ""Transfer in operation"" document No.%1 dated %2 by the ""%3"" products (the ""%4"" batch).'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
							СтруктураСтроки.Номер, 
							СтруктураСтроки.Дата, 
							СтруктураСтроки.Номенклатура, 
							СтруктураСтроки.Партия, 
							Формат(СтруктураСтроки.Количество - Остаток, "ЧДЦ=2"), 
							СтруктураСтроки.ЕдиницаИзмерения);
	
	ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемыРасчета(
		Перечисления.ОперацииЗакрытияМесяца.ПогашениеСтоимостиТМЦВЭксплуатации,
		Организация,
		НачалоМесяца(Дата));
	
	ГруппаПроблем = НСтр("ru = 'При выполнении операции были диагностированы предупреждения';
						|en = 'Warnings were found while executing the operation'", ОбщегоНазначения.КодОсновногоЯзыка());
		
	ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемуВыполненияРасчета(
		ПараметрыРегистрации,
		ГруппаПроблем,
		Перечисления.ВажностьПроблемыУчета.ПолезныйСовет,
		ОписаниеПроблемы,
		СтруктураСтроки.Ссылка);
	
КонецПроцедуры
 
Процедура ЗаполнитьВозвраты(РезультатЗапроса, ТаблицаДоступныхСтоимостей, ТаблицаЗабалансовыхСтоимостей, Отказ)
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиРеглУчета = РеглУчетСервер.НастройкиУчета();
	
	ДатаНачалаУУ = НастройкиРеглУчета.ДатаНачалаВеденияУправленческогоУчета;
	УправленческийУчетНаПланеСчетовРегл = 
		НастройкиРеглУчета.ДополнительноВедетсяУправленческийУчет
		И (ДатаНачалаУУ = '000101010000'
			ИЛИ ДатаНачалаУУ <= Дата);
	
	Выборка = РезультатЗапроса.Выбрать();
	СтруктураПоиска = Новый Структура("Подразделение, Номенклатура, Партия, ФизическоеЛицо");
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		Если Не ДополнитьТаблицуВозвратов(Выборка, ТаблицаДоступныхСтоимостей, СтруктураПоиска) Тогда
			СтруктураПоиска.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
			Если Не ДополнитьТаблицуВозвратов(Выборка, ТаблицаДоступныхСтоимостей, СтруктураПоиска) Тогда
				
				Если Выборка.Сумма <> 0 И НЕ Выборка.ЭтоВозвратВМесяцеПередачи Тогда
					// ТМЦ нет в наличии, например, он был списан при передаче, поэтому вся сумма за счет доходов.
					СтрокаДоходов = Доходы.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДоходов, Выборка);
					СтрокаДоходов.СуммаБУ = Выборка.Сумма;
					СтрокаДоходов.СуммаНУ = ?(Выборка.ПоместитьСуммуНУвВР, 0, Выборка.Сумма);
					СтрокаДоходов.СуммаПР = 0;
					СтрокаДоходов.СуммаВР = ?(Выборка.ПоместитьСуммуНУвВР, Выборка.Сумма, 0);
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		Если Не ДополнитьТаблицуСписанийЗабалансовыйУчет(Выборка, ТаблицаЗабалансовыхСтоимостей, СтруктураПоиска) Тогда
			СтруктураПоиска.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
			ДополнитьТаблицуСписанийЗабалансовыйУчет(Выборка, ТаблицаЗабалансовыхСтоимостей, СтруктураПоиска);
		КонецЕсли;
		
		// Возврат в валюте упр. всегда за счет доходов.
		Если УправленческийУчетНаПланеСчетовРегл Тогда
			СтрокаДоходов = Доходы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДоходов, Выборка);
			СтрокаДоходов.СуммаУУ = Выборка.СуммаУпр;
			СтрокаДоходов.СуммаБУ = 0;
			СтрокаДоходов.СуммаНУ = 0;
			СтрокаДоходов.СуммаПР = 0;
			СтрокаДоходов.СуммаВР = 0;
			СтрокаДоходов.Количество = 0;
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДополнитьТаблицуВозвратов(СтруктураСтроки, ТаблицаДоступныхСтоимостей, СтруктураПоиска)
	
	СтрокиДоступныхСтоимостей = ТаблицаДоступныхСтоимостей.НайтиСтроки(СтруктураПоиска);
	Если СтрокиДоступныхСтоимостей.Количество()=0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтрокаДоступныеСтоимости = СтрокиДоступныхСтоимостей[0];
	
	Если СтруктураСтроки.ЭтоВозвратВМесяцеПередачи Тогда
		СтрокаВозвратовИлиРасходов = Расходы.Добавить();
	Иначе	
		СтрокаВозвратовИлиРасходов = Возвраты.Добавить();
	КонецЕсли; 
	
	ЗаполнитьЗначенияСвойств(СтрокаВозвратовИлиРасходов, СтруктураСтроки);
	ЗаполнитьЗначенияСвойств(СтрокаВозвратовИлиРасходов, СтрокаДоступныеСтоимости);
	
	Если СтрокаДоступныеСтоимости.Количество > СтруктураСтроки.Количество Тогда
		
		Коэффициент = (СтруктураСтроки.Количество/СтрокаДоступныеСтоимости.Количество);
		
		СтрокаВозвратовИлиРасходов.Количество = СтруктураСтроки.Количество;
		СтрокаВозвратовИлиРасходов.СуммаБУ = СтрокаВозвратовИлиРасходов.СуммаБУ * Коэффициент;
		СтрокаВозвратовИлиРасходов.СуммаНУ = СтрокаВозвратовИлиРасходов.СуммаНУ * Коэффициент;
		СтрокаВозвратовИлиРасходов.СуммаПР = СтрокаВозвратовИлиРасходов.СуммаПР * Коэффициент;
		СтрокаВозвратовИлиРасходов.СуммаВР = 
			СтрокаВозвратовИлиРасходов.СуммаБУ 
			- СтрокаВозвратовИлиРасходов.СуммаНУ 
			- СтрокаВозвратовИлиРасходов.СуммаПР;
		
	КонецЕсли;
	
	СтрокаДоступныеСтоимости.Количество = СтрокаДоступныеСтоимости.Количество - СтрокаВозвратовИлиРасходов.Количество;
	
	СтрокаДоступныеСтоимости.СуммаБУ = СтрокаДоступныеСтоимости.СуммаБУ - СтрокаВозвратовИлиРасходов.СуммаБУ;
	СтрокаДоступныеСтоимости.СуммаНУ = СтрокаДоступныеСтоимости.СуммаНУ - СтрокаВозвратовИлиРасходов.СуммаНУ;
	СтрокаДоступныеСтоимости.СуммаПР = СтрокаДоступныеСтоимости.СуммаПР - СтрокаВозвратовИлиРасходов.СуммаПР;
	СтрокаДоступныеСтоимости.СуммаВР = СтрокаДоступныеСтоимости.СуммаВР - СтрокаВозвратовИлиРасходов.СуммаВР;
	
	Если СтрокаДоступныеСтоимости.Количество = 0 Тогда
		ТаблицаДоступныхСтоимостей.Удалить(СтрокаДоступныеСтоимости);
	КонецЕсли;
	
	Если СтрокаВозвратовИлиРасходов.СуммаБУ = СтруктураСтроки.Сумма
		ИЛИ СтруктураСтроки.ЭтоВозвратВМесяцеПередачи Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтрокаВозвратовИлиРасходов.СуммаБУ > СтруктураСтроки.Сумма Тогда
		
		СтрокаРасходов = Расходы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаРасходов, СтруктураСтроки, "СтатьяРасходов, АналитикаРасходов");
		ЗаполнитьЗначенияСвойств(СтрокаРасходов, СтрокаВозвратовИлиРасходов,, "СуммаБУ, СуммаНУ, СуммаПР, СуммаВР, Количество");
		
		Коэффициент = (СтруктураСтроки.Сумма/СтрокаВозвратовИлиРасходов.СуммаБУ);
		СтрокаРасходов.СуммаБУ = СтрокаВозвратовИлиРасходов.СуммаБУ - СтруктураСтроки.Сумма;
		СтрокаРасходов.СуммаНУ = СтрокаВозвратовИлиРасходов.СуммаНУ - СтрокаВозвратовИлиРасходов.СуммаНУ * Коэффициент;
		СтрокаРасходов.СуммаПР = СтрокаВозвратовИлиРасходов.СуммаПР - СтрокаВозвратовИлиРасходов.СуммаПР * Коэффициент;
		СтрокаРасходов.СуммаВР = СтрокаРасходов.СуммаБУ - СтрокаРасходов.СуммаНУ - СтрокаРасходов.СуммаПР;
		
		СтрокаВозвратовИлиРасходов.СуммаБУ = СтрокаВозвратовИлиРасходов.СуммаБУ - СтрокаРасходов.СуммаБУ;
		СтрокаВозвратовИлиРасходов.СуммаНУ = СтрокаВозвратовИлиРасходов.СуммаНУ - СтрокаРасходов.СуммаНУ;
		СтрокаВозвратовИлиРасходов.СуммаПР = СтрокаВозвратовИлиРасходов.СуммаПР - СтрокаРасходов.СуммаПР;
		СтрокаВозвратовИлиРасходов.СуммаВР = СтрокаВозвратовИлиРасходов.СуммаВР - СтрокаРасходов.СуммаВР;
		
	Иначе
		
		СтрокаДоходов = Доходы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДоходов, СтруктураСтроки, "СтатьяДоходов, АналитикаДоходов");
		ЗаполнитьЗначенияСвойств(СтрокаДоходов, СтрокаВозвратовИлиРасходов,, "СуммаБУ, СуммаНУ, СуммаПР, СуммаВР, Количество");
		СтрокаДоходов.СуммаБУ = СтруктураСтроки.Сумма - СтрокаВозвратовИлиРасходов.СуммаБУ;
		СтрокаДоходов.СуммаНУ = ?(СтруктураСтроки.ПоместитьСуммуНУвВР, 0, СтрокаДоходов.СуммаБУ);
		СтрокаДоходов.СуммаПР = 0;
		СтрокаДоходов.СуммаВР = ?(СтруктураСтроки.ПоместитьСуммуНУвВР, СтрокаДоходов.СуммаБУ, 0);
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ЗаполнитьСписанияФСБУ5(РезультатЗапросаДоступныеОстатки, РезультатЗапросаДоступныеОстаткиЗаБалансом)

	Период = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	
	Если НЕ ТМЦВЭксплуатацииПовтИсп.СписатьСтоимостьТМЦВЭксплуатации(Организация, НачалоМесяца(Период)) Тогда
		Возврат;
	КонецЕсли;	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Расходы.Подразделение КАК Подразделение,
	|	Расходы.Номенклатура КАК Номенклатура,
	|	Расходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Расходы.Партия КАК Партия,
	|	Расходы.СуммаБУ КАК СуммаБУ,
	|	Расходы.СуммаНУ КАК СуммаНУ,
	|	Расходы.СуммаПР КАК СуммаПР,
	|	Расходы.СуммаВР КАК СуммаВР,
	|	Расходы.Количество КАК Количество
	|ПОМЕСТИТЬ Расходы
	|ИЗ
	|	&Расходы КАК Расходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Списания.Подразделение КАК Подразделение,
	|	Списания.Номенклатура КАК Номенклатура,
	|	Списания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Списания.Партия КАК Партия,
	|	Списания.СуммаБУ КАК СуммаБУ,
	|	Списания.СуммаНУ КАК СуммаНУ,
	|	Списания.СуммаПР КАК СуммаПР,
	|	Списания.СуммаВР КАК СуммаВР,
	|	Списания.Количество КАК Количество
	|ПОМЕСТИТЬ Списания
	|ИЗ
	|	&Списания КАК Списания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписанияЗабалансовыйУчет.Подразделение КАК Подразделение,
	|	СписанияЗабалансовыйУчет.Номенклатура КАК Номенклатура,
	|	СписанияЗабалансовыйУчет.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписанияЗабалансовыйУчет.Партия КАК Партия,
	|	СписанияЗабалансовыйУчет.Сумма КАК Сумма
	|ПОМЕСТИТЬ СписанияЗабалансовыйУчет
	|ИЗ
	|	&СписанияЗабалансовыйУчет КАК СписанияЗабалансовыйУчет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Перемещения.Подразделение КАК Подразделение,
	|	Перемещения.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	Перемещения.Номенклатура КАК Номенклатура,
	|	Перемещения.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Перемещения.ФизическоеЛицоПолучатель КАК ФизическоеЛицоПолучатель,
	|	Перемещения.Партия КАК Партия,
	|	Перемещения.СуммаБУ КАК СуммаБУ,
	|	Перемещения.СуммаНУ КАК СуммаНУ,
	|	Перемещения.СуммаПР КАК СуммаПР,
	|	Перемещения.СуммаВР КАК СуммаВР,
	|	Перемещения.Количество КАК Количество
	|ПОМЕСТИТЬ Перемещения
	|ИЗ
	|	&Перемещения КАК Перемещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещенияЗабалансовыйУчет.Подразделение КАК Подразделение,
	|	ПеремещенияЗабалансовыйУчет.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	ПеремещенияЗабалансовыйУчет.Номенклатура КАК Номенклатура,
	|	ПеремещенияЗабалансовыйУчет.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПеремещенияЗабалансовыйУчет.ФизическоеЛицоПолучатель КАК ФизическоеЛицоПолучатель,
	|	ПеремещенияЗабалансовыйУчет.Партия КАК Партия,
	|	ПеремещенияЗабалансовыйУчет.Сумма КАК Сумма
	|ПОМЕСТИТЬ ПеремещенияЗабалансовыйУчет
	|ИЗ
	|	&ПеремещенияЗабалансовыйУчет КАК ПеремещенияЗабалансовыйУчет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Возвраты.Подразделение КАК Подразделение,
	|	Возвраты.Номенклатура КАК Номенклатура,
	|	Возвраты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Возвраты.Партия КАК Партия,
	|	Возвраты.СуммаБУ КАК СуммаБУ,
	|	Возвраты.СуммаНУ КАК СуммаНУ,
	|	Возвраты.СуммаПР КАК СуммаПР,
	|	Возвраты.СуммаВР КАК СуммаВР,
	|	Возвраты.Количество КАК Количество
	|ПОМЕСТИТЬ Возвраты
	|ИЗ
	|	&Возвраты КАК Возвраты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоступныеОстатки.Подразделение КАК Подразделение,
	|	ДоступныеОстатки.Номенклатура КАК Номенклатура,
	|	ДоступныеОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДоступныеОстатки.Партия КАК Партия,
	|	ДоступныеОстатки.СуммаБУ КАК СуммаБУ,
	|	ДоступныеОстатки.СуммаНУ КАК СуммаНУ,
	|	ДоступныеОстатки.СуммаПР КАК СуммаПР,
	|	ДоступныеОстатки.СуммаВР КАК СуммаВР,
	|	ДоступныеОстатки.Количество КАК Количество
	|ПОМЕСТИТЬ ДоступныеОстатки
	|ИЗ
	|	&ДоступныеОстатки КАК ДоступныеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоступныеОстаткиЗаБалансом.Подразделение КАК Подразделение,
	|	ДоступныеОстаткиЗаБалансом.Номенклатура КАК Номенклатура,
	|	ДоступныеОстаткиЗаБалансом.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДоступныеОстаткиЗаБалансом.Партия КАК Партия,
	|	ДоступныеОстаткиЗаБалансом.Сумма КАК Сумма
	|ПОМЕСТИТЬ ДоступныеОстаткиЗаБалансом
	|ИЗ
	|	&ДоступныеОстаткиЗаБалансом КАК ДоступныеОстаткиЗаБалансом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоступныеОстатки.Подразделение КАК Подразделение,
	|	ДоступныеОстатки.Номенклатура КАК Номенклатура,
	|	ДоступныеОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДоступныеОстатки.Партия КАК Партия,
	|	СУММА(ДоступныеОстатки.СуммаБУ) КАК СуммаБУ,
	|	СУММА(ДоступныеОстатки.СуммаНУ) КАК СуммаНУ,
	|	СУММА(ДоступныеОстатки.СуммаПР) КАК СуммаПР,
	|	СУММА(ДоступныеОстатки.СуммаВР) КАК СуммаВР,
	|	СУММА(ДоступныеОстатки.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДоступныеОстатки.Подразделение КАК Подразделение,
	|		ДоступныеОстатки.Номенклатура КАК Номенклатура,
	|		ДоступныеОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ДоступныеОстатки.Партия КАК Партия,
	|
	|		ДоступныеОстатки.СуммаБУ КАК СуммаБУ,
	|		ДоступныеОстатки.СуммаНУ КАК СуммаНУ,
	|		ДоступныеОстатки.СуммаПР КАК СуммаПР,
	|		ДоступныеОстатки.СуммаВР КАК СуммаВР,
	|		ДоступныеОстатки.Количество КАК Количество
	|	ИЗ
	|		ДоступныеОстатки КАК ДоступныеОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Расходы.Подразделение КАК Подразделение,
	|		Расходы.Номенклатура КАК Номенклатура,
	|		Расходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|		Расходы.Партия КАК Партия,
	|
	|		-Расходы.СуммаБУ КАК СуммаБУ,
	|		-Расходы.СуммаНУ КАК СуммаНУ,
	|		-Расходы.СуммаПР КАК СуммаПР,
	|		-Расходы.СуммаВР КАК СуммаВР,
	|		-Расходы.Количество КАК Количество
	|	ИЗ
	|		Расходы КАК Расходы
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Списания.Подразделение КАК Подразделение,
	|		Списания.Номенклатура КАК Номенклатура,
	|		Списания.ФизическоеЛицо КАК ФизическоеЛицо,
	|		Списания.Партия КАК Партия,
	|
	|		-Списания.СуммаБУ КАК СуммаБУ,
	|		-Списания.СуммаНУ КАК СуммаНУ,
	|		-Списания.СуммаПР КАК СуммаПР,
	|		-Списания.СуммаВР КАК СуммаВР,
	|		-Списания.Количество КАК Количество
	|	ИЗ
	|		Списания КАК Списания
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Перемещения.Подразделение КАК Подразделение,
	|		Перемещения.Номенклатура КАК Номенклатура,
	|		Перемещения.ФизическоеЛицо КАК ФизическоеЛицо,
	|		Перемещения.Партия КАК Партия,
	|
	|		-Перемещения.СуммаБУ КАК СуммаБУ,
	|		-Перемещения.СуммаНУ КАК СуммаНУ,
	|		-Перемещения.СуммаПР КАК СуммаПР,
	|		-Перемещения.СуммаВР КАК СуммаВР,
	|		-Перемещения.Количество КАК Количество
	|	ИЗ
	|		Перемещения КАК Перемещения
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Перемещения.ПодразделениеПолучатель КАК Подразделение,
	|		Перемещения.Номенклатура КАК Номенклатура,
	|		Перемещения.ФизическоеЛицоПолучатель КАК ФизическоеЛицо,
	|		Перемещения.Партия КАК Партия,
	|
	|		Перемещения.СуммаБУ КАК СуммаБУ,
	|		Перемещения.СуммаНУ КАК СуммаНУ,
	|		Перемещения.СуммаПР КАК СуммаПР,
	|		Перемещения.СуммаВР КАК СуммаВР,
	|		Перемещения.Количество КАК Количество
	|	ИЗ
	|		Перемещения КАК Перемещения
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Возвраты.Подразделение КАК Подразделение,
	|		Возвраты.Номенклатура КАК Номенклатура,
	|		Возвраты.ФизическоеЛицо КАК ФизическоеЛицо,
	|		Возвраты.Партия КАК Партия,
	|
	|		-Возвраты.СуммаБУ КАК СуммаБУ,
	|		-Возвраты.СуммаНУ КАК СуммаНУ,
	|		-Возвраты.СуммаПР КАК СуммаПР,
	|		-Возвраты.СуммаВР КАК СуммаВР,
	|		-Возвраты.Количество КАК Количество
	|	ИЗ
	|		Возвраты КАК Возвраты
	|
	|	) КАК ДоступныеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоступныеОстатки.Подразделение,
	|	ДоступныеОстатки.Номенклатура,
	|	ДоступныеОстатки.ФизическоеЛицо,
	|	ДоступныеОстатки.Партия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДоступныеОстатки.СуммаБУ) <> 0
	|		ИЛИ СУММА(ДоступныеОстатки.Количество) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоступныеОстатки.Подразделение КАК Подразделение,
	|	ДоступныеОстатки.Номенклатура КАК Номенклатура,
	|	ДоступныеОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДоступныеОстатки.Партия КАК Партия,
	|	СУММА(ДоступныеОстатки.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДоступныеОстаткиЗаБалансом.Подразделение КАК Подразделение,
	|		ДоступныеОстаткиЗаБалансом.Номенклатура КАК Номенклатура,
	|		ДоступныеОстаткиЗаБалансом.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ДоступныеОстаткиЗаБалансом.Партия КАК Партия,
	|
	|		ДоступныеОстаткиЗаБалансом.Сумма КАК Сумма
	|	ИЗ
	|		ДоступныеОстаткиЗаБалансом КАК ДоступныеОстаткиЗаБалансом
	|
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		СписанияЗабалансовыйУчет.Подразделение КАК Подразделение,
	|		СписанияЗабалансовыйУчет.Номенклатура КАК Номенклатура,
	|		СписанияЗабалансовыйУчет.ФизическоеЛицо КАК ФизическоеЛицо,
	|		СписанияЗабалансовыйУчет.Партия КАК Партия,
	|
	|		-СписанияЗабалансовыйУчет.Сумма КАК Сумма
	|	ИЗ
	|		СписанияЗабалансовыйУчет КАК СписанияЗабалансовыйУчет
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПеремещенияЗабалансовыйУчет.Подразделение КАК Подразделение,
	|		ПеремещенияЗабалансовыйУчет.Номенклатура КАК Номенклатура,
	|		ПеремещенияЗабалансовыйУчет.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ПеремещенияЗабалансовыйУчет.Партия КАК Партия,
	|
	|		-ПеремещенияЗабалансовыйУчет.Сумма КАК Сумма
	|	ИЗ
	|		ПеремещенияЗабалансовыйУчет КАК ПеремещенияЗабалансовыйУчет
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПеремещенияЗабалансовыйУчет.ПодразделениеПолучатель КАК Подразделение,
	|		ПеремещенияЗабалансовыйУчет.Номенклатура КАК Номенклатура,
	|		ПеремещенияЗабалансовыйУчет.ФизическоеЛицоПолучатель КАК ФизическоеЛицо,
	|		ПеремещенияЗабалансовыйУчет.Партия КАК Партия,
	|
	|		ПеремещенияЗабалансовыйУчет.Сумма КАК Сумма
	|	ИЗ
	|		ПеремещенияЗабалансовыйУчет КАК ПеремещенияЗабалансовыйУчет
	|
	|	) КАК ДоступныеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоступныеОстатки.Подразделение,
	|	ДоступныеОстатки.Номенклатура,
	|	ДоступныеОстатки.ФизическоеЛицо,
	|	ДоступныеОстатки.Партия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДоступныеОстатки.Сумма) <> 0";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Расходы", Расходы.Выгрузить());
	Запрос.УстановитьПараметр("Списания", Списания.Выгрузить());
	Запрос.УстановитьПараметр("СписанияЗабалансовыйУчет", СписанияЗабалансовыйУчет.Выгрузить());
	Запрос.УстановитьПараметр("Перемещения", Перемещения.Выгрузить());
	Запрос.УстановитьПараметр("ПеремещенияЗабалансовыйУчет", ПеремещенияЗабалансовыйУчет.Выгрузить());
	Запрос.УстановитьПараметр("Возвраты", Возвраты.Выгрузить());
	Запрос.УстановитьПараметр("ДоступныеОстатки", РезультатЗапросаДоступныеОстатки.Выгрузить());
	Запрос.УстановитьПараметр("ДоступныеОстаткиЗаБалансом", РезультатЗапросаДоступныеОстаткиЗаБалансом.Выгрузить());
	
	Результат = Запрос.ВыполнитьПакет();
	
	СписанияФСБУ5.Загрузить(Результат[Результат.ВГраница()-1].Выгрузить());
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат[Результат.ВГраница()].Выгрузить(), СписанияЗабалансовыйУчет);
	
КонецПроцедуры

Функция ВыполнитьЗапросПогашенияСтоимости()
	
	СтруктураСчетовУчета = Обработки.НастройкаОтраженияДокументовВРеглУчете.ДоступныеСчетаУчетаТМЦВЭксплуатации();
	
	Период = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачДата", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонДата", КонецМесяца(Период));
	Запрос.УстановитьПараметр("НачДатаПрошлогоМесяца", НачалоМесяца(НачалоМесяца(Период)-1));
	Запрос.УстановитьПараметр("КонДатаПрошлогоМесяца", КонецМесяца(НачалоМесяца(Период)-1));
	Запрос.УстановитьПараметр("ДоступныеСчетаУчета", СтруктураСчетовУчета.СчетаУчетаТМЦВЭксплуатации);
	Запрос.УстановитьПараметр("ДоступныеСчетаЗабалансовогоУчета", СтруктураСчетовУчета.СчетаЗабалансовогоУчета);
	Запрос.УстановитьПараметр("НачалоПримененияФСБУ5", РеглУчетКлиентСервер.НачалоПримененияФСБУ5_2019());
	Запрос.УстановитьПараметр("НомерПакета", НомерПакета);
	
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Подразделение КАК Подразделение,
	|	ХозрасчетныйОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(Партии.Ссылка, ЗНАЧЕНИЕ(Справочник.ПартииТМЦВЭксплуатации.ПустаяСсылка)) КАК Партия,
	|	Партии.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	Партии.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ КАК СпособПогашенияСтоимостиБУ,
	|	(ЕСТЬNULL(НАЧАЛОПЕРИОДА(Партии.ДатаНачалаЭксплуатации, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) = &НачДатаПрошлогоМесяца 
	|		И НЕ Партии.Документ ССЫЛКА Документ.ВводОстатков) КАК ПартияПолученаПрошлымМесяцем,
	|
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто3 КАК Справочник.ФизическиеЛица) КАК ФизическоеЛицо,
	|
	|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаБУ,
	|	ХозрасчетныйОстатки.СуммаНУОстаток КАК СуммаНУ,
	|	ХозрасчетныйОстатки.СуммаПРОстаток КАК СуммаПР,
	|	ХозрасчетныйОстатки.СуммаОстаток - ХозрасчетныйОстатки.СуммаНУОстаток - ХозрасчетныйОстатки.СуммаПРОстаток КАК СуммаВР
	|
	|ПОМЕСТИТЬ ОстаткиВЭксплуатации
	|
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НачДата, Счет В (&ДоступныеСчетаУчета), , Организация = &Организация) КАК ХозрасчетныйОстатки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииТМЦВЭксплуатации КАК Партии
	|		ПО ХозрасчетныйОстатки.Субконто2 = Партии.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыПогашенияСтоимостиТМЦ КАК ПакетыПогашенияСтоимостиТМЦ
	|		ПО ХозрасчетныйОстатки.Субконто2 = ПакетыПогашенияСтоимостиТМЦ.Партия
	|			И ПакетыПогашенияСтоимостиТМЦ.Организация = &Организация
	|ГДЕ
	|	ЕСТЬNULL(ПакетыПогашенияСтоимостиТМЦ.НомерПакета, 0) = &НомерПакета
	|		ИЛИ &НомерПакета = 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИнвентарныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстаткиВЭксплуатации.Партия КАК Партия,
	|	РАЗНОСТЬДАТ(&НачДата, ОстаткиВЭксплуатации.Партия.ДатаЗавершенияЭксплуатации, МЕСЯЦ) + 1 КАК РесурсОстаточный,
	|	1 КАК РесурсВыработанныйЗаПериод
	|ПОМЕСТИТЬ ОстаткиРесурсов
	|ИЗ
	|	ОстаткиВЭксплуатации КАК ОстаткиВЭксплуатации
	|ГДЕ
	|	ОстаткиВЭксплуатации.СпособПогашенияСтоимостиБУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПоСроку)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстаткиВЭксплуатации.Партия,
	|	ЕСТЬNULL(НаработкиОкончаниеПериода.ПредельныйОбъем, 1)
	|	- ВЫБОР
	|		КОГДА ОстаткиВЭксплуатации.ПартияПолученаПрошлымМесяцем
	|			ТОГДА ЕСТЬNULL(НаработкиНачалоПрошлогоМесяца.Значение, 0)
	|		ИНАЧЕ ЕСТЬNULL(НаработкиНачалоПериода.Значение, 0)
	|	КОНЕЦ,
	|	ЕСТЬNULL(НаработкиОкончаниеПериода.Значение, 0)
	|	- ВЫБОР
	|		КОГДА ОстаткиВЭксплуатации.ПартияПолученаПрошлымМесяцем
	|			ТОГДА ЕСТЬNULL(НаработкиНачалоПрошлогоМесяца.Значение, 0)
	|		ИНАЧЕ ЕСТЬNULL(НаработкиНачалоПериода.Значение, 0)
	|	КОНЕЦ
	|ИЗ
	|	ОстаткиВЭксплуатации КАК ОстаткиВЭксплуатации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиТМЦВЭксплуатации.СрезПоследних(
	|				&НачДата,
	|				ИнвентарныйНомер В
	|					(ВЫБРАТЬ
	|						ОстаткиВЭксплуатации.ИнвентарныйНомер
	|					ИЗ
	|						ОстаткиВЭксплуатации КАК ОстаткиВЭксплуатации)) КАК НаработкиНачалоПериода
	|		ПО ОстаткиВЭксплуатации.ИнвентарныйНомер = НаработкиНачалоПериода.ИнвентарныйНомер
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиТМЦВЭксплуатации.СрезПоследних(
	|				&НачДатаПрошлогоМесяца,
	|				ИнвентарныйНомер В
	|					(ВЫБРАТЬ
	|						ОстаткиВЭксплуатации.ИнвентарныйНомер
	|					ИЗ
	|						ОстаткиВЭксплуатации КАК ОстаткиВЭксплуатации)) КАК НаработкиНачалоПрошлогоМесяца
	|		ПО ОстаткиВЭксплуатации.ИнвентарныйНомер = НаработкиНачалоПрошлогоМесяца.ИнвентарныйНомер
	|			И (ОстаткиВЭксплуатации.ПартияПолученаПрошлымМесяцем)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиТМЦВЭксплуатации.СрезПоследних(
	|				&КонДата,
	|				ИнвентарныйНомер В
	|					(ВЫБРАТЬ
	|						ОстаткиВЭксплуатации.ИнвентарныйНомер
	|					ИЗ
	|						ОстаткиВЭксплуатации КАК ОстаткиВЭксплуатации)) КАК НаработкиОкончаниеПериода
	|		ПО ОстаткиВЭксплуатации.ИнвентарныйНомер = НаработкиОкончаниеПериода.ИнвентарныйНомер
	|ГДЕ
	|	ОстаткиВЭксплуатации.СпособПогашенияСтоимостиБУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПоНаработке)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратИзЭксплуатации.Подразделение КАК Подразделение,
	|	ВозвратИзЭксплуатации.Склад КАК Склад,
	|	ВозвратИзЭксплуатации.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВозвратИзЭксплуатацииТовары.Номенклатура КАК Номенклатура,
	|	ВозвратИзЭксплуатацииТовары.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВозвратИзЭксплуатацииТовары.Партия КАК Партия,
	|	ВозвратИзЭксплуатацииТовары.ВидЗапасов КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ПартииТМЦВЭксплуатации.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ <> ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|				И ПартииТМЦВЭксплуатации.КатегорияЭксплуатации.СпособПогашенияСтоимостиНУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПоместитьСуммуНУвВР,
	|	ВозвратИзЭксплуатацииТовары.Количество КАК Количество,
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл, ВозвратИзЭксплуатацииТовары.Сумма) КАК Сумма,
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСУпр, ВозвратИзЭксплуатацииТовары.Сумма) КАК СуммаУпр,
	|	ВозвратИзЭксплуатацииТовары.СтатьяРасходовДоходов КАК СтатьяДоходов,
	|	ВозвратИзЭксплуатацииТовары.АналитикаДоходов КАК АналитикаДоходов,
	|	ВозвратИзЭксплуатацииТовары.Партия.СтатьяРасходов КАК СтатьяРасходов,
	|	ВозвратИзЭксплуатацииТовары.Партия.АналитикаРасходов КАК АналитикаРасходов,
	|	(ВозвратИзЭксплуатации.Дата МЕЖДУ &НачДатаПрошлогоМесяца И &КонДатаПрошлогоМесяца
	|		И НАЧАЛОПЕРИОДА(ВозвратИзЭксплуатации.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ВозвратИзЭксплуатацииТовары.Партия.ДатаНачалаЭксплуатации, МЕСЯЦ)) КАК ЭтоВозвратВМесяцеПередачи
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров КАК ВозвратИзЭксплуатации
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров.Товары КАК ВозвратИзЭксплуатацииТовары
	|		ПО ВозвратИзЭксплуатации.Ссылка = ВозвратИзЭксплуатацииТовары.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПартииТМЦВЭксплуатации КАК ПартииТМЦВЭксплуатации
	|		ПО (ВозвратИзЭксплуатацииТовары.Партия = ПартииТМЦВЭксплуатации.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|		ПО (ВозвратИзЭксплуатацииТовары.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыПогашенияСтоимостиТМЦ КАК ПакетыПогашенияСтоимостиТМЦ
	|		ПО ВозвратИзЭксплуатацииТовары.Партия = ПакетыПогашенияСтоимостиТМЦ.Партия
	|			И ПакетыПогашенияСтоимостиТМЦ.Организация = &Организация
	|ГДЕ
	|	ВозвратИзЭксплуатации.Организация = &Организация
	|	И ВозвратИзЭксплуатации.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзЭксплуатации))
	|	И ВозвратИзЭксплуатации.Проведен
	|	И НЕ ВозвратИзЭксплуатации.ПометкаУдаления
	|	И ВозвратИзЭксплуатацииТовары.Партия.ДатаНачалаЭксплуатации < &НачалоПримененияФСБУ5
	|	И ВЫБОР
	|			КОГДА ВозвратИзЭксплуатации.Дата МЕЖДУ &НачДата И &КонДата
	|				ТОГДА ИСТИНА
	|			КОГДА ВозвратИзЭксплуатации.Дата МЕЖДУ &НачДатаПрошлогоМесяца И &КонДатаПрошлогоМесяца
	|				ТОГДА НАЧАЛОПЕРИОДА(ВозвратИзЭксплуатации.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ВозвратИзЭксплуатацииТовары.Партия.ДатаНачалаЭксплуатации, МЕСЯЦ)
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И (ЕСТЬNULL(ПакетыПогашенияСтоимостиТМЦ.НомерПакета, 0) = &НомерПакета
	|		ИЛИ &НомерПакета = 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеВЭксплуатации.Ссылка КАК Ссылка,
	|	ПеремещениеВЭксплуатации.Номер КАК Номер,
	|	ПеремещениеВЭксплуатации.Дата КАК Дата,
	|	ПеремещениеВЭксплуатации.Подразделение КАК Подразделение,
	|	ПеремещениеВЭксплуатации.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	ПеремещениеВЭксплуатацииТовары.НаправлениеДеятельностиОтправитель КАК НаправлениеДеятельностиОтправитель,
	|	ПеремещениеВЭксплуатацииТовары.НаправлениеДеятельностиПолучатель КАК НаправлениеДеятельностиПолучатель,
	|	ПеремещениеВЭксплуатацииТовары.Номенклатура КАК Номенклатура,
	|	ПеремещениеВЭксплуатацииТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПеремещениеВЭксплуатацииТовары.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПеремещениеВЭксплуатацииТовары.Партия КАК Партия,
	|	ПеремещениеВЭксплуатацииТовары.Партия.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ КАК СпособПогашенияСтоимостиБУ,
	|	ПеремещениеВЭксплуатацииТовары.Партия.КатегорияЭксплуатации.СпособПогашенияСтоимостиНУ КАК СпособПогашенияСтоимостиНУ,
	|	ПеремещениеВЭксплуатацииТовары.Количество КАК Количество,
	|	ПеремещениеВЭксплуатацииТовары.ФизическоеЛицоПолучатель КАК ФизическоеЛицоПолучатель
	|ИЗ
	|	Документ.ПеремещениеВЭксплуатации КАК ПеремещениеВЭксплуатации
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеВЭксплуатации.Товары КАК ПеремещениеВЭксплуатацииТовары
	|		ПО ПеремещениеВЭксплуатации.Ссылка = ПеремещениеВЭксплуатацииТовары.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыПогашенияСтоимостиТМЦ КАК ПакетыПогашенияСтоимостиТМЦ
	|		ПО ПеремещениеВЭксплуатацииТовары.Партия = ПакетыПогашенияСтоимостиТМЦ.Партия
	|			И ПакетыПогашенияСтоимостиТМЦ.Организация = &Организация
	|ГДЕ
	|	ПеремещениеВЭксплуатации.Организация В(&Организация)
	|	И ПеремещениеВЭксплуатации.Проведен
	|	И НЕ ПеремещениеВЭксплуатации.ПометкаУдаления
	|	И ПеремещениеВЭксплуатацииТовары.Партия.ДатаНачалаЭксплуатации < &НачалоПримененияФСБУ5
	|	И ВЫБОР
	|			КОГДА ПеремещениеВЭксплуатации.Дата МЕЖДУ &НачДата И &КонДата
	|				ТОГДА ИСТИНА
	|			КОГДА ПеремещениеВЭксплуатации.Дата МЕЖДУ &НачДатаПрошлогоМесяца И &КонДатаПрошлогоМесяца
	|				ТОГДА НАЧАЛОПЕРИОДА(ПеремещениеВЭксплуатации.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПеремещениеВЭксплуатацииТовары.Партия.ДатаНачалаЭксплуатации, МЕСЯЦ)
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И (ЕСТЬNULL(ПакетыПогашенияСтоимостиТМЦ.НомерПакета, 0) = &НомерПакета
	|		ИЛИ &НомерПакета = 0)
	|УПОРЯДОЧИТЬ ПО
	|	ПеремещениеВЭксплуатации.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеИзЭксплуатации.Подразделение КАК Подразделение,
	|	СписаниеИзЭксплуатацииТовары.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СписаниеИзЭксплуатацииТовары.Номенклатура КАК Номенклатура,
	|	СписаниеИзЭксплуатацииТовары.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписаниеИзЭксплуатацииТовары.Партия КАК Партия,
	|	СписаниеИзЭксплуатацииТовары.Количество КАК Количество,
	|	СписаниеИзЭксплуатацииТовары.СтатьяРасходов КАК СтатьяРасходов,
	|	СписаниеИзЭксплуатацииТовары.АналитикаРасходов КАК АналитикаРасходов
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации КАК СписаниеИзЭксплуатации
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеИзЭксплуатации.Товары КАК СписаниеИзЭксплуатацииТовары
	|		ПО СписаниеИзЭксплуатации.Ссылка = СписаниеИзЭксплуатацииТовары.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыПогашенияСтоимостиТМЦ КАК ПакетыПогашенияСтоимостиТМЦ
	|		ПО СписаниеИзЭксплуатацииТовары.Партия = ПакетыПогашенияСтоимостиТМЦ.Партия
	|			И ПакетыПогашенияСтоимостиТМЦ.Организация = &Организация
	|ГДЕ
	|	СписаниеИзЭксплуатации.Организация В(&Организация)
	|	И СписаниеИзЭксплуатации.Проведен
	|	И НЕ СписаниеИзЭксплуатации.ПометкаУдаления
	|	И СписаниеИзЭксплуатацииТовары.Партия.ДатаНачалаЭксплуатации < &НачалоПримененияФСБУ5
	|	И ВЫБОР
	|			КОГДА СписаниеИзЭксплуатации.Дата МЕЖДУ &НачДата И &КонДата
	|				ТОГДА ИСТИНА
	|			КОГДА СписаниеИзЭксплуатации.Дата МЕЖДУ &НачДатаПрошлогоМесяца И &КонДатаПрошлогоМесяца
	|				ТОГДА НАЧАЛОПЕРИОДА(СписаниеИзЭксплуатации.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СписаниеИзЭксплуатацииТовары.Партия.ДатаНачалаЭксплуатации, МЕСЯЦ)
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И (ЕСТЬNULL(ПакетыПогашенияСтоимостиТМЦ.НомерПакета, 0) = &НомерПакета
	|		ИЛИ &НомерПакета = 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Подразделение КАК Подразделение,
	|	ХозрасчетныйОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ПартииТМЦВЭксплуатации) КАК Партия,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто3 КАК Справочник.ФизическиеЛица), ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ФизическоеЛицо,
	|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НачДата, Счет В (&ДоступныеСчетаЗабалансовогоУчета), , Организация В (&Организация)) КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыПогашенияСтоимостиТМЦ КАК ПакетыПогашенияСтоимостиТМЦ
	|		ПО ХозрасчетныйОстатки.Субконто2 = ПакетыПогашенияСтоимостиТМЦ.Партия
	|			И ПакетыПогашенияСтоимостиТМЦ.Организация = &Организация
	|ГДЕ
	|	(ЕСТЬNULL(ПакетыПогашенияСтоимостиТМЦ.НомерПакета, 0) = &НомерПакета
	|		ИЛИ &НомерПакета = 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиВЭксплуатации.Подразделение КАК Подразделение,
	|	ОстаткиВЭксплуатации.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ОстаткиВЭксплуатации.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ОстаткиВЭксплуатации.ФизическоеЛицо, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ФизическоеЛицо,
	|	ОстаткиВЭксплуатации.Партия КАК Партия,
	|	ОстаткиВЭксплуатации.Партия.СтатьяРасходов КАК СтатьяРасходов,
	|	ОстаткиВЭксплуатации.Партия.АналитикаРасходов КАК АналитикаРасходов,
	|	ОстаткиВЭксплуатации.Количество КАК Количество,
	|	ОстаткиВЭксплуатации.СуммаБУ КАК СуммаБУ,
	|	ОстаткиВЭксплуатации.СуммаНУ КАК СуммаНУ,
	|	ОстаткиВЭксплуатации.СуммаПР КАК СуммаПР,
	|	ОстаткиВЭксплуатации.СуммаВР КАК СуммаВР,
	|	ЕСТЬNULL(ОстаткиРесурсов.РесурсОстаточный, 0) КАК РесурсОстаточный,
	|	ЕСТЬNULL(ОстаткиРесурсов.РесурсВыработанныйЗаПериод, 0) КАК РесурсВыработанныйЗаПериод
	|ИЗ
	|	ОстаткиВЭксплуатации КАК ОстаткиВЭксплуатации
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиРесурсов КАК ОстаткиРесурсов
	|		ПО ОстаткиВЭксплуатации.Партия = ОстаткиРесурсов.Партия
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ОстаткиВЭксплуатации.ФизическоеЛицо = ФизическиеЛица.Ссылка";
	#КонецОбласти
	
	Результат = Запрос.ВыполнитьПакет();
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("ДоступныеОстатки", Результат[Результат.Количество()-1]);
	СтруктураРезультат.Вставить("ДоступныеОстаткиЗаБалансом", Результат[Результат.Количество()-2]);
	СтруктураРезультат.Вставить("Списания", Результат[Результат.Количество()-3]);
	СтруктураРезультат.Вставить("Перемещения", Результат[Результат.Количество()-4]);
	СтруктураРезультат.Вставить("Возвраты", Результат[Результат.Количество()-5]);
	
	Возврат СтруктураРезультат;
	
КонецФункции

Процедура ЗаполнитьНомерПакета()

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
	|	ПакетыПогашенияСтоимостиТМЦ.НомерПакета
	|ИЗ
	|	РегистрСведений.ПакетыПогашенияСтоимостиТМЦ КАК ПакетыПогашенияСтоимостиТМЦ
	|ГДЕ
	|	ПакетыПогашенияСтоимостиТМЦ.Организация = &Организация";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() И Выборка.Количество() = 1 Тогда
		НомерПакета = Выборка.НомерПакета;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьДанныеДляФормированияЗаданияКЗакрытиюМесяцаПередЗаписью()
	
	ДополнительныеСвойства.Вставить("ДанныеТаблиц",
		Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц));
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ТаблицаПередЗаписью.Дата, МЕСЯЦ) КАК Период,
	|	ТаблицаПередЗаписью.Организация КАК Организация,
	|	&Ссылка КАК Документ
	|ПОМЕСТИТЬ ПогашениеСтоимостиТМЦВЭксплуатацииИзменение
	|ИЗ
	|	Документ.ПогашениеСтоимостиТМЦВЭксплуатации КАК ТаблицаПередЗаписью
	|ГДЕ
	|	ТаблицаПередЗаписью.Ссылка = &Ссылка
	|	И ТаблицаПередЗаписью.Проведен";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ДополнительныеСвойства.ДанныеТаблиц.Вставить("ПогашениеСтоимостиТМЦВЭксплуатацииИзменение", Выборка.Количество > 0);
	
КонецПроцедуры

Процедура СформироватьЗаданиеПогашениеСтоимостиТМЦВЭксплуатацииПриОтменеПроведения()
	
	ВнеоборотныеАктивы.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект, ДополнительныеСвойства.ДанныеТаблиц);
	
	Если ДополнительныеСвойства.Свойство("ОчисткаДляПоследующегоПроведения") 
		И ДополнительныеСвойства.ОчисткаДляПоследующегоПроведения Тогда
		Возврат;
	КонецЕсли;
	
	Если Документы.ПогашениеСтоимостиТМЦВЭксплуатации.ТребуетсяПогашениеСтоимостиТМЦВЭксплуатации(Организация, Дата) Тогда
		
		Если НомерПакета = 0 Тогда
			
			СписокПартийТМЦ = Расходы.ВыгрузитьКолонку("Партия");
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СписокПартийТМЦ, Списания.ВыгрузитьКолонку("Партия"));
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СписокПартийТМЦ, Перемещения.ВыгрузитьКолонку("Партия"));
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СписокПартийТМЦ, СписанияЗабалансовыйУчет.ВыгрузитьКолонку("Партия"));
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СписокПартийТМЦ, ПеремещенияЗабалансовыйУчет.ВыгрузитьКолонку("Партия"));
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СписокПартийТМЦ, Доходы.ВыгрузитьКолонку("Партия"));
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СписокПартийТМЦ, Возвраты.ВыгрузитьКолонку("Партия"));
			
			ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(СписокПартийТМЦ);
			
			ТекстЗапроса = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	&Дата КАК Месяц,
			|	&Организация КАК Организация,
			|	&Документ КАК Документ,
			|	ЕСТЬNULL(ПакетыПогашенияСтоимостиТМЦ.НомерПакета, 0) КАК НомерПакета
			|ИЗ
			|	Справочник.ПартииТМЦВЭксплуатации КАК ПартииТМЦ
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыПогашенияСтоимостиТМЦ КАК ПакетыПогашенияСтоимостиТМЦ
			|		ПО (ПакетыПогашенияСтоимостиТМЦ.Партия = ПартииТМЦ.Ссылка)
			|			И (ПакетыПогашенияСтоимостиТМЦ.Организация = &Организация)
			|ГДЕ
			|	ПартииТМЦ.Ссылка В(&Партия)";
			
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("Документ", Ссылка);
			Запрос.УстановитьПараметр("Дата", НачалоМесяца(Дата));
			Запрос.УстановитьПараметр("Партия", СписокПартийТМЦ);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			РегистрыСведений.ЗаданияКПогашениюСтоимостиТМЦВЭксплуатации.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
			
		Иначе
			
			РегистрыСведений.ЗаданияКПогашениюСтоимостиТМЦВЭксплуатации.СоздатьЗаписьРегистра(
				НачалоМесяца(Дата), 
				Ссылка, 
				Организация, 
				НомерПакета);
				
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли