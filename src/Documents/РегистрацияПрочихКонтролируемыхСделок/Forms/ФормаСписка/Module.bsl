#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаКоманднаяПанель;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если НЕ ЗначениеЗаполнено(УведомлениеОКонтролируемыхСделках) И
		Параметры.Свойство("УведомлениеОКонтролируемыхСделках") Тогда
		УведомлениеОКонтролируемыхСделках = Параметры.УведомлениеОКонтролируемыхСделках;
	КонецЕсли;
	
	Элементы.ДекорацияОтборПоУведомлению.Заголовок = 
		КонтролируемыеСделки.ПредставлениеУведомления(УведомлениеОКонтролируемыхСделках, НСтр("ru = 'Прочие сделки';
																								|en = 'Other transactions'"));
	
	УведомлениеУказано = ЗначениеЗаполнено(УведомлениеОКонтролируемыхСделках);
	
	Элементы.УведомлениеОКонтролируемыхСделках.Видимость = НЕ УведомлениеУказано;
	Элементы.УведомлениеОКонтролируемойСделке.Видимость = НЕ УведомлениеУказано;
	Элементы.ДекорацияОтборПоУведомлению.Видимость = УведомлениеУказано;
	
	МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Документы.РегистрацияПрочихКонтролируемыхСделок);
	Элементы.СписокКонтекстноеМенюИзменитьВыделенные.Видимость = МожноРедактировать;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УведомлениеОКонтролируемыхСделкахПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено( УведомлениеОКонтролируемыхСделках) Тогда
		Список.Отбор.Элементы.Очистить();
		ОтборПоУведомлению = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборПоУведомлению.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("УведомлениеОКонтролируемойСделке");
		ОтборПоУведомлению.ПравоеЗначение = УведомлениеОКонтролируемыхСделках;
		Элементы.УведомлениеОКонтролируемойСделке.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УведомлениеОКонтролируемыхСделкахОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Список.Отбор.Элементы.Очистить();
	УведомлениеОКонтролируемыхСделках = УведомлениеОКонтролируемыхСделках.Пустая();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти
