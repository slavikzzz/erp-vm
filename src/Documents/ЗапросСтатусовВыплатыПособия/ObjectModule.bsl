///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	// Второстепенные реквизиты шапки заполняются в функции ОбновитьВторичныеДанные.
	ФиксацияИзменений.Очистить();
	
	// Заполнение ключевых реквизитов шапки, от которых строится учет.
	ОтветНаЗапрос        = ОбъектКопирования.ОтветНаЗапрос;
	ФизическоеЛицо       = ОбъектКопирования.ФизическоеЛицо;
	Страхователь         = ОбъектКопирования.Страхователь;
	ГоловнаяОрганизация  = ОбъектКопирования.ГоловнаяОрганизация;
	
	// Очистка результатов.
	ОтключитьПроверкиПроведения = Ложь;
	ХранилищеXML                = Неопределено;
	ДатаОтправки                = Неопределено;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если Метаданные().Реквизиты.ОтветНаЗапрос.Тип.СодержитТип(ТипЗнч(ДанныеЗаполнения))
		И ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		ОтветНаЗапрос = ДанныеЗаполнения;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ФизическоеЛицо = ДанныеЗаполнения;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "ГоловнаяОрганизация, ФизическоеЛицо");
		ГоловнаяОрганизация = РеквизитыОснования.ГоловнаяОрганизация;
		ФизическоеЛицо      = РеквизитыОснования.ФизическоеЛицо;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	ОбновитьВторичныеДанные();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	СЭДОФСС.ПроверитьИдентификаторРеестраПВСО(Отказ, ЭтотОбъект, "ИдентификаторСтрокиРеестра");
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	// Заполнение недостающих полей.
	Если Не ЗначениеЗаполнено(Дата) Тогда
		Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаСоздания) Тогда
		ДатаСоздания = ТекущаяДата(); // АПК:143 Для фильтрации событий в журнале регистрации требуется дата сервера.
	КонецЕсли;
	
	ЭтоПроведение = (РежимЗаписи = РежимЗаписиДокумента.Проведение
		Или (Проведен И РежимЗаписи = РежимЗаписиДокумента.Запись));
	Если ЭтоПроведение Тогда
		ТекстXML = Документы.ЗапросСтатусовВыплатыПособия.ТекстXML(ЭтотОбъект);
	Иначе
		ТекстXML = "";
	КонецЕсли;
	ХранилищеXML = Новый ХранилищеЗначения(ТекстXML, Новый СжатиеДанных(9));
	
	ЗначенияРеквизитовДоЗаписи = ЗначенияРеквизитовДоЗаписи();
	ДополнительныеСвойства.Вставить("ЗначенияРеквизитовДоЗаписи", ЗначенияРеквизитовДоЗаписи);
	
	Если ЗначениеЗаполнено(ДатаОтправки)
		И ЗначениеЗаполнено(ЗначенияРеквизитовДоЗаписи.ФизическоеЛицо)
		И ЗначенияРеквизитовДоЗаписи.ФизическоеЛицо <> ФизическоеЛицо Тогда
		ВызватьИсключение НСтр("ru = 'Недопустимо изменять физическое лицо в отправленном документе.';
								|en = 'You cannot change an individual in the sent document.'");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	РегистрыСведений.РегистрацииЗапросовСтатусовВыплатыПособий.ПередУдалениемДокументаЗапросСтатусовВыплатыПособия(
		Ссылка);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область ПередЗаписью

Функция ЗначенияРеквизитовДоЗаписи()
	ИменаРеквизитов = "Дата, Страхователь, ГоловнаяОрганизация, ФизическоеЛицо, ДатаОтправки, ПометкаУдаления, Проведен";
	ЭтоНовый = ЭтоНовый();
	Если ЭтоНовый Тогда
		Результат = ОбщегоНазначенияБЗК.ЗначенияСвойств(ЭтотОбъект, ИменаРеквизитов);
	Иначе
		Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, ИменаРеквизитов);
	КонецЕсли;
	Результат.Вставить("ЭтоНовый", ЭтоНовый);
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область ФиксацияВторичныхДанныхВДокументах

Функция ОбновитьВторичныеДанные(ПараметрыФиксации = Неопределено) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Модифицирован = Ложь;
	
	Если ОбъектЗафиксирован() Тогда
		Возврат Модифицирован;
	КонецЕсли;
	
	Если ПараметрыФиксации = Неопределено Тогда
		ПараметрыФиксации = Документы.ЗапросСтатусовВыплатыПособия.ПараметрыФиксацииВторичныхДанных();
	КонецЕсли;
	
	Если ЗаполнитьПоОтветуНаЗапрос(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	Если ЗаполнитьГоловнуюОрганизацию() Тогда
		Модифицирован = Истина;
	КонецЕсли;
	Если ЗаполнитьИдентификаторРеестра() Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Возврат Модифицирован;
КонецФункции

Функция ОбъектЗафиксирован() Экспорт
	Возврат Документы.ЗапросСтатусовВыплатыПособия.ОбъектЗафиксирован(ЭтотОбъект);
КонецФункции

Функция ЗаполнитьПоОтветуНаЗапрос(ПараметрыФиксации = Неопределено)
	Если Не ЗначениеЗаполнено(ОтветНаЗапрос) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Шапка.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Шапка.Страхователь КАК Страхователь,
	|	ЕСТЬNULL(Регистрация.РегистрацияНомерРеестра, """") КАК ИдентификаторРеестра
	|ИЗ
	|	Документ.ОтветНаЗапросФССДляРасчетаПособия КАК Шапка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииОтветовНаЗапросыФССДляРасчетаПособий КАК Регистрация
	|		ПО Шапка.Ссылка = Регистрация.ИсходящийДокумент
	|ГДЕ
	|	Шапка.Ссылка = &ОтветНаЗапрос";
	Запрос.УстановитьПараметр("ОтветНаЗапрос", ОтветНаЗапрос);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Если Таблица.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	СтрокаТаблицы = Таблица[0];
	
	Реквизиты = Новый Структура("ФизическоеЛицо, Страхователь");
	Реквизиты.ФизическоеЛицо = СтрокаТаблицы.ФизическоеЛицо;
	Реквизиты.Страхователь = СтрокаТаблицы.Страхователь;
	Если ЗначениеЗаполнено(СтрокаТаблицы.ИдентификаторРеестра) Тогда
		Реквизиты.Вставить("ИдентификаторСтрокиРеестра", СтрокаТаблицы.ИдентификаторРеестра + ":1");
	КонецЕсли;
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(Реквизиты, ЭтотОбъект, ПараметрыФиксации);
КонецФункции

Функция ЗаполнитьГоловнуюОрганизацию()
	Если ФиксацияВторичныхДанныхВДокументах.РеквизитШапкиЗафиксирован(ЭтотОбъект, "ГоловнаяОрганизация") Тогда
		Возврат Ложь;
	КонецЕсли;
	ГоловнаяОрганизацияДоИзменения = ГоловнаяОрганизация;
	Если ЗначениеЗаполнено(Страхователь) Тогда
		ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Страхователь);
	Иначе
		ГоловнаяОрганизация = Неопределено;
	КонецЕсли;
	Возврат ГоловнаяОрганизацияДоИзменения <> ГоловнаяОрганизация;
КонецФункции

Функция ЗаполнитьИдентификаторРеестра()
	Если ФиксацияВторичныхДанныхВДокументах.РеквизитШапкиЗафиксирован(ЭтотОбъект, "ИдентификаторРеестра") Тогда
		Возврат Ложь;
	КонецЕсли;
	ИдентификаторРеестраДоИзменения = ИдентификаторРеестра;
	Если ЗначениеЗаполнено(ИдентификаторСтрокиРеестра) Тогда
		ИдентификаторРеестра = СтроковыеФункцииБЗККлиентСервер.СтрЛев(ИдентификаторСтрокиРеестра, ":");
	Иначе
		ИдентификаторРеестра = "";
	КонецЕсли;
	Возврат ИдентификаторРеестраДоИзменения <> ИдентификаторРеестра;
КонецФункции

#КонецОбласти

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли