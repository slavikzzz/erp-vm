#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ПодготовитьФормуНаСервере();
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	МассивНепроверяемыхРеквизитов.Добавить("Объект");
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидРегистра) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Вид регистра"" не заполнено';
								|en = 'Register kind is not filled in'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.ВидРегистра", , Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Дата) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Дата"" не заполнено';
								|en = '""Date"" is required'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.Дата", , Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.НачалоПериода) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Начало периода"" не заполнено';
								|en = 'Period start is not filled in'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.НачалоПериода", , Отказ);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.КонецПериода) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Конец периода"" не заполнено';
								|en = 'Period end is not filled in'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.КонецПериода", , Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Организация"" не заполнено';
								|en = '""Company"" is required'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , "ПолеОрганизация", Отказ);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ЗаполнитьСвойстваПрисоединенногоФайла();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ПрисоединенныйФайл" И Источник = ПрисоединенныйФайлРегистра Тогда
		ЗаполнитьСвойстваПрисоединенногоФайла();
		УправлениеФормой(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
	
&НаКлиенте
Процедура ПолеОрганизацияОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбщегоНазначенияБПКлиент.ПолеОрганизацияОткрытие(Элемент, СтандартнаяОбработка,
		ПолеОрганизация, СоответствиеОрганизаций);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
	
&НаКлиенте
Процедура ОткрытьПрисоединенныйФайл(Команда)
	
	Если ЗначениеЗаполнено(ПрисоединенныйФайлРегистра) Тогда
		РаботаСФайламиКлиент.ОткрытьФормуФайла(ПрисоединенныйФайлРегистра);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ОбщегоНазначенияБПВызовСервера.ЗаполнитьСписокОрганизаций(Элементы.ПолеОрганизация, СоответствиеОрганизаций);
	
	ОбщегоНазначенияБПКлиентСервер.УстановитьЗначениеПолеОрганизация(
			ПолеОрганизация, Объект.Организация, Объект.ВключатьОбособленныеПодразделения);
	
	ЗаполнитьСвойстваПрисоединенногоФайла();
	
	Заголовок = Объект.Описание;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСвойстваПрисоединенногоФайла()
	
	СвойстваФайла = Документы.РегистрУчета.ПолучитьСвойстваПрисоединенногоФайлаРегистра(Объект.Ссылка, Ложь);
	
	ПрисоединенныйФайлРегистра   = СвойстваФайла.ПрисоединенныйФайл;
	ПодписанЭП                   = СвойстваФайла.ПодписанЭП;
	ФайлРегистраУчетаПрисоединен = СвойстваФайла.ФайлРегистраУчетаПрисоединен;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ДекорацияПодпись.Доступность = Форма.ФайлРегистраУчетаПрисоединен;
	
КонецПроцедуры

#КонецОбласти
