#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ТекущаяОрганизация", "");
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
			И ДанныеЗаполнения.Свойство("Основание")
			И ДанныеЗаполнения.Свойство("ПланСчетов") Тогда
		МетаданныеОснования = Метаданные.НайтиПоТипу(ТипЗнч(ДанныеЗаполнения.Основание));
		Если Метаданные.Документы.Найти(МетаданныеОснования.Имя) <> Неопределено Тогда
			ПланСчетов = ДанныеЗаполнения.ПланСчетов;
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения.Основание,,"Дата,Номер");
			Комментарий = "";
			
			НастройкаФормированияПроводок = МеждународныйУчетСерверПовтИсп.ИспользуемаяНастройкаФормированияПроводок(
				НачалоМесяца(ТекущаяДатаСеанса()), ПланСчетов, Организация);
			
			Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НастройкаФормированияПроводок, "СпособАннулированияПроводок")
				= Перечисления.СпособыАннулированияПроводокМеждународногоУчета.РеверсивнымиПроводками Тогда
				СодержаниеОперации = НСтр("ru = 'Реверс';
											|en = 'Reverse'", ОбщегоНазначения.КодОсновногоЯзыка()) + " " + Строка(ДанныеЗаполнения.Основание);
			Иначе
				СодержаниеОперации = НСтр("ru = 'Сторно';
											|en = 'Storno'", ОбщегоНазначения.КодОсновногоЯзыка()) + " " + Строка(ДанныеЗаполнения.Основание);
			КонецЕсли;
			
			НоваяСтрока = ЭтотОбъект.ЗаполнениеДвижений.Добавить();
			НоваяСтрока.Документ = ДанныеЗаполнения.Основание;
			
			ПроводкиСторно = РегистрыБухгалтерии.Международный.ПроводкиСторно(ДанныеЗаполнения.Основание,
				ДанныеЗаполнения.ПланСчетов, ТекущаяДатаСеанса());
			
			Проводки = Движения.Международный;
			Для Каждого Проводка Из ПроводкиСторно Цикл
				НоваяПроводка = Проводки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяПроводка, Проводка);
				НоваяПроводка.Активность = Ложь;
				Проводки.УстановитьСубконто(НоваяПроводка, Проводка, "Дт");
				Проводки.УстановитьСубконто(НоваяПроводка, Проводка, "Кт");
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Массив") Тогда
		
		ТипыДокументаОснования = Метаданные.НайтиПоТипу(ТипЗнч(Ссылка)).ТабличныеЧасти.ЗаполнениеДвижений.Реквизиты.Документ.Тип;
		
		Для каждого ДокументЗаполнения Из ДанныеЗаполнения Цикл
			
			Если ТипыДокументаОснования.СодержитТип(ТипЗнч(ДокументЗаполнения)) Тогда
				
				ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокументЗаполнения,,"Дата,Номер,Проведен");
				НачалоСодержания = ?(СодержаниеОперации = "", НСтр("ru = 'КОРРЕКТИРОВКА:';
																	|en = 'ADJUSTMENT:'") + " ", СодержаниеОперации + ", ");
				Комментарий = "";
				Содержание = НачалоСодержания + Строка(ДокументЗаполнения);
				НоваяСтрока = ЗаполнениеДвижений.Добавить();
				НоваяСтрока.Документ = ДокументЗаполнения;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПланСчетов) Тогда
		ПланСчетов = Справочники.ПланыСчетовМеждународногоУчета.ПланСчетовПоУмолчанию();
	КонецЕсли;
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если ВводитьПериодПоСтрокам Тогда
		Движения.Международный.ДополнительныеСвойства.Вставить("ВводитьПериодПоСтрокам", ВводитьПериодПоСтрокам);
	КонецЕсли;
	// Заполнение реквизитов регистров Период, Организация
	Для каждого НаборЗаписей Из Движения Цикл
		
		Если НаборЗаписей.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ПустаяТаблица   = НаборЗаписей.ВыгрузитьКолонки(); // ТаблицаЗначений - 
		ЕстьПланСчетов  = ПустаяТаблица.Колонки.Найти("ПланСчетов") <> Неопределено;
		ЕстьОрганизация = ПустаяТаблица.Колонки.Найти("Организация") <> Неопределено;
		ЕстьПериод      = ПустаяТаблица.Колонки.Найти("Период") <> Неопределено;
		
		Если НЕ (ЕстьОрганизация ИЛИ ЕстьПериод ИЛИ ЕстьПланСчетов) Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаДвижений = НаборЗаписей.Выгрузить();
		Если ЕстьПланСчетов Тогда
			ТаблицаДвижений.ЗаполнитьЗначения(ПланСчетов, "ПланСчетов");
		КонецЕсли;
		Если ЕстьОрганизация Тогда
			ТаблицаДвижений.ЗаполнитьЗначения(Организация, "Организация");
		КонецЕсли;
		Если ЕстьПериод И НЕ ВводитьПериодПоСтрокам Тогда
			ТаблицаДвижений.ЗаполнитьЗначения(Дата, "Период");
		КонецЕсли;
		НаборЗаписей.Загрузить(ТаблицаДвижений);
	
	КонецЦикла;
	
	УстановитьАктивностьДвижений(РежимЗаписи);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ТекущаяДатаСеанса());
	Ответственный = Пользователи.ТекущийПользователь();
	
	Набор = ОбъектКопирования.Движения.Международный;
	Набор.Прочитать();
	НаборТекущегоОбъекта = Движения.Международный;
	Если Набор.Количество() > 0 Тогда
		
		Для Каждого ЗаписьНабора Из Набор Цикл
			
			НоваяЗапись = НаборТекущегоОбъекта.Добавить();
			НоваяЗапись.Период = Дата;
			ЗаполнитьЗначенияСвойств(НоваяЗапись, ЗаписьНабора,,"Период,Регистратор,СубконтоДт,СубконтоКт");
			НоваяЗапись.Активность = Ложь;
			
			Для Каждого Субконто Из ЗаписьНабора.СубконтоДт Цикл
				НоваяЗапись.СубконтоДт[Субконто.Ключ] = Субконто.Значение;
			КонецЦикла;
			
			Для Каждого Субконто Из ЗаписьНабора.СубконтоКт Цикл
				НоваяЗапись.СубконтоКт[Субконто.Ключ] = Субконто.Значение;
			КонецЦикла;
			
		КонецЦикла;// по записям набора
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьАктивностьДвижений(РежимЗаписи)
	
	Активность = РежимЗаписи = РежимЗаписиДокумента.Проведение ИЛИ РежимЗаписи = РежимЗаписиДокумента.Запись И Проведен;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого Движение Из Движения Цикл
		
		Если Движение.Записывать = Ложь Тогда // При работе формы набор может быть уже "потроган" (прочитан, модифицирован)
			// Набор никто не трогал
			Движение.Прочитать();
		КонецЕсли;
		
		Для Каждого Строка Из Движение Цикл
			
			Если Строка.Активность = Активность Тогда
				Продолжить;
			КонецЕсли;
			
			Строка.Активность   = Активность;
			Движение.Записывать = Истина; // На случай, если набор был прочитан выше
			
		КонецЦикла;
		
		Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
			Движение.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли