#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	//-- НЕ УТКА
	
	МеханизмыДокумента.Добавить("ОсновныеСредства");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("ОборотныеРегистрыУправленческогоУчета");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	
	КорректировкаСтоимостиИАмортизацииОСЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура:
//     * Ключ - Строка - Имя таблицы.
//     * Значение - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДопПараметры);
		
		ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса, Регистры);
		
		//++ НЕ УТКА
		ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Регистры);
		//-- НЕ УТКА
		
		КорректировкаСтоимостиИАмортизацииОСЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	
	КонецЕсли;
	
	ТаблицыДвижений = ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
	Возврат ТаблицыДвижений;
	
КонецФункции

// Формирует таблицы движений при отложенном проведении.
//
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Содержит временные таблицы, которые используются при формировании движений.
//
// Возвращаемое значение:
//  см. ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения
//
Функция ТаблицыОтложенногоФормированияДвижений(МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ПолучитьДанныеДокумента(Запрос);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализацииПоПериодам(Запрос, Запрос.Параметры,, "ВтСписокДокументов");

	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения();
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 

	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса);
	ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса);
	
	ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Неопределено);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса, Неопределено);
	
	ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса);
	ТекстЗапросаТаблицаПартииПрочихРасходов(ТекстыЗапроса);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(ТекстыЗапроса);
	ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса);
	ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса);
	ТекстЗапросаТаблицаПрочиеДоходы(ТекстыЗапроса);
	
	//++ НЕ УТКА
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Неопределено);
	//-- НЕ УТКА
	
	КорректировкаСтоимостиИАмортизацииОСЛокализация.ТаблицыОтложенногоФормированияДвижений(ТекстыЗапроса);
	
	ТаблицыДвижений = ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса);
	
	Возврат ТаблицыДвижений;
	
КонецФункции

#КонецОбласти

#Область Команды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ИзменениеПараметровОС2_4.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);

КонецПроцедуры

// Добавляет команду создания документа "Корректировка стоимости и амортизации ОС".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//	СтрокаТаблицыЗначений - добавленная команда
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.КорректировкаСтоимостиИАмортизацииОС) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.КорректировкаСтоимостиИАмортизацииОС.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.КорректировкаСтоимостиИАмортизацииОС);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьВнеоборотныеАктивы2_4";
	
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки	 - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.КорректировкаСтоимостиИАмортизацииОС";
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	
	ВЗапросеЕстьИсточник = Истина;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	ИначеЕсли ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	КонецЕсли;
		
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов"
		ИЛИ ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДопПараметры)
	
	ПроведениеДокументов.ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДопПараметры);
	
	СформироватьТаблицуВтСписокДокументов(Запрос);
	ПолучитьДанныеДокумента(Запрос);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Организация КАК Организация
	|	
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента";
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализацииПоПериодам(Запрос, Запрос.Параметры,, "ВтСписокДокументов");
	
КонецПроцедуры

Процедура СформироватьТаблицуВтСписокДокументов(Запрос)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокДокументов.Ссылка КАК Ссылка,
	|	СписокДокументов.Организация КАК Организация,
	|	СписокДокументов.Дата КАК Период
	|
	|ПОМЕСТИТЬ ВтСписокДокументов
	|
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС КАК СписокДокументов
	|
	|ГДЕ
	|	СписокДокументов.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьДанныеДокумента(Запрос)
	
	СписокЗапросов = Новый Массив;
	
	#Область ДанныеДокументаРеквизиты
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.АналитикаДоходов КАК АналитикаДоходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	ДанныеДокумента.АналитикаАктивовПассивовРасходов КАК АналитикаАктивовПассивовРасходов,
	|	ДанныеДокумента.АналитикаАктивовПассивовДоходов КАК АналитикаАктивовПассивовДоходов,
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов КАК НастройкаСчетовУчетаРасходов,
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов КАК НастройкаСчетовУчетаДоходов,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.СобытиеОС КАК СобытиеОС,
	|	ДанныеДокумента.СтатьяДоходов КАК СтатьяДоходов,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	ДанныеДокумента.ВидИмущества КАК ВидИмущества,
	|	ДанныеДокумента.КорректировкаСПрошлойДаты КАК КорректировкаСПрошлойДаты,
	|	ДанныеДокумента.НачалоПериода КАК НачалоПериода,
	|	ДанныеДокумента.КорректировкаСтоимости КАК КорректировкаСтоимости,
	|	ДанныеДокумента.КорректировкаПервоначальнойСтоимости КАК КорректировкаПервоначальнойСтоимости,
	|	ДанныеДокумента.КорректировкаАмортизации КАК КорректировкаАмортизации,
	|	ДанныеДокумента.КорректировкаПараметровРасчетаАмортизации КАК КорректировкаПараметровРасчетаАмортизации,
	|	ДанныеДокумента.КорректировкаВСвязиСИзменениемУчетнойПолитики КАК КорректировкаВСвязиСИзменениемУчетнойПолитики,
	|	НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) КАК НачПериодаДокумента,
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) КАК КонПериодаДокумента,
	|	ДанныеДокумента.СобытиеОС.ВидСобытияОС КАК ВидСобытияОС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаСтоимостиИАмортизацииОС) КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ДанныеДокументаРеквизиты
	|
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (
	|		ВЫБРАТЬ
	|			ВтСписокДокументов.Ссылка
	|		ИЗ
	|			ВтСписокДокументов КАК ВтСписокДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ДанныеДокументаТаблицаОС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаДокумента.ОсновноеСредство КАК ОбъектУчета,
	|
	|	ТаблицаДокумента.СтоимостьУУ КАК СтоимостьУУ,
	|	ТаблицаДокумента.СтоимостьБУ КАК СтоимостьБУ,
	|	ТаблицаДокумента.СтоимостьНУ КАК СтоимостьНУ,
	|	ТаблицаДокумента.СтоимостьПР КАК СтоимостьПР,
	|	ТаблицаДокумента.СтоимостьЦФ КАК СтоимостьЦФ,
	|
	|	ТаблицаДокумента.АмортизацияБУ КАК АмортизацияБУ,
	|	ТаблицаДокумента.АмортизацияНУ КАК АмортизацияНУ,
	|	ТаблицаДокумента.АмортизацияПР КАК АмортизацияПР,
	|	ТаблицаДокумента.АмортизацияУУ КАК АмортизацияУУ,
	|	ТаблицаДокумента.АмортизацияЦФ КАК АмортизацияЦФ,
	|
	|	ТаблицаДокумента.ЗалоговаяСтоимость КАК ЗалоговаяСтоимость,
	|	ТаблицаДокумента.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ТаблицаДокумента.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ТаблицаДокумента.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ,
	|	ТаблицаДокумента.СтоимостьДляВычисленияАмортизацииБУ КАК СтоимостьДляВычисленияАмортизацииБУ,
	|	ТаблицаДокумента.СтоимостьДляВычисленияАмортизацииУУ КАК СтоимостьДляВычисленияАмортизацииУУ,
	|	ТаблицаДокумента.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации
	|
	|ПОМЕСТИТЬ ДанныеДокументаТаблицаОС
	|
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС.ОС КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (
	|		ВЫБРАТЬ
	|			ВтСписокДокументов.Ссылка
	|		ИЗ
	|			ВтСписокДокументов КАК ВтСписокДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ДанныеДокументаТаблицаПараметрыЗаПериодБУ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Дата КАК Дата,
	|
	|	ТаблицаДокумента.СтоимостьБУ КАК СтоимостьБУ,
	|	ТаблицаДокумента.СтоимостьЦФ КАК СтоимостьЦФ,
	|
	|	ТаблицаДокумента.АмортизацияБУ КАК АмортизацияБУ,
	|	ТаблицаДокумента.АмортизацияЦФ КАК АмортизацияЦФ,
	|
	|	ТаблицаДокумента.АмортизацияРеглИзменение КАК АмортизацияРеглИзменение,
	|	ТаблицаДокумента.АмортизацияЦФИзменение КАК АмортизацияЦФИзменение
	|
	|ПОМЕСТИТЬ ДанныеДокументаТаблицаПараметрыЗаПериодБУ
	|
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС.ПараметрыЗаПериодБУ КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (
	|		ВЫБРАТЬ
	|			ВтСписокДокументов.Ссылка
	|		ИЗ
	|			ВтСписокДокументов КАК ВтСписокДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	Запрос.Текст = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.КорректировкаСтоимостиИАмортизацииОС"));
	ЗначенияПараметровПроведения.Вставить("НазваниеДокумента", НСтр("ru = 'Корректировка стоимости и амортизации ОС';
																	|en = 'Adjust fixed asset cost and depreciation'"));
	ЗначенияПараметровПроведения.Вставить("ВедетсяРегламентированныйУчетВНА", ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА());
	
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КорректировкаСтоимостиИАмортизацииОС);
	
	ЗначенияПараметровПроведения.Вставить("НастройкаХозяйственнойОперации", Справочники.НастройкиХозяйственныхОпераций.КорректировкаСтоимостиИАмортизацииОС);
	ЗначенияПараметровПроведения.Вставить("СтатьяАП_ОС", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства);
	ЗначенияПараметровПроведения.Вставить("СтатьяАП_ПрибыльУбыток", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки);
	
	ЗначенияПараметровПроведения.Вставить("ХО_УвеличениеСтоимости", Перечисления.ХозяйственныеОперации.УвеличениеСтоимостиОС);
	ЗначенияПараметровПроведения.Вставить("ХО_УменьшениеСтоимости", Перечисления.ХозяйственныеОперации.УменьшениеСтоимостиОС);
	ЗначенияПараметровПроведения.Вставить("ХО_УменьшениеСтоимостиЦФ", Перечисления.ХозяйственныеОперации.УменьшениеСтоимостиЦФОС);
	ЗначенияПараметровПроведения.Вставить("ХО_УвеличениеАмортизации", Перечисления.ХозяйственныеОперации.УвеличениеНакопленнойАмортизацииОС);
	ЗначенияПараметровПроведения.Вставить("ХО_УвеличениеАмортизацииЦФ", Перечисления.ХозяйственныеОперации.УвеличениеНакопленнойАмортизацииЦФОС);
	ЗначенияПараметровПроведения.Вставить("ХО_УменьшениеАмортизации", Перечисления.ХозяйственныеОперации.УменьшениеНакопленнойАмортизацииОС);
	ЗначенияПараметровПроведения.Вставить("ХО_ИзменениеДоходовЦФ", Перечисления.ХозяйственныеОперации.ИзменениеДоходовБудущихПериодовОтЦелевогоФинансированияНМА);
	ЗначенияПараметровПроведения.Вставить("НастройкаХО_УвеличениеСтоимости", Справочники.НастройкиХозяйственныхОпераций.УвеличениеСтоимостиОС);
	ЗначенияПараметровПроведения.Вставить("НастройкаХО_УменьшениеСтоимости", Справочники.НастройкиХозяйственныхОпераций.УменьшениеСтоимостиОС);
	ЗначенияПараметровПроведения.Вставить("НастройкаХО_УменьшениеСтоимостиЦФ", Справочники.НастройкиХозяйственныхОпераций.УменьшениеСтоимостиЦФОС);
	ЗначенияПараметровПроведения.Вставить("НастройкаХО_УменьшениеНакопленнойАмортизации", Справочники.НастройкиХозяйственныхОпераций.УменьшениеНакопленнойАмортизацииОС);
	ЗначенияПараметровПроведения.Вставить("НастройкаХО_УвеличениеНакопленнойАмортизации", Справочники.НастройкиХозяйственныхОпераций.УвеличениеНакопленнойАмортизацииОС);
	ЗначенияПараметровПроведения.Вставить("НастройкаХО_УвеличениеНакопленнойАмортизацииЦФ", Справочники.НастройкиХозяйственныхОпераций.УвеличениеНакопленнойАмортизацииЦФОС);
	ЗначенияПараметровПроведения.Вставить("ИдентификаторНеиспользуемойФинЗаписи", ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());
	
	Если Реквизиты <> Неопределено Тогда
		
		ЗначенияПараметровПроведения.Вставить("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
		
	КонецЕсли; 
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	ДанныеДокумента.Дата                    КАК ДатаДокументаИБ,
	|	ДанныеДокумента.Номер                   КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение           КАК Подразделение,
	|	ДанныеДокумента.Ответственный           КАК Ответственный,
	|	ДанныеДокумента.Комментарий             КАК Комментарий,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления         КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	ДанныеДокумента.Дата                    КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	ЛОЖЬ                                    КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО                            КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО                            КАК ИсправляемыйДокумент,
	|	ДанныеДокумента.Дата                    КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет
	|
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоОС";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0)    КАК НомерЗаписи,
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	ДанныеДокумента.Дата                    КАК Дата,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.Подразделение           КАК Подразделение,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	ДанныеДокумента.ОтражатьВРеглУчете      КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете       КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.СобытиеОС               КАК СобытиеОС,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство,
	|	ДанныеДокумента.КорректировкаСПрошлойДаты КАК ЭтоИсправление,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КорректировкаСПрошлойДаты
	|			ТОГДА ДанныеДокумента.НачалоПериода
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ КАК НачалоПериодаИсправления,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КорректировкаСПрошлойДаты
	|			ТОГДА КОНЕЦПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ КАК КонецПериодаИсправления
	|
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС.ОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса)

	ИмяРегистра = "СтоимостьОС";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПараметрыУчетаОС(ТекстыЗапроса,, "втСведенияОбУчете");
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтАрендованныеОС(ТекстыЗапроса);

	ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса);

	СписокЗапросовОбъединение = Новый Массив;
	
	#Область УвеличениеСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                      КАК Регистратор,
	|	ДанныеДокумента.Период                      КАК Период,
	|	&ХО_УвеличениеСтоимости                     КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация                 КАК Организация,
	|	ВтУвеличениеСтоимости.ОсновноеСредство      КАК ОсновноеСредство,
	|	ДанныеДокумента.Подразделение               КАК Подразделение,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК ГруппаФинансовогоУчета,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	СведенияОбУчете.Арендатор                   КАК Арендатор,
	|
	|	ВтУвеличениеСтоимости.Стоимость             КАК Стоимость,
	|	ВтУвеличениеСтоимости.СтоимостьРегл         КАК СтоимостьРегл,
	|	ВтУвеличениеСтоимости.СтоимостьНУ           КАК СтоимостьНУ,
	|	ВтУвеличениеСтоимости.СтоимостьПР           КАК СтоимостьПР,
	|
	|	ВтУвеличениеСтоимости.СтоимостьРегл
	|		- ВтУвеличениеСтоимости.СтоимостьНУ
	|		- ВтУвеличениеСтоимости.СтоимостьПР     КАК СтоимостьВР,
	|
	|	ВтУвеличениеСтоимости.СтоимостьЦФ           КАК СтоимостьЦФ,
	|	ВтУвеличениеСтоимости.СтоимостьПРЦФ         КАК СтоимостьПРЦФ,
	|	ВтУвеличениеСтоимости.ЗалоговаяСтоимость    КАК ЗалоговаяСтоимость,
	|
	|	ДанныеДокумента.Организация                 КАК КорОрганизация,
	|	ДанныеДокумента.Подразделение               КАК КорПодразделение,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Арендованное)
	|			ТОГДА втАрендованныеОС.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                       КАК КорКонтрагент,
	|
	|	СведенияОбУчете.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходов              КАК КорСтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов           КАК КорАналитикаРасходов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК КорГруппаФинансовогоУчета,
	|	ДанныеДокумента.ОтражатьВРеглУчете          КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете           КАК ОтражатьВУпрУчете,
	|
	|	ВтУвеличениеСтоимости.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	ВтУвеличениеСтоимости.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеСтоимости КАК ВтУвеличениеСтоимости
	|		ПО ВтУвеличениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеСтоимости.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАрендованныеОС КАК втАрендованныеОС
	|		ПО втАрендованныеОС.Ссылка = ВтУвеличениеСтоимости.Ссылка
	|			И втАрендованныеОС.ОсновноеСредство = ВтУвеличениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	(ВтУвеличениеСтоимости.Стоимость <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьРегл <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьНУ <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьПР <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьЦФ <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьПРЦФ <> 0
	|		ИЛИ ВтУвеличениеСтоимости.ЗалоговаяСтоимость <> 0)
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УменьшениеСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                      КАК Регистратор,
	|	ДанныеДокумента.Период                      КАК Период,
	|	&ХО_УменьшениеСтоимости                     КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация                 КАК Организация,
	|	ВтУменьшениеСтоимости.ОсновноеСредство      КАК ОсновноеСредство,
	|	ДанныеДокумента.Подразделение               КАК Подразделение,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК ГруппаФинансовогоУчета,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	СведенияОбУчете.Арендатор                   КАК Арендатор,
	|
	|	ВтУменьшениеСтоимости.Стоимость             КАК Стоимость,
	|	ВтУменьшениеСтоимости.СтоимостьРегл         КАК СтоимостьРегл,
	|	ВтУменьшениеСтоимости.СтоимостьНУ           КАК СтоимостьНУ,
	|	ВтУменьшениеСтоимости.СтоимостьПР           КАК СтоимостьПР,
	|
	|	ВтУменьшениеСтоимости.СтоимостьРегл
	|		- ВтУменьшениеСтоимости.СтоимостьНУ
	|		- ВтУменьшениеСтоимости.СтоимостьПР     КАК СтоимостьВР,
	|
	|	0 КАК СтоимостьЦФ,
	|	0 КАК СтоимостьПРЦФ,
	|
	|	ВтУменьшениеСтоимости.ЗалоговаяСтоимость    КАК ЗалоговаяСтоимость,
	|
	|	ДанныеДокумента.Организация                 КАК КорОрганизация,
	|	ДанныеДокумента.Подразделение               КАК КорПодразделение,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Арендованное)
	|			ТОГДА втАрендованныеОС.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                       КАК КорКонтрагент,
	|
	|	СведенияОбУчете.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходов              КАК КорСтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов           КАК КорАналитикаРасходов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК КорГруппаФинансовогоУчета,
	|	ДанныеДокумента.ОтражатьВРеглУчете          КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете           КАК ОтражатьВУпрУчете,
	|
	|	ВтУменьшениеСтоимости.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	ВтУменьшениеСтоимости.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУменьшениеСтоимости КАК ВтУменьшениеСтоимости
	|		ПО ВтУменьшениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУменьшениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУменьшениеСтоимости.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАрендованныеОС КАК втАрендованныеОС
	|		ПО втАрендованныеОС.Ссылка = ВтУменьшениеСтоимости.Ссылка
	|			И втАрендованныеОС.ОсновноеСредство = ВтУменьшениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	(ВтУменьшениеСтоимости.Стоимость <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьРегл <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьНУ <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьПР <> 0
	|		ИЛИ ВтУменьшениеСтоимости.ЗалоговаяСтоимость <> 0)
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УменьшениеСтоимостиЦФ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                      КАК Регистратор,
	|	ДанныеДокумента.Период                      КАК Период,
	|	&ХО_УменьшениеСтоимостиЦФ                   КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация                 КАК Организация,
	|	ВтУменьшениеСтоимости.ОсновноеСредство      КАК ОсновноеСредство,
	|	ДанныеДокумента.Подразделение               КАК Подразделение,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК ГруппаФинансовогоУчета,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	СведенияОбУчете.Арендатор                   КАК Арендатор,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьНУ,
	|	0 КАК СтоимостьПР,
	|	0 КАК СтоимостьВР,
	|
	|	ВтУменьшениеСтоимости.СтоимостьЦФ           КАК СтоимостьЦФ,
	|	ВтУменьшениеСтоимости.СтоимостьПРЦФ         КАК СтоимостьПРЦФ,
	|
	|	0                                           КАК ЗалоговаяСтоимость,
	|
	|	ДанныеДокумента.Организация                 КАК КорОрганизация,
	|	ДанныеДокумента.Подразделение               КАК КорПодразделение,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Арендованное)
	|			ТОГДА втАрендованныеОС.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                       КАК КорКонтрагент,
	|
	|	СведенияОбУчете.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходов              КАК КорСтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов           КАК КорАналитикаРасходов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК КорГруппаФинансовогоУчета,
	|	ДанныеДокумента.ОтражатьВРеглУчете          КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете           КАК ОтражатьВУпрУчете,
	|
	|	ВтУменьшениеСтоимости.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_УменьшениеСтоимостиЦФ КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУменьшениеСтоимости КАК ВтУменьшениеСтоимости
	|		ПО ВтУменьшениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУменьшениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУменьшениеСтоимости.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАрендованныеОС КАК втАрендованныеОС
	|		ПО втАрендованныеОС.Ссылка = ВтУменьшениеСтоимости.Ссылка
	|			И втАрендованныеОС.ОсновноеСредство = ВтУменьшениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	(ВтУменьшениеСтоимости.СтоимостьЦФ <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьПРЦФ <> 0)
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса)

	ИмяРегистра = "АмортизацияОС";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПараметрыУчетаОС(ТекстыЗапроса,, "втСведенияОбУчете");
	
	ТекстЗапросаВтУвеличениеАмортизации(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеАмортизации(ТекстыЗапроса);
	
	СписокЗапросовОбъединение = Новый Массив;
	
	#Область УвеличениеАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                      КАК Регистратор,
	|	ДанныеДокумента.Период                      КАК Период,
	|	&ХО_УвеличениеАмортизации                   КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация                 КАК Организация,
	|	ВтУвеличениеАмортизации.ОсновноеСредство    КАК ОсновноеСредство,
	|	ДанныеДокумента.Подразделение               КАК Подразделение,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК ГруппаФинансовогоУчета,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|
	|	ВтУвеличениеАмортизации.Амортизация         КАК Амортизация,
	|	ВтУвеличениеАмортизации.АмортизацияРегл     КАК АмортизацияРегл,
	|	ВтУвеличениеАмортизации.АмортизацияНУ       КАК АмортизацияНУ,
	|	ВтУвеличениеАмортизации.АмортизацияПР       КАК АмортизацияПР,
	|
	|	ВтУвеличениеАмортизации.АмортизацияРегл
	|		- ВтУвеличениеАмортизации.АмортизацияНУ
	|		- ВтУвеличениеАмортизации.АмортизацияПР КАК АмортизацияВР,
	|
	|	0 КАК АмортизацияЦФ,
	|	0 КАК АмортизацияПРЦФ,
	|
	|	ДанныеДокумента.Организация                 КАК КорОрганизация,
	|	ДанныеДокумента.Подразделение               КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходов              КАК КорСтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов           КАК КорАналитикаРасходов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК КорГруппаФинансовогоУчета,
	|	ДанныеДокумента.ОтражатьВРеглУчете          КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете           КАК ОтражатьВУпрУчете,
	|
	|	ВтУвеличениеАмортизации.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	ВтУвеличениеАмортизации.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеАмортизации КАК ВтУвеличениеАмортизации
	|		ПО ВтУвеличениеАмортизации.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеАмортизации.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеАмортизации.ОсновноеСредство
	|
	|ГДЕ
	|	ВтУвеличениеАмортизации.Амортизация <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияРегл <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияНУ <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияПР <> 0
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УвеличениеАмортизацииЦФ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                      КАК Регистратор,
	|	ДанныеДокумента.Период                      КАК Период,
	|	&ХО_УвеличениеАмортизацииЦФ                 КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация                 КАК Организация,
	|	ВтУвеличениеАмортизации.ОсновноеСредство    КАК ОсновноеСредство,
	|	ДанныеДокумента.Подразделение               КАК Подразделение,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК ГруппаФинансовогоУчета,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|
	|	0 КАК Амортизация,
	|	0 КАК АмортизацияРегл,
	|	0 КАК АмортизацияНУ,
	|	0 КАК АмортизацияПР,
	|	0 КАК АмортизацияВР,
	|
	|	ВтУвеличениеАмортизации.АмортизацияЦФ       КАК АмортизацияЦФ,
	|	ВтУвеличениеАмортизации.АмортизацияПРЦФ     КАК АмортизацияПРЦФ,
	|
	|	ДанныеДокумента.Организация                 КАК КорОрганизация,
	|	ДанныеДокумента.Подразделение               КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходов              КАК КорСтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов           КАК КорАналитикаРасходов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК КорГруппаФинансовогоУчета,
	|	ДанныеДокумента.ОтражатьВРеглУчете          КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете           КАК ОтражатьВУпрУчете,
	|
	|	ВтУвеличениеАмортизации.ИдентификаторФинЗаписи   КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_УвеличениеНакопленнойАмортизацииЦФ  КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеАмортизации КАК ВтУвеличениеАмортизации
	|		ПО ВтУвеличениеАмортизации.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеАмортизации.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеАмортизации.ОсновноеСредство
	|
	|ГДЕ
	|	ВтУвеличениеАмортизации.АмортизацияЦФ <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияПРЦФ <> 0
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область УменьшениеАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                      КАК Регистратор,
	|	ДанныеДокумента.Период                      КАК Период,
	|	&ХО_УменьшениеАмортизации                   КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация                 КАК Организация,
	|	ВтУменьшениеАмортизации.ОсновноеСредство    КАК ОсновноеСредство,
	|	ДанныеДокумента.Подразделение               КАК Подразделение,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК ГруппаФинансовогоУчета,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|
	|	ВтУменьшениеАмортизации.Амортизация         КАК Амортизация,
	|	ВтУменьшениеАмортизации.АмортизацияРегл     КАК АмортизацияРегл,
	|	ВтУменьшениеАмортизации.АмортизацияНУ       КАК АмортизацияНУ,
	|	ВтУменьшениеАмортизации.АмортизацияПР       КАК АмортизацияПР,
	|
	|	ВтУменьшениеАмортизации.АмортизацияРегл
	|		- ВтУменьшениеАмортизации.АмортизацияНУ
	|		- ВтУменьшениеАмортизации.АмортизацияПР КАК АмортизацияВР,
	|
	|	ВтУменьшениеАмортизации.АмортизацияЦФ       КАК АмортизацияЦФ,
	|	ВтУменьшениеАмортизации.АмортизацияПРЦФ     КАК АмортизацияПРЦФ,
	|
	|	ДанныеДокумента.Организация                 КАК КорОрганизация,
	|	ДанныеДокумента.Подразделение               КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК КорАналитикаРасходов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК КорГруппаФинансовогоУчета,
	|	ДанныеДокумента.ОтражатьВРеглУчете          КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете           КАК ОтражатьВУпрУчете,
	|
	|	ВтУменьшениеАмортизации.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	ВтУменьшениеАмортизации.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУменьшениеАмортизации КАК ВтУменьшениеАмортизации
	|		ПО ВтУменьшениеАмортизации.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУменьшениеАмортизации.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУменьшениеАмортизации.ОсновноеСредство
	|
	|ГДЕ
	|	ВтУменьшениеАмортизации.Амортизация <> 0
	|		ИЛИ ВтУменьшениеАмортизации.АмортизацияРегл <> 0
	|		ИЛИ ВтУменьшениеАмортизации.АмортизацияНУ <> 0
	|		ИЛИ ВтУменьшениеАмортизации.АмортизацияПР <> 0
	|		ИЛИ ВтУменьшениеАмортизации.АмортизацияЦФ <> 0
	|		ИЛИ ВтУменьшениеАмортизации.АмортизацияПРЦФ <> 0
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса, Регистры = Неопределено)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ДопПоля = "СуммаНДД,Регистратор";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса, ДопПоля);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы(ДопПоля, Истина);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(ТекстыЗапроса, Регистры = Неопределено)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ДопПоля = "Регистратор";

	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(ТекстыЗапроса, ДопПоля);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов(ДопПоля);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПрочиеАктивыПассивы(ТекстыЗапроса)

	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПараметрыУчетаОС(ТекстыЗапроса,, "втСведенияОбУчете");
	
	ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУвеличениеАмортизации(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеАмортизации(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                    КАК Регистратор,
	|	ДанныеДокумента.Период                    КАК Период,
	|	&ХО_УменьшениеСтоимости                   КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация               КАК Организация,
	|	ДанныеДокумента.Подразделение             КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходов            КАК Статья,
	|	ДанныеДокумента.АналитикаАктивовПассивовРасходов КАК Аналитика,
	|	ВтУменьшениеСтоимости.Стоимость           КАК Сумма
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУменьшениеСтоимости КАК ВтУменьшениеСтоимости
	|		ПО ВтУменьшениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУменьшениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУменьшениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И ДанныеДокумента.ОтражатьВУпрУчете
	|	И ВтУменьшениеСтоимости.Стоимость <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                    КАК Регистратор,
	|	ДанныеДокумента.Период                    КАК Период,
	|	&ХО_УвеличениеСтоимости                   КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация               КАК Организация,
	|	ДанныеДокумента.Подразделение             КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяДоходов             КАК Статья,
	|	ДанныеДокумента.АналитикаАктивовПассивовДоходов КАК Аналитика,
	|	ВтУвеличениеСтоимости.Стоимость           КАК Сумма
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеСтоимости КАК ВтУвеличениеСтоимости
	|		ПО ВтУвеличениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И ДанныеДокумента.ОтражатьВУпрУчете
	|	И ВтУвеличениеСтоимости.Стоимость <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                    КАК Регистратор,
	|	ДанныеДокумента.Период                    КАК Период,
	|	&ХО_УвеличениеАмортизации                 КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация               КАК Организация,
	|	ДанныеДокумента.Подразделение             КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходов            КАК Статья,
	|	ДанныеДокумента.АналитикаАктивовПассивовРасходов КАК Аналитика,
	|	ВтУвеличениеАмортизации.Амортизация       КАК Сумма
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеАмортизации КАК ВтУвеличениеАмортизации
	|		ПО ВтУвеличениеАмортизации.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеАмортизации.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеАмортизации.ОсновноеСредство
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И ДанныеДокумента.ОтражатьВУпрУчете
	|	И ВтУвеличениеАмортизации.Амортизация <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                    КАК Регистратор,
	|	ДанныеДокумента.Период                    КАК Период,
	|	&ХО_УменьшениеАмортизации                 КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация               КАК Организация,
	|	ДанныеДокумента.Подразделение             КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяДоходов             КАК Статья,
	|	ДанныеДокумента.АналитикаАктивовПассивовДоходов КАК Аналитика,
	|	ВтУменьшениеАмортизации.Амортизация       КАК Сумма
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУменьшениеАмортизации КАК ВтУменьшениеАмортизации
	|		ПО ВтУменьшениеАмортизации.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУменьшениеАмортизации.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУменьшениеАмортизации.ОсновноеСредство
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И ДанныеДокумента.ОтражатьВУпрУчете
	|	И ВтУменьшениеАмортизации.Амортизация <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса)

	ИмяРегистра = "ДвиженияПоПрочимАктивамПассивам";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПараметрыУчетаОС(ТекстыЗапроса,, "втСведенияОбУчете");
	
	ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУвеличениеАмортизации(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеАмортизации(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                  КАК Регистратор,
	|	ДанныеДокумента.Период                  КАК Период,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.Подразделение           КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходов          КАК Статья,
	|	ДанныеДокумента.АналитикаАктивовПассивовРасходов КАК Аналитика,
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ВтУменьшениеСтоимости.СтоимостьРегл
	|		+ ВтУменьшениеСтоимости.СтоимостьЦФ   КАК СуммаРегл,
	|
	|	ВтУменьшениеСтоимости.СтоимостьПР
	|		+ ВтУменьшениеСтоимости.СтоимостьПРЦФ КАК ПостояннаяРазница,
	|
	|	ВтУменьшениеСтоимости.СтоимостьРегл
	|		+ ВтУменьшениеСтоимости.СтоимостьЦФ
	|		- ВтУменьшениеСтоимости.СтоимостьНУ
	|		- ВтУменьшениеСтоимости.СтоимостьПР
	|		- ВтУменьшениеСтоимости.СтоимостьПРЦФ КАК ВременнаяРазница,
	|
	|	ВтУменьшениеСтоимости.Стоимость КАК СуммаУпр,
	|	ВтУменьшениеСтоимости.Стоимость КАК СуммаСНДС,
	|	ВтУменьшениеСтоимости.Стоимость КАК СуммаБезНДС,
	|
	|	ВтУменьшениеСтоимости.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтУменьшениеСтоимости.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУменьшениеСтоимости КАК ВтУменьшениеСтоимости
	|		ПО ВтУменьшениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУменьшениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУменьшениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И (ВтУменьшениеСтоимости.Стоимость <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьРегл <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьЦФ <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьНУ <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьПР <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьПРЦФ <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                  КАК Регистратор,
	|	ДанныеДокумента.Период                  КАК Период,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.Подразделение           КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяДоходов           КАК Статья,
	|	ДанныеДокумента.АналитикаАктивовПассивовДоходов КАК Аналитика,
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	ВтУвеличениеСтоимости.СтоимостьРегл
	|		+ ВтУвеличениеСтоимости.СтоимостьЦФ   КАК СуммаРегл,
	|
	|	ВтУвеличениеСтоимости.СтоимостьПР
	|		+ ВтУвеличениеСтоимости.СтоимостьПРЦФ КАК ПостояннаяРазница,
	|
	|	ВтУвеличениеСтоимости.СтоимостьРегл
	|		+ ВтУвеличениеСтоимости.СтоимостьЦФ
	|		- ВтУвеличениеСтоимости.СтоимостьНУ
	|		- ВтУвеличениеСтоимости.СтоимостьПР
	|		- ВтУвеличениеСтоимости.СтоимостьПРЦФ КАК ВременнаяРазница,
	|
	|	ВтУвеличениеСтоимости.Стоимость КАК СуммаУпр,
	|	ВтУвеличениеСтоимости.Стоимость КАК СуммаСНДС,
	|	ВтУвеличениеСтоимости.Стоимость КАК СуммаБезНДС,
	|
	|	ВтУвеличениеСтоимости.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтУвеличениеСтоимости.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеСтоимости КАК ВтУвеличениеСтоимости
	|		ПО ВтУвеличениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И (ВтУвеличениеСтоимости.Стоимость <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьРегл <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьЦФ <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьНУ <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьПР <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьПРЦФ <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                  КАК Регистратор,
	|	ДанныеДокумента.Период                  КАК Период,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.Подразделение           КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходов          КАК Статья,
	|	ДанныеДокумента.АналитикаАктивовПассивовРасходов КАК Аналитика,
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ВтУвеличениеАмортизации.АмортизацияРегл
	|		+ ВтУвеличениеАмортизации.АмортизацияЦФ КАК СуммаРегл,
	|
	|	ВтУвеличениеАмортизации.АмортизацияПР
	|		+ ВтУвеличениеАмортизации.АмортизацияПРЦФ КАК ПостояннаяРазница,
	|
	|	ВтУвеличениеАмортизации.АмортизацияРегл
	|		+ ВтУвеличениеАмортизации.АмортизацияЦФ
	|		- ВтУвеличениеАмортизации.АмортизацияНУ
	|		- ВтУвеличениеАмортизации.АмортизацияПР
	|		- ВтУвеличениеАмортизации.АмортизацияПРЦФ КАК ВременнаяРазница,
	|
	|	ВтУвеличениеАмортизации.Амортизация КАК СуммаУпр,
	|	ВтУвеличениеАмортизации.Амортизация КАК СуммаСНДС,
	|	ВтУвеличениеАмортизации.Амортизация КАК СуммаБезНДС,
	|
	|	ВтУвеличениеАмортизации.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтУвеличениеАмортизации.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеАмортизации КАК ВтУвеличениеАмортизации
	|		ПО ВтУвеличениеАмортизации.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеАмортизации.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеАмортизации.ОсновноеСредство
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И (ВтУвеличениеАмортизации.Амортизация <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияРегл <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияЦФ <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияНУ <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияПР <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияПРЦФ <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                  КАК Регистратор,
	|	ДанныеДокумента.Период                  КАК Период,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.Подразделение           КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяДоходов           КАК Статья,
	|	ДанныеДокумента.АналитикаАктивовПассивовДоходов КАК Аналитика,
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	ВтУменьшениеАмортизации.АмортизацияРегл
	|		+ ВтУменьшениеАмортизации.АмортизацияЦФ   КАК СуммаРегл,
	|
	|	ВтУменьшениеАмортизации.АмортизацияПР
	|		+ ВтУменьшениеАмортизации.АмортизацияПРЦФ КАК ПостояннаяРазница,
	|
	|	ВтУменьшениеАмортизации.АмортизацияРегл
	|		+ ВтУменьшениеАмортизации.АмортизацияЦФ
	|		- ВтУменьшениеАмортизации.АмортизацияНУ
	|		- ВтУменьшениеАмортизации.АмортизацияПР
	|		- ВтУменьшениеАмортизации.АмортизацияПРЦФ КАК ВременнаяРазница,
	|
	|	ВтУменьшениеАмортизации.Амортизация КАК СуммаУпр,
	|	ВтУменьшениеАмортизации.Амортизация КАК СуммаСНДС,
	|	ВтУменьшениеАмортизации.Амортизация КАК СуммаБезНДС,
	|
	|	ВтУменьшениеАмортизации.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтУменьшениеАмортизации.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУменьшениеАмортизации КАК ВтУменьшениеАмортизации
	|		ПО ВтУменьшениеАмортизации.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУменьшениеАмортизации.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУменьшениеАмортизации.ОсновноеСредство
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И (ВтУменьшениеАмортизации.Амортизация <> 0
	|		ИЛИ ВтУменьшениеАмортизации.АмортизацияРегл <> 0
	|		ИЛИ ВтУменьшениеАмортизации.АмортизацияЦФ <> 0
	|		ИЛИ ВтУменьшениеАмортизации.АмортизацияНУ <> 0
	|		ИЛИ ВтУменьшениеАмортизации.АмортизацияПР <> 0
	|		ИЛИ ВтУменьшениеАмортизации.АмортизацияПРЦФ <> 0)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса)

	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПараметрыУчетаОС(ТекстыЗапроса,, "втСведенияОбУчете");
	
	ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУвеличениеАмортизации(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеАмортизации(ТекстыЗапроса);
	
	ТекстыЗапросаОбъединение = Новый Массив;
	
	#Область УвеличениеСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                     КАК Регистратор,
	|	ДанныеДокумента.Период                     КАК Период,
	|	&ХО_УвеличениеСтоимости                    КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация                КАК Организация,
	|
	|	ДанныеДокумента.Подразделение              КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	&СтатьяАП_ПрибыльУбыток                    КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	ВтУвеличениеСтоимости.ОсновноеСредство     КАК АналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК ГруппаФинансовогоУчета,
	|
	|	ДанныеДокумента.Подразделение              КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	ВтУвеличениеСтоимости.ОсновноеСредство     КАК КорАналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК КорГруппаФинансовогоУчета,
	|
	|	ВтУвеличениеСтоимости.Стоимость            КАК Сумма,
	|	ВтУвеличениеСтоимости.Стоимость            КАК СуммаУпр,
	|	ВтУвеличениеСтоимости.СтоимостьРегл        КАК СуммаРегл
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеСтоимости КАК ВтУвеличениеСтоимости
	|		ПО ВтУвеличениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	(ВтУвеличениеСтоимости.Стоимость <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьРегл <> 0)
	|";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УменьшениеСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                     КАК Регистратор,
	|	ДанныеДокумента.Период                     КАК Период,
	|	&ХО_УменьшениеСтоимости                    КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация                КАК Организация,
	|
	|	ДанныеДокумента.Подразделение              КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	Неопределено                               КАК АналитикаРасходов,
	|	ВтУменьшениеСтоимости.ОсновноеСредство     КАК АналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК ГруппаФинансовогоУчета,
	|
	|	ДанныеДокумента.Подразделение              КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходов             КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	ДанныеДокумента.АналитикаРасходов          КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК КорГруппаФинансовогоУчета,
	|
	|	ВтУменьшениеСтоимости.Стоимость            КАК Сумма,
	|	ВтУменьшениеСтоимости.Стоимость            КАК СуммаУпр,
	|	ВтУменьшениеСтоимости.СтоимостьРегл        КАК СуммаРегл
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУменьшениеСтоимости КАК ВтУменьшениеСтоимости
	|		ПО ВтУменьшениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУменьшениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУменьшениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	(ВтУменьшениеСтоимости.Стоимость <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьРегл <> 0)
	|";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УвеличениеСтоимостиЦФ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                     КАК Регистратор,
	|	ДанныеДокумента.Период                     КАК Период,
	|	&ХО_УвеличениеСтоимости                    КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация                КАК Организация,
	|
	|	ДанныеДокумента.Подразделение              КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	Неопределено                               КАК АналитикаРасходов,
	|	ВтУвеличениеСтоимости.ОсновноеСредство     КАК АналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК ГруппаФинансовогоУчета,
	|
	|	ДанныеДокумента.Подразделение              КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходов             КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	ДанныеДокумента.АналитикаРасходов          КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК КорГруппаФинансовогоУчета,
	|
	|	0                                          КАК Сумма,
	|	0                                          КАК СуммаУпр,
	|	ВтУвеличениеСтоимости.СтоимостьЦФ          КАК СуммаРегл
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеСтоимости КАК ВтУвеличениеСтоимости
	|		ПО ВтУвеличениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	ВтУвеличениеСтоимости.СтоимостьЦФ <> 0
	|";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область УменьшениеСтоимостиЦФ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                     КАК Регистратор,
	|	ДанныеДокумента.Период                     КАК Период,
	|	&ХО_УменьшениеСтоимости                    КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация                КАК Организация,
	|
	|	ДанныеДокумента.Подразделение              КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	&СтатьяАП_ПрибыльУбыток                    КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	ВтУменьшениеСтоимости.ОсновноеСредство     КАК АналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК ГруппаФинансовогоУчета,
	|
	|	ДанныеДокумента.Подразделение              КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	ВтУменьшениеСтоимости.ОсновноеСредство     КАК КорАналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК КорГруппаФинансовогоУчета,
	|
	|	0                                          КАК Сумма,
	|	0                                          КАК СуммаУпр,
	|	ВтУменьшениеСтоимости.СтоимостьЦФ          КАК СуммаРегл
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУменьшениеСтоимости КАК ВтУменьшениеСтоимости
	|		ПО ВтУменьшениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУменьшениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУменьшениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	ВтУменьшениеСтоимости.СтоимостьЦФ <> 0
	|";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УменьшениеАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                     КАК Регистратор,
	|	ДанныеДокумента.Период                     КАК Период,
	|	&ХО_УменьшениеАмортизации                  КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация                КАК Организация,
	|
	|	ДанныеДокумента.Подразделение              КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяДоходов              КАК Статья,
	|	ДанныеДокумента.АналитикаДоходов           КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	ДанныеДокумента.АналитикаАктивовПассивовДоходов КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                               КАК ГруппаФинансовогоУчета,
	|
	|	ДанныеДокумента.Подразделение              КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	ВтУменьшениеАмортизации.ОсновноеСредство   КАК КорАналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК КорГруппаФинансовогоУчета,
	|
	|	ВтУменьшениеАмортизации.Амортизация        КАК Сумма,
	|	ВтУменьшениеАмортизации.Амортизация        КАК СуммаУпр,
	|
	|	ВтУменьшениеАмортизации.АмортизацияРегл
	|		+ ВтУменьшениеАмортизации.АмортизацияЦФ КАК СуммаРегл
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУменьшениеАмортизации КАК ВтУменьшениеАмортизации
	|		ПО ВтУменьшениеАмортизации.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУменьшениеАмортизации.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУменьшениеАмортизации.ОсновноеСредство
	|
	|ГДЕ
	|	(ВтУменьшениеАмортизации.Амортизация <> 0
	|		ИЛИ ВтУменьшениеАмортизации.АмортизацияРегл <> 0
	|		ИЛИ ВтУменьшениеАмортизации.АмортизацияЦФ <> 0)
	|";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УвеличениеАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                     КАК Регистратор,
	|	ДанныеДокумента.Период                     КАК Период,
	|	&ХО_УвеличениеАмортизации                  КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация                КАК Организация,
	|
	|	ДанныеДокумента.Подразделение              КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	ВтУвеличениеАмортизации.ОсновноеСредство   КАК АналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК ГруппаФинансовогоУчета,
	|
	|	ДанныеДокумента.Подразделение              КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ПрибыльУбыток                    КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	ВтУвеличениеАмортизации.ОсновноеСредство   КАК КорАналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК КорГруппаФинансовогоУчета,
	|
	|	ВтУвеличениеАмортизации.Амортизация        КАК Сумма,
	|	ВтУвеличениеАмортизации.Амортизация        КАК СуммаУпр,
	|
	|	ВтУвеличениеАмортизации.АмортизацияРегл
	|		+ ВтУвеличениеАмортизации.АмортизацияЦФ КАК СуммаРегл
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеАмортизации КАК ВтУвеличениеАмортизации
	|		ПО ВтУвеличениеАмортизации.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеАмортизации.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеАмортизации.ОсновноеСредство
	|
	|ГДЕ
	|	(ВтУвеличениеАмортизации.Амортизация <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияРегл <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияЦФ <> 0)
	|";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросаОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПрочиеДоходы(ТекстыЗапроса)

	ИмяРегистра = "ПрочиеДоходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат "";
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПараметрыУчетаОС(ТекстыЗапроса,, "втСведенияОбУчете");
	
	ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеАмортизации(ТекстыЗапроса);
	
	ТекстыЗапросаОбъединение = Новый Массив;
	
	#Область УвеличениеСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                         КАК Регистратор,
	|	ДанныеДокумента.Период                         КАК Период,
	|	ДанныеДокумента.Организация                    КАК Организация,
	|	ДанныеДокумента.Подразделение                  КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	&ХО_УвеличениеСтоимости                        КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СтатьяДоходов                  КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов               КАК АналитикаДоходов,
	|
	|	ВтУвеличениеСтоимости.Стоимость                КАК Сумма,
	|	ВтУвеличениеСтоимости.Стоимость                КАК СуммаУпр,
	|	ВтУвеличениеСтоимости.СтоимостьРегл
	|		+ ВтУвеличениеСтоимости.СтоимостьЦФ        КАК СуммаРегл,
	|
	|	ВтУвеличениеСтоимости.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	ВтУвеличениеСтоимости.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеСтоимости КАК ВтУвеличениеСтоимости
	|		ПО ВтУвеличениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|	И (ВтУвеличениеСтоимости.Стоимость <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьРегл <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьЦФ <> 0)
	|";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область УменьшениеСтоимостиЦФ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                         КАК Регистратор,
	|	ДанныеДокумента.Период                         КАК Период,
	|	ДанныеДокумента.Организация                    КАК Организация,
	|	ДанныеДокумента.Подразделение                  КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	&ХО_ИзменениеДоходовЦФ                         КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СтатьяДоходов                  КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов               КАК АналитикаДоходов,
	|
	|	0                                              КАК Сумма,
	|	0                                              КАК СуммаУпр,
	|	ВтУменьшениеСтоимости.СтоимостьЦФ              КАК СуммаРегл,
	|
	|	&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУменьшениеСтоимости КАК ВтУменьшениеСтоимости
	|		ПО ВтУменьшениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУменьшениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУменьшениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|	И ВтУменьшениеСтоимости.СтоимостьЦФ <> 0
	|";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УменьшениеАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                         КАК Регистратор,
	|	ДанныеДокумента.Период                         КАК Период,
	|	ДанныеДокумента.Организация                    КАК Организация,
	|	ДанныеДокумента.Подразделение                  КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	&ХО_УменьшениеАмортизации                      КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СтатьяДоходов                  КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов               КАК АналитикаДоходов,
	|
	|	ВтУменьшениеАмортизации.Амортизация            КАК Сумма,
	|
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(ПараметрыПартионногоУчета.УправленческийУчетОрганизаций, ЛОЖЬ)
	|			ТОГДА 0
	|		ИНАЧЕ ВтУменьшениеАмортизации.Амортизация
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(ПараметрыПартионногоУчета.ИспользоватьУчетПрочихДоходовРасходовРегл, ЛОЖЬ)
	|			ТОГДА 0
	|		КОГДА ВтУменьшениеАмортизации.НачислятьИзнос
	|			ТОГДА 0
	|		ИНАЧЕ ВтУменьшениеАмортизации.АмортизацияРегл + ВтУменьшениеАмортизации.АмортизацияЦФ
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	ВтУменьшениеАмортизации.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	ВтУменьшениеАмортизации.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУменьшениеАмортизации КАК ВтУменьшениеАмортизации
	|		ПО ВтУменьшениеАмортизации.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУменьшениеАмортизации.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУменьшениеАмортизации.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПараметрыПартионногоУчетаДляПроведения КАК ПараметрыПартионногоУчета
	|		ПО ПараметрыПартионногоУчета.Период = НАЧАЛОПЕРИОДА(ДанныеДокумента.Период, МЕСЯЦ)
	|			И ПараметрыПартионногоУчета.Организация = ДанныеДокумента.Организация
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|	И (ВтУменьшениеАмортизации.Амортизация <> 0
	|		ИЛИ (ВтУменьшениеАмортизации.АмортизацияРегл <> 0 ИЛИ ВтУменьшениеАмортизации.АмортизацияЦФ <> 0)
	|				И НЕ ВтУменьшениеАмортизации.НачислятьИзнос)
	|";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросаОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = КорректировкаСтоимостиИАмортизацииОСЛокализация.ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса);
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса);
		ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтУчетнаяПолитикаФинансовогоУчета(ТекстыЗапроса);
	
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка КАК Регистратор,
		|	ДанныеДокумента.Период КАК Период,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	втПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
		|	втПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
		|	втПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
		|	втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
		|	втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
		|	втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
		|	втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
		|	втПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ КАК ДокументСнятияСУчетаБУ,
		|	втПервоначальныеСведенияОС.ДокументСнятияСУчетаУУ КАК ДокументСнятияСУчетаУУ,
		|	втПервоначальныеСведенияОС.Контрагент КАК Контрагент,
		|
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете
		|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьБУ
		|		ИНАЧЕ втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ
		|	КОНЕЦ КАК ПервоначальнаяСтоимостьБУ,
		|
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ОтражатьВУпрУчете
		|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьУУ
		|		ИНАЧЕ втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ
		|	КОНЕЦ КАК ПервоначальнаяСтоимостьУУ
		|
		|ИЗ
		|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
		|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК втПервоначальныеСведенияОС
		|		ПО втПервоначальныеСведенияОС.Ссылка = ТаблицаОС.Ссылка
		|			И втПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУчетнаяПолитикаФинансовогоУчета КАК ВтУчетнаяПолитикаФинансовогоУчета
		|		ПО ВтУчетнаяПолитикаФинансовогоУчета.Ссылка = ДанныеДокумента.Ссылка
		|
		|ГДЕ
		|	ВтУчетнаяПолитикаФинансовогоУчета.РеглУчетВНАВедетсяНезависимо
		|	И ДанныеДокумента.КорректировкаПервоначальнойСтоимости
		|	И (ДанныеДокумента.ОтражатьВРеглУчете
		|				И втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ <> ТаблицаОС.ПервоначальнаяСтоимостьБУ
		|			ИЛИ ДанныеДокумента.ОтражатьВУпрУчете
		|				И втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ <> ТаблицаОС.ПервоначальнаяСтоимостьУУ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка КАК Регистратор,
		|	ДанныеДокумента.Период КАК Период,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	втПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
		|	втПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
		|	втПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
		|	втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
		|	втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
		|	втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
		|	втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
		|	втПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ КАК ДокументСнятияСУчетаБУ,
		|	втПервоначальныеСведенияОС.ДокументСнятияСУчетаУУ КАК ДокументСнятияСУчетаУУ,
		|	втПервоначальныеСведенияОС.Контрагент КАК Контрагент,
		|
		|	ТаблицаОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
		|	ТаблицаОС.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ
		|
		|ИЗ
		|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
		|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК втПервоначальныеСведенияОС
		|		ПО втПервоначальныеСведенияОС.Ссылка = ТаблицаОС.Ссылка
		|			И втПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУчетнаяПолитикаФинансовогоУчета КАК ВтУчетнаяПолитикаФинансовогоУчета
		|		ПО ВтУчетнаяПолитикаФинансовогоУчета.Ссылка = ДанныеДокумента.Ссылка
		|
		|ГДЕ
		|	НЕ ВтУчетнаяПолитикаФинансовогоУчета.РеглУчетВНАВедетсяНезависимо
		|	И ДанныеДокумента.КорректировкаПервоначальнойСтоимости
		|	И (втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ <> ТаблицаОС.ПервоначальнаяСтоимостьБУ
		|			ИЛИ втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ <> ТаблицаОС.ПервоначальнаяСтоимостьУУ)
		|";
		
	КонецЕсли; 
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПараметрыАмортизацииОСУУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПараметрыАмортизацииОСУУ(ТекстыЗапроса);
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтУчетнаяПолитикаФинансовогоУчета(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	втПараметрыАмортизацииОСУУ.СрокИспользования КАК СрокИспользования,
	|	втПараметрыАмортизацииОСУУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	втПараметрыАмортизацииОСУУ.КоэффициентУскорения КАК КоэффициентУскорения,
	|	втПараметрыАмортизацииОСУУ.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	втПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	втПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимостьРегл КАК ЛиквидационнаяСтоимостьРегл,
	|	втПараметрыАмортизацииОСУУ.ДатаПоследнегоИзменения КАК ДатаПоследнегоИзменения,
	|	втПараметрыАмортизацииОСУУ.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаОС.СтоимостьДляВычисленияАмортизацииУУ КАК СтоимостьДляВычисленияАмортизации,
	|
	|	ВЫБОР
	|		КОГДА НЕ &ВедетсяРегламентированныйУчетВНА
	|			ТОГДА ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ
	|		ИНАЧЕ втПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизацииРегл
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизацииРегл
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыАмортизацииОСУУ КАК втПараметрыАмортизацииОСУУ
	|		ПО втПараметрыАмортизацииОСУУ.Ссылка = ТаблицаОС.Ссылка
	|			И втПараметрыАмортизацииОСУУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУчетнаяПолитикаФинансовогоУчета КАК ВтУчетнаяПолитикаФинансовогоУчета
	|		ПО ВтУчетнаяПолитикаФинансовогоУчета.Ссылка = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВУпрУчете
	|	И ДанныеДокумента.КорректировкаПараметровРасчетаАмортизации
	|	И втПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизации <> ТаблицаОС.СтоимостьДляВычисленияАмортизацииУУ
	|	И ВтУчетнаяПолитикаФинансовогоУчета.ПорядокУчетаВНА = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл)
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса)

	ИмяТаблицы = "ВтУвеличениеСтоимости";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаВтКорректировкаСтоимости(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КорректировкаСтоимости.Ссылка               КАК Ссылка,
	|	КорректировкаСтоимости.ОсновноеСредство     КАК ОсновноеСредство,
	|
	// Стоимость
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.Стоимость > 0
	|			ТОГДА КорректировкаСтоимости.Стоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|
	// СтоимостьРегл
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл > 0
	|			ТОГДА КорректировкаСтоимости.СтоимостьРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	// СтоимостьНУ
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьНУ > 0
	|			ТОГДА КорректировкаСтоимости.СтоимостьНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	// СтоимостьПР
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|				И КорректировкаСтоимости.СтоимостьНУ = 0
	|			ТОГДА 0
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл > 0
	|			ТОГДА КорректировкаСтоимости.СтоимостьПР
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|				И КорректировкаСтоимости.СтоимостьНУ > 0
	|			ТОГДА КорректировкаСтоимости.СтоимостьПР
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьПР,
	|
	// СтоимостьЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьЦФ > 0
	|			ТОГДА КорректировкаСтоимости.СтоимостьЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЦФ,
	|
	// СтоимостьПРЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьПРЦФ > 0
	|			ТОГДА КорректировкаСтоимости.СтоимостьПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|
	// ЗалоговаяСтоимость
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.ЗалоговаяСтоимость > 0
	|			ТОГДА КорректировкаСтоимости.ЗалоговаяСтоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗалоговаяСтоимость,
	|
	|	КорректировкаСтоимости.ИдентификаторСтроки  КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_УвеличениеСтоимости             КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтУвеличениеСтоимости
	|
	|ИЗ
	|	ВтКорректировкаСтоимости КАК КорректировкаСтоимости
	|
	|ГДЕ
	|	КорректировкаСтоимости.Стоимость > 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьРегл > 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьНУ > 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьЦФ > 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПРЦФ > 0
	|		ИЛИ КорректировкаСтоимости.ЗалоговаяСтоимость > 0
	|		ИЛИ ВЫБОР 
	|				КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|						И КорректировкаСтоимости.СтоимостьНУ = 0
	|					ТОГДА 0
	|				КОГДА КорректировкаСтоимости.СтоимостьРегл > 0
	|					ТОГДА КорректировкаСтоимости.СтоимостьПР
	|				КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|						И КорректировкаСтоимости.СтоимостьНУ > 0
	|					ТОГДА КорректировкаСтоимости.СтоимостьПР
	|				ИНАЧЕ 0
	|			КОНЕЦ <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса)

	ИмяТаблицы = "ВтУменьшениеСтоимости";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаВтКорректировкаСтоимости(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КорректировкаСтоимости.Ссылка               КАК Ссылка,
	|	КорректировкаСтоимости.ОсновноеСредство     КАК ОсновноеСредство,
	|
	// Стоимость
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.Стоимость < 0
	|			ТОГДА -КорректировкаСтоимости.Стоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|
	// СтоимостьРегл
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл < 0
	|			ТОГДА -КорректировкаСтоимости.СтоимостьРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	// СтоимостьНУ
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьНУ < 0
	|			ТОГДА -КорректировкаСтоимости.СтоимостьНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	// СтоимостьПР
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл < 0
	|			ТОГДА -КорректировкаСтоимости.СтоимостьПР
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|				И КорректировкаСтоимости.СтоимостьНУ < 0
	|			ТОГДА -КорректировкаСтоимости.СтоимостьПР
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|				И КорректировкаСтоимости.СтоимостьНУ = 0
	|			ТОГДА -КорректировкаСтоимости.СтоимостьПР
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьПР,
	|
	// СтоимостьЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьЦФ < 0
	|			ТОГДА -КорректировкаСтоимости.СтоимостьЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЦФ,
	|
	// СтоимостьПРЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьПРЦФ < 0
	|			ТОГДА -КорректировкаСтоимости.СтоимостьПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|
	// ЗалоговаяСтоимость
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.ЗалоговаяСтоимость < 0
	|			ТОГДА -КорректировкаСтоимости.ЗалоговаяСтоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗалоговаяСтоимость,
	|
	|	КорректировкаСтоимости.ИдентификаторСтроки  КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_УменьшениеСтоимости             КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтУменьшениеСтоимости
	|
	|ИЗ
	|	ВтКорректировкаСтоимости КАК КорректировкаСтоимости
	|
	|ГДЕ
	|	КорректировкаСтоимости.Стоимость < 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьРегл < 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьНУ < 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьЦФ < 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПРЦФ < 0
	|		ИЛИ КорректировкаСтоимости.ЗалоговаяСтоимость < 0
	|		ИЛИ ВЫБОР 
	|				КОГДА КорректировкаСтоимости.СтоимостьРегл < 0
	|					ТОГДА -КорректировкаСтоимости.СтоимостьПР
	|				КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|						И КорректировкаСтоимости.СтоимостьНУ < 0
	|					ТОГДА -КорректировкаСтоимости.СтоимостьПР
	|				КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|						И КорректировкаСтоимости.СтоимостьНУ = 0
	|					ТОГДА -КорректировкаСтоимости.СтоимостьПР
	|				ИНАЧЕ 0
	|			КОНЕЦ <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтУвеличениеАмортизации(ТекстыЗапроса)

	ИмяТаблицы = "втУвеличениеАмортизации";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаВтКорректировкаАмортизации(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КорректировкаАмортизации.Ссылка             КАК Ссылка,
	|	КорректировкаАмортизации.ОсновноеСредство   КАК ОсновноеСредство,
	|	КорректировкаАмортизации.НачислятьИзнос     КАК НачислятьИзнос,
	|
	// Амортизация
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.Амортизация > 0
	|			ТОГДА КорректировкаАмортизации.Амортизация
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Амортизация,
	|
	// АмортизацияРегл
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл > 0
	|			ТОГДА КорректировкаАмортизации.АмортизацияРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	// АмортизацияНУ
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияНУ > 0
	|			ТОГДА КорректировкаАмортизации.АмортизацияНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияНУ,
	|
	// АмортизацияПР
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл > 0
	|			ТОГДА КорректировкаАмортизации.АмортизацияПР
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|				И КорректировкаАмортизации.АмортизацияНУ > 0
	|			ТОГДА КорректировкаАмортизации.АмортизацияПР
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|				И КорректировкаАмортизации.АмортизацияНУ = 0
	|			ТОГДА КорректировкаАмортизации.АмортизацияПР
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияПР,
	|
	// АмортизацияЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияЦФ > 0
	|			ТОГДА КорректировкаАмортизации.АмортизацияЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияЦФ,
	|
	// АмортизацияПРЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияПРЦФ > 0
	|			ТОГДА КорректировкаАмортизации.АмортизацияПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияПРЦФ,
	|
	|	КорректировкаАмортизации.ИдентификаторСтроки  КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_УвеличениеНакопленнойАмортизации  КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ втУвеличениеАмортизации
	|
	|ИЗ
	|	ВтКорректировкаАмортизации КАК КорректировкаАмортизации
	|
	|ГДЕ
	|	КорректировкаАмортизации.Амортизация > 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияРегл > 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияНУ > 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияЦФ > 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПРЦФ > 0
	|		ИЛИ ВЫБОР 
	|				КОГДА КорректировкаАмортизации.АмортизацияРегл > 0
	|					ТОГДА КорректировкаАмортизации.АмортизацияПР
	|				КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|						И КорректировкаАмортизации.АмортизацияНУ > 0
	|					ТОГДА КорректировкаАмортизации.АмортизацияПР
	|				КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|						И КорректировкаАмортизации.АмортизацияНУ = 0
	|					ТОГДА КорректировкаАмортизации.АмортизацияПР
	|				ИНАЧЕ 0
	|			КОНЕЦ <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтУменьшениеАмортизации(ТекстыЗапроса)

	ИмяТаблицы = "втУменьшениеАмортизации";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаВтКорректировкаАмортизации(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КорректировкаАмортизации.Ссылка             КАК Ссылка,
	|	КорректировкаАмортизации.ОсновноеСредство   КАК ОсновноеСредство,
	|	КорректировкаАмортизации.НачислятьИзнос     КАК НачислятьИзнос,
	|
	// Амортизация
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.Амортизация < 0
	|			ТОГДА -КорректировкаАмортизации.Амортизация
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Амортизация,
	|
	// АмортизацияРегл
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл < 0
	|			ТОГДА -КорректировкаАмортизации.АмортизацияРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	// АмортизацияНУ
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияНУ < 0
	|			ТОГДА -КорректировкаАмортизации.АмортизацияНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияНУ,
	|
	// АмортизацияПР
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|				И КорректировкаАмортизации.АмортизацияНУ = 0
	|			ТОГДА 0
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл < 0
	|			ТОГДА -КорректировкаАмортизации.АмортизацияПР
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|				И КорректировкаАмортизации.АмортизацияНУ < 0
	|			ТОГДА -КорректировкаАмортизации.АмортизацияПР
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияПР,
	|
	// АмортизацияЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияЦФ < 0
	|			ТОГДА -КорректировкаАмортизации.АмортизацияЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияЦФ,
	|
	// АмортизацияПРЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияПРЦФ < 0
	|			ТОГДА -КорректировкаАмортизации.АмортизацияПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияПРЦФ,
	|
	|	КорректировкаАмортизации.ИдентификаторСтроки  КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_УменьшениеНакопленнойАмортизации  КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ втУменьшениеАмортизации
	|
	|ИЗ
	|	ВтКорректировкаАмортизации КАК КорректировкаАмортизации
	|
	|ГДЕ
	|	КорректировкаАмортизации.Амортизация < 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияРегл < 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияНУ < 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияЦФ < 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПРЦФ < 0
	|		ИЛИ ВЫБОР 
	|				КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|						И КорректировкаАмортизации.АмортизацияНУ = 0
	|					ТОГДА 0
	|				КОГДА КорректировкаАмортизации.АмортизацияРегл < 0
	|					ТОГДА -КорректировкаАмортизации.АмортизацияПР
	|				КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|						И КорректировкаАмортизации.АмортизацияНУ < 0
	|					ТОГДА -КорректировкаАмортизации.АмортизацияПР
	|				ИНАЧЕ 0
	|			КОНЕЦ <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтКорректировкаСтоимости(ТекстыЗапроса)

	ИмяТаблицы = "втКорректировкаСтоимости";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка            КАК Ссылка,
	|	ТаблицаОС.ОсновноеСредство  КАК ОсновноеСредство,
	|
	// Стоимость
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.Стоимость, 0) <> ТаблицаОС.СтоимостьУУ 
	|				И ДанныеДокумента.ОтражатьВУпрУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.СтоимостьУУ - ЕСТЬNULL(СтоимостьОС.Стоимость, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|
	// СтоимостьРегл
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) <> ТаблицаОС.СтоимостьБУ 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.СтоимостьБУ - ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	// СтоимостьНУ
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьНУ, 0) <> ТаблицаОС.СтоимостьНУ 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.СтоимостьНУ - ЕСТЬNULL(СтоимостьОС.СтоимостьНУ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	// СтоимостьПР
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0) <> ТаблицаОС.СтоимостьПР 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.СтоимостьПР - ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьПР,
	|
	// СтоимостьЦФ
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0) <> ТаблицаОС.СтоимостьЦФ 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.СтоимостьЦФ - ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЦФ,
	|
	// СтоимостьПРЦФ
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьПРЦФ, 0) <> ТаблицаОС.СтоимостьЦФ 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.СтоимостьЦФ - ЕСТЬNULL(СтоимостьОС.СтоимостьПРЦФ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|
	// ЗалоговаяСтоимость
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.ЗалоговаяСтоимость, 0) <> ТаблицаОС.ЗалоговаяСтоимость 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Арендованное)
	|			ТОГДА ТаблицаОС.ЗалоговаяСтоимость - ЕСТЬNULL(СтоимостьОС.ЗалоговаяСтоимость, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗалоговаяСтоимость,
	|
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ПОМЕСТИТЬ втКорректировкаСтоимости
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.Ссылка = ТаблицаОС.Ссылка
	|			И СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|
	|ГДЕ
	|	ДанныеДокумента.КорректировкаСтоимости
	|	И (ЕСТЬNULL(СтоимостьОС.Стоимость, 0) <> ТаблицаОС.СтоимостьУУ 
	|				И ДанныеДокумента.ОтражатьВУпрУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) <> ТаблицаОС.СтоимостьБУ 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(СтоимостьОС.СтоимостьНУ, 0) <> ТаблицаОС.СтоимостьНУ 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0) <> ТаблицаОС.СтоимостьПР 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0) <> ТаблицаОС.СтоимостьЦФ 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(СтоимостьОС.ЗалоговаяСтоимость, 0) <> ТаблицаОС.ЗалоговаяСтоимость 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Арендованное))
	|
	|ИНДЕКСИРОВАТЬ ПО 
	|	Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтКорректировкаАмортизации(ТекстыЗапроса)

	ИмяТаблицы = "втКорректировкаАмортизации";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса);
	ТекстЗапросаТаблицаВтАмортизацияТекущегоМесяца(ТекстыЗапроса); 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка                 КАК Ссылка,
	|	ТаблицаОС.ОсновноеСредство       КАК ОсновноеСредство,
	|
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) 
	|		= ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)  КАК НачислятьИзнос,
	|
	// Амортизация
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизацияОС.Амортизация, 0) <> ТаблицаОС.АмортизацияУУ 
	|				И ДанныеДокумента.ОтражатьВУпрУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.АмортизацияУУ - ЕСТЬNULL(АмортизацияОС.Амортизация, 0) + ЕСТЬNULL(ВтАмортизацияТекущегоМесяца.Амортизация, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Амортизация,
	|
	// АмортизацияРегл
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизацияОС.АмортизацияРегл, 0) <> ТаблицаОС.АмортизацияБУ 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.АмортизацияБУ - ЕСТЬNULL(АмортизацияОС.АмортизацияРегл, 0) + ЕСТЬNULL(ВтАмортизацияТекущегоМесяца.АмортизацияРегл, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	// АмортизацияНУ
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизацияОС.АмортизацияНУ, 0) <> ТаблицаОС.АмортизацияНУ 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.АмортизацияНУ - ЕСТЬNULL(АмортизацияОС.АмортизацияНУ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияНУ,
	|
	// АмортизацияПР
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизацияОС.АмортизацияПР, 0) <> ТаблицаОС.АмортизацияПР 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.АмортизацияПР - ЕСТЬNULL(АмортизацияОС.АмортизацияПР, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияПР,
	|
	// АмортизацияЦФ
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0) <> ТаблицаОС.АмортизацияЦФ 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.АмортизацияЦФ - ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0) + ЕСТЬNULL(ВтАмортизацияТекущегоМесяца.АмортизацияЦФ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияЦФ,
	|
	// АмортизацияПРЦФ
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизацияОС.АмортизацияПРЦФ, 0) <> ТаблицаОС.АмортизацияЦФ 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.АмортизацияЦФ - ЕСТЬNULL(АмортизацияОС.АмортизацияПРЦФ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияПРЦФ,
	|
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ПОМЕСТИТЬ втКорректировкаАмортизации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.Ссылка = ТаблицаОС.Ссылка
	|			И АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ПервоначальныеСведенияОС.Ссылка = ТаблицаОС.Ссылка
	|			И ПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтАмортизацияТекущегоМесяца КАК ВтАмортизацияТекущегоМесяца
	|		ПО ВтАмортизацияТекущегоМесяца.Ссылка = ТаблицаОС.Ссылка
	|			И ВтАмортизацияТекущегоМесяца.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|
	|ГДЕ
	|	ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|	И ДанныеДокумента.КорректировкаАмортизации
	|
	|	И (ЕСТЬNULL(АмортизацияОС.Амортизация, 0) <> ТаблицаОС.АмортизацияУУ 
	|				И ДанныеДокумента.ОтражатьВУпрУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(АмортизацияОС.АмортизацияРегл, 0) <> ТаблицаОС.АмортизацияБУ 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(АмортизацияОС.АмортизацияНУ, 0) <> ТаблицаОС.АмортизацияНУ 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(АмортизацияОС.АмортизацияПР, 0) <> ТаблицаОС.АмортизацияПР 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0) <> ТаблицаОС.АмортизацияЦФ 
	|				И ДанныеДокумента.ОтражатьВРеглУчете 
	|				И ДанныеДокумента.ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное))
	|
	|ИНДЕКСИРОВАТЬ ПО 
	|	Ссылка
	|";
	
	КорректировкаСтоимостиИАмортизацииОСЛокализация.ДополнитьТекстЗапросаВтКорректировкаАмортизации(ТекстЗапроса);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтАмортизацияТекущегоМесяца(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтАмортизацияТекущегоМесяца";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СУММА(ВЫБОР 
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|				ТОГДА -АмортизацияОС.Амортизация 
	|			ИНАЧЕ АмортизацияОС.Амортизация 
	|		КОНЕЦ) КАК Амортизация,
	|
	|	СУММА(ВЫБОР 
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|				ТОГДА -АмортизацияОС.АмортизацияРегл 
	|			ИНАЧЕ АмортизацияОС.АмортизацияРегл 
	|		КОНЕЦ) КАК АмортизацияРегл,
	|
	|	СУММА(ВЫБОР 
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|				ТОГДА -АмортизацияОС.АмортизацияЦФ 
	|			ИНАЧЕ АмортизацияОС.АмортизацияЦФ 
	|		КОНЕЦ) КАК АмортизацияЦФ
	|
	|ПОМЕСТИТЬ ВтАмортизацияТекущегоМесяца
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК АмортизацияОС
	|		ПО АмортизацияОС.Организация = ДанныеДокумента.Организация
	|			И АмортизацияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|			И АмортизацияОС.Период >= ДанныеДокумента.НачПериодаДокумента
	|			И АмортизацияОС.Период <= ДанныеДокумента.КонПериодаДокумента
	|			И ТИПЗНАЧЕНИЯ(АмортизацияОС.Регистратор) = ТИП(Документ.АмортизацияОС2_4)
	|
	|ГДЕ
	|	ДанныеДокумента.КорректировкаВСвязиСИзменениемУчетнойПолитики = 1
	|	И ДанныеДокумента.ВидСобытияОС = ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Прочее)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	АмортизацияОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса, ДопПоля)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат "";
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПараметрыУчетаОС(ТекстыЗапроса,, "втСведенияОбУчете");
	ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУвеличениеАмортизации(ТекстыЗапроса);
	
	СписокЗапросовОбъединение = Новый Массив;
	СписокЗапросовОбъединение.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы(ДопПоля));
	
	#Область УменьшениеСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период                          КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	ДанныеДокумента.Организация                     КАК Организация,
	|	ДанныеДокумента.Подразделение                   КАК Подразделение,
	|	ДанныеДокумента.СтатьяРасходов                  КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов               КАК АналитикаРасходов,
	|	СведенияОбУчете.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	ВтУменьшениеСтоимости.Стоимость СуммаСНДС,
	|	ВтУменьшениеСтоимости.Стоимость КАК СуммаБезНДС,
	|	ВтУменьшениеСтоимости.Стоимость КАК СуммаБезНДСУпр,
	|
	|	ВтУменьшениеСтоимости.СтоимостьРегл
	|		+ ВтУменьшениеСтоимости.СтоимостьЦФ КАК СуммаСНДСРегл,
	|
	|	ВтУменьшениеСтоимости.СтоимостьРегл
	|		+ ВтУменьшениеСтоимости.СтоимостьЦФ КАК СуммаБезНДСРегл,
	|
	|	ВтУменьшениеСтоимости.СтоимостьПР
	|		+ ВтУменьшениеСтоимости.СтоимостьПРЦФ КАК ПостояннаяРазница,
	|
	|	ВтУменьшениеСтоимости.СтоимостьРегл
	|		+ ВтУменьшениеСтоимости.СтоимостьЦФ
	|		- ВтУменьшениеСтоимости.СтоимостьНУ
	|		- ВтУменьшениеСтоимости.СтоимостьПР
	|		- ВтУменьшениеСтоимости.СтоимостьПРЦФ КАК ВременнаяРазница,
	|
	|	&ХО_УменьшениеСтоимости                         КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|
	|	ВтУменьшениеСтоимости.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтУменьшениеСтоимости.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|
	|	0 КАК СуммаНДД,
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУменьшениеСтоимости КАК ВтУменьшениеСтоимости
	|		ПО ВтУменьшениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУменьшениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУменьшениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	И (ВтУменьшениеСтоимости.Стоимость <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьРегл <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьНУ <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьПР <> 0)
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УвеличениеСтоимостиЦФ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период                          КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	ДанныеДокумента.Организация                     КАК Организация,
	|	ДанныеДокумента.Подразделение                   КАК Подразделение,
	|	ДанныеДокумента.СтатьяРасходов                  КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов               КАК АналитикаРасходов,
	|	СведенияОбУчете.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	0 СуммаСНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаБезНДСУпр,
	|
	|	ВтУвеличениеСтоимости.СтоимостьЦФ КАК СуммаСНДСРегл,
	|
	|	ВтУвеличениеСтоимости.СтоимостьЦФ КАК СуммаБезНДСРегл,
	|
	|	ВтУвеличениеСтоимости.СтоимостьПРЦФ КАК ПостояннаяРазница,
	|
	|	ВтУвеличениеСтоимости.СтоимостьЦФ
	|		- ВтУвеличениеСтоимости.СтоимостьПРЦФ КАК ВременнаяРазница,
	|
	|	&ХО_ИзменениеДоходовЦФ                          КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|
	|	&ИдентификаторНеиспользуемойФинЗаписи           КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка) КАК НастройкаХозяйственнойОперации,
	|
	|	0 КАК СуммаНДД,
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеСтоимости КАК ВтУвеличениеСтоимости
	|		ПО ВтУвеличениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	И (ВтУвеличениеСтоимости.СтоимостьЦФ <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьПРЦФ <> 0)
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область УвеличениеАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период                          КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	ДанныеДокумента.Организация                     КАК Организация,
	|	ДанныеДокумента.Подразделение                   КАК Подразделение,
	|	ДанныеДокумента.СтатьяРасходов                  КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов               КАК АналитикаРасходов,
	|	СведенияОбУчете.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	ВтУвеличениеАмортизации.Амортизация             КАК СуммаСНДС,
	|	ВтУвеличениеАмортизации.Амортизация             КАК СуммаБезНДС,
	|	ВтУвеличениеАмортизации.Амортизация             КАК СуммаБезНДСУпр,
	|
	|	ВтУвеличениеАмортизации.АмортизацияРегл         КАК СуммаСНДСРегл,
	|
	|	ВтУвеличениеАмортизации.АмортизацияРегл         КАК СуммаБезНДСРегл,
	|
	|	ВтУвеличениеАмортизации.АмортизацияПР           КАК ПостояннаяРазница,
	|
	|	ВтУвеличениеАмортизации.АмортизацияРегл
	|		- ВтУвеличениеАмортизации.АмортизацияНУ
	|		- ВтУвеличениеАмортизации.АмортизацияПР     КАК ВременнаяРазница,
	|
	|	&ХО_УвеличениеАмортизации                       КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|
	|	ВтУвеличениеАмортизации.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	ВтУвеличениеАмортизации.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|
	|	0 КАК СуммаНДД,
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеАмортизации КАК ВтУвеличениеАмортизации
	|		ПО ВтУвеличениеАмортизации.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеАмортизации.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеАмортизации.ОсновноеСредство
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	И (ВтУвеличениеАмортизации.Амортизация <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияРегл <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияНУ <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияПР <> 0)
	|
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УвеличениеАмортизацииЦФ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период                          КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	ДанныеДокумента.Организация                     КАК Организация,
	|	ДанныеДокумента.Подразделение                   КАК Подразделение,
	|	ДанныеДокумента.СтатьяРасходов                  КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов               КАК АналитикаРасходов,
	|	СведенияОбУчете.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	0             КАК СуммаСНДС,
	|	0             КАК СуммаБезНДС,
	|	0             КАК СуммаБезНДСУпр,
	|
	|	ВтУвеличениеАмортизации.АмортизацияЦФ     КАК СуммаСНДСРегл,
	|
	|	ВтУвеличениеАмортизации.АмортизацияЦФ     КАК СуммаБезНДСРегл,
	|
	|	ВтУвеличениеАмортизации.АмортизацияПРЦФ   КАК ПостояннаяРазница,
	|
	|	ВтУвеличениеАмортизации.АмортизацияЦФ
	|		- ВтУвеличениеАмортизации.АмортизацияПРЦФ   КАК ВременнаяРазница,
	|
	|	&ХО_УвеличениеАмортизацииЦФ                     КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|
	|	ВтУвеличениеАмортизации.ИдентификаторФинЗаписи  КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_УвеличениеНакопленнойАмортизацииЦФ КАК НастройкаХозяйственнойОперации,
	|	0 КАК СуммаНДД,
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеАмортизации КАК ВтУвеличениеАмортизации
	|		ПО ВтУвеличениеАмортизации.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеАмортизации.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеАмортизации.ОсновноеСредство
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	И (ВтУвеличениеАмортизации.АмортизацияЦФ <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияПРЦФ <> 0)
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(ТекстыЗапроса, ДопПоля)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат "";
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПараметрыУчетаОС(ТекстыЗапроса,, "втСведенияОбУчете");
	ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУвеличениеАмортизации(ТекстыЗапроса);
	
	СписокЗапросовОбъединение = Новый Массив;
	СписокЗапросовОбъединение.Добавить(РегистрыНакопления.ПартииПрочихРасходов.ТекстОписаниеВтИсходныеПартииПрочихРасходов(ДопПоля));
	
	#Область УменьшениеСтоимости
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Ссылка КАК ДокументПоступленияРасходов,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	СведенияОбУчете.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	ВтУменьшениеСтоимости.Стоимость КАК Стоимость,
	|	ВтУменьшениеСтоимости.Стоимость КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|
	|	ВтУменьшениеСтоимости.СтоимостьРегл КАК СтоимостьРегл,
	|
	|	0 КАК НДСРегл,
	|
	|	ВтУменьшениеСтоимости.СтоимостьПР КАК ПостояннаяРазница,
	|
	|	ВтУменьшениеСтоимости.СтоимостьРегл
	|		- ВтУменьшениеСтоимости.СтоимостьНУ
	|		- ВтУменьшениеСтоимости.СтоимостьПР КАК ВременнаяРазница,
	|
	|	&ХО_УменьшениеСтоимости КАК ХозяйственнаяОперация,
	|
	|	ВтУменьшениеСтоимости.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	ВтУменьшениеСтоимости.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУменьшениеСтоимости КАК ВтУменьшениеСтоимости
	|		ПО ВтУменьшениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУменьшениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУменьшениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	(ВтУменьшениеСтоимости.Стоимость <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьРегл <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьНУ <> 0
	|		ИЛИ ВтУменьшениеСтоимости.СтоимостьПР <> 0)
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область УвеличениеСтоимостиЦФ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Ссылка КАК ДокументПоступленияРасходов,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	СведенияОбУчете.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|
	|	ВтУвеличениеСтоимости.СтоимостьЦФ КАК СтоимостьРегл,
	|
	|	0 КАК НДСРегл,
	|
	|	ВтУвеличениеСтоимости.СтоимостьПРЦФ КАК ПостояннаяРазница,
	|
	|	ВтУвеличениеСтоимости.СтоимостьЦФ
	|		- ВтУвеличениеСтоимости.СтоимостьПРЦФ КАК ВременнаяРазница,
	|
	|	&ХО_УвеличениеСтоимости КАК ХозяйственнаяОперация,
	|
	|	ВтУвеличениеСтоимости.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	ВтУвеличениеСтоимости.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеСтоимости КАК ВтУвеличениеСтоимости
	|		ПО ВтУвеличениеСтоимости.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеСтоимости.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	(ВтУвеличениеСтоимости.СтоимостьЦФ <> 0
	|		ИЛИ ВтУвеличениеСтоимости.СтоимостьПРЦФ <> 0)
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область УвеличениеАмортизации
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Ссылка КАК ДокументПоступленияРасходов,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	СведенияОбУчете.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	ВтУвеличениеАмортизации.Амортизация КАК Стоимость,
	|	ВтУвеличениеАмортизации.Амортизация КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|
	|	ВтУвеличениеАмортизации.АмортизацияРегл
	|		+ ВтУвеличениеАмортизации.АмортизацияЦФ КАК СтоимостьРегл,
	|
	|	0 КАК НДСРегл,
	|
	|	ВтУвеличениеАмортизации.АмортизацияПР
	|		+ ВтУвеличениеАмортизации.АмортизацияПРЦФ КАК ПостояннаяРазница,
	|
	|	ВтУвеличениеАмортизации.АмортизацияРегл
	|		+ ВтУвеличениеАмортизации.АмортизацияЦФ
	|		- ВтУвеличениеАмортизации.АмортизацияНУ
	|		- ВтУвеличениеАмортизации.АмортизацияПР
	|		- ВтУвеличениеАмортизации.АмортизацияПРЦФ КАК ВременнаяРазница,
	|
	|	&ХО_УвеличениеАмортизации КАК ХозяйственнаяОперация,
	|
	|	ВтУвеличениеАмортизации.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	ВтУвеличениеАмортизации.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУвеличениеАмортизации КАК ВтУвеличениеАмортизации
	|		ПО ВтУвеличениеАмортизации.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.Ссылка = ВтУвеличениеАмортизации.Ссылка
	|			И СведенияОбУчете.ОсновноеСредство = ВтУвеличениеАмортизации.ОсновноеСредство
	|
	|ГДЕ
	|	(ВтУвеличениеАмортизации.Амортизация <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияРегл <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияНУ <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияПР <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияЦФ <> 0
	|		ИЛИ ВтУвеличениеАмортизации.АмортизацияПРЦФ <> 0)
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса, ДопПоля)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса, ДопПоля);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы(ДопПоля, Истина);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(ТекстыЗапроса, ДопПоля)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(ТекстыЗапроса, ДопПоля);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов(ДопПоля, Истина);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПроведениеПоРеглУчету

Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт

	Возврат "";

КонецФункции

Функция ТекстОтраженияВРеглУчете() Экспорт

	Возврат КорректировкаСтоимостиИАмортизацииОСЛокализация.ТекстОтраженияВРеглУчете();

КонецФункции

#КонецОбласти

#Область УправлениеПараметрамиЗаПериод

// Заполняет параметры значениями по умолчанию.
// 
// Параметры:
// 	Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС -
//  РазделУчета - Строка, Неопределено -
Процедура ЗаполнитьПараметрыПоУмолчанию(Объект, РазделУчета = Неопределено) Экспорт
	
	Если НЕ Объект.КорректировкаСПрошлойДаты
		ИЛИ Объект.НачалоПериода = '000101010000' Тогда
		Возврат;
	КонецЕсли;
	
	Если РазделУчета <> Неопределено Тогда
		СписокРазделовУчета = СтрРазделить(РазделУчета, ",");
	Иначе
		СписокРазделовУчета = Новый Массив;
		СписокРазделовУчета.Добавить("БУ");
		СписокРазделовУчета.Добавить("УУ");
		СписокРазделовУчета.Добавить("НУ");
	КонецЕсли;
	
	ОсновноеСредство = Неопределено;
	Для Каждого ДанныеСтроки Из Объект.ОС Цикл
		Если ЗначениеЗаполнено(ДанныеСтроки.ОсновноеСредство) Тогда
			ОсновноеСредство = ДанныеСтроки.ОсновноеСредство;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ДатаДокумента = ?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса());
	КонецПериода = ?(Объект.ВключаетАмортизациюТекущегоМесяца, КонецМесяца(ДатаДокумента), НачалоМесяца(ДатаДокумента)-1);
	
	ПорядокУчетаВНА = НастройкиНалоговУчетныхПолитикПовтИсп.ПорядокУчетаВНА(
		Объект.Организация, КонецМесяца(ДатаДокумента));

	ПорядокНачисленияАмортизацииУпр = НастройкиНалоговУчетныхПолитикПовтИсп.ПорядокНачисленияАмортизацииОСУпр(
		Объект.Организация, КонецМесяца(ДатаДокумента));
	
	ПорядокНачисленияАмортизацииРегл = НастройкиНалоговУчетныхПолитикПовтИсп.ПорядокНачисленияАмортизацииОСРегл(
		Объект.Организация, КонецМесяца(ДатаДокумента));
	
	Если Объект.ВключаетАмортизациюТекущегоМесяца Тогда
		
		КонецПериодаУУ = НачалоДня(КонецМесяца(ДатаДокумента));
		
	ИначеЕсли ПорядокУчетаВНА = Перечисления.ПорядокУчетаВНА.ПоСтандартамМУ
		И ПорядокНачисленияАмортизацииУпр = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету
		И (НачалоДня(ДатаДокумента)-1) <> КонецПериода Тогда
		
		КонецПериодаУУ = НачалоДня(ДатаДокумента)-1;
	Иначе
		КонецПериодаУУ = НачалоМесяца(ДатаДокумента)-1;
	КонецЕсли;
	
	Если Объект.ВключаетАмортизациюТекущегоМесяца Тогда
		
		КонецПериодаБУ = НачалоДня(КонецМесяца(ДатаДокумента));
		
	ИначеЕсли ПорядокУчетаВНА = Перечисления.ПорядокУчетаВНА.ПоСтандартамМУ
		И ПорядокНачисленияАмортизацииРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету
		И (НачалоДня(ДатаДокумента)-1) <> КонецПериода Тогда
		
		КонецПериодаБУ = НачалоДня(ДатаДокумента)-1;
	Иначе
		КонецПериодаБУ = НачалоМесяца(ДатаДокумента)-1;
	КонецЕсли;
	
	Если Объект.ВключаетАмортизациюТекущегоМесяца Тогда
		КонецПериодаНУ = НачалоДня(КонецМесяца(ДатаДокумента));
	Иначе
		КонецПериодаНУ = НачалоМесяца(ДатаДокумента)-1;
	КонецЕсли;

	КонецПериода = Макс(КонецПериодаУУ, КонецПериодаБУ);

	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Ссылка", Объект.Ссылка);
	ПараметрыРасчета.Вставить("Организация", Объект.Организация);
	ПараметрыРасчета.Вставить("ОсновноеСредство", ОсновноеСредство);
	ПараметрыРасчета.Вставить("Дата", ДатаДокумента);
	ПараметрыРасчета.Вставить("НачалоПериода", Объект.НачалоПериода);
	ПараметрыРасчета.Вставить("КонецПериода", КонецПериода);
	ПараметрыРасчета.Вставить("КонецПериодаУУ", КонецПериодаУУ);
	ПараметрыРасчета.Вставить("КонецПериодаБУ", КонецПериодаБУ);
	ПараметрыРасчета.Вставить("КонецПериодаНУ", КонецПериодаНУ);
	ПараметрыРасчета.Вставить("ЗаполнитьУУ", СписокРазделовУчета.Найти("УУ") <> Неопределено);
	ПараметрыРасчета.Вставить("ЗаполнитьБУ", СписокРазделовУчета.Найти("БУ") <> Неопределено);
	ПараметрыРасчета.Вставить("ЗаполнитьНУ", СписокРазделовУчета.Найти("НУ") <> Неопределено);
	
	ПараметрыДляРасчета = Документы.АмортизацияОС2_4.ПараметрыДляРасчетаАмортизацииПоТаблице(ПараметрыРасчета);
	
	Если ПараметрыРасчета.ЗаполнитьУУ Тогда
	
		Объект.СтоимостьНаНачалоГода = ПараметрыДляРасчета.СтоимостьНаНачалоГода;
		Объект.АмортизацияНаНачалоГода = ПараметрыДляРасчета.АмортизацияНаНачалоГода;
		Объект.АмортизацияНаНачалоПериода = ПараметрыДляРасчета.АмортизацияНаНачалоПериода;
		Объект.ДатаВводаВЭксплуатациюУУ = ПараметрыДляРасчета.ДатаВводаВЭксплуатациюУУ;

		Объект.ПараметрыЗаПериод.Очистить();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПараметрыДляРасчета.ПараметрыЗаПериодУУ, Объект.ПараметрыЗаПериод);
		
	КонецЕсли;
	
	Если ПараметрыРасчета.ЗаполнитьБУ Тогда

		Объект.СтоимостьРеглНаНачалоГода = ПараметрыДляРасчета.СтоимостьРеглНаНачалоГода;
		Объект.АмортизацияРеглНаНачалоГода = ПараметрыДляРасчета.АмортизацияРеглНаНачалоГода;
		Объект.АмортизацияРеглНаНачалоПериода = ПараметрыДляРасчета.АмортизацияРеглНаНачалоПериода;
		Объект.ДатаВводаВЭксплуатациюБУ = ПараметрыДляРасчета.ДатаВводаВЭксплуатациюБУ;

		Объект.ПараметрыЗаПериодБУ.Очистить();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПараметрыДляРасчета.ПараметрыЗаПериодБУ, Объект.ПараметрыЗаПериодБУ);
		
	КонецЕсли;
	
	КорректировкаСтоимостиИАмортизацииОСЛокализация.ЗаполнитьПараметрыПоУмолчанию(Объект, ПараметрыРасчета, ПараметрыДляРасчета);
	
КонецПроцедуры

#КонецОбласти

#Область РасчетАмортизации

// 
// Параметры:
//  Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС - Объект
//  ВспомогательныеПараметры - Структура -  Вспомогательные параметры
//  РазделУчета - Строка -  Раздел учета
Процедура НачатьРасчетАмортизацииПоЗаданнымПараметрам(Объект, ВспомогательныеПараметры = Неопределено, РазделУчета = Неопределено) Экспорт
	
	Если НЕ Объект.КорректировкаСПрошлойДаты
		ИЛИ Объект.НачалоПериода = '000101010000' Тогда
		Возврат;
	КонецЕсли;
	
	КорректировкаСтоимостиИАмортизацииОСЛокализация.НачатьРасчетАмортизацииПоЗаданнымПараметрам(Объект, РазделУчета);
	
	Если ВспомогательныеПараметры = Неопределено Тогда
		ВспомогательныеПараметры = Новый Структура;
		ПолучитьПараметрыУчетныхПолитикЗаПериод(Объект, ВспомогательныеПараметры);
		ВспомогательныеПараметры.Вставить("ЭтоАрендованныеОС", ЭтоАрендованныеОС(Объект));
	КонецЕсли;
	
	Если РазделУчета <> Неопределено Тогда
		
		СписокРазделовУчета = СтрРазделить(РазделУчета, ",");
	
	Иначе
		
		СписокРазделовУчета = Новый Массив;
		СписокРазделовУчета.Добавить("УУ");
		
		Если ВспомогательныеПараметры.РеглУчетВНАВедетсяНезависимо_ЗаПериод Тогда
			СписокРазделовУчета.Добавить("БУ");
		КонецЕсли;
		
	КонецЕсли;
	
	ТаблицыРасчета = Новый Структура;
	
	Если СписокРазделовУчета.Найти("УУ") <> Неопределено Тогда
		ТаблицыРасчета.Вставить("ПараметрыЗаПериодУУ", Объект.ПараметрыЗаПериод.Выгрузить());
	КонецЕсли;
	
	Если СписокРазделовУчета.Найти("БУ") <> Неопределено Тогда
		ТаблицыРасчета.Вставить("ПараметрыЗаПериодБУ", Объект.ПараметрыЗаПериодБУ.Выгрузить());
	КонецЕсли;
	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Организация", Объект.Организация);
	ПараметрыРасчета.Вставить("ДатаВводаВЭксплуатациюБУ", Объект.ДатаВводаВЭксплуатациюБУ);
	ПараметрыРасчета.Вставить("ДатаВводаВЭксплуатациюУУ", Объект.ДатаВводаВЭксплуатациюУУ);
	ПараметрыРасчета.Вставить("СтоимостьНаНачалоГода", Объект.СтоимостьНаНачалоГода);
	ПараметрыРасчета.Вставить("СтоимостьРеглНаНачалоГода", Объект.СтоимостьРеглНаНачалоГода);
	ПараметрыРасчета.Вставить("АмортизацияНаНачалоГода", Объект.АмортизацияНаНачалоГода);
	ПараметрыРасчета.Вставить("АмортизацияРеглНаНачалоГода", Объект.АмортизацияРеглНаНачалоГода);
	ПараметрыРасчета.Вставить("АмортизацияНаНачалоПериода", Объект.АмортизацияНаНачалоПериода);
	ПараметрыРасчета.Вставить("АмортизацияРеглНаНачалоПериода", Объект.АмортизацияРеглНаНачалоПериода);
	ПараметрыРасчета.Вставить("АмортизацияНУНаНачалоПериода", Объект.АмортизацияНУНаНачалоПериода);
	ПараметрыРасчета.Вставить("АмортизацияПРНаНачалоПериода", Объект.АмортизацияПРНаНачалоПериода);
	ПараметрыРасчета.Вставить("АмортизацияЦФНаНачалоПериода", Объект.АмортизацияЦФНаНачалоПериода);
	ПараметрыРасчета.Вставить("АмортизацияПРЦФНаНачалоПериода", Объект.АмортизацияПРЦФНаНачалоПериода);
	ПараметрыРасчета.Вставить("ЭтоАрендованныеОС", ВспомогательныеПараметры.ЭтоАрендованныеОС);
	
	РезультатРасчета = Документы.АмортизацияОС2_4.РассчитатьАмортизациюПоТаблице(ТаблицыРасчета, ПараметрыРасчета);
	
	Если РезультатРасчета.Свойство("РезультатРасчетаБУ") Тогда
		
		Для Каждого СтрокаПараметры Из Объект.ПараметрыЗаПериодБУ Цикл
			
			СтрокаАмортизация = РезультатРасчета.РезультатРасчетаБУ.Найти(СтрокаПараметры.Дата, "Период");
			
			Если СтрокаАмортизация <> Неопределено Тогда
				
				СтрокаПараметры.АмортизацияБУ = СтрокаАмортизация.АмортизацияБУ;
				СтрокаПараметры.АмортизацияПР = СтрокаАмортизация.АмортизацияПР;
				СтрокаПараметры.АмортизацияЦФ = СтрокаАмортизация.АмортизацияЦФ;
				
			Иначе
				
				СтрокаПараметры.АмортизацияБУ = 0;
				СтрокаПараметры.АмортизацияПР = 0;
				СтрокаПараметры.АмортизацияЦФ = 0;
			
			КонецЕсли;
			
		КонецЦикла;

	КонецЕсли;

	Если РезультатРасчета.Свойство("РезультатРасчетаУУ") Тогда
	
		Для Каждого СтрокаПараметры Из Объект.ПараметрыЗаПериод Цикл
			
			СтрокаАмортизация = РезультатРасчета.РезультатРасчетаУУ.Найти(СтрокаПараметры.Дата, "Период");
			
			Если СтрокаАмортизация <> Неопределено Тогда
				
				СтрокаПараметры.Амортизация = СтрокаАмортизация.Амортизация;
				СтрокаПараметры.АмортизацияРегл = СтрокаАмортизация.АмортизацияРегл;
				
			Иначе
				
				СтрокаПараметры.Амортизация = 0;
				СтрокаПараметры.АмортизацияРегл = 0;
			
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ПараметрыВыбораСтатейИАналитик(Объект) Экспорт
	
	ДоступностьПоОперации = 
		Объект.ВидИмущества = ПредопределенноеЗначение("Перечисление.ВидыИмущества.Собственное")
		И (Объект.КорректировкаСтоимости ИЛИ Объект.КорректировкаАмортизации);
			
	ПараметрыВыбораСтатьиИАналитики = Новый Массив;
	
	// СтатьяРасходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьиРасходов";
	ПараметрыВыбора.ДоступностьПоОперации = ДоступностьПоОперации;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивовРасходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("АналитикаАктивовПассивовРасходов");
	
	ПараметрыВыбораСтатьиИАналитики.Добавить(ПараметрыВыбора);
	
	// СтатьяДоходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья = "СтатьяДоходов";
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьиДоходов";
	ПараметрыВыбора.ДоступностьПоОперации = ДоступностьПоОперации;
	
	ПараметрыВыбора.ВыборСтатьиДоходов = Истина;
	ПараметрыВыбора.АналитикаДоходов = "АналитикаДоходов";
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивовДоходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяДоходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("АналитикаДоходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("АналитикаАктивовПассивовДоходов");
	
	ПараметрыВыбораСтатьиИАналитики.Добавить(ПараметрыВыбора);
	
	Возврат ПараметрыВыбораСтатьиИАналитики;
	
КонецФункции

Функция ПараметрыНастройкиСчетовУчета() Экспорт
	
	МассивПараметров = Новый Массив();
	
	#Область Расходы
	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ПутьКДанным = "Объект";
	ПараметрыНастройки.НастройкаСчетовУчета = "НастройкаСчетовУчетаРасходов";
	ПараметрыНастройки.СтатьяАктивовПассивов = "СтатьяРасходов";
	ПараметрыНастройки.АналитикаАктивовПассивов = "АналитикаАктивовПассивовРасходов";
	ПараметрыНастройки.Представление = "ПредставлениеОтраженияРасходовВРеглУчете";
	ПараметрыНастройки.ТипСтатьи = "ТипСтатьиРасходов";
	
	ПараметрыНастройки.Организация = "Объект.Организация";

	ПараметрыНастройки.ЭлементыФормы.Добавить("ПредставлениеОтраженияРасходовВРеглУчете");
	МассивПараметров.Добавить(ПараметрыНастройки);
	#КонецОбласти
		
	#Область Доходы
	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ПутьКДанным = "Объект";
	ПараметрыНастройки.НастройкаСчетовУчета = "НастройкаСчетовУчетаДоходов";
	ПараметрыНастройки.СтатьяАктивовПассивов = "СтатьяДоходов";
	ПараметрыНастройки.АналитикаАктивовПассивов = "АналитикаАктивовПассивовДоходов";
	ПараметрыНастройки.Представление = "ПредставлениеОтраженияДоходовВРеглУчете";
	ПараметрыНастройки.ТипСтатьи = "ТипСтатьиДоходов";

	ПараметрыНастройки.Организация = "Объект.Организация";

	ПараметрыНастройки.ЭлементыФормы.Добавить("ПредставлениеОтраженияДоходовВРеглУчете");
	МассивПараметров.Добавить(ПараметрыНастройки);
	#КонецОбласти
	
	Возврат МассивПараметров;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС - Объект
//  ВыбранныеСтроки - Массив, Неопределено -  Выбранные строки
Процедура ЗаполнитьПоДаннымУчета(Объект, ВыбранныеСтроки = Неопределено) Экспорт

	Если ВыбранныеСтроки <> Неопределено
		И ВыбранныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = КорректировкаСтоимостиИАмортизацииОСЛокализация.ТекстЗапросаЗаполнитьПоДаннымУчета();
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СтоимостьИАмортизация.ОсновноеСредство КАК ОсновноеСредство,
		|
		|	СУММА(СтоимостьИАмортизация.СтоимостьУУ) КАК СтоимостьУУ,
		|	СУММА(СтоимостьИАмортизация.СтоимостьБУ) КАК СтоимостьБУ,
		|	СУММА(СтоимостьИАмортизация.СтоимостьНУ) КАК СтоимостьНУ,
		|	СУММА(СтоимостьИАмортизация.СтоимостьПР) КАК СтоимостьПР,
		|	СУММА(СтоимостьИАмортизация.СтоимостьЦФ) КАК СтоимостьЦФ,
		|	СУММА(СтоимостьИАмортизация.ЗалоговаяСтоимость) КАК ЗалоговаяСтоимость,
		|	СУММА(СтоимостьИАмортизация.АмортизацияБУ) КАК АмортизацияБУ,
		|	СУММА(СтоимостьИАмортизация.АмортизацияНУ) КАК АмортизацияНУ,
		|	СУММА(СтоимостьИАмортизация.АмортизацияПР) КАК АмортизацияПР,
		|	СУММА(СтоимостьИАмортизация.АмортизацияУУ) КАК АмортизацияУУ,
		|	СУММА(СтоимостьИАмортизация.АмортизацияЦФ) КАК АмортизацияЦФ
		|
		|ПОМЕСТИТЬ СтоимостьИАмортизация
		|
		|ИЗ
		|	(ВЫБРАТЬ
		|		СтоимостьОСОстатки.ОсновноеСредство КАК ОсновноеСредство,
		|		СтоимостьОСОстатки.СтоимостьОстаток КАК СтоимостьУУ,
		|		СтоимостьОСОстатки.СтоимостьРеглОстаток КАК СтоимостьБУ,
		|		СтоимостьОСОстатки.СтоимостьНУОстаток КАК СтоимостьНУ,
		|		СтоимостьОСОстатки.СтоимостьПРОстаток КАК СтоимостьПР,
		|		СтоимостьОСОстатки.СтоимостьЦФОстаток КАК СтоимостьЦФ,
		|		СтоимостьОСОстатки.ЗалоговаяСтоимостьОстаток КАК ЗалоговаяСтоимость,
		|		0 КАК АмортизацияБУ,
		|		0 КАК АмортизацияНУ,
		|		0 КАК АмортизацияПР,
		|		0 КАК АмортизацияУУ,
		|		0 КАК АмортизацияЦФ
		|	ИЗ
		|		РегистрНакопления.СтоимостьОС.Остатки(
		|				&ПериодГраница,
		|				&КорректировкаСтоимости
		|					И Организация = &Организация
		|					И ОсновноеСредство В (&СписокОС)) КАК СтоимостьОСОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СтоимостьОС.ОсновноеСредство,
		|		СтоимостьОС.Стоимость,
		|		ВЫБОР
		|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -СтоимостьОС.СтоимостьРегл
		|			ИНАЧЕ СтоимостьОС.СтоимостьРегл
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -СтоимостьОС.СтоимостьНУ
		|			ИНАЧЕ СтоимостьОС.СтоимостьНУ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -СтоимостьОС.СтоимостьПР
		|			ИНАЧЕ СтоимостьОС.СтоимостьПР
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -СтоимостьОС.СтоимостьЦФ
		|			ИНАЧЕ СтоимостьОС.СтоимостьЦФ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -СтоимостьОС.ЗалоговаяСтоимость
		|			ИНАЧЕ СтоимостьОС.ЗалоговаяСтоимость
		|		КОНЕЦ,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
		|	ГДЕ
		|		СтоимостьОС.Регистратор = &Ссылка
		|		И СтоимостьОС.Организация = &Организация
		|		И СтоимостьОС.Период < &Период
		|		И &КорректировкаСтоимости
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		АмортизацияОСОстатки.ОсновноеСредство,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		-АмортизацияОСОстатки.АмортизацияРеглОстаток,
		|		-АмортизацияОСОстатки.АмортизацияНУОстаток,
		|		-АмортизацияОСОстатки.АмортизацияПРОстаток,
		|		-АмортизацияОСОстатки.АмортизацияОстаток,
		|		-АмортизацияОСОстатки.АмортизацияЦФОстаток
		|	ИЗ
		|		РегистрНакопления.АмортизацияОС.Остатки(
		|				&ПериодГраница,
		|				&КорректировкаАмортизации
		|					И Организация = &Организация
		|					И ОсновноеСредство В (&СписокОС)) КАК АмортизацияОСОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		АмортизацияОС.ОсновноеСредство,
		|		АмортизацияОС.Амортизация,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияРегл
		|			ИНАЧЕ АмортизацияОС.АмортизацияРегл
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияНУ
		|			ИНАЧЕ АмортизацияОС.АмортизацияНУ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияПР
		|			ИНАЧЕ АмортизацияОС.АмортизацияПР
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.Амортизация
		|			ИНАЧЕ АмортизацияОС.Амортизация
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияЦФ
		|			ИНАЧЕ АмортизацияОС.АмортизацияЦФ
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.АмортизацияОС КАК АмортизацияОС
		|	ГДЕ
		|		АмортизацияОС.Регистратор = &Ссылка
		|		И АмортизацияОС.Организация = &Организация
		|		И АмортизацияОС.Период < &Период
		|		И &КорректировкаАмортизации
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		АмортизацияОС.ОсновноеСредство,
		|		АмортизацияОС.Амортизация,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияРегл
		|			ИНАЧЕ АмортизацияОС.АмортизацияРегл
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияНУ
		|			ИНАЧЕ АмортизацияОС.АмортизацияНУ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияПР
		|			ИНАЧЕ АмортизацияОС.АмортизацияПР
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.Амортизация
		|			ИНАЧЕ АмортизацияОС.Амортизация
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияЦФ
		|			ИНАЧЕ АмортизацияОС.АмортизацияЦФ
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.АмортизацияОС КАК АмортизацияОС
		|	ГДЕ
		|		АмортизацияОС.Регистратор ССЫЛКА Документ.АмортизацияОС2_4
		|		И АмортизацияОС.Организация = &Организация
		|		И АмортизацияОС.Период < &Период
		|		И АмортизацияОС.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
		|		И &КорректировкаАмортизации
		|
		|	) КАК СтоимостьИАмортизация
		|
		|СГРУППИРОВАТЬ ПО
		|	СтоимостьИАмортизация.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокОС.Ссылка КАК ОсновноеСредство,
		|
		|	СтоимостьИАмортизация.СтоимостьУУ КАК СтоимостьУУ,
		|	СтоимостьИАмортизация.СтоимостьБУ КАК СтоимостьБУ,
		|	СтоимостьИАмортизация.СтоимостьНУ КАК СтоимостьНУ,
		|	СтоимостьИАмортизация.СтоимостьПР КАК СтоимостьПР,
		|	СтоимостьИАмортизация.СтоимостьЦФ КАК СтоимостьЦФ,
		|	СтоимостьИАмортизация.ЗалоговаяСтоимость КАК ЗалоговаяСтоимость,
		|	СтоимостьИАмортизация.АмортизацияБУ КАК АмортизацияБУ,
		|	СтоимостьИАмортизация.АмортизацияНУ КАК АмортизацияНУ,
		|	СтоимостьИАмортизация.АмортизацияПР КАК АмортизацияПР,
		|	СтоимостьИАмортизация.АмортизацияУУ КАК АмортизацияУУ,
		|	СтоимостьИАмортизация.АмортизацияЦФ КАК АмортизацияЦФ,
		|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
		|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ,
		|	ПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизацииУУ,
		|	ПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизацииРегл КАК СтоимостьДляВычисленияАмортизацииБУ
		|
		|ИЗ
		|	Справочник.ОбъектыЭксплуатации КАК СписокОС
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьИАмортизация КАК СтоимостьИАмортизация
		|		ПО СтоимостьИАмортизация.ОсновноеСредство = СписокОС.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
		|			&Период,
		|			&КорректировкаПервоначальнойСтоимости
		|				И Регистратор <> &Ссылка
		|				И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|				И Организация = &Организация
		|				И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведенияОС
		|		ПО (ПервоначальныеСведенияОС.ОсновноеСредство = СписокОС.Ссылка)
		|			И (ПервоначальныеСведенияОС.Организация = &Организация)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ.СрезПоследних(
		|			&Период,
		|			&КорректировкаПараметровРасчетаАмортизации
		|				И Регистратор <> &Ссылка
		|				И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|				И Организация = &Организация
		|				И ОсновноеСредство В (&СписокОС)) КАК ПараметрыАмортизацииОСУУ
		|		ПО (ПараметрыАмортизацииОСУУ.ОсновноеСредство = СписокОС.Ссылка)
		|			И (ПараметрыАмортизацииОСУУ.Организация = &Организация)
		|
		|ГДЕ
		|	СписокОС.Ссылка В (&СписокОС)
		|";
		
	КонецЕсли; 
	
	РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Ссылка,
		Новый Структура("СобытиеОС, ГоловнаяОрганизация", "СобытиеОС.ВидСобытияОС", "Организация.ГоловнаяОрганизация"));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", РеквизитыОбъекта.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ВедетсяРегламентированныйУчетВНА", ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА());
	Запрос.УстановитьПараметр("КорректировкаПервоначальнойСтоимости", Объект.КорректировкаПервоначальнойСтоимости);
	Запрос.УстановитьПараметр("КорректировкаАмортизации", Объект.КорректировкаАмортизации);
	Запрос.УстановитьПараметр("КорректировкаПараметровРасчетаАмортизации", Объект.КорректировкаПараметровРасчетаАмортизации);
	
	Если Объект.ВидИмущества = Перечисления.ВидыИмущества.Арендованное
		ИЛИ Объект.КорректировкаСтоимости Тогда
		Запрос.УстановитьПараметр("КорректировкаСтоимости", Истина);
	Иначе
		Запрос.УстановитьПараметр("КорректировкаСтоимости", Ложь);
	КонецЕсли;
	
	ЭтоИзменениеУП = Объект.КорректировкаВСвязиСИзменениемУчетнойПолитики <> 0 И РеквизитыОбъекта.СобытиеОС = Перечисления.ВидыСобытийОС.Прочее;
	Запрос.УстановитьПараметр("ИзменениеУП", ЭтоИзменениеУП);
	
	Период = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ПериодГраница", Новый Граница(Период, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ПериодУП", Период+1);
	
	СписокОС = Объект.ОС.Выгрузить(ВыбранныеСтроки).ВыгрузитьКолонку("ОсновноеСредство");
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	
	СтоимостьИАмортизация = Запрос.Выполнить().Выгрузить();
	СтоимостьИАмортизация.Индексы.Добавить("ОсновноеСредство");
	
	Если ВыбранныеСтроки <> Неопределено Тогда
		СписокСтрок = ВыбранныеСтроки;
	Иначе
		СписокСтрок = Объект.ОС;
	КонецЕсли; 
	
	Для каждого ДанныеСтроки Из СписокСтрок Цикл
		
		ДанныеУчета = СтоимостьИАмортизация.Найти(ДанныеСтроки.ОсновноеСредство, "ОсновноеСредство");
		Если ДанныеУчета <> Неопределено Тогда
			
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, ДанныеУчета);
		
		Иначе
			
			ДанныеСтроки.СтоимостьБУ = 0;
			ДанныеСтроки.СтоимостьНУ = 0;
			ДанныеСтроки.СтоимостьПР = 0;
			ДанныеСтроки.СтоимостьУУ = 0;
			ДанныеСтроки.СтоимостьЦФ = 0;
			ДанныеСтроки.АмортизацияБУ = 0;
			ДанныеСтроки.АмортизацияНУ = 0;
			ДанныеСтроки.АмортизацияПР = 0;
			ДанныеСтроки.АмортизацияУУ = 0;
			ДанныеСтроки.АмортизацияЦФ = 0;
			ДанныеСтроки.ЗалоговаяСтоимость = 0;
			ДанныеСтроки.ПервоначальнаяСтоимостьБУ = 0;
			ДанныеСтроки.ПервоначальнаяСтоимостьНУ = 0;
			ДанныеСтроки.ПервоначальнаяСтоимостьУУ = 0;
			ДанныеСтроки.СтоимостьДляВычисленияАмортизацииБУ = 0;
			ДанныеСтроки.СтоимостьДляВычисленияАмортизацииУУ = 0;
			ДанныеСтроки.ПРДляВычисленияАмортизации = 0;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
 
// 
// Параметры:
//  Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС - 
//  СлужебныеПараметрыФормы - Структура -
// 
Процедура ПолучитьПараметрыУчетныхПолитикЗаПериод(Объект, СлужебныеПараметрыФормы) Экспорт
	
	ПорядокНачисленияАмортизацииУпр = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
	ПорядокНачисленияАмортизацииРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
	ПорядокНачисленияАмортизацииУпрАренда = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
	ПорядокНачисленияАмортизацииАрендаРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
	РеглУчетВНАВедетсяНезависимо = Истина;
	ПрименяетсяФСБУ6 = Истина;
	
	ПараметрыРеглПолучены = КорректировкаСтоимостиИАмортизацииОСЛокализация.ПолучитьПараметрыУчетныхПолитикЗаПериод(
								Объект, СлужебныеПараметрыФормы);
	
	Если Объект.КорректировкаСПрошлойДаты
		И ЗначениеЗаполнено(Объект.НачалоПериода)
		И ЗначениеЗаполнено(Объект.Организация) Тогда
			
		ДатаДокумента = ?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса());
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР 
		|		КОГДА УчетнаяПолитика.ПорядокНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) 
		|			ТОГДА ИСТИНА 
		|		ИНАЧЕ ЛОЖЬ 
		|	КОНЕЦ), ИСТИНА) КАК СДатыПринятияКУчетуУпр,
		|
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР 
		|		КОГДА УчетнаяПолитика.ПорядокНачисленияАмортизацииРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) 
		|			ТОГДА ИСТИНА 
		|		ИНАЧЕ ЛОЖЬ 
		|	КОНЕЦ), ИСТИНА) КАК СДатыПринятияКУчетуРегл,
		|
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР 
		|		КОГДА УчетнаяПолитика.ПорядокНачисленияАмортизацииАренда = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) 
		|			ТОГДА ИСТИНА 
		|		ИНАЧЕ ЛОЖЬ 
		|	КОНЕЦ), ИСТИНА) КАК СДатыПринятияКУчетуУпрАренда,
		|
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР 
		|		КОГДА УчетнаяПолитика.ПорядокНачисленияАмортизацииАрендаРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) 
		|			ТОГДА ИСТИНА 
		|		ИНАЧЕ ЛОЖЬ 
		|	КОНЕЦ), ИСТИНА) КАК СДатыПринятияКУчетуРеглАренда,
		|
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР 
		|		КОГДА УчетнаяПолитика.ПорядокУчетаВНАРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАРегл.Независимый) 
		|			ТОГДА ИСТИНА 
		|		ИНАЧЕ ЛОЖЬ 
		|	КОНЕЦ), ИСТИНА) КАК РеглУчетВНАВедетсяНезависимо
		|
		|ИЗ
		|	(ВЫБРАТЬ
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииОС КАК ПорядокНачисленияАмортизации,
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииОСРегл КАК ПорядокНачисленияАмортизацииРегл,
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииАренда КАК ПорядокНачисленияАмортизацииАренда,
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииАрендаРегл КАК ПорядокНачисленияАмортизацииАрендаРегл,
		|		УчетнаяПолитика.ПорядокУчетаВНАРегл КАК ПорядокУчетаВНАРегл
		|	ИЗ
		|		РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК УчетнаяПолитика
		|	ГДЕ
		|		УчетнаяПолитика.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|		И УчетнаяПолитика.Организация = &ГоловнаяОрганизация
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииОС КАК ПорядокНачисленияАмортизации,
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииОСРегл КАК ПорядокНачисленияАмортизацииРегл,
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииАренда КАК ПорядокНачисленияАмортизацииАренда,
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииАрендаРегл КАК ПорядокНачисленияАмортизацииАрендаРегл,
		|		УчетнаяПолитика.ПорядокУчетаВНАРегл КАК ПорядокУчетаВНАРегл
		|	ИЗ
		|		РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(&НачалоПериода, Организация = &ГоловнаяОрганизация) КАК УчетнаяПолитика
		|
		|	) КАК УчетнаяПолитика
		|";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "ГоловнаяОрганизация"));
		Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода", НачалоДня(ДатаДокумента) - 1);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			Если Выборка.СДатыПринятияКУчетуУпр Тогда
				ПорядокНачисленияАмортизацииУпр = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
			Иначе
				ПорядокНачисленияАмортизацииУпр = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца;
			КонецЕсли;
			
			Если Выборка.СДатыПринятияКУчетуРегл Тогда
				ПорядокНачисленияАмортизацииРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
			Иначе
				ПорядокНачисленияАмортизацииРегл = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца;
			КонецЕсли;
			
			Если Выборка.СДатыПринятияКУчетуУпрАренда Тогда
				ПорядокНачисленияАмортизацииУпрАренда = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
			Иначе
				ПорядокНачисленияАмортизацииУпрАренда = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца;
			КонецЕсли;
			
			Если Выборка.СДатыПринятияКУчетуРеглАренда Тогда
				ПорядокНачисленияАмортизацииАрендаРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
			Иначе
				ПорядокНачисленияАмортизацииАрендаРегл = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца;
			КонецЕсли;
			
			РеглУчетВНАВедетсяНезависимо = Выборка.РеглУчетВНАВедетсяНезависимо;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
		"ПорядокНачисленияАмортизацииУпр_ЗаПериод",
		ПорядокНачисленияАмортизацииУпр,
		СлужебныеПараметрыФормы);
	
	ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
		"ПорядокНачисленияАмортизацииУпрАренда_ЗаПериод",
		ПорядокНачисленияАмортизацииУпрАренда,
		СлужебныеПараметрыФормы);
	
	Если НЕ ПараметрыРеглПолучены Тогда
		
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ПорядокНачисленияАмортизацииРегл_ЗаПериод",
			ПорядокНачисленияАмортизацииРегл,
			СлужебныеПараметрыФормы);
	
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ПорядокНачисленияАмортизацииРеглАренда_ЗаПериод",
			ПорядокНачисленияАмортизацииАрендаРегл,
			СлужебныеПараметрыФормы);
	
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"РеглУчетВНАВедетсяНезависимо_ЗаПериод",
			РеглУчетВНАВедетсяНезависимо,
			СлужебныеПараметрыФормы);
		
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ПрименяетсяФСБУ6_ЗаПериод",
			ПрименяетсяФСБУ6,
			СлужебныеПараметрыФормы);
			
	КонецЕсли;
		
КонецПроцедуры

Функция ЭтоАрендованныеОС(Объект) Экспорт
	
	ЭтоАрендованныеОС = Ложь;
	Для Каждого ДанныеСтроки Из Объект.ОС Цикл
		Если ЗначениеЗаполнено(ДанныеСтроки.ОсновноеСредство) Тогда
			ЭтоАрендованныеОС = УчетАрендованныхОС.ОсновноеСредствоПолученоВАренду(
									ДанныеСтроки.ОсновноеСредство,
									?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса()));
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЭтоАрендованныеОС;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.КорректировкаСтоимостиИАмортизацииОС.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.17.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Многопоточный = Истина;
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("3565c48d-ce97-490b-a49a-f12978a4c012");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.КорректировкаСтоимостиИАмортизацииОС.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Обновляет документы ""Корректировка стоимости и амортизации ОС"":
								  |- заполняет новые реквизиты ""Корректировка стоимости"", ""Корректировка первоначальной стоимости"", ""Корректировка амортизации"", ""Корректировка параметров расчета амортизации"".';
								  |en = 'Updates the ""Adjust fixed asset cost and depreciation:
								  |- Fills the new ""Cost adjustment"", ""Initial cost adjustment"", ""Depreciation adjustment"", and ""Adjustment of depreciation calculation parameters"" attributes.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.КорректировкаСтоимостиИАмортизацииОС.ПолноеИмя());

	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.КорректировкаСтоимостиИАмортизацииОС.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.КорректировкаСтоимостиИАмортизацииОС.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.КорректировкаСтоимостиИАмортизацииОС";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Ссылка.Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Ссылка");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.ВидИмущества <> ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Арендованное)
	|	И НЕ ДанныеДокумента.КорректировкаСтоимости
	|	И НЕ ДанныеДокумента.КорректировкаПервоначальнойСтоимости
	|	И НЕ ДанныеДокумента.КорректировкаАмортизации
	|	И НЕ ДанныеДокумента.КорректировкаПараметровРасчетаАмортизации
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);

	СписокСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, СписокСсылок);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"Документ.КорректировкаСтоимостиИАмортизацииОС.ОбработатьДанныеДляПереходаНаНовуюВерсию");
		
	ПолноеИмяОбъекта = "Документ.КорректировкаСтоимостиИАмортизацииОС";
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;

	Для Каждого Документ Из ОбновляемыеДанные Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Документ.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = Документ.Ссылка.ПолучитьОбъект(); // ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			Если ДокументОбъект.ВидИмущества <> Перечисления.ВидыИмущества.Арендованное
				И НЕ ДокументОбъект.КорректировкаСтоимости
				И НЕ ДокументОбъект.КорректировкаПервоначальнойСтоимости
				И НЕ ДокументОбъект.КорректировкаАмортизации
				И НЕ ДокументОбъект.КорректировкаПараметровРасчетаАмортизации Тогда
				
				ДокументОбъект.КорректировкаСтоимости = Истина;
				ДокументОбъект.КорректировкаПервоначальнойСтоимости = Истина;
				ДокументОбъект.КорректировкаАмортизации = Истина;
				ДокументОбъект.КорректировкаПараметровРасчетаАмортизации = Истина;
				
			КонецЕсли;

			Если ДокументОбъект.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ДокументОбъект.Ссылка);
			КонецЕсли;
			
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;

			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Документ.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
 	ВнеоборотныеАктивыСлужебный.ПроверитьВыполнениеОбработчика(
 		ПроблемныхОбъектов, 
 		ОбъектовОбработано, 
 		ПолноеИмяОбъекта);
 		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, ОбъектовОбработано);	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
