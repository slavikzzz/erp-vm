
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнитьРеквизитыПоУмолчанию();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	МассивНепроверяемыхРеквизитов.Добавить("ФизическиеЛица.Контрагент");
	
	НайденныеСтроки = ФизическиеЛица.НайтиСтроки(Новый Структура("ПрочийАкционер, Контрагент", Истина, Справочники.Контрагенты.ПустаяСсылка()));
	
	Для Каждого Строка Из НайденныеСтроки Цикл
		
		ТекстСообщения = НСтр("ru = 'Не заполнен акционер в строке %1 списка ""Физические лица""';
								|en = 'Stockholder is not filled in in line %1 of the ""Individuals"" list'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Строка.НомерСтроки),
			ЭтотОбъект,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ФизическиеЛица", Строка.НомерСтроки, "Контрагент"),
			,
			Отказ);

	КонецЦикла;
	
	Если ФизическиеЛица.Количество() = 0 И ЮридическиеЛица.Количество() = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указаны акционеры в списках получателей дивидендов';
				|en = 'Stockholders are not specified in the dividend recipient lists'"),
			ЭтотОбъект,
			"ФизическиеЛица",
			,
			Отказ);
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(
		ПроверяемыеРеквизиты,
		МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	СуммаДокумента = ФизическиеЛица.Итог("Начислено") + ЮридическиеЛица.Итог("Начислено");
	ПериодУчетнойПолитики = ?(ЗначениеЗаполнено(Дата), КонецМесяца(Дата), КонецМесяца(ТекущаяДатаСеанса()));
	ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("УчетнаяПолитикаБухУчета",
		Организация,
		ПериодУчетнойПолитики);
	
	Если ПараметрыУчетнойПолитики <> Неопределено Тогда
		ПроводкиПоРаботникам = ПараметрыУчетнойПолитики.ПроводкиПоРаботникам
	КонецЕсли;
	
	Для Каждого Строка Из ФизическиеЛица Цикл
		Если Не ЗначениеЗаполнено(Строка.РегистрацияВНалоговомОргане) Тогда
			Строка.РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане(Организация, Дата);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРеквизитыПоУмолчанию()
	
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию();
	Ответственный = Пользователи.ТекущийПользователь();
	Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли