#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("ИнтеграцияБЗК");
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("ОборотныеРегистрыУправленческогоУчета");
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.НачислениеДивидендов") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДивиденды(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Начисление дивидендов".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.НачислениеДивидендов) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.НачислениеДивидендов.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.НачислениеДивидендов);
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьРеглУчет";
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
	
КонецПроцедуры

// Возвращает текст запроса для отражения в регл. учете.
//
// Возвращаемое значение:
//   Строка - текст отражения в регл. учете.
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстДивидендыСотрудникамСДетализацией = "
	// Начисление дивидендов сотрудникам с детализацией по сотрудникам (Дт <84.01> :: Кт <70>).
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.Начислено КАК Сумма,
	|	Строки.Начислено / КурсВалютыУпрУчета.Курс КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибыльПодлежащаяРаспределению) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда) КАК СчетКт,
	|	Строки.ФизическоеЛицо КАК СубконтоКт1,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление дивидендов сотрудникам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов.ФизическиеЛица КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|	
	|ГДЕ 
	|	НЕ Строки.ПрочийАкционер
	|	И Операция.ПроводкиПоРаботникам
	|";
	
	ТекстНДФЛДивидендыСотрудникамСДетализацией = "
	// Начисление НДФЛ дивидендов сотрудникам с детализацией по сотрудникам (Дт <70> :: Кт <68.01>).
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР
	|		КОГДА Операция.Дата >= &ДатаНачалаДействия176ФЗ
	|			ТОГДА Строки.НДФЛ + Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		КОГДА Строки.НалогНаПрибыльКЗачету > Строки.НДФЛСПревышения
	|			ТОГДА Строки.НДФЛ + Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		ИНАЧЕ Строки.НДФЛ
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Строки.НалогНаПрибыльКЗачету > Строки.НДФЛСПревышения
	|			ТОГДА Строки.НДФЛ + Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		ИНАЧЕ Строки.НДФЛ
	|	КОНЕЦ / КурсВалютыУпрУчета.Курс КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда) КАК СчетДт,
	|	Строки.ФизическоеЛицо КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДФЛ) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	Строки.РегистрацияВНалоговомОргане КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДФЛ с дивидендов сотрудникам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов.ФизическиеЛица КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|	
	|ГДЕ 
	|	НЕ Строки.ПрочийАкционер
	|	И Операция.ПроводкиПоРаботникам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР
	|		КОГДА Строки.НалогНаПрибыльКЗачету < Строки.НДФЛСПревышения
	|			ТОГДА Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Строки.НалогНаПрибыльКЗачету < Строки.НДФЛСПревышения
	|			ТОГДА Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		ИНАЧЕ 0
	|	КОНЕЦ / КурсВалютыУпрУчета.Курс КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда) КАК СчетДт,
	|	Строки.ФизическоеЛицо КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДФЛ_ДоходыСвышеПредельнойВеличины) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	Строки.РегистрацияВНалоговомОргане КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДФЛ с дивидендов сотрудникам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов.ФизическиеЛица КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|	
	|ГДЕ 
	|	НЕ Строки.ПрочийАкционер
	|	И Операция.Дата < &ДатаНачалаДействия176ФЗ
	|	И Операция.ПроводкиПоРаботникам
	|";
	
	ТекстДивидендыСотрудникамБезДетализации = "
	// Начисление дивидендов сотрудникам сводно (Дт <84.01> :: Кт <70>)
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(Строки.Начислено) КАК Сумма,
	|	СУММА(Строки.Начислено / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибыльПодлежащаяРаспределению) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление дивидендов сотрудникам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов.ФизическиеЛица КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|	
	|ГДЕ 
	|	НЕ Строки.ПрочийАкционер
	|	И НЕ Операция.ПроводкиПоРаботникам
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация";
	
	ТекстНДФЛДивидендыСотрудникамБезДетализации = "
	// Начисление НДФЛ с дивидендов сотрудникам сводно (Дт <84.01> :: Кт <70>)
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ВЫБОР
	|		КОГДА Операция.Дата >= &ДатаНачалаДействия176ФЗ
	|			ТОГДА Строки.НДФЛ + Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		КОГДА Строки.НалогНаПрибыльКЗачету > Строки.НДФЛСПревышения
	|			ТОГДА Строки.НДФЛ + Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		ИНАЧЕ Строки.НДФЛ
	|	КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|		КОГДА Строки.НалогНаПрибыльКЗачету > Строки.НДФЛСПревышения
	|			ТОГДА Строки.НДФЛ + Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		ИНАЧЕ Строки.НДФЛ
	|	КОНЕЦ / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДФЛ) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	Строки.РегистрацияВНалоговомОргане КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДФЛ с дивидендов сотрудникам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов.ФизическиеЛица КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|	
	|ГДЕ 
	|	НЕ Строки.ПрочийАкционер
	|	И НЕ Операция.ПроводкиПоРаботникам
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Строки.РегистрацияВНалоговомОргане
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ВЫБОР
	|		КОГДА Строки.НалогНаПрибыльКЗачету < Строки.НДФЛСПревышения
	|			ТОГДА Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|		КОГДА Строки.НалогНаПрибыльКЗачету < Строки.НДФЛСПревышения
	|			ТОГДА Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		ИНАЧЕ 0
	|	КОНЕЦ / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДФЛ_ДоходыСвышеПредельнойВеличины) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	Строки.РегистрацияВНалоговомОргане КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДФЛ с дивидендов сотрудникам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов.ФизическиеЛица КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|	
	|ГДЕ 
	|	НЕ Строки.ПрочийАкционер
	|	И Операция.Дата < &ДатаНачалаДействия176ФЗ
	|	И НЕ Операция.ПроводкиПоРаботникам
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Строки.РегистрацияВНалоговомОргане";
	
	ТекстДивидендыПрочимФизическимЛицам = "
	// Начисление дивидендов прочим физическим лицам (Дт <84.01> :: Кт <75.2>)
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(Строки.Начислено) КАК Сумма,
	|	СУММА(Строки.Начислено / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибыльПодлежащаяРаспределению) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыплатеДоходов) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление дивидендов прочим физическим лицам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов.ФизическиеЛица КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|	
	|ГДЕ 
	|	Строки.ПрочийАкционер
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Строки.Контрагент";
	
	ТекстНДФЛДивидендыПрочимФизическимЛицам = "
	// Начисление НДФЛ с дивидендов прочим физическим лицам (Дт <84.01> :: Кт <75.2>)
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ВЫБОР
	|		КОГДА Операция.Дата >= &ДатаНачалаДействия176ФЗ
	|			ТОГДА Строки.НДФЛ + Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		КОГДА Строки.НалогНаПрибыльКЗачету > Строки.НДФЛСПревышения
	|			ТОГДА Строки.НДФЛ + Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		ИНАЧЕ Строки.НДФЛ
	|	КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|		КОГДА Строки.НалогНаПрибыльКЗачету > Строки.НДФЛСПревышения
	|			ТОГДА Строки.НДФЛ + Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		ИНАЧЕ Строки.НДФЛ
	|	КОНЕЦ / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыплатеДоходов) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДФЛ) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	Строки.РегистрацияВНалоговомОргане КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДФЛ с дивидендов прочим физическим лицам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов.ФизическиеЛица КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|	
	|ГДЕ 
	|	Строки.ПрочийАкционер
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Строки.Контрагент,
	|	Строки.РегистрацияВНалоговомОргане
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ВЫБОР
	|		КОГДА Строки.НалогНаПрибыльКЗачету < Строки.НДФЛСПревышения
	|			ТОГДА Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|		КОГДА Строки.НалогНаПрибыльКЗачету < Строки.НДФЛСПревышения
	|			ТОГДА Строки.НДФЛСПревышения - Строки.НалогНаПрибыльКЗачету
	|		ИНАЧЕ 0
	|	КОНЕЦ / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыплатеДоходов) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДФЛ_ДоходыСвышеПредельнойВеличины) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	Строки.РегистрацияВНалоговомОргане КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДФЛ с дивидендов прочим физическим лицам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов.ФизическиеЛица КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|	
	|ГДЕ 
	|	Строки.ПрочийАкционер
	|	И Операция.Дата < &ДатаНачалаДействия176ФЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Строки.Контрагент,
	|	Строки.РегистрацияВНалоговомОргане";
	
	ТекстДивидендыЮридическимЛицам = "
	// Начисление дивидендов юридическим лицам (Дт <84.01> :: Кт <75.2>)
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(Строки.Начислено) КАК Сумма,
	|	СУММА(Строки.Начислено / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибыльПодлежащаяРаспределению) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыплатеДоходов) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление дивидендов юридическим лицам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачислениеДивидендов.ЮридическиеЛица КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Строки.Контрагент";
	
	ТекстНалогНаПрибыльДивидендыЮридическимЛицам = "
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	СУММА(Строки.НалогНаПрибыль) КАК Сумма,
	|	СУММА(Строки.НалогНаПрибыль / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыплатеДоходов) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НалогНаПрибыльНалоговогоАгента) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Налог на прибыль с дивидендов юридическим лицам"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачислениеДивидендов КАК Операция
	|		ПО ДокументыКОтражению.Ссылка = Операция.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачислениеДивидендов.ЮридическиеЛица КАК Строки
	|		ПО (Строки.Ссылка = Операция.Ссылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Строки.Контрагент
	|";
	
	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстДивидендыСотрудникамСДетализацией);
	ТекстыОтражения.Добавить(ТекстДивидендыСотрудникамБезДетализации);
	ТекстыОтражения.Добавить(ТекстДивидендыПрочимФизическимЛицам);
	ТекстыОтражения.Добавить(ТекстДивидендыЮридическимЛицам);
	ТекстыОтражения.Добавить(ТекстНДФЛДивидендыСотрудникамСДетализацией);
	ТекстыОтражения.Добавить(ТекстНДФЛДивидендыСотрудникамБезДетализации);
	ТекстыОтражения.Добавить(ТекстНДФЛДивидендыПрочимФизическимЛицам);
	ТекстыОтражения.Добавить(ТекстНалогНаПрибыльДивидендыЮридическимЛицам);
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете.
//
// Возвращаемое значение:
//   Строка - текст построения временной таблицы для отражения в регл. учете.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	ТекстыЗапроса = Новый Массив;
	
	#Область ПериодыИОрганизации
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.ДатаОтражения, МЕСЯЦ) КАК ДатаОтражения
	|ПОМЕСТИТЬ ПериодыИОрганизации
	|ИЗ
	|	(ВЫБРАТЬ
	|		РазрезыКОтражению.Организация КАК Организация,
	|		РазрезыКОтражению.ДатаОтражения КАК ДатаОтражения
	|	ИЗ
	|		РазрезыКОтражению КАК РазрезыКОтражению
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫРАЗИТЬ(РазрезыКОтражению.Организация КАК Справочник.Организации).ГоловнаяОрганизация,
	|		РазрезыКОтражению.ДатаОтражения
	|	ИЗ
	|		РазрезыКОтражению КАК РазрезыКОтражению) КАК ВложенныйЗапрос
	|ГДЕ
	|	НЕ ВложенныйЗапрос.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.ДатаОтражения, МЕСЯЦ)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ПоследниеРегистрацииВНО
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПериодыИОрганизации.Организация КАК Организация,
	|	МАКСИМУМ(ЕСТЬNULL(ИсторияРегистрацийВНалоговомОргане.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК Период,
	|	НАЧАЛОПЕРИОДА(ПериодыИОрганизации.ДатаОтражения, МЕСЯЦ) КАК ДатаОтражения
	|ПОМЕСТИТЬ ПоследниеРегистрацииВНО
	|ИЗ
	|	ПериодыИОрганизации КАК ПериодыИОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистрацийВНалоговомОргане
	|		ПО ПериодыИОрганизации.Организация = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
	|			И ПериодыИОрганизации.ДатаОтражения >= ИсторияРегистрацийВНалоговомОргане.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыИОрганизации.Организация,
	|	НАЧАЛОПЕРИОДА(ПериодыИОрганизации.ДатаОтражения, МЕСЯЦ)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	// Добавим пустой элемент для того чтобы итоговый запрос заканчивался на разделитель
	ТекстыЗапроса.Добавить("");
	
	Возврат СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.Дата КАК Дата,
	|	Документ.ДатаВыплаты КАК ДатаВыплаты,
	|	Документ.Валюта КАК Валюта,
	|	Документ.Организация КАК Организация,
	|	Документ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Документ.Номер КАК Номер,
	|	Документ.Комментарий КАК Комментарий,
	|	Документ.Проведен КАК Проведен,
	|	Документ.ПометкаУдаления КАК ПометкаУдаления,
	|	Документ.СуммаДокумента КАК СуммаДокумента,
	|	Документ.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.НачислениеДивидендов КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка";

	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Реквизиты.Валюта,
		Неопределено,
		Реквизиты.Дата,
		Реквизиты.Организация);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",	Коэффициенты.КоэффициентПересчетаВВалютуУпр);
	Запрос.УстановитьПараметр("Ссылка",					ДокументСсылка);
	Запрос.УстановитьПараметр("Организация",			Реквизиты.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента",			Реквизиты.Дата);
	Запрос.УстановитьПараметр("ДатаВыплаты",			Реквизиты.ДатаВыплаты);
	Запрос.УстановитьПараметр("КотловойУчетНДФЛ",		Реквизиты.Дата >= НалоговыйУчет.ДатаНачалаДействия176ФЗ());
	Запрос.УстановитьПараметр("ВключатьВДекларациюПоНалогуНаПрибыль", Реквизиты.ВключатьВДекларациюПоНалогуНаПрибыль);
	Запрос.УстановитьПараметр("НДФЛПоПрогрессивнойШкале",
		Реквизиты.ДатаВыплаты >= УчетНДФЛ.ПараметрыРасчетаНДФЛПоПрогрессивнойШкале().НачалоРасчетаНДФЛПоПрогрессивнойШкале);
	
	Запрос.УстановитьПараметр("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.НачислениеДивидендов"));
	Запрос.УстановитьПараметр("Номер", Реквизиты.Номер);
	Запрос.УстановитьПараметр("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	Запрос.УстановитьПараметр("Комментарий", Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("Проведен", Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления", Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("СуммаДокумента", Реквизиты.СуммаДокумента);
	Запрос.УстановитьПараметр("Валюта", Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Период", Реквизиты.Дата);
	Запрос.УстановитьПараметр("Ответственный", Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("ХозОперацияДляРеестра", Перечисления.ХозяйственныеОперации.НачислениеДивидендов);
	
КонецПроцедуры

Функция ТекстЗапросаВТТаблицаФизическихЛиц(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВТТаблицаФизическихЛиц"; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Ссылка КАК Ссылка,
	|	ДивидендыФизическимЛицам.ФизическоеЛицо,
	|	ДивидендыФизическимЛицам.Начислено,
	|	ДивидендыФизическимЛицам.СтавкаНДФЛ,
	|	ДивидендыФизическимЛицам.НДФЛ,
	|	ДивидендыФизическимЛицам.НДФЛСПревышения,
	|	ДивидендыФизическимЛицам.ВычетПоНДФЛ,
	|	ДивидендыФизическимЛицам.НалогНаПрибыльКЗачету,
	|	ДивидендыФизическимЛицам.КВыплате,
	|	НЕ ДивидендыФизическимЛицам.ПрочийАкционер КАК ЭтоСотрудник
	|ПОМЕСТИТЬ ВТТаблицаФизическихЛиц
	|ИЗ
	|	Документ.НачислениеДивидендов.ФизическиеЛица КАК ДивидендыФизическимЛицам
	|ГДЕ
	|	ДивидендыФизическимЛицам.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВТТаблицаФизическихЛиц", ТекстыЗапроса) Тогда
		ТекстЗапросаВТТаблицаФизическихЛиц(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&ДатаДокумента КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги) КАК Статья,
	|	ВЫБОР
	|		КОГДА &КотловойУчетНДФЛ = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛ)
	|		КОГДА ТаблицаФизическихЛиц.ЭтоСотрудник
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛДивидендыСотрудникам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛДивиденды)
	|	КОНЕЦ КАК Аналитика,
	|	СУММА(ВЫРАЗИТЬ((ТаблицаФизическихЛиц.НДФЛ + ТаблицаФизическихЛиц.НДФЛСПревышения) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))) КАК Сумма
	|ИЗ
	|	ВТТаблицаФизическихЛиц КАК ТаблицаФизическихЛиц
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА &КотловойУчетНДФЛ = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛ)
	|		КОГДА ТаблицаФизическихЛиц.ЭтоСотрудник
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛДивидендыСотрудникам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛДивиденды)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДатаДокумента КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки) КАК Статья,
	|	Неопределено КАК Аналитика,
	|	СУММА(ВЫРАЗИТЬ((ТаблицаФизическихЛиц.НДФЛ + ТаблицаФизическихЛиц.НДФЛСПревышения) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))) КАК Сумма
	|ИЗ
	|	ВТТаблицаФизическихЛиц КАК ТаблицаФизическихЛиц
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВТТаблицаФизическихЛиц", ТекстыЗапроса) Тогда
		ТекстЗапросаВТТаблицаФизическихЛиц(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&ДатаДокумента                                                КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНалоговВзносовСЗаработнойПлаты) КАК ХозяйственнаяОперация,
	|	&Организация                                                  КАК Организация,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги) КАК Статья,
	|	ВЫБОР
	|		КОГДА &КотловойУчетНДФЛ = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛ)
	|		КОГДА ТаблицаФизическихЛиц.ЭтоСотрудник
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛДивидендыСотрудникам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛДивиденды)
	|	КОНЕЦ                                                         КАК АналитикаАктивовПассивов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки) КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                                                  КАК КорАналитикаАктивовПассивов,
	|	СУММА(ВЫРАЗИТЬ((ТаблицаФизическихЛиц.НДФЛ + ТаблицаФизическихЛиц.НДФЛСПревышения) * &КоэффициентПересчетаВВалютуУпр  КАК ЧИСЛО(31,2))) КАК Сумма,
	|	СУММА(ВЫРАЗИТЬ((ТаблицаФизическихЛиц.НДФЛ + ТаблицаФизическихЛиц.НДФЛСПревышения) * &КоэффициентПересчетаВВалютуУпр  КАК ЧИСЛО(31,2))) КАК СуммаУпр,
	|	СУММА(ТаблицаФизическихЛиц.НДФЛ + ТаблицаФизическихЛиц.НДФЛСПревышения) КАК СуммаРегл
	|ИЗ
	|	ВТТаблицаФизическихЛиц КАК ТаблицаФизическихЛиц
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА &КотловойУчетНДФЛ = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛ)
	|		КОГДА ТаблицаФизическихЛиц.ЭтоСотрудник
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛДивидендыСотрудникам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛДивиденды)
	|	КОНЕЦ
	|	
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДивиденды(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СведенияОДоходахНДФЛ";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВТТаблицаФизическихЛиц", ТекстыЗапроса) Тогда
		ТекстЗапросаВТТаблицаФизическихЛиц(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаФизическихЛиц.ЭтоСотрудник 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НФДЛДивидендыСотрудникам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НФДЛДивиденды)
	|	КОНЕЦ КАК НачислениеУдержание,
	|	ВЫБОР
	|		КОГДА ТаблицаФизическихЛиц.ЭтоСотрудник
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НФДЛДивидендыСотрудникам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НФДЛДивиденды)
	|	КОНЕЦ КАК ВидУдержания,
	|	ТаблицаФизическихЛиц.ФизическоеЛицо КАК Акционер,
	|	ТаблицаФизическихЛиц.Начислено КАК Начислено,
	|	ВЫБОР &НДФЛПоПрогрессивнойШкале
	|		КОГДА ЛОЖЬ ТОГДА ТаблицаФизическихЛиц.ВычетПоНДФЛ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВычетПоНДФЛ,
	|	ВЫБОР &НДФЛПоПрогрессивнойШкале
	|		КОГДА ИСТИНА ТОГДА ТаблицаФизическихЛиц.НалогНаПрибыльКЗачету
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НалогНаПрибыльКЗачету,
	|	ТаблицаФизическихЛиц.НДФЛ КАК НДФЛ,
	|	ТаблицаФизическихЛиц.НДФЛСПревышения КАК НДФЛСПревышения,
	|	ТаблицаФизическихЛиц.КВыплате КАК КВыплате
	|ИЗ
	|	ВТТаблицаФизическихЛиц КАК ТаблицаФизическихЛиц
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ТаблицаДивиденды");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаФизическихЛиц.ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ТаблицаФизическихЛиц.ЭтоСотрудник
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДивидендыСотрудников)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.Дивиденды)
	|	КОНЕЦ КАК Начисление,
	|	ТаблицаФизическихЛиц.Ссылка КАК ДокументОснование,
	|	ТаблицаФизическихЛиц.Начислено КАК Сумма
	|ИЗ
	|	ВТТаблицаФизическихЛиц КАК ТаблицаФизическихЛиц
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ТаблицаНачисления");
	
	// Используется для получения настроек начисления дивидендов при отражении движений в регистр
	ТекстЗапросаРеквизитов = 
	"ВЫБРАТЬ
	|	&Ссылка,
	|	&Организация,
	|	&ДатаВыплаты,
	|	&ВключатьВДекларациюПоНалогуНаПрибыль";
	
	ТекстыЗапроса.Добавить(ТекстЗапросаРеквизитов, "ТаблицаПараметрыНачисленияДивидендов");
	
	Возврат "";
	
КонецФункции

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ДатаДокумента 				 		КАК Период,
	|	&Организация 				 		КАК Организация,
	|	НАЧАЛОПЕРИОДА(&ДатаДокумента, ДЕНЬ) КАК ДатаОтражения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДатаДокумента 				 		КАК Период,
	|	&Организация 				 		КАК Организация,
	|	НАЧАЛОПЕРИОДА(&ДатаВыплаты, ДЕНЬ) 	КАК ДатаОтражения
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(&ДатаДокумента, ДЕНЬ) <> НАЧАЛОПЕРИОДА(&ДатаВыплаты, ДЕНЬ)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	&ХозОперацияДляРеестра КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Партнер,
	|	НЕОПРЕДЕЛЕНО КАК МестоХранения,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	&Период КАК ДатаДокументаИБ,
	|	&Ссылка КАК Ссылка,
	|	&Номер КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО КАК Статус,
	|	&Ответственный КАК Ответственный,
	|	&Ответственный КАК Автор,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО КАК Дополнительно,
	|	&Комментарий КАК Комментарий,
	|	&Проведен КАК Проведен,
	|	&ПометкаУдаления КАК ПометкаУдаления,
	|	&Период КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать КАК НомерПервичногоДокумента,
	|	&СуммаДокумента КАК Сумма,
	|	&Валюта КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ЛОЖЬ КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК ИсправляемыйДокумент,
	|	&Период КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.НачислениеДивидендов";
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.НачислениеДивидендов"));
	ЗначенияПараметров.Вставить("ХозОперацияДляРеестра", Перечисления.ХозяйственныеОперации.НачислениеДивидендов);
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "";
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента, Ложь);
	Иначе
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента);
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Справка о списании депонированной зарплаты.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.НачислениеДивидендов";
	КомандаПечати.Идентификатор = "ПФ_MXL_СправкаОДивидендах";
	КомандаПечати.Представление = НСтр("ru = 'Справка о дивидендах';
										|en = 'Certificate of dividends'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;

КонецПроцедуры

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы.
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	НужноПечататьСправку = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СправкаОДивидендах");
	
	Если НужноПечататьСправку Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_СправкаОДивидендах",
			НСтр("ru = 'Справка о дивидендах';
				|en = 'Certificate of dividends'"), ПечатьСправки(МассивОбъектов, ОбъектыПечати), ,
			"Документ.НачислениеДивидендов.ПФ_MXL_СправкаОДивидендах");
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьСправки(МассивОбъектов, ОбъектыПечати)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СправкаОДивидендах";
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ДокументРезультат.АвтоМасштаб = Истина;
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.НачислениеДивидендов.ПФ_MXL_СправкаОДивидендах");
	
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		ТекущаяТаблицаФЛ = Истина;
		
		ДанныеДокумента = ДанныеПечати.Значение;
		
		Если ДанныеДокумента.Форма2021года Тогда
			ОбластьМакетаШапкаФЛ = Макет.ПолучитьОбласть("ШапкаФЛ_2021");
			ОбластьМакетаСтрокаФЛ = Макет.ПолучитьОбласть("СтрокаФЛ_2021");
			ОбластьМакетаИтогФЛ = Макет.ПолучитьОбласть("ИтогФЛ_2021");
		Иначе
			ОбластьМакетаШапкаФЛ = Макет.ПолучитьОбласть("ШапкаФЛ");
			ОбластьМакетаСтрокаФЛ = Макет.ПолучитьОбласть("СтрокаФЛ");
			ОбластьМакетаИтогФЛ = Макет.ПолучитьОбласть("ИтогФЛ");
		КонецЕсли;
		
		ОбластьМакетаШапкаЮЛ = Макет.ПолучитьОбласть("ШапкаЮЛ");
		ОбластьМакетаСтрокаЮЛ = Макет.ПолучитьОбласть("СтрокаЮЛ");
		ОбластьМакетаИтогЮЛ = Макет.ПолучитьОбласть("ИтогЮЛ");
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		ОбластьМакетаШапка.Параметры.Заполнить(ДанныеДокумента);
		ДокументРезультат.Вывести(ОбластьМакетаШапка);
		
		Если ДанныеДокумента.ТабличнаяЧастьФЛ.Количество() > 0 Тогда
			
			ДокументРезультат.Вывести(ОбластьМакетаШапкаФЛ);
			
			СтруктураИтогаФЛ = Новый Структура();
			СтруктураИтогаФЛ.Вставить("НДФЛ",          0);
			СтруктураИтогаФЛ.Вставить("Начислено",     0);
			СтруктураИтогаФЛ.Вставить("СуммаВычета",   0);
			СтруктураИтогаФЛ.Вставить("СуммаКВыплате", 0);
			СтруктураИтогаФЛ.Вставить("НалогНаПрибыльКЗачету", 0);
			
			Для каждого ДанныеСотрудника Из ДанныеДокумента.ТабличнаяЧастьФЛ Цикл
				
				МассивВыводимыхОбластей = Новый Массив;
				МассивВыводимыхОбластей.Добавить(ОбластьМакетаСтрокаФЛ);
				МассивВыводимыхОбластей.Добавить(ОбластьМакетаИтогФЛ);
				МассивВыводимыхОбластей.Добавить(ОбластьМакетаПодвал);
				
				Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, МассивВыводимыхОбластей) Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ДокументРезультат.Вывести(ОбластьМакетаШапкаФЛ);
				КонецЕсли;
				
				ОбластьМакетаСтрокаФЛ.Параметры.Заполнить(ДанныеСотрудника);
				
				ДокументРезультат.Вывести(ОбластьМакетаСтрокаФЛ);
				
				СтруктураИтогаФЛ.Начислено     = СтруктураИтогаФЛ.Начислено + ДанныеСотрудника.Начислено;
				СтруктураИтогаФЛ.СуммаВычета   = СтруктураИтогаФЛ.СуммаВычета + ДанныеСотрудника.СуммаВычета;
				СтруктураИтогаФЛ.НДФЛ          = СтруктураИтогаФЛ.НДФЛ + ДанныеСотрудника.НДФЛ;
				СтруктураИтогаФЛ.СуммаКВыплате = СтруктураИтогаФЛ.СуммаКВыплате + ДанныеСотрудника.СуммаКВыплате;
				СтруктураИтогаФЛ.НалогНаПрибыльКЗачету = СтруктураИтогаФЛ.НалогНаПрибыльКЗачету + ДанныеСотрудника.НалогНаПрибыльКЗачету;
				
			КонецЦикла;
			
			ОбластьМакетаИтогФЛ.Параметры.Заполнить(СтруктураИтогаФЛ);
			ДокументРезультат.Вывести(ОбластьМакетаИтогФЛ);
			
		КонецЕсли;
		
		Если ДанныеДокумента.ТабличнаяЧастьЮЛ.Количество() > 0 Тогда
			
			ДокументРезультат.Вывести(ОбластьМакетаШапкаЮЛ);
			
			СтруктураИтогаЮЛ = Новый Структура("Начислено, НалогНаПрибыль, СуммаКВыплате", 0, 0, 0);
			
			Для каждого ДанныеСотрудника Из ДанныеДокумента.ТабличнаяЧастьЮЛ Цикл
				
				МассивВыводимыхОбластей = Новый Массив;
				МассивВыводимыхОбластей.Добавить(ОбластьМакетаСтрокаЮЛ);
				МассивВыводимыхОбластей.Добавить(ОбластьМакетаИтогЮЛ);
				МассивВыводимыхОбластей.Добавить(ОбластьМакетаПодвал);
				
				Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, МассивВыводимыхОбластей) Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ДокументРезультат.Вывести(ОбластьМакетаШапкаЮЛ);
				КонецЕсли;
				
				ОбластьМакетаСтрокаЮЛ.Параметры.Заполнить(ДанныеСотрудника);
				
				ДокументРезультат.Вывести(ОбластьМакетаСтрокаЮЛ);
				
				СтруктураИтогаЮЛ.Начислено     = СтруктураИтогаЮЛ.Начислено + ДанныеСотрудника.Начислено;
				СтруктураИтогаЮЛ.НалогНаПрибыль= СтруктураИтогаЮЛ.НалогНаПрибыль + ДанныеСотрудника.НалогНаПрибыль;
				СтруктураИтогаЮЛ.СуммаКВыплате = СтруктураИтогаЮЛ.СуммаКВыплате + ДанныеСотрудника.СуммаКВыплате;
				
			КонецЦикла;
			
			ОбластьМакетаИтогЮЛ.Параметры.Заполнить(СтруктураИтогаЮЛ);
			ДокументРезультат.Вывести(ОбластьМакетаИтогЮЛ);
			
		КонецЕсли;
		
		ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеДокумента);
		ДокументРезультат.Вывести(ОбластьМакетаПодвал);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ДанныеДокумента.Ссылка);
				
	КонецЦикла;
	
	Возврат ДокументРезультат;
		
КонецФункции

Функция ДанныеПечатиДокументов(МассивОбъектов)
	
	ДанныеПечатиОбъектов = Новый Соответствие;
	
	ВалютаУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИСТИНА КАК ЭтоФизическоеЛицо,
		|	ДивидендыФизическимЛицам.Ссылка.Организация КАК Организация,
		|	ДивидендыФизическимЛицам.Ссылка КАК Ссылка,
		|	ДивидендыФизическимЛицам.Ссылка.Номер,
		|	НАЧАЛОПЕРИОДА(ДивидендыФизическимЛицам.Ссылка.Дата, ДЕНЬ) КАК Период,
		|	ДивидендыФизическимЛицам.Ссылка.ДатаВыплаты КАК ДатаВыплаты,
		|	ДивидендыФизическимЛицам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДивидендыФизическимЛицам.НДФЛ + ДивидендыФизическимЛицам.НДФЛСПревышения КАК НДФЛ,
		|	0 КАК НалогНаПрибыль,
		|	ДивидендыФизическимЛицам.Начислено КАК Начислено,
		|	ДивидендыФизическимЛицам.ВычетПоНДФЛ КАК СуммаВычета,
		|	ДивидендыФизическимЛицам.НалогНаПрибыльКЗачету КАК НалогНаПрибыльКЗачету,
		|	ДивидендыФизическимЛицам.КВыплате КАК СуммаКВыплате,
		|	ДивидендыФизическимЛицам.Ссылка.Ответственный КАК Исполнитель,
		|	"""" КАК ДолжностьИсполнителя
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ИЗ
		|	Документ.НачислениеДивидендов.ФизическиеЛица КАК ДивидендыФизическимЛицам
		|ГДЕ
		|	ДивидендыФизическимЛицам.Ссылка В(&МассивОбъектов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЛОЖЬ КАК ЭтоФизическоеЛицо,
		|	ДивидендыЮридическимЛицам.Ссылка.Организация КАК Организация,
		|	ДивидендыЮридическимЛицам.Ссылка КАК Ссылка,
		|	ДивидендыЮридическимЛицам.Ссылка.Номер,
		|	НАЧАЛОПЕРИОДА(ДивидендыЮридическимЛицам.Ссылка.Дата, ДЕНЬ) КАК Период,
		|	ДивидендыЮридическимЛицам.Ссылка.ДатаВыплаты КАК ДатаВыплаты,
		|	ДивидендыЮридическимЛицам.Контрагент КАК ФизическоеЛицо,
		|	0 КАК НДФЛ,
		|	ДивидендыЮридическимЛицам.НалогНаПрибыль КАК НалогНаПрибыль,
		|	ДивидендыЮридическимЛицам.Начислено КАК Начислено,
		|	0 КАК СуммаВычета,
		|	0 КАК НалогНаПрибыльКЗачету,
		|	ДивидендыЮридическимЛицам.КВыплате КАК СуммаКВыплате,
		|	ДивидендыЮридическимЛицам.Ссылка.Ответственный КАК Исполнитель,
		|	"""" КАК ДолжностьИсполнителя
		|ИЗ
		|	Документ.НачислениеДивидендов.ЮридическиеЛица КАК ДивидендыЮридическимЛицам
		|ГДЕ
		|	ДивидендыЮридическимЛицам.Ссылка В(&МассивОбъектов)";
	
	Запрос.Выполнить();
	
	ОписательВТ = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(
		Запрос.МенеджерВременныхТаблиц, "ВТДанныеДокументов");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВТ, Истина, "ФИОПолные");
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДокументов.ЭтоФизическоеЛицо КАК ЭтоФизическоеЛицо,
		|	ДанныеДокументов.Организация КАК Организация,
		|	ДанныеДокументов.Ссылка КАК Ссылка,
		|	ДанныеДокументов.Номер КАК Номер,
		|	ДанныеДокументов.Период КАК Дата,
		|	ДанныеДокументов.ДатаВыплаты КАК ДатаВыплаты,
		|	ЕСТЬNULL(КадровыеДанныеФизическихЛиц.ФИОПолные, ДанныеДокументов.ФизическоеЛицо) КАК Акционер,
		|	ДанныеДокументов.НДФЛ КАК НДФЛ,
		|	ДанныеДокументов.НалогНаПрибыль КАК НалогНаПрибыль,
		|	ДанныеДокументов.Начислено КАК Начислено,
		|	ДанныеДокументов.СуммаВычета КАК СуммаВычета,
		|	ДанныеДокументов.НалогНаПрибыльКЗачету КАК НалогНаПрибыльКЗачету,
		|	ДанныеДокументов.СуммаКВыплате КАК СуммаКВыплате,
		|	ЕСТЬNULL(ДанныеДокументов.Исполнитель, """") КАК Исполнитель,
		|	ДанныеДокументов.ДолжностьИсполнителя КАК ДолжностьИсполнителя
		|ИЗ
		|	ВТДанныеДокументов КАК ДанныеДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
		|		ПО ДанныеДокументов.Период = КадровыеДанныеФизическихЛиц.Период
		|			И ДанныеДокументов.ФизическоеЛицо = КадровыеДанныеФизическихЛиц.ФизическоеЛицо
		|ИТОГИ
		|	МАКСИМУМ(Организация),
		|	МАКСИМУМ(Номер),
		|	МАКСИМУМ(Дата),
		|	МАКСИМУМ(ДатаВыплаты),
		|	СУММА(НДФЛ),
		|	СУММА(НалогНаПрибыль),
		|	СУММА(Начислено),
		|	СУММА(СуммаВычета),
		|	СУММА(НалогНаПрибыльКЗачету),
		|	СУММА(СуммаКВыплате),
		|	МАКСИМУМ(Исполнитель),
		|	МАКСИМУМ(ДолжностьИсполнителя)
		|ПО
		|	Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	ГруппировкаПоДокументу = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ГруппировкаПоДокументу.Следующий() Цикл
		
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("Ссылка", ГруппировкаПоДокументу.Ссылка);
		ДанныеПечати.Вставить("Форма2021года", ГруппировкаПоДокументу.ДатаВыплаты >= УчетНДФЛ.ПараметрыРасчетаНДФЛПоПрогрессивнойШкале().НачалоРасчетаНДФЛПоПрогрессивнойШкале);
        НаименованияНаДату = ОрганизацииПовтИсп.НаименованияНаДату(ГруппировкаПоДокументу.Организация, 
								ГруппировкаПоДокументу.Дата);
		ДанныеПечати.Вставить("НазваниеОрганизации", НаименованияНаДату.НаименованиеПолное);
		ДанныеПечати.Вставить("ЕдиницаИзмерения", ВалютаУчета.НаименованиеПолное);
		ДанныеПечати.Вставить("ДатаДокумента", Формат(ГруппировкаПоДокументу.Дата, "ДЛФ=D"));
		ДанныеПечати.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ГруппировкаПоДокументу.Номер, Истина, Истина));
		ДанныеПечати.Вставить("Начислено", ГруппировкаПоДокументу.Начислено);
		ДанныеПечати.Вставить("СуммаВычета", ГруппировкаПоДокументу.СуммаВычета);
		ДанныеПечати.Вставить("НДФЛ", ГруппировкаПоДокументу.НДФЛ);
		ДанныеПечати.Вставить("НалогНаПрибыль", ГруппировкаПоДокументу.НалогНаПрибыль);
		ДанныеПечати.Вставить("СуммаКВыплате", ГруппировкаПоДокументу.СуммаКВыплате);
		ДанныеПечати.Вставить("НалогНаПрибыльКЗачету", ГруппировкаПоДокументу.НалогНаПрибыльКЗачету);
		ДанныеПечати.Вставить("ДолжностьИсполнителя", ГруппировкаПоДокументу.ДолжностьИсполнителя);
		ДанныеПечати.Вставить("ИсполнительРасшифровкаПодписи", ФизическиеЛицаЗарплатаКадры.РасшифровкаПодписи(ГруппировкаПоДокументу.Исполнитель));
		ДанныеПечати.Вставить("ТабличнаяЧастьФЛ", Новый Массив);
		ДанныеПечати.Вставить("ТабличнаяЧастьЮЛ", Новый Массив);
		
		ГруппировкаПоСотрудникам = ГруппировкаПоДокументу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ГруппировкаПоСотрудникам.Следующий() Цикл
			
			Если ГруппировкаПоСотрудникам.ЭтоФизическоеЛицо Тогда
				
				СтрокаДанныхПечати = Новый Структура;
				СтрокаДанныхПечати.Вставить("Акционер", ГруппировкаПоСотрудникам.Акционер);
				СтрокаДанныхПечати.Вставить("Начислено", ГруппировкаПоСотрудникам.Начислено);
				СтрокаДанныхПечати.Вставить("СуммаВычета", ГруппировкаПоСотрудникам.СуммаВычета);
				СтрокаДанныхПечати.Вставить("НалогНаПрибыльКЗачету", ГруппировкаПоСотрудникам.НалогНаПрибыльКЗачету);
				СтрокаДанныхПечати.Вставить("НДФЛ", ГруппировкаПоСотрудникам.НДФЛ);
				СтрокаДанныхПечати.Вставить("СуммаКВыплате", ГруппировкаПоСотрудникам.СуммаКВыплате);
				ДанныеПечати.ТабличнаяЧастьФЛ.Добавить(СтрокаДанныхПечати);
				
			Иначе
				
				СтрокаДанныхПечати = Новый Структура;
				СтрокаДанныхПечати.Вставить("Акционер", ГруппировкаПоСотрудникам.Акционер);
				СтрокаДанныхПечати.Вставить("Начислено", ГруппировкаПоСотрудникам.Начислено);
				СтрокаДанныхПечати.Вставить("НалогНаПрибыль", ГруппировкаПоСотрудникам.НалогНаПрибыль);
				СтрокаДанныхПечати.Вставить("СуммаКВыплате", ГруппировкаПоСотрудникам.СуммаКВыплате);
				ДанныеПечати.ТабличнаяЧастьЮЛ.Добавить(СтрокаДанныхПечати);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ДанныеПечатиОбъектов.Вставить(ГруппировкаПоДокументу.Ссылка, ДанныеПечати);
		
	КонецЦикла;
	
	Возврат ДанныеПечатиОбъектов;
		
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
