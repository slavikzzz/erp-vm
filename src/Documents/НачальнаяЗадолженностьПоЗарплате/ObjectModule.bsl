#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли; 
	
	Если СпособВводаЗадолженности = Перечисления.СпособВводаЗадолженностиПоЗарплате.ОстатокНевыплаченнойЗарплаты Тогда 
		ОбщегоНазначенияБЗК.ЗаполнитьЗначения(ЗадолженностьПоЗарплате, 0, "СуммаПоБухучету, ВыплатыЗаПрошлыеПериоды");
	ИначеЕсли СпособВводаЗадолженности = Перечисления.СпособВводаЗадолженностиПоЗарплате.БухгалтерскоеСальдоИВыплаты Тогда 
		ОбщегоНазначенияБЗК.ЗаполнитьЗначения(ЗадолженностьПоЗарплате, 0, "Сумма");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ВзаиморасчетыССотрудниками.ЗарегистрироватьНачальныеОстатки(
		Движения, Отказ, 
		Организация, Месяц, 
		НачальныеОстатки());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НачальныеОстатки()
	
	НачальныеОстатки = ВзаиморасчетыССотрудниками.НоваяТаблицаНачальныхОстатков();
	
	ФизическиеЛицаСотрудников = 
		ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ЗадолженностьПоЗарплате.ВыгрузитьКолонку("Сотрудник"), "ФизическоеЛицо");
	
	Для Каждого СтрокаЗадолженности Из ЗадолженностьПоЗарплате Цикл
		
		СтрокаОстатков = НачальныеОстатки.Добавить();
		
		СтрокаОстатков.ПериодВзаиморасчетов = Месяц;
		СтрокаОстатков.ФизическоеЛицо = ФизическиеЛицаСотрудников[СтрокаЗадолженности.Сотрудник];
		СтрокаОстатков.Сотрудник      = СтрокаЗадолженности.Сотрудник;
		СтрокаОстатков.Подразделение  = СтрокаЗадолженности.Подразделение;
		СтрокаОстатков.СтатьяФинансирования                 = СтрокаЗадолженности.СтатьяФинансирования;
		СтрокаОстатков.СтатьяРасходов                       = СтрокаЗадолженности.СтатьяРасходов;
		СтрокаОстатков.ВидДоходаИсполнительногоПроизводства = СтрокаЗадолженности.ВидДоходаИсполнительногоПроизводства;

		Если СпособВводаЗадолженности = Перечисления.СпособВводаЗадолженностиПоЗарплате.ОстатокНевыплаченнойЗарплаты
			Или СпособВводаЗадолженности = Перечисления.СпособВводаЗадолженностиПоЗарплате.ПустаяСсылка() Тогда 
			СтрокаОстатков.Сумма                   = СтрокаЗадолженности.Сумма;
			СтрокаОстатков.СуммаПоБухучету         = СтрокаЗадолженности.Сумма;
			СтрокаОстатков.ВыплатыЗаПрошлыеПериоды = 0;
		Иначе 
			СтрокаОстатков.Сумма                   = СтрокаЗадолженности.СуммаПоБухучету - СтрокаЗадолженности.ВыплатыЗаПрошлыеПериоды;
			СтрокаОстатков.СуммаПоБухучету         = СтрокаЗадолженности.СуммаПоБухучету;
			СтрокаОстатков.ВыплатыЗаПрошлыеПериоды = СтрокаЗадолженности.ВыплатыЗаПрошлыеПериоды;
		КонецЕсли;
		
	КонецЦикла;	
	
	Если ПолучитьФункциональнуюОпцию("РаботаВХозрасчетнойОрганизации") Тогда
		СтатьиРасходов = ЗарплатаКадры.СтатьиРасходовПоСпособамРасчетовСФизическимиЛицами();
		ОплатаТруда	= СтатьиРасходов[Перечисления.СпособыРасчетовСФизическимиЛицами.ОплатаТруда];
		НачальныеОстатки.ЗаполнитьЗначения(ОплатаТруда, "СтатьяРасходов");
	КонецЕсли;	
	
	Возврат НачальныеОстатки;
	
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли