#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Организация = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеЗаполнения, "Организация");
		Банк        = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеЗаполнения, "Банк");
		Дата        = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеЗаполнения, "КонецПериода");
		НачалоПериода = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеЗаполнения, "НачалоПериода", НачалоМесяца(Дата));
		ИдентификаторКомплекта        = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			ДанныеЗаполнения, "ИдентификаторКомплекта");
		КраткоеПредставлениеКомплекта = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			ДанныеЗаполнения, "КраткоеПредставлениеКомплекта");
	КонецЕсли;

	// Заполняем по умолчанию
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	// Фактическая дата создания пакета отчетности.
	ДатаСоздания = ТекущаяДатаСеанса();
	
	// Отчетную дату всегда подставляем как конец месяца.
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = ДатаСоздания;
	КонецЕсли;
	Дата = КонецМесяца(Дата);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	// При копировании полностью очистим ссылки на присоединные файлы, т.к. они относятся к другому документу.
	Для каждого СтрокаТаблицы Из Отчетность Цикл
		СтрокаТаблицы.ОтчетСсылка          = Неопределено;
		СтрокаТаблицы.ФайлОтчета           = Неопределено;
		СтрокаТаблицы.ФайлОтчетаXML        = Неопределено;
		СтрокаТаблицы.ФайлОтчетаСодержитЭП = Ложь;
		СтрокаТаблицы.ВерсияДанныхОтчета   = "";
	КонецЦикла;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Всегда подставляем как конец месяца.
	Дата = КонецМесяца(Дата);

	// Удалим из связанных табличных частей строки с неактуальными ключами.
	Документы.ФинОтчетВБанк.УдалитьНеактуальныеСтроки(ЭкономическиеСубъекты, Отчетность,       "КлючСтрокиСубъекта");
	Документы.ФинОтчетВБанк.УдалитьНеактуальныеСтроки(Отчетность,            ПараметрыОтчетов, "КлючСтрокиОтчета");
	Документы.ФинОтчетВБанк.УдалитьНеактуальныеСтроки(ЭкономическиеСубъекты, НастройкиСистемыНалогообложения, "КлючСтрокиСубъекта");
	
	Если ЭтоНовый() Тогда
		ДополнительныеСвойства.Вставить("СинхронизироватьПрисоединенныеФайлы", Ложь);
	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Записываем или обновляем данные в регистре ЖурналСтатусовФинОтчетностиВБанки.
	МенеджерЗаписи = РегистрыСведений.ЖурналСтатусовФинОтчетностиВБанки.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Организация = Организация;
	МенеджерЗаписи.Предмет     = Ссылка;
	
	// Сначала пробуем найти ранее записанные данные.
	МенеджерЗаписи.Прочитать();
	Если НЕ МенеджерЗаписи.Выбран() Тогда
		// Такой записи еще нет, заполняем ее полностью.
		МенеджерЗаписи.Организация              = Организация;
		МенеджерЗаписи.Предмет                  = Ссылка;
		МенеджерЗаписи.Статус                   = Перечисления.СтатусыОтправкиФинОтчетностиВБанки.НеОтправлено;
	КонецЕсли;
	
	// Обновим вспомогательную информацию.
	МенеджерЗаписи.Банк                     = Банк;
	МенеджерЗаписи.Наименование             = КраткоеПредставлениеКомплекта;
	МенеджерЗаписи.СостояниеСдачиОтчетности = Перечисления.СостоянияДокументооборотаОбменаСБанками.НеНачат;
	МенеджерЗаписи.ДатаНачала               = НачалоПериода;
	МенеджерЗаписи.ДатаОкончания            = КонецМесяца(Дата);
	
	МенеджерЗаписи.ФинансовыйПериод         = РегламентированнаяОтчетностьВызовСервера.ПредставлениеФинансовогоПериода(
												МенеджерЗаписи.ДатаНачала, 
												КонецДня(МенеджерЗаписи.ДатаОкончания));
	
	МенеджерЗаписи.ДатаЗаписиПредмета       = ТекущаяДатаСеанса();
	МенеджерЗаписи.Комментарий              = Комментарий;
	МенеджерЗаписи.ПометкаУдаления          = ПометкаУдаления;
	
	МенеджерЗаписи.Записать();

	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеСвойства, "СинхронизироватьПрисоединенныеФайлы", Истина) Тогда
		// Если присоед. файлы из спр.ФинОтчетВБанкиПрисоедФайлы выбраны в строках в текущем документе,
		// то у них не должно быть пометки удаления, если есть - то ее снять. И наоборот - поставить для удаленных.

		ТипПрисоединенногоФайлаПакета = Тип("СправочникСсылка.ФинОтчетВБанкПрисоединенныеФайлы");
		СписокФайлов = Новый Массив;
		Для Каждого Отчет Из Отчетность Цикл

			Если ЗначениеЗаполнено(Отчет.ФайлОтчета)
			   И ТипЗнч(Отчет.ФайлОтчета) = ТипПрисоединенногоФайлаПакета Тогда
				СписокФайлов.Добавить(Отчет.ФайлОтчета);
			КонецЕсли;

			Если ЗначениеЗаполнено(Отчет.ФайлОтчетаXML)
			   И ТипЗнч(Отчет.ФайлОтчетаXML) = ТипПрисоединенногоФайлаПакета Тогда
				СписокФайлов.Добавить(Отчет.ФайлОтчетаXML);
			КонецЕсли;
			
		КонецЦикла;
		Если СписокФайлов.Количество() <> 0 Тогда
			
			СвойстваФайлов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СписокФайлов, "ПометкаУдаления", Истина);
		
			ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияПроцедуры();
			ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Синхронизация присоединенных файлов';
																	|en = 'Attachment synchronization'");
			ПараметрыВыполнения.ОжидатьЗавершение           = 0;
			ПараметрыВыполнения.ЗапуститьВФоне              = Истина;

			ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения,
				"УниверсальныйОбменСБанкамиФормы.СинхронизироватьПрисоединенныеФайлы", Ссылка, СвойстваФайлов,
				Перечисления.СервисыОбменаСБанками.ФинансоваяОтчетность);

		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
