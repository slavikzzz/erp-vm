#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область РаспределениеПоПартиям

// Возвращает результат распределения остатков затрат по партиям производства.
//
//	Параметры:
//		Ссылка - ДокументСсылка.НачальныеОстаткиНЗППоПодразделениям - ссылка на документ, затраты которого необходимо распределить.
//		АдресРезультата - Строка - адрес временного хранилища, для помещения результата распределения.
//
//	Возвращаемое значение:
//		Структура - результат распределения остатков затрат по партиям производства.
//
Функция РаспределитьНачальныеОстаткиПоПартиямПроизводства(Ссылка, АдресРезультата = Неопределено) Экспорт
	
	// СтандартныеПодсистемы.ЗамерПроизводительности
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"Документ.НачальныеОстаткиНЗППоПодразделениям.МодульМенеджера.РаспределитьНачальныеОстаткиПоПартиямПроизводства");
	// Конец СтандартныеПодсистемы.ЗамерПроизводительности
	
	СписокРеквизитов =
		"ПорядокУчетаЗатрат, Дата, Подразделение,
		|Организация, ВидЦены, НаправлениеДеятельности";
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, СписокРеквизитов);
	РеквизитыДокумента.Вставить("ДокументОснование", Ссылка);
	
	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = СтрСоединить(ТекстыЗапросаРаспределенияЗатрат(), ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос.УстановитьПараметр("Ссылка",						Ссылка);
	Запрос.УстановитьПараметр("ДатаОстатков",				РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("Организация",				РеквизитыДокумента.Организация);
	Запрос.УстановитьПараметр("Подразделение",				РеквизитыДокумента.Подразделение);
	Запрос.УстановитьПараметр("ПорядокУчетаЗатрат",			РеквизитыДокумента.ПорядокУчетаЗатрат);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",	РеквизитыДокумента.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ВидЦены",					РеквизитыДокумента.ВидЦены);
	Запрос.УстановитьПараметр("ВалютаВидовРабот",			Константы.ВалютаРасценокВидовРабот.Получить());
	Запрос.УстановитьПараметр("ВалютаУпрУчета",				Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("БазоваяВалюта", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыДокумента.Организация));
		
	РезультатЗапроса	= Запрос.ВыполнитьПакет();
	ВГраница			= РезультатЗапроса.ВГраница();
	
	СуммыМатериалов			= РезультатЗапроса[1].Выбрать();
	СуммыТрудозатрат		= РезультатЗапроса[2].Выбрать();
	ПрочиеРасходы			= РезультатЗапроса[3].Выгрузить();
	ПрочиеРасходыНовая		= ПрочиеРасходы.СкопироватьКолонки();
	
	МатериалыИРаботы		= Неопределено;
	Трудозатраты			= Неопределено;
	
	#Область РаспределениеМатериальныхЗатрат
	Пока СуммыМатериалов.Следующий() Цикл
		
		МатериалыИРаботы = РезультатЗапроса[ВГраница - 2].Выгрузить();
		Коэффициенты = МатериалыИРаботы.ВыгрузитьКолонку("БазаРаспределения");
		
		РезультатРаспределения		=
			РаспределитьСуммуПропорциональноКоэффициентам(СуммыМатериалов.Сумма, Коэффициенты);
		РезультатРаспределенияРегл	=
			РаспределитьСуммуПропорциональноКоэффициентам(СуммыМатериалов.СуммаРегл, Коэффициенты);
		РезультатРаспределенияПР	=
			РаспределитьСуммуПропорциональноКоэффициентам(СуммыМатериалов.СуммаПР, Коэффициенты);
		РезультатРаспределенияВР	=
			РаспределитьСуммуПропорциональноКоэффициентам(СуммыМатериалов.СуммаВР, Коэффициенты);
		
		МаксимальныйИндекс = Коэффициенты.Количество() - 1;
		Для Индекс = 0 По МаксимальныйИндекс Цикл
			
			Если Не РезультатРаспределения = Неопределено Тогда
				
				МатериалыИРаботы[Индекс].Сумма	= МатериалыИРаботы[Индекс].Сумма + РезультатРаспределения[Индекс];
				
				Если ЗначениеЗаполнено(МатериалыИРаботы[Индекс].КоличествоУпаковок) Тогда
					МатериалыИРаботы[Индекс].Цена = МатериалыИРаботы[Индекс].Сумма / МатериалыИРаботы[Индекс].КоличествоУпаковок;
				Иначе
					МатериалыИРаботы[Индекс].Цена = 0;
				КонецЕсли;
				
			КонецЕсли;
			
			Если Не РезультатРаспределенияРегл = Неопределено Тогда
				МатериалыИРаботы[Индекс].СуммаРегл = МатериалыИРаботы[Индекс].СуммаРегл + РезультатРаспределенияРегл[Индекс];
			КонецЕсли;
			
			Если Не РезультатРаспределенияПР = Неопределено Тогда
				МатериалыИРаботы[Индекс].СуммаПР = МатериалыИРаботы[Индекс].СуммаПР + РезультатРаспределенияПР[Индекс];
			КонецЕсли;
			
			Если Не РезультатРаспределенияВР = Неопределено Тогда
				МатериалыИРаботы[Индекс].СуммаВР = МатериалыИРаботы[Индекс].СуммаВР + РезультатРаспределенияВР[Индекс];
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	#КонецОбласти
	
	#Область РаспределениеТрудозатрат
	Пока СуммыТрудозатрат.Следующий() Цикл
		
		Трудозатраты = РезультатЗапроса[ВГраница - 1].Выгрузить();
		Коэффициенты = Трудозатраты.ВыгрузитьКолонку("БазаРаспределения");
		
		РезультатРаспределения		=
			РаспределитьСуммуПропорциональноКоэффициентам(СуммыТрудозатрат.Сумма, Коэффициенты);
		РезультатРаспределенияРегл	=
			РаспределитьСуммуПропорциональноКоэффициентам(СуммыТрудозатрат.СуммаРегл, Коэффициенты);
		РезультатРаспределенияПР	=
			РаспределитьСуммуПропорциональноКоэффициентам(СуммыТрудозатрат.СуммаПР, Коэффициенты);
		РезультатРаспределенияВР	=
			РаспределитьСуммуПропорциональноКоэффициентам(СуммыТрудозатрат.СуммаВР, Коэффициенты);
		
		МаксимальныйИндекс = Коэффициенты.Количество() - 1;
		Для Индекс = 0 По МаксимальныйИндекс Цикл
			
			Если Не РезультатРаспределения = Неопределено Тогда
				
				Трудозатраты[Индекс].Сумма = Трудозатраты[Индекс].Сумма + РезультатРаспределения[Индекс];
				
				Если ЗначениеЗаполнено(Трудозатраты[Индекс].Количество) Тогда
					Трудозатраты[Индекс].Цена = Трудозатраты[Индекс].Сумма / Трудозатраты[Индекс].Количество;
				Иначе
					Трудозатраты[Индекс].Цена = 0;
				КонецЕсли;
				
			КонецЕсли;
			
			Если Не РезультатРаспределенияРегл = Неопределено Тогда
				Трудозатраты[Индекс].СуммаРегл = Трудозатраты[Индекс].СуммаРегл + РезультатРаспределенияРегл[Индекс];
			КонецЕсли;
			
			Если Не РезультатРаспределенияПР = Неопределено Тогда
				Трудозатраты[Индекс].СуммаПР = Трудозатраты[Индекс].СуммаПР + РезультатРаспределенияПР[Индекс];
			КонецЕсли;
			
			Если Не РезультатРаспределенияВР = Неопределено Тогда
				Трудозатраты[Индекс].СуммаВР = Трудозатраты[Индекс].СуммаВР + РезультатРаспределенияВР[Индекс];
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	#КонецОбласти
	
	#Область РаспределениеПрочихРасходов
	БазаРаспределения = РезультатЗапроса[ВГраница].Выгрузить();
	
	КолонкиСБазой = Новый Соответствие;
	КолонкиСБазой.Вставить(Перечисления.ПравилаОтнесенияНаВыпуск.ПоМатериальнымЗатратам, "Материалы");
	КолонкиСБазой.Вставить(Перечисления.ПравилаОтнесенияНаВыпуск.ПоМатериальнымИТрудозатратам, "МатериалыТрудозатраты");
	КолонкиСБазой.Вставить(Перечисления.ПравилаОтнесенияНаВыпуск.ПоТрудозатратам, "Трудозатраты");
	
	Для Каждого ТекРасход Из ПрочиеРасходы Цикл
		
		ИмяКолонкиСБазойУпр = КолонкиСБазой.Получить(ТекРасход.ПравилоОтнесенияНаВыпускУпр);
		Если ИмяКолонкиСБазойУпр = Неопределено Тогда
			ИмяКолонкиСБазойУпр = "МатериалыТрудозатраты";
		КонецЕсли;
		
		ИмяКолонкиСБазойРегл = КолонкиСБазой.Получить(ТекРасход.ПравилоОтнесенияНаВыпускРегл);
		Если ИмяКолонкиСБазойРегл = Неопределено Тогда
			ИмяКолонкиСБазойРегл = "МатериалыТрудозатраты";
		КонецЕсли;
		
		КоэффициентыУпр = БазаРаспределения.ВыгрузитьКолонку(ИмяКолонкиСБазойУпр);
		КоэффициентыРегл = БазаРаспределения.ВыгрузитьКолонку(ИмяКолонкиСБазойРегл);
		
		РезультатРаспределения		=
			РаспределитьСуммуПропорциональноКоэффициентам(ТекРасход.Сумма, КоэффициентыУпр);
		РезультатРаспределенияРегл	=
			РаспределитьСуммуПропорциональноКоэффициентам(ТекРасход.СуммаРегл, КоэффициентыРегл);
		РезультатРаспределенияПР	=
			РаспределитьСуммуПропорциональноКоэффициентам(ТекРасход.СуммаПР, КоэффициентыРегл);
		РезультатРаспределенияВР	=
			РаспределитьСуммуПропорциональноКоэффициентам(ТекРасход.СуммаВР, КоэффициентыРегл);
			
		МаксимальныйИндекс = БазаРаспределения.Количество() - 1;
		Для Индекс = 0 По МаксимальныйИндекс Цикл
			
			НоваяСтрока = ПрочиеРасходыНовая.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекРасход,, "Сумма,СуммаРегл,СуммаПР,СуммаВР");
			
			НоваяСтрока.ПартияПроизводства	= БазаРаспределения[Индекс].ПартияПроизводства;
			
			Если Не РезультатРаспределения = Неопределено Тогда
				НоваяСтрока.Сумма = РезультатРаспределения[Индекс];
			КонецЕсли;
			
			Если Не РезультатРаспределенияРегл = Неопределено Тогда
				НоваяСтрока.СуммаРегл = РезультатРаспределенияРегл[Индекс];
			КонецЕсли;
			
			Если Не РезультатРаспределенияПР = Неопределено Тогда
				НоваяСтрока.СуммаПР = РезультатРаспределенияПР[Индекс];
			КонецЕсли;
			
			Если Не РезультатРаспределенияВР = Неопределено Тогда
				НоваяСтрока.СуммаВР = РезультатРаспределенияВР[Индекс];
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	#КонецОбласти
	
	// СтандартныеПодсистемы.ЗамерПроизводительности
	КоличествоОпераций = МатериалыИРаботы.Количество() + Трудозатраты.Количество() + ПрочиеРасходыНовая.Количество();
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоОпераций / 10000);
	// Конец СтандартныеПодсистемы.ЗамерПроизводительности
	
	Результат = Новый Структура;
	Результат.Вставить("РеквизитыШапки",		РеквизитыДокумента);
	Результат.Вставить("МатериалыИРаботы",		МатериалыИРаботы);
	Результат.Вставить("Трудозатраты",			Трудозатраты);
	Результат.Вставить("ПрочиеРасходы",			ПрочиеРасходыНовая);
	
	Если АдресРезультата = Неопределено Тогда
		Возврат Результат;
	Иначе
		ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Возвращает ошибки распределения остатков затрат по партиям производства.
//
//	Параметры:
//		Ссылка - ДокументСсылка.НачальныеОстаткиНЗППоПодразделениям - ссылка на документ, затраты которого необходимо распределить.
//
//	Возвращаемое значение:
//		Структура - ошибки распределения остатков затрат по партиям производства.
//
Функция ОшибкиВДанныхРаспределенияОстатковНЗП(Ссылка) Экспорт
	
	СписокРеквизитов =
		"ПорядокУчетаЗатрат, Дата, Подразделение,
		|Организация, ВидЦены, НаправлениеДеятельности";
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, СписокРеквизитов);
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(ТекстыЗапросаОшибкиВДанныхРаспределенияОстатковНЗП(), ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос.УстановитьПараметр("Ссылка",						Ссылка);
	Запрос.УстановитьПараметр("ДатаОстатков",				РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("Организация",				РеквизитыДокумента.Организация);
	Запрос.УстановитьПараметр("Подразделение",				РеквизитыДокумента.Подразделение);
	Запрос.УстановитьПараметр("ПорядокУчетаЗатрат",			РеквизитыДокумента.ПорядокУчетаЗатрат);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",	РеквизитыДокумента.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ВидЦены",					РеквизитыДокумента.ВидЦены);
	Запрос.УстановитьПараметр("ВалютаВидовРабот",			Константы.ВалютаРасценокВидовРабот.Получить());
	Запрос.УстановитьПараметр("ВалютаУпрУчета",				Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("БазоваяВалюта", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыДокумента.Организация));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Результат = Новый Структура;
	Результат.Вставить("ОшибкиРаспределенияОстатковНЗП", РезультатЗапроса.Выгрузить());
	
	Возврат Результат;
	
КонецФункции

// Возвращает сумму, распределенную по переданным коэффициентам.
// При распределении используется метод с пересчетом базы распределения на каждом шаге,
// что приводит к распределению без остатка.
//
//	Параметры:
//		РаспределяемаяСумма	- Число - сумма к распределению.
//		Коэффициенты		- Массив - массив коэффициентов.
//		Точность			- Число - разрядность результата распределения.
//
//	Возвращаемое значение:
//		Массив - результат распределения.
//
Функция РаспределитьСуммуПропорциональноКоэффициентам(Знач РаспределяемаяСумма, Знач Коэффициенты, Знач Точность = 2) Экспорт
	
	Если Не ЗначениеЗаполнено(РаспределяемаяСумма) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	КоличествоСтрок = Коэффициенты.Количество();
	
	Если КоличествоСтрок = 0 Тогда
		// Недопустимо значение параметра Коэффициенты
		// Ожидалось: хотя бы один коэффициент будет задан.
		Возврат Неопределено;
	КонецЕсли;
	
	СуммаКоэффициентов = 0;
	
	Для Индекс = 0 По КоличествоСтрок - 1 Цикл
		Коэффициент = Коэффициенты[Индекс];
		СуммаКоэффициентов = СуммаКоэффициентов + Коэффициент;
	КонецЦикла;
	
	Если СуммаКоэффициентов = 0 Тогда
		// Недопустимо значение параметра Коэффициенты
		// Ожидалось: Сумма коэффициентов отлична от нуля.
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = Новый Массив(КоличествоСтрок);
	ОсталосьРаспределить = РаспределяемаяСумма;
	
	Для Индекс = 0 По КоличествоСтрок - 1 Цикл
		Результат[Индекс] = Окр(ОсталосьРаспределить * Коэффициенты[Индекс] / СуммаКоэффициентов, Точность, 1);
		ОсталосьРаспределить = ОсталосьРаспределить - Результат[Индекс];
		СуммаКоэффициентов = СуммаКоэффициентов - Коэффициенты[Индекс];
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("РеестрДокументов");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  см. ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.НачальныеОстаткиНЗППоПодразделениям") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

#Область ВыборСтатейИАналитик

Функция ПараметрыВыбораСтатейИАналитик() Экспорт
	
	// Выходные изделия
	ПараметрыВыбораСтатей = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	
	ПараметрыВыбораСтатей.ПутьКДанным					= "Объект.Затраты";
	ПараметрыВыбораСтатей.Статья						= "СтатьяРасходов";
	ПараметрыВыбораСтатей.ТипСтатьи					= "ТипСтатьи";
	
	ПараметрыВыбораСтатей.ВыборСтатьиРасходов			= Истина;
	ПараметрыВыбораСтатей.АналитикаРасходов			= "АналитикаРасходов";
	
	ЭлементыФормы = ПараметрыВыбораСтатей.ЭлементыФормы;
	ЭлементыФормы.Статья.Добавить("ЗатратыСтатьяРасходов");
	ЭлементыФормы.АналитикаРасходов.Добавить("ЗатратыАналитикаРасходов");
	
	ТипыЗатрат = Новый Массив;
	ТипыЗатрат.Добавить(Перечисления.ТипыЗатрат.Амортизация);
	ТипыЗатрат.Добавить(Перечисления.ТипыЗатрат.Прочее);
	
	РеквизитыДоступности = Новый Структура;
	РеквизитыДоступности.Вставить("ТипЗатрат", ТипыЗатрат);
	
	ПараметрыВыбораСтатей.УсловияДоступностиСтатьиВСтроках = РеквизитыДоступности;
	
	Возврат ПараметрыВыбораСтатей;
	
КонецФункции

#КонецОбласти

#Область СтандартныеПодсистемыКоманды

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.НачальныеОстаткиНЗППоПартиямПроизводства.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Начальные остатки НЗП по подразделениям".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//	СтрокаТаблицыЗначений - описание добавленной команды.
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - см. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - см. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	Отчеты.АнализРаспределенияНачальныхОстатковНЗП.ДобавитьКомандуОтчета(КомандыОтчетов);
	Отчеты.ОшибкиВДанныхРаспределенияОстатковНЗП.ДобавитьКомандуОтчета(КомандыОтчетов);
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";
	
КонецПроцедуры

#Область ЗагрузкаИзФайлаВТЧ

// Устанавливает параметры загрузки.
//
// Параметры:
//   Параметры - Структура - параметры загрузки из файла.
//
Процедура УстановитьПараметрыЗагрузкиИзФайлаВТЧ(Параметры) Экспорт
	
	ТипДанныхКолонки = Параметры.ТипДанныхКолонки;
	
	ТипДанныхКолонки.Вставить("КодВнешний",						Новый ОписаниеТипов("Строка",,	Новый КвалификаторыСтроки(11)));
	ТипДанныхКолонки.Вставить("НаименованиеВнешнее",			Новый ОписаниеТипов("Строка",,	Новый КвалификаторыСтроки(1024)));
	ТипДанныхКолонки.Вставить("ТипЗатрат",						Новый ОписаниеТипов("Строка",,	Новый КвалификаторыСтроки(20)));
	ТипДанныхКолонки.Вставить("НаименованиеСтатьиКалькуляции",	Новый ОписаниеТипов("Строка",,	Новый КвалификаторыСтроки(100)));
	ТипДанныхКолонки.Вставить("Сумма",							Новый ОписаниеТипов("Число",,	Новый КвалификаторыЧисла(15, 2)));
	
КонецПроцедуры

// Производит сопоставление данных, загружаемых в табличную часть ПолноеИмяТабличнойЧасти,
// с данными в ИБ, и заполняет параметры АдресТаблицыСопоставления и СписокНеоднозначностей.
// 
// Параметры:
// 	АдресЗагружаемыхДанных- Строка - адрес временного хранилища с таблицей значений, в которой
//                                   находятся загруженные данные из файла.
// 	АдресТаблицыСопоставления - Строка - адрес временного хранилища с пустой таблицей значений,
//                                       являющейся копией табличной части документа, 
//                                       которую необходимо заполнить из таблицы АдресЗагружаемыхДанных.
// 	СписокНеоднозначностей - ТаблицаЗначений - состоит из:
//  * Идентификатор - Число - идентификатор
//  * Колонка - Строка - имя колонки
// 	ПолноеИмяТабличнойЧасти - Строка - полное имя табличной части
// 	ДополнительныеПараметры - Структура - дополнительные параметры, переданные из формы-источнике.
Процедура СопоставитьЗагружаемыеДанные(АдресЗагружаемыхДанных, АдресТаблицыСопоставления, СписокНеоднозначностей, ПолноеИмяТабличнойЧасти, ДополнительныеПараметры) Экспорт
	
	Затраты				= ПолучитьИзВременногоХранилища(АдресТаблицыСопоставления); // ТаблицаЗначений
	ЗагружаемыеДанные	= ПолучитьИзВременногоХранилища(АдресЗагружаемыхДанных);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗагружаемыеДанные.КодВнешний					КАК КодВнешний,
	|	ЗагружаемыеДанные.НаименованиеВнешнее			КАК НаименованиеВнешнее,
	|	ВЫБОР
	|		КОГДА ЗагружаемыеДанные.ТипЗатрат = &МатериальныеЗатраты
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.Материальные)
	|		КОГДА ЗагружаемыеДанные.ТипЗатрат = &ВозвратныеОтходы
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.ВозвратныеОтходы)
	|		КОГДА ЗагружаемыеДанные.ТипЗатрат = &Трудозатраты
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.ОплатаТруда)
	|		КОГДА ЗагружаемыеДанные.ТипЗатрат = &Амортизация
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.Амортизация)
	|		КОГДА ЗагружаемыеДанные.ТипЗатрат = &Прочие
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.Прочее)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.ПустаяСсылка)
	|	КОНЕЦ											КАК ТипЗатрат,
	|	ЗагружаемыеДанные.НаименованиеСтатьиКалькуляции	КАК НаименованиеСтатьиКалькуляции,
	|	ЗагружаемыеДанные.Сумма							КАК Сумма,
	|	ЗагружаемыеДанные.Идентификатор					КАК Идентификатор
	|ПОМЕСТИТЬ ЗагружаемыеДанные
	|ИЗ
	|	&ЗагружаемыеДанные КАК ЗагружаемыеДанные
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Идентификатор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиРасходов.Идентификатор						КАК Идентификатор,
	|	МАКСИМУМ(СтатьиРасходов.СтатьяРасходов)				КАК СтатьяРасходов,
	|	МАКСИМУМ(СтатьиРасходов.СтатьяКалькуляции)			КАК СтатьяКалькуляции,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатьиРасходов.СтатьяРасходов)	КАК КоличествоСтатей
	|ПОМЕСТИТЬ СтатьиРасходов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗагружаемыеДанные.Идентификатор				КАК Идентификатор,
	|		СтатьиРасходов.Ссылка						КАК СтатьяРасходов,
	|		СтатьиРасходов.СтатьяКалькуляции			КАК СтатьяКалькуляции
	|	ИЗ
	|		ЗагружаемыеДанные КАК ЗагружаемыеДанные
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО СтатьиРасходов.Код = ЗагружаемыеДанные.КодВнешний
	|
	|	ГДЕ
	|		ЗагружаемыеДанные.ТипЗатрат В (ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.Амортизация),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.Прочее))
	|		И НЕ ЗагружаемыеДанные.КодВнешний = """"
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ЗагружаемыеДанные.Идентификатор				КАК Идентификатор,
	|		СтатьиРасходов.Ссылка						КАК СтатьяРасходов,
	|		СтатьиРасходов.СтатьяКалькуляции			КАК СтатьяКалькуляции
	|	ИЗ
	|		ЗагружаемыеДанные КАК ЗагружаемыеДанные
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО СтатьиРасходов.Наименование = ЗагружаемыеДанные.НаименованиеВнешнее
	|
	|	ГДЕ
	|		ЗагружаемыеДанные.ТипЗатрат В (ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.Амортизация),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.Прочее))
	|		И НЕ ЗагружаемыеДанные.НаименованиеВнешнее = """"
	|	) КАК СтатьиРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатьиРасходов.Идентификатор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Идентификатор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗагружаемыеДанные.Идентификатор					КАК Идентификатор,
	|	МАКСИМУМ(СтатьиКалькуляции.Ссылка)				КАК СтатьяКалькуляции,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатьиКалькуляции.Ссылка)	КАК КоличествоСтатей
	|ПОМЕСТИТЬ СтатьиКалькуляции
	|ИЗ
	|	ЗагружаемыеДанные КАК ЗагружаемыеДанные
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиКалькуляции КАК СтатьиКалькуляции
	|	ПО СтатьиКалькуляции.Наименование = ЗагружаемыеДанные.НаименованиеСтатьиКалькуляции
	|
	|ГДЕ
	|	ЗагружаемыеДанные.ТипЗатрат В (ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.Амортизация),
	|									ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.Прочее))
	|	И НЕ ЗагружаемыеДанные.НаименованиеСтатьиКалькуляции = """"
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗагружаемыеДанные.Идентификатор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Идентификатор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗагружаемыеДанные.Идентификатор					КАК Идентификатор,
	|	ЗагружаемыеДанные.КодВнешний					КАК КодВнешний,
	|	ЗагружаемыеДанные.НаименованиеВнешнее			КАК НаименованиеВнешнее,
	|	ЗагружаемыеДанные.ТипЗатрат						КАК ТипЗатрат,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.КоличествоСтатей, 0) = 1
	|			ТОГДА СтатьиРасходов.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	КОНЕЦ											КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.КоличествоСтатей, 0) = 1
	|			И СтатьиРасходов.СтатьяРасходов.ПравилоРаспределенияРасходовУпр.БазаРаспределенияПоПартиям В
	|				(ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.НормативРасходаМатериала),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПоМатериальнымЗатратам)
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.КоличествоСтатей, 0) = 1
	|			И СтатьиРасходов.СтатьяРасходов.ПравилоРаспределенияРасходовУпр.БазаРаспределенияПоПартиям В
	|				(ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.НормативыОплатыТруда),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ДлительностьВыполненияРабот))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПоТрудозатратам)
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.КоличествоСтатей, 0) = 1
	|			И СтатьиРасходов.СтатьяРасходов.ПравилоРаспределенияРасходовУпр.БазаРаспределенияПоПартиям =
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхИТрудозатрат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПоМатериальнымИТрудозатратам)
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.КоличествоСтатей, 0) = 1
	|			И СтатьиРасходов.СтатьяРасходов.ПравилоРаспределенияРасходовУпр.БазаРаспределенияПоПартиям В
	|				(ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоПродукцииСУчетомБудущихВыпусков),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемПродукцииСУчетомБудущихВыпусков),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесПродукцииСУчетомБудущихВыпусков),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукцииСУчетомБудущихВыпусков))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПоПродукцииСУчетомБудущихВыпусков)
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.КоличествоСтатей, 0) = 1
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПоПродукции)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПустаяСсылка)
	|	КОНЕЦ											КАК ПравилоОтнесенияНаВыпускУпр,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.КоличествоСтатей, 0) = 1
	|			И СтатьиРасходов.СтатьяРасходов.ПравилоРаспределенияРасходовРегл.БазаРаспределенияПоПартиям В
	|				(ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.НормативРасходаМатериала),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПоМатериальнымЗатратам)
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.КоличествоСтатей, 0) = 1
	|			И СтатьиРасходов.СтатьяРасходов.ПравилоРаспределенияРасходовРегл.БазаРаспределенияПоПартиям В
	|				(ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.НормативыОплатыТруда),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ДлительностьВыполненияРабот))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПоТрудозатратам)
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.КоличествоСтатей, 0) = 1
	|			И СтатьиРасходов.СтатьяРасходов.ПравилоРаспределенияРасходовРегл.БазаРаспределенияПоПартиям =
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхИТрудозатрат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПоМатериальнымИТрудозатратам)
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.КоличествоСтатей, 0) = 1
	|			И СтатьиРасходов.СтатьяРасходов.ПравилоРаспределенияРасходовРегл.БазаРаспределенияПоПартиям В
	|				(ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоПродукцииСУчетомБудущихВыпусков),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемПродукцииСУчетомБудущихВыпусков),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесПродукцииСУчетомБудущихВыпусков),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукцииСУчетомБудущихВыпусков))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПоПродукцииСУчетомБудущихВыпусков)
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.КоличествоСтатей, 0) = 1
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПоПродукции)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПустаяСсылка)
	|	КОНЕЦ											КАК ПравилоОтнесенияНаВыпускРегл,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиКалькуляции.КоличествоСтатей, 0) = 1
	|			ТОГДА СтатьиКалькуляции.СтатьяКалькуляции
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.КоличествоСтатей, 0) = 1
	|			ТОГДА СтатьиРасходов.СтатьяКалькуляции
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|	КОНЕЦ											КАК СтатьяКалькуляции,
	|	ЕСТЬNULL(СтатьиРасходов.КоличествоСтатей, 0)	КАК КоличествоСтатейРасходов,
	|	ЕСТЬNULL(СтатьиКалькуляции.КоличествоСтатей, 0)	КАК КоличествоСтатейКалькуляции,
	|	ЗагружаемыеДанные.Сумма							КАК Сумма
	|ИЗ
	|	ЗагружаемыеДанные КАК ЗагружаемыеДанные
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ СтатьиРасходов КАК СтатьиРасходов
	|	ПО СтатьиРасходов.Идентификатор = ЗагружаемыеДанные.Идентификатор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ СтатьиКалькуляции КАК СтатьиКалькуляции
	|	ПО СтатьиКалькуляции.Идентификатор = ЗагружаемыеДанные.Идентификатор
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ЗагружаемыеДанные",		ЗагружаемыеДанные);
	Запрос.УстановитьПараметр("МатериальныеЗатраты",	НСтр("ru = 'Материальные';
															|en = 'Material'"));
	Запрос.УстановитьПараметр("ВозвратныеОтходы",		НСтр("ru = 'Возвратные отходы';
																|en = 'Recyclable waste'"));
	Запрос.УстановитьПараметр("Трудозатраты",			НСтр("ru = 'Трудозатраты';
																|en = 'Labor costs'"));
	Запрос.УстановитьПараметр("Амортизация",			НСтр("ru = 'Амортизация';
															|en = 'Depreciation'"));
	Запрос.УстановитьПараметр("Прочие",					НСтр("ru = 'Прочие';
																|en = 'Other'"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Затраты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка,, "Сумма");
		НоваяСтрока.Сумма = Число(Выборка.Сумма);
		
		Если Выборка.КоличествоСтатейРасходов > 1 Тогда
			ЗаписьОНеоднозначности					= СписокНеоднозначностей.Добавить();
			ЗаписьОНеоднозначности.Идентификатор	= Выборка.Идентификатор;
			ЗаписьОНеоднозначности.Колонка			= "СтатьяРасходов";
		КонецЕсли;
		
		Если Выборка.КоличествоСтатейКалькуляции > 1 Тогда
			ЗаписьОНеоднозначности					= СписокНеоднозначностей.Добавить();
			ЗаписьОНеоднозначности.Идентификатор	= Выборка.Идентификатор;
			ЗаписьОНеоднозначности.Колонка			= "СтатьяКалькуляции";
		КонецЕсли;
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Затраты, АдресТаблицыСопоставления);
	
КонецПроцедуры

// Возвращает список подходящих объектов ИБ для неоднозначного значения ячейки.
// 
// Параметры:
// 	ПолноеИмяТабличнойЧасти- Строка - полное имя табличной части, в которую загружаются данные.
// 	СписокНеоднозначностей - Массив - список неоднозначностей.
// 	ИмяКолонки - Строка - имя колонки, в которой возникает неоднозначность.
// 	ЗагружаемыеЗначенияСтрока - Строка - Загружаемые данные на основании которых возникла неоднозначность.
// 	ДополнительныеПараметры - Структура - дополнительные параметры, переданные из формы-источнике.
Процедура ЗаполнитьСписокНеоднозначностей(ПолноеИмяТабличнойЧасти, СписокНеоднозначностей, ИмяКолонки, ЗагружаемыеЗначенияСтрока, ДополнительныеПараметры) Экспорт 
	
	Если ИмяКолонки = "СтатьяРасходов" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	СтатьиРасходов.Ссылка КАК Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|ГДЕ
		|	&УсловиеСопоставления";
		
		УсловиеСопоставления = Новый Массив;
		УсловиеСопоставления.Добавить("ЛОЖЬ");
		
		Если ЗначениеЗаполнено(ЗагружаемыеЗначенияСтрока.КодВнешний) Тогда
			УсловиеСопоставления.Добавить("СтатьиРасходов.Код = &КодВнешний");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЗагружаемыеЗначенияСтрока.НаименованиеВнешнее) Тогда
			УсловиеСопоставления.Добавить("СтатьиРасходов.Наименование = &НаименованиеВнешнее");
		КонецЕсли;
		
		ТекстУсловия = СтрСоединить(УсловиеСопоставления, Символы.ПС + "ИЛИ ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеСопоставления", ТекстУсловия);
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		
		Запрос.УстановитьПараметр("КодВнешний",				ЗагружаемыеЗначенияСтрока.КодВнешний);
		Запрос.УстановитьПараметр("НаименованиеВнешнее",	ЗагружаемыеЗначенияСтрока.НаименованиеВнешнее);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокНеоднозначностей.Добавить(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЕсли;
	
	Если ИмяКолонки = "СтатьяКалькуляции" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтатьиКалькуляции.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтатьиКалькуляции КАК СтатьиКалькуляции
		|ГДЕ
		|	&УсловиеСопоставления
		|";
		
		УсловиеСопоставления = Новый Массив;
		УсловиеСопоставления.Добавить("ЛОЖЬ");
		
		Если ЗначениеЗаполнено(ЗагружаемыеЗначенияСтрока.НаименованиеСтатьиКалькуляции) Тогда
			УсловиеСопоставления.Добавить("СтатьиКалькуляции.Наименование = &НаименованиеСтатьиКалькуляции");
		КонецЕсли;
		
		ТекстУсловия = СтрСоединить(УсловиеСопоставления, Символы.ПС + "ИЛИ ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеСопоставления", ТекстУсловия);
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		
		Запрос.УстановитьПараметр("НаименованиеСтатьиКалькуляции", ЗагружаемыеЗначенияСтрока.НаименованиеСтатьиКалькуляции);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокНеоднозначностей.Добавить(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

#Область Инициализация

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Дата						КАК Дата,
	|	Реквизиты.Номер						КАК Номер,
	|	Реквизиты.Ссылка					КАК Ссылка,
	|	Реквизиты.Проведен					КАК Проведен,
	|	Реквизиты.ПометкаУдаления			КАК ПометкаУдаления,
	|	Реквизиты.Организация				КАК Организация,
	|	Реквизиты.Подразделение				КАК Подразделение,
	|	Реквизиты.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	Реквизиты.СуммаДокумента			КАК СуммаДокумента,
	|	Реквизиты.Ответственный				КАК Ответственный,
	|	Реквизиты.Комментарий				КАК Комментарий
	|ИЗ
	|	Документ.НачальныеОстаткиНЗППоПодразделениям КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",
							ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("ДокументСсылка.НачальныеОстаткиНЗППоПодразделениям")));
								
	Запрос.УстановитьПараметр("НомерНаПечать",	ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	Запрос.УстановитьПараметр("ВалютаУпр",		Константы.ВалютаУправленческогоУчета.Получить());
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента           = "Документ.НачальныеОстаткиНЗППоПодразделениям";
	СинонимТаблицыДокумента      = "";
	ВЗапросеЕстьИсточник         = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	ЗначенияПараметров.Вставить("ВалютаУпр", Константы.ВалютаУправленческогоУчета.Получить());
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Неопределено, ТекстыЗапроса, Неопределено);
		ВЗапросеЕстьИсточник	= Ложь;
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса 
								|формирования движений по регистру %ИмяРегистра%.';
								|en = 'In the %ПолноеИмяДокумента% document, adaptation of request for generating records 
								|of the %ИмяРегистра% register is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ТекстыЗапросовПроведения

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка									КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО							КАК РазделительЗаписи,
	|	&Дата									КАК ДатаДокументаИБ,
	|	&Номер									КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных				КАК ТипСсылки,
	|	&Организация							КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковЗатратПартийПроизводства) КАК ХозяйственнаяОперация,
	|	&НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|	&Подразделение							КАК Подразделение,
	|	&Ответственный							КАК Ответственный,
	|	ВЫРАЗИТЬ(&Комментарий КАК СТРОКА(100))	КАК Комментарий,
	|	&ВалютаУпр								КАК Валюта,
	|	&СуммаДокумента							КАК Сумма,
	|	&Проведен								КАК Проведен,
	|	&ПометкаУдаления						КАК ПометкаУдаления,
	|	ЛОЖЬ									КАК ДополнительнаяЗапись,
	|	""""									КАК Дополнительно,
	|	&Дата									КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать							КАК НомерПервичногоДокумента,
	|	&Подразделение							КАК МестоХранения,
	|	ЛОЖЬ									КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО							КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО							КАК ИсправляемыйДокумент,
	|	&Дата									КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область РаспределениеПоПартиям

Функция ТекстыЗапросаРаспределенияЗатрат()
	
	ТекстыЗапроса = Новый Массив;
	
	// Данные документа
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаВтЗатраты());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаМатериальныеЗатратыДокумента());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаТрудозатратыДокумента());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаПрочиеРасходыДокумента());
	
	// Данные переходящих партий
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаНезавершенныеПартии());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаПереходящиеПартии());
	
	// Данные для порядка учета затрат "По текущему местоположению"
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаПереходящиеЭтапы());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаДатыКрайнихВыполненныхЭтапов());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаКрайниеВыполненныеЭтапы());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаЭтапыПоТекущемуМестуОбработки());
	ТекстыЗапроса.Добавить(ТекстЗапросаВтОшибкиПараллельностиЭтапов());
	
	// Данные для порядка учета затрат "По месту выпуска"
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаВыпускающиеЭтапы());
	
	// Итоговый перечень этапов, включаемых в базу распределения
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаЭтапыБазыРаспределения());
	
	// Данные базы распределения
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаМатериалыЭтаповПодготовительная());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаВтМатериалыЭтапов());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаВтТрудозатратыЭтапов());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаМатериалыЭтапов());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаТрудозатратыЭтапов());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаМатериалыТрудозатратыЭтапов());
	
	Возврат ТекстыЗапроса;
	
КонецФункции

Функция ТекстыЗапросаОшибкиВДанныхРаспределенияОстатковНЗП()
	
	ТекстыЗапроса = Новый Массив;
	
	// Данные переходящих партий
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаНезавершенныеПартии());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаПереходящиеПартии());
	
	// Данные для порядка учета затрат "По текущему местоположению"
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаПереходящиеЭтапы());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаДатыКрайнихВыполненныхЭтапов());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаКрайниеВыполненныеЭтапы());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаЭтапыПоТекущемуМестуОбработки());
	ТекстыЗапроса.Добавить(ТекстЗапросаВтОшибкиПараллельностиЭтапов());
	
	// Данные для порядка учета затрат "По месту выпуска"
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаВыпускающиеЭтапы());
	
	// Итоговый перечень этапов, включаемых в базу распределения
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаЭтапыБазыРаспределения());
	
	// Данные базы распределения
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаМатериалыЭтаповПодготовительная());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаВтМатериалыЭтапов());
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаВтТрудозатратыЭтапов());
	
	// Ошибки в данных распределения остатков НЗП
	ТекстыЗапроса.Добавить(ТекстЗапросаОшибкиВДанныхРаспределенияОстатковНЗП());
	
	Возврат ТекстыЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтЗатраты()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Затраты.Ссылка						КАК Ссылка,
	|	Затраты.НомерСтроки					КАК НомерСтроки,
	|	Затраты.КодВнешний					КАК КодВнешний,
	|	Затраты.НаименованиеВнешнее			КАК НаименованиеВнешнее,
	|	Затраты.ТипЗатрат					КАК ТипЗатрат,
	|	Затраты.Ссылка.Подразделение		КАК Подразделение,
	|	Затраты.СтатьяРасходов				КАК СтатьяРасходов,
	|	Затраты.АналитикаРасходов			КАК АналитикаРасходов,
	|	Затраты.СтатьяКалькуляции			КАК СтатьяКалькуляции,
	|	Затраты.ПравилоОтнесенияНаВыпускУпр	КАК ПравилоОтнесенияНаВыпускУпр,
	|	Затраты.ПравилоОтнесенияНаВыпускРегл КАК ПравилоОтнесенияНаВыпускРегл,
	|	Затраты.Сумма						КАК Сумма,
	|	Затраты.СуммаРегл					КАК СуммаРегл,
	|	Затраты.СуммаПР						КАК СуммаПР,
	|	Затраты.СуммаВР						КАК СуммаВР
	|ПОМЕСТИТЬ ВтЗатраты
	|ИЗ
	|	Документ.НачальныеОстаткиНЗППоПодразделениям.Затраты КАК Затраты
	|ГДЕ
	|	Затраты.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Затраты.ТипЗатрат
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериальныеЗатратыДокумента()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СУММА(Затраты.Сумма)		КАК Сумма,
	|	СУММА(Затраты.СуммаРегл)	КАК СуммаРегл,
	|	СУММА(Затраты.СуммаПР)		КАК СуммаПР,
	|	СУММА(Затраты.СуммаВР)		КАК СуммаВР
	|ИЗ
	|	ВтЗатраты КАК Затраты
	|ГДЕ
	|	Затраты.ТипЗатрат В (ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.Материальные),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.ВозвратныеОтходы))
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТрудозатратыДокумента()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СУММА(Затраты.Сумма)		КАК Сумма,
	|	СУММА(Затраты.СуммаРегл)	КАК СуммаРегл,
	|	СУММА(Затраты.СуммаПР)		КАК СуммаПР,
	|	СУММА(Затраты.СуммаВР)		КАК СуммаВР
	|ИЗ
	|	ВтЗатраты КАК Затраты
	|ГДЕ
	|	Затраты.ТипЗатрат = ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.ОплатаТруда)
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходыДокумента()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""Прочие""							КАК ТипЗатрат,
	|	ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка) КАК ПартияПроизводства,
	|	Затраты.НомерСтроки					КАК НомерСтроки,
	|	Затраты.Подразделение				КАК Подразделение,
	|	Затраты.СтатьяРасходов				КАК СтатьяРасходов,
	|	Затраты.СтатьяРасходов				КАК Затрата,
	|	Затраты.АналитикаРасходов			КАК АналитикаРасходов,
	|	Затраты.СтатьяКалькуляции			КАК СтатьяКалькуляции,
	|	Затраты.ПравилоОтнесенияНаВыпускУпр	КАК ПравилоОтнесенияНаВыпускУпр,
	|	Затраты.ПравилоОтнесенияНаВыпускРегл КАК ПравилоОтнесенияНаВыпускРегл,
	|	Затраты.Сумма						КАК Сумма,
	|	0									КАК База,
	|	Затраты.СуммаРегл					КАК СуммаРегл,
	|	0									КАК СуммаНУ,
	|	Затраты.СуммаПР						КАК СуммаПР,
	|	Затраты.СуммаВР						КАК СуммаВР
	|ИЗ
	|	ВтЗатраты КАК Затраты
	|ГДЕ
	|	Затраты.ТипЗатрат В (ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.Амортизация),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.Прочее))
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНезавершенныеПартии()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПартииПроизводства.ПартияПроизводства КАК ПартияПроизводства
	|ПОМЕСТИТЬ НезавершенныеПартии
	|ИЗ
	|	(ВЫБРАТЬ
	|		РеквизитыЭтапа.ПартияПроизводства КАК ПартияПроизводства
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
	|	ГДЕ
	|		РеквизитыЭтапа.Проведен
	|		И НЕ РеквизитыЭтапа.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|		И НЕ РеквизитыЭтапа.ПартияПроизводства = ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
	|		И РеквизитыЭтапа.Организация = &Организация
	|		И (&НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ИЛИ РеквизитыЭтапа.НаправлениеДеятельности = &НаправлениеДеятельности)
	|		И РеквизитыЭтапа.ФактическоеОкончаниеЭтапа = ДАТАВРЕМЯ(1, 1, 1)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РеквизитыЭтапа.ПартияПроизводства КАК ПартияПроизводства
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
	|	ГДЕ
	|		РеквизитыЭтапа.Проведен
	|		И НЕ РеквизитыЭтапа.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|		И НЕ РеквизитыЭтапа.ПартияПроизводства = ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
	|		И РеквизитыЭтапа.Организация = &Организация
	|		И (&НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ИЛИ РеквизитыЭтапа.НаправлениеДеятельности = &НаправлениеДеятельности)
	|		И РеквизитыЭтапа.ФактическоеОкончаниеЭтапа > КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ)
	|	) КАК ПартииПроизводства
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииПроизводства.ПартияПроизводства
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартияПроизводства
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПереходящиеПартии()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НезавершенныеПартии.ПартияПроизводства КАК ПартияПроизводства
	|ПОМЕСТИТЬ ПереходящиеПартии
	|ИЗ
	|	НезавершенныеПартии КАК НезавершенныеПартии
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
	|	ПО РеквизитыЭтапа.ПартияПроизводства = НезавершенныеПартии.ПартияПроизводства
	|	И НЕ РеквизитыЭтапа.ФактическоеНачалоЭтапа = ДАТАВРЕМЯ(1, 1, 1)
	|	И РеквизитыЭтапа.ФактическоеНачалоЭтапа <= КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ)
	|
	|ГДЕ
	|	РеквизитыЭтапа.Проведен
	|	И НЕ РеквизитыЭтапа.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|
	|СГРУППИРОВАТЬ ПО
	|	НезавершенныеПартии.ПартияПроизводства
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартияПроизводства
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПереходящиеЭтапы()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПереходящиеПартии.ПартияПроизводства	КАК ПартияПроизводства,
	|	ПереходящиеПартии.Этап					КАК Этап,
	|	ПереходящиеПартии.Подразделение			КАК Подразделение
	|ПОМЕСТИТЬ ПереходящиеЭтапы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПереходящиеПартии.ПартияПроизводства	КАК ПартияПроизводства,
	|		РеквизитыЭтапа.Ссылка					КАК Этап,
	|		РеквизитыЭтапа.Подразделение			КАК Подразделение
	|	ИЗ
	|		ПереходящиеПартии КАК ПереходящиеПартии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
	|		ПО РеквизитыЭтапа.ПартияПроизводства = ПереходящиеПартии.ПартияПроизводства
	|
	|	ГДЕ
	|		&ПорядокУчетаЗатрат =
	|			ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаЗатратВоВнешнейСистеме.ПоТекущемуМестонахождениюПартии)
	|		И РеквизитыЭтапа.Проведен
	|		И НЕ РеквизитыЭтапа.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|		И НЕ РеквизитыЭтапа.ФактическоеНачалоЭтапа = ДАТАВРЕМЯ(1, 1, 1)
	|		И РеквизитыЭтапа.ФактическоеНачалоЭтапа <= КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ)
	|		И РеквизитыЭтапа.ФактическоеОкончаниеЭтапа >= КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПереходящиеПартии.ПартияПроизводства	КАК ПартияПроизводства,
	|		РеквизитыЭтапа.Ссылка					КАК Этап,
	|		РеквизитыЭтапа.Подразделение			КАК Подразделение
	|	ИЗ
	|		ПереходящиеПартии КАК ПереходящиеПартии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
	|		ПО РеквизитыЭтапа.ПартияПроизводства = ПереходящиеПартии.ПартияПроизводства
	|
	|	ГДЕ
	|		&ПорядокУчетаЗатрат =
	|			ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаЗатратВоВнешнейСистеме.ПоТекущемуМестонахождениюПартии)
	|		И РеквизитыЭтапа.Проведен
	|		И НЕ РеквизитыЭтапа.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|		И НЕ РеквизитыЭтапа.ФактическоеНачалоЭтапа = ДАТАВРЕМЯ(1, 1, 1)
	|		И РеквизитыЭтапа.ФактическоеНачалоЭтапа <= КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ)
	|		И РеквизитыЭтапа.ФактическоеОкончаниеЭтапа = ДАТАВРЕМЯ(1, 1, 1)
	|	) КАК ПереходящиеПартии
	|
	|СГРУППИРОВАТЬ ПО
	|	ПереходящиеПартии.ПартияПроизводства,
	|	ПереходящиеПартии.Этап,
	|	ПереходящиеПартии.Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартияПроизводства
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыКрайнихВыполненныхЭтапов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПереходящиеПартии.ПартияПроизводства				КАК ПартияПроизводства,
	|	МАКСИМУМ(РеквизитыЭтапа.ФактическоеОкончаниеЭтапа)	КАК ДатаВыполнения
	|ПОМЕСТИТЬ ДатыКрайнихВыполненныхЭтапов
	|ИЗ
	|	ПереходящиеПартии КАК ПереходящиеПартии
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
	|	ПО РеквизитыЭтапа.ПартияПроизводства = ПереходящиеПартии.ПартияПроизводства
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПереходящиеЭтапы КАК ПереходящиеЭтапы
	|	ПО ПереходящиеЭтапы.ПартияПроизводства = ПереходящиеПартии.ПартияПроизводства
	|
	|ГДЕ
	|	&ПорядокУчетаЗатрат =
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаЗатратВоВнешнейСистеме.ПоТекущемуМестонахождениюПартии)
	|	И РеквизитыЭтапа.Проведен
	|	И НЕ РеквизитыЭтапа.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|	И РеквизитыЭтапа.ФактическоеОкончаниеЭтапа < КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ)
	|	И ПереходящиеЭтапы.ПартияПроизводства ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ПереходящиеПартии.ПартияПроизводства
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартияПроизводства,
	|	ДатаВыполнения
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаКрайниеВыполненныеЭтапы()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РеквизитыЭтапа.Ссылка КАК Этап
	|ПОМЕСТИТЬ КрайниеВыполненныеЭтапы
	|ИЗ
	|	ДатыКрайнихВыполненныхЭтапов КАК ДатыКрайнихВыполненныхЭтапов
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
	|	ПО РеквизитыЭтапа.ПартияПроизводства = ДатыКрайнихВыполненныхЭтапов.ПартияПроизводства
	|	И РеквизитыЭтапа.ФактическоеОкончаниеЭтапа = ДатыКрайнихВыполненныхЭтапов.ДатаВыполнения
	|
	|ГДЕ
	|	РеквизитыЭтапа.Проведен
	|	И НЕ РеквизитыЭтапа.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|
	|СГРУППИРОВАТЬ ПО
	|	РеквизитыЭтапа.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Этап
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЭтапыПоТекущемуМестуОбработки()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЭтапыПоТекущемуМестуОбработки.ПартияПроизводства	КАК ПартияПроизводства,
	|	ЭтапыПоТекущемуМестуОбработки.Этап					КАК Этап,
	|	ЭтапыПоТекущемуМестуОбработки.Подразделение			КАК Подразделение
	|ПОМЕСТИТЬ ЭтапыПоТекущемуМестуОбработки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПереходящиеЭтапы.ПартияПроизводства	КАК ПартияПроизводства,
	|		ПереходящиеЭтапы.Этап				КАК Этап,
	|		ПереходящиеЭтапы.Подразделение		КАК Подразделение
	|	ИЗ
	|		ПереходящиеЭтапы КАК ПереходящиеЭтапы
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		РеквизитыЭтапа.ПартияПроизводства	КАК ПартияПроизводства,
	|		РеквизитыЭтапа.Ссылка				КАК Этап,
	|		РеквизитыЭтапа.Подразделение		КАК Подразделение
	|	ИЗ
	|		КрайниеВыполненныеЭтапы КАК КрайниеВыполненныеЭтапы
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.Последователи КАК СледующиеЭтапы
	|		ПО СледующиеЭтапы.Ссылка = КрайниеВыполненныеЭтапы.Этап
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
	|		ПО РеквизитыЭтапа.Ссылка = СледующиеЭтапы.Этап
	|
	|	ГДЕ
	|		РеквизитыЭтапа.Проведен
	|		И НЕ РеквизитыЭтапа.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|	) КАК ЭтапыПоТекущемуМестуОбработки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭтапыПоТекущемуМестуОбработки.ПартияПроизводства,
	|	ЭтапыПоТекущемуМестуОбработки.Этап,
	|	ЭтапыПоТекущемуМестуОбработки.Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартияПроизводства,
	|	Этап
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтОшибкиПараллельностиЭтапов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЭтапыПоТекущемуМестуОбработки.ПартияПроизводства КАК ПартияПроизводства
	|ПОМЕСТИТЬ ВтОшибкиПараллельностиЭтапов
	|ИЗ
	|	ЭтапыПоТекущемуМестуОбработки КАК ЭтапыПоТекущемуМестуОбработки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭтапыПоТекущемуМестуОбработки.ПартияПроизводства
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ЭтапыПоТекущемуМестуОбработки.Этап) > 1
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыпускающиеЭтапы()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПереходящиеПартии.ПартияПроизводства	КАК ПартияПроизводства,
	|	РеквизитыЭтапа.Ссылка					КАК Этап,
	|	РеквизитыЭтапа.Подразделение			КАК Подразделение
	|ПОМЕСТИТЬ ВыпускающиеЭтапы
	|ИЗ
	|	ПереходящиеПартии КАК ПереходящиеПартии
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
	|	ПО РеквизитыЭтапа.ПартияПроизводства = ПереходящиеПартии.ПартияПроизводства
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаПродукция
	|	ПО ТаблицаПродукция.Ссылка = РеквизитыЭтапа.Ссылка
	|
	|ГДЕ
	|	&ПорядокУчетаЗатрат =
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаЗатратВоВнешнейСистеме.ПоМестуВыпуска)
	|	И РеквизитыЭтапа.Проведен
	|	И НЕ РеквизитыЭтапа.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|	И РеквизитыЭтапа.Подразделение = &Подразделение
	|	И НЕ ТаблицаПродукция.Отменено
	|
	|СГРУППИРОВАТЬ ПО
	|	ПереходящиеПартии.ПартияПроизводства,
	|	РеквизитыЭтапа.Ссылка,
	|	РеквизитыЭтапа.Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартияПроизводства,
	|	Этап
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЭтапыБазыРаспределения()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЭтапыБазыРаспределения.ПартияПроизводства	КАК ПартияПроизводства,
	|	ЭтапыБазыРаспределения.Подразделение		КАК Подразделение,
	|	ЭтапыБазыРаспределения.Этап					КАК Этап,
	|	ЭтапыБазыРаспределения.Назначение			КАК Назначение
	|ПОМЕСТИТЬ ЭтапыБазыРаспределения
	|ИЗ
	|	(
	// Этапы по месту возникновения
	|	ВЫБРАТЬ
	|		РеквизитыЭтапа.ПартияПроизводства	КАК ПартияПроизводства,
	|		РеквизитыЭтапа.Ссылка				КАК Этап,
	|		РеквизитыЭтапа.Подразделение		КАК Подразделение,
	|		РеквизитыЭтапа.Назначение			КАК Назначение
	|	ИЗ
	|		ПереходящиеПартии КАК ПереходящиеПартии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
	|		ПО РеквизитыЭтапа.ПартияПроизводства = ПереходящиеПартии.ПартияПроизводства
	|
	|	ГДЕ
	|		&ПорядокУчетаЗатрат =
	|			ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаЗатратВоВнешнейСистеме.ПоМестуВозникновения)
	|		И РеквизитыЭтапа.Подразделение = &Подразделение
	|		И РеквизитыЭтапа.Проведен
	|		И НЕ РеквизитыЭтапа.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Этапы по текущему местонахождению партии
	|	ВЫБРАТЬ
	|		РеквизитыЭтапа.ПартияПроизводства			КАК ПартияПроизводства,
	|		РеквизитыЭтапа.Ссылка						КАК Этап,
	|		ЭтапыПоТекущемуМестуОбработки.Подразделение	КАК Подразделение,
	|		РеквизитыЭтапа.Назначение					КАК Назначение
	|	ИЗ
	|		ЭтапыПоТекущемуМестуОбработки КАК ЭтапыПоТекущемуМестуОбработки
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапаПоТекущемуМестуОбработки
	|		ПО РеквизитыЭтапаПоТекущемуМестуОбработки.Ссылка = ЭтапыПоТекущемуМестуОбработки.Этап
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
	|		ПО РеквизитыЭтапа.ПартияПроизводства = ЭтапыПоТекущемуМестуОбработки.ПартияПроизводства
	|		И РеквизитыЭтапа.ФактическоеНачалоЭтапа <= КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОшибкиПараллельностиЭтапов КАК ОшибкиПараллельностиЭтапов
	|		ПО ОшибкиПараллельностиЭтапов.ПартияПроизводства = ЭтапыПоТекущемуМестуОбработки.ПартияПроизводства
	|
	|	ГДЕ
	|		&ПорядокУчетаЗатрат =
	|			ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаЗатратВоВнешнейСистеме.ПоТекущемуМестонахождениюПартии)
	|		И РеквизитыЭтапа.Проведен
	|		И НЕ РеквизитыЭтапа.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|		И ЭтапыПоТекущемуМестуОбработки.Подразделение = &Подразделение
	|		И ОшибкиПараллельностиЭтапов.ПартияПроизводства ЕСТЬ NULL
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Этапы по месту выпуска
	|	ВЫБРАТЬ
	|		РеквизитыЭтапа.ПартияПроизводства	КАК ПартияПроизводства,
	|		РеквизитыЭтапа.Ссылка				КАК Этап,
	|		ВыпускающиеЭтапы.Подразделение		КАК Подразделение,
	|		РеквизитыЭтапа.Назначение			КАК Назначение
	|	ИЗ
	|		ВыпускающиеЭтапы КАК ВыпускающиеЭтапы
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыВыпускающегоЭтапа
	|		ПО РеквизитыВыпускающегоЭтапа.Ссылка = ВыпускающиеЭтапы.Этап
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
	|		ПО РеквизитыЭтапа.ПартияПроизводства = ВыпускающиеЭтапы.ПартияПроизводства
	|		И РеквизитыЭтапа.ФактическоеНачалоЭтапа <= КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ)
	|
	|	ГДЕ
	|		&ПорядокУчетаЗатрат =
	|			ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаЗатратВоВнешнейСистеме.ПоМестуВыпуска)
	|		И РеквизитыЭтапа.Проведен
	|		И НЕ РеквизитыЭтапа.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|	) КАК ЭтапыБазыРаспределения
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЭтапыБазыРаспределения.ПартияПроизводства,
	|	ЭтапыБазыРаспределения.Этап,
	|	ЭтапыБазыРаспределения.Подразделение,
	|	ЭтапыБазыРаспределения.Назначение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартияПроизводства,
	|	Этап
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыЭтаповПодготовительная()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаМатериалы.ПартияПроизводства							КАК ПартияПроизводства,
	|	ТаблицаМатериалы.Подразделение								КАК Подразделение,
	|	ТаблицаМатериалы.ВидЗапасов									КАК ВидЗапасов,
	|	ТаблицаМатериалы.Номенклатура								КАК Номенклатура,
	|	ТаблицаМатериалы.Характеристика								КАК Характеристика,
	|	ТаблицаМатериалы.Серия										КАК Серия,
	|	ТаблицаМатериалы.СтатьяКалькуляции							КАК СтатьяКалькуляции,
	|	ТаблицаМатериалы.Назначение									КАК Назначение,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)	КАК Упаковка,
	|	СУММА(ТаблицаМатериалы.Количество)							КАК Количество,
	|	СУММА(ТаблицаМатериалы.Количество)							КАК КоличествоУпаковок
	|ПОМЕСТИТЬ МатериалыЭтаповПодготовительная
	|ИЗ
	|	(
	// Материалы
	|	ВЫБРАТЬ
	|		ЭтапыБазыРаспределения.ПартияПроизводства							КАК ПартияПроизводства,
	|		ЭтапыБазыРаспределения.Подразделение								КАК Подразделение,
	|		ТоварыОрганизаций.КорВидЗапасов										КАК ВидЗапасов,
	|		ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.Номенклатура		КАК Номенклатура,
	|		ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.Характеристика		КАК Характеристика,
	|		ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.Серия				КАК Серия,
	|		ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.Назначение			КАК Назначение,
	|		ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.СтатьяКалькуляции	КАК СтатьяКалькуляции,
	|		ТоварыОрганизаций.Количество										КАК Количество
	|	ИЗ
	|		ЭтапыБазыРаспределения КАК ЭтапыБазыРаспределения
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ПО ТоварыОрганизаций.Регистратор = ЭтапыБазыРаспределения.Этап
	|		И ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И ТоварыОрганизаций.ХозяйственнаяОперация =
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|		И ТоварыОрганизаций.Период <= КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ)
	|	
	|	ГДЕ
	|		НЕ ТоварыОрганизаций.КорВидЗапасов.ТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Возвратные отходы
	|	ВЫБРАТЬ
	|		ЭтапыБазыРаспределения.ПартияПроизводства					КАК ПартияПроизводства,
	|		ЭтапыБазыРаспределения.Подразделение						КАК Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)				КАК ВидЗапасов,
	|		ТаблицаМатериалы.АналитикаУчетаНоменклатуры.Номенклатура	КАК Номенклатура,
	|		ТаблицаМатериалы.АналитикаУчетаНоменклатуры.Характеристика	КАК Характеристика,
	|		ТаблицаМатериалы.АналитикаУчетаНоменклатуры.Серия			КАК Серия,
	|		ЭтапыБазыРаспределения.Назначение							КАК Назначение,
	|		ТаблицаМатериалы.СтатьяКалькуляции							КАК СтатьяКалькуляции,
	|		-ТаблицаМатериалы.Количество								КАК Количество
	|	ИЗ
	|		ЭтапыБазыРаспределения КАК ЭтапыБазыРаспределения
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ВидыЗапасовИзделия КАК ТаблицаМатериалы
	|		ПО ТаблицаМатериалы.Ссылка = ЭтапыБазыРаспределения.Этап
	|		И ТаблицаМатериалы.ДатаОперации <= КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ)
	|
	|	ГДЕ
	|		ТаблицаМатериалы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)
	|		И НЕ ТаблицаМатериалы.ВидЗапасов.ТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
	|	) КАК ТаблицаМатериалы
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаМатериалы.ПартияПроизводства,
	|	ТаблицаМатериалы.ВидЗапасов,
	|	ТаблицаМатериалы.Номенклатура,
	|	ТаблицаМатериалы.СтатьяКалькуляции,
	|	ТаблицаМатериалы.Характеристика,
	|	ТаблицаМатериалы.Серия,
	|	ТаблицаМатериалы.Подразделение,
	|	ТаблицаМатериалы.Назначение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтМатериалыЭтапов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""Материальные""								КАК ТипЗатрат,
	|	ТаблицаМатериалы.ПартияПроизводства				КАК ПартияПроизводства,
	|	ТаблицаМатериалы.Подразделение					КАК Подразделение,
	|	ТаблицаМатериалы.ВидЗапасов						КАК ВидЗапасов,
	|	ТаблицаМатериалы.Номенклатура					КАК Номенклатура,
	|	ТаблицаМатериалы.Номенклатура					КАК Затрата,
	|	ТаблицаМатериалы.Характеристика					КАК Характеристика,
	|	ТаблицаМатериалы.Серия							КАК Серия,
	|	ТаблицаМатериалы.СтатьяКалькуляции				КАК СтатьяКалькуляции,
	|	ТаблицаМатериалы.Назначение						КАК Назначение,
	|	ТаблицаМатериалы.Упаковка						КАК Упаковка,
	|	ТаблицаМатериалы.КоличествоУпаковок				КАК КоличествоУпаковок,
	|	ТаблицаМатериалы.Количество						КАК Количество,
	|	ТаблицаМатериалы.КоличествоУпаковок
	|	* ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
	|	* ЕСТЬNULL(ЦеныНоменклатуры.Цена,0)
	|	* ВЫБОР
	|		КОГДА &ВалютаУпрУчета <> ЦеныНоменклатуры.Валюта
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(КурсыВалютыЦены.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсыВалютыЦены.КурсЧислитель, 0) > 0
	|						И ЕСТЬNULL(КурсыВалюты.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсыВалюты.КурсЧислитель, 0) > 0
	|					ТОГДА 
	|						(КурсыВалютыЦены.КурсЧислитель * КурсыВалюты.КурсЗнаменатель)
	|						/ (КурсыВалюты.КурсЧислитель * КурсыВалютыЦены.КурсЗнаменатель)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|	/ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2,1)	КАК БазаРаспределения,
	|	0												КАК Цена,
	|	0												КАК Сумма,
	|	0												КАК СуммаРегл,
	|	0												КАК СуммаНУ,
	|	0												КАК СуммаПР,
	|	0												КАК СуммаВР
	|ПОМЕСТИТЬ ВтМатериалыЭтапов
	|ИЗ
	|	МатериалыЭтаповПодготовительная КАК ТаблицаМатериалы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ), ВидЦены = &ВидЦены) КАК ЦеныНоменклатуры
	|	ПО ЦеныНоменклатуры.Номенклатура = ТаблицаМатериалы.Номенклатура
	|	И ЦеныНоменклатуры.Характеристика = ТаблицаМатериалы.Характеристика
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ), БазоваяВалюта = &БазоваяВалюта) КАК КурсыВалютыЦены
	|	ПО КурсыВалютыЦены.Валюта = ЦеныНоменклатуры.Валюта
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ), Валюта = &ВалютаУпрУчета И БазоваяВалюта = &БазоваяВалюта) КАК КурсыВалюты
	|	ПО ИСТИНА
	|	
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаМатериалы.Упаковка",
			"ТаблицаМатериалы.Номенклатура"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЦеныНоменклатуры.Упаковка",
			"ЦеныНоменклатуры.Номенклатура"));
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтТрудозатратыЭтапов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""Трудозатраты""								КАК ТипЗатрат,
	|	ЭтапыБазыРаспределения.ПартияПроизводства		КАК ПартияПроизводства,
	|	ЭтапыБазыРаспределения.Подразделение			КАК Подразделение,
	|	ТаблицаТрудозатраты.ВидРабот					КАК ВидРабот,
	|	ТаблицаТрудозатраты.ВидРабот					КАК Затрата,
	|	ТаблицаТрудозатраты.СтатьяКалькуляции			КАК СтатьяКалькуляции,
	|	СУММА(ТаблицаТрудозатраты.Количество)			КАК Количество,
	|	СУММА(ТаблицаТрудозатраты.Количество)			КАК КоличествоУпаковок,
	|	МАКСИМУМ(ЕСТЬNULL(ЦеныВидовРабот.Расценка, 0))	КАК НормативнаяРасценка,
	|	СУММА(ТаблицаТрудозатраты.Количество
	|	* ЕСТЬNULL(ЦеныВидовРабот.Расценка, 0))			КАК НормативнаяСумма,
	|	СУММА(ТаблицаТрудозатраты.Количество
	|	* ЕСТЬNULL(ЦеныВидовРабот.Расценка, 0)
	|	* ВЫБОР
	|		КОГДА &ВалютаУпрУчета <> &ВалютаВидовРабот
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(КурсыВалютыЦены.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсыВалютыЦены.КурсЧислитель, 0) > 0
	|						И ЕСТЬNULL(КурсыВалюты.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсыВалюты.КурсЧислитель, 0) > 0
	|					ТОГДА 
	|						(КурсыВалютыЦены.КурсЧислитель * КурсыВалюты.КурсЗнаменатель)
	|						/ (КурсыВалюты.КурсЧислитель * КурсыВалютыЦены.КурсЗнаменатель)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ)											КАК БазаРаспределения,
	|	0												КАК Цена,
	|	0												КАК Сумма,
	|	0												КАК СуммаРегл,
	|	0												КАК СуммаНУ,
	|	0												КАК СуммаПР,
	|	0												КАК СуммаВР
	|ПОМЕСТИТЬ ВтТрудозатратыЭтапов
	|ИЗ
	|	ЭтапыБазыРаспределения КАК ЭтапыБазыРаспределения
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.Трудозатраты КАК ТаблицаТрудозатраты
	|	ПО ТаблицаТрудозатраты.Ссылка = ЭтапыБазыРаспределения.Этап
	|	И ТаблицаТрудозатраты.Выполнено
	|	И ТаблицаТрудозатраты.ДатаВыполнения <= КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ)
	|	И НЕ ТаблицаТрудозатраты.Отменено
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасценкиРаботСотрудников.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ)) КАК ЦеныВидовРабот
	|	ПО ЦеныВидовРабот.ВидРабот = ТаблицаТрудозатраты.ВидРабот
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ), Валюта = &ВалютаВидовРабот И БазоваяВалюта = &БазоваяВалюта) КАК КурсыВалютыЦены
	|	ПО ИСТИНА
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ), Валюта = &ВалютаУпрУчета И БазоваяВалюта = &БазоваяВалюта) КАК КурсыВалюты
	|	ПО ИСТИНА
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЭтапыБазыРаспределения.ПартияПроизводства,
	|	ЭтапыБазыРаспределения.Подразделение,
	|	ТаблицаТрудозатраты.ВидРабот,
	|	ТаблицаТрудозатраты.СтатьяКалькуляции
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыЭтапов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МатериалыЭтапов.ТипЗатрат			КАК ТипЗатрат,
	|	МатериалыЭтапов.ПартияПроизводства	КАК ПартияПроизводства,
	|	МатериалыЭтапов.Подразделение		КАК Подразделение,
	|	МатериалыЭтапов.ВидЗапасов			КАК ВидЗапасов,
	|	МатериалыЭтапов.Номенклатура		КАК Номенклатура,
	|	МатериалыЭтапов.Затрата				КАК Затрата,
	|	МатериалыЭтапов.Характеристика		КАК Характеристика,
	|	МатериалыЭтапов.Серия				КАК Серия,
	|	МатериалыЭтапов.СтатьяКалькуляции	КАК СтатьяКалькуляции,
	|	МатериалыЭтапов.Назначение			КАК Назначение,
	|	МатериалыЭтапов.Упаковка			КАК Упаковка,
	|	МатериалыЭтапов.КоличествоУпаковок	КАК КоличествоУпаковок,
	|	МатериалыЭтапов.Количество			КАК Количество,
	|	МатериалыЭтапов.БазаРаспределения	КАК БазаРаспределения,
	|	МатериалыЭтапов.Цена				КАК Цена,
	|	МатериалыЭтапов.Сумма				КАК Сумма,
	|	МатериалыЭтапов.СуммаРегл			КАК СуммаРегл,
	|	МатериалыЭтапов.СуммаНУ				КАК СуммаНУ,
	|	МатериалыЭтапов.СуммаПР				КАК СуммаПР,
	|	МатериалыЭтапов.СуммаВР				КАК СуммаВР
	|ИЗ
	|	ВтМатериалыЭтапов КАК МатериалыЭтапов
	|
	|ГДЕ
	|	НЕ МатериалыЭтапов.БазаРаспределения = 0
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТрудозатратыЭтапов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТрудозатратыЭтапов.ТипЗатрат			КАК ТипЗатрат,
	|	ТрудозатратыЭтапов.ПартияПроизводства	КАК ПартияПроизводства,
	|	ТрудозатратыЭтапов.Подразделение		КАК Подразделение,
	|	ТрудозатратыЭтапов.ВидРабот				КАК ВидРабот,
	|	ТрудозатратыЭтапов.Затрата				КАК Затрата,
	|	ТрудозатратыЭтапов.СтатьяКалькуляции	КАК СтатьяКалькуляции,
	|	ТрудозатратыЭтапов.Количество			КАК Количество,
	|	ТрудозатратыЭтапов.КоличествоУпаковок	КАК КоличествоУпаковок,
	|	ТрудозатратыЭтапов.НормативнаяРасценка	КАК НормативнаяРасценка,
	|	ТрудозатратыЭтапов.НормативнаяСумма		КАК НормативнаяСумма,
	|	ТрудозатратыЭтапов.БазаРаспределения	КАК БазаРаспределения,
	|	ТрудозатратыЭтапов.Цена					КАК Цена,
	|	ТрудозатратыЭтапов.Сумма				КАК Сумма,
	|	ТрудозатратыЭтапов.СуммаРегл			КАК СуммаРегл,
	|	ТрудозатратыЭтапов.СуммаНУ				КАК СуммаНУ,
	|	ТрудозатратыЭтапов.СуммаПР				КАК СуммаПР,
	|	ТрудозатратыЭтапов.СуммаВР				КАК СуммаВР
	|ИЗ
	|	ВтТрудозатратыЭтапов КАК ТрудозатратыЭтапов
	|
	|ГДЕ
	|	НЕ ТрудозатратыЭтапов.БазаРаспределения = 0
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыТрудозатратыЭтапов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МатериалыТрудозатраты.ПартияПроизводства	КАК ПартияПроизводства,
	|	СУММА(МатериалыТрудозатраты.Материалы
	|		+ МатериалыТрудозатраты.Трудозатраты)	КАК МатериалыТрудозатраты,
	|	СУММА(МатериалыТрудозатраты.Материалы)		КАК Материалы,
	|	СУММА(МатериалыТрудозатраты.Трудозатраты)	КАК Трудозатраты
	|ИЗ
	|	(ВЫБРАТЬ
	|		МатериалыЭтапов.ПартияПроизводства	КАК ПартияПроизводства,
	|		МатериалыЭтапов.БазаРаспределения	КАК Материалы,
	|		0									КАК Трудозатраты
	|	ИЗ
	|		ВтМатериалыЭтапов КАК МатериалыЭтапов
	|
	|	ГДЕ
	|		НЕ МатериалыЭтапов.БазаРаспределения = 0
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТрудозатратыЭтапов.ПартияПроизводства	КАК ПартияПроизводства,
	|		0										КАК Материалы,
	|		ТрудозатратыЭтапов.БазаРаспределения	КАК Трудозатраты
	|	ИЗ
	|		ВтТрудозатратыЭтапов КАК ТрудозатратыЭтапов
	|
	|	ГДЕ
	|		НЕ ТрудозатратыЭтапов.БазаРаспределения = 0
	|	) КАК МатериалыТрудозатраты
	|	
	|СГРУППИРОВАТЬ ПО
	|	МатериалыТрудозатраты.ПартияПроизводства
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОшибкиВДанныхРаспределенияОстатковНЗП()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""НеУказанаЦена""										КАК ТипОшибки,
	|	ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)	КАК ПартияПроизводства,
	|	ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)		КАК Этап,
	|	ВтМатериалыЭтапов.Затрата								КАК Затрата,
	|	ВтМатериалыЭтапов.Характеристика						КАК Характеристика
	|ИЗ
	|	ВтМатериалыЭтапов КАК ВтМатериалыЭтапов
	|
	|ГДЕ
	|	ВтМатериалыЭтапов.БазаРаспределения = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтМатериалыЭтапов.Затрата,
	|	ВтМатериалыЭтапов.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""НеУказанаРасценка""											КАК ТипОшибки,
	|	ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)			КАК ПартияПроизводства,
	|	ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)				КАК Этап,
	|	ВтТрудозатратыЭтапов.Затрата									КАК Затрата,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)	КАК Характеристика
	|ИЗ
	|	ВтТрудозатратыЭтапов КАК ВтТрудозатратыЭтапов
	|
	|ГДЕ
	|	ВтТрудозатратыЭтапов.БазаРаспределения = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтТрудозатратыЭтапов.Затрата
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ПараллельныеЭтапы""											КАК ТипОшибки,
	|	ОшибкиПараллельности.ПартияПроизводства							КАК ПартияПроизводства,
	|	ЭтапыПоТекущемуМестуОбработки.Этап								КАК Этап,
	|	НЕОПРЕДЕЛЕНО													КАК Затрата,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)	КАК Характеристика
	|ИЗ
	|	ВтОшибкиПараллельностиЭтапов КАК ОшибкиПараллельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ЭтапыПоТекущемуМестуОбработки КАК ЭтапыПоТекущемуМестуОбработки
	|	ПО ЭтапыПоТекущемуМестуОбработки.ПартияПроизводства = ОшибкиПараллельности.ПартияПроизводства
	|
	|СГРУППИРОВАТЬ ПО
	|	ОшибкиПараллельности.ПартияПроизводства,
	|	ЭтапыПоТекущемуМестуОбработки.Этап
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли