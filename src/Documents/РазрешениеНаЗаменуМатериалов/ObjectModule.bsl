#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеПроизводством2_2") Тогда
		Если ЗначениеЗаполнено(ЗаказКлиента) Тогда
			ЗаказКлиента = Документы.ЗаказКлиента.ПустаяСсылка();
		КонецЕсли;
		Если ЗначениеЗаполнено(ЗаказНаПроизводство) 
			И ТипЗнч(ЗаказНаПроизводство) <> Тип("ДокументСсылка.ЗаказНаПроизводство2_2") Тогда
			ЗаказНаПроизводство = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("Аналог") Тогда
			Аналоги.Добавить().Номенклатура = ДанныеЗаполнения.Аналог;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("Материалы") Тогда
			
			Для каждого СтрокаМатериал Из ДанныеЗаполнения.Материалы Цикл
				
				СтрокаТаблицы = Материалы.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаМатериал);
				
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.ИдентификаторСтроки) Тогда
					СтрокаТаблицы.ИдентификаторСтроки = Новый УникальныйИдентификатор;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("СправочникСсылка.РесурсныеСпецификации") Тогда
		
		Спецификация = ДанныеЗаполнения;
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ЗаказНаПроизводство2_2")
			//++ Устарело_Производство21
				ИЛИ ТипДанныхЗаполнения = Тип("ДокументСсылка.ЗаказНаПроизводство")
			//-- Устарело_Производство21 
			Тогда
		
		ЗаказНаПроизводство = ДанныеЗаполнения;
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		
		ИспользоватьОбособленноеОбеспечениеЗаказов = ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов");
		
		Если Не ИспользоватьОбособленноеОбеспечениеЗаказов Тогда
			ТекстИсключения = НСтр("ru = 'Ввод разрешений на замену возможен при использовании обособленного обеспечения заказов.';
									|en = 'You can enter the substitution permissions when using assigned order fulfillment.'");
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		Если Не ЕстьТоварыПодЗаказ(ДанныеЗаполнения) Тогда
			ТекстИсключения = НСтр("ru = 'Ввод разрешений на замену возможен при наличии товаров с действием ""К обеспечению"" или ""Резервировать по мере поступления"" и с установленным флагом ""Обособленно"".';
									|en = 'You can enter the substitution permissions if there are goods with the ""To supply"" or ""Reserve upon receipt"" action and with the ""Assigned"" check box selected.'");
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		ЗаказКлиента = ДанныеЗаполнения;
		
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	// Дата окончания действия соглашения должна быть не меньше, чем дата начала действия.
	Если ЗначениеЗаполнено(ДатаНачалаДействия) И ЗначениеЗаполнено(ДатаОкончанияДействия) Тогда
		
		Если ДатаНачалаДействия > ДатаОкончанияДействия Тогда
			
			ТекстОшибки = НСтр("ru = 'Дата окончания действия разрешения должна быть не меньше даты начала';
								|en = 'Permission validity expiration date must be greater than the start date'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект, 
				"ДатаОкончанияДействия",
				,
				Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Статус <> Перечисления.СтатусыРазрешенийНаЗаменуМатериалов.Прекращено Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДатаОкончанияДействия");
	КонецЕсли;
	
	ПроверитьДублиНабора("Аналоги", НСтр("ru = 'Обнаружено дублирование строк в наборе аналогов.';
										|en = 'Duplicate lines are found in the list of substitutes.'"), Отказ);
	
	МассивНепроверяемыхРеквизитов.Добавить("Материалы.КоличествоУпаковок");
	МассивНепроверяемыхРеквизитов.Добавить("Аналоги.КоличествоУпаковок");
	
	ПроверитьЗаполнениеКоличестваВТабЧасти("Материалы", Отказ);
	ПроверитьЗаполнениеКоличестваВТабЧасти("Аналоги", Отказ);
	
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверки.ИмяТЧ = "Материалы";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	ПараметрыПроверки.ИмяТЧ = "Аналоги";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПустойУникальныйИдентификатор = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
	НайденныеСтроки = Материалы.НайтиСтроки(Новый Структура("ИдентификаторСтроки", ПустойУникальныйИдентификатор));
	Для каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		СтрокаТаблицы.ИдентификаторСтроки = Новый УникальныйИдентификатор;
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Ответственный			= ПользователиКлиентСервер.ТекущийПользователь();
	ДатаНачалаДействия		= НачалоДня(ТекущаяДатаСеанса());
	Статус					= Перечисления.СтатусыРазрешенийНаЗаменуМатериалов.Создано;
	
КонецПроцедуры

Функция ЕстьТоварыПодЗаказ(Ссылка)
	
	СтруктураОтбора = Новый Структура("ВариантОбеспечения, Обособленно", 
									   Перечисления.ВариантыОбеспечения.РезервироватьПоМереПоступления, Истина);
	
	НайденныеСтроки = Ссылка.Товары.НайтиСтроки(СтруктураОтбора);
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		СтруктураОтбора = Новый Структура("ВариантОбеспечения, Обособленно", 
										   Перечисления.ВариантыОбеспечения.КОбеспечению, Истина);
		
		НайденныеСтроки = Ссылка.Товары.НайтиСтроки(СтруктураОтбора);
	КонецЕсли;

	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ПроверитьДублиНабора(ИмяНабора, Сообщение, Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Набор.Номенклатура,
	|	Набор.Характеристика,
	|	Набор.НомерСтроки
	|ПОМЕСТИТЬ ВТНабор
	|ИЗ
	|	&Набор КАК Набор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Набор.Номенклатура,
	|	Набор.Характеристика,
	|	МАКСИМУМ(Набор.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	ВТНабор КАК Набор
	|
	|СГРУППИРОВАТЬ ПО
	|	Набор.Номенклатура,
	|	Набор.Характеристика
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.НомерСтроки) > 1";
	
	Запрос.УстановитьПараметр("Набор", ЭтотОбъект[ИмяНабора]);
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Сообщение,
			ЭтотОбъект,
			ИмяНабора + "[" + (Выборка.НомерСтроки - 1) + "].Номенклатура",
			"Объект",
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеКоличестваВТабЧасти(ИмяТЧ, Отказ)
	
	ТаблицаОбъекта = ЭтотОбъект[ИмяТЧ]; // ДокументТабличнаяЧасть.РазрешениеНаЗаменуМатериалов.Материалы, ДокументТабличнаяЧасть.РазрешениеНаЗаменуМатериалов.Аналоги - 
	
	Для каждого Строка Из ТаблицаОбъекта Цикл
		
		Если Строка.КоличествоУпаковок = 0 Тогда
			
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Колонка", "Заполнение", НСтр("ru = 'Количество';
												|en = 'Quantity'"), Строка.НомерСтроки, ИмяТЧ);
				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТЧ, Строка.НомерСтроки, "КоличествоУпаковок"),,
				Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
