
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СписокСвойств = "НаправлениеДеятельности,"
					+ "ЗаказНаПроизводство,"
					+ "ЗаказКлиента,"
					+ "Подразделение,"
					+ "Спецификация,"
					+ "Этап,"
					+ "Изделие,"
					+ "ХарактеристикаИзделия,"
					+ "КоличествоМатериалов";
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, СписокСвойств);
	
	ИспользоватьНаправлениеДеятельности = ЗначениеЗаполнено(НаправлениеДеятельности);
	ИспользоватьЗаказНаПроизводство = ЗначениеЗаполнено(ЗаказНаПроизводство);
	ИспользоватьЗаказКлиента = ЗначениеЗаполнено(ЗаказКлиента);
	ИспользоватьПодразделение = ЗначениеЗаполнено(Подразделение);
	
	//++ Устарело_Производство21
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеПроизводством2_2") Тогда
	//-- Устарело_Производство21	
		Если ЗначениеЗаполнено(ЗаказКлиента) 
			ИЛИ ЗначениеЗаполнено(ЗаказНаПроизводство) 
				И ТипЗнч(ЗаказНаПроизводство) <> Тип("ДокументСсылка.ЗаказНаПроизводство2_2")Тогда
			ТолькоПросмотр = Истина;
			Элементы.ФормаОК.Доступность = Ложь;
		Иначе
			Элементы.ЗаказНаПроизводство.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.ЗаказНаПроизводство2_2");
			Элементы.ИспользоватьЗаказКлиента.Видимость = Ложь;
			Элементы.ЗаказКлиента.Видимость = Ложь;
		КонецЕсли;
	//++ Устарело_Производство21
	Иначе
		Элементы.ЗаказНаПроизводство.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.ЗаказНаПроизводство");
	КонецЕсли;
	//-- Устарело_Производство21
	
	Если ЗначениеЗаполнено(Спецификация) Тогда
		
		ИспользоватьИзделие = Истина;
		РежимИспользованиеИзделие = 1;
		ПоСпецификации = Истина;
		ИспользоватьЭтап = ЗначениеЗаполнено(Этап);
		
	ИначеЕсли ЗначениеЗаполнено(Изделие) Тогда
		
		ИспользоватьИзделие = Истина;
		РежимИспользованиеИзделие = 0;
		
		Если ЗначениеЗаполнено(ХарактеристикаИзделия) Тогда
			ИспользуютсяХарактеристикиДляТекущегоИзделия = Истина;
			ИспользоватьХарактеристикуИзделия = Истина;
		Иначе
			ИспользуютсяХарактеристикиДляТекущегоИзделия = ПризнакИспользованияХарактеристикНаСервере(Изделие);
			ИспользоватьХарактеристикуИзделия = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Спецификация) ИЛИ КоличествоМатериалов > 0 Тогда
		УведомлятьОбИзмененииРежима = Истина;
	КонецЕсли;
	
	УстановитьДоступность();

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ТекстВопроса = НСтр("ru = 'Данные были изменены. Перенести изменения в документ?';
						|en = 'The data was modified. Migrate the changes to the document?'");
	Оповещение = Новый ОписаниеОповещения("ЗаписатьИЗакрытьНаКлиенте", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы, ТекстВопроса);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьНаправлениеДеятельностиПриИзменении(Элемент)
	Элементы.НаправлениеДеятельности.Доступность = ИспользоватьНаправлениеДеятельности;	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗаказНаПроизводствоПриИзменении(Элемент)
	Элементы.ЗаказНаПроизводство.Доступность = ИспользоватьЗаказНаПроизводство;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗаказКлиентаПриИзменении(Элемент)
	Элементы.ЗаказКлиента.Доступность = ИспользоватьЗаказКлиента;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПодразделениеПриИзменении(Элемент)
	Элементы.Подразделение.Доступность = ИспользоватьПодразделение;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьИзделиеПриИзменении(Элемент)
	
	ИспользоватьХарактеристикуИзделия = Ложь;
	
	УстановитьДоступностьИзделие(
		Элементы, 
		ИспользоватьИзделие, 
		РежимИспользованиеИзделие, 
		ИспользоватьХарактеристикуИзделия,
		ИспользуютсяХарактеристикиДляТекущегоИзделия, 
		ИспользоватьЭтап);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоСпецификацииПриИзменении(Элемент)
	
	Если УведомлятьОбИзмененииРежима Тогда
		
		ТекстВопроса = Нстр("ru = 'Изменение области действия приведет к очистке 
									|табличной части ""Набор заменяемых материалов"".
									|Продолжить?';
									|en = 'Changing the scope will clear 
									| the ""Set of substitutes"" table.
									| Continue?'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ПоСпецификацииПриИзмененииЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
        Возврат;
		
	КонецЕсли;
	
	ПоСпецификацииПриИзмененииФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоСпецификацииПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
        УведомлятьОбИзмененииРежима = Ложь;
		ПоСпецификацииПриИзмененииФрагмент();
	Иначе
		РежимИспользованиеИзделие = 0;
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПоСпецификацииПриИзмененииФрагмент()
	
    ИспользоватьХарактеристикуИзделия = Ложь;
	
	УстановитьДоступностьИзделие(
		Элементы, 
		ИспользоватьИзделие, 
		РежимИспользованиеИзделие, 
		ИспользоватьХарактеристикуИзделия,
		ИспользуютсяХарактеристикиДляТекущегоИзделия, 
		ИспользоватьЭтап);

КонецПроцедуры

&НаКлиенте
Процедура СпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если УведомлятьОбИзмененииРежима Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекстВопроса = Нстр("ru = 'Изменение спецификации приведет к очистке табличной части ""Материалы"", продолжить?';
							|en = 'Changing the BOM will clear the ""Materials"" table. Continue?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("СпецификацияНачалоВыбораЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоПроизводимомуИзделиюПриИзменении(Элемент)
	
	ИспользоватьХарактеристикуИзделия = Ложь;
	
	УстановитьДоступностьИзделие(
		Элементы, 
		ИспользоватьИзделие, 
		РежимИспользованиеИзделие, 
		ИспользоватьХарактеристикуИзделия,
		ИспользуютсяХарактеристикиДляТекущегоИзделия, 
		ИспользоватьЭтап);	
	
КонецПроцедуры

&НаКлиенте
Процедура ИзделиеПриИзменении(Элемент)
	
	ИспользоватьХарактеристикуИзделия = Ложь;
	
	Если ЗначениеЗаполнено(Изделие) Тогда
		ИспользуютсяХарактеристикиДляТекущегоИзделия = ПризнакИспользованияХарактеристикНаСервере(Изделие);
	Иначе
		ИспользуютсяХарактеристикиДляТекущегоИзделия = Ложь;
	КонецЕсли;
	
	Элементы.ИспользоватьХарактеристикуИзделия.Доступность = ИспользуютсяХарактеристикиДляТекущегоИзделия;
	Элементы.ХарактеристикаИзделия.Доступность = ИспользоватьХарактеристикуИзделия;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьХарактеристикуИзделияПриИзменении(Элемент)
	Элементы.ХарактеристикаИзделия.Доступность = ИспользоватьХарактеристикуИзделия;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЭтапПриИзменении(Элемент)
	Элементы.Этап.Доступность = ИспользоватьЭтап;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если Модифицированность Тогда
		ЗавершитьРедактирование();
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция РезультатРедактированияНаСервере()
	
	Результат = Новый Структура;
	
	Результат.Вставить("НаправлениеДеятельности", ?(ЗначениеЗаполнено(НаправлениеДеятельности) И ИспользоватьНаправлениеДеятельности,
		НаправлениеДеятельности, Справочники.НаправленияДеятельности.ПустаяСсылка()));
		
	Результат.Вставить("ЗаказНаПроизводство", ?(ЗначениеЗаполнено(ЗаказНаПроизводство) И ИспользоватьЗаказНаПроизводство,
		ЗаказНаПроизводство, Неопределено));
		
	Результат.Вставить("ЗаказКлиента", ?(ЗначениеЗаполнено(ЗаказКлиента) И ИспользоватьЗаказКлиента,
		ЗаказКлиента, Документы.ЗаказКлиента.ПустаяСсылка()));
		
	Результат.Вставить("Подразделение", ?(ЗначениеЗаполнено(Подразделение) И ИспользоватьПодразделение,
		Подразделение, Справочники.СтруктураПредприятия.ПустаяСсылка()));
		
	Результат.Вставить("Спецификация", ?(ЗначениеЗаполнено(Спецификация) И ИспользоватьИзделие И РежимИспользованиеИзделие = 1,
		Спецификация, Справочники.РесурсныеСпецификации.ПустаяСсылка()));
		
	Результат.Вставить("Этап", ?(ЗначениеЗаполнено(Этап) И ИспользоватьЭтап,
		Этап, Справочники.ЭтапыПроизводства.ПустаяСсылка()));
		
	Результат.Вставить("Изделие", ?(ЗначениеЗаполнено(Изделие) И ИспользоватьИзделие И РежимИспользованиеИзделие = 0,
		Изделие, Справочники.Номенклатура.ПустаяСсылка()));
		
	Результат.Вставить("ХарактеристикаИзделия", ?(ЗначениеЗаполнено(ХарактеристикаИзделия) И ИспользоватьХарактеристикуИзделия,
		ХарактеристикаИзделия, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка()));
		
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЗавершитьРедактирование()
	
	Отказ = Ложь;
	
	// Проверка заполнения
	ОчиститьСообщения();
	
	Если ИспользоватьНаправлениеДеятельности И Не ЗначениеЗаполнено(НаправлениеДеятельности) Тогда
		ТекстОшибки = Нстр("ru = 'Поле ""Направление деятельности"" не заполнено';
							|en = '""Line of business"" is required'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "НаправлениеДеятельности", , Отказ);
	КонецЕсли;
	
	Если ИспользоватьЗаказНаПроизводство И Не ЗначениеЗаполнено(ЗаказНаПроизводство) Тогда
		ТекстОшибки = Нстр("ru = 'Поле ""Заказ на производство"" не заполнено';
							|en = '""Production order"" is required'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "ЗаказНаПроизводство", , Отказ);
	КонецЕсли;
	
	Если ИспользоватьЗаказКлиента И Не ЗначениеЗаполнено(ЗаказКлиента) Тогда
		ТекстОшибки = Нстр("ru = 'Поле ""Заказ клиента"" не заполнено';
							|en = '""Sales order"" is required'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "ЗаказКлиента", , Отказ);
	КонецЕсли;
	
	Если ИспользоватьПодразделение И Не ЗначениеЗаполнено(Подразделение) Тогда
		ТекстОшибки = Нстр("ru = 'Поле ""Подразделение"" не заполнено';
							|en = '""Business unit"" is required'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "Подразделение", , Отказ);
	КонецЕсли;
	
	Если ИспользоватьИзделие И РежимИспользованиеИзделие = 1 И Не ЗначениеЗаполнено(Спецификация) Тогда	
		ТекстОшибки = Нстр("ru = 'Поле ""Спецификация"" не заполнено';
							|en = '""Bill of materials"" is required'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "Спецификация", , Отказ);
	КонецЕсли;
	
	Если ИспользоватьЭтап И Не ЗначениеЗаполнено(Этап) Тогда
		ТекстОшибки = Нстр("ru = 'Поле ""Этап"" не заполнено';
							|en = '""Stage"" is required'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "Этап", , Отказ);
	КонецЕсли;
	
	Если ИспользоватьИзделие И РежимИспользованиеИзделие = 0 И Не ЗначениеЗаполнено(Изделие) Тогда
		ТекстОшибки = Нстр("ru = 'Поле ""Номенклатура"" не заполнено';
							|en = '""Product"" is not filled in'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "Изделие", , Отказ);
	КонецЕсли;
	
	Если ИспользоватьХарактеристикуИзделия И Не ЗначениеЗаполнено(ХарактеристикаИзделия) Тогда
		ТекстОшибки = Нстр("ru = 'Поле ""Характеристика"" не заполнено';
							|en = '""Variant"" is not filled in'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "ХарактеристикаИзделия", , Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь;
	
	СтруктураВыбора = Новый Структура();
	СтруктураВыбора.Вставить("ВыполняемаяОперация", "ВыборОбластиДействия");
	СтруктураВыбора.Вставить("ЗначениеВыбора", РезультатРедактированияНаСервере());
	
	ОповеститьОВыборе(СтруктураВыбора);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность()
	
	Элементы.НаправлениеДеятельности.Доступность = ИспользоватьНаправлениеДеятельности;
	Элементы.ЗаказНаПроизводство.Доступность = ИспользоватьЗаказНаПроизводство;
	Элементы.ЗаказКлиента.Доступность = ИспользоватьЗаказКлиента;
	Элементы.Подразделение.Доступность = ИспользоватьПодразделение;
	
	УстановитьДоступностьИзделие(
		Элементы, 
		ИспользоватьИзделие, 
		РежимИспользованиеИзделие, 
		ИспользоватьХарактеристикуИзделия,
		ИспользуютсяХарактеристикиДляТекущегоИзделия, 
		ИспользоватьЭтап);	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьИзделие(
			Элементы,
			ПризнакДоступности,
			РежимДоступности,
			ПризнакДоступностиХарактеристики,
			ИспользованиеХарактеристики,
			ИспользоватьЭтап)
	
	ДоступностьСпецификация = ПризнакДоступности И (РежимДоступности = 1);
	ДоступностьИзделие = ПризнакДоступности И (РежимДоступности = 0);   
	
	Элементы.ПоСпецификации.Доступность = ПризнакДоступности;	
	Элементы.ПоПроизводимомуИзделию.Доступность = ПризнакДоступности;	
	
	Элементы.Спецификация.Доступность = ДоступностьСпецификация;
	Элементы.СпецификацияНадпись.Доступность = ДоступностьСпецификация;
	
	Элементы.ИспользоватьЭтап.Доступность = ДоступностьСпецификация;
	Элементы.Этап.Доступность = ДоступностьСпецификация И ИспользоватьЭтап;
	
	Элементы.Изделие.Доступность = ДоступностьИзделие;
	Элементы.ИзделиеНадпись.Доступность = ДоступностьИзделие;
	
	Элементы.ИспользоватьХарактеристикуИзделия.Доступность = ДоступностьИзделие И ИспользованиеХарактеристики;
	Элементы.ХарактеристикаИзделия.Доступность = ПризнакДоступностиХарактеристики И ИспользованиеХарактеристики;
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ПризнакИспользованияХарактеристикНаСервере(Номенклатура)
	
	ИспользованиеХарактеристик = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ИспользованиеХарактеристик");
	
	Если ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры 
		Или ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры
		Или ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры
		Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьИЗакрытьНаКлиенте(Результат, ДополнительныеПараметры) Экспорт 
	
	ЗавершитьРедактирование();
	
КонецПроцедуры

&НаКлиенте
Процедура СпецификацияНачалоВыбораЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		УведомлятьОбИзмененииРежима = Ложь;
		ОткрытьФорму("Справочник.РесурсныеСпецификации.ФормаВыбора",, Элементы.Спецификация);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
