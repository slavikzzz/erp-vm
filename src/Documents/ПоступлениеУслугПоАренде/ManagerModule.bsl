#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	//-- НЕ УТКА
	
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("СебестоимостьИПартионныйУчет");
	МеханизмыДокумента.Добавить("СуммыДокументовВВалютахУчета");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	МеханизмыДокумента.Добавить("УчетНДС");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("ФинансовыеИнструменты");
	МеханизмыДокумента.Добавить("ОборотныеРегистрыУправленческогоУчета");
	МеханизмыДокумента.Добавить("ИсправлениеДокументов");
	
	ПоступлениеУслугПоАрендеЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура:
//     * Ключ - Строка - Имя таблицы.
//     * Значение - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.ПоступлениеУслугПоАренде") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры);
		СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры);

		ТекстЗапросаТаблицаОтраженияВУчетеНДС(Запрос, ТекстыЗапроса, Регистры);
	
		ПоступлениеУслугПоАрендеЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);

	КонецЕсли;
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

#Область Команды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	ИсправлениеДокументов.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, ПустаяСсылка().Метаданные());
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	// Прямая оплата возможна только при отключенных заявках на расходование д/с.
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств") Тогда
		Документы.СписаниеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
		Документы.РасходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	КонецЕсли;
	
	
КонецПроцедуры

// Добавляет команду создания документа "Поступление услуг по аренде".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Порядок	- Число	- Порядок команды.
//
// Возвращаемое значение:
//	СтрокаТаблицыЗначений - добавленная команда
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании, Порядок = 0) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПоступлениеУслугПоАренде) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ПоступлениеУслугПоАренде.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ПоступлениеУслугПоАренде);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.Порядок = Порядок;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьВнеоборотныеАктивы2_4";
		//++ Локализация
		КомандаСоздатьНаОсновании.ФункциональныеОпции = 
			КомандаСоздатьНаОсновании.ФункциональныеОпции
			+ ",ИспользоватьВнеоборотныеАктивы2_2";
		//-- Локализация

		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
		
КонецПроцедуры

#КонецОбласти

#Область УчетныеМеханизмы

#Область УчетНДС

// Инициализирует параметры заполнения вида деятельности НДС
//
// Параметры:
//  Объект		- ДокументОбъект.ПоступлениеУслугПоАренде, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС
//
Функция ПараметрыЗаполненияВидаДеятельностиНДС(Объект) Экспорт
	
	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Договор, "НаправлениеДеятельности,Балансодержатель");
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС();
	ПараметрыЗаполнения.Организация = Объект.Организация;
	ПараметрыЗаполнения.Дата = Объект.Дата;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	ПараметрыЗаполнения.НаправлениеДеятельности = РеквизитыДоговора.НаправлениеДеятельности;
	ПараметрыЗаполнения.ПриобретениеНаСтатьи = Истина;
	ПараметрыЗаполнения.ЛизинговоеИмуществоНаБалансе =
		(РеквизитыДоговора.Балансодержатель = Перечисления.БалансодержательПредметовАренды.Арендатор);
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Инициализирует параметры заполнения налогообложения НДС закупки
//
// Параметры:
//  Объект		- ДокументОбъект.ПоступлениеУслугПоАренде, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки.
//
Функция ПараметрыЗаполненияНалогообложенияНДСЗакупки(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки();
	ПараметрыЗаполнения.Контрагент = Объект.Контрагент;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	ПараметрыЗаполнения.Период  = Объект.Дата;
	ПараметрыЗаполнения.УслугаПоАренде = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Инициализирует параметры проверки заполнения налогообложения НДС закупки
//
// Параметры:
//  Объект		- ДокументОбъект.ПоступлениеУслугПоАренде, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  Структура - структура параметров, см. УчетНДСУП.ПараметрыПроверкиЗаполнениеДокументаПоНалогообложениюНДСЗакупки.
//
Функция ПараметрыПроверкиЗаполнениеДокументаПоНалогообложениюНДСЗакупки(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУП.ПараметрыПроверкиЗаполнениеДокументаПоНалогообложениюНДСЗакупки();
	ПараметрыЗаполнения.ИмяТабличнойЧасти = "Начисления";
	ПараметрыЗаполнения.ИмяРеквизитаСтатьяРасходов = "СтатьяРасходов";
	ПараметрыЗаполнения.ИмяРеквизитаАналитикаРасходов = "АналитикаРасходов";
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Инициализирует параметры проверки заполнения документа по виду деятельности НДС
//
// Параметры:
//  Объект		- ДокументОбъект.ПоступлениеУслугПоАренде, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  Структура - структура параметров, см. УчетНДСУП.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС.
//
Функция ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУП.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС();
	ПараметрыЗаполнения.ИмяТабличнойЧасти = "Начисления";
	ПараметрыЗаполнения.ИмяРеквизитаСтатьяРасходов = "СтатьяРасходов";
	ПараметрыЗаполнения.ИмяРеквизитаАналитикаРасходов = "АналитикаРасходов";
	ПараметрыЗаполнения.ИмяРеквизитаСтатьяАктивовПассивов = "СтатьяРасходов";
	ПараметрыЗаполнения.ИмяРеквизитаАналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Инициализирует параметры регистрации счетов-фактур (полученных)
//
// Параметры:
//  Объект		- ДокументОбъект.ПоступлениеУслугПоАренде, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных
//
Функция ПараметрыРегистрацииСчетовФактурПолученных(Объект) Экспорт
	
	ПараметрыРегистрации = УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных();
	ПараметрыРегистрации.Ссылка = Объект.Ссылка;
	ПараметрыРегистрации.Дата = Объект.Дата;
	ПараметрыРегистрации.Организация = Объект.Организация;
	ПараметрыРегистрации.Контрагент = Объект.Контрагент;
	ПараметрыРегистрации.НалогообложениеНДС = Объект.НалогообложениеНДС;
	ПараметрыРегистрации.ПриобретениеТоваровРаботУслуг = Истина;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

#КонецОбласти

#Область Прочее

// Возвращает параметры механизма взаиморасчетов.
//
// Параметры:
// 	ДанныеЗаполнения - ДокументОбъект, СправочникОбъект, ДокументСсылка, СправочникСсылка, Структура, ДанныеФормыСтруктура - Объект или коллекция для
//              расчета параметров взаиморасчетов.
//
// Возвращаемое значение:
// 	Массив из см. ВзаиморасчетыСервер.ПараметрыМеханизма - Массив параметров функций механизма взаиморасчетов
//
Функция ПараметрыВзаиморасчеты(ДанныеЗаполнения = Неопределено) Экспорт
	
	СтруктураПараметров = ВзаиморасчетыСервер.ПараметрыМеханизма();
	
	СтруктураПараметров.ЭтоПродажаЗакупка                = Истина;
	СтруктураПараметров.ИзменяетПланОплаты               = Ложь;
	СтруктураПараметров.ИзменяетПланОтгрузкиПоставки     = Ложь;

	#Область НеобязательныеПараметры
	
	//Отличные от валюты и суммы документа реквизиты. Если не заполнен, то для чтения будет взята валюта документа.
	СтруктураПараметров.ВалютаВзаиморасчетов             = "Объект.ВалютаВзаиморасчетов";
	СтруктураПараметров.СуммаВзаиморасчетов              = "Объект.СуммаВзаиморасчетов";;
	СтруктураПараметров.НаправлениеДеятельности          = "";
	СтруктураПараметров.ПорядокРасчетов                  = "";
	СтруктураПараметров.ПутьКДаннымТЧ                    = "Объект.Начисления";
	СтруктураПараметров.Соглашение                       = "";
	СтруктураПараметров.БанковскийСчетОрганизации        = "";
	СтруктураПараметров.БанковскийСчетКонтрагента        = "";
	СтруктураПараметров.Касса                            = "";
	СтруктураПараметров.ФормаОплаты                      = "";
	СтруктураПараметров.ОплатаВВалюте                    = "";
	СтруктураПараметров.ИдентификаторПлатежа             = "";
	СтруктураПараметров.Договор                          = "";
	
	//Реквизиты для объекта расчетов, используются в проведении.
	СтруктураПараметров.ГруппаФинансовогоУчета           = "";
	СтруктураПараметров.Подразделение                    = "";
	СтруктураПараметров.КурсЧислитель                    = "Объект.КурсЧислитель";
	СтруктураПараметров.КурсЗнаменатель                  = "Объект.КурсЗнаменатель";
	СтруктураПараметров.ЭлементыФормы.НадписьВалюты      = "ДекорацияВалюты";
	
	#КонецОбласти
	
	Возврат СтруктураПараметров;
КонецФункции

// Формирует описание реквизитов объекта, заполняемых по статистике их использования.
//
// Параметры:
//  ОписаниеРеквизитов - Структура - описание реквизитов, для которых необходимо получить значения по статистике
//
//
Процедура ЗадатьОписаниеЗаполняемыхРеквизитовПоСтатистике(ОписаниеРеквизитов) Экспорт
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Ответственный";
	Параметры.ЗаполнятьПриУсловии.ПоляОбъектаЗаполнены = "Ответственный";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов,
		"Организация, Подразделение", Параметры);
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Контрагент";
	Параметры.ЗаполнятьПриУсловии.ПоляОбъектаЗаполнены = "Контрагент";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов,
		"НаименованиеВходящегоДокумента", Параметры);	
	
КонецПроцедуры

// Возвращает массив допустимых наименований входящих документов.
// 
// Возвращаемое значение:
// 	Массив - массив наименований.
Функция НаименованияВходящихДокументов() Экспорт
	МассивНаименований = Новый Массив();
	МассивНаименований.Добавить(НСтр("ru = 'Акт';
									|en = 'Customer invoice — Services'"));
	Возврат МассивНаименований
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом
#Область ЗаполнениеДенежныхДокументовНаОснованииПУпА
// Получить текст для заполнения на основании.
// 
// Возвращаемое значение:
//  Строка - Текст запроса для заполнения на основании
Функция ПолучитьТекстДляЗаполненияНаОсновании() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаАрендодателю)        КАК ХозяйственнаяОперация,
	|	&Ссылка                                                                КАК ДокументОснование,
	|	ДанныеДокумента.НалогообложениеНДС                                     КАК НалогообложениеНДС,
	|	ДанныеДокумента.Организация                                            КАК Организация,
	|	ДанныеДокумента.Подразделение                                          КАК Подразделение,
	|	
	|	ЕСТЬNULL(ДанныеДокумента.Договор.БанковскийСчет, 
	|		     ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)) КАК БанковскийСчет,
	|	
	|	ДанныеДокумента.Контрагент                                             КАК Контрагент,
	|	ДанныеДокумента.Партнер                                                КАК Партнер,
	|	
	|	ЕСТЬNULL(ДанныеДокумента.Договор.БанковскийСчетКонтрагента,
	|		ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка))     КАК БанковскийСчетКонтрагента,
	|	ДанныеДокумента.Договор                                                КАК ДоговорАренды,
	|	ДанныеДокумента.Договор                                                КАК Договор,
	|	
	|	ВЫБОР
	|		КОГДА НЕ ДанныеДокумента.Договор.БанковскийСчет ЕСТЬ NULL
	|			ТОГДА ДанныеДокумента.Договор.БанковскийСчет.ВалютаДенежныхСредств
	|		ИНАЧЕ ДанныеДокумента.Валюта
	|	КОНЕЦ                                                                  КАК Валюта,
	|	
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеДокумента.ЦенаВключаетНДС
	|				ТОГДА ТЧНачисления.Сумма
	|			ИНАЧЕ ТЧНачисления.Сумма + ТЧНачисления.СуммаНДС
	|			КОНЕЦ)                                                         КАК Сумма,
	|	ДанныеДокумента.ВалютаВзаиморасчетов                                   КАК ВалютаВзаиморасчетов,
	|	СУММА(ТЧНачисления.СуммаВзаиморасчетов)                                КАК СуммаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)             КАК ТипПлатежаПоАренде,
	|	ДанныеДокумента.Дата                                                   КАК ЖелательнаяДатаПлатежа,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)                         КАК ФормаОплатыЗаявки,
	|	ЛОЖЬ                                                                   КАК ФормаОплатыНаличная,
	|	ИСТИНА                                                                 КАК ФормаОплатыБезналичная,
	|	НЕОПРЕДЕЛЕНО                                                           КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО                                                           КАК Касса,
	|	
	|	ЕСТЬNULL(ДанныеДокумента.Договор.СтатьяДвиженияДенежныхСредств,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка))   КАК СтатьяДвиженияДенежныхСредств,
	|		
	|	ТЧНачисления.СтавкаНДС                                                 КАК СтавкаНДС,
	|	СУММА(ТЧНачисления.СуммаНДС)                                           КАК СуммаНДС
	|	
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления           КАК ТЧНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеУслугПоАренде КАК ДанныеДокумента
	|		ПО ТЧНачисления.Ссылка = ДанныеДокумента.Ссылка
	|		
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.НалогообложениеНДС,
	|	ДанныеДокумента.Договор,
	|	ЕСТЬNULL(ДанныеДокумента.Договор.БанковскийСчет, ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)),
	|	ЕСТЬNULL(ДанныеДокумента.Договор.БанковскийСчетКонтрагента,
	|		ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)),
	|	ЕСТЬNULL(ДанныеДокумента.Договор.СтатьяДвиженияДенежныхСредств,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)),
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаУслугПоАренде),
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.Контрагент,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеДокумента.Договор.БанковскийСчет ЕСТЬ NULL
	|			ТОГДА ДанныеДокумента.Договор.БанковскийСчет.ВалютаДенежныхСредств
	|		ИНАЧЕ ДанныеДокумента.Валюта
	|	КОНЕЦ,
	|	ДанныеДокумента.ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде),
	|	ДанныеДокумента.Дата,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная),
	|	ТЧНачисления.СтавкаНДС,
	|	ДанныеДокумента.Партнер
	|";
	
	Возврат ТекстЗапроса;
КонецФункции

// Заполнить расшифровку по поступлению услуг по аренде.
// 
// Параметры:
//  Документ - ДокументОбъект
//  РезультатЗапроса - РезультатЗапроса - Результат запроса
//  ДанныеЗаполнения - Структура - данные заполнения документа, соответствующие выборке из функции ПолучитьТекстДляЗаполненияНаОсновании.
//
Процедура ЗаполнитьРасшифровкуПоПоступлениюУслугПоАренде(Документ, РезультатЗапроса, ДанныеЗаполнения) Экспорт
	
	Документ.РасшифровкаПлатежа.Очистить();

	ВалютаРеглУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(ДанныеЗаполнения.Организация);
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаРасшифровки = Документ.РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, Выборка);
		СтрокаРасшифровки.Сумма = РаботаСКурсамиВалютУТ.ПересчитатьВВалюту(
									СтрокаРасшифровки.СуммаВзаиморасчетов,
									ВалютаРеглУчета,
									Выборка.ВалютаВзаиморасчетов,
									ДанныеЗаполнения.Валюта,
									ТекущаяДатаСеанса(),
									Выборка.ОбъектРасчетов);
	КонецЦикла;
	
	Документ.СуммаДокумента = Документ.РасшифровкаПлатежа.Итог("Сумма");
	
КонецПроцедуры
#КонецОбласти	

#КонецОбласти

#КонецОбласти


#КонецЕсли


#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	ОбщегоНазначенияУТКлиентСервер.ОбработкаПолученияПредставленияВходящегоДокумента(
		Данные, Представление, СтандартнаяОбработка, "ПоступлениеУслугПоАренде");
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Очистить();
	Поля.Добавить("НаименованиеВходящегоДокумента");
	Поля.Добавить("НомерВходящегоДокумента");
	Поля.Добавить("ДатаВходящегоДокумента");
	Поля.Добавить("Дата");
	Поля.Добавить("Номер");
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ПоступлениеУслугПоАренде";
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",        """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоДоговору", """""");
	
	ВЗапросеЕстьИсточник = Истина;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры = Неопределено) Экспорт
	
	ИмяРегистра = "СуммыДокументовВВалютахУчета";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса("СуммыДокументовВВалютахУчета", ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтСуммыДокументовВВалютахУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СуммыДокументовВВалютахУчета
	|"+
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВтСуммыДокументовВВалютахУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.Договор.Балансодержатель КАК Балансодержатель,
	|	ДанныеДокумента.Договор.УчитыватьПредметыАрендыВРеглУчете КАК УчитыватьПредметыАрендыВРеглУчете,
	|	ДанныеДокумента.Договор.УчитыватьПредметыАрендыВУпрУчете КАК УчитыватьПредметыАрендыВУпрУчете,
	|	ДанныеДокумента.Договор.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Договор.ОплатаВВалюте КАК ВалютныйДоговор,
	|	ДанныеДокумента.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
	|	ДанныеДокумента.МоментВремени КАК МоментВремени,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Автор КАК Автор,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.НаименованиеВходящегоДокумента КАК НаименованиеВходящегоДокумента,
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторДокумента,
	|	ДанныеДокумента.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)
	
	ЗначенияПараметровПроведения = Новый Структура;
	УчетАрендованныхОС.ДополнитьЗначенияПараметровПроведенияДокументаАренды(ЗначенияПараметровПроведения);

	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПоступлениеУслугПоАренде"));
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПоступлениеУслугПоАренде);
	
	ЗначенияПараметровПроведения.Вставить("ВалютаУправленческогоУчета", Константы.ВалютаУправленческогоУчета.Получить());
	ЗначенияПараметровПроведения.Вставить("ИспользоватьУчетПрочихДоходовРасходов", ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	ЗначенияПараметровПроведения.Вставить("СтатьяАктивовПассивов", ПланыВидовХарактеристик.СтатьиАктивовПассивов.Лизинг);
	
	Если Реквизиты <> Неопределено Тогда
		
		ЗначенияПараметровПроведения.Вставить("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
		ЗначенияПараметровПроведения.Вставить("ЦенаВключаетНДС", ?(Реквизиты.ЦенаВключаетНДС, 0, 1));
		
		ЗначенияПараметровПроведения.Вставить("ИспользуетсяУчетАрендыПоФСБУ25_2018",
			УчетАрендованныхОС.ИспользуетсяУчетАрендыПоФСБУ25_2018(Реквизиты.Организация, Реквизиты.Период));
		
		Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Реквизиты.Валюта, Реквизиты.ВалютаВзаиморасчетов, Реквизиты.Период, Реквизиты.Организация);
		ЗначенияПараметровПроведения.Вставить("КоэффициентПересчетаВВалютуУпр",  Коэффициенты.КоэффициентПересчетаВВалютуУпр);
		ЗначенияПараметровПроведения.Вставить("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
		ПараметрыУчетаПредметовАренды = УчетАрендованныхОСКлиентСервер.ПараметрыУчетаПредметовАренды(
			ЗначенияПараметровПроведения.ИспользуетсяУчетАрендыПоФСБУ25_2018, Реквизиты);
	
		ЗначенияПараметровПроведения.Вставить("ОтразитьУслугиВРасходахРегл", НЕ ПараметрыУчетаПредметовАренды.ЕстьУчетБУ);
		ЗначенияПараметровПроведения.Вставить("ОтразитьУслугиВРасходахУпр", НЕ ПараметрыУчетаПредметовАренды.ЕстьУчетУУ);
		
		ЗначенияПараметровПроведения.Вставить("ПрименяетсяУСН", Ложь);
		
	КонецЕсли;
	
	ПоступлениеУслугПоАрендеЛокализация.ДополнитьЗначенияПараметровПроведения(Реквизиты, ЗначенияПараметровПроведения);
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Подразделение                          КАК Подразделение,
	|	&Партнер                                КАК Партнер,
	|	&Контрагент                             КАК Контрагент,
	|	&Договор                                КАК Договор,
	|	ДанныеДокумента.Договор.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&Ответственный                          КАК Ответственный,
	|	&Автор                                  КАК Автор,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
	|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
	|	&НаименованиеВходящегоДокумента         КАК НаименованиеПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Период                                 КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПорядокОтраженияПрочихОпераций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	&Период КАК Дата,
	|	&Организация КАК Организация,
	|	&Ссылка КАК Документ,
	|	"""" КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК Строки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|		ПО Строки.СтатьяРасходов = СтатьиПрочихОпераций.Ссылка
	|			И (СтатьиПрочихОпераций.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы))
	|ГДЕ
	|	Строки.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтРасходы(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаНачислений.Подразделение КАК Подразделение,
	|	ТаблицаНачислений.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаНачислений.СтатьяРасходов КАК Статья,
	|	ТаблицаНачислений.АналитикаАктивовПассивов КАК Аналитика,
	|	ТаблицаНачислений.СуммаБезНДСУпр + ТаблицаНачислений.СуммаНДСУпр КАК Сумма
	|ИЗ
	|	ВтРасходы КАК ТаблицаНачислений
	|ГДЕ
	|	ТаблицаНачислений.Ссылка = &Ссылка
	|	И ТаблицаНачислений.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Лизинг) КАК Статья,
	|	&Договор КАК Аналитика,
	|	ТаблицаНачислений.СуммаБезНДСУпр + ТаблицаНачислений.СуммаНДСУпр КАК Сумма
	|ИЗ
	|	ВтРасходы КАК ТаблицаНачислений
	|ГДЕ
	|	ТаблицаНачислений.Ссылка = &Ссылка
	|	И ТаблицаНачислений.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	
	|";
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы(Ложь);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтРасходы(Запрос, ТекстыЗапроса);
	
	Текст =
	"ВЫБРАТЬ
	|	ТаблицаРасходы.НомерСтроки,
	|	ТаблицаРасходы.Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеРасходовЗаСчетПрочихАктивовПассивов) КАК ХозяйственнаяОперация,
	|	ТаблицаРасходы.Организация КАК Организация,
	|
	|	ТаблицаРасходы.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяАктивовПассивов КАК Статья,
	|	&Договор КАК АналитикаАктивовПассивов,
	|
	|	ТаблицаРасходы.Подразделение КАК КорПодразделение,
	|	ТаблицаРасходы.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ТаблицаРасходы.СтатьяРасходов КАК КорСтатья,
	|	ТаблицаРасходы.АналитикаРасходов КАК КорАналитикаРасходов,
	|	ТаблицаРасходы.АналитикаАктивовПассивов КАК КорАналитикаАктивовПассивов,
	|	
	|	ТаблицаРасходы.СуммаУпр КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		 ИЛИ НЕ &УправленческийУчетОрганизаций
	|		 ИЛИ ТаблицаРасходы.СуммаБезНДСУпр = 0
	|			ТОГДА 0
	|		КОГДА ТаблицаРасходы.ВидДеятельностиНДС В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				И ТаблицаРасходы.СтатьяРасходов.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента)
	|			ТОГДА ТаблицаРасходы.СуммаБезНДСУпр + ТаблицаРасходы.СуммаНДСУпр
	|		ИНАЧЕ
	|			ТаблицаРасходы.СуммаБезНДСУпр
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА ТаблицаРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|			ТОГДА 0
	|		КОГДА ТаблицаРасходы.ВидДеятельностиНДС В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ТаблицаРасходы.СуммаРегл
	|		ИНАЧЕ
	|			ТаблицаРасходы.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	&Валюта КАК Валюта,
	|	ТаблицаРасходы.СуммаСНДС КАК СуммаВВалюте,
	|	НЕОПРЕДЕЛЕНО КАК ВидОперацииПоЗарплате
	|ИЗ
	|	втРасходы КАК ТаблицаРасходы
	|ГДЕ
	|	(&ОтразитьУслугиВРасходахРегл 
	|		ИЛИ &ОтразитьУслугиВРасходахУпр)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДвиженияПоПрочимАктивамПассивам";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеДвиженияПоПрочимАктивамПассивам", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.ТекстЗапросаТаблицаВтДвиженияПоПрочимАктивамПассивам("ИдентификаторСтроки");
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияПоПрочимАктивамПассивам";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДвиженияПоПрочимАктивамПассивам", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам("ИдентификаторСтроки");
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаВтИсходныеДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеДвиженияПоПрочимАктивамПассивам";
	
	ТекстЗапросаТаблицаВтРасходы(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаРасходы.Подразделение КАК Подразделение,
	|	ТаблицаРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасходы.СтатьяРасходов КАК Статья,
	|	ТаблицаРасходы.АналитикаАктивовПассивов КАК Аналитика,
	|	ТаблицаРасходы.НастройкаСчетовУчета КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|	ТаблицаРасходы.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	ТаблицаРасходы.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасходы.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
	|	ТаблицаРасходы.СуммаБезНДСУпр + ТаблицаРасходы.СуммаНДСУпр КАК СуммаУпр,
	|	ТаблицаРасходы.СуммаБезНДСУпр КАК СуммаБезНДСУпр,
	|	ТаблицаРасходы.СуммаБезНДСУпр + ТаблицаРасходы.СуммаНДСУпр КАК СуммаСНДС,
	|	ТаблицаРасходы.СуммаБезНДСУпр   КАК СуммаБезНДС,
	|	0                               КАК ПостояннаяРазница,
	|	ТаблицаРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|
	|	ТаблицаРасходы.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ТаблицаРасходы.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ПОМЕСТИТЬ ВтИсходныеДвиженияПоПрочимАктивамПассивам
	|ИЗ
	|	втРасходы КАК ТаблицаРасходы
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ТаблицаРасходы.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтОплатаОбеспечительногоПлатежа(ТекстыЗапроса)
	
	ИмяТаблицы = "ОплатаОбеспечительногоПлатежа";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ОплатаОбеспечительногоПлатежа
	|"+
	"ВЫБРАТЬ
	|	Начисления.РасчетныйДокумент    КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов           КАК ВалютаВзаиморасчетов,
	|	&ВалютаРегламентированногоУчета КАК БазоваяВалюта,
	|	МАКСИМУМ(ВалютыКурсов.Период)   КАК ДатаКурса
	|
	|ПОМЕСТИТЬ втФильтрПоВалютамИДатам
	|
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК ВалютыКурсов
	|		ПО ВалютыКурсов.Валюта = &ВалютаВзаиморасчетов
	|		И ВалютыКурсов.Период <= НАЧАЛОПЕРИОДА(Начисления.РасчетныйДокумент.Дата, День)
	|		И ВалютыКурсов.БазоваяВалюта = &ВалютаРегламентированногоУчета
	|ГДЕ
	|	Начисления.Ссылка = &Ссылка
	|	И Начисления.РасчетныйДокумент ССЫЛКА Документ.ПервичныйДокумент
	|СГРУППИРОВАТЬ ПО
	|	Начисления.РасчетныйДокумент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВалютаВзаиморасчетов,
	|	БазоваяВалюта,
	|	ДатаКурса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФильтрПоВалютамИДатам.РасчетныйДокумент    КАК РасчетныйДокумент,
	|	ФильтрПоВалютамИДатам.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	КурсыВалют.КурсЧислитель                   КАК КурсВалютыВзаиморасчетов
	|
	|ПОМЕСТИТЬ КурсыПервичныхДокументов
	|
	|ИЗ
	|	РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФильтрПоВалютамИДатам КАК ФильтрПоВалютамИДатам
	|		ПО ФильтрПоВалютамИДатам.ВалютаВзаиморасчетов = КурсыВалют.Валюта
	|		И ФильтрПоВалютамИДатам.БазоваяВалюта = КурсыВалют.БазоваяВалюта
	|		И ФильтрПоВалютамИДатам.ДатаКурса = КурсыВалют.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втФильтрПоВалютамИДатам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасшифровкаСписаниеБезналичныхДС.Ссылка                     КАК Документ,
	|	РасшифровкаСписаниеБезналичныхДС.Ссылка.Дата                КАК ДатаОплаты,
	|	РасшифровкаСписаниеБезналичныхДС.Ссылка.Валюта              КАК ВалютаОплаты,
	|	&ВалютаВзаиморасчетов                                       КАК ВалютаВзаиморасчетов,
	|	СУММА(РасшифровкаСписаниеБезналичныхДС.Сумма)               КАК Сумма,
	|	СУММА(РасшифровкаСписаниеБезналичныхДС.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|
	|ПОМЕСТИТЬ ОплатаОбеспечительногоПлатежа
	|
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК
	|			РасшифровкаСписаниеБезналичныхДС
	|		ПО Начисления.РасчетныйДокумент = РасшифровкаСписаниеБезналичныхДС.Ссылка
	|		И РасшифровкаСписаниеБезналичныхДС.ДоговорАренды = &Договор
	|		И РасшифровкаСписаниеБезналичныхДС.ВалютаВзаиморасчетов = &ВалютаВзаиморасчетов
	|		И Начисления.ТипНачисления = РасшифровкаСписаниеБезналичныхДС.ТипПлатежаПоАренде
	|ГДЕ
	|	Начисления.Ссылка = &Ссылка
	|	И (Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|	ИЛИ Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс))
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаСписаниеБезналичныхДС.Ссылка,
	|	РасшифровкаСписаниеБезналичныхДС.Ссылка.Дата,
	|	РасшифровкаСписаниеБезналичныхДС.Ссылка.Валюта,
	|	РасшифровкаСписаниеБезналичныхДС.ВалютаВзаиморасчетов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасшифровкаРасходныйКассовыйОрдер.Ссылка                     КАК Документ,
	|	РасшифровкаРасходныйКассовыйОрдер.Ссылка.Дата                КАК ДатаОплаты,
	|	РасшифровкаРасходныйКассовыйОрдер.Ссылка.Валюта              КАК ВалютаОплаты,
	|	&ВалютаВзаиморасчетов                                        КАК ВалютаВзаиморасчетов,
	|	СУММА(РасшифровкаРасходныйКассовыйОрдер.Сумма)               КАК Сумма,
	|	СУММА(РасшифровкаРасходныйКассовыйОрдер.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасшифровкаРасходныйКассовыйОрдер
	|		ПО Начисления.РасчетныйДокумент = РасшифровкаРасходныйКассовыйОрдер.Ссылка
	|		И РасшифровкаРасходныйКассовыйОрдер.ДоговорАренды = &Договор
	|		И Начисления.ТипНачисления = РасшифровкаРасходныйКассовыйОрдер.ТипПлатежаПоАренде
	|ГДЕ
	|	Начисления.Ссылка = &Ссылка
	|	И (Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|	ИЛИ Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс))
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаРасходныйКассовыйОрдер.Ссылка,
	|	РасшифровкаРасходныйКассовыйОрдер.Ссылка.Дата,
	|	РасшифровкаРасходныйКассовыйОрдер.Ссылка.Валюта,
	|	РасшифровкаРасходныйКассовыйОрдер.ВалютаВзаиморасчетов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПервичныйДокумент.Ссылка                                     КАК Документ,
	|	ПервичныйДокумент.Дата                                       КАК ДатаОплаты,
	|	ПервичныйДокумент.Валюта                                     КАК ВалютаОплаты,
	|	&ВалютаВзаиморасчетов                                        КАК ВалютаВзаиморасчетов,
	|	ПервичныйДокумент.СуммаДокумента                             КАК Сумма,
	|
	|	ПервичныйДокумент.СуммаРегл / 
	|		КурсыПервичныхДокументов.КурсВалютыВзаиморасчетов        КАК СуммаВзаиморасчетов
	|
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК Начисления
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПервичныйДокумент КАК ПервичныйДокумент
	|		ПО Начисления.РасчетныйДокумент = ПервичныйДокумент.Ссылка
	|		И ПервичныйДокумент.Договор = &Договор
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыПервичныхДокументов КАК КурсыПервичныхДокументов
	|		ПО ПервичныйДокумент.Ссылка = КурсыПервичныхДокументов.РасчетныйДокумент
	|ГДЕ
	|	Начисления.Ссылка = &Ссылка
	|	И (Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|		ИЛИ Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс))
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	ВалютаВзаиморасчетов,
	|	ДатаОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КурсыПервичныхДокументов";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "РасчетыПоФинансовымИнструментам";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	ТекстЗапросаТаблицаВтСуммыДокументовВВалютахУчета(ТекстыЗапроса);
	
	СписокЗапросовОбъединение = Новый Массив;
	
	#Область УслугаБезНДС // Дт <76.07.1> - Кт <70.07.2, 70.07.3, 70.07.4>
	ТекстЗапроса =
	"//УслугаБезНДС // Дт <76.07.1> - Кт <70.07.2, 70.07.3, 70.07.4>
	|ВЫБРАТЬ
	|	&Период                                                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                  КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)              КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства)       КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                            КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                   КАК Валюта,
	|	
	|	ТаблицаСуммы.СуммаБезНДСВзаиморасчетов                                  КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА НЕ &ОтразитьУслугиВРасходахУпр
	|			ТОГДА ТаблицаСуммы.СуммаБезНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА НЕ &ОтразитьУслугиВРасходахРегл
	|			ТОГДА ТаблицаСуммы.СуммаБезНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	НЕОПРЕДЕЛЕНО                                                            КАК ТипГрафика,
	|	НЕОПРЕДЕЛЕНО                                                            КАК СтатьяАналитики,
	|	ТаблицаНачислений.ИдентификаторСтроки                                   КАК ИдентификаторСтроки,
	|	ТаблицаНачислений.ИдентификаторСтроки                                   КАК ИдентификаторФинЗаписи,
	|
	|	ВЫБОР ТаблицаНачислений.ТипНачисления
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ТОГДА &ХО_ПоступлениеУслугПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|			ТОГДА &ХО_ПоступлениеУслугПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|			ТОГДА &ХО_ОбеспечительныйПлатеж
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|			ТОГДА &ХО_ВыкупАрендованныхОС
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР ТаблицаНачислений.ТипНачисления
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ТОГДА &НастройкаХО_ПоступлениеУслугПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|			ТОГДА &НастройкаХО_ПоступлениеУслугПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|			ТОГДА &НастройкаХО_ОбеспечительныйПлатеж
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|			ТОГДА &НастройкаХО_ВыкупАрендованныхОС
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаНачислений
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК ТаблицаСуммы
	|		ПО ТаблицаСуммы.ИдентификаторСтроки = ТаблицаНачислений.ИдентификаторСтроки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаНачислений.Ссылка = &Ссылка
	|	И (НЕ &ОтразитьУслугиВРасходахРегл ИЛИ НЕ &ОтразитьУслугиВРасходахУпр)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)              КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                КАК Договор,
	|	ТаблицаНачислений.ТипНачисления                                         КАК ТипСуммы,
	|	ТаблицаНачислений.РасчетныйДокумент                                     КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                   КАК Валюта,
	|	
	|	ТаблицаСуммы.СуммаБезНДСВзаиморасчетов                                  КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА НЕ &ОтразитьУслугиВРасходахУпр
	|			ТОГДА ТаблицаСуммы.СуммаБезНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА НЕ &ОтразитьУслугиВРасходахРегл
	|			ТОГДА ТаблицаСуммы.СуммаБезНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Начисления)    КАК ТипГрафика,
	|	НЕОПРЕДЕЛЕНО                                                            КАК СтатьяАналитики,
	|	ТаблицаНачислений.ИдентификаторСтроки                                   КАК ИдентификаторСтроки,
	|	ТаблицаНачислений.ИдентификаторСтроки                                   КАК ИдентификаторФинЗаписи,
	|
	|	ВЫБОР ТаблицаНачислений.ТипНачисления
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ТОГДА &ХО_ПоступлениеУслугПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|			ТОГДА &ХО_ПоступлениеУслугПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|			ТОГДА &ХО_ОбеспечительныйПлатеж
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|			ТОГДА &ХО_ВыкупАрендованныхОС
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР ТаблицаНачислений.ТипНачисления
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ТОГДА &НастройкаХО_ПоступлениеУслугПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|			ТОГДА &НастройкаХО_ПоступлениеУслугПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|			ТОГДА &НастройкаХО_ОбеспечительныйПлатеж
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|			ТОГДА &НастройкаХО_ВыкупАрендованныхОС
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаНачислений
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК ТаблицаСуммы
	|		ПО ТаблицаСуммы.ИдентификаторСтроки = ТаблицаНачислений.ИдентификаторСтроки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаНачислений.Ссылка = &Ссылка
	|	И (НЕ &ОтразитьУслугиВРасходахРегл ИЛИ НЕ &ОтразитьУслугиВРасходахУпр)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УслугаНДС // Дт <76.07.1> - Кт <76.07.9>
	ТекстЗапроса =
	"//УслугаНДС // Дт <76.07.1> - Кт <76.07.9>
	|ВЫБРАТЬ
	|	&Период                                                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                  КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)              КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства)       КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                            КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                   КАК Валюта,
	|	
	|	ТаблицаСуммы.СуммаНДСВзаиморасчетов                                     КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА НЕ &ОтразитьУслугиВРасходахУпр
	|			ТОГДА ТаблицаСуммы.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА НЕ &ОтразитьУслугиВРасходахРегл
	|			ТОГДА ТаблицаСуммы.СуммаНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	НЕОПРЕДЕЛЕНО                                                            КАК ТипГрафика,
	|	НЕОПРЕДЕЛЕНО                                                            КАК СтатьяАналитики,
	|	ТаблицаНачислений.ИдентификаторСтроки                                   КАК ИдентификаторСтроки,
	|	ТаблицаНачислений.ИдентификаторСтроки                                   КАК ИдентификаторФинЗаписи,
	|
	|	ВЫБОР ТаблицаНачислений.ТипНачисления
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ТОГДА &ХО_НачислениеНДСВЧастиУслугиПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|			ТОГДА &ХО_НачислениеНДСВЧастиУслугиПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|			ТОГДА &ХО_НачислениеНДСВЧастиОбеспечительногоПлатежа
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|			ТОГДА &ХО_НачислениеНДСВЧастиВыкупнойСтоимости
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР ТаблицаНачислений.ТипНачисления
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ТОГДА &НастройкаХО_НачислениеНДСВЧастиУслугиПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|			ТОГДА &НастройкаХО_НачислениеНДСВЧастиУслугиПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|			ТОГДА &НастройкаХО_НачислениеНДСВЧастиОбеспечительногоПлатежа
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|			ТОГДА &НастройкаХО_НачислениеНДСВЧастиВыкупнойСтоимости
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаНачислений
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК ТаблицаСуммы
	|		ПО ТаблицаСуммы.ИдентификаторСтроки = ТаблицаНачислений.ИдентификаторСтроки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаНачислений.Ссылка = &Ссылка
	|	И (ТаблицаСуммы.СуммаНДСВзаиморасчетов <> 0
	|		ИЛИ ТаблицаСуммы.СуммаНДСУпр <> 0
	|		ИЛИ ТаблицаСуммы.СуммаНДСРегл <> 0)
	|
	|	И (НЕ &ОтразитьУслугиВРасходахРегл ИЛИ НЕ &ОтразитьУслугиВРасходахУпр)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)              КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.НДС)                         КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                            КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                   КАК Валюта,
	|	
	|	ТаблицаСуммы.СуммаНДСВзаиморасчетов                                     КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА НЕ &ОтразитьУслугиВРасходахУпр
	|			ТОГДА ТаблицаСуммы.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА НЕ &ОтразитьУслугиВРасходахРегл
	|			ТОГДА ТаблицаСуммы.СуммаНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Начисления)    КАК ТипГрафика,
	|	НЕОПРЕДЕЛЕНО                                                            КАК СтатьяАналитики,
	|	ТаблицаНачислений.ИдентификаторСтроки                                   КАК ИдентификаторСтроки,
	|	ТаблицаНачислений.ИдентификаторСтроки                                   КАК ИдентификаторФинЗаписи,
	|
	|	ВЫБОР ТаблицаНачислений.ТипНачисления
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ТОГДА &ХО_НачислениеНДСВЧастиУслугиПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|			ТОГДА &ХО_НачислениеНДСВЧастиУслугиПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|			ТОГДА &ХО_НачислениеНДСВЧастиОбеспечительногоПлатежа
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|			ТОГДА &ХО_НачислениеНДСВЧастиВыкупнойСтоимости
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР ТаблицаНачислений.ТипНачисления
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ТОГДА &НастройкаХО_НачислениеНДСВЧастиУслугиПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|			ТОГДА &НастройкаХО_НачислениеНДСВЧастиУслугиПоАренде
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|			ТОГДА &НастройкаХО_НачислениеНДСВЧастиОбеспечительногоПлатежа
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|			ТОГДА &НастройкаХО_НачислениеНДСВЧастиВыкупнойСтоимости
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаНачислений
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК ТаблицаСуммы
	|		ПО ТаблицаСуммы.ИдентификаторСтроки = ТаблицаНачислений.ИдентификаторСтроки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаНачислений.Ссылка = &Ссылка
	|	И (ТаблицаСуммы.СуммаНДСВзаиморасчетов <> 0
	|		ИЛИ ТаблицаСуммы.СуммаНДСУпр <> 0
	|		ИЛИ ТаблицаСуммы.СуммаНДСРегл <> 0)
	|
	|	И (НЕ &ОтразитьУслугиВРасходахРегл ИЛИ НЕ &ОтразитьУслугиВРасходахУпр)
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УслугаНДС // Дт <19.ХХ> - Кт <70.07.2, 70.07.3, 70.07.4>
	ТекстЗапроса =
	"//УслугаНДС // Дт <19.ХХ> - Кт <70.07.2, 70.07.3, 70.07.4>
	|ВЫБРАТЬ
	|	ТаблицаНачислений.Период КАК Период,
	|	ТаблицаНачислений.ВидДвижения КАК ВидДвижения,
	|	ТаблицаНачислений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаНачислений.Договор КАК Договор,
	|	ТаблицаНачислений.ТипСуммы КАК ТипСуммы,
	|	ТаблицаНачислений.РасчетныйДокумент КАК РасчетныйДокумент,
	|	ТаблицаНачислений.Валюта КАК Валюта,
	|	СУММА(ТаблицаНачислений.Сумма) КАК Сумма,
	|	СУММА(ТаблицаНачислений.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ТаблицаНачислений.СуммаРегл) КАК СуммаРегл,
	|	ТаблицаНачислений.ТипГрафика КАК ТипГрафика,
	|	ТаблицаНачислений.СтатьяАналитики КАК СтатьяАналитики,
	|	ТаблицаНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаНачислений.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ТаблицаНачислений.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаНачислений.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	(ВЫБРАТЬ
	|		&Период КАК Период,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|		ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаПоПартнерам,
	|		&Договор КАК Договор,
	|		ТаблицаНачислений.ТипНачисления КАК ТипСуммы,
	|		ТаблицаНачислений.РасчетныйДокумент КАК РасчетныйДокумент,
	|		&ВалютаВзаиморасчетов КАК Валюта,
	|		ВЫБОР
	|			КОГДА НЕ &ОтразитьУслугиВРасходахРегл
	|				ТОГДА ТаблицаСуммы.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Сумма,
	|		ВЫБОР
	|			КОГДА НЕ &ОтразитьУслугиВРасходахУпр
	|				ТОГДА ТаблицаСуммы.СуммаНДСУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаУпр,
	|		ВЫБОР
	|			КОГДА НЕ &ОтразитьУслугиВРасходахРегл
	|				ТОГДА ТаблицаСуммы.СуммаНДСРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаРегл,
	|		НЕОПРЕДЕЛЕНО КАК ТипГрафика,
	|		НЕОПРЕДЕЛЕНО КАК СтатьяАналитики,
	|		ТаблицаНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|		ТаблицаНачислений.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|		ВЫБОР
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|				ТОГДА &ХО_ПоступлениеНДСВЧастиУслугиПоАренде
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|				ТОГДА &ХО_ПоступлениеНДСВЧастиУслугиПоАренде
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|				ТОГДА &ХО_ПоступлениеНДСВЧастиОбеспечительногоПлатежа
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|				ТОГДА &ХО_ПоступлениеНДСВЧастиВыкупнойСтоимости
	|		КОНЕЦ КАК ХозяйственнаяОперация,
	|		ВЫБОР
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|				ТОГДА &НастройкаХО_ПоступлениеНДСВЧастиУслугиПоАренде
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|				ТОГДА &НастройкаХО_ПоступлениеНДСВЧастиУслугиПоАренде
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|				ТОГДА &НастройкаХО_ПоступлениеНДСВЧастиОбеспечительногоПлатежа
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|				ТОГДА &НастройкаХО_ПоступлениеНДСВЧастиВыкупнойСтоимости
	|		КОНЕЦ КАК НастройкаХозяйственнойОперации
	|	ИЗ
	|		Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаНачислений
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК ТаблицаСуммы
	|			ПО (ТаблицаСуммы.ИдентификаторСтроки = ТаблицаНачислений.ИдентификаторСтроки)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|			ПО (АналитикаПоПартнерам.Организация = &Организация)
	|				И (АналитикаПоПартнерам.Партнер = &Партнер)
	|				И (АналитикаПоПартнерам.Контрагент = &Контрагент)
	|				И (АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|				И (АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности)
	|	ГДЕ
	|		ТаблицаНачислений.Ссылка = &Ссылка
	|		И (НЕ &ОтразитьУслугиВРасходахРегл
	|				ИЛИ НЕ &ОтразитьУслугиВРасходахУпр)
	|		И (ТаблицаСуммы.СуммаНДСВзаиморасчетов <> 0
	|				ИЛИ ТаблицаСуммы.СуммаНДСУпр <> 0
	|				ИЛИ ТаблицаСуммы.СуммаНДСРегл <> 0)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&Период,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|		ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО),
	|		&Договор,
	|		ВЫБОР
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ИНАЧЕ ТаблицаНачислений.ТипНачисления
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ТаблицаНачислений.РасчетныйДокумент
	|		КОНЕЦ,
	|		&ВалютаВзаиморасчетов,
	|		ВЫБОР
	|			КОГДА &ОтразитьУслугиВРасходахРегл
	|				ТОГДА ТаблицаСуммы.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА &ОтразитьУслугиВРасходахУпр
	|				ТОГДА ТаблицаСуммы.СуммаНДСУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА &ОтразитьУслугиВРасходахРегл
	|				ТОГДА ТаблицаСуммы.СуммаНДСРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		НЕОПРЕДЕЛЕНО,
	|		НЕОПРЕДЕЛЕНО,
	|		ТаблицаНачислений.ИдентификаторСтроки,
	|		ТаблицаНачислений.ИдентификаторСтроки,
	|		ВЫБОР
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|				ТОГДА &ХО_ПоступлениеНДСВЧастиУслугиПоАренде
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|				ТОГДА &ХО_ПоступлениеНДСВЧастиУслугиПоАренде
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|				ТОГДА &ХО_ПоступлениеНДСВЧастиУслугиПоАренде
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|				ТОГДА &ХО_ПоступлениеНДСВЧастиВыкупнойСтоимости
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|				ТОГДА &НастройкаХО_ПоступлениеНДСВЧастиУслугиПоАренде
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|				ТОГДА &НастройкаХО_ПоступлениеНДСВЧастиУслугиПоАренде
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|				ТОГДА &НастройкаХО_ПоступлениеНДСВЧастиУслугиПоАренде
	|			КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|				ТОГДА &НастройкаХО_ПоступлениеНДСВЧастиВыкупнойСтоимости
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаНачислений
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК ТаблицаСуммы
	|			ПО (ТаблицаСуммы.ИдентификаторСтроки = ТаблицаНачислений.ИдентификаторСтроки)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|			ПО (АналитикаПоПартнерам.Организация = &Организация)
	|				И (АналитикаПоПартнерам.Партнер = &Партнер)
	|				И (АналитикаПоПартнерам.Контрагент = &Контрагент)
	|				И (АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|				И (АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности)
	|	ГДЕ
	|		ТаблицаНачислений.Ссылка = &Ссылка
	|		И (&ОтразитьУслугиВРасходахРегл
	|				ИЛИ &ОтразитьУслугиВРасходахУпр)
	|		И (ТаблицаСуммы.СуммаНДСВзаиморасчетов <> 0
	|				ИЛИ ТаблицаСуммы.СуммаНДСУпр <> 0
	|				ИЛИ ТаблицаСуммы.СуммаНДСРегл <> 0)) КАК ТаблицаНачислений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНачислений.ИдентификаторФинЗаписи,
	|	ТаблицаНачислений.ХозяйственнаяОперация,
	|	ТаблицаНачислений.ТипГрафика,
	|	ТаблицаНачислений.ИдентификаторСтроки,
	|	ТаблицаНачислений.СтатьяАналитики,
	|	ТаблицаНачислений.АналитикаУчетаПоПартнерам,
	|	ТаблицаНачислений.НастройкаХозяйственнойОперации,
	|	ТаблицаНачислений.Валюта,
	|	ТаблицаНачислений.РасчетныйДокумент,
	|	ТаблицаНачислений.Договор,
	|	ТаблицаНачислений.Период,
	|	ТаблицаНачислений.ВидДвижения,
	|	ТаблицаНачислений.ТипСуммы";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОбеспечительныйПлатежПриУчетеЗаБалансомСНДС // Дт <76.07.2> - Кт <76.07.3>
	ТекстЗапроса =
	"//ОбеспечительныйПлатежПриУчетеЗаБалансомСНДС // Дт <76.07.2> - Кт <76.07.3>
	|ВЫБРАТЬ
	|	&Период                                                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                  КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)              КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)              КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                            КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                   КАК Валюта,
	|	
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахРегл И &ОтразитьУслугиВРасходахУпр
	|			ТОГДА ТаблицаСуммы.СуммаВзаиморасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ  КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахУпр
	|			ТОГДА ТаблицаСуммы.СуммаБезНДСУпр + ТаблицаСуммы.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахРегл
	|			ТОГДА ТаблицаСуммы.СуммаБезНДСРегл + ТаблицаСуммы.СуммаНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Начисления)    КАК ТипГрафика,
	|	НЕОПРЕДЕЛЕНО                                                            КАК СтатьяАналитики,
	|	ТаблицаНачислений.ИдентификаторСтроки                                   КАК ИдентификаторСтроки,
	|	ТаблицаНачислений.ИдентификаторСтроки                                   КАК ИдентификаторФинЗаписи,
	|
	|	&ХО_ОбеспечительныйПлатежПриУчетеЗаБалансом                             КАК ХозяйственнаяОперация,
	|	&НастройкаХО_ОбеспечительныйПлатежПриУчетеЗаБалансом                    КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаНачислений
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК ТаблицаСуммы
	|		ПО ТаблицаСуммы.ИдентификаторСтроки = ТаблицаНачислений.ИдентификаторСтроки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаНачислений.Ссылка = &Ссылка
	|	И (&ОтразитьУслугиВРасходахРегл ИЛИ &ОтразитьУслугиВРасходахУпр)
	|	И ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)              КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)       КАК ТипСуммы,
	|	ТаблицаНачислений.РасчетныйДокумент                                     КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                   КАК Валюта,
	|	
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахРегл И &ОтразитьУслугиВРасходахУпр
	|			ТОГДА ТаблицаСуммы.СуммаВзаиморасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ  КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахУпр
	|			ТОГДА ТаблицаСуммы.СуммаБезНДСУпр + ТаблицаСуммы.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахРегл
	|			ТОГДА ТаблицаСуммы.СуммаБезНДСРегл + ТаблицаСуммы.СуммаНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Начисления)    КАК ТипГрафика,
	|	НЕОПРЕДЕЛЕНО                                                            КАК СтатьяАналитики,
	|	ТаблицаНачислений.ИдентификаторСтроки                                   КАК ИдентификаторСтроки,
	|	ТаблицаНачислений.ИдентификаторСтроки                                   КАК ИдентификаторФинЗаписи,
	|
	|	&ХО_ОбеспечительныйПлатежПриУчетеЗаБалансом                             КАК ХозяйственнаяОперация,
	|	&НастройкаХО_ОбеспечительныйПлатежПриУчетеЗаБалансом                    КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаНачислений
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК ТаблицаСуммы
	|		ПО ТаблицаСуммы.ИдентификаторСтроки = ТаблицаНачислений.ИдентификаторСтроки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаНачислений.Ссылка = &Ссылка
	|	И (&ОтразитьУслугиВРасходахРегл ИЛИ &ОтразитьУслугиВРасходахУпр)
	|	И ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УслугаНаРасходыБезНДС // Дт <Расходы> - Кт <76.07.2>
	ТекстЗапроса =
	"//УслугаНаРасходыБезНДС // Дт <Расходы> - Кт <76.07.2>
	|ВЫБРАТЬ
	|	&Период                                                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)              КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)              КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                            КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                   КАК Валюта,
	|	
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахРегл И &ОтразитьУслугиВРасходахУпр
	|			ТОГДА ТаблицаСуммы.СуммаБезНДСВзаиморасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ  КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахУпр
	|			ТОГДА ТаблицаСуммы.СуммаБезНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР 
	|		КОГДА &ОтразитьУслугиВРасходахРегл
	|			ТОГДА ТаблицаСуммы.СуммаБезНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Начисления)    КАК ТипГрафика,
	|	НЕОПРЕДЕЛЕНО                                                            КАК СтатьяАналитики,
	|	ТаблицаНачислений.ИдентификаторСтроки                                   КАК ИдентификаторСтроки,
	|	ТаблицаНачислений.ИдентификаторСтроки                                   КАК ИдентификаторФинЗаписи,
	|
	|	&ХО_ОтражениеУслугПоАрендеВРасходах                                     КАК ХозяйственнаяОперация,
	|	&НастройкаХО_ОтражениеУслугПоАрендеВРасходах                            КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаНачислений
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК ТаблицаСуммы
	|		ПО ТаблицаСуммы.ИдентификаторСтроки = ТаблицаНачислений.ИдентификаторСтроки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаНачислений.Ссылка = &Ссылка
	|
	|	И (&ОтразитьУслугиВРасходахРегл
	|		ИЛИ &ОтразитьУслугиВРасходахУпр
	|		ИЛИ НЕ &ОтразитьУслугиВРасходахРегл
	|			И &Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендодатель))";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Процедура ТекстЗапросаТаблицаОтраженияВУчетеНДС(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЦенности =
	"ВЫБРАТЬ
	|	ТаблицаНачислений.Ссылка.Дата                   КАК Период,
	|	ТаблицаНачислений.Ссылка                        КАК Ссылка,
	|	ТаблицаНачислений.Ссылка.Организация            КАК Организация,
	|	ТаблицаНачислений.Ссылка.Подразделение          КАК Подразделение,
	|	ТаблицаНачислений.Ссылка.Контрагент             КАК Контрагент,
	|	ТаблицаНачислений.Ссылка.Договор                КАК Договор,
	|	НЕОПРЕДЕЛЕНО                                    КАК Грузоотправитель,
	|	ТаблицаНачислений.Ссылка                        КАК ДокументПриобретения,
	|	ТаблицаНачислений.Ссылка                        КАК ИсходныйТорговыйДокумент,
	|	ЛОЖЬ                                            КАК ИсправлениеОшибок,
	|	ЛОЖЬ                                            КАК КорректировкаПоСогласованиюСторон,
	|	НЕОПРЕДЕЛЕНО                                    КАК ДокументКорректировкиПриобретения,
	|	ТаблицаНачислений.Ссылка.НалогообложениеНДС     КАК НалогообложениеНДС,
	|	ТаблицаНачислений.Ссылка.ЗакупкаПодДеятельность КАК ВидДеятельностиНДС,
	|	ТаблицаНачислений.СтавкаНДС                     КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО                                    КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                    КАК НомерГТД,
	|	ТаблицаНачислений.Подразделение                 КАК ПодразделениеУчета,
	|
	|	ВЫБОР
	|		КОГДА &Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендатор)
	|			ТОГДА ТаблицаНачислений.Ссылка.Договор.НаправлениеДеятельности
	|		ИНАЧЕ ТаблицаНачислений.НаправлениеДеятельности
	|	КОНЕЦ                                           КАК НаправлениеДеятельности,
	|	ЛОЖЬ                                            КАК ПриобретениеНаПартиюПроизводства,
	|	НЕОПРЕДЕЛЕНО                                    КАК НаправлениеДеятельностиПартииПроизводства,
	|
	|	НЕОПРЕДЕЛЕНО                                    КАК СписатьНаРасходы,
	|	ТаблицаНачислений.СтатьяРасходов                КАК СтатьяРасходов,
	|	ТаблицаНачислений.АналитикаРасходов             КАК АналитикаРасходов,
	|	ТаблицаНачислений.СтатьяРасходов                КАК СтатьяПрочихАктивов,
	|	ТаблицаНачислений.АналитикаАктивовПассивов      КАК АналитикаПрочихАктивов,
	|	НЕОПРЕДЕЛЕНО                                    КАК Назначение,
	|	ТаблицаНачислений.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ТаблицаНачислений.ИдентификаторСтроки           КАК ИдентификаторФинЗаписи,
	|	ВЫБОР
	|		КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ИЛИ ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс)
	|			ТОГДА &НастройкаХО_ПоступлениеНДСВЧастиУслугиПоАренде
	|		КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|		И НЕ &ОтразитьУслугиВРасходахРегл
	|			ТОГДА &НастройкаХО_ПоступлениеНДСВЧастиОбеспечительногоПлатежа
	|		КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|		И &ОтразитьУслугиВРасходахРегл
	|			ТОГДА &НастройкаХО_ПоступлениеНДСВЧастиУслугиПоАренде
	|		КОГДА ТаблицаНачислений.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|			ТОГДА &НастройкаХО_ПоступлениеНДСВЧастиВыкупнойСтоимости
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаНачислений
	|ГДЕ
	|	ТаблицаНачислений.Ссылка = &Ссылка";
	
	УчетНДСУП.ОтразитьПриобретениеУПоставщика(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтКурсыОбеспечительногоПлатежа(ТекстыЗапроса)

	ИмяТаблицы = "втКурсыОбеспечительногоПлатежа";

	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;

	ТекстЗапросаТаблицаВтПериодыКурсовВалют(ТекстыЗапроса);

	Текст = 
	"ВЫБРАТЬ
	|	БазаКурсов.Документ                КАК Документ,
	|	СУММА(БазаКурсов.Курс)             КАК Курс,
	|	СУММА(БазаКурсов.КурсУпр)          КАК КурсУпр,
	|	БазаКурсов.КурсНаДатуДокумента     КАК КурсНаДатуДокумента
	|	
	|ПОМЕСТИТЬ втКурсыОбеспечительногоПлатежа
	|
	|ИЗ
	|	(
	|	// Курс валюты взаиморасчетов
	|	ВЫБРАТЬ
	|		ОплатаОбеспечительногоПлатежа.Документ                                          КАК Документ,
	|		ЕСТЬNULL(КурсыВалют.КурсЧислитель, 1) / ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 1) КАК Курс,
	|		0                                                                               КАК КурсУпр,
	|		ПериодыКурсовВалют.КурсНаДатуДокумента                                          КАК КурсНаДатуДокумента
	|	ИЗ
	|		ОплатаОбеспечительногоПлатежа КАК ОплатаОбеспечительногоПлатежа
	|		
	|			ЛЕВОЕ СОЕДИНЕНИЕ втПериодыКурсовВалют КАК ПериодыКурсовВалют
	|			ПО ОплатаОбеспечительногоПлатежа.Документ = ПериодыКурсовВалют.Документ
	|				И ОплатаОбеспечительногоПлатежа.ВалютаВзаиморасчетов = ПериодыКурсовВалют.Валюта
	|				
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|			ПО (КурсыВалют.Период = ПериодыКурсовВалют.Период)
	|				И (КурсыВалют.Валюта = ПериодыКурсовВалют.Валюта)
	|				И (КурсыВалют.БазоваяВалюта = &ВалютаРегламентированногоУчета)
	|				И (ПериодыКурсовВалют.Валюта = ОплатаОбеспечительногоПлатежа.ВалютаВзаиморасчетов)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	// Курс валюты упр. учета
	|	ВЫБРАТЬ
	|		ОплатаОбеспечительногоПлатежа.Документ                                          КАК Документ,
	|		0                                                                               КАК Курс,
	|		ЕСТЬNULL(КурсыВалют.КурсЧислитель, 1) / ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 1) КАК КурсУпр,
	|		ПериодыКурсовВалют.КурсНаДатуДокумента                                          КАК КурсНаДатуДокумента
	|	ИЗ
	|		ОплатаОбеспечительногоПлатежа КАК ОплатаОбеспечительногоПлатежа
	|		
	|			ЛЕВОЕ СОЕДИНЕНИЕ втПериодыКурсовВалют КАК ПериодыКурсовВалют
	|			ПО ОплатаОбеспечительногоПлатежа.Документ = ПериодыКурсовВалют.Документ
	|				И (ПериодыКурсовВалют.Валюта = &ВалютаУправленческогоУчета)
	|				
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|			ПО (КурсыВалют.Период = ПериодыКурсовВалют.Период)
	|				И (КурсыВалют.Валюта = &ВалютаУправленческогоУчета)
	|				И (КурсыВалют.БазоваяВалюта = &ВалютаРегламентированногоУчета)
	|				И (ПериодыКурсовВалют.Валюта = &ВалютаУправленческогоУчета)
	|				
	|	) КАК БазаКурсов
	|
	|СГРУППИРОВАТЬ ПО
	|	БазаКурсов.Документ,
	|	БазаКурсов.КурсНаДатуДокумента";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы);

КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтПериодыКурсовВалют(ТекстыЗапроса)
	
	ИмяТаблицы = "втПериодыКурсовВалют";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтОплатаОбеспечительногоПлатежа(ТекстыЗапроса);
	
	Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДатыКурсов.Документ             КАК Документ,
	|	ДатыКурсов.ВалютаВзаиморасчетов КАК Валюта,
	|	ДатыКурсов.Период               КАК Период,
	|	ДатыКурсов.КурсНаДатуДокумента  КАК КурсНаДатуДокумента
	|	
	|ПОМЕСТИТЬ втПериодыКурсовВалют
	|
	|ИЗ
	|(
	|
	|// Курс валюты взаиморасчетов на дату оплаты обеспечительного платежа.
	|ВЫБРАТЬ
	|	ОплатаОбеспечительногоПлатежа.Документ             КАК Документ,
	|	ОплатаОбеспечительногоПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	МАКСИМУМ(КурсыВалют.Период)                        КАК Период,
	|	ЛОЖЬ                                               КАК КурсНаДатуДокумента
	|ИЗ
	|	ОплатаОбеспечительногоПлатежа КАК ОплатаОбеспечительногоПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|	ПО 
	|		КурсыВалют.Валюта          =  ОплатаОбеспечительногоПлатежа.ВалютаВзаиморасчетов
	|		И КурсыВалют.БазоваяВалюта =  &ВалютаРегламентированногоУчета
	|		И КурсыВалют.Период        <= ОплатаОбеспечительногоПлатежа.ДатаОплаты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОплатаОбеспечительногоПлатежа.Документ,
	|	ОплатаОбеспечительногоПлатежа.ВалютаВзаиморасчетов
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Курс  валюты взаиморасчетов на дату документа.
	|ВЫБРАТЬ
	|	ОплатаОбеспечительногоПлатежа.Документ             КАК Документ,
	|	ОплатаОбеспечительногоПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	МАКСИМУМ(КурсыВалют.Период)                        КАК Период,
	|	ИСТИНА                                             КАК КурсНаДатуДокумента
	|ИЗ
	|	ОплатаОбеспечительногоПлатежа КАК ОплатаОбеспечительногоПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|	ПО 
	|		КурсыВалют.Валюта          =  ОплатаОбеспечительногоПлатежа.ВалютаВзаиморасчетов
	|		И КурсыВалют.БазоваяВалюта =  &ВалютаРегламентированногоУчета
	|		И КурсыВалют.Период        <= НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОплатаОбеспечительногоПлатежа.Документ,
	|	ОплатаОбеспечительногоПлатежа.ВалютаВзаиморасчетов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Курс валюты упр. учета на дату оплаты обеспечительного платежа.
	|ВЫБРАТЬ
	|	ОплатаОбеспечительногоПлатежа.Документ             КАК Документ,
	|	&ВалютаУправленческогоУчета                        КАК ВалютаУпр,
	|	МАКСИМУМ(КурсыВалют.Период)                        КАК Период,
	|	ЛОЖЬ                                               КАК КурсНаДатуДокумента
	|ИЗ
	|	ОплатаОбеспечительногоПлатежа КАК ОплатаОбеспечительногоПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|	ПО 
	|		КурсыВалют.Валюта          =  &ВалютаУправленческогоУчета
	|		И КурсыВалют.БазоваяВалюта =  &ВалютаРегламентированногоУчета
	|		И КурсыВалют.Период        <= ОплатаОбеспечительногоПлатежа.ДатаОплаты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОплатаОбеспечительногоПлатежа.Документ,
	|	ОплатаОбеспечительногоПлатежа.ВалютаВзаиморасчетов
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Курс  валюты  упр. учета  на дату документа.
	|ВЫБРАТЬ
	|	ОплатаОбеспечительногоПлатежа.Документ             КАК Документ,
	|	&ВалютаУправленческогоУчета                        КАК ВалютаУпр,
	|	МАКСИМУМ(КурсыВалют.Период)                        КАК Период,
	|	ИСТИНА                                             КАК КурсНаДатуДокумента
	|ИЗ
	|	ОплатаОбеспечительногоПлатежа КАК ОплатаОбеспечительногоПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|	ПО 
	|		КурсыВалют.Валюта          =  &ВалютаУправленческогоУчета
	|		И КурсыВалют.БазоваяВалюта =  &ВалютаРегламентированногоУчета
	|		И КурсыВалют.Период        <= НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОплатаОбеспечительногоПлатежа.Документ,
	|	ОплатаОбеспечительногоПлатежа.ВалютаВзаиморасчетов
	|	
	|	) КАК ДатыКурсов
	|
	|";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтСуммыДокументовВВалютахУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтСуммыДокументовВВалютахУчета";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтКурсыОбеспечительногоПлатежа(ТекстыЗапроса);
	
	Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.Ссылка КАК Ссылка,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|
	|	Начисления.СуммаСНДС КАК СуммаСНДС,
	|	Начисления.СуммаСНДС - Начисления.СуммаНДС КАК СуммаБезНДС,
	|	Начисления.СтавкаНДС КАК СтавкаНДС,
	|	Начисления.СуммаНДС КАК СуммаНДС,
	|
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов
	|		КОГДА &ВалютаВзаиморасчетов <> &ВалютаРегламентированногоУчета 
	|				И (Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|				И НЕ &ИспользуетсяУчетАрендыПоФСБУ25_2018
	|				ИЛИ Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс))
	|				И НЕ КурсыОбеспечительногоПлатежа.Курс ЕСТЬ NULL
	|			ТОГДА 
	|				(Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов) * КурсыОбеспечительногоПлатежа.Курс
	|		ИНАЧЕ (Начисления.СуммаСНДС - Начисления.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов
	|		КОГДА &ВалютаВзаиморасчетов <> &ВалютаРегламентированногоУчета 
	|				И (Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|				ИЛИ Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс))
	|				И НЕ КурсыОбеспечительногоПлатежа.Курс ЕСТЬ NULL
	|			ТОГДА 
	|				(Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов) * КурсыОбеспечительногоПлатежа.Курс
	|		ИНАЧЕ (Начисления.СуммаСНДС - Начисления.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл
	|	КОНЕЦ КАК СуммаНУ,
	|
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов
	|		КОГДА &ВалютаВзаиморасчетов <> &ВалютаРегламентированногоУчета 
	|				И (Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|				ИЛИ Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс))
	|				И НЕ КурсыОбеспечительногоПлатежа.Курс ЕСТЬ NULL
	|			ТОГДА 
	|				(Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов) * КурсыОбеспечительногоПлатежа.Курс
	|		ИНАЧЕ (Начисления.СуммаСНДС - Начисления.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл
	|	КОНЕЦ КАК БазаНДСРегл,
	|
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА Начисления.СуммаНДСВзаиморасчетов
	|		КОГДА &ВалютаВзаиморасчетов <> &ВалютаРегламентированногоУчета 
	|				И (Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|				ИЛИ Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс))
	|				И НЕ КурсыОбеспечительногоПлатежа.Курс ЕСТЬ NULL
	|			ТОГДА 
	|				Начисления.СуммаНДСВзаиморасчетов * КурсыОбеспечительногоПлатежа.Курс
	|		ИНАЧЕ Начисления.СуммаНДС * &КоэффициентПересчетаВВалютуРегл
	|	КОНЕЦ КАК СуммаНДСРегл,
	|
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ 
	|			(Начисления.СуммаСНДС - Начисления.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр
	|	КОНЕЦ КАК СуммаБезНДСУпр,
	|
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА Начисления.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ 
	|			Начисления.СуммаНДС* &КоэффициентПересчетаВВалютуУпр
	|	КОНЕЦ КАК СуммаНДСУпр,
	|
	|	Начисления.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов КАК СуммаБезНДСВзаиморасчетов,
	|	Начисления.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
	|	&Валюта КАК ВалютаДокумента,
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	&Период КАК ПериодБазыНДС,
	|	ЛОЖЬ КАК ОтражаетсяВРасчетах,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов,
	|	ЛОЖЬ КАК ПересчитыватьПоДаннымРасчетов
	|	
	|ПОМЕСТИТЬ ВтСуммыДокументовВВалютахУчета
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыОбеспечительногоПлатежа КАК КурсыОбеспечительногоПлатежа
	|		ПО Начисления.РасчетныйДокумент = КурсыОбеспечительногоПлатежа.Документ
	|		И КурсыОбеспечительногоПлатежа.КурсНаДатуДокумента = ЛОЖЬ
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыОбеспечительногоПлатежа КАК КурсыНаДатуДокумента
	|		ПО Начисления.РасчетныйДокумент = КурсыНаДатуДокумента.Документ
	|		И КурсыНаДатуДокумента.КурсНаДатуДокумента = ИСТИНА
	|
	|ГДЕ
	|	Начисления.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		Возврат "";
	КонецЕсли; 
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""Начисления"" 							КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 			КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО							КАК Поставщик,
	|	ДанныеДокумента.Контрагент				КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС 				КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В
	|		  (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|		  И ЕСТЬNULL(Статьи.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		  И ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|		КОГДА ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		ИНАЧЕ ДанныеДокумента.ЗакупкаПодДеятельность
	|	КОНЕЦ                               	КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)) <>
	|		  ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|			ТОГДА Статьи.ВидЦенностиНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ                               	КАК ВидЦенности,
	|	0										КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеУслугПоАренде КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|		ПО ТаблицаДокумента.СтатьяРасходов = Статьи.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ВтТаблицаАналитикУчетаПартий
	|" + ТекстЗапроса;
	
	ТекстыЗапроса[ТекстыЗапроса.Количество() - 1].Значение = ТекстЗапроса;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаВтРасходы(Запрос, ТекстыЗапроса)
	
	ИмяТаблицы = "втРасходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтСуммыДокументовВВалютахУчета(ТекстыЗапроса);
	ТекстЗапросаТаблицаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = ПоступлениеУслугПоАрендеЛокализация.ТекстЗапросаТаблицаВтРасходы();
	
	Если ТекстЗапроса = Неопределено Тогда
		ТекстЗапроса =
		"// Суммы без НДС.
		|ВЫБРАТЬ
		|	&Период                                    КАК Период,
		|	&Организация                               КАК Организация,
		|	ТаблицаНачисления.Ссылка                   КАК Ссылка,
		|	ТаблицаНачисления.НомерСтроки              КАК НомерСтроки,
		|	ТаблицаНачисления.ИдентификаторСтроки      КАК ИдентификаторСтроки,
		|	ТаблицаНачисления.СтатьяРасходов           КАК СтатьяРасходов,
		|	ТаблицаНачисления.АналитикаРасходов        КАК АналитикаРасходов,
		|	ТаблицаНачисления.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
		|	ТаблицаНачисления.НастройкаСчетовУчета     КАК НастройкаСчетовУчета,
		|	ТаблицаНачисления.Подразделение            КАК Подразделение,
		|	ТаблицаНачисления.НаправлениеДеятельности  КАК НаправлениеДеятельности,
		|	ТаблицаАналитикУчетаПартий.ВидЦенности     КАК ВидЦенности,
		|	&НастройкаХО_ОтражениеУслугПоАрендеВРасходах КАК НастройкаХозяйственнойОперации,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК ВидДеятельностиНДС,
		|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий                    КАК АналитикаУчетаПартий,
		|
		|	ТаблицаНачисления.СтавкаНДС                КАК СтавкаНДС,
		|
		|	ВЫБОР
		|		КОГДА &ОтразитьУслугиВРасходахУпр
		|			ТОГДА ТаблицаСуммы.СуммаБезНДСУпр + ТаблицаСуммы.СуммаНДСУпр
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаУпр,
		|
		|	ВЫБОР
		|		КОГДА &ОтразитьУслугиВРасходахУпр
		|			ТОГДА ТаблицаСуммы.СуммаСНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаСНДС,
		|
		|	ВЫБОР
		|		КОГДА &ОтразитьУслугиВРасходахУпр
		|			ТОГДА ТаблицаСуммы.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНДС,
		|
		|	ВЫБОР
		|		КОГДА &ОтразитьУслугиВРасходахУпр
		|			ТОГДА ТаблицаСуммы.СуммаБезНДСУпр
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаБезНДСУпр,
		|
		|	ВЫБОР
		|		КОГДА &ОтразитьУслугиВРасходахУпр
		|			ТОГДА ТаблицаСуммы.СуммаНДСУпр
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНДСУпр,
		|
		|	ВЫБОР
		|		КОГДА &ОтразитьУслугиВРасходахРегл
		|			ТОГДА ТаблицаСуммы.СуммаБезНДСРегл + ТаблицаСуммы.СуммаНДСРегл
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаРегл,
		|
		|	ВЫБОР
		|		КОГДА &ОтразитьУслугиВРасходахРегл
		|			ТОГДА ТаблицаСуммы.СуммаБезНДСРегл
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаБезНДСРегл,
		|
		|	ВЫБОР
		|		КОГДА &ОтразитьУслугиВРасходахРегл
		|			ТОГДА ТаблицаСуммы.СуммаНДСРегл
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНДСРегл,
		|
		|	0 КАК ВременнаяРазница,
		|
		|	ТаблицаСуммы.СуммаВзаиморасчетов    КАК СуммаВзаиморасчетов,
		|	ТаблицаСуммы.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов
		|
		|ПОМЕСТИТЬ втРасходы
		|
		|ИЗ
		|	Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК ТаблицаСуммы
		|		ПО (ТаблицаСуммы.ИдентификаторСтроки = ТаблицаНачисления.ИдентификаторСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
		|		ПО (ТаблицаАналитикУчетаПартий.НомерСтроки = ТаблицаНачисления.НомерСтроки)
		|			И (ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""Начисления"")
		|ГДЕ
		|	ТаблицаНачисления.Ссылка = &Ссылка
		|	И (&ОтразитьУслугиВРасходахРегл
		|			ИЛИ &ОтразитьУслугиВРасходахУпр
		|			ИЛИ НЕ &ОтразитьУслугиВРасходахРегл
		|				И &Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендодатель))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|// Суммы НДС.
		|ВЫБРАТЬ
		|	&Период                                    КАК Период,
		|	&Организация                               КАК Организация,
		|	ТаблицаНачисления.Ссылка                   КАК Ссылка,
		|	ТаблицаНачисления.НомерСтроки              КАК НомерСтроки,
		|	ТаблицаНачисления.ИдентификаторСтроки      КАК ИдентификаторСтроки,
		|	ТаблицаНачисления.СтатьяРасходов           КАК СтатьяРасходов,
		|	ТаблицаНачисления.АналитикаРасходов        КАК АналитикаРасходов,
		|	ТаблицаНачисления.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
		|	ТаблицаНачисления.НастройкаСчетовУчета     КАК НастройкаСчетовУчета,
		|	ТаблицаНачисления.Подразделение            КАК Подразделение,
		|	ТаблицаНачисления.НаправлениеДеятельности  КАК НаправлениеДеятельности,
		|	ТаблицаАналитикУчетаПартий.ВидЦенности     КАК ВидЦенности,
		|	&НастройкаХО_ПоступлениеНДСВЧастиУслугиПоАренде КАК НастройкаХозяйственнойОперации,
		|
		|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС   КАК ВидДеятельностиНДС,
		|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|
		|	ТаблицаНачисления.СтавкаНДС                КАК СтавкаНДС,
		|
		|	0                          КАК СуммаУпр,
		|	ТаблицаСуммы.СуммаНДС      КАК СуммаСНДС,
		|	ТаблицаСуммы.СуммаНДС      КАК СуммаНДС,
		|	0                          КАК СуммаБезНДСУпр,
		|	ТаблицаСуммы.СуммаНДСУпр   КАК СуммаНДСУпр,
		|	ТаблицаСуммы.СуммаНДСРегл  КАК СуммаРегл,
		|	0                          КАК СуммаБезНДСРегл,
		|	ТаблицаСуммы.СуммаНДСРегл  КАК СуммаНДСРегл,
		|	0                          КАК ВременнаяРазница,
		|	0                          КАК СуммаВзаиморасчетов,
		|	0                          КАК СуммаНДСВзаиморасчетов
		|ИЗ
		|	Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК ТаблицаСуммы
		|		ПО (ТаблицаСуммы.ИдентификаторСтроки = ТаблицаНачисления.ИдентификаторСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
		|		ПО (ТаблицаАналитикУчетаПартий.НомерСтроки = ТаблицаНачисления.НомерСтроки)
		|			И (ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""Начисления"")
		|ГДЕ
		|	ТаблицаНачисления.Ссылка = &Ссылка";
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	ТекстЗапросаТаблицаВтРасходы(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасходы.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаРасходы.Организация КАК Организация,
	|	ТаблицаРасходы.Подразделение КАК Подразделение,
	|	ТаблицаРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасходы.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	ТаблицаРасходы.СуммаУпр КАК СуммаСНДС,
	|
	|	ТаблицаРасходы.СуммаБезНДСУпр КАК СуммаБезНДС,
	|	ТаблицаРасходы.СуммаБезНДСУпр КАК СуммаБезНДСУпр,
	|	ТаблицаРасходы.СуммаРегл КАК СуммаСНДСРегл,
	|	ТаблицаРасходы.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	ТаблицаРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|
	|	&ХО_ОтражениеУслугПоАрендеВРасходах КАК ХозяйственнаяОперация,
	|	Неопределено КАК АналитикаУчетаНоменклатуры,
	|
	|	ТаблицаРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ТаблицаРасходы.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	втРасходы КАК ТаблицаРасходы
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ТаблицаРасходы.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	И ТаблицаРасходы.НастройкаХозяйственнойОперации <> &НастройкаХО_ПоступлениеНДСВЧастиУслугиПоАренде
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасходы.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаРасходы.Организация КАК Организация,
	|	ТаблицаРасходы.Подразделение КАК Подразделение,
	|	ТаблицаРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасходы.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	0 КАК СуммаСНДС,
	|
	|	0 КАК СуммаБезНДС,
	|	ТаблицаРасходы.СуммаБезНДСУпр КАК СуммаБезНДСУпр,
	|	ТаблицаРасходы.СуммаРегл КАК СуммаСНДСРегл,
	|	ТаблицаРасходы.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	ТаблицаРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|
	|	&ХО_ОтражениеУслугПоАрендеВРасходах КАК ХозяйственнаяОперация,
	|	Неопределено КАК АналитикаУчетаНоменклатуры,
	|
	|	ТаблицаРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ТаблицаРасходы.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	втРасходы КАК ТаблицаРасходы
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ТаблицаРасходы.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	И ТаблицаРасходы.НастройкаХозяйственнойОперации = &НастройкаХО_ПоступлениеНДСВЧастиУслугиПоАренде";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПоПартнерамИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация                    КАК Организация,
	|	ДанныеДокумента.Партнер                        КАК Партнер,
	|	ДанныеДокумента.Контрагент                     КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ДанныеДокумента.Договор.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО ДанныеДокумента.Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|			И ДанныеДокумента.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|			И ДанныеДокумента.Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|			И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = РегистрАналитикаУчетаПоПартнерам.Договор
	|			И ДанныеДокумента.Договор.НаправлениеДеятельности = РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И РегистрАналитикаУчетаПоПартнерам.КлючАналитики ЕСТЬ NULL";
	
	ЗапросАналитик = Новый Запрос(ТекстЗапроса);
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	РезультатЗапроса = ЗапросАналитик.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПоПартнерамИнициализированы", Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеПоРеглУчету

// Возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	Возврат ПоступлениеУслугПоАрендеЛокализация.ТекстОтраженияВРеглУчете();
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете.
//
// Возвращаемое значение:
// 		Строка - Строка текста запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат ПоступлениеУслугПоАрендеЛокализация.ТекстЗапросаВТОтраженияВРеглУчете();
	
КонецФункции

#КонецОбласти

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ПараметрыВыбораСтатейИАналитик() Экспорт
	
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.Начисления";
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьи";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("НачисленияСтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("НачисленияАналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("НачисленияАналитикаАктивовПассивов");
	
	Возврат ПараметрыВыбора;
	
КонецФункции

Функция ПараметрыНастройкиСчетовУчета(Договор) Экспорт
 
	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	
	ДоступностьПоОперации = Ложь;
	
	Если ЗначениеЗаполнено(Договор) Тогда
		Балансодержатель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "Балансодержатель");
		Если Балансодержатель = Перечисления.БалансодержательПредметовАренды.Арендодатель Тогда
			ДоступностьПоОперации = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыНастройки.ДоступностьПоОперации = ДоступностьПоОперации;
	ПараметрыНастройки.ПутьКДанным = "Объект.Начисления"; 

	ПараметрыНастройки.Представление = "ПредставлениеОтраженияВРеглУчете";
	ПараметрыНастройки.ТипСтатьи     = "ТипСтатьи";
	
	ПараметрыНастройки.Организация = "Объект.Организация";
	
	ПараметрыНастройки.ЭлементыФормы.Добавить("НачисленияПредставлениеОтраженияВРеглУчете");
	
	Возврат ПараметрыНастройки;
 
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
