//++ Устарело_Производство21
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует описание реквизитов объекта, заполняемых по статистике их использования.
//
// Параметры:
//  ОписаниеРеквизитов - Структура - описание реквизитов, для которых необходимо получить значения по статистике
//
//
Процедура ЗадатьОписаниеЗаполняемыхРеквизитовПоСтатистике(ОписаниеРеквизитов) Экспорт
	
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов, "Организация");
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьТолькоЗаполненные = "Организация";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(
		ОписаниеРеквизитов, "Ответственный", Параметры);
	
КонецПроцедуры

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	МеханизмыДокумента.Добавить("СебестоимостьИПартионныйУчет");
	МеханизмыДокумента.Добавить("СерийныйУчет");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("УчетРабот");
	МеханизмыДокумента.Добавить("Обеспечение");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.ПеремещениеМатериаловВПроизводстве") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		
		//РасчетСебестоимостиПроведениеДокументов.ОтразитьВМеханизмеУчетаЗатратИСебестоимости(Документ, Запрос, ТекстыЗапроса, Регистры);
		
		РеглУчетПроведениеСервер.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
		
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	ОтразитьРаспределениеЗапасовДвижения(Запрос, ТекстыЗапроса, Регистры);
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

#Область Серии

// Имена реквизитов, от значений которых зависят параметры указания серий.
//
// Возвращаемое значение:
//  Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	ИменаРеквизитов = "ПодразделениеОтправитель,ПодразделениеПолучатель,Статус,Дата,ХозяйственнаяОперация";
	
	Возврат ИменаРеквизитов;
	
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//  Объект	 - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//  Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();            
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПеремещениеМатериаловВПроизводстве";
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "МатериалыИРаботы";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "Серии";
	
	ПараметрыСерийОтправитель = СкладыСервер.ИспользованиеСерийВПодразделении(Объект.ПодразделениеОтправитель);
	ПараметрыСерийПолучатель  = СкладыСервер.ИспользованиеСерийВПодразделении(Объект.ПодразделениеПолучатель);
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = ПараметрыСерийОтправитель.ИспользоватьСерииНоменклатуры
														Или ПараметрыСерийПолучатель.ИспользоватьСерииНоменклатуры
														Или ПараметрыСерийПолучатель.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийОтправитель.УчитыватьСебестоимостьПоСериям
														Или ПараметрыСерийПолучатель.УчитыватьСебестоимостьПоСериям;
														
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещениюВПроизводстве);
	Если Объект.Статус = Перечисления.СтатусыПеремещенияМатериаловВПроизводстве.Принято Тогда
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПоПеремещениюВПроизводстве);
	КонецЕсли;
	ПараметрыУказанияСерий.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("НазначениеОтправителя");
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	
	Если Объект.Статус = Перечисления.СтатусыПеремещенияМатериаловВПроизводстве.Принято Тогда
		ПараметрыУказанияСерий.ИмяПоляСклад = "ПодразделениеПолучатель";
	Иначе	
		ПараметрыУказанияСерий.ИмяПоляСклад = "ПодразделениеОтправитель";
	КонецЕсли;
	
	ПараметрыУказанияСерий.ИмяПоляСкладОтправитель = "ПодразделениеОтправитель";
	ПараметрыУказанияСерий.ИмяПоляСкладПолучатель = "ПодразделениеПолучатель";
	
	ПараметрыУказанияСерий.ПланированиеОтгрузки = Объект.Статус = Перечисления.СтатусыПеремещенияМатериаловВПроизводстве.КОтгрузке;
	ПараметрыУказанияСерий.ПланированиеОтбора   = Объект.Статус = Перечисления.СтатусыПеремещенияМатериаловВПроизводстве.КОтгрузке;
	ПараметрыУказанияСерий.ФактОтбора           = Объект.Статус = Перечисления.СтатусыПеремещенияМатериаловВПроизводстве.Отгружено
													Или Объект.Статус = Перечисления.СтатусыПеремещенияМатериаловВПроизводстве.Принято;
													
	ПараметрыУказанияСерий.РегистрироватьСерии = НоменклатураКлиентСервер.НеобходимоРегистрироватьСерии(ПараметрыУказанияСерий);
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	                
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.НазначениеОтправителя КАК НазначениеОтправителя,
	|	Товары.Серия КАК Серия,
	|	&СкладОтправитель КАК СкладОтправитель,
	|	&СкладПолучатель КАК СкладПолучатель,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.СтатусУказанияСерийОтправитель,
	|	Товары.СтатусУказанияСерийПолучатель,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.НазначениеОтправителя,
	|	Товары.Серия,
	|	Товары.СкладОтправитель,
	|	Товары.СкладПолучатель,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.НазначениеОтправителя,
	|	Товары.Серия,
	|	Товары.СкладОтправитель,
	|	Товары.СкладПолучатель,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.НазначениеОтправителя,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.НазначениеОтправителя,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.НазначениеОтправителя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0 И НЕ &ФактОтбора
	|						ТОГДА 11
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0 И НЕ &ФактОтбора
	|						ТОГДА 11
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 6
	|					ИНАЧЕ 5
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыОтправитель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.СкладОтправитель)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|							ИЛИ Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА &ПриемкаПоПеремещениюВПроизводстве
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПолученииМатериалов
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|							ИЛИ Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА ВЫБОР
	|								КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|									ТОГДА 4
	|								ИНАЧЕ 2
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА 3
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыПолучатель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.СкладПолучатель)
	|				И (ПолитикиУчетаСерий.Ссылка = ТоварыДляЗапроса.ВидНоменклатуры)
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	СтатусыОтправитель.СтатусУказанияСерий КАК СтатусУказанияСерийОтправитель,
	|	ВЫБОР
	|		КОГДА &ПриемкаПоПеремещениюВПроизводстве
	|			ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерийПолучатель,
	|	ВЫБОР
	|		КОГДА СтатусыПолучатель.СтатусУказанияСерий В (13, 14)
	|				И СтатусыОтправитель.СтатусУказанияСерий <> 0
	|			ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|		КОГДА СтатусыОтправитель.СтатусУказанияСерий В (5, 6)
	|			ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|		КОГДА СтатусыОтправитель.СтатусУказанияСерий > ВЫБОР
	|				КОГДА &ПриемкаПоПеремещениюВПроизводстве
	|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|		ИНАЧЕ СтатусыПолучатель.СтатусУказанияСерий
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыОтправитель КАК СтатусыОтправитель
	|		ПО (СтатусыОтправитель.НомерСтроки = Товары.НомерСтроки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыПолучатель КАК СтатусыПолучатель
	|		ПО (СтатусыПолучатель.НомерСтроки = Товары.НомерСтроки)
	|ГДЕ
	|	(СтатусыОтправитель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийОтправитель
	|			ИЛИ ВЫБОР
	|				КОГДА &ПриемкаПоПеремещениюВПроизводстве
	|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|				ИНАЧЕ 0
	|			КОНЕЦ <> Товары.СтатусУказанияСерийПолучатель
	|			ИЛИ ВЫБОР
	|				КОГДА СтатусыПолучатель.СтатусУказанияСерий В (13, 14)
	|						И СтатусыОтправитель.СтатусУказанияСерий <> 0
	|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|				КОГДА СтатусыОтправитель.СтатусУказанияСерий В (5, 6)
	|					ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|				КОГДА СтатусыОтправитель.СтатусУказанияСерий > ВЫБОР
	|						КОГДА &ПриемкаПоПеремещениюВПроизводстве
	|							ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|					ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|				ИНАЧЕ СтатусыПолучатель.СтатусУказанияСерий
	|			КОНЕЦ <> Товары.СтатусУказанияСерий)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Статус

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
// 		МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
// 		НовыйСтатус - Строка - Имя нового статуса
// 		ДополнительныеПараметры - Структура - Структура дополнительных параметров.
//
// Возвращаемое значение:
// 		Запрос - Запрос проверки перед сменой статуса.
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыПеремещенияМатериаловВПроизводстве[НовыйСтатус];
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка                КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
	|	ПРЕДСТАВЛЕНИЕ(&Статус)                  КАК ПредставлениеНовогоСтатуса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументов.Статус = &Статус ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                   КАК СтатусСовпадает,
	|	ТаблицаДокументов.Проведен              КАК Проведен,
	|	ТаблицаДокументов.ПометкаУдаления       КАК ПометкаУдаления,
	|	ИСТИНА                                  КАК ЗаписьПроведением
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивДокументов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
// 		ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
// 		НовыйСтатус - Перечисление - Новый статус
// 		ДополнительныеПараметры - Структура - Структура дополнительных параметров.
//
// Возвращаемое значение:
// 		Булево - Истина, в случае успешного завершения проверки.
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина; // Для документа отсутствуют дополнительные проверки
	
КонецФункции

#КонецОбласти

#Область Прочее

// Определяет список команд создания на основании.
//
// Параметры:
//	КомандыСозданияНаОсновании - См. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//	Параметры - См. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//	КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//	Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
//
//  Возвращаемое значение:
//  См. Справочники.Назначения.МакетФормыВыбораНазначений
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	//++ НЕ УТКА
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы);
	ШаблонНазначения.ТипыНазначений.Удалить(ШаблонНазначения.ТипыНазначений.Найти(Перечисления.ТипыНазначений.ДавальческоеПродукция22));
	ШаблонНазначения.ТипыНазначений.Удалить(ШаблонНазначения.ТипыНазначений.Найти(Перечисления.ТипыНазначений.ДавальческоеМатериалы22));
	ШаблонНазначения.ТипыНазначений.Удалить(ШаблонНазначения.ТипыНазначений.Найти(Перечисления.ТипыНазначений.ДавальческоеМатериалыПодЭтап22));
	ШаблонНазначения.ТипыНазначений.Удалить(ШаблонНазначения.ТипыНазначений.Найти(Перечисления.ТипыНазначений.Давальческое2_5));
	//-- НЕ УТКА
	
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ВсеНазначения", Истина, "Объект.МатериалыИРаботы.Назначение");
	
//++ НЕ УТКА

	// Остатки материалов в цехе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "МатериалыИРаботыВПроизводстве", Истина, "Объект.МатериалыИРаботы.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Количество").Пометка = Истина;
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.МатериалыИРаботы.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.МатериалыИРаботы.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Подразделение    = "Объект.ПодразделениеОтправитель";
	ОписаниеКолонок.ПутиКДанным.Организация      = "Объект.Организация";
//-- НЕ УТКА
	
	Возврат МакетФормы;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ПеремещениеМатериаловВПроизводстве";
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
		ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента, Ложь);
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметровПроведения();
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)
	
	ЗначенияПараметровПроведения = Новый Структура;
	
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПеремещениеМатериаловВПроизводстве"));
	ЗначенияПараметровПроведения.Вставить("ХозОперацияДляРеестра", Перечисления.ХозяйственныеОперации.ПеремещениеМатериаловВПроизводстве);
	ЗначенияПараметровПроведения.Вставить("Дополнительно", "");
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                      КАК Ссылка,
	|	ДанныеДокумента.Дата                        КАК Дата,
	|	ДанныеДокумента.Дата                        КАК Период,
	|	ДанныеДокумента.Статус                      КАК Статус,
	|	ДанныеДокумента.Организация                 КАК Организация,
	|	ДанныеДокумента.ПодразделениеОтправитель    КАК ПодразделениеОтправитель,
	|	ДанныеДокумента.ПодразделениеПолучатель     КАК ПодразделениеПолучатель,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Автор КАК Автор,
	|	ДанныеДокумента.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                   Реквизиты.Дата);
	Запрос.УстановитьПараметр("Статус",                   Реквизиты.Статус);
	Запрос.УстановитьПараметр("Организация",              Реквизиты.Организация);
	Запрос.УстановитьПараметр("ПодразделениеОтправитель", Реквизиты.ПодразделениеОтправитель);
	Запрос.УстановитьПараметр("ПодразделениеПолучатель",  Реквизиты.ПодразделениеПолучатель);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
	Запрос.УстановитьПараметр("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПеремещениеМатериаловВПроизводстве"));
	Запрос.УстановитьПараметр("Номер", Реквизиты.Номер);
	Запрос.УстановитьПараметр("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	Запрос.УстановитьПараметр("Комментарий", Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("Проведен", Реквизиты.Проведен);
	Запрос.УстановитьПараметр("Автор", Реквизиты.Автор);
	Запрос.УстановитьПараметр("Ответственный", Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("ПометкаУдаления", Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ХозОперацияДляРеестра", Перечисления.ХозяйственныеОперации.ПеремещениеМатериаловВПроизводстве);
	
	
	Запрос.УстановитьПараметр("Дополнительно", СтрШаблон("ru = 'Перемещено на подразделение ""%1""'", Реквизиты.ПодразделениеПолучатель)); // @НСтр
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)

	Если Запрос = Неопределено ИЛИ Запрос.Параметры.Свойство("КлючиАналитикиНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитики = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таб.Склад,
	|	Таб.Номенклатура,
	|	Таб.Характеристика,
	|	Таб.Назначение,
	|	Таб.Серия
	|ИЗ (
	// Аналитика учета номенклатуры подразделения - отправителя
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&ПодразделениеОтправитель КАК Склад,
	|		ТаблицаМатериалыИРаботы.Номенклатура КАК Номенклатура,
	|		ТаблицаМатериалыИРаботы.Характеристика КАК Характеристика,
	|		ТаблицаМатериалыИРаботы.Назначение КАК Назначение,
	|		(ВЫБОР
	|			КОГДА ТаблицаМатериалыИРаботы.СтатусУказанияСерийОтправитель = 14
	|				ТОГДА ТаблицаМатериалыИРаботы.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ) КАК Серия
	|ИЗ
	|		Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаМатериалыИРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО (Аналитика.Номенклатура = ТаблицаМатериалыИРаботы.Номенклатура)
	|			И (Аналитика.Характеристика = ТаблицаМатериалыИРаботы.Характеристика)
	|			И (Аналитика.Назначение = ТаблицаМатериалыИРаботы.НазначениеОтправителя)
	|			И (Аналитика.МестоХранения = &ПодразделениеОтправитель)
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	|			И (ВЫБОР
	|				КОГДА ТаблицаМатериалыИРаботы.СтатусУказанияСерийОтправитель = 14
	|					ТОГДА ТаблицаМатериалыИРаботы.Серия = Аналитика.Серия
	|				ИНАЧЕ Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|	ГДЕ
	|		ТаблицаМатериалыИРаботы.Ссылка = &Ссылка
	|		И Аналитика.Номенклатура ЕСТЬ NULL 
	|
	// Аналитика учета номенклатуры подразделения - отправителя без назначения
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&ПодразделениеОтправитель КАК Склад,
	|		ТаблицаМатериалыИРаботы.Номенклатура КАК Номенклатура,
	|		ТаблицаМатериалыИРаботы.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		(ВЫБОР
	|			КОГДА ТаблицаМатериалыИРаботы.СтатусУказанияСерийОтправитель = 14
	|				ТОГДА ТаблицаМатериалыИРаботы.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ) КАК Серия
	|ИЗ
	|		Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаМатериалыИРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО (Аналитика.Номенклатура = ТаблицаМатериалыИРаботы.Номенклатура)
	|			И (Аналитика.Характеристика = ТаблицаМатериалыИРаботы.Характеристика)
	|			И (Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|			И (Аналитика.МестоХранения = &ПодразделениеОтправитель)
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	|			И (ВЫБОР
	|				КОГДА ТаблицаМатериалыИРаботы.СтатусУказанияСерийОтправитель = 14
	|					ТОГДА ТаблицаМатериалыИРаботы.Серия = Аналитика.Серия
	|				ИНАЧЕ Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|	ГДЕ
	|		ТаблицаМатериалыИРаботы.Ссылка = &Ссылка
	|		И Аналитика.Номенклатура ЕСТЬ NULL 
	|		И НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
	|
	// Аналитика учета номенклатуры подразделения - получателя
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&ПодразделениеПолучатель,
	|		ТаблицаМатериалыИРаботы.Номенклатура,
	|		ТаблицаМатериалыИРаботы.Характеристика,
	|		ТаблицаМатериалыИРаботы.Назначение,
	|		(ВЫБОР
	|			КОГДА ТаблицаМатериалыИРаботы.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаМатериалыИРаботы.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ) КАК Серия
	|	ИЗ
	|		Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаМатериалыИРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО (Аналитика.Номенклатура = ТаблицаМатериалыИРаботы.Номенклатура)
	|			И (Аналитика.Характеристика = ТаблицаМатериалыИРаботы.Характеристика)
	|			И (Аналитика.Назначение = ТаблицаМатериалыИРаботы.Назначение)
	|			И (Аналитика.МестоХранения = &ПодразделениеПолучатель)
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	|			И (ВЫБОР
	|				КОГДА ТаблицаМатериалыИРаботы.СтатусУказанияСерийПолучатель = 14
	|					ТОГДА ТаблицаМатериалыИРаботы.Серия = Аналитика.Серия
	|				ИНАЧЕ ТаблицаМатериалыИРаботы.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|	ГДЕ
	|		ТаблицаМатериалыИРаботы.Ссылка = &Ссылка
	|		И Аналитика.Номенклатура ЕСТЬ NULL
	|
	// Аналитика учета номенклатуры подразделения - получателя без назначения
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&ПодразделениеПолучатель,
	|		ТаблицаМатериалыИРаботы.Номенклатура,
	|		ТаблицаМатериалыИРаботы.Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		(ВЫБОР
	|			КОГДА ТаблицаМатериалыИРаботы.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаМатериалыИРаботы.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ) КАК Серия
	|	ИЗ
	|		Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаМатериалыИРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО (Аналитика.Номенклатура = ТаблицаМатериалыИРаботы.Номенклатура)
	|			И (Аналитика.Характеристика = ТаблицаМатериалыИРаботы.Характеристика)
	|			И (Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|			И (Аналитика.МестоХранения = &ПодразделениеПолучатель)
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	|			И (ВЫБОР
	|				КОГДА ТаблицаМатериалыИРаботы.СтатусУказанияСерийПолучатель = 14
	|					ТОГДА ТаблицаМатериалыИРаботы.Серия = Аналитика.Серия
	|				ИНАЧЕ ТаблицаМатериалыИРаботы.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|	ГДЕ
	|		ТаблицаМатериалыИРаботы.Ссылка = &Ссылка
	|		И Аналитика.Номенклатура ЕСТЬ NULL) КАК Таб");
	
	ЗапросАналитики.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитики.УстановитьПараметр("ПодразделениеОтправитель", Запрос.Параметры.ПодразделениеОтправитель);
	ЗапросАналитики.УстановитьПараметр("ПодразделениеПолучатель", Запрос.Параметры.ПодразделениеПолучатель);
	ЗапросАналитики.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоНазначениям",
		Запрос.Параметры.УчитыватьСебестоимостьТоваровПоНазначениям);
	
	Выборка = ЗапросАналитики.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВтТаблицаСерииТоваровОтправитель(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтТаблицаСерииТоваровОтправитель";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                                 КАК Характеристика,
	|	АналитикаОтправителя.КлючАналитики                           КАК АналитикаУчетаНоменклатурыОтправитель,
	|	АналитикаОтправителяБезНазначения.КлючАналитики              КАК АналитикаУчетаНоменклатурыОтправительБезНазначения,
	|	АналитикаПолучателя.КлючАналитики                            КАК АналитикаУчетаНоменклатурыПолучатель,
	|	АналитикаПолучателяБезНазначения.КлючАналитики               КАК АналитикаУчетаНоменклатурыПолучательБезНазначения,
	|	ТаблицаТовары.Назначение                                     КАК Назначение,
	|	ТаблицаТовары.Количество                                     КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерийОтправитель                 КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                        КАК Серия,
	|	ТаблицаТовары.НомерСтроки,
	|	0 КАК Порядок
	|ПОМЕСТИТЬ ВтТаблицаСерииТоваровОтправитель
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаТовары
	// Аналитика учета номенклатуры подразделения - отправителя
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтправителя
	|	ПО (АналитикаОтправителя.Номенклатура = ТаблицаТовары.Номенклатура)
	|		И (АналитикаОтправителя.Характеристика = ТаблицаТовары.Характеристика)
	|		И (АналитикаОтправителя.Назначение = ТаблицаТовары.НазначениеОтправителя)
	|		И (АналитикаОтправителя.МестоХранения = &ПодразделениеОтправитель)
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаОтправителя.СтатьяКалькуляции
	|		И (ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаОтправителя.Серия
	|			ИНАЧЕ АналитикаОтправителя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтправителяБезНазначения
	|	ПО (АналитикаОтправителяБезНазначения.Номенклатура = ТаблицаТовары.Номенклатура)
	|		И (АналитикаОтправителяБезНазначения.Характеристика = ТаблицаТовары.Характеристика)
	|		И (АналитикаОтправителяБезНазначения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|		И (АналитикаОтправителяБезНазначения.МестоХранения = &ПодразделениеОтправитель)
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаОтправителяБезНазначения.СтатьяКалькуляции
	|		И (ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаОтправителяБезНазначения.Серия
	|			ИНАЧЕ АналитикаОтправителяБезНазначения.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	// Аналитика учета номенклатуры подразделения - получателя
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателя
	|	ПО (АналитикаПолучателя.Номенклатура = ТаблицаТовары.Номенклатура)
	|		И (АналитикаПолучателя.Характеристика = ТаблицаТовары.Характеристика)
	|		И (АналитикаПолучателя.Назначение = ТаблицаТовары.Назначение)
	|		И (АналитикаПолучателя.МестоХранения = &ПодразделениеПолучатель)
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаПолучателя.СтатьяКалькуляции
	|		И (ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаПолучателя.Серия
	|			ИНАЧЕ АналитикаПолучателя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателяБезНазначения
	|	ПО (АналитикаПолучателяБезНазначения.Номенклатура = ТаблицаТовары.Номенклатура)
	|		И (АналитикаПолучателяБезНазначения.Характеристика = ТаблицаТовары.Характеристика)
	|		И (АналитикаПолучателяБезНазначения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|		И (АналитикаПолучателяБезНазначения.МестоХранения = &ПодразделениеПолучатель)
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаПолучателяБезНазначения.СтатьяКалькуляции
	|		И (ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаПолучателяБезНазначения.Серия
	|			ИНАЧЕ АналитикаПолучателяБезНазначения.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерийОтправитель В (4, 6, 8, 10)
	|			ИЛИ ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	АналитикаОтправителя.КлючАналитики                           КАК АналитикаУчетаНоменклатурыОтправитель,
	|	АналитикаОтправителяБезНазначения.КлючАналитики              КАК АналитикаУчетаНоменклатурыОтправительБезНазначения,
	|	АналитикаПолучателя.КлючАналитики                            КАК АналитикаУчетаНоменклатурыПолучатель,
	|	АналитикаПолучателяБезНазначения.КлючАналитики               КАК АналитикаУчетаНоменклатурыПолучательБезНазначения,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийОтправитель),
	|	ТаблицаСерии.Серия,
	|	МИНИМУМ(ТаблицаСерии.НомерСтроки),
	|	1
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.Серии КАК ТаблицаСерии
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаТовары
	|	ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|		И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|		И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|		И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	// Аналитика учета номенклатуры подразделения - отправителя
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтправителя
	|	ПО (АналитикаОтправителя.Номенклатура = ТаблицаТовары.Номенклатура)
	|		И (АналитикаОтправителя.Характеристика = ТаблицаТовары.Характеристика)
	|		И (АналитикаОтправителя.Назначение = ТаблицаТовары.НазначениеОтправителя)
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаОтправителя.СтатьяКалькуляции
	|		И (АналитикаОтправителя.МестоХранения = &ПодразделениеОтправитель)
	|		И (ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаОтправителя.Серия
	|			ИНАЧЕ АналитикаОтправителя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтправителяБезНазначения
	|	ПО (АналитикаОтправителяБезНазначения.Номенклатура = ТаблицаТовары.Номенклатура)
	|		И (АналитикаОтправителяБезНазначения.Характеристика = ТаблицаТовары.Характеристика)
	|		И (АналитикаОтправителяБезНазначения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаОтправителяБезНазначения.СтатьяКалькуляции
	|		И (АналитикаОтправителяБезНазначения.МестоХранения = &ПодразделениеОтправитель)
	|		И (ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаОтправителяБезНазначения.Серия
	|			ИНАЧЕ АналитикаОтправителяБезНазначения.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	// Аналитика учета номенклатуры подразделения - получателя
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателя
	|	ПО (АналитикаПолучателя.Номенклатура = ТаблицаТовары.Номенклатура)
	|		И (АналитикаПолучателя.Характеристика = ТаблицаТовары.Характеристика)
	|		И (АналитикаПолучателя.Назначение = ТаблицаТовары.Назначение)
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаПолучателя.СтатьяКалькуляции
	|		И (АналитикаПолучателя.МестоХранения = &ПодразделениеПолучатель)
	|		И (ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаПолучателя.Серия
	|			ИНАЧЕ АналитикаПолучателя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателяБезНазначения
	|	ПО (АналитикаПолучателяБезНазначения.Номенклатура = ТаблицаТовары.Номенклатура)
	|		И (АналитикаПолучателяБезНазначения.Характеристика = ТаблицаТовары.Характеристика)
	|		И (АналитикаПолучателяБезНазначения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаПолучателяБезНазначения.СтатьяКалькуляции
	|		И (АналитикаПолучателяБезНазначения.МестоХранения = &ПодразделениеПолучатель)
	|		И (ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаПолучателяБезНазначения.Серия
	|			ИНАЧЕ АналитикаПолучателяБезНазначения.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	АналитикаОтправителя.КлючАналитики,
	|	АналитикаОтправителяБезНазначения.КлючАналитики,
	|	АналитикаПолучателя.КлючАналитики,
	|	АналитикаПолучателяБезНазначения.КлючАналитики,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийОтправитель) В (4, 6, 8, 10)";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтТаблицаСерииТоваровПолучатель(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтТаблицаСерииТоваровПолучатель";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	АналитикаПолучателя.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучатель,
	|	АналитикаПолучателяБезНазначения.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучательБезНазначения,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия
	|ПОМЕСТИТЬ ВтТаблицаСерииТоваровПолучатель
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателя
	|	ПО (АналитикаПолучателя.Номенклатура = ТаблицаТовары.Номенклатура)
	|		И (АналитикаПолучателя.Характеристика = ТаблицаТовары.Характеристика)
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаПолучателя.СтатьяКалькуляции
	|		И (АналитикаПолучателя.Назначение = ТаблицаТовары.Назначение)
	|		И (АналитикаПолучателя.МестоХранения = &ПодразделениеПолучатель)
	|		И (ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14
	|			ТОГДА ТаблицаТовары.Серия = АналитикаПолучателя.Серия
	|			ИНАЧЕ АналитикаПолучателя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателяБезНазначения
	|	ПО (АналитикаПолучателяБезНазначения.Номенклатура = ТаблицаТовары.Номенклатура)
	|		И (АналитикаПолучателяБезНазначения.Характеристика = ТаблицаТовары.Характеристика)
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаПолучателяБезНазначения.СтатьяКалькуляции
	|		И (АналитикаПолучателяБезНазначения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|		И (АналитикаПолучателяБезНазначения.МестоХранения = &ПодразделениеПолучатель)
	|		И (ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаПолучателяБезНазначения.Серия
	|			ИНАЧЕ АналитикаПолучателяБезНазначения.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерийПолучатель В (4, 6, 8, 10)
	|			ИЛИ ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	АналитикаПолучателя.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучатель,
	|	АналитикаПолучателяБезНазначения.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучательБезНазначения,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийПолучатель),
	|	ТаблицаСерии.Серия
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.Серии КАК ТаблицаСерии
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаТовары
	|	ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|		И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|		И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|		И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателя
	|	ПО (АналитикаПолучателя.Номенклатура = ТаблицаТовары.Номенклатура)
	|		И (АналитикаПолучателя.Характеристика = ТаблицаТовары.Характеристика)
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаПолучателя.СтатьяКалькуляции
	|		И (АналитикаПолучателя.Назначение = ТаблицаТовары.Назначение)
	|		И (АналитикаПолучателя.МестоХранения = &ПодразделениеПолучатель)
	|		И (ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаПолучателя.Серия
	|			ИНАЧЕ АналитикаПолучателя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателяБезНазначения
	|	ПО (АналитикаПолучателяБезНазначения.Номенклатура = ТаблицаТовары.Номенклатура)
	|		И (АналитикаПолучателяБезНазначения.Характеристика = ТаблицаТовары.Характеристика)
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаПолучателяБезНазначения.СтатьяКалькуляции
	|		И (АналитикаПолучателяБезНазначения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|		И (АналитикаПолучателяБезНазначения.МестоХранения = &ПодразделениеПолучатель)
	|		И (ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаПолучателяБезНазначения.Серия
	|			ИНАЧЕ АналитикаПолучателяБезНазначения.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	АналитикаПолучателя.КлючАналитики,
	|	АналитикаПолучателяБезНазначения.КлючАналитики,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийПолучатель) В (4, 6, 8, 10)";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтПеремещения(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВТПеремещения";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаМатериалыИРаботы.НомерСтроки КАК НомерСтроки,
	|	АналитикаОтправителя.КлючАналитики КАК АналитикаУчетаНоменклатурыОтправитель,
	|	АналитикаПолучателя.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучатель,
	|	ТаблицаМатериалыИРаботы.Количество КАК Количество
	|ПОМЕСТИТЬ ВТПеремещения
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаМатериалыИРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтправителя
	|		ПО (АналитикаОтправителя.Номенклатура = ТаблицаМатериалыИРаботы.Номенклатура)
	|			И (АналитикаОтправителя.Характеристика = ТаблицаМатериалыИРаботы.Характеристика)
	|			И (АналитикаОтправителя.Назначение = ТаблицаМатериалыИРаботы.НазначениеОтправителя)
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаОтправителя.СтатьяКалькуляции
	|			И (АналитикаОтправителя.МестоХранения = &ПодразделениеОтправитель)
	|			И ВЫБОР
	|				КОГДА ТаблицаМатериалыИРаботы.СтатусУказанияСерийОтправитель = 14
	|				ТОГДА ТаблицаМатериалыИРаботы.Серия = АналитикаОтправителя.Серия
	|				ИНАЧЕ АналитикаОтправителя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			   КОНЕЦ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателя
	|		ПО (АналитикаПолучателя.Номенклатура = ТаблицаМатериалыИРаботы.Номенклатура)
	|			И (АналитикаПолучателя.Характеристика = ТаблицаМатериалыИРаботы.Характеристика)
	|			И (АналитикаПолучателя.Назначение = ТаблицаМатериалыИРаботы.Назначение)
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаПолучателя.СтатьяКалькуляции
	|			И (АналитикаПолучателя.МестоХранения = &ПодразделениеПолучатель)
	|			И ВЫБОР
	|				КОГДА ТаблицаМатериалыИРаботы.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаМатериалыИРаботы.Серия = АналитикаПолучателя.Серия
	|				ИНАЧЕ АналитикаПолучателя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			   КОНЕЦ
	|ГДЕ
	|	ТаблицаМатериалыИРаботы.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваровОтправитель", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваровОтправитель(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваровПолучатель", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваровПолучатель(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаМатериалыИРаботы.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Организация КАК Организация,
	|	&ПодразделениеОтправитель КАК Подразделение,
	|	ТаблицаМатериалыИРаботы.Номенклатура,
	|	ТаблицаМатериалыИРаботы.Характеристика,
	|	ТаблицаМатериалыИРаботы.Серия,
	|	ТаблицаМатериалыИРаботы.АналитикаУчетаНоменклатурыОтправитель КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаМатериалыИРаботы.Количество КАК Количество,
	|	&ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	ТаблицаМатериалыИРаботы.Назначение КАК Назначение
	|ИЗ
	|	ВтТаблицаСерииТоваровОтправитель КАК ТаблицаМатериалыИРаботы
	|ГДЕ
	|	&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенияМатериаловВПроизводстве.Отгружено),
	|				ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенияМатериаловВПроизводстве.Принято))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаМатериалыИРаботы.НомерСтроки,
	|	&Период,
	|	&Период,
	|	&Организация,
	|	&ПодразделениеПолучатель КАК Подразделение,
	|	ТаблицаМатериалыИРаботы.Номенклатура,
	|	ТаблицаМатериалыИРаботы.Характеристика,
	|	ТаблицаМатериалыИРаботы.Серия,
	|	ТаблицаМатериалыИРаботы.АналитикаУчетаНоменклатурыПолучатель,
	|	ТаблицаМатериалыИРаботы.Количество,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаМатериалыИРаботы.Назначение КАК Назначение
	|ИЗ
	|	ВтТаблицаСерииТоваровПолучатель КАК ТаблицаМатериалыИРаботы
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенияМатериаловВПроизводстве.Принято)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПартииПроизводственныхЗатрат";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВТПеремещения", ТекстыЗапроса) Тогда
		ТекстЗапросаВТПеремещения(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Таб.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	Таб.АналитикаУчетаНоменклатурыПолучатель КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка КАК ДокументПоступления,
	|	Таб.Количество КАК Количество
	|ИЗ
	|	ВТПеремещения КАК Таб
	|ГДЕ
	|	НЕ &ПартионныйУчетВерсии22
	|
	|УПОРЯДОЧИТЬ ПО
	|	Таб.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаСерии.НазначениеОтправителя <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаСерии.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам
	|						ТОГДА ТаблицаСерии.НазначениеОтправителя
	|				КОНЕЦ
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&ПодразделениеОтправитель КАК Отправитель,
	|	&ПодразделениеПолучатель КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаПоПеремещениюВПроизводстве) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	ИСТИНА КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаСерии.НазначениеОтправителя <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаСерии.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам
	|						ТОГДА ТаблицаСерии.НазначениеОтправителя
	|				КОНЕЦ
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&ПодразделениеОтправитель КАК Отправитель,
	|	&ПодразделениеПолучатель КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаПоПеремещениюВПроизводстве) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	ИСТИНА КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт

	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваровОтправитель", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваровОтправитель(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваровПолучатель", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваровПолучатель(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаМатериалыИРаботы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	(ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ТаблицаМатериалыИРаботы.АналитикаУчетаНоменклатурыОтправитель
	|		ИНАЧЕ ТаблицаМатериалыИРаботы.АналитикаУчетаНоменклатурыОтправительБезНазначения КОНЕЦ) КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)	КАК РазделУчета,
	|	&Организация КАК Организация,
	|	ТаблицаМатериалыИРаботы.Количество КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)	КАК КорРазделУчета,
	|	(ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ТаблицаМатериалыИРаботы.АналитикаУчетаНоменклатурыПолучатель
	|		ИНАЧЕ ТаблицаМатериалыИРаботы.АналитикаУчетаНоменклатурыПолучательБезНазначения КОНЕЦ) КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	ЕСТЬNULL(ТаблицаМатериалыИРаботы.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПотреблениеПроизводство) КАК ТипЗаписи
	|ИЗ
	|	ВтТаблицаСерииТоваровОтправитель КАК ТаблицаМатериалыИРаботы
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаМатериалыИРаботы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	(ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ТаблицаМатериалыИРаботы.АналитикаУчетаНоменклатурыПолучатель
	|		ИНАЧЕ ТаблицаМатериалыИРаботы.АналитикаУчетаНоменклатурыПолучательБезНазначения КОНЕЦ) КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)	КАК РазделУчета,
	|	&Организация КАК Организация,
	|	ТаблицаМатериалыИРаботы.Количество КАК Количество,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ТаблицаМатериалыИРаботы.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) КАК ТипЗаписи
	|ИЗ
	|	ВтТаблицаСерииТоваровПолучатель КАК ТаблицаМатериалыИРаботы
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Процедура ОтразитьРаспределениеЗапасовДвижения(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка                          КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата                     КАК Период,
		|	ТабЧасть.Номенклатура                    КАК Номенклатура,
		|	ТабЧасть.Характеристика                  КАК Характеристика,
		|	ТабЧасть.Ссылка.ПодразделениеОтправитель КАК Склад,
		|	ТабЧасть.Назначение                      КАК Назначение,
		|	ТабЧасть.Количество                      КАК Количество,
		|	НЕОПРЕДЕЛЕНО                             КАК ЗапланированныйРасходРаспределенногоЗапаса,
		|	ЛОЖЬ                                     КАК КонтрольСвободногоОстатка
		|ИЗ
		|	Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	РаспределениеЗапасовДвижения.РасходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка                         КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата                    КАК Период,
		|	ТабЧасть.Номенклатура                   КАК Номенклатура,
		|	ТабЧасть.Характеристика                 КАК Характеристика,
		|	ТабЧасть.Ссылка.ПодразделениеПолучатель КАК Склад,
		|	ТабЧасть.Назначение                     КАК Назначение,
		|	ТабЧасть.Количество                     КАК Количество,
		|	ЛОЖЬ                                    КАК ПоГрафику,
		|	НЕОПРЕДЕЛЕНО                            КАК РаспоряжениеВГрафике
		|ИЗ
		|	Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	РаспределениеЗапасовДвижения.ПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	&ХозОперацияДляРеестра КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Партнер,
	|	НЕОПРЕДЕЛЕНО КАК МестоХранения,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	&ПодразделениеОтправитель КАК Подразделение,
	|	&Период КАК ДатаДокументаИБ,
	|	&Ссылка КАК Ссылка,
	|	&Номер КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО КАК Статус,
	|	&Ответственный КАК Ответственный,
	|	&Автор КАК Автор,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	&Дополнительно КАК Дополнительно,
	|	&Комментарий КАК Комментарий,
	|	&Проведен КАК Проведен,
	|	&ПометкаУдаления КАК ПометкаУдаления,
	|	&Период КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать КАК НомерПервичногоДокумента,
	|	0 КАК Сумма,
	|	НЕОПРЕДЕЛЕНО КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ЛОЖЬ КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК ИсправляемыйДокумент,
	|	&Период КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область ПартионныйУчет

Функция ОписаниеРегистровУчетаЗатратИСебестоимости(Документ) Экспорт
	
	ОписаниеРегистров = Новый Массив;
	ОписаниеРегистров.Добавить(Метаданные.РегистрыНакопления.СебестоимостьТоваров);
	
	Возврат ОписаниеРегистров;
	
КонецФункции

Функция УстановитьДополнительныеПараметрыОперацийУчетаЗатратИСебестоимости(Документ, Запрос = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Массив;
	
	Если Запрос <> Неопределено Тогда
		// Нет дополнительных параметров.
	КонецЕсли;
	
	Возврат ДополнительныеПараметры;
	
КонецФункции

Функция СформироватьДополнительныеТаблицыОперацийУчетаЗатратИСебестоимости(Документ, Запрос = Неопределено, ТекстыЗапроса = Неопределено) Экспорт
	
	ДополнительныеТаблицы = Новый Массив;
	ДополнительныеТаблицы.Добавить("ВтТаблицаСерииТоваровОтправитель");
	ДополнительныеТаблицы.Добавить("ВтТаблицаСерииТоваровПолучатель");
	
	Если Запрос <> Неопределено Тогда
	
		Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса(ДополнительныеТаблицы[0], ТекстыЗапроса) Тогда
			ТекстЗапросаВтТаблицаСерииТоваровОтправитель(Запрос, ТекстыЗапроса);
		КонецЕсли;
		
		Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса(ДополнительныеТаблицы[1], ТекстыЗапроса) Тогда
			ТекстЗапросаВтТаблицаСерииТоваровПолучатель(Запрос, ТекстыЗапроса);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДополнительныеТаблицы;
	
КонецФункции

Функция ОписаниеОперацийУчетаСебестоимости(Документ) Экспорт
	
	ОписаниеОпераций = Новый Массив;
	
	Возврат ОписаниеОпераций;
	
	#Область Перемещение_Товар
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	// Описание документа
	|	ТаблицаДокумента.Дата 	КАК Период,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО 			КАК КорректируемыйДокумент,
	|
	// Поля учета номенклатуры
	|	ТаблицаДокумента.Организация 					 	КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры      	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов			 		 	КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС 			 	КАК ВидДеятельностиНДС,
	|	ТаблицаВидыЗапасов.НалогообложениеНДС			 	КАК ВидДеятельностиНДСДокумента,
	|
	// Корреспондирующие поля
	|	НЕОПРЕДЕЛЕНО                                        КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО 									   	КАК КорПартия,
	|	ТаблицаВидыЗапасов.АналитикаПереданнойНоменклатуры	КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК КорВидЗапасов,
	|
	// Поля аналитики финансового учета
	|	ТаблицаДокумента.Сделка					КАК Сделка,
	|	ТаблицаДокумента.Подразделение			КАК Подразделение,
	|	ТаблицаДокумента.Менеджер				КАК Менеджер,
	|	НЕОПРЕДЕЛЕНО 							КАК ГруппаПродукции,
	|
	// Количественные и суммовые показатели
	|	ТаблицаВидыЗапасов.Количество 			КАК Количество,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки	КАК ИдентификаторСтроки,
	|
	// Прочие поля
	|	ТаблицаДокумента.ХозяйственнаяОперация  КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки 	КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации			КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ПО ИСТИНА
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|	И НЕ ТаблицаВидыЗапасов.ВозвратнаяТара
	|	И ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|";
	
	РасчетСебестоимостиПроведениеДокументов.ДобавитьОписаниеОперацииДляОтраженияВУчетеСебестоимости(
		ОписаниеОпераций,
		Перечисления.ОперацииУчетаСебестоимости.Перемещение,
		ТекстЗапроса);
		
	#КонецОбласти
	
	Возврат ОписаниеОпераций;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ПроведениеПоРеглУчету

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
		
	// (Дт 20, 23 :: Кт 20, 23)
	ТекстПеремещениеМатериалов = "
	|ВЫБРАТЬ //// Перемещение материалов в производстве (Дт 20, 23 :: Кт 20, 23)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА Строки.ГруппаПродукции
	|		ИНАЧЕ Строки.СтатьяРасходов
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Операция.ПодразделениеПолучатель КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.ПодразделениеПолучатель КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА Строки.ГруппаПродукции
	|		ИНАЧЕ Строки.СтатьяРасходов
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР 
	|		КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) 
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|
	|	Строки.ГруппаПродукции КАК АналитикаУчетаКт,
	|	Операция.ПодразделениеОтправитель КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.ПодразделениеОтправитель КАК ПодразделениеКт,
	|	ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Строки.ГруппаПродукции КАК СубконтоКт2,
	|	ВЫБОР 
	|		КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) 
	|	КОНЕЦ КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Перемещение материалов в производстве"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеМатериаловВПроизводстве КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|";
	
	Возврат ТекстПеремещениеМатериалов;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
//-- Устарело_Производство21
