#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("ОсновныеСредства");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");

	ВводОстатковИнвестицииВАрендуЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура:
//     * Ключ - Строка - Имя таблицы.
//     * Значение - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.ВводОстатковИнвестицииВАренду") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда

		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДопПараметры);
		
		ТекстЗапросаТаблицаГрафикОплатУслугПоДоходнойАренде(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаГрафикНачисленияУслугПоДоходнойАренде(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаГрафикНачисленияПроцентовПоДоходнойАренде(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаИнвестицииВАренду(ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры);
	
		//++ НЕ УТКА
		ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Регистры);
		//-- НЕ УТКА
	
		ВводОстатковИнвестицииВАрендуЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	
	КонецЕсли;
	
	ТаблицыДвижений = ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
	Возврат ТаблицыДвижений;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеПоДаннымОперативногоУчета

// Возвращает таблицу значения для заполнения документа ввода остатков данными, полученными по данным оперативного учета.
// 
// Параметры:
// 	Дата - Дата - Дата, на которую формируются остатки.
// 	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция, для которой выбираются остатки
// 	Организации - Массив - Массив, содержащий элементы типа СправочникСсылка.Организации, для которых выбираются остатки.
// 	ДополнительныйОтбор - Структура - Структура, содержащая ключ и значение дополнительного отбора.
// 	ПараметрыЗаполненияОстатков - Структура - Структура, содержащая дополнительные параметры необходимые, для заполнения остатков.
// Возвращаемое значение:
// 	ТаблицаЗначений, Неопределено - Если для данной хозяйственной операции есть данные, для нее возвращается таблица значений с значениями заполнения.
//
Функция ОстаткиПоТипуОперации(Дата, ХозяйственнаяОперация, Организации, ДополнительныйОтбор = Неопределено, ПараметрыЗаполненияОстатков = Неопределено) Экспорт

	Возврат Неопределено;
			
КонецФункции

// Возвращает массив в котором содержатся имена полей при изменении которых, необходимо генерировать новый документ ввода остатков.
// 
// Параметры:
// 	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция, для которой определяются ключевые поля.
// Возвращаемое значение:
// 	Массив - Массив содержащий имена полей.
//
Функция КлючевыеПоляРеглУчетаПоТипуОперации(ХозяйственнаяОперация) Экспорт
	
	КлючевыеРеквизиты = Новый Массив;
	КлючевыеРеквизиты.Добавить("Организация");
	
	Возврат КлючевыеРеквизиты;
		
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ВводОстатковИнвестицииВАренду";
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	
	ВЗапросеЕстьИсточник = Истина;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	ИначеЕсли ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов"
		ИЛИ ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДопПараметры)
	
	ПроведениеДокументов.ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДопПараметры);

	СформироватьТаблицуВтСписокДокументов(Запрос);
	ПолучитьДанныеДокумента(Запрос);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период  КАК Период,
	|	ДанныеДокумента.Номер   КАК Номер
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 

	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура СформироватьТаблицуВтСписокДокументов(Запрос)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокДокументов.Ссылка КАК Ссылка,
	|	СписокДокументов.Организация КАК Организация,
	|	СписокДокументов.Дата КАК Период
	|ПОМЕСТИТЬ ВтСписокДокументов
	|ИЗ
	|	Документ.ВводОстатковИнвестицииВАренду КАК СписокДокументов
	|ГДЕ
	|	СписокДокументов.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьДанныеДокумента(Запрос)
	
	СписокЗапросов = Новый Массив;
	
	#Область ДанныеДокументаРеквизиты
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Арендатор КАК Арендатор,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.Договор.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковИнвестицииВАренду) КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ ДанныеДокументаРеквизиты
	|ИЗ
	|	Документ.ВводОстатковИнвестицииВАренду КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В
	|			(ВЫБРАТЬ
	|				ВтСписокДокументов.Ссылка
	|			ИЗ
	|				ВтСписокДокументов КАК ВтСписокДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ДанныеДокументаТаблицаОС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.ОсновноеСредство КАК ОбъектУчета,
	|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаДокумента.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ТаблицаДокумента.АрендныеПлатежи КАК АрендныеПлатежи,
	|	ТаблицаДокумента.НГЛСРегл КАК НГЛСРегл,
	|	ТаблицаДокумента.НГЛСУпр КАК НГЛСУпр
	|ПОМЕСТИТЬ ДанныеДокументаТаблицаОС
	|ИЗ
	|	Документ.ВводОстатковИнвестицииВАренду.ОС КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В
	|			(ВЫБРАТЬ
	|				ВтСписокДокументов.Ссылка
	|			ИЗ
	|				ВтСписокДокументов КАК ВтСписокДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ДанныеДокументаТаблицаГрафикОплатУслуг
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка					КАК Ссылка,
	|	ТаблицаДокумента.Дата					КАК Дата,
	|	ТаблицаДокумента.ОсновноеСредство		КАК ОсновноеСредство,
	|	ТаблицаДокумента.УслугаПоАренде			КАК УслугаПоАренде,
	|	ТаблицаДокумента.УслугаПоАрендеНДС		КАК УслугаПоАрендеНДС
	|
	|ПОМЕСТИТЬ ДанныеДокументаТаблицаГрафикОплатУслуг
	|
	|ИЗ
	|	Документ.ВводОстатковИнвестицииВАренду.ГрафикОплатУслуг КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (
	|		ВЫБРАТЬ
	|			ВтСписокДокументов.Ссылка
	|		ИЗ
	|			ВтСписокДокументов КАК ВтСписокДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ДанныеДокументаТаблицаГрафикНачисленияУслуг
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка					КАК Ссылка,
	|	ТаблицаДокумента.Дата					КАК Дата,
	|	ТаблицаДокумента.ОсновноеСредство		КАК ОсновноеСредство,
	|	ТаблицаДокумента.УслугаПоАренде			КАК УслугаПоАренде,
	|	ТаблицаДокумента.УслугаПоАрендеНДС		КАК УслугаПоАрендеНДС
	|
	|ПОМЕСТИТЬ ДанныеДокументаТаблицаГрафикНачисленияУслуг
	|
	|ИЗ
	|	Документ.ВводОстатковИнвестицииВАренду.ГрафикНачисленияУслуг КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (
	|		ВЫБРАТЬ
	|			ВтСписокДокументов.Ссылка
	|		ИЗ
	|			ВтСписокДокументов КАК ВтСписокДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ДанныеДокументаТаблицаГрафикНачисленияПроцентов
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка					КАК Ссылка,
	|	ТаблицаДокумента.Дата					КАК Дата,
	|	ТаблицаДокумента.ОсновноеСредство		КАК ОсновноеСредство,
	|	ТаблицаДокумента.Проценты				КАК Проценты
	|
	|ПОМЕСТИТЬ ДанныеДокументаТаблицаГрафикНачисленияПроцентов
	|
	|ИЗ
	|	Документ.ВводОстатковИнвестицииВАренду.ГрафикНачисленияПроцентов КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (
	|		ВЫБРАТЬ
	|			ВтСписокДокументов.Ссылка
	|		ИЗ
	|			ВтСписокДокументов КАК ВтСписокДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	Запрос.Текст = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ВводОстатковИнвестицииВАренду"));
	ЗначенияПараметровПроведения.Вставить("НазваниеДокумента", НСтр("ru = 'Изменение условий передачи в аренду';
																	|en = 'Change rental terms'"));
	
	ЗначенияПараметровПроведения.Вставить("ИспользоватьУчетПрочихДоходовРасходов",ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	ЗначенияПараметровПроведения.Вставить("ИспользоватьУчетПрочихАктивовПассивов",ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов"));
	ЗначенияПараметровПроведения.Вставить("ИспользоватьУчетПрослеживаемыхИмпортныхТоваров",ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрослеживаемыхИмпортныхТоваров"));
	ЗначенияПараметровПроведения.Вставить("ВедетсяРегламентированныйУчетВНА", ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА());
	ЗначенияПараметровПроведения.Вставить("ИдентификаторНеиспользуемойФинЗаписи", ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());
	ЗначенияПараметровПроведения.Вставить("СтатьяАП_ОС", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства);
	ЗначенияПараметровПроведения.Вставить("ИдентификаторНеиспользуемойФинЗаписи", ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());

	ЗначенияПараметровПроведения.Вставить("ВалютаУпр", ЗначениеНастроекПовтИсп.ВалютаУправленческогоУчета());

	ЗначенияПараметровПроведения.Вставить("ХО_ВводОстатковИнвестицииВАренду",
		Перечисления.ХозяйственныеОперации.ВводОстатковИнвестицииВАренду);
	ЗначенияПараметровПроведения.Вставить("НастройкаХО_ВводОстатковИнвестицииВАренду",
		Справочники.НастройкиХозяйственныхОпераций.ВводОстатковИнвестицииВАренду);
		
	ЗначенияПараметровПроведения.Вставить("НастройкаХО_ВыделениеНГЛС", Справочники.НастройкиХозяйственныхОпераций.ВыделениеНГЛС);
	ЗначенияПараметровПроведения.Вставить("НастройкаХО_НачислениеПроцентовПоДоходнойАренде",
		Справочники.НастройкиХозяйственныхОпераций.НачислениеПроцентовПоДоходнойАренде);

	ЗначенияПараметровПроведения.Вставить("ХО_ПереоценкаФИ", Перечисления.ХозяйственныеОперации.ПереоценкаФинансовыхИнструментов);
	ЗначенияПараметровПроведения.Вставить("НастройкаХО_ПереоценкаФИ", Справочники.НастройкиХозяйственныхОпераций.ПереоценкаФинансовыхИнструментов);
	
	Если Реквизиты <> Неопределено Тогда
		
		ЗначенияПараметровПроведения.Вставить("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
		
	КонецЕсли; 
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

#Область ТекстыЗапросаДляПроведения

Функция ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоОС";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	ДанныеДокумента.Дата             КАК Дата,
	|	ДанныеДокумента.Ссылка           КАК Ссылка,
	|	ДанныеДокумента.Организация      КАК Организация,
	|	ДанныеДокумента.Проведен         КАК Проведен,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковИнвестицииВАренду) КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных         КАК ТипСсылки,
	|	ТаблицаОС.ОсновноеСредство       КАК ОсновноеСредство,
	|	ЛОЖЬ                             КАК ДополнительнаяЗапись
	|
	|ИЗ
	|	Документ.ВводОстатковИнвестицииВАренду КАК ДанныеДокумента
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковИнвестицииВАренду.ОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК ДатаДокументаИБ,
	|	ДанныеДокумента.Номер КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Арендатор КАК Контрагент,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковИнвестицииВАренду) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	ДанныеДокумента.Дата КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать КАК НомерПервичногоДокумента,
	|	ЛОЖЬ КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК ИсправляемыйДокумент,
	|	ДанныеДокумента.Дата   КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет
	|
	|ИЗ
	|	Документ.ВводОстатковИнвестицииВАренду КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаГрафикОплатУслугПоДоходнойАренде(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикОплатУслугПоДоходнойАренде";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период				КАК ДатаИзменения,
	|	ДанныеДокумента.Договор				КАК Договор,
	|	ДанныеДокумента.Ссылка				КАК АктуальныеУсловияДоговора,
	|	ТаблицаГрафика.Дата					КАК Дата,
	|	ТаблицаГрафика.ОсновноеСредство		КАК ОсновноеСредство,
	|	ТаблицаГрафика.УслугаПоАренде		КАК УслугаПоАренде,
	|	ТаблицаГрафика.УслугаПоАрендеНДС	КАК УслугаПоАрендеНДС
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаГрафикОплатУслуг КАК ТаблицаГрафика
	|		ПО ДанныеДокумента.Ссылка = ТаблицаГрафика.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаГрафикНачисленияУслугПоДоходнойАренде(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикНачисленияУслугПоДоходнойАренде";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период				КАК ДатаИзменения,
	|	ДанныеДокумента.Договор				КАК Договор,
	|	ДанныеДокумента.Ссылка				КАК АктуальныеУсловияДоговора,
	|	ТаблицаГрафика.Дата					КАК Дата,
	|	ТаблицаГрафика.ОсновноеСредство		КАК ОсновноеСредство,
	|	ТаблицаГрафика.УслугаПоАренде		КАК УслугаПоАренде,
	|	ТаблицаГрафика.УслугаПоАрендеНДС	КАК УслугаПоАрендеНДС
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаГрафикНачисленияУслуг КАК ТаблицаГрафика
	|		ПО ДанныеДокумента.Ссылка = ТаблицаГрафика.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаГрафикНачисленияПроцентовПоДоходнойАренде(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикНачисленияПроцентовПоДоходнойАренде";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период				КАК ДатаИзменения,
	|	ДанныеДокумента.Договор				КАК Договор,
	|	ДанныеДокумента.Ссылка				КАК АктуальныеУсловияДоговора,
	|	ТаблицаГрафика.Дата					КАК Дата,
	|	ТаблицаГрафика.ОсновноеСредство		КАК ОсновноеСредство,
	|	ТаблицаГрафика.Проценты				КАК Проценты
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаГрафикНачисленияПроцентов КАК ТаблицаГрафика
	|		ПО ДанныеДокумента.Ссылка = ТаблицаГрафика.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаИнвестицииВАренду(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ИнвестицииВАренду";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);
	ТекстЗапросаТаблицаВтПроцентыПоГрафику(ТекстыЗапроса);
	
	СписокЗапросовОбъединение = Новый Массив;
	
	#Область ОстатокПоСчетуУчетаСтоимостиИнвестиции // Дт <58.АП> - Кт <000>
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                          КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                                          КАК Регистратор,
	|	ДанныеДокумента.Период                                          КАК Период,
	|	ДанныеДокумента.Организация                                     КАК Организация,
	|	ДанныеДокумента.Договор                                         КАК Договор,
	|	ДанныеДокумента.ВалютаВзаиморасчетов                            КАК Валюта,
	|	ТаблицаОС.ОсновноеСредство                                      КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета                                КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.АрендныеПлатежи                                       КАК АрендныеПлатежи,
	|	ТаблицаОС.АрендныеПлатежиРегл                                   КАК АрендныеПлатежиРегл,
	|	ТаблицаОС.АрендныеПлатежиУпр                                    КАК АрендныеПлатежиУпр,
	|	0                                                               КАК НГЛСРегл,
	|	0                                                               КАК НГЛСУпр,
	|	0                                                               КАК ПроцентныйДисконт,
	|	0                                                               КАК ПроцентныйДисконтУпр,
	|	0                                                               КАК ПроцентныйДисконтРегл,
	|	&НастройкаХО_ВводОстатковИнвестицииВАренду                      КАК НастройкаХозяйственнойОперации,
	|	ТаблицаОС.ИдентификаторСтроки                                   КАК ИдентификаторФинЗаписи
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаОС КАК ТаблицаОС
	|	 ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОстатокПоНГЛС // Дт <58.НГЛС> - Кт <000>
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                          КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                                          КАК Регистратор,
	|	ДанныеДокумента.Период                                          КАК Период,
	|	ДанныеДокумента.Организация                                     КАК Организация,
	|	ДанныеДокумента.Договор                                         КАК Договор,
	|	ДанныеДокумента.ВалютаВзаиморасчетов                            КАК Валюта,
	|	ТаблицаОС.ОсновноеСредство                                      КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета                                КАК ГруппаФинансовогоУчета,
	|	0                                                               КАК АрендныеПлатежи,
	|	0                                                               КАК АрендныеПлатежиРегл,
	|	0                                                               КАК АрендныеПлатежиУпр,
	|	ТаблицаОС.НГЛСРегл                                              КАК НГЛСРегл,
	|	ТаблицаОС.НГЛСУпр                                               КАК НГЛСУпр,
	|	0                                                               КАК ПроцентныйДисконт,
	|	0                                                               КАК ПроцентныйДисконтУпр,
	|	0                                                               КАК ПроцентныйДисконтРегл,
	|	&НастройкаХО_ВыделениеНГЛС                                      КАК НастройкаХозяйственнойОперации,
	|	ТаблицаОС.ИдентификаторСтроки                                   КАК ИдентификаторФинЗаписи
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаОС КАК ТаблицаОС
	|	 ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОстатокПоПроцентам // Дт <000> - Кт <58.%>
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                          КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                                          КАК Регистратор,
	|	ДанныеДокумента.Период                                          КАК Период,
	|	ДанныеДокумента.Организация                                     КАК Организация,
	|	ДанныеДокумента.Договор                                         КАК Договор,
	|	ДанныеДокумента.ВалютаВзаиморасчетов                            КАК Валюта,
	|	ТаблицаОС.ОсновноеСредство                                      КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета                                КАК ГруппаФинансовогоУчета,
	|	0                                                               КАК АрендныеПлатежи,
	|	0                                                               КАК АрендныеПлатежиРегл,
	|	0                                                               КАК АрендныеПлатежиУпр,
	|	0                                                               КАК НГЛСРегл,
	|	0                                                               КАК НГЛСУпр,
	|	Проценты.Сумма                                                  КАК ПроцентныйДисконт,
	|	Проценты.Сумма * ЕСТЬNULL(Коэффициенты.КоэффициентПересчетаУпр, 0) КАК ПроцентныйДисконтУпр,
	|	Проценты.Сумма * ЕСТЬNULL(Коэффициенты.КоэффициентПересчетаРегл, 0) КАК ПроцентныйДисконтРегл,
	|	&НастройкаХО_НачислениеПроцентовПоДоходнойАренде                КАК НастройкаХозяйственнойОперации,
	|	ТаблицаОС.ИдентификаторСтроки                                   КАК ИдентификаторФинЗаписи
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПроцентыПоГрафику КАК Проценты
	|		ПО ТаблицаОС.ОсновноеСредство = Проценты.ОсновноеСредство
	|		И ДанныеДокумента.Ссылка = Проценты.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКоэффициентыПересчетаВалют КАК Коэффициенты
	|		ПО (Коэффициенты.Дата = ДанныеДокумента.Период)
	|			И (Коэффициенты.Организация = ДанныеДокумента.Организация)
	|			И (Коэффициенты.ВалютаВзаиморасчетов = ДанныеДокумента.ВалютаВзаиморасчетов)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеВременныхТаблицДляПроведения

Процедура ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса)
	
	ИмяТаблицы = "втТаблицаОС";

	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтКоэффициентыПересчетаВалют(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НГЛСРегл КАК НГЛСРегл,
	|	ТаблицаОС.НГЛСУпр КАК НГЛСУпр,
	|	ТаблицаОС.АрендныеПлатежи КАК АрендныеПлатежи,
	|	ВЫРАЗИТЬ(ТаблицаОС.АрендныеПлатежи * ЕСТЬNULL(Коэффициенты.КоэффициентПересчетаРегл, 0) КАК ЧИСЛО(31, 2)) КАК АрендныеПлатежиРегл,
	|	ВЫРАЗИТЬ(ТаблицаОС.АрендныеПлатежи * ЕСТЬNULL(Коэффициенты.КоэффициентПересчетаУпр, 0) КАК ЧИСЛО(31, 2)) КАК АрендныеПлатежиУпр,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ втТаблицаОС
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКоэффициентыПересчетаВалют КАК Коэффициенты
	|		ПО (Коэффициенты.Дата = ДанныеДокумента.Период)
	|			И (Коэффициенты.Организация = ДанныеДокумента.Организация)
	|			И (Коэффициенты.ВалютаВзаиморасчетов = ДанныеДокумента.ВалютаВзаиморасчетов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ИдентификаторСтроки,
	|	ОсновноеСредство";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);

КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтПроцентыПоГрафику(ТекстыЗапроса)
	
	ИмяТаблицы = "втПроцентыПоГрафику";

	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Период КАК Период,
	|	ГрафикНачисленияПроцентов.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ГрафикНачисленияПроцентов.Проценты) КАК Сумма
	|ПОМЕСТИТЬ втПроцентыПоГрафику
	|ИЗ
	|	ДанныеДокументаТаблицаГрафикНачисленияПроцентов КАК ГрафикНачисленияПроцентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ГрафикНачисленияПроцентов.Ссылка)
	|			И (ДанныеДокумента.Период <= ГрафикНачисленияПроцентов.Дата)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Период,
	|	ГрафикНачисленияПроцентов.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтКоэффициентыПересчетаВалют(ТекстыЗапроса)

	ИмяТаблицы = "втКоэффициентыПересчетаВалют";

	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.Период КАК Дата
	|ПОМЕСТИТЬ ТаблицаПериодов
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ВалютаВзаиморасчетов,
	|	Дата";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ТаблицаПериодов");
	
	ФинансовыеИнструменты.ТекстЗапросаВтКоэффициентыПересчетаВалют(ТекстыЗапроса, ИмяТаблицы, Истина);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПроведениеПоРеглУчету

Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат ВводОстатковИнвестицииВАрендуЛокализация.ТекстЗапросаВТОтраженияВРеглУчете();
	
КонецФункции

Функция ТекстОтраженияВРеглУчете() Экспорт
	
	Возврат ВводОстатковИнвестицииВАрендуЛокализация.ТекстОтраженияВРеглУчете();
	
КонецФункции

#КонецОбласти

#Область Печать

// Добавляет команды печати.
// 
// Параметры:
// 	КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли