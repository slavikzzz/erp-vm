#Область ОписаниеПеременных

&НаКлиенте
Перем КэшированныеЗначения;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗначенияРеквизитов") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ЗначенияРеквизитов);
	КонецЕсли;
	
	Параметры.Свойство("РеквизитыКорректировок", РеквизитыКорректировок);
	
	УправлениеЭлементамиФормы();
	
	Если ЗначениеЗаполнено(Дата) Тогда
		
		ДанныеДляПроверки = ДатыЗапретаИзменения.ШаблонДанныхДляПроверки();
		НоваяСтрока = ДанныеДляПроверки.Добавить();
		НоваяСтрока.Дата   = Дата;
		НоваяСтрока.Объект = Организация;
		НоваяСтрока.Раздел = "ФинансовыйКонтур";
		
		Если ДатыЗапретаИзменения.НайденЗапретИзмененияДанных(ДанныеДляПроверки) Тогда
			ЭтаФорма.ТолькоПросмотр = Истина;
			Элементы.Комментарий.ТолькоПросмотр = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыВыбораСтатейИАналитик = Документы.Бронирование.ПараметрыВыбораСтатейИАналитикВФормеВводаКорректировки(ТипОперации);
	ДоходыИРасходыСервер.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	//++ НЕ УТ
	ПараметрыНастройки = Документы.Бронирование.ПараметрыНастройкиСчетовУчетаВФормеВводаКорректировки(ТипОперации);
	НастройкаСчетовУчетаСервер.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыНастройки);
	//-- НЕ УТ
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если ТипОперации <> Перечисления.ТипыОперацийСБилетами.Возврат Или СуммаШтрафа = 0 Тогда
		НепроверяемыеРеквизиты.Добавить("СтатьяРасходов");
		НепроверяемыеРеквизиты.Добавить("АналитикаРасходов");
		НепроверяемыеРеквизиты.Добавить("АналитикаАктивовПассивов");
		НепроверяемыеРеквизиты.Добавить("Подразделение");
		НепроверяемыеРеквизиты.Добавить("НаправлениеДеятельности");
	КонецЕсли;
	
	Если ТипОперации = Перечисления.ТипыОперацийСБилетами.Возврат Тогда
		НепроверяемыеРеквизиты.Добавить("СтавкаНДС");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ПараметрыВыбораСтатейИАналитик = Документы.Бронирование.ПараметрыВыбораСтатейИАналитикВФормеВводаКорректировки(ТипОперации);
	ДоходыИРасходыСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, ПараметрыВыбораСтатейИАналитик);
	
	Если ЗначениеЗаполнено(Дата) Тогда
		
		ДанныеДляПроверки = ДатыЗапретаИзменения.ШаблонДанныхДляПроверки();
		НоваяСтрока = ДанныеДляПроверки.Добавить();
		НоваяСтрока.Дата   = Дата;
		НоваяСтрока.Объект = Организация;
		НоваяСтрока.Раздел = "ФинансовыйКонтур";
		
		ОписаниеДанных = Новый Структура;
		ОписаниеДанных.Вставить("НоваяВерсия", Ложь);
		ОписаниеДанных.Вставить("Данные", ТипОперации);
		
		СообщениеОбОшибке = "";
		Если ДатыЗапретаИзменения.НайденЗапретИзмененияДанных(ДанныеДляПроверки, ОписаниеДанных, СообщениеОбОшибке) Тогда
			ОбщегоНазначения.СообщитьПользователю(СообщениеОбОшибке, , , "Дата", Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	РассчитатьНДС();
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	РассчитатьНДС();
КонецПроцедуры

&НаКлиенте
Процедура СуммаНДСПриИзменении(Элемент)
	
	ЗначениеСтавкиНДС = УчетНДСУПКлиентСервер.ЗначениеСтавкиНДС(СтавкаНДС);
	
	Если ЗначениеСтавкиНДС <> 0 Тогда
		ОблагаемаяСумма = СуммаНДС / ЗначениеСтавкиНДС * 100;
		СуммаНеОблагаемаяНДС = Сумма - ОблагаемаяСумма - СуммаНДС;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаНеОблагаемаяНДСПриИзменении(Элемент)
	РассчитатьНДС();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьНДС()
	
	ТекущаяСтрока = Новый Структура;
	ТекущаяСтрока.Вставить("СтавкаНДС", СтавкаНДС);
	ТекущаяСтрока.Вставить("СуммаНДС", СуммаНДС);
	ТекущаяСтрока.Вставить("Сумма", Сумма - СуммаНеОблагаемаяНДС);
	
	ПараметрыПересчетаНДС = Новый Структура("ЦенаВключаетНДС", Истина);
	СтруктураДействий = Новый Структура("ПересчитатьСуммуНДС", ПараметрыПересчетаНДС);
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	СуммаНДС = ТекущаяСтрока.СуммаНДС;
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаШтрафаПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.АналитикаРасходовПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаАктивовПассивовПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.АналитикаАктивовПассивовПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеОтраженияВРеглУчетеНажатие(Элемент, СтандартнаяОбработка)
	
	//++ НЕ УТ
	НастройкаСчетовУчетаКлиент.ПриНажатии(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	//-- НЕ УТ
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ОчиститьСообщения();
	Если ПроверитьЗаполнение() Тогда
		Результат = Новый Структура(РеквизитыКорректировок);
		ЗаполнитьЗначенияСвойств(Результат, ЭтотОбъект);
		//++ НЕ УТ
		ЗаписатьНастройкиСчетовУчетаФормы();
		//-- НЕ УТ
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

//++ НЕ УТ

&НаСервере
Процедура ЗаписатьНастройкиСчетовУчетаФормы()
	НастройкаСчетовУчетаСервер.ЗаписатьНастройкиСчетовУчетаФормы(ЭтотОбъект);
КонецПроцедуры
//-- НЕ УТ

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Заголовок = Строка(ТипОперации);
	
	ЭтоВозврат = (ТипОперации = Перечисления.ТипыОперацийСБилетами.Возврат);
	
	ЭлементыВозврата = Новый Массив;
	ЭлементыВозврата.Добавить(Элементы.СтатьяРасходов);
	ЭлементыВозврата.Добавить(Элементы.АналитикаРасходов);
	ЭлементыВозврата.Добавить(Элементы.АналитикаАктивовПассивов);
	ЭлементыВозврата.Добавить(Элементы.Подразделение);
	ЭлементыВозврата.Добавить(Элементы.НаправлениеДеятельности);
	ЭлементыВозврата.Добавить(Элементы.ПредставлениеОтраженияВРеглУчете);
	
	Для каждого ЭлементВозврата Из ЭлементыВозврата Цикл
		ЭлементВозврата.Видимость = ЭтоВозврат;
	КонецЦикла;
	
	Элементы.СуммаШтрафа.Видимость = ЭтоВозврат;
	
	ДоступностьАналитикРасходов = (СуммаШтрафа <> 0);
	Для каждого ЭлементВозврата Из ЭлементыВозврата Цикл
		ЭлементВозврата.Доступность = ДоступностьАналитикРасходов;
	КонецЦикла;
	
	Если ЭтоВозврат Тогда
		Элементы.СтавкаНДС.АвтоОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
