//++ Устарело_Производство21
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("Обеспечение");
	МеханизмыДокумента.Добавить("ОборотныеРегистрыУправленческогоУчета");
	МеханизмыДокумента.Добавить("ОперативныйУчетТоваровОрганизаций");
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("ПриемВПереработку");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("Производство");
	//++ НЕ УТКА
 	МеханизмыДокумента.Добавить("Производство21");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("СебестоимостьИПартионныйУчет");
	МеханизмыДокумента.Добавить("СерийныйУчет");
	МеханизмыДокумента.Добавить("СуммыДокументовВВалютахУчета");
	МеханизмыДокумента.Добавить("АдресныйСклад");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("УчетРабот");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.ВыпускПродукции") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
		//++ НЕ УТКА
		ТекстЗапросаТаблицаРаспоряженияНаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры);
		//-- НЕ УТКА
		ТекстЗапросаТаблицаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРаспоряженияНаСписаниеПоНормативам(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		
		//++ НЕ УТКА

		//++ Устарело_Переработка24
		ТекстЗапросаТаблицаУслугиДавальцуКОформлению(Запрос, ТекстыЗапроса, Регистры);
		//-- Устарело_Переработка24

		//-- НЕ УТКА

		//++ НЕ УТ
		ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
		//-- НЕ УТ
	КонецЕсли;
	
	ОтразитьРаспределениеЗапасовДвижения(Запрос, ТекстыЗапроса, Регистры);
	ЗапланироватьПоступлениеТоваров(Запрос, ТекстыЗапроса, Регистры);
	ОформитьПоступлениеТоваровПоОдноходовке(Запрос, ТекстыЗапроса, Регистры);
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Заполняет массивы элементов формы, зависимых от способа оформления документа.
//
// Параметры:
//	ВыпускПоРаспоряжениям - Булево - Способ оформления документа
//	МассивВсехЭлементов - Массив - Массив всех элементов, зависимых от способа оформления
//	МассивЭлементовСпособа - Массив - Массив элементов способа.
//
Процедура ЗаполнитьИменаРеквизитовПоРаспоряжениям(ВыпускПоРаспоряжениям, МассивВсехЭлементов, МассивЭлементовСпособа) Экспорт
	
	МассивВсехЭлементов = Новый Массив;
	МассивВсехЭлементов.Добавить("ВыпускПодДеятельность");
	МассивВсехЭлементов.Добавить("Товары.Спецификация");
	МассивВсехЭлементов.Добавить("Товары.Распоряжение");
	МассивВсехЭлементов.Добавить("Товары.КодСтроки");
	МассивВсехЭлементов.Добавить("ТоварыДополнитьПобочнымиВыходнымиИзделиями");
	МассивВсехЭлементов.Добавить("ТоварыПодобратьИзРаспоряжения");
	МассивВсехЭлементов.Добавить("ТоварыЗаполнитьПоРаспоряжениям");
	
	МассивВсехЭлементов.Добавить("ТоварыСкопироватьСтроки");
	МассивВсехЭлементов.Добавить("ТоварыВставитьСтроки");
	
	МассивВсехЭлементов.Добавить("ТоварыКонтекстноеМенюСкопироватьСтроки");
	МассивВсехЭлементов.Добавить("ТоварыКонтекстноеМенюВставитьСтроки");
	
	МассивВсехЭлементов.Добавить("ТоварыИзменитьКачество");
	
	МассивЭлементовСпособа = Новый Массив;
	
	Если ВыпускПоРаспоряжениям Тогда
		МассивЭлементовСпособа.Добавить("Товары.Распоряжение");
		МассивЭлементовСпособа.Добавить("Товары.КодСтроки");
		МассивЭлементовСпособа.Добавить("ТоварыПодобратьИзРаспоряжения");
		МассивЭлементовСпособа.Добавить("ТоварыЗаполнитьПоРаспоряжениям");
	Иначе
		МассивЭлементовСпособа.Добавить("Товары.Спецификация");
		МассивЭлементовСпособа.Добавить("ВыпускПодДеятельность");
		МассивЭлементовСпособа.Добавить("ТоварыДополнитьПобочнымиВыходнымиИзделиями");
		МассивЭлементовСпособа.Добавить("ТоварыСкопироватьСтроки");
		МассивЭлементовСпособа.Добавить("ТоварыВставитьСтроки");
		МассивЭлементовСпособа.Добавить("ТоварыИзменитьКачество");
		МассивЭлементовСпособа.Добавить("ТоварыКонтекстноеМенюСкопироватьСтроки");
		МассивЭлементовСпособа.Добавить("ТоварыКонтекстноеМенюВставитьСтроки");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет массивы элементов формы, зависимых от направления выпуска.
//
// Параметры:
//	НаправлениеВыпуска - ПеречислениеСсылка.ХозяйственныеОперации - Операция документа
//	МассивВсехЭлементов - Массив - Массив всех элементов, зависимых от операции
//	МассивЭлементовСпособа - Массив - Массив элементов операции.
//
Процедура ЗаполнитьИменаРеквизитовПоНаправлениюВыпуска(НаправлениеВыпуска, МассивВсехЭлементов, МассивЭлементовСпособа) Экспорт
	
	МассивВсехЭлементов = Новый Массив;
	МассивВсехЭлементов.Добавить("Склад");
	МассивВсехЭлементов.Добавить("Товары.Склад");
	МассивВсехЭлементов.Добавить("Товары.Подразделение");
	МассивВсехЭлементов.Добавить("Товары.СписатьНаРасходы");
	МассивВсехЭлементов.Добавить("ТоварыЗаполнитьПодразделение");
	
	МассивЭлементовСпособа = Новый Массив;
	
	Если НаправлениеВыпуска = Перечисления.ХозяйственныеОперации.ВыпускПродукцииНаСклад Тогда
		МассивЭлементовСпособа.Добавить("Склад");
		МассивЭлементовСпособа.Добавить("Товары.Склад");
	Иначе
		МассивЭлементовСпособа.Добавить("ТоварыЗаполнитьПодразделение");
		МассивЭлементовСпособа.Добавить("Товары.Подразделение");
		МассивЭлементовСпособа.Добавить("Товары.СписатьНаРасходы");
	КонецЕсли;
	
КонецПроцедуры

//++ НЕ УТКА

// Заполняет таблицу товаров по данным отбора или массиву распоряжений
//
// Параметры:
// ДанныеОтбора    		- Структура - поля, по которым будут отобраны остатки для заполнения документа
// Товары          		- ДанныеФормыКоллекция - таблица товаров, в которую будут помещены остатки
// МассивРаспоряжений   - Массив - распоряжения, по которым будут отобраны остатки
// ЗаполнятьНаДату 		- Булево - указывает на необходимость заполнения по остаткам на дату, переданную в качестве поля в ДанныеОтбора
// ДанныеРаспоряжений	- Массив - содержит массив структур (Распоряжение, КодСтроки).
//
Процедура ЗаполнитьПоОстаткамРаспоряжений(ДанныеОтбора, Товары, МассивРаспоряжений=Неопределено, ЗаполнятьНаДату=Истина, ДанныеРаспоряжений = Неопределено) Экспорт
	
	ДатаЗаполнения = ?(ЗаполнятьНаДату, ДанныеОтбора.Дата, Неопределено);
	
	Результат = РезультатЗапросаПоРаспоряжениямНаВыпускПродукции(
		ДанныеОтбора,
		ДатаЗаполнения,
		МассивРаспоряжений);
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ДанныеРаспоряжений <> Неопределено Тогда
			// Нужно проверить, что строка входит в данные распоряжений
			ДобавитьСтроку = Ложь;
			Для каждого СтруктураРаспоряжения Из ДанныеРаспоряжений Цикл
				Если СтруктураРаспоряжения.Распоряжение = Выборка.Распоряжение
					И (НЕ СтруктураРаспоряжения.Свойство("КодСтроки")
						ИЛИ СтруктураРаспоряжения.КодСтроки = Выборка.КодСтроки) Тогда
					ДобавитьСтроку = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если НЕ ДобавитьСтроку Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		СтрокаТоваров = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТоваров, Выборка);
		
	КонецЦикла;
	
	СтруктураОтбора = Новый Структура("ТипСтоимости", Перечисления.ТипыСтоимостиВыходныхИзделий.Фиксированная);
	НайденныеСтроки = Товары.НайтиСтроки(СтруктураОтбора);
	
	Если ДанныеОтбора.Свойство("ВидЦены") И ЗначениеЗаполнено(ДанныеОтбора.ВидЦены) И НайденныеСтроки.Количество() > 0 Тогда
		ЦеныПредприятияЗаполнениеСервер.ЗаполнитьЦены(
			Товары, // Табличная часть
			НайденныеСтроки, // Массив строк или структура отбора
			Новый Структура( // Параметры заполнения
				"Дата, Валюта, ВидЦены, Организация",				
				ДатаЗаполнения,
				ДанныеОтбора.Валюта,
				ДанныеОтбора.ВидЦены,
				ДанныеОтбора.Организация),
			Новый Структура( // Структура действий с измененными строками
				"ПересчитатьСумму",
				"КоличествоУпаковок"));
	КонецЕсли;

КонецПроцедуры

// Формирует результат запроса по невыполненной части распоряжений.
//
// Параметры:
//   ДанныеОтбора       - Структура - поля, по которым будут отобраны остатки.
//   Дата               - Дата      - дата, на которую будут отобраны остатки.
//   МассивРаспоряжений - Массив    - распоряжения, по которым будут отобраны остатки.
//
// Возвращаемое значение:
//   РезультатЗапроса - Результат запроса по невыполненной части заказов.
//
Функция РезультатЗапросаПоРаспоряжениямНаВыпускПродукции(ДанныеОтбора, Дата, МассивРаспоряжений) Экспорт
	
	МассивРабочихЦентров      = Новый Массив;
	МассивВидовРабочихЦентров = Новый Массив;
		
	Если ДанныеОтбора.Свойство("РабочийЦентр") Тогда
		
		ПараметрыПодразделения = ПроизводствоСервер.ПараметрыПроизводственногоПодразделения(ДанныеОтбора.Подразделение);
		УправлениеМаршрутнымиЛистами = ПараметрыПодразделения.УправлениеМаршрутнымиЛистами;
		
		Если УправлениеМаршрутнымиЛистами = Перечисления.УправлениеМаршрутнымиЛистами.МетодикаББВ Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	РабочиеЦентры.ВидРабочегоЦентра
			|ИЗ
			|	Справочник.РабочиеЦентры КАК РабочиеЦентры
			|ГДЕ
			|	РабочиеЦентры.Ссылка В ИЕРАРХИИ(&РабочийЦентр)";
			Запрос.УстановитьПараметр("РабочийЦентр", ДанныеОтбора.РабочийЦентр);
			
			МассивВидовРабочихЦентров = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРабочегоЦентра");
		Иначе	
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	РабочиеЦентры.Ссылка
			|ИЗ
			|	Справочник.РабочиеЦентры КАК РабочиеЦентры
			|ГДЕ
			|	РабочиеЦентры.Ссылка В ИЕРАРХИИ(&РабочийЦентр)";
			Запрос.УстановитьПараметр("РабочийЦентр", ДанныеОтбора.РабочийЦентр);
			
			МассивРабочихЦентров = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		КонецЕсли;
		
	КонецЕсли;
	
	Склад = ?(ДанныеОтбора.Свойство("Склад"), ДанныеОтбора.Склад, Справочники.Склады.ПустаяСсылка());
	
	ПодразделениеПолучатель = ?(ДанныеОтбора.Свойство("ПодразделениеПолучатель"), 
									ДанныеОтбора.ПодразделениеПолучатель, 
									Справочники.СтруктураПредприятия.ПустаяСсылка());
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Регистратор",             ?(ДанныеОтбора.Свойство("Ссылка"), ДанныеОтбора.Ссылка, Неопределено));
	Запрос.УстановитьПараметр("Организация",             ?(ДанныеОтбора.Свойство("Организация"), ДанныеОтбора.Организация, Неопределено));
	Запрос.УстановитьПараметр("ОтобратьПоОрганизации",   ?(ДанныеОтбора.Свойство("Организация"), Истина, Ложь));
	Запрос.УстановитьПараметр("Подразделение",           ?(ДанныеОтбора.Свойство("Подразделение"), ДанныеОтбора.Подразделение, Неопределено));
	Запрос.УстановитьПараметр("ОтобратьПоПодразделению", ?(ДанныеОтбора.Свойство("Подразделение"), Истина, Ложь));
	Запрос.УстановитьПараметр("Склад",                   Склад);
	Запрос.УстановитьПараметр("ОтобратьПоСкладу",        ЗначениеЗаполнено(Склад));
	Запрос.УстановитьПараметр("ПодразделениеПолучатель", ПодразделениеПолучатель);
	Запрос.УстановитьПараметр("СкладГруппа",             ?(ЗначениеЗаполнено(Склад), Справочники.Склады.ЭтоГруппа(Склад), Ложь));
	Запрос.УстановитьПараметр("Направление",             ?(ДанныеОтбора.Свойство("НаправлениеВыпуска"), ДанныеОтбора.НаправлениеВыпуска, Неопределено));
	Запрос.УстановитьПараметр("ОтобратьПоНаправлению",   ?(ДанныеОтбора.Свойство("НаправлениеВыпуска"), Истина, Ложь));
	Запрос.УстановитьПараметр("НаправлениеДеятельности",           ?(ДанныеОтбора.Свойство("НаправлениеДеятельности"), ДанныеОтбора.НаправлениеДеятельности, Неопределено));
	Запрос.УстановитьПараметр("ОтобратьПоНаправлениюДеятельности", ?(ДанныеОтбора.Свойство("НаправлениеДеятельности"), Истина, Ложь));

	Запрос.УстановитьПараметр("МассивРаспоряжений",      МассивРаспоряжений);
	Запрос.УстановитьПараметр("ОтобратьПоРаспоряжению",  МассивРаспоряжений <> Неопределено);
	
	Запрос.УстановитьПараметр("МассивРабочихЦентров",      МассивРабочихЦентров);
	Запрос.УстановитьПараметр("БезОтбораПоРабочемуЦентру", МассивРабочихЦентров.Количество() = 0);
	
	Запрос.УстановитьПараметр("МассивВидовРабочихЦентров",     МассивВидовРабочихЦентров);
	Запрос.УстановитьПараметр("БезОтбораПоВидуРабочихЦентров", МассивВидовРабочихЦентров.Количество() = 0);
	
	Запрос.УстановитьПараметр("МассивТиповНоменклатуры",    ?(ДанныеОтбора.Свойство("МассивТиповНоменлатуры"), ДанныеОтбора.МассивТиповНоменлатуры, Неопределено));
	Запрос.УстановитьПараметр("ОтобратьПоТипуНоменклатуры", ?(ДанныеОтбора.Свойство("МассивТиповНоменлатуры"), Истина, Ложь));
	
	Если Дата <> Неопределено И Дата <> '00010101' Тогда
		
		Запрос.УстановитьПараметр("Период", КонецДня(Дата));
		Запрос.УстановитьПараметр("ГраницаПериод", Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
		
	Иначе
		
		Запрос.УстановитьПараметр("Период", '00010101');
		Запрос.УстановитьПараметр("ГраницаПериод", Неопределено);
		
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Заказы.Ссылка КАК Заказ,
	|	Заказы.КодСтроки КАК КодСтроки
	|ПОМЕСТИТЬ ВТЗаказыОтбор
	|ИЗ
	|	Документ.МаршрутныйЛистПроизводства.ВыходныеИзделия КАК Заказы
	|ГДЕ
	|	(НЕ &ОтобратьПоРаспоряжению
	|			ИЛИ Заказы.Ссылка В (&МассивРаспоряжений))
	|	И (НЕ &ОтобратьПоПодразделению
	|			ИЛИ Заказы.Ссылка.Подразделение = &Подразделение)
	|	И (НЕ &ОтобратьПоОрганизации
	|			ИЛИ Заказы.Ссылка.Организация = &Организация)
	|	И (НЕ &ОтобратьПоНаправлению
	|			ИЛИ &Направление = ВЫБОР
	|				КОГДА Заказы.Получатель ССЫЛКА Справочник.Склады
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			КОНЕЦ)
	|	И (НЕ &ОтобратьПоСкладу
	|			ИЛИ Заказы.Получатель = &Склад
	|				И НЕ &СкладГруппа
	|			ИЛИ Заказы.Получатель В ИЕРАРХИИ (&Склад)
	|				И &СкладГруппа)
	|	И (НЕ &ОтобратьПоНаправлениюДеятельности
	|			ИЛИ Заказы.Ссылка.Распоряжение.НаправлениеДеятельности = &НаправлениеДеятельности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заказы.Ссылка,
	|	Заказы.КодСтроки
	|ИЗ
	|	Документ.МаршрутныйЛистПроизводства.ВозвратныеОтходы КАК Заказы
	|ГДЕ
	|	(НЕ &ОтобратьПоРаспоряжению
	|			ИЛИ Заказы.Ссылка В (&МассивРаспоряжений))
	|	И (НЕ &ОтобратьПоПодразделению
	|			ИЛИ Заказы.Ссылка.Подразделение = &Подразделение)
	|	И (НЕ &ОтобратьПоОрганизации
	|			ИЛИ Заказы.Ссылка.Организация = &Организация)
	|	И (НЕ &ОтобратьПоНаправлению
	|			ИЛИ &Направление = ВЫБОР
	|				КОГДА Заказы.Получатель ССЫЛКА Справочник.Склады
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			КОНЕЦ)
	|	И (НЕ &ОтобратьПоСкладу
	|			ИЛИ Заказы.Получатель = &Склад
	|				И НЕ &СкладГруппа
	|			ИЛИ Заказы.Получатель В ИЕРАРХИИ (&Склад)
	|				И &СкладГруппа)
	|	И (НЕ &ОтобратьПоНаправлениюДеятельности
	|			ИЛИ Заказы.Ссылка.Распоряжение.НаправлениеДеятельности = &НаправлениеДеятельности)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Распоряжение,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается) КАК ТипСтоимости,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Получатель КАК Склад,
	|	Товары.КодСтроки КАК КодСтроки,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.КлючСвязиОперации КАК КлючСвязиОперации
	|ПОМЕСТИТЬ ВТ_ТаблицаТовары
	|ИЗ
	|	Документ.МаршрутныйЛистПроизводства.ВыходныеИзделия КАК Товары
	|ГДЕ
	|	((Товары.Ссылка, Товары.КодСтроки) В
	|					(ВЫБРАТЬ
	|						Т.Заказ,
	|						Т.КодСтроки
	|					ИЗ
	|						ВТЗаказыОтбор КАК Т)
	|				И НЕ &ОтобратьПоТипуНоменклатуры
	|			ИЛИ Товары.Номенклатура.ТипНоменклатуры В (&МассивТиповНоменклатуры))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка,
	|	Товары.НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная),
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Получатель,
	|	Товары.КодСтроки,
	|	Товары.Упаковка,
	|	Товары.КлючСвязиОперации
	|ИЗ
	|	Документ.МаршрутныйЛистПроизводства.ВозвратныеОтходы КАК Товары
	|ГДЕ
	|	((Товары.Ссылка, Товары.КодСтроки) В
	|					(ВЫБРАТЬ
	|						Т.Заказ,
	|						Т.КодСтроки
	|					ИЗ
	|						ВТЗаказыОтбор КАК Т)
	|				И НЕ &ОтобратьПоТипуНоменклатуры
	|			ИЛИ Товары.Номенклатура.ТипНоменклатуры В (&МассивТиповНоменклатуры))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Распоряжение КАК Распоряжение,
	|	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
	|	МАКСИМУМ(Товары.ТипСтоимости) КАК ТипСтоимости,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Склад КАК Склад,
	|	Товары.КодСтроки КАК КодСтроки,
	|	МАКСИМУМ(Товары.Упаковка) КАК Упаковка
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Распоряжение КАК Распоряжение,
	|		Товары.НомерСтроки КАК НомерСтроки,
	|		Товары.ТипСтоимости КАК ТипСтоимости,
	|		Товары.Номенклатура КАК Номенклатура,
	|		Товары.Характеристика КАК Характеристика,
	|		Товары.Назначение КАК Назначение,
	|		Товары.Склад КАК Склад,
	|		Товары.КодСтроки КАК КодСтроки,
	|		Товары.Упаковка КАК Упаковка
	|	ИЗ
	|		ВТ_ТаблицаТовары КАК Товары
	|	ГДЕ
	|		&БезОтбораПоРабочемуЦентру
	|		И &БезОтбораПоВидуРабочихЦентров
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Товары.Распоряжение,
	|		Товары.НомерСтроки,
	|		Товары.ТипСтоимости,
	|		Товары.Номенклатура,
	|		Товары.Характеристика,
	|		Товары.Назначение,
	|		Товары.Склад,
	|		Товары.КодСтроки,
	|		Товары.Упаковка
	|	ИЗ
	|		ВТ_ТаблицаТовары КАК Товары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства.ВидыРабочихЦентров КАК МаршрутныйЛистПроизводстваВидыРабочихЦентров
	|			ПО (МаршрутныйЛистПроизводстваВидыРабочихЦентров.Ссылка = Товары.Распоряжение)
	|				И (МаршрутныйЛистПроизводстваВидыРабочихЦентров.ВидРабочегоЦентра В (&МассивВидовРабочихЦентров))
	|	ГДЕ
	|		НЕ &БезОтбораПоВидуРабочихЦентров
	|		И &БезОтбораПоРабочемуЦентру
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Товары.Распоряжение,
	|		Товары.НомерСтроки,
	|		Товары.ТипСтоимости,
	|		Товары.Номенклатура,
	|		Товары.Характеристика,
	|		Товары.Назначение,
	|		Товары.Склад,
	|		Товары.КодСтроки,
	|		Товары.Упаковка
	|	ИЗ
	|		ВТ_ТаблицаТовары КАК Товары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства.Операции КАК МаршрутныйЛистПроизводстваОперации
	|			ПО (МаршрутныйЛистПроизводстваОперации.Ссылка = Товары.Распоряжение)
	|				И (МаршрутныйЛистПроизводстваОперации.КлючСвязи = Товары.КлючСвязиОперации)
	|				И (МаршрутныйЛистПроизводстваОперации.РабочийЦентрПоРасписанию В (&МассивРабочихЦентров))
	|	ГДЕ
	|		НЕ &БезОтбораПоРабочемуЦентру
	|		И &БезОтбораПоВидуРабочихЦентров) КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Склад,
	|	Товары.КодСтроки,
	|	Товары.Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаказы.Распоряжение КАК Распоряжение,
	|	ТаблицаЗаказы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаказы.Характеристика КАК Характеристика,
	|	ТаблицаЗаказы.Склад КАК Склад,
	|	ТаблицаЗаказы.КодСтроки КАК КодСтроки,
	|	СУММА(ТаблицаЗаказы.КОформлению) КАК Количество,
	|	ТаблицаЗаказы.ВыпускПодДеятельность КАК ВыпускПодДеятельность,
	|	ТаблицаЗаказы.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ТаблицаОстатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыОстатки.Распоряжение КАК Распоряжение,
	|		ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|		ЗаказыОстатки.Характеристика КАК Характеристика,
	|		ЗаказыОстатки.Склад КАК Склад,
	|		ЗаказыОстатки.КодСтроки КАК КодСтроки,
	|		ЗаказыОстатки.КОформлениюОстаток КАК КОформлению,
	|		ЗаказыОстатки.Распоряжение.Распоряжение.ЗаказПодДеятельность КАК ВыпускПодДеятельность,
	|		ЗаказыОстатки.Распоряжение.Распоряжение.НаправлениеДеятельности КАК НаправлениеДеятельности
	|	ИЗ
	|		РегистрНакопления.РаспоряженияНаВыпускПродукции.Остатки(
	|				&ГраницаПериод,
	|				Распоряжение В
	|							(ВЫБРАТЬ
	|								Т.Заказ
	|							ИЗ
	|								ВТЗаказыОтбор КАК Т)
	|				И (НЕ &ОтобратьПоТипуНоменклатуры
	|					ИЛИ Номенклатура.ТипНоменклатуры В (&МассивТиповНоменклатуры))
	|				И (НЕ &ОтобратьПоСкладу 
	|					ИЛИ Склад = &Склад)
	|				И (&ПодразделениеПолучатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|					ИЛИ Склад = &ПодразделениеПолучатель)
	|		) КАК ЗаказыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыДвижения.Распоряжение,
	|		ЗаказыДвижения.Номенклатура,
	|		ЗаказыДвижения.Характеристика,
	|		ЗаказыДвижения.Склад,
	|		ЗаказыДвижения.КодСтроки,
	|		ВЫБОР
	|			КОГДА ЗаказыДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЗаказыДвижения.КОформлению
	|			ИНАЧЕ ЗаказыДвижения.КОформлению
	|		КОНЕЦ,
	|		ЗаказыДвижения.Распоряжение.Распоряжение.ЗаказПодДеятельность,
	|		ЗаказыДвижения.Распоряжение.Распоряжение.НаправлениеДеятельности
	|	ИЗ
	|		РегистрНакопления.РаспоряженияНаВыпускПродукции КАК ЗаказыДвижения
	|	ГДЕ
	|		ЗаказыДвижения.Регистратор = &Регистратор
	|		И ЗаказыДвижения.Распоряжение В
	|				(ВЫБРАТЬ
	|					Т.Заказ
	|				ИЗ
	|					ВТЗаказыОтбор КАК Т)
	|		И ЗаказыДвижения.Активность
	|		И ВЫБОР
	|				КОГДА &Период <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ЗаказыДвижения.Период <= &Период
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ) КАК ТаблицаЗаказы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗаказы.Номенклатура,
	|	ТаблицаЗаказы.Характеристика,
	|	ТаблицаЗаказы.Склад,
	|	ТаблицаЗаказы.КодСтроки,
	|	ТаблицаЗаказы.Распоряжение,
	|	ТаблицаЗаказы.ВыпускПодДеятельность,
	|	ТаблицаЗаказы.НаправлениеДеятельности
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаЗаказы.КОформлению) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатки.Распоряжение КАК Распоряжение,
	|	ТаблицаОстатки.Распоряжение.Номер КАК Номер,
	|	ТаблицаОстатки.Распоряжение.Дата КАК Дата,
	|	ТаблицаОстатки.Распоряжение.Организация КАК Организация,
	|	ТаблицаОстатки.Распоряжение.Подразделение КАК ПодразделениеОтправитель,
	|	ТаблицаОстатки.Распоряжение.ВариантПриемкиТоваров КАК ВариантПриемкиТоваров,
	|	ТаблицаОстатки.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатки.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаОстатки.Номенклатура.ИспользованиеХарактеристик В (ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры), ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры), ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ХарактеристикиИспользуются,
	|	ВЫБОР
	|		КОГДА ТаблицаОстатки.Склад ССЫЛКА Справочник.Склады
	|			ТОГДА ТаблицаОстатки.Склад
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ КАК Склад,
	|	ВЫБОР
	|		КОГДА ТаблицаОстатки.Склад ССЫЛКА Справочник.Склады
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	КОНЕЦ КАК НаправлениеВыпуска,
	|	ТаблицаОстатки.КодСтроки КАК КодСтроки,
	|	ТаблицаОстатки.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаОстатки.Количество / &ТекстЗапросаКоэффициентУпаковки
	|		ИНАЧЕ ТаблицаОстатки.Количество
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ТаблицаТовары.ТипСтоимости КАК ТипСтоимости,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдИзм,
	|	&ТекстЗапросаКоэффициентУпаковки КАК Коэффициент,
	|	ВЫБОР
	|		КОГДА ТаблицаОстатки.Склад ССЫЛКА Справочник.СтруктураПредприятия
	|			ТОГДА ТаблицаОстатки.Склад
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ТаблицаОстатки.ВыпускПодДеятельность КАК ВыпускПодДеятельность,
	|	ТаблицаОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ТаблицаОстатки КАК ТаблицаОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
	|		ПО ТаблицаОстатки.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаОстатки.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаОстатки.Склад = ТаблицаТовары.Склад
	|			И ТаблицаОстатки.КодСтроки = ТаблицаТовары.КодСтроки
	|			И ТаблицаОстатки.Распоряжение = ТаблицаТовары.Распоряжение
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.НомерСтроки";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ТаблицаТовары.Упаковка",
		"ТаблицаТовары.Номенклатура"));
		
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить();

КонецФункции

//-- НЕ УТКА

// Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Дата,НаправлениеВыпуска";
	
	Возврат ИменаРеквизитов;
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//   Структура - Структура, переопределяющая умолчания, заданные в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ВыпускПродукции";
	
	Если Объект.НаправлениеВыпуска = Перечисления.ХозяйственныеОперации.ВыпускПродукцииВПодразделение Тогда
		
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыПроизводство", Новый Структура());
		ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямПроизводство", Новый Структура());
		
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВыпускПродукцииВПодразделение);
		
		ПараметрыУказанияСерий.ИмяПоляСклад = "Подразделение";
		
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Подразделение");
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
		
	Иначе
		
		ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Истина);
		
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры
															И (Не СкладыСервер.ИспользоватьОрдернуюСхемуПриПоступлении(Объект.Склад, Объект.Дата, Истина))
															Или ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;

		ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПродукцииИзПроизводства);
		
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Склад");
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
		
	КонецЕсли; 
	ПараметрыУказанияСерий.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("Товары_Распоряжение");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает значение распоряжения на поступление или отгрузку.
//
// Параметры:
//   ЗначенияПолейДляОпределенияРаспоряжения - Структура - состав полей определяется значением поля
//                                                         "ИменаПолейДляОпределенияРаспоряжения" параметров указания
//                                                         серий этого документа.
//
// Возвращаемое значение:
//   ДокументСсылка.МаршрутныйЛистПроизводства - значение распоряжения для складской операции.
//
Функция РаспоряжениеНаВыполнениеСкладскойОперации(ЗначенияПолейДляОпределенияРаспоряжения) Экспорт
	Возврат ЗначенияПолейДляОпределенияРаспоряжения.Товары_Распоряжение;
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ВыпускПродукцииВПодразделение) <> Неопределено Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийВыпускВПодразделение();
	Иначе
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийВыпускНаСклад();
	КонецЕсли; 

	Возврат ТекстЗапроса;

КонецФункции

#Область ПроведениеРегламентированныйУчет

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт

#Область ТекстВыпускСобственнойПродукции // (Дт 43, 21 :: Кт 20.01, 23)
	ТекстВыпускСобственнойПродукции = "
	|ВЫБРАТЬ // Выпуск собственной продукции (Дт 43, 21 :: Кт 20.01, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Склад КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	ВЫБОР КОГДА Операция.Подразделение = ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение)
	|		И Строки.ГруппаПродукции = ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции)
	|		И Строки.КорГруппаПродукции = ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции)
	|		И Строки.ИдентификаторСтроки = ЕСТЬNULL(Стоимости.ИдентификаторСтроки, Строки.ИдентификаторСтроки)
	|		И Строки.НастройкаХозяйственнойОперации = ЕСТЬNULL(Стоимости.НастройкаХозяйственнойОперации, Строки.НастройкаХозяйственнойОперации)
	|		ТОГДА Строки.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК АналитикаУчетаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Выпуск собственной продукции"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура				= Стоимости.Номенклатура
	|		И Строки.Склад					= Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета	= Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ВидДвижения			= Стоимости.ВидДвижения
	|		И Строки.ХозяйственнаяОперация	= Стоимости.ХозяйственнаяОперация
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|		
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстВыпускСобственнойПродукцииСкладПроизводства // (Дт 20 :: Кт 20.01, 23)
	ТекстВыпускСобственнойПродукцииСкладПроизводства = "
	|ВЫБРАТЬ // Выпуск собственной продукции на производственный склад (Дт 20 :: Кт 20.01, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК АналитикаУчетаДт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК АналитикаУчетаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Выпуск собственной продукции"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.Количество > 0
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура				= Стоимости.Номенклатура
	|		И Строки.Склад					= Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета	= Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ХозяйственнаяОперация	= Стоимости.ХозяйственнаяОперация
	|		И Строки.ВидДвижения			= Стоимости.ВидДвижения
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|		
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И НЕ Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстВыпускВПодразделение // (Дт 20, 23 :: Кт 20, 23)
	ТекстВыпускВПодразделение = "
	|ВЫБРАТЬ // Выпуск собственной продукции в подразделение (Дт 20, 23 :: Кт 20, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	Строки.Номенклатура.ГруппаАналитическогоУчета КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт2,
	|	Строки.Номенклатура.ГруппаАналитическогоУчета КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК АналитикаУчетаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Выпуск собственной продукции в подразделение"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|	
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Строки.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстВыпускПродукцииДавальцаЗабаланс // (Дт 002 :: Кт )
	ТекстВыпускПродукцииДавальцаЗабаланс = 
	"ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаЗабалансовая, Строки.СуммаЗабалансовая)) КАК Сумма,
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаЗабалансоваяУУ, Строки.СуммаЗабалансоваяУУ)) КАК СуммаУУ,
	|	ВЫБОР
	|		КОГДА Строки.ПроизводственныеЗатраты И Строки.Склад Ссылка Справочник.Склады
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВПроизводстве)
	|		КОГДА Строки.ПроизводственныеЗатраты
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦПотребленныеВПроизводстве)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦНаСкладах)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.ПодразделениеАналитики КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	Строки.Склад КАК СубконтоДт3,
	|	0 КАК ВалютнаяСуммаДт,
	|	СУММА(ВЫБОР
	|			КОГДА Операция.Подразделение = ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение)
	|					И Строки.ГруппаПродукции = ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции)
	|					И Строки.ИдентификаторСтроки = ЕСТЬNULL(Стоимости.ИдентификаторСтроки, Строки.ИдентификаторСтроки)
	|					И НЕ Строки.Склад Ссылка Справочник.СтруктураПредприятия
	|			ТОГДА Строки.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выпуск продукции давальца"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции КАК Операция
	|		ПО ДокументыКОтражению.Ссылка = Операция.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСтроки КАК Строки
	|		ПО (Операция.Ссылка = Строки.Ссылка)
	|			И (Строки.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)))
	|			И (Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (Строки.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
	|												ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение),
	|												ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСтоимости КАК Стоимости
	|		ПО (Строки.Ссылка = Стоимости.Ссылка)
	|			И (Строки.Номенклатура = Стоимости.Номенклатура)
	|			И (Строки.Склад = Стоимости.Склад)
	|			И (Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета)
	|			И (Строки.РазделУчета = Стоимости.РазделУчета)
	|			И (Строки.ВидДвижения = Стоимости.ВидДвижения)
	|			И (Строки.ХозяйственнаяОперация = Стоимости.ХозяйственнаяОперация)
	|			И (Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации)
	|			И (Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи)
	|
	|СГРУППИРОВАТЬ ПО
	|	Строки.ПодразделениеАналитики,
	|	Строки.НаправлениеДеятельности,
	|	Строки.Склад,
	|	ВЫБОР
	|		КОГДА Строки.ПроизводственныеЗатраты И Строки.Склад Ссылка Справочник.Склады
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВПроизводстве)
	|		КОГДА Строки.ПроизводственныеЗатраты
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦПотребленныеВПроизводстве)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦНаСкладах)
	|	КОНЕЦ,
	|	Операция.Ссылка,
	|	Строки.ГруппаФинансовогоУчета,
	|	Строки.Контрагент,
	|	Строки.Номенклатура,
	|	Операция.Дата,
	|	Операция.Организация
	|";
#КонецОбласти

#Область ТекстВыпускПродукцииДавальцаБаланс // (Дт 20 :: Кт 20.01, 23)
	ТекстВыпускПродукцииДавальцаБаланс = "
	|ВЫБРАТЬ // Выпуск продукции давальца на склад (Дт 20 :: Кт 20.01, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаБалансовая, Строки.СуммаБалансовая) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаБалансоваяУУ, Строки.СуммаБалансоваяУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК АналитикаУчетаДт,
	|	ВЫБОР КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение) 
	|	ТОГДА
	|		Строки.Склад
	|	ИНАЧЕ
	|		ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ КАК МестоУчетаДт,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ВЫБОР КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение) 
	|	ТОГДА
	|		Строки.Склад
	|	ИНАЧЕ
	|		ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК АналитикаУчетаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Выпуск продукции давальца"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка 		 = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		И Строки.Количество > 0
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка 					 = Стоимости.Ссылка
	|		И Строки.Номенклатура			 = Стоимости.Номенклатура
	|		И Строки.Склад					 = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета	 = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ХозяйственнаяОперация	 = Стоимости.ХозяйственнаяОперация
	|		И Строки.ВидДвижения			 = Стоимости.ВидДвижения
	|		И Строки.ГруппаПродукции 		 = Стоимости.ГруппаПродукции
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|		И Строки.ИдентификаторФинЗаписи  = Стоимости.ИдентификаторФинЗаписи
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|		
	|ГДЕ
	|	НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстВыпускПродукцииДавальцаБалансСИспользованием40СчетПлановая // (Дт 20 :: Кт 20.01, 23)
	ТекстВыпускПродукцииДавальцаБалансСИспользованием40СчетПлановая = "
	|ВЫБРАТЬ // Выпуск продукции давальца на склад (Дт 20 :: Кт 20.01, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.Сумма КАК Сумма,
	|	Строки.СуммаУУ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	Строки.ГруппаПродукции КАК АналитикаУчетаДт,
	|	ВЫБОР КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение) 
	|	ТОГДА
	|		Строки.Склад
	|	ИНАЧЕ
	|		ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ВЫБОР КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение) 
	|	ТОГДА
	|		Строки.Склад
	|	ИНАЧЕ
	|		ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	Строки.ГруппаПродукции КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Плановая) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	""Выпуск продукции давальца с использованием 40 счета (плановая)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка 		 = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		И Строки.Количество > 0
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка 					 = Стоимости.Ссылка
	|		И Строки.Номенклатура			 = Стоимости.Номенклатура
	|		И Строки.Склад					 = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета	 = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ХозяйственнаяОперация	 = Стоимости.ХозяйственнаяОперация
	|		И Строки.ВидДвижения			 = Стоимости.ВидДвижения
	|		И Строки.ГруппаПродукции 		 = Стоимости.ГруппаПродукции
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|		И Строки.ИдентификаторФинЗаписи  = Стоимости.ИдентификаторФинЗаписи
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|		
	|ГДЕ
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстВыпускПродукцииДавальцаБалансСИспользованием40СчетФактическая // (Дт 20 :: Кт 20.01, 23)
	ТекстВыпускПродукцииДавальцаБалансСИспользованием40СчетФактическая = "
	|ВЫБРАТЬ // Выпуск продукции давальца на склад (Дт 20 :: Кт 20.01, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаБалансовая
	|		ИНАЧЕ -Стоимости.СуммаБалансовая КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаБалансоваяУУ
	|		ИНАЧЕ -Стоимости.СуммаБалансоваяУУ КОНЕЦ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ВЫБОР КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение) 
	|	ТОГДА
	|		Строки.Склад
	|	ИНАЧЕ
	|		Строки.Склад.Подразделение
	|	КОНЕЦ КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Фактическая) КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаНУ
	|		ИНАЧЕ -Стоимости.СуммаНУ КОНЕЦ) КАК СуммаНУДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаПР
	|		ИНАЧЕ -Стоимости.СуммаПР КОНЕЦ) КАК СуммаПРДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаВР
	|		ИНАЧЕ -Стоимости.СуммаВР КОНЕЦ) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	Стоимости.ГруппаПродукции КАК АналитикаУчетаКт,
	|	ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА 
	|		Стоимости.Подразделение
	|	ИНАЧЕ 
	|		Строки.Подразделение 
	|	КОНЕЦ КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА 
	|		Стоимости.Подразделение
	|	ИНАЧЕ 
	|		Строки.Подразделение 
	|	КОНЕЦ КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Стоимости.ГруппаПродукции КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаНУ
	|		ИНАЧЕ -Стоимости.СуммаНУ КОНЕЦ) КАК СуммаНУКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаПР
	|		ИНАЧЕ -Стоимости.СуммаПР КОНЕЦ) КАК СуммаПРКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаВР
	|		ИНАЧЕ -Стоимости.СуммаВР КОНЕЦ) КАК СуммаВРКт,
	|	""Выпуск продукции давальца (фактическая)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка 		 = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка 					 = Стоимости.Ссылка
	|		И Строки.Номенклатура			 = Стоимости.Номенклатура
	|		И Строки.Склад					 = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета	 = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ХозяйственнаяОперация	 = Стоимости.ХозяйственнаяОперация
	|		И Строки.ВидДвижения			 = Стоимости.ВидДвижения
	|		И Строки.ГруппаПродукции 		 = Стоимости.ГруппаПродукции
	|		И Строки.ИдентификаторФинЗаписи  = Стоимости.ИдентификаторФинЗаписи
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|		
	|ГДЕ
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	ВЫБОР КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение) 
	|	ТОГДА
	|		Строки.Склад
	|	ИНАЧЕ
	|		Строки.Склад.Подразделение
	|	КОНЕЦ,
	|	(ВЫБОР
	|		КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.Подразделение
	|		ИНАЧЕ Строки.Подразделение КОНЕЦ),
	|	Строки.НаправлениеДеятельности,
	|	Стоимости.ГруппаПродукции
	|";
#КонецОбласти

#Область ТекстВыпускПродукцииДавальцаБалансСИспользованием40СчетОтклонения // (Дт 20 :: Кт 20.01, 23)
	ТекстВыпускПродукцииДавальцаБалансСИспользованием40СчетОтклонения = "
	|ВЫБРАТЬ // Выпуск продукции давальца на склад (Дт 20 :: Кт 20.01, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаБалансовая
	|		ИНАЧЕ -Стоимости.СуммаБалансовая КОНЕЦ) - МАКСИМУМ(Строки.СуммаБалансовая) КАК Сумма,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаБалансоваяУУ
	|		ИНАЧЕ -Стоимости.СуммаБалансоваяУУ КОНЕЦ) - МАКСИМУМ(Строки.СуммаБалансоваяУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	Стоимости.ГруппаПродукции КАК АналитикаУчетаДт,
	|	ВЫБОР КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение) 
	|	ТОГДА
	|		Строки.Склад
	|	ИНАЧЕ
	|		ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ВЫБОР КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение) 
	|	ТОГДА
	|		Строки.Склад
	|	ИНАЧЕ
	|		ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	Стоимости.ГруппаПродукции КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаНУ
	|		ИНАЧЕ -Стоимости.СуммаНУ КОНЕЦ) - МАКСИМУМ(Строки.СуммаНУ) КАК СуммаНУДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаПР
	|		ИНАЧЕ -Стоимости.СуммаПР КОНЕЦ) - МАКСИМУМ(Строки.СуммаПР) КАК СуммаПРДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаВР
	|		ИНАЧЕ -Стоимости.СуммаВР КОНЕЦ) - МАКСИМУМ(Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Отклонение) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаНУ
	|		ИНАЧЕ -Стоимости.СуммаНУ КОНЕЦ) - МАКСИМУМ(Строки.СуммаНУ) КАК СуммаНУКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаПР
	|		ИНАЧЕ -Стоимости.СуммаПР КОНЕЦ) - МАКСИМУМ(Строки.СуммаПР) КАК СуммаПРКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаВР
	|		ИНАЧЕ -Стоимости.СуммаВР КОНЕЦ) - МАКСИМУМ(Строки.СуммаВР) КАК СуммаВРКт,
	|	""Выпуск продукции давальца (отклонение)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка 		 = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка 					 = Стоимости.Ссылка
	|		И Строки.Номенклатура			 = Стоимости.Номенклатура
	|		И Строки.Склад					 = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета	 = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ХозяйственнаяОперация	 = Стоимости.ХозяйственнаяОперация
	|		И Строки.ВидДвижения			 = Стоимости.ВидДвижения
	|		И Строки.ГруппаПродукции 		 = Стоимости.ГруппаПродукции
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|		И Строки.ИдентификаторФинЗаписи  = Стоимости.ИдентификаторФинЗаписи
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|		
	|ГДЕ
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	ВЫБОР КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение) 
	|	ТОГДА
	|		Строки.Склад
	|	ИНАЧЕ
	|		ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ,
	|	Строки.НаправлениеДеятельности,
	|	Строки.Номенклатура,
	|	Стоимости.ГруппаПродукции,
	|	Строки.Подразделение
	|";
#КонецОбласти

#Область ТекстВыполнениеРаботПоВыпускуПродукцииДавальца // (Дт 20, 25, 44 :: Кт 20.01, 23)
	ТекстВыполнениеРаботПоВыпускуПродукцииДавальца = "
	|ВЫБРАТЬ // Выполнение работ по выпуску давальческой продукции (Дт 20, 25, 44 :: Кт 20.01, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Стоимости.Сумма КАК Сумма,
	|	Стоимости.СуммаУУ КАК СуммаУУ,
	|
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Строки.СтатьяРасходов
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы) КАК СубконтоДт2,
	|	Строки.СтатьяРасходов КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Стоимости.СуммаНУ КАК СуммаНУДт,
	|	Стоимости.СуммаПР КАК СуммаПРДт,
	|	Стоимости.СуммаВР КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	Стоимости.ГруппаПродукции КАК АналитикаУчетаКт,
	|	Стоимости.Подразделение КАК МестоУчетаКт,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Стоимости.Подразделение КАК ПодразделениеКт,
	|	Стоимости.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Стоимости.ГруппаПродукции КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Выполнение работ по выпуску давальческой продукции"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтСтроки КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтСтоимости КАК Стоимости
	|	ПО 
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|ГДЕ
	|	Строки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|	И Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	И Строки.Склад <> Стоимости.Подразделение
	|";
#КонецОбласти

#Область ТекстВыполнениеРабот // (Дт 20, 25, 44 :: Кт 20.01, 23)
	ТекстВыполнениеРабот = "
	|ВЫБРАТЬ // Выполнение работ (Дт 20, 25, 44 :: Кт 20.01, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА Строки.ГруппаПродукции
	|		ИНАЧЕ Строки.СтатьяРасходов
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	(ВЫБОР КОГДА Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|		ТОГДА Операция.Подразделение
	|		ИНАЧЕ Строки.Склад КОНЕЦ) КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	(ВЫБОР КОГДА Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|		ТОГДА Операция.Подразделение
	|		ИНАЧЕ Строки.Склад КОНЕЦ) КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы) КАК СубконтоДт2,
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА Строки.ГруппаПродукции
	|		ИНАЧЕ Строки.СтатьяРасходов
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК АналитикаУчетаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК МестоУчетаКт,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Выполнение работ"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтСтроки КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВтСтоимости КАК Стоимости
	|	ПО 
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|	
	|ГДЕ
	|	Строки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И (ВЫБОР КОГДА Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|		ТОГДА Операция.Подразделение <> ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение)
	|			ИЛИ &АналитическийУчетПоГруппамПродукции
	|			  И ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) <> Строки.ГруппаПродукции
	|		ИНАЧЕ Строки.Склад <> ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КОНЕЦ)
	|	И НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстСписаниеНаРасходы // (Дт 20, 25, 44 :: Кт 20.01, 23)
	ТекстСписаниеНаРасходы = "
	|ВЫБРАТЬ // Выполнение работ (Дт 20, 25, 44 :: Кт 20.01, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	Строки.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	Строки.ВидСчета КАК ВидСчетаДт,
	|	Строки.АналитикаУчета КАК АналитикаУчетаДт,
	|	Строки.МестоУчета КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	Строки.СчетУчета КАК СчетДт,
	|	Строки.Субконто1 КАК СубконтоДт1,
	|	Строки.Субконто2 КАК СубконтоДт2,
	|	Строки.Субконто3 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Выполнение работ"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтСтрокиСУчетомАктивовПассивов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидСчета <> НЕОПРЕДЕЛЕНО
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВтСтоимости КАК Стоимости
	|	ПО 
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ХозяйственнаяОперация = Стоимости.ХозяйственнаяОперация
	|		И Стоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.Подразделение = Стоимости.Подразделение
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.СтатьяАктивовПассивов = Стоимости.СтатьяАктивовПассивов
	|		И Строки.АналитикаАктивовПассивов = Стоимости.АналитикаАктивовПассивов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|	
	|ГДЕ
	|	НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстСписаниеНаРасходыКорректировкаГруппыПродукции // (Дт 20, 23 :: Кт 20, 23)
	ТекстСписаниеНаРасходыКорректировкаГруппыПродукции = "
	|ВЫБРАТЬ // Выполнение работ (Дт 20, 23 :: Кт 20, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА -Стоимости.Сумма
	|		ИНАЧЕ Стоимости.Сумма КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА -Стоимости.СуммаУУ
	|		ИНАЧЕ Стоимости.СуммаУУ КОНЕЦ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА -Стоимости.СуммаНУ
	|		ИНАЧЕ Стоимости.СуммаНУ КОНЕЦ) КАК СуммаНУДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА -Стоимости.СуммаПР
	|		ИНАЧЕ Стоимости.СуммаПР КОНЕЦ) КАК СуммаПРДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА -Стоимости.СуммаВР
	|		ИНАЧЕ Стоимости.СуммаВР КОНЕЦ) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК АналитикаУчетаКт,
	|	Строки.Склад КАК МестоУчетаКт,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Склад КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА -Стоимости.СуммаНУ
	|		ИНАЧЕ Стоимости.СуммаНУ КОНЕЦ) КАК СуммаНУКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА -Стоимости.СуммаПР
	|		ИНАЧЕ Стоимости.СуммаПР КОНЕЦ) КАК СуммаПРКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА -Стоимости.СуммаВР
	|		ИНАЧЕ Стоимости.СуммаВР КОНЕЦ) КАК СуммаВРКт,
	|	""Корректировка группы (вида) продукции"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтСтроки КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтСтоимости КАК Стоимости
	|	ПО 
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ПланВидовХарактеристик.СтатьиРасходов КАК Статья
	|	ПО 
	|		Статья.Ссылка = Строки.СтатьяРасходов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|	
	|ГДЕ
	|	Строки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|	И НЕ &ПартионныйУчетВерсии22
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Строки.Склад,
	|	Строки.Номенклатура,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции)
	|";
#КонецОбласти

#Область ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаПлановая // (Дт 43, 21 :: Кт 40)
	ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаПлановая = "
	|ВЫБРАТЬ // Выпуск собственной продукции на склад с использованием 40 счета (плановая)(Дт 43, 21 :: Кт 40)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.Сумма КАК Сумма,
	|	Строки.СуммаУУ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Склад КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	ВЫБОР КОГДА Операция.Подразделение = Строки.Подразделение ТОГДА
	|		Строки.Количество
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Плановая) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	""Выпуск собственной продукции на склад с использованием 40 счета (плановая)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаПлановаяСкладПроизводства // (Дт 20 :: Кт 40)
	ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаПлановаяСкладПроизводства = "
	|ВЫБРАТЬ // Выпуск собственной продукции на производственный склад с использованием 40 счета (плановая)(Дт 20 :: Кт 40)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.Сумма КАК Сумма,
	|	Строки.СуммаУУ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	Строки.ГруппаПродукции КАК АналитикаУчетаДт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	Строки.ГруппаПродукции КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Плановая) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	""Выпуск собственной продукции на склад с использованием 40 счета (плановая)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|       И Строки.Количество > 0
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И НЕ Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаФактическая // (Дт 40 :: Кт 20, 23)
	ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаФактическая = "
	|ВЫБРАТЬ // Выпуск собственной продукции на склад с использованием 40 счета (фактическая) (Дт 40 :: Кт 20, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Фактическая) КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК АналитикаУчетаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Выпуск собственной продукции на склад с использованием 40 счета (фактическая)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка 					= Стоимости.Ссылка
	|		И Строки.Номенклатура			= Стоимости.Номенклатура
	|		И Строки.Склад					= Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета	= Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Стоимости.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаОтклонение // (Дт 43, 21 :: Кт 40)
	ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаОтклонение = "
	|ВЫБРАТЬ // Выпуск собственной продукции на склад с использованием 40 счета (отклонение)(Дт 43, 21 :: Кт 40)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Стоимости.Сумма - Строки.Сумма КАК Сумма,
	|	Стоимости.СуммаУУ - Строки.СуммаУУ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Склад КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Стоимости.СуммаНУ - Строки.СуммаНУ КАК СуммаНУДт,
	|	Стоимости.СуммаПР - Строки.СуммаПР КАК СуммаПРДт,
	|	Стоимости.СуммаВР - Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Отклонение) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Стоимости.СуммаНУ - Строки.СуммаНУ КАК СуммаНУКт,
	|	Стоимости.СуммаПР - Строки.СуммаПР КАК СуммаПРКт,
	|	Стоимости.СуммаВР - Строки.СуммаВР КАК СуммаВРКт,
	|	""Выпуск собственной продукции на склад с использованием 40 счета (отклонение)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		(ВЫБРАТЬ
	|			Т.Ссылка,
	|			Т.Номенклатура,
	|			Т.Склад,
	|			Т.ГруппаФинансовогоУчета,
	|			СУММА(Т.Сумма) КАК Сумма,
	|			СУММА(Т.СуммаУУ) КАК СуммаУУ,
	|			СУММА(Т.СуммаНУ) КАК СуммаНУ,
	|			СУММА(Т.СуммаПР) КАК СуммаПР,
	|			СУММА(Т.СуммаВР) КАК СуммаВР
	|		ИЗ ВТСтоимости КАК Т
	|		ГДЕ
	|			Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			И Т.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|		СГРУППИРОВАТЬ ПО
	|			Т.Ссылка,
	|			Т.Номенклатура,
	|			Т.Склад,
	|			Т.ГруппаФинансовогоУчета
	|		) КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаОтклонениеСкладПроизводства // (Дт 20 :: Кт 40)
	ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаОтклонениеСкладПроизводства = "
	|ВЫБРАТЬ // Выпуск собственной продукции на производственный склад с использованием 40 счета (отклонение)(Дт 20 :: Кт 40)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Стоимости.Сумма - Строки.Сумма КАК Сумма,
	|	Стоимости.СуммаУУ - Строки.СуммаУУ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	Строки.ГруппаПродукции КАК АналитикаУчетаДт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	Строки.ГруппаПродукции КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Стоимости.СуммаНУ - Строки.СуммаНУ КАК СуммаНУДт,
	|	Стоимости.СуммаПР - Строки.СуммаПР КАК СуммаПРДт,
	|	Стоимости.СуммаВР - Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Отклонение) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Стоимости.СуммаНУ - Строки.СуммаНУ КАК СуммаНУКт,
	|	Стоимости.СуммаПР - Строки.СуммаПР КАК СуммаПРКт,
	|	Стоимости.СуммаВР - Строки.СуммаВР КАК СуммаВРКт,
	|	""Выпуск собственной продукции на склад с использованием 40 счета (отклонение)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.Количество > 0
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		(ВЫБРАТЬ
	|			Т.Ссылка,
	|			Т.Номенклатура,
	|			Т.Склад,
	|			Т.ГруппаФинансовогоУчета,
	|			СУММА(Т.Сумма) КАК Сумма,
	|			СУММА(Т.СуммаУУ) КАК СуммаУУ,
	|			СУММА(Т.СуммаНУ) КАК СуммаНУ,
	|			СУММА(Т.СуммаПР) КАК СуммаПР,
	|			СУММА(Т.СуммаВР) КАК СуммаВР
	|		ИЗ ВТСтоимости КАК Т
	|		ГДЕ
	|			Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			И Т.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|		СГРУППИРОВАТЬ ПО
	|			Т.Ссылка,
	|			Т.Номенклатура,
	|			Т.Склад,
	|			Т.ГруппаФинансовогоУчета
	|		) КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И НЕ Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстВыпускВПодразделениеСИспользованием40СчетаПлановая // (Дт 20, 23 :: Кт 40)
	ТекстВыпускВПодразделениеСИспользованием40СчетаПлановая = "
	|ВЫБРАТЬ // Выпуск собственной продукции в подразделение с использованием 40 счета (плановая) (Дт 20, 23 :: Кт 40)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.Сумма КАК Сумма,
	|	Строки.СуммаУУ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	Строки.Номенклатура.ГруппаАналитическогоУчета КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт2,
	|	Строки.Номенклатура.ГруппаАналитическогоУчета КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Плановая) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	""Выпуск собственной продукции в подразделение с использованием 40 счета (плановая)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Строки.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстВыпускВПодразделениеСИспользованием40СчетаФактическая // (Дт 40 :: Кт 20, 23)
	ТекстВыпускВПодразделениеСИспользованием40СчетаФактическая = "
	|ВЫБРАТЬ // Выпуск собственной продукции в подразделение с использованием 40 счета (фактическая) (Дт 40 :: Кт 20, 23)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Фактическая) КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК АналитикаУчетаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Выпуск собственной продукции в подразделение с использованием 40 счета (фактическая)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|		И Стоимости.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Строки.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстВыпускВПодразделениеСИспользованием40СчетаОтклонение // (Дт 20, 23 :: Кт 40)
	ТекстВыпускВПодразделениеСИспользованием40СчетаОтклонение = "
	|ВЫБРАТЬ // Выпуск собственной продукции в подразделение с использованием 40 счета (отклонение)(Дт 20, 23 :: Кт 40)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.Сумма
	|		ИНАЧЕ -Стоимости.Сумма КОНЕЦ) - МАКСИМУМ(Строки.Сумма) КАК Сумма,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаУУ
	|		ИНАЧЕ -Стоимости.СуммаУУ КОНЕЦ) - МАКСИМУМ(Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	Строки.Номенклатура.ГруппаАналитическогоУчета КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт2,
	|	Строки.Номенклатура.ГруппаАналитическогоУчета КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаНУ
	|		ИНАЧЕ -Стоимости.СуммаНУ КОНЕЦ) - МАКСИМУМ(Строки.СуммаНУ) КАК СуммаНУДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаПР
	|		ИНАЧЕ -Стоимости.СуммаПР КОНЕЦ) - МАКСИМУМ(Строки.СуммаПР) КАК СуммаПРДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаВР
	|		ИНАЧЕ -Стоимости.СуммаВР КОНЕЦ) - МАКСИМУМ(Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Отклонение) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаНУ
	|		ИНАЧЕ -Стоимости.СуммаНУ КОНЕЦ) - МАКСИМУМ(Строки.СуммаНУ) КАК СуммаНУКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаПР
	|		ИНАЧЕ -Стоимости.СуммаПР КОНЕЦ) - МАКСИМУМ(Строки.СуммаПР) КАК СуммаПРКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаВР
	|		ИНАЧЕ -Стоимости.СуммаВР КОНЕЦ) - МАКСИМУМ(Строки.СуммаВР) КАК СуммаВРКт,
	|	""Выпуск собственной продукции в подразделение с использованием 40 счета (отклонение)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Стоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Стоимости.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|	
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Строки.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Строки.Подразделение,
	|	Строки.Склад,
	|	Строки.НаправлениеДеятельности,
	|	Строки.Номенклатура,
	|	Строки.Номенклатура.ГруппаАналитическогоУчета
	|";
#КонецОбласти

#Область ТекстВыполнениеРаботСИспользованием40СчетаПлановая // (Дт 20, 25, 44 :: Кт 40)
	ТекстВыполнениеРаботСИспользованием40СчетаПлановая = "
	|ВЫБРАТЬ // Выполнение работ с использованием 40 счета (плановая)(Дт 20, 25, 44 :: Кт 40)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.Сумма КАК Сумма,
	|	Строки.СуммаУУ КАК СуммаУУ,
	|
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Строки.СтатьяРасходов
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы) КАК СубконтоДт2,
	|	Строки.СтатьяРасходов КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Плановая) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	""Выполнение работ с использованием 40 счета (плановая)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|
	|ГДЕ
	|	Строки.Подразделение <> Строки.Склад
	|	И Строки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаПлановая // (Дт 20, 25, 44 :: Кт 40)
	ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаПлановая = "
	|ВЫБРАТЬ // Выполнение работ с использованием 40 счета (плановая)(Дт 20, 25, 44 :: Кт 40)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	Строки.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|
	|	Строки.Сумма КАК Сумма,
	|	Строки.СуммаУУ КАК СуммаУУ,
	|
	|	Строки.ВидСчета КАК ВидСчетаДт,
	|	Строки.АналитикаУчета КАК АналитикаУчетаДт,
	|	Строки.МестоУчета КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	Строки.СчетУчета КАК СчетДт,
	|	Строки.Субконто1 КАК СубконтоДт1,
	|	Строки.Субконто2 КАК СубконтоДт2,
	|	Строки.Субконто3 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Склад КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Плановая) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	""Выполнение работ с использованием 40 счета (плановая)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтрокиСУчетомАктивовПассивов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидСчета <> НЕОПРЕДЕЛЕНО
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|	
	|ГДЕ
	|	Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область ТекстВыполнениеРаботСИспользованием40СчетаФактическая // (Дт 40 :: Кт 20.01, 23)
	ТекстВыполнениеРаботСИспользованием40СчетаФактическая = "
	|ВЫБРАТЬ // Выполнение работ с использованием 40 счета (фактическая)(Дт 40 :: Кт 20.01, 23)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.Сумма
	|		ИНАЧЕ -Стоимости.Сумма КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаУУ
	|		ИНАЧЕ -Стоимости.СуммаУУ КОНЕЦ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Фактическая) КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаНУ
	|		ИНАЧЕ -Стоимости.СуммаНУ КОНЕЦ) КАК СуммаНУДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаПР
	|		ИНАЧЕ -Стоимости.СуммаПР КОНЕЦ) КАК СуммаПРДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаВР
	|		ИНАЧЕ -Стоимости.СуммаВР КОНЕЦ) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	Стоимости.ГруппаПродукции КАК АналитикаУчетаКт,
	|	(ВЫБОР
	|		КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение)
	|		ИНАЧЕ Строки.Подразделение КОНЕЦ) КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	(ВЫБОР
	|		КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение)
	|		ИНАЧЕ Строки.Подразделение КОНЕЦ) КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Стоимости.ГруппаПродукции КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаНУ
	|		ИНАЧЕ -Стоимости.СуммаНУ КОНЕЦ) КАК СуммаНУКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаПР
	|		ИНАЧЕ -Стоимости.СуммаПР КОНЕЦ) КАК СуммаПРКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаВР
	|		ИНАЧЕ -Стоимости.СуммаВР КОНЕЦ) КАК СуммаВРКт,
	|	""Выполнение работ с использованием 40 счета (фактическая)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Стоимости.Ссылка = Операция.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Стоимости.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|
	|ГДЕ
	|	Стоимости.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И (ВЫБОР
	|		КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение)
	|		ИНАЧЕ Строки.Подразделение КОНЕЦ) <> Строки.Склад
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Строки.Подразделение,
	|	(ВЫБОР
	|		КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение)
	|		ИНАЧЕ Строки.Подразделение КОНЕЦ),
	|	Строки.НаправлениеДеятельности,
	|	Стоимости.ГруппаПродукции
	|";
#КонецОбласти

#Область ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаФактическая // (Дт 40 :: Кт 20.01, 23)
	ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаФактическая = "
	|ВЫБРАТЬ // Выполнение работ с использованием 40 счета (фактическая)(Дт 40 :: Кт 20.01, 23)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(Стоимости.Сумма) КАК Сумма,
	|	СУММА(Стоимости.СуммаУУ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Фактическая) КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	СУММА(Стоимости.СуммаНУ) КАК СуммаНУДт,
	|	СУММА(Стоимости.СуммаПР) КАК СуммаПРДт,
	|	СУММА(Стоимости.СуммаВР) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	Стоимости.ГруппаПродукции КАК АналитикаУчетаКт,
	|	Строки.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Склад КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Стоимости.ГруппаПродукции КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	СУММА(Стоимости.СуммаНУ) КАК СуммаНУКт,
	|	СУММА(Стоимости.СуммаПР) КАК СуммаПРКт,
	|	СУММА(Стоимости.СуммаВР) КАК СуммаВРКт,
	|	""Выполнение работ с использованием 40 счета (фактическая)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Стоимости.Ссылка = Операция.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Подразделение = Стоимости.Подразделение
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.СтатьяАктивовПассивов = Стоимости.СтатьяАктивовПассивов
	|		И Строки.АналитикаАктивовПассивов = Стоимости.АналитикаАктивовПассивов
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Стоимости.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		СтатьиРасходов.Ссылка = Строки.СтатьяРасходов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|	ПО
	|		СтатьиАктивовПассивов.Ссылка = Строки.СтатьяАктивовПассивов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|
	|ГДЕ
	|	Строки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|	И (НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL ИЛИ НЕ СтатьиАктивовПассивов.Ссылка ЕСТЬ NULL)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Строки.Склад,
	|	Строки.НаправлениеДеятельности,
	|	Стоимости.ГруппаПродукции
	|";
#КонецОбласти

#Область ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаКоррекцияПодразделения // (Дт 20.01, 23 :: Кт 20.01, 23)
	ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаКоррекцияПодразделения = "
	|ВЫБРАТЬ // Выполнение работ с использованием 40 счета (фактическая)(Дт 20.01, 23 :: Кт 20.01, 23)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(Стоимости.Сумма) КАК Сумма,
	|	СУММА(Стоимости.СуммаУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	Стоимости.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Стоимости.Склад КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	СУММА(Стоимости.СуммаНУ) КАК СуммаНУДт,
	|	СУММА(Стоимости.СуммаПР) КАК СуммаПРДт,
	|	СУММА(Стоимости.СуммаВР) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	Стоимости.ГруппаПродукции КАК АналитикаУчетаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Стоимости.ГруппаПродукции КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	СУММА(Стоимости.СуммаНУ) КАК СуммаНУКт,
	|	СУММА(Стоимости.СуммаПР) КАК СуммаПРКт,
	|	СУММА(Стоимости.СуммаВР) КАК СуммаВРКт,
	|	""Выполнение работ с использованием 40 счета (фактическая)"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Стоимости.Ссылка = Операция.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|ГДЕ
	|	Стоимости.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Стоимости.Подразделение <> Строки.Склад
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Стоимости.Склад,
	|	Стоимости.КорНаправлениеДеятельности,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение),
	|	Строки.НаправлениеДеятельности,
	|	Стоимости.ГруппаПродукции
	|";
#КонецОбласти

#Область ТекстВыполнениеРаботСИспользованием40СчетаОтклонение // (Дт 20, 25, 44 :: Кт 40)
	ТекстВыполнениеРаботСИспользованием40СчетаОтклонение = "
	|ВЫБРАТЬ // Выполнение работ с использованием 40 счета (отклонение)(Дт 20, 25, 44 :: Кт 40)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.Сумма
	|		ИНАЧЕ -Стоимости.Сумма КОНЕЦ)
	|	- МАКСИМУМ(ВЫБОР КОГДА Строки.Подразделение <> Строки.Склад ТОГДА Строки.Сумма ИНАЧЕ 0 КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаУУ
	|		ИНАЧЕ -Стоимости.СуммаУУ КОНЕЦ)
	|	- МАКСИМУМ(ВЫБОР КОГДА Строки.Подразделение <> Строки.Склад ТОГДА Строки.СуммаУУ ИНАЧЕ 0 КОНЕЦ) КАК СуммаУУ,
	|
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Строки.СтатьяРасходов
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы) КАК СубконтоДт2,
	|	Строки.СтатьяРасходов КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаНУ
	|		ИНАЧЕ -Стоимости.СуммаНУ КОНЕЦ)
	|	- МАКСИМУМ(ВЫБОР КОГДА Строки.Подразделение <> Строки.Склад ТОГДА Строки.СуммаНУ ИНАЧЕ 0 КОНЕЦ) КАК СуммаНУДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаПР
	|		ИНАЧЕ -Стоимости.СуммаПР КОНЕЦ)
	|	- МАКСИМУМ(ВЫБОР КОГДА Строки.Подразделение <> Строки.Склад ТОГДА Строки.СуммаПР ИНАЧЕ 0 КОНЕЦ) КАК СуммаПРДт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаВР
	|		ИНАЧЕ -Стоимости.СуммаВР КОНЕЦ)
	|	- МАКСИМУМ(ВЫБОР КОГДА Строки.Подразделение <> Строки.Склад ТОГДА Строки.СуммаВР ИНАЧЕ 0 КОНЕЦ) КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Отклонение) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаНУ
	|		ИНАЧЕ -Стоимости.СуммаНУ КОНЕЦ)
	|	- МАКСИМУМ(ВЫБОР КОГДА Строки.Подразделение <> Строки.Склад ТОГДА Строки.СуммаНУ ИНАЧЕ 0 КОНЕЦ) КАК СуммаНУКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаПР
	|		ИНАЧЕ -Стоимости.СуммаПР КОНЕЦ)
	|	- МАКСИМУМ(ВЫБОР КОГДА Строки.Подразделение <> Строки.Склад ТОГДА Строки.СуммаПР ИНАЧЕ 0 КОНЕЦ) КАК СуммаПРКт,
	|	СУММА(ВЫБОР КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА Стоимости.СуммаВР
	|		ИНАЧЕ -Стоимости.СуммаВР КОНЕЦ)
	|	- МАКСИМУМ(ВЫБОР КОГДА Строки.Подразделение <> Строки.Склад ТОГДА Строки.СуммаВР ИНАЧЕ 0 КОНЕЦ) КАК СуммаВРКт,
	|	"""" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСтоимости КАК Стоимости
	|		ПО Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Стоимости.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|
	|ГДЕ
	|	(ВЫБОР
	|		КОГДА Стоимости.ВидДвижения = Строки.ВидДвижения ТОГДА ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение)
	|		ИНАЧЕ Строки.Подразделение КОНЕЦ) <> Строки.Склад
	|	И Строки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Строки.СтатьяРасходов,
	|	Строки.Склад,
	|	Строки.НаправлениеДеятельности,
	|	Строки.Номенклатура,
	|	Строки.Номенклатура.ГруппаАналитическогоУчета,
	|	Строки.Подразделение
	|";
#КонецОбласти

#Область ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаОтклонение // (Дт 20, 25, 44 :: Кт 40)
	ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаОтклонение = "
	|ВЫБРАТЬ // Выполнение работ с использованием 40 счета (отклонение)(Дт 20, 25, 44 :: Кт 40)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	Строки.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|
	|	Стоимости.Сумма - Строки.Сумма КАК Сумма,
	|	Стоимости.СуммаУУ - Строки.СуммаУУ КАК СуммаУУ,
	|
	|	Строки.ВидСчета КАК ВидСчетаДт,
	|	Строки.АналитикаУчета КАК АналитикаУчетаДт,
	|	Строки.МестоУчета КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	Строки.СчетУчета КАК СчетДт,
	|	Строки.Субконто1 КАК СубконтоДт1,
	|	Строки.Субконто2 КАК СубконтоДт2,
	|	Строки.Субконто3 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Стоимости.СуммаНУ - Строки.СуммаНУ КАК СуммаНУДт,
	|	Стоимости.СуммаПР - Строки.СуммаПР КАК СуммаПРДт,
	|	Стоимости.СуммаВР - Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Склад КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтоимости.Отклонение) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Стоимости.СуммаНУ - Строки.СуммаНУ КАК СуммаНУКт,
	|	Стоимости.СуммаПР - Строки.СуммаПР КАК СуммаПРКт,
	|	Стоимости.СуммаВР - Строки.СуммаВР КАК СуммаВРКт,
	|	"""" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтрокиСУчетомАктивовПассивов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидСчета <> НЕОПРЕДЕЛЕНО
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСтоимости КАК Стоимости
	|		ПО Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Подразделение = Стоимости.Подразделение
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.СтатьяАктивовПассивов = Стоимости.СтатьяАктивовПассивов
	|		И Строки.АналитикаАктивовПассивов = Стоимости.АналитикаАктивовПассивов
	|		И Стоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Стоимости.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|	
	|ГДЕ
	|	Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ИспользоватьСчет40, ЛОЖЬ)
	|";
#КонецОбласти

#Область СписаниеМатериаловДавальцаПереданныхВПроизводство // (Дт :: Кт 003.02)
	ТекстСписаниеМатериаловДавальцаПереданныхВПроизводство = "
	|ВЫБРАТЬ // Списание материалов давальца (Дт :: Кт 003.01/002)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПотребленныеВПроизводстве) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Строки.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Склад КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание материалов давальца"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|";
#КонецОбласти

#Область ТекстСписаниеПолуфабрикатовДавальца // (Дт :: Кт 002.02)
	ТекстСписаниеПолуфабрикатовДавальца = "
	|ВЫБРАТЬ // Списание полуфабрикатов давальца (Дт :: Кт 002.02)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаЗабалансовая, Строки.СуммаЗабалансовая) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаЗабалансоваяУУ, Строки.СуммаЗабалансоваяУУ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Строки.Склад Ссылка Справочник.Склады
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВПроизводстве)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦПотребленныеВПроизводстве)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Строки.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.ПодразделениеАналитики КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	ВЫБОР
	|		КОГДА Строки.Склад Ссылка Справочник.Склады
	|		ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ * Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание полуфабрикатов давальца"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.КорГруппаФинансовогоУчета = Стоимости.КорГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.ХозяйственнаяОперация = Стоимости.ХозяйственнаяОперация
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|";
#КонецОбласти

#Область ИзменениеНаправленияДеятельностиМатериальныхЗатрат // (Дт 20, 23 :: Кт 20, 23)
	ИзменениеНаправленияДеятельностиМатериальныхЗатрат = "
	|ВЫБРАТЬ // Изменение направления деятельности материальных затрат (Дт 20, 23 :: Кт 20, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт2,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК АналитикаУчетаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Изменение направления деятельности материальных затрат"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета В (
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка 					= Стоимости.Ссылка
	|		И Строки.Номенклатура			= Стоимости.Номенклатура
	|		И Строки.КорНоменклатура		= Стоимости.КорНоменклатура
	|		И Строки.Склад					= Стоимости.Склад
	|		И Строки.КорСклад				= Стоимости.КорСклад
	|		И Строки.ГруппаФинансовогоУчета	= Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности= Стоимости.НаправлениеДеятельности
	|		И Строки.РазделУчета			= Стоимости.РазделУчета
	|		И Строки.ВидДвижения 			= Стоимости.ВидДвижения
	|		И Строки.НастройкаХозяйственнойОперации = Стоимости.НастройкаХозяйственнойОперации
	|		И Строки.ИдентификаторФинЗаписи = Стоимости.ИдентификаторФинЗаписи
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Строки.КорНаправлениеДеятельности <> Строки.НаправлениеДеятельности
	|";
#КонецОбласти

#Область ИзменениеНаправленияДеятельностиГруппыПродукцииТрудозатратБезЗаказа // (Дт 20, 23 :: Кт 20, 23)
	ИзменениеНаправленияДеятельностиГруппыПродукцииТрудозатратБезЗаказа = "
	|ВЫБРАТЬ // Изменение направления деятельности материальных затрат (Дт 20, 23 :: Кт 20, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Стоимости.Стоимость КАК Сумма,
	|	Стоимости.Стоимость КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ Строки.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА Строки.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Строки.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Стоимости.ВидРабот КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.СдельнаяОплатаТруда) КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ Строки.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА Строки.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Стоимости.ВидРабот КАК СубконтоКт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.СдельнаяОплатаТруда) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Изменение направления деятельности и группы продкуции трудозатрат"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК Стоимости
	|	ПО
	|		Строки.Ссылка 					= Стоимости.Регистратор
	|		И Строки.Ссылка					= Стоимости.ДокументВыпуска
	|		И Строки.КодСтроки				= Стоимости.КодСтроки
	|ГДЕ
	|	НЕ Операция.ВыпускПоРаспоряжениям
	|	И (Строки.Назначение.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ИЛИ &АналитическийУчетПоГруппамПродукции
	|			И НЕ Строки.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка))
	|";
#КонецОбласти

#Область ВключениеИсключениеНДСВСтоимость // (Дт 20 :: Кт 19.03)
	ВключениеИсключениеНДСВСтоимость = "
	|ВЫБРАТЬ //// Включение/исключение НДС в стоимость (Дт 20 :: Кт 19.03) @НДСПредъявленный
	|	Партии.Ссылка КАК Ссылка,
	|	Партии.Период КАК Период,
	|	Партии.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Партии.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|		ТОГДА СчетаУчетаПрочихАктивов.НомерСтроки
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСРегл
	|	ИНАЧЕ
	|		-Партии.НДСРегл
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСУпр
	|	ИНАЧЕ
	|		-Партии.НДСУпр
	|	КОНЕЦ КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		КОГДА Партии.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|		ТОГДА Партии.ГруппаПродукции
	|		КОГДА Партии.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Партии.КорГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	ВЫБОР
	|		КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|		ТОГДА Операция.Подразделение
	|		КОГДА Партии.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Партии.КорСклад
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ВЫБОР
	|		КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|		ТОГДА Операция.Подразделение
	|		ИНАЧЕ Партии.КорПодразделение КОНЕЦ КАК ПодразделениеДт,
	|	Партии.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ВЫБОР
	|		КОГДА Партии.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|		ТОГДА СчетаУчетаПрочихАктивов.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|		КОГДА Партии.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|		ТОГДА СчетаУчетаПрочихАктивов.Субконто1
	|		ИНАЧЕ Партии.КорСклад
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА Партии.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|		ТОГДА СчетаУчетаПрочихАктивов.Субконто2
	|		ИНАЧЕ Партии.КорНоменклатура
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|		ТОГДА Партии.ГруппаПродукции
	|		КОГДА Партии.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|		ТОГДА СчетаУчетаПрочихАктивов.Субконто3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаКт,
	|	Партии.ВидДеятельностиНДС                                              КАК АналитикаУчетаКт,
	|	Партии.ВидЦенности                                                     КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЕСТЬNULL(ВводСобственныхСредств.НаправлениеДеятельности, Партии.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Партии.Контрагент КАК СубконтоКт1,
	|	Партии.ДокументПоступления КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Включение/исключение НДС в стоимость"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Партии КАК Партии
	|	ПО
	|		ДокументыКОтражению.Ссылка = Партии.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаУчетаПрочихАктивов КАК СчетаУчетаПрочихАктивов
	|	ПО
	|		Партии.Ссылка = СчетаУчетаПрочихАктивов.Ссылка
	|		И Партии.Номенклатура = СчетаУчетаПрочихАктивов.Номенклатура
	|		И Партии.Характеристика = СчетаУчетаПрочихАктивов.Характеристика
	|		И Партии.Серия = СчетаУчетаПрочихАктивов.Серия
	|		И Партии.СтатьяРасходов = СчетаУчетаПрочихАктивов.СтатьяРасходов
	|		И Партии.АналитикаАктивовПассивов = СчетаУчетаПрочихАктивов.АналитикаАктивовПассивов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТВводСобственныхСредств КАК ВводСобственныхСредств
	|	ПО Партии.Ссылка = ВводСобственныхСредств.Ссылка
	|		И Партии.ДокументПоступления = ВводСобственныхСредств.СчетФактура
	|		И Партии.НаправлениеДеятельности = ВводСобственныхСредств.ИсходноеНаправлениеДеятельности
	|
	|ГДЕ
	|	(Партии.ВключениеНДСВСтоимость ИЛИ Партии.ИсключениеНДСИзСтоимости)
	|";
	
#КонецОбласти

	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстВыпускСобственнойПродукции);
	ТекстыОтражения.Добавить(ТекстВыпускСобственнойПродукцииСкладПроизводства);
	ТекстыОтражения.Добавить(ТекстВыпускВПодразделение);
	ТекстыОтражения.Добавить(ТекстВыпускПродукцииДавальцаБаланс);
	ТекстыОтражения.Добавить(ТекстВыпускПродукцииДавальцаЗабаланс);
	ТекстыОтражения.Добавить(ТекстВыпускПродукцииДавальцаБалансСИспользованием40СчетПлановая);
	ТекстыОтражения.Добавить(ТекстВыпускПродукцииДавальцаБалансСИспользованием40СчетФактическая);
	ТекстыОтражения.Добавить(ТекстВыпускПродукцииДавальцаБалансСИспользованием40СчетОтклонения);
	ТекстыОтражения.Добавить(ТекстВыполнениеРаботПоВыпускуПродукцииДавальца);
	ТекстыОтражения.Добавить(ТекстВыполнениеРабот);
	ТекстыОтражения.Добавить(ТекстСписаниеНаРасходы);
	ТекстыОтражения.Добавить(ТекстСписаниеНаРасходыКорректировкаГруппыПродукции);
	ТекстыОтражения.Добавить(ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаПлановая);
	ТекстыОтражения.Добавить(ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаПлановаяСкладПроизводства);
	ТекстыОтражения.Добавить(ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаФактическая);
	ТекстыОтражения.Добавить(ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаОтклонение);
	ТекстыОтражения.Добавить(ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаОтклонениеСкладПроизводства);
	ТекстыОтражения.Добавить(ТекстВыпускВПодразделениеСИспользованием40СчетаПлановая);
	ТекстыОтражения.Добавить(ТекстВыпускВПодразделениеСИспользованием40СчетаФактическая);
	ТекстыОтражения.Добавить(ТекстВыпускВПодразделениеСИспользованием40СчетаОтклонение);
	ТекстыОтражения.Добавить(ТекстВыполнениеРаботСИспользованием40СчетаПлановая);
	ТекстыОтражения.Добавить(ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаПлановая);
	ТекстыОтражения.Добавить(ТекстВыполнениеРаботСИспользованием40СчетаФактическая);
	ТекстыОтражения.Добавить(ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаФактическая);
	ТекстыОтражения.Добавить(ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаКоррекцияПодразделения);
	ТекстыОтражения.Добавить(ТекстВыполнениеРаботСИспользованием40СчетаОтклонение);
	ТекстыОтражения.Добавить(ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаОтклонение);
	ТекстыОтражения.Добавить(ТекстСписаниеМатериаловДавальцаПереданныхВПроизводство);
	ТекстыОтражения.Добавить(ИзменениеНаправленияДеятельностиМатериальныхЗатрат);
	ТекстыОтражения.Добавить(ИзменениеНаправленияДеятельностиГруппыПродукцииТрудозатратБезЗаказа);
	ТекстыОтражения.Добавить(ТекстСписаниеПолуфабрикатовДавальца);
	ТекстыОтражения.Добавить(ВключениеИсключениеНДСВСтоимость);
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламетированном учете.
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	МассивТекстовВременныхТаблиц = Новый Массив;
	
	#Область ТекстСтрокиСУчетомАктивовПассивов // Формирование временной таблицы с учетом возможности указания статей активов/пассивов
	
	ТекстВременнойТаблицы = "
	|// Формирование временной таблицы с учетом возможности указания статей активов/пассивов для использования в списании на расходы и на затраты по 40 счету
	|ВЫБРАТЬ
	|	СтрокиСебестоимости.Ссылка КАК Ссылка,
	|	СтрокиСебестоимости.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	СтрокиСебестоимости.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|				И НЕ СтрокиДокумента.НомерСтроки ЕСТЬ NULL
	|		ТОГДА СтрокиДокумента.НомерСтроки
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИдентификаторСтроки,
	|	СтрокиСебестоимости.Склад КАК Склад,
	|	СтрокиСебестоимости.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	СтрокиСебестоимости.СтатьяРасходов КАК СтатьяРасходов,
	|	СтрокиСебестоимости.АналитикаРасходов КАК АналитикаРасходов,
	|	СтрокиСебестоимости.СтатьяАктивовПассивов КАК СтатьяАктивовПассивов,
	|	СтрокиСебестоимости.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	СтрокиСебестоимости.ГруппаПродукции КАК ГруппаПродукции,
	|	СУММА(СтрокиСебестоимости.Сумма) КАК Сумма,
	|	СУММА(СтрокиСебестоимости.СуммаУУ) КАК СуммаУУ,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы)
	|		КОГДА СтрокиСебестоимости.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|		КОГДА СтрокиСебестоимости.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидСчета,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА СтрокиСебестоимости.СтатьяРасходов
	|		КОГДА СтрокиСебестоимости.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		ТОГДА СтрокиСебестоимости.СтатьяДоходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаУчета,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА СтрокиСебестоимости.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК МестоУчета,
	|	СтрокиСебестоимости.Подразделение КАК Подразделение,
	|	ЕстьNULL(СтрокиДокумента.Ссылка.НаправлениеДеятельности, СтрокиСебестоимости.НаправлениеДеятельности) КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|				И НЕ СтрокиДокумента.НастройкаСчетовУчета ЕСТЬ NULL
	|		ТОГДА СтрокиДокумента.НастройкаСчетовУчета.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	КОНЕЦ КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|				И НЕ СтрокиДокумента.НастройкаСчетовУчета ЕСТЬ NULL
	|		ТОГДА СтрокиДокумента.НастройкаСчетовУчета.Субконто1
	|		КОГДА СтрокиСебестоимости.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА СтрокиСебестоимости.СтатьяРасходов
	|		КОГДА СтрокиСебестоимости.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		ТОГДА СтрокиСебестоимости.СтатьяДоходов
	|		ИНАЧЕ СтрокиСебестоимости.Номенклатура
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|				И НЕ СтрокиДокумента.НастройкаСчетовУчета ЕСТЬ NULL
	|		ТОГДА СтрокиДокумента.НастройкаСчетовУчета.Субконто2
	|		КОГДА СтрокиСебестоимости.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И СтрокиСебестоимости.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|		КОГДА СтрокиСебестоимости.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И СтрокиСебестоимости.СтатьяРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|				И НЕ СтрокиДокумента.НастройкаСчетовУчета ЕСТЬ NULL
	|		ТОГДА СтрокиДокумента.НастройкаСчетовУчета.Субконто3
	|		ИНАЧЕ СтрокиСебестоимости.АналитикаРасходов
	|	КОНЕЦ КАК Субконто3,
	|	СУММА(0) КАК ВалютнаяСумма,
	|	СУММА(СтрокиСебестоимости.Количество) КАК Количество,
	|	СУММА(СтрокиСебестоимости.СуммаНУ) КАК СуммаНУ,
	|	СУММА(СтрокиСебестоимости.СуммаПР) КАК СуммаПР,
	|	СУММА(СтрокиСебестоимости.СуммаВР) КАК СуммаВР
	|
	|ПОМЕСТИТЬ ВтСтрокиСУчетомАктивовПассивов
	|ИЗ
	|	ВтСтроки КАК СтрокиСебестоимости
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции.Товары КАК СтрокиДокумента
	|	ПО 
	|		СтрокиСебестоимости.Ссылка = СтрокиДокумента.Ссылка
	|		И СтрокиСебестоимости.ИдентификаторСтроки = СтрокиДокумента.ИдентификаторСтроки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО 
	|		ОбъектыСтроительства.Ссылка = СтрокиСебестоимости.АналитикаРасходов
	|ГДЕ
	|	СтрокиСебестоимости.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И СтрокиСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И СтрокиСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтрокиСебестоимости.Ссылка,
	|	СтрокиСебестоимости.ХозяйственнаяОперация,
	|	СтрокиСебестоимости.Номенклатура,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|				И НЕ СтрокиДокумента.НомерСтроки ЕСТЬ NULL
	|		ТОГДА СтрокиДокумента.НомерСтроки
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	СтрокиСебестоимости.Склад,
	|	СтрокиСебестоимости.ГруппаФинансовогоУчета,
	|	СтрокиСебестоимости.ГруппаПродукции,
	|	СтрокиСебестоимости.СтатьяРасходов,
	|	СтрокиСебестоимости.АналитикаРасходов,
	|	СтрокиСебестоимости.СтатьяАктивовПассивов,
	|	СтрокиСебестоимости.АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы)
	|		КОГДА СтрокиСебестоимости.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|		КОГДА СтрокиСебестоимости.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА СтрокиСебестоимости.СтатьяРасходов
	|		КОГДА СтрокиСебестоимости.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		ТОГДА СтрокиСебестоимости.СтатьяДоходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА СтрокиСебестоимости.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	СтрокиСебестоимости.Подразделение,
	|	ЕстьNULL(СтрокиДокумента.Ссылка.НаправлениеДеятельности, СтрокиСебестоимости.НаправлениеДеятельности),
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|				И НЕ СтрокиДокумента.НастройкаСчетовУчета ЕСТЬ NULL
	|		ТОГДА СтрокиДокумента.НастройкаСчетовУчета.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|				И НЕ СтрокиДокумента.НастройкаСчетовУчета ЕСТЬ NULL
	|		ТОГДА СтрокиДокумента.НастройкаСчетовУчета.Субконто1
	|		КОГДА СтрокиСебестоимости.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА СтрокиСебестоимости.СтатьяРасходов
	|		КОГДА СтрокиСебестоимости.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		ТОГДА СтрокиСебестоимости.СтатьяДоходов
	|		ИНАЧЕ СтрокиСебестоимости.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|				И НЕ СтрокиДокумента.НастройкаСчетовУчета ЕСТЬ NULL
	|		ТОГДА СтрокиДокумента.НастройкаСчетовУчета.Субконто2
	|		КОГДА СтрокиСебестоимости.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И СтрокиСебестоимости.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		ТОГДА 
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|		КОГДА СтрокиСебестоимости.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И СтрокиСебестоимости.СтатьяРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СтрокиСебестоимости.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|				И НЕ СтрокиДокумента.НастройкаСчетовУчета ЕСТЬ NULL
	|		ТОГДА СтрокиДокумента.НастройкаСчетовУчета.Субконто3
	|		ИНАЧЕ СтрокиСебестоимости.АналитикаРасходов
	|	КОНЕЦ";
	МассивТекстовВременныхТаблиц.Добавить(ТекстВременнойТаблицы);
	#КонецОбласти
	
	#Область ТаблицаСчетовУчетаАктивовПассивов
	
	ТекстВременнойТаблицы = 
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.СтатьяРасходов КАК СтатьяРасходов,
	|	Товары.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Товары.НастройкаСчетовУчета.СчетУчета КАК СчетУчета,
	|	Товары.НастройкаСчетовУчета.Субконто1 КАК Субконто1,
	|	Товары.НастройкаСчетовУчета.Субконто2 КАК Субконто2,
	|	Товары.НастройкаСчетовУчета.Субконто3 КАК Субконто3
	|ПОМЕСТИТЬ СчетаУчетаПрочихАктивов
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции.Товары КАК Товары
	|	ПО
	|		ДокументыКОтражению.Ссылка = Товары.Ссылка
	|ГДЕ
	|	Товары.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|";
	
	МассивТекстовВременныхТаблиц.Добавить(ТекстВременнойТаблицы);
	
	#КонецОбласти
	
	Возврат СтрСоединить(МассивТекстовВременныхТаблиц, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецФункции

#КонецОбласти

// Функция подбирает склад для заполнения шапки документа Выпуск продукции.
//
// Параметры:
//   МассивСкладов - Массив - массив складов.
//
// Возвращаемое значение:
//   СправочникСсылка.Склады - подобранный склад.
//
Функция СкладШапкиПоМассиву(МассивСкладов) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Склады.Родитель КАК Группа,
	|	ВЫБОР
	|		КОГДА ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки.Значение
	|				И Склады.Родитель.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказахИНакладных)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ГруппаДоступна,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Склады.Ссылка) КАК КоличествоСкладов,
	|	МАКСИМУМ(Склады.Ссылка) КАК Склад
	|ИЗ
	|	Справочник.Склады КАК Склады,
	|	Константа.ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки КАК ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки
	|ГДЕ
	|	Склады.Ссылка В(&МассивСкладов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Склады.Родитель,
	|	ВЫБОР
	|		КОГДА ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки.Значение
	|				И Склады.Родитель.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказахИНакладных)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ");
	
	Запрос.УстановитьПараметр("МассивСкладов", МассивСкладов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		
		Выборка.Следующий();
		
		Если Выборка.КоличествоСкладов = 1 Тогда
			Возврат Выборка.Склад;
		ИначеЕсли Выборка.ГруппаДоступна Тогда
			Возврат Выборка.Группа;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

//++ НЕ УТКА

// Формирует параметры необходимые для оформления выпуска на основании маршрутных листов.
//
// Параметры:
//  МассивСсылок		 - Массив - список маршрутных листов
//  Подразделение		 - СправочникСсылка.СтруктураПредприятия - подразделение в котором оформляется выпуск
//  ТекстПредупреждения	 - Строка - если выпуск создать невозомжно то в параметре возвращается причина.
//
// Возвращаемое значение:
//   Структура, Неопределено - струкиура с полями:
//    * Организация             - СправочникСсылка.Организации             - организация для заполнения.
//    * Подразделение           - СправочникСсылка.СтруктураПредприятия    - подразделение для заполнения.
//    * НаправлениеВыпуска      - ПеречислениеСсылка.ХозяйственныеОперации - направление выпуска для заполнения.
//    * НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - направление деятельности для заполнения.
//
Функция ПараметрыОформленияВыпуска(Знач МассивСсылок, Знач Подразделение, ТекстПредупреждения) Экспорт
	
	Отказ = Ложь;
	
	ОрганизацияДляЗаполнения   = Неопределено;
	СкладДляЗаполнения         = Неопределено;
	ПодразделениеДляЗаполнения = Неопределено;
	НаправлениеДляЗаполнения   = Неопределено;
	ВыпускПодДеятельностьДляЗаполнения   = Неопределено;
	НаправлениеДеятельностиДляЗаполнения = Неопределено;
	ВариантПриемкиТоваровДляЗаполнения   = Неопределено;
	
	ПроверитьОрганизацию       = Истина;
	ПроверитьСклад             = Истина;
	ПроверитьПодразделение     = Истина;
	ПроверитьНаправление       = Истина;
	ПроверитьВыпускПодДеятельность   = Истина;
	ПроверитьНаправлениеДеятельности = Истина;
	ПроверитьВариантПриемкиТоваров   = Истина;
	
	ШаблонСообщения = НСтр("ru = '- у выбранных маршрутных листов отличается поле %ПредставлениеПоля%.';
							|en = '- the %ПредставлениеПоля% field differs for the selected route sheets.'");
	
	ДанныеОтбора = Новый Структура;
	Если ЗначениеЗаполнено(Подразделение) Тогда
		ДанныеОтбора.Вставить("Подразделение", Подразделение);
	КонецЕсли;
	Результат = РезультатЗапросаПоРаспоряжениямНаВыпускПродукции(ДанныеОтбора, Неопределено, МассивСсылок);
	
	Если Результат.Пустой() Тогда
		ТекстПредупреждения = НСтр("ru = 'Не требуется оформлять выпуск продукции или выполнение работ.';
									|en = 'It is not required to register product release or work execution.'");
		Возврат Неопределено;
	КонецЕсли; 
	
	Выборка = Результат.Выбрать();
	
	МассивСкладов = Новый Массив;
	
	ТекстСообщения = "";
	Пока Выборка.Следующий() Цикл
		
		МассивСкладов.Добавить(Выборка.Склад);
		
		Если ОрганизацияДляЗаполнения = Неопределено Тогда
			ОрганизацияДляЗаполнения = Выборка.Организация;
		ИначеЕсли ОрганизацияДляЗаполнения <> Выборка.Организация И ПроверитьОрганизацию Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru = '""Организация""';
																							|en = '""Company""'"));
			ПроверитьОрганизацию = Ложь;
			Отказ = Истина;
		КонецЕсли; 
		
		Если СкладДляЗаполнения = Неопределено Тогда
			СкладДляЗаполнения = Выборка.Склад;
		ИначеЕсли СкладДляЗаполнения <> Выборка.Склад И ПроверитьСклад Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru = '""Склад""';
																							|en = '""Warehouse""'"));
			ПроверитьСклад = Ложь;
			Отказ = Истина;
		КонецЕсли; 
		
		Если ПодразделениеДляЗаполнения = Неопределено Тогда
			ПодразделениеДляЗаполнения = Выборка.ПодразделениеОтправитель;
		ИначеЕсли ПодразделениеДляЗаполнения <> Выборка.ПодразделениеОтправитель И ПроверитьПодразделение Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru = '""Подразделение""';
																							|en = '""Business unit""'"));
			ПроверитьПодразделение = Ложь;
			Отказ = Истина;
		КонецЕсли; 
		
		Если НаправлениеДляЗаполнения = Неопределено Тогда
			НаправлениеДляЗаполнения = Выборка.НаправлениеВыпуска;
		ИначеЕсли НаправлениеДляЗаполнения <> Выборка.НаправлениеВыпуска И ПроверитьНаправление Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru = '""Направление выпуска""';
																							|en = '""Release direction""'"));
			
			ПроверитьНаправление = Ложь;
			Отказ = Истина;
		КонецЕсли;
		
		Если ВыпускПодДеятельностьДляЗаполнения = Неопределено Тогда
			ВыпускПодДеятельностьДляЗаполнения = Выборка.ВыпускПодДеятельность;
		ИначеЕсли ВыпускПодДеятельностьДляЗаполнения <> Выборка.ВыпускПодДеятельность И ПроверитьВыпускПодДеятельность Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru = '""Выпуск под деятельность""';
																							|en = '""Release for activity""'"));
			
			ПроверитьВыпускПодДеятельность = Ложь;
			Отказ = Истина;
		КонецЕсли;
		
		Если НаправлениеДеятельностиДляЗаполнения = Неопределено Тогда
			НаправлениеДеятельностиДляЗаполнения = Выборка.НаправлениеДеятельности;
		ИначеЕсли НаправлениеДеятельностиДляЗаполнения <> Выборка.НаправлениеДеятельности И ПроверитьНаправлениеДеятельности Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru = '""Направление деятельности""';
																							|en = '""Line of business""'"));
			
			ПроверитьНаправлениеДеятельности = Ложь;
			Отказ = Истина;
		КонецЕсли;
		
		Если ВариантПриемкиТоваровДляЗаполнения = Неопределено Тогда
			ВариантПриемкиТоваровДляЗаполнения = Выборка.ВариантПриемкиТоваров;
		ИначеЕсли ВариантПриемкиТоваровДляЗаполнения <> Выборка.ВариантПриемкиТоваров И ПроверитьВариантПриемкиТоваров Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru = '""Вариант приемки товаров""';
																							|en = '""Goods acceptance option""'"));
			
			ПроверитьВариантПриемкиТоваров = Ложь;
			Отказ = Истина;
		КонецЕсли;

	КонецЦикла;
	
	Если Не Отказ И НаправлениеДляЗаполнения = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад") Тогда
		
		СкладДляЗаполнения = СкладШапкиПоМассиву(МассивСкладов);
		
		Если СкладДляЗаполнения = Неопределено Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru = '""Склад""';
																							|en = '""Warehouse""'"));
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		РезультатПроверки = ПроверитьРаспоряженияОбработаныОбработчикамиОбновления(МассивСсылок);
		Если НЕ РезультатПроверки.ОбработкаЗавершена Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ РезультатПроверки.ТекстИсключения;
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отказ Тогда
		
		ТекстПредупреждения = НСтр("ru = 'Невозможно оформить выпуск продукции или выполнение работ.';
									|en = 'Cannot register product release or work performance.'")
								+ Символы.ПС
								+ ТекстСообщения;
								
		Возврат Неопределено;
		
	КонецЕсли;
	
	ПараметрыОформления = Новый Структура;
	ПараметрыОформления.Вставить("Организация",         ОрганизацияДляЗаполнения);
	ПараметрыОформления.Вставить("Подразделение",       ПодразделениеДляЗаполнения);
	ПараметрыОформления.Вставить("НаправлениеВыпуска",  НаправлениеДляЗаполнения);
	ПараметрыОформления.Вставить("ВыпускПодДеятельность",   ВыпускПодДеятельностьДляЗаполнения);
	ПараметрыОформления.Вставить("НаправлениеДеятельности", НаправлениеДеятельностиДляЗаполнения);
	ПараметрыОформления.Вставить("ВариантПриемкиТоваров",   ВариантПриемкиТоваровДляЗаполнения);
	
	Если ЗначениеЗаполнено(СкладДляЗаполнения) Тогда
		ПараметрыОформления.Вставить("Склад",           СкладДляЗаполнения);
	КонецЕсли;
	
	Возврат ПараметрыОформления;
	
КонецФункции

// Проверяет, завершена ли обработка маршрутных листов, а так же их заказов на производство,
// отложенными обработчиками обновления.
//
// Параметры:
//  МассивСсылок - Массив - ссылки, которые необходимо проверить (тип ДокументСсылка.МаршрутныйЛистПроизводства).
//
// Возвращаемое значение:
//   Структура - структура с полями:
//    * ОбработкаЗавершена - Булево - признак того, что все распоряжения обработаны.
//    * ТекстИсключения    - Строка - текст исключения, если еще не все объекты обработаны.
//
Функция ПроверитьРаспоряженияОбработаныОбработчикамиОбновления(МассивСсылок) Экспорт
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
		Неопределено,
		"Документ.МаршрутныйЛистПроизводства",
		МассивСсылок);
	
	Если ОбработкаЗавершена Тогда
		
		МассивСсылокЗаказы = Новый Массив;
		РаспоряженияМЛ = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСсылок, "Распоряжение");
		Для каждого Элемент Из РаспоряженияМЛ Цикл
			МассивСсылокЗаказы.Добавить(Элемент.Значение);
		КонецЦикла;
		
		ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
			Неопределено,
			"Документ.ЗаказНаПроизводство",
			МассивСсылокЗаказы);
			
	КонецЕсли;
	
	Если ОбработкаЗавершена Тогда
		ТекстИсключения = "";
	Иначе
		Если МассивСсылок.Количество() = 1 Тогда
			ТекстИсключения = НСтр("ru = 'Действия с объектом временно запрещены, так как не завершен переход на новую версию программы.';
									|en = 'Actions with the object are temporarily prohibited as transfer to the new application version is not completed.'");
		Иначе
			ТекстИсключения = НСтр("ru = 'Действия с объектами временно запрещены, так как не завершен переход на новую версию программы.';
									|en = 'Actions with the objects are temporarily prohibited as transfer to a new application version is not completed. '");
		КонецЕсли;
	КонецЕсли;
	
	Возврат Новый Структура("ОбработкаЗавершена, ТекстИсключения", ОбработкаЗавершена, ТекстИсключения);
	
КонецФункции

//-- НЕ УТКА

// Проверяет, имеются ли отложенные обработчики обновления, которые еще не обработали данные,
// от которых зависит данный документ.
//
// Параметры:
//  Объект - ДокументОбъект.ВыпускПродукции, ДанныеФормыСтруктура - объект, который необходимо проверить.
//  Форма  - ФормаКлиентскогоПриложения - если объект не обработан, то у переданной формы
//           будет установлено свойство ТолькоПросмотр. Если форма не была
//           передана, то будет вызвано исключение.
//
Процедура ПроверитьСвязанныеОбъектыОбработаныОбработчикамиОбновления(Объект, Форма = Неопределено) Экспорт
	
	//++ НЕ УТКА
	
	ЭтоНовыйОбъект = ТипЗнч(Объект) = Тип("ДокументОбъект.ВыпускПродукции") И Объект.ЭтоНовый()
		ИЛИ ТипЗнч(Объект) = Тип("ДанныеФормыСтруктура") И НЕ ЗначениеЗаполнено(Объект.Ссылка);
		
	Если ПолучитьФункциональнуюОпцию("ОтложенноеОбновлениеЗавершеноУспешно")
		ИЛИ Форма <> Неопределено И Форма.ТолькоПросмотр
		ИЛИ ЭтоНовыйОбъект Тогда
		Возврат;
	КонецЕсли;
	
	МассивСсылок = Новый Массив;
	Для каждого Строка Из Объект.Товары Цикл
		МассивСсылок.Добавить(Строка.Распоряжение);
	КонецЦикла;
	ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(МассивСсылок);
	РезультатПроверки = ПроверитьРаспоряженияОбработаныОбработчикамиОбновления(МассивСсылок);
	
	Если НЕ РезультатПроверки.ОбработкаЗавершена Тогда
		ТекстИсключения = НСтр("ru = 'Действия с объектом временно запрещены, так как не завершен переход на новую версию программы.';
								|en = 'Actions with the object are temporarily prohibited as transfer to the new application version is not completed.'");
		Если Форма <> Неопределено Тогда
			Форма.ТолькоПросмотр = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстИсключения);
		Иначе
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
	КонецЕсли;
	
	//-- НЕ УТКА
	Возврат; // В УТ и КА обработчик пустой
	
КонецПроцедуры

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
//
//  Возвращаемое значение:
//  См. Справочники.Назначения.МакетФормыВыбораНазначений
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы);
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	//++ НЕ УТКА
	ШаблонНазначения.ТипыНазначений.Удалить(ШаблонНазначения.ТипыНазначений.Найти(Перечисления.ТипыНазначений.ДавальческоеПродукция22));
	ШаблонНазначения.ТипыНазначений.Удалить(ШаблонНазначения.ТипыНазначений.Найти(Перечисления.ТипыНазначений.ДавальческоеМатериалы22));
	ШаблонНазначения.ТипыНазначений.Удалить(ШаблонНазначения.ТипыНазначений.Найти(Перечисления.ТипыНазначений.ДавальческоеМатериалыПодЭтап22));
	ШаблонНазначения.ТипыНазначений.Удалить(ШаблонНазначения.ТипыНазначений.Найти(Перечисления.ТипыНазначений.Давальческое2_5));
	//-- НЕ УТКА
	
	// Потребности в товарах на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.Товары.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.Товары.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.Товары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.Товары.Склад";
	
	// Потребности в работах в подразделении-получателе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказовРаботами", Истина, "Объект.Товары.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.Товары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.Товары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Подразделение    = "Объект.Товары.Подразделение";
	
	Возврат МакетФормы;
	
КонецФункции

// Возвращает параметры выбора спецификаций для изделий, указанных в документе.
//
// Параметры:
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров выбора спецификаций.
//
// Возвращаемое значение:
//   Структура - Структура, переопределяющая умолчания, заданные в функции УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций().
//
Функция ПараметрыВыбораСпецификаций(Объект) Экспорт
	
	ПараметрыВыбораСпецификаций = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций();
	
	ПараметрыВыбораСпецификаций.ДоступныеТипы.Добавить(Перечисления.ТипыПроизводственныхПроцессов.Сборка);
	ПараметрыВыбораСпецификаций.ДоступныеСтатусы.Добавить(Перечисления.СтатусыСпецификаций.Действует);
	
	ПараметрыВыбораСпецификаций.ДоступныСпецификацииНаПобочныйВыход = Истина;
	
	СвязиПараметровВыбора = Новый Структура(УправлениеДаннымиОбИзделияхКлиентСервер.ПоляСтруктурыДанныхОбИзделииДляВыбораСпецификации());
	
	СвязиПараметровВыбора.Номенклатура       = "Объект.Товары.Номенклатура";
	СвязиПараметровВыбора.Характеристика     = "Объект.Товары.Характеристика"; 
	СвязиПараметровВыбора.НачалоПроизводства = "Объект.Дата";
	
	ПараметрыВыбораСпецификаций.СвязиПараметровВыбора.Вставить("Объект.Товары.Спецификация", СвязиПараметровВыбора);
	
	Возврат ПараметрыВыбораСпецификаций;
	
КонецФункции

// Имена реквизитов, от значений которых зависят параметры выбора спецификаций
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровВыбораСпецификаций() Экспорт
	
	ИменаРеквизитов = "";
	Возврат ИменаРеквизитов;
	
КонецФункции

// ПодключаемыеКоманды.СозданиеНаОсновании

// Добавляет команду создания документа на основании.
//
// Параметры:
//  КомандыСоздатьНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВыпускПродукции) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ВыпускПродукции.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ВыпускПродукции);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьУправлениеПроизводством";
		КомандаСоздатьНаОсновании.МножественныйВыбор = Истина;
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Добавляет команду создания документа "Выпуск продукции".
//
// Параметры:
//  КомандыСозданияНаОсновании - ТаблицаЗначений - таблица команд.
// Возвращаемое значение:
//  СтрокаТаблицыЗначений, Неопределено - описание добавленной команды.
Функция ДобавитьКомандуСоздатьОбеспечивающийЗаказ(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВыпускПродукции) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ВыпускПродукции.ПолноеИмя();
		КомандаСоздатьНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.СоздатьОбеспечивающийЗаказ";
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ВыпускПродукции);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьУправлениеПроизводством";
		ПараметрыСоздания = ОбеспечениеВДокументахСервер.ПараметрыСозданияОбеспечивающегоЗаказа(
			КомандаСоздатьНаОсновании.ДополнительныеПараметры);
		ПараметрыСоздания.ИмяМенеджераДокумента = "ВыпускПродукции";
		ПараметрыСоздания.ИмяФормы = "Документ.ВыпускПродукции.ФормаОбъекта";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Параметры создания на основании обеспечивающего заказа.
// Возвращаемое значение:
// см. ОбеспечениеВДокументахСервер.ПараметрыОтбораТоваровДляСозданияОбеспечивающиегоЗаказа
Функция ПараметрыСозданияНаОснованииОбеспечивающегоЗаказа() Экспорт
	
	ПараметрыТаблицыТовары = ОбеспечениеВДокументахСервер.ПараметрыОтбораТоваровДляСозданияОбеспечивающиегоЗаказа();
	ПараметрыТаблицыТовары.ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Товар);
	ПараметрыТаблицыТовары.ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
	ПараметрыТаблицыТовары.ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Работа);
	ПараметрыТаблицыТовары.ОдинСклад = Истина;
	Возврат ПараметрыТаблицыТовары;
	
КонецФункции

#Область Печать

// Возвращает правила печати печатной формы Задания на отбор (размещение) товаров.
//
// Возвращаемое значение:
//	Структура - состав свойств см. Обработки.ПечатьЗаданияНаОтборРазмещениеТоваров.ДобавитьКомандуПечати.
//
Функция ПравилаПечатиЗаданияНаОтборРазмещение() Экспорт
	
	ПравилаПечатиЗадания = Обработки.ПечатьЗаданияНаОтборРазмещениеТоваров.ПравилаПечатиЗаданияНаОтборРазмещение();
	ПравилаПечатиЗадания.ОперацияПоступления = Истина;
	ПравилаПечатиЗадания.СкладыВТЧ = Истина;
	
	Возврат ПравилаПечатиЗадания;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаСписка" Тогда
		СтандартнаяОбработка = Ложь;
		Если ПравоДоступа("Добавление", Метаданные.Документы.ВыпускПродукции) Тогда
			ВыбраннаяФорма = "ФормаСпискаДокументов";
		Иначе
			ВыбраннаяФорма = "ФормаСписка";
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает параметры настройки счетов учета в документе.
// 
// Возвращаемое значение:
//  ПараметрыНастройки - Параметры настройки счетов учета (См. НастройкаСчетовУчетаСервер.ПараметрыНастройкиСчетаУчета).
//
Функция ПараметрыНастройкиСчетовУчета(НаправлениеВыпуска) Экспорт
	
	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ДоступностьПоОперации = НаправлениеВыпуска = Перечисления.ХозяйственныеОперации.ВыпускПродукцииВПодразделение;
	
	ПараметрыНастройки.ПутьКДанным = "Объект.Товары";
	ПараметрыНастройки.ТипСтатьи = "ТипСтатьи";
	
	// Элементы формы, которые используются для настройки.
	ПараметрыНастройки.ЭлементыФормы.Добавить("ТоварыПредставлениеОтраженияОперации");
	
	Возврат ПараметрыНастройки;
	
КонецФункции

// Возвращает параметры выбора статей и аналитик.
// 
// Возвращаемое значение:
//  ПараметрыВыбора - Параметры выбора статей и аналитик (См. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики).
//
Функция ПараметрыВыбораСтатейИАналитик(НаправлениеВыпуска) Экспорт
	
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ДоступностьПоОперации = НаправлениеВыпуска = Перечисления.ХозяйственныеОперации.ВыпускПродукцииВПодразделение;
	ПараметрыВыбора.ПутьКДанным = "Объект.Товары";
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьи";
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	
	ПараметрыВыбора.УсловияДоступностиСтатьиВСтроках.Вставить("СписатьНаРасходы", Истина);
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ТоварыСтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("ТоварыАналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("ТоварыАналитикаАктивовПассивов");
	
	Возврат ПараметрыВыбора;
	
КонецФункции

#Область НаправленияДеятельности

// см. НаправленияДеятельностиСервер.ПорядокОбработкиДокументаПриИзмененииНаправленияДеятельности
Функция ПорядокОбработкиДокументаПриИзмененииНаправленияДеятельности(Форма) Экспорт
	
	ПорядокОбработкиДокумента = НаправленияДеятельностиСервер.ПорядокОбработкиДокументаПриИзмененииНаправленияДеятельности();
	ПорядокОбработкиДокумента.ИменаТабличныхЧастейДляОчисткиНекорректныхНазначений = "Товары";
	ТаблицаУсловий = НаправленияДеятельностиСервер.УсловияОбработкиНазначенийВСтроках("ТипНоменклатуры");
	ПорядокОбработкиДокумента.УсловияОбработкиСтрок.Вставить("Товары", ТаблицаУсловий);
	
	Возврат ПорядокОбработкиДокумента;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Проведение

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                  			 КАК Дата,
	|	ДанныеДокумента.Номер                                	 		 КАК Номер,
	|	ДанныеДокумента.Склад                                 			 КАК Склад,
	|	ДанныеДокумента.Подразделение                         			 КАК Подразделение,
	|	ЕСТЬNULL(ДанныеДокумента.Подразделение.ИспользуетсяСписаниеЗатратНаВыпуск, ЛОЖЬ) КАК ИспользуетсяСписаниеЗатрат,
	|	ЕСТЬNULL(ДанныеДокумента.Подразделение.ВариантОбособленногоУчетаТоваров, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПустаяСсылка)) КАК ВариантОбособленногоУчетаТоваров,
	|	ДанныеДокумента.Организация                           			 КАК Организация,
	|	ДанныеДокумента.Организация.ВалютаРегламентированногоУчета       КАК ВалютаРегламентированногоУчета,
	|	ДанныеДокумента.Распоряжение                          			 КАК Распоряжение,
	|	ДанныеДокумента.Валюта                                			 КАК Валюта,
	|	ДанныеДокумента.Ссылка                                			 КАК Ссылка,
	|	ДанныеДокумента.ВыпускПоРаспоряжениям                 			 КАК ВыпускПоРаспоряжениям,
	|	ДанныеДокумента.НаправлениеВыпуска                    			 КАК НаправлениеВыпуска,
	|	ДанныеДокумента.НаправлениеДеятельности               			 КАК НаправлениеДеятельности,
	|	ДанныеДокумента.ВыпускПодДеятельность                 			 КАК НалогообложениеНДС,
	|	ДанныеДокумента.Ответственный         							 КАК Ответственный,
	|	ДанныеДокумента.Комментарий           							 КАК Комментарий,
	|	ДанныеДокумента.ПометкаУдаления       							 КАК ПометкаУдаления,
	|	ДанныеДокумента.Проведен              							 КАК Проведен,
	|	ДанныеДокумента.ВариантПриемкиТоваров							 КАК ВариантПриемкиТоваров
	|ИЗ
	|	Документ.ВыпускПродукции КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Дата",                             Реквизиты.Дата);
	Запрос.УстановитьПараметр("Период",                           Реквизиты.Дата);
	Запрос.УстановитьПараметр("Ссылка",                           Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Подразделение",                    Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Организация",                      Реквизиты.Организация);
	Запрос.УстановитьПараметр("Распоряжение",                     Реквизиты.Распоряжение);
	Запрос.УстановитьПараметр("ПустаяСерия",                      Справочники.СерииНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("НаправлениеВыпуска",               Реквизиты.НаправлениеВыпуска);
	Запрос.УстановитьПараметр("Валюта",                           Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",   Реквизиты.ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",            Перечисления.ХозяйственныеОперации.ВыпускПродукции);
	Запрос.УстановитьПараметр("ВыпускПоРаспоряжениям",            Реквизиты.ВыпускПоРаспоряжениям);
	Запрос.УстановитьПараметр("НалогообложениеНДС",               Реквизиты.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета",
								ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ПустойКлючСвязи",                  Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	Запрос.УстановитьПараметр("ИспользуетсяСписаниеЗатрат",       Реквизиты.ИспользуетсяСписаниеЗатрат);
	Запрос.УстановитьПараметр("Склад",                            Реквизиты.Склад);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",          Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("Номер",                            Реквизиты.Номер);
	Запрос.УстановитьПараметр("НомерНаПечать",       	          ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	Запрос.УстановитьПараметр("Ответственный",                    Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",          ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ВыпускПродукции"));
	Запрос.УстановитьПараметр("Комментарий",                      Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("ПометкаУдаления",                  Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("Проведен",                         Реквизиты.Проведен);
	Запрос.УстановитьПараметр("АналитическийУчетПоГруппамПродукции",
								ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции"));
	
	ИнформацияПоПодразделению = "";
	Если ЗначениеЗаполнено(Реквизиты.Подразделение) Тогда
		ШаблонСтроки = "ru = 'Выпуск продукции из ""%1""';
						|en = 'Product release from ""%1""'"; // @НСтр
		ИнформацияПоПодразделению = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСтроки, Реквизиты.Подразделение);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоПодразделению", ИнформацияПоПодразделению);
	
	Запрос.УстановитьПараметр("ВариантОбособленногоУчетаТоваров", Реквизиты.ВариантОбособленногоУчетаТоваров);
	
	НакладнаяЯвляетсяРаспоряжением = ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(Реквизиты.ВариантПриемкиТоваров);
	Запрос.УстановитьПараметр("НакладнаяЯвляетсяРаспоряжением", НакладнаяЯвляетсяРаспоряжением);
	
	ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("УчетнаяПолитикаФинансовогоУчета",
		Запрос.Параметры.Организация,
		Запрос.Параметры.Дата);
	
	УчетГотовойПродукцииПоПлановойСтоимости = ?(ПараметрыУчетнойПолитики <> Неопределено,
		ПараметрыУчетнойПолитики["УчетГотовойПродукцииПоПлановойСтоимости"], Ложь);
	Запрос.УстановитьПараметр("УчетГотовойПродукцииПоПлановойСтоимости", УчетГотовойПродукцииПоПлановойСтоимости);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Запрос.Параметры.Валюта,
		Неопределено,
		Запрос.Параметры.Дата,
		Запрос.Параметры.Организация);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр", Коэффициенты.КоэффициентПересчетаВВалютуУпр);
	
КонецПроцедуры

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;
	
	Если ИмяРегистра = "ТоварыКПоступлению" Тогда
	//++ НЕ УТКА
		ИсточникиДанных.Вставить("Товары.Распоряжение");
	//-- НЕ УТКА

	//++ Устарело_Переработка24
	ИначеЕсли ИмяРегистра = "УслугиДавальцуКОформлению" Тогда
		ИсточникиДанных.Вставить("Товары.Назначение");
	//-- Устарело_Переработка24
	КонецЕсли;

	Возврат ИсточникиДанных;

КонецФункции

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитики = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Назначение КАК Назначение,
	|	Таблица.Серия КАК Серия,
	|	Таблица.Склад КАК Склад
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Назначение КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ &ПустаяСерия
	|		КОНЕЦ КАК Серия,
	|		&Подразделение КАК Склад
	|	ИЗ
	|		Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|				И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|				И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	|				И ТаблицаТовары.Назначение = Аналитика.Назначение
	|				И ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|					ТОГДА ТаблицаТовары.Серия = Аналитика.Серия
	|					ИНАЧЕ &ПустаяСерия = Аналитика.Серия
	|			   	КОНЕЦ
	|				И (&Подразделение = Аналитика.МестоХранения)
	|	ГДЕ
	|		Аналитика.Номенклатура ЕСТЬ NULL 
	|		И ТаблицаТовары.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Инициализация ключей в подразделении получаете при выпуске в подразделение (с назначением).
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Назначение     КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ &ПустаяСерия
	|		КОНЕЦ                         КАК Серия,
	|		ТаблицаТовары.Подразделение   КАК Склад
	|	ИЗ
	|		Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|				И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|				И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	|				И ТаблицаТовары.Назначение = Аналитика.Назначение
	|				И ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|					ТОГДА ТаблицаТовары.Серия = Аналитика.Серия
	|					ИНАЧЕ &ПустаяСерия = Аналитика.Серия
	|			   	КОНЕЦ
	|				И ТаблицаТовары.Подразделение = Аналитика.МестоХранения
	|	ГДЕ
	|		Аналитика.Номенклатура ЕСТЬ NULL 
	|		И ТаблицаТовары.Ссылка = &Ссылка
	|		И &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Инициализация ключей в подразделении получаете при выпуске в подразделение (без назначениея).
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		&ПустоеНазначение            КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ &ПустаяСерия
	|		КОНЕЦ                         КАК Серия,
	|		ТаблицаТовары.Подразделение   КАК Склад
	|	ИЗ
	|		Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|				И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|				И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	|				И &ПустоеНазначение = Аналитика.Назначение
	|				И ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|					ТОГДА ТаблицаТовары.Серия = Аналитика.Серия
	|					ИНАЧЕ &ПустаяСерия = Аналитика.Серия
	|			   	КОНЕЦ
	|				И ТаблицаТовары.Подразделение = Аналитика.МестоХранения
	|	ГДЕ
	|		Аналитика.Номенклатура ЕСТЬ NULL 
	|		И ТаблицаТовары.Ссылка = &Ссылка
	|		И &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Назначение КАК Назначение,
	|		&ПустаяСерия КАК Серия,
	|		&Подразделение КАК Склад
	|	ИЗ
	|		Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|				И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|				И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	|				И ТаблицаТовары.Назначение = Аналитика.Назначение
	|				И &ПустаяСерия = Аналитика.Серия
	|				И (&Подразделение = Аналитика.МестоХранения)
	|	ГДЕ
	|		Аналитика.Номенклатура ЕСТЬ NULL 
	|		И ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		&ПустоеНазначение КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ &ПустаяСерия
	|		КОНЕЦ КАК Серия,
	|		&Подразделение КАК Склад
	|	ИЗ
	|		Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|				И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|				И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	|				И &ПустоеНазначение = Аналитика.Назначение
	|				И ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|					ТОГДА ТаблицаТовары.Серия = Аналитика.Серия
	|					ИНАЧЕ &ПустаяСерия = Аналитика.Серия
	|				КОНЕЦ
	|				И (&Подразделение = Аналитика.МестоХранения)
	|	ГДЕ
	|		Аналитика.Номенклатура ЕСТЬ NULL 
	|		И ТаблицаТовары.Ссылка = &Ссылка
	|		И НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Ключи.Номенклатура КАК Номенклатура,
	|		Ключи.Характеристика КАК Характеристика,
	|		&ПустоеНазначение КАК Назначение,
	|		Ключи.Серия КАК Серия,
	|		Ключи.МестоХранения КАК Склад
	|	ИЗ
	|		Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|			ПО ТаблицаТовары.АналитикаУчетаНоменклатуры = Ключи.Ссылка
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО Аналитика.Номенклатура = Ключи.Номенклатура
	|				И Аналитика.Характеристика = Ключи.Характеристика
	|				И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	|				И Аналитика.Серия = Ключи.Серия
	|				И Аналитика.МестоХранения = Ключи.МестоХранения
	|				И Аналитика.Назначение = &ПустоеНазначение
	|	ГДЕ
	|		Аналитика.Номенклатура ЕСТЬ NULL 
	|		И ТаблицаТовары.Ссылка = &Ссылка
	|		И НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
	|
	//++ НЕ УТКА
	
	//++ Устарело_Переработка24
	
	// Аналитика учета у давальца
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Назначение КАК Назначение,
	|		&ПустаяСерия КАК Серия,
	|		ЗаказДавальца.Подразделение КАК Склад
	|	ИЗ
	|		Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказДавальца КАК ЗаказДавальца
	|			ПО ЗаказДавальца.Ссылка = ТаблицаТовары.Назначение.Заказ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО Аналитика.Номенклатура = ТаблицаТовары.Номенклатура
	|			И Аналитика.Характеристика = ТаблицаТовары.Характеристика
	|			И Аналитика.МестоХранения = ЗаказДавальца.Подразделение
	|			И Аналитика.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|			И Аналитика.Назначение = ТаблицаТовары.Назначение
	|			И Аналитика.Серия = &ПустаяСерия
	|	ГДЕ
	|		Аналитика.Номенклатура ЕСТЬ NULL 
	|		И ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ПередатьДавальцу
	|
	// Аналитика учета у давальца без назначения
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		&ПустаяСерия КАК Серия,
	|		ЗаказДавальца.Подразделение КАК Склад
	|	ИЗ
	|		Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказДавальца КАК ЗаказДавальца
	|			ПО ЗаказДавальца.Ссылка = ТаблицаТовары.Назначение.Заказ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО Аналитика.Номенклатура = ТаблицаТовары.Номенклатура
	|			И Аналитика.Характеристика = ТаблицаТовары.Характеристика
	|			И Аналитика.МестоХранения = ЗаказДавальца.Подразделение
	|			И Аналитика.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|			И Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И Аналитика.Серия = &ПустаяСерия
	|	ГДЕ
	|		Аналитика.Номенклатура ЕСТЬ NULL 
	|		И ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ПередатьДавальцу
	|		И НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
	//-- Устарело_Переработка24
	
	//-- НЕ УТКА
	|	) КАК Таблица
	|");
	
	ЗапросАналитики.УстановитьПараметр("Ссылка",        Запрос.Параметры.Ссылка);
	ЗапросАналитики.УстановитьПараметр("Подразделение", Запрос.Параметры.Подразделение);
	ЗапросАналитики.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоНазначениям", Запрос.Параметры.УчитыватьСебестоимостьТоваровПоНазначениям);
	ЗапросАналитики.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	ЗапросАналитики.УстановитьПараметр("ПустоеНазначение", Справочники.Назначения.ПустаяСсылка());
	ЗапросАналитики.УстановитьПараметр("НаправлениеВыпуска", Запрос.Параметры.НаправлениеВыпуска);
	
	Выборка = ЗапросАналитики.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры


Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""Товары"" 								КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 			КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО							КАК Поставщик,
	|	НЕОПРЕДЕЛЕНО							КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО 							КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаДокумента.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Назначение.ВидДеятельностиНДС
	|		ИНАЧЕ ДанныеДокумента.ВыпускПодДеятельность
	|	КОНЕЦ 									КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры В
	|		  (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		  И НЕ ТаблицаДокумента.СписатьНаРасходы
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)) <>
	|		  ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|			ТОГДА Статьи.ВидЦенностиНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ                               	КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|				И &ФИФОСкользящаяОценка
	|			ТОГДА ТаблицаДокумента.КодСтроки
	|		ИНАЧЕ 0
	|	КОНЕЦ									КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО СпрНоменклатура.Ссылка = ТаблицаДокумента.Номенклатура
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|		ПО ТаблицаДокумента.СтатьяРасходов = Статьи.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ВтТаблицаТовары"; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки           КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика        КАК Характеристика,
	|	ТаблицаТовары.Спецификация          КАК Спецификация,
	|	ТаблицаТовары.Серия                 КАК Серия,
	|	ТаблицаТовары.СтатусУказанияСерий   КАК СтатусУказанияСерий,
	|	ТаблицаТовары.ВидЗапасов            КАК ВидЗапасов,
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Количество            КАК Количество,
	|	ТаблицаТовары.Сумма                 КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма*&КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаУпр,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма*&КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ТаблицаТовары.ТипСтоимости          КАК ТипСтоимости,
	|	ТаблицаТовары.КодСтроки             КАК КодСтроки,
	//++ Устарело_Переработка24
	|	ТаблицаТовары.ПередатьДавальцу      КАК ПередатьДавальцу,
	//-- Устарело_Переработка24
	|	ТаблицаТовары.Распоряжение          КАК Распоряжение,
	// аналитика учета номенклатуры на складе-получателе или подразделении-получателе
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики КАК АналитикаУчетаНоменклатурыБезНазначения,
	// аналитика учета номенклатуры в подразделении-отправителе
	|	АналитикаВПодразделении.КлючАналитики    КАК АналитикаУчетаВПодразделении,
	|	АналитикаВПодразделенииБезСерии.КлючАналитики    КАК АналитикаУчетаВПодразделенииБезСерии,
	|	КлючиПодразделенияБезНазначения.КлючАналитики    КАК АналитикаУчетаВПодразделенииБезНазначения,
	//++ НЕ УТКА

	//++ Устарело_Переработка24
	|	АналитикаДавальца.КлючАналитики     			 КАК АналитикаУчетаУДавальца,
	|	АналитикаДавальцаБезНазначения.КлючАналитики	 КАК АналитикаУчетаУДавальцаБезНазначения,
	//-- Устарело_Переработка24

	//-- НЕ УТКА
	|	ТаблицаТовары.Назначение            КАК Назначение,
	|	ТаблицаТовары.СтатьяРасходов        КАК СтатьяРасходовАктивов,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|		ТОГДА ТаблицаТовары.СтатьяРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов     КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|		ТОГДА ТаблицаТовары.СтатьяРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяАктивовПассивов,
	|	ТаблицаТовары.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	ТаблицаТовары.СписатьНаРасходы      КАК СписатьНаРасходы,
	|	ТаблицаТовары.Склад                 КАК Склад,
	|	ТаблицаТовары.Склад.ЦеховаяКладовая КАК ЦеховаяКладовая,
	|	ТаблицаТовары.Подразделение         КАК Подразделение,
	|	ТаблицаТовары.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаТовары.ИдентификаторСтроки   КАК ИдентификаторСтроки,
	|	ТаблицаТовары.НастройкаСчетовУчета  КАК НастройкаСчетовУчета,
	|	ВЫБОР 
	|		КОГДА &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|			ТОГДА ТаблицаТовары.Склад
	|		ИНАЧЕ ТаблицаТовары.Подразделение
	|	КОНЕЦ                               КАК Получатель,
	|	ВЫБОР КОГДА ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			И &Дата >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                               КАК ИспользоватьОрдернуюСхему,
	|	АналитикаРасчетов.КлючАналитики     КАК АналитикаУчетаПоПартнерам
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаТовары.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаБезНазначения.СтатьяКалькуляции
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.МестоХранения = АналитикаБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаВПодразделении
	|	ПО
	|		ТаблицаТовары.Номенклатура = АналитикаВПодразделении.Номенклатура
	|		И ТаблицаТовары.Характеристика = АналитикаВПодразделении.Характеристика
	|		И ТаблицаТовары.Назначение = АналитикаВПодразделении.Назначение
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаВПодразделении.СтатьяКалькуляции
	|		И (&Подразделение = АналитикаВПодразделении.МестоХранения)
	|		И ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия = АналитикаВПодразделении.Серия
	|			ИНАЧЕ &ПустаяСерия = АналитикаВПодразделении.Серия
	|		   КОНЕЦ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаВПодразделенииБезСерии
	|	ПО
	|		ТаблицаТовары.Номенклатура = АналитикаВПодразделенииБезСерии.Номенклатура
	|		И ТаблицаТовары.Характеристика = АналитикаВПодразделенииБезСерии.Характеристика
	|		И ТаблицаТовары.Назначение = АналитикаВПодразделенииБезСерии.Назначение
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаВПодразделенииБезСерии.СтатьяКалькуляции
	|		И &Подразделение = АналитикаВПодразделенииБезСерии.МестоХранения
	|		И &ПустаяСерия = АналитикаВПодразделенииБезСерии.Серия
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПодразделенияБезНазначения
	|	ПО
	|		АналитикаВПодразделении.Номенклатура = КлючиПодразделенияБезНазначения.Номенклатура
	|		И АналитикаВПодразделении.Характеристика = КлючиПодразделенияБезНазначения.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПодразделенияБезНазначения.СтатьяКалькуляции
	|		И АналитикаВПодразделении.Серия = КлючиПодразделенияБезНазначения.Серия
	|		И АналитикаВПодразделении.МестоХранения = КлючиПодразделенияБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)= КлючиПодразделенияБезНазначения.Назначение
	|
	//++ НЕ УТКА

	//++ Устарело_Переработка24
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказДавальца КАК ЗаказДавальца
	|		ПО ЗаказДавальца.Ссылка = ТаблицаТовары.Назначение.Заказ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаДавальца
	|	ПО
	|		НЕ ЗаказДавальца.Ссылка ЕСТЬ NULL
	|		И АналитикаДавальца.Номенклатура = ТаблицаТовары.Номенклатура
	|		И АналитикаДавальца.Характеристика = ТаблицаТовары.Характеристика
	|		И АналитикаДавальца.Назначение = ТаблицаТовары.Назначение
	|		И АналитикаДавальца.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|		И АналитикаДавальца.МестоХранения = ЗаказДавальца.Подразделение
	|		И АналитикаДавальца.Серия = &ПустаяСерия
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаДавальцаБезНазначения
	|	ПО
	|		НЕ ЗаказДавальца.Ссылка ЕСТЬ NULL
	|		И АналитикаДавальцаБезНазначения.Номенклатура = ТаблицаТовары.Номенклатура
	|		И АналитикаДавальцаБезНазначения.Характеристика = ТаблицаТовары.Характеристика
	|		И АналитикаДавальцаБезНазначения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И АналитикаДавальцаБезНазначения.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|		И АналитикаДавальцаБезНазначения.МестоХранения = ЗаказДавальца.Подразделение
	|		И АналитикаДавальцаБезНазначения.Серия = &ПустаяСерия
	|
	//-- Устарело_Переработка24

	//-- НЕ УТКА
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаТовары.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""Товары""
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|		ПО АналитикаРасчетов.Организация = &Организация
	|		И АналитикаРасчетов.Партнер = ТаблицаТовары.ВидЗапасов.ВладелецТовара
	|		И АналитикаРасчетов.Контрагент = ТаблицаТовары.ВидЗапасов.Контрагент
	|		И АналитикаРасчетов.Договор = ТаблицаТовары.ВидЗапасов.Договор
	|		И АналитикаРасчетов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыпускПродукции";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтТаблицаТовары.КодСтроки                               КАК КодСтроки,
	|	&Дата                                                   КАК Период,
	|	ВтТаблицаТовары.АналитикаУчетаНоменклатуры              КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                            КАК Организация,
	|	ВтТаблицаТовары.Распоряжение                            КАК Распоряжение,
	|	ВтТаблицаТовары.Количество                              КАК Количество,
	|	ВтТаблицаТовары.ВидЗапасов                              КАК ВидЗапасов,
	|	ВтТаблицаТовары.Спецификация                            КАК Спецификация,
	|	&Подразделение                                          КАК Подразделение,
	|	ВтТаблицаТовары.СтатьяРасходовАктивов                   КАК СтатьяРасходов,
	|	ВтТаблицаТовары.АналитикаРасходов                       КАК АналитикаРасходов,
	|	ВтТаблицаТовары.АналитикаАктивовПассивов                КАК АналитикаАктивовПассивов,
	
	|	ВЫБОР ИСТИНА
	//++ НЕ УТКА
	|		КОГДА ИСТИНА ТОГДА ВтТаблицаТовары.Распоряжение.Распоряжение
	//-- НЕ УТКА
	|		КОГДА ИСТИНА ТОГДА НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                   КАК Заказ,
	
	|	(ВЫБОР КОГДА ВтТаблицаТовары.СписатьНаРасходы ТОГДА ВтТаблицаТовары.АналитикаУчетаВПодразделении
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КОНЕЦ) КАК АналитикаУчетаПродукции
	|ИЗ
	|	ВтТаблицаТовары КАК ВтТаблицаТовары
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	//++ Устарело_Переработка24
	|	ИЛИ НЕ ВтТаблицаТовары.ПередатьДавальцу
	//-- Устарело_Переработка24
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	// приход с "-" для позиций по фиксированной стоимости
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Дата КАК Период,
	|	&Дата КАК ДатаРегистратора,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	Строки.Номенклатура,
	|	Строки.Характеристика,
	|	НЕОПРЕДЕЛЕНО КАК Серия,
	|	Строки.АналитикаУчетаВПодразделенииБезСерии КАК АналитикаУчетаНоменклатуры,
	|	Строки.Назначение КАК Назначение,
	|	-Строки.Количество КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК Строки
	|ГДЕ
	|	Строки.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// выпуск в подразделение
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Дата КАК Период,
	|	&Дата КАК ДатаРегистратора,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Подразделение                         КАК Подразделение,
	|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                        КАК Характеристика,
	|	ТаблицаТовары.Серия                                 КАК Серия,
	|	АналитикаВПодразделении.КлючАналитики               КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Назначение                            КАК Назначение,
	|	ТаблицаТовары.Количество                            КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаВПодразделении
	|	ПО
	|		ТаблицаТовары.Номенклатура = АналитикаВПодразделении.Номенклатура
	|		И ТаблицаТовары.Характеристика = АналитикаВПодразделении.Характеристика
	|		И ТаблицаТовары.Назначение = АналитикаВПодразделении.Назначение
	//++ НЕ УТ
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаВПодразделении.СтатьяКалькуляции
	//-- НЕ УТ	
	|		И ТаблицаТовары.Подразделение = АналитикаВПодразделении.МестоХранения
	|		И ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия = АналитикаВПодразделении.Серия
	|			ИНАЧЕ &ПустаяСерия = АналитикаВПодразделении.Серия
	|		КОНЕЦ
	|
	|ГДЕ
	|	&НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|	И НЕ ТаблицаТовары.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Дата КАК Период,
	|	&Дата КАК ДатаРегистратора,
	|	&Организация КАК Организация,
	|	ТаблицаСерии.Подразделение,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	АналитикаВПодразделении.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.ВыпускПродукции.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаТовары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|			И ТаблицаСерии.Склад = ТаблицаТовары.Склад
	|			И ТаблицаСерии.Подразделение = ТаблицаТовары.Подразделение
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаВПодразделении
	|	ПО
	|		ТаблицаСерии.Номенклатура = АналитикаВПодразделении.Номенклатура
	|		И ТаблицаСерии.Характеристика = АналитикаВПодразделении.Характеристика
	|		И ТаблицаСерии.Назначение = АналитикаВПодразделении.Назначение
	//++ НЕ УТ
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаВПодразделении.СтатьяКалькуляции
	//-- НЕ УТ	
	|		И ТаблицаСерии.Подразделение = АналитикаВПодразделении.МестоХранения
	|		И &ПустаяСерия = АналитикаВПодразделении.Серия
	|ГДЕ
	|	&НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	| 	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Подразделение,
	|	ТаблицаСерии.Серия,
	|	АналитикаВПодразделении.КлючАналитики,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПроизводственныхЗатрат";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	// приход с "-" для позиций по фиксированной стоимости
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	&Дата                                    КАК Период,
	|	&Дата                                    КАК ДатаРегистратора,
	|	&Организация                             КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаВПодразделенииБезСерии КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов                 КАК ВидЗапасов,
	|	-ТаблицаТовары.Количество                КАК Количество,
	|	-ТаблицаТовары.СуммаУпр                  КАК Стоимость,
	|	-ТаблицаТовары.СуммаУпр                  КАК СтоимостьБезНДС,
	|	ТаблицаТовары.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|	&Ссылка                                  КАК ДокументПоступления,
	|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
	|	0                                        КАК ПостояннаяРазница,
	|	0                                        КАК ВременнаяРазница,
	|	-ТаблицаТовары.СуммаРегл                 КАК СтоимостьРегл,
	|	ТаблицаТовары.ВидДеятельностиНДС         КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО 							 КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО 							 КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО 							 КАК ПодразделениеРасходов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|	И НЕ &ПартионныйУчетВерсии22
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход, если выпуск продукции в подразделение
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	&Дата                                    КАК Период,
	|	&Дата                                    КАК ДатаРегистратора,
	|	&Организация                             КАК Организация,
	|	(ВЫБОР КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА ТаблицаТовары.АналитикаУчетаВПодразделении
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатуры КОНЕЦ) КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаТовары.Количество                 КАК Количество,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьБезНДС,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	&Ссылка КАК ДокументПоступления,
	|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ТаблицаТовары.СуммаРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьРегл,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеРасходов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И НЕ &ПартионныйУчетВерсии22
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход, если выпуск работ со списанием на затраты
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)   	КАК ВидДвижения,
	|	&Дата                                    	КАК Период,
	|	&Дата                                    	КАК ДатаРегистратора,
	|	&Организация                             	КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаВПодразделении 	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов                 	КАК ВидЗапасов,
	|	ТаблицаТовары.Количество                 	КАК Количество,
	|	0                                        	КАК Стоимость,
	|	0                                        	КАК СтоимостьБезНДС,
	|	ТаблицаТовары.АналитикаУчетаПартий       	КАК АналитикаУчетаПартий,
	|	&Ссылка                                  	КАК ДокументПоступления,
	|	&Ссылка                           КАК ДокументИсточник,
	|	0                                        	КАК ПостояннаяРазница,
	|	0                                        	КАК ВременнаяРазница,
	|	0                                        	КАК СтоимостьРегл,
	|	ТаблицаТовары.ВидДеятельностиНДС           	КАК НалогообложениеНДС,
	|	ТаблицаТовары.СтатьяРасходовАктивов		 	КАК СтатьяРасходовСписания,
	|	ТаблицаТовары.АналитикаРасходов 		 	КАК АналитикаРасходов,
	|	ТаблицаТовары.Подразделение 			 	КАК ПодразделениеРасходов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И ТаблицаТовары.СписатьНаРасходы
	|	И НЕ &ПартионныйУчетВерсии22
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Дата                                       КАК Период,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                КАК Организация,
	|	ТаблицаТовары.ВидЗапасов                    КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ТаблицаТовары.Количество                    КАК Количество,
	|	0                                           КАК КоличествоПоРНПТ,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	&ХозяйственнаяОперация                      КАК ХозяйственнаяОперация,
	|	ИСТИНА                                      КАК Первичное
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Дата                          КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура     КАК Номенклатура,
	|	ТаблицаТовары.Характеристика   КАК Характеристика,
	|	ТаблицаТовары.Серия            КАК Серия,
	|	ТаблицаТовары.Назначение       КАК Назначение,
	|	ТаблицаТовары.ВидЗапасов       КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		ТаблицаТовары.ВидЗапасов = ПоступленияТоваров.ВидЗапасов
	|		И ТаблицаТовары.Номенклатура = ПоступленияТоваров.Номенклатура
	|		И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика
	|		И ТаблицаТовары.Серия = ПоступленияТоваров.Серия
	|		И ТаблицаТовары.Назначение = ПоступленияТоваров.Назначение
	|		И (ПоступленияТоваров.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))
	|ГДЕ
	|	(ПоступленияТоваров.ВидЗапасов ЕСТЬ NULL 
	|	ИЛИ ПоступленияТоваров.ДатаПоступления < &Дата)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Назначение
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	&Дата                                      КАК Период,
	|	&Организация                               КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов                   КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий         КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьБезНДС,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ТаблицаТовары.СуммаРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьРегл,
	|	&Ссылка                                    КАК Регистратор,
	|	&Ссылка                                    КАК ДокументПоступления,
	|	&ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
	|	ИСТИНА                                     КАК Первичное,
	|	НЕОПРЕДЕЛЕНО                               КАК ДокументИсточник
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПартионныйУчетВерсии21
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	// Движение с "-" ПО производственным затратам с аналитикой подразделения-отправителя ЕСЛИ тип стоимости фиксированная
	// (не зависимо от направления выпуска, типа номенклатуры и вида запасов).
	|ВЫБРАТЬ
	|	0                                              КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                      КАК НомерСтрокиДокумента,
	|	&Дата                                          КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	&Организация                                   КАК Организация,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаУчетаВПодразделенииБезСерии
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаВПодразделенииБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ КАК РазделУчета,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА &АналитическийУчетПоГруппамПродукции
	|				 И НЕ ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|					ТОГДА ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО 											КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 											КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия) 		КАК ТипЗаписи,
	|
	|	-ТаблицаТовары.Количество                      КАК Количество,
	|	-ТаблицаТовары.СуммаУпр                        КАК Стоимость,
	|	-ТаблицаТовары.СуммаУпр                        КАК СтоимостьБезНДС,
	|	-ТаблицаТовары.СуммаРегл                       КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА -ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ                                          КАК СтоимостьУпр,
	|	0                                              КАК ПостояннаяРазница,
	|	0                                              КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорОрганизация,
	|	0                                              КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	""ВО""                                         КАК ИдентификаторСтроки,
	|	0                                              КАК КодСтроки,
	|	&Подразделение                                 КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                   КАК ДокументДвижения,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам        КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК КорНаправлениеДеятельности
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|	И НЕ (ЕСТЬNULL(ТаблицаТовары.ВидЗапасов.ТипЗапасов, Значение(Перечисление.ТипыЗапасов.ПустаяСсылка)) = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца) И &ПартионныйУчетВерсии22)
	|
	// Направления выпуска На склад
	// приход для товаров на раздел учета ТоварыНаСкладах с рассчитываемой стоимостью.
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	1                                          КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтрокиДокумента,
	|	&Дата                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	&Организация                               КАК Организация,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаТовары.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ КАК РазделУчета,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА ТаблицаТовары.ЦеховаяКладовая
	|				 И &АналитическийУчетПоГруппамПродукции
	|				 И НЕ ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|					ТОГДА ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|					ТОГДА &Подразделение
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО 											КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 											КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия) 		КАК ТипЗаписи,
	|
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ТаблицаТовары.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			И &УчетГотовойПродукцииПоПлановойСтоимости
	|			ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ                                      КАК СтоимостьУпр,
	|	0                                          КАК ПостояннаяРазница,
	|	0                                          КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                               КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                               КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорОрганизация,
	|	0                                          КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО                               КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                               КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаАктивовПассивов,
	|	""""                                   	   КАК ИдентификаторСтроки,
	|	ТаблицаТовары.КодСтроки                    КАК КодСтроки,
	|	&Подразделение                             КАК Подразделение,
	|	&Ссылка                                    КАК ДокументДвижения,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам    КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК КорНаправлениеДеятельности
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
	|	И ТаблицаТовары.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|
	// приход для товаров на раздел учета ТоварыНаСкладах с фиксированной стоимостью
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаТовары.НомерСтроки,
	|	&Дата,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Организация,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаТовары.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ КАК РазделУчета,
	|	ТаблицаТовары.ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА ТаблицаТовары.ЦеховаяКладовая
	|				 И &АналитическийУчетПоГруппамПродукции
	|				 И НЕ ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|					ТОГДА ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|					ТОГДА &Подразделение
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО 											КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 											КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия) 		КАК ТипЗаписи,
	|
	|	ТаблицаТовары.Количество,
	|	ВЫБОР КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|	 И &ПартионныйУчетВерсии22
	|		ТОГДА 0 ИНАЧЕ ТаблицаТовары.СуммаУпр КОНЕЦ,
	|	ВЫБОР КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|	 И &ПартионныйУчетВерсии22
	|		ТОГДА 0 ИНАЧЕ ТаблицаТовары.СуммаУпр КОНЕЦ,
	|	ВЫБОР КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|	 И &ПартионныйУчетВерсии22
	|		ТОГДА 0 ИНАЧЕ ТаблицаТовары.СуммаРегл КОНЕЦ,
	|	ВЫБОР КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|	 И &ПартионныйУчетВерсии22
	|		ТОГДА 0 ИНАЧЕ
	|		ВЫБОР
	|			КОГДА &УправленческийУчетОрганизаций
	|				ТОГДА ТаблицаТовары.СуммаУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	КОНЕЦ                                      КАК СтоимостьУпр,
	|	0,
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                               КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                               КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорОрганизация,
	|	0                                          КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО                               КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                               КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаАктивовПассивов,
	|	""""                                   	   КАК ИдентификаторСтроки,
	|	0                                          КАК КодСтроки,
	|	&Подразделение,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК КорНаправлениеДеятельности
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|
	// Направление выпуска В подразделение для товаров и работ без списания на расходы
	// приход на подразделение-получатель с рассчитываемой стоимостью.
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	3                                              КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                      КАК НомерСтрокиДокумента,
	|	&Дата                                          КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	&Организация                                   КАК Организация,
	|	(ВЫБОР КОГДА ТаблицаТовары.СписатьНаРасходы 
	|		ТОГДА ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ТаблицаТовары.АналитикаУчетаВПодразделении
	|			ИНАЧЕ ТаблицаТовары.АналитикаУчетаВПодразделенииБезНазначения
	|			КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|			ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения
	|			КОНЕЦ
	|	КОНЕЦ) КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ КАК РазделУчета,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|		 И ТаблицаТовары.ВидЗапасов.ГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.ВидЗапасов.ГруппаПродукции
	|		КОГДА &ПартионныйУчетВерсии22 И &АналитическийУчетПоГруппамПродукции
	|		 И НЕ ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО 											КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 											КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)			КАК ТипЗаписи,
	|
	|	ТаблицаТовары.Количество                        КАК Количество,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ТаблицаТовары.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			И &УчетГотовойПродукцииПоПлановойСтоимости
	|			ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ                                           КАК СтоимостьУпр,
	|	0                                               КАК ПостояннаяРазница,
	|	0                                               КАК ВременнаяРазница,
	|	(ВЫБОР КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение) КОНЕЦ) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	"""" КАК ИдентификаторСтроки,
	|	ТаблицаТовары.КодСтроки КАК КодСтроки,
	|	&Подразделение КАК Подразделение,
	|	&Ссылка КАК ДокументДвижения,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК КорНаправлениеДеятельности
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|
	// Приход на подразделение-получатель с фиксированной стоимостью, только если не списываем на расходы.
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	4,
	|	ТаблицаТовары.НомерСтроки,
	|	&Дата,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Организация,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ КАК РазделУчета,
	|	ТаблицаТовары.ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|					ТОГДА &Подразделение
	|				КОГДА &АналитическийУчетПоГруппамПродукции
	|				И НЕ ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|					ТОГДА ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО 											КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 											КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия) 		КАК ТипЗаписи,
	|
	|	ТаблицаТовары.Количество,
	|	ВЫБОР КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|	 И &ПартионныйУчетВерсии22
	|		ТОГДА 0 ИНАЧЕ ТаблицаТовары.СуммаУпр КОНЕЦ,
	|	ВЫБОР КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|	 И &ПартионныйУчетВерсии22
	|		ТОГДА 0 ИНАЧЕ ТаблицаТовары.СуммаУпр КОНЕЦ,
	|	ВЫБОР КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|	 И &ПартионныйУчетВерсии22
	|		ТОГДА 0 ИНАЧЕ ТаблицаТовары.СуммаРегл КОНЕЦ,
	|	ВЫБОР КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|	 И &ПартионныйУчетВерсии22
	|		ТОГДА 0 ИНАЧЕ
	|		ВЫБОР
	|			КОГДА &УправленческийУчетОрганизаций
	|				ТОГДА ТаблицаТовары.СуммаУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	КОНЕЦ                                      КАК СтоимостьУпр,
	|	0,
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	"""" КАК ИдентификаторСтроки,
	|	0 КАК КодСтроки,
	|	&Подразделение,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК КорНаправлениеДеятельности
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И НЕ ТаблицаТовары.СписатьНаРасходы
	|
	// списания на расходы, если тип стоимости Рассчитывается
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	5,
	|	ТаблицаТовары.НомерСтроки,
	|	&Дата,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация КАК Организация,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаУчетаВПодразделении
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаВПодразделенииБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = Значение(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ КАК РазделУчета,
	|	ТаблицаТовары.ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО												КАК Партия,
	|	НЕОПРЕДЕЛЕНО												КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО												КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО												КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО												КАК КорАналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			ТОГДА &Подразделение
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|		 И НЕ ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 														КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаТовары.ВидДеятельностиНДС							КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписаниеНаРасходы)	КАК ТипЗаписи,
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ТаблицаТовары.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			И &УчетГотовойПродукцииПоПлановойСтоимости
	|			ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ														КАК СтоимостьУпр,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию) КАК ХозяйственнаяОперация,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ТаблицаТовары.СтатьяРасходов КАК СтатьяРасходовСписания,
	|	ТаблицаТовары.АналитикаРасходов,
	|	ТаблицаТовары.СтатьяАктивовПассивов,
	|	ТаблицаТовары.АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяАктивовПассивов <> НЕОПРЕДЕЛЕНО
	|		ТОГДА ТаблицаТовары.ИдентификаторСтроки
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИдентификаторСтроки,
	|	0 КАК КодСтроки,
	|	ТаблицаТовары.Подразделение,
	|	&Ссылка КАК ДокументДвижения,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	&НаправлениеДеятельности КАК КорНаправлениеДеятельности
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
	|	И ТаблицаТовары.СписатьНаРасходы
	|
	//++ НЕ УТКА
	
	//++ Устарело_Переработка24
	
	// работы по выпуску давальческой продукции (только для партионного учета 2.2)
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	6                                              КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                      КАК НомерСтрокиДокумента,
	|	&Дата                                          КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	&Организация                                   КАК Организация,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаУчетаУДавальца
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаУДавальцаБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО                                           КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК Партия,
	|	ВЫБОР КОГДА &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			ТОГДА &Подразделение
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|		И НЕ ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО 											КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 											КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)			КАК ТипЗаписи,
	|
	|	ТаблицаТовары.Количество                        КАК Количество,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ТаблицаТовары.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			И &УчетГотовойПродукцииПоПлановойСтоимости
	|			ТОГДА ТаблицаТовары.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ                                           КАК СтоимостьУпр,
	|	0                                               КАК ПостояннаяРазница,
	|	0                                               КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	ТаблицаТовары.ВидЗапасов КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	"""" КАК ИдентификаторСтроки,
	|	ТаблицаТовары.КодСтроки КАК КодСтроки,
	|	&Подразделение КАК Подразделение,
	|	&Ссылка КАК ДокументДвижения,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|		И НЕ ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК КорНаправлениеДеятельности
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ПередатьДавальцу
	|	И &ПартионныйУчетВерсии22
	|
	//-- Устарело_Переработка24
	
	//-- НЕ УТКА
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтрокиДокумента
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Процедура ОформитьПоступлениеТоваровПоОдноходовке(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапросаДокумента =
	"ВЫБРАТЬ
	|	ИсточникДанных.Ссылка                       КАК Ссылка,
	|	ВЫБОР КОГДА НЕ ИсточникДанных.Ссылка.ВыпускПоРаспоряжениям ТОГДА
	|				НЕОПРЕДЕЛЕНО
	//++ НЕ УТКА
	|			ИНАЧЕ
	|				ИсточникДанных.Распоряжение.Распоряжение
	//-- НЕ УТКА
	|		КОНЕЦ                                   КАК Заказ,
	|	ИсточникДанных.Ссылка                       КАК Накладная,
	|	ЛОЖЬ                                        КАК Исправление,
	|	НЕОПРЕДЕЛЕНО                                КАК ИсправляемыйДокумент,
	|	ИсточникДанных.Ссылка.Дата                  КАК Дата,
	|	НЕОПРЕДЕЛЕНО                                КАК Договор,
	|	НЕОПРЕДЕЛЕНО                                КАК Соглашение,
	|	ИсточникДанных.Ссылка.ВариантПриемкиТоваров КАК ВариантПриемкиТоваров,
	|	ИсточникДанных.Ссылка.Склад                 КАК Склад,
	|	ВЫБОР КОГДА НЕ ИсточникДанных.Ссылка.ВыпускПоРаспоряжениям ТОГДА
	|				ИсточникДанных.Ссылка.Подразделение
	//++ НЕ УТКА
	|			ИНАЧЕ
	|				ИсточникДанных.Распоряжение.Подразделение
	//-- НЕ УТКА
	|		КОНЕЦ                                   КАК Отправитель,
	|	ИсточникДанных.Ссылка.НаправлениеВыпуска    КАК ХозяйственнаяОперация,
	|	ИсточникДанных.Номенклатура                 КАК Номенклатура,
	|	ИсточникДанных.Характеристика               КАК Характеристика,
	|	ИсточникДанных.Назначение                   КАК Назначение,
	|	ИсточникДанных.СтатусУказанияСерий          КАК СтатусУказанияСерий,
	|	ИсточникДанных.Ссылка.ВыпускПоРаспоряжениям
	|		И ИсточникДанных.КодСтроки = 0          КАК СверхЗаказа,
	|	ИсточникДанных.Серия                        КАК Серия,
	|	ИсточникДанных.Количество                   КАК Количество,
	|	ИсточникДанных.Ссылка.ВыпускПоРаспоряжениям КАК ПоступлениеПоЗаказам,
	|	ИСТИНА                                      КАК ЭтоНакладная,
	|	ЛОЖЬ                                        КАК ЭтоКорректировкаВнутриНакладной
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка В (&Ссылка)
	|		И ИсточникДанных.Ссылка.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)";
	
	ТекущийОбъектМетаданных = Метаданные.Документы.ВыпускПродукции;
	
	ДополнительныеПоляСоединенияССериями = Новый Массив();
	ДополнительныеПоляСоединенияССериями.Добавить("Подразделение");
	
	ПараметрыМодульногоПроведения = СкладыСервер.ПараметрыМодульногоПроведения();
	ПараметрыМодульногоПроведения.ИмяТЧСерии = "Серии";
	ПараметрыМодульногоПроведения.ДополнительныеПоляСоединенияССериями = ДополнительныеПоляСоединенияССериями;
	
	СкладыСервер.ОформитьПоступлениеТоваровПоОдноходовкеСНастройкойСоединенияСерий(
		Запрос,
		ТекстыЗапроса,
		Регистры,
		ТекстЗапросаДокумента,
		ТекущийОбъектМетаданных,
		ПараметрыМодульногоПроведения);
	
КонецПроцедуры

Процедура ЗапланироватьПоступлениеТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапросаДокумента =
	"ВЫБРАТЬ
	|	ИсточникДанных.Ссылка                       КАК Ссылка,
	|	ИсточникДанных.Ссылка                       КАК Накладная,
	|	ЛОЖЬ                                        КАК Исправление,
	|	НЕОПРЕДЕЛЕНО                                КАК ИсправляемыйДокумент,
	|	ВЫБОР КОГДА НЕ ИсточникДанных.Ссылка.ВыпускПоРаспоряжениям ТОГДА
	|				НЕОПРЕДЕЛЕНО
	//++ НЕ УТКА
	|			ИНАЧЕ
	|				ИсточникДанных.Распоряжение.Распоряжение
	//-- НЕ УТКА
	|		КОНЕЦ                                   КАК Заказ,
	|	
	|	ВЫБОР КОГДА ИсточникДанных.Ссылка.ДатаПоступления <> ДАТАВРЕМЯ(1, 1, 1) ТОГДА
	|				ИсточникДанных.Ссылка.ДатаПоступления
	|			ИНАЧЕ
	|				ИсточникДанных.Ссылка.Дата
	|		КОНЕЦ КАК Дата,
	|	
	|	НЕОПРЕДЕЛЕНО                                КАК Договор,
	|	НЕОПРЕДЕЛЕНО                                КАК Соглашение,
	|	ИсточникДанных.Ссылка.ВариантПриемкиТоваров КАК ВариантПриемкиТоваров,
	|	ИсточникДанных.Склад                        КАК Склад,
	|	ВЫБОР КОГДА НЕ ИсточникДанных.Ссылка.ВыпускПоРаспоряжениям
	|					ИЛИ ИсточникДанных.Ссылка.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным) ТОГДА
	|				ИсточникДанных.Ссылка.Подразделение
	//++ НЕ УТКА
	|			ИНАЧЕ
	|				ИсточникДанных.Распоряжение.Подразделение
	//-- НЕ УТКА
	|		КОНЕЦ                                   КАК Отправитель,
	|	ИсточникДанных.Ссылка.НаправлениеВыпуска    КАК ХозяйственнаяОперация,
	|	ИсточникДанных.Номенклатура                 КАК Номенклатура,
	|	ИсточникДанных.Характеристика               КАК Характеристика,
	|	ИсточникДанных.Назначение                   КАК Назначение,
	|	ИсточникДанных.СтатусУказанияСерий          КАК СтатусУказанияСерий,
	|	ИсточникДанных.Ссылка.ВыпускПоРаспоряжениям
	|		И ИсточникДанных.КодСтроки = 0          КАК СверхЗаказа,
	|	ИсточникДанных.Серия                        КАК Серия,
	|	ИсточникДанных.Количество                   КАК Количество,
	|	ИсточникДанных.Ссылка.ВыпускПоРаспоряжениям КАК ПоступлениеПоЗаказам,
	|	ИСТИНА                                      КАК ЭтоНакладная
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка В (&Ссылка)
	|		И ИсточникДанных.Ссылка.НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)";	
	
	СкладыСервер.ЗапланироватьПоступлениеТоваров(
		Запрос,
		ТекстыЗапроса,
		Регистры,
		ТекстЗапросаДокумента);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРаспоряженияНаСписаниеПоНормативам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РаспоряженияНаСписаниеПоНормативам";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	&Ссылка КАК Распоряжение,
	|	ТаблицаТоваров.КодСтроки КАК КодСтроки,
	|	(ВЫБОР КОГДА ТаблицаТоваров.СписатьНаРасходы ТОГДА ТаблицаТоваров.АналитикаУчетаВПодразделении
	|		ИНАЧЕ ТаблицаТоваров.АналитикаУчетаНоменклатуры КОНЕЦ) КАК АналитикаУчетаПродукции,
	|	ТаблицаТоваров.ВидЗапасов КАК КорВидЗапасов,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	(ВЫБОР &НаправлениеВыпуска
	|		КОГДА Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаТоваров.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ) КАК КорРазделУчета
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТоваров
	|ГДЕ
	|	НЕ &ВыпускПоРаспоряжениям
	|	И &ИспользуетсяСписаниеЗатрат";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	&Дата                                       КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Организация                                КАК Организация,
	|	ТаблицаТовары.Подразделение                 КАК Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаТовары.СтатьяРасходов                КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов             КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК ВидДеятельностиНДС,
	|	ТаблицаТовары.СуммаУпр                      КАК СуммаСНДС,
	|	ТаблицаТовары.СуммаУпр                      КАК СуммаБезНДС,
	|	ТаблицаТовары.СуммаУпр                      КАК СуммаБезНДСУпр,
	|	ТаблицаТовары.СуммаРегл                     КАК СуммаСНДСРегл,
	|	ТаблицаТовары.СуммаРегл                     КАК СуммаБезНДСРегл,
	|	0                                           КАК ПостояннаяРазница,
	|	0                                           КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	""""                                        КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО                                КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СписатьНаРасходы
	|	И ТаблицаТовары.СтатьяРасходов <> НЕОПРЕДЕЛЕНО
	|	И ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Дата                                       КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Организация                                КАК Организация,
	|	ТаблицаТовары.Подразделение                 КАК Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаТовары.СтатьяАктивовПассивов         КАК Статья,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.АналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.СтатьиБезАналитики.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТовары.АналитикаАктивовПассивов
	|	КОНЕЦ                                       КАК Аналитика,
	|	ТаблицаТовары.СуммаУпр                      КАК Сумма
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СписатьНаРасходы
	|	И ТаблицаТовары.СтатьяАктивовПассивов <> НЕОПРЕДЕЛЕНО
	|	И ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|";
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы(Ложь);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияПоПрочимАктивамПассивам";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Дата                                  КАК Период,
	|	&Организация                           КАК Организация,
	|	ТаблицаТовары.Подразделение            КАК Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ТаблицаТовары.СтатьяАктивовПассивов    КАК Статья,
	|	ТаблицаТовары.АналитикаАктивовПассивов КАК Аналитика,
	|	ТаблицаТовары.НастройкаСчетовУчета     КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ТаблицаТовары.СуммаРегл КАК СуммаРегл,
	|	ТаблицаТовары.СуммаУпр  КАК СуммаУпр,
	|	ТаблицаТовары.СуммаУпр  КАК СуммаСНДС,
	|	ТаблицаТовары.СуммаУпр  КАК СуммаБезНДС,
	|
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СписатьНаРасходы
	|	И ТаблицаТовары.СтатьяАктивовПассивов <> НЕОПРЕДЕЛЕНО
	|	И ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;

#Область ВыпускНаСкладПоРассчитываемойСтоимости
	ВыпускНаСкладПоРассчитываемойСтоимости =
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК ТипЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
	|
	|	ТаблицаТовары.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Склад КАК КорСклад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК КорТипЗапасов,
	|	ТаблицаТовары.ВидЗапасов КАК КорВидЗапасов,
	|
	|	0 КАК Количество,
	|	ТаблицаТовары.Количество КАК КорКоличество,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|			ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ
	|			ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК КорИсточникГФУНоменклатуры,
	|
	|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
	|	И ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|";
#КонецОбласти

#Область ВыпускНаСкладПоФиксированнойСтоимости
	ВыпускНаСкладПоФиксированнойСтоимости =
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК ТипЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
	|
	|	ТаблицаТовары.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Склад КАК КорСклад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК КорТипЗапасов,
	|	ТаблицаТовары.ВидЗапасов КАК КорВидЗапасов,
	|
	|	0 КАК Количество,
	|	ТаблицаТовары.Количество КАК КорКоличество,
	|
	|	ТаблицаТовары.СуммаУпр  КАК Стоимость,
	|	ТаблицаТовары.СуммаУпр  КАК СтоимостьБезНДС,
	|	ТаблицаТовары.СуммаРегл КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|			ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ
	|			ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|			ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ
	|			ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК КорИсточникГФУНоменклатуры,
	|
	|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|	И ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|";
#КонецОбласти

	ТекстЗапроса = ВыпускНаСкладПоРассчитываемойСтоимости + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|" + ВыпускНаСкладПоФиксированнойСтоимости;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураДоходыРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходовРегл = 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА
	|				ВЫБОР 
	|					КОГДА ТаблицаТовары.СтатьяРасходов.ВидЦенностиНДС В (
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства))
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС)
	|					КОГДА ТаблицаТовары.СтатьяРасходов.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА)
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Подразделение КАК Склад,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяРасходов <> НЕОПРЕДЕЛЕНО
	|		ТОГДА ТаблицаТовары.СтатьяРасходов
	|		ИНАЧЕ ТаблицаТовары.СтатьяАктивовПассивов
	|	КОНЕЦ КАК СтатьяДоходовРасходов,
	|	ТаблицаТовары.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаТовары.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА
	|				ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СписатьНаРасходы
	|	И ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходовРегл = 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА
	|				ВЫБОР 
	|					КОГДА ТаблицаТовары.СтатьяРасходов.ВидЦенностиНДС В (
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства))
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС)
	|					КОГДА ТаблицаТовары.СтатьяРасходов.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА)
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Подразделение КАК Склад,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяРасходов <> НЕОПРЕДЕЛЕНО
	|		ТОГДА ТаблицаТовары.СтатьяРасходов
	|		ИНАЧЕ ТаблицаТовары.СтатьяАктивовПассивов
	|	КОНЕЦ КАК СтатьяДоходовРасходов,
	|	ТаблицаТовары.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаТовары.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.СуммаУпр   КАК Стоимость,
	|	ТаблицаТовары.СуммаУпр   КАК СтоимостьБезНДС,
	|	ТаблицаТовары.СуммаРегл  КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА
	|				ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СписатьНаРасходы
	|	И ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура             КАК Номенклатура,
	|	ТаблицаСерии.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                 КАК Назначение,
	|	ТаблицаСерии.Серия                    КАК Серия,
	|	ТаблицаСерии.Количество               КАК Количество,
	|	&Подразделение                        КАК Отправитель,
	|	ВЫБОР
	|		КОГДА &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			ТОГДА ТаблицаСерии.Подразделение
	|		ИНАЧЕ ТаблицаСерии.Склад
	|	КОНЕЦ                                 КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства) КАК СкладскаяОперация,
	|	&Ссылка                               КАК Документ,
	|	&Дата                                 КАК Период,
	|	ТаблицаСерии.НомерСтроки              КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаСерии.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ &Дата < ТаблицаСерии.Склад.ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ВыпускПродукции.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ	
	|	
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура           КАК Номенклатура,
	|	ТаблицаСерии.Характеристика         КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                               КАК Назначение,
	|	ТаблицаСерии.Серия                  КАК Серия,
	|	ТаблицаСерии.Количество             КАК Количество,
	|	&Подразделение                      КАК Отправитель,
	|	ВЫБОР
	|		КОГДА &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			ТОГДА ТаблицаСерии.Подразделение
	|		ИНАЧЕ ТаблицаСерии.Склад
	|	КОНЕЦ                               КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства) КАК СкладскаяОперация,
	|	&Ссылка                             КАК Документ,
	|	&Дата                               КАК Период,
	|	ТаблицаСерии.НомерСтроки            КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаСерии.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ &Дата < ТаблицаСерии.Склад.ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                    КАК Ссылка,
	|	&Период                    КАК ДатаДокументаИБ,
	|	&Номер                     КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных   КАК ТипСсылки,
	|	&Организация               КАК Организация,
	|	&НаправлениеВыпуска        КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО               КАК Партнер,
	|	НЕОПРЕДЕЛЕНО               КАК Контрагент,
	|	&НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	&Склад                     КАК МестоХранения,
	|	&Подразделение             КАК Подразделение,
	|	&Ответственный             КАК Ответственный,
	|	ВЫРАЗИТЬ(&Комментарий КАК Строка(100)) КАК Комментарий,
	|	&Валюта                    КАК Валюта,
	|	0                          КАК Сумма,
	|	НЕОПРЕДЕЛЕНО               КАК Статус,
	|	&Проведен                  КАК Проведен,
	|	&ПометкаУдаления           КАК ПометкаУдаления,
	|	ЛОЖЬ                       КАК ДополнительнаяЗапись,
	|	&ИнформацияПоПодразделению КАК Дополнительно,
	|	&Период                    КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать             КАК НомерПервичногоДокумента,
	|	ЛОЖЬ                       КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО               КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО               КАК ИсправляемыйДокумент,
	|	&Период                    КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО               КАК Приоритет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТКА

//++ Устарело_Переработка24

Функция ТекстЗапросаТаблицаУслугиДавальцуКОформлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "УслугиДавальцуКОформлению";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Дата                                  КАК Период,
	|	ТаблицаТовары.Назначение.Договор       КАК Договор,
	|	ТаблицаТовары.Назначение.Заказ         КАК ЗаказДавальца,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК КОформлению,
	|	НЕОПРЕДЕЛЕНО КАК ПричинаОтмены
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ПередатьДавальцу
	|	И &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- Устарело_Переработка24

Функция ТекстЗапросаТаблицаРаспоряженияНаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РаспоряженияНаВыпускПродукции";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Строки.НомерСтроки                              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	&Дата                                           КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление) КАК ТипДвиженияЗапасов,
	|	Строки.Распоряжение                             КАК Распоряжение,
	|	Строки.Номенклатура                             КАК Номенклатура,
	|	Строки.Характеристика                           КАК Характеристика,
	|	Строки.КодСтроки                                КАК КодСтроки,
	|	Строки.ВидЗапасов                               КАК ВидЗапасов,
	|	Строки.ТипСтоимости                             КАК ТипСтоимости,
	|	&Подразделение                                  КАК Подразделение,
	|	Строки.Склад                                    КАК Склад,
	|	Строки.Количество                               КАК Заказано,
	|	Строки.Количество                               КАК КОформлению,
	|	Строки.АналитикаУчетаНоменклатуры               КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК Строки
	|
	|ГДЕ
	|	&ВыпускПоРаспоряжениям
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Строки.НомерСтроки                              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	&Дата                                           КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление) КАК ТипДвиженияЗапасов,
	|	Строки.Распоряжение                             КАК Распоряжение,
	|	Строки.Номенклатура                             КАК Номенклатура,
	|	Строки.Характеристика                           КАК Характеристика,
	|	Строки.КодСтроки                                КАК КодСтроки,
	|	Строки.ВидЗапасов                               КАК ВидЗапасов,
	|	Строки.ТипСтоимости                             КАК ТипСтоимости,
	|	&Подразделение                                  КАК Подразделение,
	|	Строки.Подразделение                            КАК Склад,
	|	Строки.Количество                               КАК Заказано,
	|	Строки.Количество                               КАК КОформлению,
	|	(ВЫБОР КОГДА Строки.СписатьНаРасходы ТОГДА Строки.АналитикаУчетаВПодразделении
	|		ИНАЧЕ Строки.АналитикаУчетаНоменклатуры КОНЕЦ) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК Строки
	|
	|ГДЕ
	|	&ВыпускПоРаспоряжениям
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

//-- НЕ УТКА

//++ НЕ УТ

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|";
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ ДоходыИРасходыСервер.ДополнитьТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Ложь);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОтразитьРаспределениеЗапасовДвижения(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапросаТабЧасть =
		// Приход на неордерном складе или по старым назначениям.
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка                                                 КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата                                            КАК Период,
		|	ТабЧасть.Номенклатура                                           КАК Номенклатура,
		|	ТабЧасть.Характеристика                                         КАК Характеристика,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|			ТабЧасть.Подразделение
		|		ИНАЧЕ
		|			ТабЧасть.Склад
		|		КОНЕЦ КАК Склад,
		|	
		|	ТабЧасть.Назначение                                             КАК Назначение,
		|	ТабЧасть.Количество                                             КАК Количество,
		|	ТабЧасть.Ссылка.ВыпускПоРаспоряжениям И ТабЧасть.КодСтроки <> 0 КАК ПоГрафику,
		|	
		|	ВЫБОР КОГДА НЕ ТабЧасть.Ссылка.ВыпускПоРаспоряжениям ТОГДА
		|				НЕОПРЕДЕЛЕНО
		//++ НЕ УТКА
		|			ИНАЧЕ
		|				ТабЧасть.Распоряжение.Распоряжение
		//-- НЕ УТКА
		|		КОНЕЦ КАК РаспоряжениеВГрафике
		|ИЗ
		|	Документ.ВыпускПродукции.Товары КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.Ссылка.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
		|			И (НЕ ТабЧасть.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
		|				ИЛИ ТабЧасть.Склад.ДатаНачалаОрдернойСхемыПриПоступлении > ТабЧасть.Ссылка.Дата
		|				ИЛИ ТабЧасть.Назначение.ДвиженияПоСкладскимРегистрам = ЛОЖЬ)
		|		ИЛИ ТабЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
		
	РаспределениеЗапасовДвижения.ПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
	// Сторно приходного ордера по старым назначениям.
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка                              КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата                         КАК Период,
		|	ТабЧасть.Номенклатура                        КАК Номенклатура,
		|	ТабЧасть.Характеристика                      КАК Характеристика,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|			ТабЧасть.Подразделение
		|		ИНАЧЕ
		|			ТабЧасть.Склад
		|		КОНЕЦ КАК Склад,
		|	
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	-ТабЧасть.Количество                         КАК Количество,
		|	ЛОЖЬ                                         КАК ПоГрафику,
		|	НЕОПРЕДЕЛЕНО                                 КАК РаспоряжениеВГрафике
		|ИЗ
		|	Документ.ВыпускПродукции.Товары КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.Ссылка.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
		|		И ТабЧасть.Назначение.ДвиженияПоСкладскимРегистрам = ЛОЖЬ
		|		И ТабЧасть.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
		|		И ТабЧасть.Склад.ДатаНачалаОрдернойСхемыПриПоступлении <= ТабЧасть.Ссылка.Дата";
		
	РаспределениеЗапасовДвижения.ПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка                                                 КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата                                            КАК Период,
		|	ТабЧасть.Номенклатура                                           КАК Номенклатура,
		|	ТабЧасть.Характеристика                                         КАК Характеристика,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|			ТабЧасть.Подразделение
		|		ИНАЧЕ
		|			ТабЧасть.Склад
		|		КОНЕЦ КАК Склад,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Назначение.ДвиженияПоСкладскимРегистрам = ЛОЖЬ ТОГДА
		|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|			ИНАЧЕ
		|				ТабЧасть.Назначение
		|		КОНЕЦ КАК Назначение,
		|	
		|	ТабЧасть.Количество                                             КАК Количество,
		|	
		|	ВЫБОР КОГДА НЕ ТабЧасть.Ссылка.ВыпускПоРаспоряжениям
		|					ИЛИ ТабЧасть.Ссылка.ВариантПриемкиТоваров
		|						= ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным) ТОГДА
		|				ТабЧасть.Ссылка
		//++ НЕ УТКА
		|			ИНАЧЕ
		|				ТабЧасть.Распоряжение.Распоряжение
		//-- НЕ УТКА
		|		КОНЕЦ КАК Заказ,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Ссылка.ДатаПоступления <> ДАТАВРЕМЯ(1, 1, 1) ТОГДА
		|				ТабЧасть.Ссылка.ДатаПоступления
		|			ИНАЧЕ
		|				ТабЧасть.Ссылка.Дата
		|		КОНЕЦ КАК ДатаПоступления,
		|	
		|	ИСТИНА                                                          КАК ДоступенДляРасхода,
		|	ТабЧасть.Ссылка.ВыпускПоРаспоряжениям И ТабЧасть.КодСтроки <> 0 КАК ПоГрафику,
		|	
		|	ВЫБОР КОГДА НЕ ТабЧасть.Ссылка.ВыпускПоРаспоряжениям ТОГДА
		|				НЕОПРЕДЕЛЕНО
		//++ НЕ УТКА
		|			ИНАЧЕ
		|				ТабЧасть.Распоряжение.Распоряжение
		//-- НЕ УТКА
		|		КОНЕЦ КАК РаспоряжениеВГрафике,
		|	
		|	ТабЧасть.Количество                                             КАК КоличествоВГрафике
		|ИЗ
		|	Документ.ВыпускПродукции.Товары КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.Ссылка.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
		|		И ТабЧасть.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
		|		И ТабЧасть.Склад.ДатаНачалаОрдернойСхемыПриПоступлении <= ТабЧасть.Ссылка.Дата
		|		И (ТабЧасть.Ссылка.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
		|			ИЛИ НЕ ТабЧасть.Ссылка.ВыпускПоРаспоряжениям
		|			ИЛИ ТабЧасть.КодСтроки = 0)";
	
	РаспределениеЗапасовДвижения.ЗапланироватьПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
КонецПроцедуры

//-- НЕ УТ

#Область ПартионныйУчет

Функция ОписаниеРегистровУчетаЗатратИСебестоимости(Документ) Экспорт
	
	ОписаниеРегистров = Новый Массив;
	ОписаниеРегистров.Добавить(Метаданные.РегистрыНакопления.СебестоимостьТоваров);
	
	Возврат ОписаниеРегистров;
	
КонецФункции

Функция УстановитьДополнительныеПараметрыОперацийУчетаЗатратИСебестоимости(Документ, Запрос = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Массив;
	
	Если Запрос <> Неопределено Тогда
		// Нет дополнительных параметров.
	КонецЕсли;
	
	Возврат ДополнительныеПараметры;
	
КонецФункции

Функция СформироватьДополнительныеТаблицыОперацийУчетаЗатратИСебестоимости(Документ, Запрос = Неопределено, ТекстыЗапроса = Неопределено) Экспорт
	
	ДополнительныеТаблицы = Новый Массив;
	ДополнительныеТаблицы.Добавить("ВтТаблицаТовары");
	
	Если Запрос <> Неопределено Тогда
	
		Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса(ДополнительныеТаблицы[0], ТекстыЗапроса) Тогда
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДополнительныеТаблицы;
	
КонецФункции

Функция ОписаниеОперацийУчетаСебестоимости(Документ) Экспорт
	
	ОписаниеОпераций = Новый Массив;
	
	#Область ВнешнееПоступление_Товар
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	// Описание документа
	|	ТаблицаДокумента.Дата 		КАК Период,
	|	ТаблицаДокумента.Ссылка 	КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО				КАК ДокументИсточник,
	|	НЕОПРЕДЕЛЕНО				КАК ПериодДокументаИсточника,
	|	НЕОПРЕДЕЛЕНО 				КАК КорректируемыйДокумент,
	|
	// Поля учета номенклатуры
	|	ТаблицаДокумента.Организация						КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	ТаблицаДокумента.Ссылка								КАК Партия,
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС 				КАК ВидДеятельностиНДС,
	|	ТаблицаДокумента.НалогообложениеНДС					КАК ВидДеятельностиНДСДокумента,
	|
	// Поля аналитики учета партий
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий			КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий			КАК КорАналитикаУчетаПартий,
	|	ТаблицаДокумента.Партнер		КАК Поставщик,
	|	ТаблицаДокумента.Контрагент 	КАК Контрагент,
	|	ТаблицаВидыЗапасов.СтавкаНДС	КАК СтавкаНДС,
	|
	// Корреспондирующие поля
	|	НЕОПРЕДЕЛЕНО					КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО					КАК КорВидЗапасов,
	|
	// Поля аналитики финансового учета
	|	ТаблицаДокумента.Сделка			КАК Сделка,
	|	ТаблицаДокумента.Подразделение 	КАК Подразделение,
	|	ТаблицаДокумента.Менеджер 		КАК Менеджер,
	|
	// Количественные и суммовые показатели
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	НЕОПРЕДЕЛЕНО 									КАК ИдентификаторСтроки,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|			ТОГДА 0
	|	 	КОГДА ТаблицаДокумента.ХозяйственнаяОперация =  ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|		  И (&ПартионныйУчетВерсии22 ИЛИ НЕ &ФИФОСкользящаяОценка)
	|			ТОГДА 0
	|			ИНАЧЕ ТаблицаВидыЗапасов.СуммаСНДСУпр
	|	КОНЕЦ 											КАК Стоимость,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|			ТОГДА 0
	|	 	КОГДА ТаблицаДокумента.ХозяйственнаяОперация =  ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|		  И (&ПартионныйУчетВерсии22 ИЛИ НЕ &ФИФОСкользящаяОценка)
	|			ТОГДА 0
	|			ИНАЧЕ ТаблицаВидыЗапасов.СуммаБезНДСУпр
	|	КОНЕЦ 											КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС В (
	|		  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|		  ИЛИ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|			ТОГДА ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл
	|			ИНАЧЕ ТаблицаВидыЗапасов.СуммаБезНДСРегл
	|		КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК СтоимостьРегл,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением) 
	|		ТОГДА 0
	|		ИНАЧЕ ТаблицаВидыЗапасов.СуммаНДСРегл
	|	КОНЕЦ											КАК НДСРегл,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА
	|			ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС В (
	|			  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|			  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			  ИЛИ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|			ТОГДА ТаблицаВидыЗапасов.СуммаСНДСУпр
	|			ИНАЧЕ ТаблицаВидыЗапасов.СуммаБезНДСУпр
	|		КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ											КАК СтоимостьУпр,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением) 
	|		ТОГДА 0
	|		ИНАЧЕ ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаБезНДСУпр
	|	КОНЕЦ											КАК НДСУпр,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.СуммаСНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ											КАК СтоимостьЗабалансовая,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ											КАК СтоимостьЗабалансоваяРегл,
	|	0 												КАК ДопРасходы,
	|	0 												КАК ДопРасходыБезНДС,
	|	0 												КАК ДопРасходыРегл,
	|	0 												КАК ДопРасходыУпр,
	|	0 												КАК ПостояннаяРазница,
	|	0 												КАК ВременнаяРазница,
	|	0 												КАК СтоимостьНДД,
	|	0												КАК КорСтоимость,
	|
	// Прочие поля
	|	ТаблицаДокумента.ХозяйственнаяОперация 			КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ИдентификаторФинЗаписи		КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                 КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаТовары КАК ТаблицаВидыЗапасов
	|		ПО ИСТИНА
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|	И ТаблицаВидыЗапасов.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (ТаблицаДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)))
	|	И (ТаблицаВидыЗапасов.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		ИЛИ НЕ ТаблицаВидыЗапасов.Назначение.ТипНазначения = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПоставкаПодПринципала))";
	
	РасчетСебестоимостиПроведениеДокументов.ДобавитьОписаниеОперацииДляОтраженияВУчетеСебестоимости(
		ОписаниеОпераций,
		Перечисления.ОперацииУчетаСебестоимости.ВнешнееПоступление,
		ТекстЗапроса);
	
	#КонецОбласти

	#Область ВнешнееПоступление_Работы
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	// Описание документа
	|	ТаблицаДокумента.Дата 		КАК Период,
	|	ТаблицаДокумента.Ссылка 	КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО				КАК ДокументИсточник,
	|	НЕОПРЕДЕЛЕНО				КАК ПериодДокументаИсточника,
	|	НЕОПРЕДЕЛЕНО 				КАК КорректируемыйДокумент,
	|
	// Поля учета номенклатуры
	|	ТаблицаДокумента.Организация					КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО									КАК ВидЗапасов,
	|	ТаблицаДокумента.Ссылка							КАК Партия,
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС 			КАК ВидДеятельностиНДС,
	|	ТаблицаДокумента.НалогообложениеНДС				КАК ВидДеятельностиНДСДокумента,
	|
	// Поля аналитики учета партий
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий			КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий			КАК КорАналитикаУчетаПартий,
	|	ТаблицаДокумента.Партнер		КАК Поставщик,
	|	ТаблицаДокумента.Контрагент 	КАК Контрагент,
	|	ТаблицаВидыЗапасов.СтавкаНДС	КАК СтавкаНДС,
	|
	// Корреспондирующие поля
	|	НЕОПРЕДЕЛЕНО					КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО					КАК КорВидЗапасов,
	|
	// Поля аналитики финансового учета
	|	ТаблицаДокумента.Сделка			КАК Сделка,
	|	ТаблицаДокумента.Подразделение 	КАК Подразделение,
	|	ТаблицаДокумента.Менеджер 		КАК Менеджер,
	|
	// Количественные и суммовые показатели
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	НЕОПРЕДЕЛЕНО 									КАК ИдентификаторСтроки,
	|	ВЫБОР КОГДА НЕ (&ПартионныйУчетВерсии22 И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию))
	|		ТОГДА ТаблицаВидыЗапасов.СуммаСНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК Стоимость,
	|	ВЫБОР КОГДА НЕ (&ПартионныйУчетВерсии22 И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию))
	|		ТОГДА ТаблицаВидыЗапасов.СуммаБезНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА НЕ (&ПартионныйУчетВерсии22 И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию))
	|		ТОГДА
	|			ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС В (
	|			  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|			  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ТОГДА ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл
	|				ИНАЧЕ ТаблицаВидыЗапасов.СуммаБезНДСРегл
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК СтоимостьРегл,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением) 
	|		ТОГДА 0
	|		ИНАЧЕ ТаблицаВидыЗапасов.СуммаНДСРегл
	|	КОНЕЦ 											КАК НДСРегл,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА
	|			ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС В (
	|			  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|			  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ТОГДА ТаблицаВидыЗапасов.СуммаСНДСУпр
	|				ИНАЧЕ ТаблицаВидыЗапасов.СуммаБезНДСУпр
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК СтоимостьУпр,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением) 
	|		ТОГДА 0
	|		ИНАЧЕ ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаБезНДСУпр
	|	КОНЕЦ 											КАК НДСУпр,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.СуммаСНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК СтоимостьЗабалансовая,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА
	|			ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС В (
	|			  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|			  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ТОГДА ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл
	|				ИНАЧЕ ТаблицаВидыЗапасов.СуммаБезНДСРегл
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК СтоимостьЗабалансоваяРегл,
	|	0 												КАК ДопРасходы,
	|	0 												КАК ДопРасходыБезНДС,
	|	0 												КАК ДопРасходыРегл,
	|	0 												КАК ДопРасходыУпр,
	|	0 												КАК ПостояннаяРазница,
	|	0 												КАК ВременнаяРазница,
	|	0 												КАК СтоимостьНДД,
	|	0												КАК КорСтоимость,
	|
	// Прочие поля
	|	ТаблицаДокумента.ХозяйственнаяОперация 			КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ИдентификаторФинЗаписи		КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                 КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаТовары КАК ТаблицаВидыЗапасов
	|		ПО ИСТИНА
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|	И ТаблицаВидыЗапасов.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И (ТаблицаВидыЗапасов.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ИЛИ
	|		ТаблицаВидыЗапасов.Назначение.ТипНазначения <> ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПоставкаПодПринципала))
	|	И НЕ ТаблицаВидыЗапасов.СписатьНаРасходы";
	
	РасчетСебестоимостиПроведениеДокументов.ДобавитьОписаниеОперацииДляОтраженияВУчетеСебестоимости(
		ОписаниеОпераций,
		Перечисления.ОперацииУчетаСебестоимости.ВнешнееПоступление,
		ТекстЗапроса);
	
	#КонецОбласти
	
	
	Возврат ОписаниеОпераций;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Если ПравоДоступа("Чтение", Метаданные.Документы.ВыпускПродукции) Тогда
		// Выпуск продукции
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Накладная";
		КомандаПечати.Представление = НСтр("ru = 'Выпуск продукции';
											|en = 'Product costing method'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

	Если ПравоДоступа("Чтение", Метаданные.Документы.ВыпускПродукции) Тогда
		// Накладная на передачу готовой продукции (МХ-18)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ18";
		КомандаПечати.Представление = НСтр("ru = 'Накладная на передачу готовой продукции (МХ-18)';
											|en = 'Invoice for finished product transfer (MH-18)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-1 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ1";
		КомандаПечати.Представление = НСтр("ru = 'Акт о приеме-передаче ТМЦ на хранение (МХ-1)';
											|en = 'Certificate of inventory handover for storage (MH-1)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	
	// Задание на размещение товаров
	КомандаПечати = Обработки.ПечатьЗаданияНаОтборРазмещениеТоваров.ДобавитьКомандуПечати(КомандыПечати,
																							"ЗаданиеНаРазмещение");
	
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати,
														"НаправлениеВыпуска",
														Перечисления.ХозяйственныеОперации.ВыпускПродукцииНаСклад,
														ВидСравнения.Равно);

КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов - см. УправлениеПечатьюПереопределяемый.ПриПечати.МассивОбъектов
//  ПараметрыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыПечати
//  КоллекцияПечатныхФорм - см. УправлениеПечатьюПереопределяемый.ПриПечати.КоллекцияПечатныхФорм
//  ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//  ПараметрыВывода - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыВывода
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"Накладная",
			НСтр("ru = 'Выпуск продукции';
				|en = 'Product costing method'"),
			СформироватьПечатнуюФормуНакладной(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуНакладной(МассивОбъектов, ОбъектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВыпускПродукции.ПФ_MXL_Накладная");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВыпускПродукции.Ссылка,
	|	ВыпускПродукции.Номер,
	|	ВыпускПродукции.Дата,
	|	ВыпускПродукции.Организация,
	|	ВыпускПродукции.Организация.Префикс КАК Префикс,
	|	ВыпускПродукции.Подразделение.Представление КАК ПредставлениеПодразделения
	|ИЗ
	|	Документ.ВыпускПродукции КАК ВыпускПродукции
	|ГДЕ
	|	ВыпускПродукции.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыпускПродукции.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                                КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                        КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Склад                                 КАК Склад,
	|	ТаблицаТовары.Подразделение                         КАК Подразделение,
	|	ТаблицаТовары.Упаковка                              КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок                    КАК Количество,
	|	ТаблицаТовары.Серия                                 КАК Серия
	|
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивДокументов)
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.Серия
	|ИЗ
	|	Документ.ВыпускПродукции.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|			И ТаблицаСерии.Склад = ТаблицаТовары.Склад
	|			И ТаблицаСерии.Подразделение = ТаблицаТовары.Подразделение
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивДокументов)
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	| 	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Подразделение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыпускПродукцииТовары.Ссылка КАК Ссылка,
	|	ВыпускПродукцииТовары.Номенклатура,
	|	ВыпускПродукцииТовары.Номенклатура." + ?(КолонкаКодов = "", "Код", КолонкаКодов) + " КАК КодАртикул,
	|	ВыпускПродукцииТовары.Номенклатура.НаименованиеПолное КАК Номенклатура,
	|	ВыпускПродукцииТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВыпускПродукцииТовары.Характеристика,
	|	ВыпускПродукцииТовары.Характеристика.Наименование КАК ХарактеристикаНаименование,
	|	ВыпускПродукцииТовары.Серия.Наименование КАК СерияНаименование,
	|	ВЫБОР
	|		КОГДА ВыпускПродукцииТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ВыпускПродукцииТовары.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ВыпускПродукцииТовары.Упаковка.Наименование
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВыпускПродукцииТовары.Количество КАК Количество,
	|	ВыпускПродукцииТовары.Ссылка.НаправлениеВыпуска КАК НаправлениеВыпуска,
	|	ВЫБОР
	|		КОГДА ВыпускПродукцииТовары.Ссылка.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|			ТОГДА ВыпускПродукцииТовары.Склад.Представление
	|		ИНАЧЕ ВыпускПродукцииТовары.Подразделение.Представление
	|	КОНЕЦ КАК ПредставлениеПолучателя,
	|	ВЫБОР
	|		КОГДА ВыпускПродукцииТовары.Ссылка.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|			ТОГДА &ТипПолучателяСклад
	|		ИНАЧЕ &ТипПолучателяПодразделение
	|	КОНЕЦ КАК ТипПолучателя
	|ИЗ
	|	ВтТовары КАК ВыпускПродукцииТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыпускПродукцииТовары.Ссылка,
	|	ВыпускПродукцииТовары.НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(ТипПолучателя)
	|ПО
	|	Ссылка,
	|	ПредставлениеПолучателя";

	Запрос.УстановитьПараметр("МассивДокументов",           МассивОбъектов);
	Запрос.УстановитьПараметр("ТипПолучателяСклад",         НСтр("ru = 'Склад';
																|en = 'Warehouse'"));
	Запрос.УстановитьПараметр("ТипПолучателяПодразделение", НСтр("ru = 'Подразделение';
																|en = 'Business unit'"));
	Запрос.УстановитьПараметр("МассивДокументов",           МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВыпускПродукции_Накладная";
	
	МассивРезультатов 		= Запрос.ВыполнитьПакет();  
	ДанныеПечати			= МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам 	= МассивРезультатов[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
	ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	Пока ДанныеПечати.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		ВыборкаПоПолучателям = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоПолучателям.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			НомерСтраницы = 1;
			
			ПервыйДокумент    = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			// Выводим общие реквизиты шапки
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка"); // см. ПроизводствоСервер.СлужебнаяСтруктураТабличныйДокумент
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ОбластьМакета.Параметры.ПредставлениеПолучателя = ВыборкаПоПолучателям.ПредставлениеПолучателя;
			ОбластьМакета.Параметры.ТипПолучателя = ВыборкаПоПолучателям.ТипПолучателя;
			
			ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru = 'Выпуск продукции';
																												|en = 'Product costing method'"));
			ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
			
			СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
			
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(
				ТабличныйДокумент,
				Макет,
				ОбластьМакета,
				ДанныеПечати.Ссылка);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Создаем массив для проверки вывода
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть докмента
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть(?(КолонкаКодов = "", "ЗаголовокТаб", "ЗаголовокТабСКодом"));
			ОбластьМакета           = Макет.ПолучитьОбласть(?(КолонкаКодов = "", "Строка",       "СтрокаСКодом"));
			ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
			
			СтрокаТовары = ВыборкаПоПолучателям.Выбрать();
			КоличествоСтрок = СтрокаТовары.Количество();
			НомерСтроки = 0;
			ПараметрыСтрокиТовары = Новый Структура("НомерСтроки,ТоварНаименование");
			Пока СтрокаТовары.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ПараметрыСтрокиТовары.НомерСтроки = НомерСтроки;
				ПараметрыСтрокиТовары.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
																СтрокаТовары.ТоварНаименование, 
																СтрокаТовары.ХарактеристикаНаименование,,
																СтрокаТовары.СерияНаименование,
																ДопПараметрыПредставлениеНоменклатуры);
																
				ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
				ОбластьМакета.Параметры.Заполнить(ПараметрыСтрокиТовары);
				
				Если НомерСтроки = 1 Тогда
					
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Страница %1';
																																	|en = 'Page %1'"), НомерСтраницы); 
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				Иначе
					
					МассивВыводимыхОбластей.Очистить();
					МассивВыводимыхОбластей.Добавить(ОбластьМакета);
					
					Если НомерСтроки = КоличествоСтрок Тогда
						
						МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
						
					КонецЕсли;
					
					Если НомерСтроки <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
						
						НомерСтраницы = НомерСтраницы + 1;
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Страница %1';
																																		|en = 'Page %1'"), НомерСтраницы);
						ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
						
					КонецЕсли;
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла;
			
			// Выводим подвал документа
			ОбластьПодвала.Параметры.ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Всего наименований %1';
																													|en = 'Total items %1'"), СтрокаТовары.Количество());
			
			ТабличныйДокумент.Вывести(ОбластьПодвала);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыМХ18(ПараметрыПечати, МассивОбъектов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов			= ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если НЕ ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	ВыпускПродукции.Ссылка						КАК Ссылка,
	|	ВыпускПродукции.Номер						КАК Номер,
	|	ВыпускПродукции.Дата						КАК Дата,
	|	ВыпускПродукции.Дата						КАК ДатаДокумента,
	|	ВыпускПродукции.Подразделение.Представление	КАК ПредставлениеПодразделения
	|
	|ИЗ
	|	Документ.ВыпускПродукции КАК ВыпускПродукции
	|
	|ГДЕ
	|	ВыпускПродукции.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокВыпуск.Ссылка КАК Ссылка,
	|	ДокВыпуск.Дата КАК Дата,
	|	ДокВыпуск.Организация КАК Организация,
	|	ДокВыпуск.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ПОМЕСТИТЬ ВТДанныеДокументовВыпуска
	|ИЗ Документ.ВыпускПродукции КАК ДокВыпуск
	|ГДЕ ДокВыпуск.Ссылка В (&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.Ссылка,
	|	РСУчетнаяПолитика.УчетГотовойПродукцииПоПлановойСтоимости КАК ИспользоватьПлановыеЦены
	|ПОМЕСТИТЬ ВТИспользованиеПлановыхЦен
	|ИЗ (
	|	ВЫБРАТЬ
	|		ДокументыВыпуска.Ссылка,
	|		ДокументыВыпуска.Дата,
	|		ДокументыВыпуска.Организация,
	|		РСУчетнаяПолитика.Организация КАК ГоловнаяОрганизация,
	|		МАКСИМУМ (РСУчетнаяПолитика.Период) КАК УчетнаяПолитикаПериод
	|
	|	ИЗ ВТДанныеДокументовВыпуска КАК ДокументыВыпуска
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК РСУчетнаяПолитика
	|		ПО РСУчетнаяПолитика.Организация = ДокументыВыпуска.ГоловнаяОрганизация
	|		И  РСУчетнаяПолитика.Период <= ДокументыВыпуска.Дата
	|	СГРУППИРОВАТЬ ПО
	|		ДокументыВыпуска.Ссылка,
	|		ДокументыВыпуска.Дата,
	|		ДокументыВыпуска.Организация,
	|		РСУчетнаяПолитика.Организация
	|	) КАК Таб
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК РСУчетнаяПолитика
	|	ПО Таб.ГоловнаяОрганизация = РСУчетнаяПолитика.Организация
	|	И  Таб.УчетнаяПолитикаПериод = РСУчетнаяПолитика.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ВыпускПродукцииТовары.Ссылка														КАК Ссылка,
	|	ВыпускПродукцииТовары.Ссылка.Организация											КАК Организация,
	|	ВыпускПродукцииТовары.Ссылка.Организация.Префикс									КАК Префикс,
	|	ВыпускПродукцииТовары.Номенклатура													КАК Номенклатура,
	|	ВыпускПродукцииТовары.Номенклатура.НаименованиеПолное								КАК НоменклатураНаименование,
	|	ВыпускПродукцииТовары.Номенклатура." + КолонкаКодов + "								КАК НоменклатураКод,
	|	ВыпускПродукцииТовары.Характеристика.НаименованиеПолное								КАК ХарактеристикаНаименование,
	|	ВыпускПродукцииТовары.Характеристика												КАК Характеристика,
	|	ВыпускПродукцииТовары.Серия.Наименование											КАК СерияНаименование,
	|	ВыпускПродукцииТовары.Серия															КАК Серия,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения 											КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения 													КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения 											КАК ВидУпаковки,
	|	ВЫБОР КОГДА ВыпускПродукцииТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|		1
	|	ИНАЧЕ
	|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1)
	|	КОНЕЦ																				КАК КоличествоВОдномМесте,
	|	СУММА(ВыпускПродукцииТовары.КоличествоУпаковок * &ТекстЗапросаВес)					КАК МассаБрутто,
	|	СУММА(ВыпускПродукцииТовары.КоличествоУпаковок)										КАК Количество,
	|	СУММА(ВыпускПродукцииТовары.КоличествоУпаковок) 									КАК КоличествоМест,
	|	МИНИМУМ(ВыпускПродукцииТовары.НомерСтроки)											КАК НомерСтроки,
	|	ЛОЖЬ																				КАК ЭтоВозвратнаяТара,
	|	СРЕДНЕЕ(ВЫБОР
	|			КОГДА ВТИспользованиеПлановыхЦен.ИспользоватьПлановыеЦены ЕСТЬ NULL
	|				  ИЛИ НЕ ВТИспользованиеПлановыхЦен.ИспользоватьПлановыеЦены
	|			ТОГДА 0
	|			ИНАЧЕ ВыпускПродукцииТовары.Цена
	|			КОНЕЦ)																		КАК Цена,
	|	СУММА(ВЫБОР
	|			КОГДА ВТИспользованиеПлановыхЦен.ИспользоватьПлановыеЦены ЕСТЬ NULL
	|				  ИЛИ НЕ ВТИспользованиеПлановыхЦен.ИспользоватьПлановыеЦены
	|			ТОГДА 0
	|			ИНАЧЕ ВыпускПродукцииТовары.Сумма
	|		КОНЕЦ)																			КАК Сумма,
	|	ВЫБОР КОГДА ВыпускПродукцииТовары.Ссылка.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад) ТОГДА
	|		ВыпускПродукцииТовары.Ссылка.Склад.Представление
	|	ИНАЧЕ
	|		ВыпускПродукцииТовары.Подразделение.Представление
	|	КОНЕЦ КАК Получатель
	|
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ВыпускПродукцииТовары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользованиеПлановыхЦен КАК ВТИспользованиеПлановыхЦен
	|	ПО ВыпускПродукцииТовары.Ссылка = ВТИспользованиеПлановыхЦен.Ссылка
	|
	|ГДЕ
	|	ВыпускПродукцииТовары.Ссылка В(&МассивДокументов)
	|	И ВыпускПродукцииТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|															)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыпускПродукцииТовары.Ссылка,
	|	ВыпускПродукцииТовары.Номенклатура,
	|	ВыпускПродукцииТовары.Характеристика,
	|	ВыпускПродукцииТовары.Серия,
	|	ВыпускПродукцииТовары.Упаковка,
	|	ВыпускПродукцииТовары.Подразделение,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения,
	|	&ТекстЗапросаКодЕдиницыИзмерения,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка,
	|	Организация,
	|	Получатель";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаВес",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"ВыпускПродукцииТовары.Упаковка",
			"ВыпускПродукцииТовары.Номенклатура"));
			
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВыпускПродукцииТовары.Упаковка",
			"ВыпускПродукцииТовары.Номенклатура"));
			
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ВыпускПродукцииТовары.Упаковка",
			"ВыпускПродукцииТовары.Номенклатура"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"ВыпускПродукцииТовары.Упаковка",
			"ВыпускПродукцииТовары.Номенклатура"));
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[3];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Возвращает данные для формирования печатной формы МХ - 1.
//
// Параметры:
//	ПараметрыПечати	- Структура -дополнительные настройки печати.
//	МассивОбъектов	- Массив из ДокументСсылка.ВыпускПродукции - коллекция значений ссылок на документы,
//																	по которым необходимо получить данные.
//
// Возвращаемое значение:
//	Структура - коллекция данных, используемых для печати, содержащая следующие следующие свойства:
//		* РезультатПоШапке			- РезультатЗапроса - данные шапки документа.
//		* РезультатПоСкладам		- РезультатЗапроса - данные о складе ответственного хранения.
//		* РезультатПоТабличнойЧасти	- РезультатЗапроса - данные табличной части документа.
//		* РезультатПоОшибкам		- РезультатЗапроса - данные об ошибках, возникающих при печати документа.
//
Функция ПолучитьДанныеДляПечатнойФормыМХ1(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка									КАК Ссылка,
	|	ДанныеДокумента.Номер									КАК Номер,
	|	ДанныеДокумента.Дата									КАК Дата,
	|	ДанныеДокумента.Дата									КАК ДатаДокумента,
	|	ДанныеДокумента.Организация								КАК Организация,
	|	ДанныеДокумента.Склад									КАК Склад,
	|	ЕСТЬNULL(Склады.СкладОтветственногоХранения, ЛОЖЬ)		КАК СкладОтветственногоХранения,
	|	ДанныеДокумента.Организация = Склады.Поклажедержатель	КАК ОрганизацияПоклажедержатель,
	|	Склады.ИсточникИнформацииОЦенахДляПечати				КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены									КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены						КАК ВалютаЦены,
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет	КАК ПредварительныйРасчет,
	|	ДанныеДокумента.Дата									КАК ДатаПолученияСебестоимости
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.ВыпускПродукции КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ)
	|			И РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен
	|			И ДанныеДокумента.Организация = РасчетСебестоимостиТоваровОрганизации.Организация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ДанныеДокумента.Склад = Склады.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.Ссылка В(&МассивДокументов)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка								КАК Ссылка,
	|	ДанныеДокумента.Номер								КАК Номер,
	|	ДанныеДокумента.Дата								КАК Дата,
	|	ДанныеДокумента.ДатаДокумента						КАК ДатаДокумента,
	|	ДанныеДокумента.Организация							КАК Организация,
	|	ДанныеДокумента.Склад								КАК Склад,
	|	ДанныеДокумента.ИсточникИнформацииОЦенахДляПечати	КАК ИсточникИнформацииОЦенахДляПечати,
	|	ДанныеДокумента.ВидЦены								КАК ВидЦены,
	|	ДанныеДокумента.ВалютаЦены							КАК ВалютаЦены,
	|	ДанныеДокумента.ПредварительныйРасчет				КАК ПредварительныйРасчет,
	|	ДанныеДокумента.ДатаПолученияСебестоимости			КАК ДатаПолученияСебестоимости
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.СкладОтветственногоХранения
	|	И НЕ ДанныеДокумента.ОрганизацияПоклажедержатель
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Серия КАК Серия,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены КАК ВидЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[МассивРезультатов.ВГраница() - 3];
	РезультатПоСкладам			= МассивРезультатов[МассивРезультатов.ВГраница() - 2];
	РезультатПоТабличнойЧасти	= МассивРезультатов[МассивРезультатов.ВГраница() - 1];
	РезультатПоОшибкам			= МассивРезультатов[МассивРезультатов.ВГраница()];
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",			РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСкладам",			РезультатПоСкладам);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти",	РезультатПоТабличнойЧасти);
	СтруктураДанныхДляПечати.Вставить("РезультатПоОшибкам",			РезультатПоОшибкам);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

#КонецОбласти

#Область ТекущиеДела

// Заполняет список текущих дел пользователя.
//
// Параметры:
//  ТекущиеДела - см. ТекущиеДелаСлужебный.ТекущиеДела
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	
	//++ НЕ УТКА
	ИмяФормы = "Документ.ВыпускПродукции.ФормаСписка";
	
	ОбщиеПараметрыЗапросов = ТекущиеДелаСервер.ОбщиеПараметрыЗапросов();
	
	// Определим доступны ли текущему пользователю показатели группы
	Доступность =
		(ОбщиеПараметрыЗапросов.ЭтоПолноправныйПользователь
			Или ПравоДоступа("Просмотр", Метаданные.Документы.ВыпускПродукции))
		И ПравоДоступа("Добавление", Метаданные.Документы.ВыпускПродукции)
		И ПравоДоступа("Чтение",     Метаданные.РегистрыНакопления.РаспоряженияНаВыпускПродукции)
		И ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство");
	
	Если НЕ Доступность Тогда
		Возврат;
	КонецЕсли;
	
	// Расчет показателей
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Остатки.Распоряжение) КАК ДокументыВыпускаПродукцииОжидающиеОформления
	|ИЗ
	|	РегистрНакопления.РаспоряженияНаВыпускПродукции.Остатки(&ДатаВыпуска, Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))) КАК Остатки
	|ГДЕ
	|	Остатки.КОформлениюОстаток > 0";
	
	Запрос.УстановитьПараметр("ДатаВыпуска", КонецДня(ОбщиеПараметрыЗапросов.ТекущаяДата) + 1);
	
	Результат = ТекущиеДелаСлужебный.ЧисловыеПоказателиТекущихДел(Запрос, ОбщиеПараметрыЗапросов);
	
	// Заполнение дел.
	// ДокументыВыпускаПродукции
	ДелоРодитель = ТекущиеДела.Добавить();
	ДелоРодитель.Идентификатор  = "ДокументыВыпускаПродукции";
	ДелоРодитель.Представление  = НСтр("ru = 'Документы выпуска продукции';
										|en = 'Product release documents'");
	ДелоРодитель.ЕстьДела       = Результат.ДокументыВыпускаПродукцииОжидающиеОформления > 0;
	ДелоРодитель.Владелец       = Метаданные.Подсистемы.Производство;
	
	// ДокументыВыпускаПродукцииОжидающиеОформления
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	ПараметрыФормы.Вставить("ИмяТекущейСтраницы", "ГруппаСтраницаРаспоряжения");
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ДокументыВыпускаПродукцииОжидающиеОформления";
	Дело.ЕстьДела       = Результат.ДокументыВыпускаПродукцииОжидающиеОформления > 0;
	Дело.Представление  = НСтр("ru = 'Ожидающие оформления';
								|en = 'Awaiting registration'");
	Дело.Количество     = Результат.ДокументыВыпускаПродукцииОжидающиеОформления;
	Дело.Важное         = Ложь;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = ПараметрыФормы;
	Дело.Владелец       = "ДокументыВыпускаПродукции";
	//-- НЕ УТКА
	
	Возврат; // В УТ и КА процедура пустая
	
КонецПроцедуры

#КонецОбласти

#Область Серии

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийВыпускНаСклад()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Склад,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|					ТОГДА ВЫБОР
	|							КОГДА НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|								ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|												И ТоварыДляЗапроса.Количество > 0
	|											ТОГДА 10
	|										ИНАЧЕ 9
	|									КОНЕЦ
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|					ТОГДА ВЫБОР
	|							КОГДА НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|								ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|												И ТоварыДляЗапроса.Количество > 0
	|											ТОГДА 8
	|										ИНАЧЕ 7
	|									КОНЕЦ
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|						И (НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|							ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении)
	|						И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПродукцииИзПроизводства
	|					ТОГДА ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|												И ТоварыДляЗапроса.Количество > 0
	|											ТОГДА 4
	|										ИНАЧЕ 3
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|											И ТоварыДляЗапроса.Количество > 0
	|										ТОГДА 2
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Склад = СерииДляЗапроса.Склад
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Склад = ТоварыДляЗапроса.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийВыпускВПодразделение()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Подразделение,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Подразделение,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Подразделение,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Подразделение,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Подразделение,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Подразделение,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|					ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 10
	|								ИНАЧЕ 9
	|							КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|					ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 8
	|								ИНАЧЕ 7
	|							КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|						И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриВыпускеВПодразделение
	|					ТОГДА ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|												И ТоварыДляЗапроса.Количество > 0
	|											ТОГДА 4
	|										ИНАЧЕ 3
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|											И ТоварыДляЗапроса.Количество > 0
	|										ТОГДА 2
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Подразделение = СерииДляЗапроса.Подразделение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.Подразделение)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Подразделение = ТоварыДляЗапроса.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

//++ НЕ УТКА

// Заполняет серии в выпуске продукции по маршрутным листам.
//
// Параметры:
//  Объект	 - ДокументОбъект.ВыпускПродукции, ДанныеФормыСтруктура - документ выпуска.
//
Процедура ЗаполнитьСерииПоМаршрутнымЛистам(Объект) Экспорт

	Если Объект.Товары.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Перед заполнением нужно заполнить СтатусУказанияСерий, чтобы понимать как добавлять серии.
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.ВыпускПродукции);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий);
	
	// В МЛ серии для изделий вводятся всегда справочно в отдельной ТЧ
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутныйЛистПроизводстваВыходныеИзделияСерии.Ссылка,
	|	МаршрутныйЛистПроизводстваВыходныеИзделияСерии.Серия,
	|	МаршрутныйЛистПроизводстваВыходныеИзделияСерии.Номенклатура,
	|	МаршрутныйЛистПроизводстваВыходныеИзделияСерии.Характеристика,
	|	СУММА(МаршрутныйЛистПроизводстваВыходныеИзделияСерии.КоличествоФакт) КАК КоличествоФакт
	|ПОМЕСТИТЬ ВтСерииРаспоряжений
	|ИЗ
	|	Документ.МаршрутныйЛистПроизводства.ВыходныеИзделияСерии КАК МаршрутныйЛистПроизводстваВыходныеИзделияСерии
	|ГДЕ
	|	МаршрутныйЛистПроизводстваВыходныеИзделияСерии.Ссылка В (&СписокМаршрутныхЛистов)
	|
	|СГРУППИРОВАТЬ ПО
	|	МаршрутныйЛистПроизводстваВыходныеИзделияСерии.Ссылка,
	|	МаршрутныйЛистПроизводстваВыходныеИзделияСерии.Серия,
	|	МаршрутныйЛистПроизводстваВыходныеИзделияСерии.Номенклатура,
	|	МаршрутныйЛистПроизводстваВыходныеИзделияСерии.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка, Номенклатура, Характеристика
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Распоряжение         КАК Распоряжение,
	|	ТаблицаСерии.Серия                 КАК Серия,
	|	ТаблицаСерии.Номенклатура          КАК Номенклатура,
	|	ТаблицаСерии.Характеристика        КАК Характеристика,
	|	СУММА(ТаблицаСерии.Количество)     КАК Количество
	|ПОМЕСТИТЬ ВтСерииНакладных
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Серии КАК ТаблицаСерии
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|			И ТаблицаСерии.Склад = ТаблицаТовары.Склад
	|			И ТаблицаСерии.Подразделение = ТаблицаТовары.Подразделение
	|ГДЕ
	|	ТаблицаТовары.Ссылка <> &Ссылка
	|	И (ТаблицаТовары.Распоряжение, ТаблицаТовары.Номенклатура, ТаблицаТовары.Характеристика)
	|		В (ВЫБРАТЬ
	|				ВтСерииРаспоряжений.Ссылка,
	|				ВтСерииРаспоряжений.Номенклатура,
	|				ВтСерииРаспоряжений.Характеристика
	|			ИЗ
	|				ВтСерииРаспоряжений КАК ВтСерииРаспоряжений
	|			)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Распоряжение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Распоряжение, Серия, Номенклатура, Характеристика
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииРаспоряжений.Ссылка,
	|	СерииРаспоряжений.Серия,
	|	СерииРаспоряжений.Номенклатура,
	|	СерииРаспоряжений.Характеристика,
	|	(СерииРаспоряжений.КоличествоФакт - ЕСТЬNULL(СерииНакладных.Количество,0)) КАК КоличествоФакт
	|ИЗ
	|	ВтСерииРаспоряжений КАК СерииРаспоряжений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСерииНакладных КАК СерииНакладных
	|		ПО СерииНакладных.Распоряжение = СерииРаспоряжений.Ссылка
	|			И СерииНакладных.Серия = СерииРаспоряжений.Серия
	|			И СерииНакладных.Номенклатура = СерииРаспоряжений.Номенклатура
	|			И СерииНакладных.Характеристика = СерииРаспоряжений.Характеристика
	|ГДЕ
	|	(СерииРаспоряжений.КоличествоФакт - ЕСТЬNULL(СерииНакладных.Количество,0)) > 0";
	
	ТаблицаТовары = Объект.Товары.Выгрузить();
	ТаблицаСерии = Объект.Серии.Выгрузить();
	ТаблицаСерии.Очистить();
	
	СписокМаршрутныхЛистов = ТаблицаТовары.ВыгрузитьКолонку("Распоряжение");
	СписокМаршрутныхЛистов = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(СписокМаршрутныхЛистов);
	Запрос.УстановитьПараметр("СписокМаршрутныхЛистов", СписокМаршрутныхЛистов);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	СерииМЛ = Запрос.Выполнить().Выгрузить();
	
	ТоварыНовая = ТаблицаТовары.СкопироватьКолонки();
	
	КэшированныеЗначения = Неопределено;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
	Для каждого СтрокаТовар Из Объект.Товары Цикл
		
		СтрокаТоварНовая = ТоварыНовая.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТоварНовая, СтрокаТовар);
		
		ПерваяСтрока = Истина;
		
		КоличествоОстаток = СтрокаТовар.Количество;
		СтруктураПоиска = Новый Структура("Номенклатура,Характеристика,Ссылка", 
							СтрокаТовар.Номенклатура, СтрокаТовар.Характеристика, СтрокаТовар.Распоряжение);
  		СписокСтрок = СерииМЛ.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаСерия Из СписокСтрок Цикл
			
			Если СтрокаСерия.КоличествоФакт = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			КоличествоСерии = Мин(СтрокаСерия.КоличествоФакт, КоличествоОстаток);
			
			Если СтрокаТовар.СтатусУказанияСерий = 13 Тогда
				
				Если НЕ ПерваяСтрока Тогда
					СтрокаТоварНовая = ТоварыНовая.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТоварНовая, СтрокаТовар);
				КонецЕсли; 
				
				СтрокаТоварНовая.Серия = СтрокаСерия.Серия;
				СтрокаТоварНовая.Количество = КоличествоСерии;
				
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТоварНовая, СтруктураДействий, КэшированныеЗначения);
				
			Иначе
				
				НоваяСерия = ТаблицаСерии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСерия, СтрокаТовар);
				НоваяСерия.Серия = СтрокаСерия.Серия;
				НоваяСерия.Количество = КоличествоСерии;
				
			КонецЕсли; 
			
			КоличествоОстаток = КоличествоОстаток - КоличествоСерии;
			СтрокаСерия.КоличествоФакт = СтрокаСерия.КоличествоФакт - КоличествоСерии;
			
			ПерваяСтрока = Ложь;
			
			Если КоличествоОстаток = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаСерии.Свернуть("Серия,Номенклатура,Характеристика,Назначение,Склад,Подразделение", "Количество");
	
	Объект.Товары.Загрузить(ТоварыНовая);
	Объект.Серии.Загрузить(ТаблицаСерии);
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий);
	
КонецПроцедуры

//-- НЕ УТКА

#КонецОбласти

#Область СозданиеНаОсновании

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.СписаниеЗатратНаВыпуск.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Документы.ПоручениеЭкспедитору.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	КомандаСоздатьНаОсновании = Обработки.СправочноеРазмещениеНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(
									КомандыСозданияНаОсновании);
	
	Если КомандаСоздатьНаОсновании <> Неопределено Тогда
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаСоздатьНаОсновании,
															"НаправлениеВыпуска",
															Перечисления.ХозяйственныеОперации.ВыпускПродукцииНаСклад,
															ВидСравнения.Равно);
	КонецЕсли;
	
КонецПроцедуры

// Добавляет команду для ввода на основании
//

//++ НЕ УТКА

// Добавляет команду создания документа "Выпуск продукции и выполнение работ".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОснованииМаршрутныхЛистов(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВыпускПродукции) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.СоздатьНаОснованииМаршрутныхЛистов";
		КомандаСоздатьНаОсновании.Идентификатор = "СоздатьНаОснованииМаршрутныхЛистов";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Выпуск продукции и выполнение работ';
														|en = 'Product release and work performance'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПроизводство";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

//-- НЕ УТКА

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Функция ПолноеИмяДокумента()

	Возврат "Документ.ВыпускПродукции";

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента           = ПолноеИмяДокумента();
	СинонимТаблицыДокумента      = "";
	ВЗапросеЕстьИсточник         = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ЗначенияПараметров = Новый Структура();
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("Дата", "ТаблицаТовары.Ссылка.Дата");
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоПодразделению", """""");
	ПереопределениеРасчетаПараметров.Вставить("НакладнаяЯвляетсяРаспоряжением",
		"ТаблицаТовары.Ссылка.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)");
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "";
		ВЗапросеЕстьИсточник = Ложь;
		
	//++ НЕ УТКА

	//++ Устарело_Переработка24
	ИначеЕсли ИмяРегистра = "УслугиДавальцуКОформлению" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаУслугиДавальцуКОформлению(Запрос, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТовары";
	//-- Устарело_Переработка24

	//-- НЕ УТКА
	
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ВидДеятельностиНДС

Функция ПараметрыЗаполненияВидаДеятельностиНДС(Документ) Экспорт
	
	Реквизиты = Новый Структура("Дата, Организация, Склад, НаправлениеВыпуска, НаправлениеДеятельности");
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ВыпускПродукции") Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, Реквизиты);
	Иначе
		ЗаполнитьЗначенияСвойств(Реквизиты, Документ);
	КонецЕсли;
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС();
	ПараметрыЗаполнения.Дата = Реквизиты.Дата;
	Если Реквизиты.НаправлениеВыпуска = Перечисления.ХозяйственныеОперации.ВыпускПродукцииНаСклад Тогда
		ПараметрыЗаполнения.Склад = Реквизиты.Склад;
	КонецЕсли;
	ПараметрыЗаполнения.Организация = Реквизиты.Организация;
	ПараметрыЗаполнения.НаправлениеДеятельности = Реквизиты.НаправлениеДеятельности;
	
	ПараметрыЗаполнения.ВыпускПродукцииИРабот = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
//-- Устарело_Производство21
