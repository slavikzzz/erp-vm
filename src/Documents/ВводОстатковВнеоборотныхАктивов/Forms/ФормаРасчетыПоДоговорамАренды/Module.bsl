
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриСозданииЧтенииНаСервере();
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	Заголовок = ВнеоборотныеАктивыВызовСервера.ПредставлениеВводаОстатков2_2(Объект);
	
	ЗаполнитьСлужебныеРеквизитыТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РасчетыПоДоговорамАрендыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Объект.Организация);
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("Отбор", СтруктураОтбора);
	
	ОткрытьФорму(
		"Справочник.ДоговорыАренды.ФормаВыбора",
		ПараметрыФормыВыбора,
		ЭтаФорма,
		ЭтаФорма,,,
		Новый ОписаниеОповещения(
			"ОбработкаВыбораДоговора",
			ЭтаФорма),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетыПоДоговорамАрендыКонтрагентПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РасчетыПоДоговорамАренды.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Контрагент) Тогда
		ЗаполнитьСлужебныеРеквизитыТаблицы(Элементы.РасчетыПоДоговорамАренды.ТекущаяСтрока);
	Иначе
		ТекущиеДанные.ДоговорВВалютеРегл = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетыПоДоговорамАрендыДоговорПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РасчетыПоДоговорамАренды.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Договор) Тогда
		ЗаполнитьСлужебныеРеквизитыТаблицы(Элементы.РасчетыПоДоговорамАренды.ТекущаяСтрока);
	Иначе
		ТекущиеДанные.ДоговорВВалютеРегл = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетыПоДоговорамАрендыТипЗадолженностиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РасчетыПоДоговорамАренды.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ТипЗадолженности) Тогда
		ЗаполнитьСлужебныеРеквизитыТаблицы(Элементы.РасчетыПоДоговорамАренды.ТекущаяСтрока);
	Иначе
		ТекущиеДанные.ДоговорВВалютеРегл = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораДоговора(Результат, ДополнительныеПараметры) Экспорт
	
	ОбработкаВыбораДоговораНаСервере(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	ВалютаРегламентированногоУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Объект.Организация);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	Заголовок = ВнеоборотныеАктивыВызовСервера.ПредставлениеВводаОстатков2_2(Объект);
	
	ВалютаРегламентированногоУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Объект.Организация);
	
	ЗаполнитьСлужебныеРеквизитыТаблицы();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	#Область СуммаРегл
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РасчетыПоДоговорамАрендыСуммаРегл.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.РасчетыПоДоговорамАренды.ДоговорВВалютеРегл");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не требуется>';
																|en = '<not required>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораДоговораНаСервере(ВыбранноеЗначение)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Договор", ВыбранноеЗначение);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ВидыСчетовРасчетовСАрендодателями", РегистрыСведений.СчетаРеглУчетаТребующиеНастройки.НастраиваемыеВидыСчетов("РасчетыСАрендодателями"));
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Партнер КАК Партнер,
	|	Т.Контрагент КАК Контрагент,
	|	Т.Ссылка КАК Договор,
	|	ЕСТЬNULL(НастройкиПоАналитике.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчета,
	|	ВидыСчетов.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатеж) КАК СальдоДебетовое,
	|	ВЫБОР
	|		КОГДА Т.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоговорВВалютеРегл,
	|	ВЫБОР
	|		КОГДА ВидыСчетов.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.УслугаПоАренде)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|		КОГДА ВидыСчетов.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупнаяСтоимость)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|		КОГДА ВидыСчетов.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатеж)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|		КОГДА ВидыСчетов.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства)
	|		КОНЕЦ КАК ТипЗадолженности
	|ИЗ
	|	Справочник.ДоговорыАренды КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Перечисление.ВидыСчетовРеглУчета КАК ВидыСчетов
	|	ПО
	|		ВидыСчетов.Ссылка В (&ВидыСчетовРасчетовСАрендодателями)
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоАналитике
	|	ПО 
	|		НастройкиПоАналитике.ВидСчета = ВидыСчетов.Ссылка
	|		И НастройкиПоАналитике.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И Т.ГруппаФинансовогоУчета = НастройкиПоАналитике.АналитикаУчета
	|		И НастройкиПоАналитике.МестоУчета = НЕОПРЕДЕЛЕНО
	|ГДЕ
	|	Т.Ссылка = &Договор И ВЫБОР
	|		КОГДА ВидыСчетов.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупнаяСтоимость) ТОГДА Т.ЕстьВыкупПредметовАренды
	|		КОГДА ВидыСчетов.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатеж) ТОГДА Т.ЕстьОбеспечительныйПлатеж
	|		КОГДА ВидыСчетов.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства) ТОГДА Т.Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендатор)
	|		ИНАЧЕ ИСТИНА КОНЕЦ";
	#КонецОбласти
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(Объект.РасчетыПоДоговорамАренды.Добавить(), Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизитыТаблицы(ИдентификаторСтроки=Неопределено)
	
	МассивВыделенныхСтрок = Неопределено;
	Если ЗначениеЗаполнено(ИдентификаторСтроки) Тогда
		МассивВыделенныхСтрок = Новый Массив;
		МассивВыделенныхСтрок.Добавить(Объект.РасчетыПоДоговорамАренды.НайтиПоИдентификатору(ИдентификаторСтроки));
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", Объект.РасчетыПоДоговорамАренды.Выгрузить(МассивВыделенныхСтрок, "НомерСтроки, Договор"));
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	(ВЫРАЗИТЬ(Т.НомерСтроки КАК ЧИСЛО)) - 1 КАК ИндексСтроки,
	|	ВЫРАЗИТЬ(Т.Договор КАК Справочник.ДоговорыАренды) КАК Договор
	|ПОМЕСТИТЬ втТаблицаДокумента
	|ИЗ
	|	&Таблица КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ИндексСтроки КАК ИндексСтроки,
	|	ВЫБОР
	|		КОГДА Т.Договор.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоговорВВалютеРегл
	|ИЗ
	|	втТаблицаДокумента КАК Т";
	#КонецОбласти
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(Объект.РасчетыПоДоговорамАренды[Выборка.ИндексСтроки], Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

