#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Действие") И ДанныеЗаполнения.Действие = "ЗаполнитьПоПараметрамЗаполнения" Тогда
			ЗаполнитьПоПараметрамЗаполнения(ДанныеЗаполнения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ДатаЗапрета = Документы.ЕжегодныеСтандартныеВычеты.ДатаЗапрета(Дата, НалоговыйПериод);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ДанныеДляПроведения = ПолучитьДанныеДляПроведения();
	
	Если ДанныеДляПроведения.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	УчетНДФЛ.СформироватьПравоНаИмущественныеВычеты(Движения, Отказ, Организация, ПрименятьВычетыС, ДанныеДляПроведения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если РазмерВычета - ИспользованоУДругихНА <= 0 Тогда
		ТекстСообщения = НСтр("ru = 'Размер вычета ГТО должен быть больше нуля (с учетом ранее использованного вычета у других налоговых агентов)';
								|en = 'Размер вычета ГТО должен быть больше нуля (с учетом ранее использованного вычета у других налоговых агентов)'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.РазмерВычета");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеДляПроведения()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕжегодныеСтандартныеВычеты.Сотрудник КАК Сотрудник,
	|	ЕжегодныеСтандартныеВычеты.НалоговыйПериод КАК НалоговыйПериод,
	|	ЕжегодныеСтандартныеВычеты.РазмерВычета КАК РазмерВычета,
	|	ЕжегодныеСтандартныеВычеты.ИспользованоУДругихНА КАК ИспользованоУДругихНА,
	|	НАЧАЛОПЕРИОДА(ЕжегодныеСтандартныеВычеты.Дата, МЕСЯЦ) КАК МесяцРегистрации
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	Документ.ЕжегодныеСтандартныеВычеты КАК ЕжегодныеСтандартныеВычеты
	|ГДЕ
	|	ЕжегодныеСтандартныеВычеты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕжегодныеСтандартныеВычеты.МесяцРегистрации КАК МесяцРегистрации,
	|	ЕжегодныеСтандартныеВычеты.Сотрудник КАК ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код150) КАК КодВычета,
	|	ЕжегодныеСтандартныеВычеты.НалоговыйПериод КАК Год,
	|	ЕжегодныеСтандартныеВычеты.РазмерВычета - ЕжегодныеСтандартныеВычеты.ИспользованоУДругихНА КАК Сумма
	|ИЗ
	|	ВТДанныеДокумента КАК ЕжегодныеСтандартныеВычеты
	|ГДЕ
	|	ЕжегодныеСтандартныеВычеты.РазмерВычета - ЕжегодныеСтандартныеВычеты.ИспользованоУДругихНА <> 0";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Процедура ЗаполнитьПоПараметрамЗаполнения(ДанныеЗаполнения)
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	
	ЗаполняемыеЗначения = Новый Структура(
		"Месяц, 
		|Ответственный");
	ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗаполняемыеЗначения, ТекущаяДатаСеанса());
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗаполняемыеЗначения);
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли