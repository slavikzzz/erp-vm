#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		Если Не ЗначениеЗаполнено(Сотрудник) Тогда
			Сотрудник = КадровыйУчет.ОсновнойСотрудникФизическогоЛица(ФизическоеЛицо, Организация, ДатаСоздания);
		КонецЕсли;
		
		Если ДанныеЗаполнения.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Опоздание Тогда
			ТипЗаявки = Перечисления.ТипыЗаявокКабинетСотрудника.ОпозданиеЛичныеДела;
		ИначеЕсли ДанныеЗаполнения.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Болезнь Тогда
			ТипЗаявки = Перечисления.ТипыЗаявокКабинетСотрудника.Болезнь;
		ИначеЕсли ДанныеЗаполнения.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ОтпускПоБеременностиИРодам Тогда
			ТипЗаявки = Перечисления.ТипыЗаявокКабинетСотрудника.ОтпускПоБеременностиИРодам;
		ИначеЕсли ДанныеЗаполнения.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ОтпускПоУходуЗаРебенком Тогда
			ТипЗаявки = Перечисления.ТипыЗаявокКабинетСотрудника.ОтпускПоУходуЗаРебенком;
		ИначеЕсли ДанныеЗаполнения.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Отгул Тогда
			ТипЗаявки = Перечисления.ТипыЗаявокКабинетСотрудника.Отгул;
		ИначеЕсли ДанныеЗаполнения.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Командировка Тогда
			ТипЗаявки = Перечисления.ТипыЗаявокКабинетСотрудника.Командировка;
		ИначеЕсли ДанныеЗаполнения.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ЛичныеДела Тогда
			ТипЗаявки = Перечисления.ТипыЗаявокКабинетСотрудника.ОпозданиеЛичныеДела;
		ИначеЕсли ДанныеЗаполнения.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ДниУходаЗаДетьмиИнвалидами Тогда
			ТипЗаявки = Перечисления.ТипыЗаявокКабинетСотрудника.ДниУходаЗаДетьмиИнвалидами;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоНовый() И ПометкаУдаления И Не ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления") Тогда
		Если Не Пользователи.ЭтоПолноправныйПользователь(, , Ложь)
			И Не ДополнительныеСвойства.Свойство("РазрешенаПометкаУдаления") Тогда
			ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Пометка на удаление объектов ""%1"" не предусмотрена';
				|en = 'Пометка на удаление объектов ""%1"" не предусмотрена'"),
			Метаданные().Синоним);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, , , Отказ);
		КонецЕсли;
	КонецЕсли;
	
	РезультатВыполненияЗаявки = Неопределено;
	Если ДополнительныеСвойства.Свойство("РезультатВыполненияЗаявки", РезультатВыполненияЗаявки) Тогда
		ЗаявкиСотрудников.ПередЗаписьюВыполняемойЗаявки(ЭтотОбъект, РезультатВыполненияЗаявки, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли