#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Дата");
	Поля.Добавить("Номер");
	Поля.Добавить("ПричинаОтсутствия");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Шаблон = НСтр("ru = 'Сообщение %1 от %2';
					|en = 'Сообщение %1 от %2'");
	Если Данные.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Опоздание Тогда
		Шаблон = НСтр("ru = 'Сообщение об опоздании %1 от %2';
						|en = 'Сообщение об опоздании %1 от %2'");
	ИначеЕсли Данные.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Болезнь Тогда
		Шаблон = НСтр("ru = 'Отсутствие по болезни %1 от %2';
						|en = 'Отсутствие по болезни %1 от %2'");
	ИначеЕсли Данные.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ОтпускПоБеременностиИРодам Тогда
		Шаблон = НСтр("ru = 'Отпуск по беременности и родам %1 от %2';
						|en = 'Отпуск по беременности и родам %1 от %2'");
	ИначеЕсли Данные.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ОтпускПоУходуЗаРебенком Тогда
		Шаблон = НСтр("ru = 'Отпуск по уходу за ребенком %1 от %2';
						|en = 'Отпуск по уходу за ребенком %1 от %2'");
	ИначеЕсли Данные.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Отгул Тогда
		Шаблон = НСтр("ru = 'Заявка на отгул %1 от %2';
						|en = 'Заявка на отгул %1 от %2'");
	ИначеЕсли Данные.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Командировка Тогда
		Шаблон = НСтр("ru = 'Заявка на командировку %1 от %2';
						|en = 'Заявка на командировку %1 от %2'");
	ИначеЕсли Данные.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ЛичныеДела Тогда
		Шаблон = НСтр("ru = 'Отсутствие по личным обстоятельствам %1 от %2';
						|en = 'Отсутствие по личным обстоятельствам %1 от %2'");
	ИначеЕсли Данные.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ДниУходаЗаДетьмиИнвалидами Тогда
		Шаблон = НСтр("ru = 'Доп. выходные дни для ухода за детьми инвалидами %1 от %2';
						|en = 'Доп. выходные дни для ухода за детьми инвалидами %1 от %2'");
	КонецЕсли;

	Представление = СтрШаблон(Шаблон, Данные.Номер, Данные.Дата);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	ОписаниеСостава = ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта();
	ОписаниеСостава.ИспользоватьКраткийСостав = Ложь;
	ОписаниеСостава.ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента = Ложь;
	ОписаниеСостава.ЗаполнятьФизическиеЛицаПоСотрудникам = Ложь;
	
	ОписаниеХранения = ЗарплатаКадрыСоставДокументов.ОписаниеХраненияСотрудниковФизическихЛиц();
	ОписаниеХранения.ПолеСотрудник      = "Сотрудник";
	ОписаниеХранения.ПолеФизическоеЛицо = "ФизическоеЛицо";
	
	ОписаниеСостава.ОписаниеХраненияСотрудниковФизическихЛиц.Добавить(ОписаниеХранения);
	
	Возврат ОписаниеСостава;
	
	
КонецФункции

Функция ОписаниеДокументаДляЗаявки(СписокОбщихПолей) Экспорт
	
	СтрокаСвойств = "ДатаНачала,ДатаОкончания,ПричинаОтсутствия,ОтсутствиеВесьДень";
	СписокПолей = СтрШаблон("%1,%2", СписокОбщихПолей, СтрокаСвойств);
	
	Возврат Новый Структура(СписокПолей);

КонецФункции

Функция БизнесПроцессМенеджер() Экспорт

	Возврат БизнесПроцессы.ИсполнениеЗаявкиСотрудника;

КонецФункции

Функция НаименованиеЗадачи(ДокументОбъект) Экспорт
	
	Если ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Опоздание Тогда
		ШаблонНаименования = НСтр("ru = 'Сообщение об опоздании';
									|en = 'Сообщение об опоздании'");
	ИначеЕсли ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Болезнь Тогда
		ШаблонНаименования = НСтр("ru = 'Отсутствие по болезни';
									|en = 'Отсутствие по болезни'");
	ИначеЕсли ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ОтпускПоБеременностиИРодам Тогда
		ШаблонНаименования = НСтр("ru = 'Отпуск по беременности и родам';
									|en = 'Отпуск по беременности и родам'");
	ИначеЕсли ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ОтпускПоУходуЗаРебенком Тогда
		ШаблонНаименования = НСтр("ru = 'Заявление на отпуск по уходу за ребенком';
									|en = 'Заявление на отпуск по уходу за ребенком'");
	ИначеЕсли ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Отгул Тогда
		ШаблонНаименования = НСтр("ru = 'Заявление на отгул';
									|en = 'Заявление на отгул'");
	ИначеЕсли ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Командировка Тогда
		ШаблонНаименования = НСтр("ru = 'Заявление на командировку';
									|en = 'Заявление на командировку'");
	ИначеЕсли ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ЛичныеДела Тогда
		ШаблонНаименования = НСтр("ru = 'Отсутствие по личным обстоятельствам';
									|en = 'Отсутствие по личным обстоятельствам'");
	ИначеЕсли ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ДниУходаЗаДетьмиИнвалидами Тогда
		ШаблонНаименования = НСтр("ru = 'Доп. выходные дни для ухода за детьми инвалидами';
									|en = 'Доп. выходные дни для ухода за детьми инвалидами'");
	КонецЕсли;
	
	Возврат СтрШаблон("%1: %2", ШаблонНаименования, Строка(ДокументОбъект.ФизическоеЛицо));

КонецФункции

Функция СодержаниеЗадачи(ДокументОбъект) Экспорт
	
	Если ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Опоздание Тогда
		ШаблонНаименования = НСтр("ru = 'Обработать сообщение об опоздании сотрудника.';
									|en = 'Обработать сообщение об опоздании сотрудника.'");
	ИначеЕсли ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Болезнь Тогда
		ШаблонНаименования = НСтр("ru = 'Обработать сообщение отсутствие по болезни.';
									|en = 'Обработать сообщение отсутствие по болезни.'");
	ИначеЕсли ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ОтпускПоБеременностиИРодам Тогда
		ШаблонНаименования = НСтр("ru = 'Обработать сообщение отпуск по беременности и родам.';
									|en = 'Обработать сообщение отпуск по беременности и родам.'");
	ИначеЕсли ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ОтпускПоУходуЗаРебенком Тогда
		ШаблонНаименования = НСтр("ru = 'Обработать заявление на отпуск по уходу за ребенком.';
									|en = 'Обработать заявление на отпуск по уходу за ребенком.'");
	ИначеЕсли ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Отгул Тогда
		ШаблонНаименования = НСтр("ru = 'Обработать заявление на отгул.';
									|en = 'Обработать заявление на отгул.'");
	ИначеЕсли ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.Командировка Тогда
		ШаблонНаименования = НСтр("ru = 'Обработать заявку на командировку.';
									|en = 'Обработать заявку на командировку.'");
	ИначеЕсли ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ЛичныеДела Тогда
		ШаблонНаименования = НСтр("ru = 'Обработать сообщение об отсутствие по личным обстоятельствам.';
									|en = 'Обработать сообщение об отсутствие по личным обстоятельствам.'");
	ИначеЕсли ДокументОбъект.ПричинаОтсутствия = Перечисления.ПричиныОтсутствийЗаявокКабинетСотрудника.ДниУходаЗаДетьмиИнвалидами Тогда
		ШаблонНаименования = НСтр("ru = 'Обработать заявление на дополнительные выходные дни для ухода за детьми инвалидами.';
									|en = 'Обработать заявление на дополнительные выходные дни для ухода за детьми инвалидами.'");
	КонецЕсли;
	
	Шаблон = НСтр("ru = '%1
	|Организация: %2
	|Сотрудник: %3';
	|en = '%1
	|Организация: %2
	|Сотрудник: %3'");
	
	Возврат СтрШаблон(Шаблон, ШаблонНаименования, Строка(ДокументОбъект.Организация), Строка(ДокументОбъект.Сотрудник));
	
КонецФункции

Функция РольИсполнителяЗаявки() Экспорт

	Возврат Справочники.РолиИсполнителей.ОтветственныйЗаСогласованиеОтсутствий;

КонецФункции

#КонецОбласти

#КонецЕсли