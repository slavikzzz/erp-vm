#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	СформироватьДвиженияПоБронированию(Движения, ДанныеДляПроведения.ДвиженияПоБронированию);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	УникальныеСотрудники = Новый Соответствие;
	Для Каждого ДанныеСотрудника Из Сотрудники Цикл 
		Если ЗначениеЗаполнено(ДанныеСотрудника.Сотрудник) Тогда 
			Если УникальныеСотрудники[ДанныеСотрудника.Сотрудник] <> Неопределено Тогда 
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Строка %1: Сотрудник %2 уже был введен ранее в строке %3.';
						|en = 'Строка %1: Сотрудник %2 уже был введен ранее в строке %3.'"),
					ДанныеСотрудника.НомерСтроки, ДанныеСотрудника.Сотрудник, УникальныеСотрудники[ДанныеСотрудника.Сотрудник]);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка,
					"Объект.Сотрудники[" + Формат(ДанныеСотрудника.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Сотрудник" , , Отказ);
			Иначе 
				УникальныеСотрудники.Вставить(ДанныеСотрудника.Сотрудник, ДанныеСотрудника.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведения()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПриказОПрекращенииБронирования.Ссылка.Дата КАК Период,
	               |	ПриказОПрекращенииБронирования.Сотрудник КАК ФизическоеЛицо,
	               |	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация
	               |ИЗ
	               |	Документ.ПриказОПрекращенииБронирования.Сотрудники КАК ПриказОПрекращенииБронирования
	               |ГДЕ
	               |	ПриказОПрекращенииБронирования.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеДляПроведения = Новый Структура;
	
	ДвиженияПоБронированию = РезультатЗапроса.Выгрузить();
	ДанныеДляПроведения.Вставить("ДвиженияПоБронированию", ДвиженияПоБронированию);
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

Процедура СформироватьДвиженияПоБронированию(Движения, ДвиженияПоБронированию) Экспорт 
	
	Движения.БронированиеСотрудников.Загрузить(ДвиженияПоБронированию);
	
	Движения.БронированиеСотрудников.Записать();
	Движения.БронированиеСотрудников.Записывать = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
