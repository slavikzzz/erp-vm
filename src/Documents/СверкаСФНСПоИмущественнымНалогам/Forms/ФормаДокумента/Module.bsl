
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ЗначениеКопирования") 
		И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ЗначениеКопирования, "Организация, Налог, РегистрацияВНалоговомОргане");
			
	КонецЕсли;

	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ЗначенияЗаполнения);
	КонецЕсли;

	Если ЗначениеЗаполнено(Налог) Тогда
		ОтборНалог = Налог;
		Элементы.Налог.Видимость = Ложь;
		Элементы.НадписьОткрытьСверкуНалога.Заголовок = СтрШаблон(
			НСтр("ru = 'Открыть сверку расчета %1 с ФНС';
				|en = 'Open the %1 calculation reconciliation with the FTS'"),
			СверкаСФНСПоИмущественнымНалогамФормыВызовСервера.ПредставлениеНалогаРодительныйПадеж(Налог));
	Иначе
		Элементы.НадписьОткрытьСверкуНалога.Видимость = Ложь;
		// Установим переключатель на 1-й элемент списка
		Если Элементы.Налог.СписокВыбора.Количество() > 0 Тогда
			Налог = Элементы.Налог.СписокВыбора[0].Значение;
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(Организация) Тогда
		ОтборОрганизация = Организация;
		Элементы.Организация.Видимость = Ложь;
	Иначе
		Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	КонецЕсли;

	РегистрацияВНалоговомОргане = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "РегистрацияВНалоговомОргане");

	Элементы.РегистрацияВНалоговомОргане.Видимость = Справочники.Организации.ИспользуетсяНесколькоОрганизаций()
		Или Справочники.РегистрацииВНалоговомОргане.ПолучитьКоличествоПодчиненныхЭлементовПоВладельцу(Организация) <> 1;

	// По умолчанию за прошедший год
	Год = Год(ТекущаяДатаСеанса()) - 1;

	СформироватьТекстНадписиРасчетФНС(ЭтотОбъект);
	НастроитьКнопки(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьРасчет(Команда)
	ОповещениеПослеЗагрузкиФайла = Новый ОписаниеОповещения("ЗагрузитьРасчетПослеПомещенияФайла", ЭтотОбъект);
	СверкаСФНСПоИмущественнымНалогамФормыКлиент.НачатьЗагрузкуРасчетаНалогаИзФайла(ЭтотОбъект, ОповещениеПослеЗагрузкиФайла, ОтборНалог,);
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьБезФайла(Команда)
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВвестиВручную;
	НастроитьКнопки(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВернутьсяНазад(Команда)
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЗагрузитьИзФайла;
	НастроитьКнопки(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСверку(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;	
	
	ПараметрыФормыДетальнойСверки = ПараметрыФормыДетальнойСверки();
	
	Если ПараметрыФормыДетальнойСверки.Свойство("Ключ") Тогда
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ВопросОткрытьСверкуПослеОтвета", ЭтотОбъект, ПараметрыФормыДетальнойСверки),
			Нстр("ru = 'Такая сверка расчета уже есть. Открыть ее?';
				|en = 'This calculation reconciliation already exists. Do you want to open it?'"),
			РежимДиалогаВопрос.ДаНет,
			,
			,
			Нстр("ru = 'Открыть существующую сверку';
				|en = 'Open the existing reconciliation'"));
	Иначе
		ОткрытьФорму("Документ.СверкаСФНСПоИмущественнымНалогам.Форма.ФормаСверки",
			ПараметрыФормыДетальнойСверки,
			,
			Ложь);
		Закрыть();
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура СформироватьТекстНадписиРасчетФНС(Форма)

	Налог = Форма.ОтборНалог;

	Абзацы = Новый Массив;

	ТекстАбзаца = Нстр("ru = 'С 1 мая 2022 года налоговая присылает сообщения в машиночитаемом xml-формате.
		|Наименование файла, приложенного к сообщению, начинается на %1.';
		|en = 'Since 05/01/22, the tax authority sends messages as machine-readable XML files.
		|The name of the attachment begins with %1.'");
	ТекстАбзаца = СтрЗаменить(ТекстАбзаца, Символы.ПС, " ");

	КНДФормыРасчета = "";

	ТекстКНД = Новый Массив;
	Если Не ЗначениеЗаполнено(Налог) Тогда
		ТекстКНД.Добавить(""""+СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.КНДРасчетаТранспортногоНалога()+"""");
		ТекстКНД.Добавить(""""+СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.КНДРасчетаЗемельногоНалога()+"""");
	ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		ТекстКНД.Добавить(""""+СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.КНДРасчетаТранспортногоНалога()+"""");
	ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
		ТекстКНД.Добавить(""""+СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.КНДРасчетаЗемельногоНалога()+"""");
	КонецЕсли;

	КНДФормыРасчета = СтрСоединить(ТекстКНД,", ");

	ТекстКНД = Новый Массив;
	ТекстКНД.Добавить(КНДФормыРасчета);
	ТекстКНД.Добавить(""""+СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.КНДРасчетаИмущественныхНалогов()+"""");

	КНДФормыРасчета = СтрСоединить(ТекстКНД," или ");

	ТекстАбзаца = СтрШаблон(ТекстАбзаца, КНДФормыРасчета);
	Абзацы.Добавить(ТекстАбзаца);

	ТекстАбзаца = Нстр("ru = 'Если у вас есть xml-файл с расчетом, загрузите его – программа сама сравнит расчеты.';
						|en = 'If the XML file with the calculation is available, import it. The application will reconcile the calculations.'");
	Абзацы.Добавить(ТекстАбзаца);

	Форма.Элементы.НадписьРасчетФНС.Заголовок = СтрСоединить(Абзацы, Символы.ПС);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьКнопки(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЗагрузитьИзФайла Тогда
		Элементы.Назад.Видимость = Ложь;
		Элементы.Открыть.Видимость = Ложь;
		Элементы.ЗагрузитьРасчет.Видимость = Истина;
		Элементы.ЗагрузитьРасчет.КнопкаПоУмолчанию = Истина;
		Элементы.ПродолжитьБезФайла.Видимость = Истина;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВвестиВручную Тогда
		Элементы.Назад.Видимость = Истина;
		Элементы.Открыть.Видимость = Истина;
		Элементы.Открыть.КнопкаПоУмолчанию = Истина;
		Элементы.ЗагрузитьРасчет.Видимость = Ложь;
		Элементы.ПродолжитьБезФайла.Видимость = Ложь;
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ВопросОткрытьСверкуПослеОтвета(Ответ, ПараметрыФормыДетальнойСверки) Экспорт

	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;	
	КонецЕсли;	

	ОткрытьФорму("Документ.СверкаСФНСПоИмущественнымНалогам.Форма.ФормаСверки",
		ПараметрыФормыДетальнойСверки,
		,
		Ложь);
	Закрыть();
	
КонецПроцедуры

&НаСервере
Функция ПараметрыФормыДетальнойСверки()

	НалоговыйПериод = Дата(Год, 1, 1);
	КодОтправителя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане, "Код");

	ДокументСверкаСФНС = Документы.СверкаСФНСПоИмущественнымНалогам.НайтиСуществующий(
		Организация, Налог, НалоговыйПериод, КодОтправителя);
	
	ПараметрыФормы = Новый Структура;
	
	Если ЗначениеЗаполнено(ДокументСверкаСФНС) Тогда
		ПараметрыФормы.Вставить("Ключ", ДокументСверкаСФНС);
	Иначе
		ЗначенияЗаполнения = Новый Структура;		
		ЗначенияЗаполнения.Вставить("Организация",     Организация);
		ЗначенияЗаполнения.Вставить("Налог",           Налог);	
		ЗначенияЗаполнения.Вставить("НалоговыйПериод", НалоговыйПериод);
		ЗначенияЗаполнения.Вставить("КодОтправителя",  КодОтправителя);
		ЗначенияЗаполнения.Вставить("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	КонецЕсли;
	
	Возврат ПараметрыФормы;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьРасчетПослеПомещенияФайла(ПомещенныйФайл, ОповещениеПослеЗагрузкиФайла) Экспорт

	Если ПомещенныйФайл = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ИмяФайла = ПомещенныйФайл.Имя; // полный путь к файлу (исключение - веб-клиент без расширения работы с файлами: там будет имя файла)
	
	// Из полного пути оставляем только имя файла. 
	РазделительПутиФайла = СтрНайти(ИмяФайла, "\", НаправлениеПоиска.СКонца);
	Если РазделительПутиФайла = 0 Тогда
		РазделительПутиФайла = СтрНайти(ИмяФайла, "/", НаправлениеПоиска.СКонца);
	КонецЕсли;
	
	Если РазделительПутиФайла > 0 Тогда
		ИмяФайла = Сред(ИмяФайла, РазделительПутиФайла + 1);
	КонецЕсли; 
	
	Файл = Новый Структура("Данные, ИмяФайла", ПомещенныйФайл.Хранение, ИмяФайла);

	Отбор = Неопределено;
	Если ЗначениеЗаполнено(ОтборОрганизация) Или ЗначениеЗаполнено(ОтборНалог) Тогда 
		Отбор = Новый Структура;
		Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
			Отбор.Вставить("Организация", ОтборОрганизация);
		КонецЕсли;
		Если ЗначениеЗаполнено(ОтборНалог) Тогда
			Отбор.Вставить("Налог", ОтборНалог);
		КонецЕсли;
	КонецЕсли;

	СписокРасчетовИзФайла = СверкаСФНСПоИмущественнымНалогамФормыВызовСервера.СписокРасчетовИзФайла(Файл, Отбор);
	ОповещениеПослеПереходаКСверке = Новый ОписаниеОповещения("ЗагрузитьРасчетПослеПереходаКСверке", ЭтотОбъект);
	СверкаСФНСПоИмущественнымНалогамФормыКлиент.ПерейтиКСверкеПослеФормированияСпискаРасчетовНалога(
		ЭтотОбъект,
		СписокРасчетовИзФайла,
		ОповещениеПослеПереходаКСверке);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьРасчетПослеПереходаКСверке(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти
