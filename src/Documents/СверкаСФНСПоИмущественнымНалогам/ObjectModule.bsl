
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		 И ДанныеЗаполнения.Свойство("ЗаполнениеИзОбъекта")
		 И ДанныеЗаполнения.ЗаполнениеИзОбъекта Тогда
		// Заполнение выполняется из переданного объекта при создании формы 
		Возврат; 
	КонецЕсли; 

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("КодыНалоговыхОрганов") Тогда
		КодыНалоговыхОрганов = ДанныеЗаполнения.КодыНалоговыхОрганов;
	Иначе
		КодыНалоговыхОрганов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(КодОтправителя);
	КонецЕсли;
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Объект", ЭтотОбъект);
	ПараметрыЗаполнения.Вставить("КодыНалоговыхОрганов", КодыНалоговыхОрганов);
	
	Документы.СверкаСФНСПоИмущественнымНалогам.ЗаполнитьОбъектыСверки(ПараметрыЗаполнения);
	
	Если Не ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
		// Ищем регистрацию, которая соответствует коду отправителя
		РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане(
			Организация,
			,
			КодОтправителя);
	КонецЕсли;

	Если Не ЗначениеЗаполнено(РегистрацияВНалоговомОргане) И Сверка.Количество() > 0 Тогда
		// В базе может не быть регистрации с кодом отправителя. Но если сверка заполнялась по переданному массиву кодов НО,
		// то в таблице могут быть другие коды. Поэтому ищем регистрацию по первому коду налогового органа из сверки - 
		// такая регистрация точно есть, т.к. на ней зарегистрирован объект.
		РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане(
			Организация,
			,
			Сверка[0].КодНалоговогоОргана);
	КонецЕсли;

	РасчетФНС.Очистить();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("СообщениеФНС") Тогда
			ЗагрузитьРасчетФНСИзСообщения(ДанныеЗаполнения.СообщениеФНС);
			ЗагруженРасчетФНС = Истина;
			СравнениеЗавершено = РасчетыСовпадают();
		ИначеЕсли ДанныеЗаполнения.Свойство("Файл") Тогда
			// Сбросим признак наличия объекта в расчете ФНС - это будет установлено при сверке
			Для Каждого СтрокаСверки Из Сверка Цикл
				СтрокаСверки.ОбъектЕстьВРасчетеФНС = Ложь;
			КонецЦикла;
			ЗагрузитьРасчетФНСИзФайла(ДанныеЗаполнения.Файл.Данные, ДанныеЗаполнения.Файл.ИмяФайла);
			ЗагруженРасчетФНС = Истина;
			СравнениеЗавершено = РасчетыСовпадают();
		КонецЕсли;
	КонецЕсли;

	Если Не ЗагруженРасчетФНС Тогда
		// При ручной сверке по умолчанию считаем, что расчеты сходятся.
		// Поэтому в строках сверки заполним суммы расчета ФНС по расчету программы.
		// Детали расчета ФНС не заполняем - это сделает пользователь, если обнаружит, что расчет по объекту отличается.
		Для Каждого СтрокаСверки Из Сверка Цикл
			СтрокаСверки.СуммаЛьготФНС = СтрокаСверки.СуммаЛьгот;
			СтрокаСверки.СуммаНалогаФНС = СтрокаСверки.СуммаНалога;
			СтрокаСверки.ОбъектЕстьВРасчетеФНС = Истина;
		КонецЦикла;
	КонецЕсли;

	// При автоматической сверке расчетов есть смысл отсортировать строки по ключевым полям сопоставления.
	// Это полезно в том случае, если один и тот же объект не сопоставился из-за расхождений в каком-то из этих полей -
	// тогда в отсортированном списке это будет заметно.
	Если ЗагруженРасчетФНС Тогда
		ТаблицаСверки = Сверка.Выгрузить();
		ТаблицаСверки.Колонки.Добавить("Сортировка", ОбщегоНазначения.ОписаниеТипаСтрока(100));
		Для каждого СтрокаСверки Из ТаблицаСверки Цикл
			Если Налог = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
				СтрокаСверки.Сортировка = Врег(СтрЗаменить(СтрокаСверки.РегистрационныйЗнак, " ", ""));
			Иначе
				СтрокаСверки.Сортировка = Врег(СтрЗаменить(СтрокаСверки.КадастровыйНомер, " ", ""));
			КонецЕсли;
		КонецЦикла;
		ТаблицаСверки.Сортировать("Сортировка, КодНалоговогоОргана, КодПоОКТМО");
		Сверка.Загрузить(ТаблицаСверки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	Если Не ПометкаУдаления Тогда 
	
		ДокументСверкаСФНС = Документы.СверкаСФНСПоИмущественнымНалогам.НайтиСуществующий(
			Организация, Налог, НалоговыйПериод, КодОтправителя, Ссылка);
			
		Если ЗначениеЗаполнено(ДокументСверкаСФНС) Тогда
			ВызватьИсключение Нстр("ru = 'Такая сверка расчета уже существует. Дублирование запрещено.';
									|en = 'Such calculation reconciliation already exists. Duplication is not allowed.'");
		КонецЕсли;
	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗагрузитьРасчетФНСИзСообщения(Сообщение)
		
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	Вложения = КонтекстЭДОСервер.ПолучитьФайлыДокументовРеализацииПолномочийНалоговыхОрганов(Сообщение);
	
	ТаблицаПоиска = Неопределено; // кэш таблицы для сопоставления объектов расчетов
	ИдентификаторыОбъектов = Неопределено; // кэш таблицы поиска элементов справочника ОС (если объект остутствует в расчете программы, но есть в ФНС)
	
	Для Каждого Файл Из Вложения Цикл
		ЗагрузитьРасчетФНСИзФайла(Файл.Данные, Файл.ИмяФайла, ТаблицаПоиска, ИдентификаторыОбъектов);
	КонецЦикла;

КонецПроцедуры

Процедура ЗагрузитьРасчетФНСИзФайла(Данные, ИмяФайла, ТаблицаПоиска = Неопределено, ИдентификаторыОбъектов = Неопределено) 

	Если ЗначениеЗаполнено(ИмяФайла) Тогда

		ЭтоРасчетТранспортногоНалога = СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.ЭтоФайлРасчетаТранспортногоНалога(ИмяФайла);
		ЭтоРасчетЗемельногоНалога = СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.ЭтоФайлРасчетаЗемельногоНалога(ИмяФайла);
		ЭтоРасчетИмущественныхНалогов = СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.ЭтоФайлРасчетаИмущественныхНалогов(ИмяФайла);

		Если Не ЭтоРасчетТранспортногоНалога
			 И Не ЭтоРасчетЗемельногоНалога
			 И Не ЭтоРасчетИмущественныхНалогов Тогда
			Возврат; 
		КонецЕсли;

	КонецЕсли;

	Попытка
		ПредставлениеXML = Справочники.ДокументыРеализацииПолномочийНалоговыхОрганов.ТекстСообщения(Данные);
		ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ПредставлениеXML);
		ВерсияФормата = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/ВерсФорм", "ИмяЭлемента").ЗначениеЭлемента;
		КНД = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/КНД", "ИмяЭлемента").ЗначениеЭлемента;
		СтрокиРасчета = СверкаСФНСПоИмущественнымНалогам.СтрокиРасчетаНалога(ДеревоЗагрузки, Налог);
	Исключение
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Ошибка при чтении файла %1. Возможно, файл имеет неверный формат:
			|%2';
			|en = 'An error occurred while reading the %1 file. The file might have an incorrect format:
			|%2'"),
			ИмяФайла,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки; 

	// В расчете транспортного налога ФНС может добавлять VIN в поле регистрационного знака в формате "[гос номер] (VIN [номер VIN])".
	// Понять, в каком формате заполнен конкретный файл можно только непосредственно проанализировав содержание записей (берем первую запись).
	// Поэтому здесь определяем, как именно заполнен рег знак, и если указан VIN, то далее учитываем это при парсинге рег знака,
	// а также в сопоставлении ТС учитываем VIN.
	// Если ТаблицаПоиска уже инициализирована, то значит, что формат рег знака уже был проанализирован или не требуется.
	Если ТаблицаПоиска = Неопределено И Налог = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог И СтрокиРасчета.Количество() > 0 Тогда 
		РегЗнакВПервойСтроке = СверкаСФНСПоИмущественнымНалогам.ЗначениеПараметраРасчета(СтрокиРасчета[0], "РегЗнак");
		СопоставлениеСУчетомVIN = (СтрНайти(РегЗнакВПервойСтроке, "VIN") > 0);
	КонецЕсли;
	
	Если ТаблицаПоиска = Неопределено Тогда
		ТаблицаПоиска = ТаблицаПоиска();
	КонецЕсли;
	
	КлючевыеПоляСверки = КлючевыеПоляСверки();

	Для Каждого СтрокаРасчетаФНС Из СтрокиРасчета Цикл
		
		// Пропускаем строки, в которых период расчета не совпадает с периодом сверки
		НалоговыйПериодФНС = Дата(СверкаСФНСПоИмущественнымНалогам.ЗначениеПараметраРасчета(СтрокаРасчетаФНС, "НалПер"), 1, 1);
		Если НалоговыйПериодФНС <> НалоговыйПериод Тогда
			Продолжить;
		КонецЕсли;

		Поиск = Новый Структура;
		
		Для Каждого ОписаниеПоля Из КлючевыеПоляСверки Цикл
			
			Если ОписаниеПоля.Ключ = "ИдентификационныйНомер" Тогда
				// VIN заполняется при парсинге поля регистрационного знака
				Продолжить;
			КонецЕсли;

			ЗначениеИзРасчетаФНС = СверкаСФНСПоИмущественнымНалогам.ЗначениеПараметраРасчета(СтрокаРасчетаФНС, ОписаниеПоля.Значение);
			// ФНС иногда в одно поле с гос номером (РегЗнак) вставляет VIN
			Если ОписаниеПоля.Ключ = "РегистрационныйЗнак" И СопоставлениеСУчетомVIN Тогда
				// Если для конкретной строки расчета не указан VIN, то ищем только по регистрационному знаку
				Для каждого Свойство Из СоставРегистрационногоЗнака(ЗначениеИзРасчетаФНС) Цикл
					Поиск.Вставить(Свойство.Ключ, Врег(СтрЗаменить(Свойство.Значение, " ", "")));
				КонецЦикла; 
			Иначе
				Поиск.Вставить(ОписаниеПоля.Ключ, Врег(СтрЗаменить(ЗначениеИзРасчетаФНС, " ", "")));
			КонецЕсли;

		КонецЦикла; 

		НайденнаяСтрокаСверки = Неопределено;
		НайденныеСтроки = ТаблицаПоиска.НайтиСтроки(Поиск);
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденнаяСтрокаСверки = НайденныеСтроки[0].СтрокаСверки;
		КонецЕсли;

		ДополнитьСверку(НайденнаяСтрокаСверки, СтрокаРасчетаФНС, ИдентификаторыОбъектов, Поиск, ВерсияФормата, КНД);

	КонецЦикла;

КонецПроцедуры

// Проверяет, все ли объекты есть в расчетах и совпадают ли суммы
// 
// Возвращаемое значение:
//   - Истина - по составу объектов и суммам расчеты совпадают
//
Функция РасчетыСовпадают() Экспорт 

	КоличествоСовпавших = Сверка.НайтиСтроки(Новый Структура("ПравильныйРасчет", 1)).Количество();
	КоличествоВсего = Сверка.Количество();

	Возврат КоличествоСовпавших = КоличествоВсего;

КонецФункции

Функция ТаблицаПоиска()

	КлючевыеПоляСверки = КлючевыеПоляСверки();

	ПоляПоиска = Новый Массив;
	Для Каждого ОписаниеПоля Из КлючевыеПоляСверки Цикл
		ПоляПоиска.Добавить(ОписаниеПоля.Ключ);
	КонецЦикла; 
	ПоляПоиска = СтрСоединить(ПоляПоиска, ",");

	ТаблицаПоиска = Сверка.ВыгрузитьКолонки(ПоляПоиска);
	ТаблицаПоиска.Колонки.Добавить("СтрокаСверки");

	// Заполняем таблицу поиска. При этом исключаем влияние регистра и пробелов в значениях ключевых полей. 
	Для Каждого СтрокаСверки Из Сверка Цикл
	    НоваяСтрока = ТаблицаПоиска.Добавить();
		Для Каждого ОписаниеПоля Из КлючевыеПоляСверки Цикл
			НоваяСтрока[ОписаниеПоля.Ключ] = Врег(СтрЗаменить(СтрокаСверки[ОписаниеПоля.Ключ], " ", ""));
		КонецЦикла; 
	    НоваяСтрока.СтрокаСверки = СтрокаСверки;
	КонецЦикла; 

	ТаблицаПоиска.Индексы.Добавить(ПоляПоиска);

	Возврат ТаблицаПоиска;

КонецФункции

Функция КлючевыеПоляСверки()

	КлючевыеПоляСверки = Новый Структура;

	Если Налог = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		КлючевыеПоляСверки.Вставить("РегистрационныйЗнак", "РегЗнак");
		Если СопоставлениеСУчетомVIN Тогда
			КлючевыеПоляСверки.Вставить("ИдентификационныйНомер", "РегЗнак");
		КонецЕсли;
	ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
		КлючевыеПоляСверки.Вставить("КадастровыйНомер", "НомКадастрЗУ");
	ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		КлючевыеПоляСверки.Вставить("КадастровыйНомер", "НомКадастрНИ");
	КонецЕсли;

	КлючевыеПоляСверки.Вставить("КодНалоговогоОргана", "КодНО");
	КлючевыеПоляСверки.Вставить("КодПоОКТМО", "ОКТМО");

	Возврат КлючевыеПоляСверки;

КонецФункции

Функция ПрочиеПоляСверки()

	ПоляСверки = Новый Структура;

	ПоляСверки.Вставить("СуммаЛьготФНС", "РазмНалЛьг");
	ПоляСверки.Вставить("СуммаНалогаФНС", "СумИсчисл");
	Если Налог = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		ПоляСверки.Вставить("НаименованиеОбъекта", "НаимОбъект");
	КонецЕсли;

	Возврат ПоляСверки;

КонецФункции

Функция ПоляРасчета(КНД)

	ПоляСверки = Новый Структура;

	ПоляСверки.Вставить("НалоговаяБаза", "НалБаза");
	
	Если Налог = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		ПоляСверки.Вставить("НалоговаяСтавка", "НалСтавка");
		ПоляСверки.Вставить("КоличествоМесяцевВладения", "ВладенТС");
		ПоляСверки.Вставить("ПовышающийКоэффициент", "ПовКоэф");
	ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
		ПоляСверки.Вставить("НалоговаяСтавка", "НалСтав");
		// В форме КНД 1153007 (расчет земельного налога), которая применяется до конца 2022 года, предусмотрена передача
		// суммы налогового высчета. С 2023 года применяется форма КНД 1152029 (все три налога вместе), и там уже нет
		// суммы налогового вычета.
		Если КНД = СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.КНДРасчетаЗемельногоНалога() Тогда
			ПоляСверки.Вставить("НалоговыйВычет", "НалВычет");
		КонецЕсли;
		ПоляСверки.Вставить("КоличествоМесяцевВладения", "ВладенЗУ");
		ПоляСверки.Вставить("ПовышающийКоэффициент", "ПовКоэф");
		ПоляСверки.Вставить("ДоляВПраве", "ДоляЗУ");
	ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		ПоляСверки.Вставить("НалоговаяСтавка", "НалСтав");
		ПоляСверки.Вставить("КоличествоМесяцевВладения", "ВладенИмОрг");
		ПоляСверки.Вставить("ДоляВПраве", "ДоляИмОрг");
	КонецЕсли;

	Возврат ПоляСверки;

КонецФункции

Процедура ДополнитьСверку(СтрокаСверки, СтрокаРасчетаФНС, ИдентификаторыОбъектов, ЗначенияКлюча, ВерсияФормата, КНД)

	Если СтрокаСверки = Неопределено Тогда
		СтрокаСверки = Сверка.Добавить();
		СтрокаСверки.ИдентификаторСтроки = Новый УникальныйИдентификатор();
		Для Каждого ОписаниеПоля Из КлючевыеПоляСверки() Цикл
			Если ОписаниеПоля.Ключ = "ИдентификационныйНомер" Тогда
				// VIN указывается в одном поле с регистрационным знаком
				Продолжить;
			КонецЕсли;
			ЗначениеИзРасчетаФНС = СверкаСФНСПоИмущественнымНалогам.ЗначениеПараметраРасчета(СтрокаРасчетаФНС, ОписаниеПоля.Значение);
			// ФНС иногда в одно поле с гос номером (РегЗнак) вставляет VIN
			Если ОписаниеПоля.Ключ = "РегистрационныйЗнак" И СопоставлениеСУчетомVIN Тогда
				ЗаполнитьЗначенияСвойств(СтрокаСверки, СоставРегистрационногоЗнака(ЗначениеИзРасчетаФНС)); 
			Иначе
				СтрокаСверки[ОписаниеПоля.Ключ] = ЗначениеИзРасчетаФНС;
			КонецЕсли;
		КонецЦикла;
		// Поищем объект налогообложения по гос. номеру (и по VIN, если он указан в расчете ФНС) или кадастровому номеру.
		// Возможно, ранее объект был учтен, но уже снят с учета, а ФНС продолжает начислять налог.
		// В этом случае ссылка на объект (ОС) потребуется для того, чтобы при необходимости направить 
		// пользователя к настройкам налога по этому объекту.
		Если ИдентификаторыОбъектов = Неопределено Тогда
			// Встретив первый объект, которого нет в расчете программы, инициализируем таблицу
			ИдентификаторыОбъектов = СверкаСФНСПоИмущественнымНалогам.ИдентификаторыОбъектовНалогообложения(Организация, Налог, СопоставлениеСУчетомVIN); 
		КонецЕсли;
		СверкаСФНСПоИмущественнымНалогам.УстановитьОсновноеСредствоПоИдентификатору(СтрокаСверки, ИдентификаторыОбъектов, ЗначенияКлюча, Налог, СопоставлениеСУчетомVIN); 
	КонецЕсли;

	Для каждого ОписаниеПоля Из ПрочиеПоляСверки() Цикл
		ЗначениеИзРасчетаФНС = СверкаСФНСПоИмущественнымНалогам.ЗначениеПараметраРасчета(СтрокаРасчетаФНС, ОписаниеПоля.Значение);
		Если ОписаниеПоля.Ключ = "НаименованиеОбъекта" Тогда
			Если Не ЗначениеЗаполнено(СтрокаСверки.НаименованиеОбъекта) Тогда
				СтрокаСверки.НаименованиеОбъекта = ЗначениеИзРасчетаФНС;
			КонецЕсли;
		Иначе
			СтрокаСверки[ОписаниеПоля.Ключ] = ЗначениеИзРасчетаФНС;
		КонецЕсли;
	КонецЦикла;

	СтрокаСверки.ОбъектЕстьВРасчетеФНС = Истина;

	ОписаниеТиповКоличествоМесяцевВладения = Метаданные.Документы.СверкаСФНСПоИмущественнымНалогам.ТабличныеЧасти.РасчетФНС.Реквизиты.КоличествоМесяцевВладения.Тип;
	ОписаниеТиповДоляВПравеЧислитель = Метаданные.Документы.СверкаСФНСПоИмущественнымНалогам.ТабличныеЧасти.РасчетФНС.Реквизиты.ДоляВПравеЧислитель.Тип;
	ОписаниеТиповДоляВПравеЗнаменатель = Метаданные.Документы.СверкаСФНСПоИмущественнымНалогам.ТабличныеЧасти.РасчетФНС.Реквизиты.ДоляВПравеЗнаменатель.Тип;

	Если ВерсияФормата = "5.03" Тогда
		// детали расчета содержатся в подчиненных строках
		ИмяЭлементаДеталиРасчета = "";
		Если Налог = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
			ИмяЭлементаДеталиРасчета = "НачислТС";
		ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
			ИмяЭлементаДеталиРасчета = "НачислЗУ";
		ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
			ИмяЭлементаДеталиРасчета = "НачислНИ";
		КонецЕсли;
		СтрокиИсточника = СтрокаРасчетаФНС.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", ИмяЭлементаДеталиРасчета));
	Иначе // 5.01 и 5.02
		// все данные расчета содержатся непосредственно в строке расчета ФНС
		СтрокиИсточника = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СтрокаРасчетаФНС);
	КонецЕсли;
	
	ПоляРасчета = ПоляРасчета(КНД);
	
	Для Каждого СтрокаИсточника Из СтрокиИсточника Цикл
		СтрокаРасчета = РасчетФНС.Добавить();
		СтрокаРасчета.ИдентификаторСтроки = СтрокаСверки.ИдентификаторСтроки;
		Для каждого ОписаниеПоля Из ПоляРасчета Цикл
			ЗначениеИзРасчетаФНС = СверкаСФНСПоИмущественнымНалогам.ЗначениеПараметраРасчета(СтрокаИсточника, ОписаниеПоля.Значение);
			Если ОписаниеПоля.Ключ = "КоличествоМесяцевВладения" Тогда
				// В расчете ФНС значение записано в формате XX/12, где XX - количество месяцев владения в году в виде 01, 02 и т.д.
				СтрокаРасчета[ОписаниеПоля.Ключ] = ОписаниеТиповКоличествоМесяцевВладения.ПривестиЗначение(Лев(ЗначениеИзРасчетаФНС, 2));
			ИначеЕсли ОписаниеПоля.Ключ = "ПовышающийКоэффициент" Тогда
				// В расчете ФНС отсутствует атрибут, если коэффициент = 1. В этом случае значение будет пустым - нужно подменить на 1.
				Если Не ЗначениеЗаполнено(ЗначениеИзРасчетаФНС) Тогда
					СтрокаРасчета.ПовышающийКоэффициент = 1;
				Иначе
					СтрокаРасчета.ПовышающийКоэффициент = ЗначениеИзРасчетаФНС;
				КонецЕсли;
			ИначеЕсли ОписаниеПоля.Ключ = "ДоляВПраве" Тогда
				Если Не ЗначениеЗаполнено(ЗначениеИзРасчетаФНС) Тогда
					СтрокаРасчета.ДоляВПравеЧислитель = 1;
					СтрокаРасчета.ДоляВПравеЗнаменатель = 1;
				Иначе
					// В расчете ФНС значение записано в виде простой правильной дроби без лидирующих нулей в числителе и знаменателе.
					// Формат записи: (от 1 до 20 знаков)/(от 1 до 20 знаков)
					ДоляВПраве = СтрРазделить(ЗначениеИзРасчетаФНС, "/", Истина);
					СтрокаРасчета.ДоляВПравеЧислитель = ОписаниеТиповДоляВПравеЧислитель.ПривестиЗначение(ДоляВПраве[0]);
					СтрокаРасчета.ДоляВПравеЗнаменатель = ОписаниеТиповДоляВПравеЗнаменатель.ПривестиЗначение(ДоляВПраве[1]);
				КонецЕсли;
			Иначе
				СтрокаРасчета[ОписаниеПоля.Ключ] = ЗначениеИзРасчетаФНС;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Если СтрокаСверки.ОбъектЕстьВРасчете 
		 И СтрокаСверки.ОбъектЕстьВРасчетеФНС
		 И СтрокаСверки.СуммаНалога = СтрокаСверки.СуммаНалогаФНС Тогда
		СтрокаСверки.ПравильныйРасчет = 1; // расчет сошелся
	КонецЕсли;

КонецПроцедуры

Функция СоставРегистрационногоЗнака(Знач РегистрационныйЗнак)

	СоставРегистрационногоЗнака = Новый Структура;
	
	НачалоVIN = СтрНайти(РегистрационныйЗнак, "VIN");
	
	Если НачалоVIN = 0 Тогда
		СоставРегистрационногоЗнака.Вставить("РегистрационныйЗнак", РегистрационныйЗнак);
		Возврат СоставРегистрационногоЗнака;
	КонецЕсли;
	
	РегистрационныйНомер = Лев(РегистрационныйЗнак, НачалоVIN - 1);
	РегистрационныйНомер = СтрЗаменить(РегистрационныйНомер, "(", ""); // учтено, что VIN может быть в скобках
	СоставРегистрационногоЗнака.Вставить("РегистрационныйЗнак", СокрЛП(РегистрационныйНомер));
	
	ИдентификационныйНомер = Сред(РегистрационныйЗнак, НачалоVIN + 3);
	ИдентификационныйНомер = СтрЗаменить(ИдентификационныйНомер, ")", ""); // учтено, что VIN может быть в скобках
	СоставРегистрационногоЗнака.Вставить("ИдентификационныйНомер", СокрЛП(ИдентификационныйНомер));

	Возврат СоставРегистрационногоЗнака;
	
КонецФункции

#КонецОбласти

#КонецЕсли