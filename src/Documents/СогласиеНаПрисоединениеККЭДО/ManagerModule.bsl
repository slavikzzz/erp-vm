#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = ИдентификаторКомандыПечатиЗаявления();
	КомандаПечати.Представление = НСтр("ru = 'Заявление на согласие';
										|en = 'Consent application'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.СогласиеНаПрисоединениеККЭДО";
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(
		КоллекцияПечатныхФорм,
		ИдентификаторКомандыПечатиЗаявления());
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьСогласияНаПрисоединениеККЭДО(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Согласие на присоединение к КЭДО';
											|en = 'Consent to join HR EDI'");
		ПечатнаяФорма.ПолныйПутьКМакету = Метаданные.Документы.СогласиеНаПрисоединениеККЭДО.Макеты.ПФ_MXL_СогласиеНаПрисоединениеККЭДО_БумажныйДокумент.ПолноеИмя();
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИдентификаторКомандыПечатиЗаявления() Экспорт
	Возврат "ПФ_MXL_СогласиеНаПрисоединениеККЭДО";
КонецФункции

Функция ПечатьСогласияНаПрисоединениеККЭДО(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	СогласиеНаПрисоединениеККЭДО.Дата КАК Дата,
	               |	СогласиеНаПрисоединениеККЭДО.Номер КАК Номер,
	               |	СогласиеНаПрисоединениеККЭДО.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	СогласиеНаПрисоединениеККЭДО.Организация КАК Организация,
	               |	СогласиеНаПрисоединениеККЭДО.ФизическоеЛицо.ФИО КАК ФизическоеЛицоФИО,
	               |	СогласиеНаПрисоединениеККЭДО.ФизическоеЛицо.ИНН КАК ФизическоеЛицоИНН,
	               |	СогласиеНаПрисоединениеККЭДО.ФизическоеЛицо.СтраховойНомерПФР КАК ФизическоеЛицоСНИЛС,
	               |	СогласиеНаПрисоединениеККЭДО.ФизическоеЛицо.ДатаРождения КАК ФизическоеЛицоДатаРождения,
	               |	СогласиеНаПрисоединениеККЭДО.ФизическоеЛицо.Пол КАК ФизическоеЛицоПол,
	               |	СогласиеНаПрисоединениеККЭДО.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
	               |	СогласиеНаПрисоединениеККЭДО.Организация.ИНН КАК ОрганизацияИНН,
	               |	СогласиеНаПрисоединениеККЭДО.Организация.НаименованиеСокращенное КАК ОрганизацияНаименованиеСокращенное,
	               |	СогласиеНаПрисоединениеККЭДО.Ссылка КАК Ссылка,
	               |	СогласиеНаПрисоединениеККЭДО.Руководитель КАК Руководитель,
	               |	СогласиеНаПрисоединениеККЭДО.ДолжностьРуководителя КАК ДолжностьРуководителя,
	               |	СогласиеНаПрисоединениеККЭДО.ОснованиеПодписиРуководителя КАК ОснованиеПодписиРуководителя,
	               |	СогласиеНаПрисоединениеККЭДО.Руководитель.Пол КАК РуководительПол,
	               |	СогласиеНаПрисоединениеККЭДО.Руководитель.ФИО КАК РуководительФИО,
	               |	СогласиеНаПрисоединениеККЭДО.ДолжностьРуководителя.Представление КАК ДолжностьРуководителяПредставление
	               |ИЗ
	               |	Документ.СогласиеНаПрисоединениеККЭДО КАК СогласиеНаПрисоединениеККЭДО
	               |ГДЕ
	               |	СогласиеНаПрисоединениеККЭДО.Ссылка В(&МассивСогласий)";
	Запрос.УстановитьПараметр("МассивСогласий", МассивОбъектов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	УстановитьПривилегированныйРежим(Истина);
	Макет = УправлениеПечатью.МакетПечатнойФормы(
		"Документ.СогласиеНаПрисоединениеККЭДО.ПФ_MXL_СогласиеНаПрисоединениеККЭДО_БумажныйДокумент");		
	НастройкиСервиса = РегистрыСведений.НастройкиСервисаКабинетСотрудника.НастройкиСервиса();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.Следующий() Цикл
		
		ПараметрыОбластьДокумент = Новый Структура;
		ПараметрыОбластьДокумент.Вставить("Номер", Выборка.Номер);
		ПараметрыОбластьДокумент.Вставить("Организация", Выборка.Организация);
		ПараметрыОбластьДокумент.Вставить("Дата", Формат(Выборка.Дата, "ДЛФ=DD"));
		ПараметрыОбластьДокумент.Вставить("ОрганизацияНаименованиеПолное", Выборка.ОрганизацияНаименованиеПолное);
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(
			ПараметрыОбластьДокумент,
			СтруктураПоляСПадежами("РуководительДолжность", Выборка.ДолжностьРуководителяПредставление, Выборка.ДолжностьРуководителя)
		); 
		Если ЗначениеЗаполнено(Выборка.РуководительПол) Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(
				ПараметрыОбластьДокумент,
				СтруктураПоляСПадежами("РуководительФИО", Выборка.РуководительФИО, Выборка.Руководитель, Выборка.РуководительПол)
			);
		КонецЕсли;
		Если ЗначениеЗаполнено(Выборка.ФизическоеЛицоПол) Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(
				ПараметрыОбластьДокумент,
				СтруктураПоляСПадежами("ФИО", Выборка.ФизическоеЛицоФИО, Выборка.ФизическоеЛицо, Выборка.ФизическоеЛицоПол)
			);
		КонецЕсли;
		Если ЗначениеЗаполнено(Выборка.ОснованиеПодписиРуководителя) Тогда
			ШаблонОснование = НСтр("ru = ', действующего на основании %1';
									|en = 'acting on the basis of %1'");
			ПараметрыОбластьДокумент.Вставить(
				"ОснованиеРуководителя",
				СтрШаблон(ШаблонОснование, Выборка.ОснованиеПодписиРуководителя));
		КонецЕсли;
		Если ЗначениеЗаполнено(НастройкиСервиса.АдресПриложенияПоИмени) Тогда
			ПараметрыОбластьДокумент.Вставить("АдресЛичногоКабинета", НастройкиСервиса.АдресПриложенияПоИмени);
		Иначе
			ПараметрыОбластьДокумент.Вставить("АдресЛичногоКабинета", НастройкиСервиса.АдресПриложения);
		КонецЕсли;
		
		ОбластьДокумент = Макет.ПолучитьОбласть("Документ");
		ОбластьДокумент.Параметры.Заполнить(ПараметрыОбластьДокумент);
		ТабличныйДокумент.Вывести(ОбластьДокумент);
		
		ОрганизацияЮрАдрес = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
			Выборка.Организация,
			ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации"),
			,
			Выборка.Дата);
		ОрганизацияФактАдрес = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
			Выборка.Организация,
			ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ФактАдресОрганизации"),
			,
			Выборка.Дата);
		АдресМестаПроживания = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
			Выборка.ФизическоеЛицо,
			ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица"),
			,
			Выборка.Дата);
		ДокументУдостоверяющийЛичность = РегистрыСведений.ДокументыФизическихЛиц.ДокументУдостоверяющийЛичностьФизлица(
			Выборка.ФизическоеЛицо);

		ПараметрыОбластьПодписи = Новый Структура;
		ПараметрыОбластьПодписи.Вставить("ОрганизацияНаименованиеПолное", Выборка.ОрганизацияНаименованиеПолное);
		ПараметрыОбластьПодписи.Вставить("ОрганизацияНаименованиеСокращенное", Выборка.ОрганизацияНаименованиеСокращенное);
		ПараметрыОбластьПодписи.Вставить("ОрганизацияЮрАдрес", ОрганизацияЮрАдрес);
		ПараметрыОбластьПодписи.Вставить("ОрганизацияФактАдрес", ОрганизацияФактАдрес);
		ПараметрыОбластьПодписи.Вставить("ОрганизацияИНН", Выборка.ОрганизацияИНН);
		Если ЗначениеЗаполнено(Выборка.ФизическоеЛицоПол) Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(
				ПараметрыОбластьПодписи,
				СтруктураПоляСПадежами("ФИО", Выборка.ФизическоеЛицоФИО, Выборка.ФизическоеЛицо, Выборка.ФизическоеЛицоПол)
			);
		КонецЕсли;
		ПараметрыОбластьПодписи.Вставить("АдресМестаПроживания", АдресМестаПроживания);
		ПараметрыОбластьПодписи.Вставить("ДокументУдостоверяющийЛичность", ДокументУдостоверяющийЛичность);
		ПараметрыОбластьПодписи.Вставить("СНИЛС", Выборка.ФизическоеЛицоСНИЛС);
		
		ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
		ОбластьПодписи.Параметры.Заполнить(ПараметрыОбластьПодписи);
		ТабличныйДокумент.Вывести(ОбластьПодписи);
		
		Если Макет.Области.Найти("ШтампыЭП") <> Неопределено Тогда
			ОбластьШтампыЭП = Макет.ПолучитьОбласть("ШтампыЭП");
			ТабличныйДокумент.Вывести(ОбластьШтампыЭП);
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 1, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
    Возврат ТабличныйДокумент;
	
КонецФункции  

Функция СтруктураПоляСПадежами(ИмяПоля, Представление, СклоняемыйОбъект, Пол = Неопределено)
	
	СтруктураПоляСПадежами = Новый Структура;
	СтруктураПоляСПадежами.Вставить(ИмяПоля, Представление);
	
	ПолЧислом = 1;
	Если Пол = Перечисления.ПолФизическогоЛица.Женский Тогда
		ПолЧислом = 2;
	КонецЕсли;
	
	Если ТипЗнч(СклоняемыйОбъект) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		 
		СтруктураПоляСПадежами.Вставить(ИмяПоля+"Именительный",	СклонениеПредставленийОбъектов.ПросклонятьФИО(Представление, 1, СклоняемыйОбъект, ПолЧислом));
		СтруктураПоляСПадежами.Вставить(ИмяПоля+"Родительный",	СклонениеПредставленийОбъектов.ПросклонятьФИО(Представление, 2, СклоняемыйОбъект, ПолЧислом));
		СтруктураПоляСПадежами.Вставить(ИмяПоля+"Дательный",	СклонениеПредставленийОбъектов.ПросклонятьФИО(Представление, 3, СклоняемыйОбъект, ПолЧислом));
		СтруктураПоляСПадежами.Вставить(ИмяПоля+"Винительный", 	СклонениеПредставленийОбъектов.ПросклонятьФИО(Представление, 4, СклоняемыйОбъект, ПолЧислом));
		СтруктураПоляСПадежами.Вставить(ИмяПоля+"Творительный", СклонениеПредставленийОбъектов.ПросклонятьФИО(Представление, 5, СклоняемыйОбъект, ПолЧислом));
		СтруктураПоляСПадежами.Вставить(ИмяПоля+"Предложный", 	СклонениеПредставленийОбъектов.ПросклонятьФИО(Представление, 6, СклоняемыйОбъект, ПолЧислом));	
		
	Иначе
		
		СтруктураПоляСПадежами.Вставить(ИмяПоля+"Именительный",	СклонениеПредставленийОбъектов.ПросклонятьПредставление(Представление, 1, СклоняемыйОбъект));
		СтруктураПоляСПадежами.Вставить(ИмяПоля+"Родительный",	СклонениеПредставленийОбъектов.ПросклонятьПредставление(Представление, 2, СклоняемыйОбъект));
		СтруктураПоляСПадежами.Вставить(ИмяПоля+"Дательный",	СклонениеПредставленийОбъектов.ПросклонятьПредставление(Представление, 3, СклоняемыйОбъект));
		СтруктураПоляСПадежами.Вставить(ИмяПоля+"Винительный", 	СклонениеПредставленийОбъектов.ПросклонятьПредставление(Представление, 4, СклоняемыйОбъект));
		СтруктураПоляСПадежами.Вставить(ИмяПоля+"Творительный", СклонениеПредставленийОбъектов.ПросклонятьПредставление(Представление, 5, СклоняемыйОбъект));
		СтруктураПоляСПадежами.Вставить(ИмяПоля+"Предложный", 	СклонениеПредставленийОбъектов.ПросклонятьПредставление(Представление, 6, СклоняемыйОбъект));	
		
	КонецЕсли;

	Возврат СтруктураПоляСПадежами;
	
КонецФункции

#КонецОбласти

#КонецЕсли