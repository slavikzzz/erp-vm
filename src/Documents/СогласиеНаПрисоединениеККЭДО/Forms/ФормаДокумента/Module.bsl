#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// ЗарплатаКадрыПодсистемы.ПодписиДокументов
	ПодписиДокументов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.РаботаСФайлами
	ПараметрыГиперссылки = РаботаСФайлами.ГиперссылкаФайлов();
	ПараметрыГиперссылки.Размещение = "КоманднаяПанель";
	РаботаСФайлами.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыГиперссылки);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства

	// БлокировкаИзмененияОбъектов
	БлокировкаИзмененияОбъектов.ПриСозданииНаСервереФормыОбъекта(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец БлокировкаИзмененияОбъектов
		
	// КадровыйЭДО
	КадровыйЭДО.ПриСозданииНаСервереФормыОбъекта(ЭтотОбъект, Отказ, СтандартнаяОбработка, Объект);
	// Конец КадровыйЭДО
	
	Если (Не Параметры.Свойство("Ключ") Или Параметры.Ключ.Пустая()) Тогда
		ИнициализироватьФорму();
		Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизацийЗарплатаКадрыБазовая") Тогда
			Объект.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
			ПодписиДокументов.ЗаполнитьПодписиПоОрганизации(ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	// СтандартныеПодсистемы.Свойства
    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
	    ОбновитьЭлементыДополнительныхРеквизитов();
	    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства

	// КадровыйЭДО
	КадровыйЭДОКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец КадровыйЭДО
	
	Элементы["БлокировкаИзмененияОбъектаРасшифровкиГруппа_1_Надпись"].Заголовок = ТекстПричиныБлокировки();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// БлокировкаИзмененияОбъектов
	БлокировкаИзмененияОбъектов.ПриЧтенииНаСервереФормыОбъекта(ЭтотОбъект, ТекущийОбъект,
		ПравоДоступа("Изменение", Метаданные.Документы.СогласиеНаПрисоединениеККЭДО));
	// Конец БлокировкаИзмененияОбъектов
			
	// КадровыйЭДО
	КадровыйЭДО.ПриЧтенииНаСервереФормыОбъекта(ЭтотОбъект, ТекущийОбъект, Объект);
	// Конец КадровыйЭДО
	
	ИнициализироватьФорму();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ОсновнойСотрудник = КадровыйУчет.ОсновнойСотрудникФизическогоЛица(Объект.ФизическоеЛицо, Объект.Организация, Объект.Дата);
	Если Не ЗначениеЗаполнено(ОсновнойСотрудник) Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Данный сотрудник не работает в выбранной организации';
													|en = 'This employee does not work in the selected company'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	// ЗарплатаКадрыПодсистемы.ПодписиДокументов
	ПодписиДокументов.ПослеЗаписиНаСервере(ЭтотОбъект);
	// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов
	
	// БлокировкаИзмененияОбъектов
	БлокировкаИзмененияОбъектов.ПослеЗаписиНаСервереФормыОбъекта(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец БлокировкаИзмененияОбъектов
	
	// КадровыйЭДО
	КадровыйЭДО.ПослеЗаписиНаСервереФормыОбъекта(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи, Объект);
	// Конец КадровыйЭДО
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ДатаПриИзмененииНаСервере();
КонецПроцедуры

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраНажатие(Элемент, СтандартнаяОбработка)
    
    РаботаСФайламиКлиент.ПолеПредпросмотраНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
    
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
    
    РаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание(ЭтотОбъект, Элемент,
                ПараметрыПеретаскивания, СтандартнаяОбработка);
    
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
    
    РаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания(ЭтотОбъект, Элемент,
                ПараметрыПеретаскивания, СтандартнаяОбработка);
    
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ДатаНачалаПриИзмененииНаСервереБезКонтекста(Объект.Ссылка, ДатаНачала)	
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодтвердитьНаличие(Команда)
	ПодтвердитьНаличиеНаСервере();
КонецПроцедуры

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)
    РаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// БлокировкаИзмененияОбъектов
&НаКлиенте
Процедура Подключаемый_РазблокироватьФормуОбъекта(Команда)
	БлокировкаИзмененияОбъектовКлиент.РазблокироватьФормуОбъекта(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры
// Конец БлокировкаИзмененияОбъектов

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СерверныеОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	// ЗарплатаКадрыПодсистемы.ПодписиДокументов
	ПодписиДокументов.ЗаполнитьПодписиПоОрганизации(ЭтотОбъект);
	// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	// ЗарплатаКадрыПодсистемы.ПодписиДокументов
	ПодписиДокументов.ЗаполнитьПодписиПоОрганизации(ЭтотОбъект);
	// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДатаНачалаПриИзмененииНаСервереБезКонтекста(Ссылка, ДатаНачала)
	РегистрыСведений.СостояниеСогласияНаПрисоединениеККЭДО.УстановитьДатуНачалаДействия(Ссылка, ДатаНачала);
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ИнициализироватьФорму()
	
	МенеджерЗаписиСостояниеСогласияНаПрисоединениеККЭДО = РегистрыСведений.СостояниеСогласияНаПрисоединениеККЭДО.СоздатьМенеджерЗаписи();
	МенеджерЗаписиСостояниеСогласияНаПрисоединениеККЭДО.Ссылка = Объект.Ссылка;
	МенеджерЗаписиСостояниеСогласияНаПрисоединениеККЭДО.Прочитать();
	
	Состояние = МенеджерЗаписиСостояниеСогласияНаПрисоединениеККЭДО.Состояние;
	Подтвержден = МенеджерЗаписиСостояниеСогласияНаПрисоединениеККЭДО.Подтвержден;
	ДатаНачала = МенеджерЗаписиСостояниеСогласияНаПрисоединениеККЭДО.ДатаНачала;
	ДатаОкончания = МенеджерЗаписиСостояниеСогласияНаПрисоединениеККЭДО.ДатаОкончания;
	Элементы.ПодтвердитьНаличие.Видимость = ЗначениеЗаполнено(Состояние) И Не Подтвержден;	
	Элементы.ДекорацияПодписанныйДокумент.Заголовок = ДекорацияПодписанныйДокументЗаголовок(Подтвержден, ДатаОкончания);
	
	Если Элементы.Найти("РазблокироватьФормуДляИзмененияОбъекта") <> Неопределено Тогда
		Элементы["БлокировкаИзмененияОбъектаРасшифровкиГруппа_1_Надпись"].Заголовок = ТекстПричиныБлокировки();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДекорацияПодписанныйДокументЗаголовок(Подтвержден, ДатаОкончания)
	Если ЗначениеЗаполнено(ДатаОкончания) Тогда
		Если ДатаОкончания >= ТекущаяДатаСеанса() Тогда
			Возврат СтрШаблон(НСтр("ru = 'Документ действует до %1';
									|en = 'Document is valid until %1'"), Формат(ДатаОкончания, "ДЛФ=DD"));	
		Иначе
			Возврат СтрШаблон(НСтр("ru = 'Документ прекратил свое действие %1';
									|en = 'Document expired on %1'"), Формат(ДатаОкончания, "ДЛФ=DD"));
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(Состояние) Тогда
		Если Подтвержден Тогда
			Возврат НСтр("ru = 'Документ подписан сотрудником';
						|en = 'The document is signed by the employee'");
		ИначеЕсли Не Подтвержден Тогда
			Возврат НСтр("ru = 'Ожидается бумажный документ с подписью';
						|en = 'Awaiting the signed paper document'");
		КонецЕсли;
	ИначеЕсли Не ЗначениеЗаполнено(Состояние) И Не Объект.Ссылка.Пустая() Тогда           
		Возврат НСтр("ru = 'Ожидается ответ от сотрудника';
					|en = 'Awaiting the employee response'");
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПричиныБлокировки()
	Возврат НСтр("ru = 'Данное согласие отправлено в 1С:Кабинет сотрудника и его изменение может привести к ошибкам.
						|Если в документе имеются ошибки, разблокируйте документ и пометьте его на удаление.
						|После удаления, сформируйте новый документ согласия.';
						|en = 'This consent is sent to 1C:Employee Account, changing it might cause errors.
						|If the document contains errors, unlock the document and mark it for deletion.
						|After deletion, generate a new consent document.'");	
КонецФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ОбновитьПодключаемыеКоманды(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ЗарплатаКадрыПодсистемы.ПодписиДокументов
&НаКлиенте
Процедура Подключаемый_ПодписиДокументовЭлементПриИзменении(Элемент)
	ПодписиДокументовКлиент.ПриИзмененииПодписывающегоЛица(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПодписиДокументовЭлементНажатие(Элемент)
	ПодписиДокументовКлиент.РасширеннаяПодсказкаНажатие(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры
// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов

// КадровыйЭДО
&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПодключаемыеКоманды(УправляемаяФорма)
	КадровыйЭДОКлиентСервер.ОбновитьКоманды(УправляемаяФорма, УправляемаяФорма.Объект, Истина);
КонецПроцедуры
// Конец КадровыйЭДО

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

#Область СерверныеОбработчикиКомандФормы

&НаСервере
Процедура ПодтвердитьНаличиеНаСервере()
	
	МенеджерЗаписиСостояниеСогласияНаПрисоединениеККЭДО = РегистрыСведений.СостояниеСогласияНаПрисоединениеККЭДО.СоздатьМенеджерЗаписи();
	МенеджерЗаписиСостояниеСогласияНаПрисоединениеККЭДО.Ссылка = Объект.Ссылка;
	МенеджерЗаписиСостояниеСогласияНаПрисоединениеККЭДО.Прочитать();
	МенеджерЗаписиСостояниеСогласияНаПрисоединениеККЭДО.Подтвержден = Истина;
	МенеджерЗаписиСостояниеСогласияНаПрисоединениеККЭДО.Записать(Истина);
	
	Элементы.ПодтвердитьНаличие.Доступность = Ложь;
	Элементы.ДекорацияПодписанныйДокумент.Заголовок = ДекорацияПодписанныйДокументЗаголовок(
		Истина, 
		МенеджерЗаписиСостояниеСогласияНаПрисоединениеККЭДО.ДатаОкончания);
	
КонецПроцедуры

#КонецОбласти

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти
