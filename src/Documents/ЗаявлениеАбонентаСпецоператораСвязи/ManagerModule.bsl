
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Обработчик обновления БРО 1.2.2.0
//
Процедура ЗаполнитьМестоХраненияКлюча(ПараметрыОбновления = Неопределено) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаявлениеАбонентаСпецоператораСвязи.Ссылка КАК ЗаявлениеАбонентаСпецоператораСвязи,
	|	ЗаявлениеАбонентаСпецоператораСвязи.ЭлектроннаяПодписьВМоделиСервиса КАК ПодписьСервиса
	|ИЗ
	|	Документ.ЗаявлениеАбонентаСпецоператораСвязи КАК ЗаявлениеАбонентаСпецоператораСвязи
	|ГДЕ
	|	ЗаявлениеАбонентаСпецоператораСвязи.МодельХраненияЗакрытогоКлюча = ЗНАЧЕНИЕ(Перечисление.МодельХраненияЗакрытогоКлюча.ПустаяСсылка)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаявлениеАбонентаСпецоператораСвязи = Выборка.ЗаявлениеАбонентаСпецоператораСвязи.ПолучитьОбъект();
		
		Если Выборка.ПодписьСервиса Тогда
			ЗаявлениеАбонентаСпецоператораСвязи.МодельХраненияЗакрытогоКлюча = Перечисления.МодельХраненияЗакрытогоКлюча.ВМоделиСервиса;
		Иначе
			ЗаявлениеАбонентаСпецоператораСвязи.МодельХраненияЗакрытогоКлюча = Перечисления.МодельХраненияЗакрытогоКлюча.ЛокальныйКлюч;
		КонецЕсли;
		
		ЗаявлениеАбонентаСпецоператораСвязи.ОбменДанными.Загрузка = Истина;
		
		ЗаявлениеАбонентаСпецоператораСвязи.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

Функция PostЗапросОператору(
		ИмяМетода,
		ТелоЗапроса,
		ТекстОшибки = "") Экспорт
		
	Оператор = Перечисления.СпецоператорыСвязи.КалугаАстрал;
	ВебСервисОпределение = ДокументооборотСКОПовтИсп.ПолучитьПараметрСпецоператора(Оператор, "ВебСервисОпределение");
	
	Адрес = СтрРазделить(ВебСервисОпределение, "?")[0];
	Соединение = ОбщегоНазначенияЭДКО.СоединениеССерверомИнтернета(Адрес);
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "text/xml; charset=utf-8");
	
	ПространстваИмен = ДокументооборотСКОПовтИсп.ПолучитьПараметрСпецоператора(Оператор, "ВебСервисURIПространстваИменСервиса");
	Заголовки.Вставить("SoapAction", ПространстваИмен + ИмяМетода);
	
	Запрос = Новый HTTPЗапрос("/regservice.asmx", Заголовки);
	
	Запрос.УстановитьТелоИзСтроки(ТелоЗапроса);
	
	Попытка
		Ответ = Соединение.ОтправитьДляОбработки(Запрос);
	Исключение
		
		ИнформацияОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ТекстОшибки = НСтр("ru = 'Не удалось получить данные с сервера Калуги-Астрал по причине: ';
							|en = 'Не удалось получить данные с сервера Калуги-Астрал по причине: '") + ИнформацияОбОшибке;
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Электронный документооборот с контролирующими органами. ';
				|en = 'Электронный документооборот с контролирующими органами. '") + ИмяМетода,
			УровеньЖурналаРегистрации.Ошибка,,,
			ТекстОшибки);
			
		Возврат Неопределено;
		
	КонецПопытки;
	
	Если Ответ.КодСостояния <> 200 Тогда
		
		ТекстОшибки = 
			НСтр("ru = 'Не удалось получить данные с сервера Калуги-Астрал. Сервер вернул код ошибки ';
				|en = 'Не удалось получить данные с сервера Калуги-Астрал. Сервер вернул код ошибки '") 
			+ Строка(Ответ.КодСостояния) 
			+ Символы.ПС 
			+ Ответ.ПолучитьТелоКакСтроку();
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Электронный документооборот с контролирующими органами. ';
				|en = 'Электронный документооборот с контролирующими органами. '") + ИмяМетода,
			УровеньЖурналаРегистрации.Ошибка,,,
			ТекстОшибки);
			
		Возврат Неопределено;
			
	КонецЕсли;
	
	Возврат Ответ;

КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	КонтекстЭДО = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	КонтекстЭДО.ОбработкаПолученияФормы("Документ", "ЗаявлениеАбонентаСпецоператораСвязи", ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#КонецЕсли



