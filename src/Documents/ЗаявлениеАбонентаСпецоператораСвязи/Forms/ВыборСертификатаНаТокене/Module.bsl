&НаКлиенте
Перем КонтекстЭДО Экспорт;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СертификатыСырыеДанные = НОвый ФиксированныйМассив(Параметры.Сертификаты);
	
	Элементы.ПоказыватьПросроченные.Пометка = Ложь;
	ПересчитатьТаблицуСертификатов();
	СпозиционироватьсяНаСертификатеОрганизацииПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	// инициализируем контекст ЭДО
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);

	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСертификаты

&НаКлиенте
Процедура СертификатыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	КоманднаяПанельФормыВыбрать(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КоманднаяПанельФормыПоказыватьПросроченные(Команда)
	
	Элементы.ПоказыватьПросроченные.Пометка = НЕ Элементы.ПоказыватьПросроченные.Пометка;
	ПереформироватьТаблицуСертификатов();

КонецПроцедуры

&НаКлиенте
Процедура СертификатыКнопкаОткрыть(Команда)
	
	ТекДанные = Элементы.Сертификаты.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Выберите в таблице сертификат для показа.';
										|en = 'Выберите в таблице сертификат для показа.'"));
	Иначе
		СертификатДляПоказа = Новый Структура("Адрес", АдресСертификата(ТекДанные.Base64));
		КриптографияЭДКОКлиент.ПоказатьСертификат(СертификатДляПоказа);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельФормыВыбрать(Кнопка)
	
	ТекДанные = Элементы.Сертификаты.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Выберите сертификат';
									|en = 'Выберите сертификат'"));
	Иначе
		Закрыть(ТекДанные.Контейнер);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция АдресСертификата(Base64) 
	
	ДвДанные = Base64Значение(Base64);
	Адрес = ПоместитьВоВременноеХранилище(ДвДанные, Новый УникальныйИдентификатор);
	
	Возврат Адрес;
		
КонецФункции

&НаСервере
Процедура ПересчитатьТаблицуСертификатов()
	
	Сертификаты.Очистить();
	
	ТекущаяДата = ТекущаяДатаСеанса();
	Для каждого Строка Из СертификатыСырыеДанные Цикл
		
		Валиден = ТекущаяДата <= Строка.ДатаОкончания;
		
		Если НЕ Элементы.ПоказыватьПросроченные.Пометка 
			И НЕ Валиден Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Сертификаты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка.Субъект);
		
		НоваяСтрока.Валиден = Валиден;
		
		ДвДанные = ПолучитьИзВременногоХранилища(Строка.Адрес);
		НоваяСтрока.Base64 = Base64Строка(ДвДанные);
		
		НоваяСтрока.Контейнер = Новый ФиксированнаяСтруктура(Строка);
		
		НоваяСтрока.ФИО = Строка.Субъект.SN + " " + Строка.Субъект.GN;
		
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.OID1_2_643_100_4) Тогда
			
			Сертификат    = Новый СертификатКриптографии(ДвДанные);
			Представление = ОбработкаЗаявленийАбонентаКлиентСервер.ПредставлениеОрганизацииСертификата(Сертификат);
			НоваяСтрока.O = Представление;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Сертификаты.Сортировать("O, OID1_2_643_100_4, ФИО, ДатаНачала, ДатаОкончания");
	
КонецПроцедуры

&НаКлиенте
Процедура ПереформироватьТаблицуСертификатов()
	
	ТекущийСертификат = ЗапомнитьТекущейСертификат();
	ПересчитатьТаблицуСертификатов();
	СпозиционироватьсяНаТекущемСертификате(ТекущийСертификат);
	
КонецПроцедуры

&НаКлиенте
Функция ЗапомнитьТекущейСертификат()
	
	// запоминаем текущий сертификат
	Если Элементы.Сертификаты.ТекущиеДанные <> Неопределено Тогда
		ТекущийСертификат = Элементы.Сертификаты.ТекущиеДанные.СерийныйНомер;
	КонецЕсли;
	
	Возврат ТекущийСертификат;
	
КонецФункции

&НаСервере
Процедура СпозиционироватьсяНаСертификатеОрганизацииПоУмолчанию()
	
	ОбработкаЗаявленийАбонента.СпозиционироватьсяНаСертификатеОрганизацииПоУмолчанию(
		Элементы.Сертификаты, 
		Сертификаты, 
		"OID1_2_643_100_4");
	
КонецПроцедуры

&НаКлиенте
Процедура СпозиционироватьсяНаТекущемСертификате(ТекущийСертификат)
	
	// устанавливаем текущий сертификат
	Если ТекущийСертификат <> Неопределено Тогда
		СтрокаСертификат = Сертификаты.НайтиСтроки(Новый Структура("СерийныйНомер", ТекущийСертификат));
		Если СтрокаСертификат.Количество() > 0 Тогда
			Элементы.Сертификаты.ТекущаяСтрока = СтрокаСертификат[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДО = Результат.КонтекстЭДО;
	
КонецПроцедуры

#КонецОбласти