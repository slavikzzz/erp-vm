
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора = Истина;
	КонецЕсли;
	
	УстановитьУсловноеОформление(ЭтаФорма);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.КоманднаяПанельФормы;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список");
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов 	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Настройки);
	
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, , СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление(Форма)
	
	ТекущийШрифт = Форма.Элементы.Список.Шрифт;
	ЖирныйШрифт = Новый Шрифт(ТекущийШрифт, , , Истина);
	ЗачеркнутыйШрифт = Новый Шрифт(ТекущийШрифт, , , , , ,Истина);

	УстановитьУсловноеОформлениеСписка(Форма, "СборЗапущен", Ложь, "Шрифт", ЖирныйШрифт);
	УстановитьУсловноеОформлениеСписка(Форма, "СборЗавершен", Истина, "ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);  
	УстановитьУсловноеОформлениеСписка(Форма, "СборАннулирован", Истина, "Шрифт", ЗачеркнутыйШрифт);
	УстановитьУсловноеОформлениеСписка(Форма, "СборАннулирован", Истина, "ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	УстановитьИнформационноеСообщение();
	
КонецПроцедуры   

&НаСервере
Процедура УстановитьУсловноеОформлениеСписка(Форма, ИмяРеквизита, ЗначениеРеквизита, ИмяПараметра, ЗначениеПараметра)
	
	ИмяТаблицы = "Список";
	
	ЭлементУсловногоОформления = Форма.УсловноеОформление.Элементы.Добавить();
		
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра(ИмяПараметра, ЗначениеПараметра);
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить(); 
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяТаблицы);	
	
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы + "." + ИмяРеквизита);
	ЭлементОтбора.ПравоеЗначение = ЗначениеРеквизита;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИнформационноеСообщение()

	Если ИнтеграцияУправлениеПерсоналом.Используется1СПерсонал() Тогда
	
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтаФорма.Элементы, "ФормаСоздать", "Видимость", Ложь);	
		
		ПрефиксЭлементов = "ИнформацияОДоступностиСоздания";
	
		ИмяГруппы = ПрефиксЭлементов + "Группа";
		ИнформацияОДоступностиРедактированияГруппа = Элементы.Найти(ИмяГруппы);
		Если ИнформацияОДоступностиРедактированияГруппа = Неопределено Тогда
			
			// Информация о невозможности редактирования
			ИнформацияОДоступностиРедактированияГруппа = Элементы.Вставить(ИмяГруппы, Тип("ГруппаФормы"), ЭтаФорма, Элементы.Найти("Список"));
			ИнформацияОДоступностиРедактированияГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ИнформацияОДоступностиРедактированияГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
			ИнформацияОДоступностиРедактированияГруппа.ОтображатьЗаголовок = Ложь;                             
			
			НовыйЭлемент = Элементы.Добавить(
				ПрефиксЭлементов + "КартинкаИнформация", Тип("ДекорацияФормы"), ИнформацияОДоступностиРедактированияГруппа);
			НовыйЭлемент.Вид = ВидДекорацииФормы.Картинка;
			НовыйЭлемент.Картинка = БиблиотекаКартинок.Информация16АнимированнаяБЗК;
			
			НовыйЭлемент = Элементы.Добавить(
				ПрефиксЭлементов + "Надпись", Тип("ДекорацияФормы"), ИнформацияОДоступностиРедактированияГруппа);
			НовыйЭлемент.Вид = ВидДекорацииФормы.Надпись;
			НовыйЭлемент.Заголовок = НСтр("ru = 'Сбор пожеланий выполняется в приложении 1С:Персонал и по завершении кампании будет загружен';
											|en = 'Preferences are collected in the 1C:Human Resources application. The collection will be imported once completed'");
				НовыйЭлемент.АвтоМаксимальнаяШирина = Ложь;   
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
