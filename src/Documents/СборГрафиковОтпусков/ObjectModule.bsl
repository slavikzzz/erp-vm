#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	КонтейнерОшибок = Неопределено;

	ПроверитьЗаполнениеРеквизитовШапки(КонтейнерОшибок);		
		
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(КонтейнерОшибок, Отказ);
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления И Не ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления") Тогда
		
		Если СборЗапущен Тогда
		
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Пометка на удаление %1 кампаний по сбору графиков не предусмотрена. %2';
					|en = 'Marking %1 leave schedule collections for deletion is not supported. %2'"),
				?(СборЗавершен или СборАннулирован, ?(СборАннулирован, "аннулированных", "завершенных"), "начатых"),
				?(СборЗавершен или СборАннулирован, "", "Для отмены кампании следует использовать механизм аннулирования сбора."));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, , , Отказ);
			
		ИначеЕсли ЗначениеЗаполнено(КорневойСборГрафиков) Тогда
			
			ТекстСообщения = НСтр("ru = 'Пометка на удаление сборов графиков по подразделению не предусмотрена. Для отмены предусмотрен механизм аннулирования кампании по сбору графиков отпусков.';
									|en = 'Marking leave schedule collections for a business unit is not supported. You can cancel the leave schedule collection.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, , , Отказ);
				
		КонецЕсли;
		
		Возврат;

	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КорневойСборГрафиков) И ЕстьСборГрафиковОтпусковНаУказанныйГод() Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'На указанный год уже введен документ Сбор графиков отпусков.';
													|en = 'The Leave schedule collection document is already entered for the specified year.'"));
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КорневойСборГрафиков) И Не ЗначениеЗаполнено(ИдентификаторДокумента) Тогда
		ИдентификаторДокумента = Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
	
	УстановитьСостояниеКорневогоСбораГрафиков();
	УстановитьКоличествоСотрудников();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	УстановитьГодПоУмолчанию();
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьГодПоУмолчанию()

	Год = Год(ТекущаяДатаСеанса());
	
КонецПроцедуры

Процедура УстановитьСостояниеКорневогоСбораГрафиков()
	
	Если Не ЗначениеЗаполнено(КорневойСборГрафиков) Тогда
		Если СборАннулирован Тогда
			Состояние = Перечисления.СостоянияСбораГрафиковОтпусков.Отказано
		ИначеЕсли СборЗавершен Тогда
			Состояние = Перечисления.СостоянияСбораГрафиковОтпусков.Утверждено	
		Иначе
			Состояние = Перечисления.СостоянияСбораГрафиковОтпусков.Черновик	
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьКоличествоСотрудников()
	
	Если ЗначениеЗаполнено(КорневойСборГрафиков) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
		Запрос.Текст =     
		"ВЫБРАТЬ
		|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	&Сотрудники КАК Сотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТСотрудники.ФизическоеЛицо) КАК ЗапланировалоОтпуск
		|ИЗ
		|	ВТСотрудники КАК ВТСотрудники";

		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			КоличествоСотрудников = Выборка.ЗапланировалоОтпуск;	
		Иначе
			КоличествоСотрудников = 0;	
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры        

Процедура ПроверитьЗаполнениеРеквизитовШапки(КонтейнерОшибок)
	
	Если Не ЗначениеЗаполнено(КорневойСборГрафиков) Тогда
		Если Не ЗначениеЗаполнено(ИнициаторСбора) И Не СборЗапущен Тогда
			ТекстСообщения = НСтр("ru = 'Не указан инициатор сбора графиков отпусков.';
									|en = 'Leave schedule collection initiator is not specified.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ИнициаторСбора", ТекстСообщения);
		ИначеЕсли Не ЗначениеЗаполнено(Год) Тогда
			ТекстСообщения = НСтр("ru = 'Не указан год сбора графиков отпусков.';
									|en = 'A year for the leave schedule collection is not specified.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.Год", ТекстСообщения);
		Иначе
			РезультатЗапроса = СформироватьЗапросСборГрафиковОтпусковНаТекущийГод();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				Выборка = РезультатЗапроса.Выбрать();
				Выборка.Следующий();
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'На указанный год уже введен документ %1';
						|en = 'The %1 document is already entered for the specified year'"),
					Выборка.СсылкаПредставление);
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.Год", ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

Функция ЕстьСборГрафиковОтпусковНаУказанныйГод()
		
	Возврат Не СформироватьЗапросСборГрафиковОтпусковНаТекущийГод().Пустой();
	
КонецФункции

Функция СформироватьЗапросСборГрафиковОтпусковНаТекущийГод()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Год", Год);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументСборГрафиковОтпусков.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ДокументСборГрафиковОтпусков.Ссылка) КАК СсылкаПредставление
		|ИЗ
		|	Документ.СборГрафиковОтпусков КАК ДокументСборГрафиковОтпусков
		|ГДЕ
		|	НЕ ДокументСборГрафиковОтпусков.ПометкаУдаления
		|	И НЕ ДокументСборГрафиковОтпусков.СборАннулирован
		|	И ДокументСборГрафиковОтпусков.Год = &Год
		|	И ДокументСборГрафиковОтпусков.Ссылка <> &Ссылка
		|	И (ДокументСборГрафиковОтпусков.КорневойСборГрафиков = ЗНАЧЕНИЕ(Документ.СборГрафиковОтпусков.ПустаяСсылка)
		|			ИЛИ ДокументСборГрафиковОтпусков.КорневойСборГрафиков = НЕОПРЕДЕЛЕНО
		|			ИЛИ ДокументСборГрафиковОтпусков.КорневойСборГрафиков ЕСТЬ NULL)";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатЗапроса;

КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли