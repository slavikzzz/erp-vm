#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(ФизическиеЛица.ФизическоеЛицо, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиПравилРегистрации

// См. ЗарплатаКадрыРасширенныйСинхронизацияДанных.ШаблонОбработчика
Процедура ПриЗаполненииНастроекОбработчиковПравилРегистрации(Настройки) Экспорт
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляОтбораПоОрганизации(Настройки);
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляОбъектаСПрисоединеннымиФайлами(Настройки);
КонецПроцедуры

#КонецОбласти

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.РаспределениеОсновногоЗаработка;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_СправкаОРаспределенииЗаработка";
	КомандаПечати.Представление = НСтр("ru = 'Справка о регистрации распределения';
										|en = 'Certificate of allocation registration'");
	КомандаПечати.МенеджерПечати = "Документ.РаспределениеОсновногоЗаработка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью            = Истина;
	
КонецПроцедуры

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы.
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СправкаОРаспределенииЗаработка") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ПФ_MXL_СправкаОРаспределенииЗаработка",
			НСтр("ru = 'Справка о регистрации распределения основного заработка';
				|en = 'Certificate of registration of basic earnings allocation'"),
			ПечатьСправкиОРаспределенииЗаработка(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.РаспределениеОсновногоЗаработка.ПФ_MXL_СправкаОРаспределенииЗаработка");
			
	КонецЕсли;
						
КонецПроцедуры

Функция ПечатьСправкиОРаспределенииЗаработка(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РаспределениеОсновногоЗаработка_СправкаОРаспределенииЗаработка";
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РаспределениеОсновногоЗаработка.ПФ_MXL_СправкаОРаспределенииЗаработка");
	
	ПодбираетсяАвтоматически = НСтр("ru = '<подбирается автоматически>';
									|en = '<picked automatically>'");
	ИспользоватьСтатьиФинансирования = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплатаРасширенный");

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ИспользоватьСтатьиФинансирования", ИспользоватьСтатьиФинансирования);
	Запрос.УстановитьПараметр("ПодбираетсяАвтоматически", ПодбираетсяАвтоматически);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК Ссылка,
	|	Сотрудники.Ссылка.Организация КАК Организация,
	|	Сотрудники.Ссылка.Подразделение КАК Подразделение,
	|	Сотрудники.Ссылка.Организация.НаименованиеПолное КАК НазваниеОрганизации,
	|	Сотрудники.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	|	Сотрудники.Ссылка.Ответственный КАК Ответственный,
	|	Сотрудники.Ссылка.СуммарнаяДоляСтоПроцентов КАК СуммарнаяДоляСтоПроцентов,
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиФинансирования
	|			ТОГДА ВЫБОР
	|					КОГДА СтрокиРаспределения.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|						ТОГДА &ПодбираетсяАвтоматически
	|					ИНАЧЕ СтрокиРаспределения.СтатьяФинансирования
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА СтрокиРаспределения.СпособОтраженияЗарплатыВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА &ПодбираетсяАвтоматически
	|		ИНАЧЕ СтрокиРаспределения.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтражения,
	|	СтрокиРаспределения.ОблагаетсяЕНВД КАК ЕНВД,
	|	ВЫБОР
	|		КОГДА СтрокиРаспределения.ПодразделениеУчетаЗатрат = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА &ПодбираетсяАвтоматически
	|		ИНАЧЕ СтрокиРаспределения.ПодразделениеУчетаЗатрат
	|	КОНЕЦ КАК ПодразделениеУчетаЗатрат,
	|	СтрокиРаспределения.ДоляРаспределения КАК ДоляРаспределения,
	|	Сотрудники.Ссылка.Дата КАК Дата,
	|	Сотрудники.Ссылка.Номер КАК Номер,
	|	Сотрудники.Сотрудник.Наименование КАК СотрудникНаименование,
	|	Сотрудники.НомерСтроки КАК НомерСтроки,
	|	СтрокиРаспределения.НомерСтроки КАК НомерСтрокиРаспределения
	|ИЗ
	|	Документ.РаспределениеОсновногоЗаработка.Сотрудники КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеОсновногоЗаработка.РаспределениеЗаработка КАК СтрокиРаспределения
	|		ПО Сотрудники.ИдентификаторСтрокиСотрудника = СтрокиРаспределения.ИдентификаторСтрокиСотрудника
	|			И Сотрудники.Ссылка = СтрокиРаспределения.Ссылка
	|ГДЕ
	|	Сотрудники.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки,
	|	НомерСтрокиРаспределения";

	Выборка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	Если Не ИспользоватьСтатьиФинансирования Тогда
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьСтрокаСотрудник = Макет.ПолучитьОбласть("СтрокаСотрудник");
		ОбластьСтрокаРаспределение = Макет.ПолучитьОбласть("СтрокаРаспределение");
	Иначе
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицыСФ");
		ОбластьСтрокаСотрудник = Макет.ПолучитьОбласть("СтрокаСотрудникСФ");
		ОбластьСтрокаРаспределение = Макет.ПолучитьОбласть("СтрокаРаспределениеСФ");
	КонецЕсли;
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");

	ДанныеШапки = Новый Структура("НазваниеОрганизации,Подразделение,ПериодРегистрации,ДатаДокумента,НомерДокумента");
	ДанныеЗаголовка = Новый Структура("ЕНВД");
	ДанныеСтрокаСотрудник = Новый Структура("Номер,Сотрудник,Доля");
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДанныеШапки.НазваниеОрганизации = Выборка.НазваниеОрганизации;
		ДанныеШапки.Подразделение 		= Выборка.Подразделение;
		ДанныеШапки.ПериодРегистрации 	= Формат(Выборка.ПериодРегистрации,"ДФ='ММMM yyyy'");
		ДанныеШапки.ДатаДокумента 		= Формат(Выборка.Дата, "ДЛФ=D");
		ДанныеШапки.НомерДокумента 		= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер, Истина, Истина);

		ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ДанныеШапки);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ПлательщикЕНВД = ОтражениеЗарплатыВБухучете.ПлательщикЕНВД(Выборка.Организация, Выборка.ПериодРегистрации);
		ДанныеЗаголовка.ЕНВД = ?(ПлательщикЕНВД, "ЕНВД", ""); 
		ЗаполнитьЗначенияСвойств(ОбластьЗаголовокТаблицы.Параметры, ДанныеЗаголовка);
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		НомерСтроки = 1;
		Пока Выборка.СледующийПоЗначениюПоля("НомерСтроки") Цикл
			
			СуммарнаяДоля = 0;
			ДанныеРаспределения = Новый Массив;
			Пока Выборка.Следующий() Цикл
				ДанныеСтрокаРаспределения = Новый Структура("СтатьяФинансирования,СпособОтражения,ЕНВД,ПодразделениеУчетаЗатрат,Доля");
				ЗаполнитьЗначенияСвойств(ДанныеСтрокаРаспределения, Выборка);
				ДанныеСтрокаРаспределения.Доля = Формат(Выборка.ДоляРаспределения, "ЧЦ=16; ЧДЦ=5");
				Если Не ПлательщикЕНВД Тогда
					ДанныеСтрокаРаспределения.ЕНВД = "";
				КонецЕсли;
				ДанныеРаспределения.Добавить(ДанныеСтрокаРаспределения);
				СуммарнаяДоля = СуммарнаяДоля + Выборка.ДоляРаспределения;
			КонецЦикла; 
			
			ДанныеСтрокаСотрудник.Номер = НомерСтроки;
			ДанныеСтрокаСотрудник.Сотрудник = Выборка.Сотрудник;
			ДанныеСтрокаСотрудник.Доля = Формат(СуммарнаяДоля, "ЧЦ=16; ЧДЦ=5");
			ЗаполнитьЗначенияСвойств(ОбластьСтрокаСотрудник.Параметры, ДанныеСтрокаСотрудник);
			ТабличныйДокумент.Вывести(ОбластьСтрокаСотрудник);
			
			Для каждого СтрокаРаспределения Из ДанныеРаспределения Цикл
				ЗаполнитьЗначенияСвойств(ОбластьСтрокаРаспределение.Параметры, СтрокаРаспределения);
				ТабличныйДокумент.Вывести(ОбластьСтрокаРаспределение);
			КонецЦикла;
			
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции


#КонецОбласти

#КонецОбласти

#КонецЕсли