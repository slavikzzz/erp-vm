#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.ИнформацияОДокументе.ОбъектЗафиксирован Или Параметры.ТолькоПросмотр Тогда
		ТолькоПросмотр = Истина;
		Элементы.КомандаОбновитьХеш.Доступность = Ложь;
		Элементы.ФормаКомандаОК.Видимость = Ложь;
		Элементы.ФормаКомандаОтмена.Заголовок = НСтр("ru = 'Закрыть';
													|en = 'Close'");
		Элементы.ФормаКомандаОтмена.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ДанныеЭЛН);
	
	АвтоЗаголовок = Ложь;
	Заголовок = ЗаголовокФормы();
	
	ПрочитатьХеш();
	ОбновитьФорму();
	
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораКодУсловийИсчисления(Элементы.УсловияИсчисленияКод1);
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораКодУсловийИсчисления(Элементы.УсловияИсчисленияКод2);
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораКодУсловийИсчисления(Элементы.УсловияИсчисленияКод3);
	
	ОбменЛисткамиНетрудоспособностиФСС.КодыПричинИсправления(Элементы.КодПричиныИсправления.СписокВыбора);
	
	Элементы.КодПричиныИсправления.Подсказка = НаименованиеПричиныИсправления(ЭтотОбъект);
	Элементы.НомерЛисткаНетрудоспособности.ТолькоПросмотр = ЗначениеЗаполнено(Больничный);
	Элементы.Сотрудник.ТолькоПросмотр = ЗначениеЗаполнено(Больничный);
	Элементы.Хеш.ТолькоПросмотр = ЗначениеЗаполнено(Больничный);
	
	ПраваНаНачисления = Параметры.ПраваНаФактическиеНачисления;
	Если ТипЗнч(ПраваНаНачисления) = Тип("Структура") Тогда
		Если Не ПраваНаНачисления.Просмотр Тогда
			Элементы.ГруппаЗаработок.Видимость = Ложь;
			Элементы.ГруппаНачислено.Видимость = Ложь;
		ИначеЕсли Не ПраваНаНачисления.Редактирование Тогда
			Элементы.ГруппаЗаработок.ТолькоПросмотр = Истина;
			Элементы.ГруппаНачислено.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура БольничныйПриИзменении(Элемент)
	ЗаполнитьДанныеБольничного();
КонецПроцедуры

&НаКлиенте
Процедура НомерЛисткаНетрудоспособностиПриИзменении(Элемент)
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеПриИзменении(Элемент)
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура КодПричиныИсправленияПриИзменении(Элемент)
	НаименованиеПричиныИсправления = НаименованиеПричиныИсправления(ЭтотОбъект);
	Если Не ЗначениеЗаполнено(ОписаниеПричиныИсправления)
		Или ОписаниеПричиныИсправления = Элементы.КодПричиныИсправления.Подсказка Тогда
		ОписаниеПричиныИсправления = НаименованиеПричиныИсправления;
	КонецЕсли;
	Элементы.КодПричиныИсправления.Подсказка = НаименованиеПричиныИсправления;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НаименованиеПричиныИсправления(Форма)
	ЭлементСписка = Форма.Элементы.КодПричиныИсправления.СписокВыбора.НайтиПоЗначению(Форма.КодПричиныИсправления);
	Если ЭлементСписка <> Неопределено Тогда
		Если КодСимвола(ЭлементСписка.Представление, 3) = КодСимвола(".") Тогда
			Возврат СокрЛП(Сред(ЭлементСписка.Представление, 4));
		Иначе
			Возврат СокрЛП(ЭлементСписка.Представление)
		КонецЕсли;
	КонецЕсли;
	Возврат "";
КонецФункции

&НаКлиенте
Процедура ОписаниеПричиныИсправленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, ЭтотОбъект, "ОписаниеПричиныИсправления", Элемент.ПодсказкаВвода);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	Закрыть(РезультатВыбора());
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьХешИзСервиса(Команда)
	Если Не ЗначениеЗаполнено(Параметры.ИнформацияОДокументе.Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'В документе не выбрана организация.';
														|en = 'Company is not selected in the document.'"), , "Организация");
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не выбран сотрудник.';
														|en = 'Employee is not selected.'"), , "Сотрудник");
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(НомерЛисткаНетрудоспособности) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнен номер листка нетрудоспособности.';
														|en = 'Sick leave record number is required.'"), , "НомерЛисткаНетрудоспособности");
		Возврат;
	КонецЕсли;
	
	// Формирование параметров запроса к сервису получения ЭЛН.
	ЗапросДляПолученияЭЛН = ВыгрузитьЗапросДляПолученияХешаЭЛН();
	Если ЗапросДляПолученияЭЛН = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Подписание и отправка запроса, расшифровка ответа.
	Оповещение = Новый ОписаниеОповещения("ПолучитьДанныеИзФССЗавершение", ЭтотОбъект);
	ЭлектронныйДокументооборотСФССКлиент.ПолучитьДанныеЭЛНИзФСС(Оповещение, ЗапросДляПолученияЭЛН);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьФорму()
	Если Исправление Тогда
		Элементы.СтраницыИсправление.ТекущаяСтраница = Элементы.СтраницаИсправлениеИстина;
	Иначе
		Элементы.СтраницыИсправление.ТекущаяСтраница = Элементы.СтраницаИсправлениеЛожь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьХеш()
	Хеш = РегистрыСведений.СведенияОбЭЛН.ПрочитатьХеш(
		НомерЛисткаНетрудоспособности,
		Параметры.ИнформацияОДокументе.ГоловнаяОрганизация);
КонецПроцедуры

&НаСервере
Функция ЗаголовокФормы()
	Если Не ЗначениеЗаполнено(Больничный) Тогда
		Возврат НСтр("ru = 'Выберите листок нетрудоспособности';
					|en = 'Select a sick leave record'");
	КонецЕсли;
	ШаблонЗаголовка = НСтр("ru = 'Сведения об электронном листке нетрудоспособности %1';
							|en = 'Information about the electronic sick leave record %1'");
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ШаблонЗаголовка,
		НомерЛисткаНетрудоспособности);
КонецФункции

&НаСервере
Функция РезультатВыбора()
	ЗначенияРеквизитов = Новый Структура;
	
	РеквизитыФормы = ПолучитьРеквизиты();
	Для Каждого РеквизитФормы Из РеквизитыФормы Цикл
		Если РеквизитФормы.Имя = "Объект" Тогда
			Продолжить;
		КонецЕсли;
		ЗначенияРеквизитов.Вставить(РеквизитФормы.Имя, ЭтотОбъект[РеквизитФормы.Имя]);
	КонецЦикла;
	
	Возврат ЗначенияРеквизитов;
КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеБольничного()
	РеквизитыФормы = ПолучитьРеквизиты();
	Для Каждого РеквизитФормы Из РеквизитыФормы Цикл
		Если РеквизитФормы.Имя = "Объект"
			Или РеквизитФормы.Имя = "НомерСтроки" Тогда
			Продолжить;
		КонецЕсли;
		ЭтотОбъект[РеквизитФормы.Имя] = Неопределено;
	КонецЦикла;
	
	ТаблицаОснований = Новый ТаблицаЗначений;
	ТаблицаОснований.Колонки.Добавить("Больничный", Новый ОписаниеТипов("ДокументСсылка.БольничныйЛист"));
	ТаблицаОснований.Колонки.Добавить("НомерЛисткаНетрудоспособности", Новый ОписаниеТипов("Строка"));
	СтрокаТаблицы = ТаблицаОснований.Добавить();
	СтрокаТаблицы.Больничный = Больничный;
	СтрокаТаблицы.НомерЛисткаНетрудоспособности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Больничный, "НомерЛисткаНетрудоспособности");
	
	ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Параметры.ИнформацияОДокументе.Организация);
	Запрос = Документы.РеестрДанныхЭЛНЗаполняемыхРаботодателем.ЗапросПоПервичнымДокументам(
		ТаблицаОснований,
		Параметры.ИнформацияОДокументе.Ссылка,
		ГоловнаяОрганизация,
		Неопределено);
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	Если ТаблицаЗначений.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ТаблицаЗначений[0]);
	КонецЕсли;
	
	Заголовок = ЗаголовокФормы();
	ПрочитатьХеш();
	ОбновитьФорму();
КонецПроцедуры

#Область ПолучитьХешИзСервиса

&НаСервере
Функция ВыгрузитьЗапросДляПолученияХешаЭЛН()
	Возврат ОбменЛисткамиНетрудоспособностиФСС.ВыгрузитьЗапросДляПолученияЭЛН(СтруктураДляПолученияХешаЭЛН());
КонецФункции

&НаКлиенте
Процедура ПолучитьДанныеИзФССЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено
		И ЗагрузитьХешЭЛН(Результат.АдресРасшифрованногоОтветаSOAP) Тогда
		ПоказатьОповещениеПользователя(, , НСтр("ru = 'Хэш ЭЛН успешно получен из ФСС';
												|en = 'ESLR hash successfully received from SSF'"), БиблиотекаКартинок.Успешно32);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЗагрузитьХешЭЛН(Знач АдресРасшифрованногоОтветаSOAP)
	РезультатОбмена = ОбменЛисткамиНетрудоспособностиФСС.ЗагрузитьОтветСервисаФСС(
		СтруктураДляПолученияХешаЭЛН(),
		"getPrivateLNData",
		АдресРасшифрованногоОтветаSOAP,
		Ложь);
	ПрочитатьХеш();
	ОбновитьФорму();
	Возврат Не РезультатОбмена.Отказ;
КонецФункции

&НаСервере
Функция СтруктураДляПолученияХешаЭЛН()
	Документ = Новый Структура("Организация, Дата, Сотрудник, НомерЛисткаНетрудоспособности");
	ЗаполнитьЗначенияСвойств(Документ, Параметры.ИнформацияОДокументе, "Организация, Дата");
	ЗаполнитьЗначенияСвойств(Документ, ЭтотОбъект, "Сотрудник, НомерЛисткаНетрудоспособности");
	Возврат Документ;
КонецФункции

#КонецОбласти

#КонецОбласти
