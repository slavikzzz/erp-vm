#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// ЗарплатаКадрыПодсистемы.ПодписиДокументов
	ПодписиДокументов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный", "Объект.Организация", "Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтотОбъект, ЗначенияДляЗаполнения);
		Объект.СтатусДокумента = Перечисления.СтатусыЗаявленийИРеестровНаВыплатуПособий.ВРаботе;
		ЗаполнитьДанныеОрганизации();
		ОбновитьВидимостьДоступность();
	КонецЕсли;
	
	ОбновитьЭлементыПодписей();
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// ИнтеграцияС1СДокументооборотом
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтеграцияС1СДокументооборотом") Тогда
		МодульИнтеграцияС1СДокументооборотБазоваяФункциональность = ОбщегоНазначения.ОбщийМодуль(
			"ИнтеграцияС1СДокументооборотБазоваяФункциональность");
		МодульИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец ИнтеграцияС1СДокументооборотом
	
	ДатаОписи = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновитьВидимостьДоступность();
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// ИнтеграцияС1СДокументооборотом
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтеграцияС1СДокументооборотом") Тогда
		МодульИнтеграцияС1СДокументооборотБазоваяФункциональность = ОбщегоНазначения.ОбщийМодуль(
			"ИнтеграцияС1СДокументооборотБазоваяФункциональность");
		МодульИнтеграцияС1СДокументооборотБазоваяФункциональность.ПередЗаписьюНаСервере(
			ЭтотОбъект,
			ТекущийОбъект,
			ПараметрыЗаписи);
	КонецЕсли;
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// ЗарплатаКадрыПодсистемы.ПодписиДокументов
	ПодписиДокументов.ПослеЗаписиНаСервере(ЭтотОбъект);
	// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_ОписьЗаявленийСотрудниковНаВыплатуПособий", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
	ПредложитьПерезаполнить();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ЗаполнитьДанныеОрганизации();
	Если ИзменилсяОтборЗаявленийКоторыйЗависитОтДаты() Тогда
		ПредложитьПерезаполнить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтдельнаяСтрокаПодКаждыйДокументПриИзменении(Элемент)
	ОбновитьВидимостьДоступность();
	ПредложитьПерезаполнить();
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗаявления

&НаКлиенте
Процедура ЗаявленияЗаявлениеПриИзменении(Элемент)
	ЗаявленияЗаявлениеПриИзмененииНаСервере(Элементы.Заявления.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ЗаявленияПриИзменении(Элемент)
	ДатаОписи = Объект.Дата;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтеграцияС1СДокументооборотом") Тогда
		МодульИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль(
			"ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент");
		МодульИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(
			Команда,
			ЭтотОбъект,
			Объект);
	КонецЕсли;
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ПодписиДокументов

// ЗарплатаКадрыПодсистемы.ПодписиДокументов
&НаКлиенте
Процедура Подключаемый_ПодписиДокументовЭлементПриИзменении(Элемент)
	ПодписиДокументовКлиент.ПриИзмененииПодписывающегоЛица(ЭтотОбъект, Элемент.Имя);
	ЗаполнитьСведенияОПредставителеСФР();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПодписиДокументовЭлементНажатие(Элемент)
	ПодписиДокументовКлиент.РасширеннаяПодсказкаНажатие(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры
// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов

#КонецОбласти

#Область КонтактнаяИнформация

&НаСервере
Процедура ОбновитьЭлементыКонтактнойИнформации()
	ИнициализироватьПоляВводаКонтактнойИнформации();
	Для Каждого КлючИЗначение Из ПоляВводаКонтактнойИнформации Цикл
		ИмяРеквизитаФормы = КлючИЗначение.Ключ;
		Если ИмяРеквизитаФормы = "БыстрыйПоискРеквизитовФормы" Тогда
			Продолжить;
		КонецЕсли;
		Реквизит          = КлючИЗначение.Значение;
		Если Реквизит.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
			КонтактнаяИнформацияБЗК.ОбновитьПолеВводаАдреса(ЭтотОбъект, ИмяРеквизитаФормы, Объект[Реквизит.Имя]);
		ИначеЕсли Реквизит.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
			КонтактнаяИнформацияБЗК.ОбновитьПолеВводаТелефона(ЭтотОбъект, ИмяРеквизитаФормы, Объект[Реквизит.Имя]);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьПоляВводаКонтактнойИнформации()
	Если ПоляВводаКонтактнойИнформации <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	// ПоляВводаКонтактнойИнформации - Структура
	//   * Ключ     - Строка    - Имя реквизита формы.
	//   * Значение - Структура - Свойства реквизита объекта.
	//       * Имя - Строка - Имя реквизита объекта хранящего значение контактной информации.
	//       * Тип - ПеречислениеСсылка.ТипыКонтактнойИнформации - Тип контактной информации.
	//       * Вид - Строка - Имя предопределенного вида контактной информации.
	ПоляВводаКонтактнойИнформации = Новый Структура;
	БыстрыйПоискРеквизитовФормы = Новый Соответствие;
	
	Реквизит = ОписаниеРеквизитаКонтактнойИнформации();
	Реквизит.Имя = "ТелефонСтрахователя";
	Реквизит.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Реквизит.Вид = "Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации";
	ПоляВводаКонтактнойИнформации.Вставить("ТелефонУполномоченногоПредставителя", Реквизит);
	БыстрыйПоискРеквизитовФормы.Вставить(Реквизит.Имя, "Объект.ТелефонУполномоченногоПредставителя");
	
	ПоляВводаКонтактнойИнформации.Вставить("БыстрыйПоискРеквизитовФормы", БыстрыйПоискРеквизитовФормы);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОписаниеРеквизитаКонтактнойИнформации()
	Возврат Новый Структура("Имя, Тип, Вид");
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПолеВводаКонтактнойИнформацииПриИзменении(Элемент)
	Текст = Элемент.ТекстРедактирования;
	ПолеВводаКонтактнойИнформацииПриИзмененииПриИзмененииНаСервере(Текст, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеВводаКонтактнойИнформацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Реквизит = ПоляВводаКонтактнойИнформации[Элемент.Имя];
	Оповещение = Новый ОписаниеОповещения("ПолеВводаКонтактнойИнформацииЗавершениеВыбора", ЭтотОбъект, Реквизит);
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
		ПредопределенноеЗначение(Реквизит.Вид),
		Объект[Реквизит.Имя]);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
КонецПроцедуры

&НаСервере
Процедура ПолеВводаКонтактнойИнформацииПриИзмененииПриИзмененииНаСервере(Текст, ИмяЭлемента)
	Реквизит = ПоляВводаКонтактнойИнформации[ИмяЭлемента];
	Если ПустаяСтрока(Текст) Тогда
		Значение = "";
	Иначе
		Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(
			Текст,
			ПредопределенноеЗначение(Реквизит.Вид));
	КонецЕсли;
	Объект[Реквизит.Имя] = Значение;
	ОбновитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПолеВводаКонтактнойИнформацииЗавершениеВыбора(РезультатВыбора, Реквизит) Экспорт
	Если ТипЗнч(РезультатВыбора) = Тип("Структура")Тогда
		Объект[Реквизит.Имя] = РезультатВыбора.Значение;
		ОбновитьВидимостьДоступность();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	ПодходящиеЗаявления = ПодходящиеЗаявления();
	
	Объект.Заявления.Очистить();
	
	МассивСтрокДляЗаполнения = Новый Массив;
	Пока ПодходящиеЗаявления.Следующий() Цикл
	   НоваяСтрокаОписи = Объект.Заявления.Добавить();
	   НоваяСтрокаОписи.Заявление = ПодходящиеЗаявления.Заявление;
	   МассивСтрокДляЗаполнения.Добавить(НоваяСтрокаОписи);
	КонецЦикла;
	
	ЗаполнитьКраткоеНаименованиеДокументов(МассивСтрокДляЗаполнения);
	ДатаОписи = Объект.Дата;
	
КонецПроцедуры

&НаСервере
Функция ПодходящиеЗаявления()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаявлениеСотрудника.Ссылка КАК Заявление
	|ИЗ
	|	Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК ЗаявлениеСотрудника
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОписьЗаявленийСотрудниковНаВыплатуПособий.Заявления КАК ОписьЗаявлений
	|		ПО (ОписьЗаявлений.Заявление = ЗаявлениеСотрудника.Ссылка)
	|			И (ОписьЗаявлений.Ссылка.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособий.СведенияНеобходимыеДляНазначенияПособий КАК ЗаявленияВРеестрах
	|		ПО (ЗаявленияВРеестрах.Заявление = ЗаявлениеСотрудника.Ссылка)
	|			И (ЗаявленияВРеестрах.Ссылка.Проведен)
	|ГДЕ
	|	ЗаявлениеСотрудника.Проведен
	|	И (ОписьЗаявлений.Ссылка ЕСТЬ NULL
	|			ИЛИ ОписьЗаявлений.Ссылка = &Ссылка)
	|	И ЗаявлениеСотрудника.Организация = &Организация
	|	И ЗаявленияВРеестрах.Ссылка ЕСТЬ NULL
	|	И ВЫБОР
	|			КОГДА &Формы2021
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЗаявлениеСотрудника.ВидПособия <> ЗНАЧЕНИЕ(Перечисление.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения)
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаявлениеСотрудника.ФамилияПолучателя,
	|	ЗаявлениеСотрудника.ИмяПолучателя,
	|	ЗаявлениеСотрудника.ОтчествоПолучателя,
	|	ЗаявлениеСотрудника.Дата";
	
	Формы2021 = ?(Объект.Дата >= ДатаФорм2021(), Истина, Ложь);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Формы2021", Формы2021);
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеОрганизации()
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ДатаПолученияСведений = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
	
	// Реквизиты организации.
	ИменаПолей =
	"Страхователь,
	|РегистрационныйНомерФСС,
	|КодПодчиненностиФСС,
	|ДополнительныйКодФСС,
	|НаименованиеТерриториальногоОрганаФСС,
	|ИННЮЛ,
	|КППЮЛ,
	|НаимЮЛСокр,
	|ТелОрганизации_JSON,
	|АдресЭлектроннойПочтыОрганизации";
	РеквизитыОрганизации = СЭДОФСС.СведенияОСтрахователе(Объект.Организация, ИменаПолей, ДатаПолученияСведений);
	
	Объект.НаименованиеОрганизации               = РеквизитыОрганизации.НаимЮЛСокр;
	Объект.НаименованиеТерриториальногоОрганаФСС = РеквизитыОрганизации.НаименованиеТерриториальногоОрганаФСС;
	Объект.ДополнительныйКодФСС                  = РеквизитыОрганизации.ДополнительныйКодФСС;
	Объект.ИНН                                   = РеквизитыОрганизации.ИННЮЛ;
	Объект.КПП                                   = РеквизитыОрганизации.КППЮЛ;
	Объект.РегистрационныйНомерФСС               = РеквизитыОрганизации.РегистрационныйНомерФСС;
	Объект.КодПодчиненностиФСС                   = РеквизитыОрганизации.КодПодчиненностиФСС;
	Объект.ТелефонСтрахователя                   = РеквизитыОрганизации.ТелОрганизации_JSON;
	Объект.ТелефонУполномоченногоПредставителя   = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(
		Объект.ТелефонСтрахователя);
	Объект.АдресЭлектроннойПочтыУполномоченногоПредставителя = РеквизитыОрганизации.АдресЭлектроннойПочтыОрганизации;
	
	// ЗарплатаКадрыПодсистемы.ПодписиДокументов
	ПодписиДокументов.ЗаполнитьПодписиПоОрганизации(ЭтотОбъект);
	// Конец ЗарплатаКадрыПодсистемы.ПодписиДокументов
	
	ЗаполнитьСведенияОПредставителеСФР(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОПредставителеСФР(ОбновитьПоОрганизации = Истина)
	Если ОбновитьПоОрганизации И ЗначениеЗаполнено(Объект.Организация) Тогда
		ДатаПолученияСведений = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
		РеквизитыОрганизации = СЭДОФСС.СведенияОСтрахователе(
			Объект.Организация, "ТелОрганизации_JSON,АдресЭлектроннойПочтыОрганизации", ДатаПолученияСведений);
		Объект.ТелефонСтрахователя = РеквизитыОрганизации.ТелОрганизации_JSON;
		Объект.ТелефонУполномоченногоПредставителя = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(
			Объект.ТелефонСтрахователя);
		Объект.АдресЭлектроннойПочтыУполномоченногоПредставителя = РеквизитыОрганизации.АдресЭлектроннойПочтыОрганизации;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ПредставительСФР) Тогда
		ИменаПолей = "ТелефонРабочий,EMailПредставление";
		КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическогоЛица(Ложь, Объект.ПредставительСФР, ИменаПолей, ТекущаяДатаСеанса());
		Если КадровыеДанные <> Неопределено Тогда
			Если ЗначениеЗаполнено(КадровыеДанные.ТелефонРабочий) Тогда
				Объект.ТелефонСтрахователя = КадровыеДанные.ТелефонРабочий;
				Объект.ТелефонУполномоченногоПредставителя = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(
					Объект.ТелефонСтрахователя);
			КонецЕсли;
			Если ЗначениеЗаполнено(КадровыеДанные.EMailПредставление) Тогда
				Объект.АдресЭлектроннойПочтыУполномоченногоПредставителя = КадровыеДанные.EMailПредставление;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	ОбновитьЭлементыПодписей();
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ЗаполнитьДанныеОрганизации()
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКраткоеНаименованиеДокументов(МассивСтрокДляЗаполнения)
	
	МассивЗаявлений = Новый Массив;
	Для каждого ЗаполняемаяСтрока Из МассивСтрокДляЗаполнения Цикл
	   МассивЗаявлений.Добавить(ЗаполняемаяСтрока.Заявление);
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаявлениеСотрудника.Ссылка КАК Заявление,
	|	ЗаявлениеСотрудника.Дата КАК Дата,
	|	ЗаявлениеСотрудника.ВидПособия КАК ВидПособия,
	|	ЗаявлениеСотрудника.СНИЛСРебенка КАК СНИЛСРебенка,
	|	ЗаявлениеСотрудника.НомерЛисткаНетрудоспособности КАК НомерЛисткаНетрудоспособности,
	|	ЗаявлениеСотрудника.ДатаНачалаОтпускаПоУходуЗаРебенком КАК ДатаНачалаОтпускаПоУходуЗаРебенком,
	|	ЗаявлениеСотрудника.ДатаОкончанияОтпускаПоУходуЗаРебенком КАК ДатаОкончанияОтпускаПоУходуЗаРебенком,
	|	ЗаявлениеСотрудника.ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком КАК ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком,
	|	ЗаявлениеСотрудника.НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком КАК НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком,
	|	ЗаявлениеСотрудника.ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности КАК ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности,
	|	ЗаявлениеСотрудника.НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности КАК НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности,
	|	ЗаявлениеСотрудника.ФормаСправкиОРожденииРебенка КАК ФормаСправкиОРожденииРебенка,
	|	ЗаявлениеСотрудника.ДатаСправкиОРожденииРебенка КАК ДатаСправкиОРожденииРебенка,
	|	ЗаявлениеСотрудника.НомерСправкиОРожденииРебенка КАК НомерСправкиОРожденииРебенка,
	|	ЗаявлениеСотрудника.ДатаСвидетельстваОРождении КАК ДатаСвидетельстваОРождении,
	|	ЗаявлениеСотрудника.СерияСвидетельстваОРождении КАК СерияСвидетельстваОРождении,
	|	ЗаявлениеСотрудника.НомерСвидетельстваОРождении КАК НомерСвидетельстваОРождении,
	|	ЗаявлениеСотрудника.ДатаИногоДокументаПодтверждающегоРождение КАК ДатаИногоДокументаПодтверждающегоРождение,
	|	ЗаявлениеСотрудника.НомерИногоДокументаПодтверждающегоРождение КАК НомерИногоДокументаПодтверждающегоРождение,
	|	ЗаявлениеСотрудника.СправкаОНеполученииПособия КАК СправкаОНеполученииПособия,
	|	ЗаявлениеСотрудника.ДатаСправкиОНеполученииПособияОтОтца КАК ДатаСправкиОНеполученииПособияОтОтца,
	|	ЗаявлениеСотрудника.НомерСправкиОНеполученииПособияОтОтца КАК НомерСправкиОНеполученииПособияОтОтца,
	|	ЗаявлениеСотрудника.ДатаСправкиОНеполученииПособияОтМатери КАК ДатаСправкиОНеполученииПособияОтМатери,
	|	ЗаявлениеСотрудника.НомерСправкиОНеполученииПособияОтМатери КАК НомерСправкиОНеполученииПособияОтМатери,
	|	ЗаявлениеСотрудника.ДатаРешенияОбОпеке КАК ДатаРешенияОбОпеке,
	|	ЗаявлениеСотрудника.НомерРешенияОбОпеке КАК НомерРешенияОбОпеке,
	|	ЗаявлениеСотрудника.ДатаРешенияОбУсыновлении КАК ДатаРешенияОбУсыновлении,
	|	ЗаявлениеСотрудника.НомерРешенияОбУсыновлении КАК НомерРешенияОбУсыновлении,
	|	ЗаявлениеСотрудника.ДатаДоговораОПередачеРебенкаВПриемнуюСемью КАК ДатаДоговораОПередачеРебенкаВПриемнуюСемью,
	|	ЗаявлениеСотрудника.НомерДоговораОПередачеРебенкаВПриемнуюСемью КАК НомерДоговораОПередачеРебенкаВПриемнуюСемью
	|ИЗ
	|	Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК ЗаявлениеСотрудника
	|ГДЕ
	|	ЗаявлениеСотрудника.Ссылка В(&МассивЗаявлений)";
	Запрос.УстановитьПараметр("МассивЗаявлений", МассивЗаявлений);
	
	ДанныеЗаявлений = Запрос.Выполнить().Выбрать();
	СтруктураПоиска = Новый Структура("Заявление"); 
	Для каждого ЗаполняемаяСтрока Из МассивСтрокДляЗаполнения Цикл
		ДанныеЗаявлений.Сбросить();
		СтруктураПоиска.Вставить("Заявление", ЗаполняемаяСтрока.Заявление);
		Если ДанныеЗаявлений.НайтиСледующий(СтруктураПоиска) Тогда
			Если Объект.ОтдельнаяСтрокаПодКаждыйДокумент Тогда
				ЗаполнитьКраткоеНаименованиеДокументовВСтроке2024(ЗаполняемаяСтрока, ДанныеЗаявлений)
			ИначеЕсли ДанныеЗаявлений.Дата < ПрямыеВыплатыПособийСоциальногоСтрахования.ДатаВступленияВСилуФорм2021Года() Тогда
				ЗаполнитьКраткоеНаименованиеДокументовВСтроке(ЗаполняемаяСтрока, ДанныеЗаявлений)
			Иначе
				ЗаполнитьКраткоеНаименованиеДокументовВСтроке2021(ЗаполняемаяСтрока, ДанныеЗаявлений)
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКраткоеНаименованиеДокументовВСтроке(ЗаполняемаяСтрока, ДанныеЗаявления)
	
	Если ДанныеЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности 
		Или ДанныеЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве 
		Или ДанныеЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам Тогда
		
		ДокументыОснованияСтрока 	= НСтр("ru = 'Заявление о выплате пособия, Листок нетруд-ти № %1';
											|en = 'Application for the allowance payment, Sick leave record No. %1'");
		ДокументыОснования 			= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, ДанныеЗаявления.НомерЛисткаНетрудоспособности);		
		КоличествоСтраниц 			= 4;
		
	ИначеЕсли ДанныеЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки Тогда
		
		ДокументыОснованияСтрока 	= НСтр("ru = 'Заявление о выплате пособия, Листок нетруд-ти № %1, Справка о постановке на учет от %2 № %3';
											|en = 'Application for the allowance payment, Sick leave record No. %1, Registration certificate No. %3 dated %2 '");
		ДокументыОснования 			= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, ДанныеЗаявления.НомерЛисткаНетрудоспособности, Формат(ДанныеЗаявления.ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности, "ДЛФ=D"), ДанныеЗаявления.НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности);		
		КоличествоСтраниц 			= 5;
		
	ИначеЕсли ДанныеЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки Тогда
		
		ДокументыОснованияСтрока 	= НСтр("ru = 'Заявление о выплате пособия, Справка о постановке на учет от %1 № %2';
											|en = 'Application for the allowance payment, Registration certificate No. %2 dated %1 '"); 
		ДокументыОснования 			= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, ДанныеЗаявления.ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности, ДанныеЗаявления.НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности);		
		КоличествоСтраниц 			= 4;
		
	ИначеЕсли ДанныеЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком Тогда  
		
		ДокументыОснования 			= НСтр("ru = 'Заявление';
												|en = 'Application'");
		КоличествоСтраниц 			= 3;
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаСправкиОРожденииРебенка) И ЗначениеЗаполнено(ДанныеЗаявления.НомерСправкиОРожденииРебенка) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Справка %1 от %2 № %3';
												|en = 'The %1 certificate dated %2 No. %3'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, ДанныеЗаявления.ФормаСправкиОРожденииРебенка, Формат(ДанныеЗаявления.ДатаСправкиОРожденииРебенка, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерСправкиОРожденииРебенка);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаСвидетельстваОРождении) И ЗначениеЗаполнено(ДанныеЗаявления.НомерСвидетельстваОРождении) И ЗначениеЗаполнено(ДанныеЗаявления.СерияСвидетельстваОРождении) Тогда			
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Св-во о рожд. от %1 сер. %2 № %3';
												|en = 'Birth certificate dated %1 series %2 No. %3'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаСвидетельстваОРождении, "ДФ=dd.MM.yy"), ДанныеЗаявления.СерияСвидетельстваОРождении, ДанныеЗаявления.НомерСвидетельстваОРождении);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаИногоДокументаПодтверждающегоРождение) И ЗначениеЗаполнено(ДанныеЗаявления.НомерИногоДокументаПодтверждающегоРождение) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = '<Иное подтв. рожд.> от %1 № %2';
												|en = '<Other birth doc.> dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаИногоДокументаПодтверждающегоРождение, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерИногоДокументаПодтверждающегоРождение);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;
			
		КонецЕсли; 
		
		Если ДанныеЗаявления.СправкаОНеполученииПособия = Перечисления.РодителиПредоставившиеСправкуОНеполученииПособия.Отец Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Справка от отца о непол. пос. от %1 № %2';
												|en = 'Certificate of father of allowance non-receipt dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтОтца, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерСправкиОНеполученииПособияОтОтца);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		ИначеЕсли ДанныеЗаявления.СправкаОНеполученииПособия = Перечисления.РодителиПредоставившиеСправкуОНеполученииПособия.Мать Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Справка от др. род. о непол. пос. от %1 № %2';
												|en = 'Certificate of other relative of allowance non-receipt dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтМатери, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерСправкиОНеполученииПособияОтМатери);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		ИначеЕсли ДанныеЗаявления.СправкаОНеполученииПособия = Перечисления.РодителиПредоставившиеСправкуОНеполученииПособия.ОбаРодителя Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Справка от отца о непол. пос. от %1 № %2; Справка от матери о непол. пос. от %3 № %4';
												|en = 'Certificate of father of allowance non-receipt dated %1 No. %2; Certificate of mother of allowance non-receipt dated %3 No. %4'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтОтца, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерСправкиОНеполученииПособияОтОтца, Формат(ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтМатери, "ДФ=dd.MM.yy"),  ДанныеЗаявления.НомерСправкиОНеполученииПособияОтМатери);					
			КоличествоСтраниц 			= КоличествоСтраниц + 2;
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаРешенияОбОпеке) И ЗначениеЗаполнено(ДанныеЗаявления.НомерРешенияОбОпеке) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Решение об устан. опеки от %1 № %2';
												|en = 'Decision on child custody establishment dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаРешенияОбОпеке, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерРешенияОбОпеке);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаРешенияОбУсыновлении) И ЗначениеЗаполнено(ДанныеЗаявления.НомерРешенияОбУсыновлении) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Решение об усын-ии от %1 № %2';
												|en = 'Adoption order dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаРешенияОбУсыновлении, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерРешенияОбУсыновлении);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаДоговораОПередачеРебенкаВПриемнуюСемью) И ЗначениеЗаполнено(ДанныеЗаявления.НомерДоговораОПередачеРебенкаВПриемнуюСемью) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Договор о передаче на восп. от %1 № %2';
												|en = 'Foster care agreement dated %1 No.%2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаДоговораОПередачеРебенкаВПриемнуюСемью, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерДоговораОПередачеРебенкаВПриемнуюСемью);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		КонецЕсли; 
		
	ИначеЕсли ДанныеЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка Тогда  
		
		ДокументыОснования 			= НСтр("ru = 'Заявление';
												|en = 'Application'");
		КоличествоСтраниц 			= 3;
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ФормаСправкиОРожденииРебенка) И ЗначениеЗаполнено(ДанныеЗаявления.ДатаСправкиОРожденииРебенка) И ЗначениеЗаполнено(ДанныеЗаявления.НомерСправкиОРожденииРебенка) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Справка %1 от %2 № %3';
												|en = 'The %1 certificate dated %2 No. %3'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, ДанныеЗаявления.ФормаСправкиОРожденииРебенка, Формат(ДанныеЗаявления.ДатаСправкиОРожденииРебенка, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерСправкиОРожденииРебенка);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаСвидетельстваОРождении) И ЗначениеЗаполнено(ДанныеЗаявления.НомерСвидетельстваОРождении) И ЗначениеЗаполнено(ДанныеЗаявления.СерияСвидетельстваОРождении) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Св-во о рожд. от %1 сер. %2 № %3';
												|en = 'Birth certificate dated %1 series %2 No. %3'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаСвидетельстваОРождении, "ДФ=dd.MM.yy"), ДанныеЗаявления.СерияСвидетельстваОРождении, ДанныеЗаявления.НомерСвидетельстваОРождении);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;

		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаИногоДокументаПодтверждающегоРождение) И ЗначениеЗаполнено(ДанныеЗаявления.НомерИногоДокументаПодтверждающегоРождение) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = '<Иное подтв. рожд.> от %1 № %2';
												|en = '<Other birth doc.> dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаИногоДокументаПодтверждающегоРождение, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерИногоДокументаПодтверждающегоРождение);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;
			
		КонецЕсли; 
		
		Если ДанныеЗаявления.СправкаОНеполученииПособия = Перечисления.РодителиПредоставившиеСправкуОНеполученииПособия.Отец Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Справка от отца о непол. пос. от %1 № %2';
												|en = 'Certificate of father of allowance non-receipt dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтОтца, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерСправкиОНеполученииПособияОтОтца);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		ИначеЕсли ДанныеЗаявления.СправкаОНеполученииПособия = Перечисления.РодителиПредоставившиеСправкуОНеполученииПособия.Мать Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Справка от др. род. о непол. пос. от %1 № %2';
												|en = 'Certificate of other relative of allowance non-receipt dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтМатери, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерСправкиОНеполученииПособияОтМатери);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаРешенияОбОпеке) И ЗначениеЗаполнено(ДанныеЗаявления.НомерРешенияОбОпеке) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Решение об устан. опеки от %1 № %2';
												|en = 'Decision on child custody establishment dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаРешенияОбОпеке, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерРешенияОбОпеке);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаРешенияОбУсыновлении) И ЗначениеЗаполнено(ДанныеЗаявления.НомерРешенияОбУсыновлении) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Решение об усын-ии от %1 № %2';
												|en = 'Adoption order dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаРешенияОбУсыновлении, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерРешенияОбУсыновлении);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаДоговораОПередачеРебенкаВПриемнуюСемью) И ЗначениеЗаполнено(ДанныеЗаявления.НомерДоговораОПередачеРебенкаВПриемнуюСемью) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Договор о передаче на восп. от %1 № %2';
												|en = 'Foster care agreement dated %1 No.%2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаДоговораОПередачеРебенкаВПриемнуюСемью, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерДоговораОПередачеРебенкаВПриемнуюСемью);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		КонецЕсли; 
		
	КонецЕсли;
	
	ЗаполняемаяСтрока.КраткоеНаименованиеДокументов = ДокументыОснования;
	ЗаполняемаяСтрока.КоличествоСтраниц = КоличествоСтраниц;

КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьКраткоеНаименованиеДокументовВСтроке2021(ЗаполняемаяСтрока, ДанныеЗаявления)
	
	Если ДанныеЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности 
		Или ДанныеЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве 
		Или ДанныеЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам Тогда
		
		ДокументыОснованияСтрока 	= НСтр("ru = 'Сведения о застрахованном лице, Листок нетруд-ти № %1';
											|en = 'Insured person details, Sick leave record No. %1'");
		ДокументыОснования 			= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, ДанныеЗаявления.НомерЛисткаНетрудоспособности);		
		КоличествоСтраниц 			= 4;
		
	ИначеЕсли ДанныеЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки Тогда
		
		ДокументыОснованияСтрока 	= НСтр("ru = 'Сведения о застрахованном лице, Листок нетруд-ти № %1, Справка о постановке на учет от %2 № %3';
											|en = 'Insured person information, Sick leave record No. %1, Registration certificate No. %3 dated %2'");
		ДокументыОснования 			= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, ДанныеЗаявления.НомерЛисткаНетрудоспособности, Формат(ДанныеЗаявления.ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности, "ДЛФ=D"), ДанныеЗаявления.НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности);		
		КоличествоСтраниц 			= 5;
		
	ИначеЕсли ДанныеЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки Тогда
		
		ДокументыОснованияСтрока 	= НСтр("ru = 'Сведения о застрахованном лице, Справка о постановке на учет от %1 № %2';
											|en = 'Insured person information, Registration certificate No. %2 dated %1'"); 
		ДокументыОснования 			= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, ДанныеЗаявления.ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности, ДанныеЗаявления.НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности);		
		КоличествоСтраниц 			= 4;
		
	ИначеЕсли ДанныеЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком Тогда  
		
		ДокументыОснования 			= НСтр("ru = 'Сведения';
												|en = 'Information'");
		КоличествоСтраниц 			= 3;
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаСправкиОРожденииРебенка) И ЗначениеЗаполнено(ДанныеЗаявления.НомерСправкиОРожденииРебенка) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Справка %1 от %2 № %3';
												|en = 'The %1 certificate dated %2 No. %3'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, ДанныеЗаявления.ФормаСправкиОРожденииРебенка, Формат(ДанныеЗаявления.ДатаСправкиОРожденииРебенка, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерСправкиОРожденииРебенка);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаСвидетельстваОРождении) И ЗначениеЗаполнено(ДанныеЗаявления.НомерСвидетельстваОРождении) И ЗначениеЗаполнено(ДанныеЗаявления.СерияСвидетельстваОРождении) Тогда			
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Св-во о рожд. от %1 сер. %2 № %3';
												|en = 'Birth certificate dated %1 series %2 No. %3'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаСвидетельстваОРождении, "ДФ=dd.MM.yy"), ДанныеЗаявления.СерияСвидетельстваОРождении, ДанныеЗаявления.НомерСвидетельстваОРождении);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаИногоДокументаПодтверждающегоРождение) И ЗначениеЗаполнено(ДанныеЗаявления.НомерИногоДокументаПодтверждающегоРождение) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = '<Иное подтв. рожд.> от %1 № %2';
												|en = '<Other birth doc.> dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаИногоДокументаПодтверждающегоРождение, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерИногоДокументаПодтверждающегоРождение);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;
			
		КонецЕсли; 
		
		Если ДанныеЗаявления.СправкаОНеполученииПособия = Перечисления.РодителиПредоставившиеСправкуОНеполученииПособия.Отец Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Справка от отца о непол. пос. от %1 № %2';
												|en = 'Certificate of father of allowance non-receipt dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтОтца, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерСправкиОНеполученииПособияОтОтца);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		ИначеЕсли ДанныеЗаявления.СправкаОНеполученииПособия = Перечисления.РодителиПредоставившиеСправкуОНеполученииПособия.Мать Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Справка от др. род. о непол. пос. от %1 № %2';
												|en = 'Certificate of other relative of allowance non-receipt dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтМатери, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерСправкиОНеполученииПособияОтМатери);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		ИначеЕсли ДанныеЗаявления.СправкаОНеполученииПособия = Перечисления.РодителиПредоставившиеСправкуОНеполученииПособия.ОбаРодителя Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Справка от отца о непол. пос. от %1 № %2; Справка от матери о непол. пос. от %3 № %4';
												|en = 'Certificate of father of allowance non-receipt dated %1 No. %2; Certificate of mother of allowance non-receipt dated %3 No. %4'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтОтца, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерСправкиОНеполученииПособияОтОтца, Формат(ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтМатери, "ДФ=dd.MM.yy"),  ДанныеЗаявления.НомерСправкиОНеполученииПособияОтМатери);					
			КоличествоСтраниц 			= КоличествоСтраниц + 2;
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаРешенияОбОпеке) И ЗначениеЗаполнено(ДанныеЗаявления.НомерРешенияОбОпеке) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Решение об устан. опеки от %1 № %2';
												|en = 'Decision on child custody establishment dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаРешенияОбОпеке, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерРешенияОбОпеке);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаРешенияОбУсыновлении) И ЗначениеЗаполнено(ДанныеЗаявления.НомерРешенияОбУсыновлении) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Решение об усын-ии от %1 № %2';
												|en = 'Adoption order dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаРешенияОбУсыновлении, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерРешенияОбУсыновлении);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаДоговораОПередачеРебенкаВПриемнуюСемью) И ЗначениеЗаполнено(ДанныеЗаявления.НомерДоговораОПередачеРебенкаВПриемнуюСемью) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Договор о передаче на восп. от %1 № %2';
												|en = 'Foster care agreement dated %1 No.%2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаДоговораОПередачеРебенкаВПриемнуюСемью, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерДоговораОПередачеРебенкаВПриемнуюСемью);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		КонецЕсли; 
		
	ИначеЕсли ДанныеЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка Тогда  
		
		ДокументыОснования 			= НСтр("ru = 'Сведения';
												|en = 'Information'");
		КоличествоСтраниц 			= 3;
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ФормаСправкиОРожденииРебенка) И ЗначениеЗаполнено(ДанныеЗаявления.ДатаСправкиОРожденииРебенка) И ЗначениеЗаполнено(ДанныеЗаявления.НомерСправкиОРожденииРебенка) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Справка %1 от %2 № %3';
												|en = 'The %1 certificate dated %2 No. %3'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, ДанныеЗаявления.ФормаСправкиОРожденииРебенка, Формат(ДанныеЗаявления.ДатаСправкиОРожденииРебенка, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерСправкиОРожденииРебенка);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаСвидетельстваОРождении) И ЗначениеЗаполнено(ДанныеЗаявления.НомерСвидетельстваОРождении) И ЗначениеЗаполнено(ДанныеЗаявления.СерияСвидетельстваОРождении) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Св-во о рожд. от %1 сер. %2 № %3';
												|en = 'Birth certificate dated %1 series %2 No. %3'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаСвидетельстваОРождении, "ДФ=dd.MM.yy"), ДанныеЗаявления.СерияСвидетельстваОРождении, ДанныеЗаявления.НомерСвидетельстваОРождении);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;

		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаИногоДокументаПодтверждающегоРождение) И ЗначениеЗаполнено(ДанныеЗаявления.НомерИногоДокументаПодтверждающегоРождение) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = '<Иное подтв. рожд.> от %1 № %2';
												|en = '<Other birth doc.> dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаИногоДокументаПодтверждающегоРождение, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерИногоДокументаПодтверждающегоРождение);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;
			
		КонецЕсли; 
		
		Если ДанныеЗаявления.СправкаОНеполученииПособия = Перечисления.РодителиПредоставившиеСправкуОНеполученииПособия.Отец Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Справка от отца о непол. пос. от %1 № %2';
												|en = 'Certificate of father of allowance non-receipt dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтОтца, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерСправкиОНеполученииПособияОтОтца);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		ИначеЕсли ДанныеЗаявления.СправкаОНеполученииПособия = Перечисления.РодителиПредоставившиеСправкуОНеполученииПособия.Мать Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Справка от др. род. о непол. пос. от %1 № %2';
												|en = 'Certificate of other relative of allowance non-receipt dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтМатери, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерСправкиОНеполученииПособияОтМатери);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаРешенияОбОпеке) И ЗначениеЗаполнено(ДанныеЗаявления.НомерРешенияОбОпеке) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Решение об устан. опеки от %1 № %2';
												|en = 'Decision on child custody establishment dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаРешенияОбОпеке, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерРешенияОбОпеке);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаРешенияОбУсыновлении) И ЗначениеЗаполнено(ДанныеЗаявления.НомерРешенияОбУсыновлении) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Решение об усын-ии от %1 № %2';
												|en = 'Adoption order dated %1 No. %2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаРешенияОбУсыновлении, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерРешенияОбУсыновлении);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаДоговораОПередачеРебенкаВПриемнуюСемью) И ЗначениеЗаполнено(ДанныеЗаявления.НомерДоговораОПередачеРебенкаВПриемнуюСемью) Тогда
			
			ДокументыОснованияСтрока 	= НСтр("ru = 'Договор о передаче на восп. от %1 № %2';
												|en = 'Foster care agreement dated %1 No.%2'");
			ДокументыОснования 			= ДокументыОснования + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументыОснованияСтрока, Формат(ДанныеЗаявления.ДатаДоговораОПередачеРебенкаВПриемнуюСемью, "ДФ=dd.MM.yy"), ДанныеЗаявления.НомерДоговораОПередачеРебенкаВПриемнуюСемью);					
			КоличествоСтраниц 			= КоличествоСтраниц + 1;			
			
		КонецЕсли; 
		
	КонецЕсли;
	
	ЗаполняемаяСтрока.КраткоеНаименованиеДокументов = ДокументыОснования;
	ЗаполняемаяСтрока.КоличествоСтраниц = КоличествоСтраниц;

КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьКраткоеНаименованиеДокументовВСтроке2024(ЗаполняемаяСтрока, ДанныеЗаявления)
	
	ДобавитьДокумент(ЗаполняемаяСтрока, НСтр("ru = 'Сведения о застрахованном лице';
											|en = 'Information on the insured person'"), 2, 1);
	
	ВидыПособий = Перечисления.ПособияНазначаемыеФСС;
	
	Если ДанныеЗаявления.ВидПособия = ВидыПособий.ПособиеПоВременнойНетрудоспособности
		Или ДанныеЗаявления.ВидПособия = ВидыПособий.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве
		Или ДанныеЗаявления.ВидПособия = ВидыПособий.ПособиеПоБеременностиИРодам Тогда
		
		Представление = СтрШаблон(
			НСтр("ru = 'Листок нетрудоспособности № %1';
				|en = 'Sick leave record No. %1'"),
			ДанныеЗаявления.НомерЛисткаНетрудоспособности);
		ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 2, 1);
		
	ИначеЕсли ДанныеЗаявления.ВидПособия = ВидыПособий.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки Тогда
		
		Представление = СтрШаблон(
			НСтр("ru = 'Листок нетрудоспособности № %1';
				|en = 'Sick leave record No. %1'"),
			ДанныеЗаявления.НомерЛисткаНетрудоспособности);
		ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 2, 1);
		
		Представление = СтрШаблон(
			НСтр("ru = 'Справка о постановке на учет от %1 № %2';
				|en = 'Certificate of medical registration No. %2 dated %1'"),
			Формат(ДанныеЗаявления.ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности, "ДЛФ=D"),
			ДанныеЗаявления.НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности);
		ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 1, 1);
		
	ИначеЕсли ДанныеЗаявления.ВидПособия = ВидыПособий.ПособиеВставшимНаУчетВРанниеСроки Тогда
		
		Представление = СтрШаблон(
			НСтр("ru = 'Справка о постановке на учет от %1 № %2';
				|en = 'Certificate of medical registration No. %2 dated %1'"),
			Формат(ДанныеЗаявления.ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности, "ДЛФ=D"),
			ДанныеЗаявления.НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности);
		ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 1, 1);
		
	ИначеЕсли ДанныеЗаявления.ВидПособия = ВидыПособий.ЕжемесячноеПособиеПоУходуЗаРебенком
		Или ДанныеЗаявления.ВидПособия = ВидыПособий.ЕдиновременноеПособиеПриРожденииРебенка Тогда
		
		ЕстьСправкаОРождении = ЗначениеЗаполнено(ДанныеЗаявления.ДатаСправкиОРожденииРебенка)
			И ЗначениеЗаполнено(ДанныеЗаявления.НомерСправкиОРожденииРебенка);
		Если ЕстьСправкаОРождении Тогда
			Представление = СтрШаблон(
				НСтр("ru = 'Справка %1 от %2 № %3';
					|en = 'The %1 certificate dated %2 No. %3'"),
				ДанныеЗаявления.ФормаСправкиОРожденииРебенка,
				Формат(ДанныеЗаявления.ДатаСправкиОРожденииРебенка, "ДЛФ=D"),
				ДанныеЗаявления.НомерСправкиОРожденииРебенка);
			ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 1, 1);
		КонецЕсли;
		
		ЕстьСвидетельствоОРождении = ЗначениеЗаполнено(ДанныеЗаявления.ДатаСвидетельстваОРождении)
			И ЗначениеЗаполнено(ДанныеЗаявления.НомерСвидетельстваОРождении)
			И ЗначениеЗаполнено(ДанныеЗаявления.СерияСвидетельстваОРождении);
		Если ЕстьСвидетельствоОРождении Тогда
			Представление = СтрШаблон(
				НСтр("ru = 'Свидетельство о рождении от %1 серия %2 № %3';
					|en = 'Birth certificate series %2 No. %3 dated %1'"),
				Формат(ДанныеЗаявления.ДатаСвидетельстваОРождении, "ДЛФ=D"),
				ДанныеЗаявления.СерияСвидетельстваОРождении,
				ДанныеЗаявления.НомерСвидетельстваОРождении);
			ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 1, 1);
		КонецЕсли;
		
		ЕстьИнойДокументОРождении = ЗначениеЗаполнено(ДанныеЗаявления.ДатаИногоДокументаПодтверждающегоРождение)
			И ЗначениеЗаполнено(ДанныеЗаявления.НомерИногоДокументаПодтверждающегоРождение);
		Если ЕстьИнойДокументОРождении Тогда
			Представление = СтрШаблон(
				НСтр("ru = 'Документ, подтверждающий рождение на территории иностранного государства от %1 № %2';
					|en = 'Document certifying birth abroad No. %2 dated %1'"),
				Формат(ДанныеЗаявления.ДатаИногоДокументаПодтверждающегоРождение, "ДЛФ=D"),
				ДанныеЗаявления.НомерИногоДокументаПодтверждающегоРождение);
			ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 1, 1);
		КонецЕсли;
		
		Если Не ЕстьСправкаОРождении И Не ЕстьСвидетельствоОРождении И Не ЕстьИнойДокументОРождении Тогда
			ДобавитьДокумент(ЗаполняемаяСтрока, НСтр("ru = '<Документ, подтверждающий рождение>';
													|en = '<Document certifying birth>'"), 0, 1);
		КонецЕсли;
		
		Представление = НСтр("ru = 'СНИЛС ребенка: ';
							|en = 'Child SNILS:'");
		Если ЗначениеЗаполнено(ДанныеЗаявления.СНИЛСРебенка) Тогда
			Представление = Представление + ДанныеЗаявления.СНИЛСРебенка;
		Иначе
			Представление = "<" + Представление + ">"
		КонецЕсли;
		ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 1, 1);
		
		ВидыСправокОтРодителей = Перечисления.РодителиПредоставившиеСправкуОНеполученииПособия;
		
		Если Не ЗначениеЗаполнено(ДанныеЗаявления.СНИЛСРебенка) Тогда
			Если (ДанныеЗаявления.СправкаОНеполученииПособия = ВидыСправокОтРодителей.Отец
					Или ДанныеЗаявления.СправкаОНеполученииПособия = ВидыСправокОтРодителей.ОбаРодителя)
				И (ЗначениеЗаполнено(ДанныеЗаявления.НомерСправкиОНеполученииПособияОтОтца)
					Или ЗначениеЗаполнено(ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтОтца)) Тогда
				НомерДата = СЭДОФСС.ПредставлениеНомераИДаты(
					ДанныеЗаявления.НомерСправкиОНеполученииПособияОтОтца,
					ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтОтца);
				Представление = СокрП(НСтр("ru = 'Справка о неполучении пособия от отца';
											|en = 'Certificate of allowance non-receipt from father'") + " " + НомерДата);
				ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 1, 1);
			КонецЕсли;
			
			Если (ДанныеЗаявления.СправкаОНеполученииПособия = ВидыСправокОтРодителей.Мать
					Или ДанныеЗаявления.СправкаОНеполученииПособия = ВидыСправокОтРодителей.ОбаРодителя)
				И (ЗначениеЗаполнено(ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтМатери)
					Или ЗначениеЗаполнено(ДанныеЗаявления.НомерСправкиОНеполученииПособияОтМатери)) Тогда
				НомерДата = СЭДОФСС.ПредставлениеНомераИДаты(
					ДанныеЗаявления.ДатаСправкиОНеполученииПособияОтМатери,
					ДанныеЗаявления.НомерСправкиОНеполученииПособияОтМатери);
				Представление = СокрП(НСтр("ru = 'Справка о неполучении пособия от матери';
											|en = 'Certificate of allowance non-receipt from mother'") + " " + НомерДата);
				ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 1, 1);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаРешенияОбОпеке)
			И ЗначениеЗаполнено(ДанныеЗаявления.НомерРешенияОбОпеке) Тогда
			Представление = СтрШаблон(
				НСтр("ru = 'Решение об установлении опеки от %1 № %2';
					|en = 'Decision on custody establishment No. %2 dated %1'"),
				Формат(ДанныеЗаявления.ДатаРешенияОбОпеке, "ДЛФ=D"),
				ДанныеЗаявления.НомерРешенияОбОпеке);
			ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 1, 1);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаРешенияОбУсыновлении)
			И ЗначениеЗаполнено(ДанныеЗаявления.НомерРешенияОбУсыновлении) Тогда
			Представление = СтрШаблон(
				НСтр("ru = 'Решение об усыновлении от %1 № %2';
					|en = 'Adoption order No. %2 dated %1'"),
				Формат(ДанныеЗаявления.ДатаРешенияОбУсыновлении, "ДЛФ=D"),
				ДанныеЗаявления.НомерРешенияОбУсыновлении);
			ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 1, 1);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаДоговораОПередачеРебенкаВПриемнуюСемью)
			И ЗначениеЗаполнено(ДанныеЗаявления.НомерДоговораОПередачеРебенкаВПриемнуюСемью) Тогда
			Представление = СтрШаблон(
				НСтр("ru = 'Договор о передаче на воспитание в приемную семью от %1 № %2';
					|en = 'Foster care agreement No. %2 dated %1'"),
				Формат(ДанныеЗаявления.ДатаДоговораОПередачеРебенкаВПриемнуюСемью, "ДЛФ=D"),
				ДанныеЗаявления.НомерДоговораОПередачеРебенкаВПриемнуюСемью);
			ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 1, 1);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДанныеЗаявления.ВидПособия = ВидыПособий.ПособиеПоВременнойНетрудоспособности
		Или ДанныеЗаявления.ВидПособия = ВидыПособий.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве
		Или ДанныеЗаявления.ВидПособия = ВидыПособий.ПособиеПоБеременностиИРодам Тогда
		ДобавитьДокумент(ЗаполняемаяСтрока, НСтр("ru = '<Документ, подтверждающий стаж>';
												|en = '<Document confirming length of service>'"), 0, 1);
		ДобавитьДокумент(ЗаполняемаяСтрока, НСтр("ru = '<Документ, подтверждающий заработок>';
												|en = '<Document confirming earnings>'"), 0, 1);
		// Подтверждение льгот опционально.
	КонецЕсли;
	
	Если ДанныеЗаявления.ВидПособия = ВидыПособий.ПособиеПоБеременностиИРодам
		Или ДанныеЗаявления.ВидПособия = ВидыПособий.ЕжемесячноеПособиеПоУходуЗаРебенком Тогда
		Представление = НСтр("ru = 'Приказ о предоставлении отпуска';
							|en = 'Order granting leave'");
		Если ЗначениеЗаполнено(ДанныеЗаявления.ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком)
			И ЗначениеЗаполнено(ДанныеЗаявления.НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком) Тогда
			Представление = СтрШаблон(НСтр("ru = '%1 от %2 № %3';
											|en = '%1 dated %2 No. %3'"),
				Представление,
				Формат(ДанныеЗаявления.ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком, "ДЛФ=D"),
				ДанныеЗаявления.НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком);
		КонецЕсли;
		ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 1, 1);
	КонецЕсли;
	
	Если ДанныеЗаявления.ВидПособия = ВидыПособий.ЕжемесячноеПособиеПоУходуЗаРебенком Тогда
		Представление = НСтр("ru = 'Заявление о назначении ежемесячного пособия по уходу за ребенком';
							|en = 'Application for the assignment of a monthly childcare allowance'");
		ДобавитьДокумент(ЗаполняемаяСтрока, Представление, 1, 1);
		
		ДобавитьДокумент(ЗаполняемаяСтрока, НСтр("ru = '<Документ, подтверждающий заработок>';
												|en = '<Document confirming earnings>'"), 0, 1);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьДокумент(ЗаполняемаяСтрока, ПредставлениеДокумента, КоличествоСтраниц, КоличествоДокументов) Экспорт
	Если ЗначениеЗаполнено(ЗаполняемаяСтрока.КраткоеНаименованиеДокументов) Тогда
		СтрокаТаблицы = Объект.Заявления.Вставить(Объект.Заявления.Индекс(ЗаполняемаяСтрока) + 1);
		СтрокаТаблицы.Заявление = ЗаполняемаяСтрока.Заявление;
		ЗаполняемаяСтрока = СтрокаТаблицы;
	КонецЕсли;
	
	ЗаполняемаяСтрока.КраткоеНаименованиеДокументов = ПредставлениеДокумента;
	ЗаполняемаяСтрока.КоличествоСтраниц             = КоличествоСтраниц;
	ЗаполняемаяСтрока.КоличествоДокументов          = КоличествоДокументов;
КонецПроцедуры

&НаСервере
Процедура ЗаявленияЗаявлениеПриИзмененииНаСервере(ИдентификаторСтроки)
	ТекущаяСтрока = Объект.Заявления.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если НЕ ТекущаяСтрока = Неопределено Тогда
	    ЗаполнитьКраткоеНаименованиеДокументов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекущаяСтрока))
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыПодписей()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		ПодписиДокументовКлиентСервер.ИмяЭлементаФормыПоРолиПодписанта("ПредставительСФР"),
		"ПоложениеЗаголовка",
		ПоложениеЗаголовкаЭлементаФормы.Верх);
	
	ВводВСтаромФормате = ЗначениеЗаполнено(Объект.УдалитьФИОУполномоченного) И Не ЗначениеЗаполнено(Объект.ПредставительСФР);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"УдалитьФИОУполномоченного",
		"Видимость",
		ВводВСтаромФормате);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"УдалитьДолжностьУполномоченного",
		"Видимость",
		ВводВСтаромФормате);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДатаФорм2021()
	Возврат ПрямыеВыплатыПособийСоциальногоСтрахования.ДатаВступленияВСилуФорм2021Года();
КонецФункции

&НаКлиенте
Функция ИзменилсяОтборЗаявленийКоторыйЗависитОтДаты()
	ДатаФорм2021 = ДатаФорм2021();
	Возврат (Объект.Дата >= ДатаФорм2021) <> (ДатаОписи >= ДатаФорм2021);
КонецФункции

&НаКлиенте
Процедура ПредложитьПерезаполнить()
	Если Не ЗначениеЗаполнено(Объект.Организация)
		Или Объект.Заявления.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("ПерезаполнитьПриНеобходимостиЗавершение", ЭтотОбъект);
	
	ТекстВопроса = НСтр("ru = 'Изменились ключевые реквизиты.
		|Перезаполнить документ?';
		|en = 'Key attributes changed.
		|Do you want to refill the document?'");
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Перезаполнить';
												|en = 'Refill'"));
	Кнопки.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Не перезаполнять';
												|en = 'Do not refill'"));
	
	ПоказатьВопрос(Обработчик, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Да);
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьПриНеобходимостиЗавершение(Ответ, ПараметрыВыполнения) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаполнитьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьДоступность()
	ОбновитьЭлементыКонтактнойИнформации();
	
	Если Объект.ОтдельнаяСтрокаПодКаждыйДокумент Тогда
		Элементы.ЗаявленияКраткоеНаименованиеДокументов.Заголовок = "";
		Элементы.ЗаявленияГруппаФИОСНИЛС.Группировка = ГруппировкаКолонок.Горизонтальная;
		Элементы.ЗаявленияГруппаФИО.Группировка = ГруппировкаКолонок.Горизонтальная;
		Элементы.ЗаявленияКоличествоДокументов.Видимость = Истина;
	Иначе
		Элементы.ЗаявленияКраткоеНаименованиеДокументов.Заголовок = НСтр("ru = 'Краткое наименование документов';
																		|en = 'Short document name'");
		Элементы.ЗаявленияГруппаФИОСНИЛС.Группировка = ГруппировкаКолонок.Вертикальная;
		Элементы.ЗаявленияГруппаФИО.Группировка = ГруппировкаКолонок.Вертикальная;
		Элементы.ЗаявленияКоличествоДокументов.Видимость = Ложь;
	КонецЕсли;
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

#КонецОбласти
