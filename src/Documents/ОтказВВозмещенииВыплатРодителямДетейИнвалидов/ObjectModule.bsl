#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаСоздания) Тогда
		ДатаСоздания = ТекущаяДата(); // АПК:143 Для фильтрации событий в журнале регистрации требуется дата сервера.
	КонецЕсли;
	ДополнительныеСвойства.Вставить("ЗначенияРеквизитовДоЗаписи", ЗначенияРеквизитовДоЗаписи());
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	РегистрыСведений.РегистрацииЗаявленийОВозмещенииВыплатРодителямДетейИнвалидов.ПриЗаписиОтказа(
		ЭтотОбъект,
		ДополнительныеСвойства.ЗначенияРеквизитовДоЗаписи);
	
	Если Загружен Тогда
		Структура = РегистрыСведений.СНИЛСВходящихСообщенийСЭДО.СтруктураСписочногоДокумента();
		Структура.ВходящийДокумент = Ссылка;
		Структура.Страхователь = Страхователь;
		Структура.ИдентификаторСообщения = ИдентификаторСообщения;
		Структура.ТипСообщения = Менеджер().ТипСообщения();
		Структура.ВходящаяДата = ДатаСообщения;
		Структура.ГоловнаяОрганизация = ГоловнаяОрганизация;
		
		Таблица = Оплаты.Выгрузить(, "ФизическоеЛицо, СотрудникСНИЛС, СотрудникФамилия, СотрудникИмя, СотрудникОтчество");
		Таблица.Свернуть("ФизическоеЛицо, СотрудникСНИЛС, СотрудникФамилия, СотрудникИмя, СотрудникОтчество");
		МассивСНИЛС = КоллекцииБЗК.УникальныеЗначенияКолонки(Таблица, "СотрудникСНИЛС");
		Для Каждого СНИЛС Из МассивСНИЛС Цикл
			Если Не ЗначениеЗаполнено(СНИЛС) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаТаблицы = Таблица.Найти(СНИЛС, "СотрудникСНИЛС");
			СтрокаТаблицыРегистра = Структура.ТаблицаСНИЛС.Добавить();
			СтрокаТаблицыРегистра.СНИЛС = СНИЛС;
			СтрокаТаблицыРегистра.ФизическоеЛицо = СтрокаТаблицы.ФизическоеЛицо;
			СтрокаТаблицыРегистра.ФИО = СокрП(СтрокаТаблицы.СотрудникФамилия + " " + СтрокаТаблицы.СотрудникИмя + " " + СтрокаТаблицы.СотрудникОтчество);
		КонецЦикла;
		
		РегистрыСведений.СНИЛСВходящихСообщенийСЭДО.ОбновитьПоСписочномуДокументу(Структура);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПервичноеЗаполнение

Процедура ЗаполнитьДату() Экспорт
	Если Не ЗначениеЗаполнено(Дата) Тогда
		Дата = ТекущаяДатаСеанса();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ФиксацияВторичныхДанныхВДокументах

Функция ОбновитьВторичныеДанные(ПараметрыФиксации = Неопределено) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Страхователь);
	Модифицирован = Ложь;
	
	Если ОбъектЗафиксирован() Тогда
		Возврат Модифицирован;
	КонецЕсли;
	
	Если ПараметрыФиксации = Неопределено Тогда
		ПараметрыФиксации = Менеджер().ПараметрыФиксацииВторичныхДанных();
	КонецЕсли;
	
	Если ЗаполнитьПодтверждениеПолучения(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Если ЗаполнитьМаксимальнуюДатуПодтвержденияПолучения(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Если ЗаполнитьВходящиеДокументы(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Если ЗаполнитьСсылкиФизлиц(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Возврат Модифицирован;
КонецФункции

Функция Менеджер()
	Возврат Документы.ОтказВВозмещенииВыплатРодителямДетейИнвалидов;
КонецФункции

Функция ОбъектЗафиксирован() Экспорт
	Возврат Менеджер().ОбъектЗафиксирован(ЭтотОбъект);
КонецФункции

Функция ЗаполнитьПодтверждениеПолучения(ПараметрыФиксации) Экспорт
	Если Не ЗначениеЗаполнено(ИдентификаторСообщения) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Реквизиты = Новый Структура("ТребуетсяПодтверждение, ДатаОтправкиПодтверждения, ПодтверждениеПолученоСФР");
	Если ФиксацияВторичныхДанныхВДокументах.РеквизитыШапкиЗафиксированы(ЭтотОбъект, Реквизиты) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВходящиеСообщенияСЭДОФСС.Идентификатор КАК Идентификатор,
	|	ВходящиеСообщенияСЭДОФСС.Организация КАК Организация,
	|	ВходящиеСообщенияСЭДОФСС.ТребуетсяПодтверждение КАК ТребуетсяПодтверждение,
	|	ВходящиеСообщенияСЭДОФСС.ДатаОтправкиПодтверждения КАК ДатаОтправкиПодтверждения,
	|	ВходящиеСообщенияСЭДОФСС.ДатаПолученияИзвещенияОПолученииПодтверждения КАК ДатаПолученияИзвещенияОПолученииПодтверждения,
	|	ВходящиеСообщенияСЭДОФСС.ОшибкаПодтверждения КАК ОшибкаПодтверждения,
	|	ВходящиеСообщенияСЭДОФСС.ДатаПолученияОшибкиПодтверждения КАК ДатаПолученияОшибкиПодтверждения
	|ИЗ
	|	РегистрСведений.ВходящиеСообщенияСЭДОФСС КАК ВходящиеСообщенияСЭДОФСС
	|ГДЕ
	|	ВходящиеСообщенияСЭДОФСС.Идентификатор = &Идентификатор";
	Запрос.УстановитьПараметр("Идентификатор", ИдентификаторСообщения);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Если Таблица.Количество() > 1 Тогда
		Найденные = Таблица.НайтиСтроки(Новый Структура("Организация", Страхователь));
		Если Найденные.Количество() > 0 Тогда
			СтрокаТаблицы = Найденные[0];
		Иначе
			СтрокаТаблицы = Таблица[0];
		КонецЕсли
	ИначеЕсли Таблица.Количество() = 1 Тогда
		СтрокаТаблицы = Таблица[0];
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Реквизиты.ТребуетсяПодтверждение    = СтрокаТаблицы.ТребуетсяПодтверждение;
	Реквизиты.ДатаОтправкиПодтверждения = СтрокаТаблицы.ДатаОтправкиПодтверждения;
	Реквизиты.ПодтверждениеПолученоСФР  = ЗначениеЗаполнено(СтрокаТаблицы.ДатаПолученияИзвещенияОПолученииПодтверждения);
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(Реквизиты, ЭтотОбъект, ПараметрыФиксации);
КонецФункции

Функция ЗаполнитьМаксимальнуюДатуПодтвержденияПолучения(ПараметрыФиксации)
	Если Не ЗначениеЗаполнено(ДатаСообщения) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Реквизиты = Новый Структура("МаксимальнаяДатаПодтверждения");
	Если ФиксацияВторичныхДанныхВДокументах.РеквизитыШапкиЗафиксированы(ЭтотОбъект, Реквизиты) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Реквизиты.МаксимальнаяДатаПодтверждения = Менеджер().МаксимальнаяДатаПодтвержденияПолучения(ЭтотОбъект);
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(Реквизиты, ЭтотОбъект, ПараметрыФиксации);
КонецФункции

Функция ЗаполнитьВходящиеДокументы(ПараметрыФиксации)
	Если Не ЗначениеЗаполнено(Страхователь) Тогда
		Возврат Ложь;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ИдентификаторВходящегоЗаявления) И Не ЗначениеЗаполнено(ИдентификаторРеестра) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЕстьИзменения = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Шапка.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА Шапка.Страхователь = &Страхователь
	|			ТОГДА 4
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Вес,
	|	Шапка.Ответственный КАК Ответственный,
	|	Шапка.Организация КАК Организация
	|ИЗ
	|	Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов КАК Шапка
	|ГДЕ
	|	Шапка.ИдентификаторСообщения = &ИдентификаторВходящегоЗаявления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Шапка.Ссылка,
	|	ВЫБОР
	|		КОГДА Шапка.Страхователь = &Страхователь
	|			ТОГДА 3
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	Шапка.Ответственный,
	|	Шапка.Организация
	|ИЗ
	|	Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов КАК Шапка
	|ГДЕ
	|	Шапка.ИдентификаторРеестра = &ИдентификаторРеестра
	|
	|УПОРЯДОЧИТЬ ПО
	|	Вес УБЫВ";
	
	Запрос.УстановитьПараметр("Страхователь", Страхователь);
	Если ЗначениеЗаполнено(ИдентификаторВходящегоЗаявления) Тогда
		Запрос.УстановитьПараметр("ИдентификаторВходящегоЗаявления", ИдентификаторВходящегоЗаявления);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Шапка.ИдентификаторСообщения = &ИдентификаторВходящегоЗаявления", "ЛОЖЬ");
	КонецЕсли;
	Если ЗначениеЗаполнено(ИдентификаторРеестра) Тогда
		Запрос.УстановитьПараметр("ИдентификаторРеестра", ИдентификаторРеестра);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Шапка.ИдентификаторРеестра = &ИдентификаторРеестра", "ЛОЖЬ");
	КонецЕсли;
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Если Таблица.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	СтрокаТаблицы = Таблица[0];
	
	Реквизиты = Новый Структура("ВходящееЗаявление", СтрокаТаблицы.Ссылка);
	Если ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(Реквизиты, ЭтотОбъект, ПараметрыФиксации) Тогда
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Реквизиты = Новый Структура("Организация, Ответственный");
	Если ВходящееЗаявление = СтрокаТаблицы.Ссылка Тогда
		ЗаполнитьЗначенияСвойств(Реквизиты, СтрокаТаблицы);
	ИначеЕсли ЗначениеЗаполнено(ВходящееЗаявление) Тогда
		Значения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВходящееЗаявление, "Организация, Ответственный");
		ЗаполнитьЗначенияСвойств(Реквизиты, Значения);
	КонецЕсли;
	Если ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(Реквизиты, ЭтотОбъект, ПараметрыФиксации) Тогда
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Возврат ЕстьИзменения;
КонецФункции

Функция ЗаполнитьСсылкиФизлиц(ПараметрыФиксации)
	МассивСНИЛС = КоллекцииБЗК.УникальныеЗначенияКолонки(Оплаты, "СотрудникСНИЛС");
	Если МассивСНИЛС.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЕстьИзменения = Ложь;
	
	ТаблицаФизлиц = СЭДОФСС.ТаблицаФизлицПоСНИЛС(МассивСНИЛС);
	Реквизиты = Новый Структура("ФизическоеЛицо");
	
	Для Каждого СтрокаТаблицы Из Оплаты Цикл
		СтрокаТаблицыФизлиц = ТаблицаФизлиц.Найти(СтрокаТаблицы.СотрудникСНИЛС, "СтраховойНомерПФР");
		Если СтрокаТаблицыФизлиц = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Реквизиты.ФизическоеЛицо = СтрокаТаблицыФизлиц.ФизическоеЛицо;
		Если ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеСтроки(
				Реквизиты,
				ЭтотОбъект,
				"Оплаты",
				СтрокаТаблицы,
				ПараметрыФиксации) Тогда
			ЕстьИзменения = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЕстьИзменения;
КонецФункции

#КонецОбласти

#Область ПередЗаписью

Функция ЗначенияРеквизитовДоЗаписи()
	ИменаРеквизитов = "ИдентификаторВходящегоЗаявления, ВходящееЗаявление";
	Если ЭтоНовый() Тогда
		Возврат ОбщегоНазначенияБЗК.ЗначенияСвойств(ЭтотОбъект, ИменаРеквизитов);
	Иначе
		Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, ИменаРеквизитов);
	КонецЕсли;
КонецФункции

#КонецОбласти

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли